================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def ccw(A, B, C):
    return (C[1]-A[1])*(B[0]-A[0]) > (B[1]-A[1])*(C[0]-A[0])

def intersect(A,B,C,D):
    # Return True if line segments AB and CD intersect
    return (ccw(A,C,D) != ccw(B,C,D)) and (ccw(A,B,C) != ccw(A,B,D))

def line_intersection(p1, p2, p3, p4):
    # Compute intersection point of segments p1p2 and p3p4 assuming they intersect
    x1,y1 = p1
    x2,y2 = p2
    x3,y3 = p3
    x4,y4 = p4
    denom = (y4 - y3)*(x2 - x1) - (x4 - x3)*(y2 - y1)
    if abs(denom) < 1e-15:
        return None # Parallel or coincident
    t = ((x4 - x3)*(y1 - y3) - (y4 - y3)*(x1 - x3))/denom
    x = x1 + t*(x2 - x1)
    y = y1 + t*(y2 - y1)
    return (x,y)

def point_sub(a,b):
    return (a[0]-b[0], a[1]-b[1])

def cross(a,b):
    return a[0]*b[1]-a[1]*b[0]

def is_on_left(a,b,p):
    # Check if point p is on the left side of directed line a->b
    return cross(point_sub(b,a), point_sub(p,a)) > 0

def dist(a,b):
    return math.sqrt((a[0]-b[0])**2 + (a[1]-b[1])**2)

def inside_polygon(polygon, point=(0,0)):
    # Ray casting method to check if point is inside polygon
    # polygon is list of points in order
    cnt = 0
    x, y = point
    n = len(polygon)
    for i in range(n):
        x1,y1 = polygon[i]
        x2,y2 = polygon[(i+1)%n]
        if y1 == y2:
            continue
        if y < min(y1,y2):
            continue
        if y >= max(y1,y2):
            continue
        xint = (y - y1)*(x2 - x1)/(y2 - y1) + x1
        if xint > x:
            cnt +=1
    return (cnt % 2) == 1

def build_graph(lines):
    # Build graph of intersection points
    points = []
    points_map = dict()
    edges = dict()
    # collect all endpoints and intersections
    for i,line in enumerate(lines):
        for x in [ (line[0],line[1]),(line[2],line[3]) ]:
            if x not in points_map:
                points_map[x] = len(points)
                points.append(x)
    intersections = dict()
    n = len(lines)
    for i in range(n):
        for j in range(i+1,n):
            A = (lines[i][0], lines[i][1])
            B = (lines[i][2], lines[i][3])
            C = (lines[j][0], lines[j][1])
            D = (lines[j][2], lines[j][3])
            if intersect(A,B,C,D):
                p = line_intersection(A,B,C,D)
                # add point if new
                if p is None:
                    continue
                # Round to avoid floating point error
                p = (round(p[0],9),round(p[1],9))
                if p not in points_map:
                    points_map[p] = len(points)
                    points.append(p)
                intersections.setdefault(i,[]).append(p)
                intersections.setdefault(j,[]).append(p)
    # now for each line, create sorted points including endpoints and intersections
    graph = dict()
    for i,line in enumerate(lines):
        pts = [(line[0],line[1]), (line[2],line[3])]
        if i in intersections:
            for p in intersections[i]:
                pts.append(p)
        # sort points along the line segment
        p0 = (line[0],line[1])
        p1 = (line[2],line[3])
        def param(t):
            # parameter t from p0 to p1 where p = p0 + t*(p1-p0)
            dx = p1[0]-p0[0]
            dy = p1[1]-p0[1]
            if abs(dx) >= abs(dy):
                if dx == 0:
                    return 0
                return (t[0]-p0[0])/dx
            else:
                if dy == 0:
                    return 0
                return (t[1]-p0[1])/dy
        pts.sort(key=param)
        # create edges between consecutive points
        for k in range(len(pts)-1):
            a = points_map[pts[k]]
            b = points_map[pts[k+1]]
            if a not in graph:
                graph[a] = []
            if b not in graph:
                graph[b] = []
            graph[a].append(b)
            graph[b].append(a)
    return points, graph

def dfs(graph, start, visited):
    stack = [start]
    visited.add(start)
    while stack:
        u = stack.pop()
        for v in graph.get(u,[]):
            if v not in visited:
                visited.add(v)
                stack.append(v)

def find_faces(points, graph, lines):
    # This is a simple way: 
    # - for each edge, follow edges to make cycles (faces) going clockwise
    # We utilize that no three lines intersect at the same point and intersection points distant enough.
    # This approach may create repeated faces but should be enough for this problem.
    
    # For each vertex, sort neighbors by angle
    n = len(points)
    neighbors_sorted = dict()
    for u in graph:
        # compute angles from u to each neighbor
        ux,uy = points[u]
        nbrs = graph[u]
        def angle(v):
            vx,vy = points[v]
            ang = math.atan2(vy - uy, vx - ux)
            return (ang + 2*math.pi) % (2*math.pi)
        nbrs_sorted = sorted(nbrs, key=angle)
        neighbors_sorted[u] = nbrs_sorted

    faces = []
    visited_edges = set()
    for u in neighbors_sorted:
        for v in neighbors_sorted[u]:
            # check if edge (u,v) visited
            if (u,v) in visited_edges:
                continue
            face = []
            current = u
            prev = v
            face.append(u)
            while True:
                visited_edges.add((current,prev))
                face.append(prev)
                # find index of current in neighbors_sorted[prev]
                nbrs = neighbors_sorted[prev]
                idx = nbrs.index(current)
                # next vertex is neighbor after current counterclockwise
                next_idx = (idx - 1) % len(nbrs)
                nxt = nbrs[next_idx]
                if nxt == face[0] and prev == face[1]:
                    break
                current, prev = prev, nxt
            # remove last duplicated point
            face = face[:-1]
            # check if face size at least 3
            if len(face) < 3:
                continue
            # add face if new (avoid duplicates)
            face_set = set(face)
            repeated = False
            for f in faces:
                if face_set == set(f):
                    repeated = True
                    break
            if not repeated:
                faces.append(face)
    return faces

def polygon_contains_origin(polygon_points):
    # Check if origin is inside polygon
    # polygon_points is list of indices into points array
    polygon = [polygon_points[i] for i in range(len(polygon_points))]
    return inside_polygon(polygon, (0,0))

def is_origin_inside_face(face, points):
    poly = [ points[i] for i in face]
    return inside_polygon(poly, (0,0))

def main():
    input_lines = sys.stdin.read().splitlines()
    idx = 0
    while True:
        if idx>=len(input_lines):
            break
        n = input_lines[idx].strip()
        idx+=1
        if n == '0':
            break
        n = int(n)
        lines = []
        for _ in range(n):
            x1,y1,x2,y2 = map(int, input_lines[idx].split())
            idx+=1
            lines.append( (x1,y1,x2,y2) )
        points, graph = build_graph(lines)
        faces = find_faces(points, graph, lines)
        # find face that contains origin (0,0)
        trapped = False
        for f in faces:
            poly = [points[i] for i in f]
            if inside_polygon(poly, (0,0)):
                # A face polygon contains the monster point => monster is inside a polygon formed by edges
                trapped = True
                break
        if trapped:
            print("yes")
        else:
            print("no")

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.641413152217865
    2. '.' → logprob: -0.891413152217865
    3. 'import' → logprob: -4.01641321182251
    4. 'newline' → logprob: -4.26641321182251
    5. '\' → logprob: -4.76641321182251
    6. '<|end|>' → logprob: -4.89141321182251
    7. '```' → logprob: -5.39141321182251
    8. '
' → logprob: -5.76641321182251
    9. '<|end|>' → logprob: -6.51641321182251
    10. '' → logprob: -6.51641321182251

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2597796320915222
    2. 'import' → logprob: -2.634779691696167
    3. '\n' → logprob: -2.759779691696167
    4. '\' → logprob: -3.259779691696167
    5. '```' → logprob: -4.009779453277588
    6. '
' → logprob: -4.134779453277588
    7. '<|end|>' → logprob: -4.759779453277588
    8. ',' → logprob: -5.384779453277588
    9. '

' → logprob: -5.759779453277588
    10. '<|end|>' → logprob: -7.009779453277588

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2251834869384766
    2. '.' → logprob: -1.4751834869384766
    3. '\' → logprob: -1.6001834869384766
    4. '```' → logprob: -2.2251834869384766
    5. 'import' → logprob: -2.3501834869384766
    6. 'def' → logprob: -3.6001834869384766
    7. '
' → logprob: -3.8501834869384766
    8. ',' → logprob: -5.225183486938477
    9. '`' → logprob: -5.475183486938477
    10. '#' → logprob: -6.475183486938477

Token 7: ' cc' (ID: 22988)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03931130841374397
    2. ' calculate' → logprob: -3.414311408996582
    3. ' space' → logprob: -6.164311408996582
    4. ' factorial' → logprob: -6.539311408996582
    5. ' compute' → logprob: -7.914311408996582
    6. '_' → logprob: -8.039311408996582
    7. ' factor' → logprob: -9.039311408996582
    8. 'calculate' → logprob: -9.164311408996582
    9. ' calcular' → logprob: -9.164311408996582
    10. ' calcula' → logprob: -9.289311408996582

Token 8: 'w' (ID: 86)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4150920808315277
    2. '_c' → logprob: -2.0400919914245605
    3. 'w' → logprob: -2.9150919914245605
    4. '_calc' → logprob: -3.6650919914245605
    5. '():' → logprob: -4.2900919914245605
    6. 'alculate' → logprob: -4.5400919914245605
    7. '(' → logprob: -4.5400919914245605
    8. 'c' → logprob: -4.7900919914245605
    9. '(a' → logprob: -5.0400919914245605
    10. '_circle' → logprob: -5.2900919914245605

Token 9: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020742444321513176
    2. ' (' → logprob: -6.252074241638184
    3. '(x' → logprob: -9.752074241638184
    4. '(
' → logprob: -10.877074241638184
    5. '(a' → logprob: -11.252074241638184
    6. '_' → logprob: -11.502074241638184
    7. '```' → logprob: -12.002074241638184
    8. '<|end|>' → logprob: -12.127074241638184
    9. '<|end|>' → logprob: -12.252074241638184
    10. ')' → logprob: -12.502074241638184

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024144348572008312
    2. ' ,' → logprob: -8.62524127960205
    3. ')' → logprob: -10.87524127960205
    4. '<|end|>' → logprob: -11.12524127960205
    5. '):' → logprob: -11.62524127960205
    6. ',A' → logprob: -11.75024127960205
    7. ',B' → logprob: -12.00024127960205
    8. '<|end|>' → logprob: -13.00024127960205
    9. '(' → logprob: -14.50024127960205
    10. '(A' → logprob: -14.75024127960205

Token 11: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4740983843803406
    2. ' B' → logprob: -0.9740983843803406
    3. ' ' → logprob: -11.224098205566406
    4. '	B' → logprob: -12.724098205566406
    5. ',' → logprob: -13.224098205566406
    6. ',B' → logprob: -13.349098205566406
    7. '  ' → logprob: -14.349098205566406
    8. '<|end|>' → logprob: -15.099098205566406
    9. ' ' → logprob: -15.349098205566406
    10. 'P' → logprob: -16.224098205566406

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033903829171322286
    2. '):' → logprob: -8.25033950805664
    3. ')' → logprob: -9.75033950805664
    4. ' ,' → logprob: -11.25033950805664
    5. ',C' → logprob: -12.62533950805664
    6. '<|end|>' → logprob: -13.37533950805664
    7. ' ' → logprob: -15.00033950805664
    8. ',A' → logprob: -15.25033950805664
    9. '),' → logprob: -15.87533950805664
    10. '(' → logprob: -15.87533950805664

Token 13: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.03365422785282135
    2. 'C' → logprob: -3.40865421295166
    3. ' ' → logprob: -12.53365421295166
    4. '	C' → logprob: -12.90865421295166
    5. ',' → logprob: -14.40865421295166
    6. ')' → logprob: -14.53365421295166
    7. ',C' → logprob: -15.15865421295166
    8. ' ' → logprob: -15.15865421295166
    9. '  ' → logprob: -15.40865421295166
    10. '>C' → logprob: -15.65865421295166

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005241583567112684
    2. ')' → logprob: -5.255241394042969
    3. '):
' → logprob: -12.880241394042969
    4. ':' → logprob: -13.255241394042969
    5. ' ):' → logprob: -13.380241394042969
    6. ''):' → logprob: -15.130241394042969
    7. ',' → logprob: -15.130241394042969
    8. ')):' → logprob: -15.255241394042969
    9. ')：' → logprob: -15.755241394042969
    10. '),' → logprob: -15.880241394042969

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1890682876110077
    2. '):' → logprob: -2.31406831741333
    3. '   ' → logprob: -2.81406831741333
    4. '():' → logprob: -5.31406831741333
    5. '(' → logprob: -5.93906831741333
    6. ':
' → logprob: -6.31406831741333
    7. '):
' → logprob: -6.81406831741333
    8. ' :' → logprob: -7.43906831741333
    9. '":' → logprob: -7.68906831741333
    10. '':' → logprob: -7.93906831741333

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3475962281227112
    2. ' return' → logprob: -1.4725961685180664
    3. ':' → logprob: -3.7225961685180664
    4. 'return' (adapté à ' return') → logprob: -3.8475961685180664
    5. '    ' → logprob: -5.097596168518066
    6. ' ' → logprob: -5.347596168518066
    7. ' (' → logprob: -6.472596168518066
    8. ':return' → logprob: -6.972596168518066
    9. ')' → logprob: -7.097596168518066
    10. '  ' → logprob: -7.472596168518066

Token 17: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00764579838141799
    2. '(A' → logprob: -5.757645606994629
    3. '(' → logprob: -5.882645606994629
    4. '(math' → logprob: -6.757645606994629
    5. '1' → logprob: -8.132645606994629
    6. ' ' → logprob: -9.257645606994629
    7. '(abs' → logprob: -10.757645606994629
    8. 'math' → logprob: -11.132645606994629
    9. ' math' → logprob: -11.257645606994629
    10. '((' → logprob: -11.382645606994629

Token 18: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.617418110370636
    2. 'C' → logprob: -0.867418110370636
    3. '(B' → logprob: -3.617418050765991
    4. '(C' → logprob: -5.24241828918457
    5. ' (' → logprob: -5.49241828918457
    6. ' C' → logprob: -6.11741828918457
    7. ' B' → logprob: -6.36741828918457
    8. '   ' → logprob: -8.11741828918457
    9. '(' → logprob: -10.11741828918457
    10. ' ' → logprob: -10.49241828918457

Token 19: '[' (ID: 58)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.23486436903476715
    2. '[' → logprob: -1.734864354133606
    3. '.x' → logprob: -3.4848644733428955
    4. '.' → logprob: -6.359864234924316
    5. 'y' → logprob: -7.734864234924316
    6. ' .' → logprob: -10.109864234924316
    7. 'x' → logprob: -12.109864234924316
    8. '```' → logprob: -12.484864234924316
    9. '[y' → logprob: -12.484864234924316
    10. '.py' → logprob: -12.609864234924316

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994165480136871
    2. '0' → logprob: -2.694941759109497
    3. '```' → logprob: -12.819941520690918
    4. '
' → logprob: -14.444941520690918
    5. '[' → logprob: -14.694941520690918
    6. '

' → logprob: -14.944941520690918
    7. ' ' → logprob: -15.194941520690918
    8. '   ' → logprob: -15.319941520690918
    9. 'y' → logprob: -15.569941520690918
    10. 'x' → logprob: -16.069942474365234

Token 21: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04302270710468292
    2. '-' → logprob: -3.168022632598877
    3. ' ' → logprob: -11.043023109436035
    4. '-A' → logprob: -12.668023109436035
    5. ' ' → logprob: -12.668023109436035
    6. ' –' → logprob: -14.793023109436035
    7. ')' → logprob: -15.293023109436035
    8. '```' → logprob: -15.918023109436035
    9. '–' → logprob: -16.04302215576172
    10. '  ' → logprob: -16.16802215576172

Token 22: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03805446997284889
    2. ' A' → logprob: -3.2880544662475586
    3. 'B' → logprob: -11.663054466247559
    4. '	A' → logprob: -13.038054466247559
    5. ' ' → logprob: -13.163054466247559
    6. '  ' → logprob: -16.038055419921875
    7. ' B' → logprob: -16.038055419921875
    8. '   ' → logprob: -17.163055419921875
    9. '<|end|>' → logprob: -18.038055419921875
    10. 'Ａ' → logprob: -19.163055419921875

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.500005722045898
    3. '][' → logprob: -14.250005722045898
    4. ' [' → logprob: -15.375005722045898
    5. '```' → logprob: -15.625005722045898
    6. ']' → logprob: -16.1250057220459
    7. '0' → logprob: -16.5000057220459
    8. '[
' → logprob: -16.8750057220459
    9. ')' → logprob: -17.3750057220459
    10. ''[' → logprob: -18.1250057220459

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -13.187504768371582
    3. '[' → logprob: -13.687504768371582
    4. '```' → logprob: -14.312504768371582
    5. '0' → logprob: -14.687504768371582
    6. '

' → logprob: -15.250004768371582
    7. ']' → logprob: -15.812504768371582
    8. '   ' → logprob: -15.875004768371582
    9. '
' → logprob: -16.3750057220459
    10. '' → logprob: -16.7500057220459

Token 25: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04622253030538559
    2. ')*(' → logprob: -3.171222448348999
    3. ' )' → logprob: -5.921222686767578
    4. ')*' → logprob: -7.546222686767578
    5. '*)' → logprob: -12.171222686767578
    6. ')**' → logprob: -14.671222686767578
    7. '*' → logprob: -14.796222686767578
    8. '*(' → logprob: -14.921222686767578
    9. ')(' → logprob: -15.171222686767578
    10. ' ' → logprob: -15.296222686767578

Token 26: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.8116728663444519
    2. ' *' → logprob: -1.0616729259490967
    3. '*' → logprob: -1.5616729259490967
    4. ')*(' → logprob: -8.686673164367676
    5. ' *(' → logprob: -10.561673164367676
    6. ')' → logprob: -11.061673164367676
    7. '(' → logprob: -12.436673164367676
    8. '*((' → logprob: -12.811673164367676
    9. ')*' → logprob: -13.186673164367676
    10. ' ' → logprob: -13.311673164367676

Token 27: 'B' (ID: 33)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.005548677872866392
    2. 'B' → logprob: -5.255548477172852
    3. ' (' → logprob: -8.130548477172852
    4. ' B' → logprob: -11.755548477172852
    5. '(' → logprob: -12.005548477172852
    6. '	B' → logprob: -12.630548477172852
    7. '(C' → logprob: -14.255548477172852
    8. ' ' → logprob: -14.380548477172852
    9. '-B' → logprob: -14.630548477172852
    10. '   ' → logprob: -14.755548477172852

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -13.875000953674316
    3. '[
' → logprob: -17.500001907348633
    4. ' [' → logprob: -18.250001907348633
    5. 'import' → logprob: -19.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.625001907348633
    8. '-' → logprob: -19.750001907348633
    9. 'x' → logprob: -20.125001907348633
    10. '.' → logprob: -20.250001907348633

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '[' → logprob: -16.625
    4. '۰' → logprob: -17.0
    5. '   ' → logprob: -18.375
    6. '1' → logprob: -18.5625
    7. '```' → logprob: -18.8125
    8. '０' → logprob: -19.3125
    9. '

' → logprob: -19.9375
    10. '
' → logprob: -19.9375

Token 30: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5769122838973999
    2. ' -' → logprob: -0.9519122838973999
    3. '-A' → logprob: -2.9519124031066895
    4. '<|end|>' → logprob: -9.326911926269531
    5. '-А' → logprob: -12.201911926269531
    6. '<|end|>' → logprob: -12.201911926269531
    7. '–' → logprob: -12.201911926269531
    8. '-)' → logprob: -12.326911926269531
    9. '[' → logprob: -12.951911926269531
    10. '-I' → logprob: -12.951911926269531

Token 31: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.180879816180095e-05
    2. ' A' → logprob: -9.875051498413086
    3. '	A' → logprob: -15.125051498413086
    4. '  ' → logprob: -18.375051498413086
    5. ' ' → logprob: -18.750051498413086
    6. '   ' → logprob: -19.250051498413086
    7. '>A' → logprob: -19.625051498413086
    8. '<|end|>' → logprob: -19.875051498413086
    9. 'a' → logprob: -20.750051498413086
    10. '<|end|>' → logprob: -21.250051498413086

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026217024424113333
    2. '0' → logprob: -8.250262260437012
    3. ')' → logprob: -15.750262260437012
    4. '][' → logprob: -15.750262260437012
    5. '```' → logprob: -16.125261306762695
    6. ' [' → logprob: -16.250261306762695
    7. '[
' → logprob: -16.500261306762695
    8. ']' → logprob: -16.625261306762695
    9. '<|end|>' → logprob: -17.375261306762695
    10. ')[' → logprob: -17.750261306762695

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. '[' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.7501802444458
    4. '۰' → logprob: -15.8751802444458
    5. ')' → logprob: -17.937679290771484
    6. ']' → logprob: -18.062679290771484
    7. '(' → logprob: -18.125179290771484
    8. '```' → logprob: -18.375179290771484
    9. '   ' → logprob: -18.437679290771484
    10. '０' → logprob: -18.562679290771484

Token 34: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013139282818883657
    2. ')-' → logprob: -7.501314163208008
    3. ' )' → logprob: -7.501314163208008
    4. ')-(' → logprob: -8.501314163208008
    5. '-' → logprob: -14.126314163208008
    6. '}' → logprob: -14.501314163208008
    7. '')' → logprob: -14.501314163208008
    8. '   ' → logprob: -14.626314163208008
    9. '-)' → logprob: -14.751314163208008
    10. ' -' → logprob: -15.001314163208008

Token 35: ' >' (ID: 1424)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01614874042570591
    2. '-' → logprob: -4.141148567199707
    3. ' -(' → logprob: -10.766148567199707
    4. ' >' → logprob: -10.891148567199707
    5. '-(' → logprob: -11.141148567199707
    6. ')' → logprob: -11.391148567199707
    7. '   ' → logprob: -11.516148567199707
    8. '  ' → logprob: -11.641148567199707
    9. '>' → logprob: -11.891148567199707
    10. ')-(' → logprob: -11.891148567199707

Token 36: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4831249415874481
    2. '0' → logprob: -1.3581249713897705
    3. '(' → logprob: -2.3581249713897705
    4. '(C' → logprob: -3.4831249713897705
    5. ' ' → logprob: -8.233124732971191
    6. '(c' → logprob: -8.483124732971191
    7. '(B' → logprob: -10.108124732971191
    8. '((' → logprob: -10.108124732971191
    9. '<|end|>' → logprob: -10.233124732971191
    10. '(
' → logprob: -10.858124732971191

Token 37: 'B' (ID: 33)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.2521059513092041
    2. '(C' → logprob: -1.502105951309204
    3. ' (' → logprob: -8.752105712890625
    4. '(A' → logprob: -11.502105712890625
    5. '(' → logprob: -12.752105712890625
    6. ')' → logprob: -13.752105712890625
    7. ' ' → logprob: -13.752105712890625
    8. '   ' → logprob: -13.752105712890625
    9. ')(' → logprob: -14.627105712890625
    10. '  ' → logprob: -14.752105712890625

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -14.62500286102295
    3. '[
' → logprob: -14.87500286102295
    4. ''[' → logprob: -15.56250286102295
    5. 'x' → logprob: -15.62500286102295
    6. 'import' → logprob: -15.68750286102295
    7. '1' → logprob: -16.000001907348633
    8. '<|end|>' → logprob: -16.000001907348633
    9. '<|end|>' → logprob: -16.437501907348633
    10. '0' → logprob: -16.562501907348633

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012976066500414163
    2. '[' → logprob: -9.000129699707031
    3. '0' → logprob: -12.375129699707031
    4. '```' → logprob: -13.875129699707031
    5. '' → logprob: -15.562629699707031
    6. '(' → logprob: -15.625129699707031
    7. '<|end|>' → logprob: -15.937629699707031
    8. '   ' → logprob: -16.12512969970703
    9. '
' → logprob: -16.81262969970703

Token 40: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038479414070025086
    2. '-' → logprob: -8.750384330749512
    3. ')' → logprob: -10.125384330749512
    4. ']-' → logprob: -10.250384330749512
    5. '][' → logprob: -10.250384330749512
    6. '<|end|>' → logprob: -10.375384330749512
    7. ']' → logprob: -10.625384330749512
    8. ' -' → logprob: -11.500384330749512
    9. '```' → logprob: -11.750384330749512
    10. ')-' → logprob: -11.875384330749512

Token 41: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.41866585687967e-06
    2. ' A' → logprob: -11.750008583068848
    3. 'C' → logprob: -14.750008583068848
    4. '<|end|>' → logprob: -16.37500762939453
    5. '	A' → logprob: -16.87500762939453
    6. '<|end|>' → logprob: -18.75000762939453
    7. ' ' → logprob: -19.37500762939453
    8. '>A' → logprob: -19.50000762939453
    9. '  ' → logprob: -19.50000762939453
    10. '(A' → logprob: -19.62500762939453

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012606535165105015
    2. '1' → logprob: -9.000125885009766
    3. '<|end|>' → logprob: -14.125125885009766
    4. '0' → logprob: -15.000125885009766
    5. '```' → logprob: -15.000125885009766
    6. '<|end|>' → logprob: -15.250125885009766
    7. '][' → logprob: -15.250125885009766
    8. '[
' → logprob: -15.250125885009766
    9. ' ' → logprob: -16.500125885009766
    10. ' [' → logprob: -16.500125885009766

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007098127622157335
    2. '0' → logprob: -5.007098197937012
    3. '[' → logprob: -7.882098197937012
    4. ' ' → logprob: -12.507098197937012
    5. '```' → logprob: -14.632098197937012
    6. '   ' → logprob: -15.757098197937012
    7. '<|end|>' → logprob: -15.757098197937012
    8. '' → logprob: -16.069597244262695
    9. '	' → logprob: -16.194597244262695
    10. '(' → logprob: -16.757097244262695

Token 44: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.791874349117279
    2. ')*(' → logprob: -1.4168744087219238
    3. ')' → logprob: -1.5418744087219238
    4. ')[' → logprob: -2.541874408721924
    5. ')*' → logprob: -5.166874408721924
    6. '0' → logprob: -6.166874408721924
    7. '```' → logprob: -6.166874408721924
    8. '   ' → logprob: -8.166873931884766
    9. ' )[' → logprob: -8.416873931884766
    10. ' ' → logprob: -8.416873931884766

Token 45: '*(' (ID: 14793)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.08097703754901886
    2. '*(' → logprob: -2.580976963043213
    3. ' (' → logprob: -6.955976963043213
    4. '(A' → logprob: -7.455976963043213
    5. '*' → logprob: -8.455977439880371
    6. '(' → logprob: -8.955977439880371
    7. ')*(' → logprob: -9.580977439880371
    8. '(B' → logprob: -9.580977439880371
    9. '```' → logprob: -10.955977439880371
    10. 'C' → logprob: -11.455977439880371

Token 46: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.319370302458992e-06
    2. '(C' → logprob: -12.625005722045898
    3. ' C' → logprob: -13.375005722045898
    4. 'c' → logprob: -15.375005722045898
    5. '	C' → logprob: -16.6250057220459
    6. '>C' → logprob: -18.3750057220459
    7. ' ' → logprob: -18.8750057220459
    8. ')' → logprob: -19.6250057220459
    9. '  ' → logprob: -19.7500057220459
    10. '(' → logprob: -19.7500057220459

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -17.125
    3. '[
' → logprob: -18.0
    4. '```' → logprob: -18.0
    5. ')[' → logprob: -18.75
    6. ' [' → logprob: -19.125
    7. '][' → logprob: -19.875
    8. ''[' → logprob: -20.375
    9. '>[' → logprob: -21.0
    10. ')' → logprob: -21.375

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000805341056548059
    2. '[' → logprob: -7.125805377960205
    3. '```' → logprob: -14.750804901123047
    4. ' ' → logprob: -15.500804901123047
    5. '[
' → logprob: -16.750804901123047
    6. '۰' → logprob: -17.250804901123047
    7. '   ' → logprob: -17.625804901123047
    8. '
' → logprob: -17.875804901123047
    9. ')' → logprob: -17.875804901123047
    10. '][' → logprob: -18.000804901123047

Token 49: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1640533208847046
    2. '-' → logprob: -2.039053440093994
    3. ']-' → logprob: -4.164053440093994
    4. ']' → logprob: -5.289053440093994
    5. '0' → logprob: -8.289052963256836
    6. ' -' → logprob: -9.539052963256836
    7. '```' → logprob: -9.664052963256836
    8. '][' → logprob: -10.039052963256836
    9. '])-' → logprob: -10.664052963256836
    10. '-A' → logprob: -10.789052963256836

Token 50: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.1008713702030946e-06
    2. ' A' → logprob: -13.125001907348633
    3. 'C' → logprob: -18.125001907348633
    4. '	A' → logprob: -18.750001907348633
    5. '[' → logprob: -19.000001907348633
    6. '```' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.750001907348633
    8. '>A' → logprob: -19.875001907348633
    9. ')' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.250001907348633

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04333793744444847
    2. '0' → logprob: -3.168337821960449
    3. '][' → logprob: -8.04333782196045
    4. ' ' → logprob: -12.29333782196045
    5. '```' → logprob: -12.29333782196045
    6. ' [' → logprob: -13.04333782196045
    7. ']' → logprob: -13.16833782196045
    8. ')' → logprob: -13.91833782196045
    9. ')[' → logprob: -14.04333782196045
    10. '   ' → logprob: -14.04333782196045

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -15.75
    4. '   ' → logprob: -17.875
    5. '۰' → logprob: -18.25
    6. '```' → logprob: -18.875
    7. '  ' → logprob: -19.3125
    8. '०' → logprob: -19.625
    9. '٠' → logprob: -19.9375
    10. ']' → logprob: -19.9375

Token 53: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07098132371902466
    2. ')' → logprob: -2.69598126411438
    3. ')])' → logprob: -7.695981502532959
    4. ']' → logprob: -8.3209810256958
    5. '])]' → logprob: -8.8209810256958
    6. ']))' → logprob: -9.4459810256958
    7. '))' → logprob: -9.9459810256958
    8. ')]' → logprob: -10.0709810256958
    9. '[' → logprob: -11.1959810256958
    10. ']])' → logprob: -12.4459810256958

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07035529613494873
    2. '
' → logprob: -2.6953554153442383
    3. '

' → logprob: -8.320355415344238
    4. ' def' → logprob: -10.070355415344238
    5. '\' → logprob: -10.320355415344238
    6. '```' → logprob: -10.445355415344238
    7. ' 
' → logprob: -10.570355415344238
    8. '  
' → logprob: -11.195355415344238
    9. '    
' → logprob: -11.945355415344238
    10. ' 

' → logprob: -12.195355415344238

Token 55: ' intersect' (ID: 64353)
  Prédit: ' intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.7102380990982056
    2. ' line' → logprob: -1.8352380990982056
    3. 'inter' → logprob: -1.9602380990982056
    4. ' lines' → logprob: -2.960237979888916
    5. ' do' → logprob: -3.210237979888916
    6. 'do' → logprob: -3.585237979888916
    7. 'line' → logprob: -3.960237979888916
    8. ' segments' → logprob: -4.335237979888916
    9. 'segments' → logprob: -4.460237979888916
    10. ' segment' → logprob: -4.460237979888916

Token 56: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.2520836293697357
    2. '(' → logprob: -1.502083659172058
    3. '((' → logprob: -9.502083778381348
    4. '(a' → logprob: -9.752083778381348
    5. ' (' → logprob: -11.502083778381348
    6. '```' → logprob: -12.627083778381348
    7. '(
' → logprob: -13.127083778381348
    8. '(Point' → logprob: -13.752083778381348
    9. '(`' → logprob: -13.877083778381348
    10. '("("' → logprob: -14.002083778381348

Token 57: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.250019073486328
    3. ',B' → logprob: -12.000019073486328
    4. '‌,' → logprob: -17.000019073486328
    5. '_,' → logprob: -17.375019073486328
    6. ')' → logprob: -17.500019073486328
    7. ',b' → logprob: -17.500019073486328
    8. '):' → logprob: -18.125019073486328
    9. '<|end|>' → logprob: -18.125019073486328
    10. '),' → logprob: -18.875019073486328

Token 58: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018268341955263168
    2. ',C' → logprob: -8.87518310546875
    3. ' ,' → logprob: -10.37518310546875
    4. '):' → logprob: -11.75018310546875
    5. ',A' → logprob: -12.75018310546875
    6. ',B' → logprob: -15.62518310546875
    7. ')' → logprob: -16.00018310546875
    8. ',
' → logprob: -16.12518310546875
    9. '),' → logprob: -16.87518310546875
    10. ',D' → logprob: -17.25018310546875

Token 59: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008671299554407597
    2. ',D' → logprob: -4.758671283721924
    3. ' ,' → logprob: -10.633671760559082
    4. ',B' → logprob: -11.508671760559082
    5. ',)' → logprob: -11.758671760559082
    6. ',C' → logprob: -12.883671760559082
    7. ')' → logprob: -13.133671760559082
    8. ',d' → logprob: -13.133671760559082
    9. ',F' → logprob: -13.633671760559082
    10. ',:)' → logprob: -13.758671760559082

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008178464486263692
    2. ')' → logprob: -7.125817775726318
    3. ' ):' → logprob: -11.750818252563477
    4. '):
' → logprob: -12.500818252563477
    5. ''):' → logprob: -14.625818252563477
    6. ':' → logprob: -15.000818252563477
    7. ')：' → logprob: -15.125818252563477
    8. '）：' → logprob: -15.500818252563477
    9. '   ' → logprob: -15.750818252563477
    10. ')):' → logprob: -16.125818252563477

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006083084270358086
    2. ' return' → logprob: -5.506083011627197
    3. '<|end|>' → logprob: -6.881083011627197
    4. ' ' → logprob: -7.881083011627197
    5. '  ' → logprob: -8.631083488464355
    6. '    
' → logprob: -9.381083488464355
    7. '    ' → logprob: -9.506083488464355
    8. ' 
' → logprob: -9.881083488464355
    9. ':return' → logprob: -10.006083488464355
    10. 'return' → logprob: -10.256083488464355

Token 62: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057710886001587
    2. 'return' → logprob: -1.2057710886001587
    3. ' return' → logprob: -1.5807710886001587
    4. '    ' → logprob: -7.830770969390869
    5. ' ' → logprob: -8.455771446228027
    6. '	return' → logprob: -8.955771446228027
    7. '  ' → logprob: -8.955771446228027
    8. '       ' → logprob: -9.205771446228027
    9. ' (' → logprob: -11.955771446228027
    10. '(return' → logprob: -12.455771446228027

Token 63: ' Return' (ID: 6318)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.029264604672789574
    2. 'return' → logprob: -4.029264450073242
    3. '   ' → logprob: -4.654264450073242
    4. ' ' → logprob: -6.904264450073242
    5. '    ' → logprob: -8.029264450073242
    6. '  ' → logprob: -8.904264450073242
    7. ' not' → logprob: -10.904264450073242
    8. ' if' → logprob: -11.904264450073242
    9. ' ' → logprob: -12.029264450073242
    10. ' cc' → logprob: -12.154264450073242

Token 64: ' True' (ID: 6432)
  Prédit: ' cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.05422068014740944
    2. ' True' → logprob: -3.304220676422119
    3. ' ' → logprob: -4.929220676422119
    4. ' (' → logprob: -5.179220676422119
    5. 'cc' → logprob: -6.679220676422119
    6. 'True' → logprob: -6.929220676422119
    7. '   ' → logprob: -7.804220676422119
    8. '(cc' → logprob: -8.054221153259277
    9. ' ' → logprob: -9.679221153259277
    10. ' CC' → logprob: -10.304221153259277

Token 65: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5850984454154968
    2. '<|end|>' → logprob: -0.8350984454154968
    3. '  ' → logprob: -5.7100982666015625
    4. '<|end|>' → logprob: -6.0850982666015625
    5. '    ' → logprob: -7.3350982666015625
    6. ' )' → logprob: -7.4600982666015625
    7. '   ' → logprob: -7.7100982666015625
    8. ' (' → logprob: -7.7100982666015625
    9. ' True' → logprob: -7.7100982666015625
    10. ' if' → logprob: -8.210098266601562

Token 66: ' line' (ID: 2543)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.44118231534957886
    2. ' cc' → logprob: -1.1911823749542236
    3. '(cc' → logprob: -2.9411823749542236
    4. '	cc' → logprob: -10.691182136535645
    5. '(' → logprob: -10.941182136535645
    6. ' (' → logprob: -11.316182136535645
    7. '   ' → logprob: -12.816182136535645
    8. ' ' → logprob: -12.816182136535645
    9. 'inter' → logprob: -15.191182136535645
    10. '_cc' → logprob: -15.191182136535645

Token 67: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6062471270561218
    2. '<|end|>' → logprob: -0.8562471270561218
    3. 's' → logprob: -4.8562469482421875
    4. 'segments' → logprob: -4.9812469482421875
    5. '_segments' → logprob: -5.1062469482421875
    6. ' ' → logprob: -5.7312469482421875
    7. ' A' → logprob: -6.3562469482421875
    8. 'A' → logprob: -6.7312469482421875
    9. '<|end|>' → logprob: -6.9812469482421875
    10. ' intersects' → logprob: -7.6062469482421875

Token 68: ' AB' (ID: 16520)
  Prédit: ' AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AB' → logprob: -0.10518867522478104
    2. 'AB' → logprob: -2.3551886081695557
    3. ' A' → logprob: -5.855188846588135
    4. '(A' → logprob: -6.605188846588135
    5. ' (' → logprob: -8.480188369750977
    6. '(' → logprob: -8.855188369750977
    7. ' AC' → logprob: -9.355188369750977
    8. 'A' → logprob: -9.355188369750977
    9. ' intersect' → logprob: -9.730188369750977
    10. ' ' → logprob: -10.105188369750977

Token 69: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.056743815541267395
    2. ' intersect' → logprob: -4.181743621826172
    3. ' intersects' → logprob: -4.306743621826172
    4. ' ' → logprob: -4.306743621826172
    5. 'inter' → logprob: -4.556743621826172
    6. 'and' → logprob: -6.556743621826172
    7. '   ' → logprob: -8.306743621826172
    8. ' inter' → logprob: -8.806743621826172
    9. '<|end|>' → logprob: -8.931743621826172
    10. ')' → logprob: -9.556743621826172

Token 70: ' CD' (ID: 12178)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.0015098588773980737
    2. ' CD' → logprob: -6.501509666442871
    3. ' ' → logprob: -12.251509666442871
    4. 'C' → logprob: -13.876509666442871
    5. '   ' → logprob: -14.126509666442871
    6. '_CD' → logprob: -14.126509666442871
    7. 'cd' → logprob: -15.126509666442871
    8. '```' → logprob: -16.501510620117188
    9. '  ' → logprob: -17.001510620117188
    10. 'line' → logprob: -17.251510620117188

Token 71: ' intersect' (ID: 64353)
  Prédit: ' intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.22732332348823547
    2. ' properly' → logprob: -2.477323293685913
    3. 'inter' → logprob: -2.852323293685913
    4. ' ' → logprob: -3.602323293685913
    5. ' cross' → logprob: -4.102323532104492
    6. '   ' → logprob: -4.352323532104492
    7. ' do' → logprob: -5.977323532104492
    8. ' inter' → logprob: -7.102323532104492
    9. ' line' → logprob: -7.602323532104492
    10. 'cross' → logprob: -8.852323532104492

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06463418155908585
    2. ':' → logprob: -2.939634084701538
    3. ',' → logprob: -5.064634323120117
    4. ' and' → logprob: -6.439634323120117
    5. '<|end|>' → logprob: -7.564634323120117
    6. ':
' → logprob: -8.439634323120117
    7. ' ' → logprob: -8.689634323120117
    8. '  ' → logprob: -8.814634323120117
    9. ':return' → logprob: -9.064634323120117
    10. '.' → logprob: -9.189634323120117

Token 73: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1937771737575531
    2. '   ' → logprob: -1.8187772035598755
    3. ':
' → logprob: -5.318777084350586
    4. '<|end|>' → logprob: -5.943777084350586
    5. '):' → logprob: -6.193777084350586
    6. ':return' → logprob: -6.693777084350586
    7. ')' → logprob: -6.818777084350586
    8. ' and' → logprob: -7.818777084350586
    9. ',' → logprob: -7.818777084350586
    10. ' ' → logprob: -8.068777084350586

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0685625821352005
    2. ' return' → logprob: -2.9435625076293945
    3. 'return' (adapté à ' return') → logprob: -4.9435625076293945
    4. ' ' → logprob: -6.0685625076293945
    5. ' (' → logprob: -6.3185625076293945
    6. '    ' → logprob: -7.1935625076293945
    7. '  ' → logprob: -7.3185625076293945
    8. '(' → logprob: -7.3185625076293945
    9. '    
' → logprob: -9.568562507629395
    10. '       ' → logprob: -10.068562507629395

Token 75: ' (' (ID: 350)
  Prédit: ' cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.10355088859796524
    2. 'cc' → logprob: -2.603550910949707
    3. '(cc' → logprob: -3.728550910949707
    4. ' (' → logprob: -8.353550910949707
    5. '(' → logprob: -9.353550910949707
    6. '	cc' → logprob: -11.728550910949707
    7. '   ' → logprob: -14.978550910949707
    8. ' ' → logprob: -14.978550910949707
    9. ' CC' → logprob: -14.978550910949707
    10. '_cc' → logprob: -15.103550910949707

Token 76: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0015187880489975214
    2. ' cc' → logprob: -6.501518726348877
    3. '(cc' → logprob: -11.501519203186035
    4. '	cc' → logprob: -12.501519203186035
    5. '   ' → logprob: -13.501519203186035
    6. ' ' → logprob: -14.251519203186035
    7. ')' → logprob: -15.251519203186035
    8. '_cc' → logprob: -16.25151824951172
    9. '  ' → logprob: -16.50151824951172
    10. 'ccc' → logprob: -16.75151824951172

Token 77: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0921942703134846e-05
    2. '(A' → logprob: -11.62501049041748
    3. 'W' → logprob: -13.25001049041748
    4. ' w' → logprob: -17.000011444091797
    5. ' (' → logprob: -18.000011444091797
    6. '(' → logprob: -18.125011444091797
    7. '   ' → logprob: -18.250011444091797
    8. ')' → logprob: -18.375011444091797
    9. 'ws' → logprob: -18.375011444091797
    10. '```' → logprob: -18.500011444091797

Token 78: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -16.875003814697266
    4. 'A' → logprob: -17.000003814697266
    5. ')(' → logprob: -18.375003814697266
    6. ')' → logprob: -18.625003814697266
    7. '(B' → logprob: -18.750003814697266
    8. '(I' → logprob: -18.875003814697266
    9. '(C' → logprob: -19.500003814697266
    10. '(
' → logprob: -19.750003814697266

Token 79: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063149393536150455
    2. ',A' → logprob: -5.256314754486084
    3. ',B' → logprob: -7.506314754486084
    4. ' ,' → logprob: -7.881314754486084
    5. ',C' → logprob: -9.006315231323242
    6. '(A' → logprob: -10.631315231323242
    7. '(' → logprob: -13.006315231323242
    8. 'A' → logprob: -13.381315231323242
    9. ',(' → logprob: -14.256315231323242
    10. ',D' → logprob: -15.131315231323242

Token 80: ',D' (ID: 61507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00796065479516983
    2. ',B' → logprob: -5.507960796356201
    3. ',D' → logprob: -6.007960796356201
    4. ',C' → logprob: -7.132960796356201
    5. ' ,' → logprob: -8.132960319519043
    6. ',A' → logprob: -8.632960319519043
    7. ')' → logprob: -9.007960319519043
    8. ',)' → logprob: -11.757960319519043
    9. '),' → logprob: -12.257960319519043
    10. ',E' → logprob: -13.257960319519043

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001675779465585947
    2. ')!=' → logprob: -6.876675605773926
    3. ' )' → logprob: -7.376675605773926
    4. '))' → logprob: -11.501675605773926
    5. ' !=' → logprob: -12.876675605773926
    6. ')
' → logprob: -13.876675605773926
    7. '!=' → logprob: -14.001675605773926
    8. ')!' → logprob: -14.501675605773926
    9. '   ' → logprob: -15.251675605773926
    10. ')==' → logprob: -15.376675605773926

Token 82: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7162536382675171
    2. ' !=' → logprob: -0.8412536382675171
    3. ')' → logprob: -2.8412537574768066
    4. ')!=' → logprob: -3.8412537574768066
    5. ' )' → logprob: -7.841253757476807
    6. '!=(' → logprob: -11.091253280639648
    7. ' and' → logprob: -11.841253280639648
    8. '()!=' → logprob: -12.466253280639648
    9. ']!=' → logprob: -12.591253280639648
    10. ' ' → logprob: -13.341253280639648

Token 83: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.00866728276014328
    2. 'cc' → logprob: -4.758667469024658
    3. '	cc' → logprob: -10.1336669921875
    4. ' ' → logprob: -11.6336669921875
    5. '(cc' → logprob: -12.5086669921875
    6. '_cc' → logprob: -15.8836669921875
    7. ' c' → logprob: -15.8836669921875
    8. '   ' → logprob: -16.7586669921875
    9. '    ' → logprob: -16.8836669921875
    10. '```' → logprob: -17.1336669921875

Token 84: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. ' w' → logprob: -17.5
    3. 'W' → logprob: -19.75
    4. 'cw' → logprob: -20.25
    5. '	w' → logprob: -20.5
    6. 'v' → logprob: -20.875
    7. '_w' → logprob: -21.375
    8. 'ｗ' → logprob: -21.625
    9. 'ww' → logprob: -22.0
    10. ''w' → logprob: -22.0

Token 85: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -10.625025749206543
    3. 'A' → logprob: -14.000025749206543
    4. '(B' → logprob: -14.250025749206543
    5. ')' → logprob: -18.37502670288086
    6. '(I' → logprob: -18.50002670288086
    7. '(
' → logprob: -19.00002670288086
    8. '(C' → logprob: -19.25002670288086
    9. ')(' → logprob: -19.37502670288086
    10. '```' → logprob: -20.00002670288086

Token 86: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.3879310190677643
    2. ',' → logprob: -1.137930989265442
    3. ',A' → logprob: -7.137930870056152
    4. '(' → logprob: -9.387930870056152
    5. 'C' → logprob: -9.887930870056152
    6. ' ,' → logprob: -10.012930870056152
    7. ',c' → logprob: -10.637930870056152
    8. '(C' → logprob: -10.762930870056152
    9. ')' → logprob: -11.262930870056152
    10. ',(' → logprob: -12.137930870056152

Token 87: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.004711126442998648
    2. ',' → logprob: -5.379711151123047
    3. ',d' → logprob: -10.629711151123047
    4. ',)' → logprob: -11.004711151123047
    5. ' ,' → logprob: -11.254711151123047
    6. 'D' → logprob: -11.504711151123047
    7. ')' → logprob: -11.629711151123047
    8. ',C' → logprob: -12.129711151123047
    9. ',A' → logprob: -12.129711151123047
    10. ',:)' → logprob: -13.879711151123047

Token 88: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009130131802521646
    2. ' )' → logprob: -7.000913143157959
    3. '))' → logprob: -13.8759126663208
    4. ' and' → logprob: -15.1259126663208
    5. ')`' → logprob: -16.875913619995117
    6. '`)' → logprob: -17.000913619995117
    7. ' ' → logprob: -17.250913619995117
    8. '   ' → logprob: -17.250913619995117
    9. ')
' → logprob: -17.625913619995117
    10. '')' → logprob: -17.875913619995117

Token 89: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.001517834491096437
    2. 'and' → logprob: -6.5015177726745605
    3. ' ' → logprob: -11.501518249511719
    4. ' ' → logprob: -12.501518249511719
    5. ')' → logprob: -14.001518249511719
    6. ' a' → logprob: -14.876518249511719
    7. ' )' → logprob: -15.501518249511719
    8. '    ' → logprob: -16.12651824951172
    9. '	and' → logprob: -16.87651824951172
    10. ' an' → logprob: -17.25151824951172

Token 90: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0008049834286794066
    2. '(cc' → logprob: -7.750804901123047
    3. '(' → logprob: -8.000804901123047
    4. ' ' → logprob: -10.500804901123047
    5. ' ' → logprob: -12.125804901123047
    6. '<|end|>' → logprob: -12.875804901123047
    7. '(space' → logprob: -13.500804901123047
    8. '(c' → logprob: -14.625804901123047
    9. '(True' → logprob: -15.500804901123047
    10. '  ' → logprob: -15.750804901123047

Token 91: 'cc' (ID: 710)
  Prédit: ' cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.19281582534313202
    2. 'cc' → logprob: -1.9428157806396484
    3. '(cc' → logprob: -3.4428157806396484
    4. ' (' → logprob: -9.567815780639648
    5. '	cc' → logprob: -11.692815780639648
    6. '(' → logprob: -11.817815780639648
    7. ' ' → logprob: -13.067815780639648
    8. ' ' → logprob: -13.067815780639648
    9. '_cc' → logprob: -13.567815780639648
    10. 'Cc' → logprob: -16.06781578063965

Token 92: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.5577775128767826e-06
    2. 'W' → logprob: -12.625005722045898
    3. 'cw' → logprob: -13.500005722045898
    4. '(A' → logprob: -15.750005722045898
    5. ' w' → logprob: -16.1250057220459
    6. ')' → logprob: -16.6250057220459
    7. 'ww' → logprob: -16.7500057220459
    8. '>w' → logprob: -17.2500057220459
    9. '(
' → logprob: -17.3750057220459
    10. '(' → logprob: -17.5000057220459

Token 93: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.1269489973783493
    2. '(' → logprob: -2.1269490718841553
    3. '(
' → logprob: -11.126949310302734
    4. ')' → logprob: -13.376949310302734
    5. ' (' → logprob: -13.501949310302734
    6. '<|end|>' → logprob: -13.751949310302734
    7. '(I' → logprob: -14.251949310302734
    8. 'A' → logprob: -14.626949310302734
    9. '(B' → logprob: -14.751949310302734
    10. '(

' → logprob: -15.251949310302734

Token 94: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.474110871553421
    2. ',' → logprob: -0.9741108417510986
    3. ' ,' → logprob: -11.34911060333252
    4. ',b' → logprob: -11.72411060333252
    5. ',C' → logprob: -12.22411060333252
    6. ',A' → logprob: -12.47411060333252
    7. '(' → logprob: -13.84911060333252
    8. ',I' → logprob: -14.47411060333252
    9. '(B' → logprob: -14.97411060333252
    10. ',F' → logprob: -15.22411060333252

Token 95: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133966028690338
    2. ',C' → logprob: -1.3133965730667114
    3. ',A' → logprob: -10.063396453857422
    4. 'C' → logprob: -10.063396453857422
    5. ' ,' → logprob: -10.438396453857422
    6. ',c' → logprob: -11.813396453857422
    7. ')' → logprob: -11.938396453857422
    8. '<|end|>' → logprob: -13.813396453857422
    9. ',)' → logprob: -13.813396453857422
    10. ',I' → logprob: -14.438396453857422

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. ' )' → logprob: -10.500030517578125
    3. ')!=' → logprob: -12.875030517578125
    4. '))' → logprob: -16.500030517578125
    5. ' ' → logprob: -18.625030517578125
    6. ',)' → logprob: -18.625030517578125
    7. ']' → logprob: -18.750030517578125
    8. '`)' → logprob: -19.250030517578125
    9. '）' → logprob: -19.375030517578125
    10. '")' → logprob: -19.375030517578125

Token 97: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.14095675945281982
    2. ')' → logprob: -2.1409568786621094
    3. ' )' → logprob: -4.640956878662109
    4. '!=' → logprob: -5.640956878662109
    5. ')!=' → logprob: -7.390956878662109
    6. ' ' → logprob: -9.51595687866211
    7. '<|end|>' → logprob: -11.26595687866211
    8. '()!=' → logprob: -11.76595687866211
    9. ' ' → logprob: -12.26595687866211
    10. '!=(' → logprob: -12.39095687866211

Token 98: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.16034162044525146
    2. 'cc' → logprob: -1.9103416204452515
    3. '	cc' → logprob: -9.535341262817383
    4. '(cc' → logprob: -10.410341262817383
    5. ' ' → logprob: -11.285341262817383
    6. ' ' → logprob: -14.410341262817383
    7. 'Cc' → logprob: -14.660341262817383
    8. '_cc' → logprob: -15.035341262817383
    9. '   ' → logprob: -15.285341262817383
    10. ')' → logprob: -15.910341262817383

Token 99: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002764710516203195
    2. 'W' → logprob: -8.250276565551758
    3. ' w' → logprob: -12.375276565551758
    4. ')' → logprob: -12.750276565551758
    5. 'cw' → logprob: -13.500276565551758
    6. '(A' → logprob: -14.062776565551758
    7. '(B' → logprob: -14.625276565551758
    8. 'wc' → logprob: -14.687776565551758
    9. 'ww' → logprob: -14.812776565551758
    10. '(' → logprob: -15.062776565551758

Token 100: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.006805960554629564
    2. '(' → logprob: -5.006805896759033
    3. '(B' → logprob: -9.381806373596191
    4. ')' → logprob: -12.756806373596191
    5. '(
' → logprob: -13.506806373596191
    6. '<|end|>' → logprob: -13.756806373596191
    7. '(C' → logprob: -15.881806373596191
    8. '(I' → logprob: -15.881806373596191
    9. '\(' → logprob: -16.006805419921875
    10. ' (' → logprob: -16.256805419921875

Token 101: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.002997666597366333
    2. ',' → logprob: -6.002997875213623
    3. ',C' → logprob: -7.627997875213623
    4. 'B' → logprob: -11.127997398376465
    5. ',A' → logprob: -11.252997398376465
    6. ' ,' → logprob: -12.502997398376465
    7. ',D' → logprob: -13.752997398376465
    8. ',b' → logprob: -14.377997398376465
    9. ',F' → logprob: -14.627997398376465
    10. ',Q' → logprob: -15.377997398376465

Token 102: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.002656870288774371
    2. 'D' → logprob: -6.127656936645508
    3. ',' → logprob: -7.752656936645508
    4. ')' → logprob: -11.252656936645508
    5. ' ,' → logprob: -12.002656936645508
    6. ',C' → logprob: -12.627656936645508
    7. '<|end|>' → logprob: -12.877656936645508
    8. '(D' → logprob: -13.127656936645508
    9. ',d' → logprob: -13.252656936645508
    10. '	D' → logprob: -13.377656936645508

Token 103: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408294677734375
    2. '))' → logprob: -0.9740829467773438
    3. ')))' → logprob: -12.349082946777344
    4. ' )' → logprob: -14.099082946777344
    5. ' ))' → logprob: -14.599082946777344
    6. ')
' → logprob: -15.349082946777344
    7. '])' → logprob: -16.724082946777344
    8. '))
' → logprob: -17.349082946777344
    9. '})' → logprob: -17.974082946777344
    10. ' ' → logprob: -18.349082946777344

Token 104: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6153035163879395
    2. '#' → logprob: -1.6153035163879395
    3. ' 
' → logprob: -2.8653035163879395
    4. 'n' → logprob: -3.1153035163879395
    5. '\' → logprob: -3.2403035163879395
    6. '\n' → logprob: -3.2403035163879395
    7. 'def' → logprob: -3.8653035163879395
    8. '```' → logprob: -4.6153035163879395
    9. '  
' → logprob: -4.6153035163879395
    10. 'newline' → logprob: -4.8653035163879395

Token 105: ' line' (ID: 2543)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03116920404136181
    2. ' distance' → logprob: -4.281169414520264
    3. ' convex' → logprob: -4.406169414520264
    4. ' solve' → logprob: -6.031169414520264
    5. ' dist' → logprob: -7.531169414520264
    6. ' calculate' → logprob: -8.281168937683105
    7. ' polygon' → logprob: -8.406168937683105
    8. ' find' → logprob: -8.906168937683105
    9. ' line' → logprob: -9.406168937683105
    10. ' perimeter' → logprob: -9.531168937683105

Token 106: '_inter' (ID: 16818)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.8224191069602966
    2. '_inter' → logprob: -1.0724191665649414
    3. '_segment' → logprob: -2.0724191665649414
    4. '_' → logprob: -3.6974191665649414
    5. '(' → logprob: -3.6974191665649414
    6. '(A' → logprob: -3.8224191665649414
    7. '_length' → logprob: -4.822419166564941
    8. '_seg' → logprob: -6.572419166564941
    9. '(Point' → logprob: -6.697419166564941
    10. '(Line' → logprob: -6.822419166564941

Token 107: 'section' (ID: 6471)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.12828901410102844
    2. 'sects' → logprob: -2.628288984298706
    3. 'section' → logprob: -3.128288984298706
    4. 's' → logprob: -6.003289222717285
    5. '```' → logprob: -7.753289222717285
    6. 'sections' → logprob: -8.003289222717285
    7. 'ects' → logprob: -8.503289222717285
    8. 'sec' → logprob: -8.878289222717285
    9. 'set' → logprob: -9.128289222717285
    10. 'ect' → logprob: -9.128289222717285

Token 108: '(p' (ID: 2407)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.11519583314657211
    2. '(' → logprob: -2.2401957511901855
    3. '_point' → logprob: -6.2401957511901855
    4. '_points' → logprob: -9.240196228027344
    5. '(Point' → logprob: -9.240196228027344
    6. '(line' → logprob: -9.740196228027344
    7. '((' → logprob: -9.990196228027344
    8. '(a' → logprob: -10.490196228027344
    9. '(L' → logprob: -10.490196228027344
    10. '(point' → logprob: -11.240196228027344

Token 109: '1' (ID: 16)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.13695885241031647
    2. '1' → logprob: -2.7619588375091553
    3. 'oints' → logprob: -2.8869588375091553
    4. ')' → logprob: -5.636959075927734
    5. 'A' → logprob: -5.761959075927734
    6. 'a' → logprob: -7.886959075927734
    7. '<|end|>' → logprob: -8.261959075927734
    8. 'r' → logprob: -8.261959075927734
    9. 'ar' → logprob: -8.386959075927734
    10. 'oin' → logprob: -8.636959075927734

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060784644447267056
    2. ',p' → logprob: -5.131078243255615
    3. ' ,' → logprob: -8.881078720092773
    4. 'p' → logprob: -12.756078720092773
    5. ' p' → logprob: -13.006078720092773
    6. ',line' → logprob: -13.506078720092773
    7. '_,' → logprob: -13.881078720092773
    8. ',
' → logprob: -14.631078720092773
    9. '_p' → logprob: -14.756078720092773
    10. 'A' → logprob: -15.006078720092773

Token 111: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004306692280806601
    2. ' p' → logprob: -7.750430583953857
    3. '	p' → logprob: -19.250431060791016
    4. ' ' → logprob: -19.875431060791016
    5. 'q' → logprob: -20.875431060791016
    6. '   ' → logprob: -21.125431060791016
    7. ')' → logprob: -21.375431060791016
    8. '```' → logprob: -21.625431060791016
    9. '<p' → logprob: -21.750431060791016
    10. '  ' → logprob: -22.125431060791016

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'p' → logprob: -19.0
    3. '₂' → logprob: -19.75
    4. '۲' → logprob: -19.875
    5. '２' → logprob: -20.75
    6. '```' → logprob: -21.375
    7. 'oint' → logprob: -22.25
    8. 'oints' → logprob: -23.125
    9. '٢' → logprob: -23.625
    10. '२' → logprob: -24.25

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001673061487963423
    2. ',p' → logprob: -9.250166893005371
    3. '):' → logprob: -9.625166893005371
    4. ' ,' → logprob: -12.375166893005371
    5. ',line' → logprob: -16.125167846679688
    6. ',A' → logprob: -16.375167846679688
    7. ',
' → logprob: -16.375167846679688
    8. ',a' → logprob: -16.625167846679688
    9. '‌,' → logprob: -16.875167846679688
    10. '   ' → logprob: -16.875167846679688

Token 114: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38687190413475037
    2. ' p' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.636872291564941
    4. 'q' → logprob: -15.261872291564941
    5. '	p' → logprob: -15.761872291564941
    6. ' q' → logprob: -16.011871337890625
    7. '  ' → logprob: -18.761871337890625
    8. '   ' → logprob: -19.011871337890625
    9. '```' → logprob: -19.011871337890625
    10. ')' → logprob: -19.761871337890625

Token 115: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0363345667719841
    2. '1' → logprob: -3.66133451461792
    3. ')' → logprob: -4.78633451461792
    4. '2' → logprob: -7.28633451461792
    5. '):' → logprob: -8.161334991455078
    6. '<|end|>' → logprob: -8.161334991455078
    7. 'oints' → logprob: -8.286334991455078
    8. 'oint' → logprob: -10.161334991455078
    9. '):
' → logprob: -10.161334991455078
    10. '<|end|>' → logprob: -10.536334991455078

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005083533469587564
    2. ',p' → logprob: -7.6255083084106445
    3. '):' → logprob: -11.375508308410645
    4. ' ,' → logprob: -11.875508308410645
    5. 'p' → logprob: -13.875508308410645
    6. ')' → logprob: -14.875508308410645
    7. ' p' → logprob: -15.250508308410645
    8. ',line' → logprob: -16.25050926208496
    9. ',q' → logprob: -17.00050926208496
    10. ',d' → logprob: -17.62550926208496

Token 117: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20143350958824158
    2. ' p' → logprob: -1.701433539390564
    3. ')' → logprob: -11.076433181762695
    4. ' ' → logprob: -13.326433181762695
    5. ')p' → logprob: -14.451433181762695
    6. '<|end|>' → logprob: -14.951433181762695
    7. '```' → logprob: -15.138933181762695
    8. '   ' → logprob: -15.263933181762695
    9. ' ' → logprob: -15.576433181762695
    10. ' )' → logprob: -15.638933181762695

Token 118: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.020646994933485985
    2. '3' → logprob: -3.8956470489501953
    3. ')' → logprob: -9.270647048950195
    4. '<|end|>' → logprob: -12.520647048950195
    5. '34' → logprob: -12.770647048950195
    6. 's' → logprob: -13.770647048950195
    7. '1' → logprob: -13.770647048950195
    8. '_' → logprob: -14.270647048950195
    9. '۴' → logprob: -15.395647048950195
    10. '' → logprob: -15.520647048950195

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.5120287066092715e-05
    2. '):
' → logprob: -10.750035285949707
    3. ')' → logprob: -11.875035285949707
    4. ':' → logprob: -12.500035285949707
    5. ' ):' → logprob: -12.875035285949707
    6. '):
' → logprob: -16.00003433227539
    7. '   ' → logprob: -16.37503433227539
    8. ',' → logprob: -16.87503433227539
    9. '}:' → logprob: -17.62503433227539
    10. ' ' → logprob: -17.75003433227539

Token 120: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22975760698318481
    2. '   ' → logprob: -1.60475754737854
    3. ':
' → logprob: -6.479757785797119
    4. ')' → logprob: -6.729757785797119
    5. ' :' → logprob: -7.729757785797119
    6. ',' → logprob: -7.854757785797119
    7. '<|end|>' → logprob: -8.229757308959961
    8. '):' → logprob: -8.854757308959961
    9. '    ' → logprob: -9.854757308959961
    10. '.' → logprob: -9.854757308959961

Token 121: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8515755534172058
    2. ' ' → logprob: -0.9765755534172058
    3. '    ' → logprob: -1.7265756130218506
    4. ' 
' → logprob: -4.7265753746032715
    5. '     
' → logprob: -6.1015753746032715
    6. ':' → logprob: -6.2265753746032715
    7. '  ' → logprob: -7.3515753746032715
    8. ' x' → logprob: -7.6015753746032715
    9. 'x' → logprob: -7.7265753746032715
    10. ' space' → logprob: -7.8515753746032715

Token 122: ' Compute' (ID: 45438)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.08431826531887054
    2. 'x' → logprob: -2.834318161010742
    3. ' denom' → logprob: -4.709318161010742
    4. ' den' → logprob: -5.709318161010742
    5. ' x' → logprob: -5.709318161010742
    6. '#' → logprob: -6.459318161010742
    7. ' denominator' → logprob: -6.584318161010742
    8. 'def' → logprob: -6.834318161010742
    9. 'd' → logprob: -7.459318161010742
    10. 'Den' → logprob: -7.709318161010742

Token 123: ' intersection' (ID: 42002)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.3453153669834137
    2. ' x' → logprob: -1.9703153371810913
    3. 'x' → logprob: -2.220315456390381
    4. ' denom' → logprob: -4.095315456390381
    5. ' denominator' → logprob: -4.345315456390381
    6. ' den' → logprob: -4.595315456390381
    7. 'd' → logprob: -6.720315456390381
    8. ' ' → logprob: -7.470315456390381
    9. '(x' → logprob: -7.720315456390381
    10. 'A' → logprob: -7.845315456390381

Token 124: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.16995100677013397
    2. '_point' → logprob: -1.9199509620666504
    3. 'point' → logprob: -5.91995096206665
    4. '_' → logprob: -6.91995096206665
    5. ' of' → logprob: -6.91995096206665
    6. '_x' → logprob: -7.29495096206665
    7. ' ' → logprob: -7.41995096206665
    8. '.' → logprob: -7.66995096206665
    9. '<|end|>' → logprob: -7.66995096206665
    10. '(' → logprob: -7.66995096206665

Token 125: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9910598993301392
    2. ' ' → logprob: -1.7410598993301392
    3. ' =' → logprob: -1.7410598993301392
    4. '<|end|>' → logprob: -1.7410598993301392
    5. '   ' → logprob: -3.3660597801208496
    6. ' if' → logprob: -3.8660597801208496
    7. '=' → logprob: -4.74105978012085
    8. 's' → logprob: -4.86605978012085
    9. ',' → logprob: -5.24105978012085
    10. ')' → logprob: -5.24105978012085

Token 126: ' segments' (ID: 33749)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8525492548942566
    2. ' line' → logprob: -1.1025493144989014
    3. ' p' → logprob: -2.4775493144989014
    4. ' two' → logprob: -2.8525493144989014
    5. ' (' → logprob: -2.9775493144989014
    6. ' the' → logprob: -3.9775493144989014
    7. '(p' → logprob: -4.352549076080322
    8. '(' → logprob: -5.477549076080322
    9. 'p' → logprob: -5.602549076080322
    10. 'line' → logprob: -6.227549076080322

Token 127: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8485815525054932
    2. ' ' → logprob: -1.0985815525054932
    3. ' (' → logprob: -2.348581552505493
    4. '  ' → logprob: -3.098581552505493
    5. '(p' → logprob: -3.973581552505493
    6. '<|end|>' → logprob: -3.973581552505493
    7. ' if' → logprob: -4.223581314086914
    8. ' line' → logprob: -4.598581314086914
    9. ' None' → logprob: -4.723581314086914
    10. 'p' → logprob: -4.973581314086914

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -13.500004768371582
    3. '[' → logprob: -13.750004768371582
    4. '```' → logprob: -14.625004768371582
    5. '
' → logprob: -15.375004768371582
    6. ' ' → logprob: -15.687504768371582
    7. '3' → logprob: -15.687504768371582
    8. '_' → logprob: -15.750004768371582
    9. '

' → logprob: -16.687503814697266
    10. '   ' → logprob: -16.687503814697266

Token 129: 'p' (ID: 79)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1525355577468872
    2. 'p' → logprob: -2.7775354385375977
    3. ',p' → logprob: -3.0275354385375977
    4. ' p' → logprob: -3.9025354385375977
    5. '[' → logprob: -4.777535438537598
    6. ' ,' → logprob: -7.277535438537598
    7. ' and' → logprob: -7.527535438537598
    8. '1' → logprob: -7.902535438537598
    9. ')' → logprob: -8.652535438537598
    10. 'and' → logprob: -9.277535438537598

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001438684994354844
    2. '3' → logprob: -6.751438617706299
    3. '1' → logprob: -8.251439094543457
    4. '_' → logprob: -12.626439094543457
    5. ' ' → logprob: -13.126439094543457
    6. 'p' → logprob: -13.876439094543457
    7. '```' → logprob: -14.001439094543457
    8. '23' → logprob: -16.37643814086914
    9. ',' → logprob: -16.50143814086914
    10. '₂' → logprob: -17.50143814086914

Token 131: ' and' (ID: 326)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5401228666305542
    2. ':' → logprob: -1.6651228666305542
    3. ',' → logprob: -2.0401229858398438
    4. '   ' → logprob: -3.9151229858398438
    5. 'if' → logprob: -4.290122985839844
    6. ')' → logprob: -4.290122985839844
    7. ' ' → logprob: -4.540122985839844
    8. '):' → logprob: -4.790122985839844
    9. ' :' → logprob: -5.040122985839844
    10. ' or' → logprob: -5.290122985839844

Token 132: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.026305755600333214
    2. 'p' → logprob: -3.651305675506592
    3. ' ' → logprob: -12.40130615234375
    4. '	p' → logprob: -14.52630615234375
    5. ' п' → logprob: -15.15130615234375
    6. ' ' → logprob: -15.65130615234375
    7. ',' → logprob: -16.27630615234375
    8. '  
' → logprob: -16.77630615234375
    9. ' 
' → logprob: -16.77630615234375
    10. 'space' → logprob: -16.77630615234375

Token 133: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -17.625
    3. '341' → logprob: -17.875
    4. '34' → logprob: -18.625
    5. '৩' → logprob: -19.125
    6. '345' → logprob: -19.25
    7. '4' → logprob: -19.25
    8. '３' → logprob: -19.5
    9. '٣' → logprob: -19.5
    10. '३' → logprob: -19.5

Token 134: 'p' (ID: 79)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048241302371025085
    2. 'p' → logprob: -3.548241376876831
    3. ',p' → logprob: -4.673241138458252
    4. '4' → logprob: -5.298241138458252
    5. ' p' → logprob: -5.923241138458252
    6. ' ,' → logprob: -7.548241138458252
    7. '3' → logprob: -8.04824161529541
    8. '_' → logprob: -8.79824161529541
    9. '_,' → logprob: -9.54824161529541
    10. ')' → logprob: -9.92324161529541

Token 135: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00023298001906368881
    2. '4' → logprob: -8.375232696533203
    3. '343' → logprob: -13.500232696533203
    4. '34' → logprob: -14.625232696533203
    5. '346' → logprob: -15.500232696533203
    6. '345' → logprob: -16.125232696533203
    7. '<|end|>' → logprob: -16.500232696533203
    8. '344' → logprob: -16.875232696533203
    9. '341' → logprob: -17.125232696533203
    10. '43' → logprob: -17.500232696533203

Token 136: ' assuming' (ID: 49328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007492927368730307
    2. '   ' → logprob: -5.882493019104004
    3. ' :' → logprob: -6.382493019104004
    4. ':
' → logprob: -6.882493019104004
    5. '):' → logprob: -7.007493019104004
    6. ')' → logprob: -7.882493019104004
    7. ',' → logprob: -8.882493019104004
    8. '(' → logprob: -9.132493019104004
    9. ':return' → logprob: -9.132493019104004
    10. ' ' → logprob: -9.507493019104004

Token 137: ' they' (ID: 1023)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.3587011694908142
    2. ' they' → logprob: -1.608701229095459
    3. 'they' → logprob: -2.358701229095459
    4. ' intersect' → logprob: -5.733701229095459
    5. ' the' → logprob: -6.608701229095459
    6. 'the' → logprob: -7.233701229095459
    7. ' that' → logprob: -7.358701229095459
    8. ' they're' → logprob: -8.9837007522583
    9. ' ' → logprob: -8.9837007522583
    10. '(inter' → logprob: -9.1087007522583

Token 138: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.6334829926490784
    2. ' do' → logprob: -1.5084829330444336
    3. 'do' → logprob: -1.5084829330444336
    4. ' intersect' → logprob: -4.383482933044434
    5. ' are' → logprob: -5.133482933044434
    6. 'are' → logprob: -5.883482933044434
    7. 'actually' → logprob: -6.008482933044434
    8. ' actually' → logprob: -7.008482933044434
    9. '_inter' → logprob: -7.133482933044434
    10. '<|end|>' → logprob: -7.883482933044434

Token 139: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038042180240154266
    2. ':
' → logprob: -3.7880420684814453
    3. '   ' → logprob: -4.413042068481445
    4. '
' → logprob: -6.538042068481445
    5. '):' → logprob: -8.163042068481445
    6. ')' → logprob: -8.288042068481445
    7. '):
' → logprob: -9.038042068481445
    8. ',' → logprob: -9.038042068481445
    9. ':return' → logprob: -9.663042068481445
    10. ' :' → logprob: -9.913042068481445

Token 140: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39225199818611145
    2. '   ' → logprob: -1.142251968383789
    3. ':
' → logprob: -5.642251968383789
    4. ')' → logprob: -7.767251968383789
    5. ',' → logprob: -8.267251968383789
    6. '):' → logprob: -8.392251968383789
    7. '    
' → logprob: -8.517251968383789
    8. '\n' → logprob: -8.892251968383789
    9. '
' → logprob: -9.142251968383789
    10. '(' → logprob: -9.767251968383789

Token 141: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18708623945713043
    2. ' x' → logprob: -2.812086343765259
    3. 'x' (adapté à ' x') → logprob: -3.312086343765259
    4. 'den' → logprob: -3.562086343765259
    5. 'dx' → logprob: -4.43708610534668
    6. ' denom' → logprob: -4.43708610534668
    7. 'd' → logprob: -5.06208610534668
    8. ' dx' → logprob: -5.06208610534668
    9. ' denominator' → logprob: -5.93708610534668
    10. ' den' → logprob: -5.93708610534668

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007882949896156788
    2. 'diff' → logprob: -4.882883071899414
    3. '_diff' → logprob: -8.882883071899414
    4. 'den' → logprob: -9.632883071899414
    5. 'dif' → logprob: -11.382883071899414
    6. '0' → logprob: -11.507883071899414
    7. 'umerator' → logprob: -11.757883071899414
    8. ' =' → logprob: -11.882883071899414
    9. '_den' → logprob: -11.882883071899414
    10. 'd' → logprob: -12.132883071899414

Token 143: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004537873435765505
    2. ',y' → logprob: -5.754538059234619
    3. '1' → logprob: -6.629538059234619
    4. ' ,' → logprob: -10.754537582397461
    5. '0' → logprob: -12.004537582397461
    6. ',x' → logprob: -12.504537582397461
    7. ' =' → logprob: -13.254537582397461
    8. ',p' → logprob: -13.754537582397461
    9. 'y' → logprob: -13.879537582397461
    10. '_,' → logprob: -14.629537582397461

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013332172529771924
    2. '=' → logprob: -7.001333236694336
    3. '<|end|>' → logprob: -8.001333236694336
    4. ',' → logprob: -10.376333236694336
    5. ' =' → logprob: -10.626333236694336
    6. '_' → logprob: -11.126333236694336
    7. '<|end|>' → logprob: -12.126333236694336
    8. ')' → logprob: -12.626333236694336
    9. '\xe2\x82' → logprob: -13.376333236694336
    10. ' ' → logprob: -13.626333236694336

Token 145: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034007564187049866
    2. '=' → logprob: -3.9090075492858887
    3. ' =' → logprob: -4.409007549285889
    4. ',x' → logprob: -6.784007549285889
    5. ',y' → logprob: -10.534008026123047
    6. ' ,' → logprob: -11.034008026123047
    7. ',p' → logprob: -11.159008026123047
    8. ')' → logprob: -12.659008026123047
    9. ' ' → logprob: -12.784008026123047
    10. ',b' → logprob: -13.409008026123047

Token 146: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.023246990516781807
    2. 'p' → logprob: -3.773247003555298
    3. '	p' → logprob: -13.648246765136719
    4. ' ' → logprob: -16.02324676513672
    5. ' ' → logprob: -16.52324676513672
    6. ' 
' → logprob: -16.89824676513672
    7. '<|end|>' → logprob: -17.14824676513672
    8. ' п' → logprob: -17.39824676513672
    9. ' ‌' → logprob: -18.89824676513672
    10. '-p' → logprob: -18.89824676513672

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.375000953674316
    3. '```' → logprob: -16.125
    4. '2' → logprob: -16.375
    5. ' ' → logprob: -16.625
    6. '
' → logprob: -18.25
    7. '۱' → logprob: -18.625
    8. '_' → logprob: -18.8125
    9. ')' → logprob: -18.8125
    10. '   ' → logprob: -19.25

Token 148: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017049413174390793
    2. ',x' → logprob: -4.142049312591553
    3. ',y' → logprob: -7.017049312591553
    4. ' ,' → logprob: -9.642049789428711
    5. ',
' → logprob: -10.767049789428711
    6. ',p' → logprob: -11.642049789428711
    7. '<|end|>' → logprob: -11.642049789428711
    8. 'x' → logprob: -12.142049789428711
    9. '
' → logprob: -13.267049789428711
    10. ' x' → logprob: -13.892049789428711

Token 149: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.43049612641334534
    2. 'x' (adapté à ' x') → logprob: -1.055496096611023
    3. ' ' → logprob: -6.6804962158203125
    4. ',' → logprob: -8.055496215820312
    5. ' ,' → logprob: -9.180496215820312
    6. ',x' → logprob: -10.180496215820312
    7. '    ' → logprob: -10.305496215820312
    8. '	x' → logprob: -11.180496215820312
    9. '<|end|>' → logprob: -11.680496215820312
    10. ' 
' → logprob: -11.930496215820312

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001266613689949736
    2. '1' → logprob: -9.125126838684082
    3. ',' → logprob: -11.250126838684082
    4. '0' → logprob: -13.125126838684082
    5. '3' → logprob: -13.250126838684082
    6. ' ' → logprob: -15.000126838684082
    7. '=' → logprob: -15.125126838684082
    8. '<|end|>' → logprob: -15.750126838684082
    9. '4' → logprob: -16.625125885009766
    10. '```' → logprob: -16.875125885009766

Token 152: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.062058210372924805
    2. ',' → logprob: -2.812058210372925
    3. ' ,' → logprob: -9.812058448791504
    4. '<|end|>' → logprob: -10.687058448791504
    5. ',x' → logprob: -11.812058448791504
    6. ',user' → logprob: -12.937058448791504
    7. ',Y' → logprob: -13.937058448791504
    8. ',
' → logprob: -14.312058448791504
    9. ',line' → logprob: -15.562058448791504
    10. ',value' → logprob: -15.562058448791504

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020330198458395898
    2. '1' → logprob: -9.125203132629395
    3. '<|end|>' → logprob: -9.500203132629395
    4. ' ' → logprob: -11.375203132629395
    5. 'y' → logprob: -13.125203132629395
    6. 'x' → logprob: -13.500203132629395
    7. '<|end|>' → logprob: -13.625203132629395
    8. ' y' → logprob: -13.750203132629395
    9. ',' → logprob: -14.250203132629395
    10. '```' → logprob: -14.500203132629395

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04110331833362579
    2. '=' → logprob: -3.4161033630371094
    3. '<|end|>' → logprob: -5.166103363037109
    4. ',' → logprob: -6.916103363037109
    5. ' ' → logprob: -7.791103363037109
    6. ')' → logprob: -8.91610336303711
    7. ' =
' → logprob: -9.79110336303711
    8. '=p' → logprob: -10.04110336303711
    9. '<|end|>' → logprob: -10.91610336303711
    10. ',p' → logprob: -11.16610336303711

Token 155: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.004628653638064861
    2. 'p' → logprob: -5.379628658294678
    3. '<|end|>' → logprob: -12.75462818145752
    4. ' ' → logprob: -13.25462818145752
    5. ' ' → logprob: -13.37962818145752
    6. ' x' → logprob: -14.37962818145752
    7. 'x' → logprob: -15.00462818145752
    8. 's' → logprob: -15.00462818145752
    9. ' y' → logprob: -15.50462818145752
    10. '	p' → logprob: -16.004629135131836

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۲' → logprob: -18.0
    4. '```' → logprob: -18.125
    5. '3' → logprob: -19.375
    6. '1' → logprob: -19.5
    7. '<|end|>' → logprob: -19.625
    8. '₂' → logprob: -19.8125
    9. '２' → logprob: -20.0625
    10. '  ' → logprob: -20.5625

Token 157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3147868812084198
    2. '<|end|>' → logprob: -1.3147869110107422
    3. '<|end|>' → logprob: -7.439786911010742
    4. '   ' → logprob: -8.814786911010742
    5. '  
' → logprob: -8.814786911010742
    6. '```' → logprob: -8.814786911010742
    7. ' 
' → logprob: -9.064786911010742
    8. ' ' → logprob: -9.189786911010742
    9. 'x' → logprob: -9.439786911010742
    10. '    
' → logprob: -9.689786911010742

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.556894838809967
    2. 'x' → logprob: -1.8068947792053223
    3. '
' → logprob: -2.1818947792053223
    4. '    
' → logprob: -2.9318947792053223
    5. ' 
' → logprob: -2.9318947792053223
    6. '  
' → logprob: -3.9318947792053223
    7. ' x' → logprob: -4.181894779205322
    8. 'n' → logprob: -6.056894779205322
    9. '   
' → logprob: -6.431894779205322
    10. '\n' → logprob: -7.181894779205322

Token 159: ' x' (ID: 1215)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6952491998672485
    2. 'x' (adapté à ' x') → logprob: -0.8202491998672485
    3. ' x' → logprob: -3.320249080657959
    4. '   ' → logprob: -3.820249080657959
    5. ' 
' → logprob: -7.320249080657959
    6. ',
' → logprob: -7.570249080657959
    7. '  
' → logprob: -7.945249080657959
    8. '    
' → logprob: -8.320249557495117
    9. ',' → logprob: -8.445249557495117
    10. ',x' → logprob: -8.445249557495117

Token 160: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04790988564491272
    2. ',' → logprob: -3.54790997505188
    3. '<|end|>' → logprob: -5.172909736633301
    4. '=' → logprob: -5.297909736633301
    5. '2' → logprob: -5.422909736633301
    6. ' =' → logprob: -6.797909736633301
    7. '[' → logprob: -7.547909736633301
    8. '```' → logprob: -8.4229097366333
    9. '<|end|>' → logprob: -8.5479097366333
    10. '-' → logprob: -8.7979097366333

Token 161: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.06199625879526138
    2. ',' → logprob: -2.8119962215423584
    3. ' ,' → logprob: -11.686996459960938
    4. ',
' → logprob: -11.936996459960938
    5. ',x' → logprob: -12.561996459960938
    6. ',user' → logprob: -12.811996459960938
    7. ',Y' → logprob: -13.061996459960938
    8. '<|end|>' → logprob: -13.186996459960938
    9. ',p' → logprob: -14.186996459960938
    10. ',w' → logprob: -14.811996459960938

Token 162: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.375001907348633
    3. ',' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '1' → logprob: -16.750001907348633
    7. '=' → logprob: -17.625001907348633
    8. ' ' → logprob: -18.125001907348633
    9. 'x' → logprob: -18.250001907348633
    10. '...' → logprob: -18.875001907348633

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38710442185401917
    2. '=' → logprob: -1.1371043920516968
    3. ',' → logprob: -8.387104034423828
    4. ' =
' → logprob: -13.762104034423828
    5. '=p' → logprob: -13.887104034423828
    6. ' ,' → logprob: -14.012104034423828
    7. ' ' → logprob: -14.512104034423828
    8. ' =)' → logprob: -14.512104034423828
    9. ',p' → logprob: -14.637104034423828
    10. ')' → logprob: -14.637104034423828

Token 164: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.575939953327179
    2. 'p' → logprob: -0.825939953327179
    3. '	p' → logprob: -16.325939178466797
    4. ' ' → logprob: -16.450939178466797
    5. 'x' → logprob: -16.700939178466797
    6. ' ' → logprob: -17.325939178466797
    7. '[' → logprob: -17.450939178466797
    8. '4' → logprob: -17.450939178466797
    9. ' п' → logprob: -17.700939178466797
    10. '<|end|>' → logprob: -17.825939178466797

Token 165: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '[' → logprob: -18.375
    3. '۳' → logprob: -18.75
    4. '<|end|>' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '34' → logprob: -19.75
    7. '৩' → logprob: -20.875
    8. '345' → logprob: -21.5
    9. '३' → logprob: -21.5
    10. '٣' → logprob: -21.8125

Token 166: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27120888233184814
    2. '   ' → logprob: -1.5212088823318481
    3. 'x' → logprob: -4.271208763122559
    4. '    
' → logprob: -5.646208763122559
    5. '  
' → logprob: -7.646208763122559
    6. '
' → logprob: -8.396208763122559
    7. '```' → logprob: -8.646208763122559
    8. '   
' → logprob: -8.896208763122559
    9. ' x' → logprob: -9.146208763122559
    10. '  ' → logprob: -9.271208763122559

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020457444712519646
    2. '
' → logprob: -4.1454572677612305
    3. '    
' → logprob: -6.1454572677612305
    4. 'x' → logprob: -7.0204572677612305
    5. 'n' → logprob: -8.39545726776123
    6. '  
' → logprob: -8.52045726776123
    7. 'd' → logprob: -8.89545726776123
    8. '  ' → logprob: -9.02045726776123
    9. '   
' → logprob: -9.14545726776123
    10. ' x' → logprob: -9.27045726776123

Token 168: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.016245855018496513
    2. ' x' → logprob: -4.1412458419799805
    3. '   ' → logprob: -8.89124584197998
    4. ',' → logprob: -9.89124584197998
    5. ',x' → logprob: -11.76624584197998
    6. ' 
' → logprob: -12.51624584197998
    7. ' ,' → logprob: -12.89124584197998
    8. ' ' → logprob: -13.26624584197998
    9. '    
' → logprob: -13.51624584197998
    10. '	x' → logprob: -13.64124584197998

Token 169: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001215475145727396
    2. ',' → logprob: -7.00121545791626
    3. '<|end|>' → logprob: -8.501215934753418
    4. '4' → logprob: -9.501215934753418
    5. ',y' → logprob: -11.626215934753418
    6. '<|end|>' → logprob: -12.876215934753418
    7. '1' → logprob: -13.376215934753418
    8. ')' → logprob: -13.501215934753418
    9. ',x' → logprob: -13.626215934753418
    10. 'x' → logprob: -13.626215934753418

Token 170: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0005595852271653712
    2. ',' → logprob: -7.5005598068237305
    3. ' ,' → logprob: -12.00055980682373
    4. ',
' → logprob: -15.50055980682373
    5. ',x' → logprob: -16.375558853149414
    6. ',Y' → logprob: -16.625558853149414
    7. '<|end|>' → logprob: -16.875558853149414
    8. 'y' → logprob: -17.125558853149414
    9. ',user' → logprob: -17.875558853149414
    10. ',#' → logprob: -18.000558853149414

Token 171: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002671768015716225
    2. ',' → logprob: -9.000267028808594
    3. '3' → logprob: -9.625267028808594
    4. '[' → logprob: -10.000267028808594
    5. '=' → logprob: -11.250267028808594
    6. '<|end|>' → logprob: -11.625267028808594
    7. '```' → logprob: -12.625267028808594
    8. ' ' → logprob: -12.875267028808594
    9. 'x' → logprob: -14.625267028808594
    10. '' → logprob: -14.625267028808594

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890179008245468
    2. ' =' → logprob: -2.578901767730713
    3. ' =
' → logprob: -12.203902244567871
    4. '=
' → logprob: -12.953902244567871
    5. ')' → logprob: -13.078902244567871
    6. ' ' → logprob: -13.828902244567871
    7. '=

' → logprob: -14.203902244567871
    8. ',' → logprob: -15.078902244567871
    9. ' =)' → logprob: -15.703902244567871
    10. '<|end|>' → logprob: -15.828902244567871

Token 173: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3868752717971802
    2. ' p' → logprob: -1.1368752717971802
    3. 'y' → logprob: -13.38687515258789
    4. ' ' → logprob: -14.26187515258789
    5. '	p' → logprob: -14.76187515258789
    6. ' y' → logprob: -14.76187515258789
    7. 'x' → logprob: -15.13687515258789
    8. '   ' → logprob: -16.01187515258789
    9. '<p' → logprob: -16.19937515258789
    10. ' 
' → logprob: -16.51187515258789

Token 174: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20141762495040894
    2. '3' → logprob: -1.7014176845550537
    3. '[' → logprob: -12.951417922973633
    4. '```' → logprob: -13.451417922973633
    5. '[
' → logprob: -16.076417922973633
    6. ' ' → logprob: -16.326417922973633
    7. '34' → logprob: -16.451417922973633
    8. '-' → logprob: -17.138917922973633
    9. '1' → logprob: -17.951417922973633
    10. '   ' → logprob: -18.388917922973633

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15216796100139618
    2. '
' → logprob: -2.527168035507202
    3. '    
' → logprob: -3.527168035507202
    4. '\n' → logprob: -5.152167797088623
    5. '  
' → logprob: -5.277167797088623
    6. ':' → logprob: -5.277167797088623
    7. 'n' → logprob: -5.402167797088623
    8. ',' → logprob: -6.027167797088623
    9. ' 
' → logprob: -6.027167797088623
    10. '   
' → logprob: -6.527167797088623

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07233542203903198
    2. '
' → logprob: -2.6973354816436768
    3. '    
' → logprob: -6.322335243225098
    4. 'n' → logprob: -8.947335243225098
    5. '  
' → logprob: -9.197335243225098
    6. '   
' → logprob: -9.947335243225098
    7. '```' → logprob: -10.197335243225098
    8. '

' → logprob: -10.197335243225098
    9. '    ' → logprob: -10.447335243225098
    10. '\n' → logprob: -10.447335243225098

Token 177: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.8270815014839172
    2. ' denom' → logprob: -1.3270814418792725
    3. ' den' → logprob: -1.5770814418792725
    4. ' denominator' → logprob: -3.3270814418792725
    5. '   ' → logprob: -3.5770814418792725
    6. 'd' → logprob: -3.9520814418792725
    7. ' d' → logprob: -5.202081680297852
    8. 'det' → logprob: -7.202081680297852
    9. ' D' → logprob: -7.952081680297852
    10. '
' → logprob: -8.327081680297852

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894971013069153
    2. '=' → logprob: -2.463949680328369
    3. '  ' → logprob: -12.588950157165527
    4. ' ' → logprob: -12.838950157165527
    5. ' =
' → logprob: -13.088950157165527
    6. ')' → logprob: -14.088950157165527
    7. '   ' → logprob: -14.838950157165527
    8. '.' → logprob: -15.963950157165527
    9. ' ==' → logprob: -16.08894920349121
    10. ' =(' → logprob: -16.21394920349121

Token 179: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12747438251972198
    2. '(x' → logprob: -2.127474308013916
    3. '(' → logprob: -8.377474784851074
    4. '(y' → logprob: -8.752474784851074
    5. '((' → logprob: -9.377474784851074
    6. ' ((' → logprob: -9.627474784851074
    7. ' ' → logprob: -12.877474784851074
    8. '(float' → logprob: -13.627474784851074
    9. '   ' → logprob: -14.127474784851074
    10. 'x' → logprob: -14.627474784851074

Token 180: 'y' (ID: 88)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07246559858322144
    2. '(y' → logprob: -2.822465658187866
    3. 'x' → logprob: -4.572465419769287
    4. ' (' → logprob: -9.697465896606445
    5. 'y' → logprob: -10.072465896606445
    6. '((' → logprob: -12.697465896606445
    7. '(' → logprob: -13.072465896606445
    8. '   ' → logprob: -13.822465896606445
    9. ' x' → logprob: -15.947465896606445
    10. ' ' → logprob: -16.697465896606445

Token 181: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0020880463998764753
    2. '2' → logprob: -6.6270880699157715
    3. '1' → logprob: -7.2520880699157715
    4. '3' → logprob: -9.877087593078613
    5. '```' → logprob: -13.877087593078613
    6. '[' → logprob: -14.877087593078613
    7. ' -' → logprob: -15.127087593078613
    8. '``' → logprob: -16.68958854675293
    9. 'diff' → logprob: -17.50208854675293
    10. '
' → logprob: -17.75208854675293

Token 182: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5928816795349121
    2. '-' → logprob: -0.8428816795349121
    3. '-y' → logprob: -4.092881679534912
    4. '-x' → logprob: -9.34288215637207
    5. '2' → logprob: -12.71788215637207
    6. '-
' → logprob: -12.84288215637207
    7. '−' → logprob: -12.96788215637207
    8. '-python' → logprob: -13.34288215637207
    9. '```' → logprob: -13.84288215637207
    10. '3' → logprob: -13.84288215637207

Token 183: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.860340752406046e-05
    2. ' y' → logprob: -9.7500581741333
    3. '	y' → logprob: -15.5000581741333
    4. '   ' → logprob: -17.375059127807617
    5. ' ' → logprob: -18.000059127807617
    6. '(y' → logprob: -18.250059127807617
    7. ')y' → logprob: -19.625059127807617
    8. '  ' → logprob: -20.500059127807617
    9. '<|end|>' → logprob: -20.750059127807617
    10. ''y' → logprob: -21.000059127807617

Token 184: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013259568950161338
    2. '2' → logprob: -6.626326084136963
    3. 'y' → logprob: -18.126325607299805
    4. ' ' → logprob: -18.251325607299805
    5. '1' → logprob: -18.626325607299805
    6. '[' → logprob: -18.751325607299805
    7. ' y' → logprob: -18.751325607299805
    8. '۳' → logprob: -20.501325607299805
    9. '```' → logprob: -20.501325607299805
    10. '３' → logprob: -21.001325607299805

Token 185: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.47450342774391174
    2. ')' → logprob: -0.9745033979415894
    3. ')*' → logprob: -8.349503517150879
    4. ' )' → logprob: -8.599503517150879
    5. '   ' → logprob: -12.724503517150879
    6. '*(' → logprob: -13.474503517150879
    7. ' ' → logprob: -14.599503517150879
    8. '*)' → logprob: -14.974503517150879
    9. ')(' → logprob: -15.849503517150879
    10. ']*(' → logprob: -15.849503517150879

Token 186: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008144664578139782
    2. ' (' → logprob: -5.758144855499268
    3. '(' → logprob: -6.008144855499268
    4. 'x' → logprob: -6.008144855499268
    5. ' x' → logprob: -11.13314437866211
    6. ')' → logprob: -11.75814437866211
    7. ')(' → logprob: -12.25814437866211
    8. '(
' → logprob: -12.50814437866211
    9. '   ' → logprob: -13.50814437866211
    10. '
' → logprob: -13.50814437866211

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006266565760597587
    2. '1' → logprob: -7.375626564025879
    3. '```' → logprob: -17.000627517700195
    4. ' -' → logprob: -17.500627517700195
    5. '۲' → logprob: -17.875627517700195
    6. ' ' → logprob: -18.625627517700195
    7. '₂' → logprob: -18.813127517700195
    8. '২' → logprob: -19.625627517700195
    9. '<|end|>' → logprob: -19.875627517700195
    10. '<|end|>' → logprob: -20.000627517700195

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006068629212677479
    2. '-' → logprob: -5.131068706512451
    3. '1' → logprob: -9.006068229675293
    4. '<|end|>' → logprob: -11.131068229675293
    5. ' ' → logprob: -14.131068229675293
    6. ' -
' → logprob: -14.631068229675293
    7. '```' → logprob: -14.631068229675293
    8. '<|end|>' → logprob: -15.381068229675293
    9. ' -*-' → logprob: -15.506068229675293
    10. '2' → logprob: -15.881068229675293

Token 189: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006721536163240671
    2. ' x' → logprob: -5.006721496582031
    3. '<|end|>' → logprob: -12.131721496582031
    4. '1' → logprob: -14.506721496582031
    5. '	x' → logprob: -15.881721496582031
    6. ' ' → logprob: -17.00672149658203
    7. '<|end|>' → logprob: -17.13172149658203
    8. ')x' → logprob: -17.13172149658203
    9. '$x' → logprob: -19.13172149658203
    10. 'xref' → logprob: -19.50672149658203

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. 'x' → logprob: -18.0
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -18.25
    6. '<|end|>' → logprob: -18.375
    7. '[' → logprob: -19.125
    8. '<|end|>' → logprob: -19.25
    9. ')' → logprob: -19.4375
    10. '  ' → logprob: -20.125

Token 191: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1315193772315979
    2. ')' → logprob: -2.256519317626953
    3. '-' → logprob: -4.631519317626953
    4. ' )' → logprob: -4.756519317626953
    5. ' ' → logprob: -9.006519317626953
    6. ')-(' → logprob: -10.256519317626953
    7. '   ' → logprob: -11.756519317626953
    8. '    ' → logprob: -11.881519317626953
    9. '```' → logprob: -12.631519317626953
    10. ' -
' → logprob: -13.006519317626953

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012512356042861938
    2. '-' → logprob: -4.38751220703125
    3. ' ' → logprob: -13.38751220703125
    4. ' -
' → logprob: -14.01251220703125
    5. ' -

' → logprob: -15.76251220703125
    6. ' -(' → logprob: -17.38751220703125
    7. '-
' → logprob: -17.51251220703125
    8. ' ' → logprob: -18.01251220703125
    9. '    ' → logprob: -18.26251220703125
    10. ' ,' → logprob: -18.38751220703125

Token 193: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20576612651348114
    2. ' (' → logprob: -1.7057660818099976
    3. '(' → logprob: -5.455766201019287
    4. '(y' → logprob: -9.830765724182129
    5. '<|end|>' → logprob: -11.955765724182129
    6. '(s' → logprob: -12.455765724182129
    7. ' ' → logprob: -12.955765724182129
    8. '   ' → logprob: -13.580765724182129
    9. '(z' → logprob: -14.330765724182129
    10. '(q' → logprob: -14.705765724182129

Token 194: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0016046056989580393
    2. 'x' → logprob: -7.1266045570373535
    3. ' (' → logprob: -7.6266045570373535
    4. '(' → logprob: -8.376605033874512
    5. '(y' → logprob: -9.501605033874512
    6. '   ' → logprob: -12.626605033874512
    7. ')(' → logprob: -13.251605033874512
    8. ' x' → logprob: -14.376605033874512
    9. ')x' → logprob: -14.376605033874512
    10. ')' → logprob: -14.626605033874512

Token 195: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -12.625003814697266
    3. '۴' → logprob: -15.125003814697266
    4. '<|end|>' → logprob: -16.000003814697266
    5. '' → logprob: -16.625003814697266
    6. '৪' → logprob: -17.250003814697266
    7. '٤' → logprob: -17.625003814697266
    8. '४' → logprob: -17.750003814697266
    9. '４' → logprob: -18.812503814697266
    10. '<|end|>' → logprob: -19.000003814697266

Token 196: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5327522158622742
    2. ' -' → logprob: -0.9077522158622742
    3. '<|end|>' → logprob: -4.65775203704834
    4. ')' → logprob: -10.53275203704834
    5. '[' → logprob: -11.15775203704834
    6. 'user' → logprob: -11.53275203704834
    7. '<|end|>' → logprob: -11.65775203704834
    8. ',' → logprob: -11.78275203704834
    9. '_' → logprob: -12.28275203704834
    10. 'y' → logprob: -12.28275203704834

Token 197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005790612660348415
    2. ' x' → logprob: -5.255790710449219
    3. '<|end|>' → logprob: -7.505790710449219
    4. ' ' → logprob: -13.005790710449219
    5. ')x' → logprob: -13.880790710449219
    6. '	x' → logprob: -14.255790710449219
    7. '<|end|>' → logprob: -14.255790710449219
    8. ''x' → logprob: -14.755790710449219
    9. '(x' → logprob: -15.380790710449219
    10. ')' → logprob: -15.380790710449219

Token 198: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.875000953674316
    3. '۳' → logprob: -16.125
    4. ' ' → logprob: -16.625
    5. '<|end|>' → logprob: -16.75
    6. '৩' → logprob: -17.0
    7. 'x' → logprob: -17.125
    8. '³' → logprob: -18.0
    9. '<|end|>' → logprob: -18.375
    10. ')' → logprob: -18.6875

Token 199: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.10089273750782013
    2. ')' → logprob: -2.3508927822113037
    3. ')*' → logprob: -7.350892543792725
    4. ' )' → logprob: -10.725893020629883
    5. '*(' → logprob: -11.225893020629883
    6. ')(' → logprob: -11.850893020629883
    7. '*' → logprob: -14.600893020629883
    8. ']*(' → logprob: -14.725893020629883
    9. '*)' → logprob: -14.975893020629883
    10. '")' → logprob: -16.850893020629883

Token 200: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.01442438643425703
    2. 'y' → logprob: -4.2644243240356445
    3. '(' → logprob: -8.764424324035645
    4. ' (' → logprob: -10.014424324035645
    5. ' y' → logprob: -10.514424324035645
    6. '<|end|>' → logprob: -11.389424324035645
    7. ')(' → logprob: -11.639424324035645
    8. '	y' → logprob: -12.389424324035645
    9. '[y' → logprob: -13.014424324035645
    10. ')y' → logprob: -13.764424324035645

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.625
    3. '<|end|>' → logprob: -17.0
    4. '<|end|>' → logprob: -17.375
    5. '[' → logprob: -18.5
    6. '۲' → logprob: -18.75
    7. '₂' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. '２' → logprob: -20.375
    10. ' -' → logprob: -20.5

Token 202: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009228261187672615
    2. '-' → logprob: -5.009228229522705
    3. '<|end|>' → logprob: -6.634228229522705
    4. '1' → logprob: -6.759228229522705
    5. '<|end|>' → logprob: -10.634228706359863
    6. ' ' → logprob: -13.384228706359863
    7. '2' → logprob: -13.509228706359863
    8. '[' → logprob: -14.134228706359863
    9. ' -*-' → logprob: -14.134228706359863
    10. '—' → logprob: -14.571728706359863

Token 203: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010694891680032015
    2. ' y' → logprob: -7.12606954574585
    3. '1' → logprob: -8.251069068908691
    4. '<|end|>' → logprob: -12.626069068908691
    5. '	y' → logprob: -15.251069068908691
    6. ' ' → logprob: -15.376069068908691
    7. ')y' → logprob: -16.501070022583008
    8. '<|end|>' → logprob: -16.876070022583008
    9. '   ' → logprob: -17.376070022583008
    10. ')' → logprob: -17.876070022583008

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '<|end|>' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.25
    4. '<|end|>' → logprob: -16.625
    5. ')' → logprob: -16.75
    6. '-' → logprob: -17.25
    7. '[' → logprob: -17.25
    8. '```' → logprob: -17.5
    9. '続きを' → logprob: -18.25
    10. ',' → logprob: -19.0625

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001222508290084079
    2. ')
' → logprob: -9.2501220703125
    3. ' )' → logprob: -10.8751220703125
    4. ')**' → logprob: -14.1251220703125
    5. '))' → logprob: -14.2501220703125
    6. ':' → logprob: -14.3751220703125
    7. '<|end|>' → logprob: -14.5001220703125
    8. ')

' → logprob: -14.7501220703125
    9. ')}' → logprob: -14.8751220703125
    10. '):' → logprob: -15.0001220703125

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2469170093536377
    2. '
' → logprob: -1.3719170093536377
    3. ':' → logprob: -1.6219170093536377
    4. ' if' → logprob: -2.3719170093536377
    5. ' ' → logprob: -2.8719170093536377
    6. ',' → logprob: -3.1219170093536377
    7. ':
' → logprob: -3.8719170093536377
    8. '<|end|>' → logprob: -4.621916770935059
    9. ')' → logprob: -4.871916770935059
    10. '\n' → logprob: -4.996916770935059

Token 207: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8808600902557373
    2. '   ' → logprob: -1.2558600902557373
    3. 'if' (adapté à ' if') → logprob: -2.1308600902557373
    4. '
' → logprob: -2.2558600902557373
    5. ' ' → logprob: -3.8808600902557373
    6. 'i' → logprob: -4.380860328674316
    7. ' 
' → logprob: -4.630860328674316
    8. '\n' → logprob: -4.880860328674316
    9. ':' → logprob: -5.255860328674316
    10. '    
' → logprob: -5.755860328674316

Token 208: ' abs' (ID: 8443)
  Prédit: ' denom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.0009250381262972951
    2. 'den' → logprob: -7.000925064086914
    3. ' den' → logprob: -11.500925064086914
    4. ' abs' → logprob: -13.000925064086914
    5. ' ' → logprob: -14.625925064086914
    6. ' denominator' → logprob: -14.875925064086914
    7. ' denomin' → logprob: -16.375925064086914
    8. ' not' → logprob: -16.875925064086914
    9. ' d' → logprob: -17.000925064086914
    10. ' ' → logprob: -17.375925064086914

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. 'den' → logprob: -13.625001907348633
    3. '(
' → logprob: -14.750001907348633
    4. '-den' → logprob: -16.000001907348633
    5. 'Den' → logprob: -17.250001907348633
    6. '(

' → logprob: -17.750001907348633
    7. '(D' → logprob: -18.000001907348633
    8. ' (' → logprob: -18.000001907348633
    9. '_den' → logprob: -18.000001907348633
    10. '_DEN' → logprob: -18.125001907348633

Token 210: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.023246990516781807
    2. '(' → logprob: -3.773247003555298
    3. ' denom' → logprob: -13.523246765136719
    4. ')' → logprob: -17.02324676513672
    5. '-den' → logprob: -17.52324676513672
    6. 'Den' → logprob: -19.14824676513672
    7. ' den' → logprob: -19.27324676513672
    8. '```' → logprob: -20.02324676513672
    9. 'deny' → logprob: -20.14824676513672
    10. '_den' → logprob: -20.27324676513672

Token 211: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -2.7848862373502925e-05
    2. '   ' → logprob: -11.750027656555176
    3. '=' → logprob: -12.250027656555176
    4. '1' → logprob: -13.375027656555176
    5. '==' → logprob: -13.500027656555176
    6. '```' → logprob: -13.500027656555176
    7. ')' → logprob: -13.625027656555176
    8. '
' → logprob: -13.875027656555176
    9. 'o' → logprob: -13.875027656555176
    10. '>' → logprob: -14.125027656555176

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.006006828509271e-05
    2. ')<' → logprob: -9.625080108642578
    3. ' )' → logprob: -11.625080108642578
    4. ' <' → logprob: -13.250080108642578
    5. ')==' → logprob: -13.625080108642578
    6. '<' → logprob: -13.750080108642578
    7. ')<=' → logprob: -15.500080108642578
    8. ' ' → logprob: -15.625080108642578
    9. '```' → logprob: -16.250080108642578
    10. '[' → logprob: -16.625080108642578

Token 213: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3375316560268402
    2. ' ==' → logprob: -1.9625316858291626
    3. '<' → logprob: -2.087531566619873
    4. '==' → logprob: -3.837531566619873
    5. ' >' → logprob: -9.087532043457031
    6. '>' → logprob: -9.337532043457031
    7. '=' → logprob: -9.587532043457031
    8. ' <=' → logprob: -9.962532043457031
    9. ' ' → logprob: -10.087532043457031
    10. ')' → logprob: -10.337532043457031

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '   ' → logprob: -21.389163970947266
    4. '
' → logprob: -21.389163970947266
    5. '```' → logprob: -22.014163970947266
    6. '=' → logprob: -22.639163970947266
    7. ' sys' → logprob: -22.764163970947266
    8. 'sys' → logprob: -22.889163970947266
    9. ' ' → logprob: -23.014163970947266
    10. '１' → logprob: -23.139163970947266

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -23.125
    4. '   ' → logprob: -23.25
    5. '
' → logprob: -25.0
    6. '=' → logprob: -25.25
    7. '(' → logprob: -25.375
    8. '0' → logprob: -26.125
    9. 'sys' → logprob: -26.25
    10. '-' → logprob: -26.25

Token 216: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.0
    3. '0' → logprob: -18.875
    4. '-e' → logprob: -20.0
    5. 'E' → logprob: -21.625
    6. '.' → logprob: -22.25
    7. '.e' → logprob: -22.25
    8. ' e' → logprob: -22.375
    9. 'ｅ' → logprob: -23.0
    10. 'е' → logprob: -23.125

Token 217: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -16.125
    3. '-
' → logprob: -18.25
    4. '```' → logprob: -20.125
    5. '-​' → logprob: -20.25
    6. 'e' → logprob: -20.25
    7. '−' → logprob: -20.5
    8. '9' → logprob: -20.625
    9. '-
' → logprob: -20.875
    10. '-)' → logprob: -20.875

Token 218: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10732275992631912
    2. '9' → logprob: -2.3573226928710938
    3. '12' → logprob: -5.357322692871094
    4. '8' → logprob: -6.357322692871094
    5. '15' → logprob: -7.732322692871094
    6. '14' → logprob: -9.357322692871094
    7. '7' → logprob: -9.482322692871094
    8. '13' → logprob: -10.607322692871094
    9. '1' → logprob: -12.232322692871094
    10. '```' → logprob: -12.232322692871094

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015245062531903386
    2. ':
' → logprob: -7.126524448394775
    3. ':return' → logprob: -7.251524448394775
    4. ' :' → logprob: -11.876524925231934
    5. '):' → logprob: -12.751524925231934
    6. '   ' → logprob: -15.001524925231934
    7. ',' → logprob: -15.626524925231934
    8. ':

' → logprob: -16.501523971557617
    9. '):
' → logprob: -16.626523971557617
    10. ' return' → logprob: -16.751523971557617

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068765184842050076
    2. '    ' → logprob: -5.256876468658447
    3. '   ' → logprob: -6.631876468658447
    4. ' return' → logprob: -9.506876945495605
    5. ' ' → logprob: -9.631876945495605
    6. '        
' → logprob: -10.006876945495605
    7. ' 
' → logprob: -10.631876945495605
    8. '    
' → logprob: -10.631876945495605
    9. '     
' → logprob: -10.631876945495605
    10. '     ' → logprob: -10.756876945495605

Token 221: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07937011122703552
    2. 'return' (adapté à ' return') → logprob: -2.5793700218200684
    3. '   ' → logprob: -7.704370021820068
    4. '    ' → logprob: -11.454370498657227
    5. ' None' → logprob: -11.579370498657227
    6. '	return' → logprob: -12.704370498657227
    7. '    
' → logprob: -13.329370498657227
    8. '
' → logprob: -13.329370498657227
    9. ' ' → logprob: -13.954370498657227
    10. 'None' → logprob: -13.954370498657227

Token 222: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0004309076175559312
    2. 'None' → logprob: -7.750431060791016
    3. ' ' → logprob: -16.625431060791016
    4. ' N' → logprob: -17.250431060791016
    5. ' none' → logprob: -18.000431060791016
    6. '(None' → logprob: -19.000431060791016
    7. ',None' → logprob: -19.875431060791016
    8. ' No' → logprob: -20.750431060791016
    9. '  ' → logprob: -21.500431060791016
    10. '_None' → logprob: -21.500431060791016

Token 223: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0072124004364014
    2. '    
' → logprob: -1.1322124004364014
    3. '
' → logprob: -1.2572124004364014
    4. '\n' → logprob: -4.1322126388549805
    5. ',' → logprob: -5.1322126388549805
    6. '  
' → logprob: -6.0072126388549805
    7. '   
' → logprob: -6.3822126388549805
    8. ' 
' → logprob: -7.6322126388549805
    9. '     
' → logprob: -8.13221263885498
    10. '        
' → logprob: -9.00721263885498

Token 224: ' Parallel' (ID: 89035)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.002844579517841339
    2. ' ' → logprob: -6.75284481048584
    3. 'None' → logprob: -7.12784481048584
    4. ' No' → logprob: -7.25284481048584
    5. ' lines' → logprob: -10.62784481048584
    6. ' Lines' → logprob: -10.75284481048584
    7. ' #' → logprob: -10.87784481048584
    8. 'No' → logprob: -11.00284481048584
    9. ' return' → logprob: -11.12784481048584
    10. '   ' → logprob: -11.25284481048584

Token 225: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' coinc' (ID: 31733)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.4020592272281647
    2. ' coinc' → logprob: -1.4020591974258423
    3. 'col' → logprob: -2.527059316635132
    4. 'co' → logprob: -5.777059078216553
    5. ' nearly' → logprob: -7.027059078216553
    6. ' overlapping' → logprob: -7.277059078216553
    7. ' lines' → logprob: -9.402059555053711
    8. 'over' → logprob: -9.527059555053711
    9. 'coin' → logprob: -9.777059555053711
    10. ' co' → logprob: -10.527059555053711

Token 227: 'ident' (ID: 2477)
  Prédit: 'ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.017073193565011024
    2. 'ide' → logprob: -4.267073154449463
    3. 'iden' → logprob: -7.017073154449463
    4. 'iding' → logprob: -7.642073154449463
    5. 'id' → logprob: -7.892073154449463
    6. '#' → logprob: -8.267073631286621
    7. 'idental' → logprob: -8.642073631286621
    8. '_ident' → logprob: -9.142073631286621
    9. 'dent' → logprob: -9.267073631286621
    10. '```' → logprob: -9.392073631286621

Token 228: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18102024495601654
    2. '    
' → logprob: -3.3060202598571777
    3. '  
' → logprob: -3.5560202598571777
    4. ' lines' → logprob: -3.6810202598571777
    5. '\n' → logprob: -3.8060202598571777
    6. ',' → logprob: -4.556020259857178
    7. '<|end|>' → logprob: -4.556020259857178
    8. ' 
' → logprob: -5.056020259857178
    9. 'x' → logprob: -5.681020259857178
    10. ')' → logprob: -5.806020259857178

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1571318507194519
    2. '    
' → logprob: -2.4071319103240967
    3. 'n' → logprob: -3.7821319103240967
    4. '
' → logprob: -4.407131671905518
    5. ',' → logprob: -4.907131671905518
    6. '\n' → logprob: -5.282131671905518
    7. '  
' → logprob: -6.407131671905518
    8. ')' → logprob: -6.532131671905518
    9. '<|end|>' → logprob: -7.282131671905518
    10. '   
' → logprob: -7.532131671905518

Token 230: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3890843093395233
    2. 't' (adapté à ' t') → logprob: -1.1390843391418457
    3. 'px' → logprob: -7.264084339141846
    4. ' px' → logprob: -7.639084339141846
    5. ' ua' → logprob: -7.764084339141846
    6. '   ' → logprob: -8.764083862304688
    7. 'tx' → logprob: -9.139083862304688
    8. ' Px' → logprob: -9.639083862304688
    9. 'x' → logprob: -9.764083862304688
    10. 's' → logprob: -9.764083862304688

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014189241454005241
    2. '=' → logprob: -4.26418924331665
    3. ' =(' → logprob: -11.514188766479492
    4. ')' → logprob: -12.639188766479492
    5. '1' → logprob: -12.764188766479492
    6. 's' → logprob: -13.014188766479492
    7. ' =
' → logprob: -13.264188766479492
    8. ' ' → logprob: -13.389188766479492
    9. '0' → logprob: -13.889188766479492
    10. ',' → logprob: -14.389188766479492

Token 232: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.062063585966825485
    2. ' ((' → logprob: -2.812063694000244
    3. '(' → logprob: -9.812063217163086
    4. '(((' → logprob: -10.312063217163086
    5. ' ' → logprob: -12.562063217163086
    6. '   ' → logprob: -13.437063217163086
    7. ' (' → logprob: -13.812063217163086
    8. '  ' → logprob: -14.312063217163086
    9. '	' → logprob: -14.437063217163086
    10. ' (((' → logprob: -14.812063217163086

Token 233: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016762834042310715
    2. '(x' → logprob: -4.141762733459473
    3. 'y' → logprob: -7.391762733459473
    4. '(y' → logprob: -9.141762733459473
    5. '(' → logprob: -13.141762733459473
    6. ' (' → logprob: -13.391762733459473
    7. ' x' → logprob: -13.766762733459473
    8. '_x' → logprob: -15.766762733459473
    9. '((' → logprob: -16.14176368713379
    10. '   ' → logprob: -17.64176368713379

Token 234: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03382054716348648
    2. '3' → logprob: -3.408820629119873
    3. '4' → logprob: -8.658820152282715
    4. '```' → logprob: -14.158820152282715
    5. '(' → logprob: -16.22132110595703
    6. '``' → logprob: -16.65882110595703
    7. '"""' → logprob: -17.03382110595703
    8. '2' → logprob: -17.03382110595703
    9. '[' → logprob: -17.28382110595703
    10. ''''' → logprob: -17.53382110595703

Token 235: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023250136524438858
    2. '-' → logprob: -3.773250102996826
    3. '<|end|>' → logprob: -13.273250579833984
    4. '-x' → logprob: -13.773250579833984
    5. ' ' → logprob: -13.898250579833984
    6. 'x' → logprob: -15.023250579833984
    7. ' -
' → logprob: -15.773250579833984
    8. '3' → logprob: -15.898250579833984
    9. '<|end|>' → logprob: -16.648250579833984
    10. '−' → logprob: -16.773250579833984

Token 236: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002978048287332058
    2. ' x' → logprob: -8.125297546386719
    3. '(x' → logprob: -14.750297546386719
    4. ')x' → logprob: -14.750297546386719
    5. '<|end|>' → logprob: -14.750297546386719
    6. '[' → logprob: -16.75029754638672
    7. '...' → logprob: -16.87529754638672
    8. ',' → logprob: -17.12529754638672
    9. '<|end|>' → logprob: -17.12529754638672
    10. ' ' → logprob: -17.18779754638672

Token 237: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.584239938296378e-06
    2. 'x' → logprob: -12.125007629394531
    3. ' ' → logprob: -14.875007629394531
    4. '[' → logprob: -14.875007629394531
    5. '...' → logprob: -15.125007629394531
    6. '<|end|>' → logprob: -15.125007629394531
    7. 'p' → logprob: -15.750007629394531
    8. '=' → logprob: -16.12500762939453
    9. ',' → logprob: -16.37500762939453
    10. '<|end|>' → logprob: -16.43750762939453

Token 238: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.10028344392776489
    2. ')' → logprob: -2.35028338432312
    3. ')*' → logprob: -9.7252836227417
    4. ' )' → logprob: -11.3502836227417
    5. '*(' → logprob: -12.4752836227417
    6. ']*(' → logprob: -14.4752836227417
    7. ')(' → logprob: -14.7252836227417
    8. '*)' → logprob: -15.1002836227417
    9. ')**' → logprob: -17.100282669067383
    10. '*' → logprob: -17.225282669067383

Token 239: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.000146687583765015
    2. '(' → logprob: -8.875146865844727
    3. ' (' → logprob: -12.125146865844727
    4. ')(' → logprob: -14.000146865844727
    5. '   ' → logprob: -15.500146865844727
    6. '(Y' → logprob: -16.000146865844727
    7. 'y' → logprob: -16.125146865844727
    8. ')' → logprob: -17.375146865844727
    9. '(
' → logprob: -17.625146865844727
    10. ' y' → logprob: -18.500146865844727

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' -' → logprob: -18.0
    3. '１' → logprob: -18.25
    4. '۱' → logprob: -18.25
    5. '১' → logprob: -18.5
    6. '१' → logprob: -18.875
    7. '' → logprob: -19.5625
    8. '```' → logprob: -19.8125
    9. '١' → logprob: -20.0625
    10. '
' → logprob: -20.9375

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014141082763672
    2. '-' → logprob: -1.7014141082763672
    3. ')' → logprob: -15.076414108276367
    4. '-x' → logprob: -15.576414108276367
    5. ' ' → logprob: -15.826414108276367
    6. ' y' → logprob: -17.201414108276367
    7. '   ' → logprob: -17.201414108276367
    8. ' -
' → logprob: -17.451414108276367
    9. '-y' → logprob: -17.451414108276367
    10. '-
' → logprob: -17.576414108276367

Token 242: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00043221889063715935
    2. ' y' → logprob: -7.750432014465332
    3. '	y' → logprob: -13.750432014465332
    4. '(y' → logprob: -15.875432014465332
    5. 'x' → logprob: -16.00043296813965
    6. ')y' → logprob: -16.00043296813965
    7. '   ' → logprob: -17.87543296813965
    8. ')' → logprob: -18.50043296813965
    9. 'Y' → logprob: -18.62543296813965
    10. 'yj' → logprob: -19.12543296813965

Token 243: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033682696521282196
    2. '2' → logprob: -3.4086825847625732
    3. '0' → logprob: -10.908682823181152
    4. '3' → logprob: -11.533682823181152
    5. '[' → logprob: -12.283682823181152
    6. '```' → logprob: -13.658682823181152
    7. ' ' → logprob: -14.283682823181152
    8. '4' → logprob: -14.283682823181152
    9. '
' → logprob: -14.533682823181152
    10. ' y' → logprob: -15.158682823181152

Token 244: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7921203374862671
    2. ')' → logprob: -0.9171203374862671
    3. '-' → logprob: -1.917120337486267
    4. ' )' → logprob: -8.292119979858398
    5. ')-(' → logprob: -9.667119979858398
    6. ' ' → logprob: -10.667119979858398
    7. '-(' → logprob: -10.792119979858398
    8. ')-' → logprob: -10.917119979858398
    9. '}' → logprob: -11.667119979858398
    10. '```' → logprob: -11.792119979858398

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17977142333984375
    2. '-' → logprob: -1.8047714233398438
    3. ' ' → logprob: -11.429771423339844
    4. ')' → logprob: -11.804771423339844
    5. '-
' → logprob: -13.054771423339844
    6. '   ' → logprob: -13.304771423339844
    7. '-(' → logprob: -13.804771423339844
    8. '```' → logprob: -14.054771423339844
    9. ' -
' → logprob: -14.179771423339844
    10. ',' → logprob: -14.679771423339844

Token 246: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.03829427808523178
    2. ' (' → logprob: -3.2882943153381348
    3. '(x' → logprob: -8.538293838500977
    4. '(' → logprob: -9.788293838500977
    5. ' ' → logprob: -15.038293838500977
    6. '(s' → logprob: -15.413293838500977
    7. '   ' → logprob: -16.038293838500977
    8. '(Y' → logprob: -16.538293838500977
    9. '  ' → logprob: -16.788293838500977
    10. '<|end|>' → logprob: -17.413293838500977

Token 247: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.001096403575502336
    2. ' (' → logprob: -6.876096248626709
    3. '(' → logprob: -10.626096725463867
    4. '(x' → logprob: -10.626096725463867
    5. 'y' → logprob: -11.376096725463867
    6. ' y' → logprob: -13.501096725463867
    7. '<|end|>' → logprob: -14.626096725463867
    8. ')(' → logprob: -15.001096725463867
    9. '   ' → logprob: -15.001096725463867
    10. ' ' → logprob: -15.251096725463867

Token 248: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. '۴' → logprob: -16.0
    3. '৪' → logprob: -16.375
    4. '४' → logprob: -17.125
    5. '<|end|>' → logprob: -17.125
    6. '[' → logprob: -17.5
    7. '' → logprob: -18.125
    8. '٤' → logprob: -18.5
    9. '４' → logprob: -18.75
    10. '<|end|>' → logprob: -19.5

Token 249: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0037328568287193775
    2. '-' → logprob: -5.753732681274414
    3. '<|end|>' → logprob: -7.503732681274414
    4. '<|end|>' → logprob: -13.128732681274414
    5. ' ' → logprob: -13.503732681274414
    6. '...' → logprob: -15.753732681274414
    7. ' -*-' → logprob: -16.378732681274414
    8. ' –' → logprob: -16.503732681274414
    9. ')' → logprob: -16.878732681274414
    10. '-user' → logprob: -17.066232681274414

Token 250: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031840058509260416
    2. ' y' → logprob: -5.753183841705322
    3. '<|end|>' → logprob: -12.37818431854248
    4. 'x' → logprob: -13.50318431854248
    5. '	y' → logprob: -15.37818431854248
    6. ' ' → logprob: -15.37818431854248
    7. '(y' → logprob: -16.378183364868164
    8. ')' → logprob: -17.253183364868164
    9. ')y' → logprob: -17.253183364868164
    10. '...' → logprob: -17.503183364868164

Token 251: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.625001907348633
    3. '1' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.250001907348633
    5. ')' → logprob: -16.437501907348633
    6. ',' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '<|end|>' → logprob: -17.125001907348633
    9. 'import' → logprob: -17.187501907348633
    10. 'x' → logprob: -17.312501907348633

Token 252: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.10565685480833054
    2. ')' → logprob: -2.355656862258911
    3. ')*' → logprob: -5.355656623840332
    4. '*(' → logprob: -7.605656623840332
    5. '*' → logprob: -8.980656623840332
    6. '*)' → logprob: -9.980656623840332
    7. ')(' → logprob: -10.480656623840332
    8. '*)(' → logprob: -11.605656623840332
    9. ' )' → logprob: -12.480656623840332
    10. ']*(' → logprob: -13.855656623840332

Token 253: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20143340528011322
    2. '(x' → logprob: -1.7014334201812744
    3. ' x' → logprob: -11.076433181762695
    4. '(' → logprob: -13.826433181762695
    5. ' (' → logprob: -14.076433181762695
    6. ')x' → logprob: -14.076433181762695
    7. '[x' → logprob: -14.201433181762695
    8. '	x' → logprob: -14.326433181762695
    9. '{x' → logprob: -14.701433181762695
    10. '   ' → logprob: -16.326433181762695

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. ' -' → logprob: -20.125
    4. '```' → logprob: -21.375
    5. '[' → logprob: -22.125
    6. '   ' → logprob: -22.25
    7. 'user' → logprob: -22.375
    8. '<|end|>' → logprob: -22.75
    9. '১' → logprob: -23.3125
    10. '१' → logprob: -23.3125

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0007152927573770285
    2. '-' → logprob: -7.250715255737305
    3. '<|end|>' → logprob: -13.000715255737305
    4. '1' → logprob: -13.375715255737305
    5. ' ' → logprob: -13.875715255737305
    6. ' -
' → logprob: -15.375715255737305
    7. ')' → logprob: -15.500715255737305
    8. ' +' → logprob: -17.125715255737305
    9. '<|end|>' → logprob: -17.250715255737305
    10. '[' → logprob: -17.625715255737305

Token 256: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012415809032972902
    2. ' x' → logprob: -9.000123977661133
    3. 'y' → logprob: -14.500123977661133
    4. '3' → logprob: -15.625123977661133
    5. '1' → logprob: -15.750123977661133
    6. '```' → logprob: -18.500123977661133
    7. ')x' → logprob: -19.000123977661133
    8. 'p' → logprob: -19.125123977661133
    9. 's' → logprob: -19.500123977661133
    10. ' ' → logprob: -19.625123977661133

Token 257: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009810864925384521
    2. ')' → logprob: -5.009810924530029
    3. ' ' → logprob: -6.134810924530029
    4. '```' → logprob: -8.009810447692871
    5. ',' → logprob: -8.884810447692871
    6. '-' → logprob: -9.009810447692871
    7. '<|end|>' → logprob: -9.134810447692871
    8. ' )' → logprob: -10.134810447692871
    9. '])' → logprob: -10.634810447692871
    10. '=' → logprob: -10.759810447692871

Token 258: '))/' (ID: 74514)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011534435179783031
    2. ' )' → logprob: -9.250115394592285
    3. ')/' → logprob: -11.500115394592285
    4. ')/(' → logprob: -11.750115394592285
    5. '))' → logprob: -14.875115394592285
    6. ')
' → logprob: -15.000115394592285
    7. '   ' → logprob: -15.250115394592285
    8. ')t' → logprob: -16.37511444091797
    9. ' ' → logprob: -16.62511444091797
    10. ')**' → logprob: -17.87511444091797

Token 259: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -6.392202976712724e-06
    2. ' denom' → logprob: -12.000006675720215
    3. '(' → logprob: -16.6250057220459
    4. '   ' → logprob: -19.6250057220459
    5. ' den' → logprob: -19.8750057220459
    6. '((' → logprob: -20.1250057220459
    7. '```' → logprob: -20.5000057220459
    8. 'float' → logprob: -21.2500057220459
    9. ' ' → logprob: -21.6250057220459
    10. 'Den' → logprob: -21.8750057220459

Token 260: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -8.537868779967539e-06
    2. 'um' → logprob: -12.000008583068848
    3. 'ом' → logprob: -14.250008583068848
    4. 'm' → logprob: -14.750008583068848
    5. 'orm' → logprob: -15.500008583068848
    6. '*' → logprob: -15.625008583068848
    7. '#' → logprob: -15.750008583068848
    8. ' om' → logprob: -16.25000762939453
    9. '-' → logprob: -16.50000762939453
    10. '**' → logprob: -16.62500762939453

Token 261: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4932139217853546
    2. ')' → logprob: -1.6182138919830322
    3. '   ' → logprob: -2.3682138919830322
    4. ' return' → logprob: -3.3682138919830322
    5. ' ' → logprob: -4.493214130401611
    6. ' ,' → logprob: -4.868214130401611
    7. '<|end|>' → logprob: -5.118214130401611
    8. 'return' → logprob: -5.368214130401611
    9. ' )' → logprob: -5.493214130401611
    10. '#' → logprob: -5.868214130401611

Token 263: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.429671287536621
    2. ',' → logprob: -1.679671287536621
    3. ' return' → logprob: -1.679671287536621
    4. 'x' (adapté à ' x') → logprob: -2.054671287536621
    5. ' ' → logprob: -2.429671287536621
    6. ' x' → logprob: -3.304671287536621
    7. ' )' → logprob: -3.429671287536621
    8. 'return' → logprob: -4.304671287536621
    9. '   ' → logprob: -4.429671287536621
    10. ' p' → logprob: -4.429671287536621

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09356968849897385
    2. ' =' → logprob: -2.468569755554199
    3. ',' → logprob: -5.968569755554199
    4. '1' → logprob: -6.843569755554199
    5. '=int' → logprob: -7.968569755554199
    6. '_inter' → logprob: -8.3435697555542
    7. '_' → logprob: -9.0935697555542
    8. '_interp' → logprob: -9.8435697555542
    9. 'i' → logprob: -10.0935697555542
    10. ' ' → logprob: -10.4685697555542

Token 265: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061968132853507996
    2. ' x' → logprob: -2.8119680881500244
    3. '   ' → logprob: -14.686967849731445
    4. ' ' → logprob: -16.811967849731445
    5. '	x' → logprob: -17.811967849731445
    6. '(x' → logprob: -20.311967849731445
    7. '"x' → logprob: -20.436967849731445
    8. '  ' → logprob: -20.811967849731445
    9. ',x' → logprob: -21.936967849731445
    10. '    ' → logprob: -22.061967849731445

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -16.125
    3. 't' → logprob: -16.125
    4. ' ' → logprob: -16.75
    5. '+' → logprob: -16.875
    6. ' +' → logprob: -17.0
    7. ',' → logprob: -17.125
    8. '[' → logprob: -18.0
    9. ' t' → logprob: -18.25
    10. '.' → logprob: -18.5

Token 267: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25199607014656067
    2. '+' → logprob: -1.5019960403442383
    3. '+t' → logprob: -9.626996040344238
    4. '+y' → logprob: -15.376996040344238
    5. '+x' → logprob: -15.626996040344238
    6. ' plus' → logprob: -16.001996994018555
    7. ' ' → logprob: -16.126996994018555
    8. ' +
' → logprob: -16.626996994018555
    9. '＋' → logprob: -16.876996994018555
    10. '```' → logprob: -17.126996994018555

Token 268: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519359588623047
    2. ' t' → logprob: -1.5019359588623047
    3. '(t' → logprob: -12.126935958862305
    4. ' (' → logprob: -13.501935958862305
    5. ' ' → logprob: -17.126935958862305
    6. '(' → logprob: -18.001935958862305
    7. '(x' → logprob: -18.376935958862305
    8. '	t' → logprob: -19.001935958862305
    9. '`t' → logprob: -20.501935958862305
    10. '   ' → logprob: -20.751935958862305

Token 269: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.298288494348526
    2. ' *' → logprob: -2.048288583755493
    3. '*(' → logprob: -2.048288583755493
    4. ' *(' → logprob: -13.923288345336914
    5. '*((' → logprob: -14.173288345336914
    6. ' ' → logprob: -16.173288345336914
    7. ' ' → logprob: -16.423288345336914
    8. '```' → logprob: -16.798288345336914
    9. '**' → logprob: -17.048288345336914
    10. '*x' → logprob: -17.298288345336914

Token 270: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.774276774493046e-05
    2. ' x' → logprob: -10.500038146972656
    3. '(x' → logprob: -11.500038146972656
    4. '	x' → logprob: -19.500038146972656
    5. ' (' → logprob: -21.750038146972656
    6. ' ' → logprob: -22.250038146972656
    7. '   ' → logprob: -22.375038146972656
    8. ')x' → logprob: -22.875038146972656
    9. '"x' → logprob: -23.250038146972656
    10. '(' → logprob: -24.375038146972656

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -15.625
    3. ' ' → logprob: -16.75
    4. '```' → logprob: -19.625
    5. '۲' → logprob: -20.125
    6. '₂' → logprob: -20.125
    7. '-' → logprob: -20.25
    8. '
' → logprob: -20.625
    9. '' → logprob: -21.25
    10. '   ' → logprob: -21.5625

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003178071230649948
    2. '-' → logprob: -5.753178119659424
    3. '-x' → logprob: -15.753177642822266
    4. ' ' → logprob: -15.878177642822266
    5. '<|end|>' → logprob: -17.378177642822266
    6. ' -
' → logprob: -17.503177642822266
    7. ' ' → logprob: -18.753177642822266
    8. ' –' → logprob: -18.878177642822266
    9. '```' → logprob: -19.378177642822266
    10. '−' → logprob: -19.753177642822266

Token 273: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024820810649544
    2. ' x' → logprob: -6.002481937408447
    3. '1' → logprob: -12.002482414245605
    4. ' ' → logprob: -15.627482414245605
    5. '<|end|>' → logprob: -16.87748146057129
    6. ')x' → logprob: -17.62748146057129
    7. '	x' → logprob: -18.37748146057129
    8. '  ' → logprob: -18.75248146057129
    9. '   ' → logprob: -19.12748146057129
    10. '```' → logprob: -19.37748146057129

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -18.0
    4. '<|end|>' → logprob: -18.125
    5. '2' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. '[' → logprob: -20.25
    8. '<|end|>' → logprob: -20.375
    9. '   ' → logprob: -21.0
    10. '  ' → logprob: -21.375

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003364158037584275
    2. ')
' → logprob: -8.000336647033691
    3. ' )' → logprob: -14.125336647033691
    4. ')

' → logprob: -16.375335693359375
    5. ')x' → logprob: -16.500335693359375
    6. ')y' → logprob: -16.625335693359375
    7. ')
' → logprob: -17.000335693359375
    8. '),' → logprob: -18.000335693359375
    9. '   ' → logprob: -18.875335693359375
    10. ' )
' → logprob: -19.000335693359375

Token 276: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0814437866210938
    2. ' y' → logprob: -1.0814437866210938
    3. 'y' → logprob: -1.2064437866210938
    4. '   ' → logprob: -4.831443786621094
    5. ',y' → logprob: -4.956443786621094
    6. ',' → logprob: -5.831443786621094
    7. '    
' → logprob: -5.956443786621094
    8. ' 
' → logprob: -7.331443786621094
    9. '\n' → logprob: -7.831443786621094
    10. '  
' → logprob: -8.581443786621094

Token 277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.029751529917120934
    2. ' y' → logprob: -3.5297515392303467
    3. ' 
' → logprob: -15.029751777648926
    4. '	y' → logprob: -15.404751777648926
    5. ',y' → logprob: -15.779751777648926
    6. ',' → logprob: -16.40475082397461
    7. 'x' → logprob: -16.65475082397461
    8. ' ' → logprob: -16.77975082397461
    9. '    
' → logprob: -16.77975082397461
    10. '
' → logprob: -17.02975082397461

Token 278: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5357846617698669
    2. ' +' → logprob: -1.9107847213745117
    3. '<|end|>' → logprob: -1.9107847213745117
    4. '=' → logprob: -2.4107847213745117
    5. ' =' → logprob: -4.035784721374512
    6. ' ' → logprob: -5.410784721374512
    7. '1' → logprob: -5.785784721374512
    8. ' +=' → logprob: -6.535784721374512
    9. ')' → logprob: -7.285784721374512
    10. '+=' → logprob: -7.910784721374512

Token 279: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888978719711304
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -16.953889846801758
    4. '   ' → logprob: -17.578889846801758
    5. '1' → logprob: -19.703889846801758
    6. ' ' → logprob: -20.078889846801758
    7. '(y' → logprob: -21.328889846801758
    8. '0' → logprob: -21.828889846801758
    9. 'line' → logprob: -21.828889846801758
    10. ')y' → logprob: -21.828889846801758

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014240018092095852
    2. '+' → logprob: -4.26423978805542
    3. '2' → logprob: -9.889240264892578
    4. ' +' → logprob: -11.139240264892578
    5. '-' → logprob: -11.889240264892578
    6. ' ' → logprob: -13.764240264892578
    7. '+y' → logprob: -14.264240264892578
    8. '```' → logprob: -14.264240264892578
    9. '   ' → logprob: -14.764240264892578
    10. '+
' → logprob: -14.889240264892578

Token 281: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141734182834625
    2. ' +' → logprob: -1.701417326927185
    3. '+t' → logprob: -12.451416969299316
    4. '+y' → logprob: -17.576417922973633
    5. ' ' → logprob: -18.201417922973633
    6. '＋' → logprob: -18.326417922973633
    7. ')' → logprob: -18.701417922973633
    8. '+
' → logprob: -18.826417922973633
    9. '<|end|>' → logprob: -19.076417922973633
    10. '+r' → logprob: -19.201417922973633

Token 282: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.47407740354537964
    2. 't' → logprob: -0.9740774035453796
    3. '`t' → logprob: -15.974077224731445
    4. '	t' → logprob: -16.349077224731445
    5. '(t' → logprob: -17.099077224731445
    6. ')t' → logprob: -17.224077224731445
    7. ' ' → logprob: -17.724077224731445
    8. '   ' → logprob: -18.474077224731445
    9. '0' → logprob: -19.349077224731445
    10. 's' → logprob: -19.474077224731445

Token 283: '*(' (ID: 14793)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4302389919757843
    2. '+' → logprob: -1.055238962173462
    3. '*' → logprob: -7.805239200592041
    4. '*(' → logprob: -7.930239200592041
    5. '+(' → logprob: -8.055238723754883
    6. '<|end|>' → logprob: -8.180238723754883
    7. ' *' → logprob: -8.805238723754883
    8. ')' → logprob: -11.680238723754883
    9. ' +(' → logprob: -12.430238723754883
    10. '-' → logprob: -12.930238723754883

Token 284: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.015139001421630383
    2. 'x' → logprob: -4.390139102935791
    3. 't' → logprob: -6.390139102935791
    4. ' y' → logprob: -7.515139102935791
    5. ')' → logprob: -8.640138626098633
    6. '(y' → logprob: -9.390138626098633
    7. '2' → logprob: -9.515138626098633
    8. '1' → logprob: -11.140138626098633
    9. '```' → logprob: -11.265138626098633
    10. '   ' → logprob: -11.265138626098633

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1792433112859726
    2. '1' → logprob: -2.179243326187134
    3. '-' → logprob: -3.054243326187134
    4. ' -' → logprob: -6.304243087768555
    5. ')' → logprob: -6.429243087768555
    6. ' ' → logprob: -8.679243087768555
    7. '```' → logprob: -9.804243087768555
    8. '[' → logprob: -10.179243087768555
    9. '   ' → logprob: -10.429243087768555
    10. '*' → logprob: -11.804243087768555

Token 286: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038100700825452805
    2. '-' → logprob: -3.2881007194519043
    3. ')' → logprob: -9.788100242614746
    4. '[' → logprob: -14.038100242614746
    5. '1' → logprob: -14.288100242614746
    6. '<|end|>' → logprob: -14.288100242614746
    7. ' ' → logprob: -14.663100242614746
    8. ' )' → logprob: -15.538100242614746
    9. '-)' → logprob: -16.163101196289062
    10. '```' → logprob: -16.788101196289062

Token 287: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009373290464282036
    2. ' y' → logprob: -5.009373188018799
    3. '1' → logprob: -6.134373188018799
    4. 'x' → logprob: -7.634373188018799
    5. ')' → logprob: -13.009373664855957
    6. ' ' → logprob: -14.009373664855957
    7. ')y' → logprob: -14.884373664855957
    8. ' x' → logprob: -15.634373664855957
    9. '```' → logprob: -16.50937271118164
    10. '   ' → logprob: -16.88437271118164

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '-' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.375003814697266
    4. ')' → logprob: -14.750003814697266
    5. ' -' → logprob: -16.750003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '```' → logprob: -17.125003814697266
    8. '2' → logprob: -17.500003814697266
    9. '
' → logprob: -18.750003814697266
    10. '0' → logprob: -18.812503814697266

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003815756645053625
    2. ')
' → logprob: -7.8753814697265625
    3. ' )' → logprob: -14.125381469726562
    4. '   ' → logprob: -15.250381469726562
    5. ')return' → logprob: -15.375381469726562
    6. ')x' → logprob: -16.500381469726562
    7. ')
' → logprob: -16.625381469726562
    8. ')

' → logprob: -16.875381469726562
    9. ')y' → logprob: -18.125381469726562
    10. ')\' → logprob: -18.375381469726562

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006903939065523446
    2. ' return' → logprob: -7.875690460205078
    3. '
' → logprob: -9.125690460205078
    4. 'return' → logprob: -9.500690460205078
    5. '	return' → logprob: -9.875690460205078
    6. '    
' → logprob: -10.000690460205078
    7. ')' → logprob: -11.875690460205078
    8. '   ' → logprob: -12.250690460205078
    9. ' 
' → logprob: -12.500690460205078
    10. ':return' → logprob: -12.875690460205078

Token 291: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052446283400058746
    2. ' return' → logprob: -3.5524463653564453
    3. 'return' (adapté à ' return') → logprob: -3.8024463653564453
    4. '	return' → logprob: -9.677446365356445
    5. '    
' → logprob: -10.302446365356445
    6. '
' → logprob: -11.177446365356445
    7. ':return' → logprob: -12.677446365356445
    8. ' 
' → logprob: -13.177446365356445
    9. ')' → logprob: -13.177446365356445
    10. ' ' → logprob: -13.802446365356445

Token 292: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008649791590869427
    2. ' (' → logprob: -4.758649826049805
    3. 'x' → logprob: -10.258649826049805
    4. '(' → logprob: -16.383649826049805
    5. ' x' → logprob: -16.633649826049805
    6. '(round' → logprob: -20.133649826049805
    7. '[x' → logprob: -20.258649826049805
    8. '   ' → logprob: -20.633649826049805
    9. '(
' → logprob: -20.758649826049805
    10. ' ' → logprob: -22.008649826049805

Token 293: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. ')x' → logprob: -23.375003814697266
    4. 'round' → logprob: -23.875003814697266
    5. '   ' → logprob: -24.750003814697266
    6. '	x' → logprob: -24.750003814697266
    7. '(x' → logprob: -24.875003814697266
    8. ')' → logprob: -25.250003814697266
    9. 'float' → logprob: -25.500003814697266
    10. '"x' → logprob: -25.500003814697266

Token 294: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ',y' → logprob: -11.375020980834961
    3. ' ,' → logprob: -11.625020980834961
    4. ',
' → logprob: -14.750020980834961
    5. ')' → logprob: -15.750020980834961
    6. '<|end|>' → logprob: -18.37502098083496
    7. ',)' → logprob: -19.62502098083496
    8. ',x' → logprob: -19.62502098083496
    9. '‌,' → logprob: -19.75002098083496
    10. '```' → logprob: -19.75002098083496

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -15.875001907348633
    4. ')

' → logprob: -19.250001907348633
    5. '}' → logprob: -20.000001907348633
    6. ')return' → logprob: -20.250001907348633
    7. ')#' → logprob: -20.250001907348633
    8. ')}' → logprob: -20.625001907348633
    9. '),' → logprob: -21.375001907348633
    10. ')`' → logprob: -21.500001907348633

Token 296: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00599029753357172
    2. '
' → logprob: -5.505990505218506
    3. '

' → logprob: -7.755990505218506
    4. 'n' → logprob: -8.005990028381348
    5. '\' → logprob: -8.255990028381348
    6. '```' → logprob: -8.630990028381348
    7. '#' → logprob: -8.880990028381348
    8. 'x' → logprob: -9.130990028381348
    9. '\n' → logprob: -9.380990028381348
    10. 'import' → logprob: -9.505990028381348

Token 297: ' point' (ID: 2438)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.24535810947418213
    2. ' convex' → logprob: -2.2453579902648926
    3. ' polygon' → logprob: -2.8703579902648926
    4. ' find' → logprob: -3.9953579902648926
    5. ' distance' → logprob: -4.495357990264893
    6. ' angle' → logprob: -5.495357990264893
    7. 'main' → logprob: -5.995357990264893
    8. ' minimal' → logprob: -6.245357990264893
    9. ' is' → logprob: -6.370357990264893
    10. ' solve' → logprob: -6.495357990264893

Token 298: '_sub' (ID: 11572)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.6802263259887695
    2. '_distance' → logprob: -1.6802263259887695
    3. '_inside' → logprob: -1.9302263259887695
    4. '_in' → logprob: -2.4302263259887695
    5. '_to' → logprob: -3.3052263259887695
    6. '_line' → logprob: -4.1802263259887695
    7. 's' → logprob: -4.4302263259887695
    8. '_dist' → logprob: -6.0552263259887695
    9. '_at' → logprob: -6.6802263259887695
    10. '_list' → logprob: -6.6802263259887695

Token 299: '(a' (ID: 6271)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.0007111206650733948
    2. 'stract' → logprob: -7.250710964202881
    3. 't' → logprob: -14.750711441040039
    4. '(a' → logprob: -15.625711441040039
    5. ' tract' → logprob: -15.750711441040039
    6. 'TRACT' → logprob: -15.750711441040039
    7. 'traction' → logprob: -16.37571144104004
    8. 'tractor' → logprob: -16.50071144104004
    9. 'tracted' → logprob: -17.00071144104004
    10. 'track' → logprob: -17.25071144104004

Token 300: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2711852490901947
    2. ' ,' → logprob: -1.771185278892517
    3. ',b' → logprob: -3.1461851596832275
    4. 'stract' → logprob: -3.8961851596832275
    5. ',a' → logprob: -5.771185398101807
    6. 'tract' → logprob: -8.146184921264648
    7. ',p' → logprob: -8.396184921264648
    8. 'tracted' → logprob: -10.146184921264648
    9. ',)' → logprob: -10.271184921264648
    10. 'straction' → logprob: -10.396184921264648

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025033634155988693
    2. '):
' → logprob: -6.002503395080566
    3. ' ):' → logprob: -10.877503395080566
    4. ')' → logprob: -12.002503395080566
    5. '):
' → logprob: -13.627503395080566
    6. '):

' → logprob: -14.502503395080566
    7. ',' → logprob: -14.627503395080566
    8. ':' → logprob: -16.25250244140625
    9. '   ' → logprob: -16.25250244140625
    10. ')=' → logprob: -16.37750244140625

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017789551988244057
    2. ' return' → logprob: -5.142789363861084
    3. '(a' → logprob: -5.142789363861084
    4. ':' → logprob: -6.142789363861084
    5. 'return' → logprob: -6.267789363861084
    6. ':return' → logprob: -7.642789363861084
    7. 'a' → logprob: -8.142789840698242
    8. '[' → logprob: -8.392789840698242
    9. ' a' → logprob: -8.517789840698242
    10. ' (' → logprob: -8.642789840698242

Token 303: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.28028517961502075
    2. '(a' → logprob: -1.530285120010376
    3. '(' → logprob: -4.530285358428955
    4. ' a' → logprob: -4.780285358428955
    5. ' return' → logprob: -5.030285358428955
    6. 'a' → logprob: -6.530285358428955
    7. 'return' (adapté à ' return') → logprob: -7.530285358428955
    8. '   ' → logprob: -8.530284881591797
    9. ' ' → logprob: -10.530284881591797
    10. '(
' → logprob: -11.155284881591797

Token 304: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01419406570494175
    2. ' (' → logprob: -4.264194011688232
    3. '(' → logprob: -10.76419448852539
    4. '(x' → logprob: -12.01419448852539
    5. 'a' → logprob: -12.88919448852539
    6. '[a' → logprob: -14.26419448852539
    7. ' a' → logprob: -16.76419448852539
    8. ' ' → logprob: -16.88919448852539
    9. '((' → logprob: -17.63919448852539
    10. '(abs' → logprob: -17.88919448852539

Token 305: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.848420551046729e-05
    2. ' a' → logprob: -9.7500581741333
    3. '(a' → logprob: -15.8750581741333
    4. '	a' → logprob: -18.625059127807617
    5. ')a' → logprob: -19.000059127807617
    6. '(' → logprob: -21.250059127807617
    7. '_a' → logprob: -21.500059127807617
    8. '   ' → logprob: -22.375059127807617
    9. 'а' → logprob: -22.750059127807617
    10. ')' → logprob: -22.875059127807617

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008046258008107543
    2. '0' → logprob: -7.125804424285889
    3. '[
' → logprob: -16.375804901123047
    4. '(' → logprob: -16.875804901123047
    5. ' ' → logprob: -17.125804901123047
    6. ' [' → logprob: -17.250804901123047
    7. '   ' → logprob: -18.625804901123047
    8. '
' → logprob: -19.000804901123047
    9. '```' → logprob: -19.625804901123047
    10. 'x' → logprob: -19.625804901123047

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '[' → logprob: -17.75
    4. ' ' → logprob: -18.5
    5. '۰' → logprob: -18.875
    6. '   ' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. '٠' → logprob: -20.625
    9. '０' → logprob: -21.125
    10. '1' → logprob: -21.1875

Token 308: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5762396454811096
    2. '-' → logprob: -0.8262396454811096
    3. '-b' → logprob: -8.451239585876465
    4. ')' → logprob: -10.326239585876465
    5. ' ' → logprob: -10.451239585876465
    6. ']' → logprob: -11.201239585876465
    7. '[' → logprob: -13.076239585876465
    8. '-a' → logprob: -13.201239585876465
    9. ']-' → logprob: -13.451239585876465
    10. '   ' → logprob: -13.576239585876465

Token 309: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. '	b' → logprob: -19.125911712646484
    4. ')b' → logprob: -19.750911712646484
    5. '   ' → logprob: -20.875911712646484
    6. ' ' → logprob: -21.750911712646484
    7. '  ' → logprob: -22.875911712646484
    8. ' б' → logprob: -22.875911712646484
    9. ')' → logprob: -22.875911712646484
    10. '```' → logprob: -23.500911712646484

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -11.625008583068848
    3. '1' → logprob: -17.750009536743164
    4. ' [' → logprob: -18.125009536743164
    5. '(' → logprob: -18.500009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '.' → logprob: -18.750009536743164
    8. '[
' → logprob: -19.000009536743164
    9. '
' → logprob: -19.625009536743164
    10. ' ' → logprob: -20.000009536743164

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '[' → logprob: -15.000005722045898
    4. '
' → logprob: -18.6250057220459
    5. '   ' → logprob: -19.2500057220459
    6. '  ' → logprob: -19.5000057220459
    7. '```' → logprob: -20.1250057220459
    8. '۰' → logprob: -20.6250057220459
    9. '.' → logprob: -21.0625057220459
    10. ')' → logprob: -21.3750057220459

Token 312: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00644179992377758
    2. ',a' → logprob: -5.381441593170166
    3. ' ,' → logprob: -6.381441593170166
    4. ',
' → logprob: -9.756442070007324
    5. '),' → logprob: -10.506442070007324
    6. ',b' → logprob: -10.881442070007324
    7. ')' → logprob: -11.631442070007324
    8. '),(' → logprob: -11.756442070007324
    9. ',)' → logprob: -13.631442070007324
    10. ',\
' → logprob: -14.256442070007324

Token 313: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -18.376928329467773
    4. '   ' → logprob: -19.751928329467773
    5. ' ' → logprob: -20.751928329467773
    6. '  ' → logprob: -21.751928329467773
    7. '    ' → logprob: -22.876928329467773
    8. ')a' → logprob: -23.001928329467773
    9. '_a' → logprob: -23.626928329467773
    10. '
' → logprob: -24.001928329467773

Token 314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.688212614681106e-05
    2. '1' → logprob: -11.000017166137695
    3. '(' → logprob: -16.500017166137695
    4. '
' → logprob: -17.750017166137695
    5. '[
' → logprob: -18.250017166137695
    6. '   ' → logprob: -18.250017166137695
    7. '.' → logprob: -18.500017166137695
    8. ' ' → logprob: -19.000017166137695
    9. '0' → logprob: -19.750017166137695
    10. '```' → logprob: -19.875017166137695

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.375000953674316
    3. '0' → logprob: -15.250000953674316
    4. '
' → logprob: -17.25
    5. ' ' → logprob: -17.5
    6. '(' → logprob: -19.375
    7. '   ' → logprob: -19.375
    8. '-' → logprob: -19.625
    9. '{' → logprob: -20.0
    10. '１' → logprob: -20.0

Token 316: ']-' (ID: 27107)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.43829187750816345
    2. '-' → logprob: -1.1882919073104858
    3. ' -' → logprob: -3.3132917881011963
    4. '[' → logprob: -4.313292026519775
    5. ')-' → logprob: -9.063291549682617
    6. '()-' → logprob: -9.938291549682617
    7. '-[' → logprob: -10.063291549682617
    8. ')' → logprob: -10.813291549682617
    9. ']-' → logprob: -10.938291549682617
    10. 'b' → logprob: -11.188291549682617

Token 317: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.2729995988775045e-06
    2. ' b' → logprob: -12.000006675720215
    3. 'a' → logprob: -19.5000057220459
    4. ' ' → logprob: -19.7500057220459
    5. '   ' → logprob: -20.1250057220459
    6. ')b' → logprob: -20.1250057220459
    7. '	b' → logprob: -20.6250057220459
    8. '  ' → logprob: -20.8750057220459
    9. ')' → logprob: -20.8750057220459
    10. '0' → logprob: -21.1250057220459

Token 318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014187009073793888
    2. '1' → logprob: -4.264186859130859
    3. '0' → logprob: -11.51418685913086
    4. '])' → logprob: -11.63918685913086
    5. '-' → logprob: -12.88918685913086
    6. ')' → logprob: -13.88918685913086
    7. ' ' → logprob: -14.76418685913086
    8. ']' → logprob: -15.51418685913086
    9. '   ' → logprob: -15.63918685913086
    10. '(' → logprob: -15.76418685913086

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.625001907348633
    3. '[' → logprob: -15.125001907348633
    4. ']' → logprob: -17.250001907348633
    5. '-' → logprob: -17.375001907348633
    6. ' ' → logprob: -17.500001907348633
    7. '```' → logprob: -18.125001907348633
    8. '
' → logprob: -18.375001907348633
    9. '１' → logprob: -18.500001907348633
    10. '१' → logprob: -18.812501907348633

Token 320: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.375
    3. ' )' → logprob: -15.875
    4. '<|end|>' → logprob: -18.375
    5. '}' → logprob: -18.875
    6. ')

' → logprob: -19.0
    7. '),' → logprob: -19.375
    8. ')}' → logprob: -19.5
    9. '))' → logprob: -20.125
    10. '')' → logprob: -20.25

Token 321: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.698698704596609e-05
    2. 'import' → logprob: -9.875097274780273
    3. ' def' → logprob: -11.125097274780273
    4. '<|end|>' → logprob: -11.375097274780273
    5. ')' → logprob: -11.875097274780273
    6. '
' → logprob: -12.250097274780273
    7. '  
' → logprob: -13.125097274780273
    8. '```' → logprob: -13.625097274780273
    9. '#' → logprob: -14.375097274780273
    10. '    
' → logprob: -14.375097274780273

Token 322: ' cross' (ID: 8088)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -1.21610689163208
    2. 'point' → logprob: -1.59110689163208
    3. ' point' → logprob: -1.96610689163208
    4. 'vector' → logprob: -2.09110689163208
    5. 'dot' → logprob: -2.46610689163208
    6. ' dot' → logprob: -2.71610689163208
    7. ' cross' → logprob: -3.21610689163208
    8. 'cross' → logprob: -3.84110689163208
    9. 'vec' → logprob: -4.46610689163208
    10. ' vec' → logprob: -5.96610689163208

Token 323: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1204867884516716
    2. '(' → logprob: -2.4954867362976074
    3. '<|end|>' → logprob: -4.245486736297607
    4. '_product' → logprob: -4.870486736297607
    5. '(point' → logprob: -5.245486736297607
    6. 'product' → logprob: -6.620486736297607
    7. '(product' → logprob: -6.995486736297607
    8. ' product' → logprob: -7.620486736297607
    9. '(A' → logprob: -8.245487213134766
    10. '((' → logprob: -9.245487213134766

Token 324: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023311400786042213
    2. '(' → logprob: -4.148311614990234
    3. '<|end|>' → logprob: -5.898311614990234
    4. '):' → logprob: -6.648311614990234
    5. '[' → logprob: -7.023311614990234
    6. ')' → logprob: -7.273311614990234
    7. ',' → logprob: -7.398311614990234
    8. ',a' → logprob: -7.398311614990234
    9. 'a' → logprob: -8.773311614990234
    10. ' (' → logprob: -9.898311614990234

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002853851765394211
    2. '):
' → logprob: -5.877853870391846
    3. ' ):' → logprob: -10.252853393554688
    4. ')' → logprob: -11.377853393554688
    5. '):

' → logprob: -13.877853393554688
    6. '):
' → logprob: -14.127853393554688
    7. '):(' → logprob: -16.002853393554688
    8. '   ' → logprob: -16.127853393554688
    9. ' ):
' → logprob: -16.127853393554688
    10. ',' → logprob: -16.127853393554688

Token 326: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.997390866279602
    2. 'a' → logprob: -1.247390866279602
    3. '   ' → logprob: -1.247390866279602
    4. '=' → logprob: -3.8723907470703125
    5. ' return' → logprob: -4.1223907470703125
    6. 'return' → logprob: -4.4973907470703125
    7. '(a' → logprob: -5.3723907470703125
    8. '(' → logprob: -6.4973907470703125
    9. ' (' → logprob: -6.6223907470703125
    10. ' =' → logprob: -7.9973907470703125

Token 327: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2855294644832611
    2. 'a' → logprob: -1.7855294942855835
    3. ' return' → logprob: -2.535529375076294
    4. ' a' → logprob: -6.785529613494873
    5. '   ' → logprob: -8.035529136657715
    6. '	return' → logprob: -14.535529136657715
    7. 'def' → logprob: -14.785529136657715
    8. ' ' → logprob: -15.160529136657715
    9. '
' → logprob: -15.535529136657715
    10. '0' → logprob: -16.03553009033203

Token 328: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245712742209435
    2. ' a' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.523245811462402
    4. '	a' → logprob: -19.023244857788086
    5. ' ' → logprob: -19.273244857788086
    6. '(a' → logprob: -20.148244857788086
    7. '  ' → logprob: -21.773244857788086
    8. '(' → logprob: -21.773244857788086
    9. ' (' → logprob: -22.023244857788086
    10. '
' → logprob: -22.398244857788086

Token 329: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.125001907348633
    3. ' [' → logprob: -15.875001907348633
    4. 'x' → logprob: -17.875001907348633
    5. '1' → logprob: -18.000001907348633
    6. '[
' → logprob: -18.000001907348633
    7. '
' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'def' → logprob: -18.250001907348633
    10. '(' → logprob: -18.500001907348633

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '[' → logprob: -18.5
    4. '
' → logprob: -19.125
    5. '۰' → logprob: -20.0
    6. '1' → logprob: -20.375
    7. '   ' → logprob: -20.625
    8. '```' → logprob: -20.75
    9. '(' → logprob: -21.75
    10. '０' → logprob: -21.8125

Token 331: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.005740713328123093
    2. '*' → logprob: -5.255740642547607
    3. ' *' → logprob: -8.130741119384766
    4. '*a' → logprob: -9.005741119384766
    5. '**' → logprob: -9.630741119384766
    6. '*q' → logprob: -12.255741119384766
    7. '***' → logprob: -12.630741119384766
    8. '*y' → logprob: -13.005741119384766
    9. ')*' → logprob: -13.130741119384766
    10. ']*' → logprob: -13.130741119384766

Token 332: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -14.250000953674316
    3. '	b' → logprob: -19.75
    4. '*b' → logprob: -22.375
    5. '   ' → logprob: -23.125
    6. ')b' → logprob: -23.5
    7. ',b' → logprob: -24.25
    8. '_b' → logprob: -24.75
    9. '  ' → logprob: -24.875
    10. '>b' → logprob: -25.0

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519662380218506
    2. '1' → logprob: -1.5019662380218506
    3. '
' → logprob: -10.62696647644043
    4. ' ' → logprob: -12.00196647644043
    5. '{' → logprob: -13.12696647644043
    6. '   ' → logprob: -13.50196647644043
    7. '```' → logprob: -13.87696647644043
    8. ' [' → logprob: -14.50196647644043
    9. '(' → logprob: -14.62696647644043
    10. '

' → logprob: -15.00196647644043

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.75
    3. ' ' → logprob: -19.375
    4. '0' → logprob: -20.0
    5. '   ' → logprob: -20.875
    6. '[' → logprob: -21.5
    7. '```' → logprob: -23.0
    8. '

' → logprob: -23.25
    9. '  ' → logprob: -23.75
    10. '１' → logprob: -23.75

Token 335: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759836435317993
    2. '-' → logprob: -0.8259836435317993
    3. '-a' → logprob: -10.450984001159668
    4. ' ' → logprob: -11.575984001159668
    5. ')' → logprob: -13.200984001159668
    6. 'a' → logprob: -13.325984001159668
    7. '-b' → logprob: -14.325984001159668
    8. '-
' → logprob: -15.075984001159668
    9. ',' → logprob: -15.450984001159668
    10. ' a' → logprob: -15.575984001159668

Token 336: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033558503491804004
    2. ' a' → logprob: -8.000335693359375
    3. 'b' → logprob: -16.250335693359375
    4. '	a' → logprob: -17.500335693359375
    5. ' ' → logprob: -18.875335693359375
    6. '<|end|>' → logprob: -19.375335693359375
    7. '   ' → logprob: -21.000335693359375
    8. '_a' → logprob: -21.250335693359375
    9. ')a' → logprob: -21.375335693359375
    10. 'а' → logprob: -22.125335693359375

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.125001907348633
    3. '0' → logprob: -15.250001907348633
    4. '.' → logprob: -17.125001907348633
    5. ' [' → logprob: -18.000001907348633
    6. 'import' → logprob: -19.125001907348633
    7. '2' → logprob: -19.625001907348633
    8. '(' → logprob: -19.750001907348633
    9. 'b' → logprob: -19.750001907348633
    10. '[
' → logprob: -19.875001907348633

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. '0' → logprob: -10.125042915344238
    3. ' ' → logprob: -13.375042915344238
    4. 'b' → logprob: -14.500042915344238
    5. '[' → logprob: -14.625042915344238
    6. '<|end|>' → logprob: -14.875042915344238
    7. '   ' → logprob: -17.250043869018555
    8. '```' → logprob: -17.375043869018555
    9. '
' → logprob: -18.125043869018555
    10. '<|end|>' → logprob: -18.250043869018555

Token 339: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.11428922414779663
    2. '*' → logprob: -2.2392892837524414
    3. '[' → logprob: -6.864289283752441
    4. '*[' → logprob: -8.239289283752441
    5. 'b' → logprob: -8.989289283752441
    6. '0' → logprob: -11.989289283752441
    7. ']*' → logprob: -12.489289283752441
    8. '**' → logprob: -12.864289283752441
    9. '*object' → logprob: -12.864289283752441
    10. '*a' → logprob: -13.239289283752441

Token 340: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.375
    3. ')b' → logprob: -18.75
    4. '	b' → logprob: -20.625
    5. ',b' → logprob: -21.625
    6. '*b' → logprob: -21.75
    7. '<|end|>' → logprob: -21.75
    8. '0' → logprob: -22.0
    9. ' ' → logprob: -22.125
    10. '[' → logprob: -22.375

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. '0' → logprob: -11.125015258789062
    3. '.' → logprob: -19.000015258789062
    4. '[
' → logprob: -19.250015258789062
    5. '```' → logprob: -19.500015258789062
    6. '][' → logprob: -19.625015258789062
    7. '(' → logprob: -20.000015258789062
    8. '   ' → logprob: -20.500015258789062
    9. 'x' → logprob: -20.625015258789062
    10. 'import' → logprob: -20.750015258789062

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. ' ' → logprob: -18.625
    4. '۰' → logprob: -20.375
    5. '1' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. '	' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. '```' → logprob: -22.75
    10. '０' → logprob: -22.75

Token 343: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '}' → logprob: -12.87500286102295
    3. ')}' → logprob: -16.500003814697266
    4. ' )' → logprob: -16.625003814697266
    5. ']' → logprob: -16.750003814697266
    6. ')
' → logprob: -16.750003814697266
    7. '<|end|>' → logprob: -16.875003814697266
    8. '')' → logprob: -16.875003814697266
    9. '(' → logprob: -17.875003814697266
    10. '),' → logprob: -18.625003814697266

Token 344: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020960147958248854
    2. '
' → logprob: -6.252096176147461
    3. '

' → logprob: -9.627096176147461
    4. '<|end|>' → logprob: -10.252096176147461
    5. '\' → logprob: -10.752096176147461
    6. ' def' → logprob: -11.377096176147461
    7. '```' → logprob: -11.502096176147461
    8. 'class' → logprob: -12.377096176147461
    9. 'ndef' → logprob: -13.127096176147461
    10. '(def' → logprob: -13.127096176147461

Token 345: ' is' (ID: 382)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.8374992609024048
    2. ' polygon' → logprob: -1.7124992609024048
    3. 'conv' → logprob: -2.8374991416931152
    4. 'is' → logprob: -2.9624991416931152
    5. 'point' → logprob: -3.0874991416931152
    6. 'distance' → logprob: -3.2124991416931152
    7. 'angle' → logprob: -3.5874991416931152
    8. 'vector' → logprob: -3.5874991416931152
    9. ' convex' → logprob: -3.9624991416931152
    10. 'main' → logprob: -4.712499141693115

Token 346: '_on' (ID: 10053)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.009952753782272339
    2. '_inside' → logprob: -5.509952545166016
    3. '_on' → logprob: -6.134952545166016
    4. '_conv' → logprob: -7.384952545166016
    5. '_polygon' → logprob: -7.634952545166016
    6. '_simple' → logprob: -7.634952545166016
    7. 'ect' → logprob: -8.134952545166016
    8. '_col' → logprob: -8.259952545166016
    9. '_line' → logprob: -8.259952545166016
    10. '_between' → logprob: -8.759952545166016

Token 347: '_left' (ID: 22189)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.254257470369339
    2. '_line' → logprob: -1.5042574405670166
    3. 'segment' → logprob: -6.379257678985596
    4. 'line' → logprob: -7.629257678985596
    5. '_edge' → logprob: -10.129257202148438
    6. 'eline' → logprob: -10.379257202148438
    7. '(' → logprob: -11.379257202148438
    8. 'Segment' → logprob: -11.504257202148438
    9. '_point' → logprob: -11.754257202148438
    10. '_polygon' → logprob: -11.754257202148438

Token 348: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21767757833003998
    2. '(a' → logprob: -1.7176775932312012
    3. '(A' → logprob: -4.467677593231201
    4. ' (' → logprob: -5.717677593231201
    5. 'of' → logprob: -7.092677593231201
    6. '_of' → logprob: -8.592677116394043
    7. '(p' → logprob: -8.967677116394043
    8. '(P' → logprob: -10.467677116394043
    9. '(parent' → logprob: -10.592677116394043
    10. '((' → logprob: -10.967677116394043

Token 349: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16946227848529816
    2. '(' → logprob: -2.169462203979492
    3. '(A' → logprob: -3.544462203979492
    4. ' (' → logprob: -5.294462203979492
    5. ')' → logprob: -5.294462203979492
    6. ',' → logprob: -6.544462203979492
    7. '<|end|>' → logprob: -7.419462203979492
    8. '(p' → logprob: -9.294462203979492
    9. ' )' → logprob: -9.419462203979492
    10. '<|end|>' → logprob: -9.544462203979492

Token 350: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17778222262859344
    2. ',a' → logprob: -2.0527822971343994
    3. ',c' → logprob: -3.4277822971343994
    4. ' ,' → logprob: -6.42778205871582
    5. ',b' → logprob: -8.30278205871582
    6. ')' → logprob: -10.17778205871582
    7. ',p' → logprob: -10.42778205871582
    8. ',e' → logprob: -11.17778205871582
    9. ',A' → logprob: -11.30278205871582
    10. '):
' → logprob: -11.30278205871582

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038912808522582054
    2. ')' → logprob: -5.878891468048096
    3. '):
' → logprob: -7.253891468048096
    4. '(a' → logprob: -8.003890991210938
    5. '(' → logprob: -11.128890991210938
    6. ' ):' → logprob: -11.503890991210938
    7. ',' → logprob: -11.753890991210938
    8. ',a' → logprob: -12.503890991210938
    9. 'a' → logprob: -13.503890991210938
    10. '):(' → logprob: -13.628890991210938

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004536100197583437
    2. ':' → logprob: -5.879536151885986
    3. ' return' → logprob: -7.379536151885986
    4. '(a' → logprob: -8.254535675048828
    5. '    ' → logprob: -8.379535675048828
    6. ' (' → logprob: -8.879535675048828
    7. '(p' → logprob: -9.004535675048828
    8. '	return' → logprob: -9.504535675048828
    9. '):' → logprob: -10.129535675048828
    10. '(' → logprob: -10.129535675048828

Token 353: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000746736885048449
    2. 'return' → logprob: -7.375746726989746
    3. ' return' → logprob: -9.125746726989746
    4. ':' → logprob: -12.500746726989746
    5. '	return' → logprob: -13.125746726989746
    6. ':
' → logprob: -13.625746726989746
    7. '       ' → logprob: -13.875746726989746
    8. ':return' → logprob: -13.875746726989746
    9. '   ' → logprob: -14.125746726989746
    10. '    
' → logprob: -14.375746726989746

Token 354: ' Check' (ID: 6208)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34034690260887146
    2. '   ' → logprob: -1.9653469324111938
    3. 'return' → logprob: -2.0903468132019043
    4. ' cross' → logprob: -4.465346813201904
    5. ' cc' → logprob: -4.840346813201904
    6. 'cc' → logprob: -5.465346813201904
    7. 'cross' → logprob: -7.590346813201904
    8. ' c' → logprob: -9.215347290039062
    9. '
' → logprob: -9.340347290039062
    10. ' ' → logprob: -9.340347290039062

Token 355: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7898818254470825
    2. ' if' → logprob: -1.0398818254470825
    3. ' (' → logprob: -2.414881706237793
    4. ' ((' → logprob: -3.289881706237793
    5. ':' → logprob: -3.914881706237793
    6. '   ' → logprob: -4.289881706237793
    7. '((' → logprob: -4.789881706237793
    8. 'return' → logprob: -4.914881706237793
    9. '(' → logprob: -5.039881706237793
    10. ' cross' → logprob: -5.914881706237793

Token 356: ' point' (ID: 2438)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.5762408375740051
    2. 'cross' → logprob: -0.8262408375740051
    3. '((' → logprob: -8.951240539550781
    4. 'cc' → logprob: -9.451240539550781
    5. ' (' → logprob: -9.826240539550781
    6. ' ((' → logprob: -11.451240539550781
    7. '(c' → logprob: -11.576240539550781
    8. '(((' → logprob: -11.951240539550781
    9. ' cc' → logprob: -12.826240539550781
    10. '(cc' → logprob: -12.826240539550781

Token 357: ' p' (ID: 275)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -1.2406965494155884
    2. '((' → logprob: -1.3656965494155884
    3. 'cross' → logprob: -1.6156965494155884
    4. ' is' → logprob: -2.865696430206299
    5. '(point' → logprob: -2.990696430206299
    6. '(p' → logprob: -3.365696430206299
    7. '(' → logprob: -3.615696430206299
    8. '(a' → logprob: -4.115696430206299
    9. 'cc' → logprob: -4.240696430206299
    10. 'point' → logprob: -4.615696430206299

Token 358: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0464421845972538
    2. 'is' → logprob: -3.1714422702789307
    3. '<|end|>' → logprob: -6.796442031860352
    4. ' lies' → logprob: -7.171442031860352
    5. ',' → logprob: -7.171442031860352
    6. '<|end|>' → logprob: -8.671442031860352
    7. ' ' → logprob: -9.171442031860352
    8. ')' → logprob: -9.296442031860352
    9. ':' → logprob: -9.421442031860352
    10. '...' → logprob: -10.046442031860352

Token 359: ' on' (ID: 402)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.8020386695861816
    2. '(point' → logprob: -1.3020386695861816
    3. 'cc' → logprob: -2.5520386695861816
    4. 'on' → logprob: -2.5520386695861816
    5. ' point' → logprob: -3.3020386695861816
    6. 'cross' → logprob: -3.9270386695861816
    7. 'left' → logprob: -4.677038669586182
    8. ' cross' → logprob: -4.802038669586182
    9. ' on' → logprob: -4.802038669586182
    10. ' to' → logprob: -5.052038669586182

Token 360: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4022688567638397
    2. 'the' → logprob: -1.402268886566162
    3. 'left' → logprob: -2.777268886566162
    4. ' left' → logprob: -3.902268886566162
    5. 'line' → logprob: -6.652268886566162
    6. ' line' → logprob: -7.902268886566162
    7. 'a' → logprob: -8.527268409729004
    8. ' a' → logprob: -8.652268409729004
    9. ' ' → logprob: -8.777268409729004
    10. '<|end|>' → logprob: -8.902268409729004

Token 361: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011825304478406906
    2. ' left' → logprob: -4.511825084686279
    3. 'line' → logprob: -8.011825561523438
    4. 'cc' → logprob: -8.636825561523438
    5. 'a' → logprob: -9.011825561523438
    6. '(a' → logprob: -9.761825561523438
    7. '_left' → logprob: -10.886825561523438
    8. '(left' → logprob: -11.386825561523438
    9. ' line' → logprob: -11.761825561523438
    10. 'counter' → logprob: -11.886825561523438

Token 362: ' side' (ID: 4307)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06728904694318771
    2. 'of' → logprob: -3.567289113998413
    3. ',' → logprob: -4.317288875579834
    4. '<|end|>' → logprob: -4.442288875579834
    5. ' side' → logprob: -5.067288875579834
    6. ' ' → logprob: -6.567288875579834
    7. ')' → logprob: -6.942288875579834
    8. ' ,' → logprob: -6.942288875579834
    9. ' or' → logprob: -7.692288875579834
    10. ' (' → logprob: -7.817288875579834

Token 363: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03462382033467293
    2. 'of' → logprob: -3.784623861312866
    3. '(a' → logprob: -5.159623622894287
    4. ' (' → logprob: -5.534623622894287
    5. '(' → logprob: -6.659623622894287
    6. ' or' → logprob: -9.409624099731445
    7. ',' → logprob: -10.159624099731445
    8. ' ' → logprob: -10.284624099731445
    9. ')' → logprob: -10.409624099731445
    10. '   ' → logprob: -10.409624099731445

Token 364: ' directed' (ID: 23699)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2799590528011322
    2. ' the' → logprob: -1.6549590826034546
    3. 'line' → logprob: -3.654958963394165
    4. 'the' → logprob: -3.904958963394165
    5. ' ' → logprob: -5.904959201812744
    6. ' vector' → logprob: -6.279959201812744
    7. ' a' → logprob: -6.779959201812744
    8. 'a' → logprob: -7.404959201812744
    9. 'ab' → logprob: -8.404958724975586
    10. 'vector' → logprob: -8.654958724975586

Token 365: ' line' (ID: 2543)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4335409700870514
    2. ' line' → logprob: -1.433540940284729
    3. 'a' → logprob: -2.5585410594940186
    4. ' ' → logprob: -3.5585410594940186
    5. ' segment' → logprob: -5.8085408210754395
    6. 'line' → logprob: -6.0585408210754395
    7. ' ab' → logprob: -7.3085408210754395
    8. '(a' → logprob: -7.9335408210754395
    9. ' (' → logprob: -8.058541297912598
    10. 'ab' → logprob: -8.308541297912598

Token 366: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8286696076393127
    2. '(a' → logprob: -1.203669548034668
    3. 'a' → logprob: -1.703669548034668
    4. ' (' → logprob: -2.953669548034668
    5. ' from' → logprob: -4.453669548034668
    6. '(' → logprob: -4.703669548034668
    7. ' ' → logprob: -5.953669548034668
    8. 'from' → logprob: -6.203669548034668
    9. 'ab' → logprob: -6.953669548034668
    10. '(ab' → logprob: -7.203669548034668

Token 367: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5105212330818176
    2. ' b' → logprob: -1.8855211734771729
    3. ' ->' → logprob: -2.135521173477173
    4. ',' → logprob: -3.385521173477173
    5. ' ' → logprob: -3.385521173477173
    6. 'b' → logprob: -3.635521173477173
    7. ' to' → logprob: -4.510521411895752
    8. ',b' → logprob: -4.635521411895752
    9. ' ,' → logprob: -5.135521411895752
    10. ' a' → logprob: -5.635521411895752

Token 368: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019299437990412116
    2. ' b' → logprob: -6.251929759979248
    3. '<|end|>' → logprob: -13.501930236816406
    4. ' ' → logprob: -16.876930236816406
    5. '>b' → logprob: -19.126930236816406
    6. '<|end|>' → logprob: -19.376930236816406
    7. '	b' → logprob: -19.501930236816406
    8. ')b' → logprob: -19.626930236816406
    9. ' б' → logprob: -20.126930236816406
    10. '```' → logprob: -20.876930236816406

Token 369: '
' (ID: 198)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.9383142590522766
    2. '   ' → logprob: -1.0633141994476318
    3. ':' → logprob: -1.4383141994476318
    4. ':
' → logprob: -4.188314437866211
    5. '):' → logprob: -5.438314437866211
    6. '):
' → logprob: -6.688314437866211
    7. ' return' → logprob: -6.813314437866211
    8. 'def' → logprob: -7.188314437866211
    9. ':return' → logprob: -7.563314437866211
    10. ')' → logprob: -7.813314437866211

Token 370: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004065698012709618
    2. '   ' → logprob: -6.12906551361084
    3. ':
' → logprob: -6.75406551361084
    4. ':return' → logprob: -8.12906551361084
    5. '):' → logprob: -8.25406551361084
    6. '():' → logprob: -9.87906551361084
    7. '(' → logprob: -10.12906551361084
    8. ')' → logprob: -10.87906551361084
    9. '):
' → logprob: -11.50406551361084
    10. ' :' → logprob: -11.87906551361084

Token 371: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016835130518302321
    2. 'return' (adapté à ' return') → logprob: -6.751683712005615
    3. ' return' → logprob: -7.751683712005615
    4. 'vec' → logprob: -10.501683235168457
    5. 'v' → logprob: -10.876683235168457
    6. ' cross' → logprob: -11.751683235168457
    7. ' vector' → logprob: -12.126683235168457
    8. 'cross' → logprob: -12.376683235168457
    9. '	return' → logprob: -12.626683235168457
    10. '       ' → logprob: -13.251683235168457

Token 372: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.07898826897144318
    2. ' cross' → logprob: -2.5789883136749268
    3. 'cc' → logprob: -9.328988075256348
    4. '(c' → logprob: -11.953988075256348
    5. ' cc' → logprob: -13.453988075256348
    6. ' (' → logprob: -14.703988075256348
    7. '(cc' → logprob: -14.953988075256348
    8. '   ' → logprob: -14.953988075256348
    9. '((' → logprob: -15.078988075256348
    10. ' ' → logprob: -15.453988075256348

Token 373: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.0011304517975077033
    2. 'point' → logprob: -6.8761305809021
    3. '(' → logprob: -9.751130104064941
    4. '((' → logprob: -10.251130104064941
    5. '(line' → logprob: -13.376130104064941
    6. '(
' → logprob: -14.126130104064941
    7. ' point' → logprob: -14.376130104064941
    8. '	point' → logprob: -14.751130104064941
    9. ' (' → logprob: -15.126130104064941
    10. '(Point' → logprob: -15.626130104064941

Token 374: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -3.054500666621607e-06
    2. 'sub' → logprob: -12.75000286102295
    3. '(sub' → logprob: -17.500003814697266
    4. '_' → logprob: -18.125003814697266
    5. '_SUB' → logprob: -18.375003814697266
    6. '	sub' → logprob: -18.375003814697266
    7. 'Sub' → logprob: -19.250003814697266
    8. '=sub' → logprob: -20.125003814697266
    9. '_Sub' → logprob: -20.375003814697266
    10. '-sub' → logprob: -20.500003814697266

Token 375: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001146291324403137
    2. 'b' → logprob: -9.750114440917969
    3. '(p' → logprob: -9.875114440917969
    4. '((' → logprob: -13.250114440917969
    5. '(a' → logprob: -13.500114440917969
    6. ' (' → logprob: -14.000114440917969
    7. ')' → logprob: -14.625114440917969
    8. '(' → logprob: -15.000114440917969
    9. 'p' → logprob: -17.50011444091797
    10. ')(' → logprob: -17.50011444091797

Token 376: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.062309589236974716
    2. '(a' → logprob: -3.812309503555298
    3. ',p' → logprob: -3.812309503555298
    4. ',' → logprob: -4.562309741973877
    5. 'a' → logprob: -5.312309741973877
    6. 'p' → logprob: -7.812309741973877
    7. '(p' → logprob: -7.812309741973877
    8. ',b' → logprob: -11.187309265136719
    9. '(' → logprob: -12.187309265136719
    10. ' ,' → logprob: -12.562309265136719

Token 377: '),' (ID: 936)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.47547900676727295
    2. ',' → logprob: -1.225479006767273
    3. '),' → logprob: -2.4754791259765625
    4. ' ,' → logprob: -8.225479125976562
    5. 'p' → logprob: -8.350479125976562
    6. '),(' → logprob: -9.225479125976562
    7. ')' → logprob: -10.975479125976562
    8. ' ),' → logprob: -11.100479125976562
    9. '(p' → logprob: -11.600479125976562
    10. ',b' → logprob: -11.725479125976562

Token 378: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.038054004311561584
    2. ' point' → logprob: -3.2880539894104004
    3. '(point' → logprob: -11.788054466247559
    4. 'p' → logprob: -12.413054466247559
    5. '	point' → logprob: -14.038054466247559
    6. '.point' → logprob: -16.913053512573242
    7. 'Point' → logprob: -18.288053512573242
    8. ' p' → logprob: -18.288053512573242
    9. ' ' → logprob: -18.413053512573242
    10. '(' → logprob: -18.788053512573242

Token 379: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00019817621796391904
    2. 'sub' → logprob: -8.625198364257812
    3. '(' → logprob: -11.375198364257812
    4. '[' → logprob: -13.250198364257812
    5. '(p' → logprob: -13.250198364257812
    6. ')' → logprob: -13.875198364257812
    7. 'Sub' → logprob: -14.375198364257812
    8. '_SUB' → logprob: -14.750198364257812
    9. '	sub' → logprob: -15.125198364257812
    10. ' суб' → logprob: -15.375198364257812

Token 380: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0028212780598551035
    2. 'p' → logprob: -5.877821445465088
    3. '(b' → logprob: -11.50282096862793
    4. ')' → logprob: -12.87782096862793
    5. '(' → logprob: -13.00282096862793
    6. '(a' → logprob: -14.37782096862793
    7. ' (' → logprob: -15.25282096862793
    8. '[p' → logprob: -15.87782096862793
    9. ')(' → logprob: -15.87782096862793
    10. ' p' → logprob: -16.00282096862793

Token 381: ',a' (ID: 26776)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002441050950437784
    2. ',a' → logprob: -6.502440929412842
    3. ' a' → logprob: -7.002440929412842
    4. ',' → logprob: -10.50244140625
    5. '(a' → logprob: -13.87744140625
    6. ')a' → logprob: -16.12744140625
    7. '	a' → logprob: -16.87744140625
    8. ' ,' → logprob: -17.00244140625
    9. ' ' → logprob: -19.00244140625
    10. ')' → logprob: -19.00244140625

Token 382: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.610702363715973e-06
    2. ')' → logprob: -11.750009536743164
    3. ' ))' → logprob: -14.125009536743164
    4. ')))' → logprob: -14.375009536743164
    5. '0' → logprob: -16.625009536743164
    6. '))
' → logprob: -16.750009536743164
    7. '()))' → logprob: -16.875009536743164
    8. ' ' → logprob: -17.375009536743164
    9. ')
' → logprob: -17.375009536743164
    10. ')>' → logprob: -17.625009536743164

Token 383: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17983943223953247
    2. '>' → logprob: -1.8048393726348877
    3. ' ' → logprob: -9.929839134216309
    4. ' >=' → logprob: -11.304839134216309
    5. '()>' → logprob: -11.554839134216309
    6. ' >
' → logprob: -11.804839134216309
    7. ' ' → logprob: -12.679839134216309
    8. ')>' → logprob: -12.679839134216309
    9. ')' → logprob: -13.179839134216309
    10. '[' → logprob: -13.179839134216309

Token 384: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '<|end|>' → logprob: -18.380233764648438
    4. '   ' → logprob: -19.880233764648438
    5. '۰' → logprob: -20.630233764648438
    6. ' ' → logprob: -21.380233764648438
    7. '=' → logprob: -21.630233764648438
    8. '  ' → logprob: -21.755233764648438
    9. '[' → logprob: -21.880233764648438
    10. '1' → logprob: -22.255233764648438

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -22.3750057220459
    4. '<|end|>' → logprob: -22.5000057220459
    5. '```' → logprob: -24.6250057220459
    6. '   ' → logprob: -24.7500057220459
    7. '00' → logprob: -24.7500057220459
    8. '000' → logprob: -25.0000057220459
    9. '
' → logprob: -25.7500057220459
    10. '  ' → logprob: -25.8750057220459

Token 386: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9829202890396118
    2. 'def' → logprob: -1.2329202890396118
    3. '<|end|>' → logprob: -1.2329202890396118
    4. '

' → logprob: -3.2329201698303223
    5. '\n' → logprob: -6.857920169830322
    6. 'newline' → logprob: -7.232920169830322
    7. '<|end|>' → logprob: -7.607920169830322
    8. ' def' → logprob: -8.48292064666748
    9. '```' → logprob: -8.73292064666748
    10. '  
' → logprob: -8.73292064666748

Token 387: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5510927438735962
    2. '<|end|>' → logprob: -0.9260927438735962
    3. '
' → logprob: -3.8010926246643066
    4. '

' → logprob: -5.676092624664307
    5. '<|end|>' → logprob: -7.176092624664307
    6. '\n' → logprob: -7.801092624664307
    7. '\' → logprob: -8.301093101501465
    8. '```' → logprob: -9.426093101501465
    9. ' def' → logprob: -9.676093101501465
    10. 'newline' → logprob: -9.926093101501465

Token 388: ' dist' (ID: 3601)
  Prédit: ' polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.31759193539619446
    2. ' convex' → logprob: -1.817591905593872
    3. ' clip' → logprob: -3.067591905593872
    4. 'polygon' → logprob: -3.442591905593872
    5. ' s' → logprob: -4.567592144012451
    6. 's' → logprob: -5.067592144012451
    7. 'clip' → logprob: -5.192592144012451
    8. 'conv' → logprob: -5.817592144012451
    9. ' line' → logprob: -6.067592144012451
    10. ' is' → logprob: -7.317592144012451

Token 389: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5836257338523865
    2. '(a' → logprob: -0.9586257338523865
    3. ' (' → logprob: -3.5836257934570312
    4. '<|end|>' → logprob: -3.8336257934570312
    5. '(point' → logprob: -5.583625793457031
    6. '_squared' → logprob: -5.958625793457031
    7. '<|end|>' → logprob: -7.083625793457031
    8. '(p' → logprob: -7.583625793457031
    9. '(A' → logprob: -8.458625793457031
    10. '(Point' → logprob: -8.708625793457031

Token 390: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.13430969417095184
    2. ',' → logprob: -2.134309768676758
    3. '(' → logprob: -5.509309768676758
    4. ',a' → logprob: -6.259309768676758
    5. ' ,' → logprob: -7.009309768676758
    6. 'a' → logprob: -8.259309768676758
    7. ' (' → logprob: -9.509309768676758
    8. ')' → logprob: -10.009309768676758
    9. ',b' → logprob: -10.134309768676758
    10. '<|end|>' → logprob: -10.759309768676758

Token 391: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005975929088890553
    2. '):
' → logprob: -7.5005974769592285
    3. ')' → logprob: -10.750597953796387
    4. ' ):' → logprob: -10.875597953796387
    5. '(a' → logprob: -13.375597953796387
    6. '):

' → logprob: -13.625597953796387
    7. '):
' → logprob: -14.250597953796387
    8. '(' → logprob: -15.250597953796387
    9. '   ' → logprob: -16.12559700012207
    10. '):(' → logprob: -16.37559700012207

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005081149865873158
    2. ' math' → logprob: -7.8755083084106445
    3. 'import' → logprob: -9.500508308410645
    4. 'math' → logprob: -10.250508308410645
    5. '(math' → logprob: -11.500508308410645
    6. ' return' → logprob: -12.875508308410645
    7. '       ' → logprob: -13.875508308410645
    8. ' ' → logprob: -14.000508308410645
    9. '    ' → logprob: -14.000508308410645
    10. '   ' → logprob: -14.125508308410645

Token 393: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2066512107849121
    2. ' math' → logprob: -1.706651210784912
    3. 'return' (adapté à ' return') → logprob: -5.706651210784912
    4. '   ' → logprob: -7.206651210784912
    5. '(math' → logprob: -7.706651210784912
    6. ' return' → logprob: -7.956651210784912
    7. 'import' → logprob: -7.956651210784912
    8. '((' → logprob: -12.08165168762207
    9. ' ' → logprob: -13.95665168762207
    10. '```' → logprob: -14.33165168762207

Token 394: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.10023999959230423
    2. 'math' → logprob: -2.3502399921417236
    3. '(math' → logprob: -10.350239753723145
    4. '((' → logprob: -14.100239753723145
    5. ' ((' → logprob: -14.350239753723145
    6. ' ' → logprob: -20.10024070739746
    7. '(' → logprob: -20.35024070739746
    8. '.math' → logprob: -20.47524070739746
    9. ' (' → logprob: -20.85024070739746
    10. '/math' → logprob: -21.97524070739746

Token 395: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.011190117336809635
    2. '.h' → logprob: -4.636189937591553
    3. '.dist' → logprob: -6.761189937591553
    4. '.' → logprob: -8.261190414428711
    5. '.Sqrt' → logprob: -12.011190414428711
    6. '.atan' → logprob: -12.511190414428711
    7. '.s' → logprob: -12.761190414428711
    8. '.pow' → logprob: -13.761190414428711
    9. 'sqrt' → logprob: -14.386190414428711
    10. 'dist' → logprob: -14.511190414428711

Token 396: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007130279554985464
    2. '(' → logprob: -7.250712871551514
    3. '(a' → logprob: -12.750713348388672
    4. '(
' → logprob: -16.125713348388672
    5. ' ((' → logprob: -16.500713348388672
    6. '(pow' → logprob: -17.375713348388672
    7. ' (' → logprob: -18.125713348388672
    8. '(abs' → logprob: -18.375713348388672
    9. '[(' → logprob: -18.750713348388672
    10. '```' → logprob: -18.875713348388672

Token 397: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001732663222355768
    2. '(a' → logprob: -8.750173568725586
    3. 'b' → logprob: -11.250173568725586
    4. ' a' → logprob: -13.375173568725586
    5. '(b' → logprob: -16.375173568725586
    6. ' (' → logprob: -17.000173568725586
    7. '	a' → logprob: -17.500173568725586
    8. '   ' → logprob: -17.875173568725586
    9. ')a' → logprob: -18.875173568725586
    10. '(' → logprob: -19.625173568725586

Token 398: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033558503491804004
    2. '0' → logprob: -8.000335693359375
    3. ')[' → logprob: -17.250335693359375
    4. '```' → logprob: -17.750335693359375
    5. '[
' → logprob: -17.875335693359375
    6. '][' → logprob: -18.250335693359375
    7. ' [' → logprob: -18.750335693359375
    8. '   ' → logprob: -18.750335693359375
    9. ')' → logprob: -19.250335693359375
    10. '(' → logprob: -19.500335693359375

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. ' ' → logprob: -17.75
    4. '1' → logprob: -19.5
    5. '   ' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. '۰' → logprob: -20.25
    8. '(' → logprob: -20.75
    9. '
' → logprob: -21.375
    10. '０' → logprob: -22.125

Token 400: ']-' (ID: 27107)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.05664075165987015
    2. ' -' → logprob: -3.431640863418579
    3. '-' → logprob: -3.806640863418579
    4. '[' → logprob: -7.806640625
    5. ']-' → logprob: -9.806640625
    6. 'b' → logprob: -10.556640625
    7. '0' → logprob: -11.181640625
    8. '−' → logprob: -13.431640625
    9. ' ' → logprob: -13.806640625
    10. '1' → logprob: -14.181640625

Token 401: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004306692280806601
    2. ' b' → logprob: -7.750430583953857
    3. '	b' → logprob: -18.500431060791016
    4. '   ' → logprob: -18.625431060791016
    5. ' ' → logprob: -19.125431060791016
    6. '  ' → logprob: -19.625431060791016
    7. '```' → logprob: -20.125431060791016
    8. ')b' → logprob: -20.375431060791016
    9. '(b' → logprob: -21.625431060791016
    10. '>b' → logprob: -22.375431060791016

Token 402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.250004768371582
    3. '```' → logprob: -19.6250057220459
    4. '   ' → logprob: -20.1250057220459
    5. '[
' → logprob: -21.3750057220459
    6. '
' → logprob: -21.5000057220459
    7. ' [' → logprob: -21.5000057220459
    8. '][' → logprob: -22.6250057220459
    9. '#' → logprob: -22.8750057220459
    10. 'a' → logprob: -23.0000057220459

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '[' → logprob: -17.125
    4. '   ' → logprob: -19.75
    5. '1' → logprob: -20.125
    6. '  ' → logprob: -20.5
    7. '
' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '۰' → logprob: -21.25
    10. ')' → logprob: -22.375

Token 404: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0192754827439785
    2. '[' → logprob: -4.394275665283203
    3. ')' → logprob: -5.394275665283203
    4. '])' → logprob: -6.144275665283203
    5. ' )' → logprob: -10.644275665283203
    6. '   ' → logprob: -11.644275665283203
    7. '0' → logprob: -11.894275665283203
    8. ']' → logprob: -12.019275665283203
    9. '**' → logprob: -13.269275665283203
    10. ')])' → logprob: -13.519275665283203

Token 405: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0044226436875760555
    2. '**' → logprob: -5.504422664642334
    3. ')' → logprob: -8.629422187805176
    4. '[' → logprob: -8.754422187805176
    5. '2' → logprob: -12.254422187805176
    6. '```' → logprob: -13.754422187805176
    7. ')*(' → logprob: -14.254422187805176
    8. '**)' → logprob: -14.379422187805176
    9. ')*' → logprob: -16.129423141479492
    10. ' )' → logprob: -16.379423141479492

Token 406: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '(' → logprob: -16.500431060791016
    4. '   ' → logprob: -16.750431060791016
    5. '  ' → logprob: -17.000431060791016
    6. '```' → logprob: -17.250431060791016
    7. ',' → logprob: -17.375431060791016
    8. '1' → logprob: -17.500431060791016
    9. '۲' → logprob: -17.750431060791016
    10. '0' → logprob: -17.750431060791016

Token 407: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5281375050544739
    2. '+' → logprob: -1.278137445449829
    3. '+(' → logprob: -2.028137445449829
    4. ' +(' → logprob: -8.90313720703125
    5. ')+(' → logprob: -11.52813720703125
    6. ',' → logprob: -12.65313720703125
    7. '+
' → logprob: -12.90313720703125
    8. ')' → logprob: -13.02813720703125
    9. '   ' → logprob: -13.02813720703125
    10. ' ' → logprob: -13.52813720703125

Token 408: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5761891007423401
    2. ' (' → logprob: -0.8261891007423401
    3. '(b' → logprob: -8.576189041137695
    4. '   ' → logprob: -10.076189041137695
    5. '  ' → logprob: -11.576189041137695
    6. ' ' → logprob: -12.326189041137695
    7. '    ' → logprob: -12.451189041137695
    8. '(' → logprob: -13.951189041137695
    9. 'a' → logprob: -15.951189041137695
    10. '     ' → logprob: -16.701189041137695

Token 409: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03936529532074928
    2. 'a' → logprob: -3.289365291595459
    3. ' (' → logprob: -6.664365291595459
    4. ' a' → logprob: -10.164365768432617
    5. '   ' → logprob: -12.414365768432617
    6. '(' → logprob: -12.414365768432617
    7. '  ' → logprob: -14.664365768432617
    8. ' ' → logprob: -15.289365768432617
    9. '    ' → logprob: -16.539365768432617
    10. '(b' → logprob: -16.914365768432617

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -13.12500286102295
    3. '1' → logprob: -14.75000286102295
    4. '   ' → logprob: -14.75000286102295
    5. '][' → logprob: -15.37500286102295
    6. ' [' → logprob: -16.750003814697266
    7. 'def' → logprob: -17.500003814697266
    8. ' ' → logprob: -18.125003814697266
    9. 'import' → logprob: -18.500003814697266
    10. '(' → logprob: -18.500003814697266

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007628281135112047
    2. '0' → logprob: -4.882628440856934
    3. '[' → logprob: -10.882628440856934
    4. ' ' → logprob: -12.882628440856934
    5. '```' → logprob: -15.382628440856934
    6. '   ' → logprob: -15.507628440856934
    7. '
' → logprob: -16.007627487182617
    8. '<|end|>' → logprob: -16.257627487182617
    9. '(' → logprob: -17.257627487182617
    10. '...' → logprob: -17.570127487182617

Token 412: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.14029079675674438
    2. '-' → logprob: -2.2652907371520996
    3. '[' → logprob: -4.1402907371521
    4. ']' → logprob: -5.0152907371521
    5. ' -' → logprob: -6.0152907371521
    6. '-b' → logprob: -7.5152907371521
    7. '<|end|>' → logprob: -7.6402907371521
    8. '0' → logprob: -7.7652907371521
    9. ')-' → logprob: -8.140291213989258
    10. '][' → logprob: -9.140291213989258

Token 413: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '```' → logprob: -17.625045776367188
    4. '	b' → logprob: -17.875045776367188
    5. '[' → logprob: -19.000045776367188
    6. '   ' → logprob: -19.125045776367188
    7. ' ' → logprob: -19.250045776367188
    8. ')b' → logprob: -19.375045776367188
    9. '[b' → logprob: -19.750045776367188
    10. '(b' → logprob: -20.375045776367188

Token 414: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008439337252639234
    2. '0' → logprob: -7.1258440017700195
    3. '1' → logprob: -10.25084400177002
    4. '-' → logprob: -12.62584400177002
    5. '][' → logprob: -14.87584400177002
    6. '   ' → logprob: -15.87584400177002
    7. '```' → logprob: -15.87584400177002
    8. ' ' → logprob: -17.000843048095703
    9. '
' → logprob: -17.125843048095703
    10. ' [' → logprob: -17.125843048095703

Token 415: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005931289400905371
    2. '1' → logprob: -5.130931377410889
    3. '[' → logprob: -13.25593090057373
    4. ' ' → logprob: -14.38093090057373
    5. '   ' → logprob: -15.63093090057373
    6. '```' → logprob: -16.630931854248047
    7. '-' → logprob: -17.380931854248047
    8. '
' → logprob: -17.505931854248047
    9. '(' → logprob: -17.505931854248047
    10. '  ' → logprob: -17.880931854248047

Token 416: '])' (ID: 4636)
  Prédit: ']-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.3244169354438782
    2. ']' → logprob: -1.4494168758392334
    3. '-' → logprob: -3.5744168758392334
    4. '])' → logprob: -4.4494171142578125
    5. ')-' → logprob: -6.8244171142578125
    6. ')' → logprob: -7.1994171142578125
    7. '])-' → logprob: -7.8244171142578125
    8. '-)' → logprob: -8.949417114257812
    9. ')**' → logprob: -9.074417114257812
    10. ']))' → logprob: -10.199417114257812

Token 417: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0008651299867779016
    2. ')**' → logprob: -7.2508649826049805
    3. '-' → logprob: -9.12586498260498
    4. '2' → logprob: -10.50086498260498
    5. '[' → logprob: -11.87586498260498
    6. ')' → logprob: -12.12586498260498
    7. '**)' → logprob: -12.75086498260498
    8. '```' → logprob: -13.12586498260498
    9. '*' → logprob: -14.12586498260498
    10. ' **' → logprob: -15.37586498260498

Token 418: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038300611777231097
    2. '1' → logprob: -7.875382900238037
    3. ' ' → logprob: -13.125383377075195
    4. '[' → logprob: -15.375383377075195
    5. '(' → logprob: -15.500383377075195
    6. '0' → logprob: -15.625383377075195
    7. '```' → logprob: -16.000383377075195
    8. '   ' → logprob: -17.125383377075195
    9. '20' → logprob: -18.625383377075195
    10. '21' → logprob: -18.812883377075195

Token 419: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. '())' → logprob: -13.125003814697266
    3. '))' → logprob: -14.125003814697266
    4. ' )' → logprob: -14.500003814697266
    5. '   ' → logprob: -16.125003814697266
    6. '()' → logprob: -16.125003814697266
    7. ')}' → logprob: -16.250003814697266
    8. ')return' → logprob: -16.875003814697266
    9. '}' → logprob: -17.000003814697266
    10. '(' → logprob: -17.125003814697266

Token 420: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041208078619092703
    2. '
' → logprob: -8.750411987304688
    3. 'class' → logprob: -9.000411987304688
    4. '```' → logprob: -9.750411987304688
    5. '\' → logprob: -10.750411987304688
    6. '

' → logprob: -11.000411987304688
    7. '<|end|>' → logprob: -11.625411987304688
    8. ' def' → logprob: -12.375411987304688
    9. 'import' → logprob: -12.500411987304688
    10. '#' → logprob: -12.875411987304688

Token 421: ' inside' (ID: 6772)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.1513421535491943
    2. ' convex' → logprob: -1.5263421535491943
    3. 'main' → logprob: -2.2763421535491943
    4. 'angle' → logprob: -2.9013421535491943
    5. ' polygon' → logprob: -2.9013421535491943
    6. ' angle' → logprob: -3.4013421535491943
    7. 'conv' → logprob: -3.7763421535491943
    8. 'polygon' → logprob: -4.151342391967773
    9. 'is' → logprob: -4.526342391967773
    10. ' line' → logprob: -4.651342391967773

Token 422: '_polygon' (ID: 195427)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.41124850511550903
    2. '_polygon' → logprob: -1.6612484455108643
    3. '(point' → logprob: -2.2862484455108643
    4. '(poly' → logprob: -3.7862484455108643
    5. '(a' → logprob: -4.411248683929443
    6. '(' → logprob: -6.036248683929443
    7. '_circle' → logprob: -6.536248683929443
    8. '_point' → logprob: -6.661248683929443
    9. '_poly' → logprob: -6.911248683929443
    10. 'Polygon' → logprob: -7.286248683929443

Token 423: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02474789135158062
    2. '(poly' → logprob: -4.024747848510742
    3. '(point' → logprob: -5.649747848510742
    4. '(' → logprob: -6.774747848510742
    5. '(points' → logprob: -7.149747848510742
    6. '(P' → logprob: -7.524747848510742
    7. '(pol' → logprob: -7.524747848510742
    8. '(vertices' → logprob: -11.149747848510742
    9. '(Point' → logprob: -11.274747848510742
    10. ' (' → logprob: -12.649747848510742

Token 424: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.1787584275007248
    2. ',' → logprob: -2.178758382797241
    3. ',p' → logprob: -3.553758382797241
    4. '(p' → logprob: -4.17875862121582
    5. 'oly' → logprob: -5.17875862121582
    6. 'ol' → logprob: -7.42875862121582
    7. 'oint' → logprob: -8.42875862121582
    8. 'p' → logprob: -10.80375862121582
    9. '(' → logprob: -11.05375862121582
    10. 'oints' → logprob: -11.17875862121582

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06200991943478584
    2. ',p' → logprob: -2.812009811401367
    3. ' ,' → logprob: -10.187009811401367
    4. '(p' → logprob: -13.687009811401367
    5. '):' → logprob: -13.937009811401367
    6. ',P' → logprob: -14.312009811401367
    7. ',a' → logprob: -14.937009811401367
    8. '   ' → logprob: -15.312009811401367
    9. ',s' → logprob: -15.437009811401367
    10. ',pos' → logprob: -15.687009811401367

Token 426: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.11023002117872238
    2. 'p' → logprob: -2.360229969024658
    3. ' point' → logprob: -4.610229969024658
    4. ' p' → logprob: -10.985230445861816
    5. 'pt' → logprob: -11.985230445861816
    6. 'Point' → logprob: -15.485230445861816
    7. '   ' → logprob: -15.485230445861816
    8. '_point' → logprob: -16.2352294921875
    9. '	point' → logprob: -16.2352294921875
    10. '(point' → logprob: -16.6102294921875

Token 427: '=(' (ID: 9893)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010463856160640717
    2. '):
' → logprob: -6.876046180725098
    3. ',' → logprob: -12.501046180725098
    4. '(p' → logprob: -12.751046180725098
    5. ',p' → logprob: -13.376046180725098
    6. '):
' → logprob: -13.376046180725098
    7. ')' → logprob: -13.626046180725098
    8. ' ):' → logprob: -13.876046180725098
    9. '   ' → logprob: -14.376046180725098
    10. '):

' → logprob: -14.626046180725098

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002368274377658963
    2. 'None' → logprob: -7.377368450164795
    3. '))' → logprob: -7.377368450164795
    4. ')' → logprob: -7.502368450164795
    5. ' ' → logprob: -8.252367973327637
    6. ')))' → logprob: -9.127367973327637
    7. ')),' → logprob: -10.377367973327637
    8. '),' → logprob: -10.877367973327637
    9. '(' → logprob: -11.002367973327637
    10. '1' → logprob: -11.252367973327637

Token 429: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7026445269584656
    2. ')):' → logprob: -1.2026445865631104
    3. ',' → logprob: -2.0776445865631104
    4. ')):
' → logprob: -3.5776445865631104
    5. ')' → logprob: -3.8276445865631104
    6. '[' → logprob: -4.327644348144531
    7. ' ))' → logprob: -5.577644348144531
    8. '),' → logprob: -5.577644348144531
    9. '):' → logprob: -5.952644348144531
    10. '0' → logprob: -6.077644348144531

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002529529621824622
    2. ' ' → logprob: -6.002529621124268
    3. '))' → logprob: -10.12752914428711
    4. ')' → logprob: -11.37752914428711
    5. ' ))' → logprob: -13.75252914428711
    6. ')))' → logprob: -14.37752914428711
    7. ')),' → logprob: -15.12752914428711
    8. '),' → logprob: -15.62752914428711
    9. ' )' → logprob: -15.87752914428711
    10. '1' → logprob: -17.12752914428711

Token 431: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.2721956968307495
    2. '):' → logprob: -2.022195816040039
    3. ')):
' → logprob: -2.522195816040039
    4. ')' → logprob: -4.272195816040039
    5. '))' → logprob: -4.772195816040039
    6. '):
' → logprob: -5.772195816040039
    7. ' ' → logprob: -9.772195816040039
    8. ')):
' → logprob: -10.522195816040039
    9. '   ' → logprob: -11.522195816040039
    10. ' ):' → logprob: -11.647195816040039

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005966392927803099
    2. ':' → logprob: -8.12559700012207
    3. '    
' → logprob: -8.62559700012207
    4. '       ' → logprob: -10.87559700012207
    5. ' indentation' → logprob: -10.87559700012207
    6. '[' → logprob: -11.37559700012207
    7. '(' → logprob: -11.87559700012207
    8. '```' → logprob: -12.00059700012207
    9. ' :' → logprob: -12.12559700012207
    10. '   ' → logprob: -12.25059700012207

Token 433: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8500709533691406
    2. 'inside' → logprob: -1.8500709533691406
    3. 'wn' → logprob: -1.9750709533691406
    4. 'n' → logprob: -1.9750709533691406
    5. 'cnt' → logprob: -2.9750709533691406
    6. 'def' → logprob: -3.3500709533691406
    7. 'w' → logprob: -3.6000709533691406
    8. 'count' → logprob: -4.225070953369141
    9. ' wn' → logprob: -5.100070953369141
    10. '#' (adapté à ' #') → logprob: -7.100070953369141

Token 434: ' Ray' (ID: 19781)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7253564596176147
    2. 'inside' → logprob: -1.4753564596176147
    3. 'count' → logprob: -1.8503564596176147
    4. 'cnt' → logprob: -2.8503565788269043
    5. 'def' → logprob: -3.1003565788269043
    6. 'wn' → logprob: -4.350356578826904
    7. 'w' → logprob: -5.225356578826904
    8. ' wn' → logprob: -6.350356578826904
    9. '   ' → logprob: -6.475356578826904
    10. '#' → logprob: -6.475356578826904

Token 435: ' casting' (ID: 46889)
  Prédit: '_cast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cast' → logprob: -0.5400622487068176
    2. 'def' → logprob: -1.6650621891021729
    3. ' =' → logprob: -2.290062189102173
    4. '   ' → logprob: -3.165062189102173
    5. 'casting' → logprob: -3.540062189102173
    6. 'cast' → logprob: -3.790062189102173
    7. '=' → logprob: -4.790062427520752
    8. ' casting' → logprob: -5.415062427520752
    9. '(p' → logprob: -5.540062427520752
    10. '=(' → logprob: -5.915062427520752

Token 436: ' method' (ID: 2595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17842116951942444
    2. '(p' → logprob: -2.6784212589263916
    3. ':' → logprob: -3.0534212589263916
    4. 'def' → logprob: -3.8034212589263916
    5. ' =' → logprob: -5.3034210205078125
    6. '=' → logprob: -5.6784210205078125
    7. ' for' → logprob: -5.6784210205078125
    8. '_count' → logprob: -6.3034210205078125
    9. '    ' → logprob: -6.4284210205078125
    10. '       ' → logprob: -6.8034210205078125

Token 437: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005587508203461766
    2. '
' → logprob: -7.875558853149414
    3. 'count' → logprob: -9.375558853149414
    4. '    
' → logprob: -9.875558853149414
    5. ' count' → logprob: -11.625558853149414
    6. '	count' → logprob: -11.625558853149414
    7. ':' → logprob: -12.125558853149414
    8. 'def' → logprob: -12.125558853149414
    9. ',' → logprob: -12.750558853149414
    10. '       ' → logprob: -13.250558853149414

Token 438: ' check' (ID: 2371)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.3528240919113159
    2. 'check' → logprob: -1.852824091911316
    3. 'count' → logprob: -3.2278242111206055
    4. 'def' → logprob: -3.2278242111206055
    5. '0' → logprob: -3.7278242111206055
    6. ' check' → logprob: -4.1028242111206055
    7. ' determine' → logprob: -4.8528242111206055
    8. 'sum' → logprob: -5.4778242111206055
    9. '   ' → logprob: -6.6028242111206055
    10. 'test' → logprob: -6.6028242111206055

Token 439: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.002909369533881545
    2. '   ' → logprob: -6.502909183502197
    3. ' whether' → logprob: -7.252909183502197
    4. ' for' → logprob: -8.002909660339355
    5. 'if' → logprob: -8.877909660339355
    6. ' True' → logprob: -10.002909660339355
    7. ' point' → logprob: -10.002909660339355
    8. ' ' → logprob: -10.252909660339355
    9. ' return' → logprob: -10.502909660339355
    10. ' polygon' → logprob: -11.127909660339355

Token 440: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3231624364852905
    2. ' point' → logprob: -1.3231624364852905
    3. ' polygon' → logprob: -4.94816255569458
    4. 'polygon' → logprob: -6.19816255569458
    5. 'inside' → logprob: -7.69816255569458
    6. ' inside' → logprob: -9.323162078857422
    7. 'the' → logprob: -9.698162078857422
    8. ' the' → logprob: -10.323162078857422
    9. '(point' → logprob: -10.323162078857422
    10. 'not' → logprob: -11.198162078857422

Token 441: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07317017018795013
    2. 'in' → logprob: -3.4481701850891113
    3. ' in' → logprob: -4.448170185089111
    4. 'is' → logprob: -4.823170185089111
    5. ' inside' → logprob: -5.073170185089111
    6. 'inside' → logprob: -5.073170185089111
    7. ')' → logprob: -5.948170185089111
    8. 'import' → logprob: -6.323170185089111
    9. ' lies' → logprob: -7.448170185089111
    10. ' ' → logprob: -7.698170185089111

Token 442: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.18003521859645844
    2. ' inside' → logprob: -1.8050352334976196
    3. 'True' → logprob: -9.430035591125488
    4. 'in' → logprob: -9.430035591125488
    5. '_inside' → logprob: -9.805035591125488
    6. ' True' → logprob: -10.180035591125488
    7. 'Inside' → logprob: -11.805035591125488
    8. 'ins' → logprob: -12.180035591125488
    9. ' strictly' → logprob: -12.305035591125488
    10. ')' → logprob: -12.305035591125488

Token 443: ' polygon' (ID: 65081)
  Prédit: ' polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.2840714454650879
    2. 'polygon' → logprob: -1.409071445465088
    3. '   ' → logprob: -6.409071445465088
    4. ' the' → logprob: -7.409071445465088
    5. 'the' → logprob: -7.659071445465088
    6. '(p' → logprob: -9.03407096862793
    7. '_polygon' → logprob: -10.65907096862793
    8. 'def' → logprob: -11.78407096862793
    9. '
' → logprob: -12.15907096862793
    10. ' (' → logprob: -12.15907096862793

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09751053154468536
    2. '(p' → logprob: -2.472510576248169
    3. ':' → logprob: -5.09751033782959
    4. '(' → logprob: -6.72251033782959
    5. '
' → logprob: -7.72251033782959
    6. ':
' → logprob: -7.84751033782959
    7. ',' → logprob: -9.22251033782959
    8. '(
' → logprob: -9.47251033782959
    9. '    
' → logprob: -9.97251033782959
    10. '.' → logprob: -10.34751033782959

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003135889768600464
    2. ':' → logprob: -5.878135681152344
    3. '```' → logprob: -8.753135681152344
    4. ',' → logprob: -9.753135681152344
    5. '(' → logprob: -10.003135681152344
    6. 'def' → logprob: -10.628135681152344
    7. '
' → logprob: -11.378135681152344
    8. ' :' → logprob: -11.878135681152344
    9. ':
' → logprob: -12.128135681152344
    10. '    
' → logprob: -12.503135681152344

Token 446: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5480831265449524
    2. 'count' → logprob: -1.0480830669403076
    3. '   ' → logprob: -3.0480830669403076
    4. 'inside' → logprob: -4.048083305358887
    5. 'n' → logprob: -5.673083305358887
    6. 'x' → logprob: -6.048083305358887
    7. 'inter' → logprob: -8.048083305358887
    8. ' cnt' → logprob: -8.798083305358887
    9. 'cross' → logprob: -9.673083305358887
    10. 'counter' → logprob: -10.923083305358887

Token 447: ' polygon' (ID: 65081)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6738913655281067
    2. 'cnt' → logprob: -1.423891305923462
    3. 'n' → logprob: -1.548891305923462
    4. 'inside' → logprob: -3.798891305923462
    5. '   ' → logprob: -4.673891544342041
    6. 'x' → logprob: -5.923891544342041
    7. ' cnt' → logprob: -7.298891544342041
    8. 'inter' → logprob: -7.548891544342041
    9. ' count' → logprob: -8.173891067504883
    10. 'result' → logprob: -8.298891067504883

Token 448: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2153874784708023
    2. '=' → logprob: -1.8403874635696411
    3. '_points' → logprob: -3.7153875827789307
    4. '_len' → logprob: -6.090387344360352
    5. '_pts' → logprob: -6.465387344360352
    6. 'points' → logprob: -6.965387344360352
    7. '_vertices' → logprob: -7.215387344360352
    8. ')' → logprob: -7.340387344360352
    9. '   ' → logprob: -7.715387344360352
    10. 's' → logprob: -7.715387344360352

Token 449: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28095874190330505
    2. 'a' → logprob: -1.6559587717056274
    3. ' list' → logprob: -3.155958652496338
    4. 'list' → logprob: -4.780958652496338
    5. '[a' → logprob: -7.030958652496338
    6. '[' → logprob: -7.155958652496338
    7. '[p' → logprob: -7.405958652496338
    8. '[]' → logprob: -8.280959129333496
    9. '[(' → logprob: -8.905959129333496
    10. ' [' → logprob: -9.280959129333496

Token 450: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.058184802532196045
    2. 'of' → logprob: -3.558184862136841
    3. '[' → logprob: -3.683184862136841
    4. '   ' → logprob: -7.183184623718262
    5. ')' → logprob: -7.308184623718262
    6. '[
' → logprob: -7.808184623718262
    7. 'def' → logprob: -8.433184623718262
    8. '[(' → logprob: -8.683184623718262
    9. '(' → logprob: -8.808184623718262
    10. '<|end|>' → logprob: -9.183184623718262

Token 451: ' points' (ID: 5571)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.7895681262016296
    2. 'points' → logprob: -1.2895681858062744
    3. 'tu' → logprob: -1.6645681858062744
    4. '(' → logprob: -3.1645681858062744
    5. ' points' → logprob: -4.664567947387695
    6. 'tuple' → logprob: -4.789567947387695
    7. 'vertices' → logprob: -4.789567947387695
    8. '(points' → logprob: -4.789567947387695
    9. ' (' → logprob: -6.289567947387695
    10. 'coordinates' → logprob: -7.039567947387695

Token 452: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12039124965667725
    2. ':' → logprob: -2.620391368865967
    3. ',' → logprob: -4.245391368865967
    4. ' =' → logprob: -4.870391368865967
    5. ':
' → logprob: -5.120391368865967
    6. 'def' → logprob: -5.495391368865967
    7. '=' → logprob: -5.995391368865967
    8. '):
' → logprob: -6.745391368865967
    9. '):' → logprob: -6.745391368865967
    10. ')' → logprob: -7.120391368865967

Token 453: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.19315394759178162
    2. 'counter' → logprob: -2.6931538581848145
    3. 'clock' → logprob: -3.0681538581848145
    4. 'polygon' → logprob: -3.5681538581848145
    5. ' order' → logprob: -4.0681538581848145
    6. 'CC' → logprob: -6.0681538581848145
    7. ' clockwise' → logprob: -6.4431538581848145
    8. 'def' → logprob: -6.6931538581848145
    9. ' CC' → logprob: -6.6931538581848145
    10. 'either' → logprob: -6.6931538581848145

Token 454: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004199613351374865
    2. '
' → logprob: -6.379199504852295
    3. ':' → logprob: -7.004199504852295
    4. ',' → logprob: -7.379199504852295
    5. 'def' → logprob: -7.879199504852295
    6. 'n' → logprob: -8.254199981689453
    7. '    
' → logprob: -9.379199981689453
    8. 'count' → logprob: -10.129199981689453
    9. ':
' → logprob: -10.504199981689453
    10. ',
' → logprob: -10.629199981689453

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002099773846566677
    2. '```' → logprob: -9.12520980834961
    3. ' count' → logprob: -11.00020980834961
    4. '
' → logprob: -11.00020980834961
    5. '    
' → logprob: -11.25020980834961
    6. 'n' → logprob: -11.25020980834961
    7. ':' → logprob: -11.25020980834961
    8. 'def' → logprob: -11.62520980834961
    9. 'count' → logprob: -11.87520980834961
    10. ',' → logprob: -12.87520980834961

Token 456: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.5756450891494751
    2. 'count' → logprob: -1.575645089149475
    3. '   ' → logprob: -2.0756449699401855
    4. 'n' → logprob: -2.5756449699401855
    5. 'inside' → logprob: -3.5756449699401855
    6. ' cnt' → logprob: -8.450645446777344
    7. 'x' → logprob: -8.700645446777344
    8. 'cross' → logprob: -8.700645446777344
    9. 'num' → logprob: -8.950645446777344
    10. 'inter' → logprob: -9.075645446777344

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014152854681015
    2. ' =' → logprob: -1.7014153003692627
    3. ',' → logprob: -14.201415061950684
    4. ' ' → logprob: -14.451415061950684
    5. '   ' → logprob: -14.826415061950684
    6. '  ' → logprob: -15.451415061950684
    7. ' +=' → logprob: -17.076416015625
    8. ')' → logprob: -17.201416015625
    9. '=line' → logprob: -17.326416015625
    10. '=int' → logprob: -17.451416015625

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. 'len' → logprob: -18.750123977661133
    4. '   ' → logprob: -21.000123977661133
    5. 'int' → logprob: -21.000123977661133
    6. '```' → logprob: -21.500123977661133
    7. '1' → logprob: -22.250123977661133
    8. ' len' → logprob: -22.250123977661133
    9. 'sum' → logprob: -22.375123977661133
    10. '=' → logprob: -22.750123977661133

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. 'len' → logprob: -22.125
    4. '```' → logprob: -24.25
    5. 'int' → logprob: -24.875
    6. 'sum' → logprob: -25.75
    7. '   ' → logprob: -25.75
    8. '۰' → logprob: -26.0
    9. '０' → logprob: -26.5
    10. '=' → logprob: -27.0

Token 460: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18879887461662292
    2. '
' → logprob: -1.9387989044189453
    3. ' for' → logprob: -4.063798904418945
    4. 'for' → logprob: -4.938798904418945
    5. '    
' → logprob: -6.438798904418945
    6. 'n' → logprob: -7.813798904418945
    7. '  
' → logprob: -7.813798904418945
    8. ',' → logprob: -7.938798904418945
    9. ' n' → logprob: -8.438798904418945
    10. ' 
' → logprob: -8.938798904418945

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6134165525436401
    2. '
' → logprob: -0.9884165525436401
    3. ' for' → logprob: -2.8634166717529297
    4. 'for' → logprob: -3.9884166717529297
    5. 'n' → logprob: -4.86341667175293
    6. ' n' → logprob: -6.23841667175293
    7. '\n' → logprob: -8.11341667175293
    8. ',' → logprob: -8.48841667175293
    9. '    
' → logprob: -8.61341667175293
    10. ' 
' → logprob: -9.23841667175293

Token 462: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02345125935971737
    2. 'for' → logprob: -4.148451328277588
    3. 'N' → logprob: -5.023451328277588
    4. 'x' (adapté à ' x') → logprob: -7.773451328277588
    5. '   ' → logprob: -8.14845085144043
    6. 'INF' → logprob: -10.39845085144043
    7. 'inf' → logprob: -10.77345085144043
    8. ' n' → logprob: -11.27345085144043
    9. 'px' → logprob: -11.39845085144043
    10. 'in' → logprob: -12.89845085144043

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11490511894226074
    2. ',y' → logprob: -2.4899051189422607
    3. 'p' → logprob: -4.61490535736084
    4. ',p' → logprob: -4.98990535736084
    5. '0' → logprob: -5.23990535736084
    6. ' =' → logprob: -6.11490535736084
    7. '=' → logprob: -6.86490535736084
    8. '_p' → logprob: -8.61490535736084
    9. ' ,' → logprob: -10.23990535736084
    10. '=p' → logprob: -10.23990535736084

Token 464: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01105300523340702
    2. ' y' → logprob: -4.511053085327148
    3. 'point' → logprob: -13.011053085327148
    4. 'p' → logprob: -13.136053085327148
    5. '   ' → logprob: -15.011053085327148
    6. ' ' → logprob: -15.261053085327148
    7. '  ' → logprob: -16.63605308532715
    8. '    ' → logprob: -16.63605308532715
    9. '0' → logprob: -16.88605308532715
    10. ' point' → logprob: -17.01105308532715

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753385111689568
    2. ' =' → logprob: -3.5297534465789795
    3. ',' → logprob: -13.154753684997559
    4. ')' → logprob: -14.529753684997559
    5. '=p' → logprob: -15.779753684997559
    6. '<|end|>' → logprob: -15.779753684997559
    7. '   ' → logprob: -16.404752731323242
    8. '=int' → logprob: -17.904752731323242
    9. '=
' → logprob: -18.154752731323242
    10. '.=' → logprob: -18.279752731323242

Token 466: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0001584850688232109
    2. ' point' → logprob: -8.750158309936523
    3. '(point' → logprob: -20.875158309936523
    4. '	point' → logprob: -21.500158309936523
    5. 'p' → logprob: -22.875158309936523
    6. '0' → logprob: -24.625158309936523
    7. '
' → logprob: -25.000158309936523
    8. 'Point' → logprob: -25.125158309936523
    9. '   ' → logprob: -25.125158309936523
    10. '_point' → logprob: -25.500158309936523

Token 467: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12500792741775513
    2. '   ' → logprob: -2.3750078678131104
    3. '<|end|>' → logprob: -4.1250081062316895
    4. '    
' → logprob: -6.5000081062316895
    5. '<|end|>' → logprob: -6.5000081062316895
    6. ',' → logprob: -7.3750081062316895
    7. 'for' → logprob: -7.3750081062316895
    8. '  
' → logprob: -7.5000081062316895
    9. ')' → logprob: -7.5000081062316895
    10. '=' → logprob: -7.6250081062316895

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005089493934065104
    2. ' for' → logprob: -7.750508785247803
    3. '    
' → logprob: -10.000509262084961
    4. '
' → logprob: -10.750509262084961
    5. 'for' → logprob: -11.625509262084961
    6. ',' → logprob: -14.125509262084961
    7. 'n' → logprob: -14.875509262084961
    8. '.' → logprob: -15.500509262084961
    9. '   
' → logprob: -15.625509262084961
    10. ' 
' → logprob: -15.750509262084961

Token 469: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.8096850514411926
    2. '   ' → logprob: -1.5596849918365479
    3. ' n' → logprob: -1.8096849918365479
    4. ' for' → logprob: -2.184684991836548
    5. 'for' → logprob: -2.684684991836548
    6. 'N' → logprob: -8.934684753417969
    7. ' N' → logprob: -9.934684753417969
    8. '
' → logprob: -10.059684753417969
    9. '    ' → logprob: -10.684684753417969
    10. '	n' → logprob: -11.059684753417969

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04864402860403061
    2. ' =' → logprob: -3.0486440658569336
    3. '=len' → logprob: -9.798644065856934
    4. '=int' → logprob: -14.173644065856934
    5. '=
' → logprob: -16.298643112182617
    6. ',' → logprob: -16.423643112182617
    7. '   ' → logprob: -17.173643112182617
    8. ')' → logprob: -17.298643112182617
    9. '=n' → logprob: -17.298643112182617
    10. '=count' → logprob: -17.298643112182617

Token 471: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004078639671206474
    2. ' len' → logprob: -5.5040788650512695
    3. '(len' → logprob: -15.50407886505127
    4. '[len' → logprob: -19.504077911376953
    5. '=len' → logprob: -20.379077911376953
    6. '	len' → logprob: -21.004077911376953
    7. ',len' → logprob: -22.629077911376953
    8. '<len' → logprob: -23.504077911376953
    9. '```' → logprob: -23.504077911376953
    10. '   ' → logprob: -23.629077911376953

Token 472: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.750075340270996
    3. 'polygon' → logprob: -11.500075340270996
    4. ' polygon' → logprob: -12.500075340270996
    5. '(poly' → logprob: -13.625075340270996
    6. '(pol' → logprob: -13.625075340270996
    7. '(
' → logprob: -15.000075340270996
    8. ' (' → logprob: -15.375075340270996
    9. 'p' → logprob: -17.25007438659668
    10. 'olygon' → logprob: -17.50007438659668

Token 473: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.06826378405094147
    2. '(p' → logprob: -3.0682637691497803
    3. 'polygon' → logprob: -3.9432637691497803
    4. 'ol' → logprob: -10.19326400756836
    5. ' polygon' → logprob: -10.69326400756836
    6. 'oly' → logprob: -11.56826400756836
    7. ')' → logprob: -11.56826400756836
    8. '_polygon' → logprob: -12.19326400756836
    9. 'ython' → logprob: -12.56826400756836
    10. '(poly' → logprob: -12.81826400756836

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006726499181240797
    2. ')
' → logprob: -5.006726264953613
    3. '   ' → logprob: -11.631726264953613
    4. ' )' → logprob: -14.381726264953613
    5. ')

' → logprob: -15.506726264953613
    6. '),' → logprob: -15.756726264953613
    7. ')n' → logprob: -15.881726264953613
    8. 'def' → logprob: -16.00672721862793
    9. '<|end|>' → logprob: -16.13172721862793
    10. ')
' → logprob: -16.25672721862793

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021972409449517727
    2. ' for' → logprob: -6.877197265625
    3. '    
' → logprob: -7.502197265625
    4. 'for' → logprob: -7.627197265625
    5. '
' → logprob: -9.877197265625
    6. '```' → logprob: -10.252197265625
    7. '	for' → logprob: -10.752197265625
    8. ',' → logprob: -12.877197265625
    9. '   
' → logprob: -12.877197265625
    10. '  
' → logprob: -12.877197265625

Token 476: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014654617989435792
    2. 'j' → logprob: -7.001465320587158
    3. ' for' → logprob: -8.126465797424316
    4. '   ' → logprob: -8.376465797424316
    5. 'i' → logprob: -10.626465797424316
    6. '    
' → logprob: -13.376465797424316
    7. '	for' → logprob: -14.251465797424316
    8. '
' → logprob: -15.251465797424316
    9. 'ray' → logprob: -15.626465797424316
    10. 'px' → logprob: -15.626465797424316

Token 477: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889056205749512
    2. ' i' → logprob: -2.578890562057495
    3. '(i' → logprob: -15.578890800476074
    4. '	i' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '0' → logprob: -15.953890800476074
    7. '_' → logprob: -16.078889846801758
    8. '_i' → logprob: -16.203889846801758
    9. '   ' → logprob: -17.328889846801758
    10. '  ' → logprob: -18.328889846801758

Token 478: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22785834968090057
    2. 'in' → logprob: -1.602858304977417
    3. ' ' → logprob: -6.102858543395996
    4. '  ' → logprob: -10.102858543395996
    5. '_' → logprob: -10.227858543395996
    6. '	in' → logprob: -10.227858543395996
    7. '0' → logprob: -10.977858543395996
    8. '=' → logprob: -11.352858543395996
    9. '   ' → logprob: -11.352858543395996
    10. '(' → logprob: -11.727858543395996

Token 479: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048587486147880554
    2. ' range' → logprob: -3.0485875606536865
    3. '0' → logprob: -16.548587799072266
    4. '(range' → logprob: -16.923587799072266
    5. ' ' → logprob: -18.048587799072266
    6. '	range' → logprob: -19.798587799072266
    7. '   ' → logprob: -20.923587799072266
    8. '(' → logprob: -21.673587799072266
    9. '  ' → logprob: -21.798587799072266
    10. 'n' → logprob: -22.048587799072266

Token 480: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7593532800674438
    2. '(n' → logprob: -0.7593532800674438
    3. ' n' → logprob: -2.7593531608581543
    4. '(' → logprob: -7.384353160858154
    5. ' (' → logprob: -9.384353637695312
    6. '1' → logprob: -11.634353637695312
    7. '0' → logprob: -11.759353637695312
    8. '   ' → logprob: -12.759353637695312
    9. '	n' → logprob: -12.759353637695312
    10. ' ' → logprob: -14.259353637695312

Token 481: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22629037499427795
    2. '):' → logprob: -1.6012903451919556
    3. '-' → logprob: -7.351290225982666
    4. '   ' → logprob: -9.351290702819824
    5. '+' → logprob: -10.101290702819824
    6. ')' → logprob: -10.226290702819824
    7. '):
' → logprob: -10.851290702819824
    8. ':' → logprob: -11.476290702819824
    9. '():
' → logprob: -11.851290702819824
    10. ' ):
' → logprob: -12.351290702819824

Token 482: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23585224151611328
    2. '       ' → logprob: -1.7358522415161133
    3. ' p' → logprob: -4.235852241516113
    4. '    ' → logprob: -4.985852241516113
    5. 'a' → logprob: -5.610852241516113
    6. ' j' → logprob: -6.235852241516113
    7. ' a' → logprob: -6.235852241516113
    8. ' A' → logprob: -6.610852241516113
    9. '    
' → logprob: -7.360852241516113
    10. 'A' → logprob: -7.735852241516113

Token 483: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.014102739281952381
    2. 'j' → logprob: -4.889102935791016
    3. 'a' → logprob: -6.014102935791016
    4. '   ' → logprob: -6.264102935791016
    5. 'p' → logprob: -6.889102935791016
    6. ' x' → logprob: -7.389102935791016
    7. 'A' → logprob: -8.764102935791016
    8. 'ax' → logprob: -9.014102935791016
    9. 'jx' → logprob: -9.389102935791016
    10. ' j' → logprob: -10.264102935791016

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48872536420822144
    2. '0' → logprob: -0.9887253642082214
    3. ',' → logprob: -4.863725185394287
    4. 'i' → logprob: -5.488725185394287
    5. '=' → logprob: -7.113725185394287
    6. 'from' → logprob: -7.238725185394287
    7. ',i' → logprob: -7.488725185394287
    8. ',y' → logprob: -9.363725662231445
    9. 'y' → logprob: -9.738725662231445
    10. '```' → logprob: -9.988725662231445

Token 485: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38738858699798584
    2. ',y' → logprob: -1.1373885869979858
    3. ',x' → logprob: -8.012388229370117
    4. ' ,' → logprob: -8.762388229370117
    5. ',
' → logprob: -11.762388229370117
    6. '=' → logprob: -11.762388229370117
    7. '1' → logprob: -12.387388229370117
    8. 'y' → logprob: -12.512388229370117
    9. ',p' → logprob: -13.012388229370117
    10. ',i' → logprob: -14.012388229370117

Token 486: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.636005163192749
    2. ' =' → logprob: -1.636005163192749
    3. ',' → logprob: -1.761005163192749
    4. ',i' → logprob: -3.261005163192749
    5. '1' → logprob: -3.511005163192749
    6. 'i' → logprob: -3.761005163192749
    7. '=i' → logprob: -5.261005401611328
    8. '[i' → logprob: -6.261005401611328
    9. ')' → logprob: -6.636005401611328
    10. ' i' → logprob: -7.136005401611328

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5309551954269409
    2. ' =' → logprob: -1.030955195426941
    3. ',' → logprob: -2.9059553146362305
    4. ',x' → logprob: -7.7809553146362305
    5. '=x' → logprob: -9.65595531463623
    6. ',p' → logprob: -10.15595531463623
    7. '=p' → logprob: -10.90595531463623
    8. '   ' → logprob: -11.28095531463623
    9. ' ,' → logprob: -11.28095531463623
    10. '=line' → logprob: -11.65595531463623

Token 488: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.10020969063043594
    2. ' polygon' → logprob: -2.3502097129821777
    3. 'poly' → logprob: -12.85020923614502
    4. '_polygon' → logprob: -15.35020923614502
    5. '   ' → logprob: -16.100210189819336
    6. 'pol' → logprob: -16.725210189819336
    7. 'olygon' → logprob: -17.725210189819336
    8. 'python' → logprob: -17.850210189819336
    9. 'polar' → logprob: -17.975210189819336
    10. 'p' → logprob: -18.850210189819336

Token 489: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.968312951968983e-06
    2. ' =' → logprob: -12.625009536743164
    3. ' [' → logprob: -12.875009536743164
    4. '   ' → logprob: -13.625009536743164
    5. '[' → logprob: -14.000009536743164
    6. '=' → logprob: -14.875009536743164
    7. '[
' → logprob: -14.875009536743164
    8. ')' → logprob: -15.250009536743164
    9. 'i' → logprob: -15.375009536743164
    10. ')[' → logprob: -16.125009536743164

Token 490: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06197989732027054
    2. ']' → logprob: -2.8119800090789795
    3. ']
' → logprob: -12.061980247497559
    4. ' ]
' → logprob: -12.561980247497559
    5. '][' → logprob: -14.061980247497559
    6. ')
' → logprob: -14.311980247497559
    7. ' ]' → logprob: -14.561980247497559
    8. ']

' → logprob: -14.811980247497559
    9. '],' → logprob: -15.811980247497559
    10. '])
' → logprob: -15.811980247497559

Token 491: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0634742975234985
    2. ' 
' → logprob: -1.6884742975234985
    3. '
' → logprob: -1.9384742975234985
    4. '  
' → logprob: -2.063474178314209
    5. '    
' → logprob: -2.688474178314209
    6. '       ' → logprob: -2.813474178314209
    7. '        
' → logprob: -3.063474178314209
    8. '<|end|>' → logprob: -4.938474178314209
    9. ' ' → logprob: -5.063474178314209
    10. '   
' → logprob: -5.688474178314209

Token 492: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.38688725233078003
    2. ' x' → logprob: -1.1368873119354248
    3. '	x' → logprob: -11.636887550354004
    4. ' 
' → logprob: -13.261887550354004
    5. ' ' → logprob: -13.386887550354004
    6. '   ' → logprob: -13.511887550354004
    7. '(x' → logprob: -14.261887550354004
    8. '0' → logprob: -14.386887550354004
    9. '       ' → logprob: -14.636887550354004
    10. '
' → logprob: -15.261887550354004

Token 493: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33570364117622375
    2. '2' → logprob: -1.3357036113739014
    3. ',' → logprob: -4.7107038497924805
    4. '0' → logprob: -5.2107038497924805
    5. 'y' → logprob: -6.3357038497924805
    6. '+' → logprob: -6.9607038497924805
    7. ',y' → logprob: -6.9607038497924805
    8. '_next' → logprob: -7.3357038497924805
    9. 'n' → logprob: -7.4607038497924805
    10. 'prev' → logprob: -7.5857038497924805

Token 494: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0060036866925656796
    2. ',' → logprob: -5.1310038566589355
    3. ',p' → logprob: -10.006003379821777
    4. ' ,' → logprob: -10.631003379821777
    5. ',n' → logprob: -13.506003379821777
    6. ',x' → logprob: -13.631003379821777
    7. ',
' → logprob: -14.131003379821777
    8. '   ' → logprob: -14.381003379821777
    9. '=' → logprob: -14.631003379821777
    10. 'y' → logprob: -15.131003379821777

Token 495: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003925114404410124
    2. 'i' → logprob: -5.628925323486328
    3. '2' → logprob: -9.003925323486328
    4. 'n' → logprob: -9.628925323486328
    5. '```' → logprob: -10.378925323486328
    6. '[i' → logprob: -10.628925323486328
    7. '(i' → logprob: -10.878925323486328
    8. ' ' → logprob: -11.128925323486328
    9. '+' → logprob: -11.503925323486328
    10. ' i' → logprob: -11.753925323486328

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. ' =
' → logprob: -14.07594108581543
    4. '=
' → logprob: -14.45094108581543
    5. ',' → logprob: -14.95094108581543
    6. '=p' → logprob: -15.70094108581543
    7. ' ' → logprob: -16.20094108581543
    8. '   ' → logprob: -18.20094108581543
    9. ')' → logprob: -18.57594108581543
    10. '=line' → logprob: -18.82594108581543

Token 497: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.16022920608520508
    2. ' polygon' → logprob: -1.910229206085205
    3. 'poly' → logprob: -12.660228729248047
    4. '_polygon' → logprob: -14.160228729248047
    5. 'python' → logprob: -14.910228729248047
    6. '   ' → logprob: -15.285228729248047
    7. 'pol' → logprob: -15.660228729248047
    8. 'olygon' → logprob: -16.035228729248047
    9. 'polar' → logprob: -16.160228729248047
    10. ' ' → logprob: -17.410228729248047

Token 498: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0009199160267598927
    2. '[i' → logprob: -7.000919818878174
    3. '[
' → logprob: -12.750920295715332
    4. '(i' → logprob: -13.000920295715332
    5. '[' → logprob: -13.500920295715332
    6. '((' → logprob: -14.125920295715332
    7. '   ' → logprob: -14.750920295715332
    8. '[((' → logprob: -15.125920295715332
    9. '[next' → logprob: -15.125920295715332
    10. '
' → logprob: -16.625919342041016

Token 499: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12694406509399414
    2. '(i' → logprob: -2.126944065093994
    3. ' i' → logprob: -11.626943588256836
    4. '   ' → logprob: -13.001943588256836
    5. ' (' → logprob: -13.126943588256836
    6. '{i' → logprob: -13.126943588256836
    7. '_i' → logprob: -15.626943588256836
    8. '(' → logprob: -15.876943588256836
    9. ',i' → logprob: -15.876943588256836
    10. ')i' → logprob: -16.126943588256836

Token 500: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02176588401198387
    2. '(i' → logprob: -3.896765947341919
    3. '+' → logprob: -7.64676570892334
    4. ' i' → logprob: -7.77176570892334
    5. '{i' → logprob: -9.14676570892334
    6. '+i' → logprob: -9.39676570892334
    7. ' (' → logprob: -9.89676570892334
    8. '1' → logprob: -10.39676570892334
    9. '[i' → logprob: -10.64676570892334
    10. ' +' → logprob: -11.27176570892334

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'i' → logprob: -14.875000953674316
    4. ')' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'import' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '0' → logprob: -19.062501907348633
    9. '
' → logprob: -20.062501907348633
    10. 'def' → logprob: -20.062501907348633

Token 502: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.2522036135196686
    2. ')' → logprob: -1.5022035837173462
    3. ')]' → logprob: -8.502203941345215
    4. ')i' → logprob: -10.752203941345215
    5. ')][' → logprob: -10.877203941345215
    6. ')
' → logprob: -11.252203941345215
    7. ')])' → logprob: -12.377203941345215
    8. ' )' → logprob: -12.377203941345215
    9. ')n' → logprob: -12.627203941345215
    10. ']%' → logprob: -13.377203941345215

Token 503: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.306760805164231e-05
    2. ' n' → logprob: -11.25001335144043
    3. ')n' → logprob: -19.62501335144043
    4. 'len' → logprob: -20.00001335144043
    5. '(n' → logprob: -20.00001335144043
    6. '	n' → logprob: -20.62501335144043
    7. '   ' → logprob: -20.62501335144043
    8. '```' → logprob: -20.87501335144043
    9. '%n' → logprob: -21.12501335144043
    10. ' ' → logprob: -22.62501335144043

Token 504: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006743912119418383
    2. ']
' → logprob: -5.006743907928467
    3. ' ]' → logprob: -11.631744384765625
    4. ')' → logprob: -12.256744384765625
    5. '][' → logprob: -12.381744384765625
    6. ')]' → logprob: -12.631744384765625
    7. ']
' → logprob: -12.631744384765625
    8. ']

' → logprob: -13.131744384765625
    9. '])' → logprob: -13.631744384765625
    10. '()]' → logprob: -15.381744384765625

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004776142071932554
    2. '   ' → logprob: -5.3797760009765625
    3. 'if' → logprob: -9.754776000976562
    4. ' if' → logprob: -9.879776000976562
    5. '        
' → logprob: -10.254776000976562
    6. '```' → logprob: -12.629776000976562
    7. '<|end|>' → logprob: -13.254776000976562
    8. '           ' → logprob: -13.379776000976562
    9. '     ' → logprob: -13.879776000976562
    10. '	   ' → logprob: -14.254776000976562

Token 506: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004462043289095163
    2. '       ' → logprob: -6.004462242126465
    3. ' if' → logprob: -6.504462242126465
    4. '   ' → logprob: -7.629462242126465
    5. '        
' → logprob: -14.379462242126465
    6. '	if' → logprob: -14.504462242126465
    7. '```' → logprob: -15.254462242126465
    8. '#' → logprob: -15.879462242126465
    9. ' ' → logprob: -16.37946128845215
    10. 'If' → logprob: -16.37946128845215

Token 507: ' y' (ID: 342)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.28423169255256653
    2. '(y' → logprob: -1.5342316627502441
    3. 'y' → logprob: -3.534231662750244
    4. '(min' → logprob: -6.284231662750244
    5. '(((' → logprob: -8.284232139587402
    6. 'min' → logprob: -8.284232139587402
    7. '(' → logprob: -8.784232139587402
    8. ' ((' → logprob: -10.534232139587402
    9. '(abs' → logprob: -10.659232139587402
    10. ' y' → logprob: -11.409232139587402

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13050663471221924
    2. '>' → logprob: -2.7555065155029297
    3. ' >' → logprob: -3.6305065155029297
    4. '>=' → logprob: -4.25550651550293
    5. '<=' → logprob: -5.00550651550293
    6. ' <=' → logprob: -5.38050651550293
    7. ' >=' → logprob: -5.50550651550293
    8. '==' → logprob: -7.38050651550293
    9. '```' → logprob: -7.50550651550293
    10. ' ==' → logprob: -8.00550651550293

Token 509: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13064263761043549
    2. ' <=' → logprob: -2.1306426525115967
    3. '==' → logprob: -5.755642414093018
    4. ' ==' → logprob: -8.380642890930176
    5. '>' → logprob: -8.755642890930176
    6. '<' → logprob: -9.255642890930176
    7. ' >' → logprob: -11.005642890930176
    8. '```' → logprob: -11.630642890930176
    9. ' <' → logprob: -11.755642890930176
    10. ' ' → logprob: -12.255642890930176

Token 510: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019408921943977475
    2. ' y' → logprob: -6.251940727233887
    3. 'p' → logprob: -11.501940727233887
    4. ' ' → logprob: -13.876940727233887
    5. 'point' → logprob: -14.251940727233887
    6. '	y' → logprob: -15.626940727233887
    7. '   ' → logprob: -16.626941680908203
    8. '=' → logprob: -17.001941680908203
    9. 'yp' → logprob: -17.126941680908203
    10. '  ' → logprob: -17.376941680908203

Token 511: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005708831362426281
    2. ' y' → logprob: -5.255708694458008
    3. 'p' → logprob: -7.880708694458008
    4. 'point' → logprob: -10.380708694458008
    5. 'x' → logprob: -10.755708694458008
    6. '0' → logprob: -11.255708694458008
    7. ' ' → logprob: -11.880708694458008
    8. 'None' → logprob: -12.005708694458008
    9. '=y' → logprob: -12.505708694458008
    10. ' p' → logprob: -13.380708694458008

Token 512: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03421483188867569
    2. 'and' → logprob: -3.409214735031128
    3. ':' → logprob: -8.159214973449707
    4. ' ' → logprob: -9.159214973449707
    5. ':
' → logprob: -9.409214973449707
    6. '<|end|>' → logprob: -10.159214973449707
    7. '       ' → logprob: -11.659214973449707
    8. '           ' → logprob: -11.659214973449707
    9. '   ' → logprob: -11.784214973449707
    10. '=' → logprob: -12.034214973449707

Token 513: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5402413010597229
    2. '           ' → logprob: -1.4152412414550781
    3. ' and' → logprob: -2.415241241455078
    4. ' continue' → logprob: -3.415241241455078
    5. '<|end|>' → logprob: -4.165241241455078
    6. ' ' → logprob: -4.415241241455078
    7. ':' → logprob: -5.040241241455078
    8. ' if' → logprob: -5.665241241455078
    9. '   ' → logprob: -6.040241241455078
    10. ',' → logprob: -6.415241241455078

Token 514: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.04401986300945282
    2. ' if' → logprob: -3.794019937515259
    3. 'continue' (adapté à ' continue') → logprob: -4.66901969909668
    4. '           ' → logprob: -5.16901969909668
    5. '       ' → logprob: -5.29401969909668
    6. 'if' → logprob: -8.16901969909668
    7. '	continue' → logprob: -9.66901969909668
    8. ' continues' → logprob: -10.54401969909668
    9. ' ' → logprob: -10.54401969909668
    10. '   ' → logprob: -10.79401969909668

Token 515: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007101201452314854
    2. '
' → logprob: -5.507101058959961
    3. '<|end|>' → logprob: -7.007101058959961
    4. '   ' → logprob: -7.257101058959961
    5. '        
' → logprob: -7.507101058959961
    6. ' if' → logprob: -8.132101058959961
    7. '  
' → logprob: -8.257101058959961
    8. ' 
' → logprob: -9.632101058959961
    9. '    
' → logprob: -10.007101058959961
    10. ' ' → logprob: -10.507101058959961

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14929433166980743
    2. '   ' → logprob: -2.024294376373291
    3. ' if' → logprob: -5.899294376373291
    4. '<|end|>' → logprob: -7.274294376373291
    5. '    
' → logprob: -7.399294376373291
    6. '        
' → logprob: -7.524294376373291
    7. '    ' → logprob: -7.649294376373291
    8. '  
' → logprob: -7.649294376373291
    9. ' 
' → logprob: -8.524293899536133
    10. ' ' → logprob: -8.524293899536133

Token 517: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016235416755080223
    2. ' if' → logprob: -4.1412353515625
    3. '       ' → logprob: -8.8912353515625
    4. '   ' → logprob: -9.7662353515625
    5. '        
' → logprob: -13.2662353515625
    6. '           ' → logprob: -14.3912353515625
    7. '	if' → logprob: -14.3912353515625
    8. '    ' → logprob: -14.5162353515625
    9. 'min' → logprob: -14.6412353515625
    10. ' ' → logprob: -14.8912353515625

Token 518: ' y' (ID: 342)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12742094695568085
    2. '(y' → logprob: -3.3774209022521973
    3. ' ((' → logprob: -3.3774209022521973
    4. ' (' → logprob: -3.5024209022521973
    5. '(min' → logprob: -4.002420902252197
    6. ' min' → logprob: -7.002420902252197
    7. 'min' → logprob: -7.127420902252197
    8. '(' → logprob: -7.752420902252197
    9. 'y' → logprob: -8.002421379089355
    10. ' y' → logprob: -8.127421379089355

Token 519: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4163242280483246
    2. ' >' → logprob: -1.291324257850647
    3. '>=' → logprob: -3.4163241386413574
    4. '1' → logprob: -4.166324138641357
    5. ' >=' → logprob: -4.416324138641357
    6. '<|end|>' → logprob: -6.791324138641357
    7. '<' → logprob: -7.041324138641357
    8. ' <' → logprob: -7.916324138641357
    9. '<|end|>' → logprob: -7.916324138641357
    10. 'y' → logprob: -8.041324615478516

Token 520: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00796373188495636
    2. ' min' → logprob: -5.13296365737915
    3. 'y' → logprob: -6.25796365737915
    4. '=min' → logprob: -9.632964134216309
    5. ' y' → logprob: -10.132964134216309
    6. '(min' → logprob: -12.007964134216309
    7. 'max' → logprob: -13.132964134216309
    8. '	min' → logprob: -13.757964134216309
    9. '[min' → logprob: -14.132964134216309
    10. ' ymin' → logprob: -14.257964134216309

Token 521: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.225939872208983e-05
    2. 'y' → logprob: -10.375032424926758
    3. '(' → logprob: -13.875032424926758
    4. '((' → logprob: -17.375032424926758
    5. '(
' → logprob: -17.750032424926758
    6. ' (' → logprob: -17.875032424926758
    7. '(x' → logprob: -18.250032424926758
    8. '```' → logprob: -19.250032424926758
    9. ' y' → logprob: -20.125032424926758
    10. '[y' → logprob: -20.375032424926758

Token 522: '1' (ID: 16)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0021377671509981155
    2. '1' → logprob: -6.627137660980225
    3. 'y' → logprob: -7.127137660980225
    4. '(' → logprob: -12.252138137817383
    5. '(x' → logprob: -13.002138137817383
    6. ' y' → logprob: -14.502138137817383
    7. '(
' → logprob: -15.252138137817383
    8. ' (' → logprob: -15.377138137817383
    9. ',y' → logprob: -15.877138137817383
    10. '```' → logprob: -16.252138137817383

Token 523: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.22278356552124023
    2. ',' → logprob: -1.7227835655212402
    3. ',x' → logprob: -4.09778356552124
    4. ' ,' → logprob: -5.97278356552124
    5. '(y' → logprob: -6.59778356552124
    6. '(x' → logprob: -8.222784042358398
    7. 'y' → logprob: -9.097784042358398
    8. ',min' → logprob: -9.597784042358398
    9. ',i' → logprob: -10.097784042358398
    10. ',n' → logprob: -10.347784042358398

Token 524: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'y' → logprob: -16.5
    3. ' ' → logprob: -16.625
    4. '
' → logprob: -18.75
    5. '₂' → logprob: -19.125
    6. '```' → logprob: -19.5
    7. '1' → logprob: -19.625
    8. '   ' → logprob: -19.875
    9. ' y' → logprob: -20.0
    10. '۲' → logprob: -20.0

Token 525: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8239397406578064
    2. ' and' → logprob: -1.4489398002624512
    3. ')' → logprob: -1.5739398002624512
    4. 'and' → logprob: -2.448939800262451
    5. '):' → logprob: -4.198939800262451
    6. '<=' → logprob: -5.073939800262451
    7. ':' → logprob: -5.323939800262451
    8. ' <=' → logprob: -6.073939800262451
    9. ' )' → logprob: -6.198939800262451
    10. 'or' → logprob: -6.448939800262451

Token 526: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08854055404663086
    2. ':' → logprob: -3.338540554046631
    3. '       ' → logprob: -3.713540554046631
    4. '           ' → logprob: -4.713540554046631
    5. ' and' → logprob: -4.838540554046631
    6. ' continue' → logprob: -5.213540554046631
    7. 'and' → logprob: -7.213540554046631
    8. ' :' → logprob: -7.588540554046631
    9. 'continue' → logprob: -8.088541030883789
    10. '        ' → logprob: -8.213541030883789

Token 527: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.13009224832057953
    2. '           ' → logprob: -2.380092144012451
    3. '       ' → logprob: -4.130092144012451
    4. 'continue' (adapté à ' continue') → logprob: -4.755092144012451
    5. ' or' → logprob: -5.755092144012451
    6. '               ' → logprob: -8.13009262084961
    7. '	continue' → logprob: -8.38009262084961
    8. '            ' → logprob: -8.50509262084961
    9. '        ' → logprob: -8.75509262084961
    10. '   ' → logprob: -8.88009262084961

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017624642350710928
    2. ' if' → logprob: -9.000176429748535
    3. '   ' → logprob: -10.375176429748535
    4. '<|end|>' → logprob: -12.500176429748535
    5. '```' → logprob: -12.625176429748535
    6. '           ' → logprob: -12.750176429748535
    7. 'if' → logprob: -13.125176429748535
    8. ',' → logprob: -13.250176429748535
    9. '        
' → logprob: -13.375176429748535
    10. '      ' → logprob: -13.625176429748535

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021271659061312675
    2. ' if' → logprob: -4.021271705627441
    3. '   ' → logprob: -6.021271705627441
    4. '```' → logprob: -7.771271705627441
    5. 'if' → logprob: -9.271271705627441
    6. '<|end|>' → logprob: -9.896271705627441
    7. ' y' → logprob: -10.771271705627441
    8. ' or' → logprob: -11.521271705627441
    9. ' ' → logprob: -11.521271705627441
    10. '        
' → logprob: -11.521271705627441

Token 530: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05699664354324341
    2. 'if' (adapté à ' if') → logprob: -3.0569965839385986
    3. '       ' → logprob: -4.806996822357178
    4. '   ' → logprob: -8.80699634552002
    5. '```' → logprob: -10.30699634552002
    6. '    ' → logprob: -12.30699634552002
    7. ' ' → logprob: -12.80699634552002
    8. '        
' → logprob: -13.30699634552002
    9. ' 
' → logprob: -13.68199634552002
    10. '
' → logprob: -13.68199634552002

Token 531: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11286575347185135
    2. 'y' → logprob: -2.237865686416626
    3. '(y' → logprob: -11.362865447998047
    4. ' max' → logprob: -11.487865447998047
    5. 'max' → logprob: -12.362865447998047
    6. '   ' → logprob: -12.487865447998047
    7. ' not' → logprob: -12.612865447998047
    8. ' min' → logprob: -13.237865447998047
    9. ' (' → logprob: -13.237865447998047
    10. ' ' → logprob: -13.612865447998047

Token 532: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34456828236579895
    2. '>' → logprob: -1.4695682525634766
    3. ' >=' → logprob: -3.2195682525634766
    4. '>=' → logprob: -3.8445682525634766
    5. ' ' → logprob: -10.094568252563477
    6. '<=' → logprob: -11.719568252563477
    7. ' <=' → logprob: -11.969568252563477
    8. '==' → logprob: -12.344568252563477
    9. ' >
' → logprob: -12.469568252563477
    10. '   ' → logprob: -12.469568252563477

Token 533: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16023173928260803
    2. ' max' → logprob: -1.9102317094802856
    3. 'min' → logprob: -11.910231590270996
    4. ' min' → logprob: -14.285231590270996
    5. '(max' → logprob: -15.910231590270996
    6. '	max' → logprob: -16.660232543945312
    7. '[max' → logprob: -18.285232543945312
    8. '=max' → logprob: -19.660232543945312
    9. ' ' → logprob: -19.910232543945312
    10. '_max' → logprob: -20.285232543945312

Token 534: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.318681188422488e-05
    2. ' (' → logprob: -11.75001335144043
    3. '(' → logprob: -12.25001335144043
    4. 'y' → logprob: -14.75001335144043
    5. '(x' → logprob: -18.75001335144043
    6. ' y' → logprob: -19.00001335144043
    7. '(
' → logprob: -19.87501335144043
    8. '<|end|>' → logprob: -19.87501335144043
    9. ',y' → logprob: -20.37501335144043
    10. '(Y' → logprob: -20.50001335144043

Token 535: '1' (ID: 16)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.309382373117842e-05
    2. 'y' → logprob: -10.375033378601074
    3. ' (' → logprob: -14.000033378601074
    4. '(' → logprob: -14.500033378601074
    5. '1' → logprob: -15.000033378601074
    6. '[y' → logprob: -16.750032424926758
    7. ',y' → logprob: -17.625032424926758
    8. ' y' → logprob: -17.875032424926758
    9. '(
' → logprob: -18.125032424926758
    10. '```' → logprob: -18.625032424926758

Token 536: ',y' (ID: 16103)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.07141184061765671
    2. ',y' → logprob: -2.6964118480682373
    3. 'y' → logprob: -6.696411609649658
    4. ',' → logprob: -8.446412086486816
    5. '[y' → logprob: -11.696412086486816
    6. ' (' → logprob: -12.196412086486816
    7. ' ,' → logprob: -12.821412086486816
    8. ' y' → logprob: -13.196412086486816
    9. '(' → logprob: -13.321412086486816
    10. ',(' → logprob: -13.696412086486816

Token 537: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004082197323441505
    2. '2' → logprob: -5.504082202911377
    3. '```' → logprob: -13.504081726074219
    4. '(i' → logprob: -14.129081726074219
    5. '(' → logprob: -14.754081726074219
    6. '
' → logprob: -15.254081726074219
    7. '{' → logprob: -15.504081726074219
    8. '[i' → logprob: -15.879081726074219
    9. ' ' → logprob: -16.25408172607422
    10. 'i' → logprob: -16.25408172607422

Token 538: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0610792301595211
    2. '):
' → logprob: -3.061079263687134
    3. ':' → logprob: -4.811079025268555
    4. '   ' → logprob: -6.186079025268555
    5. '       ' → logprob: -6.561079025268555
    6. ' ):' → logprob: -8.186079025268555
    7. ':
' → logprob: -8.686079025268555
    8. ')' → logprob: -8.936079025268555
    9. ' ):
' → logprob: -10.061079025268555
    10. '           ' → logprob: -10.061079025268555

Token 539: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5487154722213745
    2. '           ' → logprob: -0.9237154722213745
    3. ':' → logprob: -4.423715591430664
    4. ' continue' → logprob: -4.423715591430664
    5. 'continue' → logprob: -7.673715591430664
    6. ':
' → logprob: -7.798715591430664
    7. '   ' → logprob: -8.548715591430664
    8. ',' → logprob: -10.423715591430664
    9. '               ' → logprob: -10.423715591430664
    10. '	continue' → logprob: -10.798715591430664

Token 540: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1464286744594574
    2. 'continue' (adapté à ' continue') → logprob: -2.6464285850524902
    3. '           ' → logprob: -3.0214285850524902
    4. '       ' → logprob: -4.14642858505249
    5. '   ' → logprob: -7.39642858505249
    6. '               ' → logprob: -9.271429061889648
    7. '	continue' → logprob: -10.271429061889648
    8. ' ' → logprob: -13.021429061889648
    9. '_continue' → logprob: -13.396429061889648
    10. ' continues' → logprob: -13.646429061889648

Token 541: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057499632239341736
    2. '   ' → logprob: -3.307499647140503
    3. '<|end|>' → logprob: -4.932499408721924
    4. '    
' → logprob: -5.307499408721924
    5. '        
' → logprob: -5.682499408721924
    6. '  
' → logprob: -6.557499408721924
    7. ' 
' → logprob: -7.807499408721924
    8. '
' → logprob: -8.432499885559082
    9. '   
' → logprob: -8.682499885559082
    10. ',' → logprob: -8.682499885559082

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005179320462048054
    2. '   ' → logprob: -5.380179405212402
    3. ' if' → logprob: -8.380179405212402
    4. '	' → logprob: -9.380179405212402
    5. '        
' → logprob: -9.505179405212402
    6. 'if' → logprob: -10.005179405212402
    7. '           ' → logprob: -10.880179405212402
    8. '    
' → logprob: -11.255179405212402
    9. '  
' → logprob: -11.255179405212402
    10. ' 
' → logprob: -11.630179405212402

Token 543: ' x' (ID: 1215)
  Prédit: 'xin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xin' → logprob: -0.4684031009674072
    2. 'x' (adapté à ' x') → logprob: -1.4684031009674072
    3. ' x' → logprob: -2.7184031009674072
    4. ' xin' → logprob: -2.9684031009674072
    5. 'inter' → logprob: -4.843402862548828
    6. '   ' → logprob: -4.968402862548828
    7. 'xt' → logprob: -5.093402862548828
    8. ' at' → logprob: -6.093402862548828
    9. 'if' → logprob: -7.343402862548828
    10. ' intersect' → logprob: -7.843402862548828

Token 544: 'int' (ID: 491)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01371714100241661
    2. '<=' → logprob: -5.638717174530029
    3. '_inter' → logprob: -6.013717174530029
    4. '<' → logprob: -6.263717174530029
    5. ' =' → logprob: -6.263717174530029
    6. '=(' → logprob: -6.638717174530029
    7. '=int' → logprob: -7.138717174530029
    8. '+=' → logprob: -8.138716697692871
    9. 'in' → logprob: -8.513716697692871
    10. '=((' → logprob: -8.888716697692871

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.984787902794778e-05
    2. ' =' → logprob: -9.375100135803223
    3. '=((' → logprob: -11.625100135803223
    4. '=(' → logprob: -12.500100135803223
    5. '=float' → logprob: -13.375100135803223
    6. '=int' → logprob: -14.875100135803223
    7. '=x' → logprob: -15.375100135803223
    8. '=line' → logprob: -16.000099182128906
    9. '=

' → logprob: -16.875099182128906
    10. '=
' → logprob: -16.875099182128906

Token 546: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31366440653800964
    2. 'x' → logprob: -1.313664436340332
    3. '(' → logprob: -8.063664436340332
    4. ' (' → logprob: -9.688664436340332
    5. ' x' → logprob: -10.813664436340332
    6. '((' → logprob: -12.938664436340332
    7. '(float' → logprob: -13.563664436340332
    8. 'float' → logprob: -13.813664436340332
    9. '   ' → logprob: -14.938664436340332
    10. ' ' → logprob: -15.688664436340332

Token 547: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38756096363067627
    2. 'x' → logprob: -1.1375609636306763
    3. '(y' → logprob: -7.762560844421387
    4. '(x' → logprob: -8.262560844421387
    5. ' y' → logprob: -12.887560844421387
    6. '(' → logprob: -13.012560844421387
    7. ' (' → logprob: -14.512560844421387
    8. ')' → logprob: -15.137560844421387
    9. ' x' → logprob: -15.262560844421387
    10. 'float' → logprob: -16.137561798095703

Token 548: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20422285795211792
    2. ' -' → logprob: -1.7042229175567627
    3. '-y' → logprob: -6.454222679138184
    4. '-x' → logprob: -6.704222679138184
    5. '-n' → logprob: -13.579222679138184
    6. '-m' → logprob: -14.079222679138184
    7. '-s' → logprob: -14.704222679138184
    8. '-(' → logprob: -14.829222679138184
    9. '-p' → logprob: -14.954222679138184
    10. '1' → logprob: -15.079222679138184

Token 549: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019310165662318468
    2. ' y' → logprob: -6.251931190490723
    3. 'x' → logprob: -13.251931190490723
    4. ')' → logprob: -15.126931190490723
    5. ')y' → logprob: -15.876931190490723
    6. '	y' → logprob: -15.876931190490723
    7. ' ' → logprob: -17.001930236816406
    8. '   ' → logprob: -17.126930236816406
    9. '<|end|>' → logprob: -17.376930236816406
    10. '(y' → logprob: -17.626930236816406

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005274149589240551
    2. 'y' → logprob: -7.875527381896973
    3. 'x' → logprob: -9.375527381896973
    4. ' y' → logprob: -10.125527381896973
    5. '[' → logprob: -11.750527381896973
    6. ')' → logprob: -12.125527381896973
    7. ' ' → logprob: -13.000527381896973
    8. '```' → logprob: -13.250527381896973
    9. '<|end|>' → logprob: -13.500527381896973
    10. '   ' → logprob: -13.875527381896973

Token 551: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2029997557401657
    2. ')*(' → logprob: -1.7029997110366821
    3. ')*' → logprob: -6.452999591827393
    4. ' )' → logprob: -11.95300006866455
    5. '*(' → logprob: -13.32800006866455
    6. ')/(' → logprob: -14.45300006866455
    7. ')
' → logprob: -14.45300006866455
    8. ')**' → logprob: -16.202999114990234
    9. '   ' → logprob: -16.702999114990234
    10. ' ' → logprob: -17.077999114990234

Token 552: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931519508361816
    2. '(x' → logprob: -0.6931519508361816
    3. ' (' → logprob: -12.818151473999023
    4. ' x' → logprob: -13.193151473999023
    5. '{x' → logprob: -16.568151473999023
    6. ')x' → logprob: -17.443151473999023
    7. ',x' → logprob: -17.568151473999023
    8. '[x' → logprob: -17.818151473999023
    9. '	x' → logprob: -18.068151473999023
    10. '_x' → logprob: -18.943151473999023

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. '[' → logprob: -18.25
    4. '
' → logprob: -18.875
    5. '₂' → logprob: -19.125
    6. '۲' → logprob: -19.5
    7. ' ' → logprob: -19.625
    8. '   ' → logprob: -20.0
    9. ')' → logprob: -20.75
    10. '*(' → logprob: -21.0625

Token 554: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7127708196640015
    2. ' -' → logprob: -0.7127708196640015
    3. '-x' → logprob: -4.462770938873291
    4. '1' → logprob: -5.462770938873291
    5. '[' → logprob: -5.712770938873291
    6. 'x' → logprob: -8.962770462036133
    7. '```' → logprob: -9.587770462036133
    8. '   ' → logprob: -10.212770462036133
    9. '[x' → logprob: -10.712770462036133
    10. '2' → logprob: -10.712770462036133

Token 555: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.554343366995454e-05
    2. ' x' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -15.375085830688477
    4. ')x' → logprob: -15.875085830688477
    5. 'import' → logprob: -16.125085830688477
    6. '	x' → logprob: -17.250085830688477
    7. '```' → logprob: -17.750085830688477
    8. '0' → logprob: -18.125085830688477
    9. ' ' → logprob: -18.250085830688477
    10. '1' → logprob: -18.375085830688477

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -12.125011444091797
    3. ')' → logprob: -12.500011444091797
    4. '```' → logprob: -13.875011444091797
    5. '...' → logprob: -15.750011444091797
    6. '0' → logprob: -15.750011444091797
    7. '[' → logprob: -15.750011444091797
    8. ',' → logprob: -16.125011444091797
    9. '<|end|>' → logprob: -16.375011444091797
    10. 'import' → logprob: -16.500011444091797

Token 557: ')/(' (ID: 60504)
  Prédit: ')/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/(' → logprob: -0.2521652579307556
    2. ')' → logprob: -1.5021653175354004
    3. ')/' → logprob: -8.502164840698242
    4. ' )' → logprob: -11.627164840698242
    5. ')+(' → logprob: -11.627164840698242
    6. ')
' → logprob: -11.627164840698242
    7. ')*(' → logprob: -13.002164840698242
    8. ')+' → logprob: -13.377164840698242
    9. ')//' → logprob: -13.877164840698242
    10. ')\' → logprob: -15.377164840698242

Token 558: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.029775604605674744
    2. 'y' → logprob: -3.529775619506836
    3. ' (' → logprob: -10.779775619506836
    4. ' y' → logprob: -12.779775619506836
    5. '(' → logprob: -14.279775619506836
    6. '   ' → logprob: -15.154775619506836
    7. ')y' → logprob: -15.654775619506836
    8. '	y' → logprob: -16.154775619506836
    9. '[y' → logprob: -16.404775619506836
    10. ',y' → logprob: -16.779775619506836

Token 559: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.75000286102295
    3. '```' → logprob: -14.87500286102295
    4. 's' → logprob: -15.00000286102295
    5. '[' → logprob: -15.12500286102295
    6. '
' → logprob: -15.25000286102295
    7. ' -' → logprob: -16.000001907348633
    8. '(' → logprob: -17.250001907348633
    9. '

' → logprob: -17.500001907348633
    10. ')' → logprob: -17.500001907348633

Token 560: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011051470413804054
    2. ' -' → logprob: -4.511051654815674
    3. '[' → logprob: -13.511051177978516
    4. '-
' → logprob: -13.761051177978516
    5. '```' → logprob: -15.136051177978516
    6. '1' → logprob: -15.761051177978516
    7. ')' → logprob: -16.136051177978516
    8. ' ' → logprob: -16.386051177978516
    9. 'user' → logprob: -16.636051177978516
    10. 'y' → logprob: -16.761051177978516

Token 561: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00862876046448946
    2. ' y' → logprob: -4.758628845214844
    3. '(y' → logprob: -11.258628845214844
    4. '	y' → logprob: -14.758628845214844
    5. ')y' → logprob: -15.133628845214844
    6. ' (' → logprob: -15.883628845214844
    7. '```' → logprob: -16.133628845214844
    8. '(' → logprob: -16.383628845214844
    9. '   ' → logprob: -16.508628845214844
    10. ' ' → logprob: -16.633628845214844

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -12.625009536743164
    3. '-' → logprob: -12.750009536743164
    4. '```' → logprob: -13.250009536743164
    5. 'y' → logprob: -15.375009536743164
    6. '[' → logprob: -15.375009536743164
    7. ' -' → logprob: -15.750009536743164
    8. 'i' → logprob: -15.875009536743164
    9. '   ' → logprob: -16.000009536743164
    10. '...' → logprob: -16.250009536743164

Token 563: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004087543580681086
    2. ')+' → logprob: -5.504087448120117
    3. ' )' → logprob: -11.629087448120117
    4. ')
' → logprob: -15.504087448120117
    5. ')+(' → logprob: -18.004087448120117
    6. ')

' → logprob: -18.504087448120117
    7. ' ' → logprob: -18.629087448120117
    8. '+' → logprob: -18.754087448120117
    9. ')+"' → logprob: -19.879087448120117
    10. '）' → logprob: -19.879087448120117

Token 564: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2522313892841339
    2. '+' → logprob: -1.5022313594818115
    3. '+x' → logprob: -8.12723159790039
    4. '+
' → logprob: -12.87723159790039
    5. ' +
' → logprob: -13.00223159790039
    6. ')+' → logprob: -14.50223159790039
    7. ' ' → logprob: -14.75223159790039
    8. ')' → logprob: -14.75223159790039
    9. ' plus' → logprob: -16.12723159790039
    10. 'x' → logprob: -16.12723159790039

Token 565: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750484973192215
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -17.90475082397461
    4. '   ' → logprob: -20.52975082397461
    5. ' ' → logprob: -20.90475082397461
    6. ')x' → logprob: -21.02975082397461
    7. '```' → logprob: -21.27975082397461
    8. '(x' → logprob: -21.40475082397461
    9. '"x' → logprob: -21.52975082397461
    10. '1' → logprob: -22.27975082397461

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '<|end|>' → logprob: -18.625
    4. '```' → logprob: -19.0
    5. '[' → logprob: -19.25
    6. '_' → logprob: -19.9375
    7. '१' → logprob: -20.0625
    8. '১' → logprob: -20.5
    9. '.' → logprob: -20.5625
    10. '۱' → logprob: -20.8125

Token 567: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023343192413449287
    2. '   ' → logprob: -5.023343086242676
    3. 'if' → logprob: -5.023343086242676
    4. ' if' → logprob: -5.023343086242676
    5. '<|end|>' → logprob: -5.898343086242676
    6. ')' → logprob: -8.523343086242676
    7. '
' → logprob: -8.898343086242676
    8. '<|end|>' → logprob: -9.773343086242676
    9. '           ' → logprob: -10.398343086242676
    10. ')
' → logprob: -10.648343086242676

Token 568: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12260928750038147
    2. '       ' → logprob: -2.3726093769073486
    3. ' if' → logprob: -3.8726093769073486
    4. 'if' → logprob: -6.8726091384887695
    5. '    
' → logprob: -9.87260913848877
    6. '
' → logprob: -9.99760913848877
    7. '<|end|>' → logprob: -9.99760913848877
    8. '     ' → logprob: -10.62260913848877
    9. '  ' → logprob: -10.74760913848877
    10. ',' → logprob: -10.87260913848877

Token 569: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014221210032701492
    2. ' if' → logprob: -4.26422119140625
    3. '   ' → logprob: -9.76422119140625
    4. '       ' → logprob: -15.76422119140625
    5. 'cnt' → logprob: -16.63922119140625
    6. '	if' → logprob: -17.51422119140625
    7. '```' → logprob: -18.01422119140625
    8. '
' → logprob: -18.26422119140625
    9. '    ' → logprob: -18.26422119140625
    10. '  ' → logprob: -19.38922119140625

Token 570: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28115782141685486
    2. 'x' → logprob: -1.4061578512191772
    3. ' ' → logprob: -12.406157493591309
    4. '  ' → logprob: -14.031157493591309
    5. '(x' → logprob: -14.031157493591309
    6. '   ' → logprob: -14.156157493591309
    7. '	x' → logprob: -14.406157493591309
    8. 'int' → logprob: -16.031158447265625
    9. '    ' → logprob: -16.031158447265625
    10. ' ' → logprob: -16.593658447265625

Token 571: 'int' (ID: 491)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9171965718269348
    2. '<' → logprob: -1.29219651222229
    3. '<int' → logprob: -1.79219651222229
    4. ' <=' → logprob: -2.91719651222229
    5. 'int' → logprob: -3.04219651222229
    6. ' >' → logprob: -3.54219651222229
    7. '<=' → logprob: -4.292196750640869
    8. '>' → logprob: -4.292196750640869
    9. '<x' → logprob: -8.167196273803711
    10. ' >=' → logprob: -8.792196273803711

Token 572: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5771166682243347
    2. '>' → logprob: -0.8271166682243347
    3. ' <=' → logprob: -7.7021164894104
    4. '<=' → logprob: -8.452116966247559
    5. '>x' → logprob: -9.077116966247559
    6. '>=' → logprob: -9.202116966247559
    7. ' >=' → logprob: -9.202116966247559
    8. '<' → logprob: -9.327116966247559
    9. ' <' → logprob: -9.702116966247559
    10. ' ' → logprob: -10.952116966247559

Token 573: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020667314529419
    2. ' x' → logprob: -2.3502066135406494
    3. '	x' → logprob: -17.10020637512207
    4. ' ' → logprob: -17.60020637512207
    5. '(x' → logprob: -19.22520637512207
    6. '   ' → logprob: -19.22520637512207
    7. '=x' → logprob: -19.72520637512207
    8. '>x' → logprob: -19.85020637512207
    9. '=' → logprob: -20.10020637512207
    10. ')x' → logprob: -20.85020637512207

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04775432124733925
    2. '):' → logprob: -3.7977542877197266
    3. '<|end|>' → logprob: -3.9227542877197266
    4. ')' → logprob: -6.297754287719727
    5. '<|end|>' → logprob: -6.797754287719727
    6. 'x' → logprob: -7.547754287719727
    7. ':return' → logprob: -7.797754287719727
    8. ':
' → logprob: -8.922754287719727
    9. '.' → logprob: -9.672754287719727
    10. '):
' → logprob: -10.172754287719727

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8841809034347534
    2. ' cnt' → logprob: -1.3841809034347534
    3. '       ' → logprob: -1.6341809034347534
    4. 'cnt' → logprob: -2.259181022644043
    5. ':
' → logprob: -3.884181022644043
    6. ':' → logprob: -5.384181022644043
    7. ' :
' → logprob: -5.509181022644043
    8. '\n' → logprob: -6.759181022644043
    9. '[cnt' → logprob: -6.884181022644043
    10. '   ' → logprob: -6.884181022644043

Token 576: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.06244342774152756
    2. ' cnt' → logprob: -2.812443494796753
    3. '           ' → logprob: -7.937443256378174
    4. '       ' → logprob: -9.187443733215332
    5. '	cnt' → logprob: -11.437443733215332
    6. '               ' → logprob: -13.437443733215332
    7. '(cnt' → logprob: -13.562443733215332
    8. '   ' → logprob: -13.562443733215332
    9. '[cnt' → logprob: -14.187443733215332
    10. 'count' → logprob: -14.687443733215332

Token 577: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38693565130233765
    2. ' +=' → logprob: -1.1369357109069824
    3. '+' → logprob: -10.011935234069824
    4. '=' → logprob: -11.636935234069824
    5. ' ^=' → logprob: -12.136935234069824
    6. '   ' → logprob: -13.386935234069824
    7. ']+=' → logprob: -13.511935234069824
    8. '    ' → logprob: -14.386935234069824
    9. ' ' → logprob: -14.511935234069824
    10. '+="' → logprob: -14.761935234069824

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -21.250001907348633
    5. '0' → logprob: -22.062501907348633
    6. '
' → logprob: -22.250001907348633
    7. '  ' → logprob: -22.312501907348633
    8. '１' → logprob: -22.500001907348633
    9. '!' → logprob: -23.312501907348633
    10. '۱' → logprob: -23.437501907348633

Token 579: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1637311428785324
    2. '
' → logprob: -1.9137310981750488
    3. '\n' → logprob: -7.038731098175049
    4. 'return' → logprob: -7.288731098175049
    5. '<|end|>' → logprob: -7.413731098175049
    6. '    
' → logprob: -7.538731098175049
    7. ' return' → logprob: -8.163731575012207
    8. '  
' → logprob: -8.788731575012207
    9. '	return' → logprob: -9.288731575012207
    10. '       ' → logprob: -9.413731575012207

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031980596482753754
    2. '
' → logprob: -3.531980514526367
    3. 'return' → logprob: -7.281980514526367
    4. ' return' → logprob: -7.406980514526367
    5. '<|end|>' → logprob: -7.656980514526367
    6. '	return' → logprob: -9.281980514526367
    7. '\n' → logprob: -9.281980514526367
    8. '    
' → logprob: -9.406980514526367
    9. '       ' → logprob: -9.781980514526367
    10. ' ' → logprob: -10.531980514526367

Token 581: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46499326825141907
    2. '   ' → logprob: -1.4649932384490967
    3. ' return' → logprob: -1.9649932384490967
    4. '
' → logprob: -7.464993476867676
    5. ' ' → logprob: -10.964993476867676
    6. '	return' → logprob: -11.339993476867676
    7. 'def' → logprob: -11.464993476867676
    8. '```' → logprob: -12.589993476867676
    9. ':return' → logprob: -13.339993476867676
    10. 'eturn' → logprob: -13.839993476867676

Token 582: ' (' (ID: 350)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.012659032829105854
    2. '(cnt' → logprob: -4.762659072875977
    3. ' cnt' → logprob: -5.512659072875977
    4. 'cn' → logprob: -14.137659072875977
    5. '[cnt' → logprob: -15.512659072875977
    6. ' (' → logprob: -17.012659072875977
    7. '(c' → logprob: -17.387659072875977
    8. '	cnt' → logprob: -17.512659072875977
    9. 'count' → logprob: -19.137659072875977
    10. '(' → logprob: -19.387659072875977

Token 583: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -3.166338137816638e-05
    2. ' cnt' → logprob: -10.750031471252441
    3. '(cnt' → logprob: -11.500031471252441
    4. '   ' → logprob: -19.375032424926758
    5. 'cn' → logprob: -19.375032424926758
    6. '[cnt' → logprob: -19.625032424926758
    7. '	cnt' → logprob: -20.000032424926758
    8. 'count' → logprob: -20.750032424926758
    9. '
' → logprob: -21.875032424926758
    10. 'c' → logprob: -21.875032424926758

Token 584: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12715530395507812
    2. ' %' → logprob: -2.127155303955078
    3. ')%' → logprob: -8.877155303955078
    4. ')' → logprob: -9.377155303955078
    5. ' ' → logprob: -13.502155303955078
    6. ' ' → logprob: -14.377155303955078
    7. '>' → logprob: -15.377155303955078
    8. '1' → logprob: -15.377155303955078
    9. ' )' → logprob: -16.002155303955078
    10. '%)' → logprob: -16.252155303955078

Token 585: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.625075340270996
    4. '   ' → logprob: -17.37507438659668
    5. '
' → logprob: -18.12507438659668
    6. '  ' → logprob: -19.37507438659668
    7. '۲' → logprob: -19.87507438659668
    8. '``' → logprob: -20.50007438659668
    9. '٢' → logprob: -21.12507438659668
    10. '２' → logprob: -21.25007438659668

Token 586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -15.250001907348633
    4. '
' → logprob: -17.875001907348633
    5. '۲' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '٢' → logprob: -18.375001907348633
    8. '２' → logprob: -18.875001907348633
    9. '२' → logprob: -20.125001907348633
    10. '``' → logprob: -20.187501907348633

Token 587: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8652947545051575
    2. ')==' → logprob: -0.8652947545051575
    3. ')' → logprob: -1.8652946949005127
    4. ' ==' → logprob: -5.990294933319092
    5. '1' → logprob: -7.865294933319092
    6. ')!=' → logprob: -8.115294456481934
    7. '!=' → logprob: -9.490294456481934
    8. '=' → logprob: -11.865294456481934
    9. ']==' → logprob: -11.990294456481934
    10. ' )' → logprob: -12.115294456481934

Token 588: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31896305084228516
    2. ' ==' → logprob: -1.3189630508422852
    3. 'def' → logprob: -6.318963050842285
    4. '<|end|>' → logprob: -6.693963050842285
    5. '!=' → logprob: -7.318963050842285
    6. '1' → logprob: -7.568963050842285
    7. ' !=' → logprob: -7.693963050842285
    8. '0' → logprob: -7.818963050842285
    9. '
' → logprob: -8.443963050842285
    10. ' ' → logprob: -8.818963050842285

Token 589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'True' → logprob: -18.000001907348633
    4. '```' → logprob: -19.000001907348633
    5. '
' → logprob: -19.625001907348633
    6. '0' → logprob: -20.375001907348633
    7. '

' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '１' → logprob: -21.875001907348633
    10. '[' → logprob: -22.312501907348633

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '0' → logprob: -20.75
    4. '
' → logprob: -21.375
    5. '```' → logprob: -21.625
    6. '

' → logprob: -22.625
    7. 'True' → logprob: -23.25
    8. '3' → logprob: -23.375
    9. '   ' → logprob: -23.875
    10. '１' → logprob: -24.0

Token 591: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 592: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000444850797066465
    2. '#' → logprob: -7.8754448890686035
    3. 'class' → logprob: -10.500444412231445
    4. 'import' → logprob: -11.125444412231445
    5. '```' → logprob: -11.625444412231445
    6. '<|end|>' → logprob: -11.750444412231445
    7. '<|end|>' → logprob: -13.625444412231445
    8. '.' → logprob: -14.125444412231445
    9. 'for' → logprob: -14.250444412231445
    10. 'ndef' → logprob: -14.500444412231445

Token 593: ' build' (ID: 3024)
  Prédit: ' convex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.6971582174301147
    2. ' polygon' → logprob: -1.1971582174301147
    3. 'polygon' → logprob: -3.0721583366394043
    4. 'conv' → logprob: -3.8221583366394043
    5. ' line' → logprob: -3.9471583366394043
    6. ' main' → logprob: -3.9471583366394043
    7. ' point' → logprob: -4.947158336639404
    8. ' clip' → logprob: -5.072158336639404
    9. ' find' → logprob: -5.197158336639404
    10. ' mink' → logprob: -5.197158336639404

Token 594: '_graph' (ID: 33441)
  Prédit: '_polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.16902978718280792
    2. '_' → logprob: -2.919029712677002
    3. '_conv' → logprob: -3.169029712677002
    4. '_cut' → logprob: -3.419029712677002
    5. '_clip' → logprob: -4.794029712677002
    6. '_poly' → logprob: -5.294029712677002
    7. '_half' → logprob: -5.669029712677002
    8. '_pol' → logprob: -6.294029712677002
    9. '_h' → logprob: -6.419029712677002
    10. '(p' → logprob: -7.044029712677002

Token 595: '(lines' (ID: 73839)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.007946459576487541
    2. '(pol' → logprob: -6.007946491241455
    3. '(points' → logprob: -6.382946491241455
    4. '():' → logprob: -6.757946491241455
    5. '(' → logprob: -6.757946491241455
    6. '(vertices' → logprob: -7.507946491241455
    7. '(poly' → logprob: -7.757946491241455
    8. '(graph' → logprob: -8.632946014404297
    9. '(edges' → logprob: -10.007946014404297
    10. '(point' → logprob: -10.257946014404297

Token 596: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030566273257136345
    2. ',' → logprob: -3.7805662155151367
    3. '):
' → logprob: -5.405566215515137
    4. '(lines' → logprob: -6.030566215515137
    5. '_lines' → logprob: -8.780566215515137
    6. ' ):' → logprob: -9.655566215515137
    7. ',l' → logprob: -10.030566215515137
    8. ')' → logprob: -10.655566215515137
    9. ':' → logprob: -10.780566215515137
    10. ',line' → logprob: -11.280566215515137

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018681871006265283
    2. ' graph' → logprob: -6.62686824798584
    3. 'graph' → logprob: -8.00186824798584
    4. '	graph' → logprob: -8.62686824798584
    5. 'n' → logprob: -11.12686824798584
    6. ' edges' → logprob: -12.62686824798584
    7. 'edges' → logprob: -13.25186824798584
    8. ' lines' → logprob: -13.62686824798584
    9. '   ' → logprob: -13.75186824798584
    10. ' n' → logprob: -13.75186824798584

Token 598: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.26496437191963196
    2. '   ' → logprob: -1.6399643421173096
    3. ' graph' → logprob: -3.7649643421173096
    4. 'n' → logprob: -4.764964580535889
    5. ' n' → logprob: -6.389964580535889
    6. 'adj' → logprob: -6.514964580535889
    7. 'from' → logprob: -7.139964580535889
    8. 'import' → logprob: -7.264964580535889
    9. 'points' → logprob: -7.639964580535889
    10. 'G' → logprob: -7.639964580535889

Token 599: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14416880905628204
    2. 'n' → logprob: -2.3941688537597656
    3. ' graph' → logprob: -4.394168853759766
    4. ' n' → logprob: -4.644168853759766
    5. 'points' → logprob: -5.019168853759766
    6. 'g' → logprob: -5.519168853759766
    7. '   ' → logprob: -5.769168853759766
    8. 'from' → logprob: -6.269168853759766
    9. 'adj' → logprob: -6.894168853759766
    10. 'G' → logprob: -7.144168853759766

Token 600: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.012563922442495823
    2. ' graph' → logprob: -4.387563705444336
    3. 'edges' → logprob: -11.512563705444336
    4. 'adj' → logprob: -11.512563705444336
    5. '   ' → logprob: -12.012563705444336
    6. 'n' → logprob: -12.137563705444336
    7. '	graph' → logprob: -12.387563705444336
    8. 'g' → logprob: -12.512563705444336
    9. 'points' → logprob: -12.637563705444336
    10. 'Graph' → logprob: -12.887563705444336

Token 601: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27016863226890564
    2. '=' → logprob: -1.895168662071228
    3. '   ' → logprob: -3.2701685428619385
    4. '(graph' → logprob: -3.7701685428619385
    5. ':' → logprob: -4.270168781280518
    6. 'graph' → logprob: -5.520168781280518
    7. '_graph' → logprob: -6.270168781280518
    8. ' graph' → logprob: -6.270168781280518
    9. '(' → logprob: -7.145168781280518
    10. '(lines' → logprob: -7.145168781280518

Token 602: ' intersection' (ID: 42002)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07389538735151291
    2. 'lines' → logprob: -4.323895454406738
    3. 'points' → logprob: -4.448895454406738
    4. 'adj' → logprob: -4.698895454406738
    5. 'line' → logprob: -4.823895454406738
    6. 'graph' → logprob: -4.823895454406738
    7. 'inter' → logprob: -4.948895454406738
    8. 'edges' → logprob: -5.573895454406738
    9. '{' → logprob: -5.823895454406738
    10. 'vertices' → logprob: -6.323895454406738

Token 603: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04643797129392624
    2. '_points' → logprob: -3.296437978744507
    3. '_' → logprob: -4.921437740325928
    4. '_lines' → logprob: -8.046438217163086
    5. '_edges' → logprob: -8.046438217163086
    6. '_nodes' → logprob: -8.921438217163086
    7. ' s' → logprob: -10.171438217163086
    8. ' points' → logprob: -10.171438217163086
    9. 'points' → logprob: -10.546438217163086
    10. '_s' → logprob: -10.671438217163086

Token 604: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7803407311439514
    2. '(lines' → logprob: -1.4053406715393066
    3. '(graph' → logprob: -1.6553406715393066
    4. '(points' → logprob: -2.7803406715393066
    5. ':' → logprob: -3.9053406715393066
    6. 'graph' → logprob: -5.780340671539307
    7. '(nodes' → logprob: -5.780340671539307
    8. '_graph' → logprob: -5.905340671539307
    9. '=' → logprob: -6.030340671539307
    10. ' =' → logprob: -6.280340671539307

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018587201833724976
    2. 'graph' → logprob: -4.393587112426758
    3. ' graph' → logprob: -5.393587112426758
    4. '	graph' → logprob: -6.643587112426758
    5. ' edges' → logprob: -9.893587112426758
    6. 'edges' → logprob: -10.143587112426758
    7. '(graph' → logprob: -10.393587112426758
    8. '_graph' → logprob: -10.518587112426758
    9. ' lines' → logprob: -11.893587112426758
    10. 'nodes' → logprob: -12.018587112426758

Token 606: ' points' (ID: 5571)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.023551523685455322
    2. 'points' (adapté à ' points') → logprob: -3.7735514640808105
    3. '   ' → logprob: -8.398551940917969
    4. 'edges' → logprob: -10.648551940917969
    5. 'nodes' → logprob: -11.398551940917969
    6. 'from' → logprob: -11.648551940917969
    7. 'point' → logprob: -11.648551940917969
    8. 'import' → logprob: -11.648551940917969
    9. ' graph' → logprob: -11.773551940917969
    10. 'graphs' → logprob: -12.398551940917969

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06212957575917244
    2. ' =' → logprob: -2.812129497528076
    3. ',' → logprob: -9.062129974365234
    4. '={}' → logprob: -10.812129974365234
    5. '=[]' → logprob: -11.187129974365234
    6. '=set' → logprob: -11.937129974365234
    7. '_points' → logprob: -13.187129974365234
    8. '_set' → logprob: -14.562129974365234
    9. '   ' → logprob: -14.562129974365234
    10. '.' → logprob: -14.812129974365234

Token 608: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6965723633766174
    2. '{}' → logprob: -0.6965723633766174
    3. 'set' → logprob: -5.696572303771973
    4. 'dict' → logprob: -10.446572303771973
    5. '{' → logprob: -11.571572303771973
    6. '[]
' → logprob: -11.696572303771973
    7. ' []' → logprob: -12.196572303771973
    8. ' set' → logprob: -12.196572303771973
    9. '[]}' → logprob: -13.571572303771973
    10. '[' → logprob: -13.696572303771973

Token 609: '   ' (ID: 271)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.2424166202545166
    2. 'edges' → logprob: -1.3674166202545166
    3. ' for' → logprob: -1.4924166202545166
    4. 'for' → logprob: -2.8674166202545166
    5. '   ' → logprob: -3.1174166202545166
    6. ' line' → logprob: -3.1174166202545166
    7. ' lines' → logprob: -3.6174166202545166
    8. ' segments' → logprob: -3.8674166202545166
    9. 'segments' → logprob: -4.3674163818359375
    10. 'line' → logprob: -5.2424163818359375

Token 610: ' points' (ID: 5571)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11354341357946396
    2. 'for' → logprob: -2.8635435104370117
    3. 'segments' → logprob: -3.8635435104370117
    4. 'point' → logprob: -3.8635435104370117
    5. 'line' → logprob: -5.863543510437012
    6. 'points' (adapté à ' points') → logprob: -6.488543510437012
    7. 'graph' → logprob: -6.738543510437012
    8. ' edges' → logprob: -6.988543510437012
    9. 'edge' → logprob: -7.613543510437012
    10. 'lines' → logprob: -8.113543510437012

Token 611: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.4107951521873474
    2. '_set' → logprob: -1.7857952117919922
    3. '=' → logprob: -2.910795211791992
    4. '_to' → logprob: -3.535795211791992
    5. ' =' → logprob: -3.660795211791992
    6. '_dict' → logprob: -4.285795211791992
    7. '_indices' → logprob: -4.660795211791992
    8. '.append' → logprob: -4.910795211791992
    9. '.' → logprob: -5.285795211791992
    10. '_edges' → logprob: -5.285795211791992

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03028853051364422
    2. ' =' → logprob: -3.5302884578704834
    3. '={}' → logprob: -7.5302886962890625
    4. '={' → logprob: -14.405288696289062
    5. '=[]' → logprob: -15.155288696289062
    6. '{}' → logprob: -15.655288696289062
    7. '{' → logprob: -16.155288696289062
    8. ' ={' → logprob: -16.405288696289062
    9. '={}
' → logprob: -16.780288696289062
    10. '={},' → logprob: -17.155288696289062

Token 613: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -7.612634362885728e-05
    2. 'dict' → logprob: -9.500076293945312
    3. ' {}' → logprob: -13.750076293945312
    4. '{}
' → logprob: -16.500076293945312
    5. ' dict' → logprob: -16.750076293945312
    6. '[]' → logprob: -18.000076293945312
    7. '{},' → logprob: -18.625076293945312
    8. '{' → logprob: -18.625076293945312
    9. '{})' → logprob: -18.750076293945312
    10. '{}

' → logprob: -19.000076293945312

Token 614: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009155054576694965
    2. '()
' → logprob: -7.00091552734375
    3. '{}' → logprob: -13.37591552734375
    4. '()

' → logprob: -13.87591552734375
    5. '()\' → logprob: -15.00091552734375
    6. '()
' → logprob: -15.12591552734375
    7. ' ()' → logprob: -15.75091552734375
    8. '(),' → logprob: -16.00091552734375
    9. '()<' → logprob: -16.12591552734375
    10. '();' → logprob: -16.25091552734375

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5563647747039795
    2. ' for' → logprob: -1.0563647747039795
    3. 'for' → logprob: -2.8063647747039795
    4. ' lines' → logprob: -4.431365013122559
    5. '	for' → logprob: -6.306365013122559
    6. '
' → logprob: -6.431365013122559
    7. '    
' → logprob: -6.556365013122559
    8. ' indentation' → logprob: -8.306365013122559
    9. '	lines' → logprob: -8.431365013122559
    10. ' line' → logprob: -8.431365013122559

Token 616: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.366216778755188
    2. 'for' → logprob: -1.491216778755188
    3. 'edges' (adapté à ' edges') → logprob: -3.3662166595458984
    4. ' edges' → logprob: -3.4912166595458984
    5. '   ' → logprob: -5.616216659545898
    6. ' n' → logprob: -5.741216659545898
    7. ' segments' → logprob: -6.366216659545898
    8. 'n' → logprob: -6.366216659545898
    9. ' lines' → logprob: -6.866216659545898
    10. 'segments' → logprob: -6.866216659545898

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021863132715225
    2. ' =' → logprob: -2.3502185344696045
    3. '={}' → logprob: -11.725218772888184
    4. '=[]' → logprob: -12.725218772888184
    5. ' ' → logprob: -15.100218772888184
    6. ',' → logprob: -15.850218772888184
    7. '[' → logprob: -15.975218772888184
    8. 'import' → logprob: -16.225217819213867
    9. '   ' → logprob: -16.975217819213867
    10. '={' → logprob: -17.225217819213867

Token 618: ' dict' (ID: 11878)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006016372237354517
    2. ' []' → logprob: -5.506016254425049
    3. '{}' → logprob: -6.256016254425049
    4. 'set' → logprob: -11.256016731262207
    5. 'dict' → logprob: -13.631016731262207
    6. '[]
' → logprob: -13.631016731262207
    7. '[' → logprob: -14.631016731262207
    8. ' {}' → logprob: -14.881016731262207
    9. 'list' → logprob: -15.506016731262207
    10. ' set' → logprob: -15.506016731262207

Token 619: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06800998747348785
    2. '   ' → logprob: -3.693010091781616
    3. ' =' → logprob: -3.693010091781616
    4. '=' → logprob: -4.443009853363037
    5. '()
' → logprob: -5.568009853363037
    6. ')' → logprob: -9.818010330200195
    7. ':' → logprob: -9.818010330200195
    8. '={}' → logprob: -9.818010330200195
    9. 'def' → logprob: -10.318010330200195
    10. '=[]' → logprob: -10.943010330200195

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014530375599861145
    2. ' for' → logprob: -4.639530181884766
    3. '    
' → logprob: -5.639530181884766
    4. 'for' → logprob: -6.889530181884766
    5. '
' → logprob: -9.139530181884766
    6. '	for' → logprob: -10.514530181884766
    7. '```' → logprob: -11.139530181884766
    8. 'n' → logprob: -12.139530181884766
    9. '<|end|>' → logprob: -12.264530181884766
    10. '  
' → logprob: -12.514530181884766

Token 621: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19656674563884735
    2. 'for' → logprob: -2.1965668201446533
    3. '   ' → logprob: -3.3215668201446533
    4. 'n' → logprob: -3.8215668201446533
    5. ' n' → logprob: -4.696566581726074
    6. '
' → logprob: -9.321566581726074
    7. '    
' → logprob: -11.071566581726074
    8. ' lines' → logprob: -11.321566581726074
    9. '```' → logprob: -11.821566581726074
    10. '	for' → logprob: -11.946566581726074

Token 622: ' collect' (ID: 7916)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4878748059272766
    2. 'for' → logprob: -1.1128747463226318
    3. ' for' → logprob: -3.112874746322632
    4. ' n' → logprob: -4.487874984741211
    5. '   ' → logprob: -6.362874984741211
    6. 'line' → logprob: -12.987874984741211
    7. '```' → logprob: -12.987874984741211
    8. ' ' → logprob: -13.862874984741211
    9. 'num' → logprob: -13.862874984741211
    10. 'idx' → logprob: -13.987874984741211

Token 623: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.131558358669281
    2. 'for' → logprob: -2.131558418273926
    3. ' points' → logprob: -6.381558418273926
    4. ' all' → logprob: -6.756558418273926
    5. ' lines' → logprob: -8.006558418273926
    6. '   ' → logprob: -8.131558418273926
    7. ' intersections' → logprob: -8.131558418273926
    8. ' line' → logprob: -8.506558418273926
    9. 'n' → logprob: -8.631558418273926
    10. 'points' → logprob: -9.506558418273926

Token 624: ' endpoints' (ID: 76454)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7953909039497375
    2. ' points' → logprob: -1.1703908443450928
    3. 'for' → logprob: -3.0453908443450928
    4. ' for' → logprob: -3.0453908443450928
    5. ' lines' → logprob: -3.1703908443450928
    6. 'inter' → logprob: -3.6703908443450928
    7. ' endpoints' → logprob: -3.7953908443450928
    8. ' intersections' → logprob: -3.7953908443450928
    9. 'lines' → logprob: -4.420391082763672
    10. 'segments' → logprob: -5.045391082763672

Token 625: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22898004949092865
    2. 'for' → logprob: -1.7289800643920898
    3. ' and' → logprob: -3.85398006439209
    4. '   ' → logprob: -5.47898006439209
    5. 'and' → logprob: -6.85398006439209
    6. ',' → logprob: -7.97898006439209
    7. '
' → logprob: -8.60398006439209
    8. '<|end|>' → logprob: -9.72898006439209
    9. '<|end|>' → logprob: -10.47898006439209
    10. ':' → logprob: -10.60398006439209

Token 626: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.8464107513427734
    2. ' intersection' → logprob: -1.5964107513427734
    3. 'intersection' → logprob: -1.5964107513427734
    4. ' intersections' → logprob: -1.8464107513427734
    5. 'all' → logprob: -6.471410751342773
    6. ' all' → logprob: -6.596410751342773
    7. 'for' → logprob: -6.846410751342773
    8. 'segments' → logprob: -7.096410751342773
    9. 'segment' → logprob: -7.221410751342773
    10. ' points' → logprob: -7.846410751342773

Token 627: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26721763610839844
    2. 'for' → logprob: -2.1422176361083984
    3. ' for' → logprob: -2.2672176361083984
    4. '    
' → logprob: -5.017217636108398
    5. '
' → logprob: -5.142217636108398
    6. '	for' → logprob: -8.142217636108398
    7. ',' → logprob: -8.142217636108398
    8. ':' → logprob: -8.642217636108398
    9. '  
' → logprob: -10.017217636108398
    10. '.' → logprob: -10.767217636108398

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06438080966472626
    2. 'for' → logprob: -3.0643808841705322
    3. ' for' → logprob: -4.189380645751953
    4. '
' → logprob: -8.314380645751953
    5. '    
' → logprob: -8.814380645751953
    6. '	for' → logprob: -9.439380645751953
    7. ',' → logprob: -11.189380645751953
    8. ':' → logprob: -12.189380645751953
    9. 'n' → logprob: -12.689380645751953
    10. '```' → logprob: -13.064380645751953

Token 629: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25733402371406555
    2. 'for' (adapté à ' for') → logprob: -1.7573339939117432
    3. '   ' → logprob: -3.007333993911743
    4. 'n' → logprob: -5.882334232330322
    5. ' n' → logprob: -6.132334232330322
    6. '	for' → logprob: -14.132333755493164
    7. '
' → logprob: -14.132333755493164
    8. '    
' → logprob: -14.507333755493164
    9. ' ' → logprob: -14.882333755493164
    10. '```' → logprob: -15.507333755493164

Token 630: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061970602720975876
    2. 'i' → logprob: -2.8119707107543945
    3. '_i' → logprob: -13.686970710754395
    4. ' idx' → logprob: -13.936970710754395
    5. '	i' → logprob: -14.561970710754395
    6. 'idx' → logprob: -16.311969757080078
    7. ' ' → logprob: -16.311969757080078
    8. 'I' → logprob: -16.686969757080078
    9. '```' → logprob: -16.686969757080078
    10. '(i' → logprob: -17.186969757080078

Token 631: ',line' (ID: 171132)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2582516372203827
    2. 'in' → logprob: -1.633251667022705
    3. ',' → logprob: -3.508251667022705
    4. 'n' → logprob: -6.758251667022705
    5. ' ,' → logprob: -7.258251667022705
    6. ',n' → logprob: -8.508251190185547
    7. ' ' → logprob: -8.758251190185547
    8. ',in' → logprob: -9.883251190185547
    9. ',line' → logprob: -10.008251190185547
    10. ' n' → logprob: -11.383251190185547

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33859673142433167
    2. 'in' → logprob: -1.7135967016220093
    3. 's' → logprob: -2.713596820831299
    4. '1' → logprob: -3.588596820831299
    5. '_i' → logprob: -5.588596820831299
    6. '_points' → logprob: -6.213596820831299
    7. '_' → logprob: -6.963596820831299
    8. '0' → logprob: -7.088596820831299
    9. '_idx' → logprob: -7.088596820831299
    10. '_in' → logprob: -7.213596820831299

Token 633: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00805336982011795
    2. ' enumerate' → logprob: -5.008053302764893
    3. 'lines' → logprob: -6.633053302764893
    4. ' lines' → logprob: -11.38305377960205
    5. 'enum' → logprob: -12.13305377960205
    6. 'range' → logprob: -13.50805377960205
    7. 'points' → logprob: -14.00805377960205
    8. '(lines' → logprob: -14.25805377960205
    9. 'en' → logprob: -14.50805377960205
    10. '```' → logprob: -15.50805377960205

Token 634: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.11023962497711182
    2. '(lines' → logprob: -2.3602395057678223
    3. ' lines' → logprob: -4.610239505767822
    4. 's' → logprob: -11.61023998260498
    5. 'range' → logprob: -11.73523998260498
    6. 'points' → logprob: -12.36023998260498
    7. '	lines' → logprob: -12.61023998260498
    8. ')' → logprob: -12.73523998260498
    9. '.lines' → logprob: -13.11023998260498
    10. '(points' → logprob: -14.11023998260498

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030078712850809097
    2. '):
' → logprob: -3.530078649520874
    3. ':' → logprob: -8.030078887939453
    4. '):
' → logprob: -13.405078887939453
    5. ')' → logprob: -14.780078887939453
    6. '   ' → logprob: -15.530078887939453
    7. ' ):' → logprob: -15.780078887939453
    8. '[' → logprob: -16.030078887939453
    9. ':
' → logprob: -16.155078887939453
    10. '):

' → logprob: -16.655078887939453

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.411093533039093
    2. '   ' → logprob: -1.4110934734344482
    3. ':' → logprob: -3.0360934734344482
    4. ',' → logprob: -3.7860934734344482
    5. ':
' → logprob: -4.411093711853027
    6. ' for' → logprob: -5.161093711853027
    7. '
' → logprob: -6.786093711853027
    8. '        
' → logprob: -6.911093711853027
    9. '    
' → logprob: -8.036093711853027
    10. '[' → logprob: -8.036093711853027

Token 637: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6016601324081421
    2. ' for' → logprob: -0.9766601324081421
    3. 'x' → logprob: -3.7266602516174316
    4. '   ' → logprob: -3.8516602516174316
    5. 'p' → logprob: -4.601660251617432
    6. 'a' → logprob: -5.351660251617432
    7. ' points' → logprob: -5.476660251617432
    8. 'points' → logprob: -5.601660251617432
    9. ' p' → logprob: -5.976660251617432
    10. ' x' → logprob: -6.226660251617432

Token 638: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00045200303429737687
    2. ' j' → logprob: -8.125452041625977
    3. 'p' → logprob: -9.250452041625977
    4. 'point' → logprob: -10.500452041625977
    5. 'pt' → logprob: -11.125452041625977
    6. '   ' → logprob: -12.000452041625977
    7. 'x' → logprob: -12.625452041625977
    8. 'endpoint' → logprob: -13.375452041625977
    9. '	j' → logprob: -14.000452041625977
    10. '(j' → logprob: -14.000452041625977

Token 639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1498275101184845
    2. 'in' → logprob: -2.274827480316162
    3. '2' → logprob: -4.274827480316162
    4. ',' → logprob: -5.399827480316162
    5. 'point' → logprob: -5.524827480316162
    6. 'pt' → logprob: -5.774827480316162
    7. '   ' → logprob: -6.274827480316162
    8. 'j' → logprob: -6.649827480316162
    9. '_point' → logprob: -6.649827480316162
    10. '1' → logprob: -6.899827480316162

Token 640: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45704811811447144
    2. 'lines' → logprob: -1.2070481777191162
    3. 'line' → logprob: -3.457048177719116
    4. 'points' → logprob: -4.207047939300537
    5. ' range' → logprob: -4.457047939300537
    6. '[' → logprob: -4.957047939300537
    7. ' lines' → logprob: -6.582047939300537
    8. '(' → logprob: -8.082048416137695
    9. '[line' → logprob: -8.582048416137695
    10. ' points' → logprob: -8.832048416137695

Token 641: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17998214066028595
    2. 'line' → logprob: -1.8049821853637695
    3. 'lines' → logprob: -9.67998218536377
    4. '(' → logprob: -9.80498218536377
    5. ' line' → logprob: -10.67998218536377
    6. '(line' → logprob: -10.92998218536377
    7. ' ' → logprob: -10.92998218536377
    8. '1' → logprob: -10.92998218536377
    9. 'tuple' → logprob: -11.17998218536377
    10. '-' → logprob: -11.80498218536377

Token 642: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002763390773907304
    2. '0' → logprob: -6.877763271331787
    3. 'lines' → logprob: -7.252763271331787
    4. 'tuple' → logprob: -7.502763271331787
    5. ' line' → logprob: -9.002763748168945
    6. '(' → logprob: -9.127763748168945
    7. '(line' → logprob: -9.877763748168945
    8. ')' → logprob: -10.252763748168945
    9. '   ' → logprob: -10.377763748168945
    10. 'i' → logprob: -10.502763748168945

Token 643: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07217017561197281
    2. '0' → logprob: -2.6971702575683594
    3. '[:' → logprob: -6.447170257568359
    4. '['' → logprob: -8.44717025756836
    5. ')' → logprob: -9.69717025756836
    6. ',' → logprob: -9.94717025756836
    7. 'line' → logprob: -10.07217025756836
    8. ')]' → logprob: -10.32217025756836
    9. ')][' → logprob: -10.69717025756836
    10. '(' → logprob: -11.07217025756836

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.049755782238208e-05
    2. '[' → logprob: -11.25005054473877
    3. ' ' → logprob: -11.37505054473877
    4. '1' → logprob: -12.12505054473877
    5. 'i' → logprob: -12.37505054473877
    6. '   ' → logprob: -12.81255054473877
    7. '
' → logprob: -13.62505054473877
    8. '-' → logprob: -13.68755054473877
    9. '2' → logprob: -13.75005054473877
    10. ')' → logprob: -13.75005054473877

Token 645: '],' (ID: 2155)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.4438236951828003
    2. '],' → logprob: -1.5688236951828003
    3. '0' → logprob: -2.19382381439209
    4. '][' → logprob: -4.06882381439209
    5. ']' → logprob: -5.19382381439209
    6. '),' → logprob: -5.31882381439209
    7. '])]' → logprob: -5.56882381439209
    8. '])' → logprob: -5.94382381439209
    9. ']),
' → logprob: -6.44382381439209
    10. '[' → logprob: -6.81882381439209

Token 646: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004725245293229818
    2. ' line' → logprob: -5.754725456237793
    3. ')' → logprob: -7.129725456237793
    4. '1' → logprob: -8.879725456237793
    5. '),' → logprob: -9.004725456237793
    6. '   ' → logprob: -9.129725456237793
    7. '0' → logprob: -9.504725456237793
    8. '
' → logprob: -10.129725456237793
    9. ')]' → logprob: -10.129725456237793
    10. '(line' → logprob: -10.254725456237793

Token 647: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12706239521503448
    2. '[' → logprob: -2.1270623207092285
    3. '
' → logprob: -9.877062797546387
    4. '   ' → logprob: -10.752062797546387
    5. ' ' → logprob: -11.002062797546387
    6. ')' → logprob: -12.002062797546387
    7. '(' → logprob: -12.127062797546387
    8. '),' → logprob: -12.127062797546387
    9. ')]' → logprob: -12.502062797546387
    10. '```' → logprob: -12.627062797546387

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -12.125017166137695
    3. '[' → logprob: -12.625017166137695
    4. '
' → logprob: -13.000017166137695
    5. '   ' → logprob: -13.000017166137695
    6. '0' → logprob: -14.500017166137695
    7. ')' → logprob: -14.875017166137695
    8. '2' → logprob: -14.937517166137695
    9. '])' → logprob: -15.125017166137695
    10. ')]' → logprob: -15.187517166137695

Token 649: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03981538116931915
    2. '),(' → logprob: -3.2898154258728027
    3. ')' → logprob: -7.039815425872803
    4. '),
' → logprob: -7.664815425872803
    5. ')]' → logprob: -8.414814949035645
    6. ')],' → logprob: -8.914814949035645
    7. ' ),' → logprob: -10.539814949035645
    8. '   ' → logprob: -11.414814949035645
    9. '0' → logprob: -12.164814949035645
    10. ',' → logprob: -12.414814949035645

Token 650: '(' (ID: 7)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4786134660243988
    2. '(line' → logprob: -0.9786134958267212
    3. ' line' → logprob: -5.853613376617432
    4. 'line' → logprob: -7.728613376617432
    5. '    ' → logprob: -7.978613376617432
    6. '   ' → logprob: -8.60361385345459
    7. '[line' → logprob: -9.10361385345459
    8. '        ' → logprob: -9.10361385345459
    9. ' ' → logprob: -9.22861385345459
    10. '       ' → logprob: -9.72861385345459

Token 651: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0006347587914206088
    2. ' line' → logprob: -7.500634670257568
    3. '(line' → logprob: -10.375635147094727
    4. '   ' → logprob: -11.000635147094727
    5. '1' → logprob: -11.375635147094727
    6. ')' → logprob: -12.250635147094727
    7. '(' → logprob: -12.625635147094727
    8. ' ' → logprob: -12.875635147094727
    9. '	line' → logprob: -13.000635147094727
    10. '[line' → logprob: -13.250635147094727

Token 652: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.457669562427327e-05
    2. '2' → logprob: -10.00007438659668
    3. '1' → logprob: -11.50007438659668
    4. '[i' → logprob: -12.00007438659668
    5. '][' → logprob: -12.75007438659668
    6. '[-' → logprob: -13.25007438659668
    7. '[
' → logprob: -13.37507438659668
    8. '
' → logprob: -13.87507438659668
    9. 'x' → logprob: -14.12507438659668
    10. '0' → logprob: -14.12507438659668

Token 653: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0755445584654808
    2. '0' → logprob: -2.700544595718384
    3. '1' → logprob: -5.200544357299805
    4. '
' → logprob: -10.700544357299805
    5. 'i' → logprob: -10.950544357299805
    6. '[' → logprob: -11.075544357299805
    7. ' ' → logprob: -11.700544357299805
    8. '-' → logprob: -12.450544357299805
    9. '   ' → logprob: -12.700544357299805
    10. '```' → logprob: -13.200544357299805

Token 654: '],' (ID: 2155)
  Prédit: ',line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.009818777441978455
    2. ',' → logprob: -4.6348185539245605
    3. '],' → logprob: -10.509819030761719
    4. '),' → logprob: -11.009819030761719
    5. 'line' → logprob: -11.634819030761719
    6. ' ,' → logprob: -12.259819030761719
    7. '[line' → logprob: -13.384819030761719
    8. '#line' → logprob: -13.884819030761719
    9. ',len' → logprob: -14.759819030761719
    10. '   ' → logprob: -15.259819030761719

Token 655: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.735893965815194e-05
    2. ' line' → logprob: -11.000017166137695
    3. '[line' → logprob: -15.625017166137695
    4. ',line' → logprob: -15.750017166137695
    5. '(line' → logprob: -16.000017166137695
    6. '#line' → logprob: -17.125017166137695
    7. '	line' → logprob: -17.375017166137695
    8. '   ' → logprob: -17.500017166137695
    9. '=line' → logprob: -18.000017166137695
    10. '
' → logprob: -18.375017166137695

Token 656: '[' (ID: 58)
  Prédit: ',line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.7904182076454163
    2. ',' → logprob: -0.9154182076454163
    3. '[' → logprob: -2.6654181480407715
    4. '1' → logprob: -4.0404181480407715
    5. 'line' → logprob: -4.1654181480407715
    6. '2' → logprob: -4.2904181480407715
    7. ')' → logprob: -4.5404181480407715
    8. '[line' → logprob: -4.7904181480407715
    9. '),' → logprob: -5.4154181480407715
    10. ')]' → logprob: -6.4154181480407715

Token 657: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2264508306980133
    2. '0' → logprob: -1.601450800895691
    3. '2' → logprob: -7.1014509201049805
    4. '1' → logprob: -8.60145092010498
    5. ' ' → logprob: -11.35145092010498
    6. '[' → logprob: -12.35145092010498
    7. '
' → logprob: -12.35145092010498
    8. 'i' → logprob: -12.60145092010498
    9. '   ' → logprob: -12.60145092010498
    10. '```' → logprob: -13.97645092010498

Token 658: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3883850574493408
    2. ')' → logprob: -1.1383850574493408
    3. '):' → logprob: -7.388384819030762
    4. ')])' → logprob: -7.888384819030762
    5. ']' → logprob: -8.388384819030762
    6. ' )' → logprob: -9.638384819030762
    7. '])' → logprob: -9.763384819030762
    8. '))' → logprob: -10.263384819030762
    9. '),' → logprob: -10.388384819030762
    10. '):

' → logprob: -11.138384819030762

Token 659: ' ]' (ID: 6045)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.13163286447525024
    2. ']:
' → logprob: -2.1316328048706055
    3. ' ]' → logprob: -6.0066328048706055
    4. ']' → logprob: -6.5066328048706055
    5. ']:
' → logprob: -8.006632804870605
    6. ',' → logprob: -8.756632804870605
    7. ']:

' → logprob: -9.006632804870605
    8. '):' → logprob: -10.131632804870605
    9. '       ' → logprob: -10.881632804870605
    10. '):
' → logprob: -11.006632804870605

Token 660: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15018406510353088
    2. ':
' → logprob: -2.150184154510498
    3. '           ' → logprob: -4.150184154510498
    4. '       ' → logprob: -5.275184154510498
    5. ',' → logprob: -7.400184154510498
    6. '):' → logprob: -7.775184154510498
    7. '):
' → logprob: -8.02518367767334
    8. '.' → logprob: -8.65018367767334
    9. '[' → logprob: -8.90018367767334
    10. '   ' → logprob: -9.27518367767334

Token 661: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008888374082744122
    2. ',' → logprob: -5.633888244628906
    3. '           ' → logprob: -5.758888244628906
    4. ' if' → logprob: -6.883888244628906
    5. ':
' → logprob: -8.383888244628906
    6. '):
' → logprob: -8.508888244628906
    7. '        
' → logprob: -8.508888244628906
    8. '
' → logprob: -8.883888244628906
    9. ':' → logprob: -9.883888244628906
    10. '<|end|>' → logprob: -10.008888244628906

Token 662: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11890165507793427
    2. ' key' → logprob: -2.7439017295837402
    3. '       ' → logprob: -3.6189017295837402
    4. ' points' → logprob: -4.36890172958374
    5. '           ' → logprob: -5.36890172958374
    6. 'if' (adapté à ' if') → logprob: -6.99390172958374
    7. ' pts' → logprob: -7.49390172958374
    8. 'points' → logprob: -7.99390172958374
    9. '   ' → logprob: -7.99390172958374
    10. ' x' → logprob: -8.118901252746582

Token 663: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005242771934717894
    2. ' x' → logprob: -5.255242824554443
    3. 'tuple' → logprob: -12.130242347717285
    4. ' tuple' → logprob: -12.755242347717285
    5. '(x' → logprob: -14.505242347717285
    6. '   ' → logprob: -15.880242347717285
    7. ' ' → logprob: -16.7552433013916
    8. ' not' → logprob: -16.8802433013916
    9. '	x' → logprob: -17.5052433013916
    10. 'not' → logprob: -17.7552433013916

Token 664: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759880542755127
    2. 'not' → logprob: -0.8259880542755127
    3. ')' → logprob: -10.075987815856934
    4. ']' → logprob: -12.700987815856934
    5. '	not' → logprob: -13.825987815856934
    6. 'in' → logprob: -14.200987815856934
    7. '
' → logprob: -14.700987815856934
    8. '```' → logprob: -15.450987815856934
    9. ' )' → logprob: -15.700987815856934
    10. '[' → logprob: -15.825987815856934

Token 665: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.550283670425415
    2. ' in' → logprob: -1.425283670425415
    3. 'points' → logprob: -1.800283670425415
    4. ' points' → logprob: -4.050283432006836
    5. '(points' → logprob: -9.300283432006836
    6. '_points' → logprob: -12.550283432006836
    7. '	points' → logprob: -13.300283432006836
    8. ')' → logprob: -13.425283432006836
    9. '.points' → logprob: -13.550283432006836
    10. 'Points' → logprob: -14.175283432006836

Token 666: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.7610454708337784e-05
    2. ' points' → logprob: -10.500027656555176
    3. '	points' → logprob: -19.62502670288086
    4. 'point' → logprob: -20.50002670288086
    5. '
' → logprob: -21.00002670288086
    6. '(points' → logprob: -21.12502670288086
    7. '   ' → logprob: -21.50002670288086
    8. 'positions' → logprob: -22.12502670288086
    9. '_points' → logprob: -23.50002670288086
    10. 'parameters' → logprob: -24.00002670288086

Token 667: '_map' (ID: 11824)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012157135643064976
    2. ':
' → logprob: -6.751215934753418
    3. '):' → logprob: -10.126215934753418
    4. 'points' → logprob: -13.126215934753418
    5. '_points' → logprob: -14.376215934753418
    6. '   ' → logprob: -14.626215934753418
    7. '):
' → logprob: -14.876215934753418
    8. ' points' → logprob: -14.876215934753418
    9. ')' → logprob: -15.251215934753418
    10. ' :' → logprob: -15.251215934753418

Token 668: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001038883114233613
    2. ':
' → logprob: -6.876039028167725
    3. ' :' → logprob: -13.126038551330566
    4. '):' → logprob: -13.251038551330566
    5. '   ' → logprob: -14.626038551330566
    6. ':

' → logprob: -14.626038551330566
    7. 'points' → logprob: -16.126039505004883
    8. '.' → logprob: -16.251039505004883
    9. '=' → logprob: -16.251039505004883
    10. ':
' → logprob: -16.251039505004883

Token 669: '               ' (ID: 506)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.16383790969848633
    2. '               ' → logprob: -2.1638379096984863
    3. 'points' → logprob: -3.5388379096984863
    4. ':' → logprob: -5.913837909698486
    5. '           ' → logprob: -6.288837909698486
    6. '(points' → logprob: -6.413837909698486
    7. ' =' → logprob: -8.038837432861328
    8. '=' → logprob: -8.788837432861328
    9. ':
' → logprob: -9.163837432861328
    10. '	points' → logprob: -9.538837432861328

Token 670: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.016228143125772476
    2. 'points' (adapté à ' points') → logprob: -4.141228199005127
    3. '               ' → logprob: -8.641227722167969
    4. '	points' → logprob: -11.641227722167969
    5. '(points' → logprob: -13.266227722167969
    6. '   ' → logprob: -13.641227722167969
    7. '                   ' → logprob: -13.641227722167969
    8. '                ' → logprob: -13.766227722167969
    9. '.points' → logprob: -14.141227722167969
    10. '       ' → logprob: -14.391227722167969

Token 671: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.2723104848410003e-05
    2. '.append' → logprob: -12.125022888183594
    3. '[_' → logprob: -12.375022888183594
    4. '[' → logprob: -13.000022888183594
    5. '_points' → logprob: -13.000022888183594
    6. ' _' → logprob: -13.250022888183594
    7. '=_' → logprob: -13.500022888183594
    8. '_maps' → logprob: -13.750022888183594
    9. '   ' → logprob: -14.250022888183594
    10. '=' → logprob: -14.250022888183594

Token 672: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -10.625025749206543
    3. ' [' → logprob: -14.250025749206543
    4. '
' → logprob: -15.750025749206543
    5. 'x' → logprob: -16.125024795532227
    6. '[
' → logprob: -17.125024795532227
    7. '=' → logprob: -17.375024795532227
    8. '

' → logprob: -19.125024795532227
    9. ' =' → logprob: -19.375024795532227
    10. '\[' → logprob: -19.375024795532227

Token 673: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20363858342170715
    2. ']=' → logprob: -2.3286385536193848
    3. '=' → logprob: -2.4536385536193848
    4. ' =' → logprob: -7.203638553619385
    5. ' ]' → logprob: -10.203639030456543
    6. '=len' → logprob: -10.328639030456543
    7. '   ' → logprob: -11.828639030456543
    8. 'len' → logprob: -13.203639030456543
    9. ']={' → logprob: -13.453639030456543
    10. ')' → logprob: -13.578639030456543

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01423320360481739
    2. ' =' → logprob: -4.264233112335205
    3. ']=' → logprob: -10.014233589172363
    4. ']' → logprob: -10.764233589172363
    5. '=len' → logprob: -12.889233589172363
    6. '=
' → logprob: -14.139233589172363
    7. ')=' → logprob: -15.639233589172363
    8. ')' → logprob: -16.639232635498047
    9. '=

' → logprob: -17.139232635498047
    10. ' =
' → logprob: -17.389232635498047

Token 675: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. '[len' → logprob: -11.625017166137695
    3. ' len' → logprob: -12.375017166137695
    4. '[]' → logprob: -12.750017166137695
    5. '[]
' → logprob: -15.125017166137695
    6. '	len' → logprob: -16.000017166137695
    7. '(len' → logprob: -16.625017166137695
    8. '[' → logprob: -16.625017166137695
    9. '[]

' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.625017166137695

Token 676: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0003370118502061814
    2. 'points' → logprob: -8.000336647033691
    3. ' points' → logprob: -13.625336647033691
    4. '(' → logprob: -15.250336647033691
    5. '	points' → logprob: -16.000337600708008
    6. '(
' → logprob: -17.625337600708008
    7. 'Points' → logprob: -17.750337600708008
    8. '_points' → logprob: -18.875337600708008
    9. '(point' → logprob: -20.250337600708008
    10. '.points' → logprob: -20.500337600708008

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000354769523255527
    2. ')
' → logprob: -8.125354766845703
    3. ' )' → logprob: -10.000354766845703
    4. ')+' → logprob: -12.000354766845703
    5. '())' → logprob: -13.875354766845703
    6. ' points' → logprob: -14.125354766845703
    7. '(points' → logprob: -14.125354766845703
    8. '   ' → logprob: -14.500354766845703
    9. 'points' → logprob: -14.625354766845703
    10. '),' → logprob: -14.625354766845703

Token 678: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03131674602627754
    2. '       ' → logprob: -3.5313167572021484
    3. '           ' → logprob: -7.406316757202148
    4. '		       ' → logprob: -7.906316757202148
    5. '	       ' → logprob: -8.531316757202148
    6. '   ' → logprob: -8.906316757202148
    7. 'points' → logprob: -9.531316757202148
    8. '(points' → logprob: -10.281316757202148
    9. '	           ' → logprob: -10.406316757202148
    10. '	' → logprob: -10.531316757202148

Token 679: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.06197194382548332
    2. ' points' → logprob: -2.81197190284729
    3. '	points' → logprob: -12.561971664428711
    4. '(points' → logprob: -15.061971664428711
    5. '   ' → logprob: -15.686971664428711
    6. '.points' → logprob: -15.936971664428711
    7. '
' → logprob: -16.31197166442871
    8. '_points' → logprob: -17.06197166442871
    9. '```' → logprob: -17.06197166442871
    10. 'point' → logprob: -18.06197166442871

Token 680: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007645083125680685
    2. '.' → logprob: -4.882645130157471
    3. '.extend' → logprob: -10.882644653320312
    4. '.push' → logprob: -12.132644653320312
    5. 'points' → logprob: -12.632644653320312
    6. '.app' → logprob: -13.007644653320312
    7. '.points' → logprob: -13.257644653320312
    8. '_points' → logprob: -13.882644653320312
    9. 'append' → logprob: -13.882644653320312
    10. '.insert' → logprob: -14.007644653320312

Token 681: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00043972869752906263
    2. 'x' → logprob: -7.750439643859863
    3. '(' → logprob: -11.625439643859863
    4. ' x' → logprob: -16.12544059753418
    5. '(
' → logprob: -18.50044059753418
    6. '((' → logprob: -19.12544059753418
    7. ' (' → logprob: -19.62544059753418
    8. '	x' → logprob: -20.00044059753418
    9. '{x' → logprob: -21.25044059753418
    10. ',x' → logprob: -21.37544059753418

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.97155623533763e-05
    2. ')
' → logprob: -9.375089645385742
    3. ' )' → logprob: -12.750089645385742
    4. '       ' → logprob: -13.875089645385742
    5. '   ' → logprob: -14.125089645385742
    6. '           ' → logprob: -16.750089645385742
    7. ')

' → logprob: -17.000089645385742
    8. '))' → logprob: -18.000089645385742
    9. ')#' → logprob: -18.250089645385742
    10. ')\
' → logprob: -18.375089645385742

Token 683: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09886118024587631
    2. '   ' → logprob: -2.8488612174987793
    3. ' for' → logprob: -3.5988612174987793
    4. 'for' → logprob: -5.473861217498779
    5. '
' → logprob: -6.598861217498779
    6. '<|end|>' → logprob: -6.723861217498779
    7. '    
' → logprob: -7.598861217498779
    8. '        
' → logprob: -7.973861217498779
    9. '           ' → logprob: -8.223860740661621
    10. '	for' → logprob: -8.598860740661621

Token 684: ' intersections' (ID: 143513)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3102521598339081
    2. 'for' → logprob: -1.6852521896362305
    3. '   ' → logprob: -2.5602521896362305
    4. '
' → logprob: -5.6852521896362305
    5. '    
' → logprob: -7.9352521896362305
    6. '```' → logprob: -9.43525218963623
    7. '	for' → logprob: -10.06025218963623
    8. ' 
' → logprob: -10.43525218963623
    9. '  
' → logprob: -10.68525218963623
    10. ',' → logprob: -10.68525218963623

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16295205056667328
    2. '=' → logprob: -1.9129520654678345
    3. '=[]' → logprob: -6.037951946258545
    4. '_points' → logprob: -9.162952423095703
    5. 's' → logprob: -9.412952423095703
    6. '.' → logprob: -10.912952423095703
    7. '={}' → logprob: -11.037952423095703
    8. '_list' → logprob: -11.412952423095703
    9. '_' → logprob: -11.537952423095703
    10. '_indices' → logprob: -11.662952423095703

Token 686: ' dict' (ID: 11878)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003005512058734894
    2. '[]
' → logprob: -6.503005504608154
    3. ' []' → logprob: -7.253005504608154
    4. '{}' → logprob: -7.503005504608154
    5. 'set' → logprob: -8.378005981445312
    6. 'dict' → logprob: -12.628005981445312
    7. '[]

' → logprob: -12.628005981445312
    8. '[' → logprob: -12.878005981445312
    9. ' []
' → logprob: -13.628005981445312
    10. '{' → logprob: -14.003005981445312

Token 687: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00031294001382775605
    2. '()
' → logprob: -8.375312805175781
    3. '<|end|>' → logprob: -11.125312805175781
    4. '[]' → logprob: -11.500312805175781
    5. '   ' → logprob: -11.500312805175781
    6. '();' → logprob: -11.625312805175781
    7. '=' → logprob: -12.375312805175781
    8. '={}' → logprob: -12.500312805175781
    9. '()]' → logprob: -12.625312805175781
    10. '<|end|>' → logprob: -12.625312805175781

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013619893230497837
    2. ' for' → logprob: -4.513619899749756
    3. 'for' → logprob: -6.013619899749756
    4. '<|end|>' → logprob: -9.513619422912598
    5. '	for' → logprob: -10.763619422912598
    6. '    
' → logprob: -11.638619422912598
    7. ',' → logprob: -12.263619422912598
    8. '
' → logprob: -12.638619422912598
    9. '<|end|>' → logprob: -12.638619422912598
    10. '       ' → logprob: -13.513619422912598

Token 689: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3965224325656891
    2. 'for' → logprob: -1.1465224027633667
    3. '   ' → logprob: -4.646522521972656
    4. '	for' → logprob: -12.396522521972656
    5. ' ' → logprob: -12.771522521972656
    6. '```' → logprob: -13.396522521972656
    7. '
' → logprob: -13.771522521972656
    8. '    
' → logprob: -15.646522521972656
    9. '  ' → logprob: -16.021522521972656
    10. ' lines' → logprob: -16.646522521972656

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06216071546077728
    2. ' =' → logprob: -2.8121607303619385
    3. '=len' → logprob: -8.56216049194336
    4. '=line' → logprob: -13.93716049194336
    5. 'lines' → logprob: -14.68716049194336
    6. '=int' → logprob: -15.43716049194336
    7. '=n' → logprob: -15.93716049194336
    8. '_lines' → logprob: -16.68716049194336
    9. '=num' → logprob: -16.93716049194336
    10. ' lines' → logprob: -17.06216049194336

Token 691: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023250136524438858
    2. ' len' → logprob: -3.773250102996826
    3. '(len' → logprob: -12.523250579833984
    4. '=len' → logprob: -14.898250579833984
    5. '[len' → logprob: -15.273250579833984
    6. '   ' → logprob: -15.398250579833984
    7. '	len' → logprob: -16.523250579833984
    8. '```' → logprob: -17.148250579833984
    9. ' ' → logprob: -17.273250579833984
    10. ',len' → logprob: -17.773250579833984

Token 692: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.005260679870843887
    2. 'lines' → logprob: -5.255260467529297
    3. '(points' → logprob: -10.755260467529297
    4. ' lines' → logprob: -12.380260467529297
    5. 'points' → logprob: -14.255260467529297
    6. '	lines' → logprob: -14.755260467529297
    7. '(line' → logprob: -16.630260467529297
    8. '(' → logprob: -16.630260467529297
    9. 'Lines' → logprob: -16.630260467529297
    10. 'line' → logprob: -17.005260467529297

Token 693: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009427884360775352
    2. ')
' → logprob: -7.000942707061768
    3. ' )' → logprob: -10.750943183898926
    4. '   ' → logprob: -11.625943183898926
    5. 'for' → logprob: -15.000943183898926
    6. ')#' → logprob: -15.875943183898926
    7. 'def' → logprob: -16.00094223022461
    8. ')

' → logprob: -16.12594223022461
    9. ' )
' → logprob: -16.37594223022461
    10. ' ' → logprob: -17.00094223022461

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07287463545799255
    2. 'for' → logprob: -3.1978745460510254
    3. ' for' → logprob: -3.5728745460510254
    4. '
' → logprob: -6.822874546051025
    5. '	for' → logprob: -8.697875022888184
    6. '    
' → logprob: -10.322875022888184
    7. '```' → logprob: -10.322875022888184
    8. '<|end|>' → logprob: -11.447875022888184
    9. ' ' → logprob: -11.697875022888184
    10. '  
' → logprob: -11.697875022888184

Token 695: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1297343373298645
    2. ' for' → logprob: -2.1297342777252197
    3. '   ' → logprob: -5.879734516143799
    4. '	for' → logprob: -12.37973403930664
    5. '```' → logprob: -13.62973403930664
    6. '
' → logprob: -13.75473403930664
    7. ' ' → logprob: -15.12973403930664
    8. '``' → logprob: -17.00473403930664
    9. '    
' → logprob: -17.50473403930664
    10. ' 
' → logprob: -17.50473403930664

Token 696: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05492335557937622
    2. ' i' → logprob: -2.9299232959747314
    3. 'j' → logprob: -10.304923057556152
    4. ' j' → logprob: -12.179923057556152
    5. ' ' → logprob: -14.054923057556152
    6. '   ' → logprob: -14.429923057556152
    7. '	i' → logprob: -14.804923057556152
    8. 'I' → logprob: -15.929923057556152
    9. '```' → logprob: -16.30492401123047
    10. '_i' → logprob: -16.67992401123047

Token 697: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891347259283066
    2. 'in' → logprob: -2.578913450241089
    3. ' ' → logprob: -11.578913688659668
    4. ',' → logprob: -11.828913688659668
    5. 'range' → logprob: -13.203913688659668
    6. '=' → logprob: -14.078913688659668
    7. 'n' → logprob: -14.328913688659668
    8. '   ' → logprob: -14.578913688659668
    9. ' i' → logprob: -14.578913688659668
    10. '	in' → logprob: -14.703913688659668

Token 698: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031786637846380472
    2. ' range' → logprob: -5.753178596496582
    3. '0' → logprob: -13.878178596496582
    4. ' ' → logprob: -16.8781795501709
    5. '   ' → logprob: -19.2531795501709
    6. '(range' → logprob: -19.5031795501709
    7. '  ' → logprob: -20.1281795501709
    8. '	range' → logprob: -20.7531795501709
    9. 'in' → logprob: -20.8781795501709
    10. 'i' → logprob: -21.3781795501709

Token 699: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005260322242975235
    2. 'n' → logprob: -5.255260467529297
    3. '(i' → logprob: -11.630260467529297
    4. '(' → logprob: -11.630260467529297
    5. ' n' → logprob: -11.755260467529297
    6. 'i' → logprob: -14.880260467529297
    7. '	n' → logprob: -15.755260467529297
    8. ' (' → logprob: -15.755260467529297
    9. '(
' → logprob: -16.005260467529297
    10. '_n' → logprob: -17.380260467529297

Token 700: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42022550106048584
    2. '):
' → logprob: -1.5452255010604858
    3. '+' → logprob: -2.0452256202697754
    4. '   ' → logprob: -8.420225143432617
    5. '-' → logprob: -8.795225143432617
    6. ' +' → logprob: -10.295225143432617
    7. ' ):' → logprob: -11.045225143432617
    8. '
' → logprob: -11.295225143432617
    9. ':' → logprob: -11.920225143432617
    10. '):
' → logprob: -12.170225143432617

Token 701: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1155516654253006
    2. ' for' → logprob: -2.240551710128784
    3. '	for' → logprob: -6.615551471710205
    4. 'for' → logprob: -6.615551471710205
    5. '       ' → logprob: -10.240551948547363
    6. ' ' → logprob: -12.490551948547363
    7. ',' → logprob: -12.740551948547363
    8. '   ' → logprob: -13.865551948547363
    9. '<|end|>' → logprob: -14.115551948547363
    10. '```' → logprob: -14.490551948547363

Token 702: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03995867818593979
    2. ' for' → logprob: -3.2899587154388428
    3. '   ' → logprob: -6.414958477020264
    4. 'range' → logprob: -8.289958953857422
    5. ' range' → logprob: -10.664958953857422
    6. 'j' → logprob: -13.414958953857422
    7. ' j' → logprob: -14.039958953857422
    8. '       ' → logprob: -14.789958953857422
    9. '	for' → logprob: -14.789958953857422
    10. '```' → logprob: -14.789958953857422

Token 703: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.031527332961559296
    2. ' j' → logprob: -3.781527280807495
    3. 'i' → logprob: -4.906527519226074
    4. 'range' → logprob: -7.906527519226074
    5. ' i' → logprob: -8.281527519226074
    6. ' range' → logprob: -8.406527519226074
    7. '   ' → logprob: -13.281527519226074
    8. '(i' → logprob: -13.781527519226074
    9. ' (' → logprob: -14.281527519226074
    10. '(j' → logprob: -14.531527519226074

Token 704: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31375840306282043
    2. ' in' → logprob: -1.313758373260498
    3. 'range' → logprob: -7.813758373260498
    4. 'i' → logprob: -9.938758850097656
    5. '(i' → logprob: -10.938758850097656
    6. ' ' → logprob: -11.188758850097656
    7. ' range' → logprob: -11.938758850097656
    8. ' i' → logprob: -13.188758850097656
    9. '   ' → logprob: -13.688758850097656
    10. 'In' → logprob: -14.188758850097656

Token 705: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018082164227962494
    2. ' range' → logprob: -4.268082141876221
    3. '(i' → logprob: -6.018082141876221
    4. 'i' → logprob: -6.768082141876221
    5. '(range' → logprob: -8.143082618713379
    6. ' i' → logprob: -10.268082618713379
    7. '[i' → logprob: -14.893082618713379
    8. ' (' → logprob: -14.893082618713379
    9. '   ' → logprob: -15.768082618713379
    10. ' ' → logprob: -16.143081665039062

Token 706: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009164590737782419
    2. 'i' → logprob: -7.000916481018066
    3. '(' → logprob: -12.875916481018066
    4. 'range' → logprob: -13.875916481018066
    5. ' i' → logprob: -14.125916481018066
    6. ' (' → logprob: -14.250916481018066
    7. '(range' → logprob: -17.87591552734375
    8. '(n' → logprob: -18.00091552734375
    9. '{i' → logprob: -18.25091552734375
    10. ' range' → logprob: -18.62591552734375

Token 707: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.513339445111342e-05
    2. '+i' → logprob: -10.375044822692871
    3. ' +' → logprob: -11.250044822692871
    4. '+j' → logprob: -15.000044822692871
    5. '1' → logprob: -15.250044822692871
    6. '+
' → logprob: -15.625044822692871
    7. '+n' → logprob: -16.250045776367188
    8. '()+' → logprob: -17.250045776367188
    9. ')+' → logprob: -17.375045776367188
    10. '+)' → logprob: -18.375045776367188

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.073596548754722e-05
    2. ' ' → logprob: -10.87505054473877
    3. 'n' → logprob: -11.25005054473877
    4. 'i' → logprob: -11.62505054473877
    5. 'j' → logprob: -12.12505054473877
    6. '0' → logprob: -12.75005054473877
    7. '   ' → logprob: -14.25005054473877
    8. '
' → logprob: -15.62505054473877
    9. '```' → logprob: -16.000051498413086
    10. '2' → logprob: -16.125051498413086

Token 709: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.13392095267772675
    2. ',' → logprob: -2.258920907974243
    3. 'n' → logprob: -4.258921146392822
    4. '(n' → logprob: -5.008921146392822
    5. ' ,' → logprob: -10.758920669555664
    6. '(' → logprob: -11.383920669555664
    7. ',
' → logprob: -12.383920669555664
    8. '1' → logprob: -12.383920669555664
    9. ',j' → logprob: -12.633920669555664
    10. ' n' → logprob: -12.758920669555664

Token 710: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039558734744787216
    2. '):
' → logprob: -3.2895586490631104
    3. ':' → logprob: -6.9145588874816895
    4. '+' → logprob: -7.6645588874816895
    5. '   ' → logprob: -10.664558410644531
    6. ')' → logprob: -11.539558410644531
    7. '1' → logprob: -12.539558410644531
    8. '):
' → logprob: -12.539558410644531
    9. '       ' → logprob: -12.664558410644531
    10. ',' → logprob: -12.914558410644531

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014471390284597874
    2. ' if' → logprob: -4.389471530914307
    3. '       ' → logprob: -6.514471530914307
    4. ',' → logprob: -9.139471054077148
    5. 'if' → logprob: -9.264471054077148
    6. ':' → logprob: -9.514471054077148
    7. ':
' → logprob: -10.264471054077148
    8. '	       ' → logprob: -10.389471054077148
    9. ' lines' → logprob: -10.889471054077148
    10. '   ' → logprob: -10.889471054077148

Token 712: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3155100643634796
    2. ' if' → logprob: -1.3155100345611572
    3. '       ' → logprob: -6.190510272979736
    4. ' lines' → logprob: -10.190509796142578
    5. 'line' → logprob: -10.315509796142578
    6. '   ' → logprob: -10.315509796142578
    7. 'l' → logprob: -10.565509796142578
    8. ' line' → logprob: -10.565509796142578
    9. '           ' → logprob: -11.315509796142578
    10. '	if' → logprob: -11.565509796142578

Token 713: ' =' (ID: 314)
  Prédit: ',B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.6905580163002014
    2. ',' → logprob: -1.3155579566955566
    3. '=line' → logprob: -2.1905579566955566
    4. ',line' → logprob: -2.5655579566955566
    5. '=' → logprob: -3.3155579566955566
    6. ' =' → logprob: -5.690557956695557
    7. '=B' → logprob: -7.565557956695557
    8. 'B' → logprob: -7.815557956695557
    9. ' ,' → logprob: -8.440558433532715
    10. ',b' → logprob: -8.565558433532715

Token 714: ' (' (ID: 350)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.04337628558278084
    2. 'lines' → logprob: -3.4183762073516846
    3. ' (' → logprob: -5.043376445770264
    4. ' lines' → logprob: -6.168376445770264
    5. '(line' → logprob: -7.293376445770264
    6. '(' → logprob: -8.043375968933105
    7. '(points' → logprob: -9.543375968933105
    8. 'line' → logprob: -10.543375968933105
    9. '((' → logprob: -10.918375968933105
    10. 'points' → logprob: -12.543375968933105

Token 715: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00013691288768313825
    2. ' lines' → logprob: -9.250137329101562
    3. '(lines' → logprob: -10.125137329101562
    4. '   ' → logprob: -14.375137329101562
    5. '	lines' → logprob: -16.500137329101562
    6. 'line' → logprob: -18.250137329101562
    7. '.lines' → logprob: -18.500137329101562
    8. '           ' → logprob: -18.500137329101562
    9. ' ' → logprob: -18.625137329101562
    10. ')' → logprob: -19.375137329101562

Token 716: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003961185284424573
    2. 'i' → logprob: -8.375395774841309
    3. '[j' → logprob: -9.000395774841309
    4. ' [' → logprob: -10.750395774841309
    5. '[' → logprob: -11.125395774841309
    6. '   ' → logprob: -13.625395774841309
    7. '```' → logprob: -13.875395774841309
    8. ')[' → logprob: -14.125395774841309
    9. ' i' → logprob: -14.250395774841309
    10. '
' → logprob: -14.625395774841309

Token 717: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005319446790963411
    2. '0' → logprob: -8.000532150268555
    3. '][' → logprob: -9.000532150268555
    4. ' [' → logprob: -10.125532150268555
    5. '   ' → logprob: -11.500532150268555
    6. '#' → logprob: -11.875532150268555
    7. '
' → logprob: -12.625532150268555
    8. '```' → logprob: -12.750532150268555
    9. ' ' → logprob: -12.875532150268555
    10. ')[' → logprob: -13.250532150268555

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -10.125059127807617
    3. '   ' → logprob: -11.375059127807617
    4. '[' → logprob: -13.437559127807617
    5. '2' → logprob: -13.812559127807617
    6. '
' → logprob: -13.812559127807617
    7. '#' → logprob: -13.875059127807617
    8. '(' → logprob: -14.312559127807617
    9. '  ' → logprob: -14.875059127807617
    10. '    ' → logprob: -15.000059127807617

Token 719: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03858805447816849
    2. '],' → logprob: -3.288588047027588
    3. ' ,' → logprob: -8.788588523864746
    4. '),' → logprob: -9.163588523864746
    5. '
' → logprob: -9.913588523864746
    6. ',line' → logprob: -10.038588523864746
    7. '[' → logprob: -10.163588523864746
    8. ',
' → logprob: -10.538588523864746
    9. 'lines' → logprob: -10.663588523864746
    10. ',A' → logprob: -11.038588523864746

Token 720: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00043281487887725234
    2. ' lines' → logprob: -7.750432968139648
    3. '(lines' → logprob: -13.625432968139648
    4. '	lines' → logprob: -14.375432968139648
    5. '   ' → logprob: -15.625432968139648
    6. 'line' → logprob: -17.87543296813965
    7. '_lines' → logprob: -18.37543296813965
    8. 'Lines' → logprob: -18.62543296813965
    9. '-lines' → logprob: -18.75043296813965
    10. '.lines' → logprob: -18.75043296813965

Token 721: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10192062705755234
    2. 'i' → logprob: -2.3519206047058105
    3. '1' → logprob: -6.7269206047058105
    4. ' i' → logprob: -8.226921081542969
    5. '[' → logprob: -9.351921081542969
    6. '   ' → logprob: -9.351921081542969
    7. '(i' → logprob: -10.476921081542969
    8. ' [' → logprob: -10.851921081542969
    9. ',i' → logprob: -11.976921081542969
    10. ' ' → logprob: -12.601921081542969

Token 722: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1707276701927185
    2. '[' → logprob: -1.9207277297973633
    3. '][' → logprob: -4.670727729797363
    4. '0' → logprob: -7.045727729797363
    5. '   ' → logprob: -9.920727729797363
    6. 'i' → logprob: -10.295727729797363
    7. '#' → logprob: -10.295727729797363
    8. '3' → logprob: -10.920727729797363
    9. '[i' → logprob: -10.920727729797363
    10. '
' → logprob: -11.045727729797363

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.37500286102295
    3. '3' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.50000286102295
    5. '[' → logprob: -15.62500286102295
    6. '2' → logprob: -16.937501907348633
    7. '```' → logprob: -17.125001907348633
    8. '
' → logprob: -17.187501907348633
    9. 'i' → logprob: -17.562501907348633
    10. '0' → logprob: -17.562501907348633

Token 724: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2019035518169403
    2. ')' → logprob: -1.7019035816192627
    3. '),' → logprob: -8.201903343200684
    4. '),(' → logprob: -9.576903343200684
    5. '   ' → logprob: -9.701903343200684
    6. ' )
' → logprob: -9.826903343200684
    7. '),
' → logprob: -11.826903343200684
    8. ')
' → logprob: -12.076903343200684
    9. ' )' → logprob: -12.201903343200684
    10. ',' → logprob: -12.201903343200684

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2820269465446472
    2. '   ' → logprob: -1.532027006149292
    3. ',' → logprob: -4.907026767730713
    4. 'B' → logprob: -5.032026767730713
    5. ' B' → logprob: -5.032026767730713
    6. '
' → logprob: -5.157026767730713
    7. ')' → logprob: -6.532026767730713
    8. ' ' → logprob: -7.532026767730713
    9. '       ' → logprob: -7.782026767730713
    10. '<|end|>' → logprob: -8.907027244567871

Token 726: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.21109680831432343
    2. 'C' → logprob: -1.7110967636108398
    3. ' B' → logprob: -5.08609676361084
    4. '   ' → logprob: -6.58609676361084
    5. ' C' → logprob: -6.71109676361084
    6. 'A' → logprob: -7.08609676361084
    7. '           ' → logprob: -11.46109676361084
    8. ' ' → logprob: -12.33609676361084
    9. ' A' → logprob: -13.08609676361084
    10. '(' → logprob: -13.71109676361084

Token 727: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. '=(' → logprob: -16.376930236816406
    4. ' =(' → logprob: -16.751930236816406
    5. '   ' → logprob: -17.251930236816406
    6. ')' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.376930236816406
    8. ',' → logprob: -17.501930236816406
    9. '=
' → logprob: -18.376930236816406
    10. '(' → logprob: -20.126930236816406

Token 728: ' (' (ID: 350)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.014163863845169544
    2. ' (' → logprob: -4.264163970947266
    3. '(line' → logprob: -15.764163970947266
    4. '(' → logprob: -16.139163970947266
    5. '   ' → logprob: -17.139163970947266
    6. '((' → logprob: -17.139163970947266
    7. ' ' → logprob: -17.389163970947266
    8. '(points' → logprob: -17.514163970947266
    9. '(files' → logprob: -19.014163970947266
    10. ' lines' → logprob: -19.264163970947266

Token 729: 'lines' (ID: 10105)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0834130272269249
    2. 'lines' → logprob: -2.5834131240844727
    3. ' (' → logprob: -5.833413124084473
    4. ' lines' → logprob: -6.458413124084473
    5. '	lines' → logprob: -12.083413124084473
    6. '   ' → logprob: -13.083413124084473
    7. ')' → logprob: -13.208413124084473
    8. '(' → logprob: -13.458413124084473
    9. '(line' → logprob: -13.708413124084473
    10. 'line' → logprob: -13.708413124084473

Token 730: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05582712963223457
    2. '[j' → logprob: -2.9308271408081055
    3. 'lines' → logprob: -7.4308271408081055
    4. '(lines' → logprob: -8.930827140808105
    5. 'i' → logprob: -9.305827140808105
    6. '[' → logprob: -10.180827140808105
    7. '   ' → logprob: -10.555827140808105
    8. ' lines' → logprob: -10.930827140808105
    9. '
' → logprob: -11.180827140808105
    10. 'j' → logprob: -12.180827140808105

Token 731: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007607918814755976
    2. '][' → logprob: -7.875760555267334
    3. '0' → logprob: -8.750761032104492
    4. '2' → logprob: -8.875761032104492
    5. '   ' → logprob: -10.375761032104492
    6. ')[' → logprob: -10.875761032104492
    7. ' [' → logprob: -11.750761032104492
    8. '[i' → logprob: -12.000761032104492
    9. '
' → logprob: -12.625761032104492
    10. ' ' → logprob: -12.750761032104492

Token 732: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6963802576065063
    2. '2' → logprob: -0.8213802576065063
    3. 'lines' → logprob: -2.821380138397217
    4. ' lines' → logprob: -6.571380138397217
    5. '[' → logprob: -7.946380138397217
    6. ' ' → logprob: -8.446380615234375
    7. '(lines' → logprob: -8.696380615234375
    8. '
' → logprob: -10.071380615234375
    9. '(' → logprob: -10.446380615234375
    10. '3' → logprob: -11.196380615234375

Token 733: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046081675100140274
    2. ' ,' → logprob: -8.000460624694824
    3. '),' → logprob: -9.375460624694824
    4. ',line' → logprob: -10.625460624694824
    5. '],' → logprob: -11.750460624694824
    6. ',
' → logprob: -12.625460624694824
    7. ' lines' → logprob: -13.875460624694824
    8. ')' → logprob: -14.000460624694824
    9. '‌,' → logprob: -14.375460624694824
    10. 'lines' → logprob: -15.375460624694824

Token 734: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3132723271846771
    2. 'lines' → logprob: -1.3132723569869995
    3. '(lines' → logprob: -11.688272476196289
    4. '	lines' → logprob: -13.688272476196289
    5. 'Lines' → logprob: -15.313272476196289
    6. 'line' → logprob: -15.313272476196289
    7. '.lines' → logprob: -16.18827247619629
    8. '_lines' → logprob: -16.31327247619629
    9. '-lines' → logprob: -16.56327247619629
    10. ')' → logprob: -16.56327247619629

Token 735: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0006981384940445423
    2. '[' → logprob: -7.500698089599609
    3. 'j' → logprob: -9.37569808959961
    4. ',j' → logprob: -10.00069808959961
    5. '[
' → logprob: -12.75069808959961
    6. ',' → logprob: -12.75069808959961
    7. '[i' → logprob: -13.00069808959961
    8. '```' → logprob: -13.50069808959961
    9. ')' → logprob: -13.62569808959961
    10. '(j' → logprob: -13.62569808959961

Token 736: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004550457466393709
    2. '2' → logprob: -5.504550457000732
    3. '3' → logprob: -8.12955093383789
    4. ')' → logprob: -10.00455093383789
    5. '][' → logprob: -10.12955093383789
    6. '1' → logprob: -10.50455093383789
    7. ' ' → logprob: -11.00455093383789
    8. ',' → logprob: -11.37955093383789
    9. '])' → logprob: -11.87955093383789
    10. '0' → logprob: -12.00455093383789

Token 737: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0622045174241066
    2. '2' → logprob: -2.812204599380493
    3. ' ' → logprob: -8.437204360961914
    4. '[' → logprob: -12.062204360961914
    5. '   ' → logprob: -12.312204360961914
    6. '```' → logprob: -12.437204360961914
    7. '1' → logprob: -13.437204360961914
    8. '
' → logprob: -13.812204360961914
    9. '0' → logprob: -14.187204360961914
    10. '[j' → logprob: -14.687204360961914

Token 738: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009828222915530205
    2. ')
' → logprob: -4.634828090667725
    3. '])' → logprob: -9.884828567504883
    4. '   ' → logprob: -11.884828567504883
    5. ' )' → logprob: -12.384828567504883
    6. ')
' → logprob: -12.509828567504883
    7. ')

' → logprob: -13.259828567504883
    8. ']' → logprob: -13.634828567504883
    9. ')]' → logprob: -14.009828567504883
    10. '))' → logprob: -14.634828567504883

Token 739: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033124617766588926
    2. ' if' → logprob: -6.003312587738037
    3. '   ' → logprob: -7.628312587738037
    4. 'if' → logprob: -8.753312110900879
    5. '       ' → logprob: -8.878312110900879
    6. '<|end|>' → logprob: -11.378312110900879
    7. '	       ' → logprob: -11.753312110900879
    8. '            
' → logprob: -12.253312110900879
    9. '		' → logprob: -12.253312110900879
    10. ',' → logprob: -12.253312110900879

Token 740: ' C' (ID: 363)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1626816987991333
    2. ' if' → logprob: -1.4126816987991333
    3. '           ' → logprob: -1.5376816987991333
    4. 'C' (adapté à ' C') → logprob: -1.6626816987991333
    5. ' C' → logprob: -3.5376815795898438
    6. '   ' → logprob: -4.662681579589844
    7. '       ' → logprob: -7.912681579589844
    8. ' ' → logprob: -7.912681579589844
    9. '            
' → logprob: -10.912681579589844
    10. '  ' → logprob: -11.287681579589844

Token 741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. '=(' → logprob: -14.376930236816406
    4. '=
' → logprob: -15.376930236816406
    5. ' =(' → logprob: -16.501930236816406
    6. ' ' → logprob: -17.126930236816406
    7. ' =
' → logprob: -17.501930236816406
    8. ',' → logprob: -18.126930236816406
    9. ')' → logprob: -18.251930236816406
    10. '＝' → logprob: -19.251930236816406

Token 742: ' (' (ID: 350)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.014166918583214283
    2. ' (' → logprob: -4.264166831970215
    3. '(' → logprob: -13.264166831970215
    4. '(points' → logprob: -14.764166831970215
    5. '(line' → logprob: -15.264166831970215
    6. ' ' → logprob: -15.389166831970215
    7. '   ' → logprob: -15.764166831970215
    8. '((' → logprob: -16.38916778564453
    9. '(files' → logprob: -16.63916778564453
    10. '(L' → logprob: -16.88916778564453

Token 743: 'lines' (ID: 10105)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00090407655807212
    2. ' (' → logprob: -7.125904083251953
    3. 'lines' → logprob: -9.250904083251953
    4. ' lines' → logprob: -13.750904083251953
    5. '   ' → logprob: -14.750904083251953
    6. '(line' → logprob: -14.875904083251953
    7. '(points' → logprob: -15.125904083251953
    8. ' ' → logprob: -15.250904083251953
    9. ')' → logprob: -15.500904083251953
    10. '(' → logprob: -15.750904083251953

Token 744: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002229832811281085
    2. '[i' → logprob: -6.252229690551758
    3. '(j' → logprob: -8.502229690551758
    4. '(lines' → logprob: -9.877229690551758
    5. '[' → logprob: -11.502229690551758
    6. '   ' → logprob: -12.002229690551758
    7. 'lines' → logprob: -12.252229690551758
    8. ')' → logprob: -12.377229690551758
    9. '
' → logprob: -12.627229690551758
    10. '           ' → logprob: -12.877229690551758

Token 745: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06868713349103928
    2. '0' → logprob: -3.1936872005462646
    3. '][' → logprob: -3.6936872005462646
    4. '           ' → logprob: -8.943687438964844
    5. '(' → logprob: -9.068687438964844
    6. ' [' → logprob: -9.943687438964844
    7. '       ' → logprob: -10.193687438964844
    8. ' ' → logprob: -10.193687438964844
    9. '   ' → logprob: -10.318687438964844
    10. ')[' → logprob: -10.693687438964844

Token 746: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.125041961669922
    3. '[' → logprob: -14.250041961669922
    4. '
' → logprob: -14.625041961669922
    5. '2' → logprob: -14.687541961669922
    6. '   ' → logprob: -15.375041961669922
    7. '```' → logprob: -16.250041961669922
    8. '(' → logprob: -16.687541961669922
    9. '  ' → logprob: -16.750041961669922
    10. '][' → logprob: -16.750041961669922

Token 747: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.77022064034827e-05
    2. ' ,' → logprob: -9.750097274780273
    3. '),' → logprob: -11.000097274780273
    4. ',
' → logprob: -12.125097274780273
    5. ')' → logprob: -12.375097274780273
    6. ',C' → logprob: -12.625097274780273
    7. '<|end|>' → logprob: -12.750097274780273
    8. ',line' → logprob: -13.250097274780273
    9. '‌,' → logprob: -13.875097274780273
    10. ',j' → logprob: -14.250097274780273

Token 748: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.38701239228248596
    2. 'lines' → logprob: -1.1370123624801636
    3. '(lines' → logprob: -8.887012481689453
    4. '	lines' → logprob: -13.262012481689453
    5. '.lines' → logprob: -15.137012481689453
    6. 'Lines' → logprob: -15.512012481689453
    7. '   ' → logprob: -15.762012481689453
    8. ' ' → logprob: -15.887012481689453
    9. '-lines' → logprob: -16.012012481689453
    10. 'line' → logprob: -16.137012481689453

Token 749: '[j' (ID: 7895)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5524912476539612
    2. '[j' → logprob: -1.4274911880493164
    3. 'j' → logprob: -1.8024911880493164
    4. '[' → logprob: -4.302491188049316
    5. '3' → logprob: -6.052491188049316
    6. '   ' → logprob: -6.552491188049316
    7. ' ' → logprob: -6.927491188049316
    8. '```' → logprob: -8.302491188049316
    9. '	j' → logprob: -8.427491188049316
    10. '1' → logprob: -8.427491188049316

Token 750: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31519177556037903
    2. 'j' → logprob: -1.6901917457580566
    3. '3' → logprob: -3.1901917457580566
    4. '2' → logprob: -3.1901917457580566
    5. '[j' → logprob: -5.940191745758057
    6. '[' → logprob: -7.565191745758057
    7. ' j' → logprob: -9.065192222595215
    8. '],' → logprob: -9.440192222595215
    9. ',j' → logprob: -10.315192222595215
    10. '```' → logprob: -10.565192222595215

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09203998744487762
    2. '3' → logprob: -2.5920400619506836
    3. 'j' → logprob: -4.342040061950684
    4. '[j' → logprob: -11.092040061950684
    5. '```' → logprob: -11.342040061950684
    6. ' ' → logprob: -12.217040061950684
    7. '2' → logprob: -12.217040061950684
    8. '[' → logprob: -12.467040061950684
    9. ' j' → logprob: -12.467040061950684
    10. '<|end|>' → logprob: -13.217040061950684

Token 752: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.348511666059494
    2. ')' → logprob: -1.2235116958618164
    3. ')
' → logprob: -10.473511695861816
    4. '           ' → logprob: -10.973511695861816
    5. ')

' → logprob: -11.723511695861816
    6. ' )
' → logprob: -12.098511695861816
    7. '   ' → logprob: -13.598511695861816
    8. '),' → logprob: -13.973511695861816
    9. ' )' → logprob: -13.973511695861816
    10. ' ' → logprob: -14.098511695861816

Token 753: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009938681032508612
    2. 'D' → logprob: -7.625993728637695
    3. '   ' → logprob: -7.750993728637695
    4. ' ' → logprob: -10.250993728637695
    5. ' D' → logprob: -10.750993728637695
    6. '
' → logprob: -11.625993728637695
    7. '		' → logprob: -13.375993728637695
    8. '               ' → logprob: -13.500993728637695
    9. '<|end|>' → logprob: -13.625993728637695
    10. '       ' → logprob: -13.750993728637695

Token 754: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.01847497746348381
    2. ' D' → logprob: -4.01847505569458
    3. 'C' → logprob: -8.393474578857422
    4. '           ' → logprob: -9.393474578857422
    5. '   ' → logprob: -11.393474578857422
    6. ' ' → logprob: -13.268474578857422
    7. ' C' → logprob: -13.768474578857422
    8. '       ' → logprob: -14.143474578857422
    9. '	D' → logprob: -15.268474578857422
    10. '
' → logprob: -16.268474578857422

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407862544059753
    2. ' =' → logprob: -0.9740786552429199
    3. '=(' → logprob: -13.599078178405762
    4. ' =(' → logprob: -15.099078178405762
    5. ')' → logprob: -16.849079132080078
    6. '=
' → logprob: -17.974079132080078
    7. '(' → logprob: -18.349079132080078
    8. ' ' → logprob: -18.474079132080078
    9. '>' → logprob: -18.849079132080078
    10. ' (' → logprob: -18.849079132080078

Token 756: ' (' (ID: 350)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.009758448228240013
    2. ' (' → logprob: -4.634758472442627
    3. '(' → logprob: -14.259757995605469
    4. '(points' → logprob: -14.884757995605469
    5. '(L' → logprob: -15.009757995605469
    6. '((' → logprob: -15.134757995605469
    7. '   ' → logprob: -15.134757995605469
    8. ' ' → logprob: -15.509757995605469
    9. '(line' → logprob: -16.38475799560547
    10. '(C' → logprob: -16.63475799560547

Token 757: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12707771360874176
    2. '(lines' → logprob: -2.12707781791687
    3. ' lines' → logprob: -9.00207805633545
    4. ' (' → logprob: -11.75207805633545
    5. '(
' → logprob: -12.00207805633545
    6. ')' → logprob: -12.50207805633545
    7. '(' → logprob: -13.25207805633545
    8. '(j' → logprob: -13.37707805633545
    9. '	lines' → logprob: -13.50207805633545
    10. 'j' → logprob: -14.12707805633545

Token 758: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.054500666621607e-06
    2. 'j' → logprob: -12.75000286102295
    3. '[' → logprob: -16.000003814697266
    4. '[i' → logprob: -17.125003814697266
    5. '[
' → logprob: -18.125003814697266
    6. '
' → logprob: -18.250003814697266
    7. ' [' → logprob: -18.875003814697266
    8. '(j' → logprob: -19.250003814697266
    9. '```' → logprob: -19.625003814697266
    10. ')[' → logprob: -20.125003814697266

Token 759: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030922360718250275
    2. '[j' → logprob: -4.1559224128723145
    3. '][' → logprob: -4.4059224128723145
    4. '2' → logprob: -6.1559224128723145
    5. '0' → logprob: -8.405921936035156
    6. 'j' → logprob: -9.280921936035156
    7. '3' → logprob: -10.780921936035156
    8. ']' → logprob: -10.780921936035156
    9. ')[' → logprob: -11.155921936035156
    10. '[
' → logprob: -11.155921936035156

Token 760: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5902702212333679
    2. '2' → logprob: -1.0902702808380127
    3. '0' → logprob: -2.3402702808380127
    4. '3' → logprob: -4.340270042419434
    5. ' j' → logprob: -8.090270042419434
    6. '$j' → logprob: -10.590270042419434
    7. '
' → logprob: -11.840270042419434
    8. '[j' → logprob: -12.465270042419434
    9. ' ' → logprob: -12.590270042419434
    10. '	j' → logprob: -12.590270042419434

Token 761: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03786485269665718
    2. '],' → logprob: -3.412864923477173
    3. ',C' → logprob: -6.662864685058594
    4. ',D' → logprob: -6.912864685058594
    5. '),' → logprob: -7.162864685058594
    6. ' ,' → logprob: -7.287864685058594
    7. '>,' → logprob: -8.787864685058594
    8. '},' → logprob: -8.912864685058594
    9. ',j' → logprob: -9.662864685058594
    10. '<|end|>' → logprob: -9.912864685058594

Token 762: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3133184313774109
    2. 'lines' → logprob: -1.3133184909820557
    3. '(lines' → logprob: -10.063318252563477
    4. 'D' → logprob: -11.813318252563477
    5. ' D' → logprob: -12.313318252563477
    6. '	lines' → logprob: -13.813318252563477
    7. '-lines' → logprob: -15.313318252563477
    8. '.lines' → logprob: -15.438318252563477
    9. ')' → logprob: -15.688318252563477
    10. 'C' → logprob: -16.063318252563477

Token 763: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2088499218225479
    2. '[' → logprob: -1.7088499069213867
    3. '3' → logprob: -5.333849906921387
    4. 'j' → logprob: -6.333849906921387
    5. '][' → logprob: -7.708849906921387
    6. '[
' → logprob: -8.833849906921387
    7. ',j' → logprob: -9.583849906921387
    8. ']' → logprob: -10.208849906921387
    9. ')[' → logprob: -11.083849906921387
    10. ')' → logprob: -11.208849906921387

Token 764: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4315990209579468
    2. '3' → logprob: -1.0565990209579468
    3. '][' → logprob: -6.306599140167236
    4. '[j' → logprob: -7.556599140167236
    5. '2' → logprob: -8.681598663330078
    6. '])' → logprob: -8.806598663330078
    7. ')' → logprob: -9.681598663330078
    8. ' ' → logprob: -10.431598663330078
    9. ')[' → logprob: -10.556598663330078
    10. ',' → logprob: -10.931598663330078

Token 765: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. 'j' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '[' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. '３' → logprob: -17.500001907348633
    8. '[j' → logprob: -17.875001907348633
    9. '۳' → logprob: -17.875001907348633
    10. '
' → logprob: -18.125001907348633

Token 766: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10196174681186676
    2. '])' → logprob: -2.351961851119995
    3. ')
' → logprob: -6.601961612701416
    4. '])
' → logprob: -8.976962089538574
    5. ')]' → logprob: -9.726962089538574
    6. '):' → logprob: -9.976962089538574
    7. ')])' → logprob: -10.601962089538574
    8. ' )' → logprob: -10.726962089538574
    9. '）' → logprob: -10.851962089538574
    10. ']' → logprob: -10.976962089538574

Token 767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008910943870432675
    2. '       ' → logprob: -7.750891208648682
    3. '   ' → logprob: -8.375890731811523
    4. '<|end|>' → logprob: -9.500890731811523
    5. ' if' → logprob: -9.875890731811523
    6. '            
' → logprob: -10.875890731811523
    7. '<|end|>' → logprob: -10.875890731811523
    8. '```' → logprob: -11.375890731811523
    9. '	       ' → logprob: -11.625890731811523
    10. ',' → logprob: -11.750890731811523

Token 768: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5314376354217529
    2. ' if' → logprob: -1.031437635421753
    3. '           ' → logprob: -2.906437635421753
    4. '       ' → logprob: -7.031437873840332
    5. '   ' → logprob: -9.031437873840332
    6. '	if' → logprob: -10.281437873840332
    7. '            
' → logprob: -11.156437873840332
    8. ' ' → logprob: -11.906437873840332
    9. '
' → logprob: -12.781437873840332
    10. '          ' → logprob: -13.281437873840332

Token 769: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.008618593215942383
    2. ' intersect' → logprob: -4.758618354797363
    3. '(inter' → logprob: -12.508618354797363
    4. 'not' → logprob: -15.258618354797363
    5. 'int' → logprob: -16.25861930847168
    6. '   ' → logprob: -17.25861930847168
    7. ' ' → logprob: -17.63361930847168
    8. '
' → logprob: -18.25861930847168
    9. '           ' → logprob: -18.63361930847168
    10. ' not' → logprob: -18.75861930847168

Token 770: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.893480243277736e-05
    2. '(' → logprob: -10.250039100646973
    3. '((' → logprob: -13.375039100646973
    4. '(
' → logprob: -13.375039100646973
    5. ' (' → logprob: -15.375039100646973
    6. 'A' → logprob: -15.750039100646973
    7. '```' → logprob: -17.875038146972656
    8. '(C' → logprob: -18.750038146972656
    9. '(B' → logprob: -19.250038146972656
    10. '(I' → logprob: -19.375038146972656

Token 771: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.020595144480466843
    2. ',' → logprob: -3.895595073699951
    3. ' ,' → logprob: -10.64559555053711
    4. ',
' → logprob: -11.39559555053711
    5. ',C' → logprob: -11.52059555053711
    6. ',b' → logprob: -12.52059555053711
    7. 'B' → logprob: -13.14559555053711
    8. ',D' → logprob: -13.64559555053711
    9. '```' → logprob: -15.27059555053711
    10. ',A' → logprob: -15.39559555053711

Token 772: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.4305465519428253
    2. ',' → logprob: -1.055546522140503
    3. ' ,' → logprob: -6.430546760559082
    4. ',
' → logprob: -8.555546760559082
    5. 'C' → logprob: -11.555546760559082
    6. ',A' → logprob: -12.055546760559082
    7. ',,' → logprob: -12.430546760559082
    8. '```' → logprob: -12.555546760559082
    9. ',

' → logprob: -12.805546760559082
    10. ',c' → logprob: -13.055546760559082

Token 773: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.00015288250870071352
    2. ',' → logprob: -8.875152587890625
    3. 'D' → logprob: -11.625152587890625
    4. ',
' → logprob: -13.125152587890625
    5. ' ,' → logprob: -14.250152587890625
    6. ',d' → logprob: -14.375152587890625
    7. ',C' → logprob: -14.750152587890625
    8. '
' → logprob: -16.500152587890625
    9. '```' → logprob: -17.125152587890625
    10. ',B' → logprob: -17.250152587890625

Token 774: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133643567562103
    2. '):
' → logprob: -1.3133643865585327
    3. ' ):' → logprob: -10.563364028930664
    4. ':' → logprob: -10.688364028930664
    5. ')' → logprob: -10.813364028930664
    6. '):
' → logprob: -11.438364028930664
    7. ' ):
' → logprob: -11.813364028930664
    8. '):

' → logprob: -12.063364028930664
    9. '           ' → logprob: -12.688364028930664
    10. '       ' → logprob: -13.063364028930664

Token 775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00458202650770545
    2. '           ' → logprob: -6.254581928253174
    3. '       ' → logprob: -6.504581928253174
    4. ',' → logprob: -7.754581928253174
    5. '```' → logprob: -9.379582405090332
    6. ' x' → logprob: -9.504582405090332
    7. '                
' → logprob: -9.754582405090332
    8. ')' → logprob: -10.004582405090332
    9. ':' → logprob: -10.129582405090332
    10. '   ' → logprob: -10.254582405090332

Token 776: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.8354982137680054
    2. ' p' → logprob: -0.8354982137680054
    3. ' ip' → logprob: -3.085498332977295
    4. 'ip' → logprob: -3.335498332977295
    5. 'pt' → logprob: -3.335498332977295
    6. ' pt' → logprob: -4.960498332977295
    7. ' inter' → logprob: -5.460498332977295
    8. ' point' → logprob: -6.585498332977295
    9. 'inter' → logprob: -6.960498332977295
    10. 'point' → logprob: -7.710498332977295

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39073318243026733
    2. '=' → logprob: -1.140733242034912
    3. 'oint' → logprob: -5.890733242034912
    4. 't' → logprob: -8.015732765197754
    5. 'nt' → logprob: -8.015732765197754
    6. '=int' → logprob: -8.890732765197754
    7. 'int' → logprob: -9.015732765197754
    8. 'oints' → logprob: -10.015732765197754
    9. '_int' → logprob: -10.265732765197754
    10. '=p' → logprob: -11.140732765197754

Token 778: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0067154900170862675
    2. ' line' → logprob: -5.006715297698975
    3. '(line' → logprob: -16.006715774536133
    4. '	line' → logprob: -18.756715774536133
    5. '   ' → logprob: -19.006715774536133
    6. '=line' → logprob: -20.131715774536133
    7. ' ' → logprob: -20.256715774536133
    8. 'list' → logprob: -20.881715774536133
    9. 'Line' → logprob: -21.006715774536133
    10. '[line' → logprob: -21.381715774536133

Token 779: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.0206720617134124e-05
    2. 'intersection' → logprob: -11.62501049041748
    3. 'line' → logprob: -14.00001049041748
    4. 'inter' → logprob: -15.00001049041748
    5. '_line' → logprob: -16.875009536743164
    6. '(line' → logprob: -18.125009536743164
    7. '_in' → logprob: -18.375009536743164
    8. '```' → logprob: -19.000009536743164
    9. ' intersection' → logprob: -19.500009536743164
    10. '[line' → logprob: -19.625009536743164

Token 780: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -6.277553620748222e-05
    2. 'ection' → logprob: -10.000062942504883
    3. 'intersection' → logprob: -11.000062942504883
    4. '<section' → logprob: -16.250062942504883
    5. 's' → logprob: -16.250062942504883
    6. 'sect' → logprob: -16.500062942504883
    7. 'ese' → logprob: -16.750062942504883
    8. 'sections' → logprob: -16.750062942504883
    9. '```' → logprob: -17.000062942504883
    10. '_section' → logprob: -17.000062942504883

Token 781: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.200166469876422e-06
    2. '((' → logprob: -12.500004768371582
    3. 'A' → logprob: -14.125004768371582
    4. '(' → logprob: -14.375004768371582
    5. '(
' → logprob: -16.0000057220459
    6. '(C' → logprob: -17.0000057220459
    7. ' (' → logprob: -18.1250057220459
    8. '(B' → logprob: -18.1250057220459
    9. '(I' → logprob: -18.8750057220459
    10. '(E' → logprob: -20.0000057220459

Token 782: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.014210758730769157
    2. ',' → logprob: -4.2642107009887695
    3. ' ,' → logprob: -10.51421070098877
    4. ',
' → logprob: -11.76421070098877
    5. ',b' → logprob: -12.01421070098877
    6. ',C' → logprob: -13.01421070098877
    7. ',p' → logprob: -13.63921070098877
    8. 'B' → logprob: -13.63921070098877
    9. ',D' → logprob: -15.13921070098877
    10. ' ' → logprob: -15.76421070098877

Token 783: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.005682041402906179
    2. 'C' → logprob: -5.755681991577148
    3. ',' → logprob: -6.005681991577148
    4. ' ,' → logprob: -11.630681991577148
    5. ',B' → logprob: -11.755681991577148
    6. ',c' → logprob: -12.005681991577148
    7. ',
' → logprob: -12.005681991577148
    8. ' C' → logprob: -12.755681991577148
    9. ',p' → logprob: -12.880681991577148
    10. '(C' → logprob: -14.880681991577148

Token 784: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -7.994086627149954e-05
    2. 'D' → logprob: -9.875080108642578
    3. ',' → logprob: -10.625080108642578
    4. ',
' → logprob: -12.750080108642578
    5. ',p' → logprob: -14.500080108642578
    6. ',d' → logprob: -14.625080108642578
    7. ' ,' → logprob: -16.625080108642578
    8. ',C' → logprob: -16.875080108642578
    9. 'p' → logprob: -17.250080108642578
    10. '```' → logprob: -17.375080108642578

Token 785: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759554505348206
    2. ')' → logprob: -0.8259554505348206
    3. ')
' → logprob: -11.325955390930176
    4. '               ' → logprob: -13.575955390930176
    5. ')

' → logprob: -13.950955390930176
    6. '):
' → logprob: -14.075955390930176
    7. ');' → logprob: -15.825955390930176
    8. ' )
' → logprob: -16.075956344604492
    9. '                   ' → logprob: -16.200956344604492
    10. ')#' → logprob: -16.325956344604492

Token 786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003510153153911233
    2. '                
' → logprob: -6.628509998321533
    3. '<|end|>' → logprob: -7.253509998321533
    4. '
' → logprob: -7.753509998321533
    5. '```' → logprob: -7.753509998321533
    6. ' if' → logprob: -8.253510475158691
    7. '<|end|>' → logprob: -10.003510475158691
    8. '                   ' → logprob: -10.128510475158691
    9. ',' → logprob: -10.253510475158691
    10. '                ' → logprob: -10.503510475158691

Token 787: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030830010771751404
    2. 'if' → logprob: -3.530829906463623
    3. '               ' → logprob: -6.905829906463623
    4. ' points' → logprob: -9.780830383300781
    5. 'points' → logprob: -12.155830383300781
    6. ' p' → logprob: -12.280830383300781
    7. 'p' → logprob: -13.030830383300781
    8. ' for' → logprob: -13.530830383300781
    9. '                ' → logprob: -13.655830383300781
    10. ' x' → logprob: -13.780830383300781

Token 788: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5760495662689209
    2. ' if' → logprob: -0.8260495662689209
    3. '               ' → logprob: -9.3260498046875
    4. '
' → logprob: -11.4510498046875
    5. 'If' → logprob: -12.7010498046875
    6. 'x' → logprob: -13.3260498046875
    7. '#' → logprob: -13.4510498046875
    8. '                
' → logprob: -14.0760498046875
    9. 'for' → logprob: -14.2010498046875
    10. '           ' → logprob: -14.4510498046875

Token 789: ' point' (ID: 2438)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2600865364074707
    2. 'if' → logprob: -1.7600865364074707
    3. ' p' → logprob: -3.1350865364074707
    4. 'p' → logprob: -4.510086536407471
    5. ' points' → logprob: -6.885086536407471
    6. ')' → logprob: -8.010086059570312
    7. 'points' → logprob: -8.135086059570312
    8. '(p' → logprob: -8.135086059570312
    9. 'x' → logprob: -8.635086059570312
    10. ' =' → logprob: -10.135086059570312

Token 790: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5564138293266296
    2. ' =' → logprob: -1.4314138889312744
    3. '               ' → logprob: -1.9314138889312744
    4. 'if' → logprob: -4.306413650512695
    5. ' p' → logprob: -4.806413650512695
    6. '=' → logprob: -5.431413650512695
    7. '                   ' → logprob: -5.931413650512695
    8. ')' → logprob: -6.056413650512695
    9. '                ' → logprob: -6.681413650512695
    10. '(p' → logprob: -6.681413650512695

Token 791: ' new' (ID: 620)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.47407954931259155
    2. 'p' → logprob: -0.9740795493125916
    3. '   ' → logprob: -14.224079132080078
    4. '(p' → logprob: -14.599079132080078
    5. ' not' → logprob: -14.599079132080078
    6. 'not' → logprob: -15.224079132080078
    7. ' ' → logprob: -15.849079132080078
    8. 'None' → logprob: -16.349079132080078
    9. '```' → logprob: -16.349079132080078
    10. '<p' → logprob: -17.099079132080078

Token 792: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3359904289245605
    2. ' if' → logprob: -1.3359904289245605
    3. '               ' → logprob: -2.5859904289245605
    4. ')' → logprob: -3.2109904289245605
    5. '
' → logprob: -3.3359904289245605
    6. ':
' → logprob: -3.3359904289245605
    7. ' =' → logprob: -3.4609904289245605
    8. ':' → logprob: -3.5859904289245605
    9. '):
' → logprob: -3.5859904289245605
    10. ',' → logprob: -3.7109904289245605

Token 793: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004941154737025499
    2. '                
' → logprob: -6.004940986633301
    3. '```' → logprob: -7.129940986633301
    4. '<|end|>' → logprob: -7.879940986633301
    5. '                   ' → logprob: -8.2549409866333
    6. ' if' → logprob: -8.3799409866333
    7. '                ' → logprob: -8.7549409866333
    8. '
' → logprob: -9.2549409866333
    9. ',' → logprob: -9.5049409866333
    10. '                               ' → logprob: -9.7549409866333

Token 794: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08885014802217484
    2. '               ' → logprob: -2.588850259780884
    3. 'if' (adapté à ' if') → logprob: -5.588850021362305
    4. ' 
' → logprob: -5.838850021362305
    5. '                ' → logprob: -6.963850021362305
    6. ' ' → logprob: -7.338850021362305
    7. '                
' → logprob: -7.588850021362305
    8. '                   ' → logprob: -7.713850021362305
    9. ' p' → logprob: -8.713850021362305
    10. '  
' → logprob: -9.463850021362305

Token 795: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0699399933218956
    2. ' p' → logprob: -2.6949400901794434
    3. '(p' → logprob: -13.819939613342285
    4. '               ' → logprob: -13.944939613342285
    5. '   ' → logprob: -14.569939613342285
    6. '                   ' → logprob: -15.319939613342285
    7. 'not' → logprob: -15.319939613342285
    8. ' not' → logprob: -15.319939613342285
    9. ' ' → logprob: -15.944939613342285
    10. '           ' → logprob: -16.1949405670166

Token 796: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04864992946386337
    2. 'not' → logprob: -3.048650026321411
    3. ')' → logprob: -9.923649787902832
    4. ' is' → logprob: -11.798649787902832
    5. ' in' → logprob: -12.798649787902832
    6. 'in' → logprob: -13.798649787902832
    7. ' ' → logprob: -14.173649787902832
    8. '	not' → logprob: -14.923649787902832
    9. ' )' → logprob: -15.423649787902832
    10. 'and' → logprob: -15.548649787902832

Token 797: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5284568667411804
    2. 'None' → logprob: -1.1534569263458252
    3. ' not' → logprob: -2.403456926345825
    4. ' None' → logprob: -5.403456687927246
    5. 'Not' → logprob: -10.778456687927246
    6. 'none' → logprob: -12.653456687927246
    7. '(None' → logprob: -12.778456687927246
    8. '=None' → logprob: -13.278456687927246
    9. '	not' → logprob: -13.403456687927246
    10. '   ' → logprob: -13.403456687927246

Token 798: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.232224702835083
    2. ':' → logprob: -1.732224702835083
    3. '               ' → logprob: -4.107224464416504
    4. ':
' → logprob: -4.857224464416504
    5. '                   ' → logprob: -5.607224464416504
    6. '           ' → logprob: -6.482224464416504
    7. 'or' → logprob: -7.857224464416504
    8. '                       ' → logprob: -8.357224464416504
    9. '   ' → logprob: -9.232224464416504
    10. '       ' → logprob: -10.232224464416504

Token 799: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10335826873779297
    2. '               ' → logprob: -2.353358268737793
    3. '                    
' → logprob: -6.853358268737793
    4. '                ' → logprob: -6.978358268737793
    5. '                       ' → logprob: -7.853358268737793
    6. '           ' → logprob: -9.228358268737793
    7. '                    ' → logprob: -9.228358268737793
    8. ' continue' → logprob: -9.228358268737793
    9. '                  ' → logprob: -9.228358268737793
    10. '                 ' → logprob: -9.353358268737793

Token 800: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0553266704082489
    2. 'continue' (adapté à ' continue') → logprob: -3.6803267002105713
    3. '                   ' → logprob: -3.8053267002105713
    4. '               ' → logprob: -5.180326461791992
    5. '                       ' → logprob: -7.930326461791992
    6. '       ' → logprob: -8.305326461791992
    7. '   ' → logprob: -10.180326461791992
    8. '	continue' → logprob: -10.430326461791992
    9. '           ' → logprob: -10.805326461791992
    10. '                ' → logprob: -11.680326461791992

Token 801: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0043529788963496685
    2. '                
' → logprob: -5.754353046417236
    3. '
' → logprob: -7.004353046417236
    4. ' 
' → logprob: -9.629352569580078
    5. '                ' → logprob: -9.629352569580078
    6. '  
' → logprob: -10.379352569580078
    7. '                    
' → logprob: -10.629352569580078
    8. '    
' → logprob: -11.254352569580078
    9. '                   ' → logprob: -11.504352569580078
    10. '<|end|>' → logprob: -11.754352569580078

Token 802: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008888294687494636
    2. '                
' → logprob: -7.500888824462891
    3. '```' → logprob: -9.50088882446289
    4. '                   ' → logprob: -9.62588882446289
    5. '                ' → logprob: -9.75088882446289
    6. '           ' → logprob: -10.12588882446289
    7. '                    
' → logprob: -11.00088882446289
    8. '  
' → logprob: -11.25088882446289
    9. ' 
' → logprob: -11.62588882446289
    10. '<|end|>' → logprob: -11.75088882446289

Token 803: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01332305371761322
    2. ' if' → logprob: -4.513322830200195
    3. '                ' → logprob: -7.013322830200195
    4. '                
' → logprob: -7.013322830200195
    5. ' 
' → logprob: -8.263322830200195
    6. 'if' → logprob: -9.513322830200195
    7. '                   ' → logprob: -10.388322830200195
    8. ' ' → logprob: -11.263322830200195
    9. '              ' → logprob: -11.388322830200195
    10. '                 
' → logprob: -11.388322830200195

Token 804: ' Round' (ID: 30479)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07860563695430756
    2. 'if' → logprob: -2.8286056518554688
    3. ' px' → logprob: -4.703605651855469
    4. ' p' → logprob: -5.828605651855469
    5. 'p' → logprob: -6.078605651855469
    6. 'x' → logprob: -7.078605651855469
    7. ' x' → logprob: -7.203605651855469
    8. 'px' → logprob: -8.078605651855469
    9. '               ' → logprob: -9.453605651855469
    10. ' sx' → logprob: -10.453605651855469

Token 805: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002603841247037053
    2. ' p' → logprob: -6.252604007720947
    3. '_p' → logprob: -7.877604007720947
    4. '(p' → logprob: -8.502603530883789
    5. '=' → logprob: -10.252603530883789
    6. '(' → logprob: -10.252603530883789
    7. 'ed' → logprob: -12.127603530883789
    8. ' =' → logprob: -12.252603530883789
    9. ' (' → logprob: -12.377603530883789
    10. '_' → logprob: -13.127603530883789

Token 806: ' avoid' (ID: 8397)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06239280477166176
    2. '(p' → logprob: -3.8123927116394043
    3. ' (' → logprob: -4.312392711639404
    4. '(round' → logprob: -4.812392711639404
    5. '6' → logprob: -5.187392711639404
    6. '8' → logprob: -5.562392711639404
    7. '10' → logprob: -5.937392711639404
    8. ' ' → logprob: -6.687392711639404
    9. '15' → logprob: -7.062392711639404
    10. '(x' → logprob: -7.562392711639404

Token 807: ' floating' (ID: 35887)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4028084874153137
    2. '(' → logprob: -1.777808427810669
    3. ' p' → logprob: -2.402808427810669
    4. 'p' → logprob: -3.527808427810669
    5. '(p' → logprob: -3.527808427810669
    6. ' (
' → logprob: -5.277808666229248
    7. '(round' → logprob: -6.277808666229248
    8. 'x' → logprob: -6.277808666229248
    9. '(
' → logprob: -6.652808666229248
    10. ' ' → logprob: -7.277808666229248

Token 808: ' point' (ID: 2438)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.1424450874328613
    2. ' point' → logprob: -1.6424450874328613
    3. ',' → logprob: -2.0174450874328613
    4. 'point' → logprob: -2.3924450874328613
    5. 'p' → logprob: -2.7674450874328613
    6. '-point' → logprob: -3.1424450874328613
    7. '(p' → logprob: -3.2674450874328613
    8. '(' → logprob: -3.6424450874328613
    9. ')' → logprob: -3.7674450874328613
    10. ' (' → logprob: -4.017445087432861

Token 809: ' error' (ID: 2915)
  Prédit: ' errors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' errors' → logprob: -0.5890718102455139
    2. 'errors' → logprob: -1.7140717506408691
    3. 'error' → logprob: -2.464071750640869
    4. 'p' → logprob: -2.589071750640869
    5. ' error' → logprob: -3.214071750640869
    6. '(p' → logprob: -3.839071750640869
    7. ' p' → logprob: -4.214071750640869
    8. ',' → logprob: -4.964071750640869
    9. ')' → logprob: -5.839071750640869
    10. 'precision' → logprob: -5.839071750640869

Token 810: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17443491518497467
    2. 'p' → logprob: -2.2994349002838135
    3. ' p' → logprob: -3.5494349002838135
    4. ',' → logprob: -3.7994349002838135
    5. '                
' → logprob: -5.924435138702393
    6. ',p' → logprob: -6.549435138702393
    7. ' =' → logprob: -7.049435138702393
    8. '=' → logprob: -7.549435138702393
    9. ',
' → logprob: -7.674435138702393
    10. '
' → logprob: -7.799435138702393

Token 811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007990269223228097
    2. '                
' → logprob: -8.000799179077148
    3. ')' → logprob: -8.750799179077148
    4. ',' → logprob: -9.375799179077148
    5. '```' → logprob: -9.500799179077148
    6. '           ' → logprob: -10.250799179077148
    7. '                   ' → logprob: -10.750799179077148
    8. '               
' → logprob: -11.375799179077148
    9. '              ' → logprob: -11.625799179077148
    10. '                ' → logprob: -11.625799179077148

Token 812: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.19035181403160095
    2. ' p' → logprob: -1.8153518438339233
    3. '               ' → logprob: -4.565351963043213
    4. 'px' → logprob: -10.940351486206055
    5. ' px' → logprob: -10.940351486206055
    6. '                   ' → logprob: -11.065351486206055
    7. 'r' → logprob: -11.315351486206055
    8. '```' → logprob: -11.440351486206055
    9. 'x' → logprob: -11.815351486206055
    10. ',p' → logprob: -12.065351486206055

Token 813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010401944164186716
    2. ' =' → logprob: -6.876039981842041
    3. '=(' → logprob: -12.5010404586792
    4. '=p' → logprob: -13.0010404586792
    5. 'p' → logprob: -14.1260404586792
    6. 'rounded' → logprob: -15.6260404586792
    7. '=

' → logprob: -16.126039505004883
    8. '=
' → logprob: -16.251039505004883
    9. '=}' → logprob: -16.626039505004883
    10. '＝' → logprob: -17.126039505004883

Token 814: ' (' (ID: 350)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.0033560628071427345
    2. ' (' → logprob: -5.753355979919434
    3. '(' → logprob: -8.878355979919434
    4. '(tuple' → logprob: -10.753355979919434
    5. '(x' → logprob: -11.628355979919434
    6. '(r' → logprob: -13.003355979919434
    7. '((' → logprob: -13.628355979919434
    8. 'round' → logprob: -13.753355979919434
    9. '(float' → logprob: -13.753355979919434
    10. '(min' → logprob: -13.878355979919434

Token 815: 'round' (ID: 1964)
  Prédit: 'round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.0002622894535306841
    2. ' round' → logprob: -8.250262260437012
    3. '(round' → logprob: -13.875262260437012
    4. 'float' → logprob: -17.625263214111328
    5. '   ' → logprob: -19.500263214111328
    6. 'Round' → logprob: -20.375263214111328
    7. '.round' → logprob: -21.125263214111328
    8. ' ' → logprob: -22.000263214111328
    9. 'ROUND' → logprob: -22.125263214111328
    10. '
' → logprob: -22.375263214111328

Token 816: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011064798571169376
    2. 'p' → logprob: -4.5110650062561035
    3. ' p' → logprob: -11.636064529418945
    4. '(' → logprob: -12.386064529418945
    5. ')' → logprob: -13.886064529418945
    6. ')p' → logprob: -13.886064529418945
    7. '(
' → logprob: -14.011064529418945
    8. '0' → logprob: -15.136064529418945
    9. '(round' → logprob: -15.261064529418945
    10. '	p' → logprob: -16.136064529418945

Token 817: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012844942102674395
    2. '0' → logprob: -9.250128746032715
    3. '(' → logprob: -10.500128746032715
    4. 'p' → logprob: -12.500128746032715
    5. '
' → logprob: -15.375128746032715
    6. '```' → logprob: -15.375128746032715
    7. ' [' → logprob: -15.625128746032715
    8. 'x' → logprob: -16.0001277923584
    9. '(p' → logprob: -16.7501277923584
    10. ')' → logprob: -17.0001277923584

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '[' → logprob: -17.75
    4. '
' → logprob: -19.625
    5. '   ' → logprob: -19.75
    6. '00' → logprob: -19.75
    7. '000' → logprob: -20.625
    8. '```' → logprob: -20.875
    9. '۰' → logprob: -21.5
    10. '０' → logprob: -22.3125

Token 819: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004354373668320477
    2. ' ,' → logprob: -7.7504353523254395
    3. 'p' → logprob: -13.750435829162598
    4. '6' → logprob: -14.375435829162598
    5. '],' → logprob: -14.875435829162598
    6. ',p' → logprob: -15.000435829162598
    7. '```' → logprob: -15.250435829162598
    8. '10' → logprob: -15.375435829162598
    9. '5' → logprob: -15.500435829162598
    10. '),' → logprob: -15.500435829162598

Token 820: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7129086256027222
    2. '12' → logprob: -1.4629086256027222
    3. '15' → logprob: -1.9629086256027222
    4. '8' → logprob: -2.4629087448120117
    5. '9' → logprob: -2.9629087448120117
    6. '14' → logprob: -7.087908744812012
    7. '7' → logprob: -10.337908744812012
    8. '13' → logprob: -10.712908744812012
    9. ' ' → logprob: -11.212908744812012
    10. '11' → logprob: -11.837908744812012

Token 821: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0014752219431102276
    2. ',' → logprob: -6.8764753341674805
    3. ')' → logprob: -8.25147533416748
    4. '),
' → logprob: -9.00147533416748
    5. '),(' → logprob: -11.00147533416748
    6. ',p' → logprob: -11.12647533416748
    7. ' ),' → logprob: -11.25147533416748
    8. '),

' → logprob: -12.12647533416748
    9. '   ' → logprob: -12.75147533416748
    10. ',),' → logprob: -13.37647533416748

Token 822: 'round' (ID: 1964)
  Prédit: 'round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.0001584850688232109
    2. ' round' → logprob: -8.750158309936523
    3. '(round' → logprob: -17.625158309936523
    4. 'rounded' → logprob: -19.625158309936523
    5. '.round' → logprob: -21.500158309936523
    6. '   ' → logprob: -21.625158309936523
    7. '           ' → logprob: -22.750158309936523
    8. 'Round' → logprob: -23.000158309936523
    9. '_round' → logprob: -23.000158309936523
    10. '       ' → logprob: -23.125158309936523

Token 823: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.125021934509277
    3. ' (' → logprob: -12.000021934509277
    4. ' p' → logprob: -14.750021934509277
    5. 'p' → logprob: -15.500021934509277
    6. '(
' → logprob: -15.625021934509277
    7. ')' → logprob: -17.12502098083496
    8. ' ' → logprob: -18.62502098083496
    9. '   ' → logprob: -19.00002098083496
    10. ')p' → logprob: -19.00002098083496

Token 824: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03884425759315491
    2. 'p' → logprob: -4.288844108581543
    3. '(p' → logprob: -4.288844108581543
    4. '(' → logprob: -4.913844108581543
    5. '1' → logprob: -5.788844108581543
    6. ' p' → logprob: -8.788844108581543
    7. '0' → logprob: -9.538844108581543
    8. ' (' → logprob: -11.788844108581543
    9. '   ' → logprob: -12.288844108581543
    10. '[p' → logprob: -12.913844108581543

Token 825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01160463597625494
    2. '0' → logprob: -4.5116047859191895
    3. '9' → logprob: -7.8866047859191895
    4. '[' → logprob: -8.761604309082031
    5. ' ' → logprob: -11.511604309082031
    6. '-' → logprob: -12.511604309082031
    7. 'p' → logprob: -12.511604309082031
    8. '8' → logprob: -12.761604309082031
    9. '(' → logprob: -13.261604309082031
    10. '   ' → logprob: -14.011604309082031

Token 826: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.08046910166740417
    2. ',' → logprob: -2.5804691314697266
    3. '9' → logprob: -6.580469131469727
    4. ']' → logprob: -9.455469131469727
    5. '],
' → logprob: -10.205469131469727
    6. '),' → logprob: -10.205469131469727
    7. '[' → logprob: -11.205469131469727
    8. ' ],' → logprob: -12.080469131469727
    9. '],'' → logprob: -12.955469131469727
    10. '],[' → logprob: -13.080469131469727

Token 827: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'p' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.0
    6. '09' → logprob: -20.375
    7. '...' → logprob: -20.875
    8. '۹' → logprob: -21.125
    9. ')' → logprob: -21.25
    10. '<|end|>' → logprob: -21.8125

Token 828: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007531386334449053
    2. ')' → logprob: -5.75753116607666
    3. '),' → logprob: -5.88253116607666
    4. '))
' → logprob: -6.50753116607666
    5. ' ))' → logprob: -10.25753116607666
    6. ')
' → logprob: -11.75753116607666
    7. '),
' → logprob: -11.88253116607666
    8. ')p' → logprob: -12.88253116607666
    9. '))

' → logprob: -13.13253116607666
    10. ')))' → logprob: -13.25753116607666

Token 829: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015415230300277472
    2. ' if' → logprob: -6.626541614532471
    3. 'if' → logprob: -9.751541137695312
    4. '<|end|>' → logprob: -9.876541137695312
    5. '```' → logprob: -10.501541137695312
    6. '                
' → logprob: -10.876541137695312
    7. '           ' → logprob: -11.126541137695312
    8. '       ' → logprob: -11.626541137695312
    9. '   ' → logprob: -12.126541137695312
    10. ',' → logprob: -12.376541137695312

Token 830: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23270903527736664
    2. 'if' (adapté à ' if') → logprob: -1.7327090501785278
    3. '               ' → logprob: -3.4827089309692383
    4. '           ' → logprob: -9.732708930969238
    5. '       ' → logprob: -11.357708930969238
    6. '```' → logprob: -11.982708930969238
    7. '   ' → logprob: -12.357708930969238
    8. '                   ' → logprob: -13.982708930969238
    9. '                
' → logprob: -14.107708930969238
    10. '
' → logprob: -14.232708930969238

Token 831: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.11283061653375626
    2. 'p' → logprob: -2.237830638885498
    3. ' not' → logprob: -13.36283016204834
    4. '(p' → logprob: -13.48783016204834
    5. ' ' → logprob: -14.11283016204834
    6. 'not' → logprob: -14.23783016204834
    7. '   ' → logprob: -14.48783016204834
    8. '                   ' → logprob: -14.55033016204834
    9. '               ' → logprob: -14.67533016204834
    10. '           ' → logprob: -15.05033016204834

Token 832: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02055087871849537
    2. 'not' → logprob: -3.8955509662628174
    3. ' in' → logprob: -12.520550727844238
    4. ')' → logprob: -12.895550727844238
    5. 'in' → logprob: -13.520550727844238
    6. '	not' → logprob: -14.770550727844238
    7. ' ' → logprob: -15.395550727844238
    8. '<|end|>' → logprob: -15.520550727844238
    9. ' no' → logprob: -15.770550727844238
    10. ']' → logprob: -16.645551681518555

Token 833: ' in' (ID: 306)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.7071278691291809
    2. ' in' → logprob: -0.8321278691291809
    3. 'points' → logprob: -2.707127809524536
    4. 'in' → logprob: -5.332128047943115
    5. '(points' → logprob: -8.707127571105957
    6. '_points' → logprob: -9.457127571105957
    7. '	points' → logprob: -12.582127571105957
    8. '.points' → logprob: -12.957127571105957
    9. ')' → logprob: -13.457127571105957
    10. ' not' → logprob: -13.582127571105957

Token 834: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.01416398212313652
    2. ' points' → logprob: -4.264163970947266
    3. '(points' → logprob: -15.639163970947266
    4. 'point' → logprob: -16.264163970947266
    5. '	points' → logprob: -16.264163970947266
    6. '
' → logprob: -16.639163970947266
    7. '.points' → logprob: -18.264163970947266
    8. '_points' → logprob: -18.264163970947266
    9. '   ' → logprob: -18.514163970947266
    10. '```' → logprob: -18.889163970947266

Token 835: '_map' (ID: 11824)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06645046174526215
    2. '_map' → logprob: -2.816450357437134
    3. ':
' → logprob: -5.441450595855713
    4. '):' → logprob: -9.066450119018555
    5. '   ' → logprob: -11.566450119018555
    6. '):
' → logprob: -13.066450119018555
    7. '_:' → logprob: -13.191450119018555
    8. ':_' → logprob: -13.441450119018555
    9. '_maps' → logprob: -13.691450119018555
    10. 'Map' → logprob: -13.816450119018555

Token 836: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011123628355562687
    2. ':
' → logprob: -4.5111236572265625
    3. '):' → logprob: -10.636123657226562
    4. '):
' → logprob: -11.011123657226562
    5. ' :' → logprob: -11.511123657226562
    6. ',' → logprob: -12.511123657226562
    7. ':

' → logprob: -12.511123657226562
    8. '=' → logprob: -12.636123657226562
    9. '               ' → logprob: -12.636123657226562
    10. '<|end|>' → logprob: -13.261123657226562

Token 837: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16085906326770782
    2. ' points' → logprob: -2.5358591079711914
    3. '               ' → logprob: -2.7858591079711914
    4. '(points' → logprob: -6.410859107971191
    5. '                       ' → logprob: -7.035859107971191
    6. '                ' → logprob: -7.035859107971191
    7. '```' → logprob: -7.035859107971191
    8. '<|end|>' → logprob: -7.535859107971191
    9. '                    
' → logprob: -7.660859107971191
    10. ')' → logprob: -7.910859107971191

Token 838: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.4746623635292053
    2. ' points' → logprob: -0.9746623635292053
    3. '                   ' → logprob: -7.7246623039245605
    4. '               ' → logprob: -9.224662780761719
    5. '```' → logprob: -10.849662780761719
    6. '                       ' → logprob: -11.099662780761719
    7. '	points' → logprob: -13.099662780761719
    8. '
' → logprob: -13.724662780761719
    9. '           ' → logprob: -13.724662780761719
    10. '       ' → logprob: -13.849662780761719

Token 839: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.685467764735222e-05
    2. '.append' → logprob: -9.500086784362793
    3. '_maps' → logprob: -12.125086784362793
    4. '_append' → logprob: -13.625086784362793
    5. 'append' → logprob: -14.000086784362793
    6. 'Map' → logprob: -14.375086784362793
    7. '+=' → logprob: -14.625086784362793
    8. '.' → logprob: -14.875086784362793
    9. '._' → logprob: -14.875086784362793
    10. '_MAP' → logprob: -15.000086784362793

Token 840: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -4.9424725148128346e-05
    2. 'p' → logprob: -10.000049591064453
    3. '[' → logprob: -12.750049591064453
    4. ' p' → logprob: -14.750049591064453
    5. '=' → logprob: -15.625049591064453
    6. '=p' → logprob: -16.125049591064453
    7. '
' → logprob: -16.375049591064453
    8. ' [' → logprob: -16.375049591064453
    9. '[x' → logprob: -16.750049591064453
    10. '(p' → logprob: -17.000049591064453

Token 841: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058550041168928146
    2. ' =' → logprob: -3.3085501194000244
    3. ')' → logprob: -4.683549880981445
    4. ']' → logprob: -5.308549880981445
    5. ']=' → logprob: -5.683549880981445
    6. ')=' → logprob: -5.933549880981445
    7. '   ' → logprob: -10.308549880981445
    8. '=
' → logprob: -12.058549880981445
    9. ':' → logprob: -12.933549880981445
    10. ' )' → logprob: -13.308549880981445

Token 842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753616079688072
    2. ' =' → logprob: -3.5297536849975586
    3. '=
' → logprob: -13.779753684997559
    4. '   ' → logprob: -14.029753684997559
    5. '=p' → logprob: -15.279753684997559
    6. ']=' → logprob: -15.279753684997559
    7. '=len' → logprob: -15.404753684997559
    8. ')' → logprob: -15.529753684997559
    9. ']' → logprob: -16.029752731323242
    10. ')=' → logprob: -16.029752731323242

Token 843: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029750484973192215
    2. ' len' → logprob: -3.5297505855560303
    3. '(len' → logprob: -17.90475082397461
    4. '	len' → logprob: -18.90475082397461
    5. '[len' → logprob: -19.15475082397461
    6. '=len' → logprob: -21.27975082397461
    7. '                   ' → logprob: -21.65475082397461
    8. ',len' → logprob: -21.90475082397461
    9. 'length' → logprob: -23.15475082397461
    10. '   ' → logprob: -23.15475082397461

Token 844: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.004083385691046715
    2. 'points' → logprob: -5.504083156585693
    3. ' points' → logprob: -12.254083633422852
    4. '	points' → logprob: -15.879083633422852
    5. '(
' → logprob: -17.75408363342285
    6. '(' → logprob: -17.75408363342285
    7. '(p' → logprob: -19.12908363342285
    8. '(point' → logprob: -20.50408363342285
    9. '_points' → logprob: -20.87908363342285
    10. 'Points' → logprob: -21.12908363342285

Token 845: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062346991151571274
    2. ')
' → logprob: -2.812346935272217
    3. 'points' → logprob: -8.437347412109375
    4. '(points' → logprob: -9.312347412109375
    5. ' points' → logprob: -10.437347412109375
    6. ')p' → logprob: -10.437347412109375
    7. '   ' → logprob: -12.562347412109375
    8. '<|end|>' → logprob: -12.812347412109375
    9. ' )' → logprob: -13.562347412109375
    10. '	points' → logprob: -13.687347412109375

Token 846: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02375212498009205
    2. 'points' → logprob: -4.023752212524414
    3. ' points' → logprob: -5.898752212524414
    4. '               ' → logprob: -6.023752212524414
    5. '(points' → logprob: -8.773752212524414
    6. '           ' → logprob: -9.148752212524414
    7. '	points' → logprob: -9.773752212524414
    8. '   ' → logprob: -10.148752212524414
    9. '                    
' → logprob: -11.023752212524414
    10. '```' → logprob: -11.148752212524414

Token 847: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -1.5048530030981055e-06
    2. ' points' → logprob: -13.500001907348633
    3. '	points' → logprob: -21.875001907348633
    4. '(points' → logprob: -22.250001907348633
    5. '```' → logprob: -23.000001907348633
    6. '   ' → logprob: -23.250001907348633
    7. '.points' → logprob: -23.625001907348633
    8. 'oints' → logprob: -24.375001907348633
    9. '
' → logprob: -24.500001907348633
    10. 'point' → logprob: -25.625001907348633

Token 848: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006767468526959419
    2. '.' → logprob: -5.006767272949219
    3. '.extend' → logprob: -10.506767272949219
    4. '.app' → logprob: -11.381767272949219
    5. '.ap' → logprob: -12.756767272949219
    6. 'append' → logprob: -13.256767272949219
    7. '.add' → logprob: -13.381767272949219
    8. '.Append' → logprob: -13.506767272949219
    9. ').' → logprob: -13.631767272949219
    10. '<|end|>' → logprob: -13.881767272949219

Token 849: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.088346359931165e-07
    2. 'p' → logprob: -14.250000953674316
    3. '(' → logprob: -15.875000953674316
    4. '(
' → logprob: -19.375
    5. '((' → logprob: -21.375
    6. ' (' → logprob: -21.625
    7. ' p' → logprob: -22.25
    8. '<p' → logprob: -22.875
    9. '	p' → logprob: -24.25
    10. '[p' → logprob: -24.375

Token 850: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ')
' → logprob: -9.375086784362793
    3. ')p' → logprob: -14.125086784362793
    4. '               ' → logprob: -14.625086784362793
    5. ' )' → logprob: -14.625086784362793
    6. ')return' → logprob: -16.50008773803711
    7. '<|end|>' → logprob: -16.50008773803711
    8. ')#' → logprob: -17.37508773803711
    9. '),' → logprob: -17.37508773803711
    10. ')
' → logprob: -17.50008773803711

Token 851: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028983017429709435
    2. '<|end|>' → logprob: -4.528983116149902
    3. '
' → logprob: -5.528983116149902
    4. '                
' → logprob: -6.028983116149902
    5. ' edges' → logprob: -6.403983116149902
    6. ' for' → logprob: -6.403983116149902
    7. '#' → logprob: -6.778983116149902
    8. 'for' → logprob: -6.778983116149902
    9. 'edges' → logprob: -7.153983116149902
    10. '<|end|>' → logprob: -7.653983116149902

Token 852: ' intersections' (ID: 143513)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39399388432502747
    2. ' for' → logprob: -2.143993854522705
    3. 'for' → logprob: -2.268993854522705
    4. 'edges' → logprob: -3.643993854522705
    5. '
' → logprob: -4.018993854522705
    6. ' edges' → logprob: -4.143993854522705
    7. '                
' → logprob: -4.768993854522705
    8. '           ' → logprob: -5.268993854522705
    9. 'points' → logprob: -5.393993854522705
    10. '   ' → logprob: -5.518993854522705

Token 853: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.539594829082489
    2. '[(' → logprob: -0.914594829082489
    3. '[p' → logprob: -4.164594650268555
    4. 'p' → logprob: -8.039594650268555
    5. '[i' → logprob: -8.539594650268555
    6. '(p' → logprob: -9.039594650268555
    7. '[' → logprob: -9.164594650268555
    8. '.' → logprob: -10.914594650268555
    9. 'set' → logprob: -11.164594650268555
    10. '.p' → logprob: -11.914594650268555

Token 854: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07285047322511673
    2. '(i' → logprob: -2.697850465774536
    3. 'p' → logprob: -6.197850704193115
    4. 'lines' → logprob: -7.822850704193115
    5. '(p' → logprob: -8.447850227355957
    6. 'points' → logprob: -9.822850227355957
    7. ' i' → logprob: -9.822850227355957
    8. 'j' → logprob: -10.072850227355957
    9. 'A' → logprob: -10.447850227355957
    10. ' (' → logprob: -10.947850227355957

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10072611272335052
    2. ',set' → logprob: -2.3507261276245117
    3. ',j' → logprob: -8.225726127624512
    4. ',[' → logprob: -9.225726127624512
    5. ',p' → logprob: -9.600726127624512
    6. ',{' → logprob: -10.475726127624512
    7. ' ,' → logprob: -10.850726127624512
    8. ',i' → logprob: -11.100726127624512
    9. ',list' → logprob: -11.725726127624512
    10. 'set' → logprob: -12.475726127624512

Token 856: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20150378346443176
    2. 'set' → logprob: -1.7015037536621094
    3. ' []).' → logprob: -9.70150375366211
    4. '[])' → logprob: -11.20150375366211
    5. '[]
' → logprob: -11.95150375366211
    6. ').' → logprob: -11.95150375366211
    7. ' set' → logprob: -13.70150375366211
    8. 'list' → logprob: -13.82650375366211
    9. 'append' → logprob: -15.95150375366211
    10. '{}' → logprob: -16.32650375366211

Token 857: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.22630178928375244
    2. '.append' → logprob: -1.6013017892837524
    3. 'append' → logprob: -7.476301670074463
    4. ',' → logprob: -9.476302146911621
    5. ',p' → logprob: -9.726302146911621
    6. ' []).' → logprob: -9.851302146911621
    7. '.' → logprob: -10.226302146911621
    8. '].' → logprob: -10.226302146911621
    9. ')' → logprob: -11.226302146911621
    10. ' ).' → logprob: -11.351302146911621

Token 858: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. ' append' → logprob: -14.250001907348633
    3. '.append' → logprob: -14.375001907348633
    4. 'app' → logprob: -15.125001907348633
    5. 'appen' → logprob: -16.125001907348633
    6. '_append' → logprob: -17.750001907348633
    7. '	append' → logprob: -18.625001907348633
    8. 'add' → logprob: -19.500001907348633
    9. 'Append' → logprob: -20.250001907348633
    10. 'insert' → logprob: -20.250001907348633

Token 859: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12513750791549683
    2. '(points' → logprob: -2.3751375675201416
    3. 'p' → logprob: -4.2501373291015625
    4. 'points' → logprob: -5.1251373291015625
    5. '((' → logprob: -5.5001373291015625
    6. '(' → logprob: -8.125137329101562
    7. '(i' → logprob: -11.875137329101562
    8. '(inter' → logprob: -12.000137329101562
    9. ' points' → logprob: -12.250137329101562
    10. ' p' → logprob: -12.375137329101562

Token 860: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002016331272898242
    2. ')
' → logprob: -9.000201225280762
    3. '               ' → logprob: -9.875201225280762
    4. ' )' → logprob: -11.125201225280762
    5. '       ' → logprob: -12.750201225280762
    6. '           ' → logprob: -12.750201225280762
    7. '<|end|>' → logprob: -13.250201225280762
    8. '   ' → logprob: -13.500201225280762
    9. '())' → logprob: -14.375201225280762
    10. '                   ' → logprob: -14.625201225280762

Token 861: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -2.6060808522743173e-05
    2. ' intersections' → logprob: -10.625025749206543
    3. '               ' → logprob: -13.875025749206543
    4. 'j' → logprob: -15.125025749206543
    5. '(inter' → logprob: -15.875025749206543
    6. '
' → logprob: -16.12502670288086
    7. 'intersection' → logprob: -16.25002670288086
    8. '.inter' → logprob: -17.25002670288086
    9. '                   ' → logprob: -17.37502670288086
    10. '                
' → logprob: -17.50002670288086

Token 863: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -12.25001049041748
    3. '[j' → logprob: -13.37501049041748
    4. '.set' → logprob: -13.50001049041748
    5. 'set' → logprob: -13.50001049041748
    6. '   ' → logprob: -14.75001049041748
    7. '[' → logprob: -14.87501049041748
    8. '.get' → logprob: -14.87501049041748
    9. '[i' → logprob: -16.000011444091797
    10. ' .' → logprob: -16.375011444091797

Token 864: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.20147940516471863
    2. 'j' → logprob: -1.701479434967041
    3. ' j' → logprob: -10.701478958129883
    4. '(' → logprob: -11.201478958129883
    5. '(i' → logprob: -11.326478958129883
    6. '   ' → logprob: -12.076478958129883
    7. ' (' → logprob: -12.076478958129883
    8. '	j' → logprob: -12.576478958129883
    9. '[j' → logprob: -13.701478958129883
    10. '(
' → logprob: -14.326478958129883

Token 865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004791704413946718
    2. ',[' → logprob: -7.875479221343994
    3. ',j' → logprob: -10.500478744506836
    4. ' ,' → logprob: -10.875478744506836
    5. '[],' → logprob: -11.375478744506836
    6. '   ' → logprob: -11.750478744506836
    7. '           ' → logprob: -12.750478744506836
    8. '][]' → logprob: -12.875478744506836
    9. ',)' → logprob: -12.875478744506836
    10. '       ' → logprob: -13.000478744506836

Token 866: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03816473111510277
    2. '[])' → logprob: -3.2881646156311035
    3. '[j' → logprob: -9.413165092468262
    4. '[' → logprob: -11.413165092468262
    5. '[]):' → logprob: -11.413165092468262
    6. '[]}' → logprob: -11.913165092468262
    7. 'j' → logprob: -12.163165092468262
    8. '[]>' → logprob: -13.163165092468262
    9. '[].' → logprob: -13.538165092468262
    10. '[])
' → logprob: -14.288165092468262

Token 867: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5026980042457581
    2. '().' → logprob: -1.6276979446411133
    3. '[]' → logprob: -1.8776979446411133
    4. '.append' → logprob: -3.3776979446411133
    5. '[].' → logprob: -5.627697944641113
    6. '].' → logprob: -6.502697944641113
    7. ')' → logprob: -6.627697944641113
    8. '([]' → logprob: -6.627697944641113
    9. '[i' → logprob: -6.877697944641113
    10. '.' → logprob: -6.877697944641113

Token 868: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.500000953674316
    3. '.append' → logprob: -15.250000953674316
    4. 'app' → logprob: -16.75
    5. 'add' → logprob: -17.5
    6. 'appen' → logprob: -17.75
    7. '_append' → logprob: -21.5
    8. '	append' → logprob: -21.75
    9. 'insert' → logprob: -21.875
    10. 'appear' → logprob: -22.625

Token 869: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06399063020944595
    2. 'p' → logprob: -3.063990592956543
    3. '(i' → logprob: -4.188990592956543
    4. 'i' → logprob: -9.938990592956543
    5. '(j' → logprob: -10.063990592956543
    6. '(C' → logprob: -11.563990592956543
    7. ' p' → logprob: -11.813990592956543
    8. '(' → logprob: -12.563990592956543
    9. ' (' → logprob: -12.688990592956543
    10. '(B' → logprob: -13.438990592956543

Token 870: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002572865632828325
    2. '<|end|>' → logprob: -8.87525749206543
    3. ')
' → logprob: -9.75025749206543
    4. '())' → logprob: -10.62525749206543
    5. '               ' → logprob: -11.37525749206543
    6. '       ' → logprob: -12.50025749206543
    7. ' )' → logprob: -12.50025749206543
    8. '           ' → logprob: -12.62525749206543
    9. '<|end|>' → logprob: -13.12525749206543
    10. '   ' → logprob: -13.25025749206543

Token 871: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013278567930683494
    2. '
' → logprob: -7.876327991485596
    3. ' for' → logprob: -8.251327514648438
    4. 'for' → logprob: -8.376327514648438
    5. '```' → logprob: -8.376327514648438
    6. '       ' → logprob: -9.626327514648438
    7. 'def' → logprob: -10.001327514648438
    8. '	for' → logprob: -10.501327514648438
    9. '    
' → logprob: -10.501327514648438
    10. '           ' → logprob: -10.751327514648438

Token 872: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5726282000541687
    2. ' for' → logprob: -0.9476282000541687
    3. '   ' → logprob: -3.5726282596588135
    4. '
' → logprob: -3.9476282596588135
    5. '	for' → logprob: -7.822628021240234
    6. '    
' → logprob: -7.947628021240234
    7. 'def' → logprob: -10.197628021240234
    8. ' 
' → logprob: -10.447628021240234
    9. '```' → logprob: -10.697628021240234
    10. '#' (adapté à ' #') → logprob: -10.947628021240234

Token 873: ' now' (ID: 1954)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004876027349382639
    2. '#' → logprob: -5.379876136779785
    3. '   ' → logprob: -8.504876136779785
    4. ' for' → logprob: -9.879876136779785
    5. '
' → logprob: -13.504876136779785
    6. ' #' → logprob: -15.254876136779785
    7. '    
' → logprob: -16.00487518310547
    8. 'return' → logprob: -16.00487518310547
    9. 'def' → logprob: -16.62987518310547
    10. '	for' → logprob: -16.62987518310547

Token 874: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17125876247882843
    2. 'for' → logprob: -1.921258807182312
    3. '   ' → logprob: -4.546258926391602
    4. '#' → logprob: -8.171258926391602
    5. ' #' → logprob: -9.546258926391602
    6. '
' → logprob: -12.171258926391602
    7. ' graph' → logprob: -13.296258926391602
    8. 'import' → logprob: -13.796258926391602
    9. 'def' → logprob: -13.921258926391602
    10. ' edges' → logprob: -14.171258926391602

Token 875: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2572181820869446
    2. ' i' → logprob: -1.5072181224822998
    3. ' line' → logprob: -6.382218360900879
    4. ' idx' → logprob: -6.382218360900879
    5. 'idx' → logprob: -7.382218360900879
    6. 'line' → logprob: -7.757218360900879
    7. 'each' → logprob: -8.132218360900879
    8. 'k' → logprob: -8.382218360900879
    9. ' each' → logprob: -8.632218360900879
    10. ' k' → logprob: -9.632218360900879

Token 876: ' line' (ID: 2543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2137184888124466
    2. ' i' → logprob: -2.5887184143066406
    3. 'line' → logprob: -2.8387184143066406
    4. ' line' → logprob: -2.8387184143066406
    5. ' key' → logprob: -9.21371841430664
    6. 'key' → logprob: -9.21371841430664
    7. 'k' → logprob: -9.58871841430664
    8. 'l' → logprob: -11.33871841430664
    9. 'index' → logprob: -12.46371841430664
    10. '   ' → logprob: -12.58871841430664

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11735063791275024
    2. '   ' → logprob: -2.8673505783081055
    3. ' for' → logprob: -4.1173505783081055
    4. ':' → logprob: -4.1173505783081055
    5. ' i' → logprob: -4.4923505783081055
    6. 'for' → logprob: -5.9923505783081055
    7. 'i' → logprob: -6.2423505783081055
    8. ',i' → logprob: -6.2423505783081055
    9. ' ,' → logprob: -6.6173505783081055
    10. ' line' → logprob: -7.3673505783081055

Token 878: ' create' (ID: 2501)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.641249418258667
    2. 'for' → logprob: -0.766249418258667
    3. '   ' → logprob: -4.766249656677246
    4. '#' → logprob: -10.391249656677246
    5. ' lines' → logprob: -10.391249656677246
    6. '       ' → logprob: -11.766249656677246
    7. 'points' → logprob: -12.641249656677246
    8. ' ' → logprob: -12.766249656677246
    9. ' points' → logprob: -12.766249656677246
    10. 'edges' → logprob: -12.891249656677246

Token 879: ' sorted' (ID: 20099)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7248595356941223
    2. ' segments' → logprob: -1.3498594760894775
    3. 'edges' → logprob: -3.0998594760894775
    4. 'a' → logprob: -3.2248594760894775
    5. 'for' → logprob: -3.2248594760894775
    6. ' edges' → logprob: -3.5998594760894775
    7. 'all' → logprob: -4.599859714508057
    8. ' a' → logprob: -4.599859714508057
    9. 'sorted' → logprob: -4.599859714508057
    10. ' for' → logprob: -4.724859714508057

Token 880: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9324069023132324
    2. ' points' → logprob: -1.6824069023132324
    3. 'list' → logprob: -2.3074069023132324
    4. ' list' → logprob: -2.8074069023132324
    5. ' lists' → logprob: -2.8074069023132324
    6. ' pts' → logprob: -2.8074069023132324
    7. 'pts' → logprob: -3.0574069023132324
    8. 'segments' → logprob: -3.4324069023132324
    9. 'lists' → logprob: -4.182406902313232
    10. '   ' → logprob: -4.307406902313232

Token 881: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08989818394184113
    2. ' for' → logprob: -2.714898109436035
    3. 'for' → logprob: -3.964898109436035
    4. '<|end|>' → logprob: -8.339898109436035
    5. ',' → logprob: -9.339898109436035
    6. 'def' → logprob: -9.589898109436035
    7. 'from' → logprob: -9.714898109436035
    8. '	for' → logprob: -9.839898109436035
    9. '<|end|>' → logprob: -10.089898109436035
    10. ' lines' → logprob: -10.339898109436035

Token 882: ' endpoints' (ID: 76454)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7292121052742004
    2. 'inter' → logprob: -0.9792121052742004
    3. 'line' → logprob: -2.3542120456695557
    4. ' endpoints' → logprob: -4.104212284088135
    5. 'A' → logprob: -4.979212284088135
    6. '(' → logprob: -5.354212284088135
    7. 'points' → logprob: -5.479212284088135
    8. 'the' → logprob: -5.854212284088135
    9. ' line' → logprob: -5.854212284088135
    10. '(line' → logprob: -6.854212284088135

Token 883: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07671816647052765
    2. ' for' → logprob: -2.8267180919647217
    3. 'for' → logprob: -4.326718330383301
    4. '
' → logprob: -7.826718330383301
    5. ',' → logprob: -8.0767183303833
    6. ' lines' → logprob: -9.2017183303833
    7. '<|end|>' → logprob: -9.3267183303833
    8. 'def' → logprob: -9.4517183303833
    9. ' and' → logprob: -9.4517183303833
    10. 'from' → logprob: -9.5767183303833

Token 884: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.07052827626466751
    2. ' intersections' → logprob: -2.695528268814087
    3. 'intersection' → logprob: -8.070528030395508
    4. '   ' → logprob: -8.570528030395508
    5. 'sorted' → logprob: -10.570528030395508
    6. ' intersection' → logprob: -11.195528030395508
    7. '#' → logprob: -11.820528030395508
    8. ' ' → logprob: -12.195528030395508
    9. '       ' → logprob: -12.195528030395508
    10. '(inter' → logprob: -12.320528030395508

Token 885: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15670490264892578
    2. ' for' → logprob: -2.281704902648926
    3. 'for' → logprob: -3.156704902648926
    4. 'import' → logprob: -9.156704902648926
    5. ',' → logprob: -9.656704902648926
    6. '
' → logprob: -10.281704902648926
    7. '	for' → logprob: -10.406704902648926
    8. ' ' → logprob: -10.531704902648926
    9. 'def' → logprob: -10.781704902648926
    10. ' lines' → logprob: -11.031704902648926

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046098802238702774
    2. ' for' → logprob: -3.7960987091064453
    3. '
' → logprob: -5.046098709106445
    4. '	for' → logprob: -5.296098709106445
    5. '    
' → logprob: -5.421098709106445
    6. 'for' → logprob: -5.546098709106445
    7. ':' → logprob: -7.671098709106445
    8. ',' → logprob: -7.671098709106445
    9. '<|end|>' → logprob: -8.046098709106445
    10. '  
' → logprob: -8.171098709106445

Token 887: ' graph' (ID: 7465)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46446552872657776
    2. 'for' → logprob: -1.4644654989242554
    3. '   ' → logprob: -1.9644654989242554
    4. '
' → logprob: -9.964465141296387
    5. ' ' → logprob: -10.589465141296387
    6. 'result' → logprob: -11.714465141296387
    7. '	for' → logprob: -12.339465141296387
    8. ' result' → logprob: -12.339465141296387
    9. ' lines' → logprob: -13.214465141296387
    10. 'def' → logprob: -13.339465141296387

Token 888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133535385131836
    2. ' =' → logprob: -1.3133535385131836
    3. '={}' → logprob: -9.688353538513184
    4. '={}
' → logprob: -12.188353538513184
    5. '_points' → logprob: -12.438353538513184
    6. '_edges' → logprob: -12.688353538513184
    7. '={' → logprob: -12.938353538513184
    8. '=[]' → logprob: -13.188353538513184
    9. '[' → logprob: -13.188353538513184
    10. ',' → logprob: -13.438353538513184

Token 889: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.243106871843338
    2. '[' → logprob: -2.2431068420410156
    3. '{' → logprob: -2.7431068420410156
    4. 'dict' → logprob: -3.4931068420410156
    5. '[]' → logprob: -4.493106842041016
    6. 'default' → logprob: -5.618106842041016
    7. '{}
' → logprob: -10.493106842041016
    8. ' [[]' → logprob: -10.993106842041016
    9. 'collections' → logprob: -11.368106842041016
    10. ' dict' → logprob: -11.743106842041016

Token 890: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.33758556842803955
    2. '()' → logprob: -1.4625855684280396
    3. '   ' → logprob: -2.96258544921875
    4. '
' → logprob: -6.83758544921875
    5. 'def' → logprob: -7.46258544921875
    6. '()\' → logprob: -7.46258544921875
    7. '(
' → logprob: -8.71258544921875
    8. ',' → logprob: -9.08758544921875
    9. 'for' → logprob: -9.33758544921875
    10. ' =' → logprob: -9.33758544921875

Token 891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012418980477377772
    2. ' for' → logprob: -7.001241683959961
    3. 'for' → logprob: -8.376241683959961
    4. '	for' → logprob: -9.501241683959961
    5. '    
' → logprob: -11.376241683959961
    6. '
' → logprob: -11.876241683959961
    7. 'def' → logprob: -12.876241683959961
    8. ',' → logprob: -14.001241683959961
    9. ' ' → logprob: -14.251241683959961
    10. '  
' → logprob: -14.501241683959961

Token 892: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3306921124458313
    2. ' for' → logprob: -1.5806920528411865
    3. '   ' → logprob: -2.5806920528411865
    4. '	for' → logprob: -11.205692291259766
    5. ' ' → logprob: -13.205692291259766
    6. '
' → logprob: -13.330692291259766
    7. '```' → logprob: -13.580692291259766
    8. '    
' → logprob: -14.955692291259766
    9. 'def' → logprob: -15.080692291259766
    10. '  ' → logprob: -15.705692291259766

Token 893: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03809691593050957
    2. ' i' → logprob: -3.2880969047546387
    3. 'idx' → logprob: -10.538097381591797
    4. 'line' → logprob: -11.163097381591797
    5. ' line' → logprob: -11.663097381591797
    6. ' idx' → logprob: -12.288097381591797
    7. '	i' → logprob: -15.038097381591797
    8. '_i' → logprob: -15.163097381591797
    9. 'l' → logprob: -15.288097381591797
    10. 'index' → logprob: -15.538097381591797

Token 894: ',line' (ID: 171132)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9064871072769165
    2. ',line' → logprob: -0.9064871072769165
    3. ',' → logprob: -1.9064871072769165
    4. 'in' → logprob: -3.156486988067627
    5. ' ,' → logprob: -7.156486988067627
    6. 'line' → logprob: -9.531487464904785
    7. ',in' → logprob: -10.656487464904785
    8. '#line' → logprob: -11.656487464904785
    9. ' ' → logprob: -11.781487464904785
    10. '[line' → logprob: -11.781487464904785

Token 895: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021859778091311455
    2. 'in' → logprob: -4.021859645843506
    3. '   ' → logprob: -6.146859645843506
    4. ',' → logprob: -7.146859645843506
    5. '[' → logprob: -7.771859645843506
    6. ' =' → logprob: -9.521860122680664
    7. '       ' → logprob: -9.521860122680664
    8. '=' → logprob: -9.896860122680664
    9. ')' → logprob: -10.021860122680664
    10. ':' → logprob: -10.271860122680664

Token 896: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002989589935168624
    2. ' range' → logprob: -5.877989768981934
    3. 'lines' → logprob: -8.627989768981934
    4. 'enumer' → logprob: -12.877989768981934
    5. ' lines' → logprob: -13.502989768981934
    6. '(range' → logprob: -13.877989768981934
    7. '[(' → logprob: -15.127989768981934
    8. '[' → logprob: -15.752989768981934
    9. 'ranges' → logprob: -16.627988815307617
    10. 'points' → logprob: -16.627988815307617

Token 897: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.047222185879945755
    2. '(lines' → logprob: -3.922222137451172
    3. 'range' → logprob: -4.297222137451172
    4. ' lines' → logprob: -4.547222137451172
    5. 'points' → logprob: -6.672222137451172
    6. ' range' → logprob: -7.797222137451172
    7. '(range' → logprob: -8.297222137451172
    8. '(points' → logprob: -9.047222137451172
    9. ')' → logprob: -10.797222137451172
    10. ' points' → logprob: -10.922222137451172

Token 898: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03842758387327194
    2. '       ' → logprob: -3.7884275913238525
    3. '   ' → logprob: -5.038427352905273
    4. '):' → logprob: -5.038427352905273
    5. ':
' → logprob: -6.413427352905273
    6. ':' → logprob: -7.788427352905273
    7. '):
' → logprob: -10.663427352905273
    8. ')' → logprob: -11.538427352905273
    9. ',' → logprob: -12.163427352905273
    10. ' ' → logprob: -13.663427352905273

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029334835708141327
    2. '   ' → logprob: -6.627933502197266
    3. 'points' → logprob: -7.002933502197266
    4. ' points' → logprob: -7.752933502197266
    5. ',' → logprob: -10.002933502197266
    6. '        
' → logprob: -10.127933502197266
    7. ':' → logprob: -10.252933502197266
    8. '
' → logprob: -10.627933502197266
    9. '    
' → logprob: -10.877933502197266
    10. '```' → logprob: -11.127933502197266

Token 900: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.8102007508277893
    2. '   ' → logprob: -1.5602006912231445
    3. 'line' → logprob: -2.0602006912231445
    4. 'all' → logprob: -2.8102006912231445
    5. 'seg' → logprob: -3.0602006912231445
    6. 'segment' → logprob: -3.1852006912231445
    7. 'lst' → logprob: -3.3102006912231445
    8. 'p' → logprob: -4.4352006912231445
    9. ' pts' → logprob: -4.8102006912231445
    10. '       ' → logprob: -5.9352006912231445

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760834217071533
    2. ' =' → logprob: -0.8260834217071533
    3. '=line' → logprob: -10.201083183288574
    4. '   ' → logprob: -10.326083183288574
    5. '=[]
' → logprob: -10.576083183288574
    6. '=[]' → logprob: -10.701083183288574
    7. '=[' → logprob: -11.326083183288574
    8. '_list' → logprob: -12.576083183288574
    9. ' ' → logprob: -13.326083183288574
    10. '=list' → logprob: -14.076083183288574

Token 902: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3870397210121155
    2. '[' → logprob: -1.1370396614074707
    3. '[((' → logprob: -9.012040138244629
    4. '[
' → logprob: -10.387040138244629
    5. ' [' → logprob: -11.512040138244629
    6. '[]
' → logprob: -12.887040138244629
    7. ' [(' → logprob: -13.137040138244629
    8. '[{' → logprob: -13.887040138244629
    9. '[line' → logprob: -15.387040138244629
    10. '[]' → logprob: -16.012039184570312

Token 903: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00032366468803957105
    2. 'lines' → logprob: -8.750323295593262
    3. 'round' → logprob: -9.500323295593262
    4. '(line' → logprob: -9.625323295593262
    5. ' line' → logprob: -10.875323295593262
    6. '#line' → logprob: -13.875323295593262
    7. '0' → logprob: -13.875323295593262
    8. '[line' → logprob: -14.000323295593262
    9. '   ' → logprob: -14.500323295593262
    10. ')' → logprob: -14.625323295593262

Token 904: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015611659036949277
    2. '0' → logprob: -6.501561164855957
    3. '(' → logprob: -10.126561164855957
    4. '   ' → logprob: -12.126561164855957
    5. '#' → logprob: -12.251561164855957
    6. '][' → logprob: -12.876561164855957
    7. '[
' → logprob: -13.501561164855957
    8. 'def' → logprob: -14.251561164855957
    9. '       ' → logprob: -14.376561164855957
    10. ' [' → logprob: -14.501561164855957

Token 905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6789137084269896e-05
    2. '[' → logprob: -11.00003719329834
    3. ' ' → logprob: -11.25003719329834
    4. '   ' → logprob: -12.87503719329834
    5. '#' → logprob: -13.87503719329834
    6. '(' → logprob: -14.00003719329834
    7. '2' → logprob: -14.87503719329834
    8. '```' → logprob: -15.06253719329834
    9. '00' → logprob: -15.37503719329834
    10. '...' → logprob: -15.37503719329834

Token 906: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.026021592319011688
    2. ',line' → logprob: -3.7760214805603027
    3. ',' → logprob: -6.276021480560303
    4. '),' → logprob: -7.526021480560303
    5. '[line' → logprob: -8.276021957397461
    6. '(line' → logprob: -10.776021957397461
    7. '#line' → logprob: -11.026021957397461
    8. ']),' → logprob: -11.401021957397461
    9. ' ],' → logprob: -11.776021957397461
    10. '   ' → logprob: -11.901021957397461

Token 907: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.288163083605468e-05
    2. ' line' → logprob: -9.875052452087402
    3. '#line' → logprob: -14.625052452087402
    4. '	line' → logprob: -14.875052452087402
    5. '[line' → logprob: -15.125052452087402
    6. '(line' → logprob: -15.875052452087402
    7. ',line' → logprob: -16.25005340576172
    8. '   ' → logprob: -16.87505340576172
    9. '=line' → logprob: -17.75005340576172
    10. 'lines' → logprob: -18.62505340576172

Token 908: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0297732874751091
    2. '[' → logprob: -3.529773235321045
    3. '   ' → logprob: -11.029773712158203
    4. ' ' → logprob: -12.904773712158203
    5. '),' → logprob: -13.279773712158203
    6. '#' → logprob: -14.779773712158203
    7. '(' → logprob: -14.779773712158203
    8. '
' → logprob: -14.904773712158203
    9. ')' → logprob: -15.029773712158203
    10. '...' → logprob: -15.904773712158203

Token 909: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -16.125
    4. '[' → logprob: -17.125
    5. '  ' → logprob: -20.125
    6. '
' → logprob: -20.375
    7. ')' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. '    ' → logprob: -21.0
    10. '(' → logprob: -21.125

Token 910: ']),' (ID: 19560)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.26598575711250305
    2. '),' → logprob: -1.5159857273101807
    3. '),(' → logprob: -4.39098596572876
    4. ')' → logprob: -6.89098596572876
    5. ')]
' → logprob: -8.265985488891602
    6. '),
' → logprob: -8.390985488891602
    7. ' ),' → logprob: -10.640985488891602
    8. ' )' → logprob: -11.390985488891602
    9. ')],' → logprob: -11.515985488891602
    10. ')]

' → logprob: -11.765985488891602

Token 911: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40006741881370544
    2. '(' → logprob: -2.0250673294067383
    3. ' (' → logprob: -2.1500673294067383
    4. '*(' → logprob: -4.025067329406738
    5. ']+' → logprob: -4.400067329406738
    6. ' ]' → logprob: -4.650067329406738
    7. '(p' → logprob: -4.775067329406738
    8. '(line' → logprob: -5.025067329406738
    9. '*' → logprob: -5.275067329406738
    10. ']
' → logprob: -5.525067329406738

Token 912: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.966313281329349e-05
    2. ' line' → logprob: -10.000049591064453
    3. '   ' → logprob: -13.000049591064453
    4. '
' → logprob: -14.750049591064453
    5. 'round' → logprob: -15.125049591064453
    6. '(line' → logprob: -15.250049591064453
    7. '	line' → logprob: -15.250049591064453
    8. 'lines' → logprob: -15.750049591064453
    9. '[line' → logprob: -15.875049591064453
    10. '       ' → logprob: -16.125049591064453

Token 913: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.668304245569743e-05
    2. '2' → logprob: -10.000046730041504
    3. '(' → logprob: -14.125046730041504
    4. '   ' → logprob: -15.625046730041504
    5. ' ' → logprob: -16.125045776367188
    6. '```' → logprob: -16.250045776367188
    7. ' [' → logprob: -16.375045776367188
    8. '0' → logprob: -17.375045776367188
    9. 'i' → logprob: -17.625045776367188
    10. '[i' → logprob: -17.750045776367188

Token 914: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -14.87500286102295
    4. '[' → logprob: -15.12500286102295
    5. '   ' → logprob: -15.12500286102295
    6. '```' → logprob: -16.000003814697266
    7. 'i' → logprob: -16.625003814697266
    8. '3' → logprob: -17.250003814697266
    9. '``' → logprob: -17.625003814697266
    10. '
' → logprob: -18.000003814697266

Token 915: '],' (ID: 2155)
  Prédit: ',line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.04886099323630333
    2. ',' → logprob: -3.048861026763916
    3. '],' → logprob: -8.548860549926758
    4. '[line' → logprob: -10.298860549926758
    5. '),' → logprob: -10.673860549926758
    6. '#line' → logprob: -11.548860549926758
    7. ' ,' → logprob: -12.048860549926758
    8. 'line' → logprob: -13.048860549926758
    9. '(line' → logprob: -13.173860549926758
    10. '	line' → logprob: -14.298860549926758

Token 916: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1637164789135568e-05
    2. ' line' → logprob: -11.375011444091797
    3. '(line' → logprob: -17.250011444091797
    4. '#line' → logprob: -17.375011444091797
    5. '[line' → logprob: -17.625011444091797
    6. '	line' → logprob: -18.750011444091797
    7. '=line' → logprob: -18.750011444091797
    8. ',line' → logprob: -18.750011444091797
    9. '   ' → logprob: -19.625011444091797
    10. '```' → logprob: -20.125011444091797

Token 917: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5765246748924255
    2. '3' → logprob: -0.8265246748924255
    3. '[i' → logprob: -8.32652473449707
    4. 'i' → logprob: -8.70152473449707
    5. '2' → logprob: -9.07652473449707
    6. '0' → logprob: -11.07652473449707
    7. ',' → logprob: -11.57652473449707
    8. '   ' → logprob: -11.57652473449707
    9. ' ' → logprob: -11.82652473449707
    10. ' [' → logprob: -12.20152473449707

Token 918: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '[' → logprob: -14.875001907348633
    5. '2' → logprob: -15.250001907348633
    6. '```' → logprob: -16.625001907348633
    7. '
' → logprob: -16.750001907348633
    8. '0' → logprob: -17.000001907348633
    9. 'i' → logprob: -17.125001907348633
    10. '1' → logprob: -17.250001907348633

Token 919: '])]
' (ID: 187535)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03243815898895264
    2. ')]
' → logprob: -3.532438278198242
    3. '),' → logprob: -6.407438278198242
    4. ')' → logprob: -7.157438278198242
    5. ')]

' → logprob: -8.907438278198242
    6. ')],' → logprob: -10.657438278198242
    7. ' )' → logprob: -10.657438278198242
    8. ')]
' → logprob: -10.657438278198242
    9. ')])' → logprob: -11.032438278198242
    10. ')][' → logprob: -11.907438278198242

Token 920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02280815877020359
    2. ' +' → logprob: -4.522808074951172
    3. '
' → logprob: -4.897808074951172
    4. '+' → logprob: -5.772808074951172
    5. '        
' → logprob: -8.647808074951172
    6. ')' → logprob: -8.772808074951172
    7. '   ' → logprob: -9.272808074951172
    8. '+
' → logprob: -9.397808074951172
    9. '[:]' → logprob: -9.647808074951172
    10. '.extend' → logprob: -9.647808074951172

Token 921: ' if' (ID: 538)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.43556904792785645
    2. '       ' → logprob: -2.1855690479278564
    3. 'if' (adapté à ' if') → logprob: -2.3105690479278564
    4. '+' → logprob: -3.4355690479278564
    5. '
' → logprob: -3.6855690479278564
    6. ' if' → logprob: -4.185568809509277
    7. 'for' → logprob: -4.185568809509277
    8. ' +' → logprob: -4.310568809509277
    9. '.extend' → logprob: -4.935568809509277
    10. ' pts' → logprob: -4.935568809509277

Token 922: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021853535436093807
    2. ' i' → logprob: -6.127185344696045
    3. 'inter' → logprob: -15.377185821533203
    4. '   ' → logprob: -17.127185821533203
    5. '(i' → logprob: -17.502185821533203
    6. ' intersections' → logprob: -18.377185821533203
    7. '	i' → logprob: -18.502185821533203
    8. ' ' → logprob: -18.627185821533203
    9. '{i' → logprob: -18.627185821533203
    10. '[i' → logprob: -20.127185821533203

Token 923: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006954300217330456
    2. 'in' → logprob: -5.006954193115234
    3. 'n' → logprob: -8.756954193115234
    4. ' not' → logprob: -9.881954193115234
    5. ' ' → logprob: -11.631954193115234
    6. 'not' → logprob: -12.006954193115234
    7. '   ' → logprob: -12.506954193115234
    8. ' i' → logprob: -13.006954193115234
    9. ' n' → logprob: -13.131954193115234
    10. ']' → logprob: -13.506954193115234

Token 924: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -7.505351095460355e-05
    2. ' intersections' → logprob: -9.500075340270996
    3. 'intersection' → logprob: -16.75007438659668
    4. '(inter' → logprob: -18.37507438659668
    5. '_inter' → logprob: -19.12507438659668
    6. ' inter' → logprob: -19.50007438659668
    7. 'inte' → logprob: -19.75007438659668
    8. '.inter' → logprob: -19.87507438659668
    9. 'Inter' → logprob: -21.87507438659668
    10. '   ' → logprob: -22.12507438659668

Token 925: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02979157119989395
    2. ':
' → logprob: -3.5297915935516357
    3. '):' → logprob: -11.154791831970215
    4. ' and' → logprob: -12.029791831970215
    5. '):
' → logprob: -12.529791831970215
    6. 'and' → logprob: -12.529791831970215
    7. '       ' → logprob: -12.904791831970215
    8. ']:' → logprob: -12.904791831970215
    9. ':
' → logprob: -13.154791831970215
    10. ' :' → logprob: -13.654791831970215

Token 926: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.746640145778656
    2. '           ' → logprob: -1.2466402053833008
    3. '       ' → logprob: -1.8716402053833008
    4. ':
' → logprob: -2.621640205383301
    5. '.extend' → logprob: -5.496640205383301
    6. ',' → logprob: -6.621640205383301
    7. ' +=' → logprob: -6.871640205383301
    8. '	       ' → logprob: -6.996640205383301
    9. '   ' → logprob: -7.121640205383301
    10. '+' → logprob: -7.371640205383301

Token 927: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.550886332988739
    2. 'pts' → logprob: -1.1758863925933838
    3. ' pts' → logprob: -2.300886392593384
    4. '           ' → logprob: -4.425886154174805
    5. 'points' → logprob: -6.175886154174805
    6. ' points' → logprob: -8.050886154174805
    7. '_pts' → logprob: -8.175886154174805
    8. '   ' → logprob: -9.550886154174805
    9. 'pt' → logprob: -10.550886154174805
    10. '               ' → logprob: -11.425886154174805

Token 928: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.027777595445513725
    2. 'pt' → logprob: -3.652777671813965
    3. 'inter' → logprob: -6.777777671813965
    4. 'point' → logprob: -8.527777671813965
    5. 'ip' → logprob: -9.527777671813965
    6. 'points' → logprob: -10.902777671813965
    7. 'pts' → logprob: -11.027777671813965
    8. ' p' → logprob: -11.527777671813965
    9. 'x' → logprob: -12.027777671813965
    10. 'int' → logprob: -12.152777671813965

Token 929: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08910577744245529
    2. 'in' → logprob: -2.4641058444976807
    3. 'p' → logprob: -9.589105606079102
    4. 'i' → logprob: -10.339105606079102
    5. ' ' → logprob: -10.839105606079102
    6. '[i' → logprob: -11.964105606079102
    7. '[in' → logprob: -11.964105606079102
    8. '[' → logprob: -12.339105606079102
    9. ' p' → logprob: -12.464105606079102
    10. 'inter' → logprob: -12.839105606079102

Token 930: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0004958406207151711
    2. ' intersections' → logprob: -7.625495910644531
    3. '(inter' → logprob: -12.125495910644531
    4. 'intersection' → logprob: -13.875495910644531
    5. '   ' → logprob: -14.125495910644531
    6. '[' → logprob: -15.750495910644531
    7. '
' → logprob: -15.750495910644531
    8. '.inter' → logprob: -16.25049591064453
    9. '_inter' → logprob: -16.37549591064453
    10. ' inter' → logprob: -16.62549591064453

Token 931: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '(i' → logprob: -19.125
    3. '[
' → logprob: -19.25
    4. ' [' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '{i' → logprob: -19.375
    7. '.setdefault' → logprob: -19.625
    8. 'import' → logprob: -19.75
    9. 'i' → logprob: -19.75
    10. '
' → logprob: -19.75

Token 932: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6246411204338074
    2. ']:' → logprob: -0.8746411204338074
    3. '[i' → logprob: -3.124641180038452
    4. ':' → logprob: -6.374640941619873
    5. ':
' → logprob: -7.249640941619873
    6. ']' → logprob: -8.124641418457031
    7. '   ' → logprob: -8.749641418457031
    8. ']:
' → logprob: -8.999641418457031
    9. '):
' → logprob: -9.124641418457031
    10. '[p' → logprob: -9.249641418457031

Token 933: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5912091135978699
    2. '           ' → logprob: -1.4662091732025146
    3. ':
' → logprob: -2.5912091732025146
    4. ':' → logprob: -2.9662091732025146
    5. ' pts' → logprob: -3.2162091732025146
    6. ',' → logprob: -3.8412091732025146
    7. '       ' → logprob: -4.3412089347839355
    8. '	       ' → logprob: -5.3412089347839355
    9. 'pts' → logprob: -6.2162089347839355
    10. ' if' → logprob: -6.9662089347839355

Token 934: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.2555240988731384
    2. 'pts' (adapté à ' pts') → logprob: -1.5055241584777832
    3. ' if' → logprob: -5.755524158477783
    4. 'if' → logprob: -9.380523681640625
    5. 'pt' → logprob: -9.380523681640625
    6. '_pts' → logprob: -9.380523681640625
    7. '                   ' → logprob: -10.005523681640625
    8. '               ' → logprob: -10.630523681640625
    9. ' pt' → logprob: -11.130523681640625
    10. '           ' → logprob: -11.130523681640625

Token 935: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015955790877342224
    2. '.' → logprob: -8.87515926361084
    3. ' .' → logprob: -11.87515926361084
    4. 'append' → logprob: -12.25015926361084
    5. '.insert' → logprob: -12.37515926361084
    6. '.app' → logprob: -12.87515926361084
    7. '.ap' → logprob: -15.25015926361084
    8. '+=' → logprob: -15.87515926361084
    9. ' append' → logprob: -16.000160217285156
    10. ' +=' → logprob: -16.000160217285156

Token 936: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.566264295950532e-05
    2. 'p' → logprob: -9.375085830688477
    3. '(' → logprob: -14.250085830688477
    4. ' p' → logprob: -16.625085830688477
    5. ' (' → logprob: -16.875085830688477
    6. '(
' → logprob: -17.125085830688477
    7. '((' → logprob: -18.125085830688477
    8. ')p' → logprob: -20.875085830688477
    9. ',p' → logprob: -21.625085830688477
    10. '[p' → logprob: -21.750085830688477

Token 937: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3156556785106659
    2. ')' → logprob: -1.9406557083129883
    3. ')
' → logprob: -2.0656557083129883
    4. '   ' → logprob: -8.565655708312988
    5. ',' → logprob: -10.190655708312988
    6. '<|end|>' → logprob: -11.065655708312988
    7. '        
' → logprob: -11.065655708312988
    8. '           ' → logprob: -11.565655708312988
    9. '
' → logprob: -11.565655708312988
    10. '               ' → logprob: -11.940655708312988

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005517214885912836
    2. '
' → logprob: -8.0005521774292
    3. '   ' → logprob: -9.0005521774292
    4. '        
' → logprob: -9.7505521774292
    5. '    
' → logprob: -11.2505521774292
    6. '```' → logprob: -12.5005521774292
    7. ',' → logprob: -12.6255521774292
    8. '           ' → logprob: -13.0005521774292
    9. '<|end|>' → logprob: -13.2505521774292
    10. ')' → logprob: -13.5005521774292

Token 939: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7793474197387695
    2. 'pts' → logprob: -0.9043474197387695
    3. ' pts' → logprob: -2.0293474197387695
    4. 'points' → logprob: -6.0293474197387695
    5. '   ' → logprob: -6.5293474197387695
    6. ' points' → logprob: -7.6543474197387695
    7. '_pts' → logprob: -8.27934741973877
    8. 'def' → logprob: -9.02934741973877
    9. '#' (adapté à ' #') → logprob: -9.02934741973877
    10. '
' → logprob: -9.40434741973877

Token 940: ' sort' (ID: 4506)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.0061682746745646
    2. ' pts' → logprob: -5.131168365478516
    3. '       ' → logprob: -8.881168365478516
    4. '#' → logprob: -9.631168365478516
    5. '   ' → logprob: -11.006168365478516
    6. 'points' → logprob: -11.756168365478516
    7. 'def' → logprob: -12.381168365478516
    8. 'for' → logprob: -13.131168365478516
    9. 'pt' → logprob: -13.506168365478516
    10. '_pts' → logprob: -13.631168365478516

Token 941: ' points' (ID: 5571)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5634233355522156
    2. 'pts' → logprob: -1.4384233951568604
    3. '_pts' → logprob: -1.6884233951568604
    4. 'points' → logprob: -5.563423156738281
    5. 'key' → logprob: -6.188423156738281
    6. ' pts' → logprob: -6.938423156738281
    7. 'def' → logprob: -7.563423156738281
    8. '_points' → logprob: -7.938423156738281
    9. 'Pts' → logprob: -8.313423156738281
    10. 'by' → logprob: -8.438423156738281

Token 942: ' along' (ID: 4251)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5645069479942322
    2. ' =' → logprob: -1.314507007598877
    3. '       ' → logprob: -2.939507007598877
    4. '_pts' → logprob: -3.689507007598877
    5. 'pts' → logprob: -3.814507007598877
    6. ' pts' → logprob: -4.189507007598877
    7. '(points' → logprob: -4.439507007598877
    8. '.sort' → logprob: -4.939507007598877
    9. '(key' → logprob: -5.189507007598877
    10. 'key' → logprob: -5.314507007598877

Token 943: ' the' (ID: 290)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2325577735900879
    2. ' line' → logprob: -2.482557773590088
    3. 'the' → logprob: -2.607557773590088
    4. 'pts' → logprob: -3.982557773590088
    5. ' the' → logprob: -4.607557773590088
    6. ' pts' → logprob: -5.607557773590088
    7. '(line' → logprob: -5.732557773590088
    8. '(' → logprob: -5.982557773590088
    9. '[(' → logprob: -6.107557773590088
    10. 'points' → logprob: -6.232557773590088

Token 944: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008948990143835545
    2. ' line' → logprob: -5.383948802947998
    3. 'x' → logprob: -6.383948802947998
    4. 'lines' → logprob: -7.008948802947998
    5. 'lambda' → logprob: -7.133948802947998
    6. 'pts' → logprob: -8.008949279785156
    7. '(line' → logprob: -9.008949279785156
    8. 'segment' → logprob: -9.633949279785156
    9. '[
' → logprob: -10.008949279785156
    10. '(' → logprob: -10.133949279785156

Token 945: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2966582775115967
    2. ',' → logprob: -1.7966582775115967
    3. '.sort' → logprob: -1.9216582775115967
    4. ' =' → logprob: -2.1716582775115967
    5. ' pts' → logprob: -2.1716582775115967
    6. ' by' → logprob: -3.2966582775115967
    7. '=' → logprob: -3.5466582775115967
    8. '_pts' → logprob: -3.7966582775115967
    9. '   ' → logprob: -4.171658515930176
    10. '(points' → logprob: -4.171658515930176

Token 946: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044880159199237823
    2. ',' → logprob: -4.294880390167236
    3. ' by' → logprob: -4.669880390167236
    4. '        
' → logprob: -5.294880390167236
    5. '   ' → logprob: -5.544880390167236
    6. ')' → logprob: -6.169880390167236
    7. '(points' → logprob: -6.419880390167236
    8. '<|end|>' → logprob: -6.544880390167236
    9. ' pts' → logprob: -6.669880390167236
    10. '=' → logprob: -7.669880390167236

Token 947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03682531788945198
    2. ' by' → logprob: -3.66182541847229
    3. ',' → logprob: -5.661825180053711
    4. '   ' → logprob: -6.286825180053711
    5. ')' → logprob: -7.161825180053711
    6. ' pts' → logprob: -7.161825180053711
    7. '(points' → logprob: -7.411825180053711
    8. ' based' → logprob: -8.036825180053711
    9. ':' → logprob: -8.161825180053711
    10. ' =' → logprob: -8.536825180053711

Token 948: ' p' (ID: 275)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.23030410706996918
    2. ' pts' → logprob: -1.6053041219711304
    3. '       ' → logprob: -5.85530424118042
    4. '   ' → logprob: -7.35530424118042
    5. 'def' → logprob: -7.48030424118042
    6. 'dx' → logprob: -7.98030424118042
    7. 'pt' → logprob: -8.230303764343262
    8. ' dx' → logprob: -9.730303764343262
    9. 'if' → logprob: -9.980303764343262
    10. ' def' → logprob: -10.980303764343262

Token 949: '0' (ID: 15)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.13943028450012207
    2. 'oints' → logprob: -2.389430284500122
    3. 't' → logprob: -3.514430284500122
    4. 's' → logprob: -5.389430046081543
    5. 'r' → logprob: -7.014430046081543
    6. 'nts' → logprob: -7.264430046081543
    7. ' =' → logprob: -7.389430046081543
    8. '0' → logprob: -7.639430046081543
    9. '=' → logprob: -7.764430046081543
    10. 'ints' → logprob: -8.889430046081543

Token 950: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3527301251888275
    2. ' =' → logprob: -1.22773015499115
    3. '=p' → logprob: -6.2277302742004395
    4. ',' → logprob: -6.8527302742004395
    5. 't' → logprob: -7.6027302742004395
    6. 'oints' → logprob: -8.102729797363281
    7. 'ts' → logprob: -8.602729797363281
    8. '0' → logprob: -10.102729797363281
    9. '=line' → logprob: -10.102729797363281
    10. 'nts' → logprob: -10.477729797363281

Token 951: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27044084668159485
    2. 'pts' → logprob: -1.5204408168792725
    3. ' (' → logprob: -5.020441055297852
    4. 'line' → logprob: -5.520441055297852
    5. '(line' → logprob: -5.770441055297852
    6. ' pts' → logprob: -6.270441055297852
    7. 'points' → logprob: -6.520441055297852
    8. '(points' → logprob: -6.895441055297852
    9. 'lines' → logprob: -9.520441055297852
    10. ' line' → logprob: -10.645441055297852

Token 952: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003337886882945895
    2. 'lines' → logprob: -5.753337860107422
    3. ' line' → logprob: -8.878337860107422
    4. 'pts' → logprob: -12.128337860107422
    5. '(line' → logprob: -12.128337860107422
    6. 'points' → logprob: -12.253337860107422
    7. ' lines' → logprob: -13.128337860107422
    8. '#line' → logprob: -14.128337860107422
    9. '   ' → logprob: -14.253337860107422
    10. '[line' → logprob: -14.753337860107422

Token 953: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004903609515167773
    2. '0' → logprob: -7.625490188598633
    3. '(' → logprob: -14.000490188598633
    4. '   ' → logprob: -15.000490188598633
    5. 'x' → logprob: -15.000490188598633
    6. '#' → logprob: -15.750490188598633
    7. '```' → logprob: -16.000490188598633
    8. ' [' → logprob: -16.125490188598633
    9. 'def' → logprob: -16.125490188598633
    10. ' ' → logprob: -16.625490188598633

Token 954: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '(' → logprob: -16.250003814697266
    6. '```' → logprob: -17.250003814697266
    7. '#' → logprob: -17.625003814697266
    8. '
' → logprob: -18.000003814697266
    9. '...' → logprob: -18.937503814697266
    10. '2' → logprob: -19.000003814697266

Token 955: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09648412466049194
    2. ',line' → logprob: -2.5964841842651367
    3. ',' → logprob: -4.096484184265137
    4. '[line' → logprob: -8.221484184265137
    5. '),' → logprob: -8.971484184265137
    6. '],[' → logprob: -9.096484184265137
    7. ']' → logprob: -9.346484184265137
    8. '#line' → logprob: -9.721484184265137
    9. '],
' → logprob: -9.846484184265137
    10. '[' → logprob: -9.846484184265137

Token 956: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.842555426876061e-06
    2. ' line' → logprob: -12.250004768371582
    3. '#line' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.3750057220459
    5. '	line' → logprob: -18.8750057220459
    6. '[line' → logprob: -19.5000057220459
    7. ' ' → logprob: -20.5000057220459
    8. '(line' → logprob: -21.0000057220459
    9. 'lines' → logprob: -21.2500057220459
    10. '=line' → logprob: -21.5000057220459

Token 957: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890179008245468
    2. '[' → logprob: -2.578901767730713
    3. '   ' → logprob: -12.328902244567871
    4. ' ' → logprob: -13.203902244567871
    5. '```' → logprob: -13.328902244567871
    6. '(' → logprob: -13.828902244567871
    7. '0' → logprob: -13.828902244567871
    8. '-' → logprob: -14.578902244567871
    9. '#' → logprob: -14.828902244567871
    10. '
' → logprob: -15.578902244567871

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.75
    5. '<|end|>' → logprob: -19.625
    6. '[' → logprob: -19.75
    7. '१' → logprob: -19.875
    8. '' → logprob: -20.25
    9. '১' → logprob: -20.25
    10. '１' → logprob: -20.75

Token 959: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029792383313179016
    2. ')
' → logprob: -3.529792308807373
    3. ')
' → logprob: -10.779792785644531
    4. ' )' → logprob: -11.279792785644531
    5. ')p' → logprob: -12.904792785644531
    6. ')

' → logprob: -13.154792785644531
    7. ' )
' → logprob: -13.529792785644531
    8. '   ' → logprob: -13.904792785644531
    9. ')#' → logprob: -14.404792785644531
    10. '),' → logprob: -15.029792785644531

Token 960: '       ' (ID: 309)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.7065190076828003
    2. ' =' → logprob: -2.08151912689209
    3. '       ' → logprob: -2.20651912689209
    4. ')' → logprob: -2.20651912689209
    5. '
' → logprob: -2.33151912689209
    6. '=' → logprob: -2.45651912689209
    7. ',' → logprob: -3.08151912689209
    8. '   ' → logprob: -3.45651912689209
    9. 'p' → logprob: -3.70651912689209
    10. ',
' → logprob: -3.95651912689209

Token 961: ' p' (ID: 275)
  Prédit: ' pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.0899496003985405
    2. 'pts' → logprob: -2.589949607849121
    3. '       ' → logprob: -5.089949607849121
    4. ' p' → logprob: -6.089949607849121
    5. 'p' (adapté à ' p') → logprob: -6.839949607849121
    6. 'points' → logprob: -7.589949607849121
    7. ' points' → logprob: -8.089949607849121
    8. '_pts' → logprob: -8.464949607849121
    9. 'pt' → logprob: -9.339949607849121
    10. 'def' → logprob: -9.589949607849121

Token 962: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.341248095035553
    2. 'oints' → logprob: -1.5912480354309082
    3. 'ts' → logprob: -3.466248035430908
    4. '1' → logprob: -3.591248035430908
    5. 'nts' → logprob: -4.466248035430908
    6. '=' → logprob: -5.716248035430908
    7. 'r' → logprob: -5.841248035430908
    8. 't' → logprob: -5.966248035430908
    9. ' =' → logprob: -6.966248035430908
    10. '_points' → logprob: -7.216248035430908

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4541972577571869
    2. ')' → logprob: -1.7041972875595093
    3. ' =' → logprob: -1.7041972875595093
    4. ')=' → logprob: -6.829197406768799
    5. ' )' → logprob: -9.70419692993164
    6. ')p' → logprob: -11.07919692993164
    7. ',' → logprob: -11.45419692993164
    8. '=p' → logprob: -11.70419692993164
    9. '=line' → logprob: -11.70419692993164
    10. '),' → logprob: -11.95419692993164

Token 964: ' (' (ID: 350)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.04859248176217079
    2. ' (' → logprob: -3.0485925674438477
    3. '[line' → logprob: -13.298592567443848
    4. '(lines' → logprob: -13.298592567443848
    5. ' line' → logprob: -14.548592567443848
    6. '(' → logprob: -14.923592567443848
    7. '=line' → logprob: -15.298592567443848
    8. ' ' → logprob: -15.673592567443848
    9. '#line' → logprob: -15.798592567443848
    10. '   ' → logprob: -15.798592567443848

Token 965: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031121151987463236
    2. '(line' → logprob: -6.003112316131592
    3. ' line' → logprob: -7.378112316131592
    4. '[line' → logprob: -12.128111839294434
    5. ' (' → logprob: -13.128111839294434
    6. '#line' → logprob: -13.503111839294434
    7. '=line' → logprob: -14.378111839294434
    8. '   ' → logprob: -14.503111839294434
    9. '           ' → logprob: -14.878111839294434
    10. '	line' → logprob: -15.128111839294434

Token 966: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.318681188422488e-05
    2. '0' → logprob: -11.37501335144043
    3. '2' → logprob: -14.00001335144043
    4. '(' → logprob: -14.50001335144043
    5. '   ' → logprob: -15.75001335144043
    6. 'i' → logprob: -16.87501335144043
    7. '1' → logprob: -16.87501335144043
    8. 'p' → logprob: -17.87501335144043
    9. ' ' → logprob: -17.87501335144043
    10. ' [' → logprob: -18.00001335144043

Token 967: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009820780251175165
    2. '0' → logprob: -7.000982284545898
    3. '[' → logprob: -9.750982284545898
    4. ' ' → logprob: -12.125982284545898
    5. 'i' → logprob: -12.750982284545898
    6. '   ' → logprob: -13.125982284545898
    7. '(' → logprob: -14.500982284545898
    8. '3' → logprob: -14.875982284545898
    9. '```' → logprob: -14.875982284545898
    10. '``' → logprob: -15.750982284545898

Token 968: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7026773691177368
    2. ',line' → logprob: -0.7026773691177368
    3. '],' → logprob: -4.702677249908447
    4. '),' → logprob: -8.327677726745605
    5. '[line' → logprob: -9.952677726745605
    6. ' ,' → logprob: -10.577677726745605
    7. ',p' → logprob: -10.577677726745605
    8. '#line' → logprob: -10.952677726745605
    9. 'line' → logprob: -11.827677726745605
    10. '],[' → logprob: -11.827677726745605

Token 969: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.935296834039036e-06
    2. ' line' → logprob: -12.75000286102295
    3. '(line' → logprob: -19.500003814697266
    4. '#line' → logprob: -19.500003814697266
    5. '[line' → logprob: -20.375003814697266
    6. '	line' → logprob: -20.625003814697266
    7. '=line' → logprob: -21.625003814697266
    8. ',line' → logprob: -21.875003814697266
    9. '   ' → logprob: -22.250003814697266
    10. 'lines' → logprob: -22.875003814697266

Token 970: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06246001273393631
    2. '3' → logprob: -3.187459945678711
    3. '1' → logprob: -4.437459945678711
    4. '0' → logprob: -4.937459945678711
    5. '   ' → logprob: -9.312459945678711
    6. ',' → logprob: -9.437459945678711
    7. ' ' → logprob: -10.187459945678711
    8. '][' → logprob: -11.062459945678711
    9. '2' → logprob: -11.187459945678711
    10. '```' → logprob: -11.437459945678711

Token 971: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0021995019633322954
    2. '0' → logprob: -6.127199649810791
    3. ' ' → logprob: -11.627199172973633
    4. '   ' → logprob: -12.752199172973633
    5. '1' → logprob: -13.377199172973633
    6. '[' → logprob: -14.877199172973633
    7. '```' → logprob: -15.627199172973633
    8. '  ' → logprob: -15.877199172973633
    9. '-' → logprob: -17.127199172973633
    10. '       ' → logprob: -17.252199172973633

Token 972: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4743351936340332
    2. ')' → logprob: -0.9743351936340332
    3. ')
' → logprob: -8.849334716796875
    4. ' )
' → logprob: -9.974334716796875
    5. ')

' → logprob: -10.724334716796875
    6. '   ' → logprob: -11.099334716796875
    7. ')p' → logprob: -11.349334716796875
    8. ' )' → logprob: -11.599334716796875
    9. ')`
' → logprob: -12.599334716796875
    10. 'def' → logprob: -13.474334716796875

Token 973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018257156480103731
    2. ' pts' → logprob: -6.75182580947876
    3. 'pts' → logprob: -8.126825332641602
    4. '   ' → logprob: -9.126825332641602
    5. '
' → logprob: -9.751825332641602
    6. '        
' → logprob: -10.126825332641602
    7. 'def' → logprob: -10.126825332641602
    8. 'points' → logprob: -10.501825332641602
    9. ')' → logprob: -11.126825332641602
    10. '<|end|>' → logprob: -11.501825332641602

Token 974: ' def' (ID: 1056)
  Prédit: ' pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.042701106518507004
    2. 'pts' → logprob: -3.292701005935669
    3. '       ' → logprob: -5.417701244354248
    4. ' points' → logprob: -9.41770076751709
    5. '   ' → logprob: -10.04270076751709
    6. '_pts' → logprob: -10.16770076751709
    7. 'points' → logprob: -10.54270076751709
    8. 'def' (adapté à ' def') → logprob: -12.04270076751709
    9. 'pt' → logprob: -12.04270076751709
    10. ' pt' → logprob: -12.54270076751709

Token 975: ' param' (ID: 3802)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.2101420164108276
    2. 'dist' → logprob: -1.4601420164108276
    3. 'sort' → logprob: -1.4601420164108276
    4. 'key' → logprob: -2.210142135620117
    5. 'proj' → logprob: -2.960142135620117
    6. 'distance' → logprob: -3.335142135620117
    7. ' key' → logprob: -4.460142135620117
    8. 'param' → logprob: -4.835142135620117
    9. ' sort' → logprob: -5.085142135620117
    10. 'point' → logprob: -5.585142135620117

Token 976: '(t' (ID: 2025)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13379228115081787
    2. '(t' → logprob: -2.5087924003601074
    3. '(a' → logprob: -4.383792400360107
    4. '(x' → logprob: -4.883792400360107
    5. '(point' → logprob: -5.008792400360107
    6. '(line' → logprob: -5.758792400360107
    7. 'etrize' → logprob: -5.883792400360107
    8. '(pt' → logprob: -6.258792400360107
    9. '(token' → logprob: -6.508792400360107
    10. '(points' → logprob: -7.008792400360107

Token 977: '):
' (ID: 1883)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4078981578350067
    2. '):' → logprob: -1.907898187637329
    3. '):
' → logprob: -2.407898187637329
    4. '(x' → logprob: -3.157898187637329
    5. '(pt' → logprob: -3.782898187637329
    6. 'eter' → logprob: -4.90789794921875
    7. '(t' → logprob: -5.53289794921875
    8. '(point' → logprob: -5.78289794921875
    9. 'u' → logprob: -5.90789794921875
    10. 'x' → logprob: -6.15789794921875

Token 978: '           ' (ID: 352)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0137559175491333
    2. 'p' → logprob: -1.6387559175491333
    3. '   ' → logprob: -1.8887559175491333
    4. ' return' → logprob: -3.2637557983398438
    5. 'return' → logprob: -3.2637557983398438
    6. '(pt' → logprob: -3.3887557983398438
    7. ' p' → logprob: -3.5137557983398438
    8. 'x' → logprob: -3.6387557983398438
    9. '(x' → logprob: -3.7637557983398438
    10. '       ' → logprob: -3.8887557983398438

Token 979: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3169801235198975
    2. 'x' → logprob: -1.4419801235198975
    3. ' return' → logprob: -1.6919801235198975
    4. 'p' → logprob: -2.1919801235198975
    5. '       ' → logprob: -2.8169801235198975
    6. 't' → logprob: -3.1919801235198975
    7. ' x' → logprob: -3.5669801235198975
    8. ' t' → logprob: -3.5669801235198975
    9. ' p' → logprob: -3.8169801235198975
    10. '   ' → logprob: -5.566980361938477

Token 980: ' parameter' (ID: 11047)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47808000445365906
    2. ' return' → logprob: -1.2280800342559814
    3. 'p' → logprob: -3.9780800342559814
    4. 't' → logprob: -3.9780800342559814
    5. ' t' → logprob: -4.228079795837402
    6. 'x' → logprob: -4.728079795837402
    7. ' p' → logprob: -4.978079795837402
    8. 'def' → logprob: -5.603079795837402
    9. 'pt' → logprob: -5.978079795837402
    10. 'import' → logprob: -6.228079795837402

Token 981: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5688437223434448
    2. ' =' → logprob: -1.3188437223434448
    3. '=lambda' → logprob: -2.8188438415527344
    4. 't' → logprob: -3.3188438415527344
    5. '(t' → logprob: -3.9438438415527344
    6. '(p' → logprob: -4.068843841552734
    7. ' t' → logprob: -5.068843841552734
    8. ':' → logprob: -5.568843841552734
    9. '(' → logprob: -5.568843841552734
    10. 'def' → logprob: -5.693843841552734

Token 982: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4736177921295166
    2. '(p' → logprob: -1.4736177921295166
    3. ':' → logprob: -1.9736177921295166
    4. '(' → logprob: -1.9736177921295166
    5. ' =' → logprob: -2.8486177921295166
    6. ',' → logprob: -3.4736177921295166
    7. ')' → logprob: -3.7236177921295166
    8. '(x' → logprob: -3.7236177921295166
    9. '(t' → logprob: -4.2236175537109375
    10. '   ' → logprob: -4.2236175537109375

Token 983: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2157970368862152
    2. 'lambda' → logprob: -2.215796947479248
    3. '0' → logprob: -2.715796947479248
    4. ' p' → logprob: -5.340796947479248
    5. ' lambda' → logprob: -5.465796947479248
    6. 'x' → logprob: -5.965796947479248
    7. 't' → logprob: -6.340796947479248
    8. '=lambda' → logprob: -6.340796947479248
    9. 'distance' → logprob: -6.840796947479248
    10. '(lambda' → logprob: -7.090796947479248

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002956423908472061
    2. 'def' → logprob: -6.377956390380859
    3. '=lambda' → logprob: -8.25295639038086
    4. 'lambda' → logprob: -8.50295639038086
    5. 'p' → logprob: -9.00295639038086
    6. '[' → logprob: -9.37795639038086
    7. '=' → logprob: -9.50295639038086
    8. ')' → logprob: -9.50295639038086
    9. ' p' → logprob: -9.87795639038086
    10. '1' → logprob: -9.87795639038086

Token 985: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.249060034751892
    2. ',' → logprob: -1.624060034751892
    3. '[' → logprob: -1.999060034751892
    4. '   ' → logprob: -2.8740601539611816
    5. 'p' → logprob: -3.1240601539611816
    6. ')' → logprob: -3.4990601539611816
    7. ':' → logprob: -3.4990601539611816
    8. '0' → logprob: -3.6240601539611816
    9. '=' → logprob: -3.8740601539611816
    10. '       ' → logprob: -3.8740601539611816

Token 986: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.030050253495573997
    2. ' p' → logprob: -3.655050277709961
    3. 't' → logprob: -6.780050277709961
    4. 'lambda' → logprob: -6.780050277709961
    5. ' lambda' → logprob: -7.405050277709961
    6. ' t' → logprob: -8.280050277709961
    7. '0' → logprob: -8.655050277709961
    8. ')' → logprob: -9.405050277709961
    9. '(lambda' → logprob: -9.405050277709961
    10. ' (' → logprob: -9.780050277709961

Token 987: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32638248801231384
    2. '1' → logprob: -1.3263825178146362
    3. 'p' → logprob: -5.076382637023926
    4. 't' → logprob: -5.576382637023926
    5. 'oint' → logprob: -7.201382637023926
    6. 'oints' → logprob: -7.576382637023926
    7. '(t' → logprob: -7.826382637023926
    8. '(' → logprob: -7.826382637023926
    9. '(p' → logprob: -8.201382637023926
    10. ' p' → logprob: -8.701382637023926

Token 988: ' where' (ID: 1919)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1384066939353943
    2. '       ' → logprob: -3.388406753540039
    3. '(pt' → logprob: -3.888406753540039
    4. '(point' → logprob: -4.138406753540039
    5. '   ' → logprob: -4.513406753540039
    6. '(x' → logprob: -4.763406753540039
    7. ',' → logprob: -5.013406753540039
    8. 'return' → logprob: -5.138406753540039
    9. '           ' → logprob: -5.388406753540039
    10. '(t' → logprob: -5.888406753540039

Token 989: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4619617164134979
    2. 't' → logprob: -1.4619617462158203
    3. 'pt' → logprob: -3.4619617462158203
    4. ' p' → logprob: -3.7119617462158203
    5. '(p' → logprob: -3.8369617462158203
    6. ' t' → logprob: -4.08696174621582
    7. 'point' → logprob: -4.46196174621582
    8. 'x' → logprob: -4.96196174621582
    9. 'return' → logprob: -5.21196174621582
    10. '       ' → logprob: -5.83696174621582

Token 990: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.672990620136261
    2. '0' → logprob: -1.0479905605316162
    3. '=' → logprob: -2.547990560531616
    4. 'ts' → logprob: -4.297990798950195
    5. ' =' → logprob: -4.422990798950195
    6. 'oints' → logprob: -4.547990798950195
    7. '   ' → logprob: -5.297990798950195
    8. '[' → logprob: -5.797990798950195
    9. 'return' → logprob: -6.172990798950195
    10. 'p' → logprob: -6.297990798950195

Token 991: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9149651527404785
    2. '(lambda' → logprob: -1.2899651527404785
    3. 'p' → logprob: -2.0399651527404785
    4. '(' → logprob: -2.2899651527404785
    5. 't' → logprob: -3.6649651527404785
    6. '(p' → logprob: -3.7899651527404785
    7. '(t' → logprob: -4.1649651527404785
    8. ' lambda' → logprob: -4.4149651527404785
    9. '(
' → logprob: -4.6649651527404785
    10. ' (' → logprob: -5.5399651527404785

Token 992: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4687286913394928
    2. '0' → logprob: -1.7187286615371704
    3. 't' → logprob: -1.9687286615371704
    4. 'oints' → logprob: -4.218728542327881
    5. 'p' → logprob: -4.468728542327881
    6. ')' → logprob: -5.593728542327881
    7. '   ' → logprob: -5.718728542327881
    8. '(' → logprob: -5.843728542327881
    9. '
' → logprob: -6.468728542327881
    10. 's' → logprob: -6.468728542327881

Token 993: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9154407382011414
    2. ' +' → logprob: -1.4154407978057861
    3. '+' → logprob: -2.540440797805786
    4. 'def' → logprob: -2.790440797805786
    5. 'p' → logprob: -3.290440797805786
    6. '+(' → logprob: -3.790440797805786
    7. '(' → logprob: -3.790440797805786
    8. ' (' → logprob: -3.915440797805786
    9. '0' → logprob: -4.040440559387207
    10. ',' → logprob: -4.040440559387207

Token 994: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6908003091812134
    2. 't' → logprob: -1.3158003091812134
    3. '((' → logprob: -2.065800189971924
    4. ' (' → logprob: -3.190800189971924
    5. '(' → logprob: -3.565800189971924
    6. ' t' → logprob: -4.190800189971924
    7. '(x' → logprob: -4.940800189971924
    8. '(
' → logprob: -5.065800189971924
    9. '(p' → logprob: -5.940800189971924
    10. ' ((' → logprob: -6.065800189971924

Token 995: '*(' (ID: 14793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3665939569473267
    2. ' (' → logprob: -1.4915939569473267
    3. ' p' → logprob: -2.116593837738037
    4. 'p' → logprob: -2.616593837738037
    5. '((' → logprob: -2.991593837738037
    6. '(p' → logprob: -3.366593837738037
    7. '(lambda' → logprob: -3.491593837738037
    8. ' ' → logprob: -3.616593837738037
    9. 't' → logprob: -3.741593837738037
    10. 'lambda' → logprob: -3.991593837738037

Token 996: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19212204217910767
    2. '(p' → logprob: -1.817121982574463
    3. '(' → logprob: -5.442121982574463
    4. ' (' → logprob: -5.567121982574463
    5. ' p' → logprob: -6.942121982574463
    6. '(t' → logprob: -7.317121982574463
    7. ')' → logprob: -7.442121982574463
    8. '(
' → logprob: -7.817121982574463
    9. 't' → logprob: -8.067122459411621
    10. '1' → logprob: -8.067122459411621

Token 997: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7065471410751343
    2. '0' → logprob: -1.0815471410751343
    3. '1' → logprob: -2.081547260284424
    4. ')' → logprob: -3.331547260284424
    5. ')[' → logprob: -5.831547260284424
    6. '][' → logprob: -6.956547260284424
    7. '
' → logprob: -7.206547260284424
    8. '   ' → logprob: -8.081546783447266
    9. '```' → logprob: -8.331546783447266
    10. ']' → logprob: -8.456546783447266

Token 998: '-p' (ID: 3161)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028074870351701975
    2. '-' → logprob: -6.7528076171875
    3. '0' → logprob: -7.3778076171875
    4. ')' → logprob: -8.1278076171875
    5. '<|end|>' → logprob: -8.2528076171875
    6. ' -' → logprob: -9.2528076171875
    7. '[
' → logprob: -9.7528076171875
    8. ',' → logprob: -10.0028076171875
    9. 'x' → logprob: -10.2528076171875
    10. '
' → logprob: -10.6278076171875

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062254924327135086
    2. '[' → logprob: -2.8122549057006836
    3. '1' → logprob: -9.312254905700684
    4. ')' → logprob: -9.437254905700684
    5. '```' → logprob: -10.187254905700684
    6. '
' → logprob: -10.437254905700684
    7. '   ' → logprob: -11.437254905700684
    8. ')[' → logprob: -12.187254905700684
    9. '[
' → logprob: -12.312254905700684
    10. '``' → logprob: -12.437254905700684

Token 1000: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23927263915538788
    2. ')
' → logprob: -2.3642725944519043
    3. '):' → logprob: -2.6142725944519043
    4. '):
' → logprob: -3.6142725944519043
    5. ',' → logprob: -4.364272594451904
    6. '),' → logprob: -5.739272594451904
    7. '   ' → logprob: -7.239272594451904
    8. '(p' → logprob: -7.614272594451904
    9. ')p' → logprob: -7.739272594451904
    10. ');' → logprob: -8.489273071289062

Token 1001: '           ' (ID: 352)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2527087926864624
    2. '(' → logprob: -2.002708911895752
    3. '(t' → logprob: -3.127708911895752
    4. '   ' → logprob: -4.377708911895752
    5. 'return' → logprob: -4.627708911895752
    6. '       ' → logprob: -5.002708911895752
    7. ' return' → logprob: -5.502708911895752
    8. '(x' → logprob: -6.502708911895752
    9. '(
' → logprob: -6.502708911895752
    10. 'def' → logprob: -6.627708911895752

Token 1002: ' dx' (ID: 29472)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8602305054664612
    2. 'p' → logprob: -1.6102304458618164
    3. ' t' → logprob: -1.8602304458618164
    4. ' p' → logprob: -1.9852304458618164
    5. ' return' → logprob: -3.6102304458618164
    6. 'return' → logprob: -3.7352304458618164
    7. '       ' → logprob: -4.610230445861816
    8. '           ' → logprob: -4.985230445861816
    9. '   ' → logprob: -5.110230445861816
    10. 'x' → logprob: -5.485230445861816

Token 1003: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5526405572891235
    2. ' =' → logprob: -1.0526405572891235
    3. '(p' → logprob: -2.802640438079834
    4. ',' → logprob: -5.677640438079834
    5. ' (' → logprob: -6.177640438079834
    6. '(x' → logprob: -6.302640438079834
    7. '=lambda' → logprob: -6.302640438079834
    8. 'p' → logprob: -6.552640438079834
    9. '(' → logprob: -7.052640438079834
    10. ')' → logprob: -7.177640438079834

Token 1004: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.052355099469423294
    2. ' p' → logprob: -3.0523550510406494
    3. 'line' → logprob: -6.1773552894592285
    4. ' line' → logprob: -6.4273552894592285
    5. '(p' → logprob: -10.05235481262207
    6. '(line' → logprob: -11.80235481262207
    7. '1' → logprob: -12.55235481262207
    8. ')p' → logprob: -13.55235481262207
    9. '   ' → logprob: -13.67735481262207
    10. ' ' → logprob: -13.80235481262207

Token 1005: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4035593271255493
    2. '1' → logprob: -1.4035593271255493
    3. '[' → logprob: -3.2785592079162598
    4. 't' → logprob: -3.5285592079162598
    5. 'def' → logprob: -5.27855920791626
    6. ')' → logprob: -5.65355920791626
    7. 'p' → logprob: -5.77855920791626
    8. 'x' → logprob: -6.52855920791626
    9. 'oints' → logprob: -6.65355920791626
    10. '
' → logprob: -7.77855920791626

Token 1006: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011307948443572968
    2. 'x' → logprob: -10.000113487243652
    3. 'def' → logprob: -10.375113487243652
    4. '=' → logprob: -11.500113487243652
    5. '0' → logprob: -11.750113487243652
    6. '-' → logprob: -12.875113487243652
    7. ',' → logprob: -13.250113487243652
    8. '
' → logprob: -13.375113487243652
    9. '[
' → logprob: -13.625113487243652
    10. 'p' → logprob: -13.625113487243652

Token 1007: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. '```' → logprob: -15.875003814697266
    4. '1' → logprob: -16.125003814697266
    5. ' ' → logprob: -16.625003814697266
    6. 'x' → logprob: -16.750003814697266
    7. '-' → logprob: -16.750003814697266
    8. '
' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.250003814697266
    10. 'def' → logprob: -17.500003814697266

Token 1008: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43035900592803955
    2. ' -' → logprob: -1.8053590059280396
    3. '[' → logprob: -2.30535888671875
    4. '-p' → logprob: -2.93035888671875
    5. '0' → logprob: -4.80535888671875
    6. ')' → logprob: -5.18035888671875
    7. ']' → logprob: -5.30535888671875
    8. 'p' → logprob: -5.55535888671875
    9. ']-' → logprob: -5.80535888671875
    10. ')-' → logprob: -6.80535888671875

Token 1009: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019311357755213976
    2. ' p' → logprob: -6.251931190490723
    3. '0' → logprob: -13.001931190490723
    4. '   ' → logprob: -15.626931190490723
    5. '	p' → logprob: -16.751930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '[' → logprob: -17.251930236816406
    8. '```' → logprob: -17.876930236816406
    9. '(p' → logprob: -18.001930236816406
    10. ')p' → logprob: -18.126930236816406

Token 1010: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7755875129951164e-05
    2. '[' → logprob: -10.37504768371582
    3. ' ' → logprob: -11.62504768371582
    4. 'p' → logprob: -13.00004768371582
    5. '1' → logprob: -13.62504768371582
    6. 'i' → logprob: -14.25004768371582
    7. '   ' → logprob: -14.43754768371582
    8. '(' → logprob: -14.56254768371582
    9. '```' → logprob: -15.56254768371582
    10. 'x' → logprob: -15.87504768371582

Token 1011: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031869823578745127
    2. '0' → logprob: -5.75318717956543
    3. '```' → logprob: -12.75318717956543
    4. 'x' → logprob: -13.75318717956543
    5. '(' → logprob: -13.87818717956543
    6. '.' → logprob: -14.50318717956543
    7. ',' → logprob: -14.50318717956543
    8. '
' → logprob: -14.50318717956543
    9. 'def' → logprob: -14.62818717956543
    10. ':' → logprob: -15.12818717956543

Token 1012: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '```' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '
' → logprob: -17.187503814697266
    7. '<|end|>' → logprob: -17.312503814697266
    8. '۰' → logprob: -17.937503814697266
    9. '(' → logprob: -18.000003814697266
    10. '``' → logprob: -18.937503814697266

Token 1013: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023717662319540977
    2. ')' → logprob: -3.7737176418304443
    3. ')p' → logprob: -9.023717880249023
    4. 'def' → logprob: -9.398717880249023
    5. ')x' → logprob: -10.023717880249023
    6. ');' → logprob: -10.148717880249023
    7. 'p' → logprob: -10.773717880249023
    8. ',' → logprob: -10.898717880249023
    9. '),' → logprob: -11.023717880249023
    10. '       ' → logprob: -11.148717880249023

Token 1014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5065414309501648
    2. '       ' → logprob: -1.7565414905548096
    3. '0' → logprob: -2.2565414905548096
    4. '   ' → logprob: -3.0065414905548096
    5. '```' → logprob: -3.6315414905548096
    6. 't' → logprob: -5.0065412521362305
    7. ' ' → logprob: -5.1315412521362305
    8. '    ' → logprob: -5.3815412521362305
    9. 'x' → logprob: -5.6315412521362305
    10. '        ' → logprob: -5.8815412521362305

Token 1015: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.23011793196201324
    2. 't' → logprob: -2.3551180362701416
    3. '           ' → logprob: -3.1051180362701416
    4. ' dy' → logprob: -3.3551180362701416
    5. '       ' → logprob: -4.3551177978515625
    6. '   ' → logprob: -4.9801177978515625
    7. ' t' → logprob: -5.6051177978515625
    8. 'return' → logprob: -6.4801177978515625
    9. 'dp' → logprob: -6.7301177978515625
    10. 'dt' → logprob: -6.8551177978515625

Token 1016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2645926773548126
    2. ' =' → logprob: -1.8895926475524902
    3. '=p' → logprob: -2.5145926475524902
    4. '(p' → logprob: -8.764593124389648
    5. 'p' → logprob: -9.889593124389648
    6. 'def' → logprob: -10.139593124389648
    7. ' p' → logprob: -10.389593124389648
    8. '=lambda' → logprob: -10.639593124389648
    9. '=d' → logprob: -10.764593124389648
    10. '   ' → logprob: -10.764593124389648

Token 1017: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003827676991932094
    2. ' p' → logprob: -7.875382900238037
    3. '0' → logprob: -13.000382423400879
    4. '(p' → logprob: -15.500382423400879
    5. ' ' → logprob: -16.125383377075195
    6. '(' → logprob: -17.250383377075195
    7. '   ' → logprob: -17.500383377075195
    8. '
' → logprob: -18.250383377075195
    9. 'def' → logprob: -19.000383377075195
    10. '	p' → logprob: -19.125383377075195

Token 1018: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07139807939529419
    2. '1' → logprob: -2.6963980197906494
    3. '[' → logprob: -7.3213982582092285
    4. 'p' → logprob: -7.3213982582092285
    5. 'i' → logprob: -9.94639778137207
    6. ' ' → logprob: -11.07139778137207
    7. '```' → logprob: -11.82139778137207
    8. '(' → logprob: -11.88389778137207
    9. '<|end|>' → logprob: -12.07139778137207
    10. '2' → logprob: -12.32139778137207

Token 1019: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003147535026073456
    2. '0' → logprob: -5.878147602081299
    3. '(' → logprob: -10.00314712524414
    4. '1' → logprob: -10.12814712524414
    5. '```' → logprob: -10.12814712524414
    6. '(p' → logprob: -10.25314712524414
    7. ')' → logprob: -10.37814712524414
    8. '=' → logprob: -10.50314712524414
    9. 'p' → logprob: -10.62814712524414
    10. ':' → logprob: -10.62814712524414

Token 1020: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326126456260681
    2. '1' → logprob: -0.7576126456260681
    3. '[' → logprob: -12.007612228393555
    4. ' ' → logprob: -12.257612228393555
    5. '```' → logprob: -13.632612228393555
    6. '   ' → logprob: -14.382612228393555
    7. 'dy' → logprob: -15.757612228393555
    8. '-' → logprob: -15.945112228393555
    9. '
' → logprob: -16.382612228393555
    10. '01' → logprob: -16.445112228393555

Token 1021: ']-' (ID: 27107)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8014745712280273
    2. '*p' → logprob: -2.3014745712280273
    3. ']*' → logprob: -2.4264745712280273
    4. '[' → logprob: -2.5514745712280273
    5. ')p' → logprob: -2.5514745712280273
    6. ']' → logprob: -3.1764745712280273
    7. 'p' → logprob: -3.6764745712280273
    8. ')' → logprob: -3.9264745712280273
    9. ']==' → logprob: -3.9264745712280273
    10. 'dy' → logprob: -3.9264745712280273

Token 1022: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.440506407059729e-05
    2. '0' → logprob: -10.50003433227539
    3. ' p' → logprob: -12.25003433227539
    4. '1' → logprob: -13.62503433227539
    5. ' ' → logprob: -15.62503433227539
    6. '-' → logprob: -15.62503433227539
    7. '```' → logprob: -16.00003433227539
    8. '
' → logprob: -16.25003433227539
    9. '   ' → logprob: -16.25003433227539
    10. '(p' → logprob: -17.25003433227539

Token 1023: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.170270353322849e-05
    2. '1' → logprob: -9.875061988830566
    3. 'p' → logprob: -11.875061988830566
    4. '[' → logprob: -12.750061988830566
    5. ' ' → logprob: -15.000061988830566
    6. '   ' → logprob: -16.87506103515625
    7. '```' → logprob: -16.87506103515625
    8. '
' → logprob: -17.25006103515625
    9. '(' → logprob: -17.62506103515625
    10. ' p' → logprob: -17.87506103515625

Token 1024: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7919279336929321
    2. '1' → logprob: -0.9169279336929321
    3. '[' → logprob: -1.9169279336929321
    4. '(' → logprob: -9.4169282913208
    5. '```' → logprob: -9.5419282913208
    6. '   ' → logprob: -10.6669282913208
    7. '-' → logprob: -11.1669282913208
    8. '
' → logprob: -12.4169282913208
    9. '``' → logprob: -12.4169282913208
    10. ' ' → logprob: -12.5419282913208

Token 1025: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.656383680412546e-05
    2. '1' → logprob: -10.125046730041504
    3. 'p' → logprob: -12.000046730041504
    4. ' ' → logprob: -15.750046730041504
    5. '```' → logprob: -17.125045776367188
    6. '   ' → logprob: -17.875045776367188
    7. 'dy' → logprob: -18.000045776367188
    8. 't' → logprob: -18.125045776367188
    9. '[' → logprob: -18.625045776367188
    10. '۰' → logprob: -18.687545776367188

Token 1026: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2911520004272461
    2. ')' → logprob: -1.416152000427246
    3. '   ' → logprob: -4.916152000427246
    4. '):
' → logprob: -6.541152000427246
    5. '       ' → logprob: -7.666152000427246
    6. ')return' → logprob: -8.416152000427246
    7. '           ' → logprob: -8.791152000427246
    8. 'def' → logprob: -9.291152000427246
    9. ')p' → logprob: -9.791152000427246
    10. ')t' → logprob: -10.041152000427246

Token 1027: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016294177621603012
    2. '   ' → logprob: -5.391294002532959
    3. '           ' → logprob: -5.516294002532959
    4. '[' → logprob: -6.391294002532959
    5. 'def' → logprob: -7.141294002532959
    6. '        
' → logprob: -7.266294002532959
    7. ')' → logprob: -7.266294002532959
    8. '(' → logprob: -7.516294002532959
    9. '
' → logprob: -7.766294002532959
    10. '```' → logprob: -7.891294002532959

Token 1028: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5485811233520508
    2. ' if' → logprob: -2.173581123352051
    3. 'def' → logprob: -2.548581123352051
    4. '   ' → logprob: -2.673581123352051
    5. ' return' → logprob: -3.048581123352051
    6. '           ' → logprob: -3.923581123352051
    7. ' t' → logprob: -3.923581123352051
    8. 't' → logprob: -4.173581123352051
    9. 'return' → logprob: -4.173581123352051
    10. ' def' → logprob: -4.548581123352051

Token 1029: ' abs' (ID: 8443)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4578990936279297
    2. 'abs' → logprob: -1.0828990936279297
    3. ' abs' → logprob: -3.8328990936279297
    4. ' dx' → logprob: -4.95789909362793
    5. 'math' → logprob: -10.70789909362793
    6. '(dx' → logprob: -10.70789909362793
    7. 'p' → logprob: -11.08289909362793
    8. '   ' → logprob: -11.45789909362793
    9. ' ' → logprob: -11.83289909362793
    10. '(abs' → logprob: -12.08289909362793

Token 1030: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -7.703443770878948e-06
    2. 'dx' → logprob: -12.250007629394531
    3. '(d' → logprob: -13.000007629394531
    4. '(' → logprob: -15.250007629394531
    5. '_dx' → logprob: -15.875007629394531
    6. '(p' → logprob: -16.50000762939453
    7. '(
' → logprob: -17.12500762939453
    8. '.dx' → logprob: -17.50000762939453
    9. 'Dx' → logprob: -17.75000762939453
    10. '```' → logprob: -17.87500762939453

Token 1031: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08728449791669846
    2. ')<' → logprob: -2.712284564971924
    3. ')>' → logprob: -4.087284564971924
    4. ')<=' → logprob: -9.087284088134766
    5. ' )' → logprob: -9.462284088134766
    6. '<p' → logprob: -9.962284088134766
    7. '<' → logprob: -10.087284088134766
    8. '[' → logprob: -10.462284088134766
    9. ')>=' → logprob: -10.837284088134766
    10. ')==' → logprob: -10.837284088134766

Token 1032: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.21620361506938934
    2. '>' → logprob: -1.8412035703659058
    3. ' <' → logprob: -3.8412036895751953
    4. '<p' → logprob: -5.091203689575195
    5. ' >' → logprob: -5.091203689575195
    6. ')<' → logprob: -7.341203689575195
    7. ')' → logprob: -7.966203689575195
    8. ')>' → logprob: -8.341203689575195
    9. '<div' → logprob: -9.341203689575195
    10. '```' → logprob: -9.341203689575195

Token 1033: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.038415420800447464
    2. '1' → logprob: -3.2884154319763184
    3. ' abs' → logprob: -8.78841495513916
    4. 'dy' → logprob: -8.78841495513916
    5. '(abs' → logprob: -10.03841495513916
    6. ' ' → logprob: -11.53841495513916
    7. '0' → logprob: -12.03841495513916
    8. '
' → logprob: -13.03841495513916
    9. '9' → logprob: -13.41341495513916
    10. '.abs' → logprob: -13.53841495513916

Token 1034: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.016045745462179184
    2. 'dy' → logprob: -4.141045570373535
    3. ' dy' → logprob: -12.516045570373535
    4. '(dx' → logprob: -13.141045570373535
    5. '0' → logprob: -13.266045570373535
    6. '1' → logprob: -13.641045570373535
    7. '   ' → logprob: -14.141045570373535
    8. '(' → logprob: -14.266045570373535
    9. '```' → logprob: -14.891045570373535
    10. '(
' → logprob: -15.141045570373535

Token 1035: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.41866585687967e-06
    2. 'dy' → logprob: -12.375008583068848
    3. 'x' → logprob: -12.625008583068848
    4. '
' → logprob: -15.000008583068848
    5. ' y' → logprob: -15.875008583068848
    6. '(y' → logprob: -16.25000762939453
    7. '[' → logprob: -17.00000762939453
    8. '{
' → logprob: -17.00000762939453
    9. 'p' → logprob: -17.12500762939453
    10. 'yf' → logprob: -17.25000762939453

Token 1036: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0025192999746650457
    2. '):' → logprob: -6.127519130706787
    3. ')' → logprob: -8.627519607543945
    4. '           ' → logprob: -10.377519607543945
    5. ' ):
' → logprob: -10.377519607543945
    6. ')==' → logprob: -10.877519607543945
    7. '):
' → logprob: -11.002519607543945
    8. ':
' → logprob: -11.377519607543945
    9. '):

' → logprob: -11.752519607543945
    10. '[' → logprob: -12.127519607543945

Token 1037: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6339383125305176
    2. ' return' → logprob: -1.5089383125305176
    3. '0' → logprob: -2.7589383125305176
    4. 'return' → logprob: -3.0089383125305176
    5. '               ' → logprob: -3.3839383125305176
    6. ' t' → logprob: -4.008938312530518
    7. '       ' → logprob: -4.008938312530518
    8. '   ' → logprob: -4.383938312530518
    9. ' p' → logprob: -5.133938312530518
    10. ')' → logprob: -5.383938312530518

Token 1038: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6988655924797058
    2. ' p' → logprob: -1.9488656520843506
    3. ' pts' → logprob: -2.0738656520843506
    4. 'return' → logprob: -2.5738656520843506
    5. ' dx' → logprob: -3.1988656520843506
    6. ' lambda' → logprob: -3.8238656520843506
    7. ' x' → logprob: -4.1988654136657715
    8. ' t' → logprob: -4.1988654136657715
    9. '0' → logprob: -4.6988654136657715
    10. 'x' → logprob: -5.0738654136657715

Token 1039: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.643134593963623
    2. 'abs' → logprob: -1.393134593963623
    3. ' abs' → logprob: -2.018134593963623
    4. ' dx' → logprob: -2.393134593963623
    5. '(dx' → logprob: -7.518134593963623
    6. 'p' → logprob: -7.518134593963623
    7. ' p' → logprob: -7.768134593963623
    8. '   ' → logprob: -8.893135070800781
    9. '(abs' → logprob: -9.768135070800781
    10. ' ' → logprob: -10.143135070800781

Token 1040: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2674817144870758
    2. '!=' → logprob: -2.017481803894043
    3. ' ==' → logprob: -2.642481803894043
    4. ' !=' → logprob: -3.517481803894043
    5. ')==' → logprob: -7.892481803894043
    6. '0' → logprob: -9.267481803894043
    7. ')!=' → logprob: -9.267481803894043
    8. ')' → logprob: -9.517481803894043
    9. '=' → logprob: -9.767481803894043
    10. '()==' → logprob: -10.517481803894043

Token 1041: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -18.12501335144043
    4. '```' → logprob: -18.75001335144043
    5. '
' → logprob: -19.00001335144043
    6. '   ' → logprob: -19.25001335144043
    7. '00' → logprob: -20.00001335144043
    8. '<|end|>' → logprob: -20.25001335144043
    9. '٠' → logprob: -20.75001335144043
    10. '.' → logprob: -21.00001335144043

Token 1042: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.187597274780273
    4. '۰' → logprob: -16.625097274780273
    5. '1' → logprob: -17.250097274780273
    6. '  ' → logprob: -17.875097274780273
    7. '  ' → logprob: -18.312597274780273
    8. '٠' → logprob: -18.625097274780273
    9. '
' → logprob: -18.875097274780273
    10. '০' → logprob: -18.937597274780273

Token 1043: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08571551740169525
    2. ':' → logprob: -3.2107155323028564
    3. ':return' → logprob: -3.2107155323028564
    4. '                   ' → logprob: -7.335715293884277
    5. 'return' → logprob: -8.210715293884277
    6. '0' → logprob: -8.710715293884277
    7. '               ' → logprob: -9.210715293884277
    8. '   ' → logprob: -9.460715293884277
    9. 'else' → logprob: -9.710715293884277
    10. '           ' → logprob: -9.960715293884277

Token 1044: '                   ' (ID: 699)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7724106907844543
    2. '0' → logprob: -1.1474106311798096
    3. ' return' → logprob: -2.5224106311798096
    4. '                   ' → logprob: -2.8974106311798096
    5. '               ' → logprob: -3.8974106311798096
    6. '/' → logprob: -4.147410869598389
    7. ':
' → logprob: -4.897410869598389
    8. '1' → logprob: -5.147410869598389
    9. '           ' → logprob: -5.147410869598389
    10. '   ' → logprob: -5.272410869598389

Token 1045: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15220491588115692
    2. 'return' (adapté à ' return') → logprob: -2.277204990386963
    3. ' return' → logprob: -4.652204990386963
    4. '1' → logprob: -4.652204990386963
    5. 't' → logprob: -4.902204990386963
    6. 'p' → logprob: -5.277204990386963
    7. ' ' → logprob: -6.152204990386963
    8. ' p' → logprob: -6.777204990386963
    9. 'abs' → logprob: -7.152204990386963
    10. 'dy' → logprob: -7.402204990386963

Token 1046: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003144896763842553
    2. 'float' → logprob: -8.375314712524414
    3. ' ' → logprob: -10.125314712524414
    4. 'p' → logprob: -10.375314712524414
    5. 't' → logprob: -12.500314712524414
    6. '1' → logprob: -12.625314712524414
    7. 'None' → logprob: -13.125314712524414
    8. ' float' → logprob: -13.375314712524414
    9. 'points' → logprob: -14.875314712524414
    10. ' p' → logprob: -15.125314712524414

Token 1047: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004810661543160677
    2. 'float' → logprob: -5.379810810089111
    3. 'p' → logprob: -8.754810333251953
    4. '1' → logprob: -11.754810333251953
    5. ' float' → logprob: -11.879810333251953
    6. 't' → logprob: -12.379810333251953
    7. ' ' → logprob: -12.504810333251953
    8. '-' → logprob: -13.379810333251953
    9. 'points' → logprob: -13.379810333251953
    10. 'None' → logprob: -13.504810333251953

Token 1048: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45187628269195557
    2. '0' → logprob: -1.3268762826919556
    3. 't' → logprob: -3.076876163482666
    4. ' t' → logprob: -4.451876163482666
    5. '(p' → logprob: -5.201876163482666
    6. '               ' → logprob: -5.326876163482666
    7. ' p' → logprob: -5.451876163482666
    8. 'else' → logprob: -5.576876163482666
    9. ' if' → logprob: -5.701876163482666
    10. 'p' → logprob: -5.701876163482666

Token 1049: '               ' (ID: 506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2748176157474518
    2. '               ' → logprob: -2.274817705154419
    3. '
' → logprob: -2.649817705154419
    4. '(p' → logprob: -4.52481746673584
    5. '                   ' → logprob: -4.64981746673584
    6. 't' → logprob: -4.89981746673584
    7. ' ' → logprob: -5.27481746673584
    8. '           ' → logprob: -5.27481746673584
    9. '(' → logprob: -5.39981746673584
    10. 'else' → logprob: -5.64981746673584

Token 1050: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2556120157241821
    2. ' t' → logprob: -1.6306120157241821
    3. ' p' → logprob: -1.7556120157241821
    4. 'return' (adapté à ' return') → logprob: -2.1306118965148926
    5. ' /' → logprob: -2.6306118965148926
    6. '0' → logprob: -2.7556118965148926
    7. 't' → logprob: -3.8806118965148926
    8. 'p' → logprob: -4.255611896514893
    9. '/' → logprob: -4.255611896514893
    10. '/p' → logprob: -5.130611896514893

Token 1051: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05030275136232376
    2. ' (' → logprob: -3.050302743911743
    3. '(t' → logprob: -7.300302982330322
    4. '(' → logprob: -7.925302982330322
    5. '(pt' → logprob: -8.175302505493164
    6. '(px' → logprob: -8.425302505493164
    7. '(points' → logprob: -9.675302505493164
    8. '(x' → logprob: -9.675302505493164
    9. '(dx' → logprob: -11.550302505493164
    10. '(point' → logprob: -11.800302505493164

Token 1052: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5154048800468445
    2. 'p' → logprob: -1.0154049396514893
    3. '(t' → logprob: -3.6404049396514893
    4. '(p' → logprob: -4.39040470123291
    5. 'pts' → logprob: -7.64040470123291
    6. ' t' → logprob: -7.76540470123291
    7. ' (' → logprob: -8.39040470123291
    8. 'pt' → logprob: -8.51540470123291
    9. ' p' → logprob: -8.76540470123291
    10. '(' → logprob: -8.89040470123291

Token 1053: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006402421277016401
    2. ')' → logprob: -8.250639915466309
    3. '0' → logprob: -8.625639915466309
    4. '.' → logprob: -9.250639915466309
    5. ')[' → logprob: -11.000639915466309
    6. '<|end|>' → logprob: -11.000639915466309
    7. '(' → logprob: -11.500639915466309
    8. ' [' → logprob: -11.625639915466309
    9. '-' → logprob: -12.000639915466309
    10. ' )' → logprob: -12.125639915466309

Token 1054: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -13.875001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '-' → logprob: -18.125001907348633
    7. '``' → logprob: -18.750001907348633
    8. '۰' → logprob: -18.750001907348633
    9. '.' → logprob: -18.875001907348633
    10. '<|end|>' → logprob: -19.437501907348633

Token 1055: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5685864686965942
    2. ' -' → logprob: -1.3185864686965942
    3. '-' → logprob: -1.8185864686965942
    4. '0' → logprob: -6.568586349487305
    5. '-p' → logprob: -6.693586349487305
    6. ')' → logprob: -7.193586349487305
    7. ' p' → logprob: -8.693586349487305
    8. 'p' → logprob: -9.443586349487305
    9. ' ' → logprob: -9.443586349487305
    10. ' [' → logprob: -10.568586349487305

Token 1056: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014164102263748646
    2. ' p' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. ')' → logprob: -16.264163970947266
    5. ' ' → logprob: -16.389163970947266
    6. ')p' → logprob: -16.514163970947266
    7. '    ' → logprob: -17.889163970947266
    8. '0' → logprob: -18.014163970947266
    9. '       ' → logprob: -18.014163970947266
    10. '           ' → logprob: -18.139163970947266

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. ' ' → logprob: -18.0
    4. '۰' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. 'o' → logprob: -20.875
    7. '{' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '০' → logprob: -21.375
    10. 'os' → logprob: -21.75

Token 1058: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.656383680412546e-05
    2. '0' → logprob: -10.000046730041504
    3. '```' → logprob: -14.875046730041504
    4. '][' → logprob: -15.625046730041504
    5. '[
' → logprob: -15.625046730041504
    6. '.' → logprob: -16.125045776367188
    7. ')' → logprob: -16.625045776367188
    8. ')[' → logprob: -17.000045776367188
    9. ' [' → logprob: -17.000045776367188
    10. '(' → logprob: -17.375045776367188

Token 1059: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -18.0
    4. '```' → logprob: -19.0
    5. '۰' → logprob: -20.375
    6. '   ' → logprob: -20.375
    7. 'x' → logprob: -20.5
    8. ')' → logprob: -20.625
    9. '{' → logprob: -21.5
    10. '``' → logprob: -22.25

Token 1060: '])/' (ID: 93047)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.12722110748291016
    2. ')' → logprob: -2.12722110748291
    3. ' )' → logprob: -8.62722110748291
    4. ')/(' → logprob: -9.25222110748291
    5. ')*' → logprob: -11.62722110748291
    6. '               ' → logprob: -12.62722110748291
    7. '0' → logprob: -12.87722110748291
    8. '                   ' → logprob: -13.50222110748291
    9. ')
' → logprob: -15.00222110748291
    10. '                       ' → logprob: -15.25222110748291

Token 1061: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.5716304410016164e-05
    2. ' dx' → logprob: -10.250035285949707
    3. '(dx' → logprob: -15.125035285949707
    4. 'float' → logprob: -18.875036239624023
    5. '_dx' → logprob: -18.875036239624023
    6. 'd' → logprob: -20.625036239624023
    7. '.dx' → logprob: -21.125036239624023
    8. '   ' → logprob: -21.250036239624023
    9. 'Dx' → logprob: -21.625036239624023
    10. '```' → logprob: -21.625036239624023

Token 1062: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3344157934188843
    2. '<|end|>' → logprob: -1.5844157934188843
    3. '       ' → logprob: -3.084415912628174
    4. ')' → logprob: -4.584415912628174
    5. '\n' → logprob: -4.584415912628174
    6. 'else' → logprob: -5.459415912628174
    7. '<|end|>' → logprob: -6.334415912628174
    8. ')
' → logprob: -6.709415912628174
    9. '\
' → logprob: -7.084415912628174
    10. '   ' → logprob: -7.334415912628174

Token 1063: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04471205174922943
    2. ')' → logprob: -4.044712066650391
    3. ')
' → logprob: -4.669712066650391
    4. '<|end|>' → logprob: -4.794712066650391
    5. '\n' → logprob: -5.544712066650391
    6. '  
' → logprob: -7.544712066650391
    7. '\
' → logprob: -7.544712066650391
    8. 'else' → logprob: -7.544712066650391
    9. '   ' → logprob: -7.919712066650391
    10. '(' → logprob: -8.04471206665039

Token 1064: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0611425638198853
    2. 'else' (adapté à ' else') → logprob: -1.0611425638198853
    3. ' else' → logprob: -1.5611425638198853
    4. 'return' → logprob: -3.3111424446105957
    5. '       ' → logprob: -3.4361424446105957
    6. ')
' → logprob: -4.186142444610596
    7. ')' → logprob: -5.436142444610596
    8. '           ' → logprob: -5.936142444610596
    9. ' return' → logprob: -6.186142444610596
    10. '               ' → logprob: -6.936142444610596

Token 1065: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07755313813686371
    2. '               ' → logprob: -2.8275530338287354
    3. 'return' → logprob: -4.2025532722473145
    4. '           ' → logprob: -8.452552795410156
    5. '            ' → logprob: -8.577552795410156
    6. ' (' → logprob: -10.577552795410156
    7. '                ' → logprob: -10.702552795410156
    8. '   ' → logprob: -10.952552795410156
    9. '    ' → logprob: -12.077552795410156
    10. '                   ' → logprob: -12.452552795410156

Token 1066: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3544154167175293
    2. 'return' → logprob: -1.3544154167175293
    3. '               ' → logprob: -3.2294154167175293
    4. '           ' → logprob: -7.729415416717529
    5. '            ' → logprob: -8.604415893554688
    6. '                ' → logprob: -9.854415893554688
    7. '                   ' → logprob: -10.229415893554688
    8. '              ' → logprob: -11.729415893554688
    9. '             ' → logprob: -12.354415893554688
    10. '```' → logprob: -12.729415893554688

Token 1067: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6931670904159546
    2. 'return' → logprob: -0.6931670904159546
    3. '(return' → logprob: -11.193166732788086
    4. '               ' → logprob: -12.443166732788086
    5. ' (' → logprob: -13.568166732788086
    6. '(' → logprob: -15.318166732788086
    7. '{return' → logprob: -15.693166732788086
    8. '                   ' → logprob: -16.193166732788086
    9. '```' → logprob: -16.568166732788086
    10. '                ' → logprob: -16.943166732788086

Token 1068: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.1639409214258194
    2. '(t' → logprob: -2.538940906524658
    3. '(d' → logprob: -3.413940906524658
    4. '0' → logprob: -4.038940906524658
    5. ' dy' → logprob: -4.038940906524658
    6. ' (' → logprob: -5.788940906524658
    7. '(p' → logprob: -7.663940906524658
    8. 't' → logprob: -8.163941383361816
    9. ' ' → logprob: -8.788941383361816
    10. 'd' → logprob: -10.163941383361816

Token 1069: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408178448677063
    2. '==' → logprob: -0.9740817546844482
    3. '0' → logprob: -13.849081993103027
    4. '==
' → logprob: -13.974081993103027
    5. ')==' → logprob: -14.099081993103027
    6. ' ' → logprob: -14.474081993103027
    7. ']==' → logprob: -14.474081993103027
    8. '==(' → logprob: -15.224081993103027
    9. '()==' → logprob: -15.349081993103027
    10. '=' → logprob: -15.599081993103027

Token 1070: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009755974635481834
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -17.134756088256836
    4. '=' → logprob: -18.134756088256836
    5. ' ' → logprob: -18.634756088256836
    6. '  ' → logprob: -18.759756088256836
    7. '<|end|>' → logprob: -19.509756088256836
    8. '```' → logprob: -19.697256088256836
    9. '[' → logprob: -19.947256088256836
    10. '...' → logprob: -20.072256088256836

Token 1071: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.625204086303711
    4. '  ' → logprob: -17.37520408630371
    5. '```' → logprob: -17.50020408630371
    6. '=' → logprob: -18.75020408630371
    7. '(' → logprob: -19.31270408630371
    8. '
' → logprob: -19.37520408630371
    9. '``' → logprob: -19.56270408630371
    10. '۰' → logprob: -19.68770408630371

Token 1072: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6617080569267273
    2. '                   ' → logprob: -1.161708116531372
    3. ':return' → logprob: -2.786708116531372
    4. '               ' → logprob: -3.161708116531372
    5. 'return' → logprob: -3.536708116531372
    6. ':' → logprob: -4.411707878112793
    7. '   ' → logprob: -4.786707878112793
    8. ' return' → logprob: -5.161707878112793
    9. '0' → logprob: -5.411707878112793
    10. ' ' → logprob: -7.036707878112793

Token 1073: '                   ' (ID: 699)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6058725714683533
    2. 'return' → logprob: -1.105872631072998
    3. ' return' → logprob: -2.730872631072998
    4. '               ' → logprob: -3.605872631072998
    5. '                   ' → logprob: -3.605872631072998
    6. ' ' → logprob: -5.605872631072998
    7. '   ' → logprob: -9.23087215423584
    8. '           ' → logprob: -10.10587215423584
    9. '	return' → logprob: -10.35587215423584
    10. '                ' → logprob: -10.48087215423584

Token 1074: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30667462944984436
    2. '0' → logprob: -1.806674599647522
    3. ' return' → logprob: -2.3066747188568115
    4. ' ' → logprob: -8.18167495727539
    5. ' (' → logprob: -10.93167495727539
    6. '(' → logprob: -11.80667495727539
    7. '{return' → logprob: -12.55667495727539
    8. '               ' → logprob: -12.80667495727539
    9. '(return' → logprob: -13.30667495727539
    10. '                   ' → logprob: -13.30667495727539

Token 1075: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034915000200271606
    2. ' ' → logprob: -3.409914970397949
    3. ' (' → logprob: -7.159914970397949
    4. '(t' → logprob: -7.659914970397949
    5. '(' → logprob: -10.90991497039795
    6. '   ' → logprob: -14.53491497039795
    7. 't' → logprob: -15.15991497039795
    8. ' t' → logprob: -15.65991497039795
    9. '  ' → logprob: -16.159915924072266
    10. '((' → logprob: -16.159915924072266

Token 1076: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007818726007826626
    2. '(t' → logprob: -7.750782012939453
    3. ' ' → logprob: -8.000782012939453
    4. ' (' → logprob: -11.625782012939453
    5. '(' → logprob: -12.000782012939453
    6. '(p' → logprob: -15.813282012939453
    7. 't' → logprob: -16.188282012939453
    8. '   ' → logprob: -16.375782012939453
    9. 'float' → logprob: -16.500782012939453
    10. '-' → logprob: -16.938282012939453

Token 1077: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2218732386827469
    2. '
' → logprob: -2.2218732833862305
    3. 'return' → logprob: -2.9718732833862305
    4. ' return' → logprob: -3.4718732833862305
    5. ' 
' → logprob: -5.8468732833862305
    6. '   ' → logprob: -6.2218732833862305
    7. '(return' → logprob: -6.7218732833862305
    8. '	return' → logprob: -7.8468732833862305
    9. '           ' → logprob: -8.09687328338623
    10. ' (' → logprob: -8.09687328338623

Token 1078: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0314578041434288
    2. 'return' → logprob: -4.031457901000977
    3. ' return' → logprob: -4.531457901000977
    4. '
' → logprob: -6.531457901000977
    5. '           ' → logprob: -8.281457901000977
    6. '   ' → logprob: -8.531457901000977
    7. '                   ' → logprob: -8.656457901000977
    8. '(return' → logprob: -9.656457901000977
    9. '			' → logprob: -9.781457901000977
    10. '       ' → logprob: -10.156457901000977

Token 1079: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12702879309654236
    2. ' return' → logprob: -2.127028703689575
    3. '               ' → logprob: -9.877028465270996
    4. '                   ' → logprob: -10.002028465270996
    5. '(return' → logprob: -13.002028465270996
    6. '```' → logprob: -14.252028465270996
    7. '                ' → logprob: -15.002028465270996
    8. '{return' → logprob: -15.502028465270996
    9. '                       ' → logprob: -15.752028465270996
    10. ':return' → logprob: -16.377029418945312

Token 1080: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38687169551849365
    2. '(t' → logprob: -1.1368716955184937
    3. ' ' → logprob: -14.886871337890625
    4. '(p' → logprob: -15.136871337890625
    5. '   ' → logprob: -16.886871337890625
    6. '(T' → logprob: -18.136871337890625
    7. '(' → logprob: -18.386871337890625
    8. '    ' → logprob: -20.011871337890625
    9. '  ' → logprob: -20.011871337890625
    10. ' ' → logprob: -20.136871337890625

Token 1081: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.04907825589179993
    2. 't' → logprob: -3.0490782260894775
    3. ' (' → logprob: -7.674078464508057
    4. ' t' → logprob: -10.674077987670898
    5. '(' → logprob: -14.049077987670898
    6. '   ' → logprob: -14.299077987670898
    7. ' ' → logprob: -14.799077987670898
    8. '```' → logprob: -15.549077987670898
    9. '`t' → logprob: -16.0490779876709
    10. '{' → logprob: -16.0490779876709

Token 1082: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.625000953674316
    3. '(' → logprob: -16.125001907348633
    4. '```' → logprob: -16.625001907348633
    5. '0' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '
' → logprob: -17.000001907348633
    9. '[
' → logprob: -17.375001907348633
    10. '...' → logprob: -18.125001907348633

Token 1083: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -10.875020027160645
    3. '0' → logprob: -14.500020027160645
    4. '
' → logprob: -14.625020027160645
    5. '```' → logprob: -15.750020027160645
    6. '   ' → logprob: -16.62502098083496
    7. '(' → logprob: -17.00002098083496
    8. '{' → logprob: -17.62502098083496
    9. ' ' → logprob: -17.75002098083496
    10. '...' → logprob: -18.50002098083496

Token 1084: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.011671427637338638
    2. ' -' → logprob: -4.886671543121338
    3. '-' → logprob: -5.511671543121338
    4. '[' → logprob: -11.13667106628418
    5. '-t' → logprob: -13.88667106628418
    6. ')-' → logprob: -14.38667106628418
    7. '-P' → logprob: -14.63667106628418
    8. '()-' → logprob: -15.13667106628418
    9. '-
' → logprob: -16.38667106628418
    10. '-п' → logprob: -16.38667106628418

Token 1085: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.130576806142926e-05
    2. ' p' → logprob: -10.375031471252441
    3. '0' → logprob: -16.875030517578125
    4. '<|end|>' → logprob: -19.125030517578125
    5. '```' → logprob: -19.250030517578125
    6. ' ' → logprob: -20.250030517578125
    7. 'a' → logprob: -20.375030517578125
    8. ')p' → logprob: -20.375030517578125
    9. '...' → logprob: -20.750030517578125
    10. '	p' → logprob: -21.125030517578125

Token 1086: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.250007629394531
    3. '1' → logprob: -13.500007629394531
    4. ' ' → logprob: -14.000007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '```' → logprob: -15.375007629394531
    7. 'p' → logprob: -17.12500762939453
    8. '  ' → logprob: -17.12500762939453
    9. '{' → logprob: -17.62500762939453
    10. '
' → logprob: -17.75000762939453

Token 1087: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032788405660539865
    2. '0' → logprob: -5.753278732299805
    3. ')' → logprob: -9.628278732299805
    4. ')[' → logprob: -11.378278732299805
    5. '```' → logprob: -11.628278732299805
    6. ')/' → logprob: -12.003278732299805
    7. '][' → logprob: -13.378278732299805
    8. '.' → logprob: -13.628278732299805
    9. '(' → logprob: -13.753278732299805
    10. '/' → logprob: -14.628278732299805

Token 1088: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011939727846765891
    2. '0' → logprob: -9.12511920928955
    3. '[' → logprob: -12.00011920928955
    4. '```' → logprob: -13.12511920928955
    5. '   ' → logprob: -14.68761920928955
    6. ' ' → logprob: -15.06261920928955
    7. '``' → logprob: -15.56261920928955
    8. '{' → logprob: -15.75011920928955
    9. '...' → logprob: -15.81261920928955
    10. '' → logprob: -16.000120162963867

Token 1089: '])/' (ID: 93047)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.0008127244072966278
    2. ')' → logprob: -7.250812530517578
    3. ')/(' → logprob: -9.250812530517578
    4. ' )' → logprob: -12.250812530517578
    5. ']/' → logprob: -14.125812530517578
    6. '])/' → logprob: -14.750812530517578
    7. '[' → logprob: -15.250812530517578
    8. '))/' → logprob: -15.750812530517578
    9. '0' → logprob: -16.625812530517578
    10. '   ' → logprob: -16.750812530517578

Token 1090: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0009153862483799458
    2. 'p' → logprob: -7.00091552734375
    3. ' dy' → logprob: -12.62591552734375
    4. 'py' → logprob: -15.37591552734375
    5. '
' → logprob: -16.00091552734375
    6. 'd' → logprob: -16.00091552734375
    7. ' p' → logprob: -16.87591552734375
    8. '0' → logprob: -16.87591552734375
    9. '   ' → logprob: -17.75091552734375
    10. '```' → logprob: -17.75091552734375

Token 1091: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3188283145427704
    2. '       ' → logprob: -1.3188283443450928
    3. '<|end|>' → logprob: -6.318828105926514
    4. ')' → logprob: -7.443828105926514
    5. '        
' → logprob: -7.568828105926514
    6. '   ' → logprob: -7.693828105926514
    7. '\n' → logprob: -7.818828105926514
    8. '```' → logprob: -8.068828582763672
    9. '
' → logprob: -8.568828582763672
    10. ')
' → logprob: -8.568828582763672

Token 1092: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01397791225463152
    2. ')' → logprob: -5.388978004455566
    3. '<|end|>' → logprob: -6.138978004455566
    4. '
' → logprob: -6.263978004455566
    5. '        
' → logprob: -6.263978004455566
    6. ',' → logprob: -7.138978004455566
    7. ')
' → logprob: -7.513978004455566
    8. ',
' → logprob: -7.888978004455566
    9. '```' → logprob: -8.013978004455566
    10. '   ' → logprob: -8.263978004455566

Token 1093: ' pts' (ID: 66515)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02555699460208416
    2. 'pts' (adapté à ' pts') → logprob: -4.275557041168213
    3. 'points' → logprob: -4.775557041168213
    4. '   ' → logprob: -6.400557041168213
    5. ' pts' → logprob: -7.400557041168213
    6. '        
' → logprob: -8.775556564331055
    7. ' points' → logprob: -8.775556564331055
    8. '```' → logprob: -9.150556564331055
    9. 'tokens' → logprob: -10.400556564331055
    10. '
' → logprob: -10.775556564331055

Token 1094: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011212279088795185
    2. '=' → logprob: -4.511212348937988
    3. '.' → logprob: -8.761212348937988
    4. 'sort' → logprob: -12.636212348937988
    5. '.=' → logprob: -12.636212348937988
    6. ' =' → logprob: -14.761212348937988
    7. '=.' → logprob: -15.511212348937988
    8. ' sort' → logprob: -15.511212348937988
    9. '=
' → logprob: -15.761212348937988
    10. '	sort' → logprob: -16.886211395263672

Token 1095: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -4.632542913896032e-05
    2. 'key' → logprob: -10.125046730041504
    3. '()' → logprob: -12.250046730041504
    4. ',key' → logprob: -14.125046730041504
    5. '(' → logprob: -15.000046730041504
    6. ' key' → logprob: -15.250046730041504
    7. '(
' → logprob: -16.625045776367188
    8. '(reverse' → logprob: -16.625045776367188
    9. '	key' → logprob: -18.000045776367188
    10. '()
' → logprob: -18.000045776367188

Token 1096: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012949148193001747
    2. '=lambda' → logprob: -4.512948989868164
    3. 'param' → logprob: -6.637948989868164
    4. '(param' → logprob: -7.637948989868164
    5. 'lambda' → logprob: -9.637948989868164
    6. ')param' → logprob: -11.512948989868164
    7. ':param' → logprob: -11.887948989868164
    8. '[param' → logprob: -12.387948989868164
    9. 'parameter' → logprob: -12.387948989868164
    10. '=
' → logprob: -12.512948989868164

Token 1097: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -6.873571692267433e-05
    2. 'lambda' → logprob: -9.750068664550781
    3. ' param' → logprob: -11.500068664550781
    4. '(param' → logprob: -15.750068664550781
    5. '[param' → logprob: -17.50006866455078
    6. 'parameter' → logprob: -17.75006866455078
    7. ')param' → logprob: -18.25006866455078
    8. 'params' → logprob: -18.37506866455078
    9. ' lambda' → logprob: -18.50006866455078
    10. '
' → logprob: -19.12506866455078

Token 1098: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029760675504803658
    2. ')
' → logprob: -3.5297605991363525
    3. ' )' → logprob: -12.029760360717773
    4. '   ' → logprob: -13.279760360717773
    5. ')
' → logprob: -13.779760360717773
    6. ' )
' → logprob: -14.404760360717773
    7. ')

' → logprob: -14.654760360717773
    8. ')#' → logprob: -15.654760360717773
    9. '       ' → logprob: -16.029760360717773
    10. '))' → logprob: -17.529760360717773

Token 1099: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4844324588775635
    2. '   ' → logprob: -1.7344324588775635
    3. ' for' → logprob: -1.9844324588775635
    4. '       ' → logprob: -2.7344324588775635
    5. '
' → logprob: -5.984432220458984
    6. '```' → logprob: -6.484432220458984
    7. '	for' → logprob: -8.234432220458984
    8. ',' → logprob: -8.609432220458984
    9. '    
' → logprob: -9.234432220458984
    10. '        
' → logprob: -9.484432220458984

Token 1100: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06838759034872055
    2. ' for' → logprob: -2.818387508392334
    3. 'prev' → logprob: -5.193387508392334
    4. '       ' → logprob: -7.818387508392334
    5. '   ' → logprob: -8.193387985229492
    6. ' prev' → logprob: -9.068387985229492
    7. '
' → logprob: -10.943387985229492
    8. '#' (adapté à ' #') → logprob: -11.818387985229492
    9. '```' → logprob: -11.943387985229492
    10. 'n' → logprob: -12.443387985229492

Token 1101: ' create' (ID: 2501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00041494169272482395
    2. 'prev' → logprob: -8.750414848327637
    3. ' for' → logprob: -8.875414848327637
    4. '       ' → logprob: -9.250414848327637
    5. '   ' → logprob: -10.875414848327637
    6. 'last' → logprob: -14.625414848327637
    7. 'm' → logprob: -14.625414848327637
    8. 'n' → logprob: -14.875414848327637
    9. '	for' → logprob: -16.125415802001953
    10. 'previous' → logprob: -16.625415802001953

Token 1102: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6283881068229675
    2. 'for' → logprob: -1.2533881664276123
    3. ' edges' → logprob: -2.3783881664276123
    4. 'prev' → logprob: -3.3783881664276123
    5. ' prev' → logprob: -3.7533881664276123
    6. 'edges' → logprob: -3.8783881664276123
    7. ' pairs' → logprob: -5.503387928009033
    8. 'segments' → logprob: -6.128387928009033
    9. ' segments' → logprob: -6.378387928009033
    10. 'pairs' → logprob: -7.628387928009033

Token 1103: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49091917276382446
    2. ' for' → logprob: -0.9909191727638245
    3. '       ' → logprob: -4.11591911315918
    4. 'prev' → logprob: -8.24091911315918
    5. '   ' → logprob: -10.11591911315918
    6. ' prev' → logprob: -10.49091911315918
    7. '
' → logprob: -11.24091911315918
    8. '	for' → logprob: -11.36591911315918
    9. 'n' → logprob: -11.61591911315918
    10. 'm' → logprob: -12.11591911315918

Token 1104: ' consecutive' (ID: 40840)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.002206401200965047
    2. ' pts' → logprob: -6.252206325531006
    3. 'points' → logprob: -8.252206802368164
    4. '(' → logprob: -12.002206802368164
    5. 'pairs' → logprob: -12.127206802368164
    6. '_pts' → logprob: -13.002206802368164
    7. '
' → logprob: -14.127206802368164
    8. ' points' → logprob: -14.377206802368164
    9. 'range' → logprob: -14.627206802368164
    10. 'pt' → logprob: -15.127206802368164

Token 1105: ' points' (ID: 5571)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.039814118295907974
    2. 'points' → logprob: -3.5398142337799072
    3. ' pts' → logprob: -4.664813995361328
    4. ' points' → logprob: -7.789813995361328
    5. '(' → logprob: -9.664813995361328
    6. 'pt' → logprob: -10.164813995361328
    7. 'pairs' → logprob: -10.164813995361328
    8. '_pts' → logprob: -10.914813995361328
    9. '   ' → logprob: -11.914813995361328
    10. '(points' → logprob: -12.664813995361328

Token 1106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3009113073348999
    2. ' for' → logprob: -1.6759113073349
    3. 'for' → logprob: -2.6759114265441895
    4. '   ' → logprob: -5.8009114265441895
    5. '
' → logprob: -7.4259114265441895
    6. '	for' → logprob: -9.550910949707031
    7. '        
' → logprob: -9.675910949707031
    8. '```' → logprob: -10.175910949707031
    9. '    
' → logprob: -10.800910949707031
    10. ',' → logprob: -10.925910949707031

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02186339721083641
    2. ' for' → logprob: -4.3968634605407715
    3. 'for' → logprob: -4.7718634605407715
    4. '   ' → logprob: -7.1468634605407715
    5. '	for' → logprob: -10.771862983703613
    6. '	' → logprob: -11.521862983703613
    7. '
' → logprob: -11.521862983703613
    8. '           ' → logprob: -12.146862983703613
    9. '```' → logprob: -12.396862983703613
    10. ' ' → logprob: -12.771862983703613

Token 1108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5954549908638
    2. 'for' (adapté à ' for') → logprob: -0.8454549908638
    3. '       ' → logprob: -3.9704549312591553
    4. 'prev' → logprob: -8.345455169677734
    5. ' prev' → logprob: -8.970455169677734
    6. '   ' → logprob: -9.720455169677734
    7. '```' → logprob: -11.095455169677734
    8. 'i' → logprob: -12.220455169677734
    9. '	for' → logprob: -12.970455169677734
    10. '           ' → logprob: -13.095455169677734

Token 1109: ' k' (ID: 372)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.39366790652275085
    2. ' i' → logprob: -2.1436679363250732
    3. 'j' → logprob: -2.2686679363250732
    4. 'i' → logprob: -2.6436679363250732
    5. ' k' → logprob: -4.518667697906494
    6. ' idx' → logprob: -4.518667697906494
    7. 'k' → logprob: -4.893667697906494
    8. 'idx' → logprob: -5.893667697906494
    9. ' _' → logprob: -6.768667697906494
    10. '_' → logprob: -8.643668174743652

Token 1110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1270327866077423
    2. 'in' → logprob: -2.12703275680542
    3. ' ' → logprob: -9.752033233642578
    4. '	in' → logprob: -10.252033233642578
    5. ' _' → logprob: -13.127033233642578
    6. '_in' → logprob: -13.252033233642578
    7. '   ' → logprob: -13.752033233642578
    8. '_' → logprob: -13.877033233642578
    9. ',' → logprob: -14.127033233642578
    10. ' i' → logprob: -14.252033233642578

Token 1111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245712742209435
    2. ' range' → logprob: -3.7732458114624023
    3. '0' → logprob: -16.398244857788086
    4. '(range' → logprob: -16.398244857788086
    5. '	range' → logprob: -17.148244857788086
    6. '
' → logprob: -18.148244857788086
    7. ' ' → logprob: -18.398244857788086
    8. 'in' → logprob: -18.648244857788086
    9. '   ' → logprob: -18.648244857788086
    10. 'k' → logprob: -18.898244857788086

Token 1112: '(len' (ID: 14990)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9872066378593445
    2. '(len' → logprob: -1.1122066974639893
    3. 'len' → logprob: -1.4872066974639893
    4. '(' → logprob: -3.6122066974639893
    5. 'k' → logprob: -3.7372066974639893
    6. '(k' → logprob: -3.9872066974639893
    7. ' len' → logprob: -6.61220645904541
    8. ' ' → logprob: -7.11220645904541
    9. ' k' → logprob: -7.61220645904541
    10. '0' → logprob: -7.73720645904541

Token 1113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(
' → logprob: -15.5
    3. ' (' → logprob: -16.75
    4. '(points' → logprob: -18.875
    5. '```' → logprob: -19.625
    6. 'pts' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. ')' → logprob: -20.375
    9. '`' → logprob: -20.625
    10. '(

' → logprob: -21.125

Token 1114: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.011392037384212017
    2. '(' → logprob: -4.511392116546631
    3. ' pts' → logprob: -8.636391639709473
    4. '_pts' → logprob: -9.386391639709473
    5. 'points' → logprob: -9.636391639709473
    6. 'Pts' → logprob: -12.011391639709473
    7. ')' → logprob: -12.386391639709473
    8. 'k' → logprob: -13.136391639709473
    9. '(points' → logprob: -13.511391639709473
    10. '-' → logprob: -14.261391639709473

Token 1115: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004795238375663757
    2. ' -' → logprob: -5.379795074462891
    3. '1' → logprob: -8.75479507446289
    4. ')' → logprob: -12.25479507446289
    5. '   ' → logprob: -13.00479507446289
    6. '[' → logprob: -13.12979507446289
    7. '()-' → logprob: -13.25479507446289
    8. '):
' → logprob: -13.62979507446289
    9. ')-' → logprob: -13.75479507446289
    10. '
' → logprob: -14.12979507446289

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '(' → logprob: -18.750001907348633
    4. '```' → logprob: -19.125001907348633
    5. 'pts' → logprob: -19.125001907348633
    6. 'points' → logprob: -19.500001907348633
    7. 'k' → logprob: -20.000001907348633
    8. ')' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '2' → logprob: -20.625001907348633

Token 1117: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11146978288888931
    2. '):' → logprob: -2.9864697456359863
    3. ':' → logprob: -3.6114697456359863
    4. ':
' → logprob: -4.111469745635986
    5. '   ' → logprob: -4.486469745635986
    6. '       ' → logprob: -9.111470222473145
    7. '```' → logprob: -9.986470222473145
    8. ' ' → logprob: -10.236470222473145
    9. ' ):
' → logprob: -10.486470222473145
    10. '():
' → logprob: -10.736470222473145

Token 1118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33301016688346863
    2. '       ' → logprob: -1.333010196685791
    3. ' u' → logprob: -5.083010196685791
    4. 'a' → logprob: -5.833010196685791
    5. ' a' → logprob: -5.958010196685791
    6. '   ' → logprob: -6.083010196685791
    7. '        
' → logprob: -6.333010196685791
    8. 'u' → logprob: -7.208010196685791
    9. ' p' → logprob: -7.583010196685791
    10. '```' → logprob: -7.708010196685791

Token 1119: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03797366842627525
    2. ' u' → logprob: -3.537973642349243
    3. 'a' (adapté à ' a') → logprob: -4.912973880767822
    4. '   ' → logprob: -7.787973880767822
    5. 'p' → logprob: -8.287973403930664
    6. ' a' → logprob: -9.412973403930664
    7. 'i' → logprob: -10.537973403930664
    8. ' p' → logprob: -11.037973403930664
    9. 'idx' → logprob: -11.287973403930664
    10. '    
' → logprob: -11.787973403930664

Token 1120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4626622796058655
    2. '=' → logprob: -1.7126622200012207
    3. '_idx' → logprob: -1.7126622200012207
    4. '_id' → logprob: -4.962662220001221
    5. 'idx' → logprob: -6.337662220001221
    6. 'id' → logprob: -8.337662696838379
    7. '_index' → logprob: -8.712662696838379
    8. 'p' → logprob: -9.337662696838379
    9. 'a' → logprob: -9.587662696838379
    10. '_' → logprob: -9.837662696838379

Token 1121: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0009213464800268412
    2. ' points' → logprob: -7.625921249389648
    3. 'pts' → logprob: -7.750921249389648
    4. '(points' → logprob: -14.000921249389648
    5. '   ' → logprob: -14.125921249389648
    6. '	points' → logprob: -14.875921249389648
    7. ' pts' → logprob: -15.000921249389648
    8. 'pt' → logprob: -15.250921249389648
    9. 'params' → logprob: -15.375921249389648
    10. '
' → logprob: -16.62592124938965

Token 1122: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.003773127682507038
    2. 'map' → logprob: -6.378773212432861
    3. '[' → logprob: -7.128773212432861
    4. 'pts' → logprob: -7.378773212432861
    5. 'points' → logprob: -8.128772735595703
    6. '_pts' → logprob: -8.253772735595703
    7. 'Map' → logprob: -10.503772735595703
    8. '_points' → logprob: -10.753772735595703
    9. 'pt' → logprob: -12.503772735595703
    10. '[
' → logprob: -12.878772735595703

Token 1123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014309820719063282
    2. 'pts' → logprob: -4.264309883117676
    3. '(' → logprob: -8.889309883117676
    4. ' pts' → logprob: -12.514309883117676
    5. '[
' → logprob: -13.264309883117676
    6. '_pts' → logprob: -14.014309883117676
    7. 'Pts' → logprob: -14.139309883117676
    8. '[(' → logprob: -14.389309883117676
    9. 'PTS' → logprob: -14.389309883117676
    10. '   ' → logprob: -16.26430892944336

Token 1124: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -9.253090865968261e-06
    2. ' pts' → logprob: -11.625009536743164
    3. '(' → logprob: -15.750009536743164
    4. 'pt' → logprob: -17.125009536743164
    5. '   ' → logprob: -18.125009536743164
    6. 'Pts' → logprob: -19.250009536743164
    7. '_pts' → logprob: -19.625009536743164
    8. 'points' → logprob: -20.000009536743164
    9. '
' → logprob: -20.875009536743164
    10. '[' → logprob: -21.000009536743164

Token 1125: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.08521217852830887
    2. '[' → logprob: -2.585212230682373
    3. '[a' → logprob: -6.460212230682373
    4. 'pts' → logprob: -6.585212230682373
    5. 'k' → logprob: -7.085212230682373
    6. 's' → logprob: -7.335212230682373
    7. '
' → logprob: -7.960212230682373
    8. '[
' → logprob: -8.085211753845215
    9. ']' → logprob: -8.335211753845215
    10. 'a' → logprob: -8.585211753845215

Token 1126: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.014189948327839375
    2. ']' → logprob: -4.264189720153809
    3. ' ]
' → logprob: -11.389189720153809
    4. ']
' → logprob: -11.639189720153809
    5. ']

' → logprob: -13.764189720153809
    6. ']+' → logprob: -13.889189720153809
    7. '   ' → logprob: -14.014189720153809
    8. '],' → logprob: -14.264189720153809
    9. 'a' → logprob: -14.264189720153809
    10. '];' → logprob: -14.514189720153809

Token 1127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7182944416999817
    2. ' 
' → logprob: -1.218294382095337
    3. '[' → logprob: -2.343294382095337
    4. '            
' → logprob: -3.093294382095337
    5. '    
' → logprob: -4.593294620513916
    6. 'a' → logprob: -4.843294620513916
    7. ' ' → logprob: -4.843294620513916
    8. '   
' → logprob: -4.843294620513916
    9. ' =' → logprob: -5.218294620513916
    10. '       ' → logprob: -5.468294620513916

Token 1128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.004104285035282373
    2. ' b' → logprob: -5.504104137420654
    3. 'a' → logprob: -10.879104614257812
    4. '           ' → logprob: -12.129104614257812
    5. '   ' → logprob: -14.254104614257812
    6. '	b' → logprob: -14.629104614257812
    7. '       ' → logprob: -14.879104614257812
    8. ' a' → logprob: -17.129104614257812
    9. '    ' → logprob: -17.254104614257812
    10. '               ' → logprob: -17.629104614257812

Token 1129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020752996206284
    2. ' =' → logprob: -2.350207567214966
    3. '=
' → logprob: -14.475207328796387
    4. ' =
' → logprob: -15.600207328796387
    5. 'a' → logprob: -16.100208282470703
    6. 'points' → logprob: -17.350208282470703
    7. ' points' → logprob: -19.100208282470703
    8. ',' → logprob: -19.100208282470703
    9. '=

' → logprob: -19.225208282470703
    10. ')' → logprob: -19.350208282470703

Token 1130: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07889099419116974
    2. ' points' → logprob: -2.5788910388946533
    3. '(points' → logprob: -14.453890800476074
    4. 'oints' → logprob: -15.203890800476074
    5. '	points' → logprob: -15.453890800476074
    6. 'point' → logprob: -16.07889175415039
    7. 'a' → logprob: -16.82889175415039
    8. ' ' → logprob: -18.20389175415039
    9. '.points' → logprob: -18.45389175415039
    10. '   ' → logprob: -18.57889175415039

Token 1131: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.600714161526412e-05
    2. 'map' → logprob: -9.750076293945312
    3. '[' → logprob: -11.875076293945312
    4. 'a' → logprob: -12.500076293945312
    5. '[a' → logprob: -13.250076293945312
    6. '_points' → logprob: -13.375076293945312
    7. '_maps' → logprob: -13.375076293945312
    8. 'm' → logprob: -14.250076293945312
    9. 's' → logprob: -15.000076293945312
    10. 'points' → logprob: -15.750076293945312

Token 1132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. 'pts' → logprob: -12.500007629394531
    3. '[
' → logprob: -12.875007629394531
    4. '[(' → logprob: -14.750007629394531
    5. ' [' → logprob: -15.250007629394531
    6. '```' → logprob: -16.62500762939453
    7. '(' → logprob: -16.75000762939453
    8. '{' → logprob: -17.75000762939453
    9. ' pts' → logprob: -17.75000762939453
    10. 'Pts' → logprob: -18.12500762939453

Token 1133: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -7.703443770878948e-06
    2. ' pts' → logprob: -12.375007629394531
    3. '[' → logprob: -12.625007629394531
    4. 'points' → logprob: -15.875007629394531
    5. '(' → logprob: -16.37500762939453
    6. '_pts' → logprob: -19.37500762939453
    7. 'nts' → logprob: -19.62500762939453
    8. 'pt' → logprob: -19.62500762939453
    9. 'ts' → logprob: -20.00000762939453
    10. 'ots' → logprob: -20.37500762939453

Token 1134: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03368765860795975
    2. 'pts' → logprob: -3.4086875915527344
    3. ' pts' → logprob: -11.783687591552734
    4. '_pts' → logprob: -11.908687591552734
    5. 'k' → logprob: -12.033687591552734
    6. '[
' → logprob: -12.783687591552734
    7. 's' → logprob: -12.908687591552734
    8. '{' → logprob: -13.033687591552734
    9. '(' → logprob: -13.158687591552734
    10. '```' → logprob: -13.283687591552734

Token 1135: '+' (ID: 10)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0061554741114377975
    2. '+' → logprob: -5.131155490875244
    3. 'k' → logprob: -8.881155014038086
    4. '+k' → logprob: -9.506155014038086
    5. '
' → logprob: -12.506155014038086
    6. '(k' → logprob: -12.756155014038086
    7. '[' → logprob: -13.381155014038086
    8. '[
' → logprob: -13.381155014038086
    9. '+
' → logprob: -13.506155014038086
    10. ']' → logprob: -14.006155014038086

Token 1136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014218121767044
    2. 'k' → logprob: -1.701421856880188
    3. ' ' → logprob: -12.201421737670898
    4. '0' → logprob: -13.701421737670898
    5. ' k' → logprob: -14.201421737670898
    6. '```' → logprob: -14.576421737670898
    7. '
' → logprob: -14.826421737670898
    8. '   ' → logprob: -15.076421737670898
    9. '{k' → logprob: -15.451421737670898
    10. '[k' → logprob: -16.2014217376709

Token 1137: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47468090057373047
    2. ']' → logprob: -0.9746809005737305
    3. ')]' → logprob: -7.8496809005737305
    4. ')]
' → logprob: -9.59968090057373
    5. ']
' → logprob: -10.22468090057373
    6. '           ' → logprob: -10.59968090057373
    7. ']:
' → logprob: -10.84968090057373
    8. ')' → logprob: -11.34968090057373
    9. ']

' → logprob: -11.47468090057373
    10. ')
' → logprob: -11.47468090057373

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07168827950954437
    2. '       ' → logprob: -2.821688175201416
    3. '   ' → logprob: -4.821688175201416
    4. ' if' → logprob: -7.071688175201416
    5. '
' → logprob: -8.571688652038574
    6. '               ' → logprob: -8.821688652038574
    7. '```' → logprob: -9.321688652038574
    8. '[' → logprob: -10.071688652038574
    9. ' edges' → logprob: -10.071688652038574
    10. '    
' → logprob: -10.196688652038574

Token 1139: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.007086403202265501
    2. ' graph' → logprob: -5.382086277008057
    3. 'if' (adapté à ' if') → logprob: -6.757086277008057
    4. '   ' → logprob: -7.007086277008057
    5. 'for' → logprob: -8.382086753845215
    6. 'edges' → logprob: -9.507086753845215
    7. ' if' → logprob: -10.007086753845215
    8. '           ' → logprob: -11.007086753845215
    9. '
' → logprob: -11.382086753845215
    10. '	graph' → logprob: -11.632086753845215

Token 1140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002503009280189872
    2. ' a' → logprob: -6.002502918243408
    3. '(a' → logprob: -10.627503395080566
    4. '   ' → logprob: -13.502503395080566
    5. ' (' → logprob: -13.627503395080566
    6. '(' → logprob: -15.627503395080566
    7. '	a' → logprob: -15.627503395080566
    8. ' ' → logprob: -16.12750244140625
    9. 'graph' → logprob: -17.00250244140625
    10. 'b' → logprob: -18.12750244140625

Token 1141: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.010450361296534538
    2. 'not' → logprob: -4.76045036315918
    3. ' !=' → logprob: -6.63545036315918
    4. '!=' → logprob: -7.76045036315918
    5. ' in' → logprob: -9.63545036315918
    6. ' no' → logprob: -11.63545036315918
    7. ' ' → logprob: -12.01045036315918
    8. 'in' → logprob: -12.13545036315918
    9. ')' → logprob: -13.01045036315918
    10. ',' → logprob: -13.76045036315918

Token 1142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741084575653076
    2. 'in' → logprob: -0.9741084575653076
    3. 'graph' → logprob: -10.974108695983887
    4. 'not' → logprob: -12.099108695983887
    5. ' not' → logprob: -12.724108695983887
    6. ' graph' → logprob: -12.974108695983887
    7. 'to' → logprob: -14.474108695983887
    8. ')' → logprob: -14.599108695983887
    9. '```' → logprob: -14.599108695983887
    10. '   ' → logprob: -14.849108695983887

Token 1143: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.006721178535372019
    2. 'edges' → logprob: -5.006721019744873
    3. ' graph' → logprob: -12.131721496582031
    4. ' edges' → logprob: -15.381721496582031
    5. 'graphs' → logprob: -16.38172149658203
    6. '	graph' → logprob: -16.75672149658203
    7. '(graph' → logprob: -17.13172149658203
    8. 'points' → logprob: -18.13172149658203
    9. '
' → logprob: -18.13172149658203
    10. 'edge' → logprob: -18.38172149658203

Token 1144: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2532634437084198
    2. ':' → logprob: -1.5032634735107422
    3. '[' → logprob: -7.003263473510742
    4. '   ' → logprob: -8.628263473510742
    5. '.setdefault' → logprob: -9.503263473510742
    6. ']:
' → logprob: -10.253263473510742
    7. ' :
' → logprob: -10.753263473510742
    8. '       ' → logprob: -10.753263473510742
    9. '[a' → logprob: -11.253263473510742
    10. ']' → logprob: -11.503263473510742

Token 1145: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0559903383255005
    2. '[' → logprob: -1.3059903383255005
    3. '       ' → logprob: -1.5559903383255005
    4. '           ' → logprob: -2.680990219116211
    5. ':' → logprob: -2.930990219116211
    6. '               ' → logprob: -3.930990219116211
    7. '   ' → logprob: -4.055990219116211
    8. '.setdefault' → logprob: -6.180990219116211
    9. '```' → logprob: -6.430990219116211
    10. '                       ' → logprob: -6.805990219116211

Token 1146: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.07890091091394424
    2. 'graph' (adapté à ' graph') → logprob: -2.5789008140563965
    3. '	graph' → logprob: -11.453901290893555
    4. '(graph' → logprob: -14.578901290893555
    5. '```' → logprob: -17.203901290893555
    6. '_graph' → logprob: -17.203901290893555
    7. '.graph' → logprob: -17.828901290893555
    8. '    ' → logprob: -19.078901290893555
    9. 'Graph' → logprob: -19.078901290893555
    10. ' 
' → logprob: -19.203901290893555

Token 1147: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00011534435179783031
    2. '[' → logprob: -10.125115394592285
    3. '```' → logprob: -10.250115394592285
    4. '=' → logprob: -10.750115394592285
    5. 'a' → logprob: -11.500115394592285
    6. '=a' → logprob: -13.250115394592285
    7. '   ' → logprob: -13.625115394592285
    8. ' [' → logprob: -13.750115394592285
    9. '=[' → logprob: -13.750115394592285
    10. '\[' → logprob: -13.750115394592285

Token 1148: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07718075811862946
    2. ']=' → logprob: -3.077180862426758
    3. ']' → logprob: -3.577180862426758
    4. ' =' → logprob: -8.452180862426758
    5. ']={' → logprob: -11.702180862426758
    6. '=
' → logprob: -12.202180862426758
    7. '   ' → logprob: -12.577180862426758
    8. '={}' → logprob: -13.702180862426758
    9. '=[]' → logprob: -14.702180862426758
    10. ')=' → logprob: -14.827180862426758

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.318681188422488e-05
    2. ' =' → logprob: -11.25001335144043
    3. '=
' → logprob: -16.25001335144043
    4. '={}' → logprob: -16.87501335144043
    5. '=set' → logprob: -17.62501335144043
    6. '={' → logprob: -17.75001335144043
    7. '=[]' → logprob: -18.12501335144043
    8. ']=' → logprob: -19.12501335144043
    9. '=

' → logprob: -20.00001335144043
    10. ']' → logprob: -21.25001335144043

Token 1150: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31400611996650696
    2. 'set' → logprob: -1.3140060901641846
    3. '{}' → logprob: -7.314006328582764
    4. '[]
' → logprob: -9.814005851745605
    5. ' set' → logprob: -11.314005851745605
    6. ' []' → logprob: -11.689005851745605
    7. 'dict' → logprob: -13.689005851745605
    8. '[]}' → logprob: -13.939005851745605
    9. '{' → logprob: -14.439005851745605
    10. '[])' → logprob: -16.564006805419922

Token 1151: '           ' (ID: 352)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5698057413101196
    2. '           ' → logprob: -1.1948057413101196
    3. 'graph' → logprob: -2.31980562210083
    4. '               ' → logprob: -3.56980562210083
    5. '	graph' → logprob: -5.81980562210083
    6. '```' → logprob: -6.81980562210083
    7. '       ' → logprob: -7.81980562210083
    8. '   ' → logprob: -8.319806098937988
    9. '(graph' → logprob: -8.569806098937988
    10. '                   ' → logprob: -9.319806098937988

Token 1152: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.008628997951745987
    2. ' graph' → logprob: -4.758628845214844
    3. '	graph' → logprob: -11.633628845214844
    4. '           ' → logprob: -12.133628845214844
    5. '```' → logprob: -16.258628845214844
    6. '   ' → logprob: -16.258628845214844
    7. '               ' → logprob: -17.133628845214844
    8. '(graph' → logprob: -17.133628845214844
    9. '       ' → logprob: -17.633628845214844
    10. '``' → logprob: -18.508628845214844

Token 1153: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002341161947697401
    2. ' b' → logprob: -6.502341270446777
    3. 'a' → logprob: -7.877341270446777
    4. 'graph' → logprob: -7.877341270446777
    5. '(b' → logprob: -10.377341270446777
    6. 'points' → logprob: -11.252341270446777
    7. '(a' → logprob: -11.502341270446777
    8. ' graph' → logprob: -12.002341270446777
    9. ' (' → logprob: -12.127341270446777
    10. ' a' → logprob: -12.502341270446777

Token 1154: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00873216800391674
    2. 'not' → logprob: -4.758732318878174
    3. ' in' → logprob: -9.258731842041016
    4. 'in' → logprob: -11.508731842041016
    5. '	not' → logprob: -12.633731842041016
    6. ']' → logprob: -13.133731842041016
    7. ')' → logprob: -13.508731842041016
    8. 'a' → logprob: -13.633731842041016
    9. ' ' → logprob: -14.008731842041016
    10. ' n' → logprob: -14.133731842041016

Token 1155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2813439965248108
    2. 'in' → logprob: -1.406343936920166
    3. 'graph' → logprob: -8.781344413757324
    4. ' graph' → logprob: -10.656344413757324
    5. '
' → logprob: -12.781344413757324
    6. '(graph' → logprob: -13.406344413757324
    7. '  ' → logprob: -13.406344413757324
    8. ' ' → logprob: -13.406344413757324
    9. '_graph' → logprob: -13.406344413757324
    10. '[' → logprob: -13.531344413757324

Token 1156: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.5332478142227046e-05
    2. ' graph' → logprob: -11.125015258789062
    3. '	graph' → logprob: -15.000015258789062
    4. '(graph' → logprob: -17.375015258789062
    5. 'points' → logprob: -17.875015258789062
    6. 'graphs' → logprob: -18.250015258789062
    7. '
' → logprob: -18.500015258789062
    8. '   ' → logprob: -18.625015258789062
    9. '[]' → logprob: -19.375015258789062
    10. 'graphql' → logprob: -20.000015258789062

Token 1157: ':
' (ID: 734)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.18844664096832275
    2. ':
' → logprob: -1.8134466409683228
    3. ':' → logprob: -5.688446521759033
    4. '           ' → logprob: -6.563446521759033
    5. 'a' → logprob: -6.563446521759033
    6. '[' → logprob: -6.688446521759033
    7. '   ' → logprob: -7.688446521759033
    8. '               ' → logprob: -7.938446521759033
    9. '       ' → logprob: -8.813446998596191
    10. ' a' → logprob: -9.938446998596191

Token 1158: '               ' (ID: 506)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -7.707997428951785e-05
    2. 'a' → logprob: -11.000077247619629
    3. ' graph' → logprob: -11.125077247619629
    4. '               ' → logprob: -11.125077247619629
    5. '[a' → logprob: -11.250077247619629
    6. '           ' → logprob: -11.750077247619629
    7. '[' → logprob: -12.125077247619629
    8. '	graph' → logprob: -12.750077247619629
    9. '(graph' → logprob: -13.625077247619629
    10. '       ' → logprob: -15.250077247619629

Token 1159: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.20152559876441956
    2. ' graph' → logprob: -1.7015255689620972
    3. '	graph' → logprob: -9.451525688171387
    4. '(graph' → logprob: -10.951525688171387
    5. '               ' → logprob: -11.326525688171387
    6. '           ' → logprob: -13.201525688171387
    7. '.graph' → logprob: -14.201525688171387
    8. '_graph' → logprob: -14.451525688171387
    9. 'graphs' → logprob: -14.826525688171387
    10. 'graphql' → logprob: -15.826525688171387

Token 1160: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0003497666330076754
    2. 'b' → logprob: -8.000349998474121
    3. '[a' → logprob: -11.500349998474121
    4. '{' → logprob: -12.875349998474121
    5. '=b' → logprob: -14.750349998474121
    6. '           ' → logprob: -15.125349998474121
    7. '   ' → logprob: -15.875349998474121
    8. '
' → logprob: -16.000349044799805
    9. '{
' → logprob: -16.000349044799805
    10. 'a' → logprob: -16.375349044799805

Token 1161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17094069719314575
    2. ']=' → logprob: -2.295940637588501
    3. ']:' → logprob: -4.17094087600708
    4. ']:
' → logprob: -4.42094087600708
    5. '<|end|>' → logprob: -4.79594087600708
    6. '=' → logprob: -5.17094087600708
    7. '           ' → logprob: -5.42094087600708
    8. ':' → logprob: -6.17094087600708
    9. ' =' → logprob: -6.29594087600708
    10. ']+=' → logprob: -6.92094087600708

Token 1162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324839122593403
    2. ' =' → logprob: -3.7732484340667725
    3. '=
' → logprob: -13.273248672485352
    4. '=[]' → logprob: -14.273248672485352
    5. ']' → logprob: -16.14824867248535
    6. '   ' → logprob: -16.14824867248535
    7. ']=' → logprob: -16.64824867248535
    8. '[' → logprob: -17.14824867248535
    9. '.append' → logprob: -17.14824867248535
    10. ')' → logprob: -17.27324867248535

Token 1163: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015334829688072205
    2. '[]
' → logprob: -4.265334606170654
    3. ' []' → logprob: -6.765334606170654
    4. ' []
' → logprob: -11.015335083007812
    5. '[]

' → logprob: -14.640335083007812
    6. '[])' → logprob: -14.765335083007812
    7. '[]}' → logprob: -16.140335083007812
    8. '[])
' → logprob: -16.390335083007812
    9. '[' → logprob: -17.390335083007812
    10. '=[]' → logprob: -17.640335083007812

Token 1164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008941899868659675
    2. '```' → logprob: -8.125894546508789
    3. ' graph' → logprob: -8.375894546508789
    4. '	graph' → logprob: -9.125894546508789
    5. '   ' → logprob: -9.250894546508789
    6. 'graph' → logprob: -9.500894546508789
    7. '	       ' → logprob: -10.500894546508789
    8. '		' → logprob: -10.875894546508789
    9. '       ' → logprob: -11.125894546508789
    10. '``' → logprob: -11.250894546508789

Token 1165: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.04885781928896904
    2. ' graph' → logprob: -3.0488579273223877
    3. '	graph' → logprob: -8.548857688903809
    4. '           ' → logprob: -9.798857688903809
    5. '   ' → logprob: -11.048857688903809
    6. '       ' → logprob: -12.298857688903809
    7. '
' → logprob: -15.298857688903809
    8. '(graph' → logprob: -15.423857688903809
    9. '```' → logprob: -16.173858642578125
    10. '.graph' → logprob: -17.798858642578125

Token 1166: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.8624639324116288e-06
    2. 'a' → logprob: -13.375001907348633
    3. '[' → logprob: -15.375001907348633
    4. '(a' → logprob: -21.000001907348633
    5. ' [' → logprob: -21.125001907348633
    6. '<a' → logprob: -21.500001907348633
    7. '[b' → logprob: -21.500001907348633
    8. '[A' → logprob: -21.625001907348633
    9. ' a' → logprob: -21.750001907348633
    10. '	a' → logprob: -22.000001907348633

Token 1167: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.017621612176299095
    2. '].' → logprob: -4.2676215171813965
    3. '.' → logprob: -5.7676215171813965
    4. ' .' → logprob: -8.392621994018555
    5. '.ap' → logprob: -10.017621994018555
    6. '.app' → logprob: -10.392621994018555
    7. '[a' → logprob: -12.142621994018555
    8. '.a' → logprob: -12.392621994018555
    9. '.setdefault' → logprob: -12.642621994018555
    10. ').' → logprob: -13.017621994018555

Token 1168: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -8.061054359131958e-06
    2. '.append' → logprob: -11.750007629394531
    3. ' append' → logprob: -16.25000762939453
    4. 'app' → logprob: -18.50000762939453
    5. '_append' → logprob: -20.87500762939453
    6. 'appen' → logprob: -21.37500762939453
    7. 'appe' → logprob: -21.75000762939453
    8. 'Append' → logprob: -22.75000762939453
    9. '	append' → logprob: -22.75000762939453
    10. 'insert' → logprob: -23.37500762939453

Token 1169: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141635835170746
    2. '(b' → logprob: -1.7014163732528687
    3. ' b' → logprob: -12.701416015625
    4. '(' → logprob: -16.701416015625
    5. '	b' → logprob: -17.451416015625
    6. '(
' → logprob: -18.576416015625
    7. ' (' → logprob: -19.076416015625
    8. ')b' → logprob: -19.701416015625
    9. ',b' → logprob: -20.201416015625
    10. '((' → logprob: -20.576416015625

Token 1170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014526128768921
    2. ')
' → logprob: -1.701452612876892
    3. '           ' → logprob: -10.576452255249023
    4. ' )' → logprob: -12.826452255249023
    5. '       ' → logprob: -13.076452255249023
    6. '<|end|>' → logprob: -13.076452255249023
    7. ' )
' → logprob: -13.201452255249023
    8. '),' → logprob: -13.576452255249023
    9. ')
' → logprob: -13.701452255249023
    10. '   ' → logprob: -14.201452255249023

Token 1171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19997619092464447
    2. '   ' → logprob: -2.5749762058258057
    3. '```' → logprob: -2.8249762058258057
    4. '       ' → logprob: -3.4499762058258057
    5. '``' → logprob: -5.574975967407227
    6. '
' → logprob: -5.699975967407227
    7. '[' → logprob: -5.824975967407227
    8. '  
' → logprob: -7.699975967407227
    9. '    
' → logprob: -7.699975967407227
    10. '            
' → logprob: -7.824975967407227

Token 1172: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.012956916354596615
    2. ' graph' → logprob: -4.5129570960998535
    3. '	graph' → logprob: -6.2629570960998535
    4. '   ' → logprob: -14.262956619262695
    5. '           ' → logprob: -14.512956619262695
    6. '(graph' → logprob: -15.012956619262695
    7. '.graph' → logprob: -16.512956619262695
    8. '       ' → logprob: -16.887956619262695
    9. 'graphs' → logprob: -17.137956619262695
    10. '_graph' → logprob: -17.387956619262695

Token 1173: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00047511752927675843
    2. 'a' → logprob: -8.50047492980957
    3. '[b' → logprob: -8.62547492980957
    4. '[' → logprob: -9.37547492980957
    5. '[
' → logprob: -12.25047492980957
    6. '```' → logprob: -14.37547492980957
    7. '[u' → logprob: -15.00047492980957
    8. '][' → logprob: -15.62547492980957
    9. '[A' → logprob: -15.75047492980957
    10. '	a' → logprob: -15.87547492980957

Token 1174: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10067836195230484
    2. '].' → logprob: -3.1006784439086914
    3. '.append' → logprob: -3.1006784439086914
    4. ').' → logprob: -5.225678443908691
    5. ' .' → logprob: -9.350678443908691
    6. '<|end|>' → logprob: -9.350678443908691
    7. '>.' → logprob: -9.975678443908691
    8. '}.' → logprob: -10.350678443908691
    9. '.setdefault' → logprob: -10.350678443908691
    10. '.Append' → logprob: -10.725678443908691

Token 1175: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.8624639324116288e-06
    2. '.append' → logprob: -13.750001907348633
    3. 'app' → logprob: -14.750001907348633
    4. ' append' → logprob: -15.000001907348633
    5. 'appen' → logprob: -16.500001907348633
    6. 'add' → logprob: -18.500001907348633
    7. '	append' → logprob: -20.375001907348633
    8. '_append' → logprob: -20.750001907348633
    9. 'appe' → logprob: -21.500001907348633
    10. 'a' → logprob: -21.625001907348633

Token 1176: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012403888104017824
    2. 'a' → logprob: -9.000123977661133
    3. '(' → logprob: -15.000123977661133
    4. '(
' → logprob: -15.375123977661133
    5. ' (' → logprob: -19.750123977661133
    6. '```' → logprob: -21.500123977661133
    7. '(A' → logprob: -22.000123977661133
    8. ')a' → logprob: -22.500123977661133
    9. '((' → logprob: -23.000123977661133
    10. ' a' → logprob: -23.125123977661133

Token 1177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005123700015246868
    2. '<|end|>' → logprob: -5.380123615264893
    3. '       ' → logprob: -8.63012409210205
    4. ']' → logprob: -9.25512409210205
    5. '   ' → logprob: -9.63012409210205
    6. '<|end|>' → logprob: -9.75512409210205
    7. ')
' → logprob: -10.50512409210205
    8. '           ' → logprob: -10.88012409210205
    9. '
' → logprob: -11.25512409210205
    10. '}' → logprob: -11.75512409210205

Token 1178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6556620597839355
    2. '<|end|>' → logprob: -0.9056620597839355
    3. '
' → logprob: -3.2806620597839355
    4. 'return' → logprob: -4.4056620597839355
    5. '    
' → logprob: -4.5306620597839355
    6. '	return' → logprob: -4.9056620597839355
    7. ' return' → logprob: -6.4056620597839355
    8. '<|end|>' → logprob: -6.5306620597839355
    9. '```' → logprob: -6.7806620597839355
    10. '\n' → logprob: -7.4056620597839355

Token 1179: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4760268032550812
    2. 'return' (adapté à ' return') → logprob: -1.2260267734527588
    3. ' return' → logprob: -2.476026773452759
    4. ' ' → logprob: -6.851027011871338
    5. '	return' → logprob: -9.47602653503418
    6. '```' → logprob: -10.22602653503418
    7. '
' → logprob: -11.60102653503418
    8. '       ' → logprob: -11.85102653503418
    9. '  ' → logprob: -11.85102653503418
    10. 'def' → logprob: -12.10102653503418

Token 1180: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.20529867708683014
    2. 'graph' → logprob: -1.705298662185669
    3. '(points' → logprob: -5.705298900604248
    4. ' points' → logprob: -8.20529842376709
    5. '(graph' → logprob: -8.33029842376709
    6. ' graph' → logprob: -10.45529842376709
    7. '(' → logprob: -12.95529842376709
    8. 'point' → logprob: -13.33029842376709
    9. 'graphs' → logprob: -14.08029842376709
    10. ' (' → logprob: -14.58029842376709

Token 1181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015253332676365972
    2. ',
' → logprob: -6.501525402069092
    3. ' ,' → logprob: -11.876524925231934
    4. '<|end|>' → logprob: -12.876524925231934
    5. 'graph' → logprob: -13.376524925231934
    6. ',n' → logprob: -13.501524925231934
    7. '```' → logprob: -13.751524925231934
    8. '
' → logprob: -13.876524925231934
    9. ',line' → logprob: -14.126524925231934
    10. '_graph' → logprob: -14.251524925231934

Token 1182: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.676292231422849e-05
    2. ' graph' → logprob: -11.000017166137695
    3. '	graph' → logprob: -18.750017166137695
    4. 'edges' → logprob: -19.625017166137695
    5. '(graph' → logprob: -19.750017166137695
    6. 'graphs' → logprob: -20.500017166137695
    7. '
' → logprob: -21.000017166137695
    8. 'lines' → logprob: -22.625017166137695
    9. '_graph' → logprob: -22.875017166137695
    10. '```' → logprob: -23.125017166137695

Token 1183: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004125575942452997
    2. 'visited' → logprob: -7.875412464141846
    3. '```' → logprob: -11.500412940979004
    4. '#' → logprob: -11.875412940979004
    5. 'import' → logprob: -11.875412940979004
    6. '
' → logprob: -12.625412940979004
    7. 'from' → logprob: -13.625412940979004
    8. 'edges' → logprob: -14.250412940979004
    9. 'class' → logprob: -14.750412940979004
    10. '\' → logprob: -14.875412940979004

Token 1184: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00039885283331386745
    2. '```' → logprob: -7.875398635864258
    3. 'import' → logprob: -11.250398635864258
    4. '
' → logprob: -12.375398635864258
    5. '``' → logprob: -15.000398635864258
    6. '#' → logprob: -15.125398635864258
    7. '\' → logprob: -15.125398635864258
    8. 'from' → logprob: -15.375398635864258
    9. 'class' → logprob: -15.875398635864258
    10. '<|end|>' → logprob: -16.750398635864258

Token 1185: ' dfs' (ID: 51252)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.9047662019729614
    2. ' find' → logprob: -1.4047662019729614
    3. 'e' → logprob: -2.154766082763672
    4. 'dfs' → logprob: -2.279766082763672
    5. ' dfs' → logprob: -3.529766082763672
    6. ' e' → logprob: -3.779766082763672
    7. 'face' → logprob: -3.904766082763672
    8. 'extract' → logprob: -4.404766082763672
    9. 'count' → logprob: -4.529766082763672
    10. 'main' → logprob: -5.404766082763672

Token 1186: '(graph' (ID: 51300)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.13569244742393494
    2. '(v' → logprob: -2.8856923580169678
    3. '(' → logprob: -3.1356923580169678
    4. '(u' → logprob: -4.260692596435547
    5. '(start' → logprob: -5.010692596435547
    6. '(vertex' → logprob: -6.385692596435547
    7. '(graph' → logprob: -6.510692596435547
    8. '(root' → logprob: -6.885692596435547
    9. '(a' → logprob: -7.010692596435547
    10. '(token' → logprob: -7.760692596435547

Token 1187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ',node' → logprob: -11.00002384185791
    3. ',start' → logprob: -12.37502384185791
    4. ',v' → logprob: -13.25002384185791
    5. ',u' → logprob: -14.12502384185791
    6. ' ,' → logprob: -15.37502384185791
    7. ',current' → logprob: -16.375024795532227
    8. ',
' → logprob: -16.750024795532227
    9. ',a' → logprob: -16.875024795532227
    10. ',n' → logprob: -18.000024795532227

Token 1188: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.008351209573447704
    2. 'visited' → logprob: -5.2583513259887695
    3. 'node' → logprob: -6.7583513259887695
    4. 'u' → logprob: -6.7583513259887695
    5. 'current' → logprob: -8.00835132598877
    6. 'v' → logprob: -8.00835132598877
    7. ' start' → logprob: -9.00835132598877
    8. ' node' → logprob: -14.50835132598877
    9. ' visited' → logprob: -14.63335132598877
    10. 'src' → logprob: -14.88335132598877

Token 1189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ',node' → logprob: -13.625004768371582
    3. ',v' → logprob: -13.875004768371582
    4. ',current' → logprob: -14.750004768371582
    5. ',start' → logprob: -14.875004768371582
    6. ',u' → logprob: -14.875004768371582
    7. ',a' → logprob: -14.875004768371582
    8. ' ,' → logprob: -15.250004768371582
    9. ',p' → logprob: -15.625004768371582
    10. ',n' → logprob: -15.750004768371582

Token 1190: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.003360581584274769
    2. ' visited' → logprob: -5.753360748291016
    3. 'parent' → logprob: -8.878360748291016
    4. 'target' → logprob: -10.378360748291016
    5. ' parent' → logprob: -12.378360748291016
    6. 'path' → logprob: -13.003360748291016
    7. 'end' → logprob: -13.253360748291016
    8. 'start' → logprob: -14.253360748291016
    9. 'visit' → logprob: -14.378360748291016
    10. 'seen' → logprob: -14.628360748291016

Token 1191: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. '):
' → logprob: -10.500041961669922
    3. '):' → logprob: -11.625041961669922
    4. ',set' → logprob: -13.375041961669922
    5. ',node' → logprob: -13.750041961669922
    6. ',s' → logprob: -14.500041961669922
    7. ',current' → logprob: -15.000041961669922
    8. ' ,' → logprob: -15.125041961669922
    9. ',start' → logprob: -15.125041961669922
    10. ',k' → logprob: -15.750041961669922

Token 1192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01596785895526409
    2. '	stack' → logprob: -4.390967845916748
    3. 'visited' → logprob: -6.765967845916748
    4. ' stack' → logprob: -6.765967845916748
    5. 'stack' → logprob: -7.265967845916748
    6. ' visited' → logprob: -8.390968322753906
    7. '```' → logprob: -9.640968322753906
    8. '	for' → logprob: -9.890968322753906
    9. '	' → logprob: -10.640968322753906
    10. '   ' → logprob: -10.890968322753906

Token 1193: ' stack' (ID: 10825)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.33744317293167114
    2. '   ' → logprob: -1.5874431133270264
    3. ' visited' → logprob: -3.4624431133270264
    4. ' stack' → logprob: -3.5874431133270264
    5. 'stack' (adapté à ' stack') → logprob: -3.9624431133270264
    6. '	stack' → logprob: -5.5874433517456055
    7. '    
' → logprob: -10.337443351745605
    8. '
' → logprob: -10.337443351745605
    9. '```' → logprob: -10.462443351745605
    10. '_stack' → logprob: -10.712443351745605

Token 1194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.424956351518631
    2. ' =' → logprob: -1.1749563217163086
    3. '.append' → logprob: -3.2999563217163086
    4. '.' → logprob: -8.549956321716309
    5. '=[]' → logprob: -8.549956321716309
    6. '=[' → logprob: -10.424956321716309
    7. '=[]
' → logprob: -10.799956321716309
    8. ' =[' → logprob: -11.549956321716309
    9. '[:]' → logprob: -12.049956321716309
    10. '.pop' → logprob: -12.049956321716309

Token 1195: ' [' (ID: 723)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0017643129685893655
    2. '[' → logprob: -6.501764297485352
    3. ' [' → logprob: -8.501764297485352
    4. '[(' → logprob: -10.001764297485352
    5. '[end' → logprob: -12.251764297485352
    6. '[top' → logprob: -12.876764297485352
    7. '[s' → logprob: -13.376764297485352
    8. '[state' → logprob: -13.876764297485352
    9. '[int' → logprob: -14.876764297485352
    10. '[test' → logprob: -15.001764297485352

Token 1196: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.128163257315464e-07
    2. ' start' → logprob: -15.5
    3. '(start' → logprob: -18.5
    4. '[start' → logprob: -23.0
    5. '
' → logprob: -25.125
    6. '	start' → logprob: -25.75
    7. '=start' → logprob: -26.625
    8. ',start' → logprob: -26.75
    9. ':start' → logprob: -27.125
    10. ']' → logprob: -27.125

Token 1197: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04865901172161102
    2. ']
' → logprob: -3.048659086227417
    3. ' ]' → logprob: -9.923659324645996
    4. '   ' → logprob: -11.048659324645996
    5. ' ]
' → logprob: -12.673659324645996
    6. ']
' → logprob: -13.548659324645996
    7. ')' → logprob: -13.673659324645996
    8. '[' → logprob: -14.673659324645996
    9. '
' → logprob: -15.548659324645996
    10. ',' → logprob: -15.923659324645996

Token 1198: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6060658097267151
    2. ' while' → logprob: -1.1060657501220703
    3. '   ' → logprob: -2.1060657501220703
    4. '	while' → logprob: -7.10606575012207
    5. '```' → logprob: -7.48106575012207
    6. '
' → logprob: -7.85606575012207
    7. 'visited' → logprob: -9.10606575012207
    8. '    
' → logprob: -10.85606575012207
    9. ' ' → logprob: -11.60606575012207
    10. 'While' → logprob: -11.85606575012207

Token 1199: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0025349983479827642
    2. 'visited' (adapté à ' visited') → logprob: -6.002534866333008
    3. ' while' → logprob: -10.127534866333008
    4. '   ' → logprob: -11.252534866333008
    5. '
' → logprob: -12.752534866333008
    6. '	while' → logprob: -13.127534866333008
    7. '    
' → logprob: -13.877534866333008
    8. '```' → logprob: -15.377534866333008
    9. ' visited' → logprob: -15.752534866333008
    10. 'While' → logprob: -16.127534866333008

Token 1200: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0037969883996993303
    2. '.' → logprob: -5.6287970542907715
    3. 'add' → logprob: -8.878796577453613
    4. ' add' → logprob: -10.878796577453613
    5. ' .' → logprob: -11.378796577453613
    6. ' =' → logprob: -11.503796577453613
    7. '=' → logprob: -11.753796577453613
    8. '_add' → logprob: -13.003796577453613
    9. '.append' → logprob: -13.003796577453613
    10. '   ' → logprob: -13.378796577453613

Token 1201: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.003207538742572069
    2. '(stack' → logprob: -5.753207683563232
    3. '(' → logprob: -10.628207206726074
    4. 'start' → logprob: -12.128207206726074
    5. 'stack' → logprob: -16.00320816040039
    6. '(st' → logprob: -16.25320816040039
    7. '[start' → logprob: -17.75320816040039
    8. '(
' → logprob: -18.00320816040039
    9. '(end' → logprob: -18.37820816040039
    10. '(Stack' → logprob: -18.37820816040039

Token 1202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001509150955826044
    2. ')
' → logprob: -6.501509189605713
    3. '   ' → logprob: -12.001508712768555
    4. ' )' → logprob: -14.751508712768555
    5. '
' → logprob: -17.001508712768555
    6. ']' → logprob: -17.001508712768555
    7. '```' → logprob: -17.001508712768555
    8. ')
' → logprob: -17.251508712768555
    9. '):
' → logprob: -17.251508712768555
    10. ' ' → logprob: -17.751508712768555

Token 1203: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26155272126197815
    2. '	while' → logprob: -2.3865528106689453
    3. ' while' → logprob: -2.6365528106689453
    4. '   ' → logprob: -2.7615528106689453
    5. '
' → logprob: -5.886552810668945
    6. '```' → logprob: -7.636552810668945
    7. '    
' → logprob: -9.261552810668945
    8. 'While' → logprob: -10.511552810668945
    9. '	
' → logprob: -12.386552810668945
    10. '``' → logprob: -13.136552810668945

Token 1204: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014289849437773228
    2. ' while' → logprob: -4.514289855957031
    3. '   ' → logprob: -6.389289855957031
    4. '```' → logprob: -7.139289855957031
    5. '	while' → logprob: -7.389289855957031
    6. '
' → logprob: -8.889289855957031
    7. '    
' → logprob: -12.264289855957031
    8. 'While' → logprob: -13.514289855957031
    9. '``' → logprob: -13.889289855957031
    10. ' 
' → logprob: -14.889289855957031

Token 1205: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0007101670489646494
    2. ' stack' → logprob: -7.2507100105285645
    3. 'len' → logprob: -16.250709533691406
    4. '(stack' → logprob: -16.500709533691406
    5. '	stack' → logprob: -16.625709533691406
    6. '   ' → logprob: -18.750709533691406
    7. '
' → logprob: -21.250709533691406
    8. ' ' → logprob: -22.625709533691406
    9. 'graph' → logprob: -22.750709533691406
    10. ' len' → logprob: -23.250709533691406

Token 1206: ':
' (ID: 734)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.07482892274856567
    2. ':' → logprob: -2.824828863143921
    3. ':
' → logprob: -4.4498291015625
    4. '[-' → logprob: -7.1998291015625
    5. '   ' → logprob: -8.5748291015625
    6. 'pop' → logprob: -10.0748291015625
    7. ' pop' → logprob: -10.3248291015625
    8. '):
' → logprob: -11.1998291015625
    9. '_pop' → logprob: -11.3248291015625
    10. '```' → logprob: -11.3248291015625

Token 1207: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15200813114643097
    2. ' node' → logprob: -2.527008056640625
    3. 'node' → logprob: -3.652008056640625
    4. 'u' → logprob: -4.152008056640625
    5. ' u' → logprob: -5.152008056640625
    6. '```' → logprob: -5.527008056640625
    7. 'v' → logprob: -5.652008056640625
    8. ' v' → logprob: -6.027008056640625
    9. ' current' → logprob: -6.402008056640625
    10. '	node' → logprob: -6.652008056640625

Token 1208: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.3887247145175934
    2. ' u' → logprob: -1.638724684715271
    3. 'node' → logprob: -2.8887248039245605
    4. 'v' → logprob: -3.3887248039245605
    5. ' node' → logprob: -3.3887248039245605
    6. ' v' → logprob: -5.7637248039245605
    7. 'current' → logprob: -7.1387248039245605
    8. ' current' → logprob: -7.6387248039245605
    9. '   ' → logprob: -8.638724327087402
    10. 'cur' → logprob: -9.638724327087402

Token 1209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197318062186241
    2. '=' → logprob: -2.8119730949401855
    3. '.pop' → logprob: -12.936973571777344
    4. ')' → logprob: -14.186973571777344
    5. ' =
' → logprob: -14.186973571777344
    6. '=u' → logprob: -14.311973571777344
    7. '   ' → logprob: -14.811973571777344
    8. '.append' → logprob: -15.811973571777344
    9. ',' → logprob: -16.311973571777344
    10. ' ' → logprob: -16.561973571777344

Token 1210: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.001170225441455841
    2. ' stack' → logprob: -6.7511701583862305
    3. '	stack' → logprob: -17.501171112060547
    4. '(stack' → logprob: -19.126171112060547
    5. '   ' → logprob: -22.251171112060547
    6. '.stack' → logprob: -22.626171112060547
    7. '_stack' → logprob: -22.876171112060547
    8. 'graph' → logprob: -23.626171112060547
    9. 'pop' → logprob: -23.876171112060547
    10. ' ' → logprob: -24.376171112060547

Token 1211: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.6776029699249193e-05
    2. 'pop' → logprob: -10.75002670288086
    3. '=' → logprob: -13.00002670288086
    4. '[-' → logprob: -13.62502670288086
    5. '.' → logprob: -14.12502670288086
    6. ' =' → logprob: -14.75002670288086
    7. '.append' → logprob: -14.87502670288086
    8. '   ' → logprob: -15.62502670288086
    9. ' .' → logprob: -16.75002670288086
    10. ' pop' → logprob: -17.37502670288086

Token 1212: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6351710557937622
    2. '()' → logprob: -0.7601710557937622
    3. ')' → logprob: -6.510170936584473
    4. '       ' → logprob: -7.510170936584473
    5. ')
' → logprob: -8.385170936584473
    6. '
' → logprob: -8.510170936584473
    7. '```' → logprob: -10.635170936584473
    8. '(' → logprob: -11.135170936584473
    9. '()
' → logprob: -11.760170936584473
    10. '           ' → logprob: -11.885170936584473

Token 1213: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7176823019981384
    2. '       ' → logprob: -1.2176823616027832
    3. '   ' → logprob: -1.5926823616027832
    4. 'for' → logprob: -4.717682361602783
    5. '	for' → logprob: -6.092682361602783
    6. '           ' → logprob: -6.717682361602783
    7. '```' → logprob: -8.092681884765625
    8. '        
' → logprob: -10.467681884765625
    9. '
' → logprob: -11.217681884765625
    10. '               ' → logprob: -11.342681884765625

Token 1214: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.200166469876422e-06
    2. ' for' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.250004768371582
    4. '       ' → logprob: -16.8750057220459
    5. '	for' → logprob: -17.5000057220459
    6. '```' → logprob: -18.1250057220459
    7. '           ' → logprob: -18.8750057220459
    8. '
' → logprob: -19.2500057220459
    9. '        
' → logprob: -21.1250057220459
    10. 'For' → logprob: -21.8750057220459

Token 1215: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000913370808120817
    2. ' v' → logprob: -7.000913143157959
    3. 'w' → logprob: -13.250913619995117
    4. '	v' → logprob: -16.125913619995117
    5. 'vw' → logprob: -18.875913619995117
    6. '(v' → logprob: -19.125913619995117
    7. ' w' → logprob: -19.625913619995117
    8. '_v' → logprob: -20.125913619995117
    9. '[v' → logprob: -20.625913619995117
    10. '```' → logprob: -21.000913619995117

Token 1216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026305289939045906
    2. 'in' → logprob: -3.6513051986694336
    3. '	in' → logprob: -12.526305198669434
    4. ' ' → logprob: -13.901305198669434
    5. '  ' → logprob: -15.901305198669434
    6. ' 
' → logprob: -16.52630615234375
    7. 'import' → logprob: -16.77630615234375
    8. '
' → logprob: -17.15130615234375
    9. 'not' → logprob: -17.52630615234375
    10. ' ' → logprob: -17.52630615234375

Token 1217: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0024763736873865128
    2. ' graph' → logprob: -6.002476215362549
    3. '(graph' → logprob: -14.377476692199707
    4. '	graph' → logprob: -16.00247573852539
    5. '_graph' → logprob: -20.75247573852539
    6. '.graph' → logprob: -20.87747573852539
    7. '   ' → logprob: -21.00247573852539
    8. 'graphs' → logprob: -21.62747573852539
    9. '[' → logprob: -21.75247573852539
    10. 'graphic' → logprob: -21.87747573852539

Token 1218: '.get' (ID: 775)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.5776860184123507e-06
    2. ' in' → logprob: -13.75000286102295
    3. 'u' → logprob: -14.00000286102295
    4. '[' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.000001907348633
    6. ':' → logprob: -16.250001907348633
    7. '.get' → logprob: -17.000001907348633
    8. '	u' → logprob: -17.250001907348633
    9. '[v' → logprob: -17.375001907348633
    10. ',u' → logprob: -17.500001907348633

Token 1219: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -9.491498531133402e-06
    2. 'u' → logprob: -11.625009536743164
    3. '(v' → logprob: -15.875009536743164
    4. '(' → logprob: -16.375009536743164
    5. ' (' → logprob: -16.500009536743164
    6. '[u' → logprob: -16.500009536743164
    7. ' u' → logprob: -17.375009536743164
    8. '	u' → logprob: -18.875009536743164
    9. ',u' → logprob: -19.125009536743164
    10. '   ' → logprob: -20.000009536743164

Token 1220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.875021934509277
    3. '',' → logprob: -13.750021934509277
    4. '[],' → logprob: -14.375021934509277
    5. '   ' → logprob: -14.500021934509277
    6. '):' → logprob: -15.625021934509277
    7. ',u' → logprob: -15.750021934509277
    8. ',None' → logprob: -16.125022888183594
    9. '(),' → logprob: -16.500022888183594
    10. ')' → logprob: -16.500022888183594

Token 1221: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04143743962049484
    2. '[]):' → logprob: -3.2914373874664307
    3. '[],' → logprob: -6.04143762588501
    4. '):' → logprob: -7.41643762588501
    5. ' []' → logprob: -8.666437149047852
    6. '[])' → logprob: -9.291437149047852
    7. '):
' → logprob: -9.916437149047852
    8. ',' → logprob: -10.041437149047852
    9. '{}' → logprob: -11.666437149047852
    10. '[]>' → logprob: -11.916437149047852

Token 1222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38698479533195496
    2. '):' → logprob: -1.1369848251342773
    3. ':' → logprob: -10.261984825134277
    4. '       ' → logprob: -10.636984825134277
    5. '):
' → logprob: -10.636984825134277
    6. '           ' → logprob: -10.761984825134277
    7. '   ' → logprob: -12.136984825134277
    8. ':
' → logprob: -13.136984825134277
    9. ')' → logprob: -14.886984825134277
    10. '          ' → logprob: -15.011984825134277

Token 1223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002956591488327831
    2. ' if' → logprob: -8.750295639038086
    3. '```' → logprob: -9.500295639038086
    4. 'if' → logprob: -11.375295639038086
    5. '            
' → logprob: -11.625295639038086
    6. '               ' → logprob: -11.750295639038086
    7. '[' → logprob: -12.000295639038086
    8. '          ' → logprob: -12.375295639038086
    9. '   ' → logprob: -12.375295639038086
    10. '<|end|>' → logprob: -12.500295639038086

Token 1224: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16358114778995514
    2. '               ' → logprob: -2.288581132888794
    3. '           ' → logprob: -3.038581132888794
    4. '            ' → logprob: -7.163581371307373
    5. 'if' (adapté à ' if') → logprob: -7.413581371307373
    6. ' ' → logprob: -9.788580894470215
    7. '	           ' → logprob: -10.288580894470215
    8. ' ' → logprob: -10.788580894470215
    9. '```' → logprob: -10.788580894470215
    10. '   ' → logprob: -10.913580894470215

Token 1225: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005233882926404476
    2. ' v' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.755233764648438
    4. '	v' → logprob: -17.380233764648438
    5. '(v' → logprob: -18.755233764648438
    6. 'not' → logprob: -18.880233764648438
    7. ' ' → logprob: -19.380233764648438
    8. '
' → logprob: -19.505233764648438
    9. ' ' → logprob: -19.755233764648438
    10. '    ' → logprob: -19.880233764648438

Token 1226: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004079112783074379
    2. 'not' → logprob: -5.504079341888428
    3. '	not' → logprob: -14.62907886505127
    4. ' ' → logprob: -16.879079818725586
    5. '_not' → logprob: -17.004079818725586
    6. ')' → logprob: -17.254079818725586
    7. ':not' → logprob: -17.629079818725586
    8. '<|end|>' → logprob: -17.754079818725586
    9. ' no' → logprob: -17.879079818725586
    10. 'Not' → logprob: -19.254079818725586

Token 1227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269463747739792
    2. 'in' → logprob: -2.126946449279785
    3. 'visited' → logprob: -11.376946449279785
    4. '   ' → logprob: -12.376946449279785
    5. ' not' → logprob: -14.126946449279785
    6. ' ' → logprob: -14.501946449279785
    7. 'not' → logprob: -14.876946449279785
    8. '       ' → logprob: -15.376946449279785
    9. '           ' → logprob: -16.00194549560547
    10. ' visited' → logprob: -16.00194549560547

Token 1228: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0009115827269852161
    2. ' visited' → logprob: -7.000911712646484
    3. '
' → logprob: -15.875911712646484
    4. '   ' → logprob: -19.750911712646484
    5. 'Visited' → logprob: -19.750911712646484
    6. '```' → logprob: -20.250911712646484
    7. 'visible' → logprob: -21.500911712646484
    8. 'visit' → logprob: -21.875911712646484
    9. '
' → logprob: -22.000911712646484
    10. ' ' → logprob: -22.125911712646484

Token 1229: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05071404576301575
    2. ':' → logprob: -3.3007140159606934
    3. '               ' → logprob: -4.550714015960693
    4. '):
' → logprob: -6.300714015960693
    5. '           ' → logprob: -9.050714492797852
    6. ')' → logprob: -11.425714492797852
    7. '):' → logprob: -11.550714492797852
    8. '():
' → logprob: -11.800714492797852
    9. ' and' → logprob: -11.925714492797852
    10. '              ' → logprob: -12.175714492797852

Token 1230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.019237768370658e-05
    2. '           ' → logprob: -10.250090599060059
    3. '                   ' → logprob: -11.000090599060059
    4. ':
' → logprob: -11.000090599060059
    5. '              ' → logprob: -11.625090599060059
    6. '```' → logprob: -12.750090599060059
    7. '                       ' → logprob: -13.500090599060059
    8. '       ' → logprob: -13.625090599060059
    9. '):
' → logprob: -13.625090599060059
    10. ':' → logprob: -13.750090599060059

Token 1231: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.4214186370372772
    2. '                   ' → logprob: -1.5464186668395996
    3. ' visited' → logprob: -2.4214186668395996
    4. '               ' → logprob: -3.5464186668395996
    5. 'stack' → logprob: -4.5464186668396
    6. ' stack' → logprob: -6.1714186668396
    7. '                ' → logprob: -8.796418190002441
    8. '```' → logprob: -8.921418190002441
    9. '                       ' → logprob: -9.671418190002441
    10. 'Visited' → logprob: -9.671418190002441

Token 1232: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -11.000020027160645
    3. 'add' → logprob: -13.125020027160645
    4. ' .' → logprob: -14.125020027160645
    5. ' add' → logprob: -16.250019073486328
    6. '.Add' → logprob: -16.500019073486328
    7. '_add' → logprob: -17.625019073486328
    8. ')add' → logprob: -17.750019073486328
    9. '   ' → logprob: -18.125019073486328
    10. '	add' → logprob: -18.375019073486328

Token 1233: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -10.87502384185791
    3. ' (' → logprob: -13.12502384185791
    4. '(
' → logprob: -13.37502384185791
    5. '<|end|>' → logprob: -14.75002384185791
    6. 'v' → logprob: -15.50002384185791
    7. '((' → logprob: -16.375022888183594
    8. ',v' → logprob: -16.875022888183594
    9. ')' → logprob: -17.375022888183594
    10. ')v' → logprob: -17.500022888183594

Token 1234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3889836072921753
    2. ')' → logprob: -1.1389836072921753
    3. ')v' → logprob: -6.263983726501465
    4. ')
' → logprob: -9.263983726501465
    5. 'v' → logprob: -10.013983726501465
    6. ',v' → logprob: -10.513983726501465
    7. ',' → logprob: -11.138983726501465
    8. '(v' → logprob: -11.263983726501465
    9. '               ' → logprob: -12.388983726501465
    10. '),' → logprob: -13.013983726501465

Token 1235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11593189835548401
    2. 'stack' → logprob: -2.490931987762451
    3. ' stack' → logprob: -4.490931987762451
    4. ')' → logprob: -4.990931987762451
    5. '(stack' → logprob: -5.615931987762451
    6. '                
' → logprob: -7.240931987762451
    7. '```' → logprob: -7.365931987762451
    8. 'v' → logprob: -7.365931987762451
    9. '_stack' → logprob: -7.615931987762451
    10. ',' → logprob: -7.740931987762451

Token 1236: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -6.392202976712724e-06
    2. ' stack' → logprob: -12.000006675720215
    3. '	stack' → logprob: -17.1250057220459
    4. '               ' → logprob: -17.6250057220459
    5. '_stack' → logprob: -19.3750057220459
    6. '                   ' → logprob: -19.7500057220459
    7. '.stack' → logprob: -19.8750057220459
    8. '(stack' → logprob: -20.5000057220459
    9. 'stackoverflow' → logprob: -22.3750057220459
    10. 'Stack' → logprob: -22.6250057220459

Token 1237: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.763666947837919e-05
    2. 'append' → logprob: -10.25004768371582
    3. '.' → logprob: -11.87504768371582
    4. '.extend' → logprob: -12.37504768371582
    5. ' .' → logprob: -14.25004768371582
    6. ' append' → logprob: -16.12504768371582
    7. '.app' → logprob: -16.62504768371582
    8. '.push' → logprob: -16.87504768371582
    9. '   ' → logprob: -17.12504768371582
    10. '_append' → logprob: -17.25004768371582

Token 1238: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -15.875001907348633
    4. '((' → logprob: -19.125001907348633
    5. 'v' → logprob: -19.250001907348633
    6. ' (' → logprob: -20.625001907348633
    7. '(V' → logprob: -22.375001907348633
    8. '(value' → logprob: -22.500001907348633
    9. ')v' → logprob: -22.500001907348633
    10. '	v' → logprob: -22.625001907348633

Token 1239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')v' → logprob: -12.125008583068848
    3. ')
' → logprob: -12.875008583068848
    4. ' )' → logprob: -15.500008583068848
    5. '))' → logprob: -17.12500762939453
    6. ')return' → logprob: -18.00000762939453
    7. ')`' → logprob: -18.00000762939453
    8. 'v' → logprob: -18.25000762939453
    9. ')}' → logprob: -18.37500762939453
    10. '),' → logprob: -18.37500762939453

Token 1240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023296247236430645
    2. '<|end|>' → logprob: -6.2523298263549805
    3. '```' → logprob: -8.50232982635498
    4. '
' → logprob: -9.00232982635498
    5. '#' → logprob: -10.12732982635498
    6. '<|end|>' → logprob: -11.75232982635498
    7. '\' → logprob: -11.87732982635498
    8. ' def' → logprob: -11.87732982635498
    9. 'import' → logprob: -13.00232982635498
    10. ')' → logprob: -13.50232982635498

Token 1241: ' find' (ID: 1646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1375119388103485
    2. 'connected' → logprob: -3.137511968612671
    3. 'find' → logprob: -3.137511968612671
    4. 'count' → logprob: -3.762511968612671
    5. ' main' → logprob: -5.137511730194092
    6. 'solve' → logprob: -5.512511730194092
    7. 'compute' → logprob: -6.637511730194092
    8. ' find' → logprob: -6.887511730194092
    9. ' connected' → logprob: -6.887511730194092
    10. 'e' → logprob: -7.012511730194092

Token 1242: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.6193784475326538
    2. '_cycles' → logprob: -0.8693784475326538
    3. '_' → logprob: -3.6193785667419434
    4. '_pol' → logprob: -5.119378566741943
    5. '_polygon' → logprob: -6.119378566741943
    6. '_cycle' → logprob: -6.119378566741943
    7. '_all' → logprob: -6.369378566741943
    8. '_face' → logprob: -7.369378566741943
    9. '_next' → logprob: -7.619378566741943
    10. '_closed' → logprob: -8.244378089904785

Token 1243: '(points' (ID: 72131)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.026748403906822205
    2. '(' → logprob: -3.6517484188079834
    3. '(lines' → logprob: -8.401748657226562
    4. '(Graph' → logprob: -9.526748657226562
    5. '(
' → logprob: -9.901748657226562
    6. ' (' → logprob: -11.026748657226562
    7. '_(' → logprob: -11.401748657226562
    8. '(points' → logprob: -11.651748657226562
    9. '(line' → logprob: -11.776748657226562
    10. '```' → logprob: -12.026748657226562

Token 1244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ',
' → logprob: -12.125006675720215
    3. ' ,' → logprob: -14.250006675720215
    4. '(graph' → logprob: -15.625006675720215
    5. '‌,' → logprob: -16.5000057220459
    6. ',line' → logprob: -16.7500057220459
    7. 'graph' → logprob: -17.1250057220459
    8. ',exports' → logprob: -17.5000057220459
    9. '	graph' → logprob: -18.0000057220459
    10. 'def' → logprob: -18.2500057220459

Token 1245: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.001742650754749775
    2. ' graph' → logprob: -6.376742839813232
    3. 'edges' → logprob: -10.251742362976074
    4. '	graph' → logprob: -13.126742362976074
    5. '(graph' → logprob: -13.626742362976074
    6. ' edges' → logprob: -13.876742362976074
    7. 'graphs' → logprob: -15.251742362976074
    8. ')' → logprob: -16.00174331665039
    9. '```' → logprob: -16.00174331665039
    10. 'points' → logprob: -16.50174331665039

Token 1246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21826224029064178
    2. '):' → logprob: -1.7182621955871582
    3. '):
' → logprob: -4.093262195587158
    4. ',
' → logprob: -12.093262672424316
    5. '   ' → logprob: -12.343262672424316
    6. ')' → logprob: -12.843262672424316
    7. ',p' → logprob: -13.218262672424316
    8. '):
' → logprob: -13.843262672424316
    9. '):

' → logprob: -13.968262672424316
    10. '(graph' → logprob: -14.218262672424316

Token 1247: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07547767460346222
    2. ' lines' → logprob: -3.0754776000976562
    3. 'points' → logprob: -3.9504776000976562
    4. 'edges' → logprob: -5.325477600097656
    5. ' points' → logprob: -6.700477600097656
    6. ' edges' → logprob: -7.575477600097656
    7. 'visited' → logprob: -7.825477600097656
    8. '
' → logprob: -10.200477600097656
    9. 'n' → logprob: -10.325477600097656
    10. ')' → logprob: -10.450477600097656

Token 1248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016149327158927917
    2. '):
' → logprob: -4.141149520874023
    3. ',' → logprob: -9.141149520874023
    4. '   ' → logprob: -13.016149520874023
    5. '):
' → logprob: -13.016149520874023
    6. ')' → logprob: -13.516149520874023
    7. '):

' → logprob: -14.266149520874023
    8. ':' → logprob: -14.266149520874023
    9. ' ):' → logprob: -14.766149520874023
    10. 'def' → logprob: -15.766149520874023

Token 1249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001434690784662962
    2. '```' → logprob: -9.625143051147461
    3. ':' → logprob: -10.250143051147461
    4. 'def' → logprob: -10.375143051147461
    5. '#' → logprob: -12.625143051147461
    6. ' def' → logprob: -13.250143051147461
    7. ':
' → logprob: -13.500143051147461
    8. '
' → logprob: -13.750143051147461
    9. '``' → logprob: -14.250143051147461
    10. ' faces' → logprob: -14.500143051147461

Token 1250: ' #' (ID: 1069)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.007856338284909725
    2. 'visited' → logprob: -5.382856369018555
    3. '   ' → logprob: -6.632856369018555
    4. 'edges' → logprob: -6.882856369018555
    5. 'face' → logprob: -7.382856369018555
    6. 'cycles' → logprob: -9.257856369018555
    7. '#' (adapté à ' #') → logprob: -9.757856369018555
    8. ' faces' → logprob: -10.132856369018555
    9. 'def' → logprob: -10.757856369018555
    10. 'used' → logprob: -11.007856369018555

Token 1251: ' This' (ID: 1328)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.13466867804527283
    2. 'visited' → logprob: -2.1346685886383057
    3. '#' → logprob: -5.759668827056885
    4. 'edges' → logprob: -6.009668827056885
    5. 'face' → logprob: -6.634668827056885
    6. '   ' → logprob: -7.884668827056885
    7. 'def' → logprob: -8.634668350219727
    8. 'seen' → logprob: -9.759668350219727
    9. 'used' → logprob: -10.009668350219727
    10. 'cycles' → logprob: -10.509668350219727

Token 1252: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08234954625368118
    2. ' is' → logprob: -3.4573495388031006
    3. ' function' → logprob: -3.7073495388031006
    4. ' def' → logprob: -4.95734977722168
    5. 'function' → logprob: -5.45734977722168
    6. '#' → logprob: -6.08234977722168
    7. 'is' → logprob: -6.08234977722168
    8. ' code' → logprob: -6.08234977722168
    9. ' part' → logprob: -6.45734977722168
    10. '   ' → logprob: -6.58234977722168

Token 1253: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4229409992694855
    2. 'def' → logprob: -1.672940969467163
    3. 'the' → logprob: -3.047940969467163
    4. ' a' → logprob: -3.297940969467163
    5. 'an' → logprob: -3.922940969467163
    6. 'complex' → logprob: -4.172941207885742
    7. ' an' → logprob: -4.672941207885742
    8. '#' → logprob: -4.672941207885742
    9. 'unfinished' → logprob: -4.797941207885742
    10. 'in' → logprob: -6.047941207885742

Token 1254: ' simple' (ID: 4705)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.752956211566925
    2. 'def' → logprob: -1.3779561519622803
    3. '#' → logprob: -2.6279561519622803
    4. 'function' → logprob: -2.8779561519622803
    5. 'continu' → logprob: -3.0029561519622803
    6. 'standard' → logprob: -3.5029561519622803
    7. 'partial' → logprob: -3.5029561519622803
    8. 'classic' → logprob: -4.377956390380859
    9. 'placeholder' → logprob: -5.127956390380859
    10. 'plan' → logprob: -5.502956390380859

Token 1255: ' way' (ID: 2006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8920923471450806
    2. 'continu' → logprob: -1.8920923471450806
    3. 'placeholder' → logprob: -2.017092227935791
    4. 'version' → logprob: -2.392092227935791
    5. 'function' → logprob: -3.142092227935791
    6. 'implementation' → logprob: -3.517092227935791
    7. 'outline' → logprob: -3.642092227935791
    8. ' continuation' → logprob: -4.517092227935791
    9. ' placeholder' → logprob: -4.517092227935791
    10. 'cycle' → logprob: -4.642092227935791

Token 1256: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26287540793418884
    2. ' to' → logprob: -1.7628754377365112
    3. 'def' → logprob: -3.0128753185272217
    4. 'to' → logprob: -5.262875556945801
    5. ':' → logprob: -6.762875556945801
    6. ' def' → logprob: -7.012875556945801
    7. ',' → logprob: -7.137875556945801
    8. '#' → logprob: -7.262875556945801
    9. '
' → logprob: -7.512875556945801
    10. ' for' → logprob: -8.2628755569458

Token 1257: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5797366499900818
    2. ' faces' → logprob: -1.4547367095947266
    3. 'faces' → logprob: -1.7047367095947266
    4. 'visited' → logprob: -4.829736709594727
    5. '#' → logprob: -5.079736709594727
    6. ' visited' → logprob: -5.329736709594727
    7. 'face' → logprob: -6.579736709594727
    8. ' #' → logprob: -7.329736709594727
    9. ' edges' → logprob: -7.704736709594727
    10. 'edges' → logprob: -8.079736709594727

Token 1258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007231282070279121
    2. ' faces' → logprob: -5.25723123550415
    3. 'faces' → logprob: -7.38223123550415
    4. ' visited' → logprob: -7.63223123550415
    5. 'visited' → logprob: -8.507231712341309
    6. '
' → logprob: -8.882231712341309
    7. '```' → logprob: -9.257231712341309
    8. ' for' → logprob: -9.382231712341309
    9. ' edges' → logprob: -9.507231712341309
    10. 'def' → logprob: -9.632231712341309

Token 1259: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1632133424282074
    2. '#' (adapté à ' #') → logprob: -2.1632132530212402
    3. 'faces' → logprob: -4.41321325302124
    4. ' faces' → logprob: -4.78821325302124
    5. 'edges' → logprob: -5.53821325302124
    6. ' #' → logprob: -6.03821325302124
    7. ' edges' → logprob: -6.16321325302124
    8. 'visited' → logprob: -6.66321325302124
    9. ' used' → logprob: -7.03821325302124
    10. ' for' → logprob: -7.28821325302124

Token 1260: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36932671070098877
    2. '#' → logprob: -1.3693267107009888
    3. 'faces' → logprob: -3.619326591491699
    4. 'visited' → logprob: -4.494326591491699
    5. ' faces' → logprob: -4.869326591491699
    6. ' #' → logprob: -5.869326591491699
    7. ' visited' → logprob: -6.994326591491699
    8. 'import' → logprob: -7.244326591491699
    9. 'for' → logprob: -7.619326591491699
    10. ' indent' → logprob: -7.744326591491699

Token 1261: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5777376294136047
    2. '#' → logprob: -1.57773756980896
    3. ' for' → logprob: -2.70273756980896
    4. 'def' → logprob: -3.57773756980896
    5. 'for' → logprob: -3.82773756980896
    6. 'visited' → logprob: -3.82773756980896
    7. 'import' → logprob: -4.202737808227539
    8. 'We' → logprob: -4.202737808227539
    9. ' visited' → logprob: -4.577737808227539
    10. 'from' → logprob: -4.702737808227539

Token 1262: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.9729386568069458
    2. 'each' → logprob: -0.9729386568069458
    3. ' node' → logprob: -2.5979385375976562
    4. 'u' → logprob: -2.5979385375976562
    5. ' v' → logprob: -3.4729385375976562
    6. 'v' → logprob: -3.4729385375976562
    7. ' u' → logprob: -4.347938537597656
    8. 'node' → logprob: -4.597938537597656
    9. ' key' → logprob: -6.722938537597656
    10. 'a' → logprob: -6.722938537597656

Token 1263: ' edge' (ID: 11165)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4254264235496521
    2. 'u' → logprob: -1.6754264831542969
    3. ' node' → logprob: -1.9254264831542969
    4. ' u' → logprob: -5.175426483154297
    5. 'v' → logprob: -5.675426483154297
    6. 'edge' → logprob: -6.050426483154297
    7. ' edge' → logprob: -7.175426483154297
    8. 'a' → logprob: -7.925426483154297
    9. ' v' → logprob: -8.050426483154297
    10. 'vertex' → logprob: -8.675426483154297

Token 1264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30637919902801514
    2. '(u' → logprob: -2.0563793182373047
    3. ' in' → logprob: -2.4313793182373047
    4. 'in' → logprob: -3.8063793182373047
    5. ',u' → logprob: -3.9313793182373047
    6. ' (' → logprob: -6.431379318237305
    7. '[u' → logprob: -6.681379318237305
    8. 'u' → logprob: -7.556379318237305
    9. '   ' → logprob: -7.681379318237305
    10. ',a' → logprob: -7.931379318237305

Token 1265: ' follow' (ID: 2622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0232775211334229
    2. '#' → logprob: -2.023277521133423
    3. 'for' → logprob: -2.523277521133423
    4. ' if' → logprob: -2.773277521133423
    5. ' find' → logprob: -2.773277521133423
    6. 'visited' → logprob: -3.148277521133423
    7. 'if' → logprob: -3.273277521133423
    8. 'def' → logprob: -3.273277521133423
    9. ' for' → logprob: -3.273277521133423
    10. 'u' → logprob: -3.648277521133423

Token 1266: ' edges' (ID: 22569)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -1.028780221939087
    2. ' the' → logprob: -1.778780221939087
    3. ' each' → logprob: -2.528780221939087
    4. ' an' → logprob: -2.528780221939087
    5. 'the' → logprob: -2.653780221939087
    6. ' edges' → logprob: -2.778780221939087
    7. 'each' → logprob: -3.403780221939087
    8. 'edges' → logprob: -3.528780221939087
    9. ' it' → logprob: -3.653780221939087
    10. ' around' → logprob: -4.653779983520508

Token 1267: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.254495620727539
    2. 'in' → logprob: -1.629495620727539
    3. ' in' → logprob: -1.629495620727539
    4. 'to' → logprob: -2.629495620727539
    5. 'def' → logprob: -2.754495620727539
    6. ' around' → logprob: -3.129495620727539
    7. ' until' → logprob: -3.504495620727539
    8. 'from' → logprob: -3.754495620727539
    9. 'until' → logprob: -4.004495620727539
    10. 'around' → logprob: -4.379495620727539

Token 1268: ' make' (ID: 1520)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4216219484806061
    2. ' find' → logprob: -1.9216219186782837
    3. 'form' → logprob: -2.5466220378875732
    4. ' form' → logprob: -3.0466220378875732
    5. 'complete' → logprob: -3.0466220378875732
    6. ' complete' → logprob: -4.421621799468994
    7. 'the' → logprob: -5.421621799468994
    8. 'build' → logprob: -5.546621799468994
    9. ' the' → logprob: -6.796621799468994
    10. 'trace' → logprob: -7.046621799468994

Token 1269: ' cycles' (ID: 41478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6292970180511475
    2. ' a' → logprob: -0.8792970180511475
    3. ' sure' → logprob: -4.379297256469727
    4. ' cycles' → logprob: -4.379297256469727
    5. ' the' → logprob: -5.004297256469727
    6. 'cycles' → logprob: -5.754297256469727
    7. ' polygon' → logprob: -5.754297256469727
    8. ' smallest' → logprob: -5.879297256469727
    9. 'the' → logprob: -6.004297256469727
    10. ' polygons' → logprob: -6.754297256469727

Token 1270: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015340926125645638
    2. '
' → logprob: -4.515340805053711
    3. 'def' → logprob: -6.390340805053711
    4. ' for' → logprob: -7.015340805053711
    5. ',' → logprob: -7.265340805053711
    6. ' and' → logprob: -7.890340805053711
    7. 'for' → logprob: -9.390340805053711
    8. '    
' → logprob: -9.640340805053711
    9. 'import' → logprob: -9.890340805053711
    10. ':' → logprob: -9.890340805053711

Token 1271: 'faces' (ID: 11952)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5400371551513672
    2. 'def' → logprob: -1.1650371551513672
    3. '   ' → logprob: -3.165037155151367
    4. ')' → logprob: -3.290037155151367
    5. 'and' → logprob: -5.790037155151367
    6. 'return' → logprob: -6.165037155151367
    7. 'the' → logprob: -6.165037155151367
    8. 'continue' → logprob: -6.165037155151367
    9. 'each' → logprob: -6.415037155151367
    10. 'that' → logprob: -6.790037155151367

Token 1272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.791620671749115
    2. ')
' → logprob: -0.791620671749115
    3. '   ' → logprob: -3.0416207313537598
    4. '),' → logprob: -3.5416207313537598
    5. ',' → logprob: -5.04162073135376
    6. 'def' → logprob: -5.04162073135376
    7. '):
' → logprob: -6.29162073135376
    8. '
' → logprob: -6.91662073135376
    9. '#' → logprob: -7.66662073135376
    10. '):' → logprob: -8.666620254516602

Token 1273: ' going' (ID: 2966)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02998720295727253
    2. '
' → logprob: -3.654987096786499
    3. ',' → logprob: -6.779987335205078
    4. 'def' → logprob: -6.904987335205078
    5. ' for' → logprob: -7.404987335205078
    6. ':' → logprob: -8.654987335205078
    7. '```' → logprob: -9.154987335205078
    8. ' def' → logprob: -9.279987335205078
    9. ' and' → logprob: -9.404987335205078
    10. '#' → logprob: -9.404987335205078

Token 1274: ' clockwise' (ID: 141888)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5614685416221619
    2. 'along' → logprob: -1.6864686012268066
    3. 'around' → logprob: -2.1864686012268066
    4. 'counter' → logprob: -2.9364686012268066
    5. 'clock' → logprob: -3.1864686012268066
    6. 'through' → logprob: -4.061468601226807
    7. 'always' → logprob: -5.561468601226807
    8. 'only' → logprob: -5.936468601226807
    9. 'against' → logprob: -6.186468601226807
    10. 'left' → logprob: -6.186468601226807

Token 1275: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2573049068450928
    2. '
' → logprob: -2.1323049068450928
    3. ':' → logprob: -3.0073049068450928
    4. 'def' → logprob: -3.8823049068450928
    5. ' for' → logprob: -4.382305145263672
    6. ',' → logprob: -4.757305145263672
    7. ':
' → logprob: -5.007305145263672
    8. 'for' → logprob: -5.757305145263672
    9. ' and' → logprob: -6.007305145263672
    10. ' def' → logprob: -6.882305145263672

Token 1276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024644264951348305
    2. '
' → logprob: -4.774644374847412
    3. ':' → logprob: -5.149644374847412
    4. 'def' → logprob: -5.149644374847412
    5. ' def' → logprob: -6.524644374847412
    6. ',' → logprob: -6.899644374847412
    7. ' for' → logprob: -7.399644374847412
    8. ' and' → logprob: -7.649644374847412
    9. '```' → logprob: -8.274643898010254
    10. ' ' → logprob: -9.149643898010254

Token 1277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02413271926343441
    2. 'def' → logprob: -5.02413272857666
    3. ' faces' → logprob: -5.27413272857666
    4. '
' → logprob: -5.39913272857666
    5. ' for' → logprob: -5.89913272857666
    6. ' def' → logprob: -6.02413272857666
    7. 'faces' → logprob: -7.02413272857666
    8. ' points' → logprob: -7.77413272857666
    9. '```' → logprob: -8.39913272857666
    10. 'for' → logprob: -8.64913272857666

Token 1278: ' We' (ID: 1416)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.09631882607936859
    2. '   ' → logprob: -3.2213187217712402
    3. ' faces' → logprob: -3.9713187217712402
    4. 'face' → logprob: -4.47131872177124
    5. 'def' → logprob: -4.59631872177124
    6. 'visited' → logprob: -4.97131872177124
    7. '#' → logprob: -6.09631872177124
    8. ' visited' → logprob: -7.34631872177124
    9. 'import' → logprob: -7.97131872177124
    10. ' def' → logprob: -8.096319198608398

Token 1279: ' utilize' (ID: 24570)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6853336095809937
    2. '   ' → logprob: -1.5603336095809937
    3. ' continue' → logprob: -2.310333728790283
    4. 'def' → logprob: -2.685333728790283
    5. 'continue' → logprob: -3.185333728790283
    6. 'need' → logprob: -3.685333728790283
    7. ''ll' → logprob: -4.185333728790283
    8. '```' → logprob: -5.310333728790283
    9. 'll' → logprob: -5.685333728790283
    10. '
' → logprob: -5.685333728790283

Token 1280: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13999371230602264
    2. 'a' → logprob: -2.639993667602539
    3. 'an' → logprob: -3.764993667602539
    4. 'def' → logprob: -4.764993667602539
    5. 'next' → logprob: -5.139993667602539
    6. ' the' → logprob: -5.389993667602539
    7. 'points' → logprob: -5.764993667602539
    8. 'visited' → logprob: -5.764993667602539
    9. 'that' → logprob: -6.139993667602539
    10. ' an' → logprob: -6.639993667602539

Token 1281: ' no' (ID: 860)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40341225266456604
    2. 'import' → logprob: -2.778412342071533
    3. 'edges' → logprob: -2.778412342071533
    4. 'points' → logprob: -2.903412342071533
    5. '#' → logprob: -3.403412342071533
    6. 'the' → logprob: -3.528412342071533
    7. '
' → logprob: -4.403412342071533
    8. 'each' → logprob: -4.778412342071533
    9. 'graph' → logprob: -4.778412342071533
    10. 'faces' → logprob: -4.903412342071533

Token 1282: ' three' (ID: 3407)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.9604533314704895
    2. '   ' → logprob: -2.2104532718658447
    3. ' edges' → logprob: -2.5854532718658447
    4. ' vertex' → logprob: -2.7104532718658447
    5. ' node' → logprob: -2.8354532718658447
    6. ' ' → logprob: -3.0854532718658447
    7. 'edge' → logprob: -3.3354532718658447
    8. ' duplicate' → logprob: -3.4604532718658447
    9. 'def' → logprob: -3.5854532718658447
    10. 'vertex' → logprob: -3.9604532718658447

Token 1283: ' lines' (ID: 8698)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2038940191268921
    2. ' points' → logprob: -2.7038941383361816
    3. 'edges' → logprob: -2.8288941383361816
    4. 'lines' → logprob: -3.5788941383361816
    5. ' edges' → logprob: -4.203894138336182
    6. ' lines' → logprob: -5.453894138336182
    7. 'col' → logprob: -5.578894138336182
    8. 'con' → logprob: -6.078894138336182
    9. ' col' → logprob: -6.328894138336182
    10. '(points' → logprob: -7.203894138336182

Token 1284: ' intersect' (ID: 64353)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.7241412997245789
    2. 'inter' → logprob: -0.7241412997245789
    3. 'meet' → logprob: -3.8491413593292236
    4. '```' → logprob: -6.0991411209106445
    5. ' are' → logprob: -6.2241411209106445
    6. 'will' → logprob: -6.9741411209106445
    7. 'con' → logprob: -7.3491411209106445
    8. 'should' → logprob: -7.4741411209106445
    9. 'cross' → logprob: -7.4741411209106445
    10. 'share' → logprob: -8.224141120910645

Token 1285: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015643417835235596
    2. '
' → logprob: -5.01564359664917
    3. ',' → logprob: -5.76564359664917
    4. ':' → logprob: -6.14064359664917
    5. 'def' → logprob: -6.14064359664917
    6. '    
' → logprob: -7.64064359664917
    7. '.' → logprob: -8.015643119812012
    8. '       ' → logprob: -8.765643119812012
    9. 'import' → logprob: -9.890643119812012
    10. ')' → logprob: -10.015643119812012

Token 1286: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740457236766815
    2. 'the' → logprob: -1.474045753479004
    3. 'exact' → logprob: -2.599045753479004
    4. ' a' → logprob: -3.099045753479004
    5. ' the' → logprob: -3.724045753479004
    6. ' exactly' → logprob: -5.599045753479004
    7. 'one' → logprob: -7.099045753479004
    8. ' exact' → logprob: -9.474045753479004
    9. 'same' → logprob: -9.599045753479004
    10. 'an' → logprob: -9.849045753479004

Token 1287: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.009997600689530373
    2. ' same' → logprob: -4.634997367858887
    3. 'exact' → logprob: -8.384997367858887
    4. '```' → logprob: -12.509997367858887
    5. ' exact' → logprob: -12.759997367858887
    6. 'point' → logprob: -12.884997367858887
    7. '<|end|>' → logprob: -13.509997367858887
    8. '
' → logprob: -13.884997367858887
    9. ' ' → logprob: -14.384997367858887
    10. '_same' → logprob: -15.259997367858887

Token 1288: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.12981747090816498
    2. ' point' → logprob: -2.129817485809326
    3. '
' → logprob: -6.504817485809326
    4. 'token' → logprob: -7.629817485809326
    5. '```' → logprob: -7.629817485809326
    6. 'time' → logprob: -9.004817008972168
    7. 'points' → logprob: -9.754817008972168
    8. 'vertex' → logprob: -9.879817008972168
    9. '<|end|>' → logprob: -10.254817008972168
    10. 'line' → logprob: -10.754817008972168

Token 1289: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09223522990942001
    2. '
' → logprob: -3.5922353267669678
    3. ':' → logprob: -3.7172353267669678
    4. 'def' → logprob: -3.9672353267669678
    5. ',' → logprob: -4.592235088348389
    6. '.' → logprob: -6.092235088348389
    7. '    
' → logprob: -6.342235088348389
    8. ' def' → logprob: -7.342235088348389
    9. ' and' → logprob: -7.592235088348389
    10. ',
' → logprob: -7.717235088348389

Token 1290: ' intersection' (ID: 42002)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.2629328668117523
    2. 'that' → logprob: -2.637932777404785
    3. ' all' → logprob: -2.762932777404785
    4. ' lines' → logprob: -3.637932777404785
    5. ' no' → logprob: -3.762932777404785
    6. ' the' → logprob: -4.387932777404785
    7. ' each' → logprob: -4.887932777404785
    8. '#' → logprob: -5.012932777404785
    9. 'the' → logprob: -5.887932777404785
    10. ' edges' → logprob: -5.887932777404785

Token 1291: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.461720734834671
    2. 'points' → logprob: -1.5867207050323486
    3. 'edges' → logprob: -2.8367207050323486
    4. ' edges' → logprob: -3.3367207050323486
    5. ' points' → logprob: -3.5867207050323486
    6. 'for' → logprob: -4.461720943450928
    7. 'neighbors' → logprob: -5.336720943450928
    8. '_points' → logprob: -5.461720943450928
    9. '_edges' → logprob: -6.086720943450928
    10. ' for' → logprob: -6.211720943450928

Token 1292: ' distant' (ID: 51041)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5109001994132996
    2. '   ' → logprob: -1.3859002590179443
    3. ',' → logprob: -3.1359002590179443
    4. 'def' → logprob: -3.7609002590179443
    5. 'are' → logprob: -4.510900020599365
    6. ' have' → logprob: -4.760900020599365
    7. ' for' → logprob: -4.760900020599365
    8. 'import' → logprob: -4.885900020599365
    9. '#' → logprob: -5.135900020599365
    10. '
' → logprob: -5.135900020599365

Token 1293: ' enough' (ID: 4951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1963341236114502
    2. 'from' → logprob: -1.6963341236114502
    3. ' by' → logprob: -2.32133412361145
    4. 'by' → logprob: -2.69633412361145
    5. ' ' → logprob: -2.82133412361145
    6. ')' → logprob: -2.94633412361145
    7. '<' → logprob: -3.69633412361145
    8. '```' → logprob: -3.82133412361145
    9. ' <' → logprob: -3.94633412361145
    10. '<=' → logprob: -4.196333885192871

Token 1294: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7916160225868225
    2. 'def' → logprob: -1.2916159629821777
    3. ':' → logprob: -1.6666159629821777
    4. ' for' → logprob: -3.9166159629821777
    5. ':
' → logprob: -4.291615962982178
    6. '
' → logprob: -4.416615962982178
    7. ' to' → logprob: -4.666615962982178
    8. ',' → logprob: -5.166615962982178
    9. '.' → logprob: -5.166615962982178
    10. ' def' → logprob: -5.666615962982178

Token 1295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00957841519266367
    2. 'def' → logprob: -5.509578227996826
    3. ' def' → logprob: -6.259578227996826
    4. ' faces' → logprob: -6.509578227996826
    5. 'faces' → logprob: -7.259578227996826
    6. ' for' → logprob: -7.759578227996826
    7. '
' → logprob: -7.884578227996826
    8. 'for' → logprob: -9.384578704833984
    9. '#' → logprob: -9.759578704833984
    10. '```' → logprob: -9.884578704833984

Token 1296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035417139530181885
    2. 'faces' → logprob: -3.660417079925537
    3. ' faces' → logprob: -5.785417079925537
    4. 'def' → logprob: -6.660417079925537
    5. 'visited' → logprob: -6.660417079925537
    6. 'face' → logprob: -6.785417079925537
    7. 'for' → logprob: -7.285417079925537
    8. '
' → logprob: -7.785417079925537
    9. ' for' → logprob: -8.410417556762695
    10. ' visited' → logprob: -8.660417556762695

Token 1297: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5395978093147278
    2. 'faces' → logprob: -0.9145978093147278
    3. ' faces' → logprob: -5.164597988128662
    4. 'face' → logprob: -5.164597988128662
    5. 'def' → logprob: -6.414597988128662
    6. 'visited' → logprob: -6.789597988128662
    7. 'cycles' → logprob: -7.664597988128662
    8. 'edges' → logprob: -7.914597988128662
    9. '
' → logprob: -8.164597511291504
    10. 'for' → logprob: -8.414597511291504

Token 1298: ' approach' (ID: 7139)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38728782534599304
    2. ' is' → logprob: -2.3872878551483154
    3. ' def' → logprob: -2.6372878551483154
    4. ' code' → logprob: -3.7622878551483154
    5. ' function' → logprob: -4.012287616729736
    6. ' continues' → logprob: -4.137287616729736
    7. '#' → logprob: -4.262287616729736
    8. 'import' → logprob: -4.387287616729736
    9. ' completes' → logprob: -4.512287616729736
    10. '
' → logprob: -4.512287616729736

Token 1299: ' may' (ID: 1340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2918694019317627
    2. 'def' → logprob: -1.4168694019317627
    3. ' def' → logprob: -1.7918694019317627
    4. ' is' → logprob: -1.9168694019317627
    5. ' continues' → logprob: -2.7918694019317627
    6. ':' → logprob: -3.5418694019317627
    7. ' will' → logprob: -4.291869163513184
    8. 'import' → logprob: -4.791869163513184
    9. ':
' → logprob: -4.916869163513184
    10. ' can' → logprob: -5.041869163513184

Token 1300: ' create' (ID: 2501)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.522554337978363
    2. 'not' → logprob: -1.5225543975830078
    3. 'be' → logprob: -3.022554397583008
    4. ' be' → logprob: -3.147554397583008
    5. ' fail' → logprob: -3.272554397583008
    6. 'fail' → logprob: -4.647554397583008
    7. 'continue' → logprob: -5.022554397583008
    8. '   ' → logprob: -5.147554397583008
    9. ' miss' → logprob: -5.272554397583008
    10. ' have' → logprob: -5.272554397583008

Token 1301: ' repeated' (ID: 24161)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -1.2943615913391113
    2. ' incorrect' → logprob: -2.0443615913391113
    3. 'incorrect' → logprob: -2.2943615913391113
    4. 'duplicates' → logprob: -2.2943615913391113
    5. 'duplicate' → logprob: -2.4193615913391113
    6. 'faces' → logprob: -2.5443615913391113
    7. ' duplicate' → logprob: -2.6693615913391113
    8. ' faces' → logprob: -3.1693615913391113
    9. ' incomplete' → logprob: -3.5443615913391113
    10. ' issues' → logprob: -4.169361591339111

Token 1302: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.8782423138618469
    2. '_faces' → logprob: -1.1282422542572021
    3. 'faces' → logprob: -1.3782422542572021
    4. ' edges' → logprob: -6.003242492675781
    5. 'cycles' → logprob: -6.378242492675781
    6. 'edges' → logprob: -6.628242492675781
    7. ' cycles' → logprob: -6.753242492675781
    8. '_edges' → logprob: -7.253242492675781
    9. '_face' → logprob: -8.128242492675781
    10. '_cycles' → logprob: -8.128242492675781

Token 1303: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24847307801246643
    2. 'def' → logprob: -1.748473048210144
    3. '
' → logprob: -3.3734731674194336
    4. ' def' → logprob: -5.498473167419434
    5. ':' → logprob: -5.873473167419434
    6. '    
' → logprob: -6.748473167419434
    7. ',' → logprob: -6.873473167419434
    8. ' faces' → logprob: -7.623473167419434
    9. ':
' → logprob: -8.123473167419434
    10. '```' → logprob: -8.248473167419434

Token 1304: ' should' (ID: 1757)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3898375332355499
    2. '   ' → logprob: -1.2648375034332275
    3. 'return' → logprob: -3.8898375034332275
    4. '
' → logprob: -5.014837741851807
    5. ' continues' → logprob: -6.264837741851807
    6. '    
' → logprob: -6.389837741851807
    7. ' will' → logprob: -6.514837741851807
    8. ' continue' → logprob: -6.764837741851807
    9. ' is' → logprob: -7.264837741851807
    10. '    ' → logprob: -7.264837741851807

Token 1305: ' be' (ID: 413)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.04327001795172691
    2. ' work' → logprob: -3.4182701110839844
    3. 'continue' → logprob: -5.043270111083984
    4. 'be' → logprob: -6.418270111083984
    5. ' continue' → logprob: -8.543270111083984
    6. ' be' → logprob: -8.543270111083984
    7. 'return' → logprob: -9.168270111083984
    8. 'capture' → logprob: -9.168270111083984
    9. 'find' → logprob: -9.293270111083984
    10. 'pass' → logprob: -9.418270111083984

Token 1306: ' enough' (ID: 4951)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.2745152711868286
    2. 'continued' → logprob: -1.5245152711868286
    3. 's' → logprob: -2.149515151977539
    4. '```' → logprob: -2.649515151977539
    5. 'def' → logprob: -3.149515151977539
    6. 'en' → logprob: -3.274515151977539
    7. 'ok' → logprob: -3.524515151977539
    8. 'completed' → logprob: -3.774515151977539
    9. 'able' → logprob: -3.899515151977539
    10. 'im' → logprob: -4.024515151977539

Token 1307: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03715720772743225
    2. '
' → logprob: -4.16215705871582
    3. ' for' → logprob: -4.28715705871582
    4. ' to' → logprob: -5.53715705871582
    5. '    
' → logprob: -6.66215705871582
    6. 'def' → logprob: -6.78715705871582
    7. 'for' → logprob: -7.78715705871582
    8. '.' → logprob: -8.78715705871582
    9. ',' → logprob: -9.41215705871582
    10. 'import' → logprob: -10.03715705871582

Token 1308: ' this' (ID: 495)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.33221933245658875
    2. 'the' → logprob: -2.082219362258911
    3. ' now' → logprob: -2.582219362258911
    4. 'this' → logprob: -3.082219362258911
    5. 'most' → logprob: -4.332219123840332
    6. 'a' → logprob: -4.832219123840332
    7. 'dem' → logprob: -5.457219123840332
    8. ' demonstration' → logprob: -6.457219123840332
    9. 'many' → logprob: -6.957219123840332
    10. ' the' → logprob: -7.082219123840332

Token 1309: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09095103293657303
    2. 'part' → logprob: -3.8409509658813477
    3. 'task' → logprob: -3.9659509658813477
    4. 'code' → logprob: -4.840950965881348
    5. '```' → logprob: -4.840950965881348
    6. 'problem' → logprob: -5.340950965881348
    7. ' task' → logprob: -5.465950965881348
    8. 'purpose' → logprob: -5.465950965881348
    9. ' part' → logprob: -5.715950965881348
    10. 'function' → logprob: -5.965950965881348

Token 1310: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001659589703194797
    2. '
' → logprob: -6.626659393310547
    3. 'def' → logprob: -9.001659393310547
    4. '    
' → logprob: -9.001659393310547
    5. ':' → logprob: -10.626659393310547
    6. 'import' → logprob: -10.626659393310547
    7. '.' → logprob: -11.001659393310547
    8. ',' → logprob: -11.251659393310547
    9. '```' → logprob: -13.376659393310547
    10. '.
' → logprob: -13.876659393310547

Token 1311: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011498635867610574
    2. 'faces' → logprob: -7.251149654388428
    3. ' faces' → logprob: -8.751150131225586
    4. '
' → logprob: -8.876150131225586
    5. 'def' → logprob: -9.501150131225586
    6. '```' → logprob: -10.751150131225586
    7. '    
' → logprob: -11.376150131225586
    8. 'face' → logprob: -11.626150131225586
    9. 'edges' → logprob: -12.376150131225586
    10. ' face' → logprob: -12.751150131225586

Token 1312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013311995193362236
    2. 'faces' → logprob: -4.763311862945557
    3. ' faces' → logprob: -6.263311862945557
    4. 'for' → logprob: -7.138311862945557
    5. 'def' → logprob: -7.388311862945557
    6. ' for' → logprob: -8.013312339782715
    7. 'edges' → logprob: -8.013312339782715
    8. 'face' → logprob: -8.763312339782715
    9. ' edges' → logprob: -9.263312339782715
    10. 'visited' → logprob: -9.263312339782715

Token 1313: ' #' (ID: 1069)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.09234263002872467
    2. 'visited' → logprob: -2.5923426151275635
    3. 'face' → logprob: -4.717342853546143
    4. 'edges' → logprob: -5.967342853546143
    5. 'used' → logprob: -6.842342853546143
    6. 'seen' → logprob: -8.342342376708984
    7. 'def' → logprob: -8.467342376708984
    8. 'edge' → logprob: -8.842342376708984
    9. '   ' → logprob: -9.717342376708984
    10. '#' (adapté à ' #') → logprob: -9.717342376708984

Token 1314: ' For' (ID: 2214)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5125386118888855
    2. 'faces' → logprob: -1.1375386714935303
    3. 'face' → logprob: -3.0125386714935303
    4. 'edges' → logprob: -4.637538433074951
    5. 'used' → logprob: -4.637538433074951
    6. '   ' → logprob: -4.887538433074951
    7. 'edge' → logprob: -6.387538433074951
    8. 'seen' → logprob: -6.762538433074951
    9. '#' → logprob: -7.387538433074951
    10. 'def' → logprob: -8.38753890991211

Token 1315: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.1883973777294159
    2. 'v' → logprob: -2.5633974075317383
    3. ' each' → logprob: -3.0633974075317383
    4. 'u' → logprob: -4.688397407531738
    5. 'p' → logprob: -5.063397407531738
    6. 'point' → logprob: -5.438397407531738
    7. 'node' → logprob: -5.438397407531738
    8. 'face' → logprob: -5.563397407531738
    9. ' node' → logprob: -5.688397407531738
    10. 'all' → logprob: -5.813397407531738

Token 1316: ' vertex' (ID: 25363)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.27399638295173645
    2. 'u' → logprob: -2.398996353149414
    3. ' node' → logprob: -2.398996353149414
    4. 'point' → logprob: -4.023996353149414
    5. 'edge' → logprob: -4.023996353149414
    6. 'a' → logprob: -4.773996353149414
    7. 'v' → logprob: -5.523996353149414
    8. 'key' → logprob: -6.148996353149414
    9. ' edge' → logprob: -6.148996353149414
    10. 'vertex' → logprob: -6.273996353149414

Token 1317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15277469158172607
    2. 'u' → logprob: -2.2777748107910156
    3. ',u' → logprob: -4.527774810791016
    4. ' in' → logprob: -5.027774810791016
    5. 'neighbors' → logprob: -5.277774810791016
    6. 'in' → logprob: -5.402774810791016
    7. 'v' → logprob: -5.527774810791016
    8. ' u' → logprob: -5.902774810791016
    9. ',v' → logprob: -6.527774810791016
    10. '_neighbors' → logprob: -7.152774810791016

Token 1318: ' sort' (ID: 4506)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1244853734970093
    2. 'neighbors' → logprob: -1.4994853734970093
    3. 'adj' → logprob: -1.8744853734970093
    4. 'for' → logprob: -1.9994853734970093
    5. 'faces' → logprob: -3.624485492706299
    6. 'def' → logprob: -3.999485492706299
    7. 'edges' → logprob: -4.124485492706299
    8. 'points' → logprob: -4.124485492706299
    9. '   ' → logprob: -4.124485492706299
    10. 'dire' → logprob: -4.374485492706299

Token 1319: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.1722584068775177
    2. 'graph' → logprob: -2.1722583770751953
    3. ' neighbors' → logprob: -3.7972583770751953
    4. 'adj' → logprob: -4.672258377075195
    5. 'its' → logprob: -5.297258377075195
    6. 'def' → logprob: -6.297258377075195
    7. 'the' → logprob: -6.922258377075195
    8. ' graph' → logprob: -6.922258377075195
    9. 'ne' → logprob: -7.047258377075195
    10. ' its' → logprob: -7.422258377075195

Token 1320: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162038087844849
    2. 'by' → logprob: -1.3412038087844849
    3. ' by' → logprob: -1.5912038087844849
    4. 'for' → logprob: -3.8412036895751953
    5. 'points' → logprob: -4.466203689575195
    6. ' for' → logprob: -6.091203689575195
    7. 'def' → logprob: -6.591203689575195
    8. 'v' → logprob: -6.591203689575195
    9. 'graph' → logprob: -6.841203689575195
    10. ' points' → logprob: -7.091203689575195

Token 1321: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.12682436406612396
    2. 'polar' → logprob: -2.376824378967285
    3. 'lambda' → logprob: -4.626824378967285
    4. 'their' → logprob: -5.251824378967285
    5. 'atan' → logprob: -5.751824378967285
    6. 'import' → logprob: -6.126824378967285
    7. 'the' → logprob: -6.751824378967285
    8. ' angle' → logprob: -6.876824378967285
    9. 'angular' → logprob: -7.501824378967285
    10. 'angles' → logprob: -7.626824378967285

Token 1322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08779443800449371
    2. 'def' → logprob: -3.087794542312622
    3. ' around' → logprob: -4.587794303894043
    4. 'import' → logprob: -5.087794303894043
    5. 'with' → logprob: -5.462794303894043
    6. ',' → logprob: -5.587794303894043
    7. ' with' → logprob: -5.712794303894043
    8. 'from' → logprob: -5.837794303894043
    9. '
' → logprob: -6.462794303894043
    10. 'around' → logprob: -6.587794303894043

Token 1323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03568485751748085
    2. 'def' → logprob: -4.410685062408447
    3. 'import' → logprob: -4.410685062408447
    4. ' for' → logprob: -5.660685062408447
    5. 'from' → logprob: -6.410685062408447
    6. 'for' → logprob: -6.535685062408447
    7. ' def' → logprob: -6.535685062408447
    8. ',' → logprob: -7.410685062408447
    9. ' around' → logprob: -8.410684585571289
    10. ' import' → logprob: -8.535684585571289

Token 1324: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2566081285476685
    2. 'for' → logprob: -1.6316081285476685
    3. 'graph' → logprob: -2.256608009338379
    4. 'vertex' → logprob: -2.631608009338379
    5. 'angles' → logprob: -2.756608009338379
    6. 'import' → logprob: -2.881608009338379
    7. ' for' → logprob: -3.131608009338379
    8. 'from' → logprob: -3.381608009338379
    9. 'angle' → logprob: -3.631608009338379
    10. ' graph' → logprob: -4.006608009338379

Token 1325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47473615407943726
    2. ' =' → logprob: -0.9747361540794373
    3. 'e' → logprob: -7.599736213684082
    4. '_points' → logprob: -9.474736213684082
    5. ',' → logprob: -10.974736213684082
    6. '=
' → logprob: -11.224736213684082
    7. '```' → logprob: -11.974736213684082
    8. '_pts' → logprob: -12.224736213684082
    9. 'odes' → logprob: -12.224736213684082
    10. '   ' → logprob: -12.224736213684082

Token 1326: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.128163257315464e-07
    2. ' len' → logprob: -15.25
    3. '(len' → logprob: -17.5
    4. '[len' → logprob: -21.0
    5. '=len' → logprob: -22.625
    6. '
' → logprob: -23.5
    7. '   ' → logprob: -23.5
    8. '	len' → logprob: -23.875
    9. 'points' → logprob: -24.25
    10. 'n' → logprob: -25.25

Token 1327: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.008687259629368782
    2. 'points' → logprob: -4.758687496185303
    3. '(graph' → logprob: -9.633687019348145
    4. 'graph' → logprob: -12.008687019348145
    5. ' points' → logprob: -14.133687019348145
    6. '	points' → logprob: -15.008687019348145
    7. '(point' → logprob: -17.50868797302246
    8. '(' → logprob: -17.75868797302246
    9. '_points' → logprob: -18.00868797302246
    10. '
' → logprob: -18.25868797302246

Token 1328: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.025819456204771996
    2. ')' → logprob: -4.025819301605225
    3. '   ' → logprob: -5.275819301605225
    4. '
' → logprob: -6.150819301605225
    5. 'def' → logprob: -7.900819301605225
    6. ')
' → logprob: -12.525819778442383
    7. 'graph' → logprob: -12.650819778442383
    8. '    
' → logprob: -12.650819778442383
    9. 'points' → logprob: -13.025819778442383
    10. ' )
' → logprob: -13.275819778442383

Token 1329: '   ' (ID: 271)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.3151992559432983
    2. '   ' → logprob: -1.4401992559432983
    3. ' neighbors' → logprob: -2.190199375152588
    4. 'angles' → logprob: -2.440199375152588
    5. 'angle' → logprob: -2.815199375152588
    6. 'for' → logprob: -2.940199375152588
    7. 'adj' → logprob: -2.940199375152588
    8. 'neighbor' → logprob: -3.315199375152588
    9. ' angles' → logprob: -3.565199375152588
    10. ' neighbor' → logprob: -3.940199375152588

Token 1330: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.29216206073760986
    2. 'angles' → logprob: -2.5421619415283203
    3. 'neighbor' → logprob: -2.5421619415283203
    4. 'angle' → logprob: -2.9171619415283203
    5. 'adj' → logprob: -3.4171619415283203
    6. '   ' → logprob: -6.04216194152832
    7. 'import' → logprob: -6.04216194152832
    8. 'vertex' → logprob: -6.16716194152832
    9. 'graph' → logprob: -7.04216194152832
    10. 'def' → logprob: -8.16716194152832

Token 1331: '_sorted' (ID: 104993)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018913877429440618
    2. ' =' → logprob: -6.376891613006592
    3. '[' → logprob: -9.251891136169434
    4. '=[]' → logprob: -10.626891136169434
    5. '=[' → logprob: -11.376891136169434
    6. '[n' → logprob: -11.876891136169434
    7. '[v' → logprob: -11.876891136169434
    8. '=
' → logprob: -11.876891136169434
    9. '=[]
' → logprob: -12.501891136169434
    10. ')' → logprob: -12.626891136169434

Token 1332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003398726985324174
    2. ' =' → logprob: -8.00033950805664
    3. '=[]' → logprob: -13.12533950805664
    4. '=[]
' → logprob: -13.87533950805664
    5. '=
' → logprob: -14.00033950805664
    6. '=[' → logprob: -15.37533950805664
    7. '   ' → logprob: -15.50033950805664
    8. '={}' → logprob: -15.87533950805664
    9. '=[
' → logprob: -17.00033950805664
    10. '={}
' → logprob: -17.25033950805664

Token 1333: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016522101359441876
    2. '[]
' → logprob: -6.751652240753174
    3. '[]' → logprob: -7.751652240753174
    4. 'dict' → logprob: -10.501651763916016
    5. '{}' → logprob: -11.501651763916016
    6. '{}
' → logprob: -12.251651763916016
    7. '[n' → logprob: -12.376651763916016
    8. '[]

' → logprob: -12.751651763916016
    9. '{' → logprob: -13.876651763916016
    10. ' [[]' → logprob: -14.126651763916016

Token 1334: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6545633673667908
    2. '()' → logprob: -0.7795633673667908
    3. '=' → logprob: -3.9045634269714355
    4. '={}
' → logprob: -7.9045634269714355
    5. ' =' → logprob: -8.154562950134277
    6. '={}' → logprob: -8.404562950134277
    7. '()

' → logprob: -8.904562950134277
    8. '={' → logprob: -9.029562950134277
    9. 'import' → logprob: -9.154562950134277
    10. '   ' → logprob: -9.529562950134277

Token 1335: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7255097031593323
    2. '   ' → logprob: -0.9755097031593323
    3. ' for' → logprob: -1.9755096435546875
    4. 'import' → logprob: -8.725509643554688
    5. '	for' → logprob: -9.975509643554688
    6. '```' → logprob: -11.475509643554688
    7. '
' → logprob: -12.100509643554688
    8. ' ' → logprob: -12.350509643554688
    9. '    
' → logprob: -14.225509643554688
    10. '  ' → logprob: -14.975509643554688

Token 1336: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009262301027774811
    2. 'import' → logprob: -7.0009260177612305
    3. 'from' → logprob: -11.62592601776123
    4. '   ' → logprob: -12.25092601776123
    5. ' for' → logprob: -14.37592601776123
    6. '```' → logprob: -15.00092601776123
    7. '
' → logprob: -16.250926971435547
    8. 'angle' → logprob: -17.000926971435547
    9. '	for' → logprob: -18.250926971435547
    10. 'def' → logprob: -18.500926971435547

Token 1337: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.018232593312859535
    2. 'i' → logprob: -4.018232822418213
    3. 'v' → logprob: -9.518232345581055
    4. 'node' → logprob: -12.268232345581055
    5. ' u' → logprob: -12.518232345581055
    6. 'k' → logprob: -14.393232345581055
    7. 'key' → logprob: -15.893232345581055
    8. 'idx' → logprob: -16.268232345581055
    9. ' i' → logprob: -17.018232345581055
    10. 'x' → logprob: -18.643232345581055

Token 1338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3491324782371521
    2. 'in' → logprob: -1.2241325378417969
    3. ',' → logprob: -7.349132537841797
    4. '   ' → logprob: -11.099132537841797
    5. '```' → logprob: -11.724132537841797
    6. ',u' → logprob: -12.349132537841797
    7. ' ' → logprob: -12.974132537841797
    8. 'u' → logprob: -13.224132537841797
    9. ',n' → logprob: -13.599132537841797
    10. '	in' → logprob: -13.724132537841797

Token 1339: ' graph' (ID: 7465)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.09691019356250763
    2. 'graph' → logprob: -2.721910238265991
    3. 'range' → logprob: -3.846910238265991
    4. 'neighbors' → logprob: -5.846909999847412
    5. ' points' → logprob: -6.221909999847412
    6. ' range' → logprob: -8.47191047668457
    7. ' graph' → logprob: -9.47191047668457
    8. '(points' → logprob: -10.09691047668457
    9. 'point' → logprob: -10.47191047668457
    10. '(graph' → logprob: -11.34691047668457

Token 1340: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6138654351234436
    2. 'in' → logprob: -0.8638654351234436
    3. '[u' → logprob: -4.113865375518799
    4. ',' → logprob: -4.238865375518799
    5. ':' → logprob: -5.613865375518799
    6. '   ' → logprob: -6.738865375518799
    7. ':
' → logprob: -6.738865375518799
    8. '[' → logprob: -9.363865852355957
    9. '[in' → logprob: -9.613865852355957
    10. ',u' → logprob: -9.613865852355957

Token 1341: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019600611180067062
    2. '       ' → logprob: -4.0196003913879395
    3. ' neighbors' → logprob: -7.8946003913879395
    4. 'neighbors' → logprob: -7.8946003913879395
    5. 'import' → logprob: -8.019600868225098
    6. '```' → logprob: -9.144600868225098
    7. ' points' → logprob: -9.644600868225098
    8. ' pts' → logprob: -9.644600868225098
    9. 'points' → logprob: -9.894600868225098
    10. ' import' → logprob: -11.144600868225098

Token 1342: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9507648944854736
    2. 'pts' → logprob: -1.2007648944854736
    3. 'vec' → logprob: -1.8257648944854736
    4. 'neighbors' → logprob: -2.8257648944854736
    5. 'angles' → logprob: -3.4507648944854736
    6. 'pt' → logprob: -4.0757646560668945
    7. '   ' → logprob: -5.0757646560668945
    8. 'px' → logprob: -5.2007646560668945
    9. 'angle' → logprob: -5.7007646560668945
    10. 'p' → logprob: -5.7007646560668945

Token 1343: ' compute' (ID: 23864)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.8667625188827515
    2. 'import' → logprob: -1.4917625188827515
    3. 'pts' → logprob: -1.7417625188827515
    4. 'def' → logprob: -3.116762638092041
    5. 'angles' → logprob: -3.741762638092041
    6. 'neighbors' → logprob: -3.991762638092041
    7. 'center' → logprob: -4.116762638092041
    8. 'pt' → logprob: -4.491762638092041
    9. 'px' → logprob: -4.616762638092041
    10. 'u' → logprob: -4.866762638092041

Token 1344: ' angles' (ID: 43448)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.678242027759552
    2. 'def' → logprob: -1.8032419681549072
    3. 'angles' → logprob: -1.8032419681549072
    4. 'ux' → logprob: -2.6782419681549072
    5. 'center' → logprob: -4.053242206573486
    6. 'u' → logprob: -4.178242206573486
    7. 'import' → logprob: -4.303242206573486
    8. 'vec' → logprob: -4.928242206573486
    9. '[(' → logprob: -4.928242206573486
    10. 'pts' → logprob: -5.178242206573486

Token 1345: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9972871541976929
    2. 'neighbors' → logprob: -1.1222871541976929
    3. ' neighbors' → logprob: -2.3722872734069824
    4. '   ' → logprob: -2.9972872734069824
    5. ' =' → logprob: -3.1222872734069824
    6. 'angles' → logprob: -3.2472872734069824
    7. '[u' → logprob: -3.8722872734069824
    8. '=' → logprob: -4.497287273406982
    9. 'import' → logprob: -4.622287273406982
    10. 'u' → logprob: -4.747287273406982

Token 1346: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.021082937717437744
    2. 'points' → logprob: -3.896082878112793
    3. ' u' → logprob: -8.271082878112793
    4. ' points' → logprob: -8.771082878112793
    5. 'import' → logprob: -9.646082878112793
    6. '_u' → logprob: -11.646082878112793
    7. '   ' → logprob: -11.646082878112793
    8. '(points' → logprob: -11.771082878112793
    9. '[u' → logprob: -11.771082878112793
    10. '	u' → logprob: -12.021082878112793

Token 1347: ' to' (ID: 316)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1735857725143433
    2. '       ' → logprob: -1.1735857725143433
    3. ' to' → logprob: -1.2985857725143433
    4. 'to' → logprob: -2.423585891723633
    5. ' u' → logprob: -4.798585891723633
    6. '   ' → logprob: -5.673585891723633
    7. ',' → logprob: -6.173585891723633
    8. ' =' → logprob: -7.048585891723633
    9. '           ' → logprob: -7.173585891723633
    10. 'ux' → logprob: -7.423585891723633

Token 1348: ' each' (ID: 2454)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.40409544110298157
    2. 'points' → logprob: -1.7790954113006592
    3. 'v' → logprob: -2.404095411300659
    4. 'u' → logprob: -3.029095411300659
    5. 'neighbor' → logprob: -4.529095649719238
    6. ' neighbors' → logprob: -4.654095649719238
    7. 'each' → logprob: -6.904095649719238
    8. ' points' → logprob: -7.529095649719238
    9. 'graph' → logprob: -7.779095649719238
    10. 'point' → logprob: -7.779095649719238

Token 1349: ' neighbor' (ID: 13034)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.85366350505501e-05
    2. ' v' → logprob: -9.62509822845459
    3. 'neighbor' → logprob: -10.50009822845459
    4. 'w' → logprob: -12.87509822845459
    5. '
' → logprob: -13.75009822845459
    6. 'neighbors' → logprob: -14.25009822845459
    7. '	v' → logprob: -15.87509822845459
    8. ' neighbor' → logprob: -15.87509822845459
    9. 'u' → logprob: -16.125099182128906
    10. 'nbr' → logprob: -16.375099182128906

Token 1350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076903896406292915
    2. 'import' → logprob: -5.3826904296875
    3. ',' → logprob: -7.1326904296875
    4. ':' → logprob: -8.0076904296875
    5. '   ' → logprob: -8.1326904296875
    6. 'u' → logprob: -8.1326904296875
    7. ' points' → logprob: -8.1326904296875
    8. '           ' → logprob: -8.7576904296875
    9. ' (' → logprob: -8.8826904296875
    10. 'points' → logprob: -9.1326904296875

Token 1351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002867042785510421
    2. 'import' → logprob: -6.127867221832275
    3. '   ' → logprob: -7.627867221832275
    4. '           ' → logprob: -10.127866744995117
    5. '```' → logprob: -10.252866744995117
    6. ',' → logprob: -10.752866744995117
    7. 'from' → logprob: -10.877866744995117
    8. '
' → logprob: -12.002866744995117
    9. 'u' → logprob: -12.002866744995117
    10. ' to' → logprob: -12.127866744995117

Token 1352: ' ux' (ID: 130600)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.8149005770683289
    2. 'import' → logprob: -1.5649006366729736
    3. '       ' → logprob: -1.6899006366729736
    4. '   ' → logprob: -2.8149006366729736
    5. ' neighbors' → logprob: -2.9399006366729736
    6. 'angles' → logprob: -3.9399006366729736
    7. 'vec' → logprob: -4.5649003982543945
    8. ' import' → logprob: -5.1899003982543945
    9. ' angles' → logprob: -5.9399003982543945
    10. 'vectors' → logprob: -6.3149003982543945

Token 1353: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5962182879447937
    2. ',' → logprob: -1.4712183475494385
    3. ' =' → logprob: -2.0962183475494385
    4. 'import' → logprob: -2.5962183475494385
    5. ')' → logprob: -5.596218109130859
    6. '=
' → logprob: -5.971218109130859
    7. '   ' → logprob: -6.346218109130859
    8. ',
' → logprob: -6.721218109130859
    9. 'to' → logprob: -6.846218109130859
    10. 'p' → logprob: -6.846218109130859

Token 1354: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -2.2127087504486553e-05
    2. ' uy' → logprob: -10.750021934509277
    3. 'u' → logprob: -15.250021934509277
    4. 'ux' → logprob: -15.250021934509277
    5. 'uz' → logprob: -17.250022888183594
    6. 'uu' → logprob: -17.875022888183594
    7. 'uly' → logprob: -18.750022888183594
    8. 'uyu' → logprob: -18.875022888183594
    9. '
' → logprob: -19.000022888183594
    10. '

' → logprob: -19.125022888183594

Token 1355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11292335391044617
    2. '=' → logprob: -2.2379233837127686
    3. '   ' → logprob: -9.987923622131348
    4. '=u' → logprob: -10.737923622131348
    5. ',' → logprob: -11.237923622131348
    6. '       ' → logprob: -11.862923622131348
    7. 'u' → logprob: -12.362923622131348
    8. ')' → logprob: -12.737923622131348
    9. ',u' → logprob: -13.737923622131348
    10. '=user' → logprob: -13.862923622131348

Token 1356: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07890179008245468
    2. ' points' → logprob: -2.578901767730713
    3. '   ' → logprob: -11.703902244567871
    4. '(points' → logprob: -13.078902244567871
    5. '	points' → logprob: -13.953902244567871
    6. 'point' → logprob: -14.703902244567871
    7. '       ' → logprob: -15.703902244567871
    8. '.points' → logprob: -16.703901290893555
    9. '0' → logprob: -16.953901290893555
    10. '    ' → logprob: -17.078901290893555

Token 1357: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.610702363715973e-06
    2. 'u' → logprob: -11.625009536743164
    3. '
' → logprob: -15.125009536743164
    4. '   ' → logprob: -16.250009536743164
    5. '[' → logprob: -16.250009536743164
    6. '(u' → logprob: -16.625009536743164
    7. '[
' → logprob: -17.875009536743164
    8. ',u' → logprob: -19.000009536743164
    9. '<u' → logprob: -19.625009536743164
    10. '       ' → logprob: -19.625009536743164

Token 1358: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06502700597047806
    2. ')
' → logprob: -2.8150269985198975
    3. '       ' → logprob: -6.440027236938477
    4. ']' → logprob: -7.315027236938477
    5. '   ' → logprob: -7.440027236938477
    6. '
' → logprob: -9.190027236938477
    7. ')' → logprob: -9.815027236938477
    8. ' ' → logprob: -11.940027236938477
    9. '           ' → logprob: -11.940027236938477
    10. ']
' → logprob: -11.940027236938477

Token 1359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.746380237629637e-05
    2. '   ' → logprob: -9.500097274780273
    3. 'import' → logprob: -11.250097274780273
    4. 'for' → logprob: -12.500097274780273
    5. '           ' → logprob: -13.500097274780273
    6. ' for' → logprob: -14.000097274780273
    7. '	' → logprob: -14.000097274780273
    8. '```' → logprob: -14.125097274780273
    9. '	   ' → logprob: -15.000097274780273
    10. 'angles' → logprob: -15.125097274780273

Token 1360: ' nbr' (ID: 137674)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.012895941734314
    2. 'neighbors' → logprob: -1.012895941734314
    3. 'angles' → logprob: -1.887895941734314
    4. 'import' → logprob: -2.5128960609436035
    5. 'angs' → logprob: -5.2628960609436035
    6. 'angle' → logprob: -5.3878960609436035
    7. 'neighbor' → logprob: -5.6378960609436035
    8. 'def' → logprob: -5.8878960609436035
    9. 'ang' → logprob: -5.8878960609436035
    10. '           ' → logprob: -6.1378960609436035

Token 1361: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009463399648666382
    2. '_sorted' → logprob: -5.134463310241699
    3. 'sorted' → logprob: -6.134463310241699
    4. 'bors' → logprob: -7.509463310241699
    5. '_angles' → logprob: -7.634463310241699
    6. '_s' → logprob: -9.1344633102417
    7. 'angles' → logprob: -9.2594633102417
    8. 'ors' → logprob: -10.1344633102417
    9. '_neighbors' → logprob: -10.8844633102417
    10. '=' → logprob: -11.0094633102417

Token 1362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07108968496322632
    2. ' =' → logprob: -3.196089744567871
    3. '=[]' → logprob: -4.321089744567871
    4. '=[]
' → logprob: -5.321089744567871
    5. 's' → logprob: -5.696089744567871
    6. '_angles' → logprob: -5.821089744567871
    7. '_neighbors' → logprob: -7.696089744567871
    8. ']=' → logprob: -7.821089744567871
    9. ')' → logprob: -7.946089744567871
    10. 'angles' → logprob: -8.321089744567871

Token 1363: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1609766036272049
    2. '[]
' → logprob: -1.9109766483306885
    3. '[(' → logprob: -7.285976409912109
    4. '[]' → logprob: -10.66097640991211
    5. 'sorted' → logprob: -10.91097640991211
    6. ' []
' → logprob: -11.91097640991211
    7. '[]

' → logprob: -12.16097640991211
    8. 'list' → logprob: -12.91097640991211
    9. ' graph' → logprob: -12.91097640991211
    10. '[' → logprob: -13.16097640991211

Token 1364: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -13.750001907348633
    3. '.get' → logprob: -15.500001907348633
    4. '[' → logprob: -16.125001907348633
    5. '[
' → logprob: -17.500001907348633
    6. '
' → logprob: -18.000001907348633
    7. 'get' → logprob: -18.375001907348633
    8. 's' → logprob: -18.375001907348633
    9. '(u' → logprob: -18.750001907348633
    10. '\[' → logprob: -19.125001907348633

Token 1365: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2816673815250397
    2. ']' → logprob: -1.4066673517227173
    3. '[u' → logprob: -7.906667232513428
    4. ']
' → logprob: -10.031667709350586
    5. '][' → logprob: -10.156667709350586
    6. ']

' → logprob: -11.281667709350586
    7. 'u' → logprob: -11.531667709350586
    8. '][:' → logprob: -12.031667709350586
    9. '       ' → logprob: -12.156667709350586
    10. '   ' → logprob: -12.281667709350586

Token 1366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008277330780401826
    2. 'import' → logprob: -8.12582778930664
    3. 'angles' → logprob: -8.25082778930664
    4. 'neighbors' → logprob: -9.62582778930664
    5. '   ' → logprob: -10.12582778930664
    6. ' angles' → logprob: -10.37582778930664
    7. 'sorted' → logprob: -10.87582778930664
    8. 'angle' → logprob: -11.12582778930664
    9. ',' → logprob: -11.12582778930664
    10. '```' → logprob: -11.25082778930664

Token 1367: ' def' (ID: 1056)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7428387999534607
    2. '       ' → logprob: -1.4928388595581055
    3. 'angles' → logprob: -1.9928388595581055
    4. 'neighbors' → logprob: -2.7428388595581055
    5. 'def' (adapté à ' def') → logprob: -3.2428388595581055
    6. ' angles' → logprob: -4.6178388595581055
    7. ' def' → logprob: -4.7428388595581055
    8. ' neighbors' → logprob: -4.7428388595581055
    9. ' import' → logprob: -4.9928388595581055
    10. 'from' → logprob: -5.2428388595581055

Token 1368: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0006316631333902478
    2. '_angle' → logprob: -8.750631332397461
    3. 'neighbor' → logprob: -8.750631332397461
    4. 'ang' → logprob: -9.000631332397461
    5. ' angle' → logprob: -9.500631332397461
    6. 'key' → logprob: -9.750631332397461
    7. 'get' → logprob: -10.875631332397461
    8. '
' → logprob: -11.125631332397461
    9. 'def' → logprob: -11.125631332397461
    10. 'compute' → logprob: -13.000631332397461

Token 1369: '(v' (ID: 6932)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8010944128036499
    2. '(u' → logprob: -0.8010944128036499
    3. '(a' → logprob: -3.4260945320129395
    4. '(n' → logprob: -3.5510945320129395
    5. '(v' → logprob: -4.3010945320129395
    6. '(' → logprob: -4.4260945320129395
    7. '(x' → logprob: -5.0510945320129395
    8. '(pt' → logprob: -6.9260945320129395
    9. '(i' → logprob: -7.0510945320129395
    10. '(point' → logprob: -7.0510945320129395

Token 1370: '):
' (ID: 1883)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.004448159132152796
    2. ' (' → logprob: -6.379447937011719
    3. '(u' → logprob: -6.629447937011719
    4. '):' → logprob: -7.754447937011719
    5. '(' → logprob: -7.879447937011719
    6. ')(' → logprob: -8.379447937011719
    7. ',' → logprob: -9.879447937011719
    8. '(x' → logprob: -10.129447937011719
    9. '(a' → logprob: -10.254447937011719
    10. ')' → logprob: -10.254447937011719

Token 1371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6476716995239258
    2. ' (' → logprob: -1.2726716995239258
    3. '(' → logprob: -2.147671699523926
    4. ' return' → logprob: -3.647671699523926
    5. 'return' → logprob: -3.897671699523926
    6. '(v' → logprob: -4.522671699523926
    7. '(x' → logprob: -5.397671699523926
    8. ':' → logprob: -5.397671699523926
    9. '(u' → logprob: -5.647671699523926
    10. '               ' → logprob: -6.022671699523926

Token 1372: ' vx' (ID: 93588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22247034311294556
    2. 'math' → logprob: -2.597470283508301
    3. 'return' → logprob: -2.722470283508301
    4. '           ' → logprob: -3.222470283508301
    5. ' return' → logprob: -5.222470283508301
    6. '               ' → logprob: -5.472470283508301
    7. 'atan' → logprob: -5.722470283508301
    8. ' math' → logprob: -5.972470283508301
    9. ' import' → logprob: -6.972470283508301
    10. 'dx' → logprob: -7.347470283508301

Token 1373: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9032227993011475
    2. '):
' → logprob: -1.4032227993011475
    3. ' =' → logprob: -2.0282227993011475
    4. '):' → logprob: -2.1532227993011475
    5. 'import' → logprob: -3.6532227993011475
    6. '   ' → logprob: -4.403223037719727
    7. ',' → logprob: -4.653223037719727
    8. '():
' → logprob: -4.653223037719727
    9. ' ' → logprob: -4.778223037719727
    10. 'return' → logprob: -5.028223037719727

Token 1374: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00036144492332823575
    2. 'v' → logprob: -8.750361442565918
    3. 'uy' → logprob: -9.750361442565918
    4. '=' → logprob: -9.875361442565918
    5. 'points' → logprob: -10.375361442565918
    6. ' vy' → logprob: -10.500361442565918
    7. ' =' → logprob: -11.375361442565918
    8. '   ' → logprob: -12.500361442565918
    9. 'vx' → logprob: -13.000361442565918
    10. 'wy' → logprob: -13.125361442565918

Token 1375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34911537170410156
    2. ' =' → logprob: -1.2241153717041016
    3. '           ' → logprob: -8.099115371704102
    4. '   ' → logprob: -8.724115371704102
    5. '=v' → logprob: -8.849115371704102
    6. '       ' → logprob: -11.224115371704102
    7. ')' → logprob: -11.474115371704102
    8. 'v' → logprob: -11.974115371704102
    9. '    ' → logprob: -12.349115371704102
    10. '               ' → logprob: -12.724115371704102

Token 1376: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.01608012057840824
    2. ' points' → logprob: -4.141079902648926
    3. '(points' → logprob: -10.141079902648926
    4. '   ' → logprob: -12.766079902648926
    5. 'point' → logprob: -13.141079902648926
    6. '           ' → logprob: -14.516079902648926
    7. '	points' → logprob: -14.516079902648926
    8. '       ' → logprob: -15.266079902648926
    9. '.points' → logprob: -16.516080856323242
    10. '    ' → logprob: -17.391080856323242

Token 1377: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47506147623062134
    2. '[v' → logprob: -0.9750614762306213
    3. '(v' → logprob: -7.600061416625977
    4. '[u' → logprob: -7.850061416625977
    5. ' v' → logprob: -9.850061416625977
    6. 'u' → logprob: -10.350061416625977
    7. '[' → logprob: -12.725061416625977
    8. ')v' → logprob: -13.100061416625977
    9. '
' → logprob: -13.850061416625977
    10. '	v' → logprob: -13.975061416625977

Token 1378: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.48487791419029236
    2. ')
' → logprob: -1.1098779439926147
    3. ']' → logprob: -3.484877824783325
    4. ')' → logprob: -3.984877824783325
    5. '[u' → logprob: -5.984878063201904
    6. '           ' → logprob: -7.234878063201904
    7. '])
' → logprob: -7.359878063201904
    8. 'u' → logprob: -7.609878063201904
    9. '])' → logprob: -7.984878063201904
    10. '       ' → logprob: -8.484877586364746

Token 1379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05987432971596718
    2. 'return' → logprob: -4.184874534606934
    3. ' return' → logprob: -4.684874534606934
    4. 'import' → logprob: -4.809874534606934
    5. '               ' → logprob: -4.934874534606934
    6. '       ' → logprob: -5.559874534606934
    7. '   ' → logprob: -5.809874534606934
    8. '
' → logprob: -6.059874534606934
    9. ' (' → logprob: -6.309874534606934
    10. '(' → logprob: -6.559874534606934

Token 1380: ' ang' (ID: 2929)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07458898425102234
    2. '           ' → logprob: -3.8245890140533447
    3. 'math' → logprob: -3.8245890140533447
    4. 'return' → logprob: -4.324588775634766
    5. ' math' → logprob: -5.574588775634766
    6. ' import' → logprob: -5.574588775634766
    7. 'from' → logprob: -5.699588775634766
    8. ' return' → logprob: -6.324588775634766
    9. '               ' → logprob: -6.449588775634766
    10. ' from' → logprob: -8.449588775634766

Token 1381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5977753400802612
    2. ' =' → logprob: -0.8477753400802612
    3. '           ' → logprob: -4.347775459289551
    4. 'eturn' → logprob: -5.722775459289551
    5. 'return' → logprob: -5.847775459289551
    6. 'import' → logprob: -6.472775459289551
    7. '   ' → logprob: -8.97277545928955
    8. ')' → logprob: -9.22277545928955
    9. '       ' → logprob: -9.47277545928955
    10. 'n' → logprob: -9.59777545928955

Token 1382: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.014344610273838043
    2. '(math' → logprob: -4.264344692230225
    3. ' math' → logprob: -8.639344215393066
    4. '(' → logprob: -13.139344215393066
    5. ' (' → logprob: -15.014344215393066
    6. '   ' → logprob: -15.139344215393066
    7. '.math' → logprob: -15.139344215393066
    8. 'import' → logprob: -15.389344215393066
    9. '(-' → logprob: -15.639344215393066
    10. '((' → logprob: -15.764344215393066

Token 1383: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -1.4378848391061183e-05
    2. 'atan' → logprob: -11.250014305114746
    3. '```' → logprob: -14.625014305114746
    4. '.' → logprob: -14.875014305114746
    5. '.pi' → logprob: -15.500014305114746
    6. '.de' → logprob: -15.875014305114746
    7. '``' → logprob: -16.500015258789062
    8. '
' → logprob: -17.500015258789062
    9. ' atan' → logprob: -17.625015258789062
    10. '`' → logprob: -18.625015258789062

Token 1384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '２' → logprob: -22.125
    4. '۲' → logprob: -23.25
    5. '
' → logprob: -23.625
    6. '₂' → logprob: -23.75
    7. '((' → logprob: -24.0
    8. '(v' → logprob: -24.125
    9. '22' → logprob: -24.875
    10. '(' → logprob: -26.125

Token 1385: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00015264409012161195
    2. '(' → logprob: -9.250152587890625
    3. 'vy' → logprob: -10.375152587890625
    4. '((' → logprob: -10.875152587890625
    5. '2' → logprob: -12.375152587890625
    6. ' (' → logprob: -13.750152587890625
    7. '1' → logprob: -15.125152587890625
    8. 'v' → logprob: -16.125152587890625
    9. ' vy' → logprob: -16.375152587890625
    10. '0' → logprob: -16.500152587890625

Token 1386: 'y' (ID: 88)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.03110518865287304
    2. 'vy' → logprob: -3.9061052799224854
    3. 'y' → logprob: -5.156105041503906
    4. '(y' → logprob: -5.906105041503906
    5. '(' → logprob: -7.031105041503906
    6. 'v' → logprob: -7.531105041503906
    7. '2' → logprob: -8.531105041503906
    8. '1' → logprob: -8.906105041503906
    9. ' (' → logprob: -9.156105041503906
    10. 'ey' → logprob: -9.906105041503906

Token 1387: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35176295042037964
    2. ' -' → logprob: -1.2267630100250244
    3. '(' → logprob: -6.101762771606445
    4. '(v' → logprob: -7.101762771606445
    5. '-v' → logprob: -8.601762771606445
    6. '-(' → logprob: -11.726762771606445
    7. '-u' → logprob: -11.851762771606445
    8. 'vy' → logprob: -11.851762771606445
    9. ' ' → logprob: -12.101762771606445
    10. '(y' → logprob: -12.226762771606445

Token 1388: ' uy' (ID: 37852)
  Prédit: 'uy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -7.624555291840807e-05
    2. ' uy' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.250076293945312
    4. 'ay' → logprob: -15.625076293945312
    5. ' ' → logprob: -16.500076293945312
    6. 'u' → logprob: -16.625076293945312
    7. '  ' → logprob: -16.750076293945312
    8. 'uyer' → logprob: -17.375076293945312
    9. '       ' → logprob: -17.500076293945312
    10. 'у' → logprob: -17.625076293945312

Token 1389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015062130114529282
    2. ',u' → logprob: -9.625150680541992
    3. ' ,' → logprob: -10.125150680541992
    4. ',v' → logprob: -10.500150680541992
    5. 'u' → logprob: -12.000150680541992
    6. 'uy' → logprob: -12.375150680541992
    7. 'ux' → logprob: -13.750150680541992
    8. '),' → logprob: -14.000150680541992
    9. 'v' → logprob: -14.500150680541992
    10. '[u' → logprob: -14.500150680541992

Token 1390: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.0024909991770982742
    2. ' vx' → logprob: -6.002490997314453
    3. '   ' → logprob: -11.252490997314453
    4. '(v' → logprob: -14.377490997314453
    5. '       ' → logprob: -14.502490997314453
    6. '     ' → logprob: -15.002490997314453
    7. '    ' → logprob: -15.127490997314453
    8. ' ' → logprob: -15.627490997314453
    9. '  ' → logprob: -16.377490997314453
    10. '
' → logprob: -16.502490997314453

Token 1391: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0010387639049440622
    2. '-' → logprob: -6.876038551330566
    3. '[' → logprob: -12.751038551330566
    4. 'u' → logprob: -14.126038551330566
    5. ')' → logprob: -14.376038551330566
    6. '[u' → logprob: -14.626038551330566
    7. '-u' → logprob: -14.751038551330566
    8. ' ' → logprob: -15.126038551330566
    9. '(u' → logprob: -15.626038551330566
    10. 'v' → logprob: -16.001039505004883

Token 1392: ' ux' (ID: 130600)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0004306692280806601
    2. ' ux' → logprob: -7.750430583953857
    3. 'ox' → logprob: -18.500431060791016
    4. ' ' → logprob: -19.000431060791016
    5. 'UX' → logprob: -19.250431060791016
    6. 'vx' → logprob: -19.750431060791016
    7. 'Ux' → logprob: -19.750431060791016
    8. '(' → logprob: -19.875431060791016
    9. 'uy' → logprob: -20.125431060791016
    10. 'uxe' → logprob: -20.375431060791016

Token 1393: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08081662654876709
    2. ')' → logprob: -2.5808167457580566
    3. '           ' → logprob: -7.080816745758057
    4. ')+' → logprob: -7.580816745758057
    5. ' )
' → logprob: -7.705816745758057
    6. ')
' → logprob: -9.830816268920898
    7. ' )' → logprob: -10.705816268920898
    8. '       ' → logprob: -10.955816268920898
    9. '   ' → logprob: -11.705816268920898
    10. ')return' → logprob: -12.080816268920898

Token 1394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009410137310624123
    2. '       ' → logprob: -4.7594099044799805
    3. ')' → logprob: -7.5094099044799805
    4. ' return' → logprob: -9.25940990447998
    5. 'return' → logprob: -9.63440990447998
    6. ',' → logprob: -10.63440990447998
    7. ')
' → logprob: -11.00940990447998
    8. '   ' → logprob: -11.25940990447998
    9. '               ' → logprob: -12.00940990447998
    10. '0' → logprob: -12.13440990447998

Token 1395: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016823090612888336
    2. '           ' → logprob: -4.6418232917785645
    3. ' return' → logprob: -5.0168232917785645
    4. '       ' → logprob: -8.391822814941406
    5. 'import' → logprob: -9.891822814941406
    6. 'ang' → logprob: -9.891822814941406
    7. 'if' → logprob: -10.266822814941406
    8. '#' → logprob: -11.391822814941406
    9. 'angle' → logprob: -11.516822814941406
    10. '   ' → logprob: -12.141822814941406

Token 1396: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0919138565659523
    2. 'ang' → logprob: -2.466913938522339
    3. ' (' → logprob: -6.09191370010376
    4. '(-' → logprob: -8.091914176940918
    5. '(v' → logprob: -9.216914176940918
    6. ' ang' → logprob: -9.466914176940918
    7. '   ' → logprob: -9.591914176940918
    8. '((' → logprob: -10.341914176940918
    9. '(math' → logprob: -10.716914176940918
    10. '(angle' → logprob: -11.216914176940918

Token 1397: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.0003062646137550473
    2. '(' → logprob: -8.875306129455566
    3. 'math' → logprob: -9.250306129455566
    4. '2' → logprob: -9.875306129455566
    5. '   ' → logprob: -12.375306129455566
    6. '-ang' → logprob: -12.375306129455566
    7. 'angler' → logprob: -13.250306129455566
    8. '-' → logprob: -13.250306129455566
    9. '(math' → logprob: -13.375306129455566
    10. 'angt' → logprob: -14.000306129455566

Token 1398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132886290550232
    2. ' +' → logprob: -1.313288688659668
    3. '+
' → logprob: -11.813288688659668
    4. ')' → logprob: -12.063288688659668
    5. '+(' → logprob: -12.188288688659668
    6. '+)' → logprob: -13.063288688659668
    7. ' -' → logprob: -13.313288688659668
    8. '1' → logprob: -13.438288688659668
    9. ' +
' → logprob: -14.563288688659668
    10. '-' → logprob: -14.688288688659668

Token 1399: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.824579784530215e-05
    2. 'math' → logprob: -10.1250581741333
    3. ' ' → logprob: -11.8750581741333
    4. '3' → logprob: -11.8750581741333
    5. '(' → logprob: -12.7500581741333
    6. '   ' → logprob: -14.6250581741333
    7. '6' → logprob: -14.7500581741333
    8. '4' → logprob: -15.7500581741333
    9. '360' → logprob: -16.375059127807617
    10. '1' → logprob: -17.125059127807617

Token 1400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.468279752880335e-05
    2. 'math' → logprob: -10.000064849853516
    3. '3' → logprob: -11.750064849853516
    4. ' ' → logprob: -12.125064849853516
    5. '(' → logprob: -12.750064849853516
    6. '   ' → logprob: -13.500064849853516
    7. '6' → logprob: -13.750064849853516
    8. '4' → logprob: -15.500064849853516
    9. '360' → logprob: -16.375064849853516
    10. '```' → logprob: -17.000064849853516

Token 1401: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10034900158643723
    2. 'math' → logprob: -2.350348949432373
    3. ' math' → logprob: -9.600349426269531
    4. ' *' → logprob: -9.975349426269531
    5. '*pi' → logprob: -11.100349426269531
    6. '3' → logprob: -12.350349426269531
    7. '```' → logprob: -13.100349426269531
    8. '(math' → logprob: -13.725349426269531
    9. 'import' → logprob: -13.975349426269531
    10. '*Math' → logprob: -13.975349426269531

Token 1402: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -13.250001907348633
    3. ' math' → logprob: -15.500001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '(math' → logprob: -17.750001907348633
    6. 'pi' → logprob: -18.125001907348633
    7. '```' → logprob: -18.750001907348633
    8. '
' → logprob: -19.500001907348633
    9. 'cmath' → logprob: -20.000001907348633
    10. 'Math' → logprob: -20.250001907348633

Token 1403: '.pi' (ID: 55497)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5190834403038025
    2. 'pi' → logprob: -1.0190834999084473
    3. '.pi' → logprob: -3.1440834999084473
    4. '*pi' → logprob: -8.144083023071289
    5. '.math' → logprob: -8.519083023071289
    6. '3' → logprob: -8.894083023071289
    7. 'import' → logprob: -9.269083023071289
    8. '*' → logprob: -10.019083023071289
    9. '```' → logprob: -10.144083023071289
    10. '.' → logprob: -10.519083023071289

Token 1404: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.754368223482743e-05
    2. ')%' → logprob: -9.875067710876465
    3. ' )' → logprob: -11.250067710876465
    4. ')
' → logprob: -13.375067710876465
    5. ')/(' → logprob: -14.625067710876465
    6. '```' → logprob: -14.875067710876465
    7. '   ' → logprob: -15.250067710876465
    8. '%(' → logprob: -15.750067710876465
    9. 'if' → logprob: -17.00006675720215
    10. '%)' → logprob: -17.37506675720215

Token 1405: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0852216482162476
    2. ' %' → logprob: -1.0852216482162476
    3. ')' → logprob: -1.2102216482162476
    4. '%(' → logprob: -4.460221767425537
    5. ')%' → logprob: -4.835221767425537
    6. '<|end|>' → logprob: -5.335221767425537
    7. ' if' → logprob: -7.960221767425537
    8. '   ' → logprob: -7.960221767425537
    9. '%e' → logprob: -8.335221290588379
    10. 'if' → logprob: -9.210221290588379

Token 1406: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.630610641877865e-06
    2. ' (' → logprob: -12.000006675720215
    3. '2' → logprob: -15.250006675720215
    4. '   ' → logprob: -16.0000057220459
    5. '```' → logprob: -16.8750057220459
    6. 'math' → logprob: -17.0000057220459
    7. '{' → logprob: -17.1250057220459
    8. '(math' → logprob: -17.5000057220459
    9. '\(' → logprob: -17.6250057220459
    10. '`' → logprob: -17.7500057220459

Token 1407: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20148105919361115
    2. '2' → logprob: -1.7014811038970947
    3. ' (' → logprob: -10.201480865478516
    4. ' ' → logprob: -11.576480865478516
    5. 'math' → logprob: -11.576480865478516
    6. '{' → logprob: -12.076480865478516
    7. '   ' → logprob: -13.076480865478516
    8. '360' → logprob: -13.576480865478516
    9. '```' → logprob: -14.076480865478516
    10. '\(' → logprob: -14.576480865478516

Token 1408: '*' (ID: 9)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00346049084328115
    2. '*' → logprob: -5.75346040725708
    3. ' math' → logprob: -8.253460884094238
    4. '(math' → logprob: -10.878460884094238
    5. '3' → logprob: -14.128460884094238
    6. 'import' → logprob: -14.378460884094238
    7. '2' → logprob: -14.753460884094238
    8. '.math' → logprob: -14.753460884094238
    9. 'python' → logprob: -15.128460884094238
    10. '   ' → logprob: -15.128460884094238

Token 1409: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -6.392202976712724e-06
    2. ' math' → logprob: -12.000006675720215
    3. '(math' → logprob: -16.2500057220459
    4. 'Math' → logprob: -18.6250057220459
    5. 'python' → logprob: -19.1250057220459
    6. '3' → logprob: -19.5000057220459
    7. '   ' → logprob: -19.7500057220459
    8. '2' → logprob: -20.7500057220459
    9. '.math' → logprob: -21.0000057220459
    10. ' ' → logprob: -21.3750057220459

Token 1410: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -1.5048530030981055e-06
    2. '.math' → logprob: -14.375001907348633
    3. '.py' → logprob: -15.375001907348633
    4. '.PI' → logprob: -15.375001907348633
    5. 'pi' → logprob: -15.625001907348633
    6. '.' → logprob: -15.875001907348633
    7. '*pi' → logprob: -16.625001907348633
    8. '.python' → logprob: -17.875001907348633
    9. '.p' → logprob: -18.500001907348633
    10. ').' → logprob: -19.000001907348633

Token 1411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03331402689218521
    2. ')
' → logprob: -3.5333139896392822
    3. '   ' → logprob: -6.283314228057861
    4. '       ' → logprob: -6.408314228057861
    5. ' )' → logprob: -10.408313751220703
    6. ' )
' → logprob: -12.658313751220703
    7. ')
' → logprob: -12.783313751220703
    8. ')

' → logprob: -13.158313751220703
    9. '))' → logprob: -14.283313751220703
    10. '           ' → logprob: -15.033313751220703

Token 1412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003589416155591607
    2. '
' → logprob: -8.000358581542969
    3. ')' → logprob: -11.250358581542969
    4. '   ' → logprob: -12.375358581542969
    5. '<|end|>' → logprob: -13.125358581542969
    6. '	' → logprob: -14.000358581542969
    7. ')
' → logprob: -14.375358581542969
    8. 'return' → logprob: -14.625358581542969
    9. '           ' → logprob: -14.625358581542969
    10. '```' → logprob: -14.750358581542969

Token 1413: ' nbr' (ID: 137674)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0454956591129303
    2. 'neighbors' → logprob: -3.5454957485198975
    3. '   ' → logprob: -4.420495510101318
    4. ' neighbors' → logprob: -5.920495510101318
    5. '```' → logprob: -8.670495986938477
    6. 'n' → logprob: -8.670495986938477
    7. 'nbr' (adapté à ' nbr') → logprob: -8.920495986938477
    8. '_neighbors' → logprob: -9.170495986938477
    9. '
' → logprob: -9.670495986938477
    10. ' nbr' → logprob: -9.920495986938477

Token 1414: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01009047869592905
    2. 'ors' → logprob: -4.635090351104736
    3. 'rs' → logprob: -8.260090827941895
    4. 'bors' → logprob: -10.510090827941895
    5. 'hs' → logprob: -10.635090827941895
    6. '       ' → logprob: -11.510090827941895
    7. 'or' → logprob: -12.635090827941895
    8. '   ' → logprob: -12.885090827941895
    9. 'ighbors' → logprob: -13.010090827941895
    10. 'def' → logprob: -13.260090827941895

Token 1415: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00012856863031629473
    2. '.' → logprob: -9.250128746032715
    3. 'sort' → logprob: -10.750128746032715
    4. '=' → logprob: -12.750128746032715
    5. ').' → logprob: -13.375128746032715
    6. ' .' → logprob: -13.875128746032715
    7. ' =' → logprob: -13.875128746032715
    8. ')' → logprob: -14.000128746032715
    9. '<|end|>' → logprob: -14.000128746032715
    10. '<|end|>' → logprob: -14.000128746032715

Token 1416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04814724251627922
    2. ' =' → logprob: -3.173147201538086
    3. '[u' → logprob: -6.173147201538086
    4. '=u' → logprob: -6.548147201538086
    5. '(u' → logprob: -6.798147201538086
    6. '.sort' → logprob: -8.548147201538086
    7. ')' → logprob: -9.423147201538086
    8. '[:]' → logprob: -9.673147201538086
    9. '=[]' → logprob: -10.423147201538086
    10. '=[' → logprob: -10.548147201538086

Token 1417: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -8.061054359131958e-06
    2. ' sorted' → logprob: -11.750007629394531
    3. '(sorted' → logprob: -16.50000762939453
    4. '   ' → logprob: -17.75000762939453
    5. 'list' → logprob: -19.87500762939453
    6. '[' → logprob: -20.00000762939453
    7. '.sorted' → logprob: -21.37500762939453
    8. ' ' → logprob: -21.62500762939453
    9. '  ' → logprob: -22.62500762939453
    10. 's' → logprob: -23.75000762939453

Token 1418: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009091986576095223
    2. '(graph' → logprob: -7.125909328460693
    3. '(' → logprob: -9.875908851623535
    4. 'graph' → logprob: -10.125908851623535
    5. '(ne' → logprob: -11.625908851623535
    6. '((' → logprob: -13.750908851623535
    7. '(
' → logprob: -14.250908851623535
    8. '(nb' → logprob: -14.875908851623535
    9. '(key' → logprob: -15.000908851623535
    10. 'n' → logprob: -15.125908851623535

Token 1419: 'br' (ID: 1697)
  Prédit: 'br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.03073645383119583
    2. 'nbr' → logprob: -4.155736446380615
    3. '(n' → logprob: -4.280736446380615
    4. '(u' → logprob: -8.280736923217773
    5. '[n' → logprob: -9.030736923217773
    6. 'b' → logprob: -9.030736923217773
    7. '(br' → logprob: -9.655736923217773
    8. 'e' → logprob: -9.780736923217773
    9. ' nbr' → logprob: -10.155736923217773
    10. 'ebr' → logprob: -10.780736923217773

Token 1420: 's' (ID: 82)
  Prédit: 'bors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bors' → logprob: -0.9905176758766174
    2. 's' → logprob: -1.8655176162719727
    3. 'rs' → logprob: -2.2405176162719727
    4. '[' → logprob: -2.4905176162719727
    5. 'br' → logprob: -2.4905176162719727
    6. 'e' → logprob: -2.7405176162719727
    7. 'ors' → logprob: -2.9905176162719727
    8. 'ighbors' → logprob: -3.6155176162719727
    9. '(u' → logprob: -3.7405176162719727
    10. '(' → logprob: -4.990517616271973

Token 1421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4688805639743805
    2. ',key' → logprob: -1.218880534172058
    3. '(key' → logprob: -2.5938806533813477
    4. 'key' → logprob: -5.593880653381348
    5. ' ,' → logprob: -8.968880653381348
    6. '   ' → logprob: -9.843880653381348
    7. '(),' → logprob: -10.593880653381348
    8. ' key' → logprob: -10.718880653381348
    9. ')' → logprob: -11.593880653381348
    10. '       ' → logprob: -11.843880653381348

Token 1422: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0009115827269852161
    2. ' key' → logprob: -7.000911712646484
    3. '(key' → logprob: -17.375911712646484
    4. '   ' → logprob: -17.625911712646484
    5. 'reverse' → logprob: -17.750911712646484
    6. ',key' → logprob: -18.125911712646484
    7. '	key' → logprob: -18.875911712646484
    8. '
' → logprob: -19.625911712646484
    9. ' ' → logprob: -19.875911712646484
    10. '       ' → logprob: -20.000911712646484

Token 1423: '=' (ID: 28)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.2058175504207611
    2. '=' → logprob: -1.7058175802230835
    3. '=lambda' → logprob: -5.580817699432373
    4. '(angle' → logprob: -7.955817699432373
    5. 'lambda' → logprob: -8.955817222595215
    6. ' angle' → logprob: -8.955817222595215
    7. '   ' → logprob: -12.080817222595215
    8. '(' → logprob: -12.580817222595215
    9. ')' → logprob: -13.580817222595215
    10. '(lambda' → logprob: -13.705817222595215

Token 1424: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -9.491498531133402e-06
    2. ' angle' → logprob: -11.625009536743164
    3. 'lambda' → logprob: -14.750009536743164
    4. '(angle' → logprob: -16.500009536743164
    5. '
' → logprob: -18.250009536743164
    6. '   ' → logprob: -18.500009536743164
    7. '```' → logprob: -19.875009536743164
    8. 'angular' → logprob: -20.000009536743164
    9. ')' → logprob: -20.125009536743164
    10. '.angle' → logprob: -20.375009536743164

Token 1425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694323062896729
    2. ')
' → logprob: -2.1269431114196777
    3. '   ' → logprob: -11.751943588256836
    4. ' )' → logprob: -13.126943588256836
    5. ',' → logprob: -13.376943588256836
    6. ')
' → logprob: -13.876943588256836
    7. ' )
' → logprob: -14.126943588256836
    8. '       ' → logprob: -14.501943588256836
    9. ')#' → logprob: -14.626943588256836
    10. ')

' → logprob: -15.376943588256836

Token 1426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011677479778882116
    2. '   ' → logprob: -9.125116348266602
    3. ')' → logprob: -12.500116348266602
    4. '           ' → logprob: -14.000116348266602
    5. '
' → logprob: -14.125116348266602
    6. '```' → logprob: -14.250116348266602
    7. 'def' → logprob: -14.875116348266602
    8. ',' → logprob: -15.000116348266602
    9. ')
' → logprob: -15.500116348266602
    10. '<|end|>' → logprob: -16.0001163482666

Token 1427: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.015227762050926685
    2. ' neighbors' → logprob: -4.390227794647217
    3. '       ' → logprob: -6.140227794647217
    4. '   ' → logprob: -7.515227794647217
    5. '
' → logprob: -12.640227317810059
    6. 'for' → logprob: -12.765227317810059
    7. '```' → logprob: -13.015227317810059
    8. ' for' → logprob: -13.515227317810059
    9. '_neighbors' → logprob: -13.640227317810059
    10. ')' → logprob: -13.890227317810059

Token 1428: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00034356804098933935
    2. '[u' → logprob: -8.125343322753906
    3. 'sorted' → logprob: -10.250343322753906
    4. '[' → logprob: -12.375343322753906
    5. 's' → logprob: -12.500343322753906
    6. 'Sorted' → logprob: -13.625343322753906
    7. '
' → logprob: -14.750343322753906
    8. '[_' → logprob: -14.750343322753906
    9. '_scaled' → logprob: -15.000343322753906
    10. '   ' → logprob: -15.250343322753906

Token 1429: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.004806991666555405
    2. '=' → logprob: -5.879806995391846
    3. '[' → logprob: -6.254806995391846
    4. '=u' → logprob: -9.879806518554688
    5. ' =' → logprob: -11.129806518554688
    6. '[v' → logprob: -12.754806518554688
    7. '=[' → logprob: -12.754806518554688
    8. '[n' → logprob: -14.004806518554688
    9. '[i' → logprob: -14.629806518554688
    10. '
' → logprob: -14.629806518554688

Token 1430: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01926915906369686
    2. ']' → logprob: -5.144268989562988
    3. ']=' → logprob: -5.144268989562988
    4. ')' → logprob: -5.394268989562988
    5. ')=' → logprob: -6.019268989562988
    6. ' =' → logprob: -7.769268989562988
    7. '=
' → logprob: -11.769268989562988
    8. '[' → logprob: -12.519268989562988
    9. ',' → logprob: -12.644268989562988
    10. '])' → logprob: -13.269268989562988

Token 1431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015920029545668513
    2. ' =' → logprob: -8.75015926361084
    3. '=
' → logprob: -14.25015926361084
    4. '=

' → logprob: -17.500158309936523
    5. '=}' → logprob: -18.750158309936523
    6. '=[' → logprob: -19.125158309936523
    7. ' =
' → logprob: -19.250158309936523
    8. ')' → logprob: -20.000158309936523
    9. '[' → logprob: -20.125158309936523
    10. '   ' → logprob: -20.125158309936523

Token 1432: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -3.6789137084269896e-05
    2. '[n' → logprob: -10.62503719329834
    3. ' nbr' → logprob: -11.37503719329834
    4. 'nb' → logprob: -14.62503719329834
    5. '[' → logprob: -15.62503719329834
    6. 'n' → logprob: -15.87503719329834
    7. 'nr' → logprob: -16.250036239624023
    8. '   ' → logprob: -16.375036239624023
    9. 'neighbors' → logprob: -17.250036239624023
    10. 'nub' → logprob: -17.750036239624023

Token 1433: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014248480089008808
    2. 'rs' → logprob: -4.264248371124268
    3. 'ors' → logprob: -9.389248847961426
    4. '_sorted' → logprob: -13.889248847961426
    5. 'bs' → logprob: -15.514248847961426
    6. 'hs' → logprob: -16.51424789428711
    7. 'sorted' → logprob: -17.01424789428711
    8. '[' → logprob: -17.26424789428711
    9. 'r' → logprob: -17.63924789428711
    10. 'Rs' → logprob: -18.63924789428711

Token 1434: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0008603655151091516
    2. 'sorted' → logprob: -7.250860214233398
    3. 'Sorted' → logprob: -9.625860214233398
    4. ')' → logprob: -10.625860214233398
    5. '   ' → logprob: -11.000860214233398
    6. '       ' → logprob: -11.750860214233398
    7. '.sorted' → logprob: -12.125860214233398
    8. '(sorted' → logprob: -12.250860214233398
    9. 's' → logprob: -12.250860214233398
    10. '```' → logprob: -12.375860214233398

Token 1435: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22772546112537384
    2. '
' → logprob: -1.6027255058288574
    3. '<|end|>' → logprob: -6.727725505828857
    4. '    
' → logprob: -7.602725505828857
    5. ')' → logprob: -8.3527250289917
    6. ' for' → logprob: -9.4777250289917
    7. 'for' → logprob: -9.9777250289917
    8. '.' → logprob: -9.9777250289917
    9. ',' → logprob: -10.2277250289917
    10. 'def' → logprob: -10.6027250289917

Token 1436: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.638267457485199
    2. 'for' → logprob: -1.8882675170898438
    3. '   ' → logprob: -2.0132675170898438
    4. 'faces' → logprob: -3.1382675170898438
    5. '```' → logprob: -3.2632675170898438
    6. 'def' → logprob: -3.6382675170898438
    7. 'edges' → logprob: -3.8882675170898438
    8. 'face' → logprob: -4.263267517089844
    9. 'next' → logprob: -4.513267517089844
    10. ' for' → logprob: -4.763267517089844

Token 1437: ' faces' (ID: 22060)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3137989044189453
    2. 'faces' (adapté à ' faces') → logprob: -1.6887989044189453
    3. 'face' → logprob: -2.8137989044189453
    4. 'edges' → logprob: -4.813798904418945
    5. 'used' → logprob: -4.938798904418945
    6. '   ' → logprob: -5.313798904418945
    7. 'cycles' → logprob: -7.063798904418945
    8. 'seen' → logprob: -7.188798904418945
    9. 'reverse' → logprob: -7.813798904418945
    10. 'next' → logprob: -7.813798904418945

Token 1438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06218749284744263
    2. '=' → logprob: -2.812187433242798
    3. '=[]' → logprob: -8.562187194824219
    4. '   ' → logprob: -11.312187194824219
    5. '={}' → logprob: -12.062187194824219
    6. ',' → logprob: -12.562187194824219
    7. '=[]
' → logprob: -13.187187194824219
    8. 's' → logprob: -13.812187194824219
    9. '_' → logprob: -13.937187194824219
    10. ')' → logprob: -14.187187194824219

Token 1439: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00045617512660101056
    2. 'set' → logprob: -7.7504563331604
    3. '[]
' → logprob: -10.750455856323242
    4. '[' → logprob: -13.250455856323242
    5. ' []' → logprob: -13.625455856323242
    6. '[]}' → logprob: -15.000455856323242
    7. '{}' → logprob: -15.125455856323242
    8. '[]"' → logprob: -15.625455856323242
    9. '[],' → logprob: -15.875455856323242
    10. '[]

' → logprob: -16.250455856323242

Token 1440: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20851349830627441
    2. '   ' → logprob: -1.7085134983062744
    3. 'used' → logprob: -5.708513259887695
    4. 'for' → logprob: -6.208513259887695
    5. ' visited' → logprob: -7.083513259887695
    6. 'edges' → logprob: -7.333513259887695
    7. 'seen' → logprob: -9.208513259887695
    8. 'edge' → logprob: -9.833513259887695
    9. ' for' → logprob: -9.958513259887695
    10. ' used' → logprob: -10.958513259887695

Token 1441: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.13984321057796478
    2. 'used' → logprob: -2.139843225479126
    3. 'edge' → logprob: -4.514842987060547
    4. 'edges' → logprob: -6.639842987060547
    5. 'seen' → logprob: -7.764842987060547
    6. '#' → logprob: -9.764842987060547
    7. 'for' → logprob: -10.389842987060547
    8. 'face' → logprob: -11.014842987060547
    9. '
' → logprob: -11.639842987060547
    10. 'walk' → logprob: -11.764842987060547

Token 1442: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25526487827301025
    2. '=' → logprob: -1.8802648782730103
    3. '_edges' → logprob: -2.6302647590637207
    4. 'edges' → logprob: -8.130265235900879
    5. '=set' → logprob: -8.130265235900879
    6. '_edge' → logprob: -10.630265235900879
    7. '_faces' → logprob: -10.630265235900879
    8. 'Edges' → logprob: -11.005265235900879
    9. '   ' → logprob: -11.380265235900879
    10. ' ' → logprob: -12.880265235900879

Token 1443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014167149551212788
    2. ' =' → logprob: -4.264167308807373
    3. '=set' → logprob: -12.514166831970215
    4. '={}' → logprob: -18.38916778564453
    5. '=dict' → logprob: -19.13916778564453
    6. '   ' → logprob: -19.51416778564453
    7. ' ' → logprob: -19.63916778564453
    8. 'set' → logprob: -20.01416778564453
    9. '＝' → logprob: -20.26416778564453
    10. '=
' → logprob: -20.76416778564453

Token 1444: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0008542861323803663
    2. 'dict' → logprob: -7.7508544921875
    3. ' set' → logprob: -8.2508544921875
    4. '{}' → logprob: -8.7508544921875
    5. '{' → logprob: -12.7508544921875
    6. ' dict' → logprob: -13.8758544921875
    7. '(set' → logprob: -16.1258544921875
    8. '=set' → logprob: -17.2508544921875
    9. '	set' → logprob: -17.3758544921875
    10. '   ' → logprob: -17.6258544921875

Token 1445: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34376388788223267
    2. '()
' → logprob: -1.718763828277588
    3. '   ' → logprob: -2.468763828277588
    4. '()' → logprob: -4.968763828277588
    5. '(
' → logprob: -5.843763828277588
    6. '    
' → logprob: -5.843763828277588
    7. 'for' → logprob: -5.843763828277588
    8. '(u' → logprob: -5.843763828277588
    9. ',
' → logprob: -6.093763828277588
    10. ',' → logprob: -6.593763828277588

Token 1446: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.772513747215271
    2. '   ' → logprob: -1.397513747215271
    3. ' for' → logprob: -1.522513747215271
    4. '
' → logprob: -2.6475138664245605
    5. '    
' → logprob: -6.7725138664245605
    6. '  
' → logprob: -8.147513389587402
    7. '```' → logprob: -8.647513389587402
    8. ' 
' → logprob: -8.897513389587402
    9. '	for' → logprob: -9.022513389587402
    10. '   
' → logprob: -10.397513389587402

Token 1447: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.032136451452970505
    2. '   ' → logprob: -4.0321364402771
    3. ' for' → logprob: -4.2821364402771
    4. '
' → logprob: -9.657136917114258
    5. '    
' → logprob: -12.407136917114258
    6. '	for' → logprob: -12.782136917114258
    7. '  
' → logprob: -13.782136917114258
    8. ' 
' → logprob: -13.782136917114258
    9. '```' → logprob: -13.907136917114258
    10. ' ' → logprob: -14.157136917114258

Token 1448: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011712945997714996
    2. ' u' → logprob: -6.751171112060547
    3. '(u' → logprob: -14.376171112060547
    4. '   ' → logprob: -15.001171112060547
    5. '	u' → logprob: -16.626171112060547
    6. '[u' → logprob: -16.876171112060547
    7. 'i' → logprob: -17.876171112060547
    8. 'v' → logprob: -18.001171112060547
    9. '```' → logprob: -18.376171112060547
    10. '`' → logprob: -18.501171112060547

Token 1449: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6459094285964966
    2. ' in' → logprob: -1.2709094285964966
    3. ',' → logprob: -1.6459094285964966
    4. ' ,' → logprob: -7.395909309387207
    5. ',v' → logprob: -7.895909309387207
    6. ' ' → logprob: -8.145909309387207
    7. ')' → logprob: -8.645909309387207
    8. ',u' → logprob: -8.770909309387207
    9. '_in' → logprob: -8.895909309387207
    10. '   ' → logprob: -9.145909309387207

Token 1450: ' neighbors' (ID: 31655)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0681043192744255
    2. 'neighbors' → logprob: -2.8181042671203613
    3. 'range' → logprob: -5.693104267120361
    4. 'points' → logprob: -6.318104267120361
    5. ' graph' → logprob: -7.318104267120361
    6. 'list' → logprob: -9.19310474395752
    7. ' neighbors' → logprob: -9.31810474395752
    8. ' range' → logprob: -10.56810474395752
    9. 'neighbor' → logprob: -10.56810474395752
    10. '(graph' → logprob: -11.06810474395752

Token 1451: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.017741423100233078
    2. ':' → logprob: -5.0177412033081055
    3. '[u' → logprob: -5.2677412033081055
    4. '   ' → logprob: -6.0177412033081055
    5. ':
' → logprob: -6.7677412033081055
    6. ' in' → logprob: -7.1427412033081055
    7. 'in' → logprob: -7.6427412033081055
    8. '_' → logprob: -9.017741203308105
    9. '[' → logprob: -9.017741203308105
    10. '       ' → logprob: -9.642741203308105

Token 1452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30822792649269104
    2. '[u' → logprob: -1.6832278966903687
    3. ':
' → logprob: -2.558228015899658
    4. '   ' → logprob: -7.433228015899658
    5. '[' → logprob: -7.933228015899658
    6. 'in' → logprob: -8.1832275390625
    7. '.keys' → logprob: -8.5582275390625
    8. ' in' → logprob: -8.5582275390625
    9. ',' → logprob: -9.5582275390625
    10. ' :' → logprob: -9.8082275390625

Token 1453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2311137467622757
    2. '   ' → logprob: -1.6061137914657593
    3. ' for' → logprob: -5.231113910675049
    4. 'for' → logprob: -9.48111343383789
    5. '    ' → logprob: -10.23111343383789
    6. '```' → logprob: -10.23111343383789
    7. '   ' → logprob: -10.35611343383789
    8. '	   ' → logprob: -10.60611343383789
    9. ' ' → logprob: -10.73111343383789
    10. ' ' → logprob: -10.85611343383789

Token 1454: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4267617166042328
    2. 'for' (adapté à ' for') → logprob: -1.1767617464065552
    3. '   ' → logprob: -3.8017616271972656
    4. 'v' → logprob: -4.426761627197266
    5. ' v' → logprob: -5.676761627197266
    6. ' nbr' → logprob: -7.926761627197266
    7. ' ' → logprob: -7.926761627197266
    8. '       ' → logprob: -8.301761627197266
    9. ' neighbors' → logprob: -9.426761627197266
    10. 'nbr' → logprob: -9.676761627197266

Token 1455: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0028418414294719696
    2. 'w' → logprob: -5.877841949462891
    3. ' v' → logprob: -10.25284194946289
    4. ' w' → logprob: -14.75284194946289
    5. 'vw' → logprob: -14.87784194946289
    6. 'idx' → logprob: -15.12784194946289
    7. 'i' → logprob: -15.37784194946289
    8. '   ' → logprob: -16.37784194946289
    9. 'vv' → logprob: -16.50284194946289
    10. 'b' → logprob: -16.50284194946289

Token 1456: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2812514007091522
    2. ' in' → logprob: -1.4062514305114746
    3. '_in' → logprob: -10.281250953674316
    4. '	in' → logprob: -10.281250953674316
    5. ' ' → logprob: -12.031250953674316
    6. ')' → logprob: -12.156250953674316
    7. 'In' → logprob: -12.781250953674316
    8. 'u' → logprob: -12.906250953674316
    9. 's' → logprob: -13.156250953674316
    10. '[' → logprob: -13.531250953674316

Token 1457: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0001589618914294988
    2. ' neighbors' → logprob: -8.75015926361084
    3. '[' → logprob: -14.87515926361084
    4. '[u' → logprob: -16.125158309936523
    5. '_neighbors' → logprob: -16.875158309936523
    6. '[n' → logprob: -18.000158309936523
    7. 'neighbor' → logprob: -18.500158309936523
    8. '(ne' → logprob: -19.625158309936523
    9. '```' → logprob: -19.625158309936523
    10. 'range' → logprob: -20.375158309936523

Token 1458: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -3.881560041918419e-05
    2. 'sorted' → logprob: -10.750039100646973
    3. '[u' → logprob: -11.125039100646973
    4. 'Sorted' → logprob: -13.625039100646973
    5. '[' → logprob: -15.125039100646973
    6. '[v' → logprob: -15.375039100646973
    7. '```' → logprob: -16.000038146972656
    8. 's' → logprob: -16.250038146972656
    9. '
' → logprob: -16.250038146972656
    10. ')' → logprob: -16.375038146972656

Token 1459: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.246537173457909e-06
    2. 'u' → logprob: -12.500003814697266
    3. '[' → logprob: -16.000003814697266
    4. '
' → logprob: -16.125003814697266
    5. '[
' → logprob: -16.750003814697266
    6. '```' → logprob: -17.000003814697266
    7. '(u' → logprob: -17.125003814697266
    8. '<u' → logprob: -18.375003814697266
    9. '[v' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.500003814697266

Token 1460: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.15453554689884186
    2. ':' → logprob: -3.0295355319976807
    3. ']:
' → logprob: -3.1545355319976807
    4. '):' → logprob: -3.1545355319976807
    5. '):
' → logprob: -5.15453577041626
    6. ']' → logprob: -6.40453577041626
    7. ':
' → logprob: -7.27953577041626
    8. '[' → logprob: -8.029535293579102
    9. '   ' → logprob: -8.654535293579102
    10. '}:' → logprob: -8.654535293579102

Token 1461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20922723412513733
    2. '       ' → logprob: -1.959227204322815
    3. ':' → logprob: -3.2092273235321045
    4. ':
' → logprob: -5.209227085113525
    5. ',' → logprob: -7.084227085113525
    6. '#' → logprob: -8.209227561950684
    7. '```' → logprob: -8.584227561950684
    8. '[' → logprob: -8.709227561950684
    9. '	       ' → logprob: -9.584227561950684
    10. '               ' → logprob: -9.584227561950684

Token 1462: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3683757483959198
    2. ' if' → logprob: -1.2433757781982422
    3. '   ' → logprob: -5.243375778198242
    4. 'key' → logprob: -5.368375778198242
    5. ' key' → logprob: -5.493375778198242
    6. 'edge' → logprob: -5.993375778198242
    7. '           ' → logprob: -6.118375778198242
    8. ' edge' → logprob: -7.743375778198242
    9. '       ' → logprob: -8.243375778198242
    10. '               ' → logprob: -9.743375778198242

Token 1463: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03905557096004486
    2. 'edge' → logprob: -3.539055585861206
    3. 'key' → logprob: -4.914055347442627
    4. '   ' → logprob: -7.039055347442627
    5. '           ' → logprob: -7.789055347442627
    6. 'e' → logprob: -8.164055824279785
    7. 'w' → logprob: -9.664055824279785
    8. 'start' → logprob: -9.789055824279785
    9. '       ' → logprob: -10.039055824279785
    10. 'visited' → logprob: -10.539055824279785

Token 1464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3190322816371918
    2. ' if' → logprob: -1.3190323114395142
    3. '(u' → logprob: -5.694032192230225
    4. ' (' → logprob: -7.069032192230225
    5. '((' → logprob: -7.319032192230225
    6. '('' → logprob: -8.069032669067383
    7. '(' → logprob: -8.444032669067383
    8. ' ' → logprob: -9.194032669067383
    9. '("' → logprob: -9.444032669067383
    10. ' ((' → logprob: -10.569032669067383

Token 1465: ' edge' (ID: 11165)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3917103707790375
    2. '(v' → logprob: -1.1417104005813599
    3. '((' → logprob: -6.26671028137207
    4. ' (' → logprob: -6.39171028137207
    5. '(' → logprob: -6.89171028137207
    6. '(f' → logprob: -9.14171028137207
    7. '(edge' → logprob: -9.76671028137207
    8. '('' → logprob: -10.14171028137207
    9. '(a' → logprob: -11.76671028137207
    10. '(e' → logprob: -12.14171028137207

Token 1466: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.15148338675498962
    2. ' (' → logprob: -2.0264832973480225
    3. '(' → logprob: -5.526483535766602
    4. '(v' → logprob: -5.776483535766602
    5. ' not' → logprob: -7.401483535766602
    6. '
' → logprob: -7.901483535766602
    7. 'not' → logprob: -8.901483535766602
    8. '[u' → logprob: -9.026483535766602
    9. ' ' → logprob: -9.526483535766602
    10. ')' → logprob: -9.526483535766602

Token 1467: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.25532466173171997
    2. '(u' → logprob: -1.5053246021270752
    3. '(v' → logprob: -6.380324840545654
    4. 'v' → logprob: -6.755324840545654
    5. ' (' → logprob: -8.255324363708496
    6. ',u' → logprob: -8.630324363708496
    7. ' u' → logprob: -10.005324363708496
    8. ',' → logprob: -11.380324363708496
    9. '[u' → logprob: -11.630324363708496
    10. '(' → logprob: -12.005324363708496

Token 1468: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.018151583150029182
    2. ',' → logprob: -4.018151760101318
    3. 'v' → logprob: -13.89315128326416
    4. ' ,' → logprob: -15.01815128326416
    5. ',u' → logprob: -15.39315128326416
    6. ',(' → logprob: -16.893152236938477
    7. ',
' → logprob: -17.268152236938477
    8. ',w' → logprob: -17.893152236938477
    9. '
' → logprob: -18.268152236938477
    10. ',n' → logprob: -19.018152236938477

Token 1469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002931558701675385
    2. ',' → logprob: -8.500292778015137
    3. ' not' → logprob: -10.250292778015137
    4. ' )' → logprob: -10.250292778015137
    5. 'not' → logprob: -12.000292778015137
    6. ',)' → logprob: -12.250292778015137
    7. ')is' → logprob: -13.500292778015137
    8. '")' → logprob: -13.500292778015137
    9. ')
' → logprob: -14.125292778015137
    10. '')' → logprob: -14.250292778015137

Token 1470: ' visited' (ID: 18416)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16034170985221863
    2. 'not' → logprob: -2.410341739654541
    3. 'in' → logprob: -3.285341739654541
    4. ',' → logprob: -4.285341739654541
    5. ')' → logprob: -5.535341739654541
    6. ' in' → logprob: -5.785341739654541
    7. '_not' → logprob: -9.785341262817383
    8. '
' → logprob: -11.160341262817383
    9. '_in' → logprob: -11.660341262817383
    10. ',in' → logprob: -11.785341262817383

Token 1471: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9146637320518494
    2. ' ==' → logprob: -1.6646637916564941
    3. ':
' → logprob: -2.289663791656494
    4. '==' → logprob: -2.289663791656494
    5. '               ' → logprob: -2.789663791656494
    6. ':' → logprob: -2.914663791656494
    7. '                           ' → logprob: -3.164663791656494
    8. '   ' → logprob: -4.414663791656494
    9. '                   ' → logprob: -4.664663791656494
    10. ' and' → logprob: -5.039663791656494

Token 1472: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38586705923080444
    2. '           ' → logprob: -2.135867118835449
    3. '                   ' → logprob: -2.760867118835449
    4. ':
' → logprob: -2.885867118835449
    5. ':' → logprob: -3.135867118835449
    6. '   ' → logprob: -3.760867118835449
    7. '```' → logprob: -5.635867118835449
    8. '                       ' → logprob: -5.885867118835449
    9. '                           ' → logprob: -6.260867118835449
    10. ' and' → logprob: -6.760867118835449

Token 1473: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13834691047668457
    2. 'if' (adapté à ' if') → logprob: -2.1383469104766846
    3. '           ' → logprob: -4.7633466720581055
    4. '               ' → logprob: -6.0133466720581055
    5. ' continue' → logprob: -9.013346672058105
    6. '                   ' → logprob: -9.263346672058105
    7. '   ' → logprob: -9.513346672058105
    8. ' (' → logprob: -10.888346672058105
    9. 'continue' → logprob: -10.888346672058105
    10. '                           ' → logprob: -12.013346672058105

Token 1474: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0010971187148243189
    2. '(v' → logprob: -7.001097202301025
    3. ' (' → logprob: -9.001096725463867
    4. '(' → logprob: -9.751096725463867
    5. '
' → logprob: -12.876096725463867
    6. '((' → logprob: -14.751096725463867
    7. '(U' → logprob: -15.001096725463867
    8. '('' → logprob: -15.376096725463867
    9. ' ' → logprob: -15.626096725463867
    10. '   ' → logprob: -16.251096725463867

Token 1475: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.040457421680912e-05
    2. 'v' → logprob: -9.625070571899414
    3. '(u' → logprob: -12.750070571899414
    4. ' u' → logprob: -13.875070571899414
    5. '   ' → logprob: -15.625070571899414
    6. '[u' → logprob: -16.375070571899414
    7. ''u' → logprob: -16.625070571899414
    8. '	u' → logprob: -16.750070571899414
    9. ')' → logprob: -17.250070571899414
    10. ',u' → logprob: -17.625070571899414

Token 1476: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.011048882268369198
    2. ',' → logprob: -4.511048793792725
    3. ',u' → logprob: -15.011049270629883
    4. ' ,' → logprob: -15.136049270629883
    5. ',
' → logprob: -15.886049270629883
    6. 'v' → logprob: -16.511049270629883
    7. ',",' → logprob: -17.261049270629883
    8. ',None' → logprob: -17.261049270629883
    9. ',value' → logprob: -17.761049270629883
    10. ',n' → logprob: -18.011049270629883

Token 1477: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00437885569408536
    2. 'in' → logprob: -5.504378795623779
    3. 'not' → logprob: -9.004379272460938
    4. ' in' → logprob: -9.129379272460938
    5. ' )' → logprob: -10.254379272460938
    6. ' not' → logprob: -10.379379272460938
    7. '   ' → logprob: -14.379379272460938
    8. ',)' → logprob: -15.129379272460938
    9. '[' → logprob: -15.379379272460938
    10. ')==' → logprob: -15.504379272460938

Token 1478: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7002828121185303
    2. ' in' → logprob: -1.2002828121185303
    3. 'in' → logprob: -1.8252828121185303
    4. 'not' → logprob: -3.2002828121185303
    5. ')' → logprob: -7.575283050537109
    6. ' )' → logprob: -13.32528305053711
    7. '	not' → logprob: -13.32528305053711
    8. '   ' → logprob: -13.45028305053711
    9. ':' → logprob: -13.45028305053711
    10. ' ' → logprob: -14.20028305053711

Token 1479: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -6.2729995988775045e-06
    2. ' visited' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. '           ' → logprob: -21.2500057220459
    5. 'seen' → logprob: -22.1250057220459
    6. '```' → logprob: -22.2500057220459
    7. '
' → logprob: -22.2500057220459
    8. ' ' → logprob: -22.7500057220459
    9. '       ' → logprob: -23.0000057220459
    10. '`' → logprob: -24.2500057220459

Token 1480: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -12.87501049041748
    3. '):
' → logprob: -13.25001049041748
    4. ')_' → logprob: -13.50001049041748
    5. '_' → logprob: -13.75001049041748
    6. '   ' → logprob: -14.12501049041748
    7. '```' → logprob: -14.25001049041748
    8. '
' → logprob: -14.37501049041748
    9. '):' → logprob: -14.50001049041748
    10. 'edges' → logprob: -14.87501049041748

Token 1481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9809525609016418
    2. ':
' → logprob: -1.105952501296997
    3. '               ' → logprob: -1.230952501296997
    4. ' or' → logprob: -7.105952739715576
    5. ' continue' → logprob: -7.605952739715576
    6. 'continue' → logprob: -8.605952262878418
    7. ' and' → logprob: -8.855952262878418
    8. '           ' → logprob: -9.730952262878418
    9. ':return' → logprob: -9.730952262878418
    10. '                   ' → logprob: -9.855952262878418

Token 1482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002605975838378072
    2. '                               ' → logprob: -6.37760591506958
    3. ' continue' → logprob: -7.37760591506958
    4. '                       ' → logprob: -9.502606391906738
    5. '                           ' → logprob: -9.627606391906738
    6. '                   ' → logprob: -9.627606391906738
    7. 'continue' → logprob: -10.127606391906738
    8. '           ' → logprob: -11.627606391906738
    9. '                                   ' → logprob: -12.377606391906738
    10. '                                       ' → logprob: -12.877606391906738

Token 1483: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2829529345035553
    2. 'continue' (adapté à ' continue') → logprob: -1.532952904701233
    3. ' continue' → logprob: -3.5329530239105225
    4. '                   ' → logprob: -6.657952785491943
    5. '	continue' → logprob: -10.657953262329102
    6. '           ' → logprob: -12.032953262329102
    7. '   ' → logprob: -12.407953262329102
    8. '                       ' → logprob: -12.782953262329102
    9. '_continue' → logprob: -12.782953262329102
    10. '```' → logprob: -13.407953262329102

Token 1484: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007362048607319593
    2. '               ' → logprob: -5.257361888885498
    3. '            
' → logprob: -7.132361888885498
    4. '
' → logprob: -7.382361888885498
    5. '                   ' → logprob: -9.382362365722656
    6. '		' → logprob: -9.382362365722656
    7. '                           ' → logprob: -9.632362365722656
    8. ' 
' → logprob: -9.757362365722656
    9. '    
' → logprob: -10.007362365722656
    10. '\n' → logprob: -10.007362365722656

Token 1485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016785101033747196
    2. '               ' → logprob: -6.626678466796875
    3. ' continue' → logprob: -9.501678466796875
    4. '       ' → logprob: -9.751678466796875
    5. '		' → logprob: -9.876678466796875
    6. '```' → logprob: -10.251678466796875
    7. '                   ' → logprob: -10.501678466796875
    8. '   ' → logprob: -11.001678466796875
    9. '                           ' → logprob: -11.126678466796875
    10. '
' → logprob: -11.251678466796875

Token 1486: ' face' (ID: 4950)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9285321831703186
    2. 'w' → logprob: -1.0535321235656738
    3. 'curr' → logprob: -2.053532123565674
    4. 'current' → logprob: -3.178532123565674
    5. '   ' → logprob: -3.928532123565674
    6. 'path' → logprob: -4.553532123565674
    7. '#w' → logprob: -4.678532123565674
    8. 'prev' → logprob: -4.678532123565674
    9. 'angle' → logprob: -4.803532123565674
    10. 'face' (adapté à ' face') → logprob: -4.803532123565674

Token 1487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0375082790851593
    2. '_vertices' → logprob: -3.912508249282837
    3. '_points' → logprob: -4.787508487701416
    4. '_nodes' → logprob: -6.287508487701416
    5. '_edges' → logprob: -6.412508487701416
    6. '_pts' → logprob: -6.662508487701416
    7. '_edge' → logprob: -7.162508487701416
    8. '_stack' → logprob: -7.537508487701416
    9. '_path' → logprob: -7.662508487701416
    10. '=' → logprob: -7.787508487701416

Token 1488: ' []
' (ID: 8911)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.003609578125178814
    2. '[(' → logprob: -6.003609657287598
    3. '[' → logprob: -7.503609657287598
    4. ' [' → logprob: -7.753609657287598
    5. '[]
' → logprob: -9.128609657287598
    6. '[v' → logprob: -10.378609657287598
    7. '[]' → logprob: -11.378609657287598
    8. ' [(' → logprob: -14.128609657287598
    9. '(u' → logprob: -14.753609657287598
    10. '[a' → logprob: -15.878609657287598

Token 1489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01822521537542343
    2. 'current' → logprob: -4.643225193023682
    3. '   ' → logprob: -5.393225193023682
    4. ' current' → logprob: -6.018225193023682
    5. ' curr' → logprob: -7.768225193023682
    6. 'curr' → logprob: -7.893225193023682
    7. 'u' → logprob: -8.14322566986084
    8. ' cur' → logprob: -9.26822566986084
    9. 'cur' → logprob: -9.51822566986084
    10. '               ' → logprob: -9.76822566986084

Token 1490: ' current' (ID: 2208)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.38903456926345825
    2. 'current' (adapté à ' current') → logprob: -1.3890345096588135
    3. 'cur' → logprob: -2.6390345096588135
    4. ' curr' → logprob: -7.764034748077393
    5. 'cu' → logprob: -7.889034748077393
    6. '   ' → logprob: -7.889034748077393
    7. 'start' → logprob: -8.764034271240234
    8. 'w' → logprob: -9.139034271240234
    9. 'c' → logprob: -10.139034271240234
    10. 'u' → logprob: -10.889034271240234

Token 1491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7408860325813293
    2. '=' → logprob: -0.9908860325813293
    3. 'u' → logprob: -2.6158859729766846
    4. '=u' → logprob: -2.9908859729766846
    5. ',' → logprob: -3.9908859729766846
    6. ',u' → logprob: -4.990886211395264
    7. '_u' → logprob: -6.990886211395264
    8. '=v' → logprob: -6.990886211395264
    9. 'v' → logprob: -7.615886211395264
    10. ',v' → logprob: -7.865886211395264

Token 1492: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5532604455947876
    2. 'u' → logprob: -0.9282604455947876
    3. '(u' → logprob: -3.803260326385498
    4. '(v' → logprob: -4.928260326385498
    5. ' v' → logprob: -9.803260803222656
    6. ' u' → logprob: -10.053260803222656
    7. ' (' → logprob: -10.303260803222656
    8. '   ' → logprob: -11.678260803222656
    9. '(' → logprob: -12.178260803222656
    10. '[u' → logprob: -12.803260803222656

Token 1493: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30058565735816956
    2. '           ' → logprob: -1.5505856275558472
    3. 'next' → logprob: -3.8005857467651367
    4. ',next' → logprob: -5.425585746765137
    5. 'current' → logprob: -5.675585746765137
    6. '
' → logprob: -5.800585746765137
    7. 'prev' → logprob: -5.800585746765137
    8. 'while' → logprob: -6.050585746765137
    9. ',v' → logprob: -6.425585746765137
    10. 'neighbor' → logprob: -6.425585746765137

Token 1494: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1104087308049202
    2. 'next' → logprob: -2.4854087829589844
    3. 'current' → logprob: -5.360408782958984
    4. ',next' → logprob: -5.360408782958984
    5. '           ' → logprob: -5.610408782958984
    6. 'neighbor' → logprob: -6.110408782958984
    7. 'vertex' → logprob: -6.610408782958984
    8. 'prev' → logprob: -6.735408782958984
    9. ' next' → logprob: -7.735408782958984
    10. ',v' → logprob: -7.735408782958984

Token 1495: ' prev' (ID: 10258)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.517272024415433e-05
    2. 'next' → logprob: -10.125075340270996
    3. 'current' → logprob: -10.500075340270996
    4. 'prev' (adapté à ' prev') → logprob: -12.750075340270996
    5. ' v' → logprob: -13.125075340270996
    6. '(v' → logprob: -14.125075340270996
    7. 'neighbor' → logprob: -14.375075340270996
    8. '   ' → logprob: -14.500075340270996
    9. 'w' → logprob: -14.875075340270996
    10. ',v' → logprob: -16.00007438659668

Token 1496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10272715985774994
    2. ' =' → logprob: -2.852727174758911
    3. ',' → logprob: -3.227727174758911
    4. ')' → logprob: -8.477726936340332
    5. '=
' → logprob: -10.602726936340332
    6. '=v' → logprob: -11.227726936340332
    7. ',v' → logprob: -11.852726936340332
    8. ',
' → logprob: -12.102726936340332
    9. '=current' → logprob: -12.352726936340332
    10. 'v' → logprob: -12.602726936340332

Token 1497: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -18.375
    3. 'None' → logprob: -20.375
    4. '(v' → logprob: -21.75
    5. 'u' → logprob: -22.375
    6. '[v' → logprob: -22.375
    7. '	v' → logprob: -22.625
    8. '$v' → logprob: -23.625
    9. '_v' → logprob: -23.75
    10. '   ' → logprob: -24.625

Token 1498: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049084726721048355
    2. '
' → logprob: -3.7990846633911133
    3. ' while' → logprob: -4.049084663391113
    4. 'while' → logprob: -5.549084663391113
    5. '   ' → logprob: -6.049084663391113
    6. ',' → logprob: -7.799084663391113
    7. '            
' → logprob: -8.299084663391113
    8. '<|end|>' → logprob: -8.299084663391113
    9. '       ' → logprob: -8.549084663391113
    10. '#' → logprob: -9.049084663391113

Token 1499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033796546631492674
    2. ' while' → logprob: -9.000337600708008
    3. 'while' → logprob: -9.625337600708008
    4. '   ' → logprob: -9.750337600708008
    5. '       ' → logprob: -9.875337600708008
    6. '```' → logprob: -11.500337600708008
    7. '<|end|>' → logprob: -11.750337600708008
    8. ',' → logprob: -11.875337600708008
    9. '               ' → logprob: -13.125337600708008
    10. '		' → logprob: -13.250337600708008

Token 1500: ' face' (ID: 4950)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00021617230959236622
    2. ' while' → logprob: -9.250216484069824
    3. 'angle' → logprob: -10.125216484069824
    4. 'face' (adapté à ' face') → logprob: -10.250216484069824
    5. '   ' → logprob: -11.375216484069824
    6. '           ' → logprob: -11.375216484069824
    7. 'start' → logprob: -11.875216484069824
    8. '
' → logprob: -12.500216484069824
    9. 'first' → logprob: -13.125216484069824
    10. 'import' → logprob: -13.500216484069824

Token 1501: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.031036660075187683
    2. '=' → logprob: -4.406036853790283
    3. ' =' → logprob: -4.406036853790283
    4. '.' → logprob: -5.156036853790283
    5. '=[]' → logprob: -8.781036376953125
    6. 'append' → logprob: -9.031036376953125
    7. '=[]
' → logprob: -10.656036376953125
    8. '_append' → logprob: -11.031036376953125
    9. ':' → logprob: -11.281036376953125
    10. '.app' → logprob: -11.531036376953125

Token 1502: '(u' (ID: 17057)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.682930588722229
    2. 'current' → logprob: -0.932930588722229
    3. 'u' → logprob: -2.6829304695129395
    4. '(u' → logprob: -3.6829304695129395
    5. '(points' → logprob: -5.1829304695129395
    6. 'points' → logprob: -6.0579304695129395
    7. ' current' → logprob: -13.432930946350098
    8. '[current' → logprob: -14.182930946350098
    9. ' u' → logprob: -14.682930946350098
    10. '(' → logprob: -15.307930946350098

Token 1503: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009789501316845417
    2. ')' → logprob: -4.63478946685791
    3. '           ' → logprob: -10.75978946685791
    4. ')
' → logprob: -12.13478946685791
    5. ')

' → logprob: -12.75978946685791
    6. ' )
' → logprob: -14.00978946685791
    7. ',
' → logprob: -14.50978946685791
    8. ',' → logprob: -14.75978946685791
    9. '   ' → logprob: -14.88478946685791
    10. '               ' → logprob: -15.13478946685791

Token 1504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001328095211647451
    2. ' while' → logprob: -7.626327991485596
    3. '
' → logprob: -7.751327991485596
    4. '		' → logprob: -8.626328468322754
    5. 'while' → logprob: -9.876328468322754
    6. '   ' → logprob: -10.001328468322754
    7. '       ' → logprob: -10.876328468322754
    8. '            
' → logprob: -11.001328468322754
    9. ',' → logprob: -11.376328468322754
    10. '               ' → logprob: -11.376328468322754

Token 1505: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0007662679417990148
    2. 'next' → logprob: -7.250766277313232
    3. ' while' → logprob: -10.875765800476074
    4. 'w' → logprob: -11.375765800476074
    5. 'current' → logprob: -11.375765800476074
    6. '   ' → logprob: -12.250765800476074
    7. '           ' → logprob: -13.125765800476074
    8. '```' → logprob: -13.125765800476074
    9. 'angle' → logprob: -13.250765800476074
    10. 'neighbor' → logprob: -14.000765800476074

Token 1506: ' True' (ID: 6432)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12755276262760162
    2. 'prev' → logprob: -2.3775527477264404
    3. 'True' → logprob: -3.6275527477264404
    4. ' current' → logprob: -8.75255298614502
    5. ' True' → logprob: -8.87755298614502
    6. ' prev' → logprob: -9.87755298614502
    7. '(current' → logprob: -10.87755298614502
    8. '(True' → logprob: -11.50255298614502
    9. '(prev' → logprob: -12.00255298614502
    10. '   ' → logprob: -12.12755298614502

Token 1507: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36007460951805115
    2. ':
' → logprob: -1.3600746393203735
    3. ':' → logprob: -3.235074520111084
    4. '           ' → logprob: -6.110074520111084
    5. '):
' → logprob: -6.860074520111084
    6. ',' → logprob: -7.360074520111084
    7. '<|end|>' → logprob: -7.610074520111084
    8. '   ' → logprob: -7.735074520111084
    9. '       ' → logprob: -8.235074996948242
    10. ' and' → logprob: -8.485074996948242

Token 1508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03553449735045433
    2. '           ' → logprob: -3.410534381866455
    3. '   ' → logprob: -7.160534381866455
    4. '```' → logprob: -7.910534381866455
    5. ' next' → logprob: -8.410534858703613
    6. '       ' → logprob: -9.410534858703613
    7. 'next' → logprob: -9.535534858703613
    8. 'token' → logprob: -9.785534858703613
    9. '	           ' → logprob: -10.160534858703613
    10. '                   ' → logprob: -10.285534858703613

Token 1509: ' visited' (ID: 18416)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.12071429193019867
    2. '#' → logprob: -3.3707141876220703
    3. 'idx' → logprob: -3.4957141876220703
    4. 'nbr' → logprob: -3.7457141876220703
    5. 'next' → logprob: -3.8707141876220703
    6. '       ' → logprob: -7.12071418762207
    7. '           ' → logprob: -7.74571418762207
    8. 'curr' → logprob: -7.74571418762207
    9. '   ' → logprob: -7.87071418762207
    10. 'ne' → logprob: -7.99571418762207

Token 1510: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -13.750001907348633
    3. 'edges' → logprob: -14.750001907348633
    4. '_edge' → logprob: -15.250001907348633
    5. '```' → logprob: -16.125001907348633
    6. 'Edges' → logprob: -17.000001907348633
    7. '_tokens' → logprob: -17.500001907348633
    8. '_faces' → logprob: -17.625001907348633
    9. '(_' → logprob: -18.000001907348633
    10. '_angles' → logprob: -18.125001907348633

Token 1511: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00020628207130357623
    2. '.' → logprob: -8.500205993652344
    3. 'add' → logprob: -13.375205993652344
    4. ' .' → logprob: -13.750205993652344
    5. '_add' → logprob: -16.625205993652344
    6. '.Add' → logprob: -17.500205993652344
    7. '   ' → logprob: -17.500205993652344
    8. '	add' → logprob: -18.625205993652344
    9. '           ' → logprob: -19.000205993652344
    10. '
' → logprob: -19.125205993652344

Token 1512: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.026213321834802628
    2. '(' → logprob: -4.0262131690979
    3. '(current' → logprob: -5.0262131690979
    4. '(prev' → logprob: -6.5262131690979
    5. '(previous' → logprob: -13.526213645935059
    6. ' (' → logprob: -14.151213645935059
    7. '(curr' → logprob: -16.026212692260742
    8. ' ' → logprob: -16.026212692260742
    9. '(pre' → logprob: -16.651212692260742
    10. '(last' → logprob: -16.776212692260742

Token 1513: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0010948538547381759
    2. 'prev' → logprob: -6.876094818115234
    3. ' current' → logprob: -9.751094818115234
    4. 'previous' → logprob: -13.501094818115234
    5. ',current' → logprob: -13.876094818115234
    6. '(current' → logprob: -14.251094818115234
    7. '   ' → logprob: -15.376094818115234
    8. 'u' → logprob: -15.501094818115234
    9. 'curr' → logprob: -15.876094818115234
    10. ' prev' → logprob: -16.126094818115234

Token 1514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013738033594563603
    2. ',v' → logprob: -6.626373767852783
    3. ' ,' → logprob: -11.251374244689941
    4. ',current' → logprob: -11.251374244689941
    5. ',next' → logprob: -11.251374244689941
    6. ',
' → logprob: -12.626374244689941
    7. ',p' → logprob: -12.876374244689941
    8. '(prev' → logprob: -13.626374244689941
    9. ',len' → logprob: -15.126374244689941
    10. 'prev' → logprob: -15.126374244689941

Token 1515: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0002043748099822551
    2. ' prev' → logprob: -8.500204086303711
    3. 'v' → logprob: -14.375204086303711
    4. '(prev' → logprob: -15.500204086303711
    5. 'current' → logprob: -16.37520408630371
    6. '	prev' → logprob: -17.87520408630371
    7. '
' → logprob: -19.87520408630371
    8. '.prev' → logprob: -20.62520408630371
    9. '   ' → logprob: -20.62520408630371
    10. 'u' → logprob: -21.00020408630371

Token 1516: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4987260103225708
    2. ')' → logprob: -0.9987260103225708
    3. '))
' → logprob: -3.9987258911132812
    4. '))' → logprob: -5.123725891113281
    5. ')
' → logprob: -10.873725891113281
    6. '               ' → logprob: -11.248725891113281
    7. ')`
' → logprob: -11.998725891113281
    8. '),' → logprob: -12.623725891113281
    9. '                   ' → logprob: -12.748725891113281
    10. ')

' → logprob: -13.123725891113281

Token 1517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026088329032063484
    2. '           ' → logprob: -6.377608776092529
    3. '   ' → logprob: -8.627609252929688
    4. '       ' → logprob: -8.752609252929688
    5. '	           ' → logprob: -9.002609252929688
    6. '                   ' → logprob: -9.502609252929688
    7. '```' → logprob: -9.627609252929688
    8. '			' → logprob: -9.877609252929688
    9. '		       ' → logprob: -10.377609252929688
    10. '<|end|>' → logprob: -10.502609252929688

Token 1518: ' face' (ID: 4950)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.3823114335536957
    2. '#' → logprob: -1.882311463356018
    3. 'next' → logprob: -2.2573113441467285
    4. 'idx' → logprob: -3.1323113441467285
    5. 'nbr' → logprob: -4.5073113441467285
    6. 'n' → logprob: -7.0073113441467285
    7. 'found' → logprob: -7.2573113441467285
    8. 'nv' → logprob: -7.6323113441467285
    9. '       ' → logprob: -7.6323113441467285
    10. 'curr' → logprob: -7.8823113441467285

Token 1519: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00754593126475811
    2. '.' → logprob: -5.0075459480285645
    3. '=' → logprob: -8.757545471191406
    4. ',' → logprob: -8.757545471191406
    5. '_idx' → logprob: -8.757545471191406
    6. '_index' → logprob: -9.007545471191406
    7. 'append' → logprob: -10.132545471191406
    8. '.insert' → logprob: -10.257545471191406
    9. ' =' → logprob: -10.507545471191406
    10. '.reverse' → logprob: -10.632545471191406

Token 1520: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -4.3464544432936236e-05
    2. 'prev' → logprob: -10.250043869018555
    3. '(current' → logprob: -11.875043869018555
    4. '(' → logprob: -15.000043869018555
    5. '(next' → logprob: -15.250043869018555
    6. '(previous' → logprob: -16.125043869018555
    7. ' prev' → logprob: -16.250043869018555
    8. '	prev' → logprob: -16.375043869018555
    9. '(curr' → logprob: -16.750043869018555
    10. '(pr' → logprob: -17.375043869018555

Token 1521: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030402658507227898
    2. ')' → logprob: -3.530402660369873
    3. '               ' → logprob: -7.405402660369873
    4. ')
' → logprob: -10.280402183532715
    5. ')

' → logprob: -13.280402183532715
    6. '           ' → logprob: -13.280402183532715
    7. ')`
' → logprob: -13.280402183532715
    8. '):
' → logprob: -13.530402183532715
    9. '))
' → logprob: -14.280402183532715
    10. ' )
' → logprob: -14.530402183532715

Token 1522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029195917304605246
    2. '
' → logprob: -6.627919673919678
    3. '                
' → logprob: -7.002919673919678
    4. '           ' → logprob: -8.37791919708252
    5. '                   ' → logprob: -9.62791919708252
    6. '```' → logprob: -9.87791919708252
    7. ',' → logprob: -10.50291919708252
    8. '\n' → logprob: -10.62791919708252
    9. '  
' → logprob: -10.75291919708252
    10. '#' → logprob: -11.00291919708252

Token 1523: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9357283115386963
    2. 'neighbors' → logprob: -1.1857283115386963
    3. 'nbr' → logprob: -1.3107283115386963
    4. 'next' → logprob: -4.310728073120117
    5. 'found' → logprob: -4.935728073120117
    6. 'n' → logprob: -5.310728073120117
    7. 'nv' → logprob: -6.185728073120117
    8. 'ne' → logprob: -6.810728073120117
    9. 'curr' → logprob: -7.060728073120117
    10. 'nb' → logprob: -7.310728073120117

Token 1524: ' find' (ID: 1646)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.4328095316886902
    2. 'nbr' → logprob: -1.557809591293335
    3. '#' → logprob: -2.182809591293335
    4. 'idx' → logprob: -4.932809352874756
    5. 'curr' → logprob: -5.557809352874756
    6. 'u' → logprob: -5.682809352874756
    7. 'next' → logprob: -5.807809352874756
    8. 'n' → logprob: -6.182809352874756
    9. 'ne' → logprob: -6.557809352874756
    10. 'nv' → logprob: -6.932809352874756

Token 1525: ' index' (ID: 3472)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.2853207588195801
    2. 'nbr' → logprob: -2.03532075881958
    3. 'u' → logprob: -3.16032075881958
    4. 'idx' → logprob: -3.16032075881958
    5. '#' → logprob: -4.78532075881958
    6. 'nv' → logprob: -5.03532075881958
    7. 'curr' → logprob: -5.66032075881958
    8. 'ne' → logprob: -6.03532075881958
    9. 'index' → logprob: -6.41032075881958
    10. 'next' → logprob: -6.53532075881958

Token 1526: ' of' (ID: 328)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5425190925598145
    2. ' =' → logprob: -1.9175190925598145
    3. '=' → logprob: -2.1675190925598145
    4. 'in' → logprob: -3.2925190925598145
    5. '               ' → logprob: -3.7925190925598145
    6. '_idx' → logprob: -3.9175190925598145
    7. '_in' → logprob: -4.0425190925598145
    8. '                   ' → logprob: -4.2925190925598145
    9. 'index' → logprob: -4.6675190925598145
    10. 'current' → logprob: -5.2925190925598145

Token 1527: ' current' (ID: 2208)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.000634639582131058
    2. 'neighbors' → logprob: -7.625634670257568
    3. 'current' → logprob: -9.87563419342041
    4. '(prev' → logprob: -10.25063419342041
    5. ' prev' → logprob: -10.25063419342041
    6. 'v' → logprob: -12.12563419342041
    7. '	prev' → logprob: -12.37563419342041
    8. '[' → logprob: -13.00063419342041
    9. 'import' → logprob: -13.12563419342041
    10. 'neighbor' → logprob: -13.12563419342041

Token 1528: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5599190592765808
    2. '=' → logprob: -1.6849191188812256
    3. 'neighbors' → logprob: -2.3099191188812256
    4. ' =' → logprob: -2.8099191188812256
    5. 'neighbor' → logprob: -3.3099191188812256
    6. '_neighbors' → logprob: -3.5599191188812256
    7. '_neighbor' → logprob: -5.3099188804626465
    8. '_in' → logprob: -6.0599188804626465
    9. 'nbr' → logprob: -6.5599188804626465
    10. ' in' → logprob: -6.6849188804626465

Token 1529: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0002656271681189537
    2. ' neighbors' → logprob: -8.250266075134277
    3. '[' → logprob: -13.250266075134277
    4. '(ne' → logprob: -14.750266075134277
    5. '   ' → logprob: -14.750266075134277
    6. '           ' → logprob: -14.875266075134277
    7. '               ' → logprob: -15.250266075134277
    8. '                   ' → logprob: -15.500266075134277
    9. '_neighbors' → logprob: -15.500266075134277
    10. '```' → logprob: -15.875266075134277

Token 1530: '_sorted' (ID: 104993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8016082048416138
    2. '[current' → logprob: -0.8016082048416138
    3. '_sorted' → logprob: -2.551608085632324
    4. 'neighbors' → logprob: -4.926608085632324
    5. 'prev' → logprob: -5.426608085632324
    6. ' =' → logprob: -5.801608085632324
    7. 'current' → logprob: -5.926608085632324
    8. '=' → logprob: -6.176608085632324
    9. '[next' → logprob: -6.926608085632324
    10. '_prev' → logprob: -7.051608085632324

Token 1531: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14844629168510437
    2. '[current' → logprob: -2.3984463214874268
    3. 'neighbors' → logprob: -3.8984463214874268
    4. 'prev' → logprob: -4.023446083068848
    5. 'current' → logprob: -5.023446083068848
    6. '[u' → logprob: -6.898446083068848
    7. '(prev' → logprob: -8.148446083068848
    8. '[v' → logprob: -8.148446083068848
    9. '[next' → logprob: -8.898446083068848
    10. '[
' → logprob: -9.148446083068848

Token 1532: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0003091254911851138
    2. 'current' → logprob: -8.250308990478516
    3. ' prev' → logprob: -10.750308990478516
    4. '(prev' → logprob: -12.000308990478516
    5. 'u' → logprob: -12.375308990478516
    6. '	prev' → logprob: -12.500308990478516
    7. '   ' → logprob: -12.625308990478516
    8. 'v' → logprob: -13.000308990478516
    9. '```' → logprob: -13.625308990478516
    10. 'curr' → logprob: -14.250308990478516

Token 1533: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05762027949094772
    2. ']' → logprob: -3.5576202869415283
    3. '(prev' → logprob: -3.9326202869415283
    4. 'prev' → logprob: -5.932620048522949
    5. ')' → logprob: -6.432620048522949
    6. ']:
' → logprob: -7.432620048522949
    7. '])' → logprob: -7.682620048522949
    8. '][' → logprob: -7.682620048522949
    9. ']
' → logprob: -8.18262004852295
    10. '):
' → logprob: -8.55762004852295

Token 1534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04311428964138031
    2. 'idx' → logprob: -3.793114185333252
    3. ' idx' → logprob: -4.668114185333252
    4. 'index' → logprob: -5.293114185333252
    5. ' =' → logprob: -6.168114185333252
    6. '           ' → logprob: -7.293114185333252
    7. 'i' → logprob: -7.668114185333252
    8. ' i' → logprob: -7.793114185333252
    9. '                   ' → logprob: -8.04311466217041
    10. ' index' → logprob: -8.41811466217041

Token 1535: ' nbr' (ID: 137674)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1298770308494568
    2. 'i' → logprob: -2.1298770904541016
    3. 'index' → logprob: -6.504877090454102
    4. ' idx' → logprob: -6.629877090454102
    5. 'ind' → logprob: -9.629877090454102
    6. 'indx' → logprob: -11.129877090454102
    7. '   ' → logprob: -11.254877090454102
    8. ' i' → logprob: -11.504877090454102
    9. '       ' → logprob: -12.379877090454102
    10. 'try' → logprob: -12.504877090454102

Token 1536: 's' (ID: 82)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.8744440078735352
    2. 's' → logprob: -0.9994440078735352
    3. '_idx' → logprob: -1.7494440078735352
    4. 'idx' → logprob: -4.124444007873535
    5. 'index' → logprob: -4.249444007873535
    6. '_indices' → logprob: -5.499444007873535
    7. '_indexes' → logprob: -6.624444007873535
    8. '_idxs' → logprob: -6.874444007873535
    9. 'ex' → logprob: -7.374444007873535
    10. ' =' → logprob: -7.624444007873535

Token 1537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9934327006340027
    2. '_sorted' → logprob: -0.9934327006340027
    3. ' =' → logprob: -1.7434327602386475
    4. '_index' → logprob: -3.1184327602386475
    5. '_idx' → logprob: -4.118432521820068
    6. '[' → logprob: -4.493432521820068
    7. 'index' → logprob: -4.868432521820068
    8. 'sorted' → logprob: -6.368432521820068
    9. '_prev' → logprob: -6.743432521820068
    10. 'idx' → logprob: -7.868432521820068

Token 1538: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0001589618914294988
    2. ' neighbors' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.37515926361084
    4. '[' → logprob: -15.50015926361084
    5. '           ' → logprob: -17.125158309936523
    6. '[
' → logprob: -17.250158309936523
    7. '_neighbors' → logprob: -17.625158309936523
    8. 'neighbor' → logprob: -18.250158309936523
    9. '               ' → logprob: -18.375158309936523
    10. '[n' → logprob: -18.625158309936523

Token 1539: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0001126026691053994
    2. 'sorted' → logprob: -9.125112533569336
    3. 'Sorted' → logprob: -12.625112533569336
    4. 'orted' → logprob: -16.000112533569336
    5. '[' → logprob: -16.500112533569336
    6. 's' → logprob: -16.625112533569336
    7. '\' → logprob: -18.250112533569336
    8. '```' → logprob: -18.250112533569336
    9. '_sort' → logprob: -19.000112533569336
    10. '_scaled' → logprob: -19.125112533569336

Token 1540: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017164701130241156
    2. 'prev' → logprob: -6.376716613769531
    3. '(prev' → logprob: -11.501716613769531
    4. '_prev' → logprob: -13.626716613769531
    5. ' =' → logprob: -14.126716613769531
    6. '=' → logprob: -14.251716613769531
    7. ',' → logprob: -15.376716613769531
    8. '.setdefault' → logprob: -15.501716613769531
    9. '	prev' → logprob: -15.626716613769531
    10. '.prev' → logprob: -15.626716613769531

Token 1541: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -9.088346359931165e-07
    2. '(prev' → logprob: -14.500000953674316
    3. ' prev' → logprob: -15.875000953674316
    4. '.prev' → logprob: -16.5
    5. '	prev' → logprob: -16.875
    6. '[' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '
' → logprob: -18.375
    9. 'pre' → logprob: -19.5
    10. '`' → logprob: -19.75

Token 1542: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0032834713347256184
    2. ']' → logprob: -5.753283500671387
    3. '][' → logprob: -10.378283500671387
    4. ']
' → logprob: -10.378283500671387
    5. '           ' → logprob: -10.753283500671387
    6. ']

' → logprob: -12.628283500671387
    7. '       ' → logprob: -12.753283500671387
    8. '                   ' → logprob: -12.878283500671387
    9. '               ' → logprob: -13.003283500671387
    10. '].' → logprob: -13.378283500671387

Token 1543: '               ' (ID: 506)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.35104116797447205
    2. ' idx' → logprob: -1.9760411977767944
    3. 'index' → logprob: -2.851041078567505
    4. '           ' → logprob: -3.101041078567505
    5. 'i' → logprob: -3.726041078567505
    6. '```' → logprob: -4.351041316986084
    7. '               ' → logprob: -4.851041316986084
    8. '                   ' → logprob: -5.601041316986084
    9. ' i' → logprob: -5.976041316986084
    10. ' index' → logprob: -6.476041316986084

Token 1544: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.08414776623249054
    2. 'i' → logprob: -2.5841476917266846
    3. 'index' → logprob: -5.334147930145264
    4. 'ind' → logprob: -8.709147453308105
    5. ' idx' → logprob: -9.459147453308105
    6. '                   ' → logprob: -9.584147453308105
    7. 'indx' → logprob: -10.459147453308105
    8. '           ' → logprob: -10.709147453308105
    9. '```' → logprob: -11.209147453308105
    10. '               ' → logprob: -11.334147453308105

Token 1545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. '=(' → logprob: -16.876928329467773
    4. '=n' → logprob: -16.876928329467773
    5. ')' → logprob: -17.251928329467773
    6. '=
' → logprob: -17.376928329467773
    7. '           ' → logprob: -17.626928329467773
    8. 'idx' → logprob: -17.876928329467773
    9. '   ' → logprob: -18.376928329467773
    10. ')=' → logprob: -18.626928329467773

Token 1546: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.07068247348070145
    2. '(n' → logprob: -2.6956825256347656
    3. ' nbr' → logprob: -7.945682525634766
    4. '[n' → logprob: -8.695682525634766
    5. '0' → logprob: -9.445682525634766
    6. ' (' → logprob: -10.070682525634766
    7. '(nb' → logprob: -10.695682525634766
    8. '(' → logprob: -10.820682525634766
    9. '   ' → logprob: -11.820682525634766
    10. 'nb' → logprob: -11.945682525634766

Token 1547: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6723240613937378
    2. 'bors' → logprob: -1.4223240613937378
    3. 'ighbors' → logprob: -2.5473241806030273
    4. 'rs' → logprob: -2.9223241806030273
    5. 'r' → logprob: -3.1723241806030273
    6. 'b' → logprob: -3.1723241806030273
    7. '_neighbors' → logprob: -3.9223241806030273
    8. 'ors' → logprob: -5.172324180603027
    9. 'bs' → logprob: -6.422324180603027
    10. 'rors' → logprob: -6.922324180603027

Token 1548: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00029601677670143545
    2. '(prev' → logprob: -9.250295639038086
    3. 'index' → logprob: -9.625295639038086
    4. '(n' → logprob: -10.250295639038086
    5. '(v' → logprob: -10.375295639038086
    6. '(idx' → logprob: -11.625295639038086
    7. '.' → logprob: -11.625295639038086
    8. 'n' → logprob: -12.250295639038086
    9. 'prev' → logprob: -12.625295639038086
    10. '((' → logprob: -12.625295639038086

Token 1549: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.12692883610725403
    2. 'current' → logprob: -2.1269288063049316
    3. ' current' → logprob: -14.37692928314209
    4. '(' → logprob: -16.751928329467773
    5. '((' → logprob: -16.751928329467773
    6. '[current' → logprob: -17.001928329467773
    7. '	current' → logprob: -17.501928329467773
    8. ',current' → logprob: -18.501928329467773
    9. '(curr' → logprob: -18.626928329467773
    10. '$current' → logprob: -19.001928329467773

Token 1550: ')
' (ID: 446)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.5528560876846313
    2. ')' → logprob: -1.0528560876846313
    3. '+' → logprob: -2.677855968475342
    4. ')
' → logprob: -5.302855968475342
    5. ' +' → logprob: -6.427855968475342
    6. '           ' → logprob: -8.5528564453125
    7. ']+' → logprob: -8.6778564453125
    8. ')+(' → logprob: -10.6778564453125
    9. ']' → logprob: -11.1778564453125
    10. '                   ' → logprob: -11.4278564453125

Token 1551: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40447404980659485
    2. 'idx' → logprob: -1.5294740200042725
    3. '               ' → logprob: -2.7794740200042725
    4. 'next' → logprob: -3.2794740200042725
    5. '```' → logprob: -4.529474258422852
    6. ' idx' → logprob: -6.654474258422852
    7. '                   ' → logprob: -6.779474258422852
    8. '(next' → logprob: -6.779474258422852
    9. ' next' → logprob: -7.029474258422852
    10. '``' → logprob: -7.904474258422852

Token 1552: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2996591031551361
    2. 'idx' → logprob: -1.4246591329574585
    3. 'n' → logprob: -4.424659252166748
    4. '                   ' → logprob: -6.174659252166748
    5. '               ' → logprob: -6.424659252166748
    6. 'nbr' → logprob: -7.424659252166748
    7. 'nid' → logprob: -8.29965877532959
    8. 'ni' → logprob: -8.29965877532959
    9. '           ' → logprob: -8.29965877532959
    10. 'nx' → logprob: -8.54965877532959

Token 1553: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04128440096974373
    2. 'idx' → logprob: -3.7912843227386475
    3. 'n' → logprob: -4.416284561157227
    4. 'nx' → logprob: -5.791284561157227
    5. ' nxt' → logprob: -7.041284561157227
    6. '   ' → logprob: -7.416284561157227
    7. 'ni' → logprob: -8.416284561157227
    8. '#' → logprob: -8.541284561157227
    9. 'w' → logprob: -8.791284561157227
    10. 'neighbor' → logprob: -9.291284561157227

Token 1554: ' vertex' (ID: 25363)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.021428609266877174
    2. '_idx' → logprob: -4.77142858505249
    3. 'v' → logprob: -6.02142858505249
    4. 'index' → logprob: -6.52142858505249
    5. 'vertex' → logprob: -6.64642858505249
    6. 'next' → logprob: -6.64642858505249
    7. 'neighbor' → logprob: -6.77142858505249
    8. '                   ' → logprob: -7.02142858505249
    9. ' idx' → logprob: -7.14642858505249
    10. 'u' → logprob: -7.39642858505249

Token 1555: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10798867791891098
    2. '               ' → logprob: -2.6079885959625244
    3. '=' → logprob: -4.2329888343811035
    4. 'idx' → logprob: -4.3579888343811035
    5. ' idx' → logprob: -7.2329888343811035
    6. '           ' → logprob: -7.6079888343811035
    7. '_idx' → logprob: -10.232988357543945
    8. '                   ' → logprob: -10.357988357543945
    9. '```' → logprob: -10.982988357543945
    10. 'next' → logprob: -11.357988357543945

Token 1556: ' neighbor' (ID: 13034)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.04874235391616821
    2. ' nbr' → logprob: -3.0487422943115234
    3. '   ' → logprob: -8.923742294311523
    4. 'neighbors' → logprob: -11.673742294311523
    5. '(n' → logprob: -11.798742294311523
    6. ' neighbors' → logprob: -13.048742294311523
    7. 'n' → logprob: -14.173742294311523
    8. 'nb' → logprob: -14.423742294311523
    9. '    ' → logprob: -15.048742294311523
    10. '       ' → logprob: -15.548742294311523

Token 1557: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17251254618167877
    2. '=' → logprob: -2.2975125312805176
    3. '_idx' → logprob: -4.297512531280518
    4. 'idx' → logprob: -4.922512531280518
    5. '=(' → logprob: -4.922512531280518
    6. '(next' → logprob: -5.422512531280518
    7. '[(' → logprob: -5.547512531280518
    8. '           ' → logprob: -5.797512531280518
    9. '(prev' → logprob: -5.922512531280518
    10. '[next' → logprob: -6.172512531280518

Token 1558: ' current' (ID: 2208)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.43454596400260925
    2. 'idx' → logprob: -1.4345459938049316
    3. '(prev' → logprob: -2.3095459938049316
    4. '(idx' → logprob: -4.434545993804932
    5. '```' → logprob: -6.434545993804932
    6. '(' → logprob: -8.059545516967773
    7. ' (' → logprob: -8.059545516967773
    8. '   ' → logprob: -8.684545516967773
    9. 'nbr' → logprob: -8.684545516967773
    10. ' prev' → logprob: -9.059545516967773

Token 1559: ' counter' (ID: 9446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3002790212631226
    2. 'idx' → logprob: -1.4252790212631226
    3. ' in' → logprob: -2.675279140472412
    4. ' (' → logprob: -2.925279140472412
    5. ' =' → logprob: -2.925279140472412
    6. '(idx' → logprob: -2.925279140472412
    7. '[idx' → logprob: -3.050279140472412
    8. '                   ' → logprob: -3.425279140472412
    9. '[next' → logprob: -3.425279140472412
    10. '```' → logprob: -3.675279140472412

Token 1560: 'clock' (ID: 34421)
  Prédit: 'clock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.0003685861302074045
    2. '_clock' → logprob: -8.000368118286133
    3. '-clock' → logprob: -10.375368118286133
    4. ' clockwise' → logprob: -13.625368118286133
    5. 'CLOCK' → logprob: -15.500368118286133
    6. '
' → logprob: -15.625368118286133
    7. 'clk' → logprob: -15.750368118286133
    8. 'Clock' → logprob: -16.750368118286133
    9. '```' → logprob: -17.000368118286133
    10. '       ' → logprob: -17.250368118286133

Token 1561: 'wise' (ID: 7480)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.052288930863142014
    2. 'wise' → logprob: -3.6772890090942383
    3. 'lock' → logprob: -3.8022890090942383
    4. '       ' → logprob: -7.052289009094238
    5. '-clock' → logprob: -7.677289009094238
    6. '_clock' → logprob: -8.052289009094238
    7. '           ' → logprob: -8.177289009094238
    8. 'w' → logprob: -8.427289009094238
    9. 'ick' → logprob: -8.427289009094238
    10. '```' → logprob: -8.677289009094238

Token 1562: '
' (ID: 198)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.0483322143554688
    2. '               ' → logprob: -1.1733322143554688
    3. ' (' → logprob: -2.0483322143554688
    4. '```' → logprob: -2.6733322143554688
    5. '           ' → logprob: -3.2983322143554688
    6. '(prev' → logprob: -3.9233322143554688
    7. '[(' → logprob: -3.9233322143554688
    8. '[idx' → logprob: -4.048332214355469
    9. '((' → logprob: -4.673332214355469
    10. 'idx' → logprob: -4.673332214355469

Token 1563: '               ' (ID: 506)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.2100825309753418
    2. ' (' → logprob: -1.5850825309753418
    3. '               ' → logprob: -1.7100825309753418
    4. '```' → logprob: -2.585082530975342
    5. '           ' → logprob: -2.835082530975342
    6. 'idx' → logprob: -3.085082530975342
    7. '(next' → logprob: -3.710082530975342
    8. ' in' → logprob: -3.835082530975342
    9. ' =' → logprob: -4.210082530975342
    10. '                   ' → logprob: -4.710082530975342

Token 1564: ' next' (ID: 2613)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.0614936351776123
    2. ' (' → logprob: -1.6864936351776123
    3. 'next' (adapté à ' next') → logprob: -2.3114936351776123
    4. '           ' → logprob: -2.4364936351776123
    5. '(idx' → logprob: -2.5614936351776123
    6. 'idx' → logprob: -2.5614936351776123
    7. '               ' → logprob: -2.5614936351776123
    8. '(prev' → logprob: -3.9364936351776123
    9. ' next' → logprob: -5.186493873596191
    10. ' idx' → logprob: -5.436493873596191

Token 1565: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.008154470473527908
    2. 'idx' → logprob: -5.508154392242432
    3. ' =' → logprob: -6.633154392242432
    4. '_index' → logprob: -6.883154392242432
    5. '_vertex' → logprob: -6.883154392242432
    6. '_v' → logprob: -8.25815486907959
    7. '=' → logprob: -8.63315486907959
    8. '_i' → logprob: -9.00815486907959
    9. 'v' → logprob: -10.00815486907959
    10. ']' → logprob: -11.25815486907959

Token 1566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11296211928129196
    2. '=' → logprob: -2.237962007522583
    3. '=(' → logprob: -9.112961769104004
    4. '=((' → logprob: -11.112961769104004
    5. ' =(' → logprob: -11.862961769104004
    6. ')' → logprob: -12.862961769104004
    7. '           ' → logprob: -13.487961769104004
    8. '```' → logprob: -14.362961769104004
    9. '                   ' → logprob: -15.112961769104004
    10. ')=' → logprob: -15.487961769104004

Token 1567: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.007898209616541862
    2. '(n' → logprob: -4.882898330688477
    3. ' (' → logprob: -8.507898330688477
    4. '   ' → logprob: -11.382898330688477
    5. '(len' → logprob: -11.382898330688477
    6. '(' → logprob: -11.632898330688477
    7. '           ' → logprob: -11.632898330688477
    8. '(nx' → logprob: -12.007898330688477
    9. '(nums' → logprob: -12.257898330688477
    10. '(i' → logprob: -12.382898330688477

Token 1568: 'idx' (ID: 13196)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.11287511885166168
    2. 'idx' → logprob: -2.23787522315979
    3. ' idx' → logprob: -11.112874984741211
    4. ' (' → logprob: -11.237874984741211
    5. '[idx' → logprob: -11.862874984741211
    6. '(index' → logprob: -12.612874984741211
    7. '(' → logprob: -12.987874984741211
    8. '   ' → logprob: -13.112874984741211
    9. '	idx' → logprob: -13.362874984741211
    10. '_idx' → logprob: -13.862874984741211

Token 1569: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20158563554286957
    2. ' +' → logprob: -1.7015856504440308
    3. '-' → logprob: -8.95158576965332
    4. ' -' → logprob: -10.20158576965332
    5. ')' → logprob: -13.57658576965332
    6. '1' → logprob: -13.70158576965332
    7. '+
' → logprob: -13.82658576965332
    8. ')+' → logprob: -14.07658576965332
    9. '```' → logprob: -14.82658576965332
    10. '()+' → logprob: -14.95158576965332

Token 1570: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '2' → logprob: -21.875
    6. '-' → logprob: -21.875
    7. '<|end|>' → logprob: -21.875
    8. '۱' → logprob: -22.375
    9. '...' → logprob: -22.5
    10. '           ' → logprob: -22.875

Token 1571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. '```' → logprob: -19.250001907348633
    6. '-' → logprob: -19.500001907348633
    7. '...' → logprob: -20.625001907348633
    8. ')' → logprob: -21.500001907348633
    9. '2' → logprob: -21.937501907348633
    10. '+' → logprob: -21.937501907348633

Token 1572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006752429064363241
    2. ')%' → logprob: -5.0067524909973145
    3. ' )' → logprob: -11.131752014160156
    4. ')
' → logprob: -11.756752014160156
    5. ']' → logprob: -12.256752014160156
    6. '%' → logprob: -12.881752014160156
    7. '+' → logprob: -13.131752014160156
    8. '```' → logprob: -13.631752014160156
    9. '])' → logprob: -13.881752014160156
    10. '   ' → logprob: -14.506752014160156

Token 1573: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02049669250845909
    2. ' %' → logprob: -4.770496845245361
    3. ')%' → logprob: -5.395496845245361
    4. ']' → logprob: -5.520496845245361
    5. ')' → logprob: -6.520496845245361
    6. ']%' → logprob: -6.895496845245361
    7. '<|end|>' → logprob: -7.395496845245361
    8. '%n' → logprob: -9.145496368408203
    9. '```' → logprob: -10.270496368408203
    10. '<|end|>' → logprob: -11.770496368408203

Token 1574: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.5048530030981055e-06
    2. '(len' → logprob: -13.750001907348633
    3. ' len' → logprob: -14.750001907348633
    4. '[len' → logprob: -18.750001907348633
    5. '	len' → logprob: -20.875001907348633
    6. ',len' → logprob: -21.375001907348633
    7. '=len' → logprob: -21.875001907348633
    8. '   ' → logprob: -22.250001907348633
    9. '<len' → logprob: -22.500001907348633
    10. '```' → logprob: -23.750001907348633

Token 1575: '(n' (ID: 2406)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.0004273315134923905
    2. '(n' → logprob: -8.00042724609375
    3. 'n' → logprob: -9.50042724609375
    4. ' nbr' → logprob: -11.50042724609375
    5. 'neighbors' → logprob: -12.00042724609375
    6. '[n' → logprob: -14.62542724609375
    7. 'nb' → logprob: -16.37542724609375
    8. 'nbsp' → logprob: -17.12542724609375
    9. 'nr' → logprob: -17.12542724609375
    10. '(' → logprob: -17.50042724609375

Token 1576: 'br' (ID: 1697)
  Prédit: 'br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.39455482363700867
    2. 'nbr' → logprob: -1.144554853439331
    3. '(n' → logprob: -4.894554615020752
    4. ' nbr' → logprob: -8.76955509185791
    5. '[n' → logprob: -12.01955509185791
    6. 'n' → logprob: -12.76955509185791
    7. 'bors' → logprob: -14.14455509185791
    8. '(br' → logprob: -14.26955509185791
    9. 'Nbr' → logprob: -14.76955509185791
    10. 'r' → logprob: -15.01955509185791

Token 1577: 's' (ID: 82)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.01245137583464384
    2. 's' → logprob: -4.512451171875
    3. 'ors' → logprob: -7.137451171875
    4. 'br' → logprob: -8.012451171875
    5. '[' → logprob: -9.262451171875
    6. 'bs' → logprob: -9.762451171875
    7. 'r' → logprob: -10.262451171875
    8. 'bors' → logprob: -10.637451171875
    9. 'hs' → logprob: -10.637451171875
    10. 'neighbors' → logprob: -11.762451171875

Token 1578: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001398929744027555
    2. ')
' → logprob: -9.375140190124512
    3. '           ' → logprob: -10.000140190124512
    4. '               ' → logprob: -12.625140190124512
    5. '<|end|>' → logprob: -13.500140190124512
    6. ')return' → logprob: -13.875140190124512
    7. ' )' → logprob: -14.750140190124512
    8. ']' → logprob: -14.750140190124512
    9. '```' → logprob: -14.875140190124512
    10. ')]' → logprob: -15.000140190124512

Token 1579: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8621402382850647
    2. ' next' → logprob: -1.11214017868042
    3. 'next' → logprob: -1.48714017868042
    4. ' nxt' → logprob: -4.48714017868042
    5. '               ' → logprob: -5.73714017868042
    6. 'n' → logprob: -5.98714017868042
    7. '(next' → logprob: -6.73714017868042
    8. '                   ' → logprob: -6.73714017868042
    9. '```' → logprob: -6.73714017868042
    10. '   ' → logprob: -7.48714017868042

Token 1580: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011930144391953945
    2. 'current' → logprob: -4.511929988861084
    3. 'neighbor' → logprob: -8.636930465698242
    4. ' next' → logprob: -8.761930465698242
    5. 'n' → logprob: -8.886930465698242
    6. ' nxt' → logprob: -9.011930465698242
    7. 'u' → logprob: -9.136930465698242
    8. 'w' → logprob: -9.511930465698242
    9. 'curr' → logprob: -10.511930465698242
    10. '           ' → logprob: -10.886930465698242

Token 1581: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813379764556885
    2. '=' → logprob: -1.4063379764556885
    3. 's' → logprob: -9.53133773803711
    4. ']' → logprob: -10.28133773803711
    5. ')' → logprob: -10.65633773803711
    6. '_' → logprob: -11.53133773803711
    7. '_n' → logprob: -11.65633773803711
    8. 'n' → logprob: -11.65633773803711
    9. '[' → logprob: -12.03133773803711
    10. '   ' → logprob: -12.15633773803711

Token 1582: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.00566864525899291
    2. ' nbr' → logprob: -5.755668640136719
    3. 'neighbors' → logprob: -6.005668640136719
    4. ' neighbors' → logprob: -10.880668640136719
    5. 'n' → logprob: -13.630668640136719
    6. 'nb' → logprob: -13.755668640136719
    7. '   ' → logprob: -13.880668640136719
    8. ' neighbours' → logprob: -15.380668640136719
    9. 'nbsp' → logprob: -15.380668640136719
    10. 'nr' → logprob: -15.880668640136719

Token 1583: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004884569905698299
    2. 'ors' → logprob: -5.379884719848633
    3. 'rs' → logprob: -9.129884719848633
    4. 'neighbors' → logprob: -9.879884719848633
    5. '[' → logprob: -10.004884719848633
    6. 'bors' → logprob: -10.504884719848633
    7. 'ns' → logprob: -12.129884719848633
    8. '_neighbors' → logprob: -12.504884719848633
    9. '_sorted' → logprob: -12.629884719848633
    10. 'r' → logprob: -13.004884719848633

Token 1584: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.04864833876490593
    2. '[' → logprob: -3.0486483573913574
    3. 'next' → logprob: -10.5486478805542
    4. 'prev' → logprob: -11.1736478805542
    5. '(next' → logprob: -11.5486478805542
    6. '[(' → logprob: -12.0486478805542
    7. '   ' → logprob: -13.9236478805542
    8. '(prev' → logprob: -14.1736478805542
    9. '[
' → logprob: -14.1736478805542
    10. '[now' → logprob: -14.4236478805542

Token 1585: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.2657676339149475
    2. '_sorted' → logprob: -2.1407675743103027
    3. 'sorted' → logprob: -2.8907675743103027
    4. '[' → logprob: -3.5157675743103027
    5. 'idx' → logprob: -3.7657675743103027
    6. '[idx' → logprob: -6.015767574310303
    7. '`' → logprob: -7.265767574310303
    8. '[next' → logprob: -7.265767574310303
    9. 's' → logprob: -7.390767574310303
    10. 'Sorted' → logprob: -7.515767574310303

Token 1586: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012789263855665922
    2. '<|end|>' → logprob: -7.126278877258301
    3. ')
' → logprob: -8.1262788772583
    4. '           ' → logprob: -9.6262788772583
    5. ']' → logprob: -10.2512788772583
    6. '<|end|>' → logprob: -10.7512788772583
    7. ')return' → logprob: -11.1262788772583
    8. '                           ' → logprob: -11.7512788772583
    9. '               ' → logprob: -12.6262788772583
    10. '}' → logprob: -12.8762788772583

Token 1587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6536216735839844
    2. 'current' → logprob: -0.7786216735839844
    3. 'prev' → logprob: -4.528621673583984
    4. ' current' → logprob: -5.278621673583984
    5. '(current' → logprob: -6.153621673583984
    6. '           ' → logprob: -6.278621673583984
    7. '(prev' → logprob: -7.903621673583984
    8. ' prev' → logprob: -9.153621673583984
    9. '```' → logprob: -9.403621673583984
    10. ',current' → logprob: -9.903621673583984

Token 1588: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0012052309466525912
    2. 'u' → logprob: -7.2512054443359375
    3. '(current' → logprob: -7.8762054443359375
    4. '               ' → logprob: -9.876205444335938
    5. ' current' → logprob: -10.376205444335938
    6. '(u' → logprob: -11.001205444335938
    7. 'prev' → logprob: -11.501205444335938
    8. 'if' (adapté à ' if') → logprob: -12.876205444335938
    9. '           ' → logprob: -13.251205444335938
    10. '                   ' → logprob: -14.501205444335938

Token 1589: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00024846551241353154
    2. ' nxt' → logprob: -8.375248908996582
    3. '(n' → logprob: -11.125248908996582
    4. 'face' → logprob: -14.125248908996582
    5. '   ' → logprob: -14.375248908996582
    6. 'next' → logprob: -14.750248908996582
    7. 'prev' → logprob: -15.000248908996582
    8. 'nx' → logprob: -15.125248908996582
    9. '(' → logprob: -15.500248908996582
    10. '```' → logprob: -16.000247955322266

Token 1590: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760070085525513
    2. ' ==' → logprob: -0.8260070085525513
    3. ']==' → logprob: -10.326006889343262
    4. ')==' → logprob: -11.076006889343262
    5. '==
' → logprob: -11.701006889343262
    6. '==(' → logprob: -12.326006889343262
    7. '```' → logprob: -12.701006889343262
    8. ')' → logprob: -14.326006889343262
    9. 'n' → logprob: -14.701006889343262
    10. '()==' → logprob: -14.826006889343262

Token 1591: ' face' (ID: 4950)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.009768364951014519
    2. 'face' → logprob: -4.634768486022949
    3. ' u' → logprob: -11.63476848602295
    4. ' face' → logprob: -13.25976848602295
    5. '   ' → logprob: -13.88476848602295
    6. '
' → logprob: -16.384767532348633
    7. 'user' → logprob: -16.509767532348633
    8. ' ' → logprob: -16.634767532348633
    9. 'faces' → logprob: -16.634767532348633
    10. 'start' → logprob: -16.634767532348633

Token 1592: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013470192207023501
    2. '0' → logprob: -6.626347064971924
    3. '           ' → logprob: -11.251346588134766
    4. 'face' → logprob: -13.251346588134766
    5. '[-' → logprob: -13.376346588134766
    6. '[
' → logprob: -13.751346588134766
    7. '   ' → logprob: -13.876346588134766
    8. '1' → logprob: -14.126346588134766
    9. '```' → logprob: -14.501346588134766
    10. '               ' → logprob: -14.751346588134766

Token 1593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.73314929776825e-05
    2. '1' → logprob: -9.37508773803711
    3. ' ' → logprob: -13.75008773803711
    4. '   ' → logprob: -14.25008773803711
    5. 'u' → logprob: -15.25008773803711
    6. '
' → logprob: -15.75008773803711
    7. '(' → logprob: -16.25008773803711
    8. '-' → logprob: -16.37508773803711
    9. '[' → logprob: -16.50008773803711
    10. 'face' → logprob: -17.37508773803711

Token 1594: ']' (ID: 60)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01252284087240696
    2. '):' → logprob: -5.5125226974487305
    3. ':
' → logprob: -5.5125226974487305
    4. '                   ' → logprob: -6.2625226974487305
    5. ']:
' → logprob: -6.6375226974487305
    6. ')' → logprob: -7.6375226974487305
    7. '               ' → logprob: -8.01252269744873
    8. '           ' → logprob: -8.88752269744873
    9. ':' → logprob: -9.38752269744873
    10. ' and' → logprob: -10.63752269744873

Token 1595: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.684300422668457
    2. '                   ' → logprob: -1.184300422668457
    3. ':' → logprob: -1.809300422668457
    4. '               ' → logprob: -4.434300422668457
    5. ' and' → logprob: -5.059300422668457
    6. '                       ' → logprob: -5.684300422668457
    7. '           ' → logprob: -6.684300422668457
    8. '):
' → logprob: -6.809300422668457
    9. '                           ' → logprob: -7.684300422668457
    10. 'and' → logprob: -8.059300422668457

Token 1596: ' prev' (ID: 10258)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0690881684422493
    2. 'prev' → logprob: -2.8190882205963135
    3. ' len' → logprob: -5.194087982177734
    4. '           ' → logprob: -7.444087982177734
    5. ' prev' → logprob: -7.569087982177734
    6. '   ' → logprob: -8.819087982177734
    7. '(len' → logprob: -9.569087982177734
    8. '       ' → logprob: -9.569087982177734
    9. 'face' → logprob: -9.694087982177734
    10. 'v' → logprob: -10.819087982177734

Token 1597: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9134297966957092
    2. ' ==' → logprob: -1.5384297370910645
    3. '!=' → logprob: -2.0384297370910645
    4. ' !=' → logprob: -2.2884297370910645
    5. ' in' → logprob: -2.5384297370910645
    6. ' not' → logprob: -2.7884297370910645
    7. 'in' → logprob: -4.9134297370910645
    8. 'not' → logprob: -6.0384297370910645
    9. ')' → logprob: -6.6634297370910645
    10. ')==' → logprob: -8.413430213928223

Token 1598: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.07926803082227707
    2. 'u' → logprob: -2.579267978668213
    3. ' face' → logprob: -8.204268455505371
    4. 'user' → logprob: -9.829268455505371
    5. ' u' → logprob: -10.204268455505371
    6. '   ' → logprob: -12.329268455505371
    7. '(face' → logprob: -12.829268455505371
    8. 'faces' → logprob: -13.079268455505371
    9. ' ' → logprob: -13.704268455505371
    10. 'start' → logprob: -14.079268455505371

Token 1599: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0360848493874073
    2. '1' → logprob: -3.4110848903656006
    3. '[-' → logprob: -6.0360846519470215
    4. '   ' → logprob: -11.66108512878418
    5. 'len' → logprob: -11.66108512878418
    6. '```' → logprob: -11.91108512878418
    7. '0' → logprob: -12.53608512878418
    8. '-' → logprob: -13.03608512878418
    9. '
' → logprob: -13.16108512878418
    10. '#' → logprob: -13.28608512878418

Token 1600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01938105747103691
    2. '0' → logprob: -4.269381046295166
    3. '-' → logprob: -5.269381046295166
    4. 'len' → logprob: -11.019381523132324
    5. ' -' → logprob: -11.394381523132324
    6. '   ' → logprob: -12.269381523132324
    7. ' ' → logprob: -12.269381523132324
    8. '
' → logprob: -12.644381523132324
    9. ']' → logprob: -12.894381523132324
    10. '[' → logprob: -12.894381523132324

Token 1601: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15811842679977417
    2. '):
' → logprob: -2.033118486404419
    3. ':' → logprob: -5.03311824798584
    4. '               ' → logprob: -5.65811824798584
    5. '                   ' → logprob: -6.28311824798584
    6. ']:
' → logprob: -7.15811824798584
    7. ' and' → logprob: -7.40811824798584
    8. '           ' → logprob: -7.40811824798584
    9. '():
' → logprob: -7.65811824798584
    10. '):' → logprob: -7.90811824798584

Token 1602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004258730914443731
    2. '               ' → logprob: -5.504258632659912
    3. '                       ' → logprob: -9.37925910949707
    4. 'break' → logprob: -10.25425910949707
    5. ':
' → logprob: -10.87925910949707
    6. '   ' → logprob: -11.50425910949707
    7. '                               ' → logprob: -11.75425910949707
    8. ':' → logprob: -12.37925910949707
    9. '```' → logprob: -12.37925910949707
    10. '                  ' → logprob: -12.87925910949707

Token 1603: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016152257099747658
    2. 'break' (adapté à ' break') → logprob: -4.266152381896973
    3. '                   ' → logprob: -6.641152381896973
    4. '                       ' → logprob: -7.766152381896973
    5. ' break' → logprob: -8.641152381896973
    6. '       ' → logprob: -10.391152381896973
    7. '   ' → logprob: -11.016152381896973
    8. '           ' → logprob: -11.266152381896973
    9. '	break' → logprob: -11.891152381896973
    10. '			' → logprob: -12.391152381896973

Token 1604: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005006751511245966
    2. '           ' → logprob: -6.255006790161133
    3. '\n' → logprob: -6.505006790161133
    4. '                
' → logprob: -7.255006790161133
    5. '
' → logprob: -8.505006790161133
    6. '                   ' → logprob: -8.755006790161133
    7. '    
' → logprob: -9.380006790161133
    8. '  
' → logprob: -10.005006790161133
    9. '\
' → logprob: -10.005006790161133
    10. '              ' → logprob: -10.130006790161133

Token 1605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012098236009478569
    2. '           ' → logprob: -4.51209831237793
    3. '                
' → logprob: -8.26209831237793
    4. '                   ' → logprob: -8.51209831237793
    5. '
' → logprob: -8.63709831237793
    6. '       ' → logprob: -9.13709831237793
    7. 'prev' → logprob: -9.76209831237793
    8. '   ' → logprob: -10.13709831237793
    9. '              ' → logprob: -10.13709831237793
    10. '```' → logprob: -10.38709831237793

Token 1606: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0028009600937366486
    2. '               ' → logprob: -6.002800941467285
    3. 'prev' → logprob: -8.752800941467285
    4. ' current' → logprob: -9.127800941467285
    5. '           ' → logprob: -9.877800941467285
    6. '   ' → logprob: -13.127800941467285
    7. '(current' → logprob: -13.252800941467285
    8. 'u' → logprob: -13.627800941467285
    9. '                   ' → logprob: -13.877800941467285
    10. '       ' → logprob: -14.877800941467285

Token 1607: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03371785581111908
    2. ',' → logprob: -3.5337178707122803
    3. ' =' → logprob: -5.533717632293701
    4. ',v' → logprob: -13.28371810913086
    5. ',next' → logprob: -13.78371810913086
    6. ',n' → logprob: -14.15871810913086
    7. ',current' → logprob: -14.15871810913086
    8. '=current' → logprob: -14.28371810913086
    9. '```' → logprob: -14.53371810913086
    10. ' ,' → logprob: -14.90871810913086

Token 1608: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.696889623621246e-06
    2. ' prev' → logprob: -12.87500286102295
    3. 'next' → logprob: -17.125001907348633
    4. '(prev' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '	prev' → logprob: -17.875001907348633
    7. 'v' → logprob: -18.625001907348633
    8. '           ' → logprob: -19.250001907348633
    9. '.prev' → logprob: -19.500001907348633
    10. '       ' → logprob: -20.000001907348633

Token 1609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008060562540777028
    2. ' =' → logprob: -7.125805854797363
    3. '   ' → logprob: -13.625805854797363
    4. '=
' → logprob: -14.750805854797363
    5. ',' → logprob: -18.00080680847168
    6. '```' → logprob: -19.00080680847168
    7. '=v' → logprob: -19.37580680847168
    8. 'prev' → logprob: -19.50080680847168
    9. '=end' → logprob: -19.50080680847168
    10. '=

' → logprob: -19.62580680847168

Token 1610: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0007361313910223544
    2. '(prev' → logprob: -7.250736236572266
    3. ' prev' → logprob: -10.625736236572266
    4. '	prev' → logprob: -13.875736236572266
    5. '   ' → logprob: -14.625736236572266
    6. '(' → logprob: -15.250736236572266
    7. '.prev' → logprob: -16.125736236572266
    8. '_prev' → logprob: -16.875736236572266
    9. 'Prev' → logprob: -17.250736236572266
    10. 'previous' → logprob: -17.750736236572266

Token 1611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004769141785800457
    2. ',next' → logprob: -5.754769325256348
    3. ',n' → logprob: -6.629769325256348
    4. ' ,' → logprob: -8.629769325256348
    5. ',
' → logprob: -9.629769325256348
    6. '   ' → logprob: -11.879769325256348
    7. ' nxt' → logprob: -12.254769325256348
    8. '[next' → logprob: -12.879769325256348
    9. ',p' → logprob: -13.254769325256348
    10. ',v' → logprob: -13.629769325256348

Token 1612: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.584861744660884e-05
    2. ' nxt' → logprob: -10.000045776367188
    3. 'next' → logprob: -15.000045776367188
    4. '   ' → logprob: -18.250045776367188
    5. '       ' → logprob: -18.625045776367188
    6. '
' → logprob: -19.500045776367188
    7. '```' → logprob: -19.750045776367188
    8. '`' → logprob: -20.625045776367188
    9. '	n' → logprob: -21.375045776367188
    10. '(n' → logprob: -21.875045776367188

Token 1613: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1614: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43322598934173584
    2. '<|end|>' → logprob: -1.5582259893417358
    3. '```' → logprob: -2.0582261085510254
    4. '   ' → logprob: -5.433226108551025
    5. '               ' → logprob: -6.058226108551025
    6. '
' → logprob: -6.308226108551025
    7. '<|end|>' → logprob: -6.808226108551025
    8. ')' → logprob: -7.183226108551025
    9. 'continue' → logprob: -7.933226108551025
    10. '            
' → logprob: -8.308225631713867

Token 1615: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008720354177057743
    2. '           ' → logprob: -5.633720397949219
    3. ' faces' → logprob: -5.758720397949219
    4. 'faces' → logprob: -6.883720397949219
    5. '       ' → logprob: -7.508720397949219
    6. ' return' → logprob: -8.758720397949219
    7. 'return' → logprob: -9.133720397949219
    8. ' face' → logprob: -11.008720397949219
    9. '```' → logprob: -11.133720397949219
    10. '_faces' → logprob: -11.508720397949219

Token 1616: ' remove' (ID: 6234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39013755321502686
    2. 'faces' → logprob: -1.7651375532150269
    3. '#' → logprob: -2.2651376724243164
    4. 'if' → logprob: -3.3901376724243164
    5. 'face' → logprob: -5.140137672424316
    6. '   ' → logprob: -6.265137672424316
    7. '
' → logprob: -6.390137672424316
    8. ' #' → logprob: -6.515137672424316
    9. ' if' → logprob: -6.515137672424316
    10. ' faces' → logprob: -6.890137672424316

Token 1617: ' last' (ID: 2174)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.09216098487377167
    2. 'duplicate' → logprob: -2.842160940170288
    3. ' duplicates' → logprob: -3.717160940170288
    4. '_duplicates' → logprob: -6.342161178588867
    5. ' duplicate' → logprob: -6.467161178588867
    6. 'face' → logprob: -6.592161178588867
    7. 'duplic' → logprob: -8.342161178588867
    8. 'dup' → logprob: -8.717161178588867
    9. 'Duplicates' → logprob: -9.092161178588867
    10. '   ' → logprob: -9.467161178588867

Token 1618: ' duplicated' (ID: 107680)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.8798705339431763
    2. ' face' → logprob: -1.2548705339431763
    3. '(face' → logprob: -1.2548705339431763
    4. 'element' → logprob: -5.379870414733887
    5. 'token' → logprob: -5.754870414733887
    6. '()' → logprob: -6.129870414733887
    7. 'pop' → logprob: -6.379870414733887
    8. ' element' → logprob: -6.754870414733887
    9. ' token' → logprob: -7.504870414733887
    10. 'duplicate' → logprob: -7.879870414733887

Token 1619: ' point' (ID: 2438)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.1027398556470871
    2. ' face' → logprob: -2.8527398109436035
    3. '(face' → logprob: -3.2277398109436035
    4. 'pop' → logprob: -9.227740287780762
    5. '   ' → logprob: -9.602740287780762
    6. 'point' → logprob: -10.227740287780762
    7. 'token' → logprob: -10.227740287780762
    8. 'element' → logprob: -11.102740287780762
    9. ')' → logprob: -11.477740287780762
    10. '(' → logprob: -11.602740287780762

Token 1620: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10015469789505005
    2. '.pop' → logprob: -2.9751546382904053
    3. '```' → logprob: -3.9751546382904053
    4. 'pop' → logprob: -4.975154876708984
    5. '(face' → logprob: -5.100154876708984
    6. ' face' → logprob: -6.100154876708984
    7. 'face' → logprob: -6.100154876708984
    8. '   ' → logprob: -6.475154876708984
    9. '``' → logprob: -6.475154876708984
    10. ',' → logprob: -6.975154876708984

Token 1621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11362780630588531
    2. ' face' → logprob: -2.4886279106140137
    3. 'face' → logprob: -4.238627910614014
    4. '(face' → logprob: -5.238627910614014
    5. '```' → logprob: -6.488627910614014
    6. '=' → logprob: -6.988627910614014
    7. '   ' → logprob: -7.488627910614014
    8. ',' → logprob: -7.863627910614014
    9. '       ' → logprob: -8.113627433776855
    10. ':' → logprob: -8.363627433776855

Token 1622: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.16044051945209503
    2. 'face' (adapté à ' face') → logprob: -1.9104405641555786
    3. '(face' → logprob: -9.035440444946289
    4. '
' → logprob: -10.035440444946289
    5. '   ' → logprob: -10.660440444946289
    6. '```' → logprob: -11.535440444946289
    7. '.face' → logprob: -12.035440444946289
    8. '``' → logprob: -12.785440444946289
    9. '           ' → logprob: -13.035440444946289
    10. '[:-' → logprob: -13.160440444946289

Token 1623: ' =' (ID: 314)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.02329590730369091
    2. '=' → logprob: -3.7732958793640137
    3. ' =' → logprob: -10.773296356201172
    4. 'pop' → logprob: -10.898296356201172
    5. '[:-' → logprob: -12.023296356201172
    6. '.' → logprob: -13.523296356201172
    7. '=.' → logprob: -13.523296356201172
    8. '=line' → logprob: -14.398296356201172
    9. '=f' → logprob: -15.273296356201172
    10. '	pop' → logprob: -15.398296356201172

Token 1624: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.003178306156769395
    2. ' face' → logprob: -5.753178119659424
    3. '(face' → logprob: -14.628178596496582
    4. '[:-' → logprob: -15.753178596496582
    5. '_face' → logprob: -17.878177642822266
    6. '   ' → logprob: -18.128177642822266
    7. '.face' → logprob: -18.378177642822266
    8. 'fac' → logprob: -18.503177642822266
    9. 'faces' → logprob: -18.753177642822266
    10. '[' → logprob: -18.878177642822266

Token 1625: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -6.153795766294934e-06
    2. '[:' → logprob: -12.250005722045898
    3. '[' → logprob: -13.625005722045898
    4. '[::-' → logprob: -16.5000057220459
    5. '[:]' → logprob: -17.8750057220459
    6. '```' → logprob: -18.0000057220459
    7. '[-' → logprob: -19.0000057220459
    8. '#' → logprob: -21.0000057220459
    9. 'def' → logprob: -21.2500057220459
    10. '[...,' → logprob: -21.5000057220459

Token 1626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '-' → logprob: -17.25
    4. '
' → logprob: -18.0
    5. '2' → logprob: -18.5
    6. '   ' → logprob: -18.5
    7. '```' → logprob: -18.875
    8. '[' → logprob: -19.5
    9. '(' → logprob: -19.625
    10. '#' → logprob: -19.875

Token 1627: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04791375622153282
    2. '           ' → logprob: -3.9229137897491455
    3. '<|end|>' → logprob: -4.297913551330566
    4. ')' → logprob: -4.422913551330566
    5. ']
' → logprob: -8.047913551330566
    6. '<|end|>' → logprob: -8.672913551330566
    7. ' ]' → logprob: -8.797913551330566
    8. '])' → logprob: -8.922913551330566
    9. '       ' → logprob: -8.922913551330566
    10. '
' → logprob: -9.922913551330566

Token 1628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026514052879065275
    2. '       ' → logprob: -6.877651214599609
    3. '<|end|>' → logprob: -7.127651214599609
    4. '   ' → logprob: -8.12765121459961
    5. '```' → logprob: -8.12765121459961
    6. ',' → logprob: -9.62765121459961
    7. '               ' → logprob: -10.37765121459961
    8. '            
' → logprob: -11.00265121459961
    9. '          ' → logprob: -11.00265121459961
    10. '<|end|>' → logprob: -11.37765121459961

Token 1629: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010691342875361443
    2. ' if' → logprob: -4.885691165924072
    3. 'if' → logprob: -6.135691165924072
    4. 'faces' → logprob: -7.510691165924072
    5. '   ' → logprob: -8.88569164276123
    6. ' faces' → logprob: -9.26069164276123
    7. '       ' → logprob: -9.26069164276123
    8. '```' → logprob: -10.76069164276123
    9. '_faces' → logprob: -12.01069164276123
    10. '               ' → logprob: -12.51069164276123

Token 1630: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3357965350151062
    2. 'faces' → logprob: -1.960796594619751
    3. 'if' → logprob: -2.585796594619751
    4. '#' → logprob: -2.835796594619751
    5. '   ' → logprob: -4.710796356201172
    6. 'face' → logprob: -7.335796356201172
    7. '       ' → logprob: -8.210796356201172
    8. 'found' → logprob: -8.585796356201172
    9. '               ' → logprob: -9.335796356201172
    10. 'points' → logprob: -9.460796356201172

Token 1631: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07256115972995758
    2. 'if' → logprob: -2.822561264038086
    3. 'len' → logprob: -5.072561264038086
    4. ' len' → logprob: -6.822561264038086
    5. ' not' → logprob: -7.072561264038086
    6. '           ' → logprob: -7.072561264038086
    7. 'not' → logprob: -7.572561264038086
    8. '   ' → logprob: -8.072561264038086
    9. 'point' → logprob: -8.572561264038086
    10. '_len' → logprob: -9.447561264038086

Token 1632: ' face' (ID: 4950)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004533142491709441
    2. ' len' → logprob: -8.125452995300293
    3. 'inside' → logprob: -9.375452995300293
    4. 'is' → logprob: -10.000452995300293
    5. 'all' → logprob: -11.250452995300293
    6. 'point' → logprob: -12.375452995300293
    7. '(len' → logprob: -12.500452995300293
    8. '   ' → logprob: -13.625452995300293
    9. 'dist' → logprob: -13.625452995300293
    10. 'True' → logprob: -14.125452995300293

Token 1633: ' size' (ID: 2349)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16431604325771332
    2. '[' → logprob: -2.414315938949585
    3. ':' → logprob: -4.289316177368164
    4. 'and' → logprob: -4.414316177368164
    5. 'len' → logprob: -4.664316177368164
    6. ':
' → logprob: -4.789316177368164
    7. '           ' → logprob: -5.039316177368164
    8. '```' → logprob: -6.164316177368164
    9. '[len' → logprob: -6.289316177368164
    10. 'not' → logprob: -6.539316177368164

Token 1634: ' at' (ID: 540)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38913241028785706
    2. '>=' → logprob: -1.1391323804855347
    3. '<' → logprob: -6.389132499694824
    4. ' >=' → logprob: -8.764132499694824
    5. '<=' → logprob: -8.889132499694824
    6. '(face' → logprob: -9.014132499694824
    7. ' >' → logprob: -9.389132499694824
    8. '==' → logprob: -10.639132499694824
    9. '   ' → logprob: -11.014132499694824
    10. '≥' → logprob: -11.264132499694824

Token 1635: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0002584785979706794
    2. ' least' → logprob: -8.375258445739746
    3. 'last' → logprob: -11.750258445739746
    4. '```' → logprob: -12.125258445739746
    5. 'Least' → logprob: -12.625258445739746
    6. 'len' → logprob: -12.750258445739746
    7. '>=' → logprob: -12.875258445739746
    8. '>' → logprob: -13.875258445739746
    9. '_le' → logprob: -14.000258445739746
    10. 'east' → logprob: -14.375258445739746

Token 1636: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011439072113716975
    2. '>=' → logprob: -10.500114440917969
    3. '```' → logprob: -10.625114440917969
    4. '>' → logprob: -10.750114440917969
    5. ' ' → logprob: -10.875114440917969
    6. '   ' → logprob: -11.000114440917969
    7. '4' → logprob: -12.750114440917969
    8. '
' → logprob: -13.750114440917969
    9. '``' → logprob: -13.875114440917969
    10. '=' → logprob: -15.875114440917969

Token 1637: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.478889215737581e-05
    2. '4' → logprob: -9.875054359436035
    3. '```' → logprob: -13.625054359436035
    4. '
' → logprob: -13.875054359436035
    5. ' ' → logprob: -14.250054359436035
    6. '=' → logprob: -16.12505531311035
    7. '>=' → logprob: -16.37505531311035
    8. '>' → logprob: -16.37505531311035
    9. '

' → logprob: -16.75005531311035
    10. '   ' → logprob: -17.00005531311035

Token 1638: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014396385522559285
    2. ' and' → logprob: -6.876439571380615
    3. 'and' → logprob: -8.626440048217773
    4. '
' → logprob: -9.376440048217773
    5. '```' → logprob: -9.626440048217773
    6. '       ' → logprob: -10.501440048217773
    7. '		' → logprob: -11.626440048217773
    8. '   ' → logprob: -11.751440048217773
    9. ' if' → logprob: -12.001440048217773
    10. ',' → logprob: -12.251440048217773

Token 1639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013369438238441944
    2. '```' → logprob: -9.250133514404297
    3. '       ' → logprob: -10.875133514404297
    4. '               ' → logprob: -11.625133514404297
    5. ',' → logprob: -12.875133514404297
    6. '		' → logprob: -13.750133514404297
    7. '                   ' → logprob: -13.875133514404297
    8. ' if' → logprob: -14.000133514404297
    9. '	       ' → logprob: -14.125133514404297
    10. '          ' → logprob: -14.250133514404297

Token 1640: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6755315661430359
    2. ' if' → logprob: -0.9255315661430359
    3. 'if' (adapté à ' if') → logprob: -2.5505316257476807
    4. '   ' → logprob: -4.300531387329102
    5. '       ' → logprob: -5.800531387329102
    6. '```' → logprob: -9.300531387329102
    7. ' ' → logprob: -9.925531387329102
    8. '	if' → logprob: -12.050531387329102
    9. '          ' → logprob: -12.425531387329102
    10. '    ' → logprob: -12.675531387329102

Token 1641: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023250719532370567
    2. ' len' → logprob: -3.7732508182525635
    3. '(len' → logprob: -12.773250579833984
    4. '   ' → logprob: -13.023250579833984
    5. '	len' → logprob: -16.773250579833984
    6. ' ' → logprob: -18.023250579833984
    7. '           ' → logprob: -18.773250579833984
    8. '  ' → logprob: -19.648250579833984
    9. '=len' → logprob: -20.148250579833984
    10. '[len' → logprob: -20.648250579833984

Token 1642: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -1.0206720617134124e-05
    2. 'face' → logprob: -11.50001049041748
    3. ' face' → logprob: -17.875009536743164
    4. '(' → logprob: -18.125009536743164
    5. ' (' → logprob: -19.625009536743164
    6. '(
' → logprob: -20.250009536743164
    7. '(f' → logprob: -20.375009536743164
    8. '>' → logprob: -21.250009536743164
    9. '_face' → logprob: -21.500009536743164
    10. '.face' → logprob: -22.125009536743164

Token 1643: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5253739953041077
    2. ')' → logprob: -1.900373935699463
    3. ' >=' → logprob: -1.900373935699463
    4. ')>=' → logprob: -2.775373935699463
    5. '>' → logprob: -3.150373935699463
    6. '   ' → logprob: -6.775373935699463
    7. '[' → logprob: -7.025373935699463
    8. ')>' → logprob: -7.025373935699463
    9. ' >' → logprob: -7.275373935699463
    10. '≥' → logprob: -8.400374412536621

Token 1644: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07913488149642944
    2. ' >=' → logprob: -2.579134941101074
    3. ')>=' → logprob: -9.204134941101074
    4. '   ' → logprob: -9.829134941101074
    5. '>' → logprob: -9.954134941101074
    6. '<' → logprob: -11.204134941101074
    7. '≥' → logprob: -11.204134941101074
    8. ']>=' → logprob: -12.204134941101074
    9. '[' → logprob: -12.704134941101074
    10. '```' → logprob: -13.079134941101074

Token 1645: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.875097274780273
    4. '4' → logprob: -16.125097274780273
    5. '```' → logprob: -16.250097274780273
    6. '  ' → logprob: -17.750097274780273
    7. '       ' → logprob: -19.812597274780273
    8. '۳' → logprob: -19.937597274780273
    9. '2' → logprob: -20.000097274780273
    10. '
' → logprob: -20.125097274780273

Token 1646: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.000011444091797
    4. '```' → logprob: -18.000011444091797
    5. '4' → logprob: -18.125011444091797
    6. '
' → logprob: -18.500011444091797
    7. '  ' → logprob: -20.375011444091797
    8. '۳' → logprob: -20.750011444091797
    9. '﻿' → logprob: -21.000011444091797
    10. '2' → logprob: -21.000011444091797

Token 1647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45192545652389526
    2. ':
' → logprob: -1.32692551612854
    3. '               ' → logprob: -2.45192551612854
    4. '           ' → logprob: -4.576925277709961
    5. '       ' → logprob: -7.201925277709961
    6. ' continue' → logprob: -7.951925277709961
    7. 'continue' → logprob: -8.201925277709961
    8. '   ' → logprob: -9.076925277709961
    9. ':return' → logprob: -9.201925277709961
    10. '                   ' → logprob: -9.576925277709961

Token 1648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6575323343276978
    2. '       ' → logprob: -0.7825323343276978
    3. '           ' → logprob: -4.032532215118408
    4. ' continue' → logprob: -5.657532215118408
    5. 'continue' → logprob: -6.032532215118408
    6. '	continue' → logprob: -7.782532215118408
    7. '	       ' → logprob: -8.282532691955566
    8. '   ' → logprob: -8.532532691955566
    9. ' continues' → logprob: -10.157532691955566
    10. '                   ' → logprob: -10.907532691955566

Token 1649: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07095621526241302
    2. '           ' → logprob: -3.445956230163574
    3. 'continue' (adapté à ' continue') → logprob: -3.695956230163574
    4. ' continue' → logprob: -4.945956230163574
    5. '   ' → logprob: -5.945956230163574
    6. '       ' → logprob: -6.695956230163574
    7. '	continue' → logprob: -7.195956230163574
    8. '                   ' → logprob: -10.820956230163574
    9. '_continue' → logprob: -10.945956230163574
    10. '	       ' → logprob: -11.445956230163574

Token 1650: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002808798337355256
    2. '       ' → logprob: -6.627808570861816
    3. '   ' → logprob: -7.377808570861816
    4. '
' → logprob: -7.877808570861816
    5. '               ' → logprob: -8.877808570861816
    6. ' continue' → logprob: -9.502808570861816
    7. 'continue' → logprob: -10.002808570861816
    8. '```' → logprob: -10.002808570861816
    9. '            
' → logprob: -10.502808570861816
    10. '    
' → logprob: -10.502808570861816

Token 1651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02643231861293316
    2. '       ' → logprob: -3.6514322757720947
    3. '   ' → logprob: -9.901432037353516
    4. '
' → logprob: -10.526432037353516
    5. '               ' → logprob: -10.901432037353516
    6. '```' → logprob: -10.901432037353516
    7. 'continue' → logprob: -12.026432037353516
    8. ' continue' → logprob: -12.276432037353516
    9. '<|end|>' → logprob: -13.901432037353516
    10. '     ' → logprob: -14.151432037353516

Token 1652: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021100090816617012
    2. '   ' → logprob: -4.646100044250488
    3. '       ' → logprob: -5.396100044250488
    4. 'faces' → logprob: -5.521100044250488
    5. '
' → logprob: -6.771100044250488
    6. '#' (adapté à ' #') → logprob: -6.896100044250488
    7. 'points' → logprob: -8.021100044250488
    8. 'if' → logprob: -9.896100044250488
    9. 'area' → logprob: -10.021100044250488
    10. '            
' → logprob: -10.146100044250488

Token 1653: ' add' (ID: 1147)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5122116804122925
    2. 'faces' → logprob: -1.8872116804122925
    3. '           ' → logprob: -2.137211799621582
    4. 'if' → logprob: -2.387211799621582
    5. '   ' → logprob: -4.012211799621582
    6. 'area' → logprob: -4.762211799621582
    7. 'valid' → logprob: -5.887211799621582
    8. 'inside' → logprob: -5.887211799621582
    9. 'min' → logprob: -6.512211799621582
    10. 'face' → logprob: -6.637211799621582

Token 1654: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5057296752929688
    2. ' face' → logprob: -1.1307296752929688
    3. 'faces' → logprob: -2.7557296752929688
    4. '(face' → logprob: -5.505729675292969
    5. ' faces' → logprob: -5.755729675292969
    6. '   ' → logprob: -6.130729675292969
    7. '           ' → logprob: -6.880729675292969
    8. '_faces' → logprob: -10.255729675292969
    9. '       ' → logprob: -10.630729675292969
    10. '_face' → logprob: -10.880729675292969

Token 1655: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3891989588737488
    2. '.append' → logprob: -1.1391990184783936
    3. '               ' → logprob: -6.6391987800598145
    4. '(f' → logprob: -8.264199256896973
    5. '.' → logprob: -8.889199256896973
    6. '       ' → logprob: -9.139199256896973
    7. '(face' → logprob: -9.264199256896973
    8. '                   ' → logprob: -9.389199256896973
    9. '.faces' → logprob: -9.764199256896973
    10. ',' → logprob: -9.764199256896973

Token 1656: ' new' (ID: 620)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0025261954870074987
    2. ' face' → logprob: -6.00252628326416
    3. '(face' → logprob: -10.12752628326416
    4. '   ' → logprob: -11.75252628326416
    5. 'tuple' → logprob: -14.25252628326416
    6. 'set' → logprob: -14.50252628326416
    7. 'all' → logprob: -14.62752628326416
    8. 'faces' → logprob: -15.25252628326416
    9. ' ' → logprob: -15.62752628326416
    10. 'sorted' → logprob: -15.87752628326416

Token 1657: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033489398192614317
    2. '   ' → logprob: -6.8783488273620605
    3. '```' → logprob: -7.6283488273620605
    4. '               ' → logprob: -7.8783488273620605
    5. ' and' → logprob: -7.8783488273620605
    6. ' if' → logprob: -8.128349304199219
    7. '
' → logprob: -8.628349304199219
    8. '       ' → logprob: -8.753349304199219
    9. '            
' → logprob: -9.503349304199219
    10. ',' → logprob: -9.628349304199219

Token 1658: 'avoid' (ID: 138714)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0037256148643791676
    2. ' face' → logprob: -6.503725528717041
    3. 'set' → logprob: -6.878725528717041
    4. '   ' → logprob: -7.003725528717041
    5. '(face' → logprob: -9.5037260055542
    6. 'not' → logprob: -9.8787260055542
    7. 'all' → logprob: -10.1287260055542
    8. '           ' → logprob: -10.3787260055542
    9. 'tuple' → logprob: -10.8787260055542
    10. '       ' → logprob: -11.0037260055542

Token 1659: ' duplicates' (ID: 91135)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0029470359440892935
    2. '(face' → logprob: -6.877946853637695
    3. ' face' → logprob: -7.002946853637695
    4. 'set' → logprob: -8.252946853637695
    5. 'len' → logprob: -8.252946853637695
    6. 'tuple' → logprob: -8.877946853637695
    7. 'any' → logprob: -8.877946853637695
    8. 'faces' → logprob: -9.252946853637695
    9. 'sorted' → logprob: -10.252946853637695
    10. '   ' → logprob: -11.127946853637695

Token 1660: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7520655393600464
    2. '           ' → logprob: -0.7520655393600464
    3. 'and' → logprob: -3.377065658569336
    4. ')' → logprob: -4.002065658569336
    5. '               ' → logprob: -5.877065658569336
    6. '):
' → logprob: -7.252065658569336
    7. '```' → logprob: -8.502065658569336
    8. ',' → logprob: -8.627065658569336
    9. ')
' → logprob: -9.127065658569336
    10. '                       ' → logprob: -9.377065658569336

Token 1661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004228091274853796
    2. '```' → logprob: -7.875422954559326
    3. '       ' → logprob: -11.000422477722168
    4. '
' → logprob: -11.125422477722168
    5. ' if' → logprob: -12.500422477722168
    6. '               ' → logprob: -12.750422477722168
    7. '   ' → logprob: -13.625422477722168
    8. '``' → logprob: -13.875422477722168
    9. 'if' → logprob: -14.000422477722168
    10. '          ' → logprob: -14.625422477722168

Token 1662: ' face' (ID: 4950)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1534939706325531
    2. ' if' → logprob: -2.528493881225586
    3. 'if' → logprob: -2.903493881225586
    4. '   ' → logprob: -4.903493881225586
    5. 'faces' → logprob: -8.903493881225586
    6. '       ' → logprob: -10.028493881225586
    7. 'face' (adapté à ' face') → logprob: -10.278493881225586
    8. ' faces' → logprob: -11.153493881225586
    9. ' face' → logprob: -11.778493881225586
    10. '
' → logprob: -12.028493881225586

Token 1663: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.9339076280593872
    2. '.append' → logprob: -1.1839076280593872
    3. '_ids' → logprob: -2.3089075088500977
    4. '_tokens' → logprob: -3.1839075088500977
    5. '_tuple' → logprob: -3.1839075088500977
    6. 'not' → logprob: -3.8089075088500977
    7. '_points' → logprob: -4.058907508850098
    8. 'set' → logprob: -4.308907508850098
    9. 's' → logprob: -4.558907508850098
    10. '_not' → logprob: -4.683907508850098

Token 1664: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42895978689193726
    2. ' =' → logprob: -1.053959846496582
    3. '=set' → logprob: -8.678959846496582
    4. '.add' → logprob: -10.428959846496582
    5. ' not' → logprob: -10.928959846496582
    6. '   ' → logprob: -11.803959846496582
    7. '.' → logprob: -11.928959846496582
    8. ')' → logprob: -11.928959846496582
    9. 'not' → logprob: -13.178959846496582
    10. '=None' → logprob: -13.178959846496582

Token 1665: ' set' (ID: 920)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.12714889645576477
    2. 'set' → logprob: -2.1271488666534424
    3. ' fro' → logprob: -8.627148628234863
    4. ' set' → logprob: -10.502148628234863
    5. '   ' → logprob: -11.502148628234863
    6. '{' → logprob: -13.002148628234863
    7. 'tuple' → logprob: -13.252148628234863
    8. '       ' → logprob: -17.75214958190918
    9. '```' → logprob: -17.87714958190918
    10. '    ' → logprob: -18.62714958190918

Token 1666: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.0015045057516545057
    2. 'face' → logprob: -6.501504421234131
    3. '()' → logprob: -13.751504898071289
    4. ' face' → logprob: -15.126504898071289
    5. '(
' → logprob: -15.251504898071289
    6. '_face' → logprob: -15.376504898071289
    7. '(f' → logprob: -15.751504898071289
    8. '```' → logprob: -16.00150489807129
    9. '([' → logprob: -16.75150489807129
    10. '(' → logprob: -17.50150489807129

Token 1667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01550210639834404
    2. ')
' → logprob: -4.265501976013184
    3. ')==' → logprob: -7.015501976013184
    4. '           ' → logprob: -8.890501976013184
    5. '):
' → logprob: -9.015501976013184
    6. ')!=' → logprob: -9.515501976013184
    7. '())' → logprob: -11.140501976013184
    8. ')<' → logprob: -11.390501976013184
    9. ')**' → logprob: -11.515501976013184
    10. '):' → logprob: -11.765501976013184

Token 1668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006643029628321528
    2. '       ' → logprob: -7.750664234161377
    3. '   ' → logprob: -9.500664710998535
    4. '               ' → logprob: -9.625664710998535
    5. '```' → logprob: -10.000664710998535
    6. ' if' → logprob: -10.875664710998535
    7. '                   ' → logprob: -11.750664710998535
    8. 'if' → logprob: -12.000664710998535
    9. '          ' → logprob: -12.875664710998535
    10. '<|end|>' → logprob: -13.125664710998535

Token 1669: ' repeated' (ID: 24161)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027790814638137817
    2. 'if' → logprob: -3.6527907848358154
    3. ' if' → logprob: -6.6527910232543945
    4. '   ' → logprob: -9.152791023254395
    5. '```' → logprob: -9.902791023254395
    6. '       ' → logprob: -10.527791023254395
    7. '               ' → logprob: -11.902791023254395
    8. 'continue' → logprob: -12.527791023254395
    9. '                   ' → logprob: -13.152791023254395
    10. 'for' → logprob: -13.777791023254395

Token 1670: ' =' (ID: 314)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8746093511581421
    2. '=' → logprob: -0.9996093511581421
    3. 'not' → logprob: -2.3746094703674316
    4. ' =' → logprob: -2.3746094703674316
    5. ' in' → logprob: -4.499609470367432
    6. 'in' → logprob: -4.624609470367432
    7. '_not' → logprob: -6.374609470367432
    8. '_faces' → logprob: -6.374609470367432
    9. ')' → logprob: -6.749609470367432
    10. 'if' → logprob: -7.624609470367432

Token 1671: ' False' (ID: 7983)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6931869387626648
    2. 'False' → logprob: -0.6931869387626648
    3. ' False' → logprob: -10.31818675994873
    4. ' any' → logprob: -12.44318675994873
    5. '   ' → logprob: -12.94318675994873
    6. 'false' → logprob: -16.193187713623047
    7. 'Any' → logprob: -16.443187713623047
    8. '```' → logprob: -16.568187713623047
    9. '0' → logprob: -16.818187713623047
    10. '(False' → logprob: -16.943187713623047

Token 1672: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006508247461169958
    2. ' for' → logprob: -5.1315083503723145
    3. 'for' → logprob: -8.506507873535156
    4. '       ' → logprob: -9.131507873535156
    5. '   ' → logprob: -9.381507873535156
    6. '                   ' → logprob: -10.006507873535156
    7. '               ' → logprob: -10.131507873535156
    8. '<|end|>' → logprob: -10.131507873535156
    9. '                           ' → logprob: -11.631507873535156
    10. ' if' → logprob: -11.631507873535156

Token 1673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004046938265673816
    2. ' for' → logprob: -8.750404357910156
    3. '       ' → logprob: -8.875404357910156
    4. '               ' → logprob: -10.375404357910156
    5. '                   ' → logprob: -10.500404357910156
    6. '   ' → logprob: -10.500404357910156
    7. 'for' → logprob: -11.500404357910156
    8. '		' → logprob: -12.750404357910156
    9. '                           ' → logprob: -13.500404357910156
    10. '                       ' → logprob: -13.500404357910156

Token 1674: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04354681447148323
    2. ' for' → logprob: -3.5435469150543213
    3. '           ' → logprob: -4.293546676635742
    4. '   ' → logprob: -10.543546676635742
    5. '```' → logprob: -11.293546676635742
    6. '       ' → logprob: -12.168546676635742
    7. '	for' → logprob: -14.293546676635742
    8. '               ' → logprob: -15.168546676635742
    9. '                   ' → logprob: -15.918546676635742
    10. '
' → logprob: -16.293546676635742

Token 1675: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25513920187950134
    2. 'existing' → logprob: -1.5051392316818237
    3. 'other' → logprob: -5.880139350891113
    4. 'old' → logprob: -8.505139350891113
    5. ' existing' → logprob: -9.005139350891113
    6. 'face' → logprob: -10.755139350891113
    7. 'ex' → logprob: -11.380139350891113
    8. ' f' → logprob: -11.380139350891113
    9. 'exist' → logprob: -11.630139350891113
    10. 'ff' → logprob: -11.755139350891113

Token 1676: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6494627594947815
    2. 'in' → logprob: -0.7744627594947815
    3. 'f' → logprob: -4.149462699890137
    4. 'face' → logprob: -7.774462699890137
    5. 'aces' → logprob: -9.149462699890137
    6. 'ace' → logprob: -9.774462699890137
    7. '2' → logprob: -9.774462699890137
    8. '_' → logprob: -9.774462699890137
    9. '_in' → logprob: -10.149462699890137
    10. 'existing' → logprob: -10.274462699890137

Token 1677: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -4.0484450437361374e-05
    2. ' faces' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.00004005432129
    4. '[' → logprob: -16.75004005432129
    5. '.faces' → logprob: -16.87504005432129
    6. '_faces' → logprob: -17.25004005432129
    7. 'face' → logprob: -17.50004005432129
    8. '
' → logprob: -18.00004005432129
    9. '[
' → logprob: -18.50004005432129
    10. '```' → logprob: -19.37504005432129

Token 1678: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2632339596748352
    2. '               ' → logprob: -2.0132339000701904
    3. ':' → logprob: -2.3882339000701904
    4. '           ' → logprob: -6.5132341384887695
    5. '       ' → logprob: -6.7632341384887695
    6. 'in' → logprob: -7.5132341384887695
    7. ' in' → logprob: -7.5132341384887695
    8. '                               ' → logprob: -8.13823413848877
    9. '):
' → logprob: -8.26323413848877
    10. 'if' → logprob: -8.38823413848877

Token 1679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004267428594175726
    2. '           ' → logprob: -8.750426292419434
    3. '                   ' → logprob: -9.125426292419434
    4. ' if' → logprob: -9.875426292419434
    5. '                       ' → logprob: -9.875426292419434
    6. '       ' → logprob: -11.250426292419434
    7. '	           ' → logprob: -11.750426292419434
    8. 'if' → logprob: -11.875426292419434
    9. '```' → logprob: -12.125426292419434
    10. '<|end|>' → logprob: -12.125426292419434

Token 1680: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03876043111085892
    2. ' if' → logprob: -3.2887604236602783
    3. '           ' → logprob: -7.788760662078857
    4. '   ' → logprob: -8.9137601852417
    5. '               ' → logprob: -9.5387601852417
    6. '       ' → logprob: -10.1637601852417
    7. '                   ' → logprob: -10.7887601852417
    8. '
' → logprob: -10.7887601852417
    9. '                       ' → logprob: -12.4137601852417
    10. '```' → logprob: -12.4137601852417

Token 1681: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.13017378747463226
    2. 'f' → logprob: -2.255173683166504
    3. 'len' → logprob: -4.630173683166504
    4. ' face' → logprob: -5.255173683166504
    5. '   ' → logprob: -6.880173683166504
    6. ' f' → logprob: -7.005173683166504
    7. 'set' → logprob: -9.005173683166504
    8. ' len' → logprob: -9.255173683166504
    9. '
' → logprob: -10.880173683166504
    10. '(face' → logprob: -10.880173683166504

Token 1682: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0021123127080500126
    2. '==' → logprob: -6.50211238861084
    3. '.' → logprob: -8.37711238861084
    4. 'set' → logprob: -8.75211238861084
    5. '   ' → logprob: -9.12711238861084
    6. ' ==' → logprob: -9.75211238861084
    7. 'et' → logprob: -11.25211238861084
    8. '```' → logprob: -11.87711238861084
    9. '       ' → logprob: -12.12711238861084
    10. 'Set' → logprob: -12.37711238861084

Token 1683: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02160537615418434
    2. ' ==' → logprob: -4.021605491638184
    3. '.' → logprob: -5.896605491638184
    4. '<=' → logprob: -7.396605491638184
    5. '!=' → logprob: -10.146605491638184
    6. '   ' → logprob: -10.896605491638184
    7. '>=' → logprob: -11.521605491638184
    8. ' <=' → logprob: -12.021605491638184
    9. ' !=' → logprob: -12.521605491638184
    10. '>' → logprob: -13.021605491638184

Token 1684: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001609481987543404
    2. 'face' → logprob: -6.7516093254089355
    3. 'f' → logprob: -7.7516093254089355
    4. ' set' → logprob: -12.001609802246094
    5. '{' → logprob: -13.251609802246094
    6. '(set' → logprob: -15.251609802246094
    7. '=set' → logprob: -15.251609802246094
    8. '   ' → logprob: -15.376609802246094
    9. '
' → logprob: -15.501609802246094
    10. '	set' → logprob: -16.001609802246094

Token 1685: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0011252141557633877
    2. 'f' → logprob: -7.001125335693359
    3. '(face' → logprob: -8.50112533569336
    4. 'face' → logprob: -11.50112533569336
    5. '[f' → logprob: -15.37612533569336
    6. '```' → logprob: -17.25112533569336
    7. '(' → logprob: -17.50112533569336
    8. '
' → logprob: -18.12612533569336
    9. '(
' → logprob: -18.37612533569336
    10. '   ' → logprob: -18.50112533569336

Token 1686: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3005732297897339
    2. ':
' → logprob: -1.6755732297897339
    3. '                   ' → logprob: -2.6755733489990234
    4. '               ' → logprob: -7.175573348999023
    5. '():
' → logprob: -7.175573348999023
    6. ':' → logprob: -7.425573348999023
    7. '                       ' → logprob: -7.425573348999023
    8. '):' → logprob: -7.925573348999023
    9. ' and' → logprob: -9.175573348999023
    10. 'and' → logprob: -9.425573348999023

Token 1687: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02646040916442871
    2. '                       ' → logprob: -3.7764604091644287
    3. ' and' → logprob: -6.026460647583008
    4. 'and' → logprob: -8.401460647583008
    5. '                           ' → logprob: -8.526460647583008
    6. '               ' → logprob: -9.026460647583008
    7. '                               ' → logprob: -9.401460647583008
    8. ':' → logprob: -10.401460647583008
    9. '                  ' → logprob: -10.526460647583008
    10. '                                           ' → logprob: -10.776460647583008

Token 1688: ' repeated' (ID: 24161)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39505645632743835
    2. 're' → logprob: -1.2700564861297607
    3. '                       ' → logprob: -3.6450564861297607
    4. ' repeated' → logprob: -4.395056247711182
    5. '               ' → logprob: -5.145056247711182
    6. '                           ' → logprob: -8.14505672454834
    7. '           ' → logprob: -8.39505672454834
    8. 'continue' → logprob: -8.89505672454834
    9. ',re' → logprob: -9.27005672454834
    10. '                               ' → logprob: -9.27005672454834

Token 1689: ' =' (ID: 314)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5610474944114685
    2. '                   ' → logprob: -1.4360475540161133
    3. ':
' → logprob: -2.1860475540161133
    4. ':' → logprob: -3.1860475540161133
    5. '=' → logprob: -3.9360475540161133
    6. 'continue' → logprob: -4.936047554016113
    7. '=True' → logprob: -5.186047554016113
    8. ' =' → logprob: -6.311047554016113
    9. '               ' → logprob: -6.811047554016113
    10. '                           ' → logprob: -7.561047554016113

Token 1690: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '(True' → logprob: -17.1250057220459
    4. '1' → logprob: -18.2500057220459
    5. '=True' → logprob: -19.5000057220459
    6. '   ' → logprob: -20.0000057220459
    7. 'False' → logprob: -20.6250057220459
    8. 'true' → logprob: -20.7500057220459
    9. '           ' → logprob: -22.3750057220459
    10. '[' → logprob: -23.0000057220459

Token 1691: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011395453475415707
    2. '                       ' → logprob: -4.511395454406738
    3. '               ' → logprob: -8.386395454406738
    4. '           ' → logprob: -10.511395454406738
    5. 'continue' → logprob: -10.511395454406738
    6. '       ' → logprob: -11.261395454406738
    7. ' continue' → logprob: -11.386395454406738
    8. '                           ' → logprob: -11.386395454406738
    9. ':
' → logprob: -12.261395454406738
    10. '                  ' → logprob: -12.636395454406738

Token 1692: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02281281352043152
    2. '                       ' → logprob: -3.897812843322754
    3. '               ' → logprob: -6.897812843322754
    4. '```' → logprob: -7.522812843322754
    5. '                           ' → logprob: -8.147812843322754
    6. '           ' → logprob: -8.897812843322754
    7. '                                           ' → logprob: -10.022812843322754
    8. '                               ' → logprob: -10.147812843322754
    9. '       ' → logprob: -10.147812843322754
    10. 'continue' → logprob: -10.272812843322754

Token 1693: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25733137130737305
    2. 'break' (adapté à ' break') → logprob: -1.507331371307373
    3. '               ' → logprob: -6.632331371307373
    4. ' break' → logprob: -6.882331371307373
    5. 'continue' → logprob: -6.882331371307373
    6. '                       ' → logprob: -7.007331371307373
    7. '           ' → logprob: -7.257331371307373
    8. 'if' → logprob: -8.882331848144531
    9. '
' → logprob: -9.632331848144531
    10. '   ' → logprob: -9.882331848144531

Token 1694: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028574032709002495
    2. '                   ' → logprob: -3.653573989868164
    3. '               ' → logprob: -6.403573989868164
    4. 'if' → logprob: -8.028573989868164
    5. '```' → logprob: -9.278573989868164
    6. 'continue' → logprob: -9.778573989868164
    7. ' if' → logprob: -9.903573989868164
    8. '   ' → logprob: -10.528573989868164
    9. '       ' → logprob: -10.653573989868164
    10. '                       ' → logprob: -11.278573989868164

Token 1695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021841824054718018
    2. '               ' → logprob: -4.521842002868652
    3. '                   ' → logprob: -5.021842002868652
    4. '   ' → logprob: -6.771842002868652
    5. '       ' → logprob: -6.896842002868652
    6. 'if' → logprob: -7.396842002868652
    7. ' if' → logprob: -7.896842002868652
    8. '```' → logprob: -7.896842002868652
    9. 'continue' → logprob: -8.146842002868652
    10. ' continue' → logprob: -8.771842002868652

Token 1696: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005646593868732452
    2. 'if' (adapté à ' if') → logprob: -5.255646705627441
    3. '```' → logprob: -8.630646705627441
    4. '       ' → logprob: -9.255646705627441
    5. '   ' → logprob: -9.630646705627441
    6. ' if' → logprob: -10.380646705627441
    7. '		' → logprob: -10.880646705627441
    8. '	if' → logprob: -12.255646705627441
    9. '          ' → logprob: -12.380646705627441
    10. '               ' → logprob: -12.755646705627441

Token 1697: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06198292225599289
    2. ' not' → logprob: -2.8119828701019287
    3. '   ' → logprob: -11.686983108520508
    4. 're' → logprob: -13.061983108520508
    5. '           ' → logprob: -13.311983108520508
    6. '!' → logprob: -13.686983108520508
    7. '(not' → logprob: -13.811983108520508
    8. '	not' → logprob: -15.186983108520508
    9. ' repeated' → logprob: -15.686983108520508
    10. '       ' → logprob: -15.936983108520508

Token 1698: ' repeated' (ID: 24161)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0028083212673664093
    2. ' repeated' → logprob: -5.877808094024658
    3. 'repeat' → logprob: -13.377808570861816
    4. 'Repeated' → logprob: -14.127808570861816
    5. '   ' → logprob: -14.877808570861816
    6. '	re' → logprob: -15.377808570861816
    7. 'rep' → logprob: -15.502808570861816
    8. ' ' → logprob: -15.877808570861816
    9. '(re' → logprob: -16.3778076171875
    10. 'continued' → logprob: -17.3778076171875

Token 1699: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1626048982143402
    2. ':
' → logprob: -2.037604808807373
    3. ':' → logprob: -4.287604808807373
    4. '           ' → logprob: -5.287604808807373
    5. ' and' → logprob: -8.162605285644531
    6. '                   ' → logprob: -8.412605285644531
    7. '       ' → logprob: -9.162605285644531
    8. '                       ' → logprob: -9.287605285644531
    9. ',' → logprob: -9.662605285644531
    10. '_faces' → logprob: -10.287605285644531

Token 1700: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006141475751064718
    2. '           ' → logprob: -7.500614166259766
    3. '                   ' → logprob: -10.750614166259766
    4. '       ' → logprob: -10.875614166259766
    5. '              ' → logprob: -11.625614166259766
    6. '   ' → logprob: -12.750614166259766
    7. '                       ' → logprob: -12.750614166259766
    8. '             ' → logprob: -13.125614166259766
    9. '                ' → logprob: -13.500614166259766
    10. '```' → logprob: -14.250614166259766

Token 1701: ' faces' (ID: 22060)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5654827356338501
    2. 'faces' (adapté à ' faces') → logprob: -1.31548273563385
    3. ' faces' → logprob: -1.81548273563385
    4. '.faces' → logprob: -8.565483093261719
    5. '```' → logprob: -8.690483093261719
    6. '       ' → logprob: -8.940483093261719
    7. '_faces' → logprob: -9.065483093261719
    8. '           ' → logprob: -9.315483093261719
    9. '                   ' → logprob: -9.565483093261719
    10. '   ' → logprob: -10.315483093261719

Token 1702: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019410114036872983
    2. '.' → logprob: -6.251941204071045
    3. '.extend' → logprob: -12.501940727233887
    4. '.add' → logprob: -12.751940727233887
    5. '.Append' → logprob: -14.001940727233887
    6. ' .' → logprob: -14.001940727233887
    7. '.app' → logprob: -14.376940727233887
    8. '.py' → logprob: -14.626940727233887
    9. '_append' → logprob: -14.751940727233887
    10. ').' → logprob: -15.001940727233887

Token 1703: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.038078442215919495
    2. 'face' → logprob: -3.288078546524048
    3. ' face' → logprob: -10.288078308105469
    4. '   ' → logprob: -13.538078308105469
    5. '(' → logprob: -13.788078308105469
    6. '(f' → logprob: -15.288078308105469
    7. '_face' → logprob: -15.788078308105469
    8. '.face' → logprob: -16.91307830810547
    9. 'list' → logprob: -17.41307830810547
    10. '([' → logprob: -17.66307830810547

Token 1704: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037490393151529133
    2. ')
' → logprob: -8.250374794006348
    3. '           ' → logprob: -9.125374794006348
    4. '               ' → logprob: -13.375374794006348
    5. '   ' → logprob: -13.625374794006348
    6. '       ' → logprob: -13.750374794006348
    7. ')return' → logprob: -15.125374794006348
    8. '                   ' → logprob: -15.875374794006348
    9. ' )' → logprob: -16.250375747680664
    10. '')' → logprob: -16.625375747680664

Token 1705: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003513125702738762
    2. 'return' → logprob: -8.750350952148438
    3. ' return' → logprob: -9.250350952148438
    4. '```' → logprob: -9.625350952148438
    5. '
' → logprob: -10.500350952148438
    6. 'def' → logprob: -14.000350952148438
    7. '       ' → logprob: -14.375350952148438
    8. '	return' → logprob: -14.375350952148438
    9. '    
' → logprob: -15.000350952148438
    10. '<|end|>' → logprob: -15.750350952148438

Token 1706: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12742893397808075
    2. 'return' (adapté à ' return') → logprob: -2.1274290084838867
    3. ' return' → logprob: -8.127429008483887
    4. '
' → logprob: -8.627429008483887
    5. 'def' → logprob: -11.127429008483887
    6. '```' → logprob: -12.502429008483887
    7. 'for' → logprob: -12.752429008483887
    8. '#' → logprob: -13.127429008483887
    9. '	return' → logprob: -13.627429008483887
    10. '    
' → logprob: -13.877429008483887

Token 1707: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0009131324477493763
    2. ' faces' → logprob: -7.000913143157959
    3. '[' → logprob: -13.5009126663208
    4. '[]' → logprob: -16.375913619995117
    5. '[(' → logprob: -17.875913619995117
    6. '   ' → logprob: -18.000913619995117
    7. '.faces' → logprob: -18.125913619995117
    8. 'fac' → logprob: -18.250913619995117
    9. '_faces' → logprob: -18.375913619995117
    10. '[
' → logprob: -18.750913619995117

Token 1708: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002694416616577655
    2. '<|end|>' → logprob: -8.875269889831543
    3. '```' → logprob: -9.500269889831543
    4. '
' → logprob: -10.625269889831543
    5. '#' → logprob: -11.375269889831543
    6. 'import' → logprob: -11.625269889831543
    7. '<|end|>' → logprob: -12.625269889831543
    8. ')' → logprob: -13.250269889831543
    9. '\' → logprob: -14.375269889831543
    10. '    
' → logprob: -14.750269889831543

Token 1709: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.6100132496794686e-05
    2. '#' → logprob: -10.250056266784668
    3. '```' → logprob: -11.000056266784668
    4. 'import' → logprob: -13.375056266784668
    5. 'if' → logprob: -13.500056266784668
    6. 'lines' → logprob: -14.500056266784668
    7. 'for' → logprob: -14.875056266784668
    8. '
' → logprob: -17.00005531311035
    9. 'data' → logprob: -17.25005531311035
    10. 'print' → logprob: -17.50005531311035

Token 1710: ' polygon' (ID: 65081)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06225806102156639
    2. 'area' → logprob: -3.687258005142212
    3. 'compute' → logprob: -4.312258243560791
    4. 'polygon' → logprob: -4.812258243560791
    5. 'calculate' → logprob: -5.187258243560791
    6. 'face' → logprob: -5.812258243560791
    7. 'find' → logprob: -7.062258243560791
    8. 'point' → logprob: -7.562258243560791
    9. 'count' → logprob: -7.812258243560791
    10. 'extract' → logprob: -7.937258243560791

Token 1711: '_contains' (ID: 159996)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.004464539233595133
    2. '_points' → logprob: -6.754464626312256
    3. '_contains' → logprob: -6.754464626312256
    4. '_union' → logprob: -7.254464626312256
    5. 'area' → logprob: -8.004464149475098
    6. 's' → logprob: -8.004464149475098
    7. '_cent' → logprob: -8.629464149475098
    8. '_from' → logprob: -8.754464149475098
    9. '_inside' → logprob: -9.254464149475098
    10. '_' → logprob: -10.254464149475098

Token 1712: '_origin' (ID: 81230)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.14632569253444672
    2. '_point' → logprob: -2.5213255882263184
    3. '(point' → logprob: -3.2713255882263184
    4. '(poly' → logprob: -5.271325588226318
    5. '(points' → logprob: -5.521325588226318
    6. '(a' → logprob: -5.646325588226318
    7. 'point' → logprob: -6.271325588226318
    8. '(face' → logprob: -6.396325588226318
    9. '(pol' → logprob: -7.521325588226318
    10. '_polygon' → logprob: -7.896325588226318

Token 1713: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.010814940556883812
    2. '(point' → logprob: -5.635815143585205
    3. '(poly' → logprob: -5.885815143585205
    4. '(face' → logprob: -6.135815143585205
    5. '(' → logprob: -6.760815143585205
    6. '(f' → logprob: -7.385815143585205
    7. '(points' → logprob: -8.135814666748047
    8. '(pol' → logprob: -9.260814666748047
    9. '(
' → logprob: -10.885814666748047
    10. 'def' → logprob: -11.510814666748047

Token 1714: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.14299944043159485
    2. 'oint' → logprob: -2.0179994106292725
    3. 'oly' → logprob: -9.392999649047852
    4. '):
' → logprob: -9.642999649047852
    5. 'oints' → logprob: -10.142999649047852
    6. 'point' → logprob: -10.267999649047852
    7. 'ol' → logprob: -10.267999649047852
    8. 'polygon' → logprob: -10.517999649047852
    9. ')' → logprob: -11.892999649047852
    10. '):' → logprob: -11.892999649047852

Token 1715: '_points' (ID: 30070)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5229997038841248
    2. '):
' → logprob: -1.0229997634887695
    3. ',p' → logprob: -3.2729997634887695
    4. '):' → logprob: -4.6479997634887695
    5. '(p' → logprob: -8.64799976348877
    6. '   ' → logprob: -10.27299976348877
    7. ')' → logprob: -10.77299976348877
    8. '):

' → logprob: -11.52299976348877
    9. ' ,' → logprob: -11.64799976348877
    10. '):
' → logprob: -12.14799976348877

Token 1716: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08006381243467331
    2. ',' → logprob: -2.955063819885254
    3. '):' → logprob: -3.830063819885254
    4. ',p' → logprob: -5.955063819885254
    5. '   ' → logprob: -7.705063819885254
    6. '(p' → logprob: -10.330063819885254
    7. '):
' → logprob: -10.330063819885254
    8. '):

' → logprob: -11.205063819885254
    9. ')' → logprob: -11.330063819885254
    10. ' ):
' → logprob: -12.080063819885254

Token 1717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.662937372922897e-05
    2. 'return' → logprob: -9.500096321105957
    3. ' return' → logprob: -11.000096321105957
    4. '```' → logprob: -13.250096321105957
    5. '   ' → logprob: -13.750096321105957
    6. ' for' → logprob: -14.750096321105957
    7. '#' → logprob: -14.875096321105957
    8. 'for' → logprob: -15.250096321105957
    9. '       ' → logprob: -15.250096321105957
    10. '
' → logprob: -15.375096321105957

Token 1718: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6462278366088867
    2. 'return' → logprob: -1.2712278366088867
    3. ' return' → logprob: -1.6462278366088867
    4. '#' (adapté à ' #') → logprob: -6.271227836608887
    5. '
' → logprob: -8.146227836608887
    6. ' #' → logprob: -8.771227836608887
    7. 'for' → logprob: -9.646227836608887
    8. ' for' → logprob: -9.646227836608887
    9. 'point' → logprob: -9.771227836608887
    10. ' point' → logprob: -10.396227836608887

Token 1719: ' Check' (ID: 6208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26641273498535156
    2. '   ' → logprob: -1.7664127349853516
    3. '#' → logprob: -3.1414127349853516
    4. 'def' → logprob: -4.016412734985352
    5. ' return' → logprob: -7.016412734985352
    6. 'point' → logprob: -8.391412734985352
    7. 'if' → logprob: -8.766412734985352
    8. 'inside' → logprob: -8.891412734985352
    9. '
' → logprob: -9.516412734985352
    10. 'polygon' → logprob: -9.641412734985352

Token 1720: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6466361284255981
    2. 'inside' → logprob: -2.0216360092163086
    3. 'polygon' → logprob: -2.2716360092163086
    4. ' if' → logprob: -2.5216360092163086
    5. '   ' → logprob: -2.8966360092163086
    6. 'def' → logprob: -3.1466360092163086
    7. 'point' → logprob: -3.3966360092163086
    8. ' polygon' → logprob: -3.8966360092163086
    9. 'return' → logprob: -5.771636009216309
    10. ' inside' → logprob: -6.021636009216309

Token 1721: ' origin' (ID: 12839)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.014636451378464699
    2. ' inside' → logprob: -4.264636516571045
    3. '(' → logprob: -8.014636039733887
    4. 'polygon' → logprob: -9.514636039733887
    5. 'point' → logprob: -10.514636039733887
    6. ' polygon' → logprob: -10.889636039733887
    7. '0' → logprob: -11.389636039733887
    8. ' (' → logprob: -12.639636039733887
    9. ' ' → logprob: -13.014636039733887
    10. '
' → logprob: -13.139636039733887

Token 1722: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5939136147499084
    2. 'in' → logprob: -0.9689136147499084
    3. '(p' → logprob: -3.3439135551452637
    4. '(point' → logprob: -4.468913555145264
    5. ' (' → logprob: -4.843913555145264
    6. ')' → logprob: -5.343913555145264
    7. ' is' → logprob: -6.093913555145264
    8. '(' → logprob: -6.218913555145264
    9. 'point' → logprob: -7.343913555145264
    10. '   ' → logprob: -7.593913555145264

Token 1723: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.0032687378115952015
    2. ' inside' → logprob: -5.753268718719482
    3. 'polygon' → logprob: -10.12826919555664
    4. 'True' → logprob: -10.12826919555664
    5. 'in' → logprob: -12.87826919555664
    6. ' True' → logprob: -13.00326919555664
    7. ' polygon' → logprob: -13.12826919555664
    8. 'point' → logprob: -13.37826919555664
    9. 'Inside' → logprob: -14.12826919555664
    10. '_inside' → logprob: -14.25326919555664

Token 1724: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.010076679289340973
    2. ' polygon' → logprob: -4.635076522827148
    3. '(p' → logprob: -8.510076522827148
    4. 'pol' → logprob: -10.010076522827148
    5. '   ' → logprob: -10.260076522827148
    6. 'point' → logprob: -11.135076522827148
    7. '
' → logprob: -12.010076522827148
    8. '(' → logprob: -12.010076522827148
    9. ' (' → logprob: -12.010076522827148
    10. 'return' → logprob: -13.385076522827148

Token 1725: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032121095806360245
    2. '(p' → logprob: -3.657121181488037
    3. '(point' → logprob: -5.657121181488037
    4. '(' → logprob: -6.532121181488037
    5. ':
' → logprob: -7.907121181488037
    6. '
' → logprob: -9.032120704650879
    7. ':' → logprob: -9.532120704650879
    8. '(
' → logprob: -9.657120704650879
    9. ' (' → logprob: -9.907120704650879
    10. '  ' → logprob: -10.532120704650879

Token 1726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004158772062510252
    2. 'return' → logprob: -6.254158973693848
    3. '
' → logprob: -6.504158973693848
    4. ' return' → logprob: -7.879158973693848
    5. '(p' → logprob: -8.879158973693848
    6. 'polygon' → logprob: -9.379158973693848
    7. '```' → logprob: -10.879158973693848
    8. 'point' → logprob: -11.129158973693848
    9. ' polygon' → logprob: -11.254158973693848
    10. '(point' → logprob: -11.504158973693848

Token 1727: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26010581851005554
    2. '   ' → logprob: -1.510105848312378
    3. ' return' → logprob: -4.885105609893799
    4. '
' → logprob: -7.635105609893799
    5. '```' → logprob: -10.385106086730957
    6. 'point' → logprob: -10.760106086730957
    7. '``' → logprob: -10.760106086730957
    8. '#' (adapté à ' #') → logprob: -11.885106086730957
    9. 'def' → logprob: -12.760106086730957
    10. 'if' → logprob: -12.760106086730957

Token 1728: ' polygon' (ID: 65081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4810008406639099
    2. 'return' → logprob: -0.9810008406639099
    3. ' return' → logprob: -4.981000900268555
    4. '
' → logprob: -11.106000900268555
    5. '#' → logprob: -12.356000900268555
    6. '	return' → logprob: -13.231000900268555
    7. ' ' → logprob: -13.231000900268555
    8. 'center' → logprob: -13.231000900268555
    9. 'import' → logprob: -13.356000900268555
    10. 'x' → logprob: -13.356000900268555

Token 1729: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.22819286584854126
    2. '=' → logprob: -2.2281928062438965
    3. ' =' → logprob: -2.4781928062438965
    4. '   ' → logprob: -4.9781928062438965
    5. 'points' → logprob: -6.2281928062438965
    6. 'def' → logprob: -7.2281928062438965
    7. ')' → logprob: -7.6031928062438965
    8. '_contains' → logprob: -7.8531928062438965
    9. '
' → logprob: -8.103193283081055
    10. 'contains' → logprob: -8.728193283081055

Token 1730: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022719241678714752
    2. '   ' → logprob: -4.522719383239746
    3. ' =' → logprob: -5.022719383239746
    4. '=
' → logprob: -6.897719383239746
    5. 'def' → logprob: -7.147719383239746
    6. '_points' → logprob: -7.147719383239746
    7. 'points' → logprob: -7.272719383239746
    8. ')' → logprob: -7.897719383239746
    9. ',' → logprob: -8.147719383239746
    10. '):
' → logprob: -8.522719383239746

Token 1731: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2953493595123291
    2. '[p' → logprob: -1.545349359512329
    3. '[(' → logprob: -3.795349359512329
    4. ' [' → logprob: -4.04534912109375
    5. '[list' → logprob: -6.79534912109375
    6. '   ' → logprob: -7.67034912109375
    7. '[a' → logprob: -7.79534912109375
    8. '[len' → logprob: -8.79534912109375
    9. 'list' → logprob: -8.92034912109375
    10. '[List' → logprob: -9.54534912109375

Token 1732: ' of' (ID: 328)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.443619966506958
    2. '   ' → logprob: -1.568619966506958
    3. 'of' → logprob: -3.068619966506958
    4. '=' → logprob: -3.068619966506958
    5. ' of' → logprob: -3.193619966506958
    6. '
' → logprob: -5.818619728088379
    7. ' =' → logprob: -5.818619728088379
    8. ')' → logprob: -6.443619728088379
    9. '[' → logprob: -6.818619728088379
    10. '=
' → logprob: -6.818619728088379

Token 1733: ' indices' (ID: 30378)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3913781940937042
    2. '(points' → logprob: -2.141378164291382
    3. 'tu' → logprob: -2.141378164291382
    4. 'tuple' → logprob: -3.391378164291382
    5. '(' → logprob: -3.891378164291382
    6. 'coordinates' → logprob: -4.141378402709961
    7. '(point' → logprob: -5.016378402709961
    8. ' tuples' → logprob: -5.766378402709961
    9. '(p' → logprob: -6.141378402709961
    10. ' (' → logprob: -6.641378402709961

Token 1734: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02154984138906002
    2. 'def' → logprob: -4.521549701690674
    3. '
' → logprob: -5.271549701690674
    4. 'points' → logprob: -6.021549701690674
    5. '(points' → logprob: -7.646549701690674
    6. ' points' → logprob: -7.771549701690674
    7. '```' → logprob: -8.021550178527832
    8. '(p' → logprob: -8.146550178527832
    9. ')' → logprob: -8.396550178527832
    10. ',' → logprob: -8.771550178527832

Token 1735: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0012905937619507313
    2. ' points' → logprob: -7.376290798187256
    3. 'polygon' → logprob: -8.501290321350098
    4. '`' → logprob: -9.251290321350098
    5. 'def' → logprob: -9.376290321350098
    6. '```' → logprob: -9.501290321350098
    7. '   ' → logprob: -9.626290321350098
    8. '
' → logprob: -9.876290321350098
    9. '...' → logprob: -10.751290321350098
    10. 'the' → logprob: -11.001290321350098

Token 1736: ' array' (ID: 2644)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2964348793029785
    2. 'def' → logprob: -1.5464348793029785
    3. '(p' → logprob: -3.7964348793029785
    4. ',' → logprob: -5.0464348793029785
    5. '):
' → logprob: -5.5464348793029785
    6. ':
' → logprob: -5.6714348793029785
    7. ':' → logprob: -6.2964348793029785
    8. ')' → logprob: -6.2964348793029785
    9. '(points' → logprob: -6.9214348793029785
    10. '
' → logprob: -7.5464348793029785

Token 1737: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42212924361228943
    2. '(p' → logprob: -1.6721292734146118
    3. '):
' → logprob: -3.0471291542053223
    4. ':' → logprob: -3.4221291542053223
    5. ':
' → logprob: -3.9221291542053223
    6. ')' → logprob: -4.172129154205322
    7. ',' → logprob: -4.297129154205322
    8. '):' → logprob: -4.672129154205322
    9. 'def' → logprob: -4.797129154205322
    10. ',p' → logprob: -6.172129154205322

Token 1738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004324573092162609
    2. '```' → logprob: -8.875432014465332
    3. 'def' → logprob: -9.125432014465332
    4. '
' → logprob: -9.125432014465332
    5. 'points' → logprob: -10.750432014465332
    6. '``' → logprob: -11.250432014465332
    7. 'polygon' → logprob: -11.375432014465332
    8. '{
' → logprob: -11.375432014465332
    9. '    
' → logprob: -12.125432014465332
    10. '`' → logprob: -12.500432014465332

Token 1739: ' polygon' (ID: 65081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05276002734899521
    2. ' polygon' → logprob: -4.177760124206543
    3. 'polygon' (adapté à ' polygon') → logprob: -4.302760124206543
    4. ' pts' → logprob: -5.177760124206543
    5. 'p' → logprob: -5.427760124206543
    6. 'poly' → logprob: -5.802760124206543
    7. 'pts' → logprob: -6.052760124206543
    8. 'point' → logprob: -6.552760124206543
    9. ' p' → logprob: -6.677760124206543
    10. ' poly' → logprob: -6.677760124206543

Token 1740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03453758358955383
    2. ' =' → logprob: -3.5345375537872314
    3. '_points' → logprob: -5.5345377922058105
    4. '_coords' → logprob: -7.6595377922058105
    5. '_pts' → logprob: -8.409537315368652
    6. 'points' → logprob: -10.034537315368652
    7. '   ' → logprob: -10.159537315368652
    8. '=[' → logprob: -10.284537315368652
    9. '=_' → logprob: -12.784537315368652
    10. '=
' → logprob: -13.034537315368652

Token 1741: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.25217294692993164
    2. '[' → logprob: -1.5021729469299316
    3. '[list' → logprob: -8.502172470092773
    4. '   ' → logprob: -10.752172470092773
    5. ' [' → logprob: -11.377172470092773
    6. '[line' → logprob: -13.877172470092773
    7. '[]
' → logprob: -14.127172470092773
    8. '[np' → logprob: -14.127172470092773
    9. '[pos' → logprob: -14.502172470092773
    10. '[ind' → logprob: -14.752172470092773

Token 1742: 'polygon' (ID: 132859)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.010487995110452175
    2. ' points' → logprob: -4.635488033294678
    3. '(points' → logprob: -7.260488033294678
    4. '   ' → logprob: -10.88548755645752
    5. '(' → logprob: -12.88548755645752
    6. '	points' → logprob: -13.13548755645752
    7. 'point' → logprob: -13.26048755645752
    8. ' (' → logprob: -14.13548755645752
    9. '       ' → logprob: -14.26048755645752
    10. ')' → logprob: -14.38548755645752

Token 1743: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.03847644850611687
    2. '[' → logprob: -3.4134764671325684
    3. '[p' → logprob: -6.163476467132568
    4. 'points' → logprob: -6.538476467132568
    5. '[i' → logprob: -7.788476467132568
    6. '[u' → logprob: -9.03847599029541
    7. '_indices' → logprob: -9.03847599029541
    8. '[_' → logprob: -9.53847599029541
    9. '
' → logprob: -9.78847599029541
    10. 'polygon' → logprob: -9.78847599029541

Token 1744: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2749180495738983
    2. ']' → logprob: -1.5249180793762207
    3. '[u' → logprob: -4.774918079376221
    4. '[' → logprob: -5.149918079376221
    5. '[p' → logprob: -5.399918079376221
    6. '[x' → logprob: -7.274918079376221
    7. '])' → logprob: -7.274918079376221
    8. '[n' → logprob: -8.024917602539062
    9. '[index' → logprob: -8.024917602539062
    10. ']]' → logprob: -8.399917602539062

Token 1745: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012953581754118204
    2. 'for' → logprob: -6.876295566558838
    3. ' for' → logprob: -8.87629508972168
    4. ' ]' → logprob: -9.25129508972168
    5. '()]' → logprob: -11.87629508972168
    6. ']
' → logprob: -12.00129508972168
    7. ']]' → logprob: -12.75129508972168
    8. ')' → logprob: -13.00129508972168
    9. ')]' → logprob: -13.12629508972168
    10. '[' → logprob: -13.12629508972168

Token 1746: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.022884488105774
    2. 'for' → logprob: -1.022884488105774
    3. ']' → logprob: -1.272884488105774
    4. '   ' → logprob: -8.022884368896484
    5. ' ]' → logprob: -8.772884368896484
    6. '[' → logprob: -9.022884368896484
    7. ' ' → logprob: -9.147884368896484
    8. ']
' → logprob: -10.272884368896484
    9. '	for' → logprob: -10.397884368896484
    10. '  ' → logprob: -11.147884368896484

Token 1747: ' i' (ID: 575)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.008653099648654461
    2. ' polygon' → logprob: -5.008653163909912
    3. 'range' → logprob: -6.508653163909912
    4. 'points' → logprob: -8.883652687072754
    5. '[' → logprob: -9.633652687072754
    6. 'p' → logprob: -9.883652687072754
    7. ' range' → logprob: -10.008652687072754
    8. '[p' → logprob: -10.508652687072754
    9. 'point' → logprob: -10.883652687072754
    10. 'pol' → logprob: -10.883652687072754

Token 1748: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15982115268707275
    2. ' in' → logprob: -2.159821033477783
    3. ']' → logprob: -4.034821033477783
    4. 'polygon' → logprob: -5.159821033477783
    5. ' polygon' → logprob: -6.409821033477783
    6. 'range' → logprob: -6.659821033477783
    7. ':' → logprob: -6.784821033477783
    8. ':]' → logprob: -7.284821033477783
    9. 'olygon' → logprob: -7.409821033477783
    10. '   ' → logprob: -8.034821510314941

Token 1749: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4723387360572815
    2. 'polygon' → logprob: -1.0973386764526367
    3. ' range' → logprob: -3.7223386764526367
    4. ' polygon' → logprob: -4.847338676452637
    5. 'points' → logprob: -4.972338676452637
    6. 'face' → logprob: -7.097338676452637
    7. 'len' → logprob: -7.097338676452637
    8. '[' → logprob: -7.222338676452637
    9. '
' → logprob: -7.847338676452637
    10. ' points' → logprob: -9.097338676452637

Token 1750: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008876909501850605
    2. '(len' → logprob: -4.758876800537109
    3. ' len' → logprob: -8.88387680053711
    4. '1' → logprob: -9.13387680053711
    5. '0' → logprob: -12.25887680053711
    6. '(' → logprob: -12.75887680053711
    7. ',len' → logprob: -13.38387680053711
    8. '
' → logprob: -13.38387680053711
    9. '[len' → logprob: -13.63387680053711
    10. 'polygon' → logprob: -14.00887680053711

Token 1751: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.16098745167255402
    2. 'polygon' → logprob: -1.9109874963760376
    3. ' polygon' → logprob: -8.285987854003906
    4. 'p' → logprob: -8.285987854003906
    5. 'points' → logprob: -9.535987854003906
    6. '(points' → logprob: -9.660987854003906
    7. ')' → logprob: -10.285987854003906
    8. '(len' → logprob: -10.785987854003906
    9. 'poly' → logprob: -11.410987854003906
    10. 'len' → logprob: -11.535987854003906

Token 1752: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.21553529798984528
    2. 'polygon' → logprob: -2.7155354022979736
    3. ')]' → logprob: -2.8405354022979736
    4. ')' → logprob: -3.9655354022979736
    5. ')])' → logprob: -4.3405351638793945
    6. 'oints' → logprob: -4.3405351638793945
    7. 'points' → logprob: -4.8405351638793945
    8. '])' → logprob: -6.3405351638793945
    9. '_points' → logprob: -6.3405351638793945
    10. '(p' → logprob: -6.4655351638793945

Token 1753: '_points' (ID: 30070)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04867525398731232
    2. '_points' → logprob: -3.798675298690796
    3. ')])' → logprob: -4.673675060272217
    4. ')' → logprob: -5.048675060272217
    5. '))' → logprob: -6.173675060272217
    6. ')]
' → logprob: -6.423675060272217
    7. ')][' → logprob: -6.548675060272217
    8. 'points' → logprob: -6.798675060272217
    9. '   ' → logprob: -7.298675060272217
    10. 'def' → logprob: -7.548675060272217

Token 1754: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006715252064168453
    2. ')' → logprob: -6.006715297698975
    3. ')]
' → logprob: -6.131715297698975
    4. ')])' → logprob: -7.256715297698975
    5. ')][' → logprob: -7.756715297698975
    6. ' )' → logprob: -8.006714820861816
    7. '())' → logprob: -8.756714820861816
    8. '):' → logprob: -9.256714820861816
    9. '   ' → logprob: -10.006714820861816
    10. 'def' → logprob: -10.006714820861816

Token 1755: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0794670581817627
    2. '   ' → logprob: -1.3294670581817627
    3. ':' → logprob: -2.2044670581817627
    4. '(points' → logprob: -2.3294670581817627
    5. '=' → logprob: -2.5794670581817627
    6. 'def' → logprob: -3.0794670581817627
    7. '(p' → logprob: -3.4544670581817627
    8. '(' → logprob: -5.454466819763184
    9. 'points' → logprob: -5.704466819763184
    10. ':
' → logprob: -5.829466819763184

Token 1756: ' return' (ID: 622)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -1.1492410898208618
    2. '[p' → logprob: -1.7742410898208618
    3. '[' → logprob: -1.8992410898208618
    4. 'points' → logprob: -2.3992409706115723
    5. ' polygon' → logprob: -2.7742409706115723
    6. '   ' → logprob: -2.8992409706115723
    7. ':' → logprob: -3.6492409706115723
    8. ' [' → logprob: -3.7742409706115723
    9. 'def' → logprob: -4.399240970611572
    10. 'p' → logprob: -4.399240970611572

Token 1757: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.026509398594498634
    2. ' inside' → logprob: -3.6515092849731445
    3. 'point' → logprob: -9.526509284973145
    4. 'True' → logprob: -10.276509284973145
    5. 'is' → logprob: -10.401509284973145
    6. '(' → logprob: -11.026509284973145
    7. 'any' → logprob: -11.526509284973145
    8. 'len' → logprob: -11.651509284973145
    9. 'all' → logprob: -12.026509284973145
    10. '   ' → logprob: -12.026509284973145

Token 1758: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.00023858259373810142
    2. '(p' → logprob: -8.750238418579102
    3. 'polygon' → logprob: -9.750238418579102
    4. '_point' → logprob: -11.000238418579102
    5. 'Polygon' → logprob: -13.625238418579102
    6. '_poly' → logprob: -13.625238418579102
    7. ' polygon' → logprob: -14.000238418579102
    8. '_pol' → logprob: -14.500238418579102
    9. 'point' → logprob: -15.375238418579102
    10. 'olygon' → logprob: -15.500238418579102

Token 1759: '(p' (ID: 2407)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.03526259958744049
    2. '(p' → logprob: -3.4102625846862793
    3. '(' → logprob: -7.035262584686279
    4. '(point' → logprob: -7.785262584686279
    5. 'polygon' → logprob: -9.535263061523438
    6. 'points' → logprob: -10.035263061523438
    7. '((' → logprob: -10.035263061523438
    8. '([' → logprob: -10.410263061523438
    9. '(poly' → logprob: -10.660263061523438
    10. '(
' → logprob: -11.035263061523438

Token 1760: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.004034706857055426
    2. 'polygon' → logprob: -6.129034519195557
    3. 'oints' → logprob: -6.754034519195557
    4. 'oint' → logprob: -8.629034996032715
    5. 'ol' → logprob: -8.754034996032715
    6. '[' → logprob: -9.004034996032715
    7. 'oly' → logprob: -9.504034996032715
    8. '(p' → logprob: -10.379034996032715
    9. ')' → logprob: -10.629034996032715
    10. '(' → logprob: -10.629034996032715

Token 1761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10990121960639954
    2. ',(' → logprob: -2.984901189804077
    3. ',p' → logprob: -4.359901428222656
    4. ',[' → logprob: -4.484901428222656
    5. '(points' → logprob: -4.734901428222656
    6. ')' → logprob: -4.859901428222656
    7. '(p' → logprob: -4.859901428222656
    8. '(' → logprob: -6.109901428222656
    9. '[' → logprob: -6.984901428222656
    10. ' ,' → logprob: -7.234901428222656

Token 1762: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002266708994284272
    2. ' (' → logprob: -6.252266883850098
    3. 'point' → logprob: -8.002266883850098
    4. ' point' → logprob: -13.252266883850098
    5. '(point' → logprob: -14.002266883850098
    6. '0' → logprob: -15.502266883850098
    7. '   ' → logprob: -16.00226593017578
    8. '((' → logprob: -16.37726593017578
    9. ')' → logprob: -16.50226593017578
    10. 'points' → logprob: -16.75226593017578

Token 1763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.375004768371582
    4. '   ' → logprob: -18.250003814697266
    5. '  ' → logprob: -19.500003814697266
    6. ' (' → logprob: -19.625003814697266
    7. '
' → logprob: -20.375003814697266
    8. '```' → logprob: -20.875003814697266
    9. '00' → logprob: -21.250003814697266
    10. '    ' → logprob: -21.250003814697266

Token 1764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010686976835131645
    2. '0' → logprob: -4.760686874389648
    3. '[' → logprob: -6.260686874389648
    4. '))' → logprob: -9.010686874389648
    5. ' ,' → logprob: -11.135686874389648
    6. ',
' → logprob: -12.260686874389648
    7. ' ' → logprob: -12.385686874389648
    8. ')' → logprob: -12.385686874389648
    9. '.' → logprob: -12.760686874389648
    10. ')))' → logprob: -13.135686874389648

Token 1765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -17.75001335144043
    4. '  ' → logprob: -18.37501335144043
    5. '   ' → logprob: -18.75001335144043
    6. ')' → logprob: -20.00001335144043
    7. ',' → logprob: -20.12501335144043
    8. '```' → logprob: -20.25001335144043
    9. '    ' → logprob: -21.50001335144043
    10. '00' → logprob: -21.87501335144043

Token 1766: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009499297011643648
    2. ')' → logprob: -7.125949859619141
    3. '[' → logprob: -10.12594985961914
    4. ')))' → logprob: -10.12594985961914
    5. ' ))' → logprob: -10.50094985961914
    6. '))
' → logprob: -10.62594985961914
    7. '()))' → logprob: -12.25094985961914
    8. '   ' → logprob: -12.62594985961914
    9. ' ' → logprob: -13.75094985961914
    10. ')[' → logprob: -14.12594985961914

Token 1767: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1414254754781723
    2. '(points' → logprob: -3.516425371170044
    3. '[' → logprob: -3.766425371170044
    4. '(p' → logprob: -4.016425609588623
    5. '   ' → logprob: -4.516425609588623
    6. 'points' → logprob: -4.641425609588623
    7. '(' → logprob: -4.766425609588623
    8. ':' → logprob: -5.016425609588623
    9. 'polygon' → logprob: -5.141425609588623
    10. ')' → logprob: -5.266425609588623

Token 1768: ' is' (ID: 382)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.18252478539943695
    2. 'build' → logprob: -2.5575246810913086
    3. 'point' → logprob: -3.0575246810913086
    4. 'main' → logprob: -3.6825246810913086
    5. 'points' → logprob: -5.182524681091309
    6. 'inside' → logprob: -5.432524681091309
    7. 'is' → logprob: -6.182524681091309
    8. 'dist' → logprob: -6.807524681091309
    9. ' polygon' → logprob: -6.932524681091309
    10. 'line' → logprob: -7.182524681091309

Token 1769: '_origin' (ID: 81230)
  Prédit: '_inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.12119679898023605
    2. '_in' → logprob: -2.621196746826172
    3. '_on' → logprob: -3.371196746826172
    4. '_point' → logprob: -5.371196746826172
    5. '_polygon' → logprob: -6.746196746826172
    6. 'inside' → logprob: -8.246196746826172
    7. '_' → logprob: -8.621196746826172
    8. 'in' → logprob: -9.121196746826172
    9. '_valid' → logprob: -9.246196746826172
    10. '_face' → logprob: -9.746196746826172

Token 1770: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.23472343385219574
    2. '_in' → logprob: -1.609723448753357
    3. '(' → logprob: -5.8597235679626465
    4. '(p' → logprob: -6.6097235679626465
    5. '_' → logprob: -6.7347235679626465
    6. 'Inside' → logprob: -6.8597235679626465
    7. '_on' → logprob: -6.9847235679626465
    8. 'inside' → logprob: -7.8597235679626465
    9. ')' → logprob: -7.9847235679626465
    10. 'In' → logprob: -8.109723091125488

Token 1771: '_face' (ID: 75619)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.448253870010376
    2. '(points' → logprob: -1.448253870010376
    3. '_polygon' → logprob: -2.448253870010376
    4. '(' → logprob: -3.823253870010376
    5. '_points' → logprob: -5.698253631591797
    6. '(point' → logprob: -5.948253631591797
    7. '(
' → logprob: -6.198253631591797
    8. 'polygon' → logprob: -6.823253631591797
    9. '(poly' → logprob: -6.823253631591797
    10. '_poly' → logprob: -6.823253631591797

Token 1772: '(face' (ID: 127535)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7720568776130676
    2. '(face' → logprob: -0.7720568776130676
    3. '(' → logprob: -3.147056818008423
    4. '(points' → logprob: -3.647056818008423
    5. '(f' → logprob: -5.397057056427002
    6. '(poly' → logprob: -6.522057056427002
    7. '(point' → logprob: -7.647057056427002
    8. '(pol' → logprob: -9.022056579589844
    9. '(
' → logprob: -9.147056579589844
    10. '_face' → logprob: -10.522056579589844

Token 1773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9875289797782898
    2. '):' → logprob: -1.1125290393829346
    3. '):
' → logprob: -1.4875290393829346
    4. '(points' → logprob: -3.1125290393829346
    5. '(p' → logprob: -4.1125288009643555
    6. '_points' → logprob: -5.4875288009643555
    7. ',p' → logprob: -5.7375288009643555
    8. '(face' → logprob: -5.8625288009643555
    9. ')' → logprob: -7.6125288009643555
    10. '_faces' → logprob: -7.9875288009643555

Token 1774: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.06201821193099022
    2. ' points' → logprob: -2.8120181560516357
    3. 'graph' → logprob: -11.437018394470215
    4. ')' → logprob: -11.687018394470215
    5. '
' → logprob: -12.062018394470215
    6. '(points' → logprob: -12.062018394470215
    7. '):
' → logprob: -12.187018394470215
    8. '   ' → logprob: -12.312018394470215
    9. 'point' → logprob: -12.812018394470215
    10. '	points' → logprob: -13.062018394470215

Token 1775: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14283131062984467
    2. '):' → logprob: -2.017831325531006
    3. ',' → logprob: -9.517830848693848
    4. '):
' → logprob: -10.267830848693848
    5. '   ' → logprob: -11.017830848693848
    6. '):

' → logprob: -11.017830848693848
    7. ')' → logprob: -11.642830848693848
    8. '[' → logprob: -13.267830848693848
    9. ' ):
' → logprob: -14.142830848693848
    10. ' ):' → logprob: -14.767830848693848

Token 1776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054776545614004135
    2. '(' → logprob: -3.429776430130005
    3. '(p' → logprob: -4.929776668548584
    4. ' (' → logprob: -5.554776668548584
    5. '(
' → logprob: -5.679776668548584
    6. '(points' → logprob: -6.304776668548584
    7. ':' → logprob: -6.554776668548584
    8. '```' → logprob: -7.054776668548584
    9. ':
' → logprob: -7.429776668548584
    10. '(True' → logprob: -8.429776191711426

Token 1777: ' poly' (ID: 14600)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011962656863033772
    2. 'def' → logprob: -5.886962890625
    3. ' polygon' → logprob: -6.011962890625
    4. 'polygon' → logprob: -6.136962890625
    5. 'return' → logprob: -7.261962890625
    6. ' for' → logprob: -7.636962890625
    7. 'p' → logprob: -7.761962890625
    8. 'point' → logprob: -8.011962890625
    9. '```' → logprob: -8.011962890625
    10. '``' → logprob: -8.261962890625

Token 1778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7141125202178955
    2. ' =' → logprob: -1.0891125202178955
    3. 'gon' → logprob: -1.9641125202178955
    4. '_points' → logprob: -4.089112281799316
    5. 'g' → logprob: -4.589112281799316
    6. '=[' → logprob: -6.089112281799316
    7. 'points' → logprob: -6.464112281799316
    8. '=[]
' → logprob: -6.964112281799316
    9. '=[]' → logprob: -6.964112281799316
    10. '=[
' → logprob: -7.839112281799316

Token 1779: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009534246288239956
    2. '[list' → logprob: -5.2595343589782715
    3. '[p' → logprob: -5.7595343589782715
    4. ' [' → logprob: -7.0095343589782715
    5. '[line' → logprob: -9.259533882141113
    6. '[len' → logprob: -10.634533882141113
    7. '   ' → logprob: -10.884533882141113
    8. '[class' → logprob: -11.009533882141113
    9. '[List' → logprob: -11.884533882141113
    10. '[type' → logprob: -12.134533882141113

Token 1780: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0009136092266999185
    2. ' points' → logprob: -7.000913619995117
    3. '(points' → logprob: -13.125913619995117
    4. 'faces' → logprob: -16.375913619995117
    5. '[' → logprob: -17.250913619995117
    6. '	points' → logprob: -17.375913619995117
    7. 'point' → logprob: -17.750913619995117
    8. '(' → logprob: -18.250913619995117
    9. '   ' → logprob: -19.125913619995117
    10. '.points' → logprob: -19.625913619995117

Token 1781: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3292907178401947
    2. '[i' → logprob: -1.329290747642517
    3. '[v' → logprob: -4.704290866851807
    4. '[idx' → logprob: -5.204290866851807
    5. '[f' → logprob: -7.079290866851807
    6. '[index' → logprob: -8.079290390014648
    7. '[u' → logprob: -9.329290390014648
    8. 'face' → logprob: -10.204290390014648
    9. 'i' → logprob: -10.704290390014648
    10. 'f' → logprob: -11.579290390014648

Token 1782: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015396335162222385
    2. 'for' → logprob: -4.2653961181640625
    3. '[i' → logprob: -7.5153961181640625
    4. ' for' → logprob: -7.8903961181640625
    5. '[' → logprob: -8.765396118164062
    6. '][' → logprob: -10.015396118164062
    7. ' ]' → logprob: -10.390396118164062
    8. ']
' → logprob: -10.515396118164062
    9. '   ' → logprob: -10.890396118164062
    10. '(i' → logprob: -11.140396118164062

Token 1783: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761190056800842
    2. ' for' → logprob: -0.8261190056800842
    3. '   ' → logprob: -9.701119422912598
    4. '
' → logprob: -10.576119422912598
    5. '           ' → logprob: -10.826119422912598
    6. '       ' → logprob: -11.076119422912598
    7. ']' → logprob: -11.326119422912598
    8. '         ' → logprob: -11.826119422912598
    9. '          ' → logprob: -11.951119422912598
    10. ' ' → logprob: -12.201119422912598

Token 1784: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008048642775975168
    2. ' i' → logprob: -7.125804901123047
    3. 'face' → logprob: -16.000804901123047
    4. ' in' → logprob: -16.500804901123047
    5. '(i' → logprob: -16.750804901123047
    6. ' ' → logprob: -16.750804901123047
    7. '	i' → logprob: -16.750804901123047
    8. 'in' → logprob: -17.250804901123047
    9. '<|end|>' → logprob: -17.250804901123047
    10. '   ' → logprob: -17.375804901123047

Token 1785: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28221607208251953
    2. 'i' → logprob: -1.7822160720825195
    3. 'in' → logprob: -2.7822160720825195
    4. ' i' → logprob: -4.1572160720825195
    5. ' ' → logprob: -9.90721607208252
    6. 'face' → logprob: -11.53221607208252
    7. '  ' → logprob: -12.40721607208252
    8. ' face' → logprob: -12.78221607208252
    9. '   ' → logprob: -14.03221607208252
    10. ']' → logprob: -14.15721607208252

Token 1786: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0003909927327185869
    2. ' face' → logprob: -7.875391006469727
    3. 'range' → logprob: -11.500391006469727
    4. '(face' → logprob: -14.375391006469727
    5. ' range' → logprob: -15.625391006469727
    6. '
' → logprob: -17.625391006469727
    7. '[' → logprob: -17.750391006469727
    8. '   ' → logprob: -18.250391006469727
    9. 'faces' → logprob: -19.500391006469727
    10. ' ' → logprob: -19.875391006469727

Token 1787: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008470019325613976
    2. '   ' → logprob: -5.508470058441162
    3. ']
' → logprob: -5.633470058441162
    4. ' ]' → logprob: -7.133470058441162
    5. ' ]
' → logprob: -12.383469581604004
    6. '       ' → logprob: -13.133469581604004
    7. ' ' → logprob: -14.633469581604004
    8. ')' → logprob: -14.758469581604004
    9. '  ' → logprob: -15.758469581604004
    10. ']

' → logprob: -16.25847053527832

Token 1788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505523681640625
    2. '
' → logprob: -0.9255523681640625
    3. ':
' → logprob: -3.8005523681640625
    4. ':' → logprob: -5.9255523681640625
    5. '```' → logprob: -7.4255523681640625
    6. ' ' → logprob: -8.550552368164062
    7. ')' → logprob: -8.800552368164062
    8. ',
' → logprob: -9.175552368164062
    9. ':return' → logprob: -9.300552368164062
    10. '    
' → logprob: -9.425552368164062

Token 1789: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021665336564183235
    2. '   ' → logprob: -3.896665334701538
    3. ' return' → logprob: -6.896665573120117
    4. '
' → logprob: -9.646665573120117
    5. 'center' → logprob: -10.646665573120117
    6. 'import' → logprob: -11.771665573120117
    7. 'def' → logprob: -12.021665573120117
    8. '#' → logprob: -13.271665573120117
    9. '```' → logprob: -13.396665573120117
    10. 'x' → logprob: -13.396665573120117

Token 1790: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.008619419299066067
    2. ' inside' → logprob: -4.75861930847168
    3. '   ' → logprob: -13.00861930847168
    4. 'point' → logprob: -14.25861930847168
    5. ' ' → logprob: -14.50861930847168
    6. '(' → logprob: -14.88361930847168
    7. 'Inside' → logprob: -15.00861930847168
    8. 'polygon' → logprob: -16.13361930847168
    9. '```' → logprob: -16.13361930847168
    10. '_inside' → logprob: -16.50861930847168

Token 1791: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.00015217094914987683
    2. '(p' → logprob: -9.125152587890625
    3. 'polygon' → logprob: -10.625152587890625
    4. '_poly' → logprob: -11.125152587890625
    5. 'Polygon' → logprob: -12.750152587890625
    6. '(poly' → logprob: -14.250152587890625
    7. 'poly' → logprob: -15.500152587890625
    8. ' polygon' → logprob: -16.000152587890625
    9. '_pol' → logprob: -16.625152587890625
    10. 'olygon' → logprob: -17.250152587890625

Token 1792: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -9.305326966568828e-05
    2. '(pol' → logprob: -9.875093460083008
    3. '(' → logprob: -10.375093460083008
    4. '(points' → logprob: -12.125093460083008
    5. 'poly' → logprob: -12.875093460083008
    6. ' (' → logprob: -14.500093460083008
    7. '(py' → logprob: -14.750093460083008
    8. '(p' → logprob: -15.000093460083008
    9. '/poly' → logprob: -15.000093460083008
    10. '(
' → logprob: -15.250093460083008

Token 1793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038531508296728134
    2. ',(' → logprob: -3.288531541824341
    3. '(' → logprob: -8.413531303405762
    4. '   ' → logprob: -9.163531303405762
    5. ')' → logprob: -9.663531303405762
    6. ' ,' → logprob: -9.913531303405762
    7. '((' → logprob: -10.538531303405762
    8. ',p' → logprob: -11.538531303405762
    9. ',[' → logprob: -12.538531303405762
    10. ' (' → logprob: -13.038531303405762

Token 1794: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004078878089785576
    2. ' (' → logprob: -5.5040788650512695
    3. '0' → logprob: -15.25407886505127
    4. ' ' → logprob: -16.504079818725586
    5. '   ' → logprob: -16.504079818725586
    6. '[' → logprob: -17.379079818725586
    7. '
' → logprob: -17.379079818725586
    8. '[(' → logprob: -17.879079818725586
    9. ')' → logprob: -18.754079818725586
    10. 'point' → logprob: -19.379079818725586

Token 1795: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '  ' → logprob: -18.375001907348633
    6. '
' → logprob: -19.000001907348633
    7. ')' → logprob: -19.125001907348633
    8. '```' → logprob: -19.750001907348633
    9. '``' → logprob: -20.000001907348633
    10. '00' → logprob: -20.125001907348633

Token 1796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -12.000006675720215
    3. ' ,' → logprob: -14.250006675720215
    4. ',
' → logprob: -15.625006675720215
    5. ' ' → logprob: -18.50000762939453
    6. '.' → logprob: -19.87500762939453
    7. '
' → logprob: -20.62500762939453
    8. '00' → logprob: -20.75000762939453
    9. '000' → logprob: -20.75000762939453
    10. '   ' → logprob: -20.87500762939453

Token 1797: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -19.125009536743164
    4. '   ' → logprob: -20.000009536743164
    5. '  ' → logprob: -20.125009536743164
    6. ')' → logprob: -22.000009536743164
    7. '```' → logprob: -22.000009536743164
    8. '00' → logprob: -22.375009536743164
    9. ' ' → logprob: -22.375009536743164
    10. '{' → logprob: -23.625009536743164

Token 1798: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018156379461288452
    2. '))' → logprob: -4.0181565284729
    3. ')))' → logprob: -12.518156051635742
    4. ' )' → logprob: -13.893156051635742
    5. ')
' → logprob: -13.893156051635742
    6. '   ' → logprob: -15.268156051635742
    7. '])' → logprob: -15.643156051635742
    8. ')]' → logprob: -16.268156051635742
    9. ')>' → logprob: -16.268156051635742
    10. ')`' → logprob: -16.393156051635742

Token 1799: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005072941072285175
    2. '#' → logprob: -6.380073070526123
    3. '<|end|>' → logprob: -6.630073070526123
    4. 'for' → logprob: -6.755073070526123
    5. ')' → logprob: -8.130072593688965
    6. '```' → logprob: -8.755072593688965
    7. 'faces' → logprob: -9.255072593688965
    8. 'face' → logprob: -9.755072593688965
    9. '
' → logprob: -9.755072593688965
    10. 'return' → logprob: -9.880072593688965

Token 1800: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.132265105843544
    2. ' main' → logprob: -2.132265090942383
    3. 'count' → logprob: -6.507265090942383
    4. 'solve' → logprob: -6.882265090942383
    5. 'is' → logprob: -7.507265090942383
    6. 'minimal' → logprob: -8.132265090942383
    7. 'area' → logprob: -8.507265090942383
    8. ' solve' → logprob: -8.632265090942383
    9. 'calculate' → logprob: -8.757265090942383
    10. 'compute' → logprob: -8.882265090942383

Token 1801: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004629957489669323
    2. '():
' → logprob: -5.379630088806152
    3. '()' → logprob: -12.129630088806152
    4. ' ():' → logprob: -12.629630088806152
    5. '(' → logprob: -15.004630088806152
    6. ':' → logprob: -15.254630088806152
    7. '():
' → logprob: -15.504630088806152
    8. 'def' → logprob: -15.754630088806152
    9. '():

' → logprob: -16.004629135131836
    10. '();' → logprob: -17.379629135131836

Token 1802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015228819102048874
    2. ' lines' → logprob: -4.890228748321533
    3. 'import' → logprob: -5.515228748321533
    4. '	lines' → logprob: -6.515228748321533
    5. ' import' → logprob: -6.765228748321533
    6. '	import' → logprob: -8.515229225158691
    7. '```' → logprob: -8.515229225158691
    8. 'lines' → logprob: -9.390229225158691
    9. ' n' → logprob: -9.390229225158691
    10. ' input' → logprob: -9.515229225158691

Token 1803: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7202835083007812
    2. ' n' → logprob: -0.7202835083007812
    3. '   ' → logprob: -3.7202835083007812
    4. 'import' → logprob: -6.970283508300781
    5. 't' → logprob: -7.345283508300781
    6. ' import' → logprob: -7.845283508300781
    7. ' t' → logprob: -8.345283508300781
    8. ' input' → logprob: -9.095283508300781
    9. ' lines' → logprob: -9.345283508300781
    10. 'input' (adapté à ' input') → logprob: -10.470283508300781

Token 1804: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34507301449775696
    2. '_line' → logprob: -1.3450729846954346
    3. '_lines' → logprob: -3.7200729846954346
    4. '_data' → logprob: -5.845073223114014
    5. '_' → logprob: -6.220073223114014
    6. 's' → logprob: -7.345073223114014
    7. 'line' → logprob: -7.720073223114014
    8. '=' → logprob: -7.720073223114014
    9. '().' → logprob: -8.720072746276855
    10. '()
' → logprob: -9.345072746276855

Token 1805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002416203496977687
    2. ' =' → logprob: -6.377416133880615
    3. '()' → logprob: -7.377416133880615
    4. '=[]' → logprob: -10.627416610717773
    5. '   ' → logprob: -10.752416610717773
    6. '_lines' → logprob: -11.377416610717773
    7. '=sys' → logprob: -12.127416610717773
    8. '_' → logprob: -12.377416610717773
    9. '=[]
' → logprob: -12.627416610717773
    10. 's' → logprob: -13.002416610717773

Token 1806: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.024307141080498695
    2. ' sys' → logprob: -3.7743072509765625
    3. '[' → logprob: -7.1493072509765625
    4. '[]' → logprob: -9.274307250976562
    5. ' [' → logprob: -9.399307250976562
    6. '[]
' → logprob: -9.774307250976562
    7. '(sys' → logprob: -11.024307250976562
    8. '[s' → logprob: -11.399307250976562
    9. '=sys' → logprob: -12.024307250976562
    10. '```' → logprob: -12.524307250976562

Token 1807: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.015927962958812714
    2. '.readline' → logprob: -4.765927791595459
    3. '.' → logprob: -5.390927791595459
    4. '().' → logprob: -6.015927791595459
    5. '.argv' → logprob: -9.390928268432617
    6. '.stdout' → logprob: -9.390928268432617
    7. 'stdin' → logprob: -9.515928268432617
    8. '(stdin' → logprob: -11.140928268432617
    9. '.readlines' → logprob: -11.515928268432617
    10. '.std' → logprob: -11.890928268432617

Token 1808: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0037659937515854836
    2. '.readlines' → logprob: -6.503766059875488
    3. 'read' → logprob: -6.628766059875488
    4. ' =' → logprob: -7.628766059875488
    5. '_lines' → logprob: -8.503766059875488
    6. '=' → logprob: -9.628766059875488
    7. '.read' → logprob: -10.128766059875488
    8. '   ' → logprob: -10.253766059875488
    9. '.' → logprob: -10.253766059875488
    10. '().' → logprob: -11.253766059875488

Token 1809: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004098823759704828
    2. '()' → logprob: -5.504098892211914
    3. 'lines' → logprob: -11.379098892211914
    4. '()
' → logprob: -12.504098892211914
    5. '_lines' → logprob: -13.504098892211914
    6. '()\' → logprob: -14.004098892211914
    7. '.split' → logprob: -14.129098892211914
    8. '(' → logprob: -14.879098892211914
    9. ' lines' → logprob: -15.004098892211914
    10. '()`' → logprob: -15.129098892211914

Token 1810: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20141734182834625
    2. 'split' → logprob: -1.701417326927185
    3. 'rstrip' → logprob: -13.201416969299316
    4. 'decode' → logprob: -13.326416969299316
    5. 'read' → logprob: -15.201416969299316
    6. '(split' → logprob: -15.576416969299316
    7. ' split' → logprob: -16.826417922973633
    8. ' strip' → logprob: -17.451417922973633
    9. '```' → logprob: -18.076417922973633
    10. '(strip' → logprob: -18.201417922973633

Token 1811: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.585008978843689
    2. '()' → logprob: -0.835008978843689
    3. '('\' → logprob: -4.8350090980529785
    4. '()\' → logprob: -7.2100090980529785
    5. '()[' → logprob: -8.33500862121582
    6. '('' → logprob: -10.58500862121582
    7. '(' → logprob: -11.21000862121582
    8. '("\' → logprob: -11.58500862121582
    9. '(['' → logprob: -11.83500862121582
    10. '()]' → logprob: -11.83500862121582

Token 1812: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015717383939772844
    2. 'for' → logprob: -9.250157356262207
    3. '    
' → logprob: -10.625157356262207
    4. '
' → logprob: -11.500157356262207
    5. '(n' → logprob: -12.250157356262207
    6. 'n' → logprob: -12.375157356262207
    7. '```' → logprob: -12.375157356262207
    8. '()' → logprob: -12.625157356262207
    9. '(' → logprob: -12.875157356262207
    10. ' for' → logprob: -13.000157356262207

Token 1813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5831505060195923
    2. 'n' → logprob: -0.8331505060195923
    3. ' n' → logprob: -5.208150386810303
    4. 'num' → logprob: -6.958150386810303
    5. '```' → logprob: -7.958150386810303
    6. 'for' → logprob: -8.583150863647461
    7. 'i' → logprob: -9.333150863647461
    8. ' for' → logprob: -10.083150863647461
    9. '	n' → logprob: -10.458150863647461
    10. 'N' → logprob: -10.583150863647461

Token 1814: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04786830395460129
    2. '   ' → logprob: -3.172868251800537
    3. 'num' → logprob: -6.297868251800537
    4. 'N' → logprob: -6.672868251800537
    5. ' n' → logprob: -7.047868251800537
    6. 't' → logprob: -7.172868251800537
    7. 'idx' (adapté à ' idx') → logprob: -10.297868728637695
    8. 'T' → logprob: -10.797868728637695
    9. 'q' → logprob: -11.297868728637695
    10. '```' → logprob: -11.422868728637695

Token 1815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20167069137096405
    2. ' =' → logprob: -1.7016706466674805
    3. ' +=' → logprob: -8.82667064666748
    4. '+=' → logprob: -9.82667064666748
    5. '   ' → logprob: -10.07667064666748
    6. '_' → logprob: -12.70167064666748
    7. ' ' → logprob: -13.07667064666748
    8. '```' → logprob: -13.20167064666748
    9. '  ' → logprob: -13.57667064666748
    10. '0' → logprob: -14.07667064666748

Token 1816: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006823712959885597
    2. '1' → logprob: -5.006823539733887
    3. ' ' → logprob: -9.131823539733887
    4. '   ' → logprob: -16.256824493408203
    5. ' 
' → logprob: -17.756824493408203
    6. '2' → logprob: -19.006824493408203
    7. '
' → logprob: -19.881824493408203
    8. '    ' → logprob: -19.881824493408203
    9. '```' → logprob: -20.256824493408203
    10. '=' → logprob: -20.506824493408203

Token 1817: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006721655838191509
    2. '1' → logprob: -5.006721496582031
    3. ' ' → logprob: -12.006721496582031
    4. '   ' → logprob: -16.38172149658203
    5. 'int' → logprob: -17.38172149658203
    6. '
' → logprob: -18.75672149658203
    7. '```' → logprob: -19.00672149658203
    8. '=' → logprob: -19.25672149658203
    9. '2' → logprob: -19.75672149658203
    10. '  ' → logprob: -19.88172149658203

Token 1818: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5854638814926147
    2. 'n' → logprob: -0.8354638814926147
    3. 'num' → logprob: -5.085464000701904
    4. 'N' → logprob: -6.710464000701904
    5. 't' → logprob: -6.710464000701904
    6. ' n' → logprob: -7.710464000701904
    7. 'T' → logprob: -8.960463523864746
    8. '
' → logprob: -9.210463523864746
    9. 'while' → logprob: -10.085463523864746
    10. '```' → logprob: -10.210463523864746

Token 1819: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20850171148777008
    2. '   ' → logprob: -1.9585016965866089
    3. ' n' → logprob: -4.208501815795898
    4. 't' → logprob: -4.208501815795898
    5. 'num' → logprob: -4.333501815795898
    6. 'N' → logprob: -6.708501815795898
    7. ' t' → logprob: -6.958501815795898
    8. 'T' → logprob: -6.958501815795898
    9. 'q' → logprob: -8.333501815795898
    10. '```' → logprob: -8.458501815795898

Token 1820: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2577444314956665
    2. 'T' → logprob: -1.5077444314956665
    3. 'while' (adapté à ' while') → logprob: -5.382744312286377
    4. '   ' → logprob: -7.132744312286377
    5. 'n' → logprob: -8.757744789123535
    6. ' t' → logprob: -8.882744789123535
    7. '
' → logprob: -10.382744789123535
    8. ' T' → logprob: -10.632744789123535
    9. 'num' → logprob: -11.007744789123535
    10. 'q' → logprob: -11.257744789123535

Token 1821: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12697084248065948
    2. ' idx' → logprob: -2.1269707679748535
    3. '   ' → logprob: -11.001971244812012
    4. ' True' → logprob: -11.126971244812012
    5. 'True' → logprob: -12.876971244812012
    6. ' ' → logprob: -12.876971244812012
    7. '	idx' → logprob: -13.001971244812012
    8. '(idx' → logprob: -13.376971244812012
    9. '
' → logprob: -14.001971244812012
    10. '  ' → logprob: -14.751971244812012

Token 1822: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5399653911590576
    2. '       ' → logprob: -1.5399653911590576
    3. ':
' → logprob: -1.7899653911590576
    4. ':' → logprob: -4.414965629577637
    5. ' if' → logprob: -4.914965629577637
    6. ' and' → logprob: -5.789965629577637
    7. ',' → logprob: -6.039965629577637
    8. ' =' → logprob: -6.039965629577637
    9. '=' → logprob: -6.414965629577637
    10. ' ' → logprob: -7.289965629577637

Token 1823: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17882929742336273
    2. ' if' → logprob: -1.928829312324524
    3. 'if' → logprob: -4.053829193115234
    4. ' line' → logprob: -7.678829193115234
    5. ' n' → logprob: -8.678829193115234
    6. ' ' → logprob: -8.803829193115234
    7. '```' → logprob: -8.803829193115234
    8. 'n' → logprob: -9.678829193115234
    9. 'line' → logprob: -10.053829193115234
    10. '	if' → logprob: -11.928829193115234

Token 1824: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48812931776046753
    2. 'if' (adapté à ' if') → logprob: -1.4881293773651123
    3. 'n' → logprob: -2.6131293773651123
    4. '   ' → logprob: -2.7381293773651123
    5. ' n' → logprob: -4.238129138946533
    6. ' line' → logprob: -5.238129138946533
    7. 'l' → logprob: -6.488129138946533
    8. 'line' → logprob: -7.113129138946533
    9. ' l' → logprob: -9.238129615783691
    10. ' try' → logprob: -9.613129615783691

Token 1825: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07944145798683167
    2. ' idx' → logprob: -2.579441547393799
    3. ' not' → logprob: -7.704441547393799
    4. 'not' → logprob: -9.45444107055664
    5. ' ' → logprob: -11.57944107055664
    6. '   ' → logprob: -11.70444107055664
    7. '	idx' → logprob: -13.07944107055664
    8. 'len' → logprob: -14.20444107055664
    9. '(idx' → logprob: -14.32944107055664
    10. '  ' → logprob: -14.45444107055664

Token 1826: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.314993679523468
    2. '>=' → logprob: -1.3149936199188232
    3. ' ==' → logprob: -7.064993858337402
    4. '==' → logprob: -7.564993858337402
    5. ' <' → logprob: -8.814993858337402
    6. '<' → logprob: -9.189993858337402
    7. ']>=' → logprob: -10.564993858337402
    8. ')>=' → logprob: -10.814993858337402
    9. '<len' → logprob: -11.064993858337402
    10. ' ' → logprob: -11.439993858337402

Token 1827: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0206720617134124e-05
    2. ' len' → logprob: -11.50001049041748
    3. '(len' → logprob: -18.000009536743164
    4. '=len' → logprob: -18.375009536743164
    5. '	len' → logprob: -18.500009536743164
    6. '<len' → logprob: -18.500009536743164
    7. ',len' → logprob: -18.625009536743164
    8. '   ' → logprob: -19.000009536743164
    9. '
' → logprob: -19.500009536743164
    10. 'length' → logprob: -19.625009536743164

Token 1828: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5767903327941895
    2. '(input' → logprob: -0.8267903327941895
    3. ' input' → logprob: -7.0767903327941895
    4. ' (' → logprob: -12.701789855957031
    5. '(' → logprob: -13.451789855957031
    6. '=input' → logprob: -14.576789855957031
    7. ',input' → logprob: -14.701789855957031
    8. '
' → logprob: -15.326789855957031
    9. '(
' → logprob: -16.07678985595703
    10. '<input' → logprob: -16.20178985595703

Token 1829: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0027040657587349415
    2. '(input' → logprob: -6.75270414352417
    3. ')' → logprob: -7.12770414352417
    4. '):' → logprob: -8.627703666687012
    5. '):
' → logprob: -8.752703666687012
    6. 'input' → logprob: -9.377703666687012
    7. '_' → logprob: -9.502703666687012
    8. 's' → logprob: -9.752703666687012
    9. '```' → logprob: -10.252703666687012
    10. 'lines' → logprob: -10.752703666687012

Token 1830: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7795112133026123
    2. ':
' → logprob: -1.1545112133026123
    3. ' or' → logprob: -1.6545112133026123
    4. ' and' → logprob: -4.154511451721191
    5. ')' → logprob: -5.404511451721191
    6. '       ' → logprob: -5.529511451721191
    7. '   ' → logprob: -5.654511451721191
    8. '):
' → logprob: -5.904511451721191
    9. '):' → logprob: -6.279511451721191
    10. 'and' → logprob: -7.154511451721191

Token 1831: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.594086229801178
    2. '           ' → logprob: -1.2190861701965332
    3. '   ' → logprob: -1.9690861701965332
    4. ':
' → logprob: -4.969086170196533
    5. ' break' → logprob: -5.969086170196533
    6. 'break' → logprob: -7.219086170196533
    7. ' ' → logprob: -7.594086170196533
    8. ':' → logprob: -7.594086170196533
    9. '\n' → logprob: -8.219086647033691
    10. '\t' → logprob: -8.469086647033691

Token 1832: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.23902291059494019
    2. '       ' → logprob: -1.739022970199585
    3. ' break' → logprob: -3.489022970199585
    4. '           ' → logprob: -5.489022731781006
    5. '   ' → logprob: -7.114022731781006
    6. 'return' → logprob: -7.364022731781006
    7. '	break' → logprob: -7.364022731781006
    8. '
' → logprob: -9.489023208618164
    9. ' ' → logprob: -10.739023208618164
    10. '        
' → logprob: -11.239023208618164

Token 1833: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023295091465115547
    2. '
' → logprob: -4.398294925689697
    3. '   ' → logprob: -5.273294925689697
    4. '        
' → logprob: -5.523294925689697
    5. '    
' → logprob: -7.023294925689697
    6. '  
' → logprob: -8.023295402526855
    7. '```' → logprob: -9.023295402526855
    8. '	' → logprob: -10.273295402526855
    9. '           ' → logprob: -10.398295402526855
    10. '\n' → logprob: -10.648295402526855

Token 1834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18510591983795166
    2. '   ' → logprob: -1.8101059198379517
    3. ' line' → logprob: -6.560105800628662
    4. '        
' → logprob: -6.685105800628662
    5. '    
' → logprob: -6.935105800628662
    6. '```' → logprob: -7.060105800628662
    7. 'line' → logprob: -7.685105800628662
    8. '
' → logprob: -9.68510627746582
    9. 'n' → logprob: -9.68510627746582
    10. '	' → logprob: -10.06010627746582

Token 1835: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7299646139144897
    2. ' line' → logprob: -1.4799646139144897
    3. 'n' (adapté à ' n') → logprob: -1.6049646139144897
    4. ' n' → logprob: -2.8549647331237793
    5. '   ' → logprob: -3.4799647331237793
    6. 'num' → logprob: -8.229964256286621
    7. 'l' → logprob: -8.479964256286621
    8. 's' → logprob: -8.729964256286621
    9. 'if' → logprob: -9.354964256286621
    10. 'N' → logprob: -9.479964256286621

Token 1836: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3155243396759033
    2. '=' → logprob: -1.3155243396759033
    3. ' ' → logprob: -6.565524101257324
    4. '   ' → logprob: -7.940524101257324
    5. ')' → logprob: -8.815524101257324
    6. '       ' → logprob: -9.815524101257324
    7. '  ' → logprob: -10.315524101257324
    8. '=int' → logprob: -10.565524101257324
    9. ' =
' → logprob: -10.690524101257324
    10. '_' → logprob: -10.940524101257324

Token 1837: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519298195838928
    2. ' int' → logprob: -1.501929759979248
    3. '=int' → logprob: -15.251930236816406
    4. 'input' → logprob: -15.626930236816406
    5. '(int' → logprob: -16.376930236816406
    6. ' n' → logprob: -16.751930236816406
    7. ' input' → logprob: -16.751930236816406
    8. ' ' → logprob: -16.876930236816406
    9. '	int' → logprob: -17.376930236816406
    10. '   ' → logprob: -17.376930236816406

Token 1838: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.05136077105998993
    2. '()' → logprob: -3.301360845565796
    3. '()
' → logprob: -5.176360607147217
    4. 'lines' → logprob: -6.176360607147217
    5. '[idx' → logprob: -6.301360607147217
    6. '_tokens' → logprob: -7.051360607147217
    7. 'Lines' → logprob: -7.426360607147217
    8. '_line' → logprob: -7.426360607147217
    9. '```' → logprob: -7.926360607147217
    10. '()[' → logprob: -8.051361083984375

Token 1839: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3782830137643032e-05
    2. '```' → logprob: -11.87501335144043
    3. 'idx' → logprob: -12.62501335144043
    4. '[' → logprob: -13.87501335144043
    5. '
' → logprob: -14.25001335144043
    6. '   ' → logprob: -14.37501335144043
    7. '[
' → logprob: -14.87501335144043
    8. '\[' → logprob: -15.75001335144043
    9. '[int' → logprob: -15.87501335144043
    10. ' [' → logprob: -16.37501335144043

Token 1840: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.23286384344100952
    2. ']' → logprob: -1.9828639030456543
    3. ']
' → logprob: -2.7328639030456543
    4. ']+' → logprob: -5.607863903045654
    5. '[idx' → logprob: -6.982863903045654
    6. '][' → logprob: -9.107863426208496
    7. ':].' → logprob: -9.607863426208496
    8. ']==' → logprob: -10.357863426208496
    9. ' ].' → logprob: -10.482863426208496
    10. '       ' → logprob: -10.607863426208496

Token 1841: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'split' → logprob: -15.625
    3. 'rstrip' → logprob: -18.25
    4. 'str' → logprob: -18.75
    5. ' strip' → logprob: -18.875
    6. '(strip' → logprob: -20.5
    7. '_strip' → logprob: -20.625
    8. '.strip' → logprob: -21.125
    9. 'trim' → logprob: -21.5
    10. '```' → logprob: -21.5

Token 1842: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18747441470623016
    2. '()
' → logprob: -1.8124743700027466
    3. '().' → logprob: -5.937474250793457
    4. '();' → logprob: -6.062474250793457
    5. '()==' → logprob: -7.062474250793457
    6. '()\' → logprob: -7.562474250793457
    7. '.split' → logprob: -7.687474250793457
    8. '():
' → logprob: -8.937474250793457
    9. '=' → logprob: -9.687474250793457
    10. '().
' → logprob: -9.812474250793457

Token 1843: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.831377387046814
    2. '
' → logprob: -1.706377387046814
    3. '       ' → logprob: -2.0813775062561035
    4. '```' → logprob: -2.8313775062561035
    5. '=' → logprob: -3.0813775062561035
    6. ' =' → logprob: -3.4563775062561035
    7. '\n' → logprob: -3.5813775062561035
    8. ' if' → logprob: -4.0813775062561035
    9. '        
' → logprob: -4.2063775062561035
    10. '=
' → logprob: -4.5813775062561035

Token 1844: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.044377535581588745
    2. ' if' → logprob: -3.669377565383911
    3. 'idx' (adapté à ' idx') → logprob: -4.169377326965332
    4. '
' → logprob: -6.169377326965332
    5. '\n' → logprob: -9.294377326965332
    6. '       ' → logprob: -9.919377326965332
    7. '```' → logprob: -9.919377326965332
    8. ' idx' → logprob: -10.044377326965332
    9. '[idx' → logprob: -10.294377326965332
    10. '        
' → logprob: -10.294377326965332

Token 1845: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06009671837091446
    2. ' +=' → logprob: -2.9350967407226562
    3. '=' → logprob: -5.310096740722656
    4. '+' → logprob: -8.685096740722656
    5. '==' → logprob: -10.435096740722656
    6. ' =' → logprob: -10.560096740722656
    7. '++' → logprob: -11.435096740722656
    8. '```' → logprob: -11.810096740722656
    9. 'tokens' → logprob: -12.060096740722656
    10. ']+=' → logprob: -13.185096740722656

Token 1846: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -16.375001907348633
    4. '0' → logprob: -16.625001907348633
    5. 'n' → logprob: -17.000001907348633
    6. ' n' → logprob: -19.250001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'int' → logprob: -20.000001907348633
    9. '   ' → logprob: -21.500001907348633
    10. ' 
' → logprob: -21.875001907348633

Token 1847: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2645488679409027
    2. 'if' → logprob: -1.889548897743225
    3. ' if' → logprob: -2.5145487785339355
    4. '
' → logprob: -8.639549255371094
    5. '        
' → logprob: -9.264549255371094
    6. 'n' → logprob: -9.639549255371094
    7. '   ' → logprob: -10.264549255371094
    8. '           ' → logprob: -11.639549255371094
    9. '```' → logprob: -12.389549255371094
    10. '	if' → logprob: -12.514549255371094

Token 1848: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0723859891295433
    2. '       ' → logprob: -2.8223860263824463
    3. ' if' → logprob: -4.572385787963867
    4. 'n' → logprob: -10.822385787963867
    5. 'try' → logprob: -12.322385787963867
    6. '   ' → logprob: -12.697385787963867
    7. '	if' → logprob: -13.322385787963867
    8. '```' → logprob: -14.447385787963867
    9. 'If' → logprob: -15.197385787963867
    10. '
' → logprob: -15.322385787963867

Token 1849: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.8889261304575484e-06
    2. ' if' → logprob: -12.500003814697266
    3. '       ' → logprob: -16.000003814697266
    4. 'try' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '
' → logprob: -19.375003814697266
    7. 'n' → logprob: -19.750003814697266
    8. '```' → logprob: -19.750003814697266
    9. 'while' → logprob: -20.375003814697266
    10. '           ' → logprob: -21.875003814697266

Token 1850: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28646641969680786
    2. 'not' → logprob: -1.786466360092163
    3. ' not' → logprob: -2.536466360092163
    4. ' n' → logprob: -6.036466598510742
    5. 'n't' → logprob: -14.411466598510742
    6. '   ' → logprob: -14.911466598510742
    7. 'len' → logprob: -17.661466598510742
    8. ' ' → logprob: -17.661466598510742
    9. '	n' → logprob: -17.786466598510742
    10. '!' → logprob: -18.036466598510742

Token 1851: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3608550429344177
    2. ' ==' → logprob: -1.2358551025390625
    3. '.strip' → logprob: -4.4858551025390625
    4. '=' → logprob: -7.3608551025390625
    5. '```' → logprob: -8.735855102539062
    6. '<=' → logprob: -9.485855102539062
    7. ' =' → logprob: -9.985855102539062
    8. ' <=' → logprob: -11.110855102539062
    9. 'strip' → logprob: -11.110855102539062
    10. '[' → logprob: -11.110855102539062

Token 1852: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00550718791782856
    2. '"' → logprob: -5.255506992340088
    3. '0' → logprob: -8.505507469177246
    4. '''' → logprob: -10.130507469177246
    5. ' '' → logprob: -10.880507469177246
    6. '   ' → logprob: -12.255507469177246
    7. '`' → logprob: -12.880507469177246
    8. ''\' → logprob: -13.505507469177246
    9. '""' → logprob: -13.630507469177246
    10. ' ' → logprob: -14.380507469177246

Token 1853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01616223156452179
    2. ''' → logprob: -4.141162395477295
    3. '':
' → logprob: -9.516161918640137
    4. '''' → logprob: -10.516161918640137
    5. '':' → logprob: -11.266161918640137
    6. '"' → logprob: -11.891161918640137
    7. ' ' → logprob: -13.641161918640137
    8. '```' → logprob: -13.641161918640137
    9. ''\' → logprob: -14.516161918640137
    10. ''''' → logprob: -14.516161918640137

Token 1854: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5775628089904785
    2. '':' → logprob: -0.8275628089904785
    3. ''' → logprob: -7.4525628089904785
    4. '':
' → logprob: -7.7025628089904785
    5. ''):
' → logprob: -8.45256233215332
    6. '\n' → logprob: -8.82756233215332
    7. ':' → logprob: -9.70256233215332
    8. ':
' → logprob: -9.95256233215332
    9. '       ' → logprob: -10.20256233215332
    10. '')' → logprob: -10.45256233215332

Token 1855: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011428918689489365
    2. '       ' → logprob: -4.7614288330078125
    3. '   ' → logprob: -6.1364288330078125
    4. '		' → logprob: -8.386428833007812
    5. '	       ' → logprob: -9.011428833007812
    6. '               ' → logprob: -10.011428833007812
    7. ':
' → logprob: -10.136428833007812
    8. ':' → logprob: -10.636428833007812
    9. '	   ' → logprob: -10.636428833007812
    10. '	break' → logprob: -10.636428833007812

Token 1856: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00014656837447546422
    2. ' break' → logprob: -9.250146865844727
    3. 'return' → logprob: -10.500146865844727
    4. '	break' → logprob: -11.000146865844727
    5. '           ' → logprob: -12.375146865844727
    6. '       ' → logprob: -13.250146865844727
    7. '```' → logprob: -16.000146865844727
    8. '               ' → logprob: -17.000146865844727
    9. '_break' → logprob: -17.250146865844727
    10. '
' → logprob: -18.375146865844727

Token 1857: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021812427788972855
    2. 'n' → logprob: -3.8968124389648438
    3. '   ' → logprob: -7.396812438964844
    4. ' n' → logprob: -7.521812438964844
    5. '	n' → logprob: -10.146812438964844
    6. '```' → logprob: -10.771812438964844
    7. '	' → logprob: -11.521812438964844
    8. ',' → logprob: -11.646812438964844
    9. ' lines' → logprob: -11.771812438964844
    10. '        
' → logprob: -12.146812438964844

Token 1858: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6856200098991394
    2. 'n' → logprob: -0.9356200098991394
    3. '       ' → logprob: -2.685620069503784
    4. ' lines' → logprob: -3.685620069503784
    5. '```' → logprob: -4.685619831085205
    6. '	n' → logprob: -7.435619831085205
    7. '   ' → logprob: -7.560619831085205
    8. 'lines' → logprob: -9.060620307922363
    9. '`' → logprob: -10.560620307922363
    10. '``' → logprob: -10.810620307922363

Token 1859: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.025410685688257217
    2. 'lines' → logprob: -4.1504106521606445
    3. ' n' → logprob: -5.1504106521606445
    4. ' lines' → logprob: -6.5254106521606445
    5. 'num' → logprob: -6.9004106521606445
    6. '       ' → logprob: -7.1504106521606445
    7. 'm' → logprob: -9.025410652160645
    8. 'line' → logprob: -9.525410652160645
    9. '   ' → logprob: -10.525410652160645
    10. 'count' → logprob: -11.525410652160645

Token 1860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936720609664917
    2. ' =' → logprob: -0.6936720609664917
    3. '=int' → logprob: -7.568672180175781
    4. 'int' → logprob: -12.318672180175781
    5. '   ' → logprob: -13.693672180175781
    6. 'n' → logprob: -14.193672180175781
    7. ' ' → logprob: -14.693672180175781
    8. '=n' → logprob: -14.818672180175781
    9. ')' → logprob: -15.318672180175781
    10. 'tokens' → logprob: -15.818672180175781

Token 1861: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. '[int' → logprob: -24.00002670288086
    4. '(int' → logprob: -25.75002670288086
    5. '	int' → logprob: -26.00002670288086
    6. '=int' → logprob: -26.50002670288086
    7. '   ' → logprob: -27.25002670288086
    8. '<int' → logprob: -27.25002670288086
    9. ':int' → logprob: -28.50002670288086
    10. ' ' → logprob: -28.62502670288086

Token 1862: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.4153549020411447e-05
    2. 'n' → logprob: -10.87502384185791
    3. '(' → logprob: -12.37502384185791
    4. ' (' → logprob: -14.12502384185791
    5. ' n' → logprob: -16.125024795532227
    6. '(
' → logprob: -17.625024795532227
    7. '
' → logprob: -18.125024795532227
    8. '```' → logprob: -18.125024795532227
    9. ')n' → logprob: -18.750024795532227
    10. '	n' → logprob: -18.875024795532227

Token 1863: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033680278807878494
    2. ')
' → logprob: -3.4086802005767822
    3. '       ' → logprob: -10.908679962158203
    4. ')
' → logprob: -11.908679962158203
    5. '   ' → logprob: -12.783679962158203
    6. '<|end|>' → logprob: -13.658679962158203
    7. ' )' → logprob: -13.908679962158203
    8. '[' → logprob: -14.283679962158203
    9. '#' → logprob: -14.783679962158203
    10. '```' → logprob: -14.908679962158203

Token 1864: '       ' (ID: 309)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2890370488166809
    2. '   ' → logprob: -2.539036989212036
    3. ' lines' → logprob: -2.789036989212036
    4. '	lines' → logprob: -2.789036989212036
    5. '       ' → logprob: -3.039036989212036
    6. '(lines' → logprob: -7.539037227630615
    7. '```' → logprob: -7.664037227630615
    8. '_lines' → logprob: -9.414036750793457
    9. 'line' → logprob: -10.914036750793457
    10. 'points' → logprob: -10.914036750793457

Token 1865: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.0003933768020942807
    2. ' lines' → logprob: -7.875393390655518
    3. '       ' → logprob: -12.25039291381836
    4. '	lines' → logprob: -12.37539291381836
    5. '   ' → logprob: -13.50039291381836
    6. 'points' → logprob: -14.00039291381836
    7. 'line' → logprob: -14.37539291381836
    8. '(lines' → logprob: -14.50039291381836
    9. '```' → logprob: -14.87539291381836
    10. '_lines' → logprob: -15.25039291381836

Token 1866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6358996629714966
    2. '=' → logprob: -0.7608996629714966
    3. '=[]' → logprob: -6.010899543762207
    4. '_lines' → logprob: -8.260899543762207
    5. '   ' → logprob: -8.760899543762207
    6. '(lines' → logprob: -9.510899543762207
    7. '[' → logprob: -9.760899543762207
    8. '[line' → logprob: -9.885899543762207
    9. '[]' → logprob: -10.010899543762207
    10. '=[]
' → logprob: -10.010899543762207

Token 1867: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014180909842252731
    2. '[]
' → logprob: -4.264181137084961
    3. '[' → logprob: -11.014181137084961
    4. '[int' → logprob: -16.13918113708496
    5. '[]

' → logprob: -16.13918113708496
    6. '[n' → logprob: -16.26418113708496
    7. '[input' → logprob: -16.38918113708496
    8. '[])' → logprob: -16.76418113708496
    9. '[])
' → logprob: -16.76418113708496
    10. '[line' → logprob: -16.76418113708496

Token 1868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002086023800075054
    2. ' for' → logprob: -7.127086162567139
    3. 'for' → logprob: -7.502086162567139
    4. '   ' → logprob: -8.25208568572998
    5. '	for' → logprob: -8.37708568572998
    6. '<|end|>' → logprob: -9.50208568572998
    7. '	' → logprob: -9.62708568572998
    8. '```' → logprob: -10.12708568572998
    9. '	   ' → logprob: -10.62708568572998
    10. '<|end|>' → logprob: -11.75208568572998

Token 1869: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014253178611397743
    2. ' for' → logprob: -4.26425313949585
    3. '   ' → logprob: -9.514253616333008
    4. '	for' → logprob: -11.764253616333008
    5. '       ' → logprob: -11.889253616333008
    6. '
' → logprob: -14.014253616333008
    7. 'while' → logprob: -14.764253616333008
    8. '```' → logprob: -16.514253616333008
    9. '    
' → logprob: -17.764253616333008
    10. '        
' → logprob: -18.014253616333008

Token 1870: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001822024118155241
    2. '_i' → logprob: -6.501821994781494
    3. 'i' → logprob: -8.126822471618652
    4. '_in' → logprob: -11.376822471618652
    5. ' _' → logprob: -11.876822471618652
    6. '_j' → logprob: -13.501822471618652
    7. '_range' → logprob: -13.626822471618652
    8. ' i' → logprob: -14.501822471618652
    9. '_=' → logprob: -14.501822471618652
    10. 'in' → logprob: -14.751822471618652

Token 1871: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2329854667186737
    2. ' in' → logprob: -1.732985496520996
    3. 'range' → logprob: -3.482985496520996
    4. ' range' → logprob: -8.107985496520996
    5. '_' → logprob: -10.607985496520996
    6. 'i' → logprob: -10.732985496520996
    7. '0' → logprob: -11.482985496520996
    8. '
' → logprob: -13.482985496520996
    9. '_in' → logprob: -13.857985496520996
    10. '...' → logprob: -13.982985496520996

Token 1872: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.128163257315464e-07
    2. ' range' → logprob: -15.5
    3. '
' → logprob: -22.0
    4. '(range' → logprob: -22.0
    5. '[' → logprob: -22.125
    6. '	range' → logprob: -23.0
    7. '0' → logprob: -23.125
    8. ')' → logprob: -23.75
    9. '...' → logprob: -25.375
    10. 'line' → logprob: -26.0

Token 1873: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6932071447372437
    2. '(n' → logprob: -0.6932071447372437
    3. ' n' → logprob: -10.443206787109375
    4. 'range' → logprob: -10.943206787109375
    5. '(' → logprob: -12.568206787109375
    6. 'int' → logprob: -12.693206787109375
    7. '_n' → logprob: -13.193206787109375
    8. '
' → logprob: -13.443206787109375
    9. '	n' → logprob: -13.818206787109375
    10. '   ' → logprob: -14.693206787109375

Token 1874: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004382178653031588
    2. '):' → logprob: -5.629382133483887
    3. '       ' → logprob: -7.379382133483887
    4. ':
' → logprob: -9.629382133483887
    5. '   ' → logprob: -10.629382133483887
    6. '):
' → logprob: -11.129382133483887
    7. '():
' → logprob: -11.379382133483887
    8. '           ' → logprob: -11.379382133483887
    9. ',' → logprob: -11.754382133483887
    10. ':' → logprob: -11.879382133483887

Token 1875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011790665797889233
    2. '   ' → logprob: -5.636790752410889
    3. ' line' → logprob: -5.636790752410889
    4. '	       ' → logprob: -6.261790752410889
    5. '       ' → logprob: -7.136790752410889
    6. 'line' → logprob: -7.761790752410889
    7. ' lines' → logprob: -8.01179027557373
    8. 'x' → logprob: -8.76179027557373
    9. '	   ' → logprob: -9.13679027557373
    10. '    	   ' → logprob: -9.51179027557373

Token 1876: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.019960472360253334
    2. '           ' → logprob: -5.019960403442383
    3. 'coords' → logprob: -5.769960403442383
    4. 'parts' → logprob: -5.894960403442383
    5. 'line' → logprob: -6.019960403442383
    6. '       ' → logprob: -6.769960403442383
    7. ' x' → logprob: -6.894960403442383
    8. 'xy' → logprob: -7.394960403442383
    9. 'tokens' → logprob: -7.519960403442383
    10. '   ' → logprob: -7.894960403442383

Token 1877: '1' (ID: 16)
  Prédit: '=line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -1.1556222438812256
    2. '1' → logprob: -1.9056222438812256
    3. ',y' → logprob: -2.0306222438812256
    4. '=' → logprob: -2.1556222438812256
    5. '0' → logprob: -2.4056222438812256
    6. ',' → logprob: -2.4056222438812256
    7. ' =' → logprob: -3.2806222438812256
    8. ',line' → logprob: -4.155622482299805
    9. '=input' → logprob: -4.655622482299805
    10. '=int' → logprob: -4.655622482299805

Token 1878: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.043048061430454254
    2. ',' → logprob: -3.168048143386841
    3. ' ,' → logprob: -11.168047904968262
    4. 'y' → logprob: -11.293047904968262
    5. ',x' → logprob: -11.668047904968262
    6. '_,' → logprob: -12.043047904968262
    7. ',line' → logprob: -12.543047904968262
    8. ',s' → logprob: -13.668047904968262
    9. ',n' → logprob: -14.418047904968262
    10. '=' → logprob: -14.543047904968262

Token 1879: '1' (ID: 16)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.3548833727836609
    2. ',' → logprob: -2.1048834323883057
    3. '1' → logprob: -2.6048834323883057
    4. '=' → logprob: -2.8548834323883057
    5. 'x' → logprob: -4.354883193969727
    6. ' =' → logprob: -4.354883193969727
    7. '=int' → logprob: -5.229883193969727
    8. 's' → logprob: -5.354883193969727
    9. '=sys' → logprob: -5.729883193969727
    10. '<|end|>' → logprob: -6.354883193969727

Token 1880: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6228399872779846
    2. ',x' → logprob: -0.8728399872779846
    3. '=' → logprob: -3.49783992767334
    4. ' =' → logprob: -4.37283992767334
    5. 'x' → logprob: -6.62283992767334
    6. ',line' → logprob: -7.37283992767334
    7. ' ,' → logprob: -7.99783992767334
    8. ',n' → logprob: -9.12283992767334
    9. '=line' → logprob: -9.12283992767334
    10. '<|end|>' → logprob: -9.37283992767334

Token 1881: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5990620255470276
    2. 'x' → logprob: -1.2240619659423828
    3. ',' → logprob: -2.474061965942383
    4. ',x' → logprob: -3.224061965942383
    5. '2' → logprob: -3.974061965942383
    6. '=' → logprob: -4.599061965942383
    7. '=int' → logprob: -6.474061965942383
    8. ' =' → logprob: -7.349061965942383
    9. 's' → logprob: -7.974061965942383
    10. 'w' → logprob: -7.974061965942383

Token 1882: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.0007896171882748604
    2. 'x' → logprob: -7.625789642333984
    3. ',' → logprob: -8.250789642333984
    4. ',y' → logprob: -10.250789642333984
    5. '_,' → logprob: -13.375789642333984
    6. ' ,' → logprob: -13.875789642333984
    7. ',line' → logprob: -14.375789642333984
    8. '1' → logprob: -14.625789642333984
    9. '=' → logprob: -15.125789642333984
    10. ',int' → logprob: -15.625789642333984

Token 1883: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002981624274980277
    2. '1' → logprob: -8.125298500061035
    3. '=' → logprob: -13.500298500061035
    4. ',' → logprob: -14.875298500061035
    5. 'x' → logprob: -15.375298500061035
    6. '```' → logprob: -16.87529754638672
    7. 'y' → logprob: -17.00029754638672
    8. ' =' → logprob: -17.00029754638672
    9. '₂' → logprob: -17.25029754638672
    10. ' ' → logprob: -17.37529754638672

Token 1884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22560909390449524
    2. ' =' → logprob: -1.6006090641021729
    3. '=line' → logprob: -8.600608825683594
    4. '=int' → logprob: -12.475608825683594
    5. '=input' → logprob: -12.725608825683594
    6. ',' → logprob: -14.350608825683594
    7. '=user' → logprob: -14.475608825683594
    8. '   ' → logprob: -14.725608825683594
    9. ' ' → logprob: -14.725608825683594
    10. '=
' → logprob: -14.975608825683594

Token 1885: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0011741555063053966
    2. ' map' → logprob: -6.751173973083496
    3. 'list' → logprob: -12.501173973083496
    4. 'input' → logprob: -15.251173973083496
    5. '   ' → logprob: -17.376174926757812
    6. '[' → logprob: -17.626174926757812
    7. '(map' → logprob: -17.626174926757812
    8. '	map' → logprob: -18.501174926757812
    9. ' list' → logprob: -19.876174926757812
    10. 'm' → logprob: -21.001174926757812

Token 1886: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0034078743774443865
    2. '(float' → logprob: -6.003407955169678
    3. 'int' → logprob: -7.003407955169678
    4. 'float' → logprob: -11.50340747833252
    5. '(str' → logprob: -12.12840747833252
    6. '(lambda' → logprob: -12.62840747833252
    7. '[int' → logprob: -13.25340747833252
    8. '=int' → logprob: -14.00340747833252
    9. ' int' → logprob: -14.62840747833252
    10. ',int' → logprob: -15.37840747833252

Token 1887: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.013001039624214172
    2. ',' → logprob: -5.138000965118408
    3. 'input' → logprob: -5.138000965118408
    4. '(input' → logprob: -6.763000965118408
    5. ' input' → logprob: -11.513001441955566
    6. '[input' → logprob: -12.388001441955566
    7. ',line' → logprob: -13.638001441955566
    8. ',
' → logprob: -13.763001441955566
    9. ',x' → logprob: -13.763001441955566
    10. '
' → logprob: -13.888001441955566

Token 1888: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020389800192788243
    2. ' input' → logprob: -8.500204086303711
    3. '(input' → logprob: -15.875204086303711
    4. 'sys' → logprob: -16.12520408630371
    5. '[input' → logprob: -16.12520408630371
    6. '   ' → logprob: -16.37520408630371
    7. '	input' → logprob: -18.50020408630371
    8. '=input' → logprob: -19.12520408630371
    9. '<input' → logprob: -19.25020408630371
    10. '           ' → logprob: -20.25020408630371

Token 1889: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0009839815320447087
    2. 'lines' → logprob: -7.000984191894531
    3. ')' → logprob: -11.375984191894531
    4. 'Lines' → logprob: -11.625984191894531
    5. '[idx' → logprob: -11.750984191894531
    6. 'input' → logprob: -12.125984191894531
    7. '_line' → logprob: -12.250984191894531
    8. '().' → logprob: -12.750984191894531
    9. '.readline' → logprob: -12.750984191894531
    10. '[' → logprob: -12.875984191894531

Token 1890: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. 'idx' → logprob: -15.875000953674316
    3. '   ' → logprob: -16.125
    4. '[id' → logprob: -16.75
    5. '[input' → logprob: -17.0
    6. '[int' → logprob: -17.5
    7. '[' → logprob: -17.875
    8. '[ind' → logprob: -18.0
    9. '[index' → logprob: -18.625
    10. '```' → logprob: -18.875

Token 1891: '].' (ID: 1651)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5384959578514099
    2. '].' → logprob: -1.0384960174560547
    3. '[idx' → logprob: -2.9134960174560547
    4. '.strip' → logprob: -6.163496017456055
    5. '.split' → logprob: -6.413496017456055
    6. '(idx' → logprob: -6.538496017456055
    7. '       ' → logprob: -7.413496017456055
    8. '   ' → logprob: -7.538496017456055
    9. '()].' → logprob: -7.538496017456055
    10. '.readline' → logprob: -8.288496017456055

Token 1892: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12694543600082397
    2. 'split' → logprob: -2.1269454956054688
    3. 'idx' → logprob: -11.251945495605469
    4. '.strip' → logprob: -12.876945495605469
    5. ' strip' → logprob: -13.501945495605469
    6. 'rstrip' → logprob: -15.001945495605469
    7. '.split' → logprob: -16.75194549560547
    8. ' split' → logprob: -17.50194549560547
    9. '(strip' → logprob: -17.62694549560547
    10. 'str' → logprob: -18.37694549560547

Token 1893: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0034389847423881292
    2. '())
' → logprob: -6.378438949584961
    3. '()' → logprob: -6.503438949584961
    4. '()[' → logprob: -9.628438949584961
    5. '(idx' → logprob: -10.253438949584961
    6. ')' → logprob: -10.253438949584961
    7. '()
' → logprob: -11.003438949584961
    8. '().' → logprob: -11.003438949584961
    9. '());' → logprob: -11.128438949584961
    10. '()]' → logprob: -11.378438949584961

Token 1894: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003620743053033948
    2. 'idx' → logprob: -6.503620624542236
    3. '       ' → logprob: -7.378620624542236
    4. '   ' → logprob: -7.378620624542236
    5. '	       ' → logprob: -8.003621101379395
    6. '	   ' → logprob: -9.253621101379395
    7. '	idx' → logprob: -9.378621101379395
    8. '		' → logprob: -9.753621101379395
    9. '		   ' → logprob: -10.128621101379395
    10. '[idx' → logprob: -10.378621101379395

Token 1895: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0008190384833142161
    2. ' idx' → logprob: -7.875819206237793
    3. '	idx' → logprob: -8.625819206237793
    4. '       ' → logprob: -9.000819206237793
    5. 'lines' → logprob: -9.750819206237793
    6. '           ' → logprob: -9.875819206237793
    7. 'x' → logprob: -11.250819206237793
    8. ' lines' → logprob: -12.250819206237793
    9. '   ' → logprob: -12.500819206237793
    10. '	   ' → logprob: -13.875819206237793

Token 1896: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00014859484508633614
    2. ' +=' → logprob: -8.87514877319336
    3. ']+=' → logprob: -12.00014877319336
    4. '   ' → logprob: -13.75014877319336
    5. '+="' → logprob: -15.25014877319336
    6. '+' → logprob: -15.25014877319336
    7. '+='' → logprob: -15.25014877319336
    8. '	' → logprob: -15.37514877319336
    9. '=' → logprob: -15.50014877319336
    10. '```' → logprob: -15.87514877319336

Token 1897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '4' → logprob: -15.875
    3. ' ' → logprob: -16.125
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -20.25
    6. 'x' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. 'int' → logprob: -21.875
    9. '１' → logprob: -22.75
    10. '=' → logprob: -23.125

Token 1898: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0364094078540802
    2. '           ' → logprob: -3.411409378051758
    3. '   ' → logprob: -6.536409378051758
    4. ' lines' → logprob: -6.786409378051758
    5. '	lines' → logprob: -9.411409378051758
    6. 'lines' → logprob: -9.911409378051758
    7. '(lines' → logprob: -10.161409378051758
    8. '```' → logprob: -12.911409378051758
    9. ',' → logprob: -13.411409378051758
    10. '<|end|>' → logprob: -13.786409378051758

Token 1899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014435792341828346
    2. ' lines' → logprob: -4.889435768127441
    3. '       ' → logprob: -5.139435768127441
    4. 'lines' → logprob: -7.264435768127441
    5. '   ' → logprob: -8.639435768127441
    6. '	lines' → logprob: -9.889435768127441
    7. '(lines' → logprob: -11.389435768127441
    8. '	       ' → logprob: -13.889435768127441
    9. '```' → logprob: -14.014435768127441
    10. '<|end|>' → logprob: -14.014435768127441

Token 1900: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.000285530521068722
    2. ' lines' → logprob: -8.250285148620605
    3. '           ' → logprob: -10.750285148620605
    4. '   ' → logprob: -14.125285148620605
    5. 'line' → logprob: -14.250285148620605
    6. '       ' → logprob: -14.250285148620605
    7. '	lines' → logprob: -14.375285148620605
    8. '(lines' → logprob: -15.875285148620605
    9. 'points' → logprob: -18.125286102294922
    10. '
' → logprob: -18.500286102294922

Token 1901: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009193199803121388
    2. '.' → logprob: -7.000919342041016
    3. ' .' → logprob: -12.500919342041016
    4. '.app' → logprob: -13.500919342041016
    5. 'append' → logprob: -14.000919342041016
    6. '.extend' → logprob: -14.500919342041016
    7. ').' → logprob: -14.625919342041016
    8. '   ' → logprob: -14.750919342041016
    9. '           ' → logprob: -16.250919342041016
    10. '.Append' → logprob: -16.375919342041016

Token 1902: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015109316445887089
    2. '(' → logprob: -6.501511096954346
    3. '(x' → logprob: -12.251510620117188
    4. '[(' → logprob: -13.001510620117188
    5. ' ((' → logprob: -13.626510620117188
    6. ' (' → logprob: -15.626510620117188
    7. '   ' → logprob: -16.001510620117188
    8. '(((' → logprob: -16.251510620117188
    9. '  ' → logprob: -18.751510620117188
    10. ' ' → logprob: -18.876510620117188

Token 1903: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -10.000078201293945
    3. '((' → logprob: -10.500078201293945
    4. ' (' → logprob: -12.375078201293945
    5. '[x' → logprob: -14.750078201293945
    6. '[(' → logprob: -14.750078201293945
    7. '   ' → logprob: -16.625078201293945
    8. 'x' → logprob: -17.125078201293945
    9. ')' → logprob: -19.500078201293945
    10. '  ' → logprob: -20.125078201293945

Token 1904: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6047699318733066e-05
    2. '(x' → logprob: -11.250016212463379
    3. ' x' → logprob: -12.750016212463379
    4. ')x' → logprob: -16.500015258789062
    5. '
' → logprob: -18.250015258789062
    6. '(' → logprob: -18.625015258789062
    7. ')' → logprob: -19.250015258789062
    8. '   ' → logprob: -19.500015258789062
    9. ',x' → logprob: -19.625015258789062
    10. ' (' → logprob: -19.625015258789062

Token 1905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003108549863100052
    2. 'x' → logprob: -5.878108501434326
    3. '0' → logprob: -8.628108978271484
    4. '[' → logprob: -9.128108978271484
    5. '(x' → logprob: -11.628108978271484
    6. '[x' → logprob: -14.003108978271484
    7. '2' → logprob: -14.003108978271484
    8. '(' → logprob: -14.253108978271484
    9. '{x' → logprob: -14.253108978271484
    10. ',x' → logprob: -14.628108978271484

Token 1906: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005959614180028439
    2. ',' → logprob: -5.130959510803223
    3. ' ,' → logprob: -11.130959510803223
    4. ',x' → logprob: -11.255959510803223
    5. ',user' → logprob: -13.380959510803223
    6. ',
' → logprob: -14.130959510803223
    7. ',line' → logprob: -15.130959510803223
    8. '```' → logprob: -15.755959510803223
    9. ',n' → logprob: -16.25596046447754
    10. '<|end|>' → logprob: -16.25596046447754

Token 1907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. 'y' → logprob: -12.375005722045898
    3. ',' → logprob: -14.250005722045898
    4. ' ' → logprob: -14.500005722045898
    5. ',y' → logprob: -15.125005722045898
    6. '[' → logprob: -15.625005722045898
    7. '<|end|>' → logprob: -16.6250057220459
    8. '{' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.5000057220459
    10. ' y' → logprob: -17.5000057220459

Token 1908: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.02329462766647339
    2. ',' → logprob: -3.773294687271118
    3. ' ,' → logprob: -10.273294448852539
    4. ',y' → logprob: -11.398294448852539
    5. ',
' → logprob: -13.023294448852539
    6. 'x' → logprob: -14.273294448852539
    7. ',(' → logprob: -15.273294448852539
    8. ',w' → logprob: -16.89829444885254
    9. ',n' → logprob: -17.02329444885254
    10. '   ' → logprob: -17.52329444885254

Token 1909: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.375
    3. 'x' → logprob: -17.0
    4. ',' → logprob: -17.875
    5. '```' → logprob: -18.25
    6. ',x' → logprob: -18.375
    7. ' ' → logprob: -18.75
    8. '[' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '₂' → logprob: -20.5

Token 1910: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.008685367181897163
    2. ',x' → logprob: -4.75868558883667
    3. ',' → logprob: -10.008685111999512
    4. 'x' → logprob: -10.883685111999512
    5. 'y' → logprob: -12.008685111999512
    6. ' ,' → logprob: -14.508685111999512
    7. ',
' → logprob: -14.758685111999512
    8. '```' → logprob: -16.758686065673828
    9. '
' → logprob: -17.008686065673828
    10. ',z' → logprob: -18.258686065673828

Token 1911: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. ' ' → logprob: -18.875
    4. '```' → logprob: -19.625
    5. '   ' → logprob: -20.875
    6. '3' → logprob: -21.625
    7. '۲' → logprob: -22.0
    8. '
' → logprob: -22.25
    9. '２' → logprob: -22.375
    10. '[' → logprob: -22.375

Token 1912: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025883622583933175
    2. '))' → logprob: -8.375258445739746
    3. ' )' → logprob: -11.000258445739746
    4. '           ' → logprob: -12.000258445739746
    5. '   ' → logprob: -13.000258445739746
    6. ')
' → logprob: -13.750258445739746
    7. '))
' → logprob: -14.000258445739746
    8. '       ' → logprob: -14.125258445739746
    9. ' ' → logprob: -16.250259399414062
    10. '               ' → logprob: -16.375259399414062

Token 1913: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010481854900717735
    2. ')
' → logprob: -4.760481834411621
    3. ' )' → logprob: -6.635481834411621
    4. '       ' → logprob: -8.510481834411621
    5. '           ' → logprob: -8.760481834411621
    6. '   ' → logprob: -9.135481834411621
    7. ' )
' → logprob: -9.385481834411621
    8. ' ' → logprob: -14.510481834411621
    9. ')

' → logprob: -14.510481834411621
    10. '          ' → logprob: -14.635481834411621

Token 1914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1152753010392189
    2. '   ' → logprob: -2.9902753829956055
    3. 'points' → logprob: -2.9902753829956055
    4. ' points' → logprob: -5.4902753829956055
    5. '```' → logprob: -6.1152753829956055
    6. '(points' → logprob: -7.1152753829956055
    7. '	points' → logprob: -7.2402753829956055
    8. '
' → logprob: -9.115275382995605
    9. '<|end|>' → logprob: -9.490275382995605
    10. '        
' → logprob: -9.490275382995605

Token 1915: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.4322521686553955
    2. ' points' → logprob: -1.0572521686553955
    3. '       ' → logprob: -6.057251930236816
    4. '   ' → logprob: -7.182251930236816
    5. '	points' → logprob: -8.307251930236816
    6. '(points' → logprob: -8.932251930236816
    7. '
' → logprob: -11.057251930236816
    8. '        
' → logprob: -11.182251930236816
    9. '_points' → logprob: -11.557251930236816
    10. 'pts' → logprob: -11.932251930236816

Token 1916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -14.125001907348633
    3. ',
' → logprob: -15.125001907348633
    4. '_,' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. '‌,' → logprob: -16.375001907348633
    7. ',length' → logprob: -16.500001907348633
    8. ',n' → logprob: -17.000001907348633
    9. 'points' → logprob: -17.125001907348633
    10. ',map' → logprob: -17.250001907348633

Token 1917: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0001234428636962548
    2. ' graph' → logprob: -9.000123023986816
    3. '	graph' → logprob: -17.875123977661133
    4. 'graphs' → logprob: -19.375123977661133
    5. 'Graph' → logprob: -19.875123977661133
    6. '_graph' → logprob: -19.875123977661133
    7. '(graph' → logprob: -20.375123977661133
    8. '   ' → logprob: -20.500123977661133
    9. '```' → logprob: -21.125123977661133
    10. '
' → logprob: -21.250123977661133

Token 1918: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06531661748886108
    2. ' =' → logprob: -3.190316677093506
    3. ',' → logprob: -3.815316677093506
    4. '<|end|>' → logprob: -10.815316200256348
    5. '(points' → logprob: -11.565316200256348
    6. '=create' → logprob: -13.565316200256348
    7. '=
' → logprob: -13.815316200256348
    8. ' ,' → logprob: -13.940316200256348
    9. '=line' → logprob: -13.940316200256348
    10. ')' → logprob: -13.940316200256348

Token 1919: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0009114635176956654
    2. ' build' → logprob: -7.000911235809326
    3. '	build' → logprob: -19.875911712646484
    4. '(build' → logprob: -20.125911712646484
    5. '_build' → logprob: -23.250911712646484
    6. '.build' → logprob: -23.875911712646484
    7. 'building' → logprob: -24.875911712646484
    8. 'Build' → logprob: -25.375911712646484
    9. '   ' → logprob: -25.875911712646484
    10. 'built' → logprob: -26.375911712646484

Token 1920: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0006750239408574998
    2. '(graph' → logprob: -7.750675201416016
    3. '(points' → logprob: -8.625675201416016
    4. 'graph' → logprob: -9.875675201416016
    5. '_points' → logprob: -12.000675201416016
    6. '(lines' → logprob: -12.250675201416016
    7. '(' → logprob: -14.000675201416016
    8. 'points' → logprob: -14.375675201416016
    9. '_' → logprob: -14.750675201416016
    10. '_lines' → logprob: -15.750675201416016

Token 1921: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.02324594371020794
    2. '(points' → logprob: -3.7732460498809814
    3. '(' → logprob: -15.273245811462402
    4. 'points' → logprob: -17.02324676513672
    5. ' (' → logprob: -17.14824676513672
    6. ' lines' → logprob: -17.27324676513672
    7. ',' → logprob: -17.27324676513672
    8. '(line' → logprob: -17.52324676513672
    9. '```' → logprob: -17.89824676513672
    10. '
' → logprob: -18.02324676513672

Token 1922: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7438565492630005
    2. '<|end|>' → logprob: -1.1188565492630005
    3. '       ' → logprob: -2.243856430053711
    4. ')' → logprob: -2.618856430053711
    5. ',' → logprob: -4.493856430053711
    6. '
' → logprob: -5.993856430053711
    7. '    
' → logprob: -6.118856430053711
    8. '<|end|>' → logprob: -6.493856430053711
    9. '        
' → logprob: -7.368856430053711
    10. ')
' → logprob: -8.243856430053711

Token 1923: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5343884229660034
    2. 'faces' → logprob: -1.4093884229660034
    3. ' faces' → logprob: -1.7843884229660034
    4. '       ' → logprob: -6.784388542175293
    5. '_faces' → logprob: -7.659388542175293
    6. '```' → logprob: -9.284388542175293
    7. '.faces' → logprob: -10.909388542175293
    8. 'face' → logprob: -11.034388542175293
    9. ' ' → logprob: -11.284388542175293
    10. ' face' → logprob: -11.284388542175293

Token 1924: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.004098585341125727
    2. ' faces' → logprob: -5.504098415374756
    3. '       ' → logprob: -11.254098892211914
    4. '   ' → logprob: -12.879098892211914
    5. '_faces' → logprob: -13.379098892211914
    6. '.faces' → logprob: -13.629098892211914
    7. 'face' → logprob: -13.754098892211914
    8. '        
' → logprob: -15.379098892211914
    9. '
' → logprob: -15.879098892211914
    10. '    
' → logprob: -16.254098892211914

Token 1925: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03977757319808006
    2. '=' → logprob: -3.4147775173187256
    3. '.append' → logprob: -5.664777755737305
    4. ',' → logprob: -7.664777755737305
    5. '   ' → logprob: -7.664777755737305
    6. ')' → logprob: -7.789777755737305
    7. '.' → logprob: -8.164777755737305
    8. '.extend' → logprob: -8.414777755737305
    9. '=[]' → logprob: -8.414777755737305
    10. '[' → logprob: -8.789777755737305

Token 1926: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.12693072855472565
    2. ' find' → logprob: -2.1269307136535645
    3. '(find' → logprob: -13.376931190490723
    4. '[]' → logprob: -14.751931190490723
    5. '	find' → logprob: -14.751931190490723
    6. ' ' → logprob: -16.001930236816406
    7. '=find' → logprob: -16.376930236816406
    8. '   ' → logprob: -16.876930236816406
    9. '[]
' → logprob: -18.001930236816406
    10. '[' → logprob: -18.251930236816406

Token 1927: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.001257972209714353
    2. 'faces' → logprob: -6.75125789642334
    3. '(f' → logprob: -9.37625789642334
    4. '_points' → logprob: -14.37625789642334
    5. 'f' → logprob: -14.87625789642334
    6. ' faces' → logprob: -15.00125789642334
    7. '_f' → logprob: -15.00125789642334
    8. '```' → logprob: -15.25125789642334
    9. '.faces' → logprob: -15.37625789642334
    10. 'Faces' → logprob: -15.37625789642334

Token 1928: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.1472419600977446e-06
    2. 'points' → logprob: -14.000000953674316
    3. '(' → logprob: -16.750001907348633
    4. ' points' → logprob: -16.875001907348633
    5. '(point' → logprob: -17.625001907348633
    6. ' (' → logprob: -18.125001907348633
    7. '	points' → logprob: -18.250001907348633
    8. '(
' → logprob: -19.125001907348633
    9. '(lines' → logprob: -19.375001907348633
    10. '```' → logprob: -19.750001907348633

Token 1929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -12.500009536743164
    3. '(graph' → logprob: -12.750009536743164
    4. ',
' → logprob: -13.000009536743164
    5. ',line' → logprob: -14.625009536743164
    6. ')' → logprob: -15.875009536743164
    7. '```' → logprob: -16.375009536743164
    8. '[' → logprob: -16.875009536743164
    9. ',function' → logprob: -17.125009536743164
    10. 'graph' → logprob: -17.250009536743164

Token 1930: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0003357006062287837
    2. ' graph' → logprob: -8.000335693359375
    3. '	graph' → logprob: -15.625335693359375
    4. '(graph' → logprob: -15.875335693359375
    5. '
' → logprob: -17.625335693359375
    6. '```' → logprob: -18.250335693359375
    7. 'graphs' → logprob: -18.625335693359375
    8. 'graphql' → logprob: -19.750335693359375
    9. ' ' → logprob: -19.875335693359375
    10. 'points' → logprob: -20.000335693359375

Token 1931: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.337155355140567e-05
    2. '(lines' → logprob: -10.250062942504883
    3. '       ' → logprob: -11.125062942504883
    4. ' ,' → logprob: -12.250062942504883
    5. ',
' → logprob: -12.375062942504883
    6. ')' → logprob: -13.375062942504883
    7. '   ' → logprob: -13.750062942504883
    8. ',line' → logprob: -14.125062942504883
    9. ' lines' → logprob: -15.625062942504883
    10. '[' → logprob: -15.875062942504883

Token 1932: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.018152397125959396
    2. ' lines' → logprob: -4.018152236938477
    3. 'points' → logprob: -13.893152236938477
    4. 'line' → logprob: -14.643152236938477
    5. '   ' → logprob: -14.893152236938477
    6. '(lines' → logprob: -15.268152236938477
    7. '	lines' → logprob: -15.393152236938477
    8. '       ' → logprob: -16.393152236938477
    9. ' points' → logprob: -17.768152236938477
    10. 'Lines' → logprob: -17.893152236938477

Token 1933: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05962178483605385
    2. ')' → logprob: -3.184621810913086
    3. ')
' → logprob: -4.434621810913086
    4. '
' → logprob: -6.059621810913086
    5. '   ' → logprob: -7.059621810913086
    6. '        
' → logprob: -7.559621810913086
    7. ',' → logprob: -7.809621810913086
    8. '<|end|>' → logprob: -7.809621810913086
    9. ',
' → logprob: -10.809621810913086
    10. '```' → logprob: -11.059621810913086

Token 1934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07445389032363892
    2. 'count' → logprob: -3.449453830718994
    3. '   ' → logprob: -3.699453830718994
    4. '```' → logprob: -4.949453830718994
    5. 'total' → logprob: -6.324453830718994
    6. 'counts' → logprob: -6.699453830718994
    7. '
' → logprob: -7.199453830718994
    8. ' count' → logprob: -7.199453830718994
    9. 'origin' → logprob: -7.449453830718994
    10. ' counts' → logprob: -7.449453830718994

Token 1935: ' #' (ID: 1069)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.6655294895172119
    2. '       ' → logprob: -1.665529489517212
    3. 'areas' → logprob: -2.790529489517212
    4. 'count' → logprob: -3.040529489517212
    5. 'answer' → logprob: -3.540529489517212
    6. 'valid' → logprob: -3.540529489517212
    7. 'area' → logprob: -3.915529489517212
    8. 'total' → logprob: -4.040529251098633
    9. 'faces' → logprob: -4.540529251098633
    10. 'min' → logprob: -4.790529251098633

Token 1936: ' find' (ID: 1646)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.15400263667106628
    2. 'origin' → logprob: -2.7790026664733887
    3. 'faces' → logprob: -3.5290026664733887
    4. '       ' → logprob: -3.9040026664733887
    5. 'count' → logprob: -5.279002666473389
    6. 'answer' → logprob: -5.404002666473389
    7. 'face' → logprob: -5.654002666473389
    8. 'min' → logprob: -6.029002666473389
    9. ' inside' → logprob: -6.154002666473389
    10. 'area' → logprob: -6.529002666473389

Token 1937: ' face' (ID: 4950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28569716215133667
    2. ' min' → logprob: -2.2856972217559814
    3. 'answer' → logprob: -3.0356972217559814
    4. 'best' → logprob: -4.035696983337402
    5. 'inside' → logprob: -4.160696983337402
    6. 'origin' → logprob: -4.285696983337402
    7. 'count' → logprob: -4.535696983337402
    8. 'area' → logprob: -5.035696983337402
    9. 'faces' → logprob: -5.160696983337402
    10. 'max' → logprob: -5.410696983337402

Token 1938: ' that' (ID: 484)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.2805187702178955
    2. '       ' → logprob: -1.9055187702178955
    3. '_cont' → logprob: -2.9055187702178955
    4. 'contains' → logprob: -4.030518531799316
    5. 'with' → logprob: -4.405518531799316
    6. '   ' → logprob: -5.280518531799316
    7. 'that' → logprob: -5.905518531799316
    8. '_contains' → logprob: -7.155518531799316
    9. 'contain' → logprob: -7.280518531799316
    10. ' containing' → logprob: -7.530518531799316

Token 1939: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.08014997094869614
    2. ' contains' → logprob: -2.5801498889923096
    3. 'contain' → logprob: -7.830150127410889
    4. '
' → logprob: -8.33014965057373
    5. 'covers' → logprob: -8.45514965057373
    6. 'includes' → logprob: -9.33014965057373
    7. ' encl' → logprob: -9.45514965057373
    8. 's' → logprob: -9.58014965057373
    9. '_contains' → logprob: -9.58014965057373
    10. '   ' → logprob: -10.08014965057373

Token 1940: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.778528094291687
    2. 'origin' → logprob: -1.028528094291687
    3. ' origin' → logprob: -1.778528094291687
    4. ' (' → logprob: -5.278528213500977
    5. ' the' → logprob: -5.278528213500977
    6. 'the' → logprob: -5.778528213500977
    7. '0' → logprob: -6.903528213500977
    8. '_origin' → logprob: -9.528528213500977
    9. ' ' → logprob: -10.028528213500977
    10. '(origin' → logprob: -10.278528213500977

Token 1941: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001347615267150104
    2. ' for' → logprob: -8.001347541809082
    3. '
' → logprob: -8.126347541809082
    4. 'origin' → logprob: -9.001347541809082
    5. 'found' → logprob: -9.251347541809082
    6. '   ' → logprob: -9.251347541809082
    7. ',' → logprob: -9.876347541809082
    8. ' and' → logprob: -9.876347541809082
    9. '```' → logprob: -10.001347541809082
    10. 'for' → logprob: -10.376347541809082

Token 1942: '0' (ID: 15)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.08066585659980774
    2. ' points' → logprob: -3.3306658267974854
    3. 'for' → logprob: -3.4556658267974854
    4. '(points' → logprob: -5.7056660652160645
    5. ')' → logprob: -6.4556660652160645
    6. ' for' → logprob: -6.4556660652160645
    7. 'point' → logprob: -7.4556660652160645
    8. 'p' → logprob: -7.4556660652160645
    9. '       ' → logprob: -7.5806660652160645
    10. '0' → logprob: -7.8306660652160645

Token 1943: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016850552055984735
    2. '0' → logprob: -7.37668514251709
    3. ')' → logprob: -7.62668514251709
    4. ')
' → logprob: -8.37668514251709
    5. '),' → logprob: -9.00168514251709
    6. '),(' → logprob: -9.00168514251709
    7. ',(' → logprob: -11.00168514251709
    8. '(' → logprob: -11.12668514251709
    9. ',
' → logprob: -11.37668514251709
    10. '
' → logprob: -11.50168514251709

Token 1944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. ',' → logprob: -15.25000286102295
    4. '
' → logprob: -17.375003814697266
    5. ')' → logprob: -19.750003814697266
    6. '   ' → logprob: -20.875003814697266
    7. 'points' → logprob: -21.000003814697266
    8. '```' → logprob: -21.000003814697266
    9. '  ' → logprob: -21.750003814697266
    10. ' ' → logprob: -22.250003814697266

Token 1945: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04269060119986534
    2. ')' → logprob: -3.6676905155181885
    3. ')
' → logprob: -4.667690753936768
    4. '
' → logprob: -6.292690753936768
    5. ',' → logprob: -6.292690753936768
    6. ' and' → logprob: -6.667690753936768
    7. ' for' → logprob: -6.917690753936768
    8. '):
' → logprob: -8.41769027709961
    9. 'for' → logprob: -9.04269027709961
    10. '        
' → logprob: -9.29269027709961

Token 1946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023023895919322968
    2. '```' → logprob: -6.627302169799805
    3. ' for' → logprob: -7.502302169799805
    4. '   ' → logprob: -9.252302169799805
    5. 'for' → logprob: -9.627302169799805
    6. ',' → logprob: -9.627302169799805
    7. 'found' → logprob: -9.877302169799805
    8. 'origin' → logprob: -10.377302169799805
    9. ' found' → logprob: -11.002302169799805
    10. '``' → logprob: -11.002302169799805

Token 1947: ' trapped' (ID: 58304)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1518246978521347
    2. 'found' → logprob: -2.651824712753296
    3. 'for' → logprob: -3.401824712753296
    4. ' for' → logprob: -3.776824712753296
    5. 'origin' → logprob: -5.776824474334717
    6. ' found' → logprob: -5.901824474334717
    7. '   ' → logprob: -6.151824474334717
    8. ' origin' → logprob: -6.151824474334717
    9. 'best' → logprob: -7.151824474334717
    10. 'result' → logprob: -7.276824474334717

Token 1948: ' =' (ID: 314)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.02859256975352764
    2. ' =' → logprob: -4.028592586517334
    3. '_faces' → logprob: -5.528592586517334
    4. '=' → logprob: -6.028592586517334
    5. '_area' → logprob: -6.028592586517334
    6. '_count' → logprob: -7.403592586517334
    7. '_points' → logprob: -7.778592586517334
    8. '_point' → logprob: -8.778592109680176
    9. '_idx' → logprob: -9.028592109680176
    10. '_inside' → logprob: -9.403592109680176

Token 1949: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0006355931982398033
    2. 'True' → logprob: -8.250635147094727
    3. '0' → logprob: -8.375635147094727
    4. 'None' → logprob: -9.250635147094727
    5. ' False' → logprob: -10.750635147094727
    6. '[]' → logprob: -11.250635147094727
    7. '[]
' → logprob: -12.000635147094727
    8. '[' → logprob: -12.750635147094727
    9. 'len' → logprob: -13.375635147094727
    10. '   ' → logprob: -14.000635147094727

Token 1950: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009264042600989342
    2. ' for' → logprob: -4.75926399230957
    3. 'for' → logprob: -7.63426399230957
    4. '   ' → logprob: -9.63426399230957
    5. '
' → logprob: -9.75926399230957
    6. '<|end|>' → logprob: -11.00926399230957
    7. '           ' → logprob: -11.63426399230957
    8. ',' → logprob: -12.13426399230957
    9. '        
' → logprob: -12.63426399230957
    10. ')' → logprob: -13.13426399230957

Token 1951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3657313287258148
    2. ' for' → logprob: -1.2407313585281372
    3. 'for' → logprob: -4.115731239318848
    4. '```' → logprob: -7.240731239318848
    5. '   ' → logprob: -9.990731239318848
    6. '           ' → logprob: -10.240731239318848
    7. ',' → logprob: -11.865731239318848
    8. ')' → logprob: -12.490731239318848
    9. '`' → logprob: -12.990731239318848
    10. '
' → logprob: -13.115731239318848

Token 1952: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.058151621371507645
    2. '       ' → logprob: -3.0581517219543457
    3. 'for' (adapté à ' for') → logprob: -4.683151721954346
    4. '   ' → logprob: -8.433151245117188
    5. '	for' → logprob: -10.683151245117188
    6. '```' → logprob: -12.058151245117188
    7. ' face' → logprob: -12.308151245117188
    8. ' points' → logprob: -12.433151245117188
    9. '           ' → logprob: -12.933151245117188
    10. ' faces' → logprob: -13.183151245117188

Token 1953: ' f' (ID: 285)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.07000689953565598
    2. ' face' → logprob: -2.695006847381592
    3. 'f' → logprob: -9.69500732421875
    4. '(face' → logprob: -12.44500732421875
    5. '   ' → logprob: -12.69500732421875
    6. '_face' → logprob: -14.69500732421875
    7. ' f' → logprob: -14.94500732421875
    8. '```' → logprob: -15.07000732421875
    9. 'faces' → logprob: -15.44500732421875
    10. '.face' → logprob: -15.82000732421875

Token 1954: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022426815703511238
    2. 'in' → logprob: -3.8974268436431885
    3. 'ace' → logprob: -6.647426605224609
    4. 'aces' → logprob: -7.647426605224609
    5. ' ' → logprob: -9.64742660522461
    6. 'face' → logprob: -11.39742660522461
    7. 'ac' → logprob: -11.77242660522461
    8. '_in' → logprob: -12.14742660522461
    9. 'aced' → logprob: -13.14742660522461
    10. 'acing' → logprob: -13.27242660522461

Token 1955: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.3257406949996948
    2. ' faces' → logprob: -1.3257406949996948
    3. ' range' → logprob: -4.950740814208984
    4. ' points' → logprob: -6.575740814208984
    5. 'f' → logprob: -6.700740814208984
    6. 'points' → logprob: -6.825740814208984
    7. 'range' → logprob: -6.825740814208984
    8. 'face' → logprob: -8.575740814208984
    9. ' face' → logprob: -9.450740814208984
    10. ' f' → logprob: -9.825740814208984

Token 1956: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8194710612297058
    2. ':' → logprob: -1.1944711208343506
    3. ':
' → logprob: -1.5694711208343506
    4. '       ' → logprob: -4.0694708824157715
    5. ' in' → logprob: -4.6944708824157715
    6. '[' → logprob: -4.9444708824157715
    7. '   ' → logprob: -5.6944708824157715
    8. '<|end|>' → logprob: -5.8194708824157715
    9. ',' → logprob: -5.9444708824157715
    10. ' if' → logprob: -6.0694708824157715

Token 1957: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006239945534616709
    2. '   ' → logprob: -5.506239891052246
    3. '       ' → logprob: -6.506239891052246
    4. ' if' → logprob: -8.131239891052246
    5. '<|end|>' → logprob: -9.131239891052246
    6. '               ' → logprob: -9.631239891052246
    7. '```' → logprob: -9.631239891052246
    8. '<|end|>' → logprob: -10.756239891052246
    9. ' for' → logprob: -11.131239891052246
    10. '          ' → logprob: -11.131239891052246

Token 1958: ' poly' (ID: 14600)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06420430541038513
    2. '           ' → logprob: -3.314204216003418
    3. ' if' → logprob: -3.939204216003418
    4. '   ' → logprob: -5.189204216003418
    5. ' points' → logprob: -7.939204216003418
    6. ' poly' → logprob: -9.189204216003418
    7. '               ' → logprob: -10.064204216003418
    8. ' point' → logprob: -10.314204216003418
    9. '    ' → logprob: -10.439204216003418
    10. 'if' → logprob: -10.564204216003418

Token 1959: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2885287404060364
    2. '=' → logprob: -1.9135286808013916
    3. '_points' → logprob: -2.2885286808013916
    4. 'oints' → logprob: -7.538528919219971
    5. 'points' → logprob: -8.038528442382812
    6. '_pts' → logprob: -8.288528442382812
    7. '_tokens' → logprob: -9.163528442382812
    8. '   ' → logprob: -9.538528442382812
    9. '_indices' → logprob: -10.038528442382812
    10. '=
' → logprob: -10.163528442382812

Token 1960: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01181776262819767
    2. ' [' → logprob: -4.511817932128906
    3. '[p' → logprob: -7.261817932128906
    4. '[ind' → logprob: -10.386817932128906
    5. '[i' → logprob: -11.761817932128906
    6. '[f' → logprob: -12.011817932128906
    7. '[pos' → logprob: -12.761817932128906
    8. '[list' → logprob: -12.886817932128906
    9. '[index' → logprob: -13.136817932128906
    10. '[line' → logprob: -13.136817932128906

Token 1961: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0052342405542731285
    2. ' points' → logprob: -5.255234241485596
    3. '(points' → logprob: -14.880233764648438
    4. '	points' → logprob: -17.755233764648438
    5. 'point' → logprob: -18.505233764648438
    6. '[' → logprob: -18.880233764648438
    7. '   ' → logprob: -19.630233764648438
    8. '.points' → logprob: -20.255233764648438
    9. '_points' → logprob: -20.255233764648438
    10. '
' → logprob: -21.130233764648438

Token 1962: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01895924098789692
    2. '[f' → logprob: -4.018959045410156
    3. 'i' → logprob: -8.393959045410156
    4. '[token' → logprob: -8.768959045410156
    5. 'f' → logprob: -8.893959045410156
    6. '[' → logprob: -9.268959045410156
    7. '```' → logprob: -9.643959045410156
    8. 'token' → logprob: -10.393959045410156
    9. '[index' → logprob: -10.643959045410156
    10. '[idx' → logprob: -11.143959045410156

Token 1963: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6346538662910461
    2. '[f' → logprob: -1.3846538066864014
    3. '[i' → logprob: -2.2596538066864014
    4. ' for' → logprob: -2.7596538066864014
    5. ']' → logprob: -3.1346538066864014
    6. '[' → logprob: -5.7596540451049805
    7. 'f' → logprob: -6.3846540451049805
    8. '[p' → logprob: -6.5096540451049805
    9. '```' → logprob: -7.7596540451049805
    10. '][' → logprob: -8.50965404510498

Token 1964: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5820764303207397
    2. 'for' → logprob: -0.8320764303207397
    3. '[i' → logprob: -5.707076549530029
    4. '           ' → logprob: -6.707076549530029
    5. ']' → logprob: -6.832076549530029
    6. '       ' → logprob: -9.582076072692871
    7. '[' → logprob: -9.582076072692871
    8. '               ' → logprob: -9.707076072692871
    9. 'i' → logprob: -10.082076072692871
    10. '[f' → logprob: -10.082076072692871

Token 1965: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.88418151892256e-05
    2. ' i' → logprob: -9.750059127807617
    3. 'f' → logprob: -15.375059127807617
    4. '
' → logprob: -16.125059127807617
    5. 'in' → logprob: -17.250059127807617
    6. 'face' → logprob: -17.750059127807617
    7. ' ' → logprob: -18.000059127807617
    8. '	i' → logprob: -18.000059127807617
    9. ' in' → logprob: -18.500059127807617
    10. '(i' → logprob: -18.625059127807617

Token 1966: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026565708220005035
    2. ' i' → logprob: -3.6515657901763916
    3. ' in' → logprob: -8.401565551757812
    4. 'in' → logprob: -10.151565551757812
    5. ' ' → logprob: -14.276565551757812
    6. '(i' → logprob: -15.276565551757812
    7. '	i' → logprob: -15.526565551757812
    8. '
' → logprob: -15.651565551757812
    9. '   ' → logprob: -15.776565551757812
    10. '[i' → logprob: -16.026565551757812

Token 1967: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.1928003813372925e-05
    2. ' f' → logprob: -9.875051498413086
    3. 'face' → logprob: -15.625051498413086
    4. 'i' → logprob: -16.375051498413086
    5. '
' → logprob: -16.500051498413086
    6. 'range' → logprob: -16.625051498413086
    7. '	f' → logprob: -17.375051498413086
    8. '[f' → logprob: -17.625051498413086
    9. '   ' → logprob: -18.000051498413086
    10. '(f' → logprob: -18.250051498413086

Token 1968: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04883930832147598
    2. '           ' → logprob: -3.2988393306732178
    3. ']' → logprob: -4.548839092254639
    4. ']
' → logprob: -9.298839569091797
    5. ' ]
' → logprob: -11.423839569091797
    6. '               ' → logprob: -11.548839569091797
    7. ']:
' → logprob: -11.548839569091797
    8. ' if' → logprob: -11.673839569091797
    9. ':]
' → logprob: -12.048839569091797
    10. 'if' → logprob: -12.423839569091797

Token 1969: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009806263260543346
    2. '       ' → logprob: -4.634806156158447
    3. '   ' → logprob: -11.009806632995605
    4. '               ' → logprob: -11.634806632995605
    5. ' if' → logprob: -11.884806632995605
    6. '	       ' → logprob: -12.384806632995605
    7. '          ' → logprob: -12.759806632995605
    8. '
' → logprob: -12.884806632995605
    9. '<|end|>' → logprob: -13.009806632995605
    10. ',' → logprob: -13.884806632995605

Token 1970: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007216130383312702
    2. ' if' → logprob: -5.382215976715088
    3. 'if' (adapté à ' if') → logprob: -6.007215976715088
    4. '       ' → logprob: -9.632216453552246
    5. '   ' → logprob: -9.882216453552246
    6. '               ' → logprob: -11.882216453552246
    7. ' ' → logprob: -12.132216453552246
    8. '	       ' → logprob: -13.882216453552246
    9. '          ' → logprob: -14.632216453552246
    10. '```' → logprob: -15.007216453552246

Token 1971: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.030555518344044685
    2. ' inside' → logprob: -3.530555486679077
    3. 'is' → logprob: -7.280555725097656
    4. ' is' → logprob: -9.155555725097656
    5. '   ' → logprob: -12.405555725097656
    6. '           ' → logprob: -13.280555725097656
    7. 'Inside' → logprob: -13.530555725097656
    8. 'point' → logprob: -14.405555725097656
    9. ' ' → logprob: -14.780555725097656
    10. '       ' → logprob: -15.030555725097656

Token 1972: '_polygon' (ID: 195427)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.15262632071971893
    2. '_polygon' → logprob: -2.0276262760162354
    3. 'poly' → logprob: -5.4026265144348145
    4. '(p' → logprob: -5.9026265144348145
    5. '_poly' → logprob: -6.1526265144348145
    6. 'polygon' → logprob: -8.152626037597656
    7. ' (' → logprob: -9.277626037597656
    8. '(' → logprob: -10.152626037597656
    9. '(pol' → logprob: -10.152626037597656
    10. 'Polygon' → logprob: -10.152626037597656

Token 1973: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.00012809180771000683
    2. 'poly' → logprob: -9.250127792358398
    3. '(' → logprob: -10.500127792358398
    4. ' (' → logprob: -13.375127792358398
    5. '((' → logprob: -14.250127792358398
    6. '(pol' → logprob: -14.375127792358398
    7. ' poly' → logprob: -14.875127792358398
    8. '(
' → logprob: -15.250127792358398
    9. '           ' → logprob: -15.625127792358398
    10. '```' → logprob: -15.625127792358398

Token 1974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012161705642938614
    2. ',(' → logprob: -4.512161731719971
    3. '           ' → logprob: -7.387161731719971
    4. '(' → logprob: -8.387161254882812
    5. ' ,' → logprob: -8.387161254882812
    6. '               ' → logprob: -11.137161254882812
    7. '((' → logprob: -11.762161254882812
    8. '                   ' → logprob: -12.887161254882812
    9. ',p' → logprob: -12.887161254882812
    10. ',
' → logprob: -13.262161254882812

Token 1975: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000913370808120817
    2. ' (' → logprob: -7.000913143157959
    3. '0' → logprob: -13.250913619995117
    4. '   ' → logprob: -16.250913619995117
    5. ' ' → logprob: -17.000913619995117
    6. '           ' → logprob: -17.750913619995117
    7. '       ' → logprob: -19.250913619995117
    8. '  ' → logprob: -19.750913619995117
    9. ')' → logprob: -20.000913619995117
    10. '
' → logprob: -20.250913619995117

Token 1976: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -14.75000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '  ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.250003814697266
    7. '
' → logprob: -17.562503814697266
    8. '``' → logprob: -17.625003814697266
    9. ')' → logprob: -18.062503814697266
    10. '00' → logprob: -18.500003814697266

Token 1977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003368926409166306
    2. '0' → logprob: -8.000336647033691
    3. ',
' → logprob: -14.250336647033691
    4. ' ,' → logprob: -14.625336647033691
    5. '```' → logprob: -15.375336647033691
    6. '   ' → logprob: -17.375337600708008
    7. '``' → logprob: -17.375337600708008
    8. '.' → logprob: -17.750337600708008
    9. '           ' → logprob: -18.000337600708008
    10. '
' → logprob: -18.125337600708008

Token 1978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -19.5
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.375
    6. '  ' → logprob: -20.625
    7. '00' → logprob: -20.875
    8. '``' → logprob: -21.0
    9. '۰' → logprob: -21.3125
    10. ')' → logprob: -21.625

Token 1979: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013996843248605728
    2. ')):
' → logprob: -4.7639970779418945
    3. '):' → logprob: -5.8889970779418945
    4. '           ' → logprob: -6.7639970779418945
    5. '               ' → logprob: -7.1389970779418945
    6. ')' → logprob: -7.7639970779418945
    7. ')):' → logprob: -9.638997077941895
    8. '):
' → logprob: -9.763997077941895
    9. '))' → logprob: -10.513997077941895
    10. '                   ' → logprob: -10.888997077941895

Token 1980: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.350386295001954e-05
    2. '              ' → logprob: -10.500073432922363
    3. '           ' → logprob: -11.250073432922363
    4. '                               ' → logprob: -11.625073432922363
    5. '                   ' → logprob: -11.875073432922363
    6. '```' → logprob: -12.625073432922363
    7. '       ' → logprob: -13.125073432922363
    8. '   ' → logprob: -13.500073432922363
    9. '                       ' → logprob: -13.500073432922363
    10. '                ' → logprob: -14.000073432922363

Token 1981: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010659859515726566
    2. '           ' → logprob: -4.885659694671631
    3. '       ' → logprob: -6.885659694671631
    4. 'tr' → logprob: -7.135659694671631
    5. '   ' → logprob: -8.260660171508789
    6. '                   ' → logprob: -8.260660171508789
    7. ' trapped' → logprob: -8.385660171508789
    8. '```' → logprob: -8.760660171508789
    9. '	       ' → logprob: -9.635660171508789
    10. '	           ' → logprob: -10.010660171508789

Token 1982: ' A' (ID: 355)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.593034029006958
    2. '               ' → logprob: -0.843034029006958
    3. ' trapped' → logprob: -4.593033790588379
    4. 'if' → logprob: -5.718033790588379
    5. '           ' → logprob: -6.718033790588379
    6. 'print' → logprob: -6.843033790588379
    7. '#' → logprob: -7.718033790588379
    8. ' if' → logprob: -8.218033790588379
    9. '       ' → logprob: -8.718033790588379
    10. '                   ' → logprob: -9.343033790588379

Token 1983: ' face' (ID: 4950)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2406882047653198
    2. 'print' → logprob: -1.4906882047653198
    3. ' trapped' → logprob: -1.4906882047653198
    4. 'tr' → logprob: -1.7406882047653198
    5. ' print' → logprob: -4.115688323974609
    6. '              ' → logprob: -4.490688323974609
    7. '           ' → logprob: -4.990688323974609
    8. ' if' → logprob: -5.115688323974609
    9. '#' → logprob: -5.365688323974609
    10. 'if' → logprob: -5.615688323974609

Token 1984: ' polygon' (ID: 65081)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0694635659456253
    2. '#' → logprob: -3.8194634914398193
    3. ' that' → logprob: -4.694463729858398
    4. 'that' → logprob: -5.069463729858398
    5. ' is' → logprob: -5.694463729858398
    6. ''s' → logprob: -5.819463729858398
    7. ' containing' → logprob: -5.819463729858398
    8. 'contains' → logprob: -5.944463729858398
    9. ' contains' → logprob: -6.069463729858398
    10. '```' → logprob: -6.319463729858398

Token 1985: ' contains' (ID: 8895)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05185076594352722
    2. ' =' → logprob: -4.42685079574585
    3. ' is' → logprob: -4.92685079574585
    4. ' has' → logprob: -5.17685079574585
    5. '#' → logprob: -5.80185079574585
    6. '           ' → logprob: -5.92685079574585
    7. 'points' → logprob: -6.05185079574585
    8. ',' → logprob: -6.42685079574585
    9. ' with' → logprob: -6.55185079574585
    10. 'vertices' → logprob: -6.80185079574585

Token 1986: ' the' (ID: 290)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.0483151376247406
    2. ' trapped' → logprob: -3.9233150482177734
    3. 'the' → logprob: -4.173315048217773
    4. 'f' → logprob: -6.548315048217773
    5. '               ' → logprob: -6.673315048217773
    6. ' the' → logprob: -6.673315048217773
    7. '#' → logprob: -6.923315048217773
    8. 'origin' → logprob: -7.048315048217773
    9. 'print' → logprob: -7.048315048217773
    10. '0' → logprob: -7.173315048217773

Token 1987: ' monster' (ID: 36286)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.40337714552879333
    2. ' origin' → logprob: -1.6533771753311157
    3. 'tr' → logprob: -2.528377056121826
    4. 'print' → logprob: -4.403377056121826
    5. ' trapped' → logprob: -5.028377056121826
    6. 'token' → logprob: -5.028377056121826
    7. 'code' → logprob: -5.403377056121826
    8. '0' → logprob: -5.528377056121826
    9. ' code' → logprob: -5.528377056121826
    10. 'trap' → logprob: -5.778377056121826

Token 1988: ' point' (ID: 2438)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005068036844022572
    2. '           ' → logprob: -8.125506401062012
    3. ',' → logprob: -9.250506401062012
    4. '<|end|>' → logprob: -10.250506401062012
    5. '                   ' → logprob: -10.500506401062012
    6. ' and' → logprob: -10.875506401062012
    7. '
' → logprob: -11.625506401062012
    8. '              ' → logprob: -12.750506401062012
    9. '#' → logprob: -13.125506401062012
    10. '       ' → logprob: -13.250506401062012

Token 1989: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004427051462698728
    2. ',' → logprob: -8.250442504882812
    3. '
' → logprob: -9.500442504882812
    4. '           ' → logprob: -10.500442504882812
    5. '                   ' → logprob: -10.875442504882812
    6. ' and' → logprob: -11.000442504882812
    7. '<|end|>' → logprob: -11.125442504882812
    8. ':
' → logprob: -12.000442504882812
    9. ',
' → logprob: -12.375442504882812
    10. '<|end|>' → logprob: -12.750442504882812

Token 1990: ' monster' (ID: 36286)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07470736652612686
    2. ' trapped' → logprob: -2.699707269668579
    3. 'print' → logprob: -5.949707508087158
    4. '               ' → logprob: -6.824707508087158
    5. '#' → logprob: -8.07470703125
    6. 'if' → logprob: -8.19970703125
    7. '           ' → logprob: -8.69970703125
    8. 'trap' → logprob: -9.32470703125
    9. '
' → logprob: -9.44970703125
    10. '       ' → logprob: -10.19970703125

Token 1991: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006502442411147058
    2. '           ' → logprob: -7.625650405883789
    3. '                   ' → logprob: -9.375650405883789
    4. '              ' → logprob: -11.125650405883789
    5. '
' → logprob: -11.500650405883789
    6. '	           ' → logprob: -12.000650405883789
    7. '<|end|>' → logprob: -12.250650405883789
    8. 'print' → logprob: -12.375650405883789
    9. 'import' → logprob: -12.375650405883789
    10. 'return' → logprob: -12.750650405883789

Token 1992: ' inside' (ID: 6772)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.01644381694495678
    2. '"' → logprob: -4.391443729400635
    3. ' trapped' → logprob: -5.891443729400635
    4. 'True' → logprob: -7.641443729400635
    5. '<tr' → logprob: -9.266444206237793
    6. '
' → logprob: -9.391444206237793
    7. '           ' → logprob: -9.516444206237793
    8. '   ' → logprob: -9.641444206237793
    9. 'inside' → logprob: -9.891444206237793
    10. '_tr' → logprob: -10.141444206237793

Token 1993: ' a' (ID: 261)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.1186566047836095e-05
    2. ' trapped' → logprob: -11.875031471252441
    3. 'tr' → logprob: -12.125031471252441
    4. '
' → logprob: -12.625031471252441
    5. '           ' → logprob: -12.625031471252441
    6. '#' → logprob: -13.250031471252441
    7. '              ' → logprob: -13.250031471252441
    8. '```' → logprob: -13.250031471252441
    9. '                   ' → logprob: -13.375031471252441
    10. '			' → logprob: -13.500031471252441

Token 1994: ' polygon' (ID: 65081)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -1.3517917394638062
    2. 'polygon' → logprob: -1.8517917394638062
    3. 'face' → logprob: -2.1017918586730957
    4. 'tr' → logprob: -2.2267918586730957
    5. ' trapped' → logprob: -2.7267918586730957
    6. 'wall' → logprob: -3.1017918586730957
    7. ' polygon' → logprob: -3.1017918586730957
    8. 'blocked' → logprob: -3.2267918586730957
    9. 'closed' → logprob: -3.2267918586730957
    10. 'hole' → logprob: -3.3517918586730957

Token 1995: ' formed' (ID: 20680)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019066639652010053
    2. '                   ' → logprob: -9.500190734863281
    3. '<|end|>' → logprob: -10.125190734863281
    4. '
' → logprob: -10.500190734863281
    5. ',' → logprob: -10.750190734863281
    6. '           ' → logprob: -11.500190734863281
    7. '<|end|>' → logprob: -12.750190734863281
    8. ' and' → logprob: -13.000190734863281
    9. '#' → logprob: -13.375190734863281
    10. '              ' → logprob: -13.375190734863281

Token 1996: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.203409844194539e-05
    2. ' by' → logprob: -11.000041961669922
    3. ',' → logprob: -12.000041961669922
    4. 'by' → logprob: -12.500041961669922
    5. ' of' → logprob: -13.125041961669922
    6. 'import' → logprob: -13.625041961669922
    7. 'def' → logprob: -13.750041961669922
    8. 'that' → logprob: -13.750041961669922
    9. '
' → logprob: -13.875041961669922
    10. '       ' → logprob: -14.000041961669922

Token 1997: ' edges' (ID: 22569)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4511141777038574
    2. 'the' → logprob: -1.0761141777038574
    3. 'that' → logprob: -4.826114177703857
    4. 'these' → logprob: -5.326114177703857
    5. ' lines' → logprob: -5.451114177703857
    6. 'f' → logprob: -6.951114177703857
    7. ' the' → logprob: -6.951114177703857
    8. 'this' → logprob: -7.201114177703857
    9. 'line' → logprob: -7.951114177703857
    10. 'those' → logprob: -8.076114654541016

Token 1998: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.805981972021982e-05
    2. '
' → logprob: -10.37509822845459
    3. '           ' → logprob: -10.37509822845459
    4. '                   ' → logprob: -11.25009822845459
    5. ',' → logprob: -11.62509822845459
    6. '<|end|>' → logprob: -12.00009822845459
    7. '              ' → logprob: -13.50009822845459
    8. 'import' → logprob: -14.00009822845459
    9. '       ' → logprob: -14.00009822845459
    10. ' and' → logprob: -14.50009822845459

Token 1999: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011298561468720436
    2. '                   ' → logprob: -4.886298656463623
    3. '           ' → logprob: -5.636298656463623
    4. ',' → logprob: -10.636298179626465
    5. '```' → logprob: -10.886298179626465
    6. ' if' → logprob: -11.011298179626465
    7. '       ' → logprob: -11.511298179626465
    8. '                       ' → logprob: -11.511298179626465
    9. 'if' → logprob: -11.886298179626465
    10. '<|end|>' → logprob: -12.511298179626465

Token 2000: ' trapped' (ID: 58304)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19837406277656555
    2. ' trapped' → logprob: -2.198374032974243
    3. 'tr' → logprob: -2.698374032974243
    4. '           ' → logprob: -7.198374271392822
    5. '                   ' → logprob: -8.323373794555664
    6. '```' → logprob: -8.823373794555664
    7. 'if' → logprob: -9.198373794555664
    8. 'trap' → logprob: -9.448373794555664
    9. '	tr' → logprob: -10.073373794555664
    10. ' if' → logprob: -10.198373794555664

Token 2001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034571077674627304
    2. '=True' → logprob: -3.9095711708068848
    3. ' =' → logprob: -4.284571170806885
    4. '=
' → logprob: -10.159570693969727
    5. '=False' → logprob: -10.284570693969727
    6. '           ' → logprob: -10.659570693969727
    7. '=true' → logprob: -11.284570693969727
    8. '               ' → logprob: -11.909570693969727
    9. '<|end|>' → logprob: -12.159570693969727
    10. '==' → logprob: -12.659570693969727

Token 2002: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. '(True' → logprob: -18.501171112060547
    5. 'not' → logprob: -18.876171112060547
    6. '               ' → logprob: -18.876171112060547
    7. '=True' → logprob: -19.251171112060547
    8. 'False' → logprob: -19.876171112060547
    9. '           ' → logprob: -20.001171112060547
    10. '       ' → logprob: -20.251171112060547

Token 2003: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4060561776859686e-05
    2. '
' → logprob: -10.625043869018555
    3. '       ' → logprob: -11.625043869018555
    4. '           ' → logprob: -12.375043869018555
    5. ' if' → logprob: -13.500043869018555
    6. '			' → logprob: -13.625043869018555
    7. 'if' → logprob: -14.000043869018555
    8. 'break' → logprob: -14.125043869018555
    9. '		       ' → logprob: -14.750043869018555
    10. '                   ' → logprob: -14.750043869018555

Token 2004: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019818067084997892
    2. '           ' → logprob: -6.501981735229492
    3. '       ' → logprob: -7.876981735229492
    4. 'if' → logprob: -9.876981735229492
    5. '                   ' → logprob: -11.126981735229492
    6. '			' → logprob: -11.626981735229492
    7. ' if' → logprob: -12.251981735229492
    8. 'continue' → logprob: -12.626981735229492
    9. '   ' → logprob: -12.751981735229492
    10. 'break' → logprob: -12.876981735229492

Token 2005: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03563274070620537
    2. '           ' → logprob: -3.410632848739624
    3. 'break' (adapté à ' break') → logprob: -6.535632610321045
    4. '       ' → logprob: -8.285633087158203
    5. '		' → logprob: -9.535633087158203
    6. '			' → logprob: -9.785633087158203
    7. ' break' → logprob: -10.035633087158203
    8. '	' → logprob: -10.535633087158203
    9. '	       ' → logprob: -10.785633087158203
    10. '		       ' → logprob: -10.910633087158203

Token 2006: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010970714502036572
    2. '   ' → logprob: -4.885970592498779
    3. '
' → logprob: -5.885970592498779
    4. ' if' → logprob: -8.635971069335938
    5. '<|end|>' → logprob: -8.885971069335938
    6. 'if' → logprob: -9.010971069335938
    7. '           ' → logprob: -10.385971069335938
    8. '    
' → logprob: -10.760971069335938
    9. '        
' → logprob: -10.885971069335938
    10. '```' → logprob: -11.010971069335938

Token 2007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0401194803416729
    2. '   ' → logprob: -3.4151194095611572
    3. '
' → logprob: -5.790119647979736
    4. 'if' → logprob: -6.540119647979736
    5. ' if' → logprob: -7.540119647979736
    6. '```' → logprob: -7.665119647979736
    7. '<|end|>' → logprob: -8.415119171142578
    8. '    
' → logprob: -8.915119171142578
    9. '           ' → logprob: -9.165119171142578
    10. 'If' → logprob: -9.415119171142578

Token 2008: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17434090375900269
    2. '   ' → logprob: -2.2993409633636475
    3. 'if' (adapté à ' if') → logprob: -2.9243409633636475
    4. ' if' → logprob: -5.674340724945068
    5. '
' → logprob: -6.174340724945068
    6. '```' → logprob: -7.924340724945068
    7. 'print' → logprob: -9.549341201782227
    8. '``' → logprob: -12.549341201782227
    9. '        
' → logprob: -12.674341201782227
    10. '           ' → logprob: -13.174341201782227

Token 2009: ' trapped' (ID: 58304)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.1631566286087036
    2. ' trapped' → logprob: -1.9131566286087036
    3. 'not' → logprob: -6.038156509399414
    4. ' not' → logprob: -7.538156509399414
    5. '   ' → logprob: -12.413156509399414
    6. 'trap' → logprob: -12.788156509399414
    7. '_tr' → logprob: -14.163156509399414
    8. ' ' → logprob: -14.288156509399414
    9. 'Tr' → logprob: -14.663156509399414
    10. '	tr' → logprob: -15.038156509399414

Token 2010: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10421238094568253
    2. '           ' → logprob: -2.8542122840881348
    3. ':
' → logprob: -3.2292122840881348
    4. '==' → logprob: -6.729212284088135
    5. '=' → logprob: -8.104212760925293
    6. '       ' → logprob: -9.229212760925293
    7. ' ==' → logprob: -9.854212760925293
    8. ',' → logprob: -11.229212760925293
    9. 'print' → logprob: -11.229212760925293
    10. '=True' → logprob: -11.354212760925293

Token 2011: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030623627826571465
    2. 'print' → logprob: -3.5306236743927
    3. '       ' → logprob: -7.655623435974121
    4. '```' → logprob: -8.405623435974121
    5. '   ' → logprob: -9.155623435974121
    6. ' print' → logprob: -9.780623435974121
    7. '	       ' → logprob: -11.780623435974121
    8. '	print' → logprob: -13.655623435974121
    9. '
' → logprob: -13.780623435974121
    10. '		' → logprob: -13.905623435974121

Token 2012: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000330220878822729
    2. '       ' → logprob: -8.750329971313477
    3. '           ' → logprob: -8.750329971313477
    4. ' print' → logprob: -11.750329971313477
    5. '```' → logprob: -12.250329971313477
    6. '	print' → logprob: -15.250329971313477
    7. '   ' → logprob: -16.375329971313477
    8. '``' → logprob: -16.500329971313477
    9. '
' → logprob: -17.000329971313477
    10. '               ' → logprob: -17.625329971313477

Token 2013: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16148641705513
    2. '"' → logprob: -2.0364863872528076
    3. '('' → logprob: -5.161486625671387
    4. 'YES' → logprob: -5.411486625671387
    5. '(' → logprob: -6.286486625671387
    6. 'TR' → logprob: -7.161486625671387
    7. 'Yes' → logprob: -7.161486625671387
    8. 'tr' → logprob: -7.286486625671387
    9. '"H' → logprob: -7.536486625671387
    10. '"W' → logprob: -7.661486625671387

Token 2014: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.2093488872051239
    2. 'TR' → logprob: -2.5843489170074463
    3. 'NO' → logprob: -2.5843489170074463
    4. 'Yes' → logprob: -4.334348678588867
    5. 'Tr' → logprob: -4.584348678588867
    6. 'yes' → logprob: -5.709348678588867
    7. 'S' → logprob: -6.584348678588867
    8. 'tr' → logprob: -6.584348678588867
    9. 'INS' → logprob: -7.084348678588867
    10. 'Monster' → logprob: -7.209348678588867

Token 2015: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.038060542196035385
    2. '")' → logprob: -3.288060426712036
    3. ')
' → logprob: -11.788060188293457
    4. '")
' → logprob: -11.788060188293457
    5. ')")
' → logprob: -13.413060188293457
    6. 'else' → logprob: -13.913060188293457
    7. ')' → logprob: -13.913060188293457
    8. '");' → logprob: -16.163061141967773
    9. '"' → logprob: -16.288061141967773
    10. '')
' → logprob: -16.913061141967773

Token 2016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044665876775979996
    2. 'else' → logprob: -3.169665813446045
    3. ' else' → logprob: -6.419665813446045
    4. '	' → logprob: -11.169666290283203
    5. '   ' → logprob: -11.419666290283203
    6. '	else' → logprob: -12.544666290283203
    7. '<|end|>' → logprob: -12.794666290283203
    8. '           ' → logprob: -13.669666290283203
    9. '```' → logprob: -14.044666290283203
    10. '<|end|>' → logprob: -14.669666290283203

Token 2017: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5789592266082764
    2. '       ' → logprob: -0.8289592266082764
    3. ' else' → logprob: -5.8289594650268555
    4. '	' → logprob: -10.078959465026855
    5. '	else' → logprob: -10.578959465026855
    6. '   ' → logprob: -12.703959465026855
    7. '```' → logprob: -13.953959465026855
    8. 'elser' → logprob: -14.578959465026855
    9. '	   ' → logprob: -14.703959465026855
    10. '           ' → logprob: -15.078959465026855

Token 2018: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32841551303863525
    2. ':' → logprob: -1.7034155130386353
    3. ':
' → logprob: -2.3284153938293457
    4. '():
' → logprob: -9.453415870666504
    5. 'print' → logprob: -9.703415870666504
    6. ' :' → logprob: -10.078415870666504
    7. '       ' → logprob: -10.078415870666504
    8. ' :
' → logprob: -10.203415870666504
    9. '          ' → logprob: -10.328415870666504
    10. ' print' → logprob: -10.328415870666504

Token 2019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48327332735061646
    2. ' print' → logprob: -1.4832732677459717
    3. 'print' → logprob: -1.8582732677459717
    4. '       ' → logprob: -8.73327350616455
    5. '	       ' → logprob: -9.60827350616455
    6. '```' → logprob: -9.85827350616455
    7. '		' → logprob: -10.35827350616455
    8. '   ' → logprob: -10.73327350616455
    9. '	print' → logprob: -10.85827350616455
    10. ' ' → logprob: -11.10827350616455

Token 2020: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0206720617134124e-05
    2. ' print' → logprob: -11.50001049041748
    3. '           ' → logprob: -19.000009536743164
    4. '	print' → logprob: -19.000009536743164
    5. '(print' → logprob: -19.500009536743164
    6. '       ' → logprob: -19.625009536743164
    7. '```' → logprob: -20.625009536743164
    8. '   ' → logprob: -20.625009536743164
    9. '.print' → logprob: -21.125009536743164
    10. 'printf' → logprob: -22.750009536743164

Token 2021: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0009142052149400115
    2. '(' → logprob: -7.000914096832275
    3. '()' → logprob: -13.500914573669434
    4. '('' → logprob: -14.625914573669434
    5. '("")' → logprob: -14.625914573669434
    6. '("("' → logprob: -14.625914573669434
    7. '("""' → logprob: -18.375913619995117
    8. '("(' → logprob: -18.500913619995117
    9. '(""' → logprob: -18.625913619995117
    10. '(`' → logprob: -19.125913619995117

Token 2022: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -4.320199877838604e-07
    2. ' no' → logprob: -15.25
    3. '"' → logprob: -15.75
    4. '"No' → logprob: -19.0
    5. 'not' → logprob: -19.875
    6. 'No' → logprob: -20.0
    7. 'NO' → logprob: -20.125
    8. '	no' → logprob: -20.25
    9. '")' → logprob: -20.375
    10. 'safe' → logprob: -20.5

Token 2023: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.010779095813632011
    2. ')' → logprob: -5.010778903961182
    3. ')")' → logprob: -5.510778903961182
    4. '")
' → logprob: -12.01077938079834
    5. '}")' → logprob: -12.76077938079834
    6. ')")
' → logprob: -13.13577938079834
    7. ')"' → logprob: -14.26077938079834
    8. '')' → logprob: -15.63577938079834
    9. '```' → logprob: -15.63577938079834
    10. ')
' → logprob: -15.76077938079834

Token 2024: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.153315931558609
    2. '<|end|>' → logprob: -2.153316020965576
    3. '```' → logprob: -4.028316020965576
    4. '#' → logprob: -5.278316020965576
    5. ' if' → logprob: -5.903316020965576
    6. '
' → logprob: -8.278315544128418
    7. '<|end|>' → logprob: -10.278315544128418
    8. '...' → logprob: -10.278315544128418
    9. 'If' → logprob: -10.903315544128418
    10. '[' → logprob: -11.528315544128418

Token 2025: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0019291093340143561
    2. '__' → logprob: -6.25192928314209
    3. '_' → logprob: -15.25192928314209
    4. ' _' → logprob: -15.50192928314209
    5. ' ___' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.251928329467773
    7. ' ' → logprob: -17.751928329467773
    8. '_name' → logprob: -18.376928329467773
    9. '___' → logprob: -18.876928329467773
    10. ' ____' → logprob: -19.376928329467773

Token 2026: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002120757708325982
    2. 'if' → logprob: -7.5021209716796875
    3. ' __' → logprob: -7.7521209716796875
    4. '==' → logprob: -8.127120971679688
    5. '.__' → logprob: -8.252120971679688
    6. ' ==' → logprob: -8.752120971679688
    7. '__.__' → logprob: -8.752120971679688
    8. '```' → logprob: -9.377120971679688
    9. '[' → logprob: -10.127120971679688
    10. '__":
' → logprob: -10.627120971679688

Token 2027: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010996110504493117
    2. '__.__' → logprob: -7.251099586486816
    3. '==' → logprob: -8.626099586486816
    4. '=="' → logprob: -9.501099586486816
    5. '__('' → logprob: -10.376099586486816
    6. '```' → logprob: -10.501099586486816
    7. '__.' → logprob: -10.626099586486816
    8. '__["' → logprob: -11.001099586486816
    9. '__("' → logprob: -11.751099586486816
    10. '=='' → logprob: -11.876099586486816

Token 2028: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13270489871501923
    2. '==' → logprob: -2.132704973220825
    3. '=="' → logprob: -5.507704734802246
    4. '=='' → logprob: -6.757704734802246
    5. ' ==' → logprob: -7.632704734802246
    6. '__.__' → logprob: -10.632704734802246
    7. '==
' → logprob: -12.132704734802246
    8. '```' → logprob: -12.382704734802246
    9. '=' → logprob: -12.507704734802246
    10. '_' → logprob: -12.757704734802246

Token 2029: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12701451778411865
    2. ''' → logprob: -2.127014636993408
    3. '__' → logprob: -9.37701416015625
    4. ' "__' → logprob: -13.62701416015625
    5. ' '__' → logprob: -15.87701416015625
    6. '"name' → logprob: -16.12701416015625
    7. ''"' → logprob: -16.25201416015625
    8. 'main' → logprob: -17.12701416015625
    9. ''name' → logprob: -17.25201416015625
    10. '   ' → logprob: -17.25201416015625

Token 2030: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014171505346894264
    2. '__' → logprob: -4.264171600341797
    3. '_main' → logprob: -12.389171600341797
    4. 'name' → logprob: -12.514171600341797
    5. ' main' → logprob: -16.514171600341797
    6. '"' → logprob: -17.514171600341797
    7. '__
' → logprob: -17.639171600341797
    8. '___' → logprob: -17.639171600341797
    9. ''' → logprob: -18.389171600341797
    10. '____' → logprob: -18.514171600341797

Token 2031: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.010114200413227081
    2. '__' → logprob: -4.6351141929626465
    3. '__":
' → logprob: -8.010114669799805
    4. '('__' → logprob: -12.010114669799805
    5. '__:' → logprob: -12.135114669799805
    6. '():
' → logprob: -12.135114669799805
    7. '_' → logprob: -13.010114669799805
    8. ':' → logprob: -13.260114669799805
    9. '':' → logprob: -13.635114669799805
    10. '```' → logprob: -14.010114669799805

Token 2032: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.869639476761222e-05
    2. '	main' → logprob: -10.500039100646973
    3. ' main' → logprob: -11.500039100646973
    4. '   ' → logprob: -14.375039100646973
    5. '_main' → logprob: -15.500039100646973
    6. '(main' → logprob: -16.125038146972656
    7. '```' → logprob: -17.125038146972656
    8. 'Main' → logprob: -18.500038146972656
    9. '
' → logprob: -19.000038146972656
    10. 'mainwindow' → logprob: -19.125038146972656

Token 2033: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -21.5
    4. '_main' → logprob: -24.25
    5. '   ' → logprob: -24.25
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -26.25
    8. 'Main' → logprob: -27.25
    9. 'mainwindow' → logprob: -28.875
    10. 'import' → logprob: -28.875

Token 2034: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2032
Tokens correctement prédits (1ère position, stricte): 841
Tokens correctement prédits (1ère position, avec adaptation): 907
Tokens correctement prédits (top 10): 1730
Précision stricte (1ère position): 41.39%
Précision adaptée (1ère position): 44.64%
Précision (top 10): 85.14%
================================================================================
