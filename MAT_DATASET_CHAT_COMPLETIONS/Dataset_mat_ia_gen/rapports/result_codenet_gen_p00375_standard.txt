================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
F = int(input())
C = (F - 30) // 2
print(C)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'F' (ID: 37)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00039349604048766196
    2. '('' → logprob: -8.750393867492676
    3. 'F' → logprob: -9.625393867492676
    4. '(F' → logprob: -10.000393867492676
    5. ''' → logprob: -10.375393867492676
    6. ' (' → logprob: -10.375393867492676
    7. ')' → logprob: -11.375393867492676
    8. '[' → logprob: -12.125393867492676
    9. '32' → logprob: -12.125393867492676
    10. '(
' → logprob: -12.125393867492676

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1023668572306633
    2. ')' → logprob: -2.4773669242858887
    3. '()' → logprob: -4.477366924285889
    4. '())' → logprob: -6.727366924285889
    5. '(
' → logprob: -8.72736644744873
    6. '('' → logprob: -9.60236644744873
    7. '(

' → logprob: -9.60236644744873
    8. '("("' → logprob: -9.60236644744873
    9. '(""))' → logprob: -9.85236644744873
    10. '(()' → logprob: -9.97736644744873

Token 5: 'C' (ID: 34)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.720528244972229
    2. '%' → logprob: -1.845528244972229
    3. '+' → logprob: -2.4705281257629395
    4. 'for' → logprob: -2.4705281257629395
    5. '*' → logprob: -2.5955281257629395
    6. 'i' → logprob: -2.8455281257629395
    7. 's' → logprob: -4.2205281257629395
    8. '#' → logprob: -4.8455281257629395
    9. ')' → logprob: -4.9705281257629395
    10. '>' → logprob: -4.9705281257629395

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3847906291484833
    2. '+' → logprob: -2.0097906589508057
    3. ' =' → logprob: -2.5097906589508057
    4. '*' → logprob: -2.7597906589508057
    5. '/' → logprob: -4.259790420532227
    6. '_' → logprob: -5.384790420532227
    7. '-' → logprob: -5.759790420532227
    8. '(' → logprob: -6.259790420532227
    9. ')' → logprob: -6.384790420532227
    10. '.' → logprob: -6.384790420532227

Token 7: ' (' (ID: 350)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.42387786507606506
    2. ' (' → logprob: -1.5488778352737427
    3. 'F' → logprob: -2.2988779544830322
    4. '(F' → logprob: -3.7988779544830322
    5. ' ' → logprob: -5.298877716064453
    6. '(' → logprob: -5.673877716064453
    7. 'int' → logprob: -6.798877716064453
    8. '32' → logprob: -8.548877716064453
    9. ' int' → logprob: -9.173877716064453
    10. '0' → logprob: -9.673877716064453

Token 8: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.03966449201107025
    2. ' F' → logprob: -4.164664268493652
    3. '5' → logprob: -4.414664268493652
    4. '(F' → logprob: -5.164664268493652
    5. ' (' → logprob: -6.039664268493652
    6. ' ' → logprob: -6.539664268493652
    7. '9' → logprob: -7.039664268493652
    8. '(' → logprob: -7.289664268493652
    9. ')' → logprob: -9.914664268493652
    10. '((' → logprob: -11.289664268493652

Token 9: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12705284357070923
    2. '-' → logprob: -2.1270527839660645
    3. ' ' → logprob: -9.627053260803223
    4. '```' → logprob: -10.502053260803223
    5. ' −' → logprob: -11.627053260803223
    6. '−' → logprob: -12.002053260803223
    7. ' ' → logprob: -12.127053260803223
    8. ')' → logprob: -13.127053260803223
    9. ' ```' → logprob: -13.252053260803223
    10. '"' → logprob: -13.502053260803223

Token 10: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.34859198331832886
    2. ' ' → logprob: -1.2235920429229736
    3. ')' → logprob: -10.223591804504395
    4. '	' → logprob: -10.598591804504395
    5. '-' → logprob: -11.348591804504395
    6. ' ' → logprob: -11.661091804504395
    7. '3' → logprob: -11.848591804504395
    8. '```' → logprob: -12.036091804504395
    9. '35' → logprob: -12.098591804504395
    10. '  ' → logprob: -12.223591804504395

Token 11: '30' (ID: 1130)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.002043913584202528
    2. ' ' → logprob: -6.252043724060059
    3. '3' → logprob: -9.502043724060059
    4. '320' → logprob: -12.127043724060059
    5. '  ' → logprob: -12.502043724060059
    6. ')' → logprob: -12.564543724060059
    7. '   ' → logprob: -12.814543724060059
    8. '-' → logprob: -12.939543724060059
    9. '33' → logprob: -13.064543724060059
    10. '30' → logprob: -13.127043724060059

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038686346262693405
    2. ' )' → logprob: -3.2886862754821777
    3. '5' → logprob: -7.913686275482178
    4. '0' → logprob: -9.538686752319336
    5. '4' → logprob: -9.663686752319336
    6. '1' → logprob: -10.413686752319336
    7. ')*' → logprob: -10.663686752319336
    8. '	' → logprob: -11.038686752319336
    9. ' ' → logprob: -11.288686752319336
    10. '`)' → logprob: -11.413686752319336

Token 13: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3873997628688812
    2. ')' → logprob: -2.512399673461914
    3. '*' → logprob: -3.012399673461914
    4. '5' → logprob: -3.137399673461914
    5. '20' → logprob: -3.137399673461914
    6. '0' → logprob: -3.887399673461914
    7. '2' → logprob: -4.137399673461914
    8. '4' → logprob: -4.387399673461914
    9. '40' → logprob: -4.762399673461914
    10. ' ' → logprob: -5.262399673461914

Token 14: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.24179228907451e-05
    2. ' ' → logprob: -9.750061988830566
    3. '20' → logprob: -13.125061988830566
    4. '3' → logprob: -14.375061988830566
    5. '  ' → logprob: -14.625061988830566
    6. '6' → logprob: -14.875061988830566
    7. '   ' → logprob: -15.375061988830566
    8. '	' → logprob: -16.000062942504883
    9. '```' → logprob: -16.375062942504883
    10. '２' → logprob: -16.875062942504883

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. '20' → logprob: -13.500003814697266
    3. '3' → logprob: -14.125003814697266
    4. ' ' → logprob: -14.375003814697266
    5. '6' → logprob: -16.250003814697266
    6. '``' → logprob: -16.250003814697266
    7. '  ' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '```' → logprob: -16.937503814697266
    10. '２' → logprob: -17.250003814697266

Token 16: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0042848424054682255
    2. ' print' → logprob: -6.004284858703613
    3. ')' → logprob: -7.129284858703613
    4. '#' → logprob: -7.754284858703613
    5. '\n' → logprob: -8.629284858703613
    6. '<|end|>' → logprob: -8.879284858703613
    7. '#print' → logprob: -9.379284858703613
    8. ' ' → logprob: -10.004284858703613
    9. '```' → logprob: -10.254284858703613
    10. '.print' → logprob: -11.254284858703613

Token 18: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011131414212286472
    2. '(C' → logprob: -4.511131286621094
    3. '('' → logprob: -10.511131286621094
    4. '((' → logprob: -10.761131286621094
    5. '(F' → logprob: -11.011131286621094
    6. '()' → logprob: -11.636131286621094
    7. '("("' → logprob: -12.511131286621094
    8. '("' → logprob: -13.261131286621094
    9. '(f' → logprob: -13.261131286621094
    10. '(`' → logprob: -14.011131286621094

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '))' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.62500286102295
    4. ')`' → logprob: -17.000001907348633
    5. ')
' → logprob: -17.250001907348633
    6. '')' → logprob: -17.375001907348633
    7. '）' → logprob: -18.125001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '}' → logprob: -18.875001907348633
    10. ')

' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 17
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 12
Précision stricte (1ère position): 35.29%
Précision adaptée (1ère position): 35.29%
Précision (top 10): 70.59%
================================================================================
