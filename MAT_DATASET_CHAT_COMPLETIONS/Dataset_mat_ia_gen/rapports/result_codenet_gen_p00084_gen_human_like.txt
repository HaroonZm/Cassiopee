================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

text = sys.stdin.readline().strip()
for ch in ['.', ',']:
    text = text.replace(ch, ' ')
words = text.split()
result = [w for w in words if 3 <= len(w) <= 6]
print(' '.join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'text' (ID: 919)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044441498816013336
    2. '\n' → logprob: -3.9194414615631104
    3. 'import' → logprob: -4.5444416999816895
    4. '<|end|>' → logprob: -5.0444416999816895
    5. '\' → logprob: -6.4194416999816895
    6. 'newline' → logprob: -6.7944416999816895
    7. '<|end|>' → logprob: -7.2944416999816895
    8. '' → logprob: -7.6694416999816895
    9. '[' → logprob: -7.6694416999816895
    10. ',' → logprob: -7.9194416999816895

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02233029156923294
    2. '=' → logprob: -4.022330284118652
    3. '[' → logprob: -6.647330284118652
    4. ')' → logprob: -6.897330284118652
    5. '_' → logprob: -7.397330284118652
    6. ' =' → logprob: -7.772330284118652
    7. '(' → logprob: -7.897330284118652
    8. ',' → logprob: -8.897330284118652
    9. ' ' → logprob: -9.647330284118652
    10. ':' → logprob: -9.772330284118652

Token 5: ' sys' (ID: 12228)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24076266586780548
    2. ''' → logprob: -2.240762710571289
    3. ' "' → logprob: -2.865762710571289
    4. ' ' → logprob: -3.990762710571289
    5. '""' → logprob: -4.740762710571289
    6. 'input' → logprob: -5.240762710571289
    7. ' '' → logprob: -5.490762710571289
    8. ' ""' → logprob: -5.615762710571289
    9. ' input' → logprob: -5.615762710571289
    10. ' sys' → logprob: -6.240762710571289

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005674490821547806
    2. '.argv' → logprob: -8.500567436218262
    3. '.stdin' → logprob: -9.375567436218262
    4. '.stdout' → logprob: -9.875567436218262
    5. '.readline' → logprob: -9.875567436218262
    6. ' .' → logprob: -10.000567436218262
    7. '.path' → logprob: -10.250567436218262
    8. '.import' → logprob: -10.375567436218262
    9. '.user' → logprob: -11.625567436218262
    10. '.exit' → logprob: -11.625567436218262

Token 7: '.readline' (ID: 74673)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.48043394088745117
    2. '.readline' → logprob: -0.9804339408874512
    3. '.' → logprob: -5.105433940887451
    4. '.readlines' → logprob: -8.60543441772461
    5. 'read' → logprob: -9.85543441772461
    6. '.Read' → logprob: -10.60543441772461
    7. '.write' → logprob: -11.73043441772461
    8. '_read' → logprob: -13.23043441772461
    9. ' .' → logprob: -13.85543441772461
    10. ' readline' → logprob: -14.48043441772461

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4743799567222595
    2. '(' → logprob: -0.9743799567222595
    3. ')' → logprob: -9.349379539489746
    4. '(
' → logprob: -9.474379539489746
    5. '().' → logprob: -10.724379539489746
    6. '(

' → logprob: -10.849379539489746
    7. '`()' → logprob: -10.974379539489746
    8. ''s' → logprob: -11.349379539489746
    9. '.' → logprob: -11.474379539489746
    10. '```' → logprob: -11.599379539489746

Token 9: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.004079112783074379
    2. 'rstrip' → logprob: -5.504079341888428
    3. 'replace' → logprob: -15.12907886505127
    4. ' strip' → logprob: -15.50407886505127
    5. '```' → logprob: -15.75407886505127
    6. 'decode' → logprob: -16.629079818725586
    7. 'split' → logprob: -17.379079818725586
    8. '_strip' → logprob: -17.629079818725586
    9. 'str' → logprob: -17.754079818725586
    10. 'read' → logprob: -18.754079818725586

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.348667711019516
    2. '()' → logprob: -1.2236677408218384
    3. '(
' → logprob: -9.473668098449707
    4. '(

' → logprob: -9.723668098449707
    5. '()(' → logprob: -11.598668098449707
    6. '(`' → logprob: -11.598668098449707
    7. '('' → logprob: -11.723668098449707
    8. '(()' → logprob: -11.723668098449707
    9. '`()' → logprob: -11.848668098449707
    10. ')' → logprob: -12.348668098449707

Token 11: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09553035348653793
    2. 'print' → logprob: -2.8455302715301514
    3. '.' → logprob: -4.3455305099487305
    4. ' if' → logprob: -4.3455305099487305
    5. 'i' → logprob: -5.9705305099487305
    6. '.lower' → logprob: -6.9705305099487305
    7. '+' → logprob: -7.2205305099487305
    8. '[' → logprob: -7.9705305099487305
    9. '[::-' → logprob: -7.9705305099487305
    10. ')' → logprob: -8.09553050994873

Token 12: ' ch' (ID: 549)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007556661730632186
    2. ' i' → logprob: -7.875755786895752
    3. '  ' → logprob: -8.750755310058594
    4. ' text' → logprob: -9.375755310058594
    5. ' token' → logprob: -9.625755310058594
    6. ' word' → logprob: -10.500755310058594
    7. ' t' → logprob: -11.750755310058594
    8. ' line' → logprob: -11.750755310058594
    9. ' in' → logprob: -12.625755310058594
    10. ' ' → logprob: -12.875755310058594

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034271120093762875
    2. 'in' → logprob: -6.128427028656006
    3. ' ' → logprob: -6.878427028656006
    4. 's' → logprob: -9.003427505493164
    5. '  ' → logprob: -9.628427505493164
    6. ' i' → logprob: -11.753427505493164
    7. '	in' → logprob: -12.753427505493164
    8. 'i' → logprob: -13.128427505493164
    9. '   ' → logprob: -13.128427505493164
    10. 'n' → logprob: -13.503427505493164

Token 14: ' ['' (ID: 5140)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.25193020701408386
    2. 'text' → logprob: -1.5019302368164062
    3. ' ' → logprob: -15.251930236816406
    4. '	text' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '_text' → logprob: -16.001930236816406
    7. '"text' → logprob: -16.626930236816406
    8. '(text' → logprob: -17.126930236816406
    9. '{text' → logprob: -17.251930236816406
    10. ' range' → logprob: -17.501930236816406

Token 15: '.',' (ID: 36660)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.311702162027359
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.061702251434326
    3. 'ae' → logprob: -3.311702251434326
    4. ''' → logprob: -3.561702251434326
    5. ''"' → logprob: -3.936702251434326
    6. '{}' → logprob: -4.061702251434326
    7. '{' → logprob: -4.311702251434326
    8. '.,' → logprob: -4.561702251434326
    9. 'text' → logprob: -4.686702251434326
    10. '[' → logprob: -4.686702251434326

Token 16: ' ',' (ID: 14089)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.028847750276327133
    2. ''' → logprob: -3.6538476943969727
    3. ' ',' → logprob: -6.903847694396973
    4. ''?' → logprob: -7.153847694396973
    5. ' ',',' → logprob: -7.653847694396973
    6. '','' → logprob: -9.028847694396973
    7. ' '' → logprob: -10.278847694396973
    8. '",' → logprob: -10.778847694396973
    9. '':' → logprob: -11.278847694396973
    10. ',' → logprob: -11.653847694396973

Token 17: '']:
' (ID: 44766)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10206303745508194
    2. '!' → logprob: -3.852062940597534
    3. '':' → logprob: -3.977062940597534
    4. '';' → logprob: -3.977062940597534
    5. '',' → logprob: -4.352063179016113
    6. '']' → logprob: -4.852063179016113
    7. '!',' → logprob: -5.352063179016113
    8. ''?' → logprob: -5.852063179016113
    9. ' '' → logprob: -6.227063179016113
    10. '!'' → logprob: -6.727063179016113

Token 18: '   ' (ID: 271)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.18898974359035492
    2. '   ' → logprob: -1.9389897584915161
    3. ' text' → logprob: -3.5639896392822266
    4. '```' → logprob: -11.938989639282227
    5. '_text' → logprob: -12.063989639282227
    6. '	text' → logprob: -12.063989639282227
    7. '{text' → logprob: -12.688989639282227
    8. '    
' → logprob: -12.938989639282227
    9. 'Text' → logprob: -14.063989639282227
    10. '
' → logprob: -14.313989639282227

Token 19: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.07118205726146698
    2. ' text' → logprob: -2.6961820125579834
    3. '   ' → logprob: -6.6961822509765625
    4. ' if' → logprob: -13.071182250976562
    5. 'Text' → logprob: -13.196182250976562
    6. 'if' → logprob: -13.446182250976562
    7. '	text' → logprob: -13.821182250976562
    8. '_text' → logprob: -14.446182250976562
    9. '```' → logprob: -14.946182250976562
    10. '{text' → logprob: -15.321182250976562

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47416073083877563
    2. ' =' → logprob: -0.9741607308387756
    3. '=text' → logprob: -9.474161148071289
    4. 'text' → logprob: -12.474161148071289
    5. '.replace' → logprob: -13.349161148071289
    6. '=re' → logprob: -14.849161148071289
    7. 'replace' → logprob: -15.474161148071289
    8. ')' → logprob: -15.849161148071289
    9. '```' → logprob: -16.59916114807129
    10. '.=' → logprob: -16.59916114807129

Token 21: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.16022513806819916
    2. ' text' → logprob: -1.9102251529693604
    3. ' ' → logprob: -15.035224914550781
    4. '	text' → logprob: -15.285224914550781
    5. '.text' → logprob: -16.78522491455078
    6. '"text' → logprob: -16.78522491455078
    7. 'Text' → logprob: -17.03522491455078
    8. '   ' → logprob: -17.34772491455078
    9. '{text' → logprob: -17.41022491455078
    10. '(text' → logprob: -17.59772491455078

Token 22: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -4.227250610711053e-05
    2. '.' → logprob: -10.250041961669922
    3. 'replace' → logprob: -12.750041961669922
    4. '.rstrip' → logprob: -13.625041961669922
    5. ' .' → logprob: -14.000041961669922
    6. '.re' → logprob: -14.000041961669922
    7. '.endswith' → logprob: -14.625041961669922
    8. '.Replace' → logprob: -15.000041961669922
    9. ').' → logprob: -16.625041961669922
    10. '.strip' → logprob: -16.875041961669922

Token 23: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0028243737760931253
    2. '(' → logprob: -5.877824306488037
    3. '(f' → logprob: -11.627824783325195
    4. 'ch' → logprob: -12.752824783325195
    5. '(
' → logprob: -13.127824783325195
    6. ' (' → logprob: -13.127824783325195
    7. '(chr' → logprob: -13.377824783325195
    8. '('' → logprob: -13.502824783325195
    9. '((' → logprob: -15.002824783325195
    10. '[ch' → logprob: -16.252824783325195

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003709701995830983
    2. '',' → logprob: -8.000370979309082
    3. ''',' → logprob: -10.500370979309082
    4. ','' → logprob: -12.375370979309082
    5. ' ,' → logprob: -12.750370979309082
    6. ''' → logprob: -15.500370979309082
    7. '",' → logprob: -16.000370025634766
    8. ',''' → logprob: -16.125370025634766
    9. '','' → logprob: -16.250370025634766
    10. ')' → logprob: -16.250370025634766

Token 25: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024100609123706818
    2. '''' → logprob: -3.7741005420684814
    3. '"' → logprob: -7.2741007804870605
    4. ' '')' → logprob: -8.899100303649902
    5. '""' → logprob: -11.899100303649902
    6. ')' → logprob: -11.899100303649902
    7. ''',' → logprob: -12.524100303649902
    8. ''''' → logprob: -12.774100303649902
    9. '''
' → logprob: -12.899100303649902
    10. ' ''' → logprob: -14.274100303649902

Token 26: ' ')
' (ID: 49195)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -4.215330409351736e-05
    2. ''' → logprob: -10.875041961669922
    3. ' ')' → logprob: -11.000041961669922
    4. ')' → logprob: -12.625041961669922
    5. '")' → logprob: -13.000041961669922
    6. '')
' → logprob: -14.750041961669922
    7. '')

' → logprob: -15.375041961669922
    8. '''' → logprob: -16.250041961669922
    9. ' '')' → logprob: -16.875041961669922
    10. '',' → logprob: -17.250041961669922

Token 27: 'words' (ID: 10020)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.02089044637978077
    2. 'print' → logprob: -5.395890235900879
    3. ' ' → logprob: -6.145890235900879
    4. '<|end|>' → logprob: -6.145890235900879
    5. 'word' → logprob: -6.270890235900879
    6. 'words' → logprob: -6.645890235900879
    7. ')' → logprob: -6.770890235900879
    8. ''' → logprob: -6.770890235900879
    9. 'for' → logprob: -6.895890235900879
    10. 'result' → logprob: -7.145890235900879

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16165751218795776
    2. '=' → logprob: -1.9116575717926025
    3. '.' → logprob: -7.161657333374023
    4. ' ' → logprob: -8.286657333374023
    5. '.split' → logprob: -8.661657333374023
    6. ')' → logprob: -9.661657333374023
    7. '.extend' → logprob: -10.411657333374023
    8. 'split' → logprob: -10.786657333374023
    9. '.replace' → logprob: -10.911657333374023
    10. ' +=' → logprob: -11.161657333374023

Token 29: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.31326213479042053
    2. ' text' → logprob: -1.3132621049880981
    3. 'list' → logprob: -16.438262939453125
    4. '[text' → logprob: -16.688262939453125
    5. 'set' → logprob: -16.938262939453125
    6. '[' → logprob: -16.938262939453125
    7. '	text' → logprob: -17.313262939453125
    8. '[]' → logprob: -17.438262939453125
    9. 'Text' → logprob: -18.063262939453125
    10. '.text' → logprob: -18.313262939453125

Token 30: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.010658206418156624
    2. '.' → logprob: -4.760658264160156
    3. '.lower' → logprob: -6.260658264160156
    4. ' .' → logprob: -9.635658264160156
    5. '.strip' → logprob: -9.760658264160156
    6. '.s' → logprob: -12.135658264160156
    7. '.replace' → logprob: -13.510658264160156
    8. 'split' → logprob: -13.760658264160156
    9. '.Split' → logprob: -15.135658264160156
    10. '.rstrip' → logprob: -15.885658264160156

Token 31: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6631406545639038
    2. '('' → logprob: -1.0381406545639038
    3. '()' → logprob: -2.0381407737731934
    4. '("("' → logprob: -8.038140296936035
    5. '('.')' → logprob: -11.413140296936035
    6. '("' → logprob: -11.663140296936035
    7. '((' → logprob: -11.913140296936035
    8. '(`' → logprob: -11.913140296936035
    9. ''' → logprob: -12.038140296936035
    10. '(',' → logprob: -12.288140296936035

Token 32: 'result' (ID: 2521)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2777475416660309
    2. 'for' → logprob: -2.402747631072998
    3. 'words' → logprob: -2.902747631072998
    4. 'result' → logprob: -3.777747631072998
    5. 'counter' → logprob: -4.152747631072998
    6. 'count' → logprob: -4.152747631072998
    7. 'print' → logprob: -4.402747631072998
    8. 'frequency' → logprob: -5.027747631072998
    9. 'from' → logprob: -5.527747631072998
    10. 'lower' → logprob: -5.652747631072998

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12867869436740875
    2. '=' → logprob: -2.128678798675537
    3. '_' → logprob: -6.753678798675537
    4. '.' → logprob: -8.753678321838379
    5. '[:]' → logprob: -9.378678321838379
    6. '[' → logprob: -9.503678321838379
    7. 's' → logprob: -9.628678321838379
    8. ')' → logprob: -10.503678321838379
    9. '_count' → logprob: -10.503678321838379
    10. ' ' → logprob: -10.628678321838379

Token 34: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3182738125324249
    2. 'len' → logprob: -1.6932737827301025
    3. ' {}' → logprob: -3.0682737827301025
    4. ' len' → logprob: -4.568274021148682
    5. 'sum' → logprob: -4.818274021148682
    6. '[]' → logprob: -4.943274021148682
    7. '0' → logprob: -5.193274021148682
    8. ' []' → logprob: -5.443274021148682
    9. '[len' → logprob: -6.318274021148682
    10. ' ' → logprob: -7.068274021148682

Token 35: 'w' (ID: 86)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.12339798361063004
    2. 'w' → logprob: -2.3733980655670166
    3. 'len' → logprob: -3.9983980655670166
    4. ''w' → logprob: -6.6233978271484375
    5. 'int' → logprob: -7.1233978271484375
    6. ' word' → logprob: -7.3733978271484375
    7. ''' → logprob: -7.6233978271484375
    8. '[word' → logprob: -7.8733978271484375
    9. 'sum' → logprob: -8.748397827148438
    10. '1' → logprob: -8.873397827148438

Token 36: ' for' (ID: 395)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.13022777438163757
    2. '.capitalize' → logprob: -3.25522780418396
    3. '[::-' → logprob: -3.50522780418396
    4. ' for' → logprob: -3.63022780418396
    5. '.upper' → logprob: -4.005227565765381
    6. '.' → logprob: -5.255227565765381
    7. '.title' → logprob: -6.505227565765381
    8. '[' → logprob: -6.880227565765381
    9. 'for' → logprob: -7.630227565765381
    10. '.startswith' → logprob: -9.255228042602539

Token 37: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4740850329399109
    2. ' w' → logprob: -0.9740850329399109
    3. ' ' → logprob: -12.849084854125977
    4. ' in' → logprob: -12.974084854125977
    5. ' ' → logprob: -13.974084854125977
    6. '	w' → logprob: -14.474084854125977
    7. '<w' → logprob: -14.724084854125977
    8. '_w' → logprob: -14.974084854125977
    9. ' word' → logprob: -15.474084854125977
    10. '<|end|>' → logprob: -15.849084854125977

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06440930813550949
    2. 'in' → logprob: -2.8144092559814453
    3. 'n' → logprob: -6.564409255981445
    4. ' ' → logprob: -7.564409255981445
    5. 'w' → logprob: -8.814409255981445
    6. 'not' → logprob: -9.939409255981445
    7. '   ' → logprob: -10.689409255981445
    8. 'ot' → logprob: -10.689409255981445
    9. '  ' → logprob: -10.689409255981445
    10. '_' → logprob: -10.814409255981445

Token 39: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.47488754987716675
    2. ' words' → logprob: -0.9748875498771667
    3. 'text' → logprob: -7.849887371063232
    4. '(words' → logprob: -9.09988784790039
    5. ' text' → logprob: -9.22488784790039
    6. 'w' → logprob: -9.84988784790039
    7. 'result' → logprob: -9.97488784790039
    8. 'word' → logprob: -10.09988784790039
    9. '['' → logprob: -10.97488784790039
    10. ' result' → logprob: -11.47488784790039

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00978406984359026
    2. 'if' → logprob: -4.63478422164917
    3. ' ' → logprob: -10.884783744812012
    4. ']' → logprob: -12.759783744812012
    5. '	if' → logprob: -13.009783744812012
    6. '.lower' → logprob: -13.634783744812012
    7. '[::-' → logprob: -13.884783744812012
    8. '[' → logprob: -14.509783744812012
    9. ' ]' → logprob: -15.259783744812012
    10. '<|end|>' → logprob: -15.259783744812012

Token 41: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7843108177185059
    2. ' w' → logprob: -1.1593108177185059
    3. 'len' → logprob: -2.159310817718506
    4. ' not' → logprob: -2.909310817718506
    5. 'w' → logprob: -3.034310817718506
    6. ' all' → logprob: -5.784310817718506
    7. ''' → logprob: -6.159310817718506
    8. ' ' → logprob: -6.534310817718506
    9. 'not' → logprob: -6.659310817718506
    10. ' '' → logprob: -6.784310817718506

Token 42: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6520100235939026
    2. 'w' → logprob: -0.7770100235939026
    3. 'not' → logprob: -4.402009963989258
    4. ''w' → logprob: -5.402009963989258
    5. ''' → logprob: -7.152009963989258
    6. 'all' → logprob: -7.402009963989258
    7. 'any' → logprob: -7.652009963989258
    8. ' len' → logprob: -9.652009963989258
    9. 'word' → logprob: -9.652009963989258
    10. ' not' → logprob: -9.777009963989258

Token 43: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5856149196624756
    2. ' <=' → logprob: -0.8356149196624756
    3. '<len' → logprob: -5.585615158081055
    4. '<' → logprob: -5.835615158081055
    5. ' <' → logprob: -6.335615158081055
    6. 'len' → logprob: -7.710615158081055
    7. '>' → logprob: -8.710615158081055
    8. ' ' → logprob: -8.960615158081055
    9. '>=' → logprob: -9.460615158081055
    10. ' len' → logprob: -9.585615158081055

Token 44: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31326231360435486
    2. ' len' → logprob: -1.3132623434066772
    3. '=len' → logprob: -14.938261985778809
    4. '(len' → logprob: -16.063262939453125
    5. '	len' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.438262939453125
    7. '<len' → logprob: -17.813262939453125
    8. 'le' → logprob: -18.438262939453125
    9. '[len' → logprob: -19.063262939453125
    10. '   ' → logprob: -19.188262939453125

Token 45: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(word' → logprob: -16.250003814697266
    4. ' (' → logprob: -16.250003814697266
    5. 'w' → logprob: -16.750003814697266
    6. '(s' → logprob: -17.875003814697266
    7. '(u' → logprob: -19.000003814697266
    8. '(v' → logprob: -19.500003814697266
    9. '<w' → logprob: -20.125003814697266
    10. '	w' → logprob: -20.375003814697266

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09458597004413605
    2. ' <=' → logprob: -2.59458589553833
    3. '<=' → logprob: -4.96958589553833
    4. ' )' → logprob: -5.71958589553833
    5. ')<=' → logprob: -5.84458589553833
    6. ')])' → logprob: -6.84458589553833
    7. ')]' → logprob: -7.59458589553833
    8. ' and' → logprob: -8.094586372375488
    9. ']' → logprob: -8.219586372375488
    10. ']<=' → logprob: -9.219586372375488

Token 47: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35477250814437866
    2. '<=' → logprob: -1.3547725677490234
    3. ']' → logprob: -3.9797725677490234
    4. ')' → logprob: -4.729772567749023
    5. ' and' → logprob: -4.729772567749023
    6. ')]' → logprob: -6.854772567749023
    7. ']<=' → logprob: -7.104772567749023
    8. '<|end|>' → logprob: -7.104772567749023
    9. ' ]' → logprob: -7.354772567749023
    10. 'and' → logprob: -7.729772567749023

Token 48: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8961650729179382
    2. '6' → logprob: -1.021165132522583
    3. '7' → logprob: -1.521165132522583
    4. '15' → logprob: -5.021164894104004
    5. '10' → logprob: -6.021164894104004
    6. '12' → logprob: -6.771164894104004
    7. '4' → logprob: -7.021164894104004
    8. '8' → logprob: -7.146164894104004
    9. '20' → logprob: -7.271164894104004
    10. '9' → logprob: -7.896164894104004

Token 49: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2814572751522064
    2. '6' → logprob: -1.7814573049545288
    3. '7' → logprob: -2.9064571857452393
    4. '15' → logprob: -4.031457424163818
    5. '10' → logprob: -6.656457424163818
    6. '4' → logprob: -7.281457424163818
    7. '16' → logprob: -7.406457424163818
    8. '9' → logprob: -7.531457424163818
    9. '12' → logprob: -7.531457424163818
    10. '8' → logprob: -7.656457424163818

Token 50: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026288547087460756
    2. ' ]' → logprob: -8.250263214111328
    3. ')]' → logprob: -14.375263214111328
    4. ']
' → logprob: -14.500263214111328
    5. ']

' → logprob: -16.250263214111328
    6. ')' → logprob: -16.500263214111328
    7. ' and' → logprob: -16.500263214111328
    8. '()]' → logprob: -17.000263214111328
    9. '`]' → logprob: -17.125263214111328
    10. '']' → logprob: -17.125263214111328

Token 51: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017278730869293213
    2. '<|end|>' → logprob: -4.517278671264648
    3. 'for' → logprob: -5.517278671264648
    4. '
' → logprob: -6.767278671264648
    5. ' for' → logprob: -8.267278671264648
    6. 'result' → logprob: -8.642278671264648
    7. ')' → logprob: -8.767278671264648
    8. ' print' → logprob: -9.017278671264648
    9. '```' → logprob: -9.767278671264648
    10. '<|end|>' → logprob: -10.142278671264648

Token 52: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061041317880153656
    2. '('' → logprob: -3.0610413551330566
    3. '(result' → logprob: -4.936041355133057
    4. '(len' → logprob: -5.936041355133057
    5. '(*' → logprob: -6.061041355133057
    6. '("' → logprob: -8.561040878295898
    7. '(sum' → logprob: -11.561040878295898
    8. '("("' → logprob: -12.061040878295898
    9. '()' → logprob: -12.686040878295898
    10. '(tuple' → logprob: -13.061040878295898

Token 53: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20298215746879578
    2. ' '.' → logprob: -1.7029821872711182
    3. ' '' → logprob: -6.827981948852539
    4. ''.' → logprob: -8.577981948852539
    5. '"' → logprob: -9.452981948852539
    6. '',' → logprob: -9.577981948852539
    7. ' ')' → logprob: -9.702981948852539
    8. ' ',' → logprob: -10.577981948852539
    9. '')' → logprob: -11.577981948852539
    10. ' ' → logprob: -11.577981948852539

Token 54: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.537868779967539e-06
    2. 'print' → logprob: -12.000008583068848
    3. ' join' → logprob: -13.500008583068848
    4. 'jo' → logprob: -14.250008583068848
    5. 'j' → logprob: -16.00000762939453
    6. '```' → logprob: -16.37500762939453
    7. 'write' → logprob: -17.00000762939453
    8. 'sep' → logprob: -18.00000762939453
    9. 'space' → logprob: -18.50000762939453
    10. '6' → logprob: -19.00000762939453

Token 55: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.726595241460018e-05
    2. 'result' → logprob: -10.25003719329834
    3. '(' → logprob: -13.37503719329834
    4. ')' → logprob: -15.50003719329834
    5. '(results' → logprob: -17.625038146972656
    6. ' result' → logprob: -17.875038146972656
    7. '(res' → logprob: -18.125038146972656
    8. ',result' → logprob: -18.375038146972656
    9. '[result' → logprob: -18.750038146972656
    10. '=result' → logprob: -18.875038146972656

Token 56: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023246875032782555
    2. ')' → logprob: -3.7732467651367188
    3. ')))' → logprob: -13.898246765136719
    4. ''))' → logprob: -15.398246765136719
    5. '))
' → logprob: -16.14824676513672
    6. '])' → logprob: -16.52324676513672
    7. '),' → logprob: -17.02324676513672
    8. ' ))' → logprob: -17.39824676513672
    9. '()))' → logprob: -17.77324676513672
    10. '})' → logprob: -18.14824676513672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 31.48%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 75.93%
================================================================================
