================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

# Directions: 0=N,1=E,2=S,3=W
# movement offsets by direction
dx = [0,1,0,-1]
dy = [-1,0,1,0]

while True:
    H,W,N = map(int,input().split())
    if H==0 and W==0 and N==0:
        break
    program = input().strip()
    maze = [list(input().rstrip('\n')) for _ in range(H)]

    # find start and goal positions
    for y in range(H):
        for x in range(W):
            if maze[y][x] == 'S':
                start = (x,y)
            elif maze[y][x] == 'G':
                goal = (x,y)

    # precompute direction after i-th turn
    # turn commands may be very long. direction after i turns:
    # 0-based; before any turn direction is North=0
    # L turn: direction = (direction + 3) %4 (or -1 mod4)
    # R turn: direction = (direction + 1) %4
    # We'll store dir_after_turn[i] = direction after i turns (i in [0..N])
    # dir_after_turn[0]=0 (initial)
    dir_after_turn = [0]*(N+1)
    d = 0
    for i, c in enumerate(program):
        if c == 'L':
            d = (d+3)%4
        else:
            d = (d+1)%4
        dir_after_turn[i+1] = d

    from collections import deque

    # State: (x,y,turns_used)
    # we can move forward without using turn.
    # When we want to turn, we must consume a turn command from program (if any left)
    # only if turns_used<N we can turn following that command, otherwise no turn possible
    visited = [[-1]*W for _ in range(H)]
    # We'll track visited by (x,y,turns_used)
    # But turns_used up to 1,000,000 and maze up to 1000x1000 is too big for 3d visited
    # Optimize:
    # The facing direction at turns_used is fixed by dir_after_turn[turns_used]
    # Since only turn_allowed in order, the facing direction is function of turns_used.
    # The state can be (x,y,turns_used)
    # We'll keep visited as a dict {(x,y,turns_used):True}
    # but too big, we optimize by combining visited states for the same (x,y) for minimal turns_used
    # Because turns_used is non-decreasing along a path; going back with more turns_used is useless
    # So we keep visited[x][y] = minimal turns_used found so far
    # and only process states with smaller turns_used for same cell

    from heapq import heappush, heappop
    # Use a priority queue by turns_used to process states with lower turns first
    # This ensures if we visit a cell with higher turns_used later, we can skip

    # visited[y][x] = minimal turns_used reached here
    visited = [[-1]*W for _ in range(H)]

    hq = []
    heappush(hq, (0, start[1], start[0])) # turns_used,y,x
    visited[start[1]][start[0]] = 0

    ans = False
    while hq:
        turns_used,y,x = heappop(hq)
        if (x,y) == goal:
            ans = True
            break
        # current facing direction after turns_used turns
        ddir = dir_after_turn[turns_used]

        # 1) Move forward if possible
        nx = x + dx[ddir]
        ny = y + dy[ddir]
        if 0<=nx<W and 0<=ny<H and maze[ny][nx] != '#':
            if visited[ny][nx] == -1 or visited[ny][nx] > turns_used:
                visited[ny][nx] = turns_used
                heappush(hq,(turns_used, ny, nx))
        # 2) Turn next command if any commands remain
        if turns_used < N:
            ndir = dir_after_turn[turns_used+1]
            # after turn, direction is ndir
            # Now can move forward (if possible) or wait
            # We only enqueue the turning action and let next loop move forward
            # State after turn: same cell, turns_used+1
            if visited[y][x]==-1 or visited[y][x] > turns_used+1:
                visited[y][x] = turns_used+1
                heappush(hq,(turns_used+1,y,x))
    print("Yes" if ans else "No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.16445723176002502
    2. 'limit' → logprob: -1.9144572019577026
    3. '_depth' → logprob: -5.539457321166992
    4. 'depth' → logprob: -9.539457321166992
    5. '_' → logprob: -9.664457321166992
    6. '_lim' → logprob: -10.539457321166992
    7. ' limit' → logprob: -10.914457321166992
    8. '_rate' → logprob: -11.039457321166992
    9. '_error' → logprob: -11.539457321166992
    10. 'lim' → logprob: -11.789457321166992

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.46025416254997253
    2. '\n' → logprob: -2.085254192352295
    3. '(' → logprob: -2.835254192352295
    4. '()' → logprob: -3.085254192352295
    5. '(
' → logprob: -3.460254192352295
    6. '
' → logprob: -3.835254192352295
    7. 'def' → logprob: -3.960254192352295
    8. ')' → logprob: -4.210254192352295
    9. '#' → logprob: -4.460254192352295
    10. '(sys' → logprob: -4.960254192352295

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0525028370320797
    2. '()' → logprob: -3.0525028705596924
    3. '.' → logprob: -6.302502632141113
    4. ')' → logprob: -7.177502632141113
    5. '().' → logprob: -7.302502632141113
    6. '('' → logprob: -9.052502632141113
    7. '("("' → logprob: -9.552502632141113
    8. ''' → logprob: -9.677502632141113
    9. '40' → logprob: -9.802502632141113
    10. '```' → logprob: -10.177502632141113

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005953280488029122
    2. '.readline' → logprob: -8.000595092773438
    3. ' .' → logprob: -8.750595092773438
    4. '.stdin' → logprob: -10.000595092773438
    5. '.)' → logprob: -11.875595092773438
    6. '.
' → logprob: -12.250595092773438
    7. '.​' → logprob: -12.375595092773438
    8. '[' → logprob: -12.625595092773438
    9. '.

' → logprob: -12.625595092773438
    10. '.`' → logprob: -12.750595092773438

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00881617795675993
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.25881576538086
    5. '.readlines' → logprob: -11.50881576538086
    6. '.Read' → logprob: -13.38381576538086
    7. 'read' → logprob: -14.00881576538086
    8. '.stdin' → logprob: -14.88381576538086
    9. ' .' → logprob: -15.38381576538086
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06368431448936462
    2. '()
' → logprob: -3.5636842250823975
    3. '()

' → logprob: -4.063684463500977
    4. '(' → logprob: -4.438684463500977
    5. 'def' → logprob: -6.688684463500977
    6. '()\' → logprob: -6.688684463500977
    7. '(
' → logprob: -7.313684463500977
    8. '
' → logprob: -8.563684463500977
    9. 'for' → logprob: -8.688684463500977
    10. 'while' → logprob: -9.188684463500977

Token 19: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080059200525284
    2. 'n' → logprob: -2.812080144882202
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.937080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.312080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: ' Directions' (ID: 85422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11383005976676941
    2. 'n' → logprob: -3.113830089569092
    3. ' n' → logprob: -4.488830089569092
    4. ' def' → logprob: -4.488830089569092
    5. 'dp' → logprob: -4.988830089569092
    6. 'main' → logprob: -5.238830089569092
    7. 'data' → logprob: -5.738830089569092
    8. 'd' → logprob: -5.863830089569092
    9. 'class' → logprob: -6.113830089569092
    10. ' ' → logprob: -6.113830089569092

Token 21: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9145116806030273
    2. ':' → logprob: -1.1645116806030273
    3. 'dire' → logprob: -2.4145116806030273
    4. 'D' → logprob: -2.4145116806030273
    5. '#' → logprob: -3.4145116806030273
    6. '=' → logprob: -3.6645116806030273
    7. ' directions' → logprob: -4.664511680603027
    8. 'd' → logprob: -4.914511680603027
    9. '```' → logprob: -4.914511680603027
    10. '4' → logprob: -5.414511680603027

Token 22: ' ' (ID: 220)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.5492011904716492
    2. 'dire' → logprob: -0.9242011904716492
    3. 'D' → logprob: -4.799201011657715
    4. '#' → logprob: -5.799201011657715
    5. 'dirs' → logprob: -6.299201011657715
    6. 'dx' → logprob: -6.424201011657715
    7. ' DIRE' → logprob: -6.424201011657715
    8. ' dr' → logprob: -6.674201011657715
    9. ' dx' → logprob: -6.924201011657715
    10. '```' → logprob: -6.924201011657715

Token 23: '0' (ID: 15)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5794803500175476
    2. '[' → logprob: -2.0794804096221924
    3. '[(' → logprob: -2.5794804096221924
    4. 'dx' → logprob: -2.7044804096221924
    5. 'D' → logprob: -2.7044804096221924
    6. ' directions' → logprob: -3.7044804096221924
    7. 'dirs' → logprob: -4.204480171203613
    8. 'UP' → logprob: -4.579480171203613
    9. '['' → logprob: -4.579480171203613
    10. 'up' → logprob: -4.704480171203613

Token 24: '=N' (ID: 143132)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046520017087459564
    2. ' ,' → logprob: -3.2965199947357178
    3. ':' → logprob: -5.046520233154297
    4. ' ' → logprob: -7.671520233154297
    5. '-' → logprob: -8.046520233154297
    6. '#' → logprob: -8.171520233154297
    7. ',
' → logprob: -8.421520233154297
    8. ',#' → logprob: -9.046520233154297
    9. ' =' → logprob: -9.296520233154297
    10. ' #' → logprob: -9.421520233154297

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06320881843566895
    2. 'E' → logprob: -3.563208818435669
    3. ',E' → logprob: -4.06320858001709
    4. ' ,' → logprob: -4.68820858001709
    5. 'W' → logprob: -6.06320858001709
    6. '#' → logprob: -7.18820858001709
    7. 'orth' → logprob: -7.68820858001709
    8. ' #' → logprob: -7.93820858001709
    9. ',W' → logprob: -8.06320858001709
    10. 'ORTH' → logprob: -8.06320858001709

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06995922327041626
    2. ' ' → logprob: -2.6949591636657715
    3. ' #' → logprob: -11.56995964050293
    4. '#' → logprob: -12.31995964050293
    5. '```' → logprob: -12.31995964050293
    6. ' ' → logprob: -13.56995964050293
    7. '4' → logprob: -13.94495964050293
    8. 'import' → logprob: -14.19495964050293
    9. '<|end|>' → logprob: -15.75745964050293
    10. 'def' → logprob: -15.88245964050293

Token 27: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01720478944480419
    2. ' =' → logprob: -5.142204761505127
    3. '2' → logprob: -5.267204761505127
    4. ',' → logprob: -5.392204761505127
    5. '=W' → logprob: -7.642204761505127
    6. '=N' → logprob: -7.767204761505127
    7. '=S' → logprob: -9.142205238342285
    8. 'E' → logprob: -9.392205238342285
    9. '=#' → logprob: -9.892205238342285
    10. ' ' → logprob: -9.892205238342285

Token 28: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.16630695760250092
    2. 'S' → logprob: -1.916306972503662
    3. '1' → logprob: -5.791306972503662
    4. ' E' → logprob: -6.166306972503662
    5. ' S' → logprob: -7.416306972503662
    6. 'W' → logprob: -8.791306495666504
    7. 'N' → logprob: -9.166306495666504
    8. 'NE' → logprob: -10.791306495666504
    9. 'D' → logprob: -11.916306495666504
    10. ' ' → logprob: -12.041306495666504

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027985336259007454
    2. '2' → logprob: -3.7779853343963623
    3. '0' → logprob: -6.277985572814941
    4. '#' → logprob: -6.277985572814941
    5. ' ,' → logprob: -8.027985572814941
    6. ',#' → logprob: -8.027985572814941
    7. ',d' → logprob: -9.152985572814941
    8. '```' → logprob: -9.777985572814941
    9. ',
' → logprob: -10.527985572814941
    10. 'import' → logprob: -10.527985572814941

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.750075340270996
    4. '#' → logprob: -16.62507438659668
    5. '0' → logprob: -18.50007438659668
    6. 'def' → logprob: -18.87507438659668
    7. '1' → logprob: -19.12507438659668
    8. '  ' → logprob: -19.25007438659668
    9. '3' → logprob: -19.50007438659668
    10. '２' → logprob: -19.50007438659668

Token 31: '=S' (ID: 165586)
  Prédit: '=S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=S' → logprob: -0.37361979484558105
    2. '=' → logprob: -1.248619794845581
    3. ',S' → logprob: -4.37362003326416
    4. '=N' → logprob: -5.12362003326416
    5. '=W' → logprob: -5.37362003326416
    6. 'S' → logprob: -6.87362003326416
    7. ',' → logprob: -7.74862003326416
    8. ',W' → logprob: -9.74862003326416
    9. ',N' → logprob: -10.24862003326416
    10. '=D' → logprob: -10.99862003326416

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007898802869021893
    2. '#' → logprob: -5.882898807525635
    3. ',#' → logprob: -6.882898807525635
    4. '4' → logprob: -7.382898807525635
    5. '
' → logprob: -7.632898807525635
    6. '3' → logprob: -7.632898807525635
    7. '0' → logprob: -7.632898807525635
    8. '```' → logprob: -7.632898807525635
    9. ',
' → logprob: -8.007898330688477
    10. ',d' → logprob: -8.132898330688477

Token 33: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.375005722045898
    3. '```' → logprob: -14.250005722045898
    4. '#' → logprob: -15.375005722045898
    5. '1' → logprob: -17.6250057220459
    6. '３' → logprob: -18.2500057220459
    7. '۳' → logprob: -18.3750057220459
    8. '0' → logprob: -18.8125057220459
    9. '`' → logprob: -18.8750057220459
    10. '-' → logprob: -19.0000057220459

Token 34: '=W' (ID: 177181)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45793628692626953
    2. '=W' → logprob: -1.0829362869262695
    3. '=N' → logprob: -3.5829362869262695
    4. ',W' → logprob: -7.5829362869262695
    5. ',' → logprob: -8.83293628692627
    6. ' =' → logprob: -9.33293628692627
    7. '=w' → logprob: -9.70793628692627
    8. 'W' → logprob: -9.95793628692627
    9. ',N' → logprob: -10.33293628692627
    10. '=D' → logprob: -10.58293628692627

Token 35: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8002046346664429
    2. 'dx' → logprob: -1.5502046346664429
    3. 'd' → logprob: -2.5502047538757324
    4. '
' → logprob: -2.9252047538757324
    5. 'direction' → logprob: -3.1752047538757324
    6. 'delta' → logprob: -3.6752047538757324
    7. '\' → logprob: -3.9252047538757324
    8. '4' → logprob: -4.175204753875732
    9. 'D' → logprob: -4.175204753875732
    10. '\n' → logprob: -4.300204753875732

Token 36: '#' (ID: 2)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9398986101150513
    2. 'dire' → logprob: -1.4398986101150513
    3. 'def' → logprob: -1.5648986101150513
    4. 'direction' → logprob: -2.5648984909057617
    5. 'D' → logprob: -3.4398984909057617
    6. 'd' → logprob: -4.189898490905762
    7. 'dr' → logprob: -4.689898490905762
    8. 'delta' → logprob: -5.189898490905762
    9. 'DIR' → logprob: -5.189898490905762
    10. 'dy' → logprob: -5.439898490905762

Token 37: ' movement' (ID: 12772)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6221517324447632
    2. 'dx' → logprob: -1.3721517324447632
    3. 'class' → logprob: -2.9971518516540527
    4. 'D' → logprob: -3.2471518516540527
    5. 'dire' → logprob: -3.4971518516540527
    6. 'dr' → logprob: -3.6221518516540527
    7. 'direction' → logprob: -4.122151851654053
    8. 'DIR' → logprob: -4.497151851654053
    9. '#' → logprob: -4.997151851654053
    10. 'd' → logprob: -5.247151851654053

Token 38: ' offsets' (ID: 78390)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32958051562309265
    2. ' =' → logprob: -1.454580545425415
    3. 'dx' → logprob: -4.454580307006836
    4. '_d' → logprob: -4.454580307006836
    5. '_dx' → logprob: -5.079580307006836
    6. '=' → logprob: -5.454580307006836
    7. '_vectors' → logprob: -5.454580307006836
    8. '_offsets' → logprob: -6.079580307006836
    9. 'd' → logprob: -6.329580307006836
    10. 'dire' → logprob: -6.579580307006836

Token 39: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14572462439537048
    2. 'dire' → logprob: -2.6457245349884033
    3. 'moves' → logprob: -4.020724773406982
    4. 'offset' → logprob: -4.395724773406982
    5. 'dx' → logprob: -4.645724773406982
    6. 'dirs' → logprob: -5.645724773406982
    7. ' directions' → logprob: -5.770724773406982
    8. '_offsets' → logprob: -5.895724773406982
    9. 'd' → logprob: -6.145724773406982
    10. 'D' → logprob: -6.145724773406982

Token 40: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.4065338671207428
    2. ' direction' → logprob: -1.9065338373184204
    3. 'dx' → logprob: -2.40653395652771
    4. ' directions' → logprob: -3.90653395652771
    5. 'dire' → logprob: -4.031533718109131
    6. '[
' → logprob: -4.031533718109131
    7. '[' → logprob: -4.406533718109131
    8. 'd' → logprob: -4.906533718109131
    9. ' dx' → logprob: -5.281533718109131
    10. 'dy' → logprob: -5.281533718109131

Token 41: '
' (ID: 198)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.966293215751648
    2. 'dire' → logprob: -1.091293215751648
    3. 'dy' → logprob: -2.3412933349609375
    4. 'moves' → logprob: -3.2162933349609375
    5. 'direction' → logprob: -3.4662933349609375
    6. 'DIR' → logprob: -3.9662933349609375
    7. 'D' → logprob: -4.2162933349609375
    8. 'dirs' → logprob: -4.4662933349609375
    9. ' directions' → logprob: -4.5912933349609375
    10. '```' → logprob: -4.8412933349609375

Token 42: 'dx' (ID: 22100)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.637986958026886
    2. 'moves' → logprob: -1.8879868984222412
    3. 'dx' → logprob: -2.262986898422241
    4. 'dirs' → logprob: -2.637986898422241
    5. 'D' → logprob: -3.262986898422241
    6. 'DIR' → logprob: -3.387986898422241
    7. ' directions' → logprob: -4.38798713684082
    8. 'direction' → logprob: -4.76298713684082
    9. 'offset' → logprob: -4.88798713684082
    10. 'move' → logprob: -4.88798713684082

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021261971443891525
    2. '=' → logprob: -3.8962619304656982
    3. '=[' → logprob: -7.646262168884277
    4. ' =[' → logprob: -8.646262168884277
    5. '[' → logprob: -10.521262168884277
    6. 's' → logprob: -10.646262168884277
    7. '=[
' → logprob: -12.521262168884277
    8. '[:]' → logprob: -12.771262168884277
    9. '=[]' → logprob: -13.021262168884277
    10. ',' → logprob: -13.396262168884277

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1003260388970375
    2. ' [' → logprob: -2.3503260612487793
    3. '[-' → logprob: -9.100325584411621
    4. ' [-' → logprob: -11.975325584411621
    5. ' ' → logprob: -14.225325584411621
    6. '0' → logprob: -14.600325584411621
    7. '(' → logprob: -14.975325584411621
    8. ' ' → logprob: -16.850326538085938
    9. '([' → logprob: -17.725326538085938
    10. '   ' → logprob: -17.725326538085938

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039942529052495956
    2. '-' → logprob: -3.289942502975464
    3. ' ' → logprob: -6.289942741394043
    4. ' -' → logprob: -10.289942741394043
    5. '1' → logprob: -11.789942741394043
    6. '```' → logprob: -14.039942741394043
    7. '   ' → logprob: -14.289942741394043
    8. '  ' → logprob: -14.852442741394043
    9. '[-' → logprob: -15.977442741394043
    10. '۰' → logprob: -16.227441787719727

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',-' → logprob: -13.500007629394531
    4. ',
' → logprob: -14.125007629394531
    5. ',

' → logprob: -14.625007629394531
    6. ',d' → logprob: -15.875007629394531
    7. '1' → logprob: -15.875007629394531
    8. ',int' → logprob: -16.75000762939453
    9. ',n' → logprob: -16.75000762939453
    10. ',x' → logprob: -16.75000762939453

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006588301155716181
    2. ' ' → logprob: -5.381588459014893
    3. '-' → logprob: -6.256588459014893
    4. ' -' → logprob: -10.256587982177734
    5. '0' → logprob: -11.256587982177734
    6. '```' → logprob: -16.256587982177734
    7. '+' → logprob: -17.194087982177734
    8. ',' → logprob: -18.694087982177734
    9. '10' → logprob: -18.881587982177734
    10. '9' → logprob: -18.944087982177734

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002658655575942248
    2. '0' → logprob: -8.875266075134277
    3. ' ,' → logprob: -9.000266075134277
    4. ' ' → logprob: -13.500266075134277
    5. ']' → logprob: -14.125266075134277
    6. ',-' → logprob: -15.500266075134277
    7. ',
' → logprob: -15.875266075134277
    8. ',

' → logprob: -17.75026512145996
    9. ',None' → logprob: -17.87526512145996
    10. ',,' → logprob: -18.12526512145996

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. '1' → logprob: -15.251326560974121
    4. '<|end|>' → logprob: -15.751326560974121
    5. '۰' → logprob: -16.876325607299805
    6. '-' → logprob: -17.376325607299805
    7. '```' → logprob: -17.563825607299805
    8. '  ' → logprob: -17.876325607299805
    9. ',' → logprob: -18.188825607299805
    10. '2' → logprob: -18.251325607299805

Token 50: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.029848486185073853
    2. ',' → logprob: -3.529848575592041
    3. ' ,-' → logprob: -9.654848098754883
    4. ' ,' → logprob: -11.029848098754883
    5. '-' → logprob: -11.654848098754883
    6. ',--' → logprob: -13.154848098754883
    7. ',-

' → logprob: -13.654848098754883
    8. ',,' → logprob: -13.779848098754883
    9. ',None' → logprob: -13.779848098754883
    10. ',\' → logprob: -14.654848098754883

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -19.25
    4. '１' → logprob: -19.6875
    5. '১' → logprob: -19.875
    6. ']' → logprob: -19.9375
    7. '۱' → logprob: -20.0
    8. '-' → logprob: -20.0625
    9. '11' → logprob: -20.125
    10. '१' → logprob: -20.1875

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005100222188048065
    2. ']
' → logprob: -7.625510215759277
    3. ']
' → logprob: -11.375510215759277
    4. ' ]' → logprob: -11.625510215759277
    5. ']

' → logprob: -13.750510215759277
    6. ')' → logprob: -16.50050926208496
    7. '<|end|>' → logprob: -16.87550926208496
    8. ']

' → logprob: -17.00050926208496
    9. '```' → logprob: -17.12550926208496
    10. ',' → logprob: -17.25050926208496

Token 53: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.107425062713446e-06
    2. ' dy' → logprob: -11.875006675720215
    3. '
' → logprob: -16.87500762939453
    4. '```' → logprob: -17.00000762939453
    5. '.dy' → logprob: -17.75000762939453
    6. 'dym' → logprob: -18.62500762939453
    7. '\' → logprob: -18.87500762939453
    8. 'ddy' → logprob: -19.37500762939453
    9. '[' → logprob: -19.75000762939453
    10. 'Dy' → logprob: -19.87500762939453

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006743319798260927
    2. '=' → logprob: -5.006743431091309
    3. ' =[' → logprob: -10.756743431091309
    4. '=[' → logprob: -12.756743431091309
    5. '<|end|>' → logprob: -13.131743431091309
    6. '[' → logprob: -14.006743431091309
    7. ' ' → logprob: -14.631743431091309
    8. ']' → logprob: -15.631743431091309
    9. '=[]' → logprob: -16.381742477416992
    10. ')' → logprob: -16.756742477416992

Token 55: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16093194484710693
    2. '[' → logprob: -1.910931944847107
    3. ' [-' → logprob: -7.5359320640563965
    4. ' [' → logprob: -8.785931587219238
    5. '-' → logprob: -10.785931587219238
    6. '1' → logprob: -15.535931587219238
    7. ' ' → logprob: -17.160932540893555
    8. '-[' → logprob: -17.285932540893555
    9. '[
' → logprob: -17.535932540893555
    10. '0' → logprob: -17.535932540893555

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '0' → logprob: -19.125
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.25
    6. '-' → logprob: -20.375
    7. ']' → logprob: -20.5625
    8. '１' → logprob: -20.75
    9. '11' → logprob: -20.9375
    10. '১' → logprob: -21.5625

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001602579141035676
    2. ' ,' → logprob: -6.501602649688721
    3. '0' → logprob: -9.251602172851562
    4. '<|end|>' → logprob: -13.001602172851562
    5. ' ' → logprob: -14.126602172851562
    6. ',
' → logprob: -15.501602172851562
    7. '1' → logprob: -15.876602172851562
    8. ',-' → logprob: -16.126602172851562
    9. '```' → logprob: -16.126602172851562
    10. ',None' → logprob: -16.251602172851562

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -17.75001335144043
    4. ',' → logprob: -17.87501335144043
    5. '<|end|>' → logprob: -18.75001335144043
    6. '```' → logprob: -18.93751335144043
    7. '1' → logprob: -19.12501335144043
    8. '０' → logprob: -19.25001335144043
    9. '00' → logprob: -19.81251335144043
    10. '012' → logprob: -19.81251335144043

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004921489744447172
    2. ' ,' → logprob: -8.000492095947266
    3. ',-' → logprob: -8.875492095947266
    4. ']' → logprob: -11.125492095947266
    5. '0' → logprob: -14.375492095947266
    6. ',+' → logprob: -15.375492095947266
    7. ',None' → logprob: -15.500492095947266
    8. '1' → logprob: -15.625492095947266
    9. ' ]' → logprob: -15.625492095947266
    10. ' ,-' → logprob: -15.875492095947266

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -14.250001907348633
    4. '0' → logprob: -18.875001907348633
    5. '+' → logprob: -18.875001907348633
    6. '```' → logprob: -20.250001907348633
    7. ' -' → logprob: -20.750001907348633
    8. ',' → logprob: -21.000001907348633
    9. '[' → logprob: -22.000001907348633
    10. '<|end|>' → logprob: -22.125001907348633

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07712459564208984
    2. ']' → logprob: -2.70212459564209
    3. ',-' → logprob: -4.95212459564209
    4. ' ,' → logprob: -9.95212459564209
    5. ' ]' → logprob: -10.32712459564209
    6. '0' → logprob: -11.95212459564209
    7. ' ,-' → logprob: -12.57712459564209
    8. ',None' → logprob: -14.32712459564209
    9. ',...' → logprob: -14.45212459564209
    10. ')' → logprob: -14.95212459564209

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004163756500929594
    2. '-' → logprob: -5.50416374206543
    3. ' ' → logprob: -9.37916374206543
    4. ' -' → logprob: -14.37916374206543
    5. '<|end|>' → logprob: -15.75416374206543
    6. '```' → logprob: -16.75416374206543
    7. '۰' → logprob: -18.62916374206543
    8. '1' → logprob: -19.25416374206543
    9. ')' → logprob: -19.37916374206543
    10. '–' → logprob: -19.81666374206543

Token 63: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.981667537620524e-06
    2. ' ]' → logprob: -13.375001907348633
    3. ')' → logprob: -15.250001907348633
    4. ']
' → logprob: -16.250001907348633
    5. ']

' → logprob: -16.750001907348633
    6. '#' → logprob: -17.500001907348633
    7. '])' → logprob: -18.875001907348633
    8. '']' → logprob: -19.625001907348633
    9. ')]' → logprob: -20.000001907348633
    10. '`]' → logprob: -20.000001907348633

Token 64: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09752339124679565
    2. 'n' → logprob: -2.5975234508514404
    3. 'class' → logprob: -4.597523212432861
    4. 'N' → logprob: -4.972523212432861
    5. 'H' → logprob: -7.472523212432861
    6. 'T' → logprob: -8.22252368927002
    7. '#' → logprob: -8.72252368927002
    8. 'x' → logprob: -9.22252368927002
    9. 'for' → logprob: -9.84752368927002
    10. 'd' → logprob: -10.22252368927002

Token 65: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00011772842844948173
    2. 'True' → logprob: -9.125117301940918
    3. ' not' → logprob: -12.250117301940918
    4. '(True' → logprob: -13.250117301940918
    5. ' ' → logprob: -13.375117301940918
    6. ' input' → logprob: -14.625117301940918
    7. ' true' → logprob: -16.500118255615234
    8. '  ' → logprob: -17.250118255615234
    9. ' ' → logprob: -17.375118255615234
    10. ' Tru' → logprob: -17.875118255615234

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2233183042553719e-05
    2. ' :' → logprob: -12.375012397766113
    3. '():' → logprob: -12.500012397766113
    4. ':**' → logprob: -12.875012397766113
    5. '):' → logprob: -14.375012397766113
    6. ':
' → logprob: -14.500012397766113
    7. ',' → logprob: -16.250011444091797
    8. ':def' → logprob: -16.375011444091797
    9. '<|end|>' → logprob: -16.500011444091797
    10. '```' → logprob: -17.000011444091797

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005798197817057371
    2. '<|end|>' → logprob: -5.88079833984375
    3. ':' → logprob: -6.25579833984375
    4. '    
' → logprob: -7.75579833984375
    5. '<|end|>' → logprob: -9.00579833984375
    6. ' ' → logprob: -9.38079833984375
    7. ' readline' → logprob: -9.75579833984375
    8. ',' → logprob: -10.13079833984375
    9. ':
' → logprob: -10.13079833984375
    10. '  ' → logprob: -10.25579833984375

Token 68: ' H' (ID: 487)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8702309727668762
    2. 'n' → logprob: -1.7452309131622314
    3. 'line' → logprob: -1.7452309131622314
    4. '   ' → logprob: -2.8702309131622314
    5. ' n' → logprob: -3.3702309131622314
    6. 's' → logprob: -3.4952309131622314
    7. 'x' → logprob: -3.4952309131622314
    8. 'try' → logprob: -4.2452311515808105
    9. 'data' → logprob: -4.3702311515808105
    10. ' try' → logprob: -4.6202311515808105

Token 69: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002588265808299184
    2. '=' → logprob: -6.502588272094727
    3. ' =' → logprob: -7.127588272094727
    4. ' ,' → logprob: -8.377588272094727
    5. ',input' → logprob: -11.752588272094727
    6. '>' → logprob: -12.127588272094727
    7. '=input' → logprob: -12.377588272094727
    8. ')' → logprob: -12.627588272094727
    9. '=int' → logprob: -13.002588272094727
    10. ',p' → logprob: -13.252588272094727

Token 70: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38694632053375244
    2. '=' → logprob: -1.1369463205337524
    3. ',' → logprob: -10.011946678161621
    4. '=input' → logprob: -10.511946678161621
    5. ')' → logprob: -14.261946678161621
    6. '=int' → logprob: -14.386946678161621
    7. '=line' → logprob: -15.136946678161621
    8. ' ,' → logprob: -15.386946678161621
    9. ' ' → logprob: -15.386946678161621
    10. '＝' → logprob: -15.761946678161621

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28121116757392883
    2. ' =' → logprob: -1.4062111377716064
    3. '=input' → logprob: -9.906210899353027
    4. ',' → logprob: -12.156210899353027
    5. '=line' → logprob: -12.906210899353027
    6. '=int' → logprob: -14.156210899353027
    7. '=

' → logprob: -14.656210899353027
    8. ')' → logprob: -15.031210899353027
    9. '=list' → logprob: -15.281210899353027
    10. '=
' → logprob: -15.531210899353027

Token 72: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04304361343383789
    2. 'map' → logprob: -3.168043613433838
    3. ' list' → logprob: -10.54304313659668
    4. '	map' → logprob: -11.91804313659668
    5. ' input' → logprob: -12.41804313659668
    6. 'list' → logprob: -12.66804313659668
    7. ' ' → logprob: -13.29304313659668
    8. 'input' → logprob: -13.79304313659668
    9. '(map' → logprob: -14.29304313659668
    10. '[' → logprob: -15.04304313659668

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4650496542453766
    2. '(input' → logprob: -1.4650496244430542
    3. '(' → logprob: -1.9650496244430542
    4. '(list' → logprob: -8.215049743652344
    5. '(map' → logprob: -8.590049743652344
    6. '(str' → logprob: -9.340049743652344
    7. 'input' → logprob: -10.340049743652344
    8. '(lambda' → logprob: -10.840049743652344
    9. '(in' → logprob: -10.965049743652344
    10. '(
' → logprob: -11.090049743652344

Token 74: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3155837953090668
    2. ',' → logprob: -1.3155838251113892
    3. 'input' → logprob: -6.3155837059021
    4. '(input' → logprob: -7.6905837059021
    5. ' input' → logprob: -11.190584182739258
    6. '(' → logprob: -11.440584182739258
    7. ' ,' → logprob: -11.815584182739258
    8. '```' → logprob: -12.065584182739258
    9. ')' → logprob: -12.565584182739258
    10. '(),' → logprob: -12.815584182739258

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.465036105713807e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -15.500007629394531
    4. ')' → logprob: -16.50000762939453
    5. '.' → logprob: -17.25000762939453
    6. '.readline' → logprob: -17.37500762939453
    7. '())' → logprob: -18.00000762939453
    8. '   ' → logprob: -18.37500762939453
    9. '(' → logprob: -18.75000762939453
    10. 'split' → logprob: -19.37500762939453

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1723068654537201
    2. 'strip' → logprob: -1.9223068952560425
    3. 'rstrip' → logprob: -4.422307014465332
    4. '(split' → logprob: -13.922307014465332
    5. ' split' → logprob: -13.922307014465332
    6. ')' → logprob: -14.297307014465332
    7. ' strip' → logprob: -15.172307014465332
    8. 'rs' → logprob: -16.047306060791016
    9. 'read' → logprob: -16.047306060791016
    10. '```' → logprob: -16.172306060791016

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08402261137962341
    2. ')' → logprob: -2.8340225219726562
    3. '()' → logprob: -3.8340225219726562
    4. '()))' → logprob: -9.084022521972656
    5. '))' → logprob: -10.334022521972656
    6. '())
' → logprob: -10.834022521972656
    7. '(' → logprob: -11.209022521972656
    8. ' ())' → logprob: -12.709022521972656
    9. '();)' → logprob: -13.209022521972656
    10. '());' → logprob: -13.584022521972656

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.2265470325946808
    2. 'H' → logprob: -1.6015470027923584
    3. ' not' → logprob: -6.9765472412109375
    4. ' (' → logprob: -9.101547241210938
    5. '(H' → logprob: -9.976547241210938
    6. ' ' → logprob: -10.726547241210938
    7. '(' → logprob: -11.351547241210938
    8. 'not' → logprob: -12.226547241210938
    9. '	H' → logprob: -13.601547241210938
    10. ' ' → logprob: -13.976547241210938

Token 81: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1603129804134369
    2. ' ==' → logprob: -1.9103130102157593
    3. '=' → logprob: -10.03531265258789
    4. ')==' → logprob: -11.66031265258789
    5. '===' → logprob: -12.03531265258789
    6. '()==' → logprob: -12.03531265258789
    7. ']==' → logprob: -12.28531265258789
    8. '0' → logprob: -12.53531265258789
    9. '<' → logprob: -12.66031265258789
    10. '```' → logprob: -13.03531265258789

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. 'W' → logprob: -14.25015926361084
    4. '```' → logprob: -17.000158309936523
    5. ' W' → logprob: -17.500158309936523
    6. '۰' → logprob: -17.750158309936523
    7. '０' → logprob: -19.000158309936523
    8. '  ' → logprob: -19.812658309936523
    9. '   ' → logprob: -20.187658309936523
    10. 'and' → logprob: -20.312658309936523

Token 83: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06994999200105667
    2. 'and' → logprob: -2.6949501037597656
    3. ' ' → logprob: -11.694950103759766
    4. ':' → logprob: -13.194950103759766
    5. '	and' → logprob: -13.319950103759766
    6. ' or' → logprob: -14.319950103759766
    7. '  ' → logprob: -15.194950103759766
    8. '   ' → logprob: -15.569950103759766
    9. ' ' → logprob: -15.819950103759766
    10. '0' → logprob: -16.069950103759766

Token 84: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6931678652763367
    2. ' W' → logprob: -0.6931678652763367
    3. ' ' → logprob: -10.943167686462402
    4. '<|end|>' → logprob: -13.818167686462402
    5. '	W' → logprob: -13.943167686462402
    6. '  ' → logprob: -14.693167686462402
    7. '<W' → logprob: -15.318167686462402
    8. ' ' → logprob: -15.318167686462402
    9. ',W' → logprob: -16.81816864013672
    10. 'w' → logprob: -17.31816864013672

Token 85: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -3.6550729419104755e-05
    2. ' ==' → logprob: -10.250036239624023
    3. '===' → logprob: -14.625036239624023
    4. ']==' → logprob: -15.625036239624023
    5. ')==' → logprob: -15.750036239624023
    6. '()==' → logprob: -16.125036239624023
    7. '=' → logprob: -16.250036239624023
    8. '<|end|>' → logprob: -16.375036239624023
    9. '==
' → logprob: -16.750036239624023
    10. '<|end|>' → logprob: -17.750036239624023

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488811288960278
    2. ' ' → logprob: -7.625488758087158
    3. 'and' → logprob: -15.125489234924316
    4. ' and' → logprob: -15.250489234924316
    5. '<|end|>' → logprob: -16.12548828125
    6. '   ' → logprob: -16.37548828125
    7. '  ' → logprob: -17.25048828125
    8. '۰' → logprob: -17.87548828125
    9. '<|end|>' → logprob: -18.25048828125
    10. '```' → logprob: -18.68798828125

Token 87: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0037234800402075052
    2. 'and' → logprob: -5.628723621368408
    3. '<|end|>' → logprob: -9.75372314453125
    4. ':' → logprob: -10.12872314453125
    5. '	and' → logprob: -11.25372314453125
    6. ' ' → logprob: -12.25372314453125
    7. '<|end|>' → logprob: -12.37872314453125
    8. ' ' → logprob: -13.50372314453125
    9. '0' → logprob: -14.62872314453125
    10. '   ' → logprob: -14.62872314453125

Token 88: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.05533310025930405
    2. 'N' → logprob: -2.930333137512207
    3. ' ' → logprob: -8.055333137512207
    4. '<|end|>' → logprob: -9.305333137512207
    5. '0' → logprob: -10.305333137512207
    6. '	N' → logprob: -12.430333137512207
    7. '<|end|>' → logprob: -13.180333137512207
    8. ' ' → logprob: -13.680333137512207
    9. '  ' → logprob: -14.180333137512207
    10. ' and' → logprob: -14.430333137512207

Token 89: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0017337289173156023
    2. ' ==' → logprob: -6.376733779907227
    3. '=' → logprob: -10.876733779907227
    4. '0' → logprob: -12.126733779907227
    5. '<|end|>' → logprob: -13.126733779907227
    6. ')==' → logprob: -13.626733779907227
    7. '===' → logprob: -13.751733779907227
    8. ']==' → logprob: -13.876733779907227
    9. '()==' → logprob: -14.376733779907227
    10. '<|end|>' → logprob: -14.501733779907227

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001242772996192798
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -14.250123977661133
    4. '  ' → logprob: -16.250123977661133
    5. '   ' → logprob: -16.625123977661133
    6. '۰' → logprob: -17.250123977661133
    7. '<|end|>' → logprob: -18.625123977661133
    8. ')' → logprob: -18.812623977661133
    9. '०' → logprob: -19.562623977661133
    10. '```' → logprob: -19.562623977661133

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008033146150410175
    2. ':
' → logprob: -7.500803470611572
    3. '   ' → logprob: -8.375802993774414
    4. '       ' → logprob: -11.375802993774414
    5. ' :' → logprob: -12.750802993774414
    6. '):' → logprob: -13.125802993774414
    7. '.' → logprob: -14.000802993774414
    8. '	break' → logprob: -14.000802993774414
    9. ':return' → logprob: -14.125802993774414
    10. ' break' → logprob: -15.375802993774414

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012677278369665146
    2. '   ' → logprob: -4.387677192687988
    3. '	' → logprob: -9.762677192687988
    4. '	break' → logprob: -9.762677192687988
    5. '	   ' → logprob: -11.387677192687988
    6. '<|end|>' → logprob: -11.637677192687988
    7. ' break' → logprob: -12.137677192687988
    8. '   ' → logprob: -12.262677192687988
    9. '      ' → logprob: -13.012677192687988
    10. '    ' → logprob: -13.137677192687988

Token 93: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3531799614429474
    2. '       ' → logprob: -1.728179931640625
    3. 'break' (adapté à ' break') → logprob: -2.228179931640625
    4. '	break' → logprob: -4.853179931640625
    5. '   ' → logprob: -5.478179931640625
    6. '
' → logprob: -9.603179931640625
    7. '           ' → logprob: -10.228179931640625
    8. '```' → logprob: -10.353179931640625
    9. '_break' → logprob: -10.478179931640625
    10. '        
' → logprob: -11.228179931640625

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46915578842163086
    2. '   ' → logprob: -1.4691557884216309
    3. '    
' → logprob: -2.344155788421631
    4. '<|end|>' → logprob: -4.094155788421631
    5. '```' → logprob: -5.344155788421631
    6. 'newline' → logprob: -5.844155788421631
    7. '  
' → logprob: -5.969155788421631
    8. 'n' → logprob: -6.094155788421631
    9. '   
' → logprob: -6.344155788421631
    10. '<|end|>' → logprob: -6.594155788421631

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36258095502853394
    2. '    
' → logprob: -1.7375810146331787
    3. '```' → logprob: -2.4875810146331787
    4. '
' → logprob: -3.8625810146331787
    5. '<|end|>' → logprob: -4.9875807762146
    6. '  
' → logprob: -5.3625807762146
    7. '   
' → logprob: -5.9875807762146
    8. '\n' → logprob: -6.6125807762146
    9. '' → logprob: -6.8625807762146
    10. 'n' → logprob: -6.8625807762146

Token 96: ' program' (ID: 2193)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7844840884208679
    2. '   ' → logprob: -1.7844841480255127
    3. 'field' → logprob: -2.1594841480255127
    4. 'map' → logprob: -2.7844841480255127
    5. 'robot' → logprob: -3.0344841480255127
    6. ' grid' → logprob: -3.0344841480255127
    7. 'board' → logprob: -3.7844841480255127
    8. 'robots' → logprob: -4.159483909606934
    9. '```' → logprob: -4.534483909606934
    10. '    
' → logprob: -5.159483909606934

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045331064611673355
    2. '=' → logprob: -3.1703310012817383
    3. '=[]' → logprob: -6.920331001281738
    4. 's' → logprob: -7.545331001281738
    5. '_lines' → logprob: -7.670331001281738
    6. '_' → logprob: -8.795331001281738
    7. '_tokens' → logprob: -10.795331001281738
    8. ' ' → logprob: -11.045331001281738
    9. '_commands' → logprob: -11.170331001281738
    10. '=[]
' → logprob: -11.295331001281738

Token 98: ' input' (ID: 3422)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0916597992181778
    2. 'input' → logprob: -2.9666597843170166
    3. '[]' → logprob: -3.7166597843170166
    4. '[' → logprob: -5.591660022735596
    5. '[str' → logprob: -6.091660022735596
    6. 'list' → logprob: -6.091660022735596
    7. '[list' → logprob: -6.466660022735596
    8. ' input' → logprob: -7.216660022735596
    9. ' [' → logprob: -8.216659545898438
    10. '""' → logprob: -8.466659545898438

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1269332468509674
    2. '()' → logprob: -2.1269333362579346
    3. '.strip' → logprob: -13.751933097839355
    4. '(' → logprob: -14.126933097839355
    5. ' ().' → logprob: -14.376933097839355
    6. '())' → logprob: -14.626933097839355
    7. '()[' → logprob: -14.751933097839355
    8. ' ()' → logprob: -15.001933097839355
    9. '()
' → logprob: -15.251933097839355
    10. '.rstrip' → logprob: -15.251933097839355

Token 100: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10020861029624939
    2. 'rstrip' → logprob: -2.3502085208892822
    3. 'read' → logprob: -13.850208282470703
    4. 'split' → logprob: -13.975208282470703
    5. 'replace' → logprob: -17.100208282470703
    6. 'str' → logprob: -17.225208282470703
    7. 'r' → logprob: -17.475208282470703
    8. 'decode' → logprob: -17.725208282470703
    9. ' strip' → logprob: -17.975208282470703
    10. 'rs' → logprob: -19.350208282470703

Token 101: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000333320174831897
    2. '<|end|>' → logprob: -8.500333786010742
    3. '()
' → logprob: -10.000333786010742
    4. '())' → logprob: -11.000333786010742
    5. '()]' → logprob: -11.500333786010742
    6. '(' → logprob: -11.875333786010742
    7. '()+' → logprob: -12.000333786010742
    8. '();' → logprob: -12.125333786010742
    9. '<|end|>' → logprob: -12.250333786010742
    10. '()\' → logprob: -12.250333786010742

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17377667129039764
    2. '    
' → logprob: -3.548776626586914
    3. 'position' → logprob: -4.048776626586914
    4. 'positions' → logprob: -4.173776626586914
    5. 'pos' → logprob: -4.298776626586914
    6. 'x' → logprob: -4.298776626586914
    7. 'state' → logprob: -4.548776626586914
    8. 'direction' → logprob: -5.423776626586914
    9. 'current' → logprob: -5.423776626586914
    10. ' positions' → logprob: -5.423776626586914

Token 103: ' maze' (ID: 58295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12251607328653336
    2. 'grid' → logprob: -2.87251615524292
    3. 'y' → logprob: -3.62251615524292
    4. 'field' → logprob: -4.87251615524292
    5. '#' → logprob: -4.99751615524292
    6. 'robot' → logprob: -6.12251615524292
    7. 'r' → logprob: -6.12251615524292
    8. 'map' → logprob: -6.24751615524292
    9. '   ' → logprob: -6.49751615524292
    10. 'for' → logprob: -6.49751615524292

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233469009399414
    2. '=' → logprob: -0.8983469009399414
    3. '=[]' → logprob: -8.898346900939941
    4. '=[' → logprob: -10.523346900939941
    5. '[' → logprob: -10.648346900939941
    6. ',' → logprob: -10.898346900939941
    7. '=[[' → logprob: -12.398346900939941
    8. '_map' → logprob: -12.773346900939941
    9. ' =[' → logprob: -13.523346900939941
    10. ')' → logprob: -13.648346900939941

Token 105: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.695180356502533
    2. ' [' → logprob: -0.695180356502533
    3. '[list' → logprob: -7.320180416107178
    4. ' []' → logprob: -8.07017993927002
    5. '[line' → logprob: -8.57017993927002
    6. '[]' → logprob: -8.57017993927002
    7. '[input' → logprob: -8.94517993927002
    8. '[str' → logprob: -9.69517993927002
    9. '[List' → logprob: -9.94517993927002
    10. '[array' → logprob: -10.07017993927002

Token 106: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0323135107755661
    2. ' list' → logprob: -3.532313585281372
    3. 'input' → logprob: -6.657313346862793
    4. '[list' → logprob: -7.282313346862793
    5. '[input' → logprob: -7.532313346862793
    6. ' input' → logprob: -10.032313346862793
    7. '(list' → logprob: -12.657313346862793
    8. ' [' → logprob: -13.032313346862793
    9. '[' → logprob: -13.657313346862793
    10. '	list' → logprob: -14.282313346862793

Token 107: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005461186170578003
    2. '(map' → logprob: -5.2554612159729
    3. '(' → logprob: -9.255460739135742
    4. 'input' → logprob: -9.630460739135742
    5. '()' → logprob: -10.005460739135742
    6. '(sys' → logprob: -11.005460739135742
    7. '(str' → logprob: -14.005460739135742
    8. ' (' → logprob: -14.255460739135742
    9. 'map' → logprob: -14.505460739135742
    10. '()]' → logprob: -14.505460739135742

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006400104146450758
    2. '())' → logprob: -5.631400108337402
    3. '()' → logprob: -5.881400108337402
    4. '()]' → logprob: -13.256400108337402
    5. '(' → logprob: -13.881400108337402
    6. '()[' → logprob: -14.256400108337402
    7. ' ().' → logprob: -14.506400108337402
    8. '()
' → logprob: -14.881400108337402
    9. ')' → logprob: -15.631400108337402
    10. ' ())' → logprob: -15.881400108337402

Token 109: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06196869537234306
    2. 'rstrip' → logprob: -2.8119688034057617
    3. 'split' → logprob: -14.061968803405762
    4. ' strip' → logprob: -15.186968803405762
    5. '(strip' → logprob: -17.186967849731445
    6. '_strip' → logprob: -17.811967849731445
    7. 'read' → logprob: -17.811967849731445
    8. 'replace' → logprob: -18.436967849731445
    9. '.rstrip' → logprob: -18.936967849731445
    10. '.strip' → logprob: -19.436967849731445

Token 110: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10072460770606995
    2. '('\' → logprob: -2.350724697113037
    3. '()' → logprob: -8.475724220275879
    4. '("\' → logprob: -8.850724220275879
    5. '())
' → logprob: -9.975724220275879
    6. '()\' → logprob: -9.975724220275879
    7. ''\' → logprob: -10.975724220275879
    8. '('' → logprob: -11.100724220275879
    9. '()))' → logprob: -11.100724220275879
    10. ')' → logprob: -11.850724220275879

Token 111: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.166338137816638e-05
    2. '\n' → logprob: -10.375031471252441
    3. 'r' → logprob: -15.000031471252441
    4. 'newline' → logprob: -17.375032424926758
    5. '
' → logprob: -18.375032424926758
    6. ')' → logprob: -18.625032424926758
    7. '0' → logprob: -18.750032424926758
    8. ' n' → logprob: -18.875032424926758
    9. 'u' → logprob: -19.250032424926758
    10. 't' → logprob: -19.500032424926758

Token 112: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6635680794715881
    2. '))' → logprob: -0.7885680794715881
    3. ')' → logprob: -4.538568019866943
    4. '()' → logprob: -4.663568019866943
    5. '()))' → logprob: -4.788568019866943
    6. '"))' → logprob: -6.913568019866943
    7. '')]' → logprob: -8.288568496704102
    8. ')]' → logprob: -8.413568496704102
    9. '')' → logprob: -9.163568496704102
    10. ''' → logprob: -9.288568496704102

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03094085492193699
    2. 'for' → logprob: -3.6559407711029053
    3. '   ' → logprob: -5.905941009521484
    4. '	for' → logprob: -6.280941009521484
    5. ']' → logprob: -10.905941009521484
    6. '    ' → logprob: -11.905941009521484
    7. '<|end|>' → logprob: -12.655941009521484
    8. ')' → logprob: -12.780941009521484
    9. ' ' → logprob: -13.655941009521484
    10. '  ' → logprob: -14.030941009521484

Token 114: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13547416031360626
    2. ' range' → logprob: -2.51047420501709
    3. '_' → logprob: -3.13547420501709
    4. 'range' → logprob: -6.26047420501709
    5. ' i' → logprob: -10.13547420501709
    6. '_range' → logprob: -11.13547420501709
    7. '(range' → logprob: -11.38547420501709
    8. ' in' → logprob: -12.13547420501709
    9. 'i' → logprob: -12.88547420501709
    10. ' ' → logprob: -13.13547420501709

Token 115: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14117054641246796
    2. ' in' → logprob: -2.1411705017089844
    3. 'range' → logprob: -4.266170501708984
    4. ' range' → logprob: -9.391170501708984
    5. 'ange' → logprob: -11.391170501708984
    6. ' ' → logprob: -12.266170501708984
    7. '(range' → logprob: -12.766170501708984
    8. ')' → logprob: -14.266170501708984
    9. '   ' → logprob: -14.266170501708984
    10. '  ' → logprob: -14.641170501708984

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001589618914294988
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.62515926361084
    4. '	range' → logprob: -17.375158309936523
    5. '   ' → logprob: -18.000158309936523
    6. ')' → logprob: -18.375158309936523
    7. '[' → logprob: -19.625158309936523
    8. '  ' → logprob: -19.875158309936523
    9. '.range' → logprob: -20.000158309936523
    10. ' ' → logprob: -20.125158309936523

Token 117: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -14.375007629394531
    4. 'H' → logprob: -14.625007629394531
    5. '   ' → logprob: -18.87500762939453
    6. '(range' → logprob: -19.00000762939453
    7. '((' → logprob: -19.12500762939453
    8. ')(' → logprob: -19.25000762939453
    9. '(int' → logprob: -19.37500762939453
    10. ' H' → logprob: -19.37500762939453

Token 118: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0038036382757127285
    2. ')' → logprob: -6.003803730010986
    3. ']' → logprob: -6.628803730010986
    4. ' )' → logprob: -12.878803253173828
    5. ')],' → logprob: -14.878803253173828
    6. '   ' → logprob: -14.878803253173828
    7. ')
' → logprob: -15.253803253173828
    8. ')]
' → logprob: -15.253803253173828
    9. ' ]' → logprob: -15.253803253173828
    10. '）' → logprob: -15.378803253173828

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3532777726650238
    2. 'x' → logprob: -2.2282776832580566
    3. 'r' → logprob: -2.8532776832580566
    4. 'y' → logprob: -3.4782776832580566
    5. 'i' → logprob: -3.7282776832580566
    6. 'start' → logprob: -4.603277683258057
    7. '    
' → logprob: -4.603277683258057
    8. '    ' → logprob: -4.728277683258057
    9. 'pos' → logprob: -4.978277683258057
    10. '#' → logprob: -5.228277683258057

Token 120: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05868269503116608
    2. 'y' → logprob: -3.058682680130005
    3. 'r' → logprob: -5.058682918548584
    4. 'sx' → logprob: -6.808682918548584
    5. 'for' → logprob: -7.558682918548584
    6. 'pos' → logprob: -7.808682918548584
    7. '#' (adapté à ' #') → logprob: -8.058682441711426
    8. ' x' → logprob: -8.433682441711426
    9. 'px' → logprob: -8.433682441711426
    10. 'sy' → logprob: -8.558682441711426

Token 121: ' find' (ID: 1646)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2204819768667221
    2. 'y' → logprob: -2.3454818725585938
    3. '#' → logprob: -2.8454818725585938
    4. ' x' → logprob: -4.220481872558594
    5. 'for' → logprob: -4.970481872558594
    6. 'r' → logprob: -5.595481872558594
    7. 'sx' → logprob: -5.595481872558594
    8. 'sy' → logprob: -5.720481872558594
    9. 'pos' → logprob: -6.095481872558594
    10. ' y' → logprob: -6.095481872558594

Token 122: ' start' (ID: 1604)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' and' (ID: 326)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7539229989051819
    2. 'x' → logprob: -1.503922939300537
    3. ' for' → logprob: -1.878922939300537
    4. 'for' → logprob: -2.253922939300537
    5. ' y' → logprob: -3.503922939300537
    6. '   ' → logprob: -4.628922939300537
    7. ' x' → logprob: -5.628922939300537
    8. 'pos' → logprob: -6.503922939300537
    9. ' ypos' → logprob: -7.378922939300537
    10. 'row' → logprob: -7.628922939300537

Token 124: ' goal' (ID: 8583)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3180232048034668
    2. 'initial' → logprob: -2.318023204803467
    3. ' direction' → logprob: -2.443023204803467
    4. 'robot' → logprob: -4.318023204803467
    5. ' initial' → logprob: -4.443023204803467
    6. 'initialize' → logprob: -4.443023204803467
    7. 'goal' → logprob: -4.568023204803467
    8. 'end' → logprob: -4.693023204803467
    9. 'orientation' → logprob: -5.443023204803467
    10. 'current' → logprob: -5.818023204803467

Token 125: ' positions' (ID: 15897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4403044283390045
    2. 'start' → logprob: -1.8153043985366821
    3. 'for' → logprob: -1.9403043985366821
    4. ' for' → logprob: -3.8153045177459717
    5. 'y' → logprob: -4.690304279327393
    6. '    
' → logprob: -5.565304279327393
    7. '
' → logprob: -5.940304279327393
    8. 'pos' → logprob: -5.940304279327393
    9. ' start' → logprob: -6.315304279327393
    10. 'sx' → logprob: -6.440304279327393

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40562373399734497
    2. 'start' → logprob: -1.4056236743927002
    3. 'for' → logprob: -3.0306236743927
    4. '    
' → logprob: -4.655623912811279
    5. '
' → logprob: -4.780623912811279
    6. ' for' → logprob: -4.780623912811279
    7. ' start' → logprob: -5.905623912811279
    8. 'y' → logprob: -6.280623912811279
    9. 'sx' → logprob: -6.405623912811279
    10. 's' → logprob: -6.530623912811279

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16788934171199799
    2. 'start' → logprob: -2.167889356613159
    3. 'for' → logprob: -4.16788911819458
    4. ' for' → logprob: -4.66788911819458
    5. ' start' → logprob: -4.79288911819458
    6. 's' → logprob: -6.66788911819458
    7. 'y' → logprob: -6.79288911819458
    8. '    
' → logprob: -7.04288911819458
    9. 'sx' → logprob: -7.04288911819458
    10. 'found' → logprob: -7.54288911819458

Token 128: ' for' (ID: 395)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6902243494987488
    2. 'sx' → logprob: -1.8152244091033936
    3. 'sy' → logprob: -2.1902244091033936
    4. 'for' (adapté à ' for') → logprob: -2.5652244091033936
    5. ' start' → logprob: -2.6902244091033936
    6. '   ' → logprob: -3.5652244091033936
    7. ' sy' → logprob: -3.9402244091033936
    8. ' for' → logprob: -4.0652241706848145
    9. ' sx' → logprob: -4.8152241706848145
    10. 's' → logprob: -6.8152241706848145

Token 129: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7646381855010986
    2. ' y' → logprob: -1.1396381855010986
    3. 'i' → logprob: -1.8896381855010986
    4. 'y' → logprob: -2.7646381855010986
    5. ' r' → logprob: -8.51463794708252
    6. 'r' → logprob: -8.63963794708252
    7. ' row' → logprob: -11.01463794708252
    8. ' ' → logprob: -11.51463794708252
    9. '	y' → logprob: -11.63963794708252
    10. '	i' → logprob: -11.76463794708252

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007635851390659809
    2. 'in' → logprob: -4.882636070251465
    3. ',' → logprob: -11.382636070251465
    4. 'range' → logprob: -11.632636070251465
    5. '<|end|>' → logprob: -12.507636070251465
    6. ' range' → logprob: -12.757636070251465
    7. ' ' → logprob: -13.757636070251465
    8. 's' → logprob: -14.257636070251465
    9. 'y' → logprob: -15.382636070251465
    10. '   ' → logprob: -15.882636070251465

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -16.875261306762695
    4. '	range' → logprob: -17.625261306762695
    5. 'ange' → logprob: -19.875261306762695
    6. 'rang' → logprob: -20.250261306762695
    7. ')' → logprob: -20.250261306762695
    8. '_range' → logprob: -20.375261306762695
    9. '.range' → logprob: -20.625261306762695
    10. '
' → logprob: -20.875261306762695

Token 132: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00025311444187536836
    2. 'H' → logprob: -8.375252723693848
    3. '(' → logprob: -11.000252723693848
    4. '   ' → logprob: -12.875252723693848
    5. '(len' → logprob: -12.875252723693848
    6. ' H' → logprob: -14.750252723693848
    7. '	H' → logprob: -15.625252723693848
    8. ' (' → logprob: -17.125253677368164
    9. '(
' → logprob: -17.250253677368164
    10. ',H' → logprob: -17.500253677368164

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741441607475281
    2. '):
' → logprob: -0.9741441607475281
    3. ':' → logprob: -10.599143981933594
    4. '   ' → logprob: -10.724143981933594
    5. '):
' → logprob: -11.349143981933594
    6. '):

' → logprob: -12.849143981933594
    7. ')' → logprob: -13.099143981933594
    8. ':
' → logprob: -13.474143981933594
    9. ' ):' → logprob: -14.474143981933594
    10. '**' → logprob: -15.349143981933594

Token 134: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008921576663851738
    2. ':' → logprob: -5.5089216232299805
    3. ' for' → logprob: -6.1339216232299805
    4. '       ' → logprob: -6.2589216232299805
    5. '<|end|>' → logprob: -7.3839216232299805
    6. '	for' → logprob: -10.38392162322998
    7. ':
' → logprob: -10.38392162322998
    8. '   ' → logprob: -10.88392162322998
    9. '<|end|>' → logprob: -11.38392162322998
    10. ',' → logprob: -11.50892162322998

Token 135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39923611283302307
    2. ' for' → logprob: -1.1492360830307007
    3. '   ' → logprob: -4.39923620223999
    4. ' ' → logprob: -13.524235725402832
    5. '	for' → logprob: -14.274235725402832
    6. '```' → logprob: -15.774235725402832
    7. '    ' → logprob: -15.899235725402832
    8. '  ' → logprob: -17.14923667907715
    9. 'x' → logprob: -17.64923667907715
    10. '       ' → logprob: -17.64923667907715

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324594371020794
    2. ' x' → logprob: -3.7732460498809814
    3. '```' → logprob: -15.648245811462402
    4. ' ' → logprob: -15.773245811462402
    5. '   ' → logprob: -15.898245811462402
    6. '	x' → logprob: -17.64824676513672
    7. ''x' → logprob: -19.77324676513672
    8. '0' → logprob: -19.89824676513672
    9. ')x' → logprob: -19.89824676513672
    10. ',x' → logprob: -20.02324676513672

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00524075236171484
    2. 'in' → logprob: -5.2552409172058105
    3. ' ' → logprob: -12.505240440368652
    4. '   ' → logprob: -13.630240440368652
    5. '    ' → logprob: -15.005240440368652
    6. '	in' → logprob: -15.255240440368652
    7. '```' → logprob: -15.380240440368652
    8. ',' → logprob: -15.380240440368652
    9. '        ' → logprob: -15.630240440368652
    10. 'In' → logprob: -15.880240440368652

Token 138: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029752571135759354
    2. 'range' → logprob: -3.529752492904663
    3. '(range' → logprob: -13.154752731323242
    4. ' xrange' → logprob: -16.154752731323242
    5. '	range' → logprob: -17.529752731323242
    6. '(' → logprob: -18.779752731323242
    7. ' ' → logprob: -19.654752731323242
    8. '_range' → logprob: -20.279752731323242
    9. ')' → logprob: -20.529752731323242
    10. '.range' → logprob: -20.654752731323242

Token 139: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.011215222999453545
    2. '(H' → logprob: -4.5112152099609375
    3. '(' → logprob: -8.761215209960938
    4. '(len' → logprob: -12.011215209960938
    5. 'W' → logprob: -12.886215209960938
    6. '   ' → logprob: -14.386215209960938
    7. ' (' → logprob: -14.636215209960938
    8. '((' → logprob: -14.636215209960938
    9. '(L' → logprob: -15.636215209960938
    10. ' W' → logprob: -16.386215209960938

Token 140: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3874431252479553
    2. '):' → logprob: -1.1374430656433105
    3. ')' → logprob: -7.8874430656433105
    4. ':' → logprob: -9.887443542480469
    5. '   ' → logprob: -10.512443542480469
    6. '():
' → logprob: -10.512443542480469
    7. '       ' → logprob: -10.512443542480469
    8. '):

' → logprob: -11.137443542480469
    9. ' ):
' → logprob: -11.137443542480469
    10. '):
' → logprob: -11.637443542480469

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015198609326034784
    2. ' if' → logprob: -6.626519680023193
    3. 'if' → logprob: -9.126520156860352
    4. '       ' → logprob: -10.126520156860352
    5. '<|end|>' → logprob: -11.126520156860352
    6. '          ' → logprob: -11.751520156860352
    7. '	       ' → logprob: -11.876520156860352
    8. '```' → logprob: -12.626520156860352
    9. ',' → logprob: -13.126520156860352
    10. '<|end|>' → logprob: -13.376520156860352

Token 142: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10111373662948608
    2. '           ' → logprob: -2.726113796234131
    3. 'if' (adapté à ' if') → logprob: -3.726113796234131
    4. '               ' → logprob: -5.101113796234131
    5. '       ' → logprob: -7.726113796234131
    6. '   ' → logprob: -10.726113319396973
    7. '<|end|>' → logprob: -10.976113319396973
    8. '	       ' → logprob: -11.476113319396973
    9. '	if' → logprob: -11.726113319396973
    10. '#' → logprob: -12.726113319396973

Token 143: ' maze' (ID: 58295)
  Prédit: ' maze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maze' → logprob: -0.012510471045970917
    2. 'maze' → logprob: -4.387510299682617
    3. ' ma' → logprob: -14.762510299682617
    4. '   ' → logprob: -16.262510299682617
    5. 'ma' → logprob: -16.262510299682617
    6. ' ' → logprob: -16.512510299682617
    7. '_ma' → logprob: -16.762510299682617
    8. ' labyrinth' → logprob: -17.012510299682617
    9. 'Maze' → logprob: -17.262510299682617
    10. '    ' → logprob: -17.262510299682617

Token 144: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.4849443838757e-06
    2. '[x' → logprob: -12.500004768371582
    3. '[' → logprob: -15.125004768371582
    4. ' [' → logprob: -15.750004768371582
    5. '```' → logprob: -15.750004768371582
    6. '][' → logprob: -16.750003814697266
    7. '[user' → logprob: -16.875003814697266
    8. '\[' → logprob: -17.500003814697266
    9. '[z' → logprob: -18.125003814697266
    10. '[Y' → logprob: -18.250003814697266

Token 145: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.036109693348407745
    2. '[y' → logprob: -4.036109924316406
    3. '[x' → logprob: -4.036109924316406
    4. ' ][' → logprob: -10.411109924316406
    5. ']' → logprob: -10.661109924316406
    6. ' [' → logprob: -11.036109924316406
    7. ''][' → logprob: -11.036109924316406
    8. '"][' → logprob: -11.286109924316406
    9. '   ' → logprob: -11.911109924316406
    10. '```' → logprob: -12.411109924316406

Token 146: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.827200897736475e-05
    2. ' x' → logprob: -9.500078201293945
    3. ''x' → logprob: -12.750078201293945
    4. '"x' → logprob: -15.500078201293945
    5. '	x' → logprob: -15.625078201293945
    6. ')x' → logprob: -16.875078201293945
    7. '[x' → logprob: -17.250078201293945
    8. '(x' → logprob: -17.500078201293945
    9. '_x' → logprob: -17.750078201293945
    10. ':x' → logprob: -18.000078201293945

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13838043808937073
    2. ']==' → logprob: -2.263380527496338
    3. ']=='' → logprob: -3.763380527496338
    4. '==' → logprob: -6.638380527496338
    5. '=='' → logprob: -8.26338005065918
    6. ' ==' → logprob: -8.63838005065918
    7. '[' → logprob: -9.26338005065918
    8. ' ]' → logprob: -9.51338005065918
    9. ']=="' → logprob: -9.63838005065918
    10. '']=='' → logprob: -11.38838005065918

Token 148: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23696619272232056
    2. ' ==' → logprob: -1.7369661331176758
    3. '=='' → logprob: -3.361966133117676
    4. '=="' → logprob: -9.361966133117676
    5. ']==' → logprob: -9.861966133117676
    6. ']=='' → logprob: -10.236966133117676
    7. ' =='' → logprob: -10.236966133117676
    8. '[' → logprob: -10.736966133117676
    9. '==
' → logprob: -11.236966133117676
    10. '=' → logprob: -11.861966133117676

Token 149: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.04135532304644585
    2. ''' → logprob: -3.6663553714752197
    3. ''L' → logprob: -5.791355133056641
    4. ''s' → logprob: -5.916355133056641
    5. ''I' → logprob: -6.041355133056641
    6. ''N' → logprob: -6.291355133056641
    7. ''A' → logprob: -6.541355133056641
    8. '"S' → logprob: -6.791355133056641
    9. ''O' → logprob: -7.291355133056641
    10. ' '' → logprob: -7.666355133056641

Token 150: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01781391352415085
    2. 'N' → logprob: -5.142813682556152
    3. 'D' → logprob: -5.392813682556152
    4. 'X' → logprob: -5.892813682556152
    5. '@' → logprob: -6.142813682556152
    6. 'O' → logprob: -7.767813682556152
    7. 's' → logprob: -7.767813682556152
    8. 'I' → logprob: -7.892813682556152
    9. 'A' → logprob: -8.642813682556152
    10. 'L' → logprob: -8.892813682556152

Token 151: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04995659738779068
    2. '':
' → logprob: -3.0499565601348877
    3. ''' → logprob: -6.674956798553467
    4. '':
' → logprob: -9.799956321716309
    5. ':' → logprob: -10.549956321716309
    6. '":' → logprob: -11.799956321716309
    7. ' ':' → logprob: -12.174956321716309
    8. '':

' → logprob: -12.424956321716309
    9. '(':' → logprob: -12.924956321716309
    10. '':'' → logprob: -13.549956321716309

Token 152: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1156233549118042
    2. '               ' → logprob: -1.1156233549118042
    3. ':' → logprob: -1.4906233549118042
    4. ':
' → logprob: -2.3656234741210938
    5. ' and' → logprob: -4.990623474121094
    6. ',' → logprob: -5.490623474121094
    7. ' :' → logprob: -6.115623474121094
    8. ' =' → logprob: -6.865623474121094
    9. '            
' → logprob: -6.865623474121094
    10. ' direction' → logprob: -6.990623474121094

Token 153: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7407992482185364
    2. ' sy' → logprob: -1.1157991886138916
    3. 'start' (adapté à ' start') → logprob: -2.1157991886138916
    4. ' sx' → logprob: -3.3657991886138916
    5. 'sy' → logprob: -3.6157991886138916
    6. 'sx' → logprob: -4.615799427032471
    7. ' pos' → logprob: -6.490799427032471
    8. 'pos' → logprob: -7.365799427032471
    9. ' y' → logprob: -8.115798950195312
    10. 'x' → logprob: -8.115798950195312

Token 154: ' =' (ID: 314)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.030275342985987663
    2. 'x' → logprob: -4.155275344848633
    3. '_y' → logprob: -5.030275344848633
    4. ' =' → logprob: -5.155275344848633
    5. '=' → logprob: -6.530275344848633
    6. '_pos' → logprob: -8.155275344848633
    7. '_' → logprob: -9.655275344848633
    8. 'y' → logprob: -11.030275344848633
    9. 'X' → logprob: -13.155275344848633
    10. '_position' → logprob: -14.155275344848633

Token 155: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004658792167901993
    2. '(y' → logprob: -5.5046586990356445
    3. ' (' → logprob: -7.5046586990356445
    4. 'x' → logprob: -10.504658699035645
    5. '(' → logprob: -13.129658699035645
    6. '[x' → logprob: -15.504658699035645
    7. '   ' → logprob: -17.00465965270996
    8. 'y' → logprob: -17.62965965270996
    9. '[y' → logprob: -18.25465965270996
    10. ' x' → logprob: -19.00465965270996

Token 156: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012475410767365247
    2. ' x' → logprob: -9.62512493133545
    3. 'y' → logprob: -9.75012493133545
    4. ' y' → logprob: -15.37512493133545
    5. ')x' → logprob: -16.625123977661133
    6. '(x' → logprob: -17.625123977661133
    7. '	x' → logprob: -19.625123977661133
    8. ')' → logprob: -19.875123977661133
    9. ',x' → logprob: -20.375123977661133
    10. '_x' → logprob: -20.375123977661133

Token 157: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10051709413528442
    2. ',y' → logprob: -2.3505170345306396
    3. ' ,' → logprob: -8.100517272949219
    4. ',Y' → logprob: -13.475517272949219
    5. ',user' → logprob: -14.225517272949219
    6. ')' → logprob: -14.225517272949219
    7. ',x' → logprob: -14.600517272949219
    8. ',start' → logprob: -14.600517272949219
    9. ',int' → logprob: -14.725517272949219
    10. ',
' → logprob: -14.850517272949219

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002833848411682993
    2. ')
' → logprob: -8.250283241271973
    3. ' )' → logprob: -10.875283241271973
    4. ',' → logprob: -14.375283241271973
    5. ')

' → logprob: -14.625283241271973
    6. '),' → logprob: -14.625283241271973
    7. ')#' → logprob: -14.625283241271973
    8. ')}' → logprob: -15.500283241271973
    9. '<|end|>' → logprob: -15.625283241271973
    10. ')}}' → logprob: -15.875283241271973

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052872542291879654
    2. '
' → logprob: -3.677872657775879
    3. '<|end|>' → logprob: -4.302872657775879
    4. '               ' → logprob: -5.302872657775879
    5. ',' → logprob: -6.177872657775879
    6. 'elif' → logprob: -6.427872657775879
    7. 'direction' → logprob: -7.302872657775879
    8. '            
' → logprob: -7.802872657775879
    9. '<|end|>' → logprob: -7.927872657775879
    10. ' direction' → logprob: -8.177872657775879

Token 160: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26493191719055176
    2. 'elif' (adapté à ' elif') → logprob: -1.5149319171905518
    3. ' elif' → logprob: -4.389931678771973
    4. 'if' → logprob: -7.764931678771973
    5. ' if' → logprob: -9.514931678771973
    6. '          ' → logprob: -12.264931678771973
    7. '	elif' → logprob: -12.639931678771973
    8. '               ' → logprob: -12.639931678771973
    9. '       ' → logprob: -13.639931678771973
    10. '            ' → logprob: -13.764931678771973

Token 161: ' maze' (ID: 58295)
  Prédit: ' maze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maze' → logprob: -0.2811671793460846
    2. 'maze' → logprob: -1.4061671495437622
    3. 'ma' → logprob: -12.406167030334473
    4. ' ' → logprob: -12.531167030334473
    5. '   ' → logprob: -12.906167030334473
    6. '    ' → logprob: -13.281167030334473
    7. ' ma' → logprob: -13.531167030334473
    8. 'maz' → logprob: -13.656167030334473
    9. ' ' → logprob: -15.281167030334473
    10. '(' → logprob: -15.343667030334473

Token 162: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.522638169466518e-05
    2. ' [' → logprob: -11.375024795532227
    3. '[' → logprob: -12.000024795532227
    4. '[x' → logprob: -12.375024795532227
    5. '==' → logprob: -13.875024795532227
    6. 'y' → logprob: -14.750024795532227
    7. '   ' → logprob: -15.000024795532227
    8. '[z' → logprob: -15.125024795532227
    9. ' ==' → logprob: -15.375024795532227
    10. '```' → logprob: -15.625024795532227

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6600316166877747
    2. '[x' → logprob: -0.7850316166877747
    3. '[y' → logprob: -3.66003155708313
    4. '[' → logprob: -7.035031795501709
    5. '           ' → logprob: -9.03503131866455
    6. '   ' → logprob: -9.91003131866455
    7. '       ' → logprob: -10.03503131866455
    8. ']' → logprob: -10.41003131866455
    9. '}[' → logprob: -10.91003131866455
    10. ''][' → logprob: -11.16003131866455

Token 164: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.968312951968983e-06
    2. ' x' → logprob: -11.750009536743164
    3. ''x' → logprob: -14.625009536743164
    4. 'y' → logprob: -14.750009536743164
    5. '(x' → logprob: -15.250009536743164
    6. 'range' → logprob: -15.500009536743164
    7. '   ' → logprob: -15.625009536743164
    8. 's' → logprob: -16.500009536743164
    9. '=' → logprob: -16.625009536743164
    10. ' ' → logprob: -16.750009536743164

Token 165: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16297432780265808
    2. ']' → logprob: -2.5379743576049805
    3. ' ==' → logprob: -3.2879743576049805
    4. ']==' → logprob: -3.4129743576049805
    5. '=='' → logprob: -7.9129743576049805
    6. ']=='' → logprob: -8.03797435760498
    7. ')' → logprob: -8.53797435760498
    8. ')==' → logprob: -9.91297435760498
    9. '[' → logprob: -10.41297435760498
    10. '           ' → logprob: -10.53797435760498

Token 166: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5767338275909424
    2. ' ==' → logprob: -0.8267338275909424
    3. '=='' → logprob: -7.326733589172363
    4. ''' → logprob: -9.951733589172363
    5. '[' → logprob: -10.451733589172363
    6. ']==' → logprob: -10.826733589172363
    7. '=' → logprob: -10.826733589172363
    8. ' =='' → logprob: -12.451733589172363
    9. '===' → logprob: -12.701733589172363
    10. '[]' → logprob: -13.201733589172363

Token 167: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019987933337688446
    2. ' '' → logprob: -4.019988059997559
    3. ''T' → logprob: -7.394988059997559
    4. ''S' → logprob: -8.269988059997559
    5. '('' → logprob: -8.769988059997559
    6. ''O' → logprob: -9.019988059997559
    7. ''E' → logprob: -9.144988059997559
    8. ' ' → logprob: -9.269988059997559
    9. ''g' → logprob: -9.769988059997559
    10. ''C' → logprob: -9.769988059997559

Token 168: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.013893154449760914
    2. 'F' → logprob: -4.888893127441406
    3. ''' → logprob: -6.138893127441406
    4. 'E' → logprob: -6.638893127441406
    5. 'g' → logprob: -7.388893127441406
    6. 'X' → logprob: -7.513893127441406
    7. 'C' → logprob: -8.263893127441406
    8. 'T' → logprob: -8.638893127441406
    9. ' G' → logprob: -8.951393127441406
    10. 'D' → logprob: -9.326393127441406

Token 169: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.8282248377799988
    2. ''):' → logprob: -1.0782248973846436
    3. '')' → logprob: -1.8282248973846436
    4. ')' → logprob: -4.0782246589660645
    5. ''):
' → logprob: -4.0782246589660645
    6. '):' → logprob: -4.5782246589660645
    7. ''' → logprob: -4.5782246589660645
    8. ':' → logprob: -5.3282246589660645
    9. '':
' → logprob: -6.3282246589660645
    10. '<|end|>' → logprob: -8.078225135803223

Token 170: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7784402370452881
    2. '=' → logprob: -1.528440237045288
    3. '(x' → logprob: -2.028440237045288
    4. '               ' → logprob: -2.153440237045288
    5. ' (' → logprob: -2.778440237045288
    6. '=(' → logprob: -4.653440475463867
    7. '(' → logprob: -6.153440475463867
    8. ' =(' → logprob: -6.778440475463867
    9. '=x' → logprob: -8.153440475463867
    10. '(s' → logprob: -8.403440475463867

Token 171: ' goal' (ID: 8583)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0010072042932733893
    2. ' (' → logprob: -7.001007080078125
    3. '(goal' → logprob: -9.376007080078125
    4. '(end' → logprob: -12.001007080078125
    5. 'goal' (adapté à ' goal') → logprob: -13.251007080078125
    6. '(start' → logprob: -13.626007080078125
    7. '(' → logprob: -14.001007080078125
    8. '(y' → logprob: -14.001007080078125
    9. '(go' → logprob: -16.626007080078125
    10. 'x' → logprob: -16.876007080078125

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020741820335388
    2. '=' → logprob: -2.3502073287963867
    3. ' =(' → logprob: -14.600207328796387
    4. '=(' → logprob: -15.850207328796387
    5. ')' → logprob: -16.850208282470703
    6. ' ' → logprob: -17.225208282470703
    7. ',' → logprob: -17.350208282470703
    8. '＝' → logprob: -17.725208282470703
    9. '(' → logprob: -17.975208282470703
    10. '=

' → logprob: -18.600208282470703

Token 173: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006719759665429592
    2. ' (' → logprob: -5.006719589233398
    3. '(' → logprob: -12.381719589233398
    4. 'x' → logprob: -15.881719589233398
    5. '(y' → logprob: -17.2567195892334
    6. '(s' → logprob: -18.1317195892334
    7. ' ' → logprob: -18.2567195892334
    8. '(None' → logprob: -18.3817195892334
    9. '(True' → logprob: -19.0067195892334
    10. '[x' → logprob: -19.7567195892334

Token 174: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.180258191714529e-06
    2. '(x' → logprob: -12.250008583068848
    3. ')x' → logprob: -13.375008583068848
    4. ' x' → logprob: -13.500008583068848
    5. ')' → logprob: -15.250008583068848
    6. '{x' → logprob: -17.00000762939453
    7. '<|end|>' → logprob: -17.75000762939453
    8. '"x' → logprob: -18.12500762939453
    9. ',x' → logprob: -18.37500762939453
    10. '(' → logprob: -18.50000762939453

Token 175: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.6640650629997253
    2. '[' → logprob: -0.9140650629997253
    3. ',' → logprob: -3.16406512260437
    4. 'x' → logprob: -3.41406512260437
    5. ')' → logprob: -5.289064884185791
    6. ')x' → logprob: -6.539064884185791
    7. '[x' → logprob: -6.664064884185791
    8. '<|end|>' → logprob: -8.03906536102295
    9. ']' → logprob: -8.53906536102295
    10. ',y' → logprob: -8.53906536102295

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. ')
' → logprob: -11.625012397766113
    3. ' )' → logprob: -13.125012397766113
    4. '<|end|>' → logprob: -14.750012397766113
    5. ')#' → logprob: -15.500012397766113
    6. '#' → logprob: -15.625012397766113
    7. '           ' → logprob: -15.750012397766113
    8. '   ' → logprob: -16.25001335144043
    9. ')}' → logprob: -16.25001335144043
    10. '       ' → logprob: -16.25001335144043

Token 177: '   ' (ID: 271)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.28706634044647217
    2. 'x' → logprob: -2.0370664596557617
    3. 'dir' → logprob: -2.2870664596557617
    4. 'pos' → logprob: -4.537066459655762
    5. 'f' → logprob: -6.287066459655762
    6. 'd' → logprob: -6.537066459655762
    7. 'orientation' → logprob: -6.787066459655762
    8. ' direction' → logprob: -8.287066459655762
    9. '#' → logprob: -8.412066459655762
    10. 'cur' → logprob: -8.412066459655762

Token 178: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.36302757263183594
    2. 'x' → logprob: -1.863027572631836
    3. 'dir' → logprob: -1.988027572631836
    4. 'd' → logprob: -5.738027572631836
    5. 'f' → logprob: -6.113027572631836
    6. 'pos' → logprob: -6.363027572631836
    7. 'orientation' → logprob: -6.613027572631836
    8. '#' (adapté à ' #') → logprob: -6.738027572631836
    9. 'cur' → logprob: -8.113027572631836
    10. 'for' → logprob: -8.363027572631836

Token 179: ' pre' (ID: 876)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47794201970100403
    2. 'direction' → logprob: -1.3529419898986816
    3. 'dir' → logprob: -2.4779419898986816
    4. '#' → logprob: -4.227941989898682
    5. 'def' → logprob: -4.727941989898682
    6. 'pos' → logprob: -5.602941989898682
    7. 'for' → logprob: -6.102941989898682
    8. ' direction' → logprob: -6.727941989898682
    9. 'orientation' → logprob: -6.977941989898682
    10. 'f' → logprob: -7.102941989898682

Token 180: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08944451063871384
    2. 'def' → logprob: -3.214444398880005
    3. 'd' → logprob: -4.714444637298584
    4. 'f' → logprob: -4.964444637298584
    5. 'sent' → logprob: -4.964444637298584
    6. 'direction' → logprob: -5.339444637298584
    7. 'vious' → logprob: -5.714444637298584
    8. 's' → logprob: -5.964444637298584
    9. 'fix' → logprob: -6.589444637298584
    10. 'visited' → logprob: -6.589444637298584

Token 181: ' direction' (ID: 9262)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0446239709854126
    2. 'visited' → logprob: -1.5446239709854126
    3. ' visited' → logprob: -1.7946239709854126
    4. ' dp' → logprob: -3.169623851776123
    5. 'dist' → logprob: -3.294623851776123
    6. 'distance' → logprob: -3.419623851776123
    7. ' next' → logprob: -3.669623851776123
    8. ' dist' → logprob: -3.794623851776123
    9. 'cost' → logprob: -4.169623851776123
    10. 'next' → logprob: -4.294623851776123

Token 182: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.570292592048645
    2. 's' → logprob: -2.5702924728393555
    3. '=' → logprob: -3.5702924728393555
    4. '_counts' → logprob: -3.5702924728393555
    5. '_turn' → logprob: -3.6952924728393555
    6. '_changes' → logprob: -3.6952924728393555
    7. 'dp' → logprob: -3.8202924728393555
    8. '_positions' → logprob: -3.9452924728393555
    9. 'cost' → logprob: -4.3202924728393555
    10. 'turn' → logprob: -4.3202924728393555

Token 183: ' i' (ID: 575)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6848554015159607
    2. 'program' → logprob: -1.4348554611206055
    3. ' each' → logprob: -1.8098554611206055
    4. 'command' → logprob: -3.8098554611206055
    5. 'instruction' → logprob: -4.3098554611206055
    6. ' executing' → logprob: -4.5598554611206055
    7. 'turn' → logprob: -4.6848554611206055
    8. ' program' → logprob: -4.9348554611206055
    9. 'commands' → logprob: -5.5598554611206055
    10. 'N' → logprob: -5.5598554611206055

Token 184: '-th' (ID: 14928)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -1.4813555479049683
    2. 'n' → logprob: -2.481355667114258
    3. '_program' → logprob: -2.481355667114258
    4. 'th' → logprob: -2.606355667114258
    5. '-th' → logprob: -2.731355667114258
    6. '+' → logprob: -2.731355667114258
    7. 't' → logprob: -2.981355667114258
    8. '-step' → logprob: -3.481355667114258
    9. ' program' → logprob: -3.481355667114258
    10. 's' → logprob: -3.606355667114258

Token 185: ' turn' (ID: 3716)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -0.5388476252555847
    2. 'command' → logprob: -1.2888476848602295
    3. ' instruction' → logprob: -2.7888476848602295
    4. ' command' → logprob: -3.1638476848602295
    5. 'program' → logprob: -4.03884744644165
    6. '<|end|>' → logprob: -5.41384744644165
    7. 'token' → logprob: -5.78884744644165
    8. '_instruction' → logprob: -5.91384744644165
    9. 'move' → logprob: -6.28884744644165
    10. 'movement' → logprob: -6.53884744644165

Token 186: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17881335318088531
    2. 'turn' → logprob: -2.8038134574890137
    3. ' =' → logprob: -3.6788134574890137
    4. ' turns' → logprob: -4.303813457489014
    5. 'dire' → logprob: -4.428813457489014
    6. '_turn' → logprob: -4.553813457489014
    7. ' directions' → logprob: -5.053813457489014
    8. ':' → logprob: -5.178813457489014
    9. 'direction' → logprob: -5.553813457489014
    10. 'dir' → logprob: -5.678813457489014

Token 187: '   ' (ID: 271)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.34365764260292053
    2. ' directions' → logprob: -2.3436577320098877
    3. 'direction' → logprob: -2.3436577320098877
    4. 'dir' → logprob: -2.9686577320098877
    5. 'turn' → logprob: -4.218657493591309
    6. ' direction' → logprob: -4.718657493591309
    7. 's' → logprob: -5.218657493591309
    8. ' dir' → logprob: -5.343657493591309
    9. 'current' → logprob: -6.093657493591309
    10. ' turns' → logprob: -6.343657493591309

Token 188: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.0227402448654175
    2. 'dire' → logprob: -1.2727402448654175
    3. 'turn' → logprob: -1.7727402448654175
    4. 'dir' → logprob: -2.022740364074707
    5. ' directions' → logprob: -4.772740364074707
    6. 'dirs' → logprob: -4.772740364074707
    7. 'd' → logprob: -4.772740364074707
    8. 'next' → logprob: -5.147740364074707
    9. ' direction' → logprob: -5.522740364074707
    10. 'ndir' → logprob: -6.147740364074707

Token 189: ' turn' (ID: 3716)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.8871756792068481
    2. 'dir' → logprob: -1.5121756792068481
    3. 'dire' → logprob: -1.7621756792068481
    4. 'turn' → logprob: -1.8871756792068481
    5. 'dirs' → logprob: -4.762175559997559
    6. ' direction' → logprob: -5.262175559997559
    7. 'def' → logprob: -5.512175559997559
    8. 'd' → logprob: -5.762175559997559
    9. ' directions' → logprob: -5.887175559997559
    10. 'next' → logprob: -6.262175559997559

Token 190: ' commands' (ID: 23877)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7378860712051392
    2. 's' → logprob: -0.8628860712051392
    3. '=' → logprob: -3.2378859519958496
    4. '_left' → logprob: -3.9878859519958496
    5. '_direction' → logprob: -4.36288595199585
    6. '_map' → logprob: -4.73788595199585
    7. '_dir' → logprob: -5.11288595199585
    8. '_right' → logprob: -5.86288595199585
    9. '_d' → logprob: -5.86288595199585
    10. '_' → logprob: -6.36288595199585

Token 191: ' may' (ID: 1340)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3925764858722687
    2. 'turn' → logprob: -1.7675764560699463
    3. '=' → logprob: -3.6425764560699463
    4. 'def' → logprob: -3.8925764560699463
    5. '_turn' → logprob: -4.017576694488525
    6. 'dir' → logprob: -4.267576694488525
    7. 'next' → logprob: -4.767576694488525
    8. 's' → logprob: -4.892576694488525
    9. ' turn' → logprob: -5.142576694488525
    10. 'direction' → logprob: -5.142576694488525

Token 192: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.38563233613967896
    2. ' change' → logprob: -2.385632276535034
    3. ' appear' → logprob: -2.885632276535034
    4. ' not' → logprob: -3.385632276535034
    5. ' continue' → logprob: -3.510632276535034
    6. 'change' → logprob: -3.760632276535034
    7. 'appear' → logprob: -3.760632276535034
    8. ' contain' → logprob: -4.760632514953613
    9. 'continue' → logprob: -5.010632514953613
    10. ' include' → logprob: -5.260632514953613

Token 193: ' very' (ID: 1869)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.08192260563373566
    2. ''' → logprob: -3.5819225311279297
    3. 'L' → logprob: -3.9569225311279297
    4. '"L' → logprob: -4.20692253112793
    5. ''T' → logprob: -5.20692253112793
    6. '['' → logprob: -5.95692253112793
    7. ''l' → logprob: -6.58192253112793
    8. '"' → logprob: -6.58192253112793
    9. ''I' → logprob: -7.58192253112793
    10. ''U' → logprob: -7.95692253112793

Token 194: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.5119303464889526
    2. 'fre' → logprob: -1.2619303464889526
    3. ' long' → logprob: -2.511930465698242
    4. ' frequent' → logprob: -3.886930465698242
    5. 'many' → logprob: -4.886930465698242
    6. 'length' → logprob: -5.636930465698242
    7. 'large' → logprob: -6.386930465698242
    8. 'common' → logprob: -6.886930465698242
    9. ' many' → logprob: -8.011930465698242
    10. ' large' → logprob: -8.136930465698242

Token 195: '.' (ID: 13)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.365381121635437
    2. ' directions' → logprob: -1.365381121635437
    3. 'dire' → logprob: -1.615381121635437
    4. 'direction' → logprob: -2.3653812408447266
    5. ' turn' → logprob: -2.9903812408447266
    6. ' turns' → logprob: -3.4903812408447266
    7. ' direction' → logprob: -3.7403812408447266
    8. 'dir' → logprob: -3.9903812408447266
    9. 'next' → logprob: -3.9903812408447266
    10. ' next' → logprob: -4.115381240844727

Token 196: ' direction' (ID: 9262)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.0483580827713013
    2. ' directions' → logprob: -1.5483580827713013
    3. 'direction' → logprob: -1.5483580827713013
    4. 'turn' → logprob: -2.4233579635620117
    5. ' direction' → logprob: -3.4233579635620117
    6. 'dir' → logprob: -3.5483579635620117
    7. ' turn' → logprob: -3.6733579635620117
    8. ' turns' → logprob: -4.423357963562012
    9. 'next' → logprob: -5.173357963562012
    10. ' next' → logprob: -5.298357963562012

Token 197: ' after' (ID: 1934)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5214730501174927
    2. ' =' → logprob: -1.1464730501174927
    3. '_changes' → logprob: -3.021472930908203
    4. '=' → logprob: -3.521472930908203
    5. '_after' → logprob: -5.646472930908203
    6. 'changes' → logprob: -6.021472930908203
    7. '_turn' → logprob: -6.896472930908203
    8. '_states' → logprob: -7.646472930908203
    9. '_change' → logprob: -7.896472930908203
    10. ' changes' → logprob: -8.021472930908203

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1142389103770256
    2. ' i' → logprob: -2.239238977432251
    3. '[i' → logprob: -7.614238739013672
    4. '   ' → logprob: -8.239238739013672
    5. '_i' → logprob: -8.739238739013672
    6. 'each' → logprob: -8.739238739013672
    7. ' each' → logprob: -9.364238739013672
    8. ' ' → logprob: -10.239238739013672
    9. '(i' → logprob: -10.364238739013672
    10. '[' → logprob: -10.614238739013672

Token 199: ' turns' (ID: 18304)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6933688521385193
    2. '=' → logprob: -1.443368911743164
    3. '[i' → logprob: -2.318368911743164
    4. ']' → logprob: -2.568368911743164
    5. '[' → logprob: -3.193368911743164
    6. '   ' → logprob: -4.943368911743164
    7. '-th' → logprob: -5.068368911743164
    8. '_' → logprob: -5.193368911743164
    9. 's' → logprob: -5.568368911743164
    10. '=i' → logprob: -6.068368911743164

Token 200: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3931044638156891
    2. '=' → logprob: -1.1431044340133667
    3. 's' → logprob: -5.518104553222656
    4. '[' → logprob: -7.643104553222656
    5. ' is' → logprob: -7.768104553222656
    6. 'def' → logprob: -9.018104553222656
    7. ']' → logprob: -9.018104553222656
    8. '[]' → logprob: -9.143104553222656
    9. ' can' → logprob: -9.268104553222656
    10. ' will' → logprob: -9.268104553222656

Token 201: '   ' (ID: 271)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.43493780493736267
    2. 'dir' → logprob: -1.684937834739685
    3. 'dire' → logprob: -2.1849377155303955
    4. ' direction' → logprob: -3.6849377155303955
    5. 'd' → logprob: -4.434937953948975
    6. ' directions' → logprob: -5.184937953948975
    7. 'dirs' → logprob: -5.684937953948975
    8. ' dir' → logprob: -5.809937953948975
    9. 'turn' → logprob: -6.309937953948975
    10. '#' → logprob: -7.059937953948975

Token 202: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3405493497848511
    2. 'dire' → logprob: -2.0905494689941406
    3. 'dir' → logprob: -2.3405494689941406
    4. ' direction' → logprob: -3.2155494689941406
    5. ' directions' → logprob: -4.715549468994141
    6. 'd' → logprob: -4.715549468994141
    7. ' dir' → logprob: -5.840549468994141
    8. 'dirs' → logprob: -6.090549468994141
    9. 'cur' → logprob: -6.965549468994141
    10. 'turn' → logprob: -6.965549468994141

Token 203: ' ' (ID: 220)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.8836946487426758
    2. 'dir' → logprob: -1.3836946487426758
    3. 'dire' → logprob: -1.6336946487426758
    4. ' direction' → logprob: -3.008694648742676
    5. ' directions' → logprob: -3.633694648742676
    6. 'dirs' → logprob: -3.883694648742676
    7. 'd' → logprob: -3.883694648742676
    8. ' dir' → logprob: -4.633694648742676
    9. '#' → logprob: -5.133694648742676
    10. 'turn' → logprob: -6.258694648742676

Token 204: '0' (ID: 15)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.9525712728500366
    2. 'dir' → logprob: -1.4525712728500366
    3. 'direction' → logprob: -1.4525712728500366
    4. 'd' → logprob: -2.952571392059326
    5. 'cur' → logprob: -3.577571392059326
    6. 'dirs' → logprob: -3.702571392059326
    7. 'curr' → logprob: -3.827571392059326
    8. 'turn' → logprob: -5.202571392059326
    9. 'current' → logprob: -5.202571392059326
    10. ' directions' → logprob: -6.327571392059326

Token 205: '-based' (ID: 8235)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09557519853115082
    2. ',' → logprob: -2.7205750942230225
    3. '=' → logprob: -4.720575332641602
    4. ' ,' → logprob: -5.970575332641602
    5. '_direction' → logprob: -6.220575332641602
    6. 'direction' → logprob: -6.470575332641602
    7. ']' → logprob: -6.720575332641602
    8. '#' → logprob: -6.970575332641602
    9. ' direction' → logprob: -7.220575332641602
    10. '<|end|>' → logprob: -7.220575332641602

Token 206: ';' (ID: 26)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.853339672088623
    2. 'dir' → logprob: -1.853339672088623
    3. 'dire' → logprob: -1.853339672088623
    4. 'turn' → logprob: -2.228339672088623
    5. ' direction' → logprob: -3.103339672088623
    6. 'dp' → logprob: -3.478339672088623
    7. ' directions' → logprob: -3.603339672088623
    8. ' dir' → logprob: -4.978339672088623
    9. 'cur' → logprob: -5.228339672088623
    10. ' turn' → logprob: -5.353339672088623

Token 207: ' before' (ID: 2254)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6142367124557495
    2. ' direction' → logprob: -1.8642367124557495
    3. 'dire' → logprob: -1.9892367124557495
    4. 'dir' → logprob: -2.364236831665039
    5. ' directions' → logprob: -3.489236831665039
    6. ' dir' → logprob: -4.364236831665039
    7. 'd' → logprob: -4.989236831665039
    8. 'turn' → logprob: -5.239236831665039
    9. 'cur' → logprob: -5.864236831665039
    10. 'current' → logprob: -5.864236831665039

Token 208: ' any' (ID: 1062)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0049430131912231
    2. 'turn' → logprob: -1.2549430131912231
    3. ' any' → logprob: -2.7549428939819336
    4. 'direction' → logprob: -2.7549428939819336
    5. ' the' → logprob: -3.1299428939819336
    6. 'any' → logprob: -3.2549428939819336
    7. 'i' → logprob: -3.6299428939819336
    8. '_' → logprob: -4.379942893981934
    9. 'processing' → logprob: -4.879942893981934
    10. ' turning' → logprob: -5.004942893981934

Token 209: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.35782915353775024
    2. ' turn' → logprob: -1.7328290939331055
    3. ' turns' → logprob: -2.1078290939331055
    4. '_turn' → logprob: -6.6078290939331055
    5. ' command' → logprob: -8.607829093933105
    6. 'commands' → logprob: -8.732829093933105
    7. 'command' → logprob: -8.857829093933105
    8. ' commands' → logprob: -9.732829093933105
    9. 'moves' → logprob: -9.857829093933105
    10. '-turn' → logprob: -9.982829093933105

Token 210: ' direction' (ID: 9262)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7412900924682617
    2. '_direction' → logprob: -0.9912900924682617
    3. 'direction' → logprob: -2.4912900924682617
    4. ' direction' → logprob: -3.6162900924682617
    5. '_dir' → logprob: -3.8662900924682617
    6. '=' → logprob: -4.866290092468262
    7. 'dir' → logprob: -5.366290092468262
    8. 'd' → logprob: -6.491290092468262
    9. ' is' → logprob: -6.491290092468262
    10. ',' → logprob: -6.491290092468262

Token 211: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.540126383304596
    2. '=' → logprob: -0.915126383304596
    3. ' is' → logprob: -5.290126323699951
    4. 's' → logprob: -5.290126323699951
    5. 'd' → logprob: -6.415126323699951
    6. 'direction' → logprob: -6.790126323699951
    7. 'dir' → logprob: -7.415126323699951
    8. ',' → logprob: -7.790126323699951
    9. ' remains' → logprob: -8.04012680053711
    10. ')' → logprob: -8.41512680053711

Token 212: ' North' (ID: 7180)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022053320426493883
    2. 'initial' → logprob: -7.3772053718566895
    3. '1' → logprob: -7.5022053718566895
    4. 'd' → logprob: -8.127204895019531
    5. ' ' → logprob: -8.752204895019531
    6. 'current' → logprob: -8.877204895019531
    7. 'program' → logprob: -9.127204895019531
    8. 'dir' → logprob: -9.377204895019531
    9. '(' → logprob: -10.002204895019531
    10. 'direction' → logprob: -10.127204895019531

Token 213: '=' (ID: 28)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.36273062229156494
    2. 'dire' → logprob: -1.362730622291565
    3. 'dir' → logprob: -3.3627305030822754
    4. 'current' → logprob: -5.612730503082275
    5. ' direction' → logprob: -5.862730503082275
    6. ' directions' → logprob: -5.862730503082275
    7. 'cur' → logprob: -6.862730503082275
    8. 'dirs' → logprob: -7.237730503082275
    9. 'd' → logprob: -7.487730503082275
    10. 'curr' → logprob: -7.737730503082275

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.500043869018555
    3. '3' → logprob: -11.250043869018555
    4. '```' → logprob: -13.750043869018555
    5. '(' → logprob: -14.375043869018555
    6. '`' → logprob: -14.937543869018555
    7. '[' → logprob: -15.250043869018555
    8. '#' → logprob: -15.437543869018555
    9. '1' → logprob: -15.750043869018555
    10. '2' → logprob: -15.875043869018555

Token 215: '
' (ID: 198)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.050722211599349976
    2. 'dir' → logprob: -3.800722122192383
    3. 'dire' → logprob: -4.050722122192383
    4. 'current' → logprob: -5.425722122192383
    5. 'cur' → logprob: -6.550722122192383
    6. ' direction' → logprob: -6.675722122192383
    7. 'd' → logprob: -7.175722122192383
    8. 'curr' → logprob: -7.800722122192383
    9. '
' → logprob: -7.925722122192383
    10. 'turn' → logprob: -8.550722122192383

Token 216: '   ' (ID: 271)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3396338224411011
    2. 'dire' → logprob: -1.589633822441101
    3. ' direction' → logprob: -3.4646339416503906
    4. ' directions' → logprob: -3.7146339416503906
    5. 'dir' → logprob: -3.9646339416503906
    6. 'current' → logprob: -5.589633941650391
    7. 'd' → logprob: -6.839633941650391
    8. 'cur' → logprob: -7.089633941650391
    9. 'curr' → logprob: -7.214633941650391
    10. 'dirs' → logprob: -7.714633941650391

Token 217: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.22801144421100616
    2. 'dire' → logprob: -2.2280113697052
    3. 'dir' → logprob: -2.4780113697052
    4. 'd' → logprob: -5.353011608123779
    5. 'dirs' → logprob: -5.853011608123779
    6. 'turn' → logprob: -6.103011608123779
    7. ' direction' → logprob: -7.103011608123779
    8. 'dp' → logprob: -8.478011131286621
    9. ' directions' → logprob: -8.478011131286621
    10. 'current' → logprob: -8.853011131286621

Token 218: ' L' (ID: 451)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.31318333745002747
    2. 'dire' → logprob: -1.938183307647705
    3. 'dir' → logprob: -2.188183307647705
    4. 'dirs' → logprob: -5.188183307647705
    5. 'turn' → logprob: -5.938183307647705
    6. 'd' → logprob: -5.938183307647705
    7. ' direction' → logprob: -7.438183307647705
    8. ' directions' → logprob: -8.313183784484863
    9. '#' → logprob: -8.438183784484863
    10. 'dp' → logprob: -8.813183784484863

Token 219: ' turn' (ID: 3716)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5572012066841125
    2. 'dir' → logprob: -1.9322011470794678
    3. '_dir' → logprob: -2.1822011470794678
    4. 'turn' → logprob: -2.9322011470794678
    5. '=' → logprob: -3.1822011470794678
    6. 'direction' → logprob: -4.182201385498047
    7. '_direction' → logprob: -4.432201385498047
    8. 'd' → logprob: -4.557201385498047
    9. ',' → logprob: -4.807201385498047
    10. '_turn' → logprob: -5.307201385498047

Token 220: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0948917493224144
    2. '=' → logprob: -3.2198917865753174
    3. 's' → logprob: -3.4698917865753174
    4. '_direction' → logprob: -5.594891548156738
    5. ',' → logprob: -5.844891548156738
    6. '[' → logprob: -5.969891548156738
    7. 'direction' → logprob: -6.469891548156738
    8. 'turn' → logprob: -6.969891548156738
    9. '_turn' → logprob: -6.969891548156738
    10. '_dir' → logprob: -7.094891548156738

Token 221: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.0198884010314941
    2. ' direction' → logprob: -1.6448884010314941
    3. ' (' → logprob: -2.519888401031494
    4. '(' → logprob: -2.894888401031494
    5. 'dir' → logprob: -3.019888401031494
    6. 'd' → logprob: -3.269888401031494
    7. 'def' → logprob: -3.644888401031494
    8. ' dir' → logprob: -3.894888401031494
    9. ' d' → logprob: -4.144888401031494
    10. '[' → logprob: -4.144888401031494

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2088155746459961
    2. '=' → logprob: -1.708815574645996
    3. 's' → logprob: -5.333815574645996
    4. '[i' → logprob: -6.833815574645996
    5. '=(' → logprob: -7.083815574645996
    6. '[(' → logprob: -8.458815574645996
    7. ' =(' → logprob: -8.833815574645996
    8. '[' → logprob: -10.083815574645996
    9. ' ' → logprob: -10.458815574645996
    10. '   ' → logprob: -10.833815574645996

Token 223: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5873290300369263
    2. '(direction' → logprob: -1.7123290300369263
    3. '(lambda' → logprob: -1.9623290300369263
    4. '(dx' → logprob: -2.5873289108276367
    5. '(d' → logprob: -3.2123289108276367
    6. '(dir' → logprob: -5.587328910827637
    7. '(prev' → logprob: -6.087328910827637
    8. '(current' → logprob: -7.462328910827637
    9. '(' → logprob: -8.462328910827637
    10. 'lambda' → logprob: -9.087328910827637

Token 224: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6012197732925415
    2. '(direction' → logprob: -0.8512197732925415
    3. ' direction' → logprob: -4.976219654083252
    4. ' (' → logprob: -5.351219654083252
    5. '(d' → logprob: -5.351219654083252
    6. '(current' → logprob: -6.351219654083252
    7. '(' → logprob: -6.851219654083252
    8. '(prev' → logprob: -6.976219654083252
    9. 'dir' → logprob: -6.976219654083252
    10. 'current' → logprob: -7.351219654083252

Token 225: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1302519589662552
    2. '-' → logprob: -2.880251884460449
    3. ' +' → logprob: -2.880251884460449
    4. '+' → logprob: -4.630251884460449
    5. ' ' → logprob: -9.63025188446045
    6. '[' → logprob: -11.38025188446045
    7. '[i' → logprob: -11.50525188446045
    8. '```' → logprob: -11.75525188446045
    9. '   ' → logprob: -12.25525188446045
    10. 'def' → logprob: -12.38025188446045

Token 226: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000260382192209363
    2. ' ' → logprob: -8.500260353088379
    3. '-' → logprob: -10.500260353088379
    4. '1' → logprob: -10.750260353088379
    5. '(' → logprob: -13.375260353088379
    6. '   ' → logprob: -13.500260353088379
    7. ' -' → logprob: -13.500260353088379
    8. '```' → logprob: -14.375260353088379
    9. '(-' → logprob: -14.687760353088379
    10. '
' → logprob: -14.875260353088379

Token 227: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2842308680992573e-05
    2. '-' → logprob: -11.000022888183594
    3. ' ' → logprob: -12.375022888183594
    4. '1' → logprob: -15.000022888183594
    5. '
' → logprob: -15.250022888183594
    6. '```' → logprob: -15.500022888183594
    7. ')' → logprob: -15.625022888183594
    8. '(' → logprob: -15.750022888183594
    9. '   ' → logprob: -15.750022888183594
    10. '(-' → logprob: -16.187522888183594

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011367550177965313
    2. ')%' → logprob: -9.250113487243652
    3. ' )' → logprob: -11.000113487243652
    4. '[' → logprob: -15.125113487243652
    5. '%' → logprob: -16.00011444091797
    6. ')
' → logprob: -16.75011444091797
    7. '）' → logprob: -17.00011444091797
    8. 'n' → logprob: -17.37511444091797
    9. '),' → logprob: -17.37511444091797
    10. '**' → logprob: -17.50011444091797

Token 229: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007373527158051729
    2. ')%' → logprob: -5.007373332977295
    3. ' )' → logprob: -7.882373332977295
    4. '%' → logprob: -8.507373809814453
    5. ' %' → logprob: -10.007373809814453
    6. '   ' → logprob: -11.757373809814453
    7. '#' → logprob: -12.007373809814453
    8. '")' → logprob: -12.507373809814453
    9. '')' → logprob: -13.257373809814453
    10. 'def' → logprob: -13.632373809814453

Token 230: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -16.62537956237793
    4. '   ' → logprob: -17.75037956237793
    5. '  ' → logprob: -19.37537956237793
    6. ' ' → logprob: -19.75037956237793
    7. '' → logprob: -20.25037956237793
    8. '360' → logprob: -20.50037956237793
    9. '{' → logprob: -21.12537956237793
    10. '۴' → logprob: -21.81287956237793

Token 231: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20142163336277008
    2. '
' → logprob: -2.4514217376708984
    3. '\n' → logprob: -4.076421737670898
    4. '#' → logprob: -4.201421737670898
    5. ')' → logprob: -4.201421737670898
    6. ',' → logprob: -4.451421737670898
    7. 'direction' → logprob: -4.951421737670898
    8. '<|end|>' → logprob: -5.076421737670898
    9. ' for' → logprob: -5.576421737670898
    10. ' ' → logprob: -6.076421737670898

Token 232: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008287959732115269
    2. ')
' → logprob: -5.0082879066467285
    3. ' )' → logprob: -6.6332879066467285
    4. '   ' → logprob: -9.758288383483887
    5. ' )
' → logprob: -10.008288383483887
    6. '#' → logprob: -10.133288383483887
    7. '')' → logprob: -10.883288383483887
    8. '<|end|>' → logprob: -11.133288383483887
    9. '<|end|>' → logprob: -12.008288383483887
    10. '")' → logprob: -12.133288383483887

Token 233: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19906164705753326
    2. 'direction' → logprob: -2.824061632156372
    3. '(direction' → logprob: -2.949061632156372
    4. ' -' → logprob: -3.324061632156372
    5. ' ' → logprob: -4.324061870574951
    6. ' direction' → logprob: -5.449061870574951
    7. ' (' → logprob: -5.824061870574951
    8. '1' → logprob: -5.949061870574951
    9. ')' → logprob: -6.324061870574951
    10. '3' → logprob: -6.574061870574951

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005994682665914297
    2. ' ' → logprob: -5.13099479675293
    3. '   ' → logprob: -9.75599479675293
    4. '  ' → logprob: -12.38099479675293
    5. '    ' → logprob: -14.25599479675293
    6. '<|end|>' → logprob: -14.38099479675293
    7. ' ' → logprob: -14.88099479675293
    8. ')' → logprob: -15.25599479675293
    9. '```' → logprob: -15.25599479675293
    10. ',' → logprob: -15.38099479675293

Token 235: ' mod' (ID: 1812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008131063543260098
    2. ' )' → logprob: -5.00813102722168
    3. '<|end|>' → logprob: -6.75813102722168
    4. '<|end|>' → logprob: -9.25813102722168
    5. ')%' → logprob: -9.38313102722168
    6. ')
' → logprob: -10.38313102722168
    7. '')' → logprob: -12.38313102722168
    8. '%' → logprob: -12.50813102722168
    9. '")' → logprob: -12.63313102722168
    10. ')**' → logprob: -12.63313102722168

Token 236: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01815567910671234
    2. ' ' → logprob: -4.018155574798584
    3. ')' → logprob: -12.393156051635742
    4. '```' → logprob: -13.768156051635742
    5. '   ' → logprob: -15.893156051635742
    6. ' ' → logprob: -16.393156051635742
    7. ' )' → logprob: -16.768156051635742
    8. '  ' → logprob: -16.830656051635742
    9. '' → logprob: -17.018156051635742
    10. ' four' → logprob: -17.143156051635742

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005143388640135527
    2. ')
' → logprob: -5.505143165588379
    3. ' )' → logprob: -7.755143165588379
    4. '   ' → logprob: -8.005143165588379
    5. '#' → logprob: -9.630143165588379
    6. '')' → logprob: -9.880143165588379
    7. '`)' → logprob: -10.630143165588379
    8. '```' → logprob: -10.755143165588379
    9. ')`' → logprob: -10.880143165588379
    10. ',' → logprob: -11.005143165588379

Token 238: '   ' (ID: 271)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.135319322347641
    2. '   ' → logprob: -3.010319232940674
    3. ' direction' → logprob: -3.135319232940674
    4. 'dire' → logprob: -4.385319232940674
    5. 'dir' → logprob: -5.010319232940674
    6. '#' → logprob: -5.385319232940674
    7. ' directions' → logprob: -5.760319232940674
    8. 'current' → logprob: -6.760319232940674
    9. '
' → logprob: -7.010319232940674
    10. 'next' → logprob: -7.385319232940674

Token 239: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.12872228026390076
    2. ' direction' → logprob: -3.0037221908569336
    3. '   ' → logprob: -3.1287221908569336
    4. '#' (adapté à ' #') → logprob: -4.503722190856934
    5. 'dir' → logprob: -5.003722190856934
    6. 'current' → logprob: -6.003722190856934
    7. 'dire' → logprob: -6.253722190856934
    8. 'cur' → logprob: -7.003722190856934
    9. ')' → logprob: -7.503722190856934
    10. 'turn' → logprob: -7.878722190856934

Token 240: ' R' (ID: 460)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.39312493801116943
    2. '#' → logprob: -2.018125057220459
    3. 'dire' → logprob: -2.393125057220459
    4. '   ' → logprob: -3.268125057220459
    5. 'dir' → logprob: -3.643125057220459
    6. 'turn' → logprob: -4.393125057220459
    7. 'def' → logprob: -5.018125057220459
    8. 'cur' → logprob: -5.518125057220459
    9. ' direction' → logprob: -5.893125057220459
    10. 'current' → logprob: -6.143125057220459

Token 241: ' turn' (ID: 3716)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1645212471485138
    2. ' turn' → logprob: -2.6645212173461914
    3. '=' → logprob: -3.0395212173461914
    4. 'turn' → logprob: -3.6645212173461914
    5. '_turn' → logprob: -5.539521217346191
    6. ')' → logprob: -6.664521217346191
    7. ' ' → logprob: -7.039521217346191
    8. '   ' → logprob: -7.664521217346191
    9. '(turn' → logprob: -8.164521217346191
    10. ':' → logprob: -8.289521217346191

Token 242: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07919424027204514
    2. '=' → logprob: -3.0791943073272705
    3. ':' → logprob: -3.7041943073272705
    4. ' :' → logprob: -5.329194068908691
    5. ')' → logprob: -8.579194068908691
    6. '):' → logprob: -8.829194068908691
    7. '   ' → logprob: -9.454194068908691
    8. ' ' → logprob: -9.704194068908691
    9. ',' → logprob: -10.079194068908691
    10. 'def' → logprob: -10.454194068908691

Token 243: ' direction' (ID: 9262)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09412243962287903
    2. '(direction' → logprob: -2.8441224098205566
    3. ' direction' → logprob: -3.8441224098205566
    4. '(' → logprob: -5.219122409820557
    5. 'direction' → logprob: -5.844122409820557
    6. ')' → logprob: -6.844122409820557
    7. ' ' → logprob: -8.844122886657715
    8. ' def' → logprob: -8.969122886657715
    9. 'def' → logprob: -9.344122886657715
    10. ' =' → logprob: -9.844122886657715

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491150543093681
    2. '=' → logprob: -2.9299116134643555
    3. ')' → logprob: -11.179911613464355
    4. ' ' → logprob: -11.804911613464355
    5. ' +=' → logprob: -13.304911613464355
    6. 'def' → logprob: -13.554911613464355
    7. 'import' → logprob: -14.304911613464355
    8. '   ' → logprob: -14.554911613464355
    9. 's' → logprob: -14.804911613464355
    10. ':' → logprob: -14.804911613464355

Token 245: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17988425493240356
    2. '(direction' → logprob: -1.8048841953277588
    3. '(lambda' → logprob: -9.80488395690918
    4. ' ' → logprob: -10.55488395690918
    5. '(d' → logprob: -11.42988395690918
    6. '(def' → logprob: -11.67988395690918
    7. '   ' → logprob: -11.67988395690918
    8. '(' → logprob: -12.30488395690918
    9. '(dir' → logprob: -12.30488395690918
    10. '0' → logprob: -12.80488395690918

Token 246: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.17073629796504974
    2. ' direction' → logprob: -2.295736312866211
    3. '(direction' → logprob: -2.920736312866211
    4. '1' → logprob: -6.670736312866211
    5. ' (' → logprob: -7.420736312866211
    6. '   ' → logprob: -8.795736312866211
    7. ' ' → logprob: -9.045736312866211
    8. '+' → logprob: -9.795736312866211
    9. '(' → logprob: -10.045736312866211
    10. ')' → logprob: -10.420736312866211

Token 247: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029771439731121063
    2. '+' → logprob: -3.529771327972412
    3. ')' → logprob: -11.77977180480957
    4. '=' → logprob: -12.27977180480957
    5. 'import' → logprob: -13.27977180480957
    6. '[' → logprob: -13.40477180480957
    7. ' ' → logprob: -13.65477180480957
    8. '   ' → logprob: -14.02977180480957
    9. ' =' → logprob: -14.65477180480957
    10. '0' → logprob: -15.15477180480957

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006813408341258764
    2. ' ' → logprob: -5.0068135261535645
    3. '2' → logprob: -9.256813049316406
    4. '3' → logprob: -13.756813049316406
    5. '0' → logprob: -14.881813049316406
    6. '   ' → logprob: -15.131813049316406
    7. '4' → logprob: -15.881813049316406
    8. '(' → logprob: -15.881813049316406
    9. ')' → logprob: -15.944313049316406
    10. '```' → logprob: -16.194313049316406

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -14.625015258789062
    4. '```' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.000015258789062
    6. '
' → logprob: -17.500015258789062
    7. '4' → logprob: -18.375015258789062
    8. '0' → logprob: -18.562515258789062
    9. '3' → logprob: -18.687515258789062
    10. '[' → logprob: -19.062515258789062

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')%' → logprob: -10.375035285949707
    3. ' )' → logprob: -12.875035285949707
    4. '   ' → logprob: -14.250035285949707
    5. '')' → logprob: -14.875035285949707
    6. '`)' → logprob: -15.625035285949707
    7. '）' → logprob: -16.125036239624023
    8. '```' → logprob: -16.375036239624023
    9. '%' → logprob: -16.500036239624023
    10. '")' → logprob: -16.750036239624023

Token 251: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8095009326934814
    2. ')' → logprob: -1.0595009326934814
    3. '%' → logprob: -1.6845009326934814
    4. ')%' → logprob: -3.9345009326934814
    5. ' )' → logprob: -5.934500694274902
    6. '   ' → logprob: -8.434500694274902
    7. ' ' → logprob: -9.559500694274902
    8. '[' → logprob: -10.184500694274902
    9. ' %)' → logprob: -10.184500694274902
    10. '%)' → logprob: -10.309500694274902

Token 252: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -15.750335693359375
    4. '   ' → logprob: -17.500335693359375
    5. '' → logprob: -18.625335693359375
    6. '۴' → logprob: -19.312835693359375
    7. '４' → logprob: -19.625335693359375
    8. '1' → logprob: -19.750335693359375
    9. '=' → logprob: -20.000335693359375
    10. ' ' → logprob: -20.187835693359375

Token 253: '
' (ID: 198)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.4759167432785034
    2. '   ' → logprob: -1.4759167432785034
    3. 'dire' → logprob: -3.100916862487793
    4. ' directions' → logprob: -3.725916862487793
    5. ' direction' → logprob: -3.850916862487793
    6. 'dir' → logprob: -4.475916862487793
    7. '
' → logprob: -4.475916862487793
    8. '_direction' → logprob: -4.600916862487793
    9. '```' → logprob: -5.850916862487793
    10. ')' → logprob: -5.975916862487793

Token 254: '   ' (ID: 271)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.02610590308904648
    2. ' direction' → logprob: -4.151105880737305
    3. 'dir' → logprob: -5.276105880737305
    4. 'dire' → logprob: -5.401105880737305
    5. 'current' → logprob: -8.776105880737305
    6. ' directions' → logprob: -8.776105880737305
    7. 'd' → logprob: -10.651105880737305
    8. 'cur' → logprob: -11.026105880737305
    9. '_direction' → logprob: -11.401105880737305
    10. ' dir' → logprob: -11.401105880737305

Token 255: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.1852126270532608
    2. 'dir' → logprob: -2.4352126121520996
    3. 'dire' → logprob: -2.5602126121520996
    4. 'dirs' → logprob: -6.0602126121521
    5. 'turn' → logprob: -7.0602126121521
    6. 'd' → logprob: -7.3102126121521
    7. ' direction' → logprob: -8.810213088989258
    8. ' directions' → logprob: -10.435213088989258
    9. 'dp' → logprob: -10.560213088989258
    10. '#' (adapté à ' #') → logprob: -10.810213088989258

Token 256: ' We'll' (ID: 46830)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.18053333461284637
    2. 'dire' → logprob: -2.3055334091186523
    3. 'dir' → logprob: -2.8055334091186523
    4. 'turn' → logprob: -6.180533409118652
    5. 'dirs' → logprob: -6.180533409118652
    6. 'd' → logprob: -7.805533409118652
    7. '#' → logprob: -9.430533409118652
    8. 'cur' → logprob: -9.430533409118652
    9. 'current' → logprob: -9.555533409118652
    10. 'curr' → logprob: -9.930533409118652

Token 257: ' store' (ID: 4897)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.5813702940940857
    2. ' pre' → logprob: -1.4563703536987305
    3. 'compute' → logprob: -2.4563703536987305
    4. 'process' → logprob: -3.5813703536987305
    5. 'build' → logprob: -3.7063703536987305
    6. 'store' → logprob: -3.9563703536987305
    7. 'dp' → logprob: -4.7063703536987305
    8. 'simulate' → logprob: -5.0813703536987305
    9. ' process' → logprob: -5.3313703536987305
    10. ' store' → logprob: -5.5813703536987305

Token 258: ' dir' (ID: 5609)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.7288352847099304
    2. 'dir' → logprob: -1.7288353443145752
    3. 'direction' → logprob: -1.7288353443145752
    4. ' directions' → logprob: -2.478835344314575
    5. ' direction' → logprob: -3.103835344314575
    6. ' dir' → logprob: -4.228835105895996
    7. 'dirs' → logprob: -4.353835105895996
    8. ' dirs' → logprob: -5.603835105895996
    9. 'd' → logprob: -6.603835105895996
    10. 'turn' → logprob: -7.728835105895996

Token 259: '_after' (ID: 46788)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16201017796993256
    2. '_after' → logprob: -2.5370101928710938
    3. '_dir' → logprob: -3.5370101928710938
    4. ' =' → logprob: -3.9120101928710938
    5. '_list' → logprob: -5.662010192871094
    6. 'ctions' → logprob: -5.912010192871094
    7. '_at' → logprob: -6.162010192871094
    8. 'dir' → logprob: -6.412010192871094
    9. 'ction' → logprob: -6.662010192871094
    10. 'ections' → logprob: -6.787010192871094

Token 260: '_turn' (ID: 89223)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11776440590620041
    2. '=' → logprob: -2.992764472961426
    3. '_turn' → logprob: -3.867764472961426
    4. '=[' → logprob: -3.992764472961426
    5. 'turn' → logprob: -4.367764472961426
    6. '=[]' → logprob: -5.867764472961426
    7. '[' → logprob: -5.867764472961426
    8. '[i' → logprob: -5.992764472961426
    9. '_i' → logprob: -8.492764472961426
    10. ' =[' → logprob: -8.617764472961426

Token 261: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6235285997390747
    2. ' =' → logprob: -1.1235285997390747
    3. 's' → logprob: -1.9985285997390747
    4. '=[]' → logprob: -6.373528480529785
    5. '=[' → logprob: -6.748528480529785
    6. '[' → logprob: -8.373528480529785
    7. 'es' → logprob: -9.623528480529785
    8. '[]' → logprob: -10.498528480529785
    9. '=[]
' → logprob: -10.623528480529785
    10. ' =[' → logprob: -11.623528480529785

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10528632253408432
    2. 's' → logprob: -2.3552863597869873
    3. ' =' → logprob: -6.230286121368408
    4. ']=' → logprob: -6.480286121368408
    5. '=' → logprob: -7.230286121368408
    6. ' ]' → logprob: -7.730286121368408
    7. '[s' → logprob: -9.105286598205566
    8. '[' → logprob: -9.230286598205566
    9. '[]' → logprob: -9.980286598205566
    10. '][' → logprob: -10.355286598205566

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31407350301742554
    2. ' =' → logprob: -1.3140735626220703
    3. '=[' → logprob: -7.31407356262207
    4. '=[]' → logprob: -9.56407356262207
    5. '[' → logprob: -10.18907356262207
    6. ']' → logprob: -11.18907356262207
    7. ' =[' → logprob: -11.31407356262207
    8. ',' → logprob: -12.31407356262207
    9. '=[]
' → logprob: -13.68907356262207
    10. '[:]' → logprob: -13.93907356262207

Token 264: ' direction' (ID: 9262)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010729319415986538
    2. ' ' → logprob: -5.1357293128967285
    3. '[' → logprob: -5.5107293128967285
    4. '(' → logprob: -8.510729789733887
    5. 'direction' → logprob: -8.635729789733887
    6. ' [' → logprob: -9.135729789733887
    7. 'program' → logprob: -9.510729789733887
    8. 'dir' → logprob: -10.260729789733887
    9. ' direction' → logprob: -10.510729789733887
    10. 'the' → logprob: -10.760729789733887

Token 265: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24697589874267578
    2. '=' → logprob: -2.371975898742676
    3. 's' → logprob: -2.871975898742676
    4. '[' → logprob: -3.371975898742676
    5. ']' → logprob: -4.371975898742676
    6. '=[' → logprob: -5.621975898742676
    7. '[i' → logprob: -5.621975898742676
    8. ',' → logprob: -6.246975898742676
    9. '=[]' → logprob: -6.246975898742676
    10. '[:]' → logprob: -6.371975898742676

Token 266: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10036227107048035
    2. ' i' → logprob: -2.3503623008728027
    3. 'app' → logprob: -9.100361824035645
    4. 'processing' → logprob: -11.725361824035645
    5. ' performing' → logprob: -12.225361824035645
    6. ' applying' → logprob: -12.350361824035645
    7. 'the' → logprob: -12.725361824035645
    8. ' processing' → logprob: -12.725361824035645
    9. ' executing' → logprob: -12.725361824035645
    10. ' app' → logprob: -13.100361824035645

Token 267: ' turns' (ID: 18304)
  Prédit: '_turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.14351540803909302
    2. '_' → logprob: -2.8935153484344482
    3. '_tokens' → logprob: -4.268515586853027
    4. '_token' → logprob: -4.518515586853027
    5. ' =' → logprob: -4.643515586853027
    6. ' turns' → logprob: -4.893515586853027
    7. 'turn' → logprob: -4.893515586853027
    8. ']' → logprob: -5.018515586853027
    9. '=' → logprob: -5.518515586853027
    10. ']_' → logprob: -5.518515586853027

Token 268: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5777933597564697
    2. '   ' → logprob: -0.8277933597564697
    3. '=' → logprob: -7.077793121337891
    4. '[' → logprob: -8.82779312133789
    5. ']' → logprob: -8.95279312133789
    6. ',' → logprob: -9.07779312133789
    7. 'dir' → logprob: -9.07779312133789
    8. ':' → logprob: -9.70279312133789
    9. 'direction' → logprob: -9.70279312133789
    10. '  ' → logprob: -9.82779312133789

Token 269: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1381644904613495
    2. '[' → logprob: -3.638164520263672
    3. '[i' → logprob: -3.638164520263672
    4. ']' → logprob: -3.763164520263672
    5. ' i' → logprob: -4.263164520263672
    6. '])' → logprob: -4.388164520263672
    7. 'i' → logprob: -4.638164520263672
    8. ' )' → logprob: -5.388164520263672
    9. '[])' → logprob: -6.013164520263672
    10. ' [' → logprob: -6.138164520263672

Token 270: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2042737752199173
    2. ' =' → logprob: -2.5792737007141113
    3. ']' → logprob: -2.8292737007141113
    4. '+' → logprob: -3.4542737007141113
    5. ')' → logprob: -4.829273700714111
    6. ']=' → logprob: -5.329273700714111
    7. 's' → logprob: -6.579273700714111
    8. ' +' → logprob: -7.954273700714111
    9. '])' → logprob: -8.07927417755127
    10. '   ' → logprob: -8.07927417755127

Token 271: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06247377023100853
    2. ' range' → logprob: -2.812473773956299
    3. '[' → logprob: -8.56247329711914
    4. '(range' → logprob: -9.18747329711914
    5. 'N' → logprob: -9.31247329711914
    6. '[N' → logprob: -9.68747329711914
    7. ']' → logprob: -10.93747329711914
    8. '   ' → logprob: -11.81247329711914
    9. '0' → logprob: -11.93747329711914
    10. '	range' → logprob: -12.06247329711914

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42974209785461426
    2. 'N' → logprob: -1.0547420978546143
    3. ' N' → logprob: -7.679741859436035
    4. '1' → logprob: -8.179741859436035
    5. ' ' → logprob: -9.054741859436035
    6. '   ' → logprob: -9.679741859436035
    7. 'range' → logprob: -9.929741859436035
    8. 'len' → logprob: -10.554741859436035
    9. ' range' → logprob: -11.804741859436035
    10. '(N' → logprob: -11.929741859436035

Token 273: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10924095660448074
    2. '])' → logprob: -2.859241008758545
    3. '+' → logprob: -4.109241008758545
    4. '...' → logprob: -4.359241008758545
    5. ',i' → logprob: -5.359241008758545
    6. ']' → logprob: -5.484241008758545
    7. '-' → logprob: -6.859241008758545
    8. ',
' → logprob: -6.984241008758545
    9. '..' → logprob: -7.234241008758545
    10. ')' → logprob: -7.234241008758545

Token 274: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014525714504998177
    2. ' N' → logprob: -8.875144958496094
    3. 'len' → logprob: -12.625144958496094
    4. '   ' → logprob: -14.625144958496094
    5. ']' → logprob: -15.125144958496094
    6. '
' → logprob: -15.375144958496094
    7. ')' → logprob: -15.500144958496094
    8. '[N' → logprob: -16.000144958496094
    9. ' ' → logprob: -16.125144958496094
    10. 'n' → logprob: -16.375144958496094

Token 275: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018236801028251648
    2. '+' → logprob: -4.3932366371154785
    3. '])
' → logprob: -5.6432366371154785
    4. ']' → logprob: -6.6432366371154785
    5. '-' → logprob: -8.018237113952637
    6. ')' → logprob: -8.768237113952637
    7. ']):' → logprob: -8.893237113952637
    8. '])]' → logprob: -10.018237113952637
    9. '])

' → logprob: -10.268237113952637
    10. '],' → logprob: -10.643237113952637

Token 276: '   ' (ID: 271)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.1150335893034935
    2. '   ' → logprob: -2.3650336265563965
    3. 'direction' → logprob: -4.9900336265563965
    4. ' dir' → logprob: -5.4900336265563965
    5. ' =' → logprob: -6.8650336265563965
    6. '
' → logprob: -6.8650336265563965
    7. '```' → logprob: -7.3650336265563965
    8. 'dire' → logprob: -8.115033149719238
    9. ' direction' → logprob: -8.490033149719238
    10. ',' → logprob: -9.115033149719238

Token 277: ' #' (ID: 1069)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.00014895245840307325
    2. 'direction' → logprob: -9.50014877319336
    3. ' dir' → logprob: -10.00014877319336
    4. '
' → logprob: -11.00014877319336
    5. 'dire' → logprob: -12.12514877319336
    6. '   ' → logprob: -14.00014877319336
    7. '#' (adapté à ' #') → logprob: -14.12514877319336
    8. 'def' → logprob: -14.37514877319336
    9. '```' → logprob: -14.37514877319336
    10. ')
' → logprob: -14.50014877319336

Token 278: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0002123614540323615
    2. 'direction' → logprob: -8.625212669372559
    3. 'dire' → logprob: -11.000212669372559
    4. ' dir' → logprob: -11.875212669372559
    5. 'def' → logprob: -12.750212669372559
    6. 'current' → logprob: -13.625212669372559
    7. 'turn' → logprob: -13.625212669372559
    8. '   ' → logprob: -14.000212669372559
    9. '#' → logprob: -14.125212669372559
    10. 'dirs' → logprob: -14.500212669372559

Token 279: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -3.4121114822482923e-06
    2. '_before' → logprob: -13.750003814697266
    3. 'after' → logprob: -13.875003814697266
    4. 's' → logprob: -14.375003814697266
    5. '_' → logprob: -14.875003814697266
    6. '_a' → logprob: -16.375003814697266
    7. 'After' → logprob: -16.750003814697266
    8. '_AFTER' → logprob: -17.000003814697266
    9. '_af' → logprob: -17.250003814697266
    10. ' =' → logprob: -17.500003814697266

Token 280: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.24352970719337463
    2. '_after' → logprob: -1.7435296773910522
    3. 'turn' → logprob: -3.243529796600342
    4. 'after' → logprob: -6.118529796600342
    5. '_' → logprob: -12.493529319763184
    6. '_before' → logprob: -12.618529319763184
    7. 's' → logprob: -13.868529319763184
    8. '_for' → logprob: -13.993529319763184
    9. '(turn' → logprob: -14.118529319763184
    10. 'After' → logprob: -14.243529319763184

Token 281: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048704322427511215
    2. ' =' → logprob: -3.0487043857574463
    3. '=[' → logprob: -9.548704147338867
    4. '[' → logprob: -10.048704147338867
    5. '=[]' → logprob: -13.923704147338867
    6. ' =[' → logprob: -14.298704147338867
    7. ']' → logprob: -15.048704147338867
    8. ' ' → logprob: -15.798704147338867
    9. ')' → logprob: -16.048704147338867
    10. ']=' → logprob: -16.673704147338867

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.616431713104248
    2. ']' → logprob: -0.866431713104248
    3. '=' → logprob: -3.741431713104248
    4. ' =' → logprob: -4.741431713104248
    5. 'N' → logprob: -5.616431713104248
    6. ']=' → logprob: -6.991431713104248
    7. '[' → logprob: -7.116431713104248
    8. ' ' → logprob: -7.616431713104248
    9. ')' → logprob: -7.741431713104248
    10. 'i' → logprob: -8.116432189941406

Token 283: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5471792817115784
    2. ']' → logprob: -1.0471792221069336
    3. ' =' → logprob: -2.7971792221069336
    4. ']=' → logprob: -4.672179222106934
    5. '=[' → logprob: -9.672179222106934
    6. '[' → logprob: -9.922179222106934
    7. ' ]' → logprob: -10.797179222106934
    8. ')' → logprob: -11.547179222106934
    9. ' ' → logprob: -12.922179222106934
    10. ' =[' → logprob: -12.922179222106934

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '[' → logprob: -15.7500581741333
    4. '۰' → logprob: -18.500059127807617
    5. '０' → logprob: -19.375059127807617
    6. '(' → logprob: -19.625059127807617
    7. '   ' → logprob: -19.875059127807617
    8. '```' → logprob: -20.125059127807617
    9. ' [' → logprob: -20.437559127807617
    10. '00' → logprob: -20.625059127807617

Token 285: ' (' (ID: 350)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.22646529972553253
    2. '
' → logprob: -1.8514653444290161
    3. ' =' → logprob: -4.101465225219727
    4. '   ' → logprob: -4.601465225219727
    5. 'direction' → logprob: -5.101465225219727
    6. '```' → logprob: -5.476465225219727
    7. '=' → logprob: -5.851465225219727
    8. ' dir' → logprob: -6.476465225219727
    9. '[' → logprob: -6.726465225219727
    10. ',' → logprob: -6.726465225219727

Token 286: 'initial' (ID: 17493)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13900917768478394
    2. '[' → logprob: -2.1390092372894287
    3. ')' → logprob: -5.26400899887085
    4. ']' → logprob: -6.01400899887085
    5. ' [' → logprob: -6.26400899887085
    6. ' ' → logprob: -6.76400899887085
    7. '])' → logprob: -7.01400899887085
    8. 'dir' → logprob: -8.764009475708008
    9. 'direction' → logprob: -8.889009475708008
    10. ')
' → logprob: -9.889009475708008

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7129788398742676
    2. 'direction' → logprob: -1.7129788398742676
    3. ' direction' → logprob: -1.9629788398742676
    4. ')
' → logprob: -1.9629788398742676
    5. ']' → logprob: -3.3379788398742676
    6. '_direction' → logprob: -4.962978839874268
    7. ' =' → logprob: -6.837978839874268
    8. '])' → logprob: -6.962978839874268
    9. ']
' → logprob: -7.712978839874268
    10. 'dir' → logprob: -7.712978839874268

Token 288: '   ' (ID: 271)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.06416317075490952
    2. '   ' → logprob: -2.8141632080078125
    3. '```' → logprob: -6.6891632080078125
    4. '
' → logprob: -7.6891632080078125
    5. ' dir' → logprob: -7.8141632080078125
    6. 'direction' → logprob: -10.189163208007812
    7. '    
' → logprob: -11.064163208007812
    8. '``' → logprob: -11.689163208007812
    9. '	dir' → logprob: -11.814163208007812
    10. ',' → logprob: -12.439163208007812

Token 289: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.000536232371814549
    2. '
' → logprob: -8.50053596496582
    3. ' dir' → logprob: -8.62553596496582
    4. 'direction' → logprob: -9.25053596496582
    5. '   ' → logprob: -10.50053596496582
    6. '```' → logprob: -11.75053596496582
    7. '\n' → logprob: -12.50053596496582
    8. 'dire' → logprob: -12.75053596496582
    9. '    
' → logprob: -12.87553596496582
    10. '[
' → logprob: -13.12553596496582

Token 290: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. '_before' → logprob: -17.0
    4. 'after' → logprob: -17.75
    5. '_from' → logprob: -17.75
    6. '_of' → logprob: -17.875
    7. '_AFTER' → logprob: -18.125
    8. '_a' → logprob: -18.75
    9. '_af' → logprob: -19.5
    10. '__' → logprob: -19.75

Token 291: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -5.5577775128767826e-06
    2. 'turn' → logprob: -12.125005722045898
    3. '_direction' → logprob: -17.8750057220459
    4. '_dir' → logprob: -18.2500057220459
    5. '(turn' → logprob: -19.6250057220459
    6. '-turn' → logprob: -20.2500057220459
    7. '_after' → logprob: -20.7500057220459
    8. 'Turn' → logprob: -21.3750057220459
    9. ' turn' → logprob: -21.6250057220459
    10. '_t' → logprob: -21.7500057220459

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25477325916290283
    2. ' =' → logprob: -1.5047732591629028
    3. '=[' → logprob: -5.879773139953613
    4. ' =[' → logprob: -10.129773139953613
    5. '[' → logprob: -12.504773139953613
    6. ' ' → logprob: -14.879773139953613
    7. '=[]' → logprob: -15.254773139953613
    8. ']' → logprob: -16.50477409362793
    9. '＝' → logprob: -17.00477409362793
    10. ']=' → logprob: -17.12977409362793

Token 293: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009114635176956654
    2. ' [' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.500911712646484
    4. '{' → logprob: -19.625911712646484
    5. ' ' → logprob: -20.000911712646484
    6. '([' → logprob: -20.500911712646484
    7. '[N' → logprob: -20.625911712646484
    8. '0' → logprob: -20.750911712646484
    9. '[int' → logprob: -20.750911712646484
    10. '=[' → logprob: -21.125911712646484

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. ']' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '۰' → logprob: -19.875003814697266
    6. '０' → logprob: -20.875003814697266
    7. '[' → logprob: -21.125003814697266
    8. '  ' → logprob: -21.375003814697266
    9. ')' → logprob: -21.625003814697266
    10. '(' → logprob: -21.750003814697266

Token 295: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001305118203163147
    2. ']*(' → logprob: -7.001305103302002
    3. ']*' → logprob: -8.62630558013916
    4. ']+' → logprob: -8.62630558013916
    5. ']
' → logprob: -10.87630558013916
    6. '0' → logprob: -11.87630558013916
    7. ' ]' → logprob: -12.50130558013916
    8. 'for' → logprob: -12.87630558013916
    9. ' for' → logprob: -14.12630558013916
    10. '])' → logprob: -14.87630558013916

Token 296: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1875571544806007e-05
    2. ' N' → logprob: -11.500011444091797
    3. '(N' → logprob: -14.000011444091797
    4. '   ' → logprob: -14.000011444091797
    5. ' ' → logprob: -18.250011444091797
    6. '	N' → logprob: -18.875011444091797
    7. 'n' → logprob: -18.875011444091797
    8. '[N' → logprob: -19.250011444091797
    9. ')' → logprob: -19.500011444091797
    10. 'Ｎ' → logprob: -19.625011444091797

Token 297: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.659005157416686e-05
    2. ' +' → logprob: -9.625066757202148
    3. '+
' → logprob: -15.375066757202148
    4. ')' → logprob: -15.500066757202148
    5. '+)' → logprob: -17.00006675720215
    6. '1' → logprob: -17.62506675720215
    7. ')+' → logprob: -18.25006675720215
    8. '```' → logprob: -18.87506675720215
    9. '
' → logprob: -19.75006675720215
    10. '()+' → logprob: -19.75006675720215

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '2' → logprob: -18.500003814697266
    5. '```' → logprob: -19.500003814697266
    6. '
' → logprob: -19.875003814697266
    7. '１' → logprob: -20.375003814697266
    8. '  ' → logprob: -21.000003814697266
    9. '+' → logprob: -21.562503814697266
    10. '۱' → logprob: -22.000003814697266

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007133854669518769
    2. ')
' → logprob: -7.250713348388672
    3. ']' → logprob: -13.250713348388672
    4. ' )' → logprob: -14.625713348388672
    5. ')

' → logprob: -14.750713348388672
    6. ')
' → logprob: -14.875713348388672
    7. ')]' → logprob: -15.625713348388672
    8. '),' → logprob: -17.250713348388672
    9. ')`' → logprob: -17.375713348388672
    10. ')#' → logprob: -17.750713348388672

Token 300: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0630660206079483
    2. ' for' → logprob: -2.813066005706787
    3. '   ' → logprob: -6.938066005706787
    4. 'i' → logprob: -9.438066482543945
    5. '	for' → logprob: -10.688066482543945
    6. '```' → logprob: -10.813066482543945
    7. ' i' → logprob: -13.563066482543945
    8. '    
' → logprob: -13.813066482543945
    9. 'idx' → logprob: -14.313066482543945
    10. '  ' → logprob: -14.813066482543945

Token 301: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.392202976712724e-06
    2. ' for' → logprob: -12.125006675720215
    3. '```' → logprob: -15.000006675720215
    4. 'i' → logprob: -15.250006675720215
    5. 'direction' → logprob: -15.625006675720215
    6. '   ' → logprob: -16.3750057220459
    7. 'idx' → logprob: -17.2500057220459
    8. 'prev' → logprob: -17.6250057220459
    9. 'current' → logprob: -18.2500057220459
    10. 'dir' → logprob: -18.3750057220459

Token 302: ' =' (ID: 314)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.3324965238571167
    2. '=' → logprob: -1.8324965238571167
    3. 'for' → logprob: -3.0824966430664062
    4. 'i' → logprob: -3.3324966430664062
    5. ' =' → logprob: -3.3324966430664062
    6. 'irection' → logprob: -5.957496643066406
    7. 'current' → logprob: -7.832496643066406
    8. 'r' → logprob: -7.957496643066406
    9. 'o' → logprob: -8.082496643066406
    10. '_current' → logprob: -8.332496643066406

Token 303: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.626171112060547
    4. '  ' → logprob: -17.501171112060547
    5. '=' → logprob: -18.126171112060547
    6. '```' → logprob: -18.563671112060547
    7. '[' → logprob: -18.688671112060547
    8. '۰' → logprob: -18.938671112060547
    9. 'import' → logprob: -19.438671112060547
    10. '1' → logprob: -19.688671112060547

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '=' → logprob: -18.000036239624023
    4. '[' → logprob: -18.125036239624023
    5. '   ' → logprob: -18.250036239624023
    6. '۰' → logprob: -18.375036239624023
    7. 'dir' → logprob: -18.500036239624023
    8. '  ' → logprob: -18.750036239624023
    9. ')' → logprob: -18.750036239624023
    10. 'import' → logprob: -18.875036239624023

Token 305: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1524621695280075
    2. ' for' → logprob: -2.0274622440338135
    3. '
' → logprob: -4.777462005615234
    4. '   ' → logprob: -7.527462005615234
    5. '<|end|>' → logprob: -8.027462005615234
    6. '    
' → logprob: -8.902462005615234
    7. ' 
' → logprob: -9.152462005615234
    8. '  
' → logprob: -9.402462005615234
    9. ')' → logprob: -10.277462005615234
    10. '	for' → logprob: -10.402462005615234

Token 306: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6069274544715881
    2. ' for' → logprob: -1.1069273948669434
    3. '
' → logprob: -2.3569273948669434
    4. '   ' → logprob: -3.8569273948669434
    5. ' 
' → logprob: -6.106927394866943
    6. '<|end|>' → logprob: -6.106927394866943
    7. ')' → logprob: -6.481927394866943
    8. '    
' → logprob: -6.856927394866943
    9. '\n' → logprob: -8.356927871704102
    10. '  
' → logprob: -8.481927871704102

Token 307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00118856446351856
    2. ' for' → logprob: -6.7511887550354
    3. 'i' → logprob: -11.126188278198242
    4. '   ' → logprob: -12.626188278198242
    5. '
' → logprob: -15.501188278198242
    6. '```' → logprob: -16.251188278198242
    7. '    
' → logprob: -16.751188278198242
    8. '	for' → logprob: -17.251188278198242
    9. ' i' → logprob: -17.751188278198242
    10. 'idx' → logprob: -19.001188278198242

Token 308: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06197172403335571
    2. 'i' → logprob: -2.811971664428711
    3. '	i' → logprob: -13.311971664428711
    4. ' ' → logprob: -13.811971664428711
    5. '_i' → logprob: -14.061971664428711
    6. ',i' → logprob: -15.936971664428711
    7. '   ' → logprob: -16.06197166442871
    8. '(i' → logprob: -16.18697166442871
    9. ' in' → logprob: -16.81197166442871
    10. ' ' → logprob: -16.93697166442871

Token 309: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00682489387691021
    2. 'in' → logprob: -5.006824970245361
    3. '+' → logprob: -9.381824493408203
    4. ' ' → logprob: -11.631824493408203
    5. ',' → logprob: -12.256824493408203
    6. '	in' → logprob: -13.006824493408203
    7. 'd' → logprob: -13.131824493408203
    8. ' i' → logprob: -13.756824493408203
    9. '=' → logprob: -13.881824493408203
    10. '<|end|>' → logprob: -14.006824493408203

Token 310: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3265954256057739
    2. 'cmd' → logprob: -1.326595425605774
    3. ' c' → logprob: -4.701595306396484
    4. ' cmd' → logprob: -5.951595306396484
    5. 'command' → logprob: -7.201595306396484
    6. 'ch' → logprob: -7.201595306396484
    7. ' command' → logprob: -10.076595306396484
    8. ' ch' → logprob: -10.701595306396484
    9. 'op' → logprob: -12.701595306396484
    10. 't' → logprob: -13.951595306396484

Token 311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007612305693328381
    2. 'in' → logprob: -4.882612228393555
    3. ',' → logprob: -13.007612228393555
    4. 's' → logprob: -13.507612228393555
    5. 'n' → logprob: -13.757612228393555
    6. ' ' → logprob: -14.007612228393555
    7. '	in' → logprob: -14.882612228393555
    8. 'import' → logprob: -17.007612228393555
    9. ' ,' → logprob: -17.132612228393555
    10. 'i' → logprob: -17.132612228393555

Token 312: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009117019944824278
    2. ' enumerate' → logprob: -7.000911712646484
    3. 'enum' → logprob: -15.750911712646484
    4. 'en' → logprob: -16.750911712646484
    5. '```' → logprob: -18.750911712646484
    6. '(en' → logprob: -18.875911712646484
    7. 'range' → logprob: -19.375911712646484
    8. 'enqueue' → logprob: -19.625911712646484
    9. '   ' → logprob: -20.375911712646484
    10. 'in' → logprob: -21.125911712646484

Token 313: '(program' (ID: 79745)
  Prédit: '(program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(program' → logprob: -0.07207068800926208
    2. 'program' → logprob: -2.697070598602295
    3. ' program' → logprob: -6.197070598602295
    4. ' (' → logprob: -9.572071075439453
    5. '(' → logprob: -10.822071075439453
    6. '_program' → logprob: -13.572071075439453
    7. 'enumer' → logprob: -13.697071075439453
    8. ' programu' → logprob: -13.947071075439453
    9. ')' → logprob: -14.072071075439453
    10. '(pro' → logprob: -14.197071075439453

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14536578953266144
    2. '):
' → logprob: -2.0203657150268555
    3. ':' → logprob: -6.0203657150268555
    4. ' ):' → logprob: -9.145365715026855
    5. '   ' → logprob: -9.270365715026855
    6. ':
' → logprob: -11.020365715026855
    7. ']:' → logprob: -11.145365715026855
    8. ' ):
' → logprob: -11.895365715026855
    9. '):
' → logprob: -12.145365715026855
    10. ')' → logprob: -12.895365715026855

Token 315: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062179084867239
    2. ':' → logprob: -2.9371790885925293
    3. ':
' → logprob: -5.312179088592529
    4. '    
' → logprob: -6.937179088592529
    5. ' if' → logprob: -7.562179088592529
    6. '[' → logprob: -9.062178611755371
    7. '[i' → logprob: -9.312178611755371
    8. ' :' → logprob: -9.312178611755371
    9. '):
' → logprob: -9.312178611755371
    10. '```' → logprob: -9.562178611755371

Token 316: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22920633852481842
    2. '   ' → logprob: -1.7292063236236572
    3. 'if' (adapté à ' if') → logprob: -3.9792063236236572
    4. '       ' → logprob: -4.854206562042236
    5. '    ' → logprob: -8.104206085205078
    6. '+' → logprob: -8.979206085205078
    7. 'd' → logprob: -9.479206085205078
    8. ' ' → logprob: -9.604206085205078
    9. '    
' → logprob: -9.854206085205078
    10. '	if' → logprob: -10.104206085205078

Token 317: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20143507421016693
    2. ' c' → logprob: -1.7014350891113281
    3. '   ' → logprob: -11.326435089111328
    4. '	c' → logprob: -11.826435089111328
    5. ' ' → logprob: -13.326435089111328
    6. ')c' → logprob: -15.076435089111328
    7. '    ' → logprob: -15.451435089111328
    8. '  ' → logprob: -15.576435089111328
    9. '(c' → logprob: -16.951435089111328
    10. '       ' → logprob: -16.951435089111328

Token 318: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3508559465408325
    2. '==' → logprob: -1.2258559465408325
    3. '=='' → logprob: -6.100855827331543
    4. ' =='' → logprob: -9.350855827331543
    5. '=="' → logprob: -10.600855827331543
    6. '=' → logprob: -10.600855827331543
    7. '[' → logprob: -11.600855827331543
    8. ')==' → logprob: -12.350855827331543
    9. ' ' → logprob: -12.475855827331543
    10. ']==' → logprob: -12.600855827331543

Token 319: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.10230842977762222
    2. ''' → logprob: -2.352308511734009
    3. ' '' → logprob: -6.60230827331543
    4. 'L' → logprob: -7.47730827331543
    5. ' L' → logprob: -10.22730827331543
    6. ''I' → logprob: -10.35230827331543
    7. '"L' → logprob: -10.35230827331543
    8. ''T' → logprob: -10.60230827331543
    9. ''U' → logprob: -11.72730827331543
    10. ' ' → logprob: -11.97730827331543

Token 320: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008637258782982826
    2. 'R' → logprob: -4.758637428283691
    3. ''L' → logprob: -11.133637428283691
    4. ' L' → logprob: -12.883637428283691
    5. ''' → logprob: -13.133637428283691
    6. '')' → logprob: -14.383637428283691
    7. 'D' → logprob: -14.383637428283691
    8. 'F' → logprob: -15.258637428283691
    9. 'T' → logprob: -15.321137428283691
    10. 'S' → logprob: -15.321137428283691

Token 321: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.44899782538414
    2. '':' → logprob: -1.0739978551864624
    3. ':' → logprob: -5.198997974395752
    4. ')' → logprob: -5.573997974395752
    5. '):
' → logprob: -5.573997974395752
    6. '):' → logprob: -5.948997974395752
    7. ''' → logprob: -6.323997974395752
    8. ''):
' → logprob: -6.448997974395752
    9. ':
' → logprob: -7.448997974395752
    10. ''):' → logprob: -8.573997497558594

Token 322: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3173809051513672
    2. ' d' → logprob: -1.9423809051513672
    3. 'd' → logprob: -2.692380905151367
    4. '           ' → logprob: -3.317380905151367
    5. '
' → logprob: -4.192380905151367
    6. ':
' → logprob: -5.442380905151367
    7. ' 
' → logprob: -6.692380905151367
    8. '   ' → logprob: -7.067380905151367
    9. ':' → logprob: -7.942380905151367
    10. ',d' → logprob: -8.067380905151367

Token 323: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0070366933941841125
    2. ' d' → logprob: -5.0070366859436035
    3. '       ' → logprob: -8.507037162780762
    4. '           ' → logprob: -9.132037162780762
    5. '   ' → logprob: -11.757037162780762
    6. '(d' → logprob: -13.257037162780762
    7. '	d' → logprob: -13.882037162780762
    8. ' (' → logprob: -15.632037162780762
    9. '
' → logprob: -15.757037162780762
    10. '(' → logprob: -16.882036209106445

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142163336277008
    2. '=' → logprob: -1.7014216184616089
    3. '=(' → logprob: -12.701421737670898
    4. ' -=' → logprob: -13.201421737670898
    5. ' =(' → logprob: -13.576421737670898
    6. '-=' → logprob: -13.951421737670898
    7. ' +=' → logprob: -14.326421737670898
    8. ' ' → logprob: -14.576421737670898
    9. '+=' → logprob: -15.576421737670898
    10. '＝' → logprob: -17.3264217376709

Token 325: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.061971161514520645
    2. ' (' → logprob: -2.8119711875915527
    3. '(' → logprob: -13.061970710754395
    4. '3' → logprob: -14.811970710754395
    5. '   ' → logprob: -15.436970710754395
    6. '(dir' → logprob: -15.686970710754395
    7. '(dd' → logprob: -15.686970710754395
    8. ' ' → logprob: -15.811970710754395
    9. '(D' → logprob: -16.06197166442871
    10. '(c' → logprob: -16.06197166442871

Token 326: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.7385154428193346e-05
    2. ' d' → logprob: -10.25003719329834
    3. '(d' → logprob: -13.37503719329834
    4. ')d' → logprob: -15.00003719329834
    5. '	d' → logprob: -16.250038146972656
    6. ')' → logprob: -18.000038146972656
    7. '   ' → logprob: -18.125038146972656
    8. '>d' → logprob: -18.750038146972656
    9. ' (' → logprob: -18.875038146972656
    10. '(' → logprob: -19.000038146972656

Token 327: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4956374764442444
    2. ' -' → logprob: -1.4956374168395996
    3. '+' → logprob: -1.8706374168395996
    4. '-' → logprob: -4.3706374168396
    5. 'd' → logprob: -10.995637893676758
    6. ' ' → logprob: -11.120637893676758
    7. '+d' → logprob: -11.495637893676758
    8. ' d' → logprob: -14.495637893676758
    9. '1' → logprob: -15.495637893676758
    10. '3' → logprob: -15.870637893676758

Token 328: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '  ' → logprob: -19.625024795532227
    5. '۳' → logprob: -19.625024795532227
    6. '-' → logprob: -20.375024795532227
    7. ')' → logprob: -20.500024795532227
    8. '```' → logprob: -20.500024795532227
    9. '³' → logprob: -21.000024795532227
    10. '৩' → logprob: -21.312524795532227

Token 329: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007949740393087268
    2. ')%' → logprob: -7.250794887542725
    3. ' )' → logprob: -9.375795364379883
    4. ')
' → logprob: -16.500795364379883
    5. '%' → logprob: -16.625795364379883
    6. '）' → logprob: -18.250795364379883
    7. ')#' → logprob: -18.250795364379883
    8. '')' → logprob: -18.375795364379883
    9. '),' → logprob: -19.000795364379883
    10. '%)' → logprob: -19.250795364379883

Token 330: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.5
    4. '۴' → logprob: -19.375
    5. '' → logprob: -20.0
    6. '<|end|>' → logprob: -20.25
    7. '04' → logprob: -20.625
    8. '৪' → logprob: -20.75
    9. '   ' → logprob: -20.875
    10. '٤' → logprob: -21.125

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6333606839179993
    2. '<|end|>' → logprob: -1.0083606243133545
    3. ')' → logprob: -2.6333606243133545
    4. '
' → logprob: -4.133360862731934
    5. '   ' → logprob: -5.258360862731934
    6. 'elif' → logprob: -5.883360862731934
    7. '```' → logprob: -6.258360862731934
    8. ')
' → logprob: -6.258360862731934
    9. ' else' → logprob: -7.133360862731934
    10. '<|end|>' → logprob: -7.258360862731934

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035921139642596245
    2. '<|end|>' → logprob: -5.753592014312744
    3. 'elif' → logprob: -8.378592491149902
    4. '```' → logprob: -9.503592491149902
    5. ')' → logprob: -10.253592491149902
    6. ' elif' → logprob: -10.378592491149902
    7. '   ' → logprob: -11.128592491149902
    8. '<|end|>' → logprob: -11.753592491149902
    9. ' else' → logprob: -12.128592491149902
    10. ',' → logprob: -12.753592491149902

Token 333: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08451700955629349
    2. 'elif' → logprob: -2.584517002105713
    3. ' elif' → logprob: -5.209517002105713
    4. 'else' (adapté à ' else') → logprob: -9.084517478942871
    5. ' else' → logprob: -10.459517478942871
    6. '	elif' → logprob: -12.834517478942871
    7. '   ' → logprob: -13.334517478942871
    8. '```' → logprob: -15.709517478942871
    9. ' or' → logprob: -15.834517478942871
    10. ',' → logprob: -16.334516525268555

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013478424400091171
    2. ':
' → logprob: -4.3884782791137695
    3. ' :' → logprob: -7.0134782791137695
    4. ' :
' → logprob: -10.51347827911377
    5. 'd' → logprob: -11.13847827911377
    6. '   ' → logprob: -11.76347827911377
    7. ' d' → logprob: -12.26347827911377
    8. '           ' → logprob: -13.38847827911377
    9. ':d' → logprob: -13.51347827911377
    10. ' c' → logprob: -13.63847827911377

Token 335: '           ' (ID: 352)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4010120630264282
    2. 'd' → logprob: -1.1510120630264282
    3. '           ' → logprob: -4.776011943817139
    4. '       ' → logprob: -5.776011943817139
    5. '   ' → logprob: -6.401011943817139
    6. '1' → logprob: -8.151012420654297
    7. ' ' → logprob: -8.526012420654297
    8. ' (' → logprob: -9.026012420654297
    9. '(d' → logprob: -9.276012420654297
    10. '(' → logprob: -9.901012420654297

Token 336: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0019289902411401272
    2. ' d' → logprob: -6.251928806304932
    3. '           ' → logprob: -15.75192928314209
    4. '   ' → logprob: -15.87692928314209
    5. '       ' → logprob: -16.626928329467773
    6. '(d' → logprob: -18.876928329467773
    7. '	d' → logprob: -19.376928329467773
    8. ' ' → logprob: -19.626928329467773
    9. '  ' → logprob: -19.876928329467773
    10. '
' → logprob: -20.001928329467773

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687145709991455
    2. ' =' → logprob: -1.1368714570999146
    3. '+=' → logprob: -15.511871337890625
    4. '=(' → logprob: -16.136871337890625
    5. ' +=' → logprob: -16.136871337890625
    6. ' ' → logprob: -17.261871337890625
    7. ' =(' → logprob: -18.136871337890625
    8. '＝' → logprob: -18.636871337890625
    9. ')' → logprob: -18.886871337890625
    10. '   ' → logprob: -20.011871337890625

Token 338: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3132723271846771
    2. '(d' → logprob: -1.3132723569869995
    3. '(c' → logprob: -12.563272476196289
    4. '(dx' → logprob: -13.188272476196289
    5. '(data' → logprob: -14.438272476196289
    6. '(dir' → logprob: -14.563272476196289
    7. '(di' → logprob: -14.563272476196289
    8. '(div' → logprob: -14.688272476196289
    9. '(' → logprob: -14.938272476196289
    10. '(dc' → logprob: -15.438272476196289

Token 339: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5764844417572021
    2. 'd' → logprob: -0.8264844417572021
    3. ' (' → logprob: -7.701484680175781
    4. ' d' → logprob: -9.451484680175781
    5. '(' → logprob: -12.576484680175781
    6. ')d' → logprob: -12.826484680175781
    7. '   ' → logprob: -13.451484680175781
    8. '	d' → logprob: -13.451484680175781
    9. '[d' → logprob: -13.451484680175781
    10. ' ' → logprob: -14.451484680175781

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019618207588791847
    2. ' +' → logprob: -6.251961708068848
    3. '1' → logprob: -11.001961708068848
    4. '+d' → logprob: -11.126961708068848
    5. '+(' → logprob: -14.501961708068848
    6. ' ' → logprob: -14.876961708068848
    7. '(' → logprob: -15.251961708068848
    8. '[' → logprob: -16.126962661743164
    9. '+c' → logprob: -16.251962661743164
    10. 'd' → logprob: -16.501962661743164

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007735461927950382
    2. '(' → logprob: -4.882735252380371
    3. ' ' → logprob: -9.632735252380371
    4. ' (' → logprob: -9.757735252380371
    5. '(i' → logprob: -13.132735252380371
    6. ')' → logprob: -13.632735252380371
    7. '4' → logprob: -14.757735252380371
    8. '```' → logprob: -15.382735252380371
    9. '[' → logprob: -15.507735252380371
    10. '
' → logprob: -15.632735252380371

Token 342: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.002485288307070732
    2. ')' → logprob: -6.002485275268555
    3. '%' → logprob: -11.627485275268555
    4. ']%' → logprob: -15.127485275268555
    5. ' )' → logprob: -15.627485275268555
    6. '%)' → logprob: -16.502485275268555
    7. '   ' → logprob: -16.877485275268555
    8. ')
' → logprob: -17.377485275268555
    9. '}%' → logprob: -17.752485275268555
    10. ' %' → logprob: -18.502485275268555

Token 343: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.125
    3. ' ' → logprob: -18.25
    4. '' → logprob: -19.125
    5. '۴' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '৪' → logprob: -20.625
    8. '[' → logprob: -21.0
    9. '४' → logprob: -21.0
    10. '٤' → logprob: -21.625

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18078656494617462
    2. '   ' → logprob: -1.8057866096496582
    3. ' dir' → logprob: -7.180786609649658
    4. 'dir' → logprob: -9.1807861328125
    5. ',' → logprob: -10.1807861328125
    6. '
' → logprob: -10.4307861328125
    7. '<|end|>' → logprob: -10.5557861328125
    8. '        
' → logprob: -10.8057861328125
    9. '	dir' → logprob: -10.9307861328125
    10. '```' → logprob: -11.1807861328125

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20154023170471191
    2. '   ' → logprob: -1.701540231704712
    3. 'dir' → logprob: -9.951539993286133
    4. ' dir' → logprob: -10.576539993286133
    5. '```' → logprob: -10.951539993286133
    6. '           ' → logprob: -11.701539993286133
    7. '
' → logprob: -11.826539993286133
    8. '<|end|>' → logprob: -12.076539993286133
    9. '        
' → logprob: -12.576539993286133
    10. '      ' → logprob: -13.076539993286133

Token 346: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.013501237146556377
    2. ' dir' → logprob: -4.513501167297363
    3. '   ' → logprob: -6.013501167297363
    4. '	dir' → logprob: -13.013501167297363
    5. '```' → logprob: -13.263501167297363
    6. '
' → logprob: -14.763501167297363
    7. '       ' → logprob: -15.388501167297363
    8. '(dir' → logprob: -16.13850212097168
    9. '  ' → logprob: -16.51350212097168
    10. ' ' → logprob: -16.63850212097168

Token 347: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.9361264946837764e-07
    2. 'after' → logprob: -16.75
    3. '_for' → logprob: -17.75
    4. '_before' → logprob: -18.875
    5. '_of' → logprob: -19.25
    6. '_AFTER' → logprob: -19.75
    7. '_from' → logprob: -20.75
    8. 'After' → logprob: -21.875
    9. ' after' → logprob: -22.75
    10. '_at' → logprob: -22.875

Token 348: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -4.246537173457909e-06
    2. 'turn' → logprob: -12.375003814697266
    3. '```' → logprob: -18.875003814697266
    4. '(turn' → logprob: -18.875003814697266
    5. '-turn' → logprob: -19.625003814697266
    6. 'Turn' → logprob: -21.250003814697266
    7. '_direction' → logprob: -21.625003814697266
    8. '_touch' → logprob: -21.625003814697266
    9. ' turn' → logprob: -22.125003814697266
    10. '_t' → logprob: -22.375003814697266

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. '\[' → logprob: -17.625
    4. '[I' → logprob: -18.375
    5. ' [' → logprob: -18.75
    6. '[int' → logprob: -19.375
    7. '[in' → logprob: -20.0
    8. '[c' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. '[e' → logprob: -21.0

Token 350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000442351185483858
    2. ' +' → logprob: -7.7504425048828125
    3. ']' → logprob: -11.500442504882812
    4. '+]' → logprob: -14.250442504882812
    5. '+
' → logprob: -15.250442504882812
    6. '+=' → logprob: -15.875442504882812
    7. ']+=' → logprob: -15.875442504882812
    8. '<|end|>' → logprob: -16.125442504882812
    9. '＋' → logprob: -16.875442504882812
    10. ']+' → logprob: -17.250442504882812

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.125000953674316
    4. '+' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ']' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -18.000001907348633
    8. '`' → logprob: -18.312501907348633
    9. ')' → logprob: -18.437501907348633
    10. '[' → logprob: -18.687501907348633

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00048167374916374683
    2. ']=' → logprob: -7.750481605529785
    3. '=' → logprob: -10.000481605529785
    4. ' ]' → logprob: -12.125481605529785
    5. ' =' → logprob: -15.500481605529785
    6. '=d' → logprob: -17.0004825592041
    7. ')' → logprob: -17.7504825592041
    8. 'd' → logprob: -19.0004825592041
    9. ']
' → logprob: -19.7504825592041
    10. '`]' → logprob: -20.1254825592041

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015337858349084854
    2. ' =' → logprob: -6.5015339851379395
    3. '=d' → logprob: -10.376533508300781
    4. '=c' → logprob: -16.75153350830078
    5. '=v' → logprob: -17.50153350830078
    6. '=s' → logprob: -17.62653350830078
    7. '=int' → logprob: -17.75153350830078
    8. '=
' → logprob: -17.87653350830078
    9. '＝' → logprob: -17.87653350830078
    10. '=data' → logprob: -18.00153350830078

Token 354: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '	d' → logprob: -20.37520408630371
    4. ' ' → logprob: -22.87520408630371
    5. ')d' → logprob: -22.87520408630371
    6. '```' → logprob: -23.50020408630371
    7. '   ' → logprob: -23.62520408630371
    8. '
' → logprob: -23.62520408630371
    9. '$d' → logprob: -23.87520408630371
    10. '>d' → logprob: -24.00020408630371

Token 355: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.21827545762062073
    2. 'dp' → logprob: -1.7182754278182983
    3. 'dist' → logprob: -5.343275547027588
    4. 'from' → logprob: -5.468275547027588
    5. '   ' → logprob: -6.468275547027588
    6. 'reachable' → logprob: -6.718275547027588
    7. 'def' → logprob: -7.218275547027588
    8. 'distance' → logprob: -7.218275547027588
    9. '#' → logprob: -7.343275547027588
    10. ' visited' → logprob: -8.21827507019043

Token 357: ' from' (ID: 591)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.507927417755127
    2. 'dp' → logprob: -1.132927417755127
    3. 'pos' → logprob: -3.757927417755127
    4. '#' → logprob: -4.007927417755127
    5. 'from' (adapté à ' from') → logprob: -4.382927417755127
    6. 'dist' → logprob: -5.007927417755127
    7. 'position' → logprob: -5.382927417755127
    8. 'distance' → logprob: -6.257927417755127
    9. 'DP' → logprob: -6.882927417755127
    10. 'def' → logprob: -7.007927417755127

Token 358: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00013691288768313825
    2. 'heap' → logprob: -9.500137329101562
    3. ' collections' → logprob: -9.750137329101562
    4. 'queue' → logprob: -12.750137329101562
    5. 'math' → logprob: -14.875137329101562
    6. 'copy' → logprob: -15.625137329101562
    7. 'collection' → logprob: -16.125137329101562
    8. 'bis' → logprob: -16.125137329101562
    9. '_' → logprob: -17.000137329101562
    10. 'sys' → logprob: -17.250137329101562

Token 359: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0007280402351170778
    2. ' import' → logprob: -7.375728130340576
    3. 'from' → logprob: -9.750727653503418
    4. 'port' → logprob: -11.000727653503418
    5. '_import' → logprob: -12.125727653503418
    6. 'collections' → logprob: -13.125727653503418
    7. '.import' → logprob: -13.125727653503418
    8. 'ort' → logprob: -13.250727653503418
    9. '#import' → logprob: -13.375727653503418
    10. '	import' → logprob: -13.500727653503418

Token 360: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -3.5120287066092715e-05
    2. ' deque' → logprob: -10.500035285949707
    3. 'default' → logprob: -12.250035285949707
    4. 'de' → logprob: -13.250035285949707
    5. 'collections' → logprob: -13.875035285949707
    6. ' defaultdict' → logprob: -18.50003433227539
    7. '```' → logprob: -20.37503433227539
    8. 'queue' → logprob: -21.12503433227539
    9. 'named' → logprob: -21.12503433227539
    10. '
' → logprob: -21.25003433227539

Token 361: '

' (ID: 279)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.581559956073761
    2. '   ' → logprob: -0.831559956073761
    3. 'q' → logprob: -6.456560134887695
    4. '    
' → logprob: -6.581560134887695
    5. ' queue' → logprob: -6.956560134887695
    6. 'visited' → logprob: -7.206560134887695
    7. 'dist' → logprob: -8.581560134887695
    8. 'que' → logprob: -8.706560134887695
    9. 'deque' → logprob: -8.956560134887695
    10. '```' → logprob: -9.456560134887695

Token 362: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5142053961753845
    2. 'visited' → logprob: -1.0142054557800293
    3. 'dist' → logprob: -3.5142054557800293
    4. 'q' → logprob: -5.389205455780029
    5. 'Q' → logprob: -6.639205455780029
    6. 'que' → logprob: -6.889205455780029
    7. '   ' → logprob: -7.014205455780029
    8. 'dq' → logprob: -7.389205455780029
    9. 'dp' → logprob: -7.514205455780029
    10. 'deque' → logprob: -8.264204978942871

Token 363: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4391021430492401
    2. 'dist' → logprob: -1.4391021728515625
    3. 'queue' → logprob: -2.4391021728515625
    4. 'q' → logprob: -3.6891021728515625
    5. 'Q' → logprob: -6.6891021728515625
    6. 'dp' → logprob: -6.8141021728515625
    7. 'start' → logprob: -6.8141021728515625
    8. 'que' → logprob: -7.1891021728515625
    9. '   ' → logprob: -7.3141021728515625
    10. 'dq' → logprob: -7.4391021728515625

Token 364: ' State' (ID: 5388)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20864954590797424
    2. 'dist' → logprob: -1.8336495161056519
    3. 'q' → logprob: -4.333649635314941
    4. 'queue' → logprob: -4.958649635314941
    5. '#' → logprob: -6.208649635314941
    6. 'def' → logprob: -6.458649635314941
    7. 'start' → logprob: -6.458649635314941
    8. 'dp' → logprob: -6.958649635314941
    9. 'seen' → logprob: -7.458649635314941
    10. 'dq' → logprob: -7.583649635314941

Token 365: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05059007555246353
    2. '=' → logprob: -3.3005900382995605
    3. 'visited' → logprob: -5.1755900382995605
    4. 'queue' → logprob: -6.4255900382995605
    5. 'class' → logprob: -6.9255900382995605
    6. '_queue' → logprob: -7.0505900382995605
    7. 'deque' → logprob: -7.3005900382995605
    8. 'from' → logprob: -7.4255900382995605
    9. '   ' → logprob: -7.9255900382995605
    10. ' visited' → logprob: -8.050590515136719

Token 366: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1429235935211182
    2. ' (' → logprob: -1.3929235935211182
    3. '(x' → logprob: -1.8929235935211182
    4. 'from' → logprob: -2.517923593521118
    5. 'deque' → logprob: -2.892923593521118
    6. ' x' → logprob: -3.017923593521118
    7. '#' → logprob: -3.642923593521118
    8. 'q' → logprob: -4.392923355102539
    9. 'queue' → logprob: -4.517923355102539
    10. '   ' → logprob: -4.642923355102539

Token 367: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004516515880823135
    2. 'y' → logprob: -5.5045166015625
    3. ' x' → logprob: -8.2545166015625
    4. 'turn' → logprob: -9.6295166015625
    5. ')' → logprob: -10.0045166015625
    6. '   ' → logprob: -11.0045166015625
    7. 'deque' → logprob: -11.6295166015625
    8. ' y' → logprob: -11.8795166015625
    9. 'queue' → logprob: -11.8795166015625
    10. 'q' → logprob: -12.0045166015625

Token 368: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2015145868062973
    2. ',y' → logprob: -1.7015146017074585
    3. ' ,' → logprob: -9.82651424407959
    4. 'y' → logprob: -11.45151424407959
    5. ')' → logprob: -11.95151424407959
    6. ',next' → logprob: -12.20151424407959
    7. ',x' → logprob: -12.57651424407959
    8. ',Y' → logprob: -12.70151424407959
    9. ',
' → logprob: -12.82651424407959
    10. ',pos' → logprob: -13.45151424407959

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14791877567768097
    2. ',i' → logprob: -3.022918701171875
    3. ',d' → logprob: -3.272918701171875
    4. ',n' → logprob: -4.147918701171875
    5. ',t' → logprob: -4.272918701171875
    6. ',state' → logprob: -4.397918701171875
    7. ',N' → logprob: -6.272918701171875
    8. ',T' → logprob: -6.522918701171875
    9. ',index' → logprob: -7.272918701171875
    10. ',pos' → logprob: -7.397918701171875

Token 370: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5119714140892029
    2. 'dir' → logprob: -1.7619714736938477
    3. 't' → logprob: -2.1369714736938477
    4. 'i' → logprob: -2.7619714736938477
    5. 'direction' → logprob: -4.261971473693848
    6. 'd' → logprob: -4.511971473693848
    7. 'idx' → logprob: -4.761971473693848
    8. 'time' → logprob: -6.011971473693848
    9. 'cmd' → logprob: -6.386971473693848
    10. 'pos' → logprob: -6.886971473693848

Token 371: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09774644672870636
    2. 's' → logprob: -2.4727463722229004
    3. ',' → logprob: -5.5977463722229
    4. '_index' → logprob: -6.3477463722229
    5. '_count' → logprob: -6.4727463722229
    6. ')s' → logprob: -7.8477463722229
    7. '+' → logprob: -7.8477463722229
    8. ')_' → logprob: -8.222746849060059
    9. '_idx' → logprob: -8.722746849060059
    10. ')
' → logprob: -9.222746849060059

Token 372: '_used' (ID: 67016)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038528069853782654
    2. '_used' → logprob: -3.7885279655456543
    3. 's' → logprob: -5.163527965545654
    4. ',' → logprob: -5.413527965545654
    5. '_done' → logprob: -5.788527965545654
    6. '_taken' → logprob: -7.288527965545654
    7. '_count' → logprob: -7.538527965545654
    8. '_left' → logprob: -8.538528442382812
    9. 'used' → logprob: -8.788528442382812
    10. 'done' → logprob: -9.413528442382812

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02130211517214775
    2. ',' → logprob: -4.021302223205566
    3. ',state' → logprob: -6.021302223205566
    4. ')
' → logprob: -9.021302223205566
    5. ',current' → logprob: -9.771302223205566
    6. ',n' → logprob: -9.771302223205566
    7. ',x' → logprob: -10.021302223205566
    8. '   ' → logprob: -10.021302223205566
    9. ',user' → logprob: -10.271302223205566
    10. ',)' → logprob: -10.521302223205566

Token 374: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3789566159248352
    2. 'q' → logprob: -1.5039565563201904
    3. '   ' → logprob: -3.1289565563201904
    4. ' queue' → logprob: -3.7539565563201904
    5. 'state' → logprob: -4.7539567947387695
    6. 'visited' → logprob: -5.6289567947387695
    7. 'Q' → logprob: -5.8789567947387695
    8. ')' → logprob: -6.1289567947387695
    9. '(queue' → logprob: -6.2539567947387695
    10. 'dq' → logprob: -6.3789567947387695

Token 375: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.17420931160449982
    2. '   ' → logprob: -2.2992093563079834
    3. 'q' → logprob: -3.1742093563079834
    4. 'visited' → logprob: -5.174209117889404
    5. ' queue' → logprob: -5.549209117889404
    6. 'dist' → logprob: -5.674209117889404
    7. 'dq' → logprob: -6.549209117889404
    8. 'que' → logprob: -6.799209117889404
    9. 'Q' → logprob: -7.049209117889404
    10. 'deque' → logprob: -7.924209117889404

Token 376: ' we' (ID: 581)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4388630986213684
    2. 'dist' → logprob: -1.6888630390167236
    3. 'q' → logprob: -2.1888630390167236
    4. 'queue' → logprob: -3.0638630390167236
    5. 'dq' → logprob: -5.438863277435303
    6. 'start' → logprob: -5.688863277435303
    7. 'que' → logprob: -6.813863277435303
    8. 'Q' → logprob: -7.188863277435303
    9. 'seen' → logprob: -7.313863277435303
    10. 'dp' → logprob: -7.813863277435303

Token 377: ' can' (ID: 665)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.18570102751255035
    2. '=' → logprob: -1.9357010126113892
    3. ' =' → logprob: -4.4357008934021
    4. 'need' → logprob: -5.6857008934021
    5. ' visited' → logprob: -6.5607008934021
    6. 'have' → logprob: -6.6857008934021
    7. ''ll' → logprob: -6.9357008934021
    8. 'visit' → logprob: -6.9357008934021
    9. 'continue' → logprob: -7.0607008934021
    10. 'seen' → logprob: -7.8107008934021

Token 378: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.004862041678279638
    2. 'continue' → logprob: -6.754861831665039
    3. 'use' → logprob: -7.129861831665039
    4. ' move' → logprob: -7.504861831665039
    5. 'only' → logprob: -7.629861831665039
    6. '   ' → logprob: -8.129861831665039
    7. '```' → logprob: -8.504861831665039
    8. 'm' → logprob: -8.629861831665039
    9. 'simulate' → logprob: -8.629861831665039
    10. 'queue' → logprob: -8.754861831665039

Token 379: ' forward' (ID: 6687)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35805946588516235
    2. ' in' → logprob: -1.6080594062805176
    3. '=' → logprob: -3.2330594062805176
    4. ' to' → logprob: -4.233059406280518
    5. 'in' → logprob: -4.483059406280518
    6. 'x' → logprob: -5.108059406280518
    7. ' one' → logprob: -5.358059406280518
    8. 'to' → logprob: -5.733059406280518
    9. 'one' → logprob: -5.983059406280518
    10. '   ' → logprob: -6.608059406280518

Token 380: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9411394596099854
    2. ' or' → logprob: -1.0661394596099854
    3. ',' → logprob: -1.9411394596099854
    4. 'or' → logprob: -3.5661394596099854
    5. '=' → logprob: -4.441139221191406
    6. 'deque' → logprob: -4.691139221191406
    7. ' and' → logprob: -4.941139221191406
    8. 'queue' → logprob: -5.066139221191406
    9. ' =' → logprob: -5.191139221191406
    10. 'visited' → logprob: -5.316139221191406

Token 381: ' using' (ID: 2360)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.024254433810710907
    2. ' turning' → logprob: -4.149254322052002
    3. 'changing' → logprob: -5.399254322052002
    4. 'using' → logprob: -6.024254322052002
    5. ' changing' → logprob: -7.399254322052002
    6. ' using' → logprob: -8.39925479888916
    7. ' turns' → logprob: -9.52425479888916
    8. 'moving' → logprob: -10.14925479888916
    9. 'waiting' → logprob: -10.39925479888916
    10. 'change' → logprob: -10.39925479888916

Token 382: ' turn' (ID: 3716)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06650444120168686
    2. 'turn' → logprob: -2.94150447845459
    3. ' a' → logprob: -4.56650447845459
    4. ' turns' → logprob: -7.31650447845459
    5. 'any' → logprob: -8.19150447845459
    6. '```' → logprob: -10.06650447845459
    7. ' any' → logprob: -10.31650447845459
    8. 'the' → logprob: -10.31650447845459
    9. 'an' → logprob: -10.44150447845459
    10. 'one' → logprob: -11.31650447845459

Token 383: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1865991353988647
    2. '   ' → logprob: -1.5615991353988647
    3. 'used' → logprob: -1.9365991353988647
    4. '_used' → logprob: -2.3115992546081543
    5. 'visited' → logprob: -3.5615992546081543
    6. 'cost' → logprob: -3.8115992546081543
    7. 'count' → logprob: -3.9365992546081543
    8. 'for' → logprob: -4.061599254608154
    9. ')' → logprob: -4.061599254608154
    10. 'commands' → logprob: -4.311599254608154

Token 384: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.026835108175873756
    2. 'dist' → logprob: -3.9018352031707764
    3. '   ' → logprob: -5.401834964752197
    4. 'q' → logprob: -7.776834964752197
    5. 'queue' → logprob: -7.901834964752197
    6. 'seen' → logprob: -7.901834964752197
    7. 'visit' → logprob: -8.526835441589355
    8. ' visited' → logprob: -9.026835441589355
    9. 'dp' → logprob: -9.526835441589355
    10. 'distance' → logprob: -10.026835441589355

Token 385: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.044243086129426956
    2. 'dist' → logprob: -3.294243097305298
    3. '   ' → logprob: -6.169242858886719
    4. 'queue' → logprob: -6.544242858886719
    5. 'q' → logprob: -6.544242858886719
    6. 'seen' → logprob: -7.794242858886719
    7. 'visit' → logprob: -8.669242858886719
    8. '
' → logprob: -8.919242858886719
    9. ' visited' → logprob: -9.669242858886719
    10. 'distance' → logprob: -9.794242858886719

Token 386: ' When' (ID: 4296)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06516953557729721
    2. 'dist' → logprob: -2.8151695728302
    3. 'queue' → logprob: -7.190169334411621
    4. 'q' → logprob: -7.440169334411621
    5. '
' → logprob: -7.690169334411621
    6. 'seen' → logprob: -7.940169334411621
    7. ' visited' → logprob: -8.190169334411621
    8. '   ' → logprob: -8.690169334411621
    9. 'visit' → logprob: -8.815169334411621
    10. '#' → logprob: -9.440169334411621

Token 387: ' we' (ID: 581)
  Prédit: ' turns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -1.7632298469543457
    2. 'turn' → logprob: -2.0132298469543457
    3. ' using' → logprob: -2.0132298469543457
    4. 'using' → logprob: -2.0132298469543457
    5. 'c' → logprob: -2.2632298469543457
    6. ' moving' → logprob: -2.3882298469543457
    7. ' we' → logprob: -2.7632298469543457
    8. ' making' → logprob: -3.0132298469543457
    9. 'we' → logprob: -3.5132298469543457
    10. ' c' → logprob: -4.138229846954346

Token 388: ' want' (ID: 1682)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.7828031778335571
    2. 'can' → logprob: -1.4078031778335571
    3. 'want' → logprob: -2.4078030586242676
    4. ' want' → logprob: -2.6578030586242676
    5. ' use' → logprob: -3.7828030586242676
    6. 'try' → logprob: -3.7828030586242676
    7. 'move' → logprob: -4.157803058624268
    8. ' can' → logprob: -4.282803058624268
    9. 'enc' → logprob: -4.282803058624268
    10. 'find' → logprob: -5.157803058624268

Token 389: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22541746497154236
    2. ' to' → logprob: -1.6004174947738647
    3. '   ' → logprob: -13.850417137145996
    4. '  ' → logprob: -14.350417137145996
    5. '    ' → logprob: -14.600417137145996
    6. ' ' → logprob: -14.975417137145996
    7. '	to' → logprob: -15.100417137145996
    8. '_to' → logprob: -15.225417137145996
    9. 't' → logprob: -15.350417137145996
    10. ',' → logprob: -15.475417137145996

Token 390: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.3128877580165863
    2. 'use' → logprob: -1.4378877878189087
    3. 'change' → logprob: -4.312887668609619
    4. ' turn' → logprob: -4.812887668609619
    5. 'move' → logprob: -5.437887668609619
    6. ' use' → logprob: -5.937887668609619
    7. 'make' → logprob: -7.187887668609619
    8. 'take' → logprob: -7.187887668609619
    9. 'go' → logprob: -7.937887668609619
    10. 'rotate' → logprob: -9.062888145446777

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8960390686988831
    2. 'and' → logprob: -1.1460390090942383
    3. 'or' → logprob: -2.2710390090942383
    4. ' or' → logprob: -2.5210390090942383
    5. 'left' → logprob: -2.7710390090942383
    6. ' and' → logprob: -4.021039009094238
    7. 'to' → logprob: -5.646039009094238
    8. ' left' → logprob: -6.271039009094238
    9. '=' → logprob: -7.146039009094238
    10. '_left' → logprob: -7.271039009094238

Token 392: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.2990274429321289
    2. '#' → logprob: -2.174027442932129
    3. ' if' → logprob: -3.049027442932129
    4. 'we' → logprob: -3.049027442932129
    5. ' #' → logprob: -3.549027442932129
    6. ' use' → logprob: -5.799027442932129
    7. 'if' → logprob: -5.799027442932129
    8. ' dx' → logprob: -6.174027442932129
    9. 'dx' → logprob: -6.424027442932129
    10. ' for' → logprob: -6.424027442932129

Token 393: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.9127171039581299
    2. ' can' → logprob: -1.5377171039581299
    3. ' use' → logprob: -2.03771710395813
    4. ' need' → logprob: -2.28771710395813
    5. 'must' → logprob: -2.78771710395813
    6. 'can' → logprob: -3.53771710395813
    7. 'use' → logprob: -3.78771710395813
    8. 'need' → logprob: -4.037716865539551
    9. ' have' → logprob: -4.662716865539551
    10. ' may' → logprob: -5.912716865539551

Token 394: ' consume' (ID: 34881)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.1615273803472519
    2. ' use' → logprob: -1.911527395248413
    3. 'turn' → logprob: -7.661527156829834
    4. 'pay' → logprob: -8.411527633666992
    5. 'consume' → logprob: -8.911527633666992
    6. ' turn' → logprob: -9.161527633666992
    7. 'increment' → logprob: -9.286527633666992
    8. 'enqueue' → logprob: -9.536527633666992
    9. 'increase' → logprob: -9.661527633666992
    10. 'check' → logprob: -10.786527633666992

Token 395: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5327804684638977
    2. ' a' → logprob: -1.032780408859253
    3. '1' → logprob: -3.282780408859253
    4. ' one' → logprob: -4.282780647277832
    5. 'one' → logprob: -5.407780647277832
    6. ' ' → logprob: -7.532780647277832
    7. 'turn' → logprob: -7.782780647277832
    8. ' the' → logprob: -9.407780647277832
    9. 'the' → logprob: -9.407780647277832
    10. ' turns' → logprob: -10.782780647277832

Token 396: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.11592139303684235
    2. ' turn' → logprob: -2.3659214973449707
    3. 'token' → logprob: -4.240921497344971
    4. ' token' → logprob: -7.365921497344971
    5. 'command' → logprob: -9.615921020507812
    6. 'N' → logprob: -9.990921020507812
    7. '_turn' → logprob: -9.990921020507812
    8. ' ' → logprob: -10.115921020507812
    9. ' command' → logprob: -10.365921020507812
    10. '1' → logprob: -10.365921020507812

Token 397: ' command' (ID: 6348)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18605530261993408
    2. 'visited' → logprob: -1.811055302619934
    3. ',' → logprob: -5.9360551834106445
    4. ' visited' → logprob: -6.5610551834106445
    5. '#' → logprob: -8.061055183410645
    6. 'used' → logprob: -8.061055183410645
    7. 'from' → logprob: -8.436055183410645
    8. ' and' → logprob: -8.561055183410645
    9. ')' → logprob: -8.561055183410645
    10. 'state' → logprob: -8.811055183410645

Token 398: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35601067543029785
    2. 'visited' → logprob: -1.2310106754302979
    3. 'queue' → logprob: -5.481010437011719
    4. 'dist' → logprob: -6.231010437011719
    5. 'q' → logprob: -7.606010437011719
    6. ',' → logprob: -8.231010437011719
    7. ' visited' → logprob: -8.981010437011719
    8. '    
' → logprob: -9.106010437011719
    9. 'seen' → logprob: -9.356010437011719
    10. 'distance' → logprob: -9.606010437011719

Token 399: ' program' (ID: 2193)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.14818963408470154
    2. 'the' → logprob: -2.0231895446777344
    3. 'dir' → logprob: -6.273189544677734
    4. ' program' → logprob: -6.523189544677734
    5. 'N' → logprob: -6.898189544677734
    6. 'range' → logprob: -7.523189544677734
    7. ' the' → logprob: -8.773189544677734
    8. 'input' → logprob: -8.898189544677734
    9. 'deque' → logprob: -9.398189544677734
    10. '0' → logprob: -10.148189544677734

Token 400: ' (' (ID: 350)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.069192074239254
    2. 'dist' → logprob: -2.8191921710968018
    3. '   ' → logprob: -5.569191932678223
    4. 'queue' → logprob: -6.319191932678223
    5. 'distance' → logprob: -7.319191932678223
    6. 'q' → logprob: -8.069191932678223
    7. 'seen' → logprob: -8.444191932678223
    8. 'dp' → logprob: -8.944191932678223
    9. ' visited' → logprob: -9.069191932678223
    10. 'visit' → logprob: -9.694191932678223

Token 401: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006179584306664765
    2. ' )' → logprob: -8.750617980957031
    3. '   ' → logprob: -9.500617980957031
    4. '#' → logprob: -9.750617980957031
    5. ')
' → logprob: -9.875617980957031
    6. '`)' → logprob: -10.250617980957031
    7. '```' → logprob: -10.375617980957031
    8. ' ' → logprob: -10.500617980957031
    9. ' and' → logprob: -11.000617980957031
    10. '`' → logprob: -11.125617980957031

Token 402: ' any' (ID: 1062)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5372710824012756
    2. 'turn' → logprob: -1.0372710227966309
    3. ' turns' → logprob: -3.287271022796631
    4. ' N' → logprob: -3.787271022796631
    5. ' used' → logprob: -8.662271499633789
    6. '   ' → logprob: -9.037271499633789
    7. 'available' → logprob: -9.162271499633789
    8. 'used' → logprob: -9.162271499633789
    9. ' not' → logprob: -9.162271499633789
    10. ' available' → logprob: -9.287271499633789

Token 403: ' left' (ID: 3561)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005981292575597763
    2. '   ' → logprob: -5.3809814453125
    3. ')
' → logprob: -6.6309814453125
    4. ').' → logprob: -10.7559814453125
    5. '),' → logprob: -12.6309814453125
    6. ')
' → logprob: -12.6309814453125
    7. ')

' → logprob: -12.6309814453125
    8. ' )' → logprob: -13.0059814453125
    9. ',' → logprob: -13.2559814453125
    10. '```' → logprob: -14.0059814453125

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007777102291584015
    2. '   ' → logprob: -4.882777214050293
    3. ')
' → logprob: -9.257777214050293
    4. '):' → logprob: -10.757777214050293
    5. ').' → logprob: -10.882777214050293
    6. ',' → logprob: -11.382777214050293
    7. '):
' → logprob: -11.507777214050293
    8. '),' → logprob: -12.132777214050293
    9. ' )' → logprob: -13.382777214050293
    10. '#' → logprob: -13.757777214050293

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1164279505610466
    2. 'visited' → logprob: -2.2414278984069824
    3. 'queue' → logprob: -6.241427898406982
    4. 'dist' → logprob: -7.116427898406982
    5. 'q' → logprob: -7.991427898406982
    6. ')' → logprob: -9.24142837524414
    7. '```' → logprob: -9.49142837524414
    8. '
' → logprob: -9.49142837524414
    9. ' visited' → logprob: -9.86642837524414
    10. 'distance' → logprob: -10.36642837524414

Token 406: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.30902308225631714
    2. '   ' → logprob: -1.809023141860962
    3. 'queue' → logprob: -2.684023141860962
    4. 'dist' → logprob: -3.559023141860962
    5. 'q' → logprob: -5.559022903442383
    6. ' visited' → logprob: -8.309022903442383
    7. '    
' → logprob: -8.309022903442383
    8. '
' → logprob: -8.309022903442383
    9. 'seen' → logprob: -8.684022903442383
    10. 'dp' → logprob: -8.809022903442383

Token 407: ' only' (ID: 1606)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1216193214058876
    2. 'dist' → logprob: -2.87161922454834
    3. 'queue' → logprob: -3.12161922454834
    4. 'q' → logprob: -4.49661922454834
    5. '   ' → logprob: -6.37161922454834
    6. 'seen' → logprob: -8.49661922454834
    7. 'que' → logprob: -8.74661922454834
    8. ' visited' → logprob: -8.99661922454834
    9. 'dq' → logprob: -8.99661922454834
    10. 'start' → logprob: -9.74661922454834

Token 408: ' if' (ID: 538)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.09384528547525406
    2. 'move' → logprob: -4.218845367431641
    3. 'moves' → logprob: -4.343845367431641
    4. 'if' → logprob: -4.968845367431641
    5. ' forward' → logprob: -5.093845367431641
    6. 'allowed' → logprob: -5.218845367431641
    7. 'dx' → logprob: -5.343845367431641
    8. 'moving' → logprob: -5.593845367431641
    9. 'visited' → logprob: -5.843845367431641
    10. 'one' → logprob: -5.968845367431641

Token 409: ' turns' (ID: 18304)
  Prédit: 'maze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maze' → logprob: -0.19320955872535706
    2. ' maze' → logprob: -2.568209648132324
    3. 'x' → logprob: -3.568209648132324
    4. '0' → logprob: -4.193209648132324
    5. 'turn' → logprob: -4.818209648132324
    6. 'dx' → logprob: -4.818209648132324
    7. ' not' → logprob: -5.193209648132324
    8. '(x' → logprob: -5.443209648132324
    9. ' (' → logprob: -5.568209648132324
    10. 'program' → logprob: -5.818209648132324

Token 410: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0024484232999384403
    2. '_left' → logprob: -6.377448558807373
    3. 'used' → logprob: -7.877448558807373
    4. '<' → logprob: -9.377448081970215
    5. '_remaining' → logprob: -9.627448081970215
    6. '_allowed' → logprob: -10.002448081970215
    7. '>' → logprob: -10.127448081970215
    8. 'left' → logprob: -10.877448081970215
    9. '_' → logprob: -11.252448081970215
    10. '_available' → logprob: -11.377448081970215

Token 411: '<N' (ID: 60262)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6419416069984436
    2. '<' → logprob: -0.7669416069984436
    3. '<W' → logprob: -5.516941547393799
    4. '<N' → logprob: -6.016941547393799
    5. '<len' → logprob: -6.516941547393799
    6. '<=' → logprob: -8.016942024230957
    7. '<num' → logprob: -8.266942024230957
    8. ' <=' → logprob: -8.266942024230957
    9. '<n' → logprob: -8.891942024230957
    10. '<w' → logprob: -9.266942024230957

Token 412: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3069661557674408
    2. 'visited' → logprob: -1.5569661855697632
    3. 'queue' → logprob: -3.1819660663604736
    4. 'q' → logprob: -5.556966304779053
    5. 'dist' → logprob: -5.681966304779053
    6. ')' → logprob: -6.431966304779053
    7. ' visited' → logprob: -7.306966304779053
    8. '
' → logprob: -7.931966304779053
    9. 'state' → logprob: -8.056965827941895
    10. 'distance' → logprob: -8.181965827941895

Token 413: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6880651712417603
    2. ':' → logprob: -1.0630651712417603
    3. '   ' → logprob: -3.0630650520324707
    4. 'can' → logprob: -3.3130650520324707
    5. ':
' → logprob: -3.5630650520324707
    6. ' continue' → logprob: -4.563065052032471
    7. '=' → logprob: -4.813065052032471
    8. ' =' → logprob: -5.438065052032471
    9. 'continue' → logprob: -5.563065052032471
    10. '):
' → logprob: -5.813065052032471

Token 414: ' turn' (ID: 3716)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6930646300315857
    2. ' move' → logprob: -1.3180646896362305
    3. 'turn' → logprob: -1.9430646896362305
    4. 'continue' → logprob: -3.5680646896362305
    5. ' turn' → logprob: -3.9430646896362305
    6. 'go' → logprob: -4.1930646896362305
    7. ' continue' → logprob: -4.8180646896362305
    8. 'enqueue' → logprob: -5.4430646896362305
    9. ' go' → logprob: -6.1930646896362305
    10. 'queue' → logprob: -6.5680646896362305

Token 415: ' following' (ID: 3992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028502903878688812
    2. 'visited' → logprob: -3.778502941131592
    3. 'dist' → logprob: -5.528502941131592
    4. 'queue' → logprob: -7.153502941131592
    5. 'q' → logprob: -8.278502464294434
    6. ' visited' → logprob: -9.278502464294434
    7. 'Q' → logprob: -10.653502464294434
    8. 'seen' → logprob: -10.778502464294434
    9. '    
' → logprob: -10.778502464294434
    10. 'distance' → logprob: -10.903502464294434

Token 416: ' that' (ID: 484)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.301152229309082
    2. 'if' → logprob: -2.051152229309082
    3. '   ' → logprob: -2.301152229309082
    4. 'the' → logprob: -2.551152229309082
    5. ' code' → logprob: -2.676152229309082
    6. ' the' → logprob: -2.926152229309082
    7. 'up' → logprob: -2.926152229309082
    8. ' if' → logprob: -3.551152229309082
    9. ' directions' → logprob: -3.801152229309082
    10. 'code' → logprob: -3.801152229309082

Token 417: ' command' (ID: 6348)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.09247870743274689
    2. '   ' → logprob: -2.7174787521362305
    3. 'queue' → logprob: -4.8424787521362305
    4. 'dist' → logprob: -5.0924787521362305
    5. 'q' → logprob: -5.3424787521362305
    6. 'seen' → logprob: -6.5924787521362305
    7. ' visited' → logprob: -6.7174787521362305
    8. 'used' → logprob: -7.9674787521362305
    9. 'Q' → logprob: -8.71747875213623
    10. 'distance' → logprob: -8.84247875213623

Token 418: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0818585753440857
    2. 'visited' → logprob: -2.8318586349487305
    3. 'dist' → logprob: -4.2068586349487305
    4. 'queue' → logprob: -5.7068586349487305
    5. 'q' → logprob: -6.9568586349487305
    6. 'dp' → logprob: -8.70685863494873
    7. ' visited' → logprob: -9.08185863494873
    8. 'seen' → logprob: -9.58185863494873
    9. '```' → logprob: -10.20685863494873
    10. '    
' → logprob: -10.20685863494873

Token 419: ' otherwise' (ID: 10275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3870345652103424
    2. 'visited' → logprob: -2.0120346546173096
    3. ' visited' → logprob: -2.1370346546173096
    4. ' queue' → logprob: -3.0120346546173096
    5. 'queue' → logprob: -4.3870344161987305
    6. ' q' → logprob: -7.0120344161987305
    7. 'q' → logprob: -7.0120344161987305
    8. ' while' → logprob: -7.2620344161987305
    9. '    
' → logprob: -7.3870344161987305
    10. '    ' → logprob: -7.5120344161987305

Token 420: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7307045459747314
    2. '#' → logprob: -0.9807045459747314
    3. ' continue' → logprob: -2.4807045459747314
    4. 'break' → logprob: -3.3557045459747314
    5. ' break' → logprob: -5.355704307556152
    6. ' no' → logprob: -5.355704307556152
    7. ' we' → logprob: -5.980704307556152
    8. 'no' → logprob: -5.980704307556152
    9. 'pass' → logprob: -6.355704307556152
    10. 'we' → logprob: -6.355704307556152

Token 421: ' turn' (ID: 3716)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.36170467734336853
    2. '   ' → logprob: -1.361704707145691
    3. 'dist' → logprob: -3.3617045879364014
    4. 'queue' → logprob: -5.3617048263549805
    5. ' visited' → logprob: -5.4867048263549805
    6. 'q' → logprob: -6.1117048263549805
    7. 'seen' → logprob: -7.7367048263549805
    8. ' dist' → logprob: -8.36170482635498
    9. 'visit' → logprob: -8.48670482635498
    10. '    
' → logprob: -8.98670482635498

Token 422: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02665938064455986
    2. 'visited' → logprob: -3.7766594886779785
    3. 'dist' → logprob: -5.7766594886779785
    4. 'queue' → logprob: -9.52665901184082
    5. '    
' → logprob: -9.77665901184082
    6. ' visited' → logprob: -10.02665901184082
    7. 'seen' → logprob: -10.15165901184082
    8. 'q' → logprob: -10.77665901184082
    9. 'distance' → logprob: -10.77665901184082
    10. '
' → logprob: -11.02665901184082

Token 423: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.31808727979660034
    2. '   ' → logprob: -1.5680873394012451
    3. 'dist' → logprob: -2.943087339401245
    4. 'queue' → logprob: -4.943087100982666
    5. 'q' → logprob: -6.068087100982666
    6. ' visited' → logprob: -7.318087100982666
    7. 'seen' → logprob: -7.693087100982666
    8. 'dp' → logprob: -8.568087577819824
    9. '    
' → logprob: -8.693087577819824
    10. 'distance' → logprob: -9.318087577819824

Token 424: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6183441281318665
    2. '   ' → logprob: -1.2433440685272217
    3. 'dist' → logprob: -2.7433440685272217
    4. 'queue' → logprob: -2.7433440685272217
    5. 'q' → logprob: -3.6183440685272217
    6. 'state' → logprob: -5.493344306945801
    7. ' visited' → logprob: -5.993344306945801
    8. '```' → logprob: -5.993344306945801
    9. 'Q' → logprob: -6.493344306945801
    10. 'que' → logprob: -6.618344306945801

Token 425: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.37535351514816284
    2. '   ' → logprob: -1.7503535747528076
    3. 'dist' → logprob: -2.1253535747528076
    4. 'queue' → logprob: -4.5003533363342285
    5. 'q' → logprob: -5.7503533363342285
    6. ' visited' → logprob: -6.0003533363342285
    7. 'dp' → logprob: -6.6253533363342285
    8. 'seen' → logprob: -7.1253533363342285
    9. 'que' → logprob: -8.500353813171387
    10. '    
' → logprob: -8.625353813171387

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020607752725481987
    2. '=' → logprob: -3.8956077098846436
    3. '=[' → logprob: -9.770607948303223
    4. '=[[' → logprob: -13.020607948303223
    5. '[' → logprob: -13.145607948303223
    6. ' ' → logprob: -13.270607948303223
    7. ' =[' → logprob: -13.895607948303223
    8. '   ' → logprob: -14.145607948303223
    9. '=set' → logprob: -14.395607948303223
    10. '	' → logprob: -15.520607948303223

Token 427: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07944057881832123
    2. 'set' → logprob: -2.5794405937194824
    3. ' [[[' → logprob: -7.579440593719482
    4. '{' → logprob: -10.579440116882324
    5. ' set' → logprob: -11.829440116882324
    6. '[' → logprob: -12.079440116882324
    7. '{}' → logprob: -13.829440116882324
    8. '{{' → logprob: -15.204440116882324
    9. '   ' → logprob: -17.07944107055664
    10. '(set' → logprob: -17.57944107055664

Token 428: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015107649378478527
    2. '[N' → logprob: -4.26510763168335
    3. '[-' → logprob: -7.01510763168335
    4. ' [' → logprob: -10.640108108520508
    5. '[[' → logprob: -11.015108108520508
    6. '[n' → logprob: -13.390108108520508
    7. 'False' → logprob: -13.390108108520508
    8. '[(' → logprob: -14.140108108520508
    9. '{' → logprob: -14.640108108520508
    10. 'set' → logprob: -14.765108108520508

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '(N' → logprob: -12.625004768371582
    3. '(' → logprob: -14.125004768371582
    4. 'N' → logprob: -15.125004768371582
    5. ' ' → logprob: -16.500003814697266
    6. '-' → logprob: -16.500003814697266
    7. '2' → logprob: -17.750003814697266
    8. '10' → logprob: -18.000003814697266
    9. ' (' → logprob: -18.000003814697266
    10. ' -' → logprob: -18.000003814697266

Token 430: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.21815882623195648
    2. ' for' → logprob: -1.9681588411331177
    3. 'for' → logprob: -3.093158721923828
    4. ']' → logprob: -4.718158721923828
    5. '*(' → logprob: -6.718158721923828
    6. ']*' → logprob: -7.593158721923828
    7. '   ' → logprob: -8.968158721923828
    8. ')' → logprob: -9.718158721923828
    9. ')*(' → logprob: -10.843158721923828
    10. ',' → logprob: -11.343158721923828

Token 431: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00022523177904076874
    2. '(W' → logprob: -8.750225067138672
    3. ' W' → logprob: -9.750225067138672
    4. '   ' → logprob: -12.250225067138672
    5. '(' → logprob: -13.375225067138672
    6. ' (' → logprob: -13.500225067138672
    7. ' ' → logprob: -15.625225067138672
    8. '((' → logprob: -15.750225067138672
    9. '           ' → logprob: -16.125225067138672
    10. '    ' → logprob: -16.500225067138672

Token 432: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020565131679177284
    2. 'for' → logprob: -3.8955650329589844
    3. '   ' → logprob: -10.770565032958984
    4. '	for' → logprob: -14.020565032958984
    5. ']' → logprob: -14.270565032958984
    6. ' ' → logprob: -14.895565032958984
    7. ')' → logprob: -15.770565032958984
    8. '       ' → logprob: -16.145565032958984
    9. '    ' → logprob: -16.145565032958984
    10. '  ' → logprob: -16.770565032958984

Token 433: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018598316237330437
    2. '_' → logprob: -4.5185980796813965
    3. ' _' → logprob: -5.3935980796813965
    4. 'range' → logprob: -6.3935980796813965
    5. '_range' → logprob: -6.6435980796813965
    6. ' in' → logprob: -13.893598556518555
    7. '(range' → logprob: -14.768598556518555
    8. '	range' → logprob: -15.893598556518555
    9. '_RANGE' → logprob: -15.893598556518555
    10. '_A' → logprob: -16.518598556518555

Token 434: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47433793544769287
    2. 'range' → logprob: -0.9743379354476929
    3. '_' → logprob: -8.474337577819824
    4. '_range' → logprob: -9.974337577819824
    5. ' in' → logprob: -12.599337577819824
    6. 'in' → logprob: -13.974337577819824
    7. ' _' → logprob: -14.224337577819824
    8. '	range' → logprob: -14.724337577819824
    9. '(range' → logprob: -15.349337577819824
    10. '_in' → logprob: -18.59933853149414

Token 435: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759397745132446
    2. 'range' → logprob: -0.8259397745132446
    3. '_range' → logprob: -14.825940132141113
    4. '_' → logprob: -17.325939178466797
    5. '	range' → logprob: -17.700939178466797
    6. '(range' → logprob: -18.200939178466797
    7. '.range' → logprob: -19.950939178466797
    8. '   ' → logprob: -20.325939178466797
    9. '[' → logprob: -20.825939178466797
    10. ' ' → logprob: -21.075939178466797

Token 436: '(H' (ID: 20904)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5764866471290588
    2. ' range' → logprob: -0.8264866471290588
    3. 'H' → logprob: -7.576486587524414
    4. '(H' → logprob: -10.826486587524414
    5. '(range' → logprob: -11.326486587524414
    6. ' H' → logprob: -13.201486587524414
    7. '   ' → logprob: -14.701486587524414
    8. 'Range' → logprob: -16.201486587524414
    9. ' xrange' → logprob: -16.326486587524414
    10. '_range' → logprob: -16.576486587524414

Token 437: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.38708510994911194
    2. ']' → logprob: -1.1370850801467896
    3. ' ]' → logprob: -9.0120849609375
    4. ')' → logprob: -9.7620849609375
    5. '   ' → logprob: -11.6370849609375
    6. ']
' → logprob: -11.6370849609375
    7. '>]' → logprob: -12.0120849609375
    8. '}]' → logprob: -13.0120849609375
    9. '`]' → logprob: -13.0120849609375
    10. ')]
' → logprob: -13.2620849609375

Token 438: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.583122193813324
    2. 'visited' → logprob: -0.833122193813324
    3. 'deque' → logprob: -5.458122253417969
    4. 'q' → logprob: -6.958122253417969
    5. 'for' → logprob: -7.583122253417969
    6. ' queue' → logprob: -7.958122253417969
    7. 'que' → logprob: -8.208122253417969
    8. 'Q' → logprob: -8.333122253417969
    9. '   ' → logprob: -8.458122253417969
    10. ' visited' → logprob: -9.083122253417969

Token 439: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3825458884239197
    2. 'visited' → logprob: -1.8825459480285645
    3. 'q' → logprob: -2.1325459480285645
    4. 'deque' → logprob: -3.6325459480285645
    5. 'dq' → logprob: -5.0075459480285645
    6. 'from' → logprob: -5.1325459480285645
    7. 'que' → logprob: -5.3825459480285645
    8. 'Q' → logprob: -6.7575459480285645
    9. 'start' → logprob: -7.3825459480285645
    10. 'for' → logprob: -7.7575459480285645

Token 440: ' We'll' (ID: 46830)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8046591877937317
    2. 'queue' → logprob: -1.304659128189087
    3. 'q' → logprob: -1.429659128189087
    4. 'que' → logprob: -3.929659128189087
    5. 'dq' → logprob: -5.429659366607666
    6. 'for' → logprob: -5.429659366607666
    7. 'from' → logprob: -5.554659366607666
    8. 'start' → logprob: -6.179659366607666
    9. 'dist' → logprob: -6.179659366607666
    10. 'Q' → logprob: -6.429659366607666

Token 441: ' track' (ID: 5290)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.266471266746521
    2. 'from' → logprob: -1.766471266746521
    3. 'import' → logprob: -3.6414713859558105
    4. 'deque' → logprob: -4.7664713859558105
    5. ' visited' → logprob: -5.0164713859558105
    6. 'queue' → logprob: -5.0164713859558105
    7. 'for' → logprob: -6.2664713859558105
    8. ' from' → logprob: -6.2664713859558105
    9. 'enqueue' → logprob: -6.2664713859558105
    10. 'q' → logprob: -6.5164713859558105

Token 442: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.23808400332927704
    2. '[[' → logprob: -2.113084077835083
    3. 'deque' → logprob: -2.738084077835083
    4. 'turn' → logprob: -5.113083839416504
    5. '[(' → logprob: -5.113083839416504
    6. 'dist' → logprob: -5.488083839416504
    7. ' visited' → logprob: -6.113083839416504
    8. 'steps' → logprob: -6.613083839416504
    9. 'queue' → logprob: -7.113083839416504
    10. '[' → logprob: -7.363083839416504

Token 443: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027889935299754143
    2. '_states' → logprob: -4.652889728546143
    3. '[' → logprob: -5.527889728546143
    4. 'states' → logprob: -6.027889728546143
    5. '=' → logprob: -6.277889728546143
    6. '=[' → logprob: -6.402889728546143
    7. '3' → logprob: -6.777889728546143
    8. 'for' → logprob: -7.027889728546143
    9. 'visited' → logprob: -7.277889728546143
    10. '_state' → logprob: -7.652889728546143

Token 444: ' (' (ID: 350)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5866187810897827
    2. '[[' → logprob: -2.0866189002990723
    3. 'turn' → logprob: -2.2116189002990723
    4. '[x' → logprob: -2.4616189002990723
    5. 'x' → logprob: -3.4616189002990723
    6. '[' → logprob: -3.9616189002990723
    7. '3' → logprob: -4.461618900299072
    8. '[(' → logprob: -4.586618900299072
    9. '
' → logprob: -5.086618900299072
    10. ' visited' → logprob: -5.336618900299072

Token 445: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4207425117492676
    2. 'visited' → logprob: -1.5457425117492676
    3. 'H' → logprob: -2.2957425117492676
    4. 'turn' → logprob: -2.5457425117492676
    5. '[' → logprob: -2.6707425117492676
    6. '[[' → logprob: -2.9207425117492676
    7. 'lambda' → logprob: -3.1707425117492676
    8. 'y' → logprob: -3.1707425117492676
    9. '(' → logprob: -3.7957425117492676
    10. ')' → logprob: -4.045742511749268

Token 446: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.118576779961586
    2. ',' → logprob: -2.243576765060425
    3. '][' → logprob: -5.743577003479004
    4. ')' → logprob: -7.368577003479004
    5. '[' → logprob: -7.993577003479004
    6. ')[' → logprob: -8.118577003479004
    7. ')][' → logprob: -8.743577003479004
    8. ' ,' → logprob: -8.993577003479004
    9. ',Y' → logprob: -9.118577003479004
    10. ',t' → logprob: -9.118577003479004

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6832793354988098
    2. ',N' → logprob: -1.058279275894165
    3. '[N' → logprob: -2.683279275894165
    4. ')' → logprob: -3.058279275894165
    5. ',[' → logprob: -3.933279275894165
    6. '[' → logprob: -5.558279514312744
    7. '*N' → logprob: -6.058279514312744
    8. 'N' → logprob: -7.308279514312744
    9. ',n' → logprob: -7.558279514312744
    10. '
' → logprob: -7.683279514312744

Token 448: 'turn' (ID: 529)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3157666325569153
    2. 'turn' → logprob: -1.8157665729522705
    3. '[N' → logprob: -3.8157665729522705
    4. 'dir' → logprob: -4.19076681137085
    5. '[' → logprob: -4.19076681137085
    6. 'visited' → logprob: -4.94076681137085
    7. '
' → logprob: -5.06576681137085
    8. ')' → logprob: -5.06576681137085
    9. '0' → logprob: -5.06576681137085
    10. 'lambda' → logprob: -5.31576681137085

Token 449: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2058369368314743
    2. '_used' → logprob: -1.7058368921279907
    3. 'used' → logprob: -5.580836772918701
    4. ')' → logprob: -8.70583724975586
    5. '_s' → logprob: -9.08083724975586
    6. '_taken' → logprob: -9.58083724975586
    7. 'ed' → logprob: -9.70583724975586
    8. '_count' → logprob: -9.95583724975586
    9. ')_' → logprob: -10.70583724975586
    10. '_' → logprob: -10.83083724975586

Token 450: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -9.102680633077398e-05
    2. 'used' → logprob: -9.875090599060059
    3. ')' → logprob: -11.875090599060059
    4. 's' → logprob: -12.125090599060059
    5. ')_' → logprob: -12.125090599060059
    6. '_taken' → logprob: -12.250090599060059
    7. 'Used' → logprob: -12.750090599060059
    8. '   ' → logprob: -13.000090599060059
    9. '_USED' → logprob: -13.250090599060059
    10. '_count' → logprob: -13.250090599060059

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30362141132354736
    2. '=[' → logprob: -2.928621292114258
    3. '=[[' → logprob: -3.053621292114258
    4. ',' → logprob: -3.428621292114258
    5. '[N' → logprob: -3.678621292114258
    6. ' =' → logprob: -4.053621292114258
    7. ']' → logprob: -4.303621292114258
    8. '*N' → logprob: -4.303621292114258
    9. '[' → logprob: -5.178621292114258
    10. ',N' → logprob: -5.303621292114258

Token 452: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.032287199050188065
    2. 'from' → logprob: -4.532287120819092
    3. 'queue' → logprob: -4.657287120819092
    4. '   ' → logprob: -5.282287120819092
    5. ' visited' → logprob: -5.282287120819092
    6. ' from' → logprob: -7.657287120819092
    7. '```' → logprob: -8.65728759765625
    8. ' queue' → logprob: -8.65728759765625
    9. 'import' → logprob: -8.78228759765625
    10. 'deque' → logprob: -9.03228759765625

Token 453: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.13122470676898956
    2. 'from' → logprob: -2.1312246322631836
    3. 'import' → logprob: -7.006224632263184
    4. 'queue' → logprob: -7.131224632263184
    5. 'dist' → logprob: -7.256224632263184
    6. ' visited' → logprob: -7.256224632263184
    7. '   ' → logprob: -8.006224632263184
    8. ' from' → logprob: -8.381224632263184
    9. 'q' → logprob: -8.506224632263184
    10. 'dp' → logprob: -8.881224632263184

Token 454: ' But' (ID: 3072)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02816152572631836
    2. 'from' → logprob: -3.7781615257263184
    3. 'queue' → logprob: -6.528161525726318
    4. '   ' → logprob: -6.653161525726318
    5. ' visited' → logprob: -7.028161525726318
    6. 'dist' → logprob: -7.278161525726318
    7. 'q' → logprob: -8.778162002563477
    8. 'import' → logprob: -8.903162002563477
    9. 'dp' → logprob: -9.778162002563477
    10. 'distance' → logprob: -9.903162002563477

Token 455: ' turns' (ID: 18304)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.017904557287693024
    2. 'from' → logprob: -4.642904758453369
    3. ' visited' → logprob: -5.142904758453369
    4. 'import' → logprob: -6.767904758453369
    5. '#' → logprob: -7.142904758453369
    6. ' from' → logprob: -9.142904281616211
    7. '   ' → logprob: -9.767904281616211
    8. '
' → logprob: -10.267904281616211
    9. 'we' → logprob: -10.267904281616211
    10. '[' → logprob: -10.517904281616211

Token 456: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.007407146506011486
    2. '_' → logprob: -5.132407188415527
    3. 'used' → logprob: -6.757407188415527
    4. '_allowed' → logprob: -9.257407188415527
    5. '_states' → logprob: -9.882407188415527
    6. '_possible' → logprob: -10.132407188415527
    7. ' =' → logprob: -10.507407188415527
    8. 'visited' → logprob: -10.632407188415527
    9. '_taken' → logprob: -11.132407188415527
    10. '_state' → logprob: -11.257407188415527

Token 457: ' up' (ID: 869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14920644462108612
    2. ' =' → logprob: -2.3992063999176025
    3. 'visited' → logprob: -4.274206638336182
    4. 'should' → logprob: -5.024206638336182
    5. ' is' → logprob: -5.774206638336182
    6. '<|end|>' → logprob: -5.774206638336182
    7. 'must' → logprob: -6.024206638336182
    8. 'is' → logprob: -6.274206638336182
    9. 'needs' → logprob: -6.399206638336182
    10. ')' → logprob: -6.399206638336182

Token 458: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.23896779119968414
    2. ' to' → logprob: -1.738967776298523
    3. '=' → logprob: -4.1139678955078125
    4. '_to' → logprob: -4.1139678955078125
    5. ' =' → logprob: -6.2389678955078125
    6. 'To' → logprob: -7.2389678955078125
    7. '```' → logprob: -8.113967895507812
    8. '[' → logprob: -8.613967895507812
    9. '_' → logprob: -8.988967895507812
    10. '>' → logprob: -9.113967895507812

Token 459: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010151614435017109
    2. ' N' → logprob: -4.635151386260986
    3. '10' → logprob: -8.385151863098145
    4. '100' → logprob: -9.635151863098145
    5. ' ' → logprob: -9.760151863098145
    6. '(N' → logprob: -11.635151863098145
    7. '[N' → logprob: -11.760151863098145
    8. ' (' → logprob: -12.010151863098145
    9. '(' → logprob: -12.510151863098145
    10. '=' → logprob: -13.135151863098145

Token 460: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011571277864277363
    2. '100' → logprob: -7.376157283782959
    3. '10' → logprob: -7.626157283782959
    4. ' N' → logprob: -11.0011568069458
    5. '=' → logprob: -11.7511568069458
    6. '(N' → logprob: -12.5011568069458
    7. '(' → logprob: -13.0011568069458
    8. '50' → logprob: -13.2511568069458
    9. '=N' → logprob: -13.2511568069458
    10. '500' → logprob: -13.3761568069458

Token 461: ',' (ID: 11)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.440799355506897
    2. '000' → logprob: -1.440799355506897
    3. '0' → logprob: -2.4407992362976074
    4. ' <<' → logprob: -4.440799236297607
    5. ',' → logprob: -4.690799236297607
    6. '<<<' → logprob: -6.190799236297607
    7. '00' → logprob: -6.315799236297607
    8. '+' → logprob: -6.440799236297607
    9. '<<(' → logprob: -6.440799236297607
    10. '```' → logprob: -7.440799236297607

Token 462: '000' (ID: 1302)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.44135987758636475
    2. '000' → logprob: -1.0663598775863647
    3. '0' → logprob: -5.441359996795654
    4. ' N' → logprob: -5.566359996795654
    5. '10' → logprob: -6.691359996795654
    6. '00' → logprob: -7.191359996795654
    7. ' ' → logprob: -7.941359996795654
    8. '```' → logprob: -8.316359519958496
    9. 'and' → logprob: -8.816359519958496
    10. ' so' → logprob: -9.066359519958496

Token 463: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.06365668773651123
    2. '001' → logprob: -2.938656806945801
    3. 'N' → logprob: -6.438656806945801
    4. '100' → logprob: -6.563656806945801
    5. ' so' → logprob: -6.938656806945801
    6. 'not' → logprob: -7.188656806945801
    7. '```' → logprob: -7.438656806945801
    8. ' not' → logprob: -7.563656806945801
    9. '...' → logprob: -7.563656806945801
    10. ' ' → logprob: -8.1886568069458

Token 465: ' and' (ID: 326)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7552284598350525
    2. 'from' → logprob: -0.8802284598350525
    3. 'import' → logprob: -3.5052285194396973
    4. ',' → logprob: -3.7552285194396973
    5. ' from' → logprob: -4.130228519439697
    6. ' visited' → logprob: -4.130228519439697
    7. '
' → logprob: -4.255228519439697
    8. 'queue' → logprob: -5.130228519439697
    9. '   ' → logprob: -6.880228519439697
    10. '#' → logprob: -7.005228519439697

Token 466: ' maze' (ID: 58295)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.374974012374878
    2. '
' → logprob: -1.749974012374878
    3. 'we' → logprob: -2.249974012374878
    4. 'program' → logprob: -2.374974012374878
    5. 'the' → logprob: -3.374974012374878
    6. ' visited' → logprob: -3.624974012374878
    7. 'deque' → logprob: -3.749974012374878
    8. ' we' → logprob: -3.749974012374878
    9. 'memory' → logprob: -3.999974012374878
    10. 'N' → logprob: -4.124974250793457

Token 467: ' up' (ID: 869)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.148116111755371
    2. ' is' → logprob: -1.648116111755371
    3. ' too' → logprob: -2.398116111755371
    4. 'states' → logprob: -2.898116111755371
    5. ' states' → logprob: -3.148116111755371
    6. ' might' → logprob: -3.273116111755371
    7. '#' → logprob: -3.398116111755371
    8. ' size' → logprob: -3.398116111755371
    9. 'cells' → logprob: -4.148116111755371
    10. ' may' → logprob: -4.148116111755371

Token 468: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.4883562326431274
    2. ' to' → logprob: -1.6133562326431274
    3. '[' → logprob: -1.8633562326431274
    4. '=' → logprob: -2.488356113433838
    5. 'size' → logprob: -2.488356113433838
    6. '   ' → logprob: -3.113356113433838
    7. ']' → logprob: -3.238356113433838
    8. 'H' → logprob: -3.363356113433838
    9. '(H' → logprob: -3.363356113433838
    10. ' =' → logprob: -3.613356113433838

Token 469: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3011186122894287
    2. ' ' → logprob: -2.3011186122894287
    3. 'H' → logprob: -2.5511186122894287
    4. '50' → logprob: -3.8011186122894287
    5. '10' → logprob: -4.051118850708008
    6. '(' → logprob: -4.301118850708008
    7. '(H' → logprob: -5.176118850708008
    8. '20' → logprob: -5.426118850708008
    9. ' H' → logprob: -5.676118850708008
    10. '[' → logprob: -5.926118850708008

Token 470: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6173442602157593
    2. 'H' → logprob: -1.4923442602157593
    3. '(H' → logprob: -2.367344379425049
    4. '(' → logprob: -2.617344379425049
    5. '10' → logprob: -3.367344379425049
    6. '[' → logprob: -4.492344379425049
    7. ' ' → logprob: -4.992344379425049
    8. '50' → logprob: -5.992344379425049
    9. ' (' → logprob: -6.117344379425049
    10. '1' → logprob: -6.492344379425049

Token 471: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2056033611297607
    2. '   ' → logprob: -1.3306033611297607
    3. 'visited' → logprob: -1.4556033611297607
    4. '
' → logprob: -3.0806033611297607
    5. ' =' → logprob: -3.3306033611297607
    6. '[' → logprob: -3.8306033611297607
    7. ' visited' → logprob: -4.20560359954834
    8. '_' → logprob: -4.33060359954834
    9. '```' → logprob: -4.70560359954834
    10. ',
' → logprob: -4.70560359954834

Token 472: 'x' (ID: 87)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5781570672988892
    2. '<|end|>' → logprob: -1.5781570672988892
    3. '][' → logprob: -2.3281569480895996
    4. ',' → logprob: -2.4531569480895996
    5. ')' → logprob: -2.8281569480895996
    6. 'for' → logprob: -2.9531569480895996
    7. 'size' → logprob: -3.2031569480895996
    8. 'import' → logprob: -3.2031569480895996
    9. '[' → logprob: -3.4531569480895996
    10. '000' → logprob: -3.7031569480895996

Token 473: '100' (ID: 1353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.648794949054718
    2. '1' → logprob: -2.1487948894500732
    3. 'N' → logprob: -2.2737948894500732
    4. '100' → logprob: -3.1487948894500732
    5. 'size' → logprob: -3.5237948894500732
    6. '0' → logprob: -3.6487948894500732
    7. '4' → logprob: -3.8987948894500732
    8. '<|end|>' → logprob: -4.023795127868652
    9. 'import' → logprob: -4.523795127868652
    10. 'x' → logprob: -4.773795127868652

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6707288026809692
    2. '000' → logprob: -0.7957288026809692
    3. 'size' → logprob: -4.54572868347168
    4. '   ' → logprob: -4.92072868347168
    5. '_' → logprob: -5.42072868347168
    6. '][' → logprob: -6.17072868347168
    7. '[' → logprob: -6.29572868347168
    8. 'x' → logprob: -6.42072868347168
    9. ',' → logprob: -6.54572868347168
    10. '```' → logprob: -6.54572868347168

Token 475: ' is' (ID: 382)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.910783588886261
    2. ',' → logprob: -1.2857835292816162
    3. '
' → logprob: -1.7857835292816162
    4. '   ' → logprob: -3.160783529281616
    5. ',
' → logprob: -3.410783529281616
    6. 'from' → logprob: -3.410783529281616
    7. ' visited' → logprob: -4.410783767700195
    8. 'import' → logprob: -5.035783767700195
    9. 'queue' → logprob: -5.660783767700195
    10. ' from' → logprob: -6.035783767700195

Token 476: ' too' (ID: 3101)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.304732084274292
    2. 'in' → logprob: -1.804732084274292
    3. 'im' → logprob: -2.554732084274292
    4. ' too' → logprob: -4.929732322692871
    5. 'not' → logprob: -5.304732322692871
    6. 'memory' → logprob: -5.554732322692871
    7. ' infe' → logprob: -5.929732322692871
    8. 'un' → logprob: -7.429732322692871
    9. ' impossible' → logprob: -8.429732322692871
    10. 'pro' → logprob: -8.679732322692871

Token 477: ' big' (ID: 3464)
  Prédit: ' many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' many' → logprob: -1.579060435295105
    2. ' large' → logprob: -1.704060435295105
    3. '
' → logprob: -2.2040605545043945
    4. ' much' → logprob: -2.3290605545043945
    5. ',' → logprob: -3.0790605545043945
    6. '[' → logprob: -3.2040605545043945
    7. 'large' → logprob: -3.3290605545043945
    8. 'for' → logprob: -3.4540605545043945
    9. '    
' → logprob: -3.4540605545043945
    10. '#' → logprob: -3.7040605545043945

Token 478: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1464221477508545
    2. 'visited' → logprob: -1.3964221477508545
    3. ',' → logprob: -1.5214221477508545
    4. 'from' → logprob: -2.1464221477508545
    5. '<|end|>' → logprob: -4.271422386169434
    6. ',
' → logprob: -4.521422386169434
    7. ' visited' → logprob: -4.646422386169434
    8. ' =' → logprob: -4.771422386169434
    9. ' from' → logprob: -4.896422386169434
    10. 'import' → logprob: -4.896422386169434

Token 479: ' ' (ID: 220)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.27276793122291565
    2. 'a' → logprob: -2.147768020629883
    3. 'deque' → logprob: -2.897768020629883
    4. ' a' → logprob: -4.022768020629883
    5. ' visited' → logprob: -4.022768020629883
    6. 'dict' → logprob: -4.147768020629883
    7. '3' → logprob: -5.022768020629883
    8. ' deque' → logprob: -6.397768020629883
    9. '[[' → logprob: -6.647768020629883
    10. '[' → logprob: -6.897768020629883

Token 480: '3' (ID: 18)
  Prédit: 'memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memory' → logprob: -0.061148304492235184
    2. 'visited' → logprob: -3.5611484050750732
    3. 'a' → logprob: -4.436148166656494
    4. ' memory' → logprob: -4.686148166656494
    5. '3' → logprob: -5.186148166656494
    6. 'turn' → logprob: -7.561148166656494
    7. 'space' → logprob: -7.686148166656494
    8. 'time' → logprob: -7.936148166656494
    9. 'queue' → logprob: -8.186148643493652
    10. '#' → logprob: -8.311148643493652

Token 481: 'd' (ID: 67)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.08363059163093567
    2. 'dim' → logprob: -3.0836305618286133
    3. 'd' → logprob: -4.083630561828613
    4. '-dimensional' → logprob: -4.208630561828613
    5. ']' → logprob: -7.958630561828613
    6. '[' → logprob: -8.208630561828613
    7. '-d' → logprob: -8.333630561828613
    8. ' dimensional' → logprob: -8.333630561828613
    9. 'dimension' → logprob: -8.458630561828613
    10. 'dimensions' → logprob: -8.708630561828613

Token 482: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0338761992752552
    2. ' visited' → logprob: -3.9088761806488037
    3. '
' → logprob: -5.158876419067383
    4. 'array' → logprob: -5.908876419067383
    5. 'import' → logprob: -6.533876419067383
    6. ' array' → logprob: -7.283876419067383
    7. ')' → logprob: -7.533876419067383
    8. ',' → logprob: -8.158876419067383
    9. 'dp' → logprob: -8.158876419067383
    10. 'd' → logprob: -8.283876419067383

Token 483: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.23099470138549805
    2. 'from' → logprob: -1.980994701385498
    3. '
' → logprob: -3.230994701385498
    4. ',' → logprob: -4.855994701385498
    5. ' visited' → logprob: -5.105994701385498
    6. ' from' → logprob: -5.355994701385498
    7. 'import' → logprob: -6.105994701385498
    8. '#' → logprob: -6.855994701385498
    9. '```' → logprob: -6.855994701385498
    10. '=' → logprob: -7.355994701385498

Token 484: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7977655529975891
    2. 'visited' → logprob: -1.0477654933929443
    3. 'from' → logprob: -1.7977654933929443
    4. ' queue' → logprob: -4.797765731811523
    5. '
' → logprob: -4.922765731811523
    6. '   ' → logprob: -5.047765731811523
    7. 'q' → logprob: -5.672765731811523
    8. ' visited' → logprob: -6.297765731811523
    9. ' from' → logprob: -6.422765731811523
    10. 'Q' → logprob: -7.172765731811523

Token 485: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7610213756561279
    2. 'visited' → logprob: -1.261021375656128
    3. 'queue' → logprob: -1.761021375656128
    4. '   ' → logprob: -3.136021375656128
    5. 'q' → logprob: -3.636021375656128
    6. 'dist' → logprob: -6.011021614074707
    7. '#' (adapté à ' #') → logprob: -6.386021614074707
    8. ' from' → logprob: -7.136021614074707
    9. ' visited' → logprob: -7.386021614074707
    10. ' queue' → logprob: -7.511021614074707

Token 486: ' Optimize' (ID: 167174)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2651059329509735
    2. 'from' → logprob: -1.640105962753296
    3. '#' → logprob: -3.890105962753296
    4. 'import' → logprob: -4.265105724334717
    5. 'dist' → logprob: -6.390105724334717
    6. ' visited' → logprob: -6.890105724334717
    7. '
' → logprob: -7.140105724334717
    8. 'distance' → logprob: -8.390106201171875
    9. 'queue' → logprob: -8.765106201171875
    10. 'turn' → logprob: -9.015106201171875

Token 487: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4357648193836212
    2. 'visited' → logprob: -1.4357647895812988
    3. 'import' → logprob: -3.310764789581299
    4. ' from' → logprob: -4.185764789581299
    5. '
' → logprob: -4.310764789581299
    6. ' =' → logprob: -4.560764789581299
    7. ' visited' → logprob: -4.685764789581299
    8. '#' → logprob: -4.810764789581299
    9. '   ' → logprob: -4.810764789581299
    10. '=' → logprob: -5.810764789581299

Token 488: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5917928814888
    2. 'from' → logprob: -1.7167928218841553
    3. '   ' → logprob: -2.4667928218841553
    4. 'visited' → logprob: -2.4667928218841553
    5. ' from' → logprob: -3.3417928218841553
    6. ' visited' → logprob: -3.5917928218841553
    7. ' #' → logprob: -3.9667928218841553
    8. 'import' → logprob: -4.716793060302734
    9. '
' → logprob: -6.091793060302734
    10. ' import' → logprob: -7.966793060302734

Token 489: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0467405319213867
    2. '#' (adapté à ' #') → logprob: -1.2967405319213867
    3. ' from' → logprob: -1.9217405319213867
    4. ' visited' → logprob: -2.4217405319213867
    5. 'visited' → logprob: -2.7967405319213867
    6. ' #' → logprob: -3.7967405319213867
    7. 'import' → logprob: -3.9217405319213867
    8. ' dist' → logprob: -4.046740531921387
    9. ' import' → logprob: -5.171740531921387
    10. '
' → logprob: -5.921740531921387

Token 490: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8410982489585876
    2. 'visited' → logprob: -1.0910983085632324
    3. 'from' → logprob: -1.8410983085632324
    4. ' visited' → logprob: -3.4660983085632324
    5. 'import' → logprob: -3.7160983085632324
    6. ' from' → logprob: -5.591098308563232
    7. 'turn' → logprob: -5.966098308563232
    8. '
' → logprob: -5.966098308563232
    9. 'We' → logprob: -6.091098308563232
    10. ' #' → logprob: -6.216098308563232

Token 491: ' facing' (ID: 20511)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.44865715503692627
    2. ' visited' → logprob: -1.4486571550369263
    3. ' next' → logprob: -3.4486570358276367
    4. ' code' → logprob: -3.5736570358276367
    5. '#' → logprob: -4.323657035827637
    6. 'next' → logprob: -5.073657035827637
    7. ' best' → logprob: -5.198657035827637
    8. '
' → logprob: -5.323657035827637
    9. 'code' → logprob: -5.573657035827637
    10. 'best' → logprob: -5.698657035827637

Token 492: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.03986222669482231
    2. ' direction' → logprob: -3.6648621559143066
    3. '_direction' → logprob: -4.914862155914307
    4. 'dire' → logprob: -5.914862155914307
    5. 'dir' → logprob: -6.664862155914307
    6. ' =' → logprob: -6.914862155914307
    7. '=' → logprob: -7.914862155914307
    8. ' directions' → logprob: -8.039862632751465
    9. '#' → logprob: -8.914862632751465
    10. '_dir' → logprob: -9.664862632751465

Token 493: ' at' (ID: 540)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4412626624107361
    2. '#' → logprob: -3.066262722015381
    3. ' will' → logprob: -3.066262722015381
    4. 'visited' → logprob: -3.066262722015381
    5. ' visited' → logprob: -3.191262722015381
    6. ' at' → logprob: -3.566262722015381
    7. 'is' → logprob: -3.566262722015381
    8. ' can' → logprob: -3.691262722015381
    9. ' after' → logprob: -3.816262722015381
    10. 'after' → logprob: -4.691262722015381

Token 494: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.202262043952942
    2. 'each' → logprob: -1.452262043952942
    3. 'any' → logprob: -1.577262043952942
    4. 'state' → logprob: -2.9522619247436523
    5. 'i' → logprob: -3.2022619247436523
    6. 'a' → logprob: -3.4522619247436523
    7. 'position' → logprob: -3.8272619247436523
    8. 'the' → logprob: -3.8272619247436523
    9. ' any' → logprob: -3.9522619247436523
    10. ' each' → logprob: -3.9522619247436523

Token 495: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.012421821244060993
    2. 'used' → logprob: -4.512421607971191
    3. ' =' → logprob: -7.637421607971191
    4. '_after' → logprob: -8.012421607971191
    5. '=' → logprob: -8.887421607971191
    6. '_' → logprob: -9.762421607971191
    7. 's' → logprob: -10.012421607971191
    8. '_allowed' → logprob: -10.512421607971191
    9. '_taken' → logprob: -10.512421607971191
    10. '   ' → logprob: -10.637421607971191

Token 496: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9952749609947205
    2. '=' → logprob: -1.3702750205993652
    3. '_mod' → logprob: -2.2452750205993652
    4. ' is' → logprob: -2.8702750205993652
    5. ']' → logprob: -3.1202750205993652
    6. 'mod' → logprob: -3.3702750205993652
    7. 'is' → logprob: -4.495275020599365
    8. '][' → logprob: -4.620275020599365
    9. ' modulo' → logprob: -4.745275020599365
    10. ',' → logprob: -4.870275020599365

Token 497: ' fixed' (ID: 13213)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.112941674888134
    2. ' dir' → logprob: -2.2379417419433594
    3. 'already' → logprob: -10.61294174194336
    4. 'known' → logprob: -10.98794174194336
    5. '(dir' → logprob: -11.11294174194336
    6. '	dir' → logprob: -11.23794174194336
    7. 'given' → logprob: -11.98794174194336
    8. 'always' → logprob: -11.98794174194336
    9. ' known' → logprob: -11.98794174194336
    10. 'stored' → logprob: -12.11294174194336

Token 498: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016227087005972862
    2. '
' → logprob: -4.7662272453308105
    3. ',' → logprob: -6.2662272453308105
    4. 'visited' → logprob: -6.2662272453308105
    5. '<|end|>' → logprob: -7.0162272453308105
    6. ')' → logprob: -7.2662272453308105
    7. '    
' → logprob: -7.6412272453308105
    8. ' =' → logprob: -8.266226768493652
    9. '  ' → logprob: -8.891226768493652
    10. '.' → logprob: -9.016226768493652

Token 499: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.024692300707101822
    2. ' dir' → logprob: -3.7746922969818115
    3. 'the' → logprob: -7.274692535400391
    4. ' the' → logprob: -8.64969253540039
    5. 'program' → logprob: -8.77469253540039
    6. 'direction' → logprob: -8.89969253540039
    7. '#' → logprob: -9.27469253540039
    8. '   ' → logprob: -9.52469253540039
    9. '	dir' → logprob: -11.02469253540039
    10. '`' → logprob: -11.02469253540039

Token 500: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -3.5120287066092715e-05
    2. 'After' → logprob: -11.125035285949707
    3. 'after' → logprob: -12.125035285949707
    4. '_' → logprob: -12.250035285949707
    5. '_used' → logprob: -12.500035285949707
    6. '_before' → logprob: -13.250035285949707
    7. '_direction' → logprob: -14.125035285949707
    8. '_for' → logprob: -14.750035285949707
    9. '_of' → logprob: -15.125035285949707
    10. '_from' → logprob: -15.125035285949707

Token 501: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.00018280261429026723
    2. 'turn' → logprob: -8.62518310546875
    3. '_' → logprob: -14.25018310546875
    4. '```' → logprob: -14.50018310546875
    5. '_used' → logprob: -14.62518310546875
    6. '[' → logprob: -14.62518310546875
    7. 'Turn' → logprob: -15.25018310546875
    8. '_use' → logprob: -16.25018310546875
    9. '_t' → logprob: -16.25018310546875
    10. '[_' → logprob: -16.37518310546875

Token 502: '[' (ID: 58)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1744242161512375
    2. '
' → logprob: -2.799424171447754
    3. '   ' → logprob: -2.799424171447754
    4. ' visited' → logprob: -4.049424171447754
    5. 'from' → logprob: -4.424424171447754
    6. ',' → logprob: -6.299424171447754
    7. ' from' → logprob: -6.674424171447754
    8. 'dist' → logprob: -6.799424171447754
    9. '#' → logprob: -7.299424171447754
    10. 'distance' → logprob: -7.549424171447754

Token 503: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0003799104888457805
    2. ']' → logprob: -8.50037956237793
    3. ' turns' → logprob: -8.75037956237793
    4. '```' → logprob: -11.62537956237793
    5. '   ' → logprob: -12.62537956237793
    6. '(turn' → logprob: -13.37537956237793
    7. ' ' → logprob: -13.87537956237793
    8. '_turn' → logprob: -14.12537956237793
    9. 'turned' → logprob: -15.00037956237793
    10. '][' → logprob: -15.25037956237793

Token 504: 's' (ID: 82)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.25222453474998474
    2. 's' → logprob: -1.5022245645523071
    3. 'used' → logprob: -8.252224922180176
    4. '_use' → logprob: -11.752224922180176
    5. '_' → logprob: -11.877224922180176
    6. ']' → logprob: -12.127224922180176
    7. ']_' → logprob: -12.627224922180176
    8. 'Used' → logprob: -13.252224922180176
    9. '   ' → logprob: -13.377224922180176
    10. '_s' → logprob: -13.627224922180176

Token 505: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0003693013568408787
    2. 'used' → logprob: -8.00036907196045
    3. ']' → logprob: -11.12536907196045
    4. 'ed' → logprob: -11.50036907196045
    5. 'Used' → logprob: -12.50036907196045
    6. 'urn' → logprob: -13.75036907196045
    7. 's' → logprob: -14.12536907196045
    8. '   ' → logprob: -14.37536907196045
    9. ']_' → logprob: -14.50036907196045
    10. '_out' → logprob: -14.75036907196045

Token 506: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6714271903038025
    2. ']
' → logprob: -0.7964271903038025
    3. '],' → logprob: -3.7964272499084473
    4. ']

' → logprob: -4.671427249908447
    5. '].' → logprob: -6.546427249908447
    6. '].
' → logprob: -6.921427249908447
    7. '][' → logprob: -7.421427249908447
    8. ']
' → logprob: -7.671427249908447
    9. ' ]
' → logprob: -7.796427249908447
    10. '],
' → logprob: -7.921427249908447

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3635880947113037
    2. 'visited' → logprob: -1.8635880947113037
    3. 'queue' → logprob: -2.6135880947113037
    4. 'from' → logprob: -2.7385880947113037
    5. ' from' → logprob: -5.488588333129883
    6. ' queue' → logprob: -6.113588333129883
    7. ' visited' → logprob: -6.363588333129883
    8. 'q' → logprob: -6.488588333129883
    9. '
' → logprob: -7.988588333129883
    10. 'dist' → logprob: -8.238588333129883

Token 508: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7524328231811523
    2. 'visited' → logprob: -0.7524328231811523
    3. 'queue' → logprob: -3.3774328231811523
    4. 'from' → logprob: -4.627432823181152
    5. 'dist' → logprob: -5.627432823181152
    6. ' visited' → logprob: -5.752432823181152
    7. 'q' → logprob: -6.252432823181152
    8. '
' → logprob: -6.627432823181152
    9. ' queue' → logprob: -6.752432823181152
    10. 'distance' → logprob: -7.627432823181152

Token 509: ' Since' (ID: 12265)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5448281764984131
    2. 'visited' → logprob: -1.544828176498413
    3. 'queue' → logprob: -1.919828176498413
    4. 'dist' → logprob: -3.544828176498413
    5. 'q' → logprob: -4.169828414916992
    6. '#' → logprob: -5.044828414916992
    7. 'import' → logprob: -5.669828414916992
    8. 'que' → logprob: -6.169828414916992
    9. '   ' → logprob: -6.669828414916992
    10. 'deque' → logprob: -6.794828414916992

Token 510: ' only' (ID: 1606)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.613858938217163
    2. 'f' → logprob: -1.738858938217163
    3. ' the' → logprob: -1.863858938217163
    4. 'we' → logprob: -2.363858938217163
    5. ' direction' → logprob: -3.113858938217163
    6. 'direction' → logprob: -3.238858938217163
    7. 'visited' → logprob: -3.363858938217163
    8. ' visited' → logprob: -3.488858938217163
    9. ' facing' → logprob: -3.738858938217163
    10. ' we' → logprob: -3.738858938217163

Token 511: ' turn' (ID: 3716)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4089497327804565
    2. 'direction' → logprob: -1.5339497327804565
    3. 'f' → logprob: -1.6589497327804565
    4. 'position' → logprob: -2.658949851989746
    5. 'turn' → logprob: -3.033949851989746
    6. 'one' → logprob: -3.283949851989746
    7. '(x' → logprob: -3.533949851989746
    8. 'visited' → logprob: -3.533949851989746
    9. 'dx' → logprob: -4.033949851989746
    10. ' the' → logprob: -4.158949851989746

Token 512: '_allowed' (ID: 104427)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.6657975316047668
    2. 's' → logprob: -0.7907975316047668
    3. 'used' → logprob: -4.290797710418701
    4. 'ed' → logprob: -4.915797710418701
    5. 'ing' → logprob: -5.790797710418701
    6. '_' → logprob: -6.040797710418701
    7. '   ' → logprob: -6.415797710418701
    8. ' ' → logprob: -7.415797710418701
    9. 'visited' → logprob: -7.790797710418701
    10. 'count' → logprob: -7.915797710418701

Token 513: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8350597023963928
    2. '_used' → logprob: -2.085059642791748
    3. ' =' → logprob: -2.335059642791748
    4. '=' → logprob: -2.335059642791748
    5. '_allowed' → logprob: -2.710059642791748
    6. 'ed' → logprob: -3.460059642791748
    7. ',' → logprob: -4.210059642791748
    8. ' is' → logprob: -4.335059642791748
    9. ' at' → logprob: -4.585059642791748
    10. 'allowed' → logprob: -4.835059642791748

Token 514: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.601693868637085
    2. 'program' → logprob: -1.726693868637085
    3. 'forward' → logprob: -2.351693868637085
    4. 'one' → logprob: -2.351693868637085
    5. 'turn' → logprob: -2.726693868637085
    6. 'direction' → logprob: -2.726693868637085
    7. 'place' → logprob: -3.476693868637085
    8. 'front' → logprob: -3.601693868637085
    9. 'a' → logprob: -3.726693868637085
    10. 'dire' → logprob: -3.726693868637085

Token 515: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8048830628395081
    2. 'visited' → logprob: -1.9298830032348633
    3. ',' → logprob: -2.0548830032348633
    4. ')' → logprob: -2.1798830032348633
    5. '<|end|>' → logprob: -3.0548830032348633
    6. '   ' → logprob: -3.1798830032348633
    7. ']' → logprob: -3.5548830032348633
    8. ',
' → logprob: -4.554883003234863
    9. '<|end|>' → logprob: -4.929883003234863
    10. ' visited' → logprob: -4.929883003234863

Token 516: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5517144203186035
    2. 'visited' → logprob: -1.5517144203186035
    3. '   ' → logprob: -2.3017144203186035
    4. ' visited' → logprob: -3.9267144203186035
    5. 'distance' → logprob: -4.1767144203186035
    6. ' #' → logprob: -4.3017144203186035
    7. 'from' → logprob: -4.3017144203186035
    8. 'queue' → logprob: -4.4267144203186035
    9. ' we' → logprob: -4.9267144203186035
    10. 'we' → logprob: -5.1767144203186035

Token 517: ' facing' (ID: 20511)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9427546262741089
    2. '#' → logprob: -1.9427546262741089
    3. 'state' → logprob: -2.1927547454833984
    4. ' next' → logprob: -2.4427547454833984
    5. 'next' → logprob: -3.0677547454833984
    6. ' visited' → logprob: -3.4427547454833984
    7. 'queue' → logprob: -3.5677547454833984
    8. ' state' → logprob: -4.317754745483398
    9. 'direction' → logprob: -4.567754745483398
    10. ' queue' → logprob: -4.692754745483398

Token 518: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.10061433911323547
    2. ' direction' → logprob: -2.600614309310913
    3. '_direction' → logprob: -3.975614309310913
    4. 'dire' → logprob: -6.850614547729492
    5. ' directions' → logprob: -7.975614547729492
    6. 'dir' → logprob: -8.600614547729492
    7. '-direction' → logprob: -8.850614547729492
    8. '   ' → logprob: -8.975614547729492
    9. ' =' → logprob: -9.100614547729492
    10. '=' → logprob: -9.100614547729492

Token 519: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8639960885047913
    2. ' at' → logprob: -2.1139960289001465
    3. ' depends' → logprob: -2.3639960289001465
    4. ' can' → logprob: -2.7389960289001465
    5. ' changes' → logprob: -2.7389960289001465
    6. 'depends' → logprob: -2.9889960289001465
    7. 'is' → logprob: -3.2389960289001465
    8. '   ' → logprob: -4.1139960289001465
    9. ' determines' → logprob: -4.3639960289001465
    10. 'can' → logprob: -4.4889960289001465

Token 520: ' function' (ID: 1114)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.33024951815605164
    2. 'determ' → logprob: -1.830249547958374
    3. 'uni' → logprob: -3.455249547958374
    4. ' determined' → logprob: -4.205249309539795
    5. 'det' → logprob: -4.330249309539795
    6. ' dir' → logprob: -4.455249309539795
    7. ' uniquely' → logprob: -4.455249309539795
    8. 'fixed' → logprob: -4.705249309539795
    9. 'dict' → logprob: -5.205249309539795
    10. 'implicitly' → logprob: -5.455249309539795

Token 521: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19905714690685272
    2. 'of' → logprob: -1.8240571022033691
    3. '_of' → logprob: -5.199057102203369
    4. ')' → logprob: -5.949057102203369
    5. '   ' → logprob: -5.949057102203369
    6. '=' → logprob: -6.574057102203369
    7. '[' → logprob: -6.699057102203369
    8. '(' → logprob: -7.074057102203369
    9. 'def' → logprob: -7.574057102203369
    10. ' =' → logprob: -7.699057102203369

Token 522: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.6966500282287598
    2. ' turns' → logprob: -0.6966500282287598
    3. ' the' → logprob: -6.44665002822876
    4. 'the' → logprob: -6.94665002822876
    5. ' turn' → logprob: -8.196649551391602
    6. 'visited' → logprob: -8.446649551391602
    7. ' visited' → logprob: -8.446649551391602
    8. '```' → logprob: -9.446649551391602
    9. '#' → logprob: -10.196649551391602
    10. '_turn' → logprob: -10.696649551391602

Token 523: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.057029858231544495
    2. 'used' → logprob: -3.432029962539673
    3. '   ' → logprob: -4.182029724121094
    4. '_' → logprob: -5.432029724121094
    5. '_allowed' → logprob: -6.932029724121094
    6. 's' → logprob: -7.057029724121094
    7. 'visited' → logprob: -7.682029724121094
    8. '#' → logprob: -8.432029724121094
    9. 'ed' → logprob: -8.557029724121094
    10. 'allowed' → logprob: -9.682029724121094

Token 524: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010105467401444912
    2. 'queue' → logprob: -5.260105609893799
    3. 'visited' → logprob: -6.635105609893799
    4. 'from' → logprob: -7.010105609893799
    5. ' queue' → logprob: -7.260105609893799
    6. 'dist' → logprob: -7.760105609893799
    7. '
' → logprob: -8.13510513305664
    8. ')' → logprob: -8.13510513305664
    9. 'q' → logprob: -8.26010513305664
    10. 'distance' → logprob: -8.51010513305664

Token 525: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6076902747154236
    2. '   ' → logprob: -1.2326903343200684
    3. 'from' → logprob: -1.9826903343200684
    4. 'queue' → logprob: -4.232690334320068
    5. 'dist' → logprob: -5.607690334320068
    6. ' visited' → logprob: -5.857690334320068
    7. ' from' → logprob: -6.357690334320068
    8. 'import' → logprob: -6.732690334320068
    9. 'q' → logprob: -7.357690334320068
    10. 'dp' → logprob: -8.48268985748291

Token 526: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5969616174697876
    2. 'from' → logprob: -1.2219616174697876
    3. 'queue' → logprob: -2.971961498260498
    4. 'dist' → logprob: -2.971961498260498
    5. '   ' → logprob: -3.221961498260498
    6. 'q' → logprob: -4.721961498260498
    7. 'import' → logprob: -6.971961498260498
    8. 'que' → logprob: -7.846961498260498
    9. 'distance' → logprob: -7.846961498260498
    10. 'deque' → logprob: -8.096961975097656

Token 527: ' The' (ID: 623)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.029839009046554565
    2. 'from' → logprob: -3.654839038848877
    3. '#' → logprob: -6.654839038848877
    4. 'import' → logprob: -6.904839038848877
    5. 'dist' → logprob: -7.779839038848877
    6. 'queue' → logprob: -8.154838562011719
    7. 'q' → logprob: -9.154838562011719
    8. '   ' → logprob: -9.654838562011719
    9. '
' → logprob: -9.779838562011719
    10. 'dp' → logprob: -9.779838562011719

Token 528: ' state' (ID: 2608)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8917052149772644
    2. 'from' → logprob: -1.2667052745819092
    3. '#' → logprob: -1.3917052745819092
    4. 'import' → logprob: -3.766705274581909
    5. 'queue' → logprob: -4.51670503616333
    6. 'dist' → logprob: -5.26670503616333
    7. '
' → logprob: -5.89170503616333
    8. 'turn' → logprob: -6.14170503616333
    9. 'remaining' → logprob: -6.14170503616333
    10. 'distance' → logprob: -6.26670503616333

Token 529: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21654129028320312
    2. ',' → logprob: -2.966541290283203
    3. 's' → logprob: -2.966541290283203
    4. 'visited' → logprob: -3.466541290283203
    5. ' is' → logprob: -3.966541290283203
    6. '=' → logprob: -4.466541290283203
    7. '   ' → logprob: -4.591541290283203
    8. ' visited' → logprob: -5.591541290283203
    9. '_' → logprob: -6.216541290283203
    10. ')' → logprob: -6.466541290283203

Token 530: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.045363061130046844
    2. 'be' → logprob: -3.670362949371338
    3. ' not' → logprob: -5.170362949371338
    4. ' only' → logprob: -5.295362949371338
    5. ' =' → logprob: -5.420362949371338
    6. 'not' → logprob: -6.795362949371338
    7. 'only' → logprob: -7.170362949371338
    8. ' continue' → logprob: -8.295363426208496
    9. '=' → logprob: -8.295363426208496
    10. 'n't' → logprob: -8.545363426208496

Token 531: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.18480341136455536
    2. 'represented' → logprob: -2.3098034858703613
    3. ' represented' → logprob: -3.6848034858703613
    4. '(' → logprob: -4.934803485870361
    5. ' (' → logprob: -4.934803485870361
    6. 'expanded' → logprob: -5.434803485870361
    7. 'defined' → logprob: -5.809803485870361
    8. 'encoded' → logprob: -5.809803485870361
    9. 'visited' → logprob: -5.934803485870361
    10. 'seen' → logprob: -6.309803485870361

Token 532: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007174347410909832
    2. ' x' → logprob: -7.250717639923096
    3. ')' → logprob: -12.875717163085938
    4. ')x' → logprob: -13.125717163085938
    5. '   ' → logprob: -13.875717163085938
    6. '
' → logprob: -13.875717163085938
    7. '(x' → logprob: -15.000717163085938
    8. ',' → logprob: -16.250717163085938
    9. '{x' → logprob: -16.625717163085938
    10. '	x' → logprob: -16.750717163085938

Token 533: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.055522918701171875
    2. ',' → logprob: -2.930522918701172
    3. ' ,' → logprob: -8.305522918701172
    4. ',t' → logprob: -9.430522918701172
    5. ',Y' → logprob: -9.805522918701172
    6. ',x' → logprob: -10.055522918701172
    7. ',n' → logprob: -10.055522918701172
    8. '   ' → logprob: -10.305522918701172
    9. ')' → logprob: -10.555522918701172
    10. ',num' → logprob: -11.055522918701172

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019971546716988087
    2. ')' → logprob: -7.251996994018555
    3. ',N' → logprob: -8.001996994018555
    4. ',t' → logprob: -8.126996994018555
    5. ',
' → logprob: -8.251996994018555
    6. ' ,' → logprob: -9.501996994018555
    7. ',(' → logprob: -10.001996994018555
    8. ',n' → logprob: -10.376996994018555
    9. ',)' → logprob: -10.626996994018555
    10. ',int' → logprob: -10.626996994018555

Token 535: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.633219838142395
    2. ' turns' → logprob: -0.758219838142395
    3. ')' → logprob: -8.883219718933105
    4. '   ' → logprob: -9.133219718933105
    5. 't' → logprob: -9.758219718933105
    6. '
' → logprob: -9.758219718933105
    7. ' turn' → logprob: -10.383219718933105
    8. 'Turns' → logprob: -10.383219718933105
    9. '```' → logprob: -10.633219718933105
    10. 'turned' → logprob: -10.633219718933105

Token 536: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009206312242895365
    2. '_used' → logprob: -7.00092077255249
    3. 'used' → logprob: -12.125920295715332
    4. ' s' → logprob: -13.375920295715332
    5. 'ed' → logprob: -14.500920295715332
    6. '_s' → logprob: -14.625920295715332
    7. '```' → logprob: -15.000920295715332
    8. '   ' → logprob: -15.375920295715332
    9. ')' → logprob: -16.12592124938965
    10. '
' → logprob: -16.25092124938965

Token 537: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -9.627176768844947e-05
    2. 'used' → logprob: -9.375096321105957
    3. '   ' → logprob: -12.250096321105957
    4. '_allowed' → logprob: -13.375096321105957
    5. '_taken' → logprob: -13.500096321105957
    6. ')' → logprob: -13.625096321105957
    7. 'Used' → logprob: -14.375096321105957
    8. '```' → logprob: -14.500096321105957
    9. '_done' → logprob: -15.375096321105957
    10. '_USED' → logprob: -15.625096321105957

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022016296163201332
    2. ',' → logprob: -4.022016525268555
    3. ')
' → logprob: -5.772016525268555
    4. '   ' → logprob: -8.147016525268555
    5. ' )' → logprob: -9.522016525268555
    6. ',
' → logprob: -9.772016525268555
    7. '),' → logprob: -9.772016525268555
    8. ',)' → logprob: -10.147016525268555
    9. 'import' → logprob: -10.647016525268555
    10. ',state' → logprob: -10.897016525268555

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6634436845779419
    2. 'from' → logprob: -1.413443684577942
    3. 'queue' → logprob: -1.788443684577942
    4. 'dist' → logprob: -3.2884435653686523
    5. 'visited' → logprob: -3.4134435653686523
    6. ' from' → logprob: -7.163443565368652
    7. 'q' → logprob: -7.413443565368652
    8. 'import' → logprob: -7.663443565368652
    9. 'deque' → logprob: -8.038443565368652
    10. 'distance' → logprob: -8.163443565368652

Token 540: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42745575308799744
    2. 'dist' → logprob: -1.3024557828903198
    3. '   ' → logprob: -3.1774556636810303
    4. 'visited' → logprob: -4.052455902099609
    5. 'import' → logprob: -4.927455902099609
    6. 'distance' → logprob: -5.302455902099609
    7. ' from' → logprob: -6.552455902099609
    8. ' dist' → logprob: -6.927455902099609
    9. 'queue' → logprob: -6.927455902099609
    10. 'dp' → logprob: -7.552455902099609

Token 541: ' We'll' (ID: 46830)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.48027303814888
    2. 'from' → logprob: -1.3552730083465576
    3. 'dist' → logprob: -2.2302730083465576
    4. 'queue' → logprob: -4.730273246765137
    5. 'q' → logprob: -5.980273246765137
    6. 'import' → logprob: -6.605273246765137
    7. 'distance' → logprob: -6.730273246765137
    8. '   ' → logprob: -7.105273246765137
    9. 'dp' → logprob: -7.855273246765137
    10. 'que' → logprob: -8.230273246765137

Token 542: ' keep' (ID: 3357)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.24053815007209778
    2. 'from' → logprob: -2.4905381202697754
    3. 'import' → logprob: -2.6155381202697754
    4. 'change' → logprob: -4.740538120269775
    5. ' use' → logprob: -4.865538120269775
    6. 'need' → logprob: -4.865538120269775
    7. 'implement' → logprob: -4.990538120269775
    8. 'simulate' → logprob: -4.990538120269775
    9. 'initialize' → logprob: -5.490538120269775
    10. 'continue' → logprob: -5.865538120269775

Token 543: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12011843919754028
    2. 'a' → logprob: -2.6201183795928955
    3. ' a' → logprob: -4.245118618011475
    4. 'from' → logprob: -4.620118618011475
    5. ' visited' → logprob: -4.745118618011475
    6. 'deque' → logprob: -5.995118618011475
    7. 'queue' → logprob: -6.370118618011475
    8. 'dist' → logprob: -6.995118618011475
    9. 'import' → logprob: -7.870118618011475
    10. '   ' → logprob: -7.870118618011475

Token 544: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5865325331687927
    2. ' =' → logprob: -0.8365325331687927
    3. '_states' → logprob: -5.4615325927734375
    4. '=[' → logprob: -5.5865325927734375
    5. 'states' → logprob: -6.7115325927734375
    6. '=[[' → logprob: -7.9615325927734375
    7. 'by' → logprob: -8.711532592773438
    8. 'for' → logprob: -9.586532592773438
    9. 'from' → logprob: -9.836532592773438
    10. 'levels' → logprob: -9.836532592773438

Token 545: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5832611322402954
    2. ' [' → logprob: -1.7082611322402954
    3. '[[' → logprob: -2.083261013031006
    4. '{' → logprob: -3.583261013031006
    5. 'dict' → logprob: -3.708261013031006
    6. ' [[' → logprob: -3.833261013031006
    7. '[{' → logprob: -4.458261013031006
    8. '{}' → logprob: -4.458261013031006
    9. ' [{}' → logprob: -4.458261013031006
    10. ' dict' → logprob: -4.958261013031006

Token 546: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.3057364821434021
    2. 'list' → logprob: -1.8057365417480469
    3. 'deque' → logprob: -2.930736541748047
    4. '[[' → logprob: -4.055736541748047
    5. '[' → logprob: -4.430736541748047
    6. 'default' → logprob: -4.930736541748047
    7. 'dictionary' → logprob: -5.805736541748047
    8. '{' → logprob: -6.180736541748047
    9. 'set' → logprob: -6.805736541748047
    10. '2' → logprob: -6.930736541748047

Token 547: ' {(' (ID: 75216)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.24363744258880615
    2. ' =' → logprob: -2.1186375617980957
    3. '
' → logprob: -2.7436375617980957
    4. '   ' → logprob: -4.368637561798096
    5. ' visited' → logprob: -4.368637561798096
    6. ',' → logprob: -6.868637561798096
    7. '=' → logprob: -6.868637561798096
    8. 'from' → logprob: -6.993637561798096
    9. 'import' → logprob: -6.993637561798096
    10. ')' → logprob: -7.743637561798096

Token 548: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033027164172381163
    2. '(x' → logprob: -5.753302574157715
    3. ' (' → logprob: -9.628302574157715
    4. ' x' → logprob: -10.253302574157715
    5. ')x' → logprob: -12.003302574157715
    6. ')' → logprob: -12.253302574157715
    7. '(' → logprob: -12.253302574157715
    8. ',x' → logprob: -13.003302574157715
    9. '
' → logprob: -13.378302574157715
    10. '"x' → logprob: -14.003302574157715

Token 549: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.008810034953057766
    2. ',' → logprob: -4.758810043334961
    3. ',x' → logprob: -9.258810043334961
    4. '(' → logprob: -10.383810043334961
    5. ' ,' → logprob: -10.383810043334961
    6. 'x' → logprob: -11.758810043334961
    7. 'y' → logprob: -12.008810043334961
    8. ',
' → logprob: -12.758810043334961
    9. '(x' → logprob: -13.008810043334961
    10. '<|end|>' → logprob: -13.133810043334961

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00432876031845808
    2. ',t' → logprob: -6.254328727722168
    3. ',N' → logprob: -6.504328727722168
    4. ',d' → logprob: -7.754328727722168
    5. ',n' → logprob: -8.879328727722168
    6. ',w' → logprob: -9.879328727722168
    7. ',int' → logprob: -10.004328727722168
    8. ',i' → logprob: -10.504328727722168
    9. '),' → logprob: -10.629328727722168
    10. ' ,' → logprob: -10.754328727722168

Token 551: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.007617156486958265
    2. ' turns' → logprob: -5.007616996765137
    3. '
' → logprob: -7.757616996765137
    4. ')' → logprob: -8.382616996765137
    5. 't' → logprob: -9.382616996765137
    6. '   ' → logprob: -10.132616996765137
    7. 'turned' → logprob: -11.007616996765137
    8. '```' → logprob: -11.132616996765137
    9. '(turn' → logprob: -11.382616996765137
    10. ' ' → logprob: -11.757616996765137

Token 552: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11316525191068649
    2. '_used' → logprob: -2.2381651401519775
    3. '_s' → logprob: -8.738164901733398
    4. 'used' → logprob: -9.363164901733398
    5. '_' → logprob: -10.363164901733398
    6. ',' → logprob: -11.613164901733398
    7. ')' → logprob: -11.863164901733398
    8. 'ed' → logprob: -12.113164901733398
    9. '```' → logprob: -12.238164901733398
    10. ')_' → logprob: -12.363164901733398

Token 553: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -6.110668618930504e-05
    2. 'used' → logprob: -9.87506103515625
    3. 's' → logprob: -13.50006103515625
    4. '```' → logprob: -13.50006103515625
    5. ')_' → logprob: -13.62506103515625
    6. ',' → logprob: -13.62506103515625
    7. ',_' → logprob: -14.00006103515625
    8. '_use' → logprob: -14.75006103515625
    9. '_USED' → logprob: -14.75006103515625
    10. 'Used' → logprob: -14.87506103515625

Token 554: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3160267770290375
    2. ')' → logprob: -1.8160268068313599
    3. ')}' → logprob: -2.8160266876220703
    4. ',' → logprob: -3.0660266876220703
    5. '):
' → logprob: -8.06602668762207
    6. ')=' → logprob: -8.31602668762207
    7. '):(' → logprob: -8.31602668762207
    8. '),' → logprob: -8.69102668762207
    9. ')}}' → logprob: -9.19102668762207
    10. '   ' → logprob: -9.44102668762207

Token 555: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03984459117054939
    2. '0' → logprob: -3.539844512939453
    3. '1' → logprob: -5.664844512939453
    4. 'None' → logprob: -6.164844512939453
    5. 'int' → logprob: -6.539844512939453
    6. 'set' → logprob: -7.414844512939453
    7. 'bool' → logprob: -7.539844512939453
    8. 'visited' → logprob: -7.664844512939453
    9. ' True' → logprob: -7.789844512939453
    10. 'float' → logprob: -7.789844512939453

Token 556: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00018804390856530517
    2. '}
' → logprob: -9.875187873840332
    3. ' }' → logprob: -10.000187873840332
    4. ')' → logprob: -10.875187873840332
    5. '   ' → logprob: -11.125187873840332
    6. ',' → logprob: -11.125187873840332
    7. '})' → logprob: -11.125187873840332
    8. ')}' → logprob: -11.125187873840332
    9. '}:' → logprob: -12.500187873840332
    10. '}`' → logprob: -13.125187873840332

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09166578203439713
    2. 'queue' → logprob: -2.841665744781494
    3. 'visited' → logprob: -4.466665744781494
    4. 'from' → logprob: -5.091665744781494
    5. ' queue' → logprob: -5.591665744781494
    6. ')' → logprob: -5.841665744781494
    7. '
' → logprob: -6.466665744781494
    8. ',' → logprob: -6.841665744781494
    9. 'q' → logprob: -7.216665744781494
    10. '    
' → logprob: -8.591666221618652

Token 558: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06441109627485275
    2. 'from' → logprob: -3.189411163330078
    3. '   ' → logprob: -4.064411163330078
    4. 'queue' → logprob: -6.314411163330078
    5. ' visited' → logprob: -6.564411163330078
    6. 'import' → logprob: -8.189411163330078
    7. ' from' → logprob: -8.564411163330078
    8. '```' → logprob: -9.439411163330078
    9. '
' → logprob: -9.564411163330078
    10. 'q' → logprob: -9.564411163330078

Token 559: ' but' (ID: 889)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.032799530774354935
    2. 'from' → logprob: -4.28279972076416
    3. '   ' → logprob: -4.65779972076416
    4. ' visited' → logprob: -5.03279972076416
    5. '{' → logprob: -7.65779972076416
    6. 'queue' → logprob: -7.65779972076416
    7. 'import' → logprob: -7.65779972076416
    8. ' from' → logprob: -8.40779972076416
    9. '
' → logprob: -8.53279972076416
    10. '{
' → logprob: -8.90779972076416

Token 560: ' too' (ID: 3101)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2043909877538681
    2. 'from' → logprob: -2.2043910026550293
    3. 'import' → logprob: -3.2043910026550293
    4. ' visited' → logprob: -3.7043910026550293
    5. ' from' → logprob: -5.829391002655029
    6. '
' → logprob: -6.204391002655029
    7. '   ' → logprob: -6.704391002655029
    8. '#' → logprob: -7.079391002655029
    9. 'queue' → logprob: -7.204391002655029
    10. 'continue' → logprob: -7.704391002655029

Token 561: ' big' (ID: 3464)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2260293811559677
    2. 'large' → logprob: -2.726029396057129
    3. '_large' → logprob: -2.851029396057129
    4. ' large' → logprob: -3.976029396057129
    5. ')' → logprob: -4.351029396057129
    6. '_sparse' → logprob: -5.226029396057129
    7. ',' → logprob: -5.476029396057129
    8. '_big' → logprob: -5.476029396057129
    9. '_many' → logprob: -5.601029396057129
    10. '_
' → logprob: -5.601029396057129

Token 562: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0216561555862427
    2. '<|end|>' → logprob: -1.1466561555862427
    3. ' visited' → logprob: -2.271656036376953
    4. ',' → logprob: -2.521656036376953
    5. ')' → logprob: -3.021656036376953
    6. '
' → logprob: -3.646656036376953
    7. 'from' → logprob: -4.521656036376953
    8. '<|end|>' → logprob: -4.646656036376953
    9. ',
' → logprob: -4.771656036376953
    10. 'import' → logprob: -5.021656036376953

Token 563: ' we' (ID: 581)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9268101453781128
    2. 'from' → logprob: -1.4268101453781128
    3. '   ' → logprob: -1.8018101453781128
    4. 'import' → logprob: -3.1768102645874023
    5. ' visited' → logprob: -3.4268102645874023
    6. ' from' → logprob: -3.6768102645874023
    7. '<|end|>' → logprob: -4.051810264587402
    8. 'continue' → logprob: -4.051810264587402
    9. '...' → logprob: -4.426810264587402
    10. ')' → logprob: -4.426810264587402

Token 564: ' optimize' (ID: 40398)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4702177345752716
    2. ''ll' → logprob: -1.5952177047729492
    3. ' will' → logprob: -2.345217704772949
    4. 'can' → logprob: -4.345217704772949
    5. ' cannot' → logprob: -4.470217704772949
    6. ' can't' → logprob: -4.845217704772949
    7. ' may' → logprob: -4.970217704772949
    8. ' need' → logprob: -5.095217704772949
    9. ' use' → logprob: -5.345217704772949
    10. 'will' → logprob: -5.595217704772949

Token 565: ' by' (ID: 656)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.18266400694847107
    2. ' visited' → logprob: -1.9326640367507935
    3. '
' → logprob: -5.182663917541504
    4. 'from' → logprob: -5.307663917541504
    5. 'import' → logprob: -5.307663917541504
    6. 'by' → logprob: -7.307663917541504
    7. ' by' → logprob: -7.307663917541504
    8. '   ' → logprob: -7.307663917541504
    9. ',' → logprob: -7.432663917541504
    10. ' =' → logprob: -7.807663917541504

Token 566: ' combining' (ID: 48784)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.1192856952548027
    2. ' using' → logprob: -3.8692855834960938
    3. 'import' → logprob: -3.9942855834960938
    4. 'st' → logprob: -4.369285583496094
    5. 'visited' → logprob: -4.369285583496094
    6. 'only' → logprob: -4.619285583496094
    7. 'tracking' → logprob: -4.994285583496094
    8. 'from' → logprob: -5.119285583496094
    9. ' only' → logprob: -5.244285583496094
    10. 'keeping' → logprob: -5.619285583496094

Token 567: ' visited' (ID: 18416)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28006085753440857
    2. 'visited' → logprob: -2.2800607681274414
    3. '(x' → logprob: -2.4050607681274414
    4. 'turn' → logprob: -4.155060768127441
    5. 'import' → logprob: -5.030060768127441
    6. ' turns' → logprob: -5.280060768127441
    7. ' x' → logprob: -5.280060768127441
    8. ' visited' → logprob: -5.905060768127441
    9. 'bits' → logprob: -5.905060768127441
    10. 'keys' → logprob: -6.530060768127441

Token 568: ' states' (ID: 9407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.840901255607605
    2. '_states' → logprob: -1.340901255607605
    3. '_state' → logprob: -1.715901255607605
    4. '_mask' → logprob: -3.7159013748168945
    5. '_key' → logprob: -3.9659013748168945
    6. 'state' → logprob: -4.3409013748168945
    7. '[(' → logprob: -4.4659013748168945
    8. ')' → logprob: -4.8409013748168945
    9. '_bits' → logprob: -5.2159013748168945
    10. '=' → logprob: -5.3409013748168945

Token 569: ' for' (ID: 395)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5330135226249695
    2. ' =' → logprob: -1.1580135822296143
    3. 'import' → logprob: -3.5330135822296143
    4. ' visited' → logprob: -3.7830135822296143
    5. 'from' → logprob: -4.783013343811035
    6. 'size' → logprob: -5.533013343811035
    7. 'with' → logprob: -5.533013343811035
    8. '
' → logprob: -5.658013343811035
    9. 'mask' → logprob: -5.908013343811035
    10. 'state' → logprob: -6.033013343811035

Token 570: ' the' (ID: 290)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9440694451332092
    2. ' each' → logprob: -1.5690693855285645
    3. 'different' → logprob: -2.1940693855285645
    4. ' different' → logprob: -3.3190693855285645
    5. 'turn' → logprob: -3.3190693855285645
    6. 'x' → logprob: -3.3190693855285645
    7. '(x' → logprob: -3.5690693855285645
    8. ' directions' → logprob: -3.6940693855285645
    9. ' turns' → logprob: -3.9440693855285645
    10. 'dire' → logprob: -4.0690693855285645

Token 571: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.14316515624523163
    2. 'current' → logprob: -2.893165111541748
    3. ' same' → logprob: -3.393165111541748
    4. 'turn' → logprob: -4.018165111541748
    5. ' current' → logprob: -5.518165111541748
    6. 'dire' → logprob: -5.893165111541748
    7. 'direction' → logprob: -5.893165111541748
    8. 'next' → logprob: -6.018165111541748
    9. 'number' → logprob: -6.268165111541748
    10. 'x' → logprob: -6.393165111541748

Token 572: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8554583191871643
    2. 'x' → logprob: -1.1054582595825195
    3. ' (' → logprob: -2.1054582595825195
    4. ' x' → logprob: -3.1054582595825195
    5. 'position' → logprob: -3.2304582595825195
    6. '```' → logprob: -4.4804582595825195
    7. 'direction' → logprob: -4.8554582595825195
    8. ' position' → logprob: -4.8554582595825195
    9. ' direction' → logprob: -5.9804582595825195
    10. 'turn' → logprob: -6.2304582595825195

Token 573: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001216186792589724
    2. ' x' → logprob: -7.126216411590576
    3. '(x' → logprob: -9.126215934753418
    4. 'y' → logprob: -9.751215934753418
    5. '```' → logprob: -9.876215934753418
    6. 'position' → logprob: -10.001215934753418
    7. '
' → logprob: -10.126215934753418
    8. ')' → logprob: -10.251215934753418
    9. ')x' → logprob: -11.001215934753418
    10. '   ' → logprob: -11.376215934753418

Token 574: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.08021575957536697
    2. ',' → logprob: -2.5802156925201416
    3. ' ,' → logprob: -6.705215930938721
    4. ',x' → logprob: -9.580215454101562
    5. 'y' → logprob: -11.330215454101562
    6. '   ' → logprob: -12.330215454101562
    7. '```' → logprob: -13.080215454101562
    8. '
' → logprob: -13.455215454101562
    9. ' ' → logprob: -13.705215454101562
    10. ',Y' → logprob: -13.830215454101562

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7005351185798645
    2. ',' → logprob: -0.7005351185798645
    3. ',)' → logprob: -6.075535297393799
    4. '),' → logprob: -6.575535297393799
    5. ')
' → logprob: -7.575535297393799
    6. ').' → logprob: -7.700535297393799
    7. '):' → logprob: -8.32553482055664
    8. 'with' → logprob: -8.57553482055664
    9. ',state' → logprob: -8.57553482055664
    10. ' ,' → logprob: -8.57553482055664

Token 576: ' for' (ID: 395)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1946430206298828
    2. '_' → logprob: -1.8196430206298828
    3. ' =' → logprob: -1.8196430206298828
    4. '_turn' → logprob: -2.069643020629883
    5. '_states' → logprob: -2.319643020629883
    6. ',' → logprob: -2.694643020629883
    7. '
' → logprob: -4.569643020629883
    8. '_depth' → logprob: -5.194643020629883
    9. '_steps' → logprob: -5.444643020629883
    10. 'turn' → logprob: -5.569643020629883

Token 577: ' minimal' (ID: 19957)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5447716116905212
    2. 'different' → logprob: -1.794771671295166
    3. 'any' → logprob: -2.419771671295166
    4. 'each' → logprob: -2.794771671295166
    5. ' all' → logprob: -3.169771671295166
    6. 'turn' → logprob: -4.294771671295166
    7. 'both' → logprob: -4.544771671295166
    8. 'multiple' → logprob: -4.794771671295166
    9. 'some' → logprob: -5.169771671295166
    10. ' different' → logprob: -5.544771671295166

Token 578: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.07976401597261429
    2. ' turns' → logprob: -2.5797641277313232
    3. '_turn' → logprob: -8.329764366149902
    4. ' turn' → logprob: -8.829764366149902
    5. 'visited' → logprob: -9.454764366149902
    6. 'steps' → logprob: -9.454764366149902
    7. 'used' → logprob: -9.704764366149902
    8. '```' → logprob: -10.079764366149902
    9. 'import' → logprob: -10.204764366149902
    10. ' used' → logprob: -10.329764366149902

Token 579: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.10886639356613159
    2. ')' → logprob: -3.2338664531707764
    3. 'used' → logprob: -3.4838664531707764
    4. ' =' → logprob: -3.7338664531707764
    5. '   ' → logprob: -5.858866214752197
    6. '_needed' → logprob: -6.733866214752197
    7. '_' → logprob: -6.983866214752197
    8. '_required' → logprob: -7.608866214752197
    9. '=' → logprob: -7.733866214752197
    10. ',' → logprob: -7.983866214752197

Token 580: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2748584449291229
    2. 'visited' → logprob: -2.3998584747314453
    3. 'from' → logprob: -3.1498584747314453
    4. 'dist' → logprob: -3.2748584747314453
    5. 'queue' → logprob: -4.149858474731445
    6. 'distance' → logprob: -4.399858474731445
    7. ' =' → logprob: -4.649858474731445
    8. 'import' → logprob: -5.399858474731445
    9. ' dist' → logprob: -5.524858474731445
    10. ')' → logprob: -5.899858474731445

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007451629266142845
    2. 'from' → logprob: -5.88245153427124
    3. 'visited' → logprob: -6.63245153427124
    4. '
' → logprob: -7.50745153427124
    5. ',' → logprob: -7.50745153427124
    6. ')' → logprob: -7.63245153427124
    7. 'queue' → logprob: -8.007452011108398
    8. 'import' → logprob: -8.257452011108398
    9. 'for' → logprob: -8.632452011108398
    10. 'q' → logprob: -8.757452011108398

Token 582: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.461108535528183
    2. 'import' → logprob: -1.9611085653305054
    3. '   ' → logprob: -2.086108446121216
    4. 'dist' → logprob: -2.961108446121216
    5. 'from' → logprob: -3.211108446121216
    6. 'dp' → logprob: -5.586108684539795
    7. ' visited' → logprob: -5.836108684539795
    8. ' dist' → logprob: -6.336108684539795
    9. 'distance' → logprob: -6.336108684539795
    10. ' from' → logprob: -7.461108684539795

Token 583: ' Because' (ID: 13602)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7930735945701599
    2. 'dist' → logprob: -1.5430736541748047
    3. 'import' → logprob: -1.6680736541748047
    4. 'from' → logprob: -2.5430736541748047
    5. '   ' → logprob: -3.2930736541748047
    6. 'best' → logprob: -4.918073654174805
    7. 'distance' → logprob: -4.918073654174805
    8. 'dp' → logprob: -5.418073654174805
    9. 'min' → logprob: -5.418073654174805
    10. 'seen' → logprob: -6.793073654174805

Token 584: ' turns' (ID: 18304)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4117960035800934
    2. '   ' → logprob: -2.9117960929870605
    3. 'for' → logprob: -2.9117960929870605
    4. 'we' → logprob: -3.1617960929870605
    5. 'turn' → logprob: -3.4117960929870605
    6. 'the' → logprob: -3.4117960929870605
    7. ' if' → logprob: -3.6617960929870605
    8. 'moving' → logprob: -4.2867960929870605
    9. 'once' → logprob: -4.9117960929870605
    10. 'when' → logprob: -5.0367960929870605

Token 585: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.014235315844416618
    2. '   ' → logprob: -4.514235496520996
    3. 'used' → logprob: -6.514235496520996
    4. '_required' → logprob: -7.389235496520996
    5. '_allowed' → logprob: -7.889235496520996
    6. '_needed' → logprob: -8.139235496520996
    7. '_taken' → logprob: -9.389235496520996
    8. '_' → logprob: -9.764235496520996
    9. 'Used' → logprob: -9.889235496520996
    10. ' =' → logprob: -10.264235496520996

Token 586: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1864802837371826
    2. ' for' → logprob: -2.1864802837371826
    3. ' can' → logprob: -2.5614802837371826
    4. ' is' → logprob: -2.6864802837371826
    5. ' =' → logprob: -2.9364802837371826
    6. ' <=' → logprob: -3.0614802837371826
    7. '<=' → logprob: -3.3114802837371826
    8. 'can' → logprob: -3.3114802837371826
    9. ')' → logprob: -3.5614802837371826
    10. '   ' → logprob: -3.5614802837371826

Token 587: ' non' (ID: 2893)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.388004183769226
    2. 'non' → logprob: -2.0130043029785156
    3. ' always' → logprob: -2.0130043029785156
    4. ' monoton' → logprob: -2.0130043029785156
    5. 'mon' → logprob: -2.2630043029785156
    6. ' non' → logprob: -2.3880043029785156
    7. 'always' → logprob: -2.5130043029785156
    8. ' increasing' → logprob: -3.1380043029785156
    9. 'min' → logprob: -5.388004302978516
    10. ' monot' → logprob: -5.638004302978516

Token 588: '-de' (ID: 8797)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0006079599261283875
    2. '   ' → logprob: -8.00060749053955
    3. ' decreasing' → logprob: -9.00060749053955
    4. '-de' → logprob: -9.25060749053955
    5. 'in' → logprob: -9.87560749053955
    6. '-in' → logprob: -14.25060749053955
    7. '       ' → logprob: -15.25060749053955
    8. ' ' → logprob: -15.75060749053955
    9. '-' → logprob: -15.87560749053955
    10. 'descending' → logprob: -15.87560749053955

Token 589: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -1.0921942703134846e-05
    2. 'cre' → logprob: -12.25001049041748
    3. 'crease' → logprob: -12.50001049041748
    4. 'crement' → logprob: -13.75001049041748
    5. 'cr' → logprob: -15.50001049041748
    6. 'creases' → logprob: -15.62501049041748
    7. 'c' → logprob: -15.87501049041748
    8. 'creased' → logprob: -16.125011444091797
    9. '[' → logprob: -16.250011444091797
    10. '```' → logprob: -16.375011444091797

Token 590: ' along' (ID: 4251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05244220793247223
    2. 'visited' → logprob: -3.4274423122406006
    3. 'from' → logprob: -5.0524420738220215
    4. '
' → logprob: -5.3024420738220215
    5. 'queue' → logprob: -5.9274420738220215
    6. ' visited' → logprob: -7.0524420738220215
    7. ')' → logprob: -7.3024420738220215
    8. ' from' → logprob: -7.6774420738220215
    9. 'dist' → logprob: -7.9274420738220215
    10. 'import' → logprob: -8.05244255065918

Token 591: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8605713248252869
    2. ' BFS' → logprob: -1.4855713844299316
    3. 'paths' → logprob: -2.4855713844299316
    4. ' the' → logprob: -2.4855713844299316
    5. ' paths' → logprob: -2.8605713844299316
    6. 'B' → logprob: -2.9855713844299316
    7. 'path' → logprob: -3.4855713844299316
    8. 'with' → logprob: -4.610571384429932
    9. 'a' → logprob: -5.610571384429932
    10. ' bfs' → logprob: -5.610571384429932

Token 592: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.011626903899013996
    2. ' path' → logprob: -4.761626720428467
    3. 'short' → logprob: -6.511626720428467
    4. 'valid' → logprob: -7.636626720428467
    5. 'B' → logprob: -7.761626720428467
    6. 'b' → logprob: -8.886627197265625
    7. 'queue' → logprob: -9.511627197265625
    8. 'single' → logprob: -9.761627197265625
    9. 'while' → logprob: -10.636627197265625
    10. 'straight' → logprob: -10.636627197265625

Token 593: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025489015504717827
    2. 'visited' → logprob: -4.52548885345459
    3. 'from' → logprob: -5.40048885345459
    4. '
' → logprob: -5.40048885345459
    5. ',' → logprob: -6.52548885345459
    6. 'import' → logprob: -7.27548885345459
    7. ' visited' → logprob: -7.40048885345459
    8. '    
' → logprob: -7.52548885345459
    9. ' from' → logprob: -7.65048885345459
    10. ')' → logprob: -7.77548885345459

Token 594: ' going' (ID: 2966)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.25657618045806885
    2. '   ' → logprob: -2.2565760612487793
    3. 'from' → logprob: -2.5065760612487793
    4. ' visited' → logprob: -4.006576061248779
    5. 'import' → logprob: -4.131576061248779
    6. ' from' → logprob: -6.256576061248779
    7. '#' → logprob: -6.881576061248779
    8. 'dist' → logprob: -6.881576061248779
    9. 'queue' → logprob: -7.631576061248779
    10. '
' → logprob: -7.631576061248779

Token 595: ' back' (ID: 1602)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -1.1152111291885376
    2. ' forward' → logprob: -1.4902111291885376
    3. 'to' → logprob: -2.615211009979248
    4. ' to' → logprob: -2.615211009979248
    5. 'through' → logprob: -2.615211009979248
    6. ' through' → logprob: -2.865211009979248
    7. 'from' → logprob: -2.865211009979248
    8. 'down' → logprob: -2.990211009979248
    9. 'for' → logprob: -4.240211009979248
    10. ' from' → logprob: -4.615211009979248

Token 596: ' with' (ID: 483)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7016696929931641
    2. 'to' → logprob: -1.826669692993164
    3. '   ' → logprob: -2.076669692993164
    4. ',' → logprob: -2.951669692993164
    5. 'in' → logprob: -3.076669692993164
    6. ' in' → logprob: -3.701669692993164
    7. ')' → logprob: -4.576669692993164
    8. 'and' → logprob: -4.576669692993164
    9. 'visited' → logprob: -4.826669692993164
    10. ' is' → logprob: -4.951669692993164

Token 597: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.5815136432647705
    2. 'higher' → logprob: -1.5815136432647705
    3. 'larg' → logprob: -2.7065136432647705
    4. 'a' → logprob: -3.0815136432647705
    5. 'lower' → logprob: -3.4565136432647705
    6. 'greater' → logprob: -3.7065136432647705
    7. ' higher' → logprob: -4.331513404846191
    8. 'f' → logprob: -4.331513404846191
    9. ' more' → logprob: -4.706513404846191
    10. 'sm' → logprob: -4.831513404846191

Token 598: ' turns' (ID: 18304)
  Prédit: ' turns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.22495608031749725
    2. 'turn' → logprob: -2.3499560356140137
    3. 'visited' → logprob: -2.7249560356140137
    4. '_turn' → logprob: -4.474956035614014
    5. '_used' → logprob: -4.974956035614014
    6. ' visited' → logprob: -5.974956035614014
    7. 'used' → logprob: -6.224956035614014
    8. ' than' → logprob: -6.224956035614014
    9. '```' → logprob: -6.224956035614014
    10. ' or' → logprob: -6.474956035614014

Token 599: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00017755765293259174
    2. 'used' → logprob: -9.125177383422852
    3. '   ' → logprob: -10.250177383422852
    4. '_required' → logprob: -11.250177383422852
    5. '_needed' → logprob: -12.250177383422852
    6. '_allowed' → logprob: -12.250177383422852
    7. '_' → logprob: -12.625177383422852
    8. '_taken' → logprob: -12.750177383422852
    9. '_USED' → logprob: -14.125177383422852
    10. ')' → logprob: -14.375177383422852

Token 600: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6153172850608826
    2. ')' → logprob: -2.2403173446655273
    3. 'visited' → logprob: -2.6153173446655273
    4. ' or' → logprob: -2.7403173446655273
    5. ',' → logprob: -3.1153173446655273
    6. ' is' → logprob: -3.3653173446655273
    7. 'or' → logprob: -4.115317344665527
    8. 'is' → logprob: -4.365317344665527
    9. ' and' → logprob: -4.490317344665527
    10. 'and' → logprob: -4.615317344665527

Token 601: ' useless' (ID: 52837)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.50128573179245
    2. ' not' → logprob: -1.6262857913970947
    3. ' pointless' → logprob: -2.3762857913970947
    4. ' useless' → logprob: -2.8762857913970947
    5. 'w' → logprob: -3.6262857913970947
    6. 'unlikely' → logprob: -5.501285552978516
    7. 'sub' → logprob: -5.876285552978516
    8. 'possible' → logprob: -6.001285552978516
    9. ' worse' → logprob: -6.251285552978516
    10. 'no' → logprob: -6.376285552978516

Token 602: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.169337198138237
    2. 'visited' → logprob: -2.169337272644043
    3. 'from' → logprob: -3.544337272644043
    4. '
' → logprob: -5.044337272644043
    5. 'import' → logprob: -6.669337272644043
    6. ' visited' → logprob: -6.794337272644043
    7. 'dist' → logprob: -7.044337272644043
    8. ')' → logprob: -7.044337272644043
    9. '    
' → logprob: -7.794337272644043
    10. ' from' → logprob: -8.044337272644043

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05287706479430199
    2. 'visited' → logprob: -3.5528769493103027
    3. 'from' → logprob: -4.177876949310303
    4. 'queue' → logprob: -5.302876949310303
    5. 'import' → logprob: -7.802876949310303
    6. ')' → logprob: -7.927876949310303
    7. 'q' → logprob: -8.177877426147461
    8. ' visited' → logprob: -8.302877426147461
    9. ',' → logprob: -8.552877426147461
    10. ' from' → logprob: -8.802877426147461

Token 604: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.39105090498924255
    2. 'from' → logprob: -1.391050934791565
    3. '   ' → logprob: -2.7660508155822754
    4. 'import' → logprob: -4.766050815582275
    5. 'queue' → logprob: -6.141050815582275
    6. 'dist' → logprob: -7.266050815582275
    7. 'q' → logprob: -8.391051292419434
    8. 'deque' → logprob: -9.766051292419434
    9. ' visited' → logprob: -9.891051292419434
    10. 'seen' → logprob: -10.391051292419434

Token 605: ' So' (ID: 2632)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6787570118904114
    2. 'from' → logprob: -1.3037569522857666
    3. 'import' → logprob: -1.8037569522857666
    4. '   ' → logprob: -3.3037569522857666
    5. 'dist' → logprob: -4.178757190704346
    6. 'queue' → logprob: -6.678757190704346
    7. '
' → logprob: -7.178757190704346
    8. 'q' → logprob: -7.178757190704346
    9. '#' → logprob: -7.303757190704346
    10. 'distance' → logprob: -7.803757190704346

Token 606: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5264198780059814
    2. 'for' → logprob: -1.5264198780059814
    3. 'from' → logprob: -2.1514198780059814
    4. ' for' → logprob: -3.4014198780059814
    5. 'import' → logprob: -3.5264198780059814
    6. ' from' → logprob: -5.151419639587402
    7. '#' → logprob: -6.276419639587402
    8. 'visited' → logprob: -6.276419639587402
    9. 'queue' → logprob: -7.526419639587402
    10. 'dist' → logprob: -7.651419639587402

Token 607: ' keep' (ID: 3357)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6561003923416138
    2. 'import' → logprob: -1.4061003923416138
    3. ' can' → logprob: -1.9061003923416138
    4. '   ' → logprob: -3.281100273132324
    5. 'from' → logprob: -3.781100273132324
    6. 'continue' → logprob: -4.781100273132324
    7. 'need' → logprob: -5.531100273132324
    8. 'use' → logprob: -5.906100273132324
    9. 'should' → logprob: -5.906100273132324
    10. 'will' → logprob: -5.906100273132324

Token 608: ' visited' (ID: 18416)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6714287996292114
    2. 'visited' → logprob: -0.9214287996292114
    3. 'a' → logprob: -3.921428680419922
    4. 'minimal' → logprob: -4.171428680419922
    5. 'for' → logprob: -4.296428680419922
    6. '   ' → logprob: -4.671428680419922
    7. 'the' → logprob: -4.921428680419922
    8. 'minimum' → logprob: -5.296428680419922
    9. '[min' → logprob: -5.796428680419922
    10. ' visited' → logprob: -5.796428680419922

Token 609: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21341942250728607
    2. '_states' → logprob: -3.0884194374084473
    3. '=' → logprob: -3.2134194374084473
    4. 'as' → logprob: -3.7134194374084473
    5. ' as' → logprob: -3.8384194374084473
    6. '   ' → logprob: -3.8384194374084473
    7. 'states' → logprob: -4.088419437408447
    8. 'for' → logprob: -5.713419437408447
    9. '_min' → logprob: -6.088419437408447
    10. ' states' → logprob: -6.463419437408447

Token 610: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004449347034096718
    2. ']' → logprob: -6.254449367523193
    3. 'y' → logprob: -6.754449367523193
    4. '[y' → logprob: -7.004449367523193
    5. ',y' → logprob: -9.379448890686035
    6. ']=' → logprob: -9.629448890686035
    7. ' ][' → logprob: -10.379448890686035
    8. 'visited' → logprob: -10.504448890686035
    9. '   ' → logprob: -10.754448890686035
    10. '[' → logprob: -10.879448890686035

Token 611: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002468643942847848
    2. 'x' → logprob: -7.002468585968018
    3. 'W' → logprob: -7.502468585968018
    4. '][' → logprob: -7.877468585968018
    5. '0' → logprob: -8.627469062805176
    6. ']' → logprob: -9.002469062805176
    7. ' y' → logprob: -9.127469062805176
    8. 'H' → logprob: -9.252469062805176
    9. '(y' → logprob: -10.877469062805176
    10. '
' → logprob: -11.377469062805176

Token 612: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11959131062030792
    2. ']=' → logprob: -3.119591236114502
    3. '][' → logprob: -3.119591236114502
    4. '=' → logprob: -4.494591236114502
    5. ' =' → logprob: -4.494591236114502
    6. ']=-' → logprob: -7.744591236114502
    7. '[' → logprob: -8.36959171295166
    8. ')' → logprob: -9.11959171295166
    9. ' ]' → logprob: -9.24459171295166
    10. '].' → logprob: -9.24459171295166

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18568488955497742
    2. '=' → logprob: -1.8106849193572998
    3. '   ' → logprob: -6.560684680938721
    4. '[' → logprob: -6.560684680938721
    5. '=[' → logprob: -6.810684680938721
    6. ']' → logprob: -7.560684680938721
    7. 'for' → logprob: -7.685684680938721
    8. '[min' → logprob: -8.310685157775879
    9. ')' → logprob: -9.685685157775879
    10. ']=' → logprob: -9.810685157775879

Token 614: ' minimal' (ID: 19957)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20028036832809448
    2. 'float' → logprob: -2.0752804279327393
    3. ' -' → logprob: -3.9502804279327393
    4. 'N' → logprob: -4.07528018951416
    5. 'inf' → logprob: -5.20028018951416
    6. '-inf' → logprob: -5.45028018951416
    7. 'int' → logprob: -6.70028018951416
    8. ' float' → logprob: -6.95028018951416
    9. '[' → logprob: -7.07528018951416
    10. '[-' → logprob: -7.20028018951416

Token 615: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.023916946724057198
    2. ' turns' → logprob: -3.7739169597625732
    3. 'visited' → logprob: -8.523917198181152
    4. 'used' → logprob: -9.023917198181152
    5. 'number' → logprob: -9.273917198181152
    6. '_turn' → logprob: -9.523917198181152
    7. '   ' → logprob: -9.773917198181152
    8. '```' → logprob: -10.523917198181152
    9. 'value' → logprob: -10.773917198181152
    10. ' number' → logprob: -10.898917198181152

Token 616: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0035291595850139856
    2. 'used' → logprob: -6.128529071807861
    3. '   ' → logprob: -6.628529071807861
    4. 'visited' → logprob: -12.37852954864502
    5. 'Used' → logprob: -12.50352954864502
    6. '_' → logprob: -12.50352954864502
    7. '_required' → logprob: -12.62852954864502
    8. '_needed' → logprob: -13.62852954864502
    9. '-used' → logprob: -14.12852954864502
    10. ' used' → logprob: -14.25352954864502

Token 617: ' found' (ID: 2491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26410627365112305
    2. ' =' → logprob: -2.264106273651123
    3. 'visited' → logprob: -2.514106273651123
    4. 'for' → logprob: -3.764106273651123
    5. '
' → logprob: -4.639106273651123
    6. ' for' → logprob: -5.639106273651123
    7. '[' → logprob: -5.639106273651123
    8. ')' → logprob: -7.139106273651123
    9. ' visited' → logprob: -7.139106273651123
    10. 'import' → logprob: -7.139106273651123

Token 618: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09237763285636902
    2. 'visited' → logprob: -3.3423776626586914
    3. ' =' → logprob: -3.5923776626586914
    4. 'for' → logprob: -4.717377662658691
    5. '
' → logprob: -4.967377662658691
    6. ' for' → logprob: -5.467377662658691
    7. ' visited' → logprob: -6.217377662658691
    8. ')' → logprob: -7.342377662658691
    9. ']' → logprob: -7.842377662658691
    10. '[' → logprob: -7.967377662658691

Token 619: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.0002807623823173344
    2. ' far' → logprob: -8.250280380249023
    3. '_far' → logprob: -11.625280380249023
    4. '   ' → logprob: -11.875280380249023
    5. 'Far' → logprob: -13.125280380249023
    6. 'for' → logprob: -13.750280380249023
    7. 'f' → logprob: -15.875280380249023
    8. '       ' → logprob: -16.000280380249023
    9. '    ' → logprob: -16.375280380249023
    10. '           ' → logprob: -16.625280380249023

Token 620: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013243173249065876
    2. 'visited' → logprob: -4.388243198394775
    3. 'dist' → logprob: -8.263242721557617
    4. ' visited' → logprob: -8.638242721557617
    5. 'distance' → logprob: -9.388242721557617
    6. '
' → logprob: -9.388242721557617
    7. '    
' → logprob: -10.013242721557617
    8. ')' → logprob: -10.763242721557617
    9. ',' → logprob: -11.138242721557617
    10. '  ' → logprob: -11.888242721557617

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008211111649870872
    2. 'visited' → logprob: -5.383211135864258
    3. 'for' → logprob: -7.133211135864258
    4. '
' → logprob: -7.383211135864258
    5. 'from' → logprob: -7.633211135864258
    6. ')' → logprob: -7.633211135864258
    7. ' for' → logprob: -8.758211135864258
    8. 'queue' → logprob: -8.883211135864258
    9. ',' → logprob: -9.008211135864258
    10. 'dist' → logprob: -9.133211135864258

Token 622: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43426215648651123
    2. 'from' → logprob: -1.8092621564865112
    3. 'visited' → logprob: -2.684262275695801
    4. 'queue' → logprob: -2.934262275695801
    5. 'dist' → logprob: -2.934262275695801
    6. 'q' → logprob: -5.309262275695801
    7. 'import' → logprob: -5.434262275695801
    8. 'deque' → logprob: -6.559262275695801
    9. 'dq' → logprob: -6.809262275695801
    10. '
' → logprob: -7.434262275695801

Token 623: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12413447350263596
    2. 'from' → logprob: -2.7491345405578613
    3. 'queue' → logprob: -3.2491345405578613
    4. 'visited' → logprob: -5.374134540557861
    5. 'dist' → logprob: -5.874134540557861
    6. 'q' → logprob: -5.999134540557861
    7. 'import' → logprob: -6.249134540557861
    8. 'deque' → logprob: -7.374134540557861
    9. 'dq' → logprob: -7.624134540557861
    10. 'que' → logprob: -7.749134540557861

Token 624: ' only' (ID: 1606)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6236289739608765
    2. '   ' → logprob: -1.4986289739608765
    3. 'from' → logprob: -1.6236289739608765
    4. 'q' → logprob: -3.748629093170166
    5. 'que' → logprob: -5.623629093170166
    6. '
' → logprob: -5.748629093170166
    7. ' queue' → logprob: -5.748629093170166
    8. 'dist' → logprob: -5.998629093170166
    9. 'deque' → logprob: -6.123629093170166
    10. 'import' → logprob: -6.373629093170166

Token 625: ' process' (ID: 2273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18025512993335724
    2. 'from' → logprob: -2.930255174636841
    3. 'if' → logprob: -3.430255174636841
    4. 'import' → logprob: -3.430255174636841
    5. 'enqueue' → logprob: -4.180254936218262
    6. ' if' → logprob: -5.180254936218262
    7. 'continue' → logprob: -5.305254936218262
    8. 'allow' → logprob: -5.305254936218262
    9. ' from' → logprob: -5.805254936218262
    10. '       ' → logprob: -5.930254936218262

Token 626: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6004151105880737
    2. 'if' → logprob: -1.7254151105880737
    3. ' if' → logprob: -1.7254151105880737
    4. 'from' → logprob: -3.7254152297973633
    5. '       ' → logprob: -4.475415229797363
    6. '               ' → logprob: -4.725415229797363
    7. '           ' → logprob: -4.850415229797363
    8. ' states' → logprob: -4.850415229797363
    9. 'queue' → logprob: -5.350415229797363
    10. ' queue' → logprob: -5.350415229797363

Token 627: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5079516172409058
    2. 'from' → logprob: -1.2579516172409058
    3. ' from' → logprob: -2.7579517364501953
    4. ' =' → logprob: -5.132951736450195
    5. ' if' → logprob: -5.257951736450195
    6. 'while' → logprob: -5.382951736450195
    7. '       ' → logprob: -5.507951736450195
    8. ',' → logprob: -5.632951736450195
    9. ' with' → logprob: -5.757951736450195
    10. ' while' → logprob: -5.757951736450195

Token 628: ' smaller' (ID: 13679)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5312857031822205
    2. ' turns' → logprob: -1.1562857627868652
    3. 'visited' → logprob: -2.4062857627868652
    4. ' visited' → logprob: -5.531285762786865
    5. '   ' → logprob: -6.031285762786865
    6. 'vis' → logprob: -8.406285285949707
    7. '```' → logprob: -8.656285285949707
    8. ' turn' → logprob: -8.906285285949707
    9. '(turn' → logprob: -9.031285285949707
    10. '       ' → logprob: -9.781285285949707

Token 629: ' turns' (ID: 18304)
  Prédit: ' turns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.2557815611362457
    2. 'turn' → logprob: -1.6307815313339233
    3. '_turn' → logprob: -3.880781650543213
    4. '   ' → logprob: -5.130781650543213
    5. 'visited' → logprob: -6.505781650543213
    6. '```' → logprob: -7.130781650543213
    7. ' visited' → logprob: -8.380781173706055
    8. ' turn' → logprob: -8.880781173706055
    9. '
' → logprob: -9.255781173706055
    10. 'Turns' → logprob: -9.505781173706055

Token 630: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.008949936367571354
    2. '   ' → logprob: -5.0089497566223145
    3. 'used' → logprob: -6.1339497566223145
    4. 's' → logprob: -10.508950233459473
    5. '_' → logprob: -12.008950233459473
    6. '_required' → logprob: -12.133950233459473
    7. '  ' → logprob: -12.258950233459473
    8. 'Used' → logprob: -12.508950233459473
    9. '_needed' → logprob: -12.883950233459473
    10. '```' → logprob: -13.133950233459473

Token 631: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09648478031158447
    2. 'visited' → logprob: -2.971484661102295
    3. '
' → logprob: -3.346484661102295
    4. 'dist' → logprob: -6.721484661102295
    5. 'from' → logprob: -6.846484661102295
    6. ' visited' → logprob: -6.846484661102295
    7. '    
' → logprob: -7.846484661102295
    8. 'import' → logprob: -8.221485137939453
    9. ' =' → logprob: -8.221485137939453
    10. 'distance' → logprob: -8.346485137939453

Token 632: ' same' (ID: 2684)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9434378743171692
    2. 'that' → logprob: -1.1934378147125244
    3. ' that' → logprob: -1.4434378147125244
    4. 'x' → logprob: -3.5684378147125244
    5. 'the' → logprob: -4.5684380531311035
    6. ' visited' → logprob: -4.5684380531311035
    7. '(x' → logprob: -4.6934380531311035
    8. '[x' → logprob: -5.9434380531311035
    9. ' the' → logprob: -6.0684380531311035
    10. ' x' → logprob: -6.1934380531311035

Token 633: ' cell' (ID: 4206)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2082245945930481
    2. 'y' → logprob: -1.8332245349884033
    3. ' y' → logprob: -4.333224773406982
    4. ' x' → logprob: -4.458224773406982
    5. '   ' → logprob: -6.833224773406982
    6. '[y' → logprob: -7.208224773406982
    7. '[x' → logprob: -7.708224773406982
    8. '(x' → logprob: -8.208224296569824
    9. '
' → logprob: -8.333224296569824
    10. '```' → logprob: -9.458224296569824

Token 634: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027419927064329386
    2. 'dist' → logprob: -6.752741813659668
    3. '
' → logprob: -7.627741813659668
    4. 'visited' → logprob: -8.127741813659668
    5. '    
' → logprob: -8.377741813659668
    6. 'from' → logprob: -8.502741813659668
    7. 'queue' → logprob: -8.627741813659668
    8. 'q' → logprob: -9.502741813659668
    9. 'deque' → logprob: -10.502741813659668
    10. ')' → logprob: -11.377741813659668

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07990434765815735
    2. 'from' → logprob: -2.829904317855835
    3. 'queue' → logprob: -4.204904556274414
    4. 'q' → logprob: -7.204904556274414
    5. 'import' → logprob: -7.454904556274414
    6. 'dist' → logprob: -7.454904556274414
    7. 'deque' → logprob: -7.454904556274414
    8. 'dq' → logprob: -8.704904556274414
    9. 'que' → logprob: -9.454904556274414
    10. '```' → logprob: -9.579904556274414

Token 636: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.9836089015007019
    2. '   ' → logprob: -1.2336089611053467
    3. 'queue' → logprob: -1.3586089611053467
    4. 'import' → logprob: -3.3586089611053467
    5. 'q' → logprob: -3.7336089611053467
    6. 'visited' → logprob: -5.108608722686768
    7. 'dist' → logprob: -5.233608722686768
    8. 'dq' → logprob: -5.608608722686768
    9. 'deque' → logprob: -6.233608722686768
    10. 'que' → logprob: -6.733608722686768

Token 637: ' heap' (ID: 37237)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0003573919821064919
    2. 'heap' → logprob: -8.000357627868652
    3. ' collections' → logprob: -10.750357627868652
    4. '_' → logprob: -15.625357627868652
    5. 'sys' → logprob: -15.750357627868652
    6. 'queue' → logprob: -15.875357627868652
    7. '_heap' → logprob: -16.875356674194336
    8. ' heap' → logprob: -18.500356674194336
    9. 'copy' → logprob: -18.500356674194336
    10. 'bis' → logprob: -19.000356674194336

Token 638: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6405310816480778e-05
    2. 'queue' → logprob: -11.125016212463379
    3. 'import' → logprob: -13.875016212463379
    4. 'que' → logprob: -14.875016212463379
    5. 'dict' → logprob: -16.000017166137695
    6. ' queue' → logprob: -16.625017166137695
    7. 'ify' → logprob: -17.000017166137695
    8. '
' → logprob: -17.500017166137695
    9. '```' → logprob: -17.750017166137695
    10. 'lib' → logprob: -18.500017166137695

Token 639: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0486002042889595
    2. 'import' → logprob: -3.048600196838379
    3. ' im' → logprob: -12.548600196838379
    4. '<|end|>' → logprob: -12.548600196838379
    5. '	import' → logprob: -12.673600196838379
    6. ' ' → logprob: -13.798600196838379
    7. ' importar' → logprob: -15.298600196838379
    8. ' impor' → logprob: -15.423600196838379
    9. '_import' → logprob: -15.861100196838379
    10. 'im' → logprob: -15.986100196838379

Token 640: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.030300315469503403
    2. ' he' → logprob: -3.5303003787994385
    3. 'heap' → logprob: -7.530300140380859
    4. '.he' → logprob: -11.40530014038086
    5. 'import' → logprob: -13.65530014038086
    6. '```' → logprob: -15.28030014038086
    7. 'hq' → logprob: -15.28030014038086
    8. ' heap' → logprob: -16.03030014038086
    9. 'h' → logprob: -16.28030014038086
    10. 'ush' → logprob: -16.53030014038086

Token 641: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0206720617134124e-05
    2. 'ap' → logprob: -11.50001049041748
    3. 'a' → logprob: -17.625009536743164
    4. ' app' → logprob: -18.000009536743164
    5. '```' → logprob: -18.125009536743164
    6. 'ап' → logprob: -19.125009536743164
    7. 'appen' → logprob: -19.875009536743164
    8. '	app' → logprob: -20.125009536743164
    9. '(app' → logprob: -20.500009536743164
    10. 'pp' → logprob: -21.000009536743164

Token 642: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.16022492945194244
    2. 'op' → logprob: -1.9102249145507812
    3. 'p' → logprob: -15.410224914550781
    4. '```' → logprob: -15.410224914550781
    5. 'opleft' → logprob: -17.03522491455078
    6. '   ' → logprob: -17.28522491455078
    7. 'opp' → logprob: -17.28522491455078
    8. ' op' → logprob: -17.41022491455078
    9. 'USH' → logprob: -17.66022491455078
    10. 'оп' → logprob: -17.78522491455078

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010088001377880573
    2. 'he' → logprob: -4.635087966918945
    3. ' he' → logprob: -9.510087966918945
    4. '(heap' → logprob: -9.510087966918945
    5. '_he' → logprob: -9.885087966918945
    6. '<|end|>' → logprob: -10.385087966918945
    7. '   ' → logprob: -10.635087966918945
    8. ' ,' → logprob: -11.385087966918945
    9. ',
' → logprob: -11.385087966918945
    10. 'import' → logprob: -11.510087966918945

Token 644: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -9.639096970204264e-05
    2. ' he' → logprob: -9.250096321105957
    3. 'heap' → logprob: -15.500096321105957
    4. '
' → logprob: -19.500097274780273
    5. '.he' → logprob: -20.000097274780273
    6. ' ' → logprob: -20.625097274780273
    7. 'hep' → logprob: -20.625097274780273
    8. 'hev' → logprob: -20.750097274780273
    9. '   ' → logprob: -21.250097274780273
    10. '

' → logprob: -21.250097274780273

Token 645: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.506661833962426e-05
    2. 'ap' → logprob: -9.37508487701416
    3. 'a' → logprob: -16.500085830688477
    4. 'pp' → logprob: -17.000085830688477
    5. 'appen' → logprob: -18.000085830688477
    6. '(app' → logprob: -18.375085830688477
    7. 'ап' → logprob: -18.375085830688477
    8. ' app' → logprob: -18.750085830688477
    9. '[' → logprob: -19.125085830688477
    10. '_app' → logprob: -19.875085830688477

Token 646: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.003178071230649948
    2. 'op' → logprob: -5.753178119659424
    3. 'push' → logprob: -16.253177642822266
    4. 'sh' → logprob: -16.378177642822266
    5. 'opp' → logprob: -17.253177642822266
    6. '{' → logprob: -17.753177642822266
    7. 'app' → logprob: -17.753177642822266
    8. 'p' → logprob: -18.003177642822266
    9. '```' → logprob: -18.128177642822266
    10. 'ushed' → logprob: -18.253177642822266

Token 647: '
' (ID: 198)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4362454414367676
    2. 'heap' → logprob: -1.4362454414367676
    3. '
' → logprob: -2.8112454414367676
    4. 'pq' → logprob: -3.5612454414367676
    5. 'q' → logprob: -3.8112454414367676
    6. 'que' → logprob: -5.936245441436768
    7. 'import' → logprob: -7.186245441436768
    8. '    
' → logprob: -7.561245441436768
    9. '   ' → logprob: -7.936245441436768
    10. 'dist' → logprob: -8.18624496459961

Token 648: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7339040040969849
    2. 'queue' → logprob: -0.9839040040969849
    3. 'pq' → logprob: -1.9839040040969849
    4. 'q' → logprob: -4.983903884887695
    5. 'dist' → logprob: -7.608903884887695
    6. 'que' → logprob: -7.858903884887695
    7. '   ' → logprob: -8.233903884887695
    8. 'visited' → logprob: -8.483903884887695
    9. 'hq' → logprob: -8.483903884887695
    10. 'import' → logprob: -9.483903884887695

Token 649: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6859023571014404
    2. 'queue' → logprob: -1.4359023571014404
    3. 'pq' → logprob: -1.4359023571014404
    4. 'q' → logprob: -4.9359025955200195
    5. 'visited' → logprob: -5.0609025955200195
    6. 'hq' → logprob: -5.4359025955200195
    7. 'dist' → logprob: -6.6859025955200195
    8. 'que' → logprob: -7.1859025955200195
    9. '   ' → logprob: -8.43590259552002
    10. '
' → logprob: -8.68590259552002

Token 650: ' Use' (ID: 7649)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.43687739968299866
    2. 'pq' → logprob: -1.6868773698806763
    3. 'queue' → logprob: -2.686877489089966
    4. 'hq' → logprob: -2.936877489089966
    5. 'visited' → logprob: -3.811877489089966
    6. 'dist' → logprob: -4.186877250671387
    7. 'q' → logprob: -4.936877250671387
    8. 'que' → logprob: -6.561877250671387
    9. 'def' → logprob: -7.686877250671387
    10. '   ' → logprob: -7.936877250671387

Token 651: ' a' (ID: 261)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.061366382986307144
    2. 'he' → logprob: -3.061366319656372
    3. ' heap' → logprob: -5.061366558074951
    4. 'import' → logprob: -5.561366558074951
    5. 'deque' → logprob: -7.436366558074951
    6. '   ' → logprob: -7.686366558074951
    7. 'queue' → logprob: -7.936366558074951
    8. '[]' → logprob: -8.311366081237793
    9. 'a' → logprob: -8.811366081237793
    10. '(heap' → logprob: -8.936366081237793

Token 652: ' priority' (ID: 17621)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.006764395162463188
    2. 'he' → logprob: -6.1317644119262695
    3. ' heap' → logprob: -6.1317644119262695
    4. 'priority' → logprob: -7.2567644119262695
    5. '[]' → logprob: -7.5067644119262695
    6. 'deque' → logprob: -7.7567644119262695
    7. 'min' → logprob: -8.25676441192627
    8. 'import' → logprob: -9.38176441192627
    9. 'pq' → logprob: -9.50676441192627
    10. '[]
' → logprob: -9.63176441192627

Token 653: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0009532637195661664
    2. ' queue' → logprob: -7.375953197479248
    3. '_queue' → logprob: -8.250953674316406
    4. 'que' → logprob: -10.000953674316406
    5. 'q' → logprob: -11.750953674316406
    6. 'heap' → logprob: -12.000953674316406
    7. '   ' → logprob: -12.750953674316406
    8. 'import' → logprob: -14.000953674316406
    9. '=' → logprob: -14.500953674316406
    10. 'he' → logprob: -15.125953674316406

Token 654: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6011602282524109
    2. 'q' → logprob: -1.8511602878570557
    3. 'queue' → logprob: -1.8511602878570557
    4. 'pq' → logprob: -2.3511602878570557
    5. '
' → logprob: -3.8511602878570557
    6. 'heap' → logprob: -4.226160049438477
    7. ',' → logprob: -6.476160049438477
    8. ' queue' → logprob: -6.851160049438477
    9. '(queue' → logprob: -7.226160049438477
    10. ' =' → logprob: -7.476160049438477

Token 655: ' turns' (ID: 18304)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6581926941871643
    2. 'turn' → logprob: -0.9081926941871643
    3. '(turn' → logprob: -3.4081926345825195
    4. 'heap' → logprob: -4.4081926345825195
    5. ' turns' → logprob: -4.6581926345825195
    6. '   ' → logprob: -4.6581926345825195
    7. '(' → logprob: -5.1581926345825195
    8. 'the' → logprob: -6.5331926345825195
    9. ' (' → logprob: -6.7831926345825195
    10. '(N' → logprob: -7.0331926345825195

Token 656: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.02443406917154789
    2. 'used' → logprob: -3.8994340896606445
    3. '   ' → logprob: -5.8994340896606445
    4. 'import' → logprob: -7.8994340896606445
    5. 'heap' → logprob: -8.649434089660645
    6. 'push' → logprob: -9.024434089660645
    7. '_count' → logprob: -9.399434089660645
    8. 'count' → logprob: -9.524434089660645
    9. 'he' → logprob: -9.899434089660645
    10. '_' → logprob: -10.399434089660645

Token 657: ' to' (ID: 316)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.069629430770874
    2. '   ' → logprob: -1.194629430770874
    3. 'heap' → logprob: -1.944629430770874
    4. 'q' → logprob: -2.069629430770874
    5. 'pq' → logprob: -2.694629430770874
    6. '
' → logprob: -4.319629669189453
    7. 'que' → logprob: -5.819629669189453
    8. 'import' → logprob: -8.319629669189453
    9. 'Q' → logprob: -8.444629669189453
    10. '    
' → logprob: -8.944629669189453

Token 658: ' process' (ID: 2273)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.8602041006088257
    2. 'continue' → logprob: -1.4852041006088257
    3. 'process' → logprob: -1.6102041006088257
    4. 'import' → logprob: -2.4852042198181152
    5. 'expl' → logprob: -3.9852042198181152
    6. 'implement' → logprob: -3.9852042198181152
    7. 'perform' → logprob: -5.235204219818115
    8. 'find' → logprob: -5.485204219818115
    9. '   ' → logprob: -5.735204219818115
    10. '#' → logprob: -5.985204219818115

Token 659: ' states' (ID: 9407)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9537534713745117
    2. 'pq' → logprob: -0.9537534713745117
    3. 'q' → logprob: -2.4537534713745117
    4. 'queue' → logprob: -2.7037534713745117
    5. '   ' → logprob: -3.5787534713745117
    6. 'states' → logprob: -4.703753471374512
    7. '```' → logprob: -4.703753471374512
    8. 'state' → logprob: -5.078753471374512
    9. '(heap' → logprob: -5.453753471374512
    10. ' heap' → logprob: -5.703753471374512

Token 660: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025442643091082573
    2. 'pq' → logprob: -4.525442600250244
    3. 'heap' → logprob: -5.025442600250244
    4. '
' → logprob: -5.775442600250244
    5. 'q' → logprob: -6.900442600250244
    6. 'queue' → logprob: -7.150442600250244
    7. 'while' → logprob: -7.275442600250244
    8. 'import' → logprob: -7.525442600250244
    9. ' while' → logprob: -7.900442600250244
    10. ',' → logprob: -8.650443077087402

Token 661: ' lower' (ID: 6931)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.986640214920044
    2. 'he' → logprob: -1.611640214920044
    3. 'least' → logprob: -2.111640214920044
    4. 'sm' → logprob: -2.361640214920044
    5. 'lower' → logprob: -2.611640214920044
    6. 'turn' → logprob: -3.236640214920044
    7. 'minimal' → logprob: -3.486640214920044
    8. 'small' → logprob: -3.986640214920044
    9. 'visited' → logprob: -4.986639976501465
    10. 'minimum' → logprob: -5.361639976501465

Token 662: ' turns' (ID: 18304)
  Prédit: ' turns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.14452488720417023
    2. 'turn' → logprob: -2.0195248126983643
    3. ' used' → logprob: -7.519525051116943
    4. '   ' → logprob: -7.769525051116943
    5. ' turn' → logprob: -8.394524574279785
    6. 'used' → logprob: -8.394524574279785
    7. '_turn' → logprob: -8.394524574279785
    8. 'cost' → logprob: -9.769524574279785
    9. ' cost' → logprob: -10.269524574279785
    10. '```' → logprob: -10.769524574279785

Token 663: ' first' (ID: 1577)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.014641853980720043
    2. '   ' → logprob: -4.264641761779785
    3. 'used' → logprob: -8.389641761779785
    4. '_push' → logprob: -9.139641761779785
    5. 'push' → logprob: -9.514641761779785
    6. '_p' → logprob: -11.639641761779785
    7. 'Used' → logprob: -11.639641761779785
    8. '_cost' → logprob: -11.889641761779785
    9. '_put' → logprob: -11.889641761779785
    10. '
' → logprob: -12.139641761779785

Token 664: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20577757060527802
    2. '
' → logprob: -2.580777645111084
    3. 'pq' → logprob: -3.455777645111084
    4. 'queue' → logprob: -3.705777645111084
    5. 'q' → logprob: -4.205777645111084
    6. 'heap' → logprob: -4.330777645111084
    7. ' queue' → logprob: -4.955777645111084
    8. 'while' → logprob: -4.955777645111084
    9. ' while' → logprob: -5.955777645111084
    10. '    
' → logprob: -5.955777645111084

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00561541598290205
    2. 'pq' → logprob: -5.630615234375
    3. 'queue' → logprob: -6.880615234375
    4. 'heap' → logprob: -7.380615234375
    5. 'q' → logprob: -8.130615234375
    6. 'que' → logprob: -11.130615234375
    7. 'import' → logprob: -11.130615234375
    8. '    
' → logprob: -11.505615234375
    9. '
' → logprob: -11.505615234375
    10. 'dq' → logprob: -12.880615234375

Token 666: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7724303603172302
    2. 'pq' → logprob: -0.8974303603172302
    3. 'queue' → logprob: -3.022430419921875
    4. '   ' → logprob: -3.022430419921875
    5. 'hq' → logprob: -3.897430419921875
    6. 'q' → logprob: -4.897430419921875
    7. 'visited' → logprob: -6.397430419921875
    8. 'dist' → logprob: -6.772430419921875
    9. 'while' → logprob: -7.272430419921875
    10. 'start' → logprob: -7.647430419921875

Token 667: ' This' (ID: 1328)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.3432644307613373
    2. 'heap' → logprob: -1.8432644605636597
    3. 'queue' → logprob: -2.84326434135437
    4. 'q' → logprob: -3.34326434135437
    5. 'hq' → logprob: -3.59326434135437
    6. '   ' → logprob: -4.593264579772949
    7. 'que' → logprob: -7.218264579772949
    8. '
' → logprob: -9.09326457977295
    9. 'import' → logprob: -9.59326457977295
    10. 'h' → logprob: -10.09326457977295

Token 668: ' ensures' (ID: 30005)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5413494110107422
    2. ' ensures' → logprob: -1.9163494110107422
    3. ' will' → logprob: -2.666349411010742
    4. ')' → logprob: -2.666349411010742
    5. ' code' → logprob: -2.666349411010742
    6. ' approach' → logprob: -3.041349411010742
    7. ' allows' → logprob: -3.166349411010742
    8. '   ' → logprob: -3.416349411010742
    9. ' queue' → logprob: -3.541349411010742
    10. 'queue' → logprob: -3.666349411010742

Token 669: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5000672340393066
    2. 'correct' → logprob: -2.1250672340393066
    3. 'that' → logprob: -2.2500672340393066
    4. ' that' → logprob: -3.1250672340393066
    5. 'visited' → logprob: -3.3750672340393066
    6. ' correct' → logprob: -3.7500672340393066
    7. 'the' → logprob: -3.8750672340393066
    8. 'd' → logprob: -4.875067234039307
    9. 'he' → logprob: -5.125067234039307
    10. 'True' → logprob: -5.250067234039307

Token 670: ' we' (ID: 581)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.13731181621551514
    2. ' visited' → logprob: -2.8873119354248047
    3. '   ' → logprob: -3.8873119354248047
    4. ' turns' → logprob: -4.262311935424805
    5. 'turn' → logprob: -5.512311935424805
    6. 'not' → logprob: -5.637311935424805
    7. 'he' → logprob: -5.637311935424805
    8. 'd' → logprob: -5.637311935424805
    9. ' not' → logprob: -5.637311935424805
    10. '(' → logprob: -5.887311935424805

Token 671: ' visit' (ID: 4030)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1969419717788696
    2. 'have' → logprob: -1.6969419717788696
    3. 'pop' → logprob: -2.32194185256958
    4. 'reach' → logprob: -2.44694185256958
    5. '   ' → logprob: -2.82194185256958
    6. 'continue' → logprob: -2.94694185256958
    7. 'can' → logprob: -2.94694185256958
    8. 'visit' → logprob: -3.69694185256958
    9. 'visited' → logprob: -3.82194185256958
    10. ' find' → logprob: -4.07194185256958

Token 672: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1745305061340332
    2. '(x' → logprob: -1.2995305061340332
    3. '(goal' → logprob: -1.7995305061340332
    4. 'goal' → logprob: -2.924530506134033
    5. ' a' → logprob: -3.299530506134033
    6. '(' → logprob: -3.299530506134033
    7. 'visited' → logprob: -3.299530506134033
    8. 'the' → logprob: -3.924530506134033
    9. ' (' → logprob: -4.299530506134033
    10. '(nx' → logprob: -4.674530506134033

Token 673: ' cell' (ID: 4206)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1432063579559326
    2. '(x' → logprob: -1.3932063579559326
    3. 'state' → logprob: -1.7682063579559326
    4. ' state' → logprob: -2.5182063579559326
    5. ' cell' → logprob: -2.7682063579559326
    6. 'cell' → logprob: -3.7682063579559326
    7. '   ' → logprob: -3.7682063579559326
    8. 'x' → logprob: -4.393206596374512
    9. '
' → logprob: -4.518206596374512
    10. 'visited' → logprob: -4.893206596374512

Token 674: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8922362327575684
    2. '   ' → logprob: -1.2672362327575684
    3. 'with' → logprob: -2.1422362327575684
    4. ' with' → logprob: -2.2672362327575684
    5. ' again' → logprob: -3.7672362327575684
    6. 'again' → logprob: -3.7672362327575684
    7. 'next' → logprob: -5.017236232757568
    8. '(x' → logprob: -5.142236232757568
    9. 'for' → logprob: -5.142236232757568
    10. ' for' → logprob: -5.267236232757568

Token 675: ' higher' (ID: 7266)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.6796069145202637
    2. ' fewer' → logprob: -1.8046069145202637
    3. ' smaller' → logprob: -1.9296069145202637
    4. 'lower' → logprob: -2.1796069145202637
    5. 'a' → logprob: -3.4296069145202637
    6. 'less' → logprob: -4.304606914520264
    7. 'f' → logprob: -4.554606914520264
    8. 'better' → logprob: -5.179606914520264
    9. ' lower' → logprob: -6.179606914520264
    10. ' a' → logprob: -6.304606914520264

Token 676: ' turns' (ID: 18304)
  Prédit: ' turns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.1654195487499237
    2. '_turn' → logprob: -3.040419578552246
    3. 'turn' → logprob: -3.290419578552246
    4. '   ' → logprob: -3.540419578552246
    5. '_' → logprob: -5.165419578552246
    6. ' cost' → logprob: -5.290419578552246
    7. '```' → logprob: -5.665419578552246
    8. 'cost' → logprob: -5.665419578552246
    9. ' priority' → logprob: -5.790419578552246
    10. '_priority' → logprob: -6.165419578552246

Token 677: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0007855643052607775
    2. '   ' → logprob: -7.8757853507995605
    3. 'used' → logprob: -8.500785827636719
    4. '_' → logprob: -10.500785827636719
    5. '_allowed' → logprob: -10.500785827636719
    6. '_required' → logprob: -11.000785827636719
    7. ',' → logprob: -11.125785827636719
    8. '_needed' → logprob: -11.125785827636719
    9. '_count' → logprob: -11.375785827636719
    10. '_he' → logprob: -11.625785827636719

Token 678: ' later' (ID: 4849)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3541167080402374
    2. '   ' → logprob: -1.479116678237915
    3. 'he' → logprob: -3.604116678237915
    4. '):' → logprob: -4.854116916656494
    5. ' he' → logprob: -5.104116916656494
    6. ')' → logprob: -5.104116916656494
    7. ':' → logprob: -5.354116916656494
    8. '):
' → logprob: -5.479116916656494
    9. ':
' → logprob: -5.604116916656494
    10. ' and' → logprob: -5.979116916656494

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3134687542915344
    2. '   ' → logprob: -1.5634686946868896
    3. '):' → logprob: -3.6884686946868896
    4. ':' → logprob: -3.8134686946868896
    5. ')' → logprob: -5.563468933105469
    6. 'he' → logprob: -5.688468933105469
    7. ' he' → logprob: -6.563468933105469
    8. ':
' → logprob: -6.813468933105469
    9. '):
' → logprob: -7.063468933105469
    10. '),' → logprob: -7.438468933105469

Token 680: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8565981388092041
    2. ' continue' → logprob: -0.8565981388092041
    3. ' we' → logprob: -2.606598138809204
    4. 'continue' → logprob: -3.231598138809204
    5. ' he' → logprob: -3.606598138809204
    6. '       ' → logprob: -5.356597900390625
    7. 'he' → logprob: -6.231597900390625
    8. '    ' → logprob: -6.481597900390625
    9. ' you' → logprob: -7.481597900390625
    10. 'we' → logprob: -7.606597900390625

Token 681: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.102979376912117
    2. 'continue' → logprob: -2.6029794216156006
    3. '   ' → logprob: -4.2279791831970215
    4. ' can' → logprob: -5.1029791831970215
    5. ')' → logprob: -6.8529791831970215
    6. ' will' → logprob: -8.10297966003418
    7. 'can' → logprob: -8.35297966003418
    8. '	continue' → logprob: -8.47797966003418
    9. ' are' → logprob: -9.10297966003418
    10. ':' → logprob: -9.10297966003418

Token 682: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.029457585886120796
    2. 'skip' → logprob: -3.7794575691223145
    3. '   ' → logprob: -5.5294575691223145
    4. ' continue' → logprob: -6.2794575691223145
    5. 'ignore' → logprob: -9.029458045959473
    6. ' skip' → logprob: -9.404458045959473
    7. 'import' → logprob: -9.904458045959473
    8. '```' → logprob: -10.154458045959473
    9. 'discard' → logprob: -10.529458045959473
    10. '	continue' → logprob: -11.279458045959473

Token 683: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22161662578582764
    2. ')' → logprob: -1.8466166257858276
    3. ':' → logprob: -3.846616744995117
    4. '(heap' → logprob: -5.096616744995117
    5. '(' → logprob: -6.221616744995117
    6. '):' → logprob: -6.846616744995117
    7. '  ' → logprob: -6.846616744995117
    8. ',' → logprob: -7.096616744995117
    9. 'while' → logprob: -7.096616744995117
    10. 'he' → logprob: -7.346616744995117

Token 684: '   ' (ID: 271)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.66336989402771
    2. '   ' → logprob: -1.03836989402771
    3. 'heap' → logprob: -2.28836989402771
    4. 'queue' → logprob: -3.78836989402771
    5. 'q' → logprob: -5.538370132446289
    6. 'hq' → logprob: -7.038370132446289
    7. ' pq' → logprob: -7.538370132446289
    8. 'while' → logprob: -8.163370132446289
    9. ' heap' → logprob: -8.413370132446289
    10. ' queue' → logprob: -8.913370132446289

Token 685: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0640157461166382
    2. 'pq' → logprob: -1.0640157461166382
    3. 'heap' → logprob: -1.5640157461166382
    4. 'q' → logprob: -2.8140158653259277
    5. '   ' → logprob: -3.5640158653259277
    6. 'hq' → logprob: -4.689015865325928
    7. 'que' → logprob: -6.064015865325928
    8. 'start' → logprob: -7.939015865325928
    9. 'dq' → logprob: -8.56401538848877
    10. '    
' → logprob: -10.18901538848877

Token 686: ' visited' (ID: 18416)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.1773556470870972
    2. 'pq' → logprob: -1.3023556470870972
    3. 'q' → logprob: -1.8023556470870972
    4. 'queue' → logprob: -2.3023557662963867
    5. '   ' → logprob: -2.8023557662963867
    6. 'hq' → logprob: -3.1773557662963867
    7. 'que' → logprob: -3.9273557662963867
    8. 'dist' → logprob: -4.177355766296387
    9. 'visited' → logprob: -4.427355766296387
    10. 'import' → logprob: -5.927355766296387

Token 687: '[y' (ID: 34551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03213149309158325
    2. '=' → logprob: -3.5321314334869385
    3. '=[' → logprob: -7.032131671905518
    4. 'visited' → logprob: -7.157131671905518
    5. '=[[' → logprob: -7.907131671905518
    6. '   ' → logprob: -8.90713119506836
    7. '[y' → logprob: -10.40713119506836
    8. '[' → logprob: -10.53213119506836
    9. '[x' → logprob: -10.65713119506836
    10. '=[]' → logprob: -10.65713119506836

Token 688: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0021622790955007076
    2. ']' → logprob: -6.252162456512451
    3. ']=' → logprob: -8.752161979675293
    4. '[y' → logprob: -9.877161979675293
    5. '   ' → logprob: -12.002161979675293
    6. ' ][' → logprob: -12.127161979675293
    7. '[' → logprob: -12.252161979675293
    8. '=' → logprob: -12.502161979675293
    9. '=[' → logprob: -13.877161979675293
    10. '][]' → logprob: -14.877161979675293

Token 689: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.741137283621356e-05
    2. 'start' → logprob: -10.625057220458984
    3. '0' → logprob: -11.125057220458984
    4. ' x' → logprob: -12.125057220458984
    5. 'W' → logprob: -12.250057220458984
    6. '][' → logprob: -13.250057220458984
    7. '
' → logprob: -13.250057220458984
    8. ']' → logprob: -13.625057220458984
    9. 'visited' → logprob: -13.625057220458984
    10. 'w' → logprob: -14.875057220458984

Token 690: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04306473210453987
    2. '][' → logprob: -3.418064832687378
    3. ']=' → logprob: -4.918064594268799
    4. '   ' → logprob: -7.543064594268799
    5. ']=-' → logprob: -7.543064594268799
    6. ' =' → logprob: -8.293065071105957
    7. '=' → logprob: -8.418065071105957
    8. ')' → logprob: -8.668065071105957
    9. '[' → logprob: -9.168065071105957
    10. ' ]' → logprob: -9.918065071105957

Token 691: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43174585700035095
    2. '=' → logprob: -1.0567458868026733
    3. '   ' → logprob: -6.681746006011963
    4. '[' → logprob: -7.056746006011963
    5. '=[' → logprob: -7.431746006011963
    6. ']' → logprob: -9.556745529174805
    7. '[y' → logprob: -9.681745529174805
    8. ']=' → logprob: -10.056745529174805
    9. 'visited' → logprob: -10.556745529174805
    10. '    ' → logprob: -10.931745529174805

Token 692: ' minimal' (ID: 19957)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2126658856868744
    2. 'float' → logprob: -2.0876657962799072
    3. '10' → logprob: -3.4626657962799072
    4. 'N' → logprob: -3.4626657962799072
    5. 'int' → logprob: -5.712666034698486
    6. '100' → logprob: -7.462666034698486
    7. '1' → logprob: -7.837666034698486
    8. ' -' → logprob: -7.962666034698486
    9. 'sys' → logprob: -9.587665557861328
    10. ' float' → logprob: -10.087665557861328

Token 693: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.3899860680103302
    2. ' turns' → logprob: -1.1399860382080078
    3. 'visited' → logprob: -6.264986038208008
    4. '_turn' → logprob: -7.514986038208008
    5. '   ' → logprob: -8.264986038208008
    6. '```' → logprob: -9.764986038208008
    7. ' visited' → logprob: -9.889986038208008
    8. 'used' → logprob: -10.014986038208008
    9. 'turned' → logprob: -10.139986038208008
    10. '0' → logprob: -10.514986038208008

Token 694: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0006199848721735179
    2. 'used' → logprob: -7.625619888305664
    3. '   ' → logprob: -9.125619888305664
    4. '_required' → logprob: -12.000619888305664
    5. 'Used' → logprob: -12.125619888305664
    6. '_allowed' → logprob: -12.875619888305664
    7. '
' → logprob: -13.750619888305664
    8. '_needed' → logprob: -14.125619888305664
    9. '_USED' → logprob: -14.125619888305664
    10. '[' → logprob: -14.500619888305664

Token 695: ' reached' (ID: 15237)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17069178819656372
    2. '   ' → logprob: -1.920691728591919
    3. '=' → logprob: -5.045691967010498
    4. 'visited' → logprob: -6.795691967010498
    5. 'for' → logprob: -6.920691967010498
    6. '
' → logprob: -7.795691967010498
    7. ')' → logprob: -8.54569149017334
    8. ',' → logprob: -8.67069149017334
    9. '[y' → logprob: -9.04569149017334
    10. ']' → logprob: -9.04569149017334

Token 696: ' here' (ID: 2105)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6985195875167847
    2. 'for' → logprob: -1.4485195875167847
    3. '
' → logprob: -1.9485195875167847
    4. ' =' → logprob: -2.698519706726074
    5. '[y' → logprob: -3.198519706726074
    6. ' for' → logprob: -4.698519706726074
    7. 'visited' → logprob: -5.823519706726074
    8. '[start' → logprob: -6.698519706726074
    9. '[' → logprob: -6.823519706726074
    10. '=' → logprob: -7.323519706726074

Token 697: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23393380641937256
    2. 'visited' → logprob: -1.6089338064193726
    3. 'import' → logprob: -5.733933925628662
    4. '
' → logprob: -6.358933925628662
    5. 'dist' → logprob: -6.608933925628662
    6. ' =' → logprob: -6.858933925628662
    7. 'queue' → logprob: -8.233933448791504
    8. 'heap' → logprob: -8.358933448791504
    9. '=' → logprob: -8.733933448791504
    10. ' visited' → logprob: -9.108933448791504

Token 698: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.44805002212524414
    2. '   ' → logprob: -1.0730500221252441
    3. 'for' → logprob: -4.698050022125244
    4. '
' → logprob: -5.823050022125244
    5. 'dist' → logprob: -6.823050022125244
    6. 'queue' → logprob: -6.948050022125244
    7. 'import' → logprob: -7.073050022125244
    8. 'heap' → logprob: -7.198050022125244
    9. 'while' → logprob: -7.198050022125244
    10. ' visited' → logprob: -7.823050022125244

Token 699: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.2982705533504486
    2. '   ' → logprob: -1.548270583152771
    3. 'heap' → logprob: -4.2982707023620605
    4. 'import' → logprob: -4.6732707023620605
    5. 'pq' → logprob: -4.9232707023620605
    6. 'dist' → logprob: -5.2982707023620605
    7. 'queue' → logprob: -5.4232707023620605
    8. 'q' → logprob: -6.5482707023620605
    9. 'he' → logprob: -6.9232707023620605
    10. 'hq' → logprob: -7.4232707023620605

Token 700: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09507495164871216
    2. '=' → logprob: -2.4700748920440674
    3. '[y' → logprob: -5.2200751304626465
    4. '=[' → logprob: -7.5950751304626465
    5. '   ' → logprob: -8.845074653625488
    6. '[' → logprob: -10.095074653625488
    7. '=[[' → logprob: -11.720074653625488
    8. ' =[' → logprob: -12.470074653625488
    9. '```' → logprob: -13.595074653625488
    10. '[v' → logprob: -13.595074653625488

Token 701: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2660719156265259
    2. '[[' → logprob: -1.5160719156265259
    3. ' [[' → logprob: -4.266071796417236
    4. '[-' → logprob: -12.641072273254395
    5. '   ' → logprob: -13.141072273254395
    6. ' [' → logprob: -14.266072273254395
    7. '[['' → logprob: -14.516072273254395
    8. ' ' → logprob: -15.516072273254395
    9. '  ' → logprob: -17.391071319580078
    10. '([[' → logprob: -18.016071319580078

Token 702: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19711074233055115
    2. 'float' → logprob: -2.197110652923584
    3. '10' → logprob: -2.697110652923584
    4. 'N' → logprob: -8.947111129760742
    5. 'int' → logprob: -9.197111129760742
    6. '100' → logprob: -9.322111129760742
    7. 'sys' → logprob: -10.572111129760742
    8. 'None' → logprob: -11.197111129760742
    9. '1' → logprob: -11.822111129760742
    10. ' -' → logprob: -12.447111129760742

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -15.125000953674316
    3. '2' → logprob: -15.375000953674316
    4. 'int' → logprob: -16.25
    5. ' ' → logprob: -16.375
    6. '10' → logprob: -16.5
    7. 'float' → logprob: -16.75
    8. '-' → logprob: -17.375
    9. 'sys' → logprob: -17.625
    10. '100' → logprob: -17.75

Token 704: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.019029531627893448
    2. ' for' → logprob: -4.64402961730957
    3. 'for' → logprob: -5.26902961730957
    4. ']*(' → logprob: -5.64402961730957
    5. ']' → logprob: -7.76902961730957
    6. '   ' → logprob: -9.14402961730957
    7. '	for' → logprob: -11.89402961730957
    8. ']+' → logprob: -12.51902961730957
    9. ' ]' → logprob: -13.26902961730957
    10. '*' → logprob: -14.76902961730957

Token 705: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.7491250875755213e-05
    2. ' W' → logprob: -11.125027656555176
    3. '(W' → logprob: -11.625027656555176
    4. '   ' → logprob: -12.625027656555176
    5. '
' → logprob: -15.875027656555176
    6. '       ' → logprob: -16.62502670288086
    7. '           ' → logprob: -16.87502670288086
    8. '	W' → logprob: -17.00002670288086
    9. ' ' → logprob: -17.25002670288086
    10. '(' → logprob: -17.50002670288086

Token 706: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16025803983211517
    2. 'for' → logprob: -1.9102580547332764
    3. '   ' → logprob: -10.660258293151855
    4. ')' → logprob: -12.035258293151855
    5. '	for' → logprob: -12.785258293151855
    6. ']' → logprob: -13.910258293151855
    7. '       ' → logprob: -15.410258293151855
    8. ' ' → logprob: -15.410258293151855
    9. '    ' → logprob: -16.28525733947754
    10. '```' → logprob: -16.41025733947754

Token 707: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21733692288398743
    2. 'range' → logprob: -1.717336893081665
    3. ' in' → logprob: -4.717337131500244
    4. 'in' → logprob: -5.342337131500244
    5. '_' → logprob: -6.717337131500244
    6. '_range' → logprob: -7.842337131500244
    7. '0' → logprob: -8.967336654663086
    8. '(range' → logprob: -9.217336654663086
    9. ' _' → logprob: -9.217336654663086
    10. '<|end|>' → logprob: -10.592336654663086

Token 708: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -16.500335693359375
    4. '   ' → logprob: -20.375335693359375
    5. '	range' → logprob: -21.125335693359375
    6. '    ' → logprob: -22.000335693359375
    7. '
' → logprob: -22.375335693359375
    8. '     ' → logprob: -23.125335693359375
    9. '_range' → logprob: -23.250335693359375
    10. '       ' → logprob: -23.250335693359375

Token 709: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '(range' → logprob: -16.014163970947266
    4. 'H' → logprob: -18.139163970947266
    5. '   ' → logprob: -20.514163970947266
    6. '(H' → logprob: -20.764163970947266
    7. 'Range' → logprob: -20.889163970947266
    8. '	range' → logprob: -21.264163970947266
    9. '_range' → logprob: -21.639163970947266
    10. '.range' → logprob: -22.514163970947266

Token 710: '(H' (ID: 20904)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009491506032645702
    2. ' range' → logprob: -5.259491443634033
    3. 'H' → logprob: -5.509491443634033
    4. '(H' → logprob: -8.634491920471191
    5. 'W' → logprob: -10.884491920471191
    6. 'Range' → logprob: -13.509491920471191
    7. '   ' → logprob: -13.759491920471191
    8. 'x' → logprob: -15.259491920471191
    9. '(W' → logprob: -15.384491920471191
    10. ' H' → logprob: -15.509491920471191

Token 711: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.20829932391643524
    2. ']' → logprob: -1.7082992792129517
    3. ')' → logprob: -5.083299160003662
    4. '])' → logprob: -7.958299160003662
    5. '   ' → logprob: -8.45829963684082
    6. ' ]' → logprob: -9.58329963684082
    7. ' )' → logprob: -11.20829963684082
    8. ']
' → logprob: -12.33329963684082
    9. '])]' → logprob: -12.45829963684082
    10. ')]
' → logprob: -12.58329963684082

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1585739701986313
    2. 'queue' → logprob: -2.158573865890503
    3. 'pq' → logprob: -3.908573865890503
    4. 'q' → logprob: -4.658574104309082
    5. 'dq' → logprob: -7.408574104309082
    6. 'heap' → logprob: -7.658574104309082
    7. '```' → logprob: -8.283574104309082
    8. 'que' → logprob: -8.908574104309082
    9. 'Q' → logprob: -10.283574104309082
    10. '    
' → logprob: -10.783574104309082

Token 713: ' h' (ID: 312)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9109994769096375
    2. 'pq' → logprob: -0.9109994769096375
    3. 'queue' → logprob: -1.9109995365142822
    4. 'hq' → logprob: -3.6609995365142822
    5. 'heap' → logprob: -4.160999298095703
    6. 'que' → logprob: -5.160999298095703
    7. 'dq' → logprob: -8.160999298095703
    8. 'start' → logprob: -8.160999298095703
    9. 'Q' → logprob: -9.160999298095703
    10. '   ' → logprob: -9.535999298095703

Token 714: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.017584946006536484
    2. ' =' → logprob: -4.267584800720215
    3. '=' → logprob: -6.392584800720215
    4. 'q' → logprob: -6.642584800720215
    5. '   ' → logprob: -8.642584800720215
    6. 'ead' → logprob: -9.142584800720215
    7. 'eat' → logprob: -10.517584800720215
    8. ',' → logprob: -10.642584800720215
    9. '=[]' → logprob: -11.017584800720215
    10. 'p' → logprob: -11.142584800720215

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29485762119293213
    2. ' =' → logprob: -1.5448576211929321
    3. '=[]' → logprob: -3.5448575019836426
    4. '.' → logprob: -5.294857501983643
    5. '.append' → logprob: -5.669857501983643
    6. '.he' → logprob: -6.169857501983643
    7. 'he' → logprob: -7.294857501983643
    8. '.push' → logprob: -7.419857501983643
    9. ')' → logprob: -7.544857501983643
    10. '   ' → logprob: -8.4198579788208

Token 716: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.062136631458997726
    2. '[]' → logprob: -2.812136650085449
    3. '[]
' → logprob: -9.31213665008545
    4. ' [(' → logprob: -9.56213665008545
    5. ' []' → logprob: -11.81213665008545
    6. '[]

' → logprob: -14.06213665008545
    7. '[],' → logprob: -16.562135696411133
    8. '[](' → logprob: -17.312135696411133
    9. '[]}' → logprob: -17.437135696411133
    10. '[' → logprob: -18.062135696411133

Token 717: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0445784367620945
    2. '   ' → logprob: -3.2945785522460938
    3. ' he' → logprob: -5.044578552246094
    4. '_he' → logprob: -10.544578552246094
    5. ',' → logprob: -11.044578552246094
    6. '.he' → logprob: -11.544578552246094
    7. ')' → logprob: -12.294578552246094
    8. 'He' → logprob: -12.544578552246094
    9. '```' → logprob: -13.419578552246094
    10. '<|end|>' → logprob: -13.419578552246094

Token 718: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -9.686778503237292e-05
    2. ' he' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. '```' → logprob: -16.375097274780273
    5. 'heap' → logprob: -17.625097274780273
    6. '
' → logprob: -17.750097274780273
    7. '    
' → logprob: -19.250097274780273
    8. '_he' → logprob: -19.375097274780273
    9. 'h' → logprob: -19.750097274780273
    10. ')' → logprob: -19.750097274780273

Token 719: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0002387018030276522
    2. 'ap' → logprob: -8.375238418579102
    3. '```' → logprob: -13.000238418579102
    4. 'push' → logprob: -13.375238418579102
    5. 'pp' → logprob: -13.500238418579102
    6. 'a' → logprob: -13.500238418579102
    7. 'append' → logprob: -14.500238418579102
    8. 'appen' → logprob: -15.375238418579102
    9. 'he' → logprob: -15.500238418579102
    10. '   ' → logprob: -15.750238418579102

Token 720: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.0206720617134124e-05
    2. 'push' → logprob: -11.50001049041748
    3. 'USH' → logprob: -18.875009536743164
    4. 'u' → logprob: -19.125009536743164
    5. '```' → logprob: -19.875009536743164
    6. 'sh' → logprob: -19.875009536743164
    7. 'ut' → logprob: -20.125009536743164
    8. '.push' → logprob: -20.375009536743164
    9. 'op' → logprob: -20.500009536743164
    10. 'Push' → logprob: -20.625009536743164

Token 721: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.0280383548888494e-06
    2. '(q' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.250001907348633
    4. '(' → logprob: -17.125001907348633
    5. '```' → logprob: -19.000001907348633
    6. 'h' → logprob: -19.125001907348633
    7. 'hq' → logprob: -19.375001907348633
    8. '((' → logprob: -19.625001907348633
    9. '(s' → logprob: -20.375001907348633
    10. '(
' → logprob: -20.625001907348633

Token 722: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0012091610115021467
    2. '(q' → logprob: -7.376209259033203
    3. '(h' → logprob: -7.501209259033203
    4. ',q' → logprob: -12.001209259033203
    5. '?q' → logprob: -12.376209259033203
    6. '[q' → logprob: -12.501209259033203
    7. ' q' → logprob: -12.626209259033203
    8. 'Q' → logprob: -12.626209259033203
    9. ')' → logprob: -13.251209259033203
    10. 'vq' → logprob: -13.376209259033203

Token 723: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08564133197069168
    2. '(' → logprob: -2.585641384124756
    3. ',' → logprob: -5.210641384124756
    4. '(h' → logprob: -6.960641384124756
    5. ')' → logprob: -9.210640907287598
    6. ' (' → logprob: -9.335640907287598
    7. ',(' → logprob: -10.085640907287598
    8. '   ' → logprob: -10.460640907287598
    9. ' ((' → logprob: -11.085640907287598
    10. ')((' → logprob: -11.460640907287598

Token 724: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10029153525829315
    2. '(start' → logprob: -2.3502914905548096
    3. ' (' → logprob: -9.47529125213623
    4. '((' → logprob: -13.10029125213623
    5. '(Start' → logprob: -13.10029125213623
    6. '0' → logprob: -13.35029125213623
    7. '   ' → logprob: -14.10029125213623
    8. '[start' → logprob: -14.47529125213623
    9. ' ' → logprob: -15.10029125213623
    10. ')' → logprob: -15.47529125213623

Token 725: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.25
    4. '(' → logprob: -18.75
    5. '۰' → logprob: -19.125
    6. ')' → logprob: -19.5
    7. '```' → logprob: -19.625
    8. '000' → logprob: -20.0625
    9. '1' → logprob: -20.625
    10. '[' → logprob: -20.875

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0791071206331253
    2. ',start' → logprob: -2.5791070461273193
    3. 'start' → logprob: -8.579107284545898
    4. ' ,' → logprob: -10.954107284545898
    5. ',(' → logprob: -12.204107284545898
    6. '(start' → logprob: -13.204107284545898
    7. ' start' → logprob: -13.579107284545898
    8. '0' → logprob: -14.204107284545898
    9. '[start' → logprob: -14.454107284545898
    10. ',
' → logprob: -14.454107284545898

Token 727: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0006818148540332913
    2. ')' → logprob: -7.3756818771362305
    3. ' start' → logprob: -10.00068187713623
    4. ')+' → logprob: -12.50068187713623
    5. '*' → logprob: -12.75068187713623
    6. ')*' → logprob: -13.37568187713623
    7. '[start' → logprob: -15.00068187713623
    8. '0' → logprob: -15.25068187713623
    9. '(start' → logprob: -15.50068187713623
    10. '```' → logprob: -15.75068187713623

Token 728: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -14.12500286102295
    3. '```' → logprob: -14.50000286102295
    4. ')' → logprob: -14.75000286102295
    5. '[
' → logprob: -15.00000286102295
    6. 'x' → logprob: -15.50000286102295
    7. ' [' → logprob: -15.62500286102295
    8. '(' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.375001907348633
    10. '))' → logprob: -17.625001907348633

Token 729: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.250001907348633
    3. '1' → logprob: -16.000001907348633
    4. '```' → logprob: -16.000001907348633
    5. '
' → logprob: -16.125001907348633
    6. '[' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '۰' → logprob: -16.812501907348633
    9. '٠' → logprob: -18.125001907348633
    10. '
' → logprob: -18.437501907348633

Token 730: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006503747310489416
    2. ',start' → logprob: -5.131503582000732
    3. ' ,' → logprob: -7.506503582000732
    4. '),' → logprob: -11.38150405883789
    5. ',h' → logprob: -13.13150405883789
    6. ')' → logprob: -13.13150405883789
    7. 'start' → logprob: -13.25650405883789
    8. ',end' → logprob: -13.38150405883789
    9. '],' → logprob: -13.63150405883789
    10. '
' → logprob: -14.00650405883789

Token 731: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.547789674485102e-05
    2. ' start' → logprob: -10.250035285949707
    3. '[start' → logprob: -20.875036239624023
    4. '   ' → logprob: -21.375036239624023
    5. '	start' → logprob: -22.000036239624023
    6. '(start' → logprob: -22.125036239624023
    7. '0' → logprob: -22.750036239624023
    8. 'Start' → logprob: -23.375036239624023
    9. '```' → logprob: -23.500036239624023
    10. '
' → logprob: -24.250036239624023

Token 732: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.274932143744081e-05
    2. ',' → logprob: -10.250042915344238
    3. '[start' → logprob: -13.125042915344238
    4. '),' → logprob: -13.875042915344238
    5. ')' → logprob: -14.250042915344238
    6. '][' → logprob: -14.750042915344238
    7. '0' → logprob: -14.875042915344238
    8. '[
' → logprob: -15.000042915344238
    9. ',start' → logprob: -15.125042915344238
    10. ')][' → logprob: -15.125042915344238

Token 733: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '۰' → logprob: -16.0
    3. '```' → logprob: -16.125
    4. ' ' → logprob: -17.875
    5. '[' → logprob: -17.875
    6. '
' → logprob: -18.625
    7. '   ' → logprob: -18.875
    8. '٠' → logprob: -19.25
    9. 'x' → logprob: -19.5625
    10. '०' → logprob: -19.625

Token 734: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006213170010596514
    2. ',' → logprob: -5.256213188171387
    3. '))
' → logprob: -7.506213188171387
    4. ')))' → logprob: -8.006213188171387
    5. ')' → logprob: -10.006213188171387
    6. ' ))' → logprob: -10.131213188171387
    7. '   ' → logprob: -12.881213188171387
    8. ' ,' → logprob: -13.256213188171387
    9. '))

' → logprob: -13.381213188171387
    10. '0' → logprob: -13.631213188171387

Token 735: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.018779201433062553
    2. '   ' → logprob: -4.643779277801514
    3. ')' → logprob: -5.393779277801514
    4. '
' → logprob: -6.018779277801514
    5. ' while' → logprob: -6.393779277801514
    6. '    
' → logprob: -9.643778800964355
    7. '```' → logprob: -9.643778800964355
    8. ')
' → logprob: -9.768778800964355
    9. 'visited' → logprob: -10.143778800964355
    10. '<|end|>' → logprob: -10.143778800964355

Token 736: ' turns' (ID: 18304)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0039023153949528933
    2. ' ' → logprob: -6.753902435302734
    3. 'turn' → logprob: -6.753902435302734
    4. ' turns' → logprob: -7.003902435302734
    5. '#' → logprob: -9.003902435302734
    6. '(' → logprob: -9.003902435302734
    7. '
' → logprob: -9.128902435302734
    8. 'visited' → logprob: -9.753902435302734
    9. '
' → logprob: -10.253902435302734
    10. ')' → logprob: -10.316402435302734

Token 737: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.000309840717818588
    2. 'used' → logprob: -8.125309944152832
    3. ',' → logprob: -12.125309944152832
    4. '   ' → logprob: -12.500309944152832
    5. 'Used' → logprob: -13.875309944152832
    6. '_USED' → logprob: -14.125309944152832
    7. 's' → logprob: -14.625309944152832
    8. ')' → logprob: -14.625309944152832
    9. '```' → logprob: -14.750309944152832
    10. '_use' → logprob: -15.000309944152832

Token 738: ',y' (ID: 16103)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16427244246006012
    2. '<|end|>' → logprob: -2.2892725467681885
    3. ')' → logprob: -3.4142725467681885
    4. 'while' → logprob: -4.789272308349609
    5. '   ' → logprob: -5.414272308349609
    6. '<|end|>' → logprob: -6.164272308349609
    7. ',' → logprob: -7.164272308349609
    8. ' while' → logprob: -7.539272308349609
    9. ')
' → logprob: -7.789272308349609
    10. '
' → logprob: -8.53927230834961

Token 739: ',x' (ID: 29748)
  Prédit: ',start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.6335561871528625
    2. ',' → logprob: -0.8835561871528625
    3. ',x' → logprob: -2.8835561275482178
    4. ' ,' → logprob: -11.633556365966797
    5. ',X' → logprob: -11.633556365966797
    6. ',end' → logprob: -11.758556365966797
    7. 'start' → logprob: -12.008556365966797
    8. ',s' → logprob: -12.508556365966797
    9. ',input' → logprob: -13.258556365966797
    10. ',len' → logprob: -13.383556365966797

Token 740: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3663170635700226
    2. '
' → logprob: -1.2413170337677002
    3. '   ' → logprob: -4.116317272186279
    4. ' while' → logprob: -7.866317272186279
    5. ')
' → logprob: -8.116316795349121
    6. '    
' → logprob: -8.116316795349121
    7. ')' → logprob: -8.116316795349121
    8. 'visited' → logprob: -10.241316795349121
    9. '```' → logprob: -10.366316795349121
    10. '
' → logprob: -10.866316795349121

Token 741: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00842414889484644
    2. '   ' → logprob: -5.133424282073975
    3. '```' → logprob: -6.383424282073975
    4. ' while' → logprob: -7.383424282073975
    5. 'visited' → logprob: -9.008423805236816
    6. '``' → logprob: -10.508423805236816
    7. '	while' → logprob: -11.008423805236816
    8. 'While' → logprob: -12.258423805236816
    9. ')' → logprob: -12.258423805236816
    10. '    
' → logprob: -12.758423805236816

Token 742: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00017863049288280308
    2. 'found' → logprob: -9.625178337097168
    3. 'res' → logprob: -9.875178337097168
    4. '```' → logprob: -11.000178337097168
    5. 'answer' → logprob: -11.375178337097168
    6. '   ' → logprob: -11.500178337097168
    7. 'result' → logprob: -11.750178337097168
    8. ' while' → logprob: -12.125178337097168
    9. 'ans' → logprob: -12.250178337097168
    10. 'visited' (adapté à ' visited') → logprob: -12.625178337097168

Token 743: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.016151905059814453
    2. '[' → logprob: -4.1411519050598145
    3. '[h' → logprob: -9.516151428222656
    4. 'start' → logprob: -10.766151428222656
    5. '][' → logprob: -12.266151428222656
    6. '[end' → logprob: -12.891151428222656
    7. '[input' → logprob: -13.016151428222656
    8. '=' → logprob: -13.141151428222656
    9. '[s' → logprob: -13.516151428222656
    10. '[y' → logprob: -13.641151428222656

Token 744: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875571544806007e-05
    2. '][' → logprob: -11.500011444091797
    3. 'y' → logprob: -13.750011444091797
    4. ']' → logprob: -15.625011444091797
    5. '```' → logprob: -15.750011444091797
    6. ' [' → logprob: -17.250011444091797
    7. '1' → logprob: -17.625011444091797
    8. '
' → logprob: -17.750011444091797
    9. '   ' → logprob: -18.000011444091797
    10. '[y' → logprob: -18.000011444091797

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '0' → logprob: -13.875001907348633
    3. '[' → logprob: -14.375001907348633
    4. 'y' → logprob: -14.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. '
' → logprob: -16.125001907348633
    7. ' ' → logprob: -16.750001907348633
    8. ']' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '``' → logprob: -19.375001907348633

Token 746: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006359508261084557
    2. '[start' → logprob: -7.375636100769043
    3. ' ][' → logprob: -12.250636100769043
    4. '[' → logprob: -13.500636100769043
    5. 'start' → logprob: -14.000636100769043
    6. ']' → logprob: -14.000636100769043
    7. '   ' → logprob: -14.375636100769043
    8. ']][' → logprob: -15.375636100769043
    9. '(start' → logprob: -16.000635147094727
    10. ')][' → logprob: -16.250635147094727

Token 747: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -14.875
    3. '[start' → logprob: -18.375
    4. '(start' → logprob: -20.375
    5. '0' → logprob: -21.625
    6. '	start' → logprob: -22.875
    7. ':start' → logprob: -23.0
    8. '   ' → logprob: -23.125
    9. '
' → logprob: -23.875
    10. '=start' → logprob: -24.0

Token 748: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. '[' → logprob: -8.500204086303711
    3. '```' → logprob: -16.37520408630371
    4. '   ' → logprob: -16.50020408630371
    5. '(' → logprob: -17.25020408630371
    6. '
' → logprob: -17.62520408630371
    7. ' ' → logprob: -17.62520408630371
    8. ']' → logprob: -18.00020408630371
    9. '``' → logprob: -19.37520408630371
    10. 'start' → logprob: -19.62520408630371

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.375
    3. '۰' → logprob: -16.5
    4. ' ' → logprob: -16.625
    5. '
' → logprob: -17.3125
    6. '[' → logprob: -17.4375
    7. ']' → logprob: -18.625
    8. '   ' → logprob: -18.875
    9. '٠' → logprob: -19.0
    10. 'start' → logprob: -19.0625

Token 750: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002678920282050967
    2. ']=' → logprob: -8.25026798248291
    3. ' ]' → logprob: -12.00026798248291
    4. '`]' → logprob: -16.000267028808594
    5. '0' → logprob: -16.125267028808594
    6. ']]' → logprob: -16.375267028808594
    7. ')]' → logprob: -17.375267028808594
    8. ']==' → logprob: -17.625267028808594
    9. '=' → logprob: -18.125267028808594
    10. '']' → logprob: -18.750267028808594

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001584850688232109
    2. ' =' → logprob: -8.750158309936523
    3. ']=' → logprob: -18.500158309936523
    4. ')=' → logprob: -18.625158309936523
    5. '=
' → logprob: -19.375158309936523
    6. '0' → logprob: -20.375158309936523
    7. '=

' → logprob: -20.750158309936523
    8. '}=' → logprob: -21.125158309936523
    9. '＝' → logprob: -21.500158309936523
    10. '=}' → logprob: -21.625158309936523

Token 752: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '۰' → logprob: -21.5
    4. '000' → logprob: -22.375
    5. '   ' → logprob: -22.625
    6. '00' → logprob: -22.875
    7. '０' → logprob: -23.75
    8. '```' → logprob: -24.375
    9. '০' → logprob: -25.0
    10. '٠' → logprob: -25.625

Token 753: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. '000' → logprob: -21.125
    6. '00' → logprob: -21.5
    7. '０' → logprob: -22.75
    8. '০' → logprob: -23.125
    9. '```' → logprob: -23.375
    10. '٠' → logprob: -24.375

Token 754: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006185544189065695
    2. '
' → logprob: -7.8756184577941895
    3. '```' → logprob: -9.000618934631348
    4. '   ' → logprob: -9.750618934631348
    5. ' while' → logprob: -10.125618934631348
    6. 'While' → logprob: -12.000618934631348
    7. '    
' → logprob: -12.625618934631348
    8. '	while' → logprob: -13.000618934631348
    9. '<|end|>' → logprob: -13.125618934631348
    10. '``' → logprob: -13.375618934631348

Token 755: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03839419409632683
    2. '```' → logprob: -3.4133942127227783
    3. '   ' → logprob: -5.788393974304199
    4. ' while' → logprob: -6.538393974304199
    5. '``' → logprob: -9.0383939743042
    6. 'While' → logprob: -9.5383939743042
    7. '	while' → logprob: -10.6633939743042
    8. '
' → logprob: -12.1633939743042
    9. '    
' → logprob: -12.4133939743042
    10. '<|end|>' → logprob: -12.6633939743042

Token 756: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.62500286102295
    3. ' while' → logprob: -14.00000286102295
    4. '```' → logprob: -14.50000286102295
    5. 'found' → logprob: -14.50000286102295
    6. 'answer' → logprob: -16.500003814697266
    7. 'result' → logprob: -16.750003814697266
    8. '``' → logprob: -17.375003814697266
    9. 'While' → logprob: -18.125003814697266
    10. '    
' → logprob: -18.250003814697266

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696129083633423
    2. '=' → logprob: -2.1269612312316895
    3. '=-' → logprob: -10.501961708068848
    4. '   ' → logprob: -12.376961708068848
    5. '=None' → logprob: -13.626961708068848
    6. ',' → logprob: -15.876961708068848
    7. ')' → logprob: -17.00196075439453
    8. '=False' → logprob: -17.37696075439453
    9. ' ' → logprob: -17.50196075439453
    10. '＝' → logprob: -17.50196075439453

Token 758: ' False' (ID: 7983)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -7.886803359724581e-05
    2. 'float' → logprob: -10.000079154968262
    3. 'None' → logprob: -10.875079154968262
    4. ' -' → logprob: -11.375079154968262
    5. '10' → logprob: -13.250079154968262
    6. '0' → logprob: -15.000079154968262
    7. '-f' → logprob: -15.250079154968262
    8. 'sys' → logprob: -15.375079154968262
    9. '-s' → logprob: -16.125078201293945
    10. 'int' → logprob: -16.125078201293945

Token 759: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18171966075897217
    2. '   ' → logprob: -1.9317196607589722
    3. '
' → logprob: -3.9317197799682617
    4. ' while' → logprob: -7.306719779968262
    5. '```' → logprob: -7.431719779968262
    6. '    
' → logprob: -8.056719779968262
    7. '	while' → logprob: -10.306719779968262
    8. 'While' → logprob: -10.931719779968262
    9. '``' → logprob: -11.556719779968262
    10. '  
' → logprob: -11.931719779968262

Token 760: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32118523120880127
    2. '   ' → logprob: -1.6961852312088013
    3. '```' → logprob: -2.8211851119995117
    4. '
' → logprob: -3.6961851119995117
    5. ' while' → logprob: -5.196185111999512
    6. '``' → logprob: -7.196185111999512
    7. '    
' → logprob: -7.946185111999512
    8. 'While' → logprob: -8.821185111999512
    9. '	while' → logprob: -9.571185111999512
    10. '  
' → logprob: -9.696185111999512

Token 761: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.2471589798224159e-05
    2. ' while' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.875012397766113
    4. '```' → logprob: -14.000012397766113
    5. '
' → logprob: -14.500012397766113
    6. 'While' → logprob: -17.25001335144043
    7. '    
' → logprob: -17.62501335144043
    8. 'from' → logprob: -18.00001335144043
    9. '``' → logprob: -18.00001335144043
    10. '	while' → logprob: -20.00001335144043

Token 762: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.22095997631549835
    2. 'hq' → logprob: -1.720960021018982
    3. 'h' → logprob: -4.0959601402282715
    4. 'len' → logprob: -6.2209601402282715
    5. '(h' → logprob: -7.5959601402282715
    6. '   ' → logprob: -9.220959663391113
    7. ' len' → logprob: -9.470959663391113
    8. '	h' → logprob: -10.970959663391113
    9. 'True' → logprob: -11.095959663391113
    10. ' True' → logprob: -12.845959663391113

Token 763: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0028258003294467926
    2. '   ' → logprob: -6.377825736999512
    3. '[' → logprob: -7.502825736999512
    4. '       ' → logprob: -9.252825736999512
    5. 'Q' → logprob: -9.877825736999512
    6. '['' → logprob: -9.877825736999512
    7. '```' → logprob: -10.002825736999512
    8. ':
' → logprob: -10.127825736999512
    9. 'e' → logprob: -10.502825736999512
    10. '[
' → logprob: -10.627825736999512

Token 764: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22132566571235657
    2. ':
' → logprob: -1.7213256359100342
    3. ' and' → logprob: -4.221325874328613
    4. 'and' → logprob: -6.596325874328613
    5. ',' → logprob: -6.596325874328613
    6. '[' → logprob: -6.721325874328613
    7. '):
' → logprob: -8.096325874328613
    8. '!=' → logprob: -8.096325874328613
    9. '   ' → logprob: -8.721325874328613
    10. '==' → logprob: -9.221325874328613

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008388208225369453
    2. ',' → logprob: -6.008388042449951
    3. '```' → logprob: -6.008388042449951
    4. '0' → logprob: -6.258388042449951
    5. ' turns' → logprob: -8.00838851928711
    6. '        
' → logprob: -8.00838851928711
    7. '   ' → logprob: -8.50838851928711
    8. '(turn' → logprob: -9.00838851928711
    9. '     ' → logprob: -9.38338851928711
    10. '(' → logprob: -9.75838851928711

Token 766: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.016300508752465248
    2. '   ' → logprob: -4.266300678253174
    3. ' turns' → logprob: -6.891300678253174
    4. 't' → logprob: -7.266300678253174
    5. 'cur' → logprob: -9.391300201416016
    6. '
' → logprob: -9.391300201416016
    7. '```' → logprob: -9.641300201416016
    8. '(turn' → logprob: -9.766300201416016
    9. 'tu' → logprob: -10.141300201416016
    10. '    
' → logprob: -10.266300201416016

Token 767: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00012642296496778727
    2. ',' → logprob: -9.750126838684082
    3. '   ' → logprob: -10.250126838684082
    4. ',_' → logprob: -11.125126838684082
    5. 'used' → logprob: -11.750126838684082
    6. '       ' → logprob: -13.000126838684082
    7. '_,' → logprob: -13.375126838684082
    8. ' _' → logprob: -13.750126838684082
    9. '_USED' → logprob: -13.875126838684082
    10. 'Used' → logprob: -14.375126838684082

Token 768: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038766972720623016
    2. ',y' → logprob: -3.288766860961914
    3. ',x' → logprob: -7.413766860961914
    4. ',n' → logprob: -10.163766860961914
    5. ' ,' → logprob: -10.288766860961914
    6. ',current' → logprob: -11.288766860961914
    7. ',next' → logprob: -11.663766860961914
    8. ',t' → logprob: -12.288766860961914
    9. ',
' → logprob: -12.663766860961914
    10. ',node' → logprob: -13.038766860961914

Token 769: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.0125812329351902
    2. ',' → logprob: -4.3875813484191895
    3. ' ,' → logprob: -9.887580871582031
    4. 'x' → logprob: -10.887580871582031
    5. ',
' → logprob: -14.387580871582031
    6. '_,' → logprob: -14.637580871582031
    7. ',c' → logprob: -16.01258087158203
    8. ' x' → logprob: -16.38758087158203
    9. ',int' → logprob: -16.38758087158203
    10. '=' → logprob: -16.51258087158203

Token 770: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.838032066822052
    2. ',' → logprob: -0.963032066822052
    3. '=' → logprob: -1.7130320072174072
    4. ')' → logprob: -5.963032245635986
    5. '   ' → logprob: -6.588032245635986
    6. ')=' → logprob: -7.463032245635986
    7. ' ,' → logprob: -8.213031768798828
    8. '       ' → logprob: -8.713031768798828
    9. '    ' → logprob: -10.088031768798828
    10. ',u' → logprob: -10.213031768798828

Token 771: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0013377433642745018
    2. ' he' → logprob: -6.62633752822876
    3. '   ' → logprob: -11.376338005065918
    4. 'heap' → logprob: -15.501338005065918
    5. ' ' → logprob: -15.876338005065918
    6. '
' → logprob: -16.8763370513916
    7. '  ' → logprob: -17.0013370513916
    8. 'h' → logprob: -17.7513370513916
    9. '    ' → logprob: -18.0013370513916
    10. '       ' → logprob: -18.2513370513916

Token 772: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.696889623621246e-06
    2. 'ap' → logprob: -13.50000286102295
    3. 'pp' → logprob: -13.75000286102295
    4. 'q' → logprob: -17.125001907348633
    5. '[' → logprob: -17.500001907348633
    6. 'a' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. ' app' → logprob: -18.750001907348633
    9. '
' → logprob: -18.750001907348633
    10. 'he' → logprob: -19.000001907348633

Token 773: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00016992862219922245
    2. 'ush' → logprob: -8.87516975402832
    3. 'pop' → logprob: -10.62516975402832
    4. 'p' → logprob: -13.12516975402832
    5. '   ' → logprob: -14.12516975402832
    6. '[' → logprob: -14.25016975402832
    7. '```' → logprob: -14.87516975402832
    8. '
' → logprob: -14.87516975402832
    9. 'ap' → logprob: -15.12516975402832
    10. 'o' → logprob: -15.75016975402832

Token 774: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.664371848164592e-05
    2. 'hq' → logprob: -11.250016212463379
    3. ' (' → logprob: -13.000016212463379
    4. '(' → logprob: -14.750016212463379
    5. '(
' → logprob: -14.875016212463379
    6. '
' → logprob: -15.625016212463379
    7. 'h' → logprob: -16.500017166137695
    8. '(q' → logprob: -16.500017166137695
    9. ',h' → logprob: -16.500017166137695
    10. '```' → logprob: -16.500017166137695

Token 775: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.008129963040119e-06
    2. '_q' → logprob: -13.500003814697266
    3. '(q' → logprob: -14.125003814697266
    4. ',q' → logprob: -15.000003814697266
    5. '[q' → logprob: -15.250003814697266
    6. 'Q' → logprob: -15.250003814697266
    7. '[' → logprob: -15.500003814697266
    8. ')' → logprob: -15.500003814697266
    9. ',' → logprob: -15.750003814697266
    10. '(' → logprob: -16.125003814697266

Token 776: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10199522227048874
    2. ')
' → logprob: -2.3519952297210693
    3. '       ' → logprob: -6.60199499130249
    4. '   ' → logprob: -8.351995468139648
    5. '):
' → logprob: -8.976995468139648
    6. '<|end|>' → logprob: -10.851995468139648
    7. '```' → logprob: -11.351995468139648
    8. ')

' → logprob: -11.976995468139648
    9. '
' → logprob: -12.351995468139648
    10. ')
' → logprob: -12.726995468139648

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018768743611872196
    2. '   ' → logprob: -6.7518768310546875
    3. 'if' → logprob: -7.7518768310546875
    4. 'd' → logprob: -9.501876831054688
    5. ' if' → logprob: -9.501876831054688
    6. 'direction' → logprob: -9.876876831054688
    7. '```' → logprob: -10.001876831054688
    8. 'current' → logprob: -11.501876831054688
    9. '        
' → logprob: -11.626876831054688
    10. ' direction' → logprob: -12.501876831054688

Token 778: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00013357517309486866
    2. '       ' → logprob: -9.875133514404297
    3. ' if' → logprob: -10.375133514404297
    4. '```' → logprob: -10.750133514404297
    5. '   ' → logprob: -11.250133514404297
    6. 'd' → logprob: -12.250133514404297
    7. 'direction' → logprob: -12.500133514404297
    8. 'current' → logprob: -12.625133514404297
    9. 'dir' → logprob: -13.125133514404297
    10. '        
' → logprob: -13.750133514404297

Token 779: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00890609622001648
    2. '(y' → logprob: -5.25890588760376
    3. '(' → logprob: -6.00890588760376
    4. ' (' → logprob: -6.75890588760376
    5. '(goal' → logprob: -10.508906364440918
    6. '(ans' → logprob: -11.258906364440918
    7. '   ' → logprob: -12.258906364440918
    8. '(ma' → logprob: -14.258906364440918
    9. '(turn' → logprob: -14.508906364440918
    10. 'x' → logprob: -15.008906364440918

Token 780: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027515867725014687
    2. 'x' → logprob: -3.7775158882141113
    3. '(y' → logprob: -5.527515888214111
    4. ' y' → logprob: -8.527515411376953
    5. '(x' → logprob: -9.527515411376953
    6. ' (' → logprob: -11.652515411376953
    7. '   ' → logprob: -13.277515411376953
    8. ')' → logprob: -13.777515411376953
    9. '	y' → logprob: -14.402515411376953
    10. ')y' → logprob: -14.402515411376953

Token 781: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4843234717845917
    2. ',y' → logprob: -0.9843235015869141
    3. '==' → logprob: -4.859323501586914
    4. ' ==' → logprob: -6.234323501586914
    5. ')==' → logprob: -8.609323501586914
    6. ',x' → logprob: -8.734323501586914
    7. ' ,' → logprob: -10.109323501586914
    8. ')' → logprob: -10.984323501586914
    9. ',n' → logprob: -11.484323501586914
    10. ',
' → logprob: -11.609323501586914

Token 782: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012504237703979015
    2. ')==' → logprob: -4.5125041007995605
    3. '==' → logprob: -6.6375041007995605
    4. ' ==' → logprob: -8.887504577636719
    5. ' )' → logprob: -12.012504577636719
    6. ']==' → logprob: -14.512504577636719
    7. '       ' → logprob: -16.38750457763672
    8. '）' → logprob: -16.76250457763672
    9. '```' → logprob: -17.26250457763672
    10. ')=' → logprob: -17.38750457763672

Token 783: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759645700454712
    2. '==' → logprob: -0.8259645700454712
    3. ')==' → logprob: -10.82596492767334
    4. ']==' → logprob: -12.57596492767334
    5. ')' → logprob: -14.07596492767334
    6. '==(' → logprob: -15.07596492767334
    7. ' ' → logprob: -15.45096492767334
    8. '==
' → logprob: -15.70096492767334
    9. '()==' → logprob: -15.70096492767334
    10. '```' → logprob: -16.325963973999023

Token 784: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.1604469269514084
    2. ' goal' → logprob: -1.9104468822479248
    3. '(goal' → logprob: -8.410447120666504
    4. '_goal' → logprob: -16.160446166992188
    5. '   ' → logprob: -16.410446166992188
    6. '.goal' → logprob: -17.160446166992188
    7. 'Goal' → logprob: -17.660446166992188
    8. 'go' → logprob: -18.660446166992188
    9. '
' → logprob: -19.035446166992188
    10. '(' → logprob: -19.660446166992188

Token 785: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761529803276062
    2. ':' → logprob: -0.8261529803276062
    3. '       ' → logprob: -8.826152801513672
    4. '           ' → logprob: -9.951152801513672
    5. ':return' → logprob: -11.951152801513672
    6. ':
' → logprob: -12.326152801513672
    7. '):
' → logprob: -12.951152801513672
    8. ':

' → logprob: -13.326152801513672
    9. '   ' → logprob: -13.576152801513672
    10. '():
' → logprob: -14.076152801513672

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09193212538957596
    2. '       ' → logprob: -2.4669320583343506
    3. ':
' → logprob: -6.84193229675293
    4. '
' → logprob: -7.09193229675293
    5. '```' → logprob: -7.46693229675293
    6. ':' → logprob: -8.46693229675293
    7. '               ' → logprob: -9.71693229675293
    8. '   ' → logprob: -9.71693229675293
    9. 'break' → logprob: -9.96693229675293
    10. '<|end|>' → logprob: -10.71693229675293

Token 787: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0002944671141449362
    2. 'print' → logprob: -9.12529468536377
    3. 'answer' → logprob: -9.87529468536377
    4. ' ans' → logprob: -10.00029468536377
    5. '           ' → logprob: -10.50029468536377
    6. '       ' → logprob: -10.50029468536377
    7. '```' → logprob: -11.12529468536377
    8. '	ans' → logprob: -11.75029468536377
    9. '   ' → logprob: -11.87529468536377
    10. '(ans' → logprob: -13.37529468536377

Token 788: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03247589245438576
    2. ' =' → logprob: -3.5324759483337402
    3. '=True' → logprob: -5.90747594833374
    4. '           ' → logprob: -13.907475471496582
    5. '=False' → logprob: -14.032475471496582
    6. '       ' → logprob: -15.157475471496582
    7. '=
' → logprob: -15.657475471496582
    8. '   ' → logprob: -16.0324764251709
    9. '=true' → logprob: -16.1574764251709
    10. '+=' → logprob: -16.4074764251709

Token 789: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.000933017407078296
    2. ' True' → logprob: -7.0009331703186035
    3. '   ' → logprob: -10.750932693481445
    4. '       ' → logprob: -16.250932693481445
    5. '"' → logprob: -18.000932693481445
    6. '           ' → logprob: -18.500932693481445
    7. '(True' → logprob: -18.500932693481445
    8. '=True' → logprob: -18.875932693481445
    9. 'true' → logprob: -19.000932693481445
    10. '1' → logprob: -19.875932693481445

Token 790: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030185774085111916
    2. '       ' → logprob: -8.8753023147583
    3. '               ' → logprob: -9.2503023147583
    4. '<|end|>' → logprob: -10.7503023147583
    5. '		' → logprob: -10.8753023147583
    6. '
' → logprob: -11.7503023147583
    7. ',' → logprob: -12.6253023147583
    8. '                   ' → logprob: -13.0003023147583
    9. '          ' → logprob: -13.3753023147583
    10. '   ' → logprob: -13.5003023147583

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005658994195982814
    2. '       ' → logprob: -7.750566005706787
    3. '```' → logprob: -9.625565528869629
    4. '		' → logprob: -10.250565528869629
    5. '               ' → logprob: -10.875565528869629
    6. '<|end|>' → logprob: -12.625565528869629
    7. '   ' → logprob: -12.750565528869629
    8. '	       ' → logprob: -12.875565528869629
    9. '                   ' → logprob: -13.125565528869629
    10. '	' → logprob: -14.250565528869629

Token 792: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19017253816127777
    2. '           ' → logprob: -2.4401724338531494
    3. 'print' → logprob: -2.6901724338531494
    4. '       ' → logprob: -4.0651726722717285
    5. '   ' → logprob: -7.1901726722717285
    6. ' break' → logprob: -9.06517219543457
    7. '```' → logprob: -9.31517219543457
    8. '	break' → logprob: -10.31517219543457
    9. '               ' → logprob: -11.81517219543457
    10. '
' → logprob: -12.56517219543457

Token 793: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07655376195907593
    2. '   ' → logprob: -2.9515538215637207
    3. '```' → logprob: -4.576553821563721
    4. '
' → logprob: -5.076553821563721
    5. '        
' → logprob: -5.951553821563721
    6. '    
' → logprob: -6.576553821563721
    7. '<|end|>' → logprob: -8.076553344726562
    8. '\n' → logprob: -8.826553344726562
    9. '  
' → logprob: -8.951553344726562
    10. '``' → logprob: -10.076553344726562

Token 794: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14240679144859314
    2. '       ' → logprob: -2.142406702041626
    3. ' direction' → logprob: -5.767406940460205
    4. 'direction' → logprob: -5.892406940460205
    5. '```' → logprob: -6.017406940460205
    6. '
' → logprob: -6.392406940460205
    7. '    
' → logprob: -6.392406940460205
    8. 'current' → logprob: -7.017406940460205
    9. ' current' → logprob: -7.267406940460205
    10. '        
' → logprob: -7.392406940460205

Token 795: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.124127097427845
    2. 'direction' → logprob: -2.749127149581909
    3. 'dir' → logprob: -3.124127149581909
    4. '#' (adapté à ' #') → logprob: -5.37412691116333
    5. 'current' → logprob: -6.87412691116333
    6. '   ' → logprob: -7.62412691116333
    7. 'c' → logprob: -7.74912691116333
    8. 'curr' → logprob: -7.74912691116333
    9. '```' → logprob: -7.74912691116333
    10. 'for' → logprob: -7.87412691116333

Token 796: ' current' (ID: 2208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3235490322113037
    2. 'dir' → logprob: -1.8235490322113037
    3. '#' → logprob: -2.6985490322113037
    4. 'direction' → logprob: -3.0735490322113037
    5. 'nd' → logprob: -7.573549270629883
    6. 'cur' → logprob: -8.573549270629883
    7. '   ' → logprob: -8.698549270629883
    8. 'for' → logprob: -8.948549270629883
    9. 'curr' → logprob: -9.323549270629883
    10. 'ndir' → logprob: -9.573549270629883

Token 797: ' facing' (ID: 20511)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2524828612804413
    2. 'direction' → logprob: -2.2524828910827637
    3. 'dir' → logprob: -2.2524828910827637
    4. '_dir' → logprob: -4.502482891082764
    5. '_direction' → logprob: -7.002482891082764
    6. '_d' → logprob: -7.252482891082764
    7. 'dx' → logprob: -9.877482414245605
    8. 'D' → logprob: -10.877482414245605
    9. 'dire' → logprob: -11.002482414245605
    10. '#' → logprob: -11.377482414245605

Token 798: ' direction' (ID: 9262)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.53834468126297
    2. '=' → logprob: -1.5383446216583252
    3. 'direction' → logprob: -1.7883446216583252
    4. 'dir' → logprob: -4.163344860076904
    5. 'd' → logprob: -4.663344860076904
    6. ' direction' → logprob: -5.538344860076904
    7. '_direction' → logprob: -5.538344860076904
    8. '_dir' → logprob: -6.788344860076904
    9. '=d' → logprob: -8.538344383239746
    10. '_d' → logprob: -10.663344383239746

Token 799: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761032104492188
    2. '=' → logprob: -0.8261032104492188
    3. 'd' → logprob: -9.326103210449219
    4. '=d' → logprob: -10.201103210449219
    5. 'dir' → logprob: -11.076103210449219
    6. 'direction' → logprob: -11.701103210449219
    7. '   ' → logprob: -11.951103210449219
    8. ',' → logprob: -13.576103210449219
    9. '=
' → logprob: -13.826103210449219
    10. ')' → logprob: -13.951103210449219

Token 800: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.014234843663871288
    2. ' turns' → logprob: -4.264235019683838
    3. '_turn' → logprob: -9.63923454284668
    4. ' turn' → logprob: -13.01423454284668
    5. '```' → logprob: -13.01423454284668
    6. '   ' → logprob: -13.88923454284668
    7. '(turn' → logprob: -15.13923454284668
    8. '.turn' → logprob: -16.26423454284668
    9. '
' → logprob: -16.26423454284668
    10. '-turn' → logprob: -16.38923454284668

Token 801: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.002909369533881545
    2. 'used' → logprob: -5.877909183502197
    3. ' =' → logprob: -10.002909660339355
    4. '   ' → logprob: -10.752909660339355
    5. '=' → logprob: -11.127909660339355
    6. 'Used' → logprob: -11.502909660339355
    7. 'direction' → logprob: -12.627909660339355
    8. ' used' → logprob: -13.627909660339355
    9. '```' → logprob: -13.752909660339355
    10. '       ' → logprob: -14.002909660339355

Token 802: ' turns' (ID: 18304)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03888198733329773
    2. '=' → logprob: -3.28888201713562
    3. 'd' → logprob: -7.788881778717041
    4. ' is' → logprob: -8.6638822555542
    5. ' d' → logprob: -9.5388822555542
    6. 'direction' → logprob: -9.6638822555542
    7. '=d' → logprob: -9.7888822555542
    8. ' direction' → logprob: -11.0388822555542
    9. ':' → logprob: -11.2888822555542
    10. ',' → logprob: -11.4138822555542

Token 803: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3415733575820923
    2. 'd' → logprob: -1.8415733575820923
    3. ' d' → logprob: -2.2165732383728027
    4. ',' → logprob: -4.966573238372803
    5. 'direction' → logprob: -5.716573238372803
    6. 'dir' → logprob: -6.216573238372803
    7. ' direction' → logprob: -6.216573238372803
    8. ' dir' → logprob: -6.466573238372803
    9. '   ' → logprob: -6.591573238372803
    10. 'current' → logprob: -6.841573238372803

Token 804: '       ' (ID: 309)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.929430365562439
    2. '       ' → logprob: -1.429430365562439
    3. '   ' → logprob: -1.679430365562439
    4. 'd' → logprob: -2.6794304847717285
    5. ' direction' → logprob: -3.0544304847717285
    6. 'direction' → logprob: -4.0544304847717285
    7. ' dir' → logprob: -4.1794304847717285
    8. ' current' → logprob: -4.6794304847717285
    9. '```' → logprob: -5.3044304847717285
    10. 'current' → logprob: -5.3044304847717285

Token 805: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.003193874144926667
    2. 'dir' → logprob: -6.2531938552856445
    3. 'direction' → logprob: -7.0031938552856445
    4. ' d' → logprob: -8.503193855285645
    5. 'cur' → logprob: -10.378193855285645
    6. '   ' → logprob: -10.378193855285645
    7. 'face' → logprob: -10.628193855285645
    8. 'f' → logprob: -10.753193855285645
    9. '       ' → logprob: -11.503193855285645
    10. 'curr' → logprob: -11.628193855285645

Token 806: 'dir' (ID: 6457)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141372084617615
    2. ' =' → logprob: -1.7014137506484985
    3. '=d' → logprob: -15.076414108276367
    4. '=int' → logprob: -17.826414108276367
    5. '=current' → logprob: -17.826414108276367
    6. '_=' → logprob: -17.951414108276367
    7. '=}' → logprob: -18.076414108276367
    8. ',' → logprob: -18.076414108276367
    9. '=
' → logprob: -18.201414108276367
    10. '＝' → logprob: -18.326414108276367

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ']' → logprob: -16.063261032104492
    4. '=
' → logprob: -17.188261032104492
    5. 's' → logprob: -17.938261032104492
    6. ')' → logprob: -18.438261032104492
    7. '=d' → logprob: -18.438261032104492
    8. ']=' → logprob: -18.438261032104492
    9. '[' → logprob: -18.563261032104492
    10. '=

' → logprob: -18.563261032104492

Token 808: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.02975083328783512
    2. ' dir' → logprob: -3.5297508239746094
    3. '(dir' → logprob: -15.40475082397461
    4. '	dir' → logprob: -16.65475082397461
    5. '   ' → logprob: -17.90475082397461
    6. ' ' → logprob: -18.77975082397461
    7. 'dict' → logprob: -19.40475082397461
    8. '_dir' → logprob: -20.40475082397461
    9. 'Dir' → logprob: -20.40475082397461
    10. 'direction' → logprob: -20.52975082397461

Token 809: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -4.246537173457909e-06
    2. 'after' → logprob: -12.500003814697266
    3. 'After' → logprob: -14.750003814697266
    4. '_AFTER' → logprob: -17.625003814697266
    5. '[' → logprob: -19.125003814697266
    6. '_before' → logprob: -19.375003814697266
    7. '_for' → logprob: -19.375003814697266
    8. 'dir' → logprob: -19.500003814697266
    9. ' after' → logprob: -19.625003814697266
    10. '=' → logprob: -20.250003814697266

Token 810: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.00034023032640106976
    2. 'turn' → logprob: -8.000340461730957
    3. '_used' → logprob: -12.375340461730957
    4. '_' → logprob: -15.125340461730957
    5. '(turn' → logprob: -16.00033950805664
    6. '[' → logprob: -17.12533950805664
    7. '```' → logprob: -17.50033950805664
    8. 'used' → logprob: -17.50033950805664
    9. '_t' → logprob: -17.75033950805664
    10. ' turn' → logprob: -18.12533950805664

Token 811: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.165027217415627e-05
    2. 'turn' → logprob: -10.750021934509277
    3. '(turn' → logprob: -17.37502098083496
    4. ' turns' → logprob: -17.75002098083496
    5. '[t' → logprob: -18.25002098083496
    6. ' [' → logprob: -19.00002098083496
    7. '[
' → logprob: -19.37502098083496
    8. '```' → logprob: -19.50002098083496
    9. '   ' → logprob: -19.75002098083496
    10. 'eturn' → logprob: -20.00002098083496

Token 812: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -7.941850526549388e-06
    2. ' turns' → logprob: -11.750007629394531
    3. '(turn' → logprob: -17.75000762939453
    4. '   ' → logprob: -18.87500762939453
    5. '_turn' → logprob: -20.12500762939453
    6. '
' → logprob: -20.12500762939453
    7. 'tu' → logprob: -20.75000762939453
    8. ' ' → logprob: -20.87500762939453
    9. '-turn' → logprob: -21.12500762939453
    10. 'tur' → logprob: -21.37500762939453

Token 813: 's' (ID: 82)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.006413013208657503
    2. 's' → logprob: -5.631412982940674
    3. 'ed' → logprob: -6.006412982940674
    4. 'used' → logprob: -8.006413459777832
    5. 'Used' → logprob: -11.756413459777832
    6. 'es' → logprob: -13.631413459777832
    7. '_USED' → logprob: -14.006413459777832
    8. '_us' → logprob: -14.131413459777832
    9. '_use' → logprob: -14.881413459777832
    10. '-used' → logprob: -15.006413459777832

Token 814: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0012507044011726975
    2. 'used' → logprob: -7.001250743865967
    3. 'ed' → logprob: -8.001250267028809
    4. 'Used' → logprob: -12.751250267028809
    5. '[' → logprob: -14.751250267028809
    6. '_USED' → logprob: -15.376250267028809
    7. 's' → logprob: -15.751250267028809
    8. '```' → logprob: -16.001251220703125
    9. ' Used' → logprob: -16.376251220703125
    10. '_us' → logprob: -16.751251220703125

Token 815: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007894979789853096
    2. ']
' → logprob: -7.250789642333984
    3. ' ]' → logprob: -9.625789642333984
    4. '   ' → logprob: -12.500789642333984
    5. ')' → logprob: -12.625789642333984
    6. '])' → logprob: -13.500789642333984
    7. ']
' → logprob: -13.625789642333984
    8. '[x' → logprob: -13.625789642333984
    9. '[' → logprob: -14.250789642333984
    10. ']

' → logprob: -14.375789642333984

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21591393649578094
    2. 'nx' → logprob: -1.8409138917922974
    3. ' nx' → logprob: -4.590913772583008
    4. 'ny' → logprob: -4.590913772583008
    5. '```' → logprob: -5.090913772583008
    6. '#' → logprob: -5.340913772583008
    7. ' ny' → logprob: -6.965913772583008
    8. '   ' → logprob: -7.340913772583008
    9. 'n' → logprob: -7.340913772583008
    10. '        
' → logprob: -7.465913772583008

Token 817: ' #' (ID: 1069)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.1017063558101654
    2. 'ny' → logprob: -2.6017062664031982
    3. '#' (adapté à ' #') → logprob: -3.9767062664031982
    4. 'for' → logprob: -5.601706504821777
    5. '```' → logprob: -9.226706504821777
    6. ' nx' → logprob: -12.351706504821777
    7. ' ny' → logprob: -12.601706504821777
    8. '(nx' → logprob: -12.726706504821777
    9. 'tx' → logprob: -13.726706504821777
    10. 'fx' → logprob: -13.851706504821777

Token 818: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4656944274902344
    2. 'nx' → logprob: -1.2156944274902344
    3. '#' → logprob: -2.5906944274902344
    4. 'ny' → logprob: -7.465694427490234
    5. 'forward' → logprob: -8.965694427490234
    6. 'fx' → logprob: -10.215694427490234
    7. '   ' → logprob: -11.340694427490234
    8. ' for' → logprob: -11.340694427490234
    9. ' nx' → logprob: -11.590694427490234
    10. '```' → logprob: -11.590694427490234

Token 819: '1' (ID: 16)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5139302611351013
    2. '#' → logprob: -1.388930320739746
    3. 'for' → logprob: -1.888930320739746
    4. 'ny' → logprob: -6.763930320739746
    5. 'fx' → logprob: -10.513930320739746
    6. 'forward' → logprob: -10.763930320739746
    7. '##' → logprob: -11.888930320739746
    8. 'tx' → logprob: -11.888930320739746
    9. '(nx' → logprob: -12.013930320739746
    10. 'xx' → logprob: -12.138930320739746

Token 820: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11981774121522903
    2. 'for' → logprob: -3.2448177337646484
    3. '=' → logprob: -4.619817733764648
    4. 'nx' → logprob: -4.619817733764648
    5. 'dx' → logprob: -4.744817733764648
    6. ')' → logprob: -4.994817733764648
    7. '   ' → logprob: -4.994817733764648
    8. ' for' → logprob: -5.244817733764648
    9. '       ' → logprob: -5.369817733764648
    10. ' #' → logprob: -5.369817733764648

Token 821: ' Move' (ID: 25485)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5267255306243896
    2. 'nx' → logprob: -0.9017255306243896
    3. ' nx' → logprob: -6.651725769042969
    4. 'ny' → logprob: -7.276725769042969
    5. ' #' → logprob: -7.401725769042969
    6. 'for' → logprob: -7.901725769042969
    7. 'forward' → logprob: -8.026725769042969
    8. 'Forward' → logprob: -9.401725769042969
    9. '
' → logprob: -10.276725769042969
    10. 'move' → logprob: -10.401725769042969

Token 822: ' forward' (ID: 6687)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.6629924774169922
    2. 'nx' → logprob: -1.6629924774169922
    3. 'forward' → logprob: -2.537992477416992
    4. 'y' → logprob: -2.912992477416992
    5. ' forward' → logprob: -3.412992477416992
    6. ' ny' → logprob: -3.412992477416992
    7. 'x' → logprob: -3.787992477416992
    8. '(nx' → logprob: -3.912992477416992
    9. 'for' → logprob: -4.412992477416992
    10. 'dy' → logprob: -4.787992477416992

Token 823: ' if' (ID: 538)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.6624444127082825
    2. 'nx' → logprob: -1.0374443531036377
    3. '       ' → logprob: -2.1624443531036377
    4. ',' → logprob: -5.162444591522217
    5. '(nx' → logprob: -6.037444591522217
    6. ' nx' → logprob: -6.412444591522217
    7. ' ny' → logprob: -6.662444591522217
    8. '```' → logprob: -6.912444591522217
    9. '
' → logprob: -7.037444591522217
    10. 'new' → logprob: -7.162444591522217

Token 824: ' possible' (ID: 4149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029513021931052208
    2. 'dy' → logprob: -4.404512882232666
    3. 'dd' → logprob: -4.529512882232666
    4. ' ' → logprob: -5.779512882232666
    5. 'maze' → logprob: -6.654512882232666
    6. 'y' → logprob: -7.904512882232666
    7. 'True' → logprob: -8.029513359069824
    8. '(' → logprob: -8.279513359069824
    9. 'ddy' → logprob: -8.654513359069824
    10. '   ' → logprob: -9.029513359069824

Token 825: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44682496786117554
    2. 'nx' → logprob: -1.4468250274658203
    3. 'ny' → logprob: -2.3218250274658203
    4. ' nx' → logprob: -3.9468250274658203
    5. ' ny' → logprob: -5.32182502746582
    6. ',' → logprob: -6.57182502746582
    7. '(nx' → logprob: -7.32182502746582
    8. '```' → logprob: -8.32182502746582
    9. 'tx' → logprob: -8.94682502746582
    10. 'new' → logprob: -9.57182502746582

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005026352009736001
    2. 'next' → logprob: -8.750502586364746
    3. ' next' → logprob: -8.875502586364746
    4. '<|end|>' → logprob: -9.750502586364746
    5. '        
' → logprob: -10.125502586364746
    6. ',' → logprob: -10.625502586364746
    7. '```' → logprob: -10.625502586364746
    8. ' if' → logprob: -11.625502586364746
    9. 'if' → logprob: -11.750502586364746
    10. '[next' → logprob: -12.375502586364746

Token 827: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.5788557529449463
    2. 'ny' → logprob: -0.8288557529449463
    3. ' nx' → logprob: -6.453855514526367
    4. ' ny' → logprob: -6.703855514526367
    5. '       ' → logprob: -9.703855514526367
    6. '```' → logprob: -10.828855514526367
    7. 'tx' → logprob: -11.203855514526367
    8. '   ' → logprob: -12.453855514526367
    9. '(nx' → logprob: -12.828855514526367
    10. 'xn' → logprob: -13.578855514526367

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12836387753486633
    2. ' =' → logprob: -2.128363847732544
    3. '=x' → logprob: -6.753364086151123
    4. ',' → logprob: -8.878363609313965
    5. '=n' → logprob: -9.003363609313965
    6. ',x' → logprob: -13.378363609313965
    7. '=int' → logprob: -14.003363609313965
    8. ',n' → logprob: -14.503363609313965
    9. '```' → logprob: -14.753363609313965
    10. '=d' → logprob: -14.878363609313965

Token 829: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -20.375158309936523
    4. '(x' → logprob: -21.875158309936523
    5. '   ' → logprob: -22.500158309936523
    6. ')x' → logprob: -22.750158309936523
    7. '[x' → logprob: -23.875158309936523
    8. '"x' → logprob: -24.000158309936523
    9. '=x' → logprob: -24.125158309936523
    10. '```' → logprob: -24.250158309936523

Token 830: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868875801563263
    2. ' +' → logprob: -1.136887550354004
    3. '+d' → logprob: -11.386887550354004
    4. '+x' → logprob: -12.761887550354004
    5. '+n' → logprob: -14.011887550354004
    6. '+
' → logprob: -14.136887550354004
    7. '+=' → logprob: -16.01188850402832
    8. '＋' → logprob: -16.13688850402832
    9. '```' → logprob: -16.38688850402832
    10. ' +
' → logprob: -16.76188850402832

Token 831: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0002036595979006961
    2. ' dx' → logprob: -8.500204086303711
    3. '(dx' → logprob: -16.00020408630371
    4. '1' → logprob: -17.50020408630371
    5. '_dx' → logprob: -18.37520408630371
    6. ' ' → logprob: -18.87520408630371
    7. '   ' → logprob: -20.00020408630371
    8. '  ' → logprob: -20.12520408630371
    9. '
' → logprob: -20.37520408630371
    10. '.dx' → logprob: -20.62520408630371

Token 832: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006940854946151376
    2. '[d' → logprob: -7.750694274902344
    3. 'dd' → logprob: -8.250694274902344
    4. '(dd' → logprob: -13.625694274902344
    5. '/dd' → logprob: -15.000694274902344
    6. 'd' → logprob: -15.375694274902344
    7. ' [' → logprob: -15.500694274902344
    8. '_dd' → logprob: -16.000694274902344
    9. '[
' → logprob: -16.500694274902344
    10. '```' → logprob: -17.500694274902344

Token 833: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -4.4849443838757e-06
    2. 'd' → logprob: -12.750004768371582
    3. ' d' → logprob: -14.500004768371582
    4. 'ddi' → logprob: -14.625004768371582
    5. 'ddar' → logprob: -15.500004768371582
    6. '[' → logprob: -16.250003814697266
    7. '(dd' → logprob: -16.500003814697266
    8. '_dd' → logprob: -16.750003814697266
    9. ' dd' → logprob: -16.750003814697266
    10. '   ' → logprob: -18.000003814697266

Token 834: 'ir' (ID: 380)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.018156733363866806
    2. 'ir' → logprob: -4.0181565284729
    3. ' dir' → logprob: -13.768157005310059
    4. 'd' → logprob: -13.893157005310059
    5. '(dir' → logprob: -14.143157005310059
    6. ']' → logprob: -14.268157005310059
    7. 'idir' → logprob: -14.393157005310059
    8. '[' → logprob: -14.518157005310059
    9. '_dir' → logprob: -14.893157005310059
    10. 'Dir' → logprob: -15.393157005310059

Token 835: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4196292459964752
    2. ']
' → logprob: -1.1696292161941528
    3. '[' → logprob: -3.5446293354034424
    4. '[n' → logprob: -5.919629096984863
    5. 'dd' → logprob: -8.294629096984863
    6. ')' → logprob: -8.919629096984863
    7. ']
' → logprob: -8.919629096984863
    8. '[
' → logprob: -10.294629096984863
    9. ')
' → logprob: -10.419629096984863
    10. '[y' → logprob: -11.419629096984863

Token 836: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2729739248752594
    2. '       ' → logprob: -2.8979740142822266
    3. 'n' → logprob: -3.2729740142822266
    4. '[n' → logprob: -3.3979740142822266
    5. 'ny' → logprob: -3.5229740142822266
    6. '<|end|>' → logprob: -3.7729740142822266
    7. ',' → logprob: -4.272974014282227
    8. '[' → logprob: -4.647974014282227
    9. '(n' → logprob: -5.147974014282227
    10. '```' → logprob: -5.397974014282227

Token 837: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.16024768352508545
    2. ' ny' → logprob: -1.9102476835250854
    3. 'n' → logprob: -11.410247802734375
    4. '```' → logprob: -11.910247802734375
    5. ' 
' → logprob: -13.035247802734375
    6. ',' → logprob: -13.910247802734375
    7. '    
' → logprob: -15.285247802734375
    8. 'Ny' → logprob: -15.285247802734375
    9. ' nny' → logprob: -15.410247802734375
    10. '`' → logprob: -15.410247802734375

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033651575446128845
    2. ' =' → logprob: -3.40865159034729
    3. '<|end|>' → logprob: -12.908651351928711
    4. '=y' → logprob: -13.408651351928711
    5. '+=' → logprob: -14.408651351928711
    6. ')' → logprob: -14.783651351928711
    7. '+' → logprob: -15.408651351928711
    8. '=
' → logprob: -15.533651351928711
    9. '```' → logprob: -15.658651351928711
    10. '[' → logprob: -16.78365135192871

Token 839: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004078401252627373
    2. ' y' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.254077911376953
    4. '	y' → logprob: -19.004077911376953
    5. '(y' → logprob: -20.754077911376953
    6. '[y' → logprob: -23.254077911376953
    7. ' ' → logprob: -23.754077911376953
    8. ''y' → logprob: -23.754077911376953
    9. '       ' → logprob: -24.004077911376953
    10. '
' → logprob: -24.379077911376953

Token 840: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602325439453125
    2. ' +' → logprob: -1.9102325439453125
    3. '+y' → logprob: -12.035232543945312
    4. '+x' → logprob: -14.535232543945312
    5. '+n' → logprob: -14.910232543945312
    6. '<|end|>' → logprob: -14.910232543945312
    7. '+
' → logprob: -15.035232543945312
    8. '+d' → logprob: -15.035232543945312
    9. '=' → logprob: -15.160232543945312
    10. '[' → logprob: -16.285232543945312

Token 841: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.7769888639450073
    2. 'y' → logprob: -0.9019888639450073
    3. '1' → logprob: -2.276988983154297
    4. ' y' → logprob: -4.026988983154297
    5. ' dy' → logprob: -4.526988983154297
    6. '(y' → logprob: -6.651988983154297
    7. 'ddy' → logprob: -7.151988983154297
    8. ' ' → logprob: -8.401988983154297
    9. 'yd' → logprob: -8.401988983154297
    10. '[y' → logprob: -8.776988983154297

Token 842: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. 'dd' → logprob: -13.500001907348633
    3. '(dd' → logprob: -16.375001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '[
' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '
' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.875001907348633

Token 843: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.700132997939363e-05
    2. '(dd' → logprob: -11.000017166137695
    3. '[' → logprob: -15.875017166137695
    4. ' dd' → logprob: -16.000017166137695
    5. '_dd' → logprob: -17.875017166137695
    6. '-dd' → logprob: -18.000017166137695
    7. 'dddd' → logprob: -18.625017166137695
    8. '/dd' → logprob: -18.750017166137695
    9. '.dd' → logprob: -19.375017166137695
    10. '(' → logprob: -19.500017166137695

Token 844: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.002198313595727086
    2. 'dir' → logprob: -6.127198219299316
    3. '[' → logprob: -11.877198219299316
    4. ']' → logprob: -14.127198219299316
    5. 'rir' → logprob: -14.502198219299316
    6. '
' → logprob: -14.877198219299316
    7. '```' → logprob: -14.939698219299316
    8. '   ' → logprob: -14.939698219299316
    9. 'or' → logprob: -15.002198219299316
    10. 'r' → logprob: -15.127198219299316

Token 845: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10702471435070038
    2. ')' → logprob: -2.607024669647217
    3. '       ' → logprob: -4.607024669647217
    4. ']
' → logprob: -5.357024669647217
    5. '<|end|>' → logprob: -5.607024669647217
    6. '[' → logprob: -5.857024669647217
    7. '[n' → logprob: -6.232024669647217
    8. '[next' → logprob: -6.732024669647217
    9. '```' → logprob: -7.107024669647217
    10. '<|end|>' → logprob: -8.107025146484375

Token 846: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026449791621416807
    2. ' if' → logprob: -7.002645015716553
    3. '<|end|>' → logprob: -7.252645015716553
    4. 'if' → logprob: -7.752645015716553
    5. '        
' → logprob: -8.752644538879395
    6. '```' → logprob: -8.877644538879395
    7. '   ' → logprob: -9.002644538879395
    8. '           ' → logprob: -9.252644538879395
    9. ')' → logprob: -11.502644538879395
    10. '
' → logprob: -11.752644538879395

Token 847: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.616012692451477
    2. 'if' (adapté à ' if') → logprob: -0.866012692451477
    3. '       ' → logprob: -3.2410125732421875
    4. '	if' → logprob: -9.991012573242188
    5. '<|end|>' → logprob: -10.616012573242188
    6. '           ' → logprob: -10.741012573242188
    7. '   ' → logprob: -11.116012573242188
    8. '```' → logprob: -11.241012573242188
    9. '        
' → logprob: -11.866012573242188
    10. ')' → logprob: -12.616012573242188

Token 848: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008620720356702805
    2. ' ' → logprob: -4.758620738983154
    3. '   ' → logprob: -12.758620262145996
    4. 'ny' → logprob: -13.633620262145996
    5. ' ny' → logprob: -14.383620262145996
    6. '  ' → logprob: -15.008620262145996
    7. '(' → logprob: -15.133620262145996
    8. ' ' → logprob: -15.258620262145996
    9. '     ' → logprob: -15.508620262145996
    10. '
' → logprob: -15.758620262145996

Token 849: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'ny' → logprob: -15.25000286102295
    4. '(' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '
' → logprob: -17.250001907348633
    7. 'nx' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '`' → logprob: -18.500001907348633
    10. '(nx' → logprob: -18.625001907348633

Token 850: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5981712341308594
    2. ' <' → logprob: -0.9731712341308594
    3. '<=' → logprob: -3.3481712341308594
    4. '<' → logprob: -3.7231712341308594
    5. '<n' → logprob: -4.973171234130859
    6. ' >=' → logprob: -5.848171234130859
    7. '[' → logprob: -7.598171234130859
    8. '   ' → logprob: -7.723171234130859
    9. '>=' → logprob: -7.723171234130859
    10. '<len' → logprob: -7.848171234130859

Token 851: 'nx' (ID: 45103)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0031797364354133606
    2. 'nx' → logprob: -5.753179550170898
    3. ' ny' → logprob: -13.253179550170898
    4. 'n' → logprob: -15.503179550170898
    5. '(nx' → logprob: -16.6281795501709
    6. ' nx' → logprob: -18.2531795501709
    7. '
' → logprob: -18.8781795501709
    8. 'ni' → logprob: -18.8781795501709
    9. 'nym' → logprob: -19.0031795501709
    10. 'nyt' → logprob: -19.5031795501709

Token 852: '<W' (ID: 180273)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.39280274510383606
    2. '<W' → logprob: -1.2678027153015137
    3. '<n' → logprob: -3.5178027153015137
    4. '<H' → logprob: -5.017802715301514
    5. ' <' → logprob: -5.392802715301514
    6. '<N' → logprob: -7.142802715301514
    7. '<size' → logprob: -7.392802715301514
    8. ' and' → logprob: -8.017803192138672
    9. '<len' → logprob: -8.142803192138672
    10. 'and' → logprob: -8.267803192138672

Token 853: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889121770858765
    2. 'and' → logprob: -2.5788912773132324
    3. '       ' → logprob: -13.953890800476074
    4. '           ' → logprob: -15.953890800476074
    5. '        ' → logprob: -16.20389175415039
    6. '   ' → logprob: -17.07889175415039
    7. ' ' → logprob: -17.07889175415039
    8. '0' → logprob: -17.07889175415039
    9. ' и' → logprob: -17.20389175415039
    10. 'if' → logprob: -17.32889175415039

Token 854: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'ny' → logprob: -17.250001907348633
    4. '
' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.625001907348633
    6. ' ny' → logprob: -21.125001907348633
    7. ' ' → logprob: -21.750001907348633
    8. '

' → logprob: -22.250001907348633
    9. '۰' → logprob: -22.250001907348633
    10. 'nx' → logprob: -22.625001907348633

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25227752327919006
    2. 'ny' → logprob: -1.5022774934768677
    3. ' ny' → logprob: -8.002277374267578
    4. ' ' → logprob: -11.627277374267578
    5. 'nx' → logprob: -12.877277374267578
    6. '
' → logprob: -14.377277374267578
    7. 'ni' → logprob: -15.252277374267578
    8. '<' → logprob: -15.502277374267578
    9. 'n' → logprob: -15.627277374267578
    10. 'nym' → logprob: -16.127277374267578

Token 856: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.660310685634613
    2. '<H' → logprob: -0.910310685634613
    3. ' <' → logprob: -2.785310745239258
    4. '<n' → logprob: -4.285310745239258
    5. '<size' → logprob: -6.035310745239258
    6. '<W' → logprob: -6.410310745239258
    7. '<len' → logprob: -7.410310745239258
    8. '>' → logprob: -9.160310745239258
    9. '<num' → logprob: -9.160310745239258
    10. '<N' → logprob: -9.660310745239258

Token 857: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00012642296496778727
    2. '0' → logprob: -10.000126838684082
    3. ' ny' → logprob: -10.125126838684082
    4. 'H' → logprob: -10.125126838684082
    5. '
' → logprob: -15.000126838684082
    6. 'nx' → logprob: -15.000126838684082
    7. '   ' → logprob: -16.500125885009766
    8. 'nh' → logprob: -17.000125885009766
    9. 'Ny' → logprob: -17.125125885009766
    10. 'NY' → logprob: -17.500125885009766

Token 858: '<H' (ID: 104212)
  Prédit: '<H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<H' → logprob: -0.001429047784768045
    2. '<' → logprob: -7.376429080963135
    3. ' <' → logprob: -8.126428604125977
    4. 'and' → logprob: -9.126428604125977
    5. '<size' → logprob: -9.126428604125977
    6. '<len' → logprob: -9.376428604125977
    7. '<n' → logprob: -9.626428604125977
    8. '<W' → logprob: -9.876428604125977
    9. 'H' → logprob: -10.251428604125977
    10. ' and' → logprob: -10.876428604125977

Token 859: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10035181045532227
    2. 'and' → logprob: -2.3503518104553223
    3. '       ' → logprob: -8.975351333618164
    4. '           ' → logprob: -11.350351333618164
    5. '   ' → logprob: -12.850351333618164
    6. ':
' → logprob: -14.100351333618164
    7. ':' → logprob: -14.225351333618164
    8. '          ' → logprob: -14.350351333618164
    9. '        ' → logprob: -14.475351333618164
    10. '	and' → logprob: -15.100351333618164

Token 860: ' maze' (ID: 58295)
  Prédit: 'maze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maze' → logprob: -2.339278580620885e-06
    2. ' maze' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '(' → logprob: -19.000001907348633
    5. 'maz' → logprob: -19.125001907348633
    6. 'ma' → logprob: -19.750001907348633
    7. '
' → logprob: -20.750001907348633
    8. '       ' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '           ' → logprob: -23.125001907348633

Token 861: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '   ' → logprob: -16.25
    4. ' [' → logprob: -16.875
    5. '[y' → logprob: -17.0
    6. '[n' → logprob: -17.25
    7. '][' → logprob: -17.25
    8. '       ' → logprob: -17.75
    9. ')[' → logprob: -18.125
    10. '[now' → logprob: -18.375

Token 862: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.523948907968588e-05
    2. '[' → logprob: -10.750035285949707
    3. ' ny' → logprob: -11.250035285949707
    4. 'nyi' → logprob: -15.625035285949707
    5. '][' → logprob: -15.875035285949707
    6. 'n' → logprob: -15.875035285949707
    7. 'y' → logprob: -16.12503433227539
    8. ']' → logprob: -16.25003433227539
    9. '   ' → logprob: -16.75003433227539
    10. ''ny' → logprob: -17.25003433227539

Token 863: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0039352066814899445
    2. '][' → logprob: -5.62893533706665
    3. '[' → logprob: -8.128934860229492
    4. '[x' → logprob: -11.128934860229492
    5. '(nx' → logprob: -11.753934860229492
    6. 'nx' → logprob: -12.378934860229492
    7. ''][' → logprob: -12.628934860229492
    8. '```' → logprob: -12.878934860229492
    9. '"][' → logprob: -13.253934860229492
    10. '   ' → logprob: -13.878934860229492

Token 864: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0006396461394615471
    2. 'x' → logprob: -7.50063943862915
    3. ' nx' → logprob: -9.750639915466309
    4. '(nx' → logprob: -10.500639915466309
    5. 'xn' → logprob: -14.125639915466309
    6. 'Nx' → logprob: -15.875639915466309
    7. 'n' → logprob: -16.750638961791992
    8. '[n' → logprob: -18.125638961791992
    9. '```' → logprob: -18.125638961791992
    10. '][' → logprob: -18.625638961791992

Token 865: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10959593206644058
    2. ']!=' → logprob: -2.484596014022827
    3. ']!='' → logprob: -3.984596014022827
    4. '[' → logprob: -6.734595775604248
    5. '!=' → logprob: -7.984595775604248
    6. ']==' → logprob: -8.609596252441406
    7. '!='' → logprob: -9.734596252441406
    8. ']=='' → logprob: -10.609596252441406
    9. ' !=' → logprob: -11.734596252441406
    10. ')!=' → logprob: -12.109596252441406

Token 866: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11655336618423462
    2. ' !=' → logprob: -2.36655330657959
    3. '!='' → logprob: -4.36655330657959
    4. '==' → logprob: -6.11655330657959
    5. ' not' → logprob: -6.86655330657959
    6. 'not' → logprob: -9.24155330657959
    7. '[' → logprob: -9.61655330657959
    8. ' ==' → logprob: -10.74155330657959
    9. ' in' → logprob: -11.24155330657959
    10. '=='' → logprob: -11.24155330657959

Token 867: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0007383962511084974
    2. ''*' → logprob: -7.375738620758057
    3. ''' → logprob: -9.750738143920898
    4. ' '#'' → logprob: -10.500738143920898
    5. '"#' → logprob: -11.000738143920898
    6. ''\' → logprob: -12.750738143920898
    7. '`' → logprob: -13.250738143920898
    8. '#' → logprob: -13.375738143920898
    9. ''.' → logprob: -13.375738143920898
    10. ' '#' → logprob: -14.625738143920898

Token 868: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2195979505777359
    2. ' and' → logprob: -1.8445979356765747
    3. '):' → logprob: -3.7195980548858643
    4. ':
' → logprob: -4.594597816467285
    5. 'and' → logprob: -6.094597816467285
    6. '       ' → logprob: -7.344597816467285
    7. ')' → logprob: -7.594597816467285
    8. ']:' → logprob: -8.094597816467285
    9. '   ' → logprob: -8.219597816467285
    10. '):
' → logprob: -8.219597816467285

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00532531226053834
    2. '       ' → logprob: -5.5053253173828125
    3. ' if' → logprob: -7.8803253173828125
    4. '```' → logprob: -8.130325317382812
    5. '<|end|>' → logprob: -8.630325317382812
    6. '               ' → logprob: -9.005325317382812
    7. '            
' → logprob: -9.505325317382812
    8. '
' → logprob: -10.005325317382812
    9. ' and' → logprob: -10.005325317382812
    10. ',' → logprob: -10.255325317382812

Token 870: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002988776541315019
    2. ' if' → logprob: -8.375298500061035
    3. '           ' → logprob: -9.625298500061035
    4. 'next' → logprob: -14.500298500061035
    5. 'nd' → logprob: -14.750298500061035
    6. '               ' → logprob: -14.875298500061035
    7. 'new' → logprob: -15.500298500061035
    8. '   ' → logprob: -15.500298500061035
    9. '#' → logprob: -15.500298500061035
    10. '       ' → logprob: -15.875298500061035

Token 871: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.004706495441496372
    2. ' visited' → logprob: -5.379706382751465
    3. '(' → logprob: -10.004706382751465
    4. '           ' → logprob: -10.754706382751465
    5. '   ' → logprob: -11.254706382751465
    6. ' (' → logprob: -12.629706382751465
    7. '               ' → logprob: -13.379706382751465
    8. '       ' → logprob: -14.004706382751465
    9. 'vis' → logprob: -15.129706382751465
    10. ' ' → logprob: -16.00470733642578

Token 872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.875000953674316
    3. '           ' → logprob: -15.625000953674316
    4. 'ny' → logprob: -16.0
    5. '```' → logprob: -16.375
    6. '       ' → logprob: -17.0
    7. '][' → logprob: -17.375
    8. '   ' → logprob: -17.5
    9. '[
' → logprob: -17.5
    10. '=' → logprob: -17.875

Token 873: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.625036239624023
    3. ' ny' → logprob: -11.375036239624023
    4. '   ' → logprob: -15.000036239624023
    5. '
' → logprob: -16.625036239624023
    6. 'n' → logprob: -17.125036239624023
    7. 'ni' → logprob: -17.250036239624023
    8. ''ny' → logprob: -17.375036239624023
    9. 'nyi' → logprob: -17.375036239624023
    10. 'nym' → logprob: -17.875036239624023

Token 874: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004000634420663118
    2. '[' → logprob: -6.004000663757324
    3. '[n' → logprob: -6.504000663757324
    4. '[y' → logprob: -12.379000663757324
    5. ']' → logprob: -12.504000663757324
    6. ']][' → logprob: -12.754000663757324
    7. '           ' → logprob: -13.004000663757324
    8. '[x' → logprob: -13.379000663757324
    9. '"][' → logprob: -13.629000663757324
    10. '[next' → logprob: -13.629000663757324

Token 875: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.572941179503687e-05
    2. ' nx' → logprob: -10.125045776367188
    3. '(nx' → logprob: -12.250045776367188
    4. 'x' → logprob: -14.250045776367188
    5. 'n' → logprob: -16.500045776367188
    6. '   ' → logprob: -17.250045776367188
    7. '0' → logprob: -17.500045776367188
    8. 'Nx' → logprob: -17.750045776367188
    9. '][' → logprob: -18.750045776367188
    10. 'ny' → logprob: -19.000045776367188

Token 876: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.9569690823554993
    2. '[' → logprob: -1.7069690227508545
    3. '==' → logprob: -1.7069690227508545
    4. ']' → logprob: -1.9569690227508545
    5. '==-' → logprob: -2.5819690227508545
    6. ' ==' → logprob: -3.4569690227508545
    7. '][' → logprob: -5.706969261169434
    8. ')==' → logprob: -8.081969261169434
    9. '```' → logprob: -8.081969261169434
    10. '']==' → logprob: -9.081969261169434

Token 877: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08907437324523926
    2. ' ==' → logprob: -2.8390743732452393
    3. '<' → logprob: -3.9640743732452393
    4. '==-' → logprob: -5.08907413482666
    5. '<=' → logprob: -6.83907413482666
    6. '[' → logprob: -7.83907413482666
    7. ' <' → logprob: -10.08907413482666
    8. '=' → logprob: -10.83907413482666
    9. '```' → logprob: -11.08907413482666
    10. ']==' → logprob: -11.08907413482666

Token 878: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.25000762939453
    4. '```' → logprob: -20.62500762939453
    5. '           ' → logprob: -21.75000762939453
    6. '  ' → logprob: -21.75000762939453
    7. '−' → logprob: -21.75000762939453
    8. '‌' → logprob: -22.37500762939453
    9. ' ' → logprob: -22.37500762939453
    10. '\-' → logprob: -23.12500762939453

Token 879: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '-' → logprob: -17.875
    4. '2' → logprob: -18.25
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. 'or' → logprob: -19.0
    8. ',' → logprob: -20.125
    9. ')' → logprob: -20.8125
    10. '۱' → logprob: -20.9375

Token 880: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0013503533555194736
    2. 'or' → logprob: -6.626350402832031
    3. '	or' → logprob: -11.376350402832031
    4. '               ' → logprob: -12.251350402832031
    5. '           ' → logprob: -12.626350402832031
    6. '<|end|>' → logprob: -13.126350402832031
    7. '            ' → logprob: -14.876350402832031
    8. ')' → logprob: -15.126350402832031
    9. ',' → logprob: -15.376350402832031
    10. '```' → logprob: -15.376350402832031

Token 881: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006944829132407904
    2. ' visited' → logprob: -5.13194465637207
    3. 'turn' → logprob: -7.13194465637207
    4. ' turns' → logprob: -9.25694465637207
    5. '   ' → logprob: -9.75694465637207
    6. 'vis' → logprob: -10.25694465637207
    7. '       ' → logprob: -11.13194465637207
    8. '           ' → logprob: -12.50694465637207
    9. '    ' → logprob: -13.75694465637207
    10. '               ' → logprob: -13.88194465637207

Token 882: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.75
    3. '[
' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -18.375
    6. '	' → logprob: -19.375
    7. 'ny' → logprob: -19.625
    8. '       ' → logprob: -20.0
    9. '    ' → logprob: -20.125
    10. '
' → logprob: -20.375

Token 883: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -7.584239938296378e-06
    2. ' ny' → logprob: -12.250007629394531
    3. '[' → logprob: -12.875007629394531
    4. 'n' → logprob: -16.00000762939453
    5. 'nyi' → logprob: -17.00000762939453
    6. 'ni' → logprob: -17.50000762939453
    7. '   ' → logprob: -17.62500762939453
    8. 'nym' → logprob: -18.37500762939453
    9. '
' → logprob: -18.87500762939453
    10. '```' → logprob: -18.87500762939453

Token 884: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002752790169324726
    2. '][' → logprob: -8.625275611877441
    3. '[n' → logprob: -10.125275611877441
    4. 'ny' → logprob: -10.250275611877441
    5. '   ' → logprob: -12.250275611877441
    6. '```' → logprob: -12.375275611877441
    7. '       ' → logprob: -12.750275611877441
    8. '
' → logprob: -13.125275611877441
    9. ']' → logprob: -13.875275611877441
    10. ' [' → logprob: -14.125275611877441

Token 885: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0036211006809026003
    2. 'ny' → logprob: -5.6286211013793945
    3. ' nx' → logprob: -12.003621101379395
    4. '(nx' → logprob: -12.253621101379395
    5. 'n' → logprob: -13.003621101379395
    6. '
' → logprob: -13.128621101379395
    7. '[n' → logprob: -13.378621101379395
    8. 'x' → logprob: -13.628621101379395
    9. ' ny' → logprob: -14.128621101379395
    10. '[' → logprob: -14.378621101379395

Token 886: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05733552202582359
    2. ' >' → logprob: -3.182335615158081
    3. ']>' → logprob: -4.932335376739502
    4. ']' → logprob: -5.057335376739502
    5. '[' → logprob: -7.432335376739502
    6. '```' → logprob: -10.55733585357666
    7. '">' → logprob: -11.68233585357666
    8. '[n' → logprob: -11.93233585357666
    9. '   ' → logprob: -12.30733585357666
    10. ' ' → logprob: -12.80733585357666

Token 887: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.012513537891209126
    2. ' >' → logprob: -4.387513637542725
    3. '```' → logprob: -13.137513160705566
    4. ']>' → logprob: -14.387513160705566
    5. ' ' → logprob: -15.012513160705566
    6. '">' → logprob: -15.137513160705566
    7. '   ' → logprob: -15.762513160705566
    8. ')>' → logprob: -16.387514114379883
    9. '[' → logprob: -16.387514114379883
    10. ']' → logprob: -16.762514114379883

Token 888: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.02072838321328163
    2. ' turns' → logprob: -3.895728349685669
    3. '   ' → logprob: -8.77072811126709
    4. '       ' → logprob: -11.52072811126709
    5. 'Turns' → logprob: -12.27072811126709
    6. '           ' → logprob: -12.64572811126709
    7. '(turn' → logprob: -13.02072811126709
    8. '_turn' → logprob: -13.27072811126709
    9. ' ' → logprob: -13.27072811126709
    10. ' turn' → logprob: -13.39572811126709

Token 889: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -2.816093228830141e-06
    2. 'used' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.00000286102295
    4. 'Used' → logprob: -16.125001907348633
    5. '_USED' → logprob: -17.125001907348633
    6. '```' → logprob: -17.625001907348633
    7. '       ' → logprob: -18.375001907348633
    8. '_use' → logprob: -18.500001907348633
    9. '_needed' → logprob: -18.500001907348633
    10. '_usage' → logprob: -18.875001907348633

Token 890: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6409920454025269
    2. ':
' → logprob: -0.7659920454025269
    3. '               ' → logprob: -5.390992164611816
    4. '           ' → logprob: -6.890992164611816
    5. '):
' → logprob: -6.890992164611816
    6. ' and' → logprob: -7.265992164611816
    7. '       ' → logprob: -7.890992164611816
    8. '):' → logprob: -8.390992164611816
    9. '<|end|>' → logprob: -9.015992164611816
    10. ')' → logprob: -9.515992164611816

Token 891: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031750984489917755
    2. ' he' → logprob: -5.878175258636475
    3. '```' → logprob: -8.753174781799316
    4. '           ' → logprob: -9.378174781799316
    5. '<|end|>' → logprob: -9.753174781799316
    6. '                               ' → logprob: -11.378174781799316
    7. 'he' → logprob: -11.628174781799316
    8. '
' → logprob: -11.753174781799316
    9. '                   ' → logprob: -11.878174781799316
    10. ',' → logprob: -12.128174781799316

Token 892: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.08451274037361145
    2. '               ' → logprob: -3.084512710571289
    3. ' visited' → logprob: -3.709512710571289
    4. '                   ' → logprob: -4.584512710571289
    5. '   ' → logprob: -7.834512710571289
    6. '           ' → logprob: -9.209512710571289
    7. '       ' → logprob: -10.959512710571289
    8. '                       ' → logprob: -10.959512710571289
    9. '```' → logprob: -11.334512710571289
    10. '                ' → logprob: -11.459512710571289

Token 893: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.625
    3. '   ' → logprob: -17.75
    4. '       ' → logprob: -17.75
    5. '           ' → logprob: -18.375
    6. ' [' → logprob: -18.5
    7. '
' → logprob: -18.75
    8. '[
' → logprob: -19.75
    9. '         ' → logprob: -20.0
    10. '               ' → logprob: -20.375

Token 894: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.5570885807392187e-05
    2. ' ny' → logprob: -11.125015258789062
    3. '[' → logprob: -14.250015258789062
    4. '   ' → logprob: -17.500015258789062
    5. 'ni' → logprob: -17.500015258789062
    6. 'nyi' → logprob: -18.500015258789062
    7. 'n' → logprob: -20.250015258789062
    8. '     ' → logprob: -20.250015258789062
    9. 'Ny' → logprob: -20.250015258789062
    10. ''ny' → logprob: -20.375015258789062

Token 895: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38700181245803833
    2. '][' → logprob: -1.1370017528533936
    3. '       ' → logprob: -9.887001991271973
    4. ']' → logprob: -10.762001991271973
    5. 'ny' → logprob: -11.137001991271973
    6. '           ' → logprob: -11.512001991271973
    7. '   ' → logprob: -12.137001991271973
    8. '         ' → logprob: -12.137001991271973
    9. ' ][' → logprob: -12.262001991271973
    10. '```' → logprob: -12.262001991271973

Token 896: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00026407750556245446
    2. 'ny' → logprob: -8.250264167785645
    3. '(nx' → logprob: -13.625264167785645
    4. ' nx' → logprob: -13.750264167785645
    5. '
' → logprob: -15.375264167785645
    6. 'x' → logprob: -16.625263214111328
    7. '```' → logprob: -17.000263214111328
    8. 'nz' → logprob: -17.125263214111328
    9. '   ' → logprob: -17.375263214111328
    10. 'n' → logprob: -17.375263214111328

Token 897: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576099693775177
    2. '=' → logprob: -0.826099693775177
    3. ']' → logprob: -8.826099395751953
    4. ']=' → logprob: -11.826099395751953
    5. ')' → logprob: -12.076099395751953
    6. ')=' → logprob: -15.451099395751953
    7. '[' → logprob: -16.076099395751953
    8. ' ]' → logprob: -16.451099395751953
    9. '>' → logprob: -16.951099395751953
    10. ' ' → logprob: -18.451099395751953

Token 898: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '＝' → logprob: -18.936967849731445
    4. '[' → logprob: -19.061967849731445
    5. '=
' → logprob: -20.061967849731445
    6. '=n' → logprob: -20.811967849731445
    7. '   ' → logprob: -20.936967849731445
    8. ')=' → logprob: -21.061967849731445
    9. '=os' → logprob: -21.311967849731445
    10. ')' → logprob: -21.561967849731445

Token 899: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0067161982879042625
    2. ' turns' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.756715774536133
    4. ' turn' → logprob: -15.756715774536133
    5. '(turn' → logprob: -15.881715774536133
    6. 'Turns' → logprob: -16.631715774536133
    7. '_turn' → logprob: -16.756715774536133
    8. 'turned' → logprob: -17.006715774536133
    9. 'tur' → logprob: -19.006715774536133
    10. '       ' → logprob: -19.131715774536133

Token 900: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -9.088346359931165e-07
    2. 'used' → logprob: -14.000000953674316
    3. 'Used' → logprob: -17.0
    4. '_use' → logprob: -17.375
    5. '_USED' → logprob: -18.75
    6. '   ' → logprob: -19.375
    7. '_usage' → logprob: -19.875
    8. '_added' → logprob: -19.875
    9. '_user' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 901: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011570196511456743
    2. ' he' → logprob: -9.500115394592285
    3. 'he' → logprob: -11.375115394592285
    4. '           ' → logprob: -11.750115394592285
    5. '              ' → logprob: -11.875115394592285
    6. '                   ' → logprob: -12.500115394592285
    7. ',' → logprob: -13.000115394592285
    8. '```' → logprob: -13.125115394592285
    9. '                
' → logprob: -13.250115394592285
    10. '       ' → logprob: -13.500115394592285

Token 902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002141458389814943
    2. ' he' → logprob: -9.375214576721191
    3. '```' → logprob: -9.500214576721191
    4. 'he' → logprob: -10.875214576721191
    5. '           ' → logprob: -11.250214576721191
    6. '                   ' → logprob: -11.750214576721191
    7. '              ' → logprob: -11.875214576721191
    8. '       ' → logprob: -12.750214576721191
    9. '   ' → logprob: -13.375214576721191
    10. ',' → logprob: -14.375214576721191

Token 903: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -9.794061770662665e-05
    2. ' he' → logprob: -9.25009822845459
    3. '               ' → logprob: -13.25009822845459
    4. 'heap' → logprob: -17.375097274780273
    5. '   ' → logprob: -18.125097274780273
    6. '           ' → logprob: -19.500097274780273
    7. '```' → logprob: -20.000097274780273
    8. '                   ' → logprob: -20.625097274780273
    9. '.he' → logprob: -21.625097274780273
    10. 'ho' → logprob: -21.750097274780273

Token 904: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.704273118884885e-07
    2. 'pp' → logprob: -15.250000953674316
    3. 'ap' → logprob: -15.625000953674316
    4. 'push' → logprob: -15.875000953674316
    5. '```' → logprob: -19.0
    6. ' app' → logprob: -19.125
    7. 'p' → logprob: -19.75
    8. 'append' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. 'appen' → logprob: -20.5

Token 905: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.848420551046729e-05
    2. 'push' → logprob: -9.7500581741333
    3. 'sh' → logprob: -16.375059127807617
    4. 'app' → logprob: -17.625059127807617
    5. 'op' → logprob: -17.875059127807617
    6. 'p' → logprob: -18.625059127807617
    7. 'Push' → logprob: -18.750059127807617
    8. 'pp' → logprob: -19.250059127807617
    9. ' push' → logprob: -19.875059127807617
    10. '   ' → logprob: -20.250059127807617

Token 906: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: 0.0
    2. '(q' → logprob: -17.375
    3. '(' → logprob: -17.5
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. '(
' → logprob: -19.75
    7. ' (' → logprob: -19.875
    8. '	h' → logprob: -20.125
    9. ',h' → logprob: -21.5
    10. 'h' → logprob: -21.625

Token 907: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002269085729494691
    2. '(h' → logprob: -6.127269268035889
    3. '(q' → logprob: -9.50226879119873
    4. 'hq' → logprob: -11.87726879119873
    5. 'qh' → logprob: -13.62726879119873
    6. 'h' → logprob: -14.50226879119873
    7. ',q' → logprob: -16.252269744873047
    8. ',h' → logprob: -16.377269744873047
    9. '?q' → logprob: -16.502269744873047
    10. ')' → logprob: -16.752269744873047

Token 908: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0004878723411820829
    2. '(q' → logprob: -8.62548828125
    3. '(' → logprob: -9.12548828125
    4. ' (' → logprob: -9.12548828125
    5. '((' → logprob: -10.37548828125
    6. '(heap' → logprob: -10.75048828125
    7. '   ' → logprob: -11.00048828125
    8. '(hr' → logprob: -11.87548828125
    9. '(t' → logprob: -12.50048828125
    10. ' ' → logprob: -13.12548828125

Token 909: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0003433296224102378
    2. ' turns' → logprob: -8.000343322753906
    3. '   ' → logprob: -11.875343322753906
    4. '(turn' → logprob: -14.250343322753906
    5. '       ' → logprob: -16.500343322753906
    6. '               ' → logprob: -16.625343322753906
    7. '           ' → logprob: -17.125343322753906
    8. 'Turns' → logprob: -17.500343322753906
    9. '_turn' → logprob: -17.625343322753906
    10. '-turn' → logprob: -18.125343322753906

Token 910: 's' (ID: 82)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0052428836934268475
    2. 'used' → logprob: -5.255242824554443
    3. 'Used' → logprob: -12.505243301391602
    4. 'ed' → logprob: -12.755243301391602
    5. '   ' → logprob: -14.130243301391602
    6. 's' → logprob: -14.255243301391602
    7. '```' → logprob: -14.880243301391602
    8. '_us' → logprob: -15.255243301391602
    9. '_USED' → logprob: -15.630243301391602
    10. '-used' → logprob: -16.2552433013916

Token 911: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -4.35837464465294e-05
    2. 'used' → logprob: -10.125043869018555
    3. 'Used' → logprob: -13.000043869018555
    4. '   ' → logprob: -14.750043869018555
    5. '+' → logprob: -15.375043869018555
    6. '```' → logprob: -15.375043869018555
    7. '_USED' → logprob: -15.875043869018555
    8. '_us' → logprob: -16.250043869018555
    9. '_use' → logprob: -17.000043869018555
    10. '-used' → logprob: -17.375043869018555

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001744200591929257
    2. ' ,' → logprob: -6.376744270324707
    3. ',n' → logprob: -11.001744270324707
    4. '       ' → logprob: -11.501744270324707
    5. '   ' → logprob: -12.001744270324707
    6. ',
' → logprob: -12.501744270324707
    7. ',y' → logprob: -12.876744270324707
    8. '           ' → logprob: -14.376744270324707
    9. '```' → logprob: -14.751744270324707
    10. '    ' → logprob: -15.376744270324707

Token 913: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00023095356300473213
    2. ' ny' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.75023078918457
    4. '
' → logprob: -16.25023078918457
    5. 'n' → logprob: -17.87523078918457
    6. '
' → logprob: -17.87523078918457
    7. 'nyt' → logprob: -18.25023078918457
    8. '```' → logprob: -18.50023078918457
    9. 'nyi' → logprob: -18.62523078918457
    10. 'ni' → logprob: -18.75023078918457

Token 914: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.3875479996204376
    2. ',' → logprob: -1.1375479698181152
    3. ',x' → logprob: -7.762547969818115
    4. '[n' → logprob: -9.512548446655273
    5. ' ,' → logprob: -9.512548446655273
    6. '(nx' → logprob: -10.137548446655273
    7. ',np' → logprob: -10.637548446655273
    8. ',[' → logprob: -11.512548446655273
    9. ',next' → logprob: -11.762548446655273
    10. ',
' → logprob: -12.262548446655273

Token 915: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -6.392202976712724e-06
    2. ' nx' → logprob: -12.000006675720215
    3. '(nx' → logprob: -15.875006675720215
    4. '   ' → logprob: -19.6250057220459
    5. '```' → logprob: -20.5000057220459
    6. 'Nx' → logprob: -20.8750057220459
    7. '       ' → logprob: -21.0000057220459
    8. 'n' → logprob: -21.1250057220459
    9. '           ' → logprob: -22.1250057220459
    10. 'nn' → logprob: -22.1250057220459

Token 916: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.697387966094539e-05
    2. '))
' → logprob: -9.500086784362793
    3. ' ))' → logprob: -11.875086784362793
    4. ')' → logprob: -12.625086784362793
    5. '       ' → logprob: -13.750086784362793
    6. '   ' → logprob: -14.500086784362793
    7. '           ' → logprob: -16.25008773803711
    8. ')))' → logprob: -16.25008773803711
    9. ' ' → logprob: -17.87508773803711
    10. '               ' → logprob: -17.87508773803711

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002767313504591584
    2. '```' → logprob: -6.377767086029053
    3. '
' → logprob: -6.877767086029053
    4. '        
' → logprob: -11.627767562866211
    5. '<|end|>' → logprob: -11.877767562866211
    6. '#' → logprob: -12.502767562866211
    7. '   ' → logprob: -12.627767562866211
    8. '``' → logprob: -12.877767562866211
    9. '           ' → logprob: -13.002767562866211
    10. 'if' → logprob: -13.252767562866211

Token 918: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0845116451382637
    2. 'if' → logprob: -2.8345117568969727
    3. '
' → logprob: -4.084511756896973
    4. '#' (adapté à ' #') → logprob: -5.834511756896973
    5. '   ' → logprob: -6.959511756896973
    6. '```' → logprob: -6.959511756896973
    7. ' if' → logprob: -7.834511756896973
    8. '        
' → logprob: -8.584511756896973
    9. '``' → logprob: -11.459511756896973
    10. '    
' → logprob: -11.959511756896973

Token 919: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07992283999919891
    2. '       ' → logprob: -2.829922914505005
    3. 'if' → logprob: -4.079922676086426
    4. '   ' → logprob: -7.079922676086426
    5. '        
' → logprob: -10.704922676086426
    6. '
' → logprob: -11.204922676086426
    7. ' #' → logprob: -12.454922676086426
    8. ' if' → logprob: -13.579922676086426
    9. '    
' → logprob: -14.329922676086426
    10. 'If' → logprob: -14.704922676086426

Token 920: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4306323826313019
    2. 'if' → logprob: -1.0556323528289795
    3. '   ' → logprob: -6.680632591247559
    4. '
' → logprob: -7.555632591247559
    5. '       ' → logprob: -9.930632591247559
    6. ' if' → logprob: -10.555632591247559
    7. '        
' → logprob: -10.805632591247559
    8. ' #' → logprob: -11.055632591247559
    9. '    
' → logprob: -11.180632591247559
    10. 'If' → logprob: -12.305632591247559

Token 921: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000712670327629894
    2. '   ' → logprob: -7.750712871551514
    3. ' )' → logprob: -8.375712394714355
    4. '
' → logprob: -11.375712394714355
    5. ')
' → logprob: -11.375712394714355
    6. 'if' → logprob: -11.875712394714355
    7. '#' → logprob: -12.125712394714355
    8. ' if' → logprob: -12.500712394714355
    9. ')#' → logprob: -13.000712394714355
    10. ':' → logprob: -13.250712394714355

Token 922: ' Turn' (ID: 18425)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03114805743098259
    2. ' if' → logprob: -4.1561479568481445
    3. '#' → logprob: -4.2811479568481445
    4. 'Turn' → logprob: -7.7811479568481445
    5. 'If' → logprob: -8.656147956848145
    6. 'turn' → logprob: -8.781147956848145
    7. ' #' → logprob: -8.781147956848145
    8. '
' → logprob: -9.281147956848145
    9. ' turn' → logprob: -9.656147956848145
    10. 'try' → logprob: -9.906147956848145

Token 923: ' next' (ID: 2613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13459637761116028
    2. ' if' → logprob: -2.134596347808838
    3. '       ' → logprob: -5.009596347808838
    4. '   ' → logprob: -7.634596347808838
    5. '```' → logprob: -8.009596824645996
    6. '
' → logprob: -10.759596824645996
    7. '+' → logprob: -11.009596824645996
    8. 'used' → logprob: -11.259596824645996
    9. '           ' → logprob: -11.384596824645996
    10. '_used' → logprob: -11.509596824645996

Token 924: ' command' (ID: 6348)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009366908110678196
    2. '   ' → logprob: -5.634366989135742
    3. ' if' → logprob: -5.884366989135742
    4. '_used' → logprob: -6.259366989135742
    5. 'used' → logprob: -7.134366989135742
    6. '       ' → logprob: -9.134366989135742
    7. '```' → logprob: -9.759366989135742
    8. '_if' → logprob: -10.384366989135742
    9. 'Used' → logprob: -11.759366989135742
    10. 'for' → logprob: -12.259366989135742

Token 925: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016766138141974807
    2. '   ' → logprob: -7.126676559448242
    3. ' if' → logprob: -7.626676559448242
    4. 'if' → logprob: -8.001676559448242
    5. ',' → logprob: -10.626676559448242
    6. '<|end|>' → logprob: -12.001676559448242
    7. '           ' → logprob: -12.251676559448242
    8. '    ' → logprob: -13.376676559448242
    9. ' ' → logprob: -13.376676559448242
    10. '     ' → logprob: -13.501676559448242

Token 926: ' any' (ID: 1062)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5761163830757141
    2. ' turns' → logprob: -0.8261163830757141
    3. '   ' → logprob: -8.951116561889648
    4. '(turn' → logprob: -10.201116561889648
    5. ' turn' → logprob: -12.951116561889648
    6. '_turn' → logprob: -13.076116561889648
    7. '```' → logprob: -13.326116561889648
    8. ' ' → logprob: -13.326116561889648
    9. 'Turns' → logprob: -13.951116561889648
    10. 'turned' → logprob: -14.451116561889648

Token 927: ' commands' (ID: 23877)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00912878941744566
    2. '   ' → logprob: -5.009128570556641
    3. '<|end|>' → logprob: -6.634128570556641
    4. ' if' → logprob: -7.134128570556641
    5. '<|end|>' → logprob: -9.63412857055664
    6. '        
' → logprob: -10.13412857055664
    7. 'if' → logprob: -10.38412857055664
    8. '	' → logprob: -10.63412857055664
    9. ',' → logprob: -10.88412857055664
    10. ' and' → logprob: -10.88412857055664

Token 928: ' remain' (ID: 12760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.358115315437317
    2. '       ' → logprob: -1.483115315437317
    3. '   ' → logprob: -1.858115315437317
    4. ' and' → logprob: -1.858115315437317
    5. 'and' → logprob: -1.858115315437317
    6. ' if' → logprob: -3.2331151962280273
    7. ' <' → logprob: -5.608115196228027
    8. '!=' → logprob: -7.108115196228027
    9. ' !=' → logprob: -7.233115196228027
    10. '<' → logprob: -7.483115196228027

Token 929: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003247108543291688
    2. ' if' → logprob: -6.628247261047363
    3. '<|end|>' → logprob: -7.003247261047363
    4. '   ' → logprob: -7.628247261047363
    5. ' and' → logprob: -8.628247261047363
    6. ',' → logprob: -9.003247261047363
    7. 'if' → logprob: -9.378247261047363
    8. '<|end|>' → logprob: -10.003247261047363
    9. '        
' → logprob: -11.128247261047363
    10. '           ' → logprob: -11.503247261047363

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001698094274615869
    2. '<|end|>' → logprob: -9.87516975402832
    3. ' if' → logprob: -10.00016975402832
    4. '```' → logprob: -10.25016975402832
    5. 'if' → logprob: -11.12516975402832
    6. '   ' → logprob: -11.12516975402832
    7. '<|end|>' → logprob: -12.87516975402832
    8. ',' → logprob: -13.25016975402832
    9. '           ' → logprob: -14.00016975402832
    10. 'If' → logprob: -14.25016975402832

Token 931: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13455864787101746
    2. ' if' → logprob: -2.13455867767334
    3. '       ' → logprob: -4.88455867767334
    4. '   ' → logprob: -10.50955867767334
    5. '	if' → logprob: -12.63455867767334
    6. '        
' → logprob: -13.25955867767334
    7. 'If' → logprob: -13.38455867767334
    8. '```' → logprob: -13.38455867767334
    9. ' ' → logprob: -13.63455867767334
    10. 'next' → logprob: -13.88455867767334

Token 932: ' turns' (ID: 18304)
  Prédit: ' turns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.17985834181308746
    2. 'turn' → logprob: -1.8048583269119263
    3. '   ' → logprob: -10.054858207702637
    4. '(turn' → logprob: -10.179858207702637
    5. ' turn' → logprob: -10.429858207702637
    6. '_turn' → logprob: -13.679858207702637
    7. ' ' → logprob: -13.804858207702637
    8. 'Turns' → logprob: -15.054858207702637
    9. ' ' → logprob: -15.804858207702637
    10. '    ' → logprob: -16.054859161376953

Token 933: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.0087516784551553e-05
    2. 'used' → logprob: -12.87501049041748
    3. '_use' → logprob: -13.25001049041748
    4. '_USED' → logprob: -13.50001049041748
    5. '```' → logprob: -13.50001049041748
    6. 'Used' → logprob: -13.75001049041748
    7. '<_' → logprob: -14.62501049041748
    8. '<' → logprob: -15.50001049041748
    9. '   ' → logprob: -15.75001049041748
    10. 's' → logprob: -15.87501049041748

Token 934: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6465895175933838
    2. '<' → logprob: -1.0215895175933838
    3. '<N' → logprob: -2.271589517593384
    4. '<len' → logprob: -4.896589279174805
    5. '<n' → logprob: -5.896589279174805
    6. '<|end|>' → logprob: -6.396589279174805
    7. '<size' → logprob: -8.521589279174805
    8. '<int' → logprob: -9.146589279174805
    9. '<num' → logprob: -9.146589279174805
    10. 'N' → logprob: -9.521589279174805

Token 935: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.36574100604048e-06
    2. ' N' → logprob: -12.375004768371582
    3. '   ' → logprob: -18.250003814697266
    4. 'len' → logprob: -19.125003814697266
    5. ' ' → logprob: -19.875003814697266
    6. '
' → logprob: -20.375003814697266
    7. 'n' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.250003814697266
    9. '	N' → logprob: -21.250003814697266
    10. '```' → logprob: -21.500003814697266

Token 936: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42100250720977783
    2. ':
' → logprob: -1.4210025072097778
    3. ':' → logprob: -2.2960023880004883
    4. 'and' → logprob: -6.921002388000488
    5. '       ' → logprob: -8.171002388000488
    6. '   ' → logprob: -8.921002388000488
    7. '	and' → logprob: -11.171002388000488
    8. ' :
' → logprob: -11.546002388000488
    9. '<|end|>' → logprob: -11.546002388000488
    10. ':

' → logprob: -11.671002388000488

Token 937: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000874539720825851
    2. ',' → logprob: -8.000874519348145
    3. '```' → logprob: -8.250874519348145
    4. 'd' → logprob: -9.375874519348145
    5. '           ' → logprob: -9.500874519348145
    6. '        
' → logprob: -10.625874519348145
    7. ',d' → logprob: -10.750874519348145
    8. '   ' → logprob: -11.375874519348145
    9. ' d' → logprob: -11.375874519348145
    10. ' turns' → logprob: -11.500874519348145

Token 938: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.515870213508606
    2. 'ndir' → logprob: -1.265870213508606
    3. 'dd' → logprob: -2.7658700942993164
    4. 'next' → logprob: -3.7658700942993164
    5. 'd' → logprob: -3.8908700942993164
    6. '           ' → logprob: -5.640870094299316
    7. 'c' → logprob: -5.890870094299316
    8. 'new' → logprob: -6.265870094299316
    9. 'if' → logprob: -6.515870094299316
    10. 'n' → logprob: -6.640870094299316

Token 939: 'ir' (ID: 380)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6180627346038818
    2. 'ir' → logprob: -1.1180627346038818
    3. '=' → logprob: -2.243062734603882
    4. 'dir' → logprob: -4.743062973022461
    5. 'd' → logprob: -4.868062973022461
    6. 'irection' → logprob: -5.243062973022461
    7. 'irections' → logprob: -6.618062973022461
    8. '_turn' → logprob: -6.993062973022461
    9. 'turn' → logprob: -7.118062973022461
    10. '_dir' → logprob: -7.368062973022461

Token 940: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542005077004433
    2. '=' → logprob: -3.8955419063568115
    3. ' ' → logprob: -16.52054214477539
    4. ' =(' → logprob: -17.64554214477539
    5. '＝' → logprob: -17.77054214477539
    6. '```' → logprob: -17.77054214477539
    7. ',' → logprob: -17.89554214477539
    8. '   ' → logprob: -17.89554214477539
    9. '=(' → logprob: -18.27054214477539
    10. 'd' → logprob: -18.64554214477539

Token 941: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0007703172159381211
    2. ' dir' → logprob: -7.375770092010498
    3. '(dir' → logprob: -8.875770568847656
    4. ' (' → logprob: -13.375770568847656
    5. '(' → logprob: -13.750770568847656
    6. '   ' → logprob: -14.250770568847656
    7. '	dir' → logprob: -15.000770568847656
    8. ' ' → logprob: -15.750770568847656
    9. '           ' → logprob: -17.125770568847656
    10. 'direction' → logprob: -17.625770568847656

Token 942: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -3.106736039626412e-05
    2. 'After' → logprob: -10.750031471252441
    3. 'after' → logprob: -11.875031471252441
    4. '[(' → logprob: -15.125031471252441
    5. '```' → logprob: -15.125031471252441
    6. '_AFTER' → logprob: -15.250031471252441
    7. '   ' → logprob: -15.375031471252441
    8. ' =' → logprob: -15.625031471252441
    9. '(after' → logprob: -15.625031471252441
    10. '_for' → logprob: -15.750031471252441

Token 943: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.0008416688651777804
    2. 'turn' → logprob: -7.1258416175842285
    3. '(turn' → logprob: -11.250842094421387
    4. '_after' → logprob: -11.375842094421387
    5. '_used' → logprob: -12.000842094421387
    6. '(' → logprob: -13.375842094421387
    7. '[' → logprob: -13.750842094421387
    8. '[(' → logprob: -14.125842094421387
    9. 'Turn' → logprob: -14.375842094421387
    10. '_t' → logprob: -14.625842094421387

Token 944: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010235115041723475
    2. 'turn' → logprob: -9.250102043151855
    3. '(turn' → logprob: -12.875102043151855
    4. '[
' → logprob: -13.000102043151855
    5. '```' → logprob: -14.375102043151855
    6. ' turns' → logprob: -15.375102043151855
    7. ' [' → logprob: -15.750102043151855
    8. '[(' → logprob: -15.875102043151855
    9. '[++' → logprob: -16.125102996826172
    10. '   ' → logprob: -17.375102996826172

Token 945: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.4378848391061183e-05
    2. ' turns' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.750014305114746
    4. '(turn' → logprob: -15.500014305114746
    5. '_turn' → logprob: -18.250015258789062
    6. 'turned' → logprob: -18.375015258789062
    7. 'Turns' → logprob: -18.625015258789062
    8. 'tu' → logprob: -19.750015258789062
    9. '       ' → logprob: -20.125015258789062
    10. '```' → logprob: -20.375015258789062

Token 946: 's' (ID: 82)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00046606172691099346
    2. 's' → logprob: -8.625466346740723
    3. '_turn' → logprob: -9.375466346740723
    4. 'ed' → logprob: -9.375466346740723
    5. 'used' → logprob: -9.750466346740723
    6. 'urn' → logprob: -10.125466346740723
    7. 'Used' → logprob: -12.500466346740723
    8. '_use' → logprob: -13.250466346740723
    9. '_' → logprob: -13.500466346740723
    10. '[' → logprob: -13.500466346740723

Token 947: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.000692420348059386
    2. 'used' → logprob: -8.000692367553711
    3. '_turn' → logprob: -8.000692367553711
    4. 'urn' → logprob: -11.375692367553711
    5. 'turn' → logprob: -12.875692367553711
    6. 'ed' → logprob: -13.125692367553711
    7. '+' → logprob: -13.250692367553711
    8. 'Used' → logprob: -13.500692367553711
    9. '```' → logprob: -14.250692367553711
    10. '_use' → logprob: -14.625692367553711

Token 948: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015391462948173285
    2. ' +' → logprob: -6.50153923034668
    3. '[' → logprob: -10.37653923034668
    4. '+[' → logprob: -13.12653923034668
    5. '+
' → logprob: -13.37653923034668
    6. '[next' → logprob: -14.37653923034668
    7. ']+' → logprob: -14.62653923034668
    8. '[
' → logprob: -15.00153923034668
    9. ']' → logprob: -15.00153923034668
    10. '```' → logprob: -16.12653923034668

Token 949: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.500001907348633
    5. '+' → logprob: -18.000001907348633
    6. '
' → logprob: -18.250001907348633
    7. '(' → logprob: -18.625001907348633
    8. '2' → logprob: -18.812501907348633
    9. ']' → logprob: -18.937501907348633
    10. 'turn' → logprob: -19.437501907348633

Token 950: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35030290484428406
    2. ')
' → logprob: -1.2253029346466064
    3. '           ' → logprob: -7.100302696228027
    4. ']' → logprob: -7.600302696228027
    5. ']
' → logprob: -9.100302696228027
    6. '
' → logprob: -9.225302696228027
    7. '```' → logprob: -9.475302696228027
    8. '       ' → logprob: -9.725302696228027
    9. ' )
' → logprob: -10.100302696228027
    10. ' )' → logprob: -10.475302696228027

Token 951: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04683311656117439
    2. '```' → logprob: -4.171833038330078
    3. ',' → logprob: -4.671833038330078
    4. ' if' → logprob: -4.921833038330078
    5. '               ' → logprob: -5.296833038330078
    6. '
' → logprob: -5.796833038330078
    7. '       ' → logprob: -6.046833038330078
    8. '            
' → logprob: -6.921833038330078
    9. 'if' → logprob: -7.921833038330078
    10. '            ' → logprob: -8.546833038330078

Token 952: ' #' (ID: 1069)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03625041991472244
    2. 'if' → logprob: -3.786250352859497
    3. 'for' → logprob: -6.036250591278076
    4. 'ny' → logprob: -6.036250591278076
    5. 'nt' → logprob: -6.286250591278076
    6. 'nn' → logprob: -7.036250591278076
    7. 'n' → logprob: -7.036250591278076
    8. ' nx' → logprob: -7.411250591278076
    9. 'tx' → logprob: -7.411250591278076
    10. '#' (adapté à ' #') → logprob: -7.536250591278076

Token 953: ' after' (ID: 1934)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.008888019248843193
    2. 'for' → logprob: -5.758888244628906
    3. 'fx' → logprob: -6.383888244628906
    4. 'nn' → logprob: -7.008888244628906
    5. 'nd' → logprob: -7.383888244628906
    6. 'mx' → logprob: -8.008888244628906
    7. 'tx' → logprob: -8.008888244628906
    8. 'n' → logprob: -8.008888244628906
    9. 'dx' → logprob: -8.133888244628906
    10. '#' → logprob: -8.633888244628906

Token 954: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.023397119715809822
    2. ' turning' → logprob: -4.773396968841553
    3. 'using' → logprob: -5.398396968841553
    4. 'app' → logprob: -6.023396968841553
    5. 'moving' → logprob: -7.023396968841553
    6. 'checking' → logprob: -7.148396968841553
    7. 'the' → logprob: -7.398396968841553
    8. '#' → logprob: -7.398396968841553
    9. 'this' → logprob: -7.648396968841553
    10. ' turns' → logprob: -7.648396968841553

Token 955: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4361740052700043
    2. ',' → logprob: -1.3111740350723267
    3. 'x' → logprob: -3.436173915863037
    4. '=' → logprob: -4.061173915863037
    5. '#' → logprob: -4.311173915863037
    6. ',x' → logprob: -5.561173915863037
    7. '            
' → logprob: -6.186173915863037
    8. ' =' → logprob: -6.436173915863037
    9. ' is' → logprob: -6.436173915863037
    10. '       ' → logprob: -6.811173915863037

Token 956: ' direction' (ID: 9262)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0008943092543631792
    2. 'nn' → logprob: -7.625894546508789
    3. '#' → logprob: -9.000894546508789
    4. 'nd' → logprob: -9.500894546508789
    5. 'dx' → logprob: -10.000894546508789
    6. 'n' → logprob: -10.125894546508789
    7. ' nx' → logprob: -10.750894546508789
    8. '
' → logprob: -10.750894546508789
    9. '```' → logprob: -10.875894546508789
    10. '   ' → logprob: -11.250894546508789

Token 957: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19571779668331146
    2. ' =' → logprob: -1.8207178115844727
    3. 'x' → logprob: -4.820717811584473
    4. 'dx' → logprob: -5.820717811584473
    5. '=x' → logprob: -6.570717811584473
    6. '           ' → logprob: -7.195717811584473
    7. '#' → logprob: -7.445717811584473
    8. ' is' → logprob: -7.695717811584473
    9. '_x' → logprob: -8.070717811584473
    10. '=
' → logprob: -8.195717811584473

Token 958: ' nd' (ID: 5914)
  Prédit: 'ndir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ndir' → logprob: -0.015891244634985924
    2. ' nd' → logprob: -4.265891075134277
    3. 'nd' → logprob: -6.640891075134277
    4. 'ndar' → logprob: -8.640891075134277
    5. 'mdir' → logprob: -9.015891075134277
    6. 'dir' → logprob: -9.390891075134277
    7. '(nd' → logprob: -11.890891075134277
    8. 'nder' → logprob: -12.390891075134277
    9. ' dir' → logprob: -12.390891075134277
    10. 'nx' → logprob: -12.515891075134277

Token 959: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00022308611369226128
    2. 'dir' → logprob: -9.000223159790039
    3. ' =' → logprob: -9.875223159790039
    4. '=' → logprob: -10.125223159790039
    5. '_dir' → logprob: -13.250223159790039
    6. '
' → logprob: -13.375223159790039
    7. 'i' → logprob: -13.875223159790039
    8. '(dir' → logprob: -14.000223159790039
    9. '   ' → logprob: -14.625223159790039
    10. 'or' → logprob: -15.000223159790039

Token 960: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05810573324561119
    2. 'nx' → logprob: -3.308105707168579
    3. '       ' → logprob: -4.058105945587158
    4. ' nx' → logprob: -6.308105945587158
    5. ',' → logprob: -8.18310546875
    6. 'n' → logprob: -9.05810546875
    7. '(nx' → logprob: -9.30810546875
    8. '            
' → logprob: -9.93310546875
    9. '```' → logprob: -9.93310546875
    10. '   ' → logprob: -10.05810546875

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06230073794722557
    2. '       ' → logprob: -2.937300682067871
    3. ',' → logprob: -5.812300682067871
    4. '```' → logprob: -6.312300682067871
    5. ' nx' → logprob: -6.812300682067871
    6. 'nx' → logprob: -7.062300682067871
    7. '   ' → logprob: -9.062300682067871
    8. '(nx' → logprob: -9.187300682067871
    9. 'n' → logprob: -9.687300682067871
    10. ',n' → logprob: -9.687300682067871

Token 962: ' #' (ID: 1069)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0007524513057433069
    2. '       ' → logprob: -8.375752449035645
    3. 'nn' → logprob: -8.875752449035645
    4. '           ' → logprob: -9.125752449035645
    5. ' nx' → logprob: -9.375752449035645
    6. 'n' → logprob: -9.500752449035645
    7. 'tx' → logprob: -10.875752449035645
    8. '#' (adapté à ' #') → logprob: -11.250752449035645
    9. 'mx' → logprob: -11.375752449035645
    10. '```' → logprob: -11.625752449035645

Token 963: ' Now' (ID: 6549)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0036486531607806683
    2. 'nn' → logprob: -6.00364875793457
    3. '           ' → logprob: -7.75364875793457
    4. '       ' → logprob: -8.00364875793457
    5. 'n' → logprob: -8.75364875793457
    6. 'nd' → logprob: -9.87864875793457
    7. '   ' → logprob: -10.00364875793457
    8. '
' → logprob: -10.12864875793457
    9. '#' → logprob: -10.62864875793457
    10. ' nx' → logprob: -10.87864875793457

Token 964: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6367183923721313
    2. ' nx' → logprob: -1.7617183923721313
    3. 'nx' → logprob: -1.7617183923721313
    4. '       ' → logprob: -2.261718273162842
    5. '
' → logprob: -4.761718273162842
    6. 'n' → logprob: -6.011718273162842
    7. '   ' → logprob: -6.011718273162842
    8. ',' → logprob: -6.011718273162842
    9. 'x' → logprob: -6.136718273162842
    10. '```' → logprob: -6.761718273162842

Token 965: ' move' (ID: 5275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.891005277633667
    2. 'move' → logprob: -1.266005277633667
    3. ' move' → logprob: -2.266005277633667
    4. '       ' → logprob: -2.266005277633667
    5. '
' → logprob: -3.141005277633667
    6. '#' → logprob: -4.141005516052246
    7. 'nx' → logprob: -4.766005516052246
    8. '   ' → logprob: -5.016005516052246
    9. 'x' → logprob: -5.141005516052246
    10. 'n' → logprob: -5.516005516052246

Token 966: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.5262539982795715
    2. ' forward' → logprob: -1.5262539386749268
    3. '           ' → logprob: -1.9012539386749268
    4. '```' → logprob: -4.526254177093506
    5. '_forward' → logprob: -4.776254177093506
    6. '       ' → logprob: -5.151254177093506
    7. '            
' → logprob: -5.526254177093506
    8. 'x' → logprob: -5.776254177093506
    9. ' nx' → logprob: -6.151254177093506
    10. 'nx' → logprob: -6.151254177093506

Token 967: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002694416616577655
    2. ',' → logprob: -9.500269889831543
    3. '
' → logprob: -9.500269889831543
    4. '       ' → logprob: -10.000269889831543
    5. '```' → logprob: -10.000269889831543
    6. '(nx' → logprob: -12.250269889831543
    7. '   ' → logprob: -12.625269889831543
    8. '		' → logprob: -12.625269889831543
    9. '            
' → logprob: -12.625269889831543
    10. 'nx' → logprob: -12.875269889831543

Token 968: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0381181240081787
    2. 'x' → logprob: -1.9131181240081787
    3. ')
' → logprob: -1.9131181240081787
    4. ' nx' → logprob: -2.0381181240081787
    5. ' x' → logprob: -2.5381181240081787
    6. '           ' → logprob: -2.7881181240081787
    7. 'nx' → logprob: -3.7881181240081787
    8. '               ' → logprob: -4.288118362426758
    9. '(nx' → logprob: -4.913118362426758
    10. '):
' → logprob: -5.038118362426758

Token 969: ' possible' (ID: 4149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.592923641204834
    2. ' turns' → logprob: -1.842923641204834
    3. 'turn' → logprob: -1.967923641204834
    4. 'visited' → logprob: -2.967923641204834
    5. 'True' → logprob: -3.467923641204834
    6. ' True' → logprob: -3.842923641204834
    7. ' ' → logprob: -4.467923641204834
    8. ' visited' → logprob: -4.592923641204834
    9. '1' → logprob: -4.967923641204834
    10. '   ' → logprob: -5.717923641204834

Token 970: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039240483194589615
    2. ')
' → logprob: -3.789240598678589
    3. ')' → logprob: -4.53924036026001
    4. '):
' → logprob: -5.91424036026001
    5. '               ' → logprob: -7.16424036026001
    6. '```' → logprob: -7.16424036026001
    7. '
' → logprob: -8.039240837097168
    8. ',' → logprob: -8.664240837097168
    9. '),' → logprob: -9.164240837097168
    10. '            
' → logprob: -9.789240837097168

Token 971: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.35837464465294e-05
    2. '            
' → logprob: -11.000043869018555
    3. '
' → logprob: -11.375043869018555
    4. '```' → logprob: -11.875043869018555
    5. '       ' → logprob: -13.000043869018555
    6. ',' → logprob: -13.250043869018555
    7. '	       ' → logprob: -13.375043869018555
    8. '		' → logprob: -14.375043869018555
    9. '   ' → logprob: -15.125043869018555
    10. '        
' → logprob: -15.250043869018555

Token 972: ' wait' (ID: 5238)
  Prédit: 'stay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stay' → logprob: -1.0208011865615845
    2. 'stand' → logprob: -1.3958011865615845
    3. 'wait' → logprob: -2.020801067352295
    4. 'turn' → logprob: -2.020801067352295
    5. 'just' → logprob: -2.770801067352295
    6. '#' → logprob: -3.520801067352295
    7. 'not' → logprob: -4.520801067352295
    8. '
' → logprob: -4.520801067352295
    9. 'can' → logprob: -5.895801067352295
    10. 'sim' → logprob: -5.895801067352295

Token 973: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009656535112299025
    2. ',' → logprob: -8.12596607208252
    3. '       ' → logprob: -8.12596607208252
    4. '            
' → logprob: -8.75096607208252
    5. '
' → logprob: -9.12596607208252
    6. '          ' → logprob: -11.25096607208252
    7. '```' → logprob: -11.50096607208252
    8. '   ' → logprob: -11.75096607208252
    9. '<|end|>' → logprob: -11.87596607208252
    10. '	       ' → logprob: -12.00096607208252

Token 974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010302885435521603
    2. '       ' → logprob: -5.385303020477295
    3. '
' → logprob: -6.010303020477295
    4. '```' → logprob: -6.385303020477295
    5. '            
' → logprob: -7.260303020477295
    6. '        
' → logprob: -7.885303020477295
    7. ',' → logprob: -9.135302543640137
    8. '	       ' → logprob: -9.760302543640137
    9. '		' → logprob: -10.260302543640137
    10. '    
' → logprob: -10.260302543640137

Token 975: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24513985216617584
    2. 'nx' → logprob: -2.1201398372650146
    3. ' nx' → logprob: -2.4951398372650146
    4. '
' → logprob: -4.870140075683594
    5. '       ' → logprob: -6.745140075683594
    6. '#' (adapté à ' #') → logprob: -6.870140075683594
    7. 'n' → logprob: -6.995140075683594
    8. 'wait' → logprob: -7.120140075683594
    9. '```' → logprob: -7.620140075683594
    10. '   ' → logprob: -7.995140075683594

Token 976: ' We' (ID: 1416)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03217374160885811
    2. '           ' → logprob: -3.9071736335754395
    3. ' nx' → logprob: -5.4071736335754395
    4. '#' → logprob: -5.6571736335754395
    5. '       ' → logprob: -6.5321736335754395
    6. 'n' → logprob: -7.7821736335754395
    7. 'nn' → logprob: -8.157174110412598
    8. '
' → logprob: -8.282174110412598
    9. 'nd' → logprob: -8.532174110412598
    10. 'wx' → logprob: -9.032174110412598

Token 977: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2728519439697266
    2. '       ' → logprob: -1.6478519439697266
    3. ' can' → logprob: -2.1478519439697266
    4. '=' → logprob: -2.2728519439697266
    5. 'continue' → logprob: -2.5228519439697266
    6. '#' → logprob: -2.7728519439697266
    7. ' continue' → logprob: -3.5228519439697266
    8. ' =' → logprob: -3.8978519439697266
    9. 'nx' → logprob: -3.8978519439697266
    10. 'can' → logprob: -4.022851943969727

Token 978: ' enqueue' (ID: 117229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8350664377212524
    2. 'continue' → logprob: -1.8350664377212524
    3. '       ' → logprob: -1.9600664377212524
    4. 'can' → logprob: -2.960066318511963
    5. ' continue' → logprob: -3.210066318511963
    6. 'consider' → logprob: -3.460066318511963
    7. ' can' → logprob: -3.960066318511963
    8. '
' → logprob: -3.960066318511963
    9. '#' → logprob: -4.085066318511963
    10. 'if' → logprob: -4.585066318511963

Token 979: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4328329265117645
    2. '           ' → logprob: -1.932832956314087
    3. '(turn' → logprob: -2.807832956314087
    4. '(h' → logprob: -3.182832956314087
    5. ' (' → logprob: -3.432832956314087
    6. '   ' → logprob: -4.557832717895508
    7. 'if' → logprob: -4.557832717895508
    8. '       ' → logprob: -4.682832717895508
    9. '               ' → logprob: -4.682832717895508
    10. 'the' → logprob: -5.432832717895508

Token 980: ' turning' (ID: 21087)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.6945270299911499
    2. 'state' → logprob: -1.31952702999115
    3. 'next' → logprob: -2.5695271492004395
    4. '#' → logprob: -3.1945271492004395
    5. 'wait' → logprob: -3.9445271492004395
    6. '(turn' → logprob: -3.9445271492004395
    7. '(next' → logprob: -4.1945271492004395
    8. '(wait' → logprob: -4.4445271492004395
    9. 'option' → logprob: -4.6945271492004395
    10. '(state' → logprob: -4.9445271492004395

Token 981: ' action' (ID: 3736)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.519597053527832
    2. 'tokens' → logprob: -1.644597053527832
    3. '   ' → logprob: -2.269597053527832
    4. 'state' → logprob: -2.769597053527832
    5. ',' → logprob: -3.019597053527832
    6. '       ' → logprob: -3.019597053527832
    7. '(' → logprob: -3.144597053527832
    8. '+' → logprob: -3.394597053527832
    9. 'states' → logprob: -3.769597053527832
    10. 'token' → logprob: -3.894597053527832

Token 982: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000111768240458332
    2. ',' → logprob: -10.50011157989502
    3. ' if' → logprob: -10.50011157989502
    4. '       ' → logprob: -10.87511157989502
    5. 'if' → logprob: -11.37511157989502
    6. '               ' → logprob: -11.87511157989502
    7. '   ' → logprob: -12.25011157989502
    8. '            
' → logprob: -12.87511157989502
    9. '<|end|>' → logprob: -13.12511157989502
    10. ' and' → logprob: -13.75011157989502

Token 983: ' let' (ID: 1632)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05648370832204819
    2. ' continue' → logprob: -3.056483745574951
    3. 'wait' → logprob: -5.931483745574951
    4. '#' → logprob: -6.931483745574951
    5. 'pass' → logprob: -7.431483745574951
    6. 'not' → logprob: -7.556483745574951
    7. '
' → logprob: -7.806483745574951
    8. '   ' → logprob: -8.056483268737793
    9. '```' → logprob: -8.056483268737793
    10. 'turn' → logprob: -8.056483268737793

Token 984: ' next' (ID: 2613)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.01494431309401989
    2. 'loop' → logprob: -5.514944076538086
    3. 'while' → logprob: -5.639944076538086
    4. 'continue' → logprob: -6.264944076538086
    5. 'hq' → logprob: -6.514944076538086
    6. 'he' → logprob: -7.014944076538086
    7. ' the' → logprob: -7.014944076538086
    8. 'turn' → logprob: -7.264944076538086
    9. 'next' → logprob: -7.389944076538086
    10. 'it' → logprob: -8.389944076538086

Token 985: ' loop' (ID: 11453)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.3980883061885834
    2. 'turn' → logprob: -2.023088216781616
    3. 'line' → logprob: -2.398088216781616
    4. 'loop' → logprob: -2.523088216781616
    5. 'while' → logprob: -4.523088455200195
    6. ' iteration' → logprob: -5.148088455200195
    7. 'iterations' → logprob: -5.398088455200195
    8. 'lines' → logprob: -7.398088455200195
    9. '(iter' → logprob: -7.773088455200195
    10. 'continue' → logprob: -8.023088455200195

Token 986: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06325975060462952
    2. ' continue' → logprob: -3.0632598400115967
    3. '   ' → logprob: -4.938259601593018
    4. '       ' → logprob: -5.313259601593018
    5. '               ' → logprob: -7.188259601593018
    6. '           ' → logprob: -7.438259601593018
    7. '<|end|>' → logprob: -8.188260078430176
    8. '_continue' → logprob: -8.438260078430176
    9. 'contin' → logprob: -9.438260078430176
    10. 'pass' → logprob: -9.563260078430176

Token 987: ' forward' (ID: 6687)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33020350337028503
    2. '       ' → logprob: -1.7052035331726074
    3. 'forward' → logprob: -3.2052035331726074
    4. '               ' → logprob: -3.4552035331726074
    5. 'turn' → logprob: -4.705203533172607
    6. '   ' → logprob: -5.330203533172607
    7. '            
' → logprob: -5.580203533172607
    8. ' forward' → logprob: -5.955203533172607
    9. 'on' → logprob: -6.830203533172607
    10. 'tokens' → logprob: -6.830203533172607

Token 988: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003337969828862697
    2. ',' → logprob: -8.500333786010742
    3. '               ' → logprob: -9.625333786010742
    4. '       ' → logprob: -10.500333786010742
    5. '   ' → logprob: -10.750333786010742
    6. ' and' → logprob: -12.125333786010742
    7. '```' → logprob: -13.625333786010742
    8. ' if' → logprob: -13.875333786010742
    9. '<|end|>' → logprob: -13.875333786010742
    10. '(' → logprob: -14.375333786010742

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12686268985271454
    2. '       ' → logprob: -2.5018627643585205
    3. '               ' → logprob: -4.001862525939941
    4. '```' → logprob: -4.876862525939941
    5. ',' → logprob: -5.501862525939941
    6. '            
' → logprob: -6.001862525939941
    7. '   ' → logprob: -6.501862525939941
    8. ' if' → logprob: -7.251862525939941
    9. '``' → logprob: -7.751862525939941
    10. '        
' → logprob: -7.876862525939941

Token 990: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5777347087860107
    2. ' if' → logprob: -1.7027347087860107
    3. '               ' → logprob: -1.8277347087860107
    4. 'nd' → logprob: -3.5777347087860107
    5. 'nt' → logprob: -3.5777347087860107
    6. 'n' → logprob: -4.82773494720459
    7. 'nx' → logprob: -4.82773494720459
    8. 'next' → logprob: -5.07773494720459
    9. 'new' → logprob: -5.57773494720459
    10. '           ' → logprob: -5.57773494720459

Token 991: ' State' (ID: 5388)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8766909241676331
    2. 'ny' → logprob: -1.5016908645629883
    3. 'nx' → logprob: -1.5016908645629883
    4. '               ' → logprob: -2.7516908645629883
    5. '           ' → logprob: -2.8766908645629883
    6. 'n' → logprob: -5.876690864562988
    7. 'wait' → logprob: -5.876690864562988
    8. 'he' → logprob: -6.251690864562988
    9. ' if' → logprob: -6.376690864562988
    10. 'nd' → logprob: -7.001690864562988

Token 992: ' after' (ID: 1934)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5786175727844238
    2. ' =' → logprob: -1.0786175727844238
    3. '=(' → logprob: -2.578617572784424
    4. '   ' → logprob: -4.578617572784424
    5. '       ' → logprob: -5.078617572784424
    6. '_next' → logprob: -6.453617572784424
    7. '           ' → logprob: -6.828617572784424
    8. '_turn' → logprob: -7.578617572784424
    9. 'with' → logprob: -7.703617572784424
    10. 'next' → logprob: -8.078617095947266

Token 993: ' turn' (ID: 3716)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6734989285469055
    2. '(' → logprob: -1.6734988689422607
    3. 'turn' → logprob: -1.7984988689422607
    4. '(turn' → logprob: -2.0484988689422607
    5. ' he' → logprob: -5.92349910736084
    6. 'the' → logprob: -6.92349910736084
    7. ' turn' → logprob: -7.29849910736084
    8. 'increment' → logprob: -7.29849910736084
    9. ' turning' → logprob: -7.54849910736084
    10. '   ' → logprob: -8.17349910736084

Token 994: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1880800724029541
    2. '           ' → logprob: -2.438080072402954
    3. '=' → logprob: -2.813080072402954
    4. '       ' → logprob: -4.438079833984375
    5. '   ' → logprob: -5.188079833984375
    6. '=(' → logprob: -6.188079833984375
    7. '_used' → logprob: -6.688079833984375
    8. ',' → logprob: -7.188079833984375
    9. '               ' → logprob: -7.313079833984375
    10. ':' → logprob: -8.188079833984375

Token 995: ' same' (ID: 2684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19122406840324402
    2. ' turns' → logprob: -2.3162240982055664
    3. 'he' → logprob: -3.6912240982055664
    4. '               ' → logprob: -3.8162240982055664
    5. ' he' → logprob: -4.191224098205566
    6. 'turn' → logprob: -5.566224098205566
    7. '   ' → logprob: -5.941224098205566
    8. 'nd' → logprob: -5.941224098205566
    9. ' nd' → logprob: -7.316224098205566
    10. '       ' → logprob: -7.441224098205566

Token 996: ' cell' (ID: 4206)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1279047429561615
    2. 'y' → logprob: -2.2529046535491943
    3. ',' → logprob: -4.752904891967773
    4. ' x' → logprob: -6.627904891967773
    5. '
' → logprob: -7.127904891967773
    6. ' y' → logprob: -7.252904891967773
    7. ',y' → logprob: -7.252904891967773
    8. 'line' → logprob: -7.627904891967773
    9. 'token' → logprob: -7.627904891967773
    10. 'tokens' → logprob: -7.877904891967773

Token 997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014787276275455952
    2. '```' → logprob: -5.139787197113037
    3. ',
' → logprob: -5.389787197113037
    4. '               ' → logprob: -7.139787197113037
    5. '   ' → logprob: -7.264787197113037
    6. ' ,' → logprob: -7.514787197113037
    7. ',(' → logprob: -7.764787197113037
    8. '           ' → logprob: -7.764787197113037
    9. ' he' → logprob: -8.014787673950195
    10. '``' → logprob: -8.139787673950195

Token 998: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.04461332783102989
    2. ' turns' → logprob: -3.1696133613586426
    3. '   ' → logprob: -7.169613361358643
    4. '(turn' → logprob: -7.544613361358643
    5. 'he' → logprob: -9.419612884521484
    6. '
' → logprob: -9.544612884521484
    7. '       ' → logprob: -10.044612884521484
    8. '```' → logprob: -10.919612884521484
    9. ' turn' → logprob: -11.044612884521484
    10. '_turn' → logprob: -11.169612884521484

Token 999: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.8908587662735954e-05
    2. 'used' → logprob: -11.500019073486328
    3. '   ' → logprob: -12.125019073486328
    4. '```' → logprob: -13.500019073486328
    5. '+' → logprob: -13.625019073486328
    6. 'Used' → logprob: -15.375019073486328
    7. '_added' → logprob: -16.250019073486328
    8. '_use' → logprob: -16.500019073486328
    9. '_usage' → logprob: -16.500019073486328
    10. '_USED' → logprob: -17.750019073486328

Token 1000: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04860202223062515
    2. ' +' → logprob: -3.0486021041870117
    3. ')+' → logprob: -12.298602104187012
    4. '+
' → logprob: -13.173602104187012
    5. '   ' → logprob: -13.298602104187012
    6. '           ' → logprob: -13.673602104187012
    7. '+(' → logprob: -13.798602104187012
    8. '=' → logprob: -13.798602104187012
    9. '+=' → logprob: -14.298602104187012
    10. ')' → logprob: -14.798602104187012

Token 1001: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.750015258789062
    3. '+' → logprob: -12.500015258789062
    4. '
' → logprob: -13.375015258789062
    5. '```' → logprob: -13.750015258789062
    6. '`' → logprob: -15.875015258789062
    7. ' +' → logprob: -16.250015258789062
    8. '=' → logprob: -16.750015258789062
    9. '   ' → logprob: -16.875015258789062
    10. '``' → logprob: -17.125015258789062

Token 1002: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032038541976362467
    2. '
' → logprob: -6.378203868865967
    3. '               ' → logprob: -7.503203868865967
    4. ',' → logprob: -7.878203868865967
    5. '            
' → logprob: -8.503203392028809
    6. '       ' → logprob: -8.628203392028809
    7. '```' → logprob: -9.753203392028809
    8. '   ' → logprob: -9.753203392028809
    9. ',
' → logprob: -11.253203392028809
    10. '                   ' → logprob: -11.378203392028809

Token 1003: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06591790169477463
    2. '               ' → logprob: -2.81591796875
    3. '       ' → logprob: -6.06591796875
    4. '   ' → logprob: -7.69091796875
    5. '```' → logprob: -7.69091796875
    6. '		' → logprob: -8.69091796875
    7. '            
' → logprob: -8.81591796875
    8. '
' → logprob: -9.31591796875
    9. '                   ' → logprob: -9.81591796875
    10. ',' → logprob: -9.81591796875

Token 1004: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011447775177657604
    2. ' if' → logprob: -4.886447906494141
    3. '           ' → logprob: -5.636447906494141
    4. 'nx' → logprob: -8.88644790649414
    5. '
' → logprob: -9.88644790649414
    6. '```' → logprob: -10.51144790649414
    7. 'next' → logprob: -11.13644790649414
    8. '               ' → logprob: -11.13644790649414
    9. 'x' → logprob: -12.01144790649414
    10. '            
' → logprob: -12.51144790649414

Token 1005: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.05846548452973366
    2. ' visited' → logprob: -2.9334654808044434
    3. '   ' → logprob: -5.933465480804443
    4. 'maze' → logprob: -8.183465957641602
    5. '0' → logprob: -8.808465957641602
    6. ' ' → logprob: -8.933465957641602
    7. 'x' → logprob: -9.683465957641602
    8. '(' → logprob: -9.683465957641602
    9. '       ' → logprob: -9.933465957641602
    10. ' maze' → logprob: -10.433465957641602

Token 1006: '[y' (ID: 34551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061975300312042236
    2. '[y' → logprob: -2.8119752407073975
    3. '       ' → logprob: -12.811975479125977
    4. '[now' → logprob: -13.436975479125977
    5. '   ' → logprob: -14.436975479125977
    6. '           ' → logprob: -14.686975479125977
    7. '     ' → logprob: -14.811975479125977
    8. '[user' → logprob: -15.061975479125977
    9. '[cur' → logprob: -15.186975479125977
    10. ' [' → logprob: -15.186975479125977

Token 1007: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22556038200855255
    2. '[y' → logprob: -1.6005604267120361
    3. '[' → logprob: -9.600560188293457
    4. '>[' → logprob: -10.100560188293457
    5. ']' → logprob: -11.350560188293457
    6. 'y' → logprob: -12.350560188293457
    7. '<|end|>' → logprob: -12.850560188293457
    8. '```' → logprob: -12.975560188293457
    9. '[user' → logprob: -13.100560188293457
    10. '[Y' → logprob: -13.475560188293457

Token 1008: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34847691655158997
    2. 'y' → logprob: -1.2234768867492676
    3. ' y' → logprob: -11.473477363586426
    4. '```' → logprob: -11.973477363586426
    5. '[y' → logprob: -12.598477363586426
    6. '
' → logprob: -12.723477363586426
    7. 'ny' → logprob: -12.973477363586426
    8. '   ' → logprob: -13.348477363586426
    9. ']' → logprob: -13.723477363586426
    10. '[x' → logprob: -14.723477363586426

Token 1009: ']==' (ID: 34128)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.000826421775855124
    2. '==' → logprob: -8.000826835632324
    3. '][' → logprob: -8.375826835632324
    4. ' ==' → logprob: -9.500826835632324
    5. ']' → logprob: -9.750826835632324
    6. '[x' → logprob: -9.875826835632324
    7. '[' → logprob: -10.375826835632324
    8. '   ' → logprob: -10.875826835632324
    9. ']==' → logprob: -11.125826835632324
    10. '           ' → logprob: -13.250826835632324

Token 1010: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.5649528298527e-05
    2. ' -' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.375075340270996
    4. '           ' → logprob: -16.000076293945312
    5. '  ' → logprob: -17.375076293945312
    6. ' ' → logprob: -17.625076293945312
    7. '       ' → logprob: -18.625076293945312
    8. '−' → logprob: -18.750076293945312
    9. '               ' → logprob: -19.500076293945312
    10. '-turn' → logprob: -19.750076293945312

Token 1011: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12709955871105194
    2. '1' → logprob: -2.1270995140075684
    3. ' -' → logprob: -8.752099990844727
    4. ' ' → logprob: -12.252099990844727
    5. '   ' → logprob: -12.752099990844727
    6. '2' → logprob: -12.877099990844727
    7. 'turn' → logprob: -14.377099990844727
    8. '  ' → logprob: -14.752099990844727
    9. '```' → logprob: -14.877099990844727
    10. '(' → logprob: -15.252099990844727

Token 1012: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00526447594165802
    2. 'or' → logprob: -5.2552642822265625
    3. '	or' → logprob: -11.255264282226562
    4. '           ' → logprob: -11.880264282226562
    5. '               ' → logprob: -11.880264282226562
    6. '            ' → logprob: -14.380264282226562
    7. '   ' → logprob: -14.755264282226562
    8. ' ' → logprob: -15.005264282226562
    9. '```' → logprob: -15.005264282226562
    10. '<|end|>' → logprob: -15.130264282226562

Token 1013: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0048546879552304745
    2. ' visited' → logprob: -5.379854679107666
    3. '               ' → logprob: -8.754855155944824
    4. '           ' → logprob: -9.504855155944824
    5. '   ' → logprob: -13.379855155944824
    6. '              ' → logprob: -15.754855155944824
    7. '            ' → logprob: -15.879855155944824
    8. 'vis' → logprob: -16.254854202270508
    9. '       ' → logprob: -16.254854202270508
    10. '                   ' → logprob: -16.504854202270508

Token 1014: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0002572865632828325
    2. '[' → logprob: -8.37525749206543
    3. 'visited' → logprob: -10.62525749206543
    4. '           ' → logprob: -14.12525749206543
    5. '[v' → logprob: -14.50025749206543
    6. '   ' → logprob: -15.00025749206543
    7. '         ' → logprob: -15.75025749206543
    8. '```' → logprob: -16.12525749206543
    9. '[user' → logprob: -16.25025749206543
    10. '       ' → logprob: -16.25025749206543

Token 1015: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5260165929794312
    2. '[y' → logprob: -0.9010165929794312
    3. '][' → logprob: -6.026016712188721
    4. '[' → logprob: -8.276016235351562
    5. '[user' → logprob: -9.901016235351562
    6. 'x' → logprob: -10.151016235351562
    7. '>[' → logprob: -10.276016235351562
    8. '[
' → logprob: -10.776016235351562
    9. '```' → logprob: -11.526016235351562
    10. '   ' → logprob: -11.651016235351562

Token 1016: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.44443862256594e-05
    2. '[x' → logprob: -9.750064849853516
    3. 'y' → logprob: -13.250064849853516
    4. '{x' → logprob: -13.500064849853516
    5. '[' → logprob: -13.625064849853516
    6. ' x' → logprob: -14.375064849853516
    7. '
' → logprob: -15.125064849853516
    8. '(x' → logprob: -15.250064849853516
    9. '$x' → logprob: -15.750064849853516
    10. '```' → logprob: -16.500064849853516

Token 1017: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0719708651304245
    2. ' >' → logprob: -2.6969709396362305
    3. '[' → logprob: -6.9469709396362305
    4. ']>' → logprob: -7.4469709396362305
    5. ']' → logprob: -8.07197093963623
    6. '>[' → logprob: -9.57197093963623
    7. '>x' → logprob: -10.07197093963623
    8. '>
' → logprob: -11.32197093963623
    9. '```' → logprob: -11.44697093963623
    10. '   ' → logprob: -11.69697093963623

Token 1018: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020555665716528893
    2. ' >' → logprob: -3.8955557346343994
    3. 'visited' → logprob: -12.89555549621582
    4. '>x' → logprob: -13.27055549621582
    5. ' ' → logprob: -13.39555549621582
    6. '[' → logprob: -13.52055549621582
    7. '   ' → logprob: -13.64555549621582
    8. '>
' → logprob: -14.02055549621582
    9. '```' → logprob: -14.27055549621582
    10. '  ' → logprob: -14.64555549621582

Token 1019: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.03817116469144821
    2. ' turns' → logprob: -3.4131710529327393
    3. '   ' → logprob: -5.413171291351318
    4. '       ' → logprob: -11.16317081451416
    5. '(turn' → logprob: -11.28817081451416
    6. '           ' → logprob: -11.53817081451416
    7. 'Turns' → logprob: -12.53817081451416
    8. ' ' → logprob: -12.53817081451416
    9. '_turn' → logprob: -13.16317081451416
    10. ' turn' → logprob: -13.28817081451416

Token 1020: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.0445127372804563e-05
    2. '+' → logprob: -12.37501049041748
    3. 'used' → logprob: -12.37501049041748
    4. 'Used' → logprob: -14.00001049041748
    5. '   ' → logprob: -15.12501049041748
    6. '```' → logprob: -15.50001049041748
    7. '_USED' → logprob: -15.62501049041748
    8. '_tokens' → logprob: -16.375009536743164
    9. '_us' → logprob: -16.750009536743164
    10. '[' → logprob: -17.000009536743164

Token 1021: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024874303489923477
    2. ' +' → logprob: -6.002487659454346
    3. '           ' → logprob: -12.752487182617188
    4. '[' → logprob: -12.877487182617188
    5. '```' → logprob: -13.627487182617188
    6. '   ' → logprob: -13.877487182617188
    7. ':
' → logprob: -14.377487182617188
    8. ':' → logprob: -14.502487182617188
    9. '+[' → logprob: -14.502487182617188
    10. '+
' → logprob: -14.627487182617188

Token 1022: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '```' → logprob: -15.250001907348633
    5. '+' → logprob: -16.125001907348633
    6. '
' → logprob: -16.500001907348633
    7. '       ' → logprob: -18.062501907348633
    8. '[' → logprob: -18.125001907348633
    9. '<|end|>' → logprob: -18.625001907348633
    10. '           ' → logprob: -18.687501907348633

Token 1023: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15138451755046844
    2. ':
' → logprob: -2.0263845920562744
    3. '               ' → logprob: -5.026384353637695
    4. '):' → logprob: -7.276384353637695
    5. '):
' → logprob: -7.776384353637695
    6. '       ' → logprob: -7.901384353637695
    7. '           ' → logprob: -8.776384353637695
    8. '<|end|>' → logprob: -8.776384353637695
    9. ' and' → logprob: -10.026384353637695
    10. '=' → logprob: -10.151384353637695

Token 1024: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008933556382544339
    2. '       ' → logprob: -7.875893592834473
    3. '           ' → logprob: -8.375893592834473
    4. '```' → logprob: -8.750893592834473
    5. '<|end|>' → logprob: -10.500893592834473
    6. '                   ' → logprob: -10.500893592834473
    7. ' continue' → logprob: -11.250893592834473
    8. '                       ' → logprob: -11.500893592834473
    9. ' he' → logprob: -11.750893592834473
    10. ')' → logprob: -12.000893592834473

Token 1025: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03455209359526634
    2. 'visited' (adapté à ' visited') → logprob: -3.4095520973205566
    3. ' visited' → logprob: -7.534552097320557
    4. '                   ' → logprob: -8.534551620483398
    5. '```' → logprob: -9.034551620483398
    6. '                ' → logprob: -10.784551620483398
    7. '           ' → logprob: -11.159551620483398
    8. 'continue' → logprob: -11.784551620483398
    9. '                       ' → logprob: -12.659551620483398
    10. '              ' → logprob: -12.659551620483398

Token 1026: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0003357006062287837
    2. '[' → logprob: -8.000335693359375
    3. 'y' → logprob: -17.000335693359375
    4. '[user' → logprob: -17.000335693359375
    5. ' [' → logprob: -17.250335693359375
    6. '           ' → logprob: -17.250335693359375
    7. '```' → logprob: -17.750335693359375
    8. '][' → logprob: -18.000335693359375
    9. '[n' → logprob: -18.375335693359375
    10. '[u' → logprob: -19.000335693359375

Token 1027: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.2576454335358e-05
    2. '[' → logprob: -10.000092506408691
    3. '][' → logprob: -10.000092506408691
    4. '[x' → logprob: -14.875092506408691
    5. 'y' → logprob: -15.250092506408691
    6. '           ' → logprob: -15.750092506408691
    7. '```' → logprob: -15.875092506408691
    8. ' [' → logprob: -16.000093460083008
    9. '       ' → logprob: -16.375093460083008
    10. '   ' → logprob: -16.375093460083008

Token 1028: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001884015218820423
    2. 'x' → logprob: -8.625188827514648
    3. ' y' → logprob: -11.750188827514648
    4. '[y' → logprob: -14.000188827514648
    5. '   ' → logprob: -17.62518882751465
    6. '[' → logprob: -18.00018882751465
    7. '	y' → logprob: -18.75018882751465
    8. ''y' → logprob: -19.00018882751465
    9. ')y' → logprob: -19.12518882751465
    10. '```' → logprob: -19.50018882751465

Token 1029: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36519286036491394
    2. ' =' → logprob: -1.6151928901672363
    3. ']' → logprob: -2.4901928901672363
    4. ']=' → logprob: -3.8651928901672363
    5. '               ' → logprob: -6.615192890167236
    6. '                   ' → logprob: -6.615192890167236
    7. '           ' → logprob: -8.365192413330078
    8. '[' → logprob: -9.490192413330078
    9. ']>' → logprob: -10.115192413330078
    10. '[y' → logprob: -10.490192413330078

Token 1030: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717386189848185
    2. ' =' → logprob: -5.006717205047607
    3. '=y' → logprob: -14.381717681884766
    4. '[' → logprob: -15.131717681884766
    5. '   ' → logprob: -15.756717681884766
    6. '=
' → logprob: -15.881717681884766
    7. '=n' → logprob: -16.131717681884766
    8. '=x' → logprob: -16.506717681884766
    9. '[y' → logprob: -16.631717681884766
    10. '=int' → logprob: -16.756717681884766

Token 1031: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.011053125374019146
    2. ' turns' → logprob: -4.511053085327148
    3. '   ' → logprob: -12.636053085327148
    4. '(turn' → logprob: -13.386053085327148
    5. '_turn' → logprob: -15.886053085327148
    6. ' turn' → logprob: -16.26105308532715
    7. '-turn' → logprob: -16.51105308532715
    8. '       ' → logprob: -16.76105308532715
    9. 'turned' → logprob: -16.88605308532715
    10. 'Turns' → logprob: -17.38605308532715

Token 1032: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.2017628699541092
    2. '+' → logprob: -1.7017629146575928
    3. 'used' → logprob: -8.326763153076172
    4. '   ' → logprob: -10.701763153076172
    5. ' +' → logprob: -10.701763153076172
    6. 'Used' → logprob: -10.826763153076172
    7. '[' → logprob: -10.826763153076172
    8. '1' → logprob: -11.076763153076172
    9. '```' → logprob: -12.826763153076172
    10. ' ' → logprob: -13.701763153076172

Token 1033: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009122979827225208
    2. ' +' → logprob: -7.000912189483643
    3. '()+' → logprob: -14.6259126663208
    4. '1' → logprob: -16.625911712646484
    5. '[' → logprob: -17.500911712646484
    6. '           ' → logprob: -17.750911712646484
    7. '   ' → logprob: -18.000911712646484
    8. '               ' → logprob: -18.250911712646484
    9. '+
' → logprob: -18.250911712646484
    10. '＋' → logprob: -18.250911712646484

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '+' → logprob: -17.0
    4. '   ' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. '`' → logprob: -19.75
    7. '[' → logprob: -20.0625
    8. '
' → logprob: -20.25
    9. '       ' → logprob: -20.3125
    10. '           ' → logprob: -20.375

Token 1035: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006082733627408743
    2. '```' → logprob: -6.256082534790039
    3. ' he' → logprob: -6.881082534790039
    4. '
' → logprob: -6.881082534790039
    5. '<|end|>' → logprob: -7.131082534790039
    6. '                
' → logprob: -7.131082534790039
    7. ',' → logprob: -9.006082534790039
    8. 'he' → logprob: -9.631082534790039
    9. '                   ' → logprob: -9.881082534790039
    10. '              ' → logprob: -10.131082534790039

Token 1036: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027897433028556406
    2. '```' → logprob: -8.875279426574707
    3. '       ' → logprob: -10.375279426574707
    4. ' he' → logprob: -10.750279426574707
    5. '   ' → logprob: -10.750279426574707
    6. '           ' → logprob: -10.875279426574707
    7. '                   ' → logprob: -11.375279426574707
    8. ',' → logprob: -11.875279426574707
    9. '              ' → logprob: -12.250279426574707
    10. '			' → logprob: -12.250279426574707

Token 1037: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.2605350911617279
    2. ' he' → logprob: -1.5105351209640503
    3. '               ' → logprob: -4.76053524017334
    4. '           ' → logprob: -12.51053524017334
    5. '   ' → logprob: -12.88553524017334
    6. '                   ' → logprob: -13.88553524017334
    7. '              ' → logprob: -15.01053524017334
    8. '```' → logprob: -15.76053524017334
    9. '       ' → logprob: -15.88553524017334
    10. '                ' → logprob: -16.010534286499023

Token 1038: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011629798245849088
    2. 'pp' → logprob: -9.875116348266602
    3. 'ap' → logprob: -10.250116348266602
    4. 'push' → logprob: -11.000116348266602
    5. '```' → logprob: -12.125116348266602
    6. 'he' → logprob: -12.375116348266602
    7. 'appen' → logprob: -14.375116348266602
    8. 'p' → logprob: -15.250116348266602
    9. 'append' → logprob: -15.250116348266602
    10. '   ' → logprob: -15.250116348266602

Token 1039: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00027301779482513666
    2. 'push' → logprob: -8.250272750854492
    3. 'sh' → logprob: -12.375272750854492
    4. 'op' → logprob: -13.000272750854492
    5. '```' → logprob: -13.125272750854492
    6. 'us' → logprob: -14.625272750854492
    7. 'p' → logprob: -14.625272750854492
    8. 'Push' → logprob: -14.750272750854492
    9. 'ushed' → logprob: -14.750272750854492
    10. 'ushing' → logprob: -15.500272750854492

Token 1040: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.875000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(
' → logprob: -16.125001907348633
    5. 'hq' → logprob: -16.250001907348633
    6. ' h' → logprob: -16.875001907348633
    7. '(q' → logprob: -16.875001907348633
    8. '[h' → logprob: -17.000001907348633
    9. 'h' → logprob: -17.125001907348633
    10. ',h' → logprob: -17.250001907348633

Token 1041: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005389740690588951
    2. '(h' → logprob: -7.6255388259887695
    3. 'hq' → logprob: -10.12553882598877
    4. 'qh' → logprob: -12.00053882598877
    5. '(q' → logprob: -13.12553882598877
    6. 'h' → logprob: -13.75053882598877
    7. '```' → logprob: -14.12553882598877
    8. ')' → logprob: -15.50053882598877
    9. '_q' → logprob: -15.87553882598877
    10. '	q' → logprob: -16.125539779663086

Token 1042: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.8670179997570813e-05
    2. '(q' → logprob: -12.125019073486328
    3. '```' → logprob: -12.125019073486328
    4. ' (' → logprob: -12.875019073486328
    5. '(
' → logprob: -13.500019073486328
    6. ',' → logprob: -13.625019073486328
    7. '(' → logprob: -13.625019073486328
    8. ',h' → logprob: -14.125019073486328
    9. '(hr' → logprob: -15.375019073486328
    10. 'hq' → logprob: -16.000019073486328

Token 1043: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.00030972150852903724
    2. ' turns' → logprob: -8.250309944152832
    3. '(turn' → logprob: -10.250309944152832
    4. '   ' → logprob: -11.500309944152832
    5. '```' → logprob: -13.875309944152832
    6. 'turned' → logprob: -14.500309944152832
    7. '-turn' → logprob: -15.000309944152832
    8. '_turn' → logprob: -15.625309944152832
    9. '(' → logprob: -15.625309944152832
    10. '               ' → logprob: -15.875309944152832

Token 1044: 's' (ID: 82)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.001105448347516358
    2. '+' → logprob: -7.501105308532715
    3. '1' → logprob: -8.126105308532715
    4. 'used' → logprob: -9.251105308532715
    5. 'Used' → logprob: -9.876105308532715
    6. '(' → logprob: -10.376105308532715
    7. '```' → logprob: -10.751105308532715
    8. '   ' → logprob: -11.501105308532715
    9. '_turn' → logprob: -12.126105308532715
    10. '++' → logprob: -12.126105308532715

Token 1045: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.002203070791438222
    2. '+' → logprob: -6.252202987670898
    3. 'used' → logprob: -8.877202987670898
    4. '(' → logprob: -10.252202987670898
    5. '   ' → logprob: -11.252202987670898
    6. 'Used' → logprob: -11.377202987670898
    7. '_USED' → logprob: -11.377202987670898
    8. '```' → logprob: -11.627202987670898
    9. '++' → logprob: -11.752202987670898
    10. '_turn' → logprob: -12.127202987670898

Token 1046: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007891403511166573
    2. '[' → logprob: -7.750789165496826
    3. ' +' → logprob: -8.125788688659668
    4. '+y' → logprob: -10.500788688659668
    5. '[y' → logprob: -10.625788688659668
    6. '+[' → logprob: -12.500788688659668
    7. '```' → logprob: -13.625788688659668
    8. '+x' → logprob: -13.875788688659668
    9. ')+' → logprob: -14.000788688659668
    10. '1' → logprob: -14.625788688659668

Token 1047: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.711794376373291
    2. 'y' → logprob: -0.711794376373291
    3. 'x' → logprob: -4.086794376373291
    4. 'turn' → logprob: -7.711794376373291
    5. '```' → logprob: -8.336793899536133
    6. ' y' → logprob: -8.461793899536133
    7. ' ' → logprob: -8.961793899536133
    8. '+' → logprob: -9.086793899536133
    9. '[y' → logprob: -9.461793899536133
    10. '(y' → logprob: -9.711793899536133

Token 1048: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05494717136025429
    2. ',y' → logprob: -2.9299471378326416
    3. ',x' → logprob: -10.804946899414062
    4. ',user' → logprob: -11.179946899414062
    5. ' ,' → logprob: -11.304946899414062
    6. '```' → logprob: -12.554946899414062
    7. ',j' → logprob: -12.804946899414062
    8. ',n' → logprob: -13.179946899414062
    9. ',
' → logprob: -13.429946899414062
    10. ',w' → logprob: -13.804946899414062

Token 1049: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.006339810788631439
    2. ',' → logprob: -5.131340026855469
    3. 'x' → logprob: -8.256340026855469
    4. ' ,' → logprob: -8.881340026855469
    5. ' x' → logprob: -12.506340026855469
    6. '[x' → logprob: -12.631340026855469
    7. '```' → logprob: -12.756340026855469
    8. '   ' → logprob: -14.131340026855469
    9. '[' → logprob: -14.631340026855469
    10. ',
' → logprob: -14.881340026855469

Token 1050: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017982310382649302
    2. '))
' → logprob: -6.626798152923584
    3. '               ' → logprob: -8.251798629760742
    4. '           ' → logprob: -9.126798629760742
    5. ')' → logprob: -9.501798629760742
    6. '   ' → logprob: -11.376798629760742
    7. '       ' → logprob: -11.626798629760742
    8. '                   ' → logprob: -12.251798629760742
    9. ')))' → logprob: -13.876798629760742
    10. ' ))' → logprob: -14.751798629760742

Token 1051: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1052: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.55726557970047
    2. '
' → logprob: -0.93226557970047
    3. '```' → logprob: -3.932265520095825
    4. '<|end|>' → logprob: -5.057265758514404
    5. 'if' → logprob: -5.307265758514404
    6. '   ' → logprob: -6.682265758514404
    7. ')' → logprob: -7.557265758514404
    8. '    
' → logprob: -7.932265758514404
    9. '\n' → logprob: -9.307265281677246
    10. '``' → logprob: -9.557265281677246

Token 1053: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07654658704996109
    2. '('' → logprob: -2.8265466690063477
    3. '(ans' → logprob: -4.326546669006348
    4. '(' → logprob: -6.826546669006348
    5. 'ans' → logprob: -9.576546669006348
    6. '(int' → logprob: -9.826546669006348
    7. '"' → logprob: -10.701546669006348
    8. '(("' → logprob: -11.451546669006348
    9. '(True' → logprob: -11.576546669006348
    10. '1' → logprob: -13.201546669006348

Token 1054: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.4767369031906128
    2. 'YES' → logprob: -0.9767369031906128
    3. '"' → logprob: -6.851737022399902
    4. 'Possible' → logprob: -7.351737022399902
    5. 'yes' → logprob: -7.726737022399902
    6. 'OK' → logprob: -8.476737022399902
    7. 'True' → logprob: -9.351737022399902
    8. 'P' → logprob: -10.101737022399902
    9. 'Y' → logprob: -10.226737022399902
    10. 'possible' → logprob: -10.851737022399902

Token 1055: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03809507563710213
    2. '")' → logprob: -3.288094997406006
    3. '")
' → logprob: -9.913095474243164
    4. 'if' → logprob: -13.038095474243164
    5. '```' → logprob: -14.163095474243164
    6. ')"' → logprob: -15.038095474243164
    7. '")
' → logprob: -15.163095474243164
    8. '\n' → logprob: -15.913095474243164
    9. '")

' → logprob: -16.038095474243164
    10. ' if' → logprob: -16.163095474243164

Token 1056: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011202491819858551
    2. ' if' → logprob: -4.636202335357666
    3. 'if' → logprob: -6.636202335357666
    4. '   ' → logprob: -9.511202812194824
    5. '")' → logprob: -10.261202812194824
    6. ',' → logprob: -12.011202812194824
    7. ')")' → logprob: -12.011202812194824
    8. '==' → logprob: -12.136202812194824
    9. ' )' → logprob: -13.386202812194824
    10. ')
' → logprob: -14.261202812194824

Token 1057: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031784253660589457
    2. ' ans' → logprob: -5.753178596496582
    3. '(ans' → logprob: -14.253178596496582
    4. '	ans' → logprob: -17.753177642822266
    5. '   ' → logprob: -19.128177642822266
    6. 'answer' → logprob: -20.253177642822266
    7. ' ' → logprob: -21.253177642822266
    8. '_ans' → logprob: -21.378177642822266
    9. 'Ans' → logprob: -21.753177642822266
    10. 'ANS' → logprob: -23.128177642822266

Token 1058: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3873649537563324
    2. 'else' → logprob: -1.1373649835586548
    3. '==' → logprob: -7.637364864349365
    4. ' ==' → logprob: -12.387365341186523
    5. ')' → logprob: -12.762365341186523
    6. '   ' → logprob: -13.012365341186523
    7. '```' → logprob: -13.387365341186523
    8. ' ' → logprob: -15.137365341186523
    9. '	else' → logprob: -15.387365341186523
    10. '  ' → logprob: -15.887365341186523

Token 1059: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10114812105894089
    2. '"No' → logprob: -2.3511481285095215
    3. ' "' → logprob: -7.1011481285095215
    4. 'No' → logprob: -9.851147651672363
    5. ' No' → logprob: -10.351147651672363
    6. '   ' → logprob: -10.976147651672363
    7. '("' → logprob: -11.726147651672363
    8. ''' → logprob: -12.351147651672363
    9. ')' → logprob: -13.601147651672363
    10. ' ' → logprob: -14.226147651672363

Token 1060: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005556552205234766
    2. '"No' → logprob: -7.500555515289307
    3. '"' → logprob: -13.000555992126465
    4. 'NO' → logprob: -15.500555992126465
    5. '
' → logprob: -16.25055503845215
    6. ' No' → logprob: -16.50055503845215
    7. '   ' → logprob: -17.50055503845215
    8. '“No' → logprob: -18.00055503845215
    9. 'Impossible' → logprob: -18.87555503845215
    10. '>No' → logprob: -19.25055503845215

Token 1061: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08183198422193527
    2. ')' → logprob: -2.581831932067871
    3. ')")' → logprob: -5.831831932067871
    4. '}")' → logprob: -13.081831932067871
    5. '')' → logprob: -14.081831932067871
    6. '`)' → logprob: -14.081831932067871
    7. '+")' → logprob: -15.581831932067871
    8. '")
' → logprob: -15.581831932067871
    9. '())' → logprob: -15.706831932067871
    10. '")}' → logprob: -15.956831932067871


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1059
Tokens correctement prédits (1ère position, stricte): 375
Tokens correctement prédits (1ère position, avec adaptation): 400
Tokens correctement prédits (top 10): 766
Précision stricte (1ère position): 35.41%
Précision adaptée (1ère position): 37.77%
Précision (top 10): 72.33%
================================================================================
