================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class SegmentTreeNode:
    __slots__ = ['l', 'r', 'left', 'right', 'hash_val', 'lazy', 'length']
    def __init__(self, l, r):
        self.l = l
        self.r = r
        self.left = None
        self.right = None
        self.hash_val = 0
        self.lazy = None
        self.length = r - l + 1

class SegmentTree:
    MOD1 = 10**9 + 7
    MOD2 = 10**9 + 9
    BASE = 131

    def __init__(self, s):
        self.n = len(s)
        self.s = s
        self.pow1 = [1]*(self.n+1)
        self.pow2 = [1]*(self.n+1)
        for i in range(self.n):
            self.pow1[i+1] = self.pow1[i]*self.BASE % self.MOD1
            self.pow2[i+1] = self.pow2[i]*self.BASE % self.MOD2
        self.root = self.build(0, self.n-1)

    def calc_hash(self, c, length):
        """hash of c repeated length times"""
        val1 = (ord(c) * (self.pow1[length] -1) * pow(self.BASE-1, -1, self.MOD1)) % self.MOD1
        val2 = (ord(c) * (self.pow2[length] -1) * pow(self.BASE-1, -1, self.MOD2)) % self.MOD2
        return (val1, val2)

    def build(self, l, r):
        node = SegmentTreeNode(l, r)
        if l == r:
            val = ord(self.s[l])
            node.hash_val = (val % self.MOD1, val % self.MOD2)
            return node
        m = (l+r)//2
        node.left = self.build(l, m)
        node.right = self.build(m+1, r)
        node.hash_val = self.merge(node.left.hash_val, node.right.hash_val, node.right.length)
        return node

    def merge(self, left_hash, right_hash, right_length):
        val1 = ( (left_hash[0]*self.pow1[right_length]) + right_hash[0]) % self.MOD1
        val2 = ( (left_hash[1]*self.pow2[right_length]) + right_hash[1]) % self.MOD2
        return (val1, val2)

    def pushdown(self, node):
        if node.lazy is not None and node.left:
            c = node.lazy
            node.left.lazy = c
            node.right.lazy = c
            node.left.hash_val = self.calc_hash(c, node.left.length)
            node.right.hash_val = self.calc_hash(c, node.right.length)
            node.lazy = None

    def update(self, node, l, r, c):
        if node.r < l or node.l > r:
            return
        if l <= node.l and node.r <= r:
            node.lazy = c
            node.hash_val = self.calc_hash(c, node.length)
            return
        self.pushdown(node)
        self.update(node.left, l, r, c)
        self.update(node.right, l, r, c)
        node.hash_val = self.merge(node.left.hash_val, node.right.hash_val, node.right.length)

    def query(self, node, l, r):
        if node.r < l or node.l > r:
            return (0,0,0)  # hash 0, length 0
        if l <= node.l and node.r <= r:
            return (node.hash_val[0], node.hash_val[1], node.length)
        self.pushdown(node)
        left_hash = self.query(node.left, l, r)
        right_hash = self.query(node.right, l, r)
        if left_hash[2] == 0:
            return right_hash
        if right_hash[2] == 0:
            return left_hash
        merged = (
            (left_hash[0]*self.pow1[right_hash[2]] + right_hash[0]) % self.MOD1,
            (left_hash[1]*self.pow2[right_hash[2]] + right_hash[1]) % self.MOD2,
            left_hash[2] + right_hash[2]
        )
        return merged


def main():
    N = int(input())
    U = input().rstrip('\n')
    Q = int(input())
    st = SegmentTree(U)

    # binary search for first diff char between s1[a:b] and s2[c:d]
    def first_diff(a, b, c, d):
        length = min(b - a +1, d - c +1)
        low = 0
        high = length
        while low < high:
            mid = (low + high) // 2
            h1 = st.query(st.root, a, a+mid)
            h2 = st.query(st.root, c, c+mid)
            if h1[0] == h2[0] and h1[1] == h2[1]:
                low = mid + 1
            else:
                high = mid
        return low

    for _ in range(Q):
        line = input().split()
        if line[0] == 'set':
            x, y, z = int(line[1])-1, int(line[2])-1, line[3]
            st.update(st.root, x, y, z)
        else:
            a, b, c, d = int(line[1])-1, int(line[2])-1, int(line[3])-1, int(line[4])-1
            diff = first_diff(a, b, c, d)
            len1 = b - a + 1
            len2 = d - c + 1
            if diff == min(len1, len2):
                if len1 == len2:
                    print('e')
                elif len1 < len2:
                    print('s')
                else:
                    print('t')
            else:
                ch1 = st.query(st.root, a+diff, a+diff)
                ch2 = st.query(st.root, c+diff, c+diff)
                if ch1[0] < ch2[0]:
                    print('s')
                else:
                    print('t')

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6398184895515442
    2. '_' → logprob: -2.3898184299468994
    3. 't' → logprob: -2.3898184299468994
    4. 'default' → logprob: -2.8898184299468994
    5. '_trace' → logprob: -2.8898184299468994
    6. 's' → logprob: -3.2648184299468994
    7. 'sys' → logprob: -3.6398184299468994
    8. '_sys' → logprob: -3.7648184299468994
    9. 'set' → logprob: -4.5148186683654785
    10. 'x' → logprob: -4.6398186683654785

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007869947585277259
    2. 'ursive' → logprob: -7.375786781311035
    3. 'urs' → logprob: -10.000786781311035
    4. 'ursor' → logprob: -10.875786781311035
    5. 'ision' → logprob: -11.250786781311035
    6. 'alc' → logprob: -11.625786781311035
    7. 'set' → logprob: -11.625786781311035
    8. '_limit' → logprob: -11.750786781311035
    9. 'ursively' → logprob: -11.875786781311035
    10. 't' → logprob: -12.125786781311035

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9265931248664856
    2. '(' → logprob: -1.5515930652618408
    3. '\' → logprob: -1.6765930652618408
    4. '\n' → logprob: -2.676593065261841
    5. '()' → logprob: -2.926593065261841
    6. ')' → logprob: -3.926593065261841
    7. '(
' → logprob: -4.05159330368042
    8. '
' → logprob: -4.80159330368042
    9. '' → logprob: -4.92659330368042
    10. '#' → logprob: -5.05159330368042

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037763383239507675
    2. '()' → logprob: -3.4127633571624756
    3. '.' → logprob: -6.662763595581055
    4. '_data' → logprob: -7.412763595581055
    5. '=' → logprob: -8.162763595581055
    6. '('' → logprob: -8.162763595581055
    7. 'data' → logprob: -8.287763595581055
    8. ' =' → logprob: -8.412763595581055
    9. '().' → logprob: -8.412763595581055
    10. ')' → logprob: -9.037763595581055

Token 15: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7381578087806702
    2. ' sys' → logprob: -0.7381578087806702
    3. 'input' → logprob: -3.2381577491760254
    4. 'sys' → logprob: -5.488157749176025
    5. ' ' → logprob: -8.488158226013184
    6. ' raw' → logprob: -8.863158226013184
    7. ' lambda' → logprob: -9.113158226013184
    8. ' open' → logprob: -9.238158226013184
    9. ' iter' → logprob: -10.613158226013184
    10. '=sys' → logprob: -11.863158226013184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00215799524448812
    2. '.readline' → logprob: -6.627158164978027
    3. ' .' → logprob: -7.627158164978027
    4. '.stdin' → logprob: -8.502158164978027
    5. '.import' → logprob: -10.502158164978027
    6. '.
' → logprob: -11.252158164978027
    7. '.input' → logprob: -11.627158164978027
    8. '.get' → logprob: -11.752158164978027
    9. '.read' → logprob: -12.002158164978027
    10. '.stdout' → logprob: -12.002158164978027

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.17101041972637177
    2. '.' → logprob: -1.9210103750228882
    3. '.read' → logprob: -4.546010494232178
    4. '.Read' → logprob: -9.42101001739502
    5. '.readlines' → logprob: -11.29601001739502
    6. '.buffer' → logprob: -11.67101001739502
    7. '.READ' → logprob: -12.92101001739502
    8. '.stdin' → logprob: -13.04601001739502
    9. '.
' → logprob: -13.17101001739502
    10. 'read' → logprob: -13.29601001739502

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5071650147438049
    2. 'def' → logprob: -2.25716495513916
    3. '\n' → logprob: -2.50716495513916
    4. '(' → logprob: -2.75716495513916
    5. '()
' → logprob: -3.13216495513916
    6. '
' → logprob: -3.25716495513916
    7. '()

' → logprob: -3.88216495513916
    8. '\' → logprob: -4.63216495513916
    9. '(
' → logprob: -4.63216495513916
    10. '()\' → logprob: -5.00716495513916

Token 19: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04888903722167015
    2. 'n' → logprob: -3.048888921737671
    3. 'class' → logprob: -9.04888916015625
    4. '```' → logprob: -9.54888916015625
    5. 'N' → logprob: -10.17388916015625
    6. 'd' → logprob: -10.54888916015625
    7. '\' → logprob: -10.67388916015625
    8. 'from' → logprob: -11.54888916015625
    9. '\n' → logprob: -12.67388916015625
    10. 'a' → logprob: -12.67388916015625

Token 20: ' Segment' (ID: 64922)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.27912870049476624
    2. ' Trie' → logprob: -2.0291287899017334
    3. ' Tree' → logprob: -3.0291287899017334
    4. ' Node' → logprob: -3.6541287899017334
    5. ' DFS' → logprob: -4.279128551483154
    6. 'Solution' → logprob: -4.904128551483154
    7. ' Binary' → logprob: -5.154128551483154
    8. ' Segment' → logprob: -5.279128551483154
    9. ' Solver' → logprob: -6.654128551483154
    10. ' Factor' → logprob: -6.654128551483154

Token 21: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.00022272850037552416
    2. ' Tree' → logprob: -8.625223159790039
    3. 'Tre' → logprob: -11.500223159790039
    4. '	Tree' → logprob: -11.875223159790039
    5. 'Tr' → logprob: -12.125223159790039
    6. '(Tree' → logprob: -12.125223159790039
    7. ':' → logprob: -12.125223159790039
    8. '<Tree' → logprob: -12.375223159790039
    9. 'T' → logprob: -12.875223159790039
    10. '_T' → logprob: -13.750223159790039

Token 22: 'Node' (ID: 2701)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002560945285949856
    2. '(' → logprob: -8.375256538391113
    3. '(object' → logprob: -12.125256538391113
    4. '():' → logprob: -12.250256538391113
    5. ':**' → logprob: -12.750256538391113
    6. ' :' → logprob: -12.875256538391113
    7. '[' → logprob: -13.125256538391113
    8. '{' → logprob: -13.375256538391113
    9. ':
' → logprob: -13.750256538391113
    10. '):' → logprob: -14.000256538391113

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010279403068125248
    2. '(' → logprob: -4.635279178619385
    3. ' :' → logprob: -7.885279178619385
    4. '(object' → logprob: -10.135279655456543
    5. '():' → logprob: -10.385279655456543
    6. ' (' → logprob: -10.385279655456543
    7. '<|end|>' → logprob: -11.510279655456543
    8. '[' → logprob: -12.010279655456543
    9. '.' → logprob: -12.260279655456543
    10. ':**' → logprob: -12.385279655456543

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13934162259101868
    2. '   ' → logprob: -2.6393415927886963
    3. '(' → logprob: -3.7643415927886963
    4. ':
' → logprob: -4.514341831207275
    5. '<|end|>' → logprob: -4.764341831207275
    6. '(object' → logprob: -5.514341831207275
    7. ' ' → logprob: -5.639341831207275
    8. ' def' → logprob: -6.014341831207275
    9. 'def' → logprob: -6.014341831207275
    10. ' :' → logprob: -6.639341831207275

Token 25: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6209402680397034
    2. '   ' → logprob: -1.1209402084350586
    3. ':' → logprob: -2.4959402084350586
    4. ' def' → logprob: -3.2459402084350586
    5. 'class' → logprob: -5.245940208435059
    6. ':
' → logprob: -5.745940208435059
    7. '(' → logprob: -6.120940208435059
    8. 'pass' → logprob: -6.745940208435059
    9. ':def' → logprob: -7.120940208435059
    10. '(object' → logprob: -7.745940208435059

Token 26: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.25195780396461487
    2. 'slots' → logprob: -1.5019577741622925
    3. 'slot' → logprob: -11.626957893371582
    4. 'int' → logprob: -11.751957893371582
    5. ' slots' → logprob: -11.876957893371582
    6. '_slots' → logprob: -12.751957893371582
    7. '_init' → logprob: -13.501957893371582
    8. ' init' → logprob: -15.376957893371582
    9. '```' → logprob: -15.501957893371582
    10. 'in' → logprob: -16.501956939697266

Token 27: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4498052223643754e-05
    2. '=' → logprob: -11.875014305114746
    3. '__('' → logprob: -12.500014305114746
    4. '___' → logprob: -13.250014305114746
    5. '=['' → logprob: -13.500014305114746
    6. '____' → logprob: -15.500014305114746
    7. '__.__' → logprob: -16.250015258789062
    8. '__.' → logprob: -16.250015258789062
    9. '__[' → logprob: -16.500015258789062
    10. '__["' → logprob: -17.250015258789062

Token 28: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.049680761992931366
    2. '=' → logprob: -3.049680709838867
    3. ' =' → logprob: -7.299680709838867
    4. '=['' → logprob: -8.174680709838867
    5. '___' → logprob: -9.799680709838867
    6. '['' → logprob: -10.424680709838867
    7. '_=' → logprob: -11.174680709838867
    8. '__('' → logprob: -11.299680709838867
    9. '_' → logprob: -11.799680709838867
    10. '__[' → logprob: -12.174680709838867

Token 29: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.0028334856033325
    2. ''' → logprob: -1.7528334856033325
    3. ''s' → logprob: -1.7528334856033325
    4. '('__' → logprob: -2.377833366394043
    5. '('_' → logprob: -2.502833366394043
    6. '('' → logprob: -2.627833366394043
    7. '['_' → logprob: -3.627833366394043
    8. ''_' → logprob: -5.127833366394043
    9. ''name' → logprob: -6.877833366394043
    10. ''t' → logprob: -7.252833366394043

Token 30: 'l' (ID: 75)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16995733976364136
    2. 'start' → logprob: -2.544957399368286
    3. 'value' → logprob: -3.169957399368286
    4. 'l' → logprob: -4.169957160949707
    5. 'val' → logprob: -4.669957160949707
    6. '_left' → logprob: -5.044957160949707
    7. '_start' → logprob: -5.919957160949707
    8. '_value' → logprob: -7.419957160949707
    9. '_val' → logprob: -8.169957160949707
    10. '_l' → logprob: -8.419957160949707

Token 31: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.006438130512833595
    2. 'eft' → logprob: -5.381438255310059
    3. '','' → logprob: -6.506438255310059
    4. ',' → logprob: -8.131438255310059
    5. ''' → logprob: -12.006438255310059
    6. 'e' → logprob: -12.256438255310059
    7. 'ef' → logprob: -12.381438255310059
    8. ',r' → logprob: -12.756438255310059
    9. '_',' → logprob: -13.131438255310059
    10. 'child' → logprob: -13.256438255310059

Token 32: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009502127766609192
    2. ' r' → logprob: -4.759501934051514
    3. ''r' → logprob: -7.259501934051514
    4. ' '' → logprob: -9.259502410888672
    5. '   ' → logprob: -9.384502410888672
    6. ''' → logprob: -13.259502410888672
    7. ' ' → logprob: -13.384502410888672
    8. '	r' → logprob: -14.634502410888672
    9. ''''' → logprob: -15.884502410888672
    10. '_r' → logprob: -16.009502410888672

Token 33: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1041145626222715e-05
    2. ' r' → logprob: -12.375011444091797
    3. 'val' → logprob: -13.750011444091797
    4. 'value' → logprob: -14.250011444091797
    5. 'mid' → logprob: -14.250011444091797
    6. '```' → logprob: -14.375011444091797
    7. '   ' → logprob: -14.500011444091797
    8. 'node' → logprob: -15.312511444091797
    9. 'data' → logprob: -15.750011444091797
    10. 'h' → logprob: -15.812511444091797

Token 34: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12737447023391724
    2. '',' → logprob: -2.1273744106292725
    3. '']' → logprob: -8.127374649047852
    4. ' ,' → logprob: -9.127374649047852
    5. ']' → logprob: -10.502374649047852
    6. ''' → logprob: -12.627374649047852
    7. ','' → logprob: -12.877374649047852
    8. ' ',' → logprob: -12.877374649047852
    9. '   ' → logprob: -13.002374649047852
    10. '','' → logprob: -13.002374649047852

Token 35: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.0659254938364029
    2. ''' → logprob: -3.1909255981445312
    3. ''value' → logprob: -3.9409255981445312
    4. ''t' → logprob: -7.065925598144531
    5. ''s' → logprob: -7.190925598144531
    6. ''m' → logprob: -7.565925598144531
    7. 'value' → logprob: -8.690925598144531
    8. ''d' → logprob: -9.190925598144531
    9. ''y' → logprob: -9.315925598144531
    10. ''l' → logprob: -10.065925598144531

Token 36: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8700864315032959
    2. 'val' → logprob: -0.9950864315032959
    3. 'mid' → logprob: -2.870086431503296
    4. 'max' → logprob: -2.995086431503296
    5. 'value' → logprob: -3.120086431503296
    6. 'sum' → logprob: -3.370086431503296
    7. 'min' → logprob: -4.120086669921875
    8. 'count' → logprob: -6.245086669921875
    9. 'm' → logprob: -6.620086669921875
    10. ''' → logprob: -6.620086669921875

Token 37: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.250948429107666
    2. '',' → logprob: -1.625948429107666
    3. '_child' → logprob: -3.875948429107666
    4. 'child' → logprob: -5.750948429107666
    5. ' ,' → logprob: -8.000947952270508
    6. 'Child' → logprob: -8.375947952270508
    7. '_node' → logprob: -8.750947952270508
    8. '']' → logprob: -9.125947952270508
    9. '','' → logprob: -9.250947952270508
    10. '_children' → logprob: -9.625947952270508

Token 38: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001917214714922011
    2. ' '' → logprob: -6.376917362213135
    3. ''s' → logprob: -9.876916885375977
    4. ''r' → logprob: -10.001916885375977
    5. ''value' → logprob: -10.126916885375977
    6. '   ' → logprob: -10.376916885375977
    7. 'right' → logprob: -10.626916885375977
    8. '',' → logprob: -12.126916885375977
    9. ''re' → logprob: -12.876916885375977
    10. ',right' → logprob: -13.376916885375977

Token 39: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.860340752406046e-05
    2. ' right' → logprob: -9.7500581741333
    3. '	right' → logprob: -16.500059127807617
    4. 'r' → logprob: -16.750059127807617
    5. 'rig' → logprob: -17.875059127807617
    6. '```' → logprob: -17.875059127807617
    7. ' ' → logprob: -18.000059127807617
    8. 'ight' → logprob: -18.125059127807617
    9. '   ' → logprob: -18.125059127807617
    10. '_right' → logprob: -18.500059127807617

Token 40: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16582967340946198
    2. '',' → logprob: -1.9158296585083008
    3. '']' → logprob: -5.415829658508301
    4. ']' → logprob: -6.915829658508301
    5. ' ,' → logprob: -9.2908296585083
    6. '   ' → logprob: -10.2908296585083
    7. ','' → logprob: -11.6658296585083
    8. ' ',' → logprob: -11.9158296585083
    9. '','' → logprob: -12.4158296585083
    10. ''' → logprob: -12.7908296585083

Token 41: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.27300792932510376
    2. ''value' → logprob: -2.148007869720459
    3. ''' → logprob: -2.648007869720459
    4. ''s' → logprob: -3.273007869720459
    5. ''m' → logprob: -4.773007869720459
    6. ''t' → logprob: -5.773007869720459
    7. '   ' → logprob: -7.648007869720459
    8. ' sum' → logprob: -8.523008346557617
    9. ''type' → logprob: -9.398008346557617
    10. ''ex' → logprob: -9.523008346557617

Token 42: 'hash' (ID: 16909)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.884378969669342
    2. 'value' → logprob: -1.3843789100646973
    3. 'max' → logprob: -2.0093789100646973
    4. 'val' → logprob: -2.1343789100646973
    5. 'min' → logprob: -3.0093789100646973
    6. 'total' → logprob: -4.259378910064697
    7. 'mid' → logprob: -4.884378910064697
    8. 'count' → logprob: -4.884378910064697
    9. 'data' → logprob: -6.134378910064697
    10. 'lazy' → logprob: -6.759378910064697

Token 43: '_val' (ID: 13694)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.7032829523086548
    2. '_value' → logprob: -1.3282829523086548
    3. '_val' → logprob: -2.2032828330993652
    4. '_' → logprob: -2.7032828330993652
    5. '',' → logprob: -3.2032828330993652
    6. '1' → logprob: -4.578282833099365
    7. 'es' → logprob: -5.578282833099365
    8. ']' → logprob: -6.078282833099365
    9. 's' → logprob: -6.453282833099365
    10. 'value' → logprob: -6.578282833099365

Token 44: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4366459548473358
    2. '']' → logprob: -1.1866459846496582
    3. ',' → logprob: -3.061645984649658
    4. ']' → logprob: -6.436645984649658
    5. ''' → logprob: -9.9366455078125
    6. '   ' → logprob: -10.3116455078125
    7. '_' → logprob: -11.0616455078125
    8. '']
' → logprob: -11.6866455078125
    9. '}' → logprob: -11.9366455078125
    10. '_',' → logprob: -12.5616455078125

Token 45: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.06580059975385666
    2. ''' → logprob: -2.940800666809082
    3. ''s' → logprob: -5.690800666809082
    4. ''h' → logprob: -5.690800666809082
    5. ''value' → logprob: -7.065800666809082
    6. ''t' → logprob: -8.065800666809082
    7. ''p' → logprob: -8.065800666809082
    8. ' size' → logprob: -8.065800666809082
    9. ''m' → logprob: -8.315800666809082
    10. ''end' → logprob: -8.815800666809082

Token 46: 'lazy' (ID: 101772)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.37904131412506104
    2. 'size' → logprob: -1.504041314125061
    3. 'pow' → logprob: -3.2540411949157715
    4. 'count' → logprob: -4.0040411949157715
    5. 'power' → logprob: -4.0040411949157715
    6. 'lazy' → logprob: -5.0040411949157715
    7. ' length' → logprob: -5.7540411949157715
    8. 'mul' → logprob: -6.6290411949157715
    9. 'mod' → logprob: -6.8790411949157715
    10. 'base' → logprob: -7.0040411949157715

Token 47: '',' (ID: 787)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00846989918500185
    2. ']' → logprob: -5.508470058441162
    3. '',' → logprob: -6.508470058441162
    4. ',' → logprob: -6.633470058441162
    5. '_' → logprob: -8.008469581604004
    6. '_val' → logprob: -8.008469581604004
    7. ' ']' → logprob: -8.258469581604004
    8. '_hash' → logprob: -9.008469581604004
    9. ' ]' → logprob: -9.258469581604004
    10. '"]' → logprob: -9.508469581604004

Token 48: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.46373724937438965
    2. ''' → logprob: -1.4637372493743896
    3. ''s' → logprob: -2.7137372493743896
    4. ' size' → logprob: -4.588737487792969
    5. ' length' → logprob: -4.713737487792969
    6. ''h' → logprob: -4.963737487792969
    7. ''m' → logprob: -5.213737487792969
    8. ''re' → logprob: -5.713737487792969
    9. 'length' → logprob: -5.713737487792969
    10. '']' → logprob: -5.713737487792969

Token 49: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5593844056129456
    2. 'rev' → logprob: -2.059384346008301
    3. 'size' → logprob: -2.684384346008301
    4. 'pending' → logprob: -2.934384346008301
    5. 'flip' → logprob: -3.434384346008301
    6. 'count' → logprob: -3.684384346008301
    7. ' length' → logprob: -3.934384346008301
    8. 'add' → logprob: -4.309384346008301
    9. 'len' → logprob: -4.434384346008301
    10. 'reverse' → logprob: -4.684384346008301

Token 50: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.38731518387794495
    2. ']' → logprob: -1.1373151540756226
    3. '',' → logprob: -8.262314796447754
    4. ',' → logprob: -9.762314796447754
    5. '']
' → logprob: -9.762314796447754
    6. '']

' → logprob: -10.762314796447754
    7. ']
' → logprob: -11.137314796447754
    8. '   ' → logprob: -11.387314796447754
    9. ']

' → logprob: -11.762314796447754
    10. ''' → logprob: -12.137314796447754

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16873881220817566
    2. '
' → logprob: -2.168738842010498
    3. ',' → logprob: -4.668738842010498
    4. '=' → logprob: -4.918738842010498
    5. '    
' → logprob: -4.918738842010498
    6. ':' → logprob: -5.293738842010498
    7. 'def' → logprob: -5.418738842010498
    8. ' =' → logprob: -6.293738842010498
    9. '<|end|>' → logprob: -6.293738842010498
    10. ' def' → logprob: -6.918738842010498

Token 52: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3536491096019745
    2. 'def' (adapté à ' def') → logprob: -1.4786491394042969
    3. ' def' → logprob: -3.228649139404297
    4. '   ' → logprob: -3.728649139404297
    5. '    
' → logprob: -5.603649139404297
    6. '	def' → logprob: -7.103649139404297
    7. ' =' → logprob: -7.228649139404297
    8. '=' → logprob: -7.478649139404297
    9. ':' → logprob: -8.478649139404297
    10. '=
' → logprob: -9.978649139404297

Token 53: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1764371693134308
    2. ' ' → logprob: -2.6764371395111084
    3. ' def' → logprob: -2.8014371395111084
    4. ' init' → logprob: -3.6764371395111084
    5. '  ' → logprob: -5.4264373779296875
    6. ' _' → logprob: -7.4264373779296875
    7. ' ‌' → logprob: -8.176437377929688
    8. ' ' → logprob: -8.551437377929688
    9. ' ```' → logprob: -8.676437377929688
    10. ' initialize' → logprob: -8.926437377929688

Token 54: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005235190503299236
    2. 'slots' → logprob: -5.255235195159912
    3. 'slot' → logprob: -14.380234718322754
    4. 'new' → logprob: -15.130234718322754
    5. ' init' → logprob: -15.880234718322754
    6. 'eq' → logprob: -16.38023567199707
    7. '_init' → logprob: -17.38023567199707
    8. ' slots' → logprob: -17.38023567199707
    9. '_slots' → logprob: -17.50523567199707
    10. 'inite' → logprob: -17.50523567199707

Token 55: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21195316314697266
    2. '(self' → logprob: -1.8369531631469727
    3. ' (' → logprob: -3.5869531631469727
    4. '__(' → logprob: -6.211953163146973
    5. '<|end|>' → logprob: -6.586953163146973
    6. '(s' → logprob: -8.586953163146973
    7. 'self' → logprob: -9.336953163146973
    8. '<|end|>' → logprob: -9.961953163146973
    9. '<>(' → logprob: -10.211953163146973
    10. ' self' → logprob: -10.211953163146973

Token 56: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002632430987432599
    2. ' self' → logprob: -8.250263214111328
    3. '(self' → logprob: -14.125263214111328
    4. ' ' → logprob: -15.500263214111328
    5. '	self' → logprob: -15.625263214111328
    6. '
' → logprob: -15.750263214111328
    7. '   ' → logprob: -15.750263214111328
    8. ')' → logprob: -16.125263214111328
    9. 's' → logprob: -16.125263214111328
    10. '0' → logprob: -16.625263214111328

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05088220164179802
    2. ' ,' → logprob: -3.05088210105896
    3. 'self' → logprob: -6.175882339477539
    4. ',l' → logprob: -9.175882339477539
    5. ',self' → logprob: -9.675882339477539
    6. ' self' → logprob: -10.550882339477539
    7. '(self' → logprob: -11.425882339477539
    8. ',s' → logprob: -12.425882339477539
    9. ' (' → logprob: -12.550882339477539
    10. 'l' → logprob: -15.300882339477539

Token 58: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5234232544898987
    2. ' l' → logprob: -0.8984232544898987
    3. 'self' → logprob: -8.523423194885254
    4. ' self' → logprob: -9.523423194885254
    5. '	l' → logprob: -11.148423194885254
    6. ' ' → logprob: -12.648423194885254
    7. '   ' → logprob: -12.898423194885254
    8. 'left' → logprob: -12.898423194885254
    9. '```' → logprob: -13.273423194885254
    10. ' left' → logprob: -14.023423194885254

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008112939540296793
    2. ' ,' → logprob: -7.1258111000061035
    3. '=' → logprob: -12.750811576843262
    4. '<|end|>' → logprob: -14.000811576843262
    5. '):' → logprob: -14.125811576843262
    6. ')' → logprob: -14.125811576843262
    7. ':' → logprob: -14.625811576843262
    8. ' ' → logprob: -14.625811576843262
    9. '‌,' → logprob: -15.375811576843262
    10. '<|end|>' → logprob: -15.500811576843262

Token 60: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868767023086548
    2. ' r' → logprob: -1.1368767023086548
    3. ' ' → logprob: -12.886877059936523
    4. ',' → logprob: -13.636877059936523
    5. '	r' → logprob: -14.386877059936523
    6. ' ' → logprob: -14.886877059936523
    7. ',r' → logprob: -14.886877059936523
    8. '   ' → logprob: -15.761877059936523
    9. '_r' → logprob: -16.449377059936523
    10. '<|end|>' → logprob: -16.574377059936523

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023668063804507256
    2. ',' → logprob: -3.773668050765991
    3. ')' → logprob: -8.27366828918457
    4. '):
' → logprob: -9.27366828918457
    5. ':' → logprob: -10.27366828918457
    6. ' ):' → logprob: -10.27366828918457
    7. ''):' → logprob: -14.02366828918457
    8. '),' → logprob: -14.39866828918457
    9. '   ' → logprob: -14.89866828918457
    10. ' ,' → logprob: -14.89866828918457

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001227276516146958
    2. 'self' → logprob: -9.375123023986816
    3. ' self' → logprob: -10.625123023986816
    4. '   ' → logprob: -13.000123023986816
    5. '<|end|>' → logprob: -13.000123023986816
    6. '        ' → logprob: -13.125123023986816
    7. ',' → logprob: -13.250123023986816
    8. '      ' → logprob: -14.125123023986816
    9. '```' → logprob: -14.375123023986816
    10. '           ' → logprob: -14.500123023986816

Token 63: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3881949782371521
    2. 'self' (adapté à ' self') → logprob: -1.3881950378417969
    3. '       ' → logprob: -2.638195037841797
    4. '	self' → logprob: -7.763195037841797
    5. ' ' → logprob: -9.388195037841797
    6. '        ' → logprob: -9.513195037841797
    7. '	' → logprob: -9.763195037841797
    8. ' ' → logprob: -10.263195037841797
    9. '   ' → logprob: -11.638195037841797
    10. '	       ' → logprob: -11.888195037841797

Token 64: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0183071531355381
    2. '.' → logprob: -4.018307209014893
    3. ' .' → logprob: -8.768306732177734
    4. 'l' → logprob: -14.643306732177734
    5. ' =' → logprob: -15.268306732177734
    6. '.r' → logprob: -15.393306732177734
    7. ' ' → logprob: -15.643306732177734
    8. '.t' → logprob: -15.768306732177734
    9. '	l' → logprob: -16.893306732177734
    10. '[' → logprob: -17.018306732177734

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23731940984725952
    2. ',' → logprob: -2.2373194694519043
    3. '=' → logprob: -2.4873194694519043
    4. ' ' → logprob: -4.487319469451904
    5. ' ,' → logprob: -4.612319469451904
    6. '<|end|>' → logprob: -8.862318992614746
    7. '  ' → logprob: -10.487318992614746
    8. '   ' → logprob: -12.237318992614746
    9. '        ' → logprob: -12.487318992614746
    10. ')' → logprob: -12.612318992614746

Token 66: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02324652671813965
    2. 'l' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.523246765136719
    4. ' ' → logprob: -15.648246765136719
    5. '	l' → logprob: -15.898246765136719
    6. '<|end|>' → logprob: -16.64824676513672
    7. '_l' → logprob: -16.77324676513672
    8. 'r' → logprob: -17.27324676513672
    9. '0' → logprob: -18.02324676513672
    10. '​' → logprob: -18.02324676513672

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17597630620002747
    2. '
' → logprob: -2.550976276397705
    3. '<|end|>' → logprob: -2.675976276397705
    4. ' ' → logprob: -5.175976276397705
    5. ' 
' → logprob: -5.425976276397705
    6. '<|end|>' → logprob: -6.425976276397705
    7. '  
' → logprob: -6.925976276397705
    8. '        ' → logprob: -7.425976276397705
    9. '   ' → logprob: -7.675976276397705
    10. '        
' → logprob: -8.925976753234863

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038853425066918135
    2. '
' → logprob: -6.003885269165039
    3. '<|end|>' → logprob: -7.378885269165039
    4. '   ' → logprob: -8.253885269165039
    5. ' ' → logprob: -8.503885269165039
    6. '        ' → logprob: -9.003885269165039
    7. '           ' → logprob: -10.503885269165039
    8. ' 
' → logprob: -10.628885269165039
    9. '  
' → logprob: -10.878885269165039
    10. '     ' → logprob: -10.878885269165039

Token 69: ' self' (ID: 1051)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04611075296998024
    2. 'self' (adapté à ' self') → logprob: -3.6711108684539795
    3. '       ' → logprob: -4.2961106300354
    4. ' r' → logprob: -5.5461106300354
    5. ' self' → logprob: -6.2961106300354
    6. '   ' → logprob: -9.546111106872559
    7. ' ' → logprob: -9.796111106872559
    8. '_r' → logprob: -10.296111106872559
    9. ' ' → logprob: -10.921111106872559
    10. '           ' → logprob: -11.671111106872559

Token 70: '.r' (ID: 2951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08197762817144394
    2. 'r' → logprob: -3.331977605819702
    3. ' =' → logprob: -3.456977605819702
    4. '=' → logprob: -5.706977844238281
    5. '.' → logprob: -6.081977844238281
    6. ',' → logprob: -6.331977844238281
    7. ' r' → logprob: -6.581977844238281
    8. '.r' → logprob: -6.956977844238281
    9. '<|end|>' → logprob: -7.956977844238281
    10. ' ,' → logprob: -8.206977844238281

Token 71: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.42883142828941345
    2. 'r' → logprob: -1.0538314580917358
    3. ' l' → logprob: -9.553831100463867
    4. 'l' → logprob: -10.428831100463867
    5. ' ' → logprob: -10.553831100463867
    6. ' ' → logprob: -13.303831100463867
    7. '_r' → logprob: -14.991331100463867
    8. '0' → logprob: -15.178831100463867
    9. '	r' → logprob: -15.491331100463867
    10. '​' → logprob: -15.741331100463867

Token 73: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033510822686366737
    2. 'self' → logprob: -8.125334739685059
    3. '
' → logprob: -11.375334739685059
    4. ',' → logprob: -11.750334739685059
    5. ' self' → logprob: -12.250334739685059
    6. '        
' → logprob: -12.375334739685059
    7. '<|end|>' → logprob: -12.500334739685059
    8. '   ' → logprob: -13.125334739685059
    9. '	' → logprob: -13.750334739685059
    10. '      ' → logprob: -14.250334739685059

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006417844560928643
    2. 'self' → logprob: -7.375641822814941
    3. ' self' → logprob: -11.250641822814941
    4. '   ' → logprob: -14.250641822814941
    5. '	' → logprob: -15.000641822814941
    6. '        
' → logprob: -15.125641822814941
    7. '	self' → logprob: -15.500641822814941
    8. '<|end|>' → logprob: -15.500641822814941
    9. ',' → logprob: -15.875641822814941
    10. '      ' → logprob: -16.000640869140625

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.26645591855049133
    2. '       ' → logprob: -1.766455888748169
    3. ' self' → logprob: -2.766455888748169
    4. '   ' → logprob: -9.89145565032959
    5. '	self' → logprob: -10.76645565032959
    6. '	' → logprob: -12.51645565032959
    7. 'None' → logprob: -12.89145565032959
    8. ' None' → logprob: -13.39145565032959
    9. ' ' → logprob: -13.51645565032959
    10. '0' → logprob: -14.14145565032959

Token 76: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.004874011967331171
    2. '.' → logprob: -5.504874229431152
    3. '.right' → logprob: -7.879874229431152
    4. '.hash' → logprob: -8.379874229431152
    5. '.l' → logprob: -10.129874229431152
    6. '.length' → logprob: -10.129874229431152
    7. '=' → logprob: -10.379874229431152
    8. ' =' → logprob: -10.629874229431152
    9. '.value' → logprob: -10.754874229431152
    10. '.val' → logprob: -12.504874229431152

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409066557884216
    2. '=' → logprob: -0.9740906953811646
    3. '=None' → logprob: -11.474090576171875
    4. ',' → logprob: -12.974090576171875
    5. ' ' → logprob: -14.224090576171875
    6. '<|end|>' → logprob: -16.849090576171875
    7. 'None' → logprob: -17.099090576171875
    8. ' None' → logprob: -17.099090576171875
    9. ' ,' → logprob: -17.224090576171875
    10. '=

' → logprob: -17.599090576171875

Token 78: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10028409957885742
    2. ' None' → logprob: -2.3502840995788574
    3. 'self' → logprob: -9.475284576416016
    4. ' self' → logprob: -14.975284576416016
    5. '_None' → logprob: -15.600284576416016
    6. '=None' → logprob: -16.475284576416016
    7. '(None' → logprob: -16.850284576416016
    8. '0' → logprob: -17.100284576416016
    9. 'none' → logprob: -17.100284576416016
    10. '_none' → logprob: -19.100284576416016

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036090604960918427
    2. '<|end|>' → logprob: -3.411090612411499
    3. '
' → logprob: -7.16109037399292
    4. 'self' → logprob: -7.78609037399292
    5. '<|end|>' → logprob: -8.411090850830078
    6. '        ' → logprob: -8.536090850830078
    7. '        
' → logprob: -8.661090850830078
    8. ',' → logprob: -8.911090850830078
    9. '   ' → logprob: -9.036090850830078
    10. '	' → logprob: -9.411090850830078

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007466182112693787
    2. '
' → logprob: -5.2574663162231445
    3. 'self' → logprob: -7.3824663162231445
    4. '<|end|>' → logprob: -7.5074663162231445
    5. '        
' → logprob: -7.8824663162231445
    6. '   ' → logprob: -8.007466316223145
    7. '           ' → logprob: -9.632466316223145
    8. '    
' → logprob: -9.882466316223145
    9. ',' → logprob: -10.257466316223145
    10. '  
' → logprob: -10.507466316223145

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06543967127799988
    2. ' self' → logprob: -2.9404397010803223
    3. '       ' → logprob: -4.565439701080322
    4. '   ' → logprob: -10.440439224243164
    5. '	self' → logprob: -10.940439224243164
    6. 'None' → logprob: -11.440439224243164
    7. 's' → logprob: -11.815439224243164
    8. ' ' → logprob: -11.815439224243164
    9. ' None' → logprob: -12.315439224243164
    10. '
' → logprob: -12.690439224243164

Token 82: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.08069697767496109
    2. '.' → logprob: -2.7056970596313477
    3. '.left' → logprob: -4.580697059631348
    4. ' .' → logprob: -8.955697059631348
    5. ' =' → logprob: -9.205697059631348
    6. 'right' → logprob: -9.955697059631348
    7. '	right' → logprob: -10.330697059631348
    8. ' ' → logprob: -10.580697059631348
    9. '=' → logprob: -10.705697059631348
    10. '   ' → logprob: -10.705697059631348

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031917323358356953
    2. '=' → logprob: -5.753191947937012
    3. '=None' → logprob: -11.628191947937012
    4. '<|end|>' → logprob: -13.003191947937012
    5. ' None' → logprob: -13.878191947937012
    6. ' ' → logprob: -13.878191947937012
    7. 'None' → logprob: -14.628191947937012
    8. '(None' → logprob: -16.253190994262695
    9. ' =
' → logprob: -16.253190994262695
    10. ',' → logprob: -16.628190994262695

Token 84: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06994155049324036
    2. ' None' → logprob: -2.694941520690918
    3. '(None' → logprob: -13.194941520690918
    4. '_None' → logprob: -13.694941520690918
    5. '   ' → logprob: -14.194941520690918
    6. ',None' → logprob: -14.444941520690918
    7. ' ' → logprob: -14.944941520690918
    8. '=None' → logprob: -15.194941520690918
    9. '  ' → logprob: -16.069942474365234
    10. 'No' → logprob: -16.944942474365234

Token 85: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022821188031230122
    2. '	' → logprob: -9.750227928161621
    3. 'self' → logprob: -9.750227928161621
    4. '
' → logprob: -10.000227928161621
    5. '   ' → logprob: -10.750227928161621
    6. '        
' → logprob: -10.875227928161621
    7. ',' → logprob: -12.375227928161621
    8. '```' → logprob: -12.375227928161621
    9. '<|end|>' → logprob: -13.000227928161621
    10. '           ' → logprob: -13.000227928161621

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013536323967855424
    2. 'self' → logprob: -9.00013542175293
    3. ' self' → logprob: -11.87513542175293
    4. '   ' → logprob: -13.25013542175293
    5. '	' → logprob: -14.00013542175293
    6. '        
' → logprob: -14.75013542175293
    7. ',' → logprob: -14.87513542175293
    8. '           ' → logprob: -15.00013542175293
    9. '      ' → logprob: -15.00013542175293
    10. '```' → logprob: -15.37513542175293

Token 87: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39887523651123047
    2. 'self' (adapté à ' self') → logprob: -1.2738752365112305
    3. ' self' → logprob: -3.0238752365112305
    4. '   ' → logprob: -7.8988752365112305
    5. '	self' → logprob: -9.39887523651123
    6. '	' → logprob: -10.14887523651123
    7. ' ' → logprob: -10.64887523651123
    8. '           ' → logprob: -11.27387523651123
    9. '```' → logprob: -12.27387523651123
    10. '     ' → logprob: -12.39887523651123

Token 88: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -0.12705715000629425
    2. '.' → logprob: -2.1270570755004883
    3. ' .' → logprob: -9.627057075500488
    4. '.value' → logprob: -11.002057075500488
    5. '.val' → logprob: -12.002057075500488
    6. '.has' → logprob: -12.127057075500488
    7. '.lazy' → logprob: -12.502057075500488
    8. '.height' → logprob: -13.002057075500488
    9. '.heap' → logprob: -13.002057075500488
    10. '.Hash' → logprob: -13.127057075500488

Token 89: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.082895273109898e-05
    2. '_' → logprob: -10.500030517578125
    3. '_value' → logprob: -13.250030517578125
    4. ' _' → logprob: -13.750030517578125
    5. '_vals' → logprob: -15.625030517578125
    6. '_VAL' → logprob: -15.750030517578125
    7. '_va' → logprob: -17.000030517578125
    8. '_v' → logprob: -17.625030517578125
    9. '=_' → logprob: -17.875030517578125
    10. '_s' → logprob: -18.125030517578125

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197541579604149
    2. '=' → logprob: -2.8119754791259766
    3. ' ' → logprob: -12.061975479125977
    4. ',' → logprob: -13.811975479125977
    5. '0' → logprob: -14.686975479125977
    6. '<|end|>' → logprob: -15.936975479125977
    7. '=None' → logprob: -16.186975479125977
    8. 's' → logprob: -16.436975479125977
    9. ' ,' → logprob: -16.936975479125977
    10. ' =
' → logprob: -17.311975479125977

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01250989455729723
    2. ' ' → logprob: -4.387509822845459
    3. '۰' → logprob: -16.012510299682617
    4. '[' → logprob: -16.512510299682617
    5. ' ' → logprob: -16.762510299682617
    6. ' [' → logprob: -16.887510299682617
    7. 'None' → logprob: -17.137510299682617
    8. '(' → logprob: -18.012510299682617
    9. '０' → logprob: -18.575010299682617
    10. ' None' → logprob: -19.200010299682617

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -16.750001907348633
    4. '(' → logprob: -18.125001907348633
    5. 'None' → logprob: -18.625001907348633
    6. '۰' → logprob: -20.125001907348633
    7. '000' → logprob: -20.375001907348633
    8. '00' → logprob: -20.625001907348633
    9. '[]' → logprob: -20.875001907348633
    10. '０' → logprob: -21.500001907348633

Token 93: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013186587952077389
    2. '<|end|>' → logprob: -4.763186454772949
    3. ' ' → logprob: -6.638186454772949
    4. '   ' → logprob: -7.263186454772949
    5. ',' → logprob: -7.638186454772949
    6. '	' → logprob: -7.638186454772949
    7. '        ' → logprob: -7.888186454772949
    8. '        
' → logprob: -8.01318645477295
    9. '
' → logprob: -8.26318645477295
    10. '    ' → logprob: -9.13818645477295

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000158842682139948
    2. 'self' → logprob: -10.00015926361084
    3. '   ' → logprob: -10.37515926361084
    4. ',' → logprob: -10.87515926361084
    5. ' ' → logprob: -11.37515926361084
    6. '	' → logprob: -11.50015926361084
    7. ' self' → logprob: -11.75015926361084
    8. '        
' → logprob: -12.00015926361084
    9. '<|end|>' → logprob: -12.00015926361084
    10. '      ' → logprob: -12.12515926361084

Token 95: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46524542570114136
    2. 'self' (adapté à ' self') → logprob: -1.2152454853057861
    3. ' self' → logprob: -2.590245485305786
    4. '	self' → logprob: -8.840245246887207
    5. '   ' → logprob: -9.090245246887207
    6. ' ' → logprob: -9.715245246887207
    7. '	' → logprob: -10.215245246887207
    8. '0' → logprob: -11.715245246887207
    9. ' ' → logprob: -12.090245246887207
    10. '      ' → logprob: -12.590245246887207

Token 96: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -0.12717294692993164
    2. '.' → logprob: -2.1271729469299316
    3. ' .' → logprob: -8.502172470092773
    4. '.l' → logprob: -10.502172470092773
    5. 'lazy' → logprob: -12.627172470092773
    6. '   ' → logprob: -13.627172470092773
    7. ' ' → logprob: -13.752172470092773
    8. '_lazy' → logprob: -13.877172470092773
    9. ' lazy' → logprob: -14.377172470092773
    10. ' =' → logprob: -14.502172470092773

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805435076355934
    2. '=' → logprob: -3.2880544662475586
    3. '=None' → logprob: -11.413054466247559
    4. ' ' → logprob: -13.413054466247559
    5. 'None' → logprob: -15.913054466247559
    6. ',' → logprob: -16.038053512573242
    7. '<|end|>' → logprob: -16.663053512573242
    8. ' None' → logprob: -17.038053512573242
    9. ':' → logprob: -17.413053512573242
    10. '=False' → logprob: -17.538053512573242

Token 98: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33671584725379944
    2. 'None' → logprob: -1.586715817451477
    3. ' None' → logprob: -2.7117159366607666
    4. ' ' → logprob: -4.7117156982421875
    5. '-' → logprob: -5.2117156982421875
    6. ' -' → logprob: -7.8367156982421875
    7. 'False' → logprob: -10.961715698242188
    8. '_None' → logprob: -12.086715698242188
    9. '(None' → logprob: -12.586715698242188
    10. ' False' → logprob: -13.961715698242188

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.364928700961173e-05
    2. 'self' → logprob: -9.500093460083008
    3. '	' → logprob: -12.250093460083008
    4. '<|end|>' → logprob: -12.500093460083008
    5. ' self' → logprob: -13.000093460083008
    6. '
' → logprob: -13.625093460083008
    7. '   ' → logprob: -13.625093460083008
    8. ',' → logprob: -13.750093460083008
    9. '	self' → logprob: -14.000093460083008
    10. '        
' → logprob: -14.375093460083008

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.080963092041202e-06
    2. 'self' → logprob: -13.750004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '	' → logprob: -14.125004768371582
    5. '<|end|>' → logprob: -14.250004768371582
    6. ' self' → logprob: -15.000004768371582
    7. '        
' → logprob: -15.125004768371582
    8. '           ' → logprob: -15.375004768371582
    9. '```' → logprob: -15.500004768371582
    10. ' ' → logprob: -15.625004768371582

Token 101: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11474070698022842
    2. 'self' (adapté à ' self') → logprob: -2.3647406101226807
    3. ' self' → logprob: -4.23974084854126
    4. '   ' → logprob: -12.239740371704102
    5. '	self' → logprob: -12.239740371704102
    6. '0' → logprob: -13.114740371704102
    7. ' ' → logprob: -13.239740371704102
    8. '```' → logprob: -13.739740371704102
    9. '      ' → logprob: -13.864740371704102
    10. '           ' → logprob: -14.864740371704102

Token 102: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.04262949153780937
    2. 'length' → logprob: -4.042629718780518
    3. '.' → logprob: -4.667629718780518
    4. '   ' → logprob: -5.292629718780518
    5. ' =' → logprob: -5.417629718780518
    6. ' length' → logprob: -6.417629718780518
    7. ' .' → logprob: -6.667629718780518
    8. '       ' → logprob: -7.167629718780518
    9. '_length' → logprob: -7.792629718780518
    10. '=' → logprob: -8.04262924194336

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859498515725136
    2. '=' → logprob: -3.0485949516296387
    3. ' ' → logprob: -11.798595428466797
    4. '=int' → logprob: -16.673595428466797
    5. '=len' → logprob: -17.423595428466797
    6. ' =
' → logprob: -17.673595428466797
    7. '＝' → logprob: -18.298595428466797
    8. ')' → logprob: -18.798595428466797
    9. '   ' → logprob: -18.798595428466797
    10. '  ' → logprob: -19.173595428466797

Token 104: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08954314887523651
    2. 'r' → logprob: -2.464543104171753
    3. ' self' → logprob: -7.589543342590332
    4. ' (' → logprob: -9.964543342590332
    5. 'self' → logprob: -10.089543342590332
    6. '(r' → logprob: -12.089543342590332
    7. ' ' → logprob: -13.339543342590332
    8. ' ' → logprob: -14.089543342590332
    9. '(' → logprob: -15.089543342590332
    10. '_r' → logprob: -15.089543342590332

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3134479224681854
    2. '-' → logprob: -1.3134479522705078
    3. ' ' → logprob: -8.688447952270508
    4. '<|end|>' → logprob: -11.813447952270508
    5. '-l' → logprob: -13.688447952270508
    6. ' -
' → logprob: -13.813447952270508
    7. '<|end|>' → logprob: -13.938447952270508
    8. '```' → logprob: -13.938447952270508
    9. ' minus' → logprob: -14.313447952270508
    10. '+' → logprob: -14.438447952270508

Token 106: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029751529917120934
    2. ' l' → logprob: -3.5297515392303467
    3. '	l' → logprob: -14.529751777648926
    4. '<|end|>' → logprob: -14.904751777648926
    5. ' ' → logprob: -15.904751777648926
    6. '   ' → logprob: -16.40475082397461
    7. '    ' → logprob: -17.77975082397461
    8. '+' → logprob: -17.90475082397461
    9. 's' → logprob: -18.40475082397461
    10. '1' → logprob: -18.40475082397461

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143507421016693
    2. ' +' → logprob: -1.7014350891113281
    3. '+
' → logprob: -11.951435089111328
    4. '1' → logprob: -12.451435089111328
    5. ' +
' → logprob: -12.451435089111328
    6. ' ' → logprob: -12.826435089111328
    7. '<|end|>' → logprob: -13.326435089111328
    8. '
' → logprob: -14.451435089111328
    9. '   ' → logprob: -14.826435089111328
    10. 's' → logprob: -15.076435089111328

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '```' → logprob: -16.518150329589844
    4. '0' → logprob: -17.393150329589844
    5. '<|end|>' → logprob: -18.893150329589844
    6. '  ' → logprob: -19.143150329589844
    7. '   ' → logprob: -19.268150329589844
    8. ' ' → logprob: -19.643150329589844
    9. '`' → logprob: -19.643150329589844
    10. '7' → logprob: -21.018150329589844

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.75000762939453
    4. '0' → logprob: -20.62500762939453
    5. '`' → logprob: -23.12500762939453
    6. '１' → logprob: -23.25000762939453
    7. '7' → logprob: -23.50000762939453
    8. '2' → logprob: -23.62500762939453
    9. '   ' → logprob: -24.00000762939453
    10. '' → logprob: -24.12500762939453

Token 110: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37578654289245605
    2. '<|end|>' → logprob: -1.375786542892456
    3. '
' → logprob: -3.125786542892456
    4. '   ' → logprob: -4.625786781311035
    5. 'import' → logprob: -5.875786781311035
    6. '<|end|>' → logprob: -6.500786781311035
    7. '```' → logprob: -7.125786781311035
    8. ' def' → logprob: -7.625786781311035
    9. '    
' → logprob: -7.875786781311035
    10. 'class' → logprob: -8.000786781311035

Token 111: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019459979608654976
    2. '   ' → logprob: -4.769460201263428
    3. '<|end|>' → logprob: -5.269460201263428
    4. '
' → logprob: -6.394460201263428
    5. ' def' → logprob: -6.894460201263428
    6. ')' → logprob: -7.019460201263428
    7. 'class' → logprob: -7.144460201263428
    8. 'import' → logprob: -7.394460201263428
    9. '#' → logprob: -9.14445972442627
    10. '```' → logprob: -9.26945972442627

Token 112: ' Segment' (ID: 64922)
  Prédit: ' Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.0033380023669451475
    2. 'Segment' → logprob: -5.753337860107422
    3. ' Seg' → logprob: -8.753337860107422
    4. ' ' → logprob: -13.878337860107422
    5. '_segment' → logprob: -15.128337860107422
    6. ' Pal' → logprob: -15.253337860107422
    7. ' String' → logprob: -15.753337860107422
    8. ' segment' → logprob: -16.003337860107422
    9. ' ' → logprob: -16.253337860107422
    10. ' Solution' → logprob: -16.503337860107422

Token 113: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.935296834039036e-06
    2. '	Tree' → logprob: -13.50000286102295
    3. ' Tree' → logprob: -14.12500286102295
    4. 'Tre' → logprob: -15.12500286102295
    5. '<Tree' → logprob: -15.37500286102295
    6. 'tree' → logprob: -16.250003814697266
    7. '(Tree' → logprob: -16.250003814697266
    8. '_TREE' → logprob: -17.750003814697266
    9. 'Trees' → logprob: -17.875003814697266
    10. '.Tree' → logprob: -17.875003814697266

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.515961285913363e-05
    2. ':
' → logprob: -10.250064849853516
    3. '():' → logprob: -11.500064849853516
    4. '):' → logprob: -12.000064849853516
    5. ' :' → logprob: -12.125064849853516
    6. '(object' → logprob: -12.375064849853516
    7. '>:' → logprob: -13.625064849853516
    8. ':def' → logprob: -14.375064849853516
    9. ':**' → logprob: -14.500064849853516
    10. '(' → logprob: -14.500064849853516

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007172697689384222
    2. ' def' → logprob: -5.507172584533691
    3. ':' → logprob: -6.007172584533691
    4. ':
' → logprob: -8.382172584533691
    5. 'def' → logprob: -8.507172584533691
    6. '	def' → logprob: -9.007172584533691
    7. ',' → logprob: -10.757172584533691
    8. '    
' → logprob: -11.007172584533691
    9. '(' → logprob: -11.132172584533691
    10. '<|end|>' → logprob: -12.507172584533691

Token 116: ' MOD' (ID: 32868)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0035592082422226667
    2. '   ' → logprob: -5.753559112548828
    3. 'def' → logprob: -7.878559112548828
    4. '	def' → logprob: -13.503559112548828
    5. ' __' → logprob: -14.378559112548828
    6. '    ' → logprob: -15.003559112548828
    7. ' _' → logprob: -15.628559112548828
    8. ' ' → logprob: -16.128559112548828
    9. ' ind' → logprob: -17.128559112548828
    10. ' import' → logprob: -17.628559112548828

Token 117: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015127197839319706
    2. '=' → logprob: -6.50151252746582
    3. ',' → logprob: -11.62651252746582
    4. '1' → logprob: -13.87651252746582
    5. ':' → logprob: -15.75151252746582
    6. '_' → logprob: -15.75151252746582
    7. ' ' → logprob: -16.75151252746582
    8. '   ' → logprob: -17.12651252746582
    9. ' =
' → logprob: -17.12651252746582
    10. ' ,' → logprob: -17.37651252746582

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003461905289441347
    2. '=' → logprob: -8.000346183776855
    3. ',' → logprob: -11.500346183776855
    4. '1' → logprob: -15.625346183776855
    5. ' ' → logprob: -15.625346183776855
    6. ' ,' → logprob: -15.750346183776855
    7. ':' → logprob: -16.125347137451172
    8. ' =
' → logprob: -16.750347137451172
    9. '_' → logprob: -18.625347137451172
    10. '=int' → logprob: -18.750347137451172

Token 119: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4264907240867615
    2. '10' → logprob: -1.1764907836914062
    3. ' ' → logprob: -3.3014907836914062
    4. '998' → logprob: -6.551490783691406
    5. '(' → logprob: -7.551490783691406
    6. ' (' → logprob: -10.676490783691406
    7. '1' → logprob: -10.801490783691406
    8. '999' → logprob: -11.676490783691406
    9. '123' → logprob: -13.301490783691406
    10. '101' → logprob: -13.801490783691406

Token 120: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.388573557138443
    2. '100' → logprob: -1.1385735273361206
    3. '(' → logprob: -6.76357364654541
    4. '998' → logprob: -7.76357364654541
    5. ' ' → logprob: -9.26357364654541
    6. '1' → logprob: -11.01357364654541
    7. '999' → logprob: -12.76357364654541
    8. ' (' → logprob: -13.51357364654541
    9. '123' → logprob: -14.01357364654541
    10. '[' → logprob: -14.26357364654541

Token 121: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8843750953674316
    2. '09' → logprob: -0.8843750953674316
    3. '**' → logprob: -1.7593750953674316
    4. ' ' → logprob: -7.509375095367432
    5. '009' → logprob: -7.759375095367432
    6. '000' → logprob: -7.884375095367432
    7. '+' → logprob: -8.384374618530273
    8. '_' → logprob: -8.634374618530273
    9. '```' → logprob: -10.134374618530273
    10. ' **' → logprob: -10.384374618530273

Token 122: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.500000953674316
    3. '18' → logprob: -18.125
    4. '10' → logprob: -18.75
    5. '19' → logprob: -19.125
    6. '+' → logprob: -19.375
    7. '15' → logprob: -19.75
    8. '```' → logprob: -20.375
    9. '_' → logprob: -20.5
    10. '4' → logprob: -20.625

Token 123: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026769645046442747
    2. ' +' → logprob: -6.127676963806152
    3. '7' → logprob: -7.627676963806152
    4. '+
' → logprob: -13.127676963806152
    5. '＋' → logprob: -14.002676963806152
    6. 'plus' → logprob: -14.502676963806152
    7. ' plus' → logprob: -14.752676963806152
    8. ' ' → logprob: -15.127676963806152
    9. ' ' → logprob: -15.252676963806152
    10. '```' → logprob: -15.877676963806152

Token 124: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '9' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '+' → logprob: -16.875
    5. '```' → logprob: -18.25
    6. '   ' → logprob: -19.0
    7. '

' → logprob: -19.625
    8. '07' → logprob: -19.625
    9. '17' → logprob: -19.875
    10. '  ' → logprob: -20.0

Token 125: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -16.0
    3. '   ' → logprob: -18.625
    4. '

' → logprob: -18.625
    5. '+' → logprob: -18.75
    6. '07' → logprob: -18.875
    7. ' ' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. '
' → logprob: -19.625
    10. '"' → logprob: -20.125

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01120815146714449
    2. ',' → logprob: -5.0112080574035645
    3. '<|end|>' → logprob: -6.3862080574035645
    4. '    
' → logprob: -6.6362080574035645
    5. '
' → logprob: -7.1362080574035645
    6. ' ' → logprob: -8.011208534240723
    7. '<|end|>' → logprob: -9.136208534240723
    8. ' ,' → logprob: -10.011208534240723
    9. ')' → logprob: -10.136208534240723
    10. ' 
' → logprob: -10.636208534240723

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25215885043144226
    2. ',' → logprob: -2.5021588802337646
    3. ' ' → logprob: -2.5021588802337646
    4. '
' → logprob: -3.5021588802337646
    5. '    
' → logprob: -4.3771586418151855
    6. ' 
' → logprob: -5.2521586418151855
    7. '<|end|>' → logprob: -5.7521586418151855
    8. ' ,' → logprob: -6.8771586418151855
    9. '  
' → logprob: -7.1271586418151855
    10. '    ' → logprob: -7.2521586418151855

Token 128: ' MOD' (ID: 32868)
  Prédit: 'BASE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -0.27534374594688416
    2. ' BASE' → logprob: -1.9003437757492065
    3. '   ' → logprob: -3.275343656539917
    4. 'MOD' (adapté à ' MOD') → logprob: -3.775343656539917
    5. ' MOD' → logprob: -4.150343894958496
    6. 'P' → logprob: -5.025343894958496
    7. ' base' → logprob: -5.150343894958496
    8. ' P' → logprob: -6.775343894958496
    9. 'base' → logprob: -7.525343894958496
    10. 'Base' → logprob: -8.900343894958496

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0339031834737398e-05
    2. '=' → logprob: -11.250020027160645
    3. ' =' → logprob: -12.375020027160645
    4. ' ' → logprob: -13.625020027160645
    5. '9' → logprob: -14.500020027160645
    6. '_' → logprob: -14.750020027160645
    7. '1' → logprob: -14.750020027160645
    8. '3' → logprob: -15.875020027160645
    9. '₂' → logprob: -16.37502098083496
    10. '<|end|>' → logprob: -16.62502098083496

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005013240152038634
    2. '=' → logprob: -7.6255011558532715
    3. ' ' → logprob: -11.25050163269043
    4. ',' → logprob: -15.75050163269043
    5. ' =
' → logprob: -17.00050163269043
    6. ' ,' → logprob: -17.62550163269043
    7. '1' → logprob: -17.75050163269043
    8. ')' → logprob: -18.12550163269043
    9. ' =)' → logprob: -18.25050163269043
    10. ':' → logprob: -18.62550163269043

Token 131: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007758053485304117
    2. ' ' → logprob: -5.132758140563965
    3. '(' → logprob: -6.507758140563965
    4. '998' → logprob: -8.882758140563965
    5. '100' → logprob: -9.132758140563965
    6. '2' → logprob: -9.882758140563965
    7. ' (' → logprob: -10.382758140563965
    8. '184' → logprob: -13.632758140563965
    9. '161' → logprob: -13.757758140563965
    10. '109' → logprob: -13.757758140563965

Token 132: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013408389640972018
    2. '(' → logprob: -6.751340866088867
    3. '998' → logprob: -9.126340866088867
    4. ' ' → logprob: -10.001340866088867
    5. '100' → logprob: -11.876340866088867
    6. '2' → logprob: -12.251340866088867
    7. ' (' → logprob: -13.126340866088867
    8. '109' → logprob: -14.126340866088867
    9. '999' → logprob: -15.251340866088867
    10. '161' → logprob: -15.376340866088867

Token 133: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003271945286542177
    2. '9' → logprob: -5.75327205657959
    3. '*' → logprob: -10.25327205657959
    4. '```' → logprob: -10.50327205657959
    5. '09' → logprob: -11.37827205657959
    6. '000' → logprob: -11.75327205657959
    7. '+' → logprob: -11.87827205657959
    8. ' **' → logprob: -13.00327205657959
    9. '***' → logprob: -14.12827205657959
    10. '18' → logprob: -14.62827205657959

Token 134: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0013266648165881634
    2. '18' → logprob: -6.626326560974121
    3. '```' → logprob: -15.126326560974121
    4. '15' → logprob: -16.376327514648438
    5. '14' → logprob: -16.501327514648438
    6. '12' → logprob: -16.501327514648438
    7. '09' → logprob: -16.626327514648438
    8. '
' → logprob: -16.626327514648438
    9. '8' → logprob: -17.376327514648438
    10. '

' → logprob: -17.376327514648438

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0430217906832695
    2. ' +' → logprob: -3.1680216789245605
    3. ' ' → logprob: -12.043022155761719
    4. '＋' → logprob: -13.043022155761719
    5. '20' → logprob: -13.543022155761719
    6. '415' → logprob: -13.668022155761719
    7. '7' → logprob: -13.793022155761719
    8. '+
' → logprob: -13.918022155761719
    9. ' ' → logprob: -14.168022155761719
    10. '`' → logprob: -15.043022155761719

Token 136: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.625005722045898
    3. '+' → logprob: -13.625005722045898
    4. '7' → logprob: -15.875005722045898
    5. '   ' → logprob: -16.2500057220459
    6. '13' → logprob: -16.5000057220459
    7. '```' → logprob: -16.5000057220459
    8. '09' → logprob: -16.8750057220459
    9. '21' → logprob: -17.0000057220459
    10. '19' → logprob: -17.1250057220459

Token 137: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1472419600977446e-06
    2. '+' → logprob: -13.750000953674316
    3. ' ' → logprob: -17.500001907348633
    4. '09' → logprob: -18.000001907348633
    5. '6' → logprob: -18.500001907348633
    6. ' +' → logprob: -19.000001907348633
    7. '```' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '21' → logprob: -19.125001907348633
    10. '13' → logprob: -19.500001907348633

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03209085389971733
    2. '
' → logprob: -4.157090663909912
    3. '    
' → logprob: -4.157090663909912
    4. ',' → logprob: -8.65709114074707
    5. ' 
' → logprob: -10.28209114074707
    6. '```' → logprob: -11.65709114074707
    7. '    
    
' → logprob: -12.03209114074707
    8. ',
' → logprob: -12.15709114074707
    9. '  
' → logprob: -12.28209114074707
    10. 'def' → logprob: -12.40709114074707

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020871644839644432
    2. '<|end|>' → logprob: -4.520871639251709
    3. '
' → logprob: -5.270871639251709
    4. '    
' → logprob: -5.520871639251709
    5. ',' → logprob: -8.270872116088867
    6. '<|end|>' → logprob: -9.020872116088867
    7. ')' → logprob: -9.270872116088867
    8. ' ' → logprob: -10.020872116088867
    9. '    ' → logprob: -10.770872116088867
    10. ' 
' → logprob: -11.020872116088867

Token 140: ' BASE' (ID: 42998)
  Prédit: ' BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BASE' → logprob: -0.6388247013092041
    2. '   ' → logprob: -1.638824701309204
    3. ' POW' → logprob: -2.013824701309204
    4. ' P' → logprob: -2.888824701309204
    5. 'BASE' (adapté à ' BASE') → logprob: -3.388824701309204
    6. ' base' → logprob: -3.513824701309204
    7. ' def' → logprob: -4.638824462890625
    8. 'P' → logprob: -5.513824462890625
    9. ' PO' → logprob: -5.513824462890625
    10. 'PO' → logprob: -6.388824462890625

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32155460119247437
    2. '1' → logprob: -1.3215546607971191
    3. '_' → logprob: -5.321554660797119
    4. '=' → logprob: -5.696554660797119
    5. '_POWER' → logprob: -12.446554183959961
    6. '_BASE' → logprob: -13.071554183959961
    7. '_HASH' → logprob: -13.946554183959961
    8. ',' → logprob: -14.071554183959961
    9. '```' → logprob: -14.071554183959961
    10. '  ' → logprob: -14.196554183959961

Token 142: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.521631121635437
    2. '131' → logprob: -1.271631121635437
    3. '911' → logprob: -3.1466312408447266
    4. '257' → logprob: -3.2716312408447266
    5. '31' → logprob: -3.3966312408447266
    6. '127' → logprob: -4.646631240844727
    7. '256' → logprob: -8.146631240844727
    8. '137' → logprob: -8.146631240844727
    9. '263' → logprob: -8.146631240844727
    10. '37' → logprob: -8.396631240844727

Token 143: '131' (ID: 16412)
  Prédit: '131'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '131' → logprob: -0.03317185118794441
    2. '31' → logprob: -4.158171653747559
    3. '911' → logprob: -4.533171653747559
    4. '257' → logprob: -5.533171653747559
    5. '127' → logprob: -6.658171653747559
    6. '137' → logprob: -8.033171653747559
    7. '129' → logprob: -8.908171653747559
    8. '37' → logprob: -9.283171653747559
    9. '997' → logprob: -9.283171653747559
    10. '29' → logprob: -9.533171653747559

Token 144: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.649096667766571
    2. '
' → logprob: -1.1490967273712158
    3. '    
' → logprob: -1.8990967273712158
    4. ' 
' → logprob: -6.024096488952637
    5. '<|end|>' → logprob: -6.399096488952637
    6. ',' → logprob: -6.649096488952637
    7. '    ' → logprob: -6.899096488952637
    8. ' ' → logprob: -7.149096488952637
    9. '  
' → logprob: -7.524096488952637
    10. ' def' → logprob: -7.899096488952637

Token 146: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11585917323827744
    2. 'def' (adapté à ' def') → logprob: -2.240859270095825
    3. 'pow' → logprob: -6.240859031677246
    4. ' pow' → logprob: -7.490859031677246
    5. ' power' → logprob: -8.615859031677246
    6. 'power' → logprob: -8.990859031677246
    7. '   ' → logprob: -9.365859031677246
    8. ' pre' → logprob: -10.615859031677246
    9. ' POW' → logprob: -10.615859031677246
    10. 'p' → logprob: -10.865859031677246

Token 147: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.021329544484615326
    2. ' ' → logprob: -3.896329641342163
    3. ' _' → logprob: -7.396329402923584
    4. ' init' → logprob: -9.646329879760742
    5. ' ' → logprob: -10.021329879760742
    6. '  ' → logprob: -10.396329879760742
    7. '__' → logprob: -11.271329879760742
    8. ' def' → logprob: -11.771329879760742
    9. ' ‌' → logprob: -12.646329879760742
    10. ' ﻿' → logprob: -12.896329879760742

Token 148: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.25
    3. ' init' → logprob: -17.125
    4. 'new' → logprob: -18.5
    5. 'hash' → logprob: -18.5
    6. 'pow' → logprob: -19.5
    7. '_init' → logprob: -19.875
    8. 'build' → logprob: -20.0
    9. 'ini' → logprob: -20.0
    10. 'inite' → logprob: -20.25

Token 149: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015127197839319706
    2. '(self' → logprob: -6.50151252746582
    3. '(' → logprob: -12.62651252746582
    4. '__' → logprob: -12.75151252746582
    5. '_(' → logprob: -13.25151252746582
    6. '__(
' → logprob: -14.12651252746582
    7. '__((' → logprob: -14.62651252746582
    8. 'self' → logprob: -14.75151252746582
    9. '<>(' → logprob: -15.50151252746582
    10. '>(' → logprob: -16.00151252746582

Token 150: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023262951523065567
    2. ' self' → logprob: -3.7732629776000977
    3. ',' → logprob: -11.148262977600098
    4. 'elf' → logprob: -13.898262977600098
    5. ' ' → logprob: -14.398262977600098
    6. '
' → logprob: -14.523262977600098
    7. ')' → logprob: -15.148262977600098
    8. 's' → logprob: -15.273262977600098
    9. ',self' → logprob: -15.273262977600098
    10. '   ' → logprob: -15.648262977600098

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. ' ,' → logprob: -10.62504768371582
    3. 'self' → logprob: -10.75004768371582
    4. ',self' → logprob: -13.62504768371582
    5. '__,' → logprob: -14.75004768371582
    6. ',size' → logprob: -16.37504768371582
    7. ',n' → logprob: -16.50004768371582
    8. '(self' → logprob: -16.50004768371582
    9. ' self' → logprob: -17.00004768371582
    10. '‌,' → logprob: -17.00004768371582

Token 152: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7801322340965271
    2. ' data' → logprob: -1.5301322937011719
    3. 'self' → logprob: -2.405132293701172
    4. ' self' → logprob: -2.530132293701172
    5. 's' → logprob: -2.655132293701172
    6. 'data' → logprob: -3.030132293701172
    7. ' n' → logprob: -3.655132293701172
    8. 'n' → logprob: -5.405132293701172
    9. ' size' → logprob: -5.405132293701172
    10. ' arr' → logprob: -7.405132293701172

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00617253640666604
    2. '):
' → logprob: -5.6311726570129395
    3. ':' → logprob: -6.0061726570129395
    4. ' ):' → logprob: -9.506172180175781
    5. ')' → logprob: -10.506172180175781
    6. ':str' → logprob: -13.506172180175781
    7. ' :' → logprob: -13.881172180175781
    8. '):
' → logprob: -14.256172180175781
    9. ' ):
' → logprob: -15.881172180175781
    10. '}:' → logprob: -15.881172180175781

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4010007083415985
    2. ':' → logprob: -1.276000738143921
    3. ',' → logprob: -3.151000738143921
    4. '):' → logprob: -5.276000499725342
    5. '):
' → logprob: -6.651000499725342
    6. '<|end|>' → logprob: -7.026000499725342
    7. ':
' → logprob: -7.401000499725342
    8. '<|end|>' → logprob: -9.1510009765625
    9. ')' → logprob: -9.4010009765625
    10. '
' → logprob: -10.2760009765625

Token 155: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08424627780914307
    2. '       ' → logprob: -2.9592461585998535
    3. 'self' (adapté à ' self') → logprob: -3.5842461585998535
    4. 'n' → logprob: -7.2092461585998535
    5. ' n' → logprob: -7.8342461585998535
    6. 'import' → logprob: -10.834246635437012
    7. ' s' → logprob: -11.834246635437012
    8. ' import' → logprob: -12.209246635437012
    9. ' ' → logprob: -12.459246635437012
    10. '	self' → logprob: -12.709246635437012

Token 156: '.n' (ID: 1835)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.21227705478668213
    2. '.length' → logprob: -1.8372770547866821
    3. '.' → logprob: -4.212276935577393
    4. '.size' → logprob: -4.837276935577393
    5. '.n' → logprob: -5.462276935577393
    6. ' .' → logprob: -6.712276935577393
    7. '.root' → logprob: -7.212276935577393
    8. '.len' → logprob: -7.462276935577393
    9. '.l' → logprob: -7.712276935577393
    10. '.data' → logprob: -7.962276935577393

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197866424918175
    2. '=' → logprob: -2.811978578567505
    3. '=len' → logprob: -11.436978340148926
    4. '=int' → logprob: -15.936978340148926
    5. ' ' → logprob: -16.436979293823242
    6. ')' → logprob: -17.436979293823242
    7. '＝' → logprob: -17.686979293823242
    8. 'len' → logprob: -17.811979293823242
    9. ' =
' → logprob: -18.311979293823242
    10. '   ' → logprob: -18.311979293823242

Token 158: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10020817816257477
    2. ' len' → logprob: -2.350208282470703
    3. '=len' → logprob: -14.100208282470703
    4. '(len' → logprob: -14.350208282470703
    5. '[len' → logprob: -15.475208282470703
    6. '	len' → logprob: -17.600208282470703
    7. ',len' → logprob: -18.600208282470703
    8. '<len' → logprob: -19.475208282470703
    9. 'n' → logprob: -20.225208282470703
    10. 's' → logprob: -21.225208282470703

Token 159: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00034714414505288005
    2. '(' → logprob: -8.000347137451172
    3. 's' → logprob: -11.375347137451172
    4. '(
' → logprob: -16.250347137451172
    5. ' (' → logprob: -16.625347137451172
    6. ' s' → logprob: -18.750347137451172
    7. ')' → logprob: -19.625347137451172
    8. ')s' → logprob: -20.875347137451172
    9. '```' → logprob: -21.125347137451172
    10. ',' → logprob: -21.125347137451172

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.474147230386734
    2. ')
' → logprob: -0.9741472005844116
    3. ' )
' → logprob: -9.974146842956543
    4. ' )' → logprob: -10.849146842956543
    5. ')
' → logprob: -12.724146842956543
    6. ')

' → logprob: -14.724146842956543
    7. '       ' → logprob: -14.724146842956543
    8. ')s' → logprob: -15.349146842956543
    9. '   ' → logprob: -17.59914779663086
    10. ' ' → logprob: -18.34914779663086

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019507692195475101
    2. '
' → logprob: -8.875195503234863
    3. ',' → logprob: -10.625195503234863
    4. '        
' → logprob: -11.500195503234863
    5. 'self' → logprob: -11.625195503234863
    6. '<|end|>' → logprob: -12.000195503234863
    7. ' self' → logprob: -12.750195503234863
    8. '```' → logprob: -14.625195503234863
    9. '   ' → logprob: -14.875195503234863
    10. ',
' → logprob: -15.125195503234863

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.039267752319574356
    2. ' self' → logprob: -3.2892677783966064
    3. '       ' → logprob: -7.039267539978027
    4. 'from' → logprob: -8.539267539978027
    5. 'import' → logprob: -9.414267539978027
    6. 's' → logprob: -10.164267539978027
    7. ' from' → logprob: -11.414267539978027
    8. ' s' → logprob: -11.914267539978027
    9. '   ' → logprob: -12.289267539978027
    10. '
' → logprob: -12.539267539978027

Token 163: '.s' (ID: 640)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.3478463888168335
    2. '.s' → logprob: -1.5978463888168335
    3. '.pow' → logprob: -2.847846508026123
    4. '.power' → logprob: -3.847846508026123
    5. '.hash' → logprob: -5.347846508026123
    6. '.root' → logprob: -5.972846508026123
    7. '.base' → logprob: -6.597846508026123
    8. '.pre' → logprob: -7.097846508026123
    9. ' .' → logprob: -7.722846508026123
    10. '.tree' → logprob: -8.347846031188965

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054892443120479584
    2. '=' → logprob: -2.9298925399780273
    3. '=s' → logprob: -12.429892539978027
    4. ' ' → logprob: -12.929892539978027
    5. ')' → logprob: -13.304892539978027
    6. ',' → logprob: -13.804892539978027
    7. ' s' → logprob: -16.05489158630371
    8. ' =)' → logprob: -16.17989158630371
    9. 's' → logprob: -16.30489158630371
    10. '_' → logprob: -16.42989158630371

Token 165: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004622137639671564
    2. ' s' → logprob: -5.379621982574463
    3. 'list' → logprob: -13.879622459411621
    4. '[s' → logprob: -14.629622459411621
    5. '[' → logprob: -14.754622459411621
    6. ' [' → logprob: -16.379621505737305
    7. ' list' → logprob: -16.629621505737305
    8. 'str' → logprob: -17.254621505737305
    9. '(s' → logprob: -17.629621505737305
    10. '	s' → logprob: -18.379621505737305

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010111246258020401
    2. '
' → logprob: -4.635111331939697
    3. 'self' → logprob: -8.635110855102539
    4. ',' → logprob: -9.135110855102539
    5. '        
' → logprob: -10.885110855102539
    6. 'import' → logprob: -11.010110855102539
    7. ',
' → logprob: -11.510110855102539
    8. ' self' → logprob: -12.010110855102539
    9. '   ' → logprob: -12.135110855102539
    10. 'def' → logprob: -12.885110855102539

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01150187011808157
    2. '
' → logprob: -4.761501789093018
    3. '        
' → logprob: -6.261501789093018
    4. ',' → logprob: -7.386501789093018
    5. ',
' → logprob: -9.386502265930176
    6. 'self' → logprob: -9.761502265930176
    7. '<|end|>' → logprob: -9.761502265930176
    8. '    
' → logprob: -10.386502265930176
    9. ' 
' → logprob: -10.511502265930176
    10. '  
' → logprob: -11.261502265930176

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023732801899313927
    2. '       ' → logprob: -3.898732900619507
    3. 'from' → logprob: -6.523732662200928
    4. 'import' → logprob: -6.773732662200928
    5. ' self' → logprob: -7.648732662200928
    6. '
' → logprob: -10.148733139038086
    7. 'pow' → logprob: -10.898733139038086
    8. '   ' → logprob: -11.023733139038086
    9. '#' → logprob: -12.023733139038086
    10. '        
' → logprob: -12.898733139038086

Token 169: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.32911863923072815
    2. '.p' → logprob: -1.5791186094284058
    3. '.power' → logprob: -3.8291187286376953
    4. '.root' → logprob: -4.079118728637695
    5. 'pow' → logprob: -4.579118728637695
    6. '_pow' → logprob: -4.704118728637695
    7. '._' → logprob: -5.079118728637695
    8. '.hash' → logprob: -5.704118728637695
    9. '_p' → logprob: -6.204118728637695
    10. '.base' → logprob: -6.454118728637695

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34847402572631836
    2. ' =' → logprob: -2.2234740257263184
    3. 'er' → logprob: -2.7234740257263184
    4. '_base' → logprob: -2.7234740257263184
    5. '_cache' → logprob: -4.098474025726318
    6. 's' → logprob: -4.223474025726318
    7. 'ers' → logprob: -4.848474025726318
    8. '_pow' → logprob: -5.598474025726318
    9. '_' → logprob: -5.848474025726318
    10. '_len' → logprob: -6.098474025726318

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038045622408390045
    2. ' =' → logprob: -3.288045644760132
    3. 'pow' → logprob: -14.038045883178711
    4. '1' → logprob: -14.288045883178711
    5. ' ' → logprob: -14.288045883178711
    6. '=[' → logprob: -14.788045883178711
    7. ',' → logprob: -15.163045883178711
    8. '_' → logprob: -15.163045883178711
    9. '[' → logprob: -15.163045883178711
    10. 's' → logprob: -15.413045883178711

Token 172: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06197104603052139
    2. ' [' → logprob: -2.8119709491729736
    3. '[self' → logprob: -12.936970710754395
    4. '[p' → logprob: -14.561970710754395
    5. '1' → logprob: -16.31197166442871
    6. '[s' → logprob: -16.81197166442871
    7. '[length' → logprob: -17.06197166442871
    8. '[class' → logprob: -17.06197166442871
    9. ' ' → logprob: -17.18697166442871
    10. '[len' → logprob: -17.31197166442871

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '
' → logprob: -18.250001907348633
    5. '0' → logprob: -18.375001907348633
    6. 'pow' → logprob: -19.500001907348633
    7. '  ' → logprob: -20.250001907348633
    8. '           ' → logprob: -20.375001907348633
    9. '

' → logprob: -20.500001907348633
    10. '       ' → logprob: -20.750001907348633

Token 174: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019694350194185972
    2. ']
' → logprob: -6.376969337463379
    3. ']*' → logprob: -8.626969337463379
    4. ']*(' → logprob: -9.626969337463379
    5. ']+' → logprob: -11.251969337463379
    6. ',' → logprob: -13.251969337463379
    7. ']

' → logprob: -13.626969337463379
    8. ')' → logprob: -13.876969337463379
    9. ' ]' → logprob: -14.251969337463379
    10. '*' → logprob: -14.251969337463379

Token 175: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9650025428272784e-05
    2. ' self' → logprob: -10.375040054321289
    3. '(self' → logprob: -12.125040054321289
    4. '[self' → logprob: -13.250040054321289
    5. '=self' → logprob: -14.250040054321289
    6. '2' → logprob: -15.125040054321289
    7. '
' → logprob: -16.50004005432129
    8. '+self' → logprob: -17.12504005432129
    9. '*self' → logprob: -17.12504005432129
    10. 'len' → logprob: -17.25004005432129

Token 176: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.000574836041778326
    2. 'n' → logprob: -7.750575065612793
    3. 'self' → logprob: -9.000575065612793
    4. '+n' → logprob: -11.375575065612793
    5. '+' → logprob: -12.875575065612793
    6. '
' → logprob: -13.500575065612793
    7. '_n' → logprob: -13.625575065612793
    8. '<n' → logprob: -13.750575065612793
    9. '[self' → logprob: -15.125575065612793
    10. '.s' → logprob: -15.125575065612793

Token 177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020547492429614067
    2. ' +' → logprob: -3.895547389984131
    3. ')' → logprob: -12.395547866821289
    4. ' ' → logprob: -14.645547866821289
    5. '+
' → logprob: -14.895547866821289
    6. '*' → logprob: -15.645547866821289
    7. ' +
' → logprob: -15.770547866821289
    8. ' )' → logprob: -15.770547866821289
    9. '+)' → logprob: -15.770547866821289
    10. '+n' → logprob: -17.77054786682129

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '2' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.125006675720215
    4. '10' → logprob: -15.750006675720215
    5. '   ' → logprob: -17.25000762939453
    6. '+' → logprob: -18.50000762939453
    7. '```' → logprob: -18.62500762939453
    8. '5' → logprob: -18.75000762939453
    9. '  ' → logprob: -19.12500762939453
    10. '
' → logprob: -19.25000762939453

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024473309516907
    2. ')
' → logprob: -1.9102447032928467
    3. ')
' → logprob: -11.160244941711426
    4. ' )
' → logprob: -12.910244941711426
    5. ')

' → logprob: -13.410244941711426
    6. ' )' → logprob: -13.410244941711426
    7. '   ' → logprob: -15.410244941711426
    8. '       ' → logprob: -16.03524398803711
    9. '),' → logprob: -16.03524398803711
    10. '<|end|>' → logprob: -16.41024398803711

Token 180: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5450183153152466
    2. 'for' → logprob: -1.1700183153152466
    3. '       ' → logprob: -2.420018196105957
    4. '   ' → logprob: -3.920018196105957
    5. '	for' → logprob: -7.670018196105957
    6. '
' → logprob: -8.670018196105957
    7. '<|end|>' → logprob: -8.920018196105957
    8. ' ' → logprob: -9.045018196105957
    9. '	' → logprob: -10.920018196105957
    10. '  ' → logprob: -11.170018196105957

Token 181: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038781311362981796
    2. 'self' (adapté à ' self') → logprob: -3.9137814044952393
    3. ' for' → logprob: -4.16378116607666
    4. '       ' → logprob: -6.03878116607666
    5. ' self' → logprob: -8.91378116607666
    6. '	for' → logprob: -12.78878116607666
    7. '   ' → logprob: -12.78878116607666
    8. ' ' → logprob: -15.41378116607666
    9. '	self' → logprob: -15.78878116607666
    10. '[self' → logprob: -16.413782119750977

Token 182: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.0017023178515955806
    2. 'pow' → logprob: -6.501702308654785
    3. '.' → logprob: -8.751702308654785
    4. '_pow' → logprob: -11.126702308654785
    5. '.power' → logprob: -11.876702308654785
    6. ' .' → logprob: -11.876702308654785
    7. '.p' → logprob: -12.501702308654785
    8. ' pow' → logprob: -12.501702308654785
    9. '.Pow' → logprob: -13.376702308654785
    10. 'Pow' → logprob: -13.376702308654785

Token 183: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004831192083656788
    2. '2' → logprob: -5.379831314086914
    3. '[' → logprob: -8.754831314086914
    4. '(' → logprob: -11.379831314086914
    5. '_' → logprob: -11.629831314086914
    6. ' =' → logprob: -12.129831314086914
    7. '   ' → logprob: -12.129831314086914
    8. '=' → logprob: -12.504831314086914
    9. ' ' → logprob: -12.754831314086914
    10. 'pow' → logprob: -12.754831314086914

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25205859541893005
    2. '=' → logprob: -1.5020586252212524
    3. '=[' → logprob: -9.502058982849121
    4. ' =[' → logprob: -9.877058982849121
    5. '[' → logprob: -13.627058982849121
    6. ' ' → logprob: -13.752058982849121
    7. '=[]' → logprob: -14.877058982849121
    8. ']' → logprob: -15.002058982849121
    9. '<|end|>' → logprob: -15.502058982849121
    10. ')' → logprob: -16.752058029174805

Token 185: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008615988306701183
    2. ' [' → logprob: -4.758615970611572
    3. '1' → logprob: -13.50861644744873
    4. ' ' → logprob: -17.008615493774414
    5. '[self' → logprob: -17.258615493774414
    6. '(' → logprob: -17.508615493774414
    7. '   ' → logprob: -18.383615493774414
    8. 'self' → logprob: -18.508615493774414
    9. '([' → logprob: -19.133615493774414
    10. '[len' → logprob: -19.508615493774414

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -14.250001907348633
    3. 'self' → logprob: -14.625001907348633
    4. '[' → logprob: -14.750001907348633
    5. '(' → logprob: -15.125001907348633
    6. '(self' → logprob: -17.250001907348633
    7. ' [' → logprob: -17.500001907348633
    8. '[self' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. ' (' → logprob: -18.375001907348633

Token 187: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.008658185601234436
    2. '*(' → logprob: -5.383658409118652
    3. ']' → logprob: -5.633658409118652
    4. '](' → logprob: -8.133658409118652
    5. ']*' → logprob: -8.883658409118652
    6. ')*(' → logprob: -10.883658409118652
    7. '*' → logprob: -13.383658409118652
    8. ']+' → logprob: -15.133658409118652
    9. '<|end|>' → logprob: -15.133658409118652
    10. '*self' → logprob: -15.383658409118652

Token 188: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1756367712223437e-05
    2. ' self' → logprob: -11.875011444091797
    3. '(self' → logprob: -12.375011444091797
    4. '
' → logprob: -15.750011444091797
    5. '[self' → logprob: -16.375011444091797
    6. '   ' → logprob: -16.500011444091797
    7. ' ' → logprob: -16.500011444091797
    8. '0' → logprob: -17.250011444091797
    9. ')' → logprob: -17.375011444091797
    10. 'n' → logprob: -17.500011444091797

Token 189: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00409371592104435
    2. 'n' → logprob: -5.504093647003174
    3. '.' → logprob: -12.379094123840332
    4. '_n' → logprob: -13.004094123840332
    5. 's' → logprob: -13.379094123840332
    6. '	n' → logprob: -13.504094123840332
    7. '```' → logprob: -13.879094123840332
    8. 'self' → logprob: -14.004094123840332
    9. '.s' → logprob: -14.129094123840332
    10. '
' → logprob: -14.129094123840332

Token 190: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.511406809295295e-06
    2. ' +' → logprob: -12.000006675720215
    3. '1' → logprob: -15.750006675720215
    4. '+
' → logprob: -16.5000057220459
    5. ')+' → logprob: -16.7500057220459
    6. '+n' → logprob: -16.7500057220459
    7. '<|end|>' → logprob: -18.0000057220459
    8. ')' → logprob: -18.1250057220459
    9. '[' → logprob: -18.2500057220459
    10. '2' → logprob: -18.5000057220459

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -15.750003814697266
    4. '```' → logprob: -16.000003814697266
    5. '<|end|>' → logprob: -16.875003814697266
    6. '2' → logprob: -17.000003814697266
    7. '   ' → logprob: -18.187503814697266
    8. '7' → logprob: -18.687503814697266
    9. '...' → logprob: -19.062503814697266
    10. '<|end|>' → logprob: -19.125003814697266

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001511408481746912
    2. ')
' → logprob: -6.501511573791504
    3. ' )' → logprob: -12.751511573791504
    4. '       ' → logprob: -13.001511573791504
    5. ')

' → logprob: -13.626511573791504
    6. ']' → logprob: -14.001511573791504
    7. '   ' → logprob: -14.251511573791504
    8. '
' → logprob: -14.751511573791504
    9. ')
' → logprob: -15.501511573791504
    10. '<|end|>' → logprob: -16.001510620117188

Token 193: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5065839886665344
    2. 'for' → logprob: -1.5065839290618896
    3. '       ' → logprob: -1.7565839290618896
    4. '   ' → logprob: -6.131584167480469
    5. '	for' → logprob: -7.756584167480469
    6. '
' → logprob: -8.131584167480469
    7. ' ' → logprob: -9.506584167480469
    8. ')' → logprob: -9.631584167480469
    9. '	' → logprob: -10.631584167480469
    10. ',' → logprob: -11.006584167480469

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25515490770339966
    2. ' for' → logprob: -1.5051548480987549
    3. '       ' → logprob: -5.755155086517334
    4. '   ' → logprob: -10.630154609680176
    5. '	for' → logprob: -10.630154609680176
    6. '
' → logprob: -12.630154609680176
    7. ' ' → logprob: -14.005154609680176
    8. '	' → logprob: -14.005154609680176
    9. ' ' → logprob: -15.380154609680176
    10. '        
' → logprob: -16.130155563354492

Token 195: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019287518225610256
    2. 'i' → logprob: -6.251928806304932
    3. '	i' → logprob: -16.251928329467773
    4. ' ' → logprob: -16.876928329467773
    5. 'I' → logprob: -19.001928329467773
    6. ' ' → logprob: -19.376928329467773
    7. '_i' → logprob: -20.126928329467773
    8. '   ' → logprob: -20.251928329467773
    9. '_' → logprob: -20.751928329467773
    10. '  ' → logprob: -21.126928329467773

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025789898354560137
    2. 'in' → logprob: -6.002579212188721
    3. ' ' → logprob: -9.502578735351562
    4. ' i' → logprob: -12.002578735351562
    5. '1' → logprob: -12.127578735351562
    6. '  ' → logprob: -12.502578735351562
    7. '   ' → logprob: -12.752578735351562
    8. '	in' → logprob: -12.877578735351562
    9. '(' → logprob: -13.127578735351562
    10. 'range' → logprob: -13.752578735351562

Token 197: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519306540489197
    2. 'range' → logprob: -1.5019307136535645
    3. '(range' → logprob: -13.751930236816406
    4. '	range' → logprob: -15.126930236816406
    5. ' xrange' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '1' → logprob: -18.001930236816406
    8. 'ange' → logprob: -18.876930236816406
    9. '   ' → logprob: -19.626930236816406
    10. '  ' → logprob: -19.751930236816406

Token 198: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.347765181795694e-05
    2. '1' → logprob: -9.875053405761719
    3. ' ' → logprob: -14.000053405761719
    4. ' (' → logprob: -14.125053405761719
    5. '   ' → logprob: -15.625053405761719
    6. '(self' → logprob: -15.625053405761719
    7. '(
' → logprob: -17.25005340576172
    8. '2' → logprob: -17.75005340576172
    9. ' self' → logprob: -18.62505340576172
    10. 'self' → logprob: -20.00005340576172

Token 199: '.n' (ID: 1835)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09031878411769867
    2. '.n' → logprob: -2.7153186798095703
    3. 'n' → logprob: -4.34031867980957
    4. ' ' → logprob: -5.09031867980957
    5. '   ' → logprob: -8.09031867980957
    6. '(' → logprob: -8.21531867980957
    7. '[' → logprob: -9.34031867980957
    8. '+' → logprob: -9.34031867980957
    9. ' n' → logprob: -9.34031867980957
    10. '.' → logprob: -9.71531867980957

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18365825712680817
    2. '):
' → logprob: -1.808658242225647
    3. '+' → logprob: -6.183658123016357
    4. '1' → logprob: -6.808658123016357
    5. ' ):' → logprob: -7.558658123016357
    6. ' +' → logprob: -9.558658599853516
    7. ' ):
' → logprob: -9.558658599853516
    8. '   ' → logprob: -10.433658599853516
    9. ' ' → logprob: -11.308658599853516
    10. ':' → logprob: -11.933658599853516

Token 201: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011260485043749213
    2. '           ' → logprob: -7.376125812530518
    3. '   ' → logprob: -8.501126289367676
    4. ',' → logprob: -8.751126289367676
    5. ' self' → logprob: -9.501126289367676
    6. '<|end|>' → logprob: -10.751126289367676
    7. '<|end|>' → logprob: -12.126126289367676
    8. '	       ' → logprob: -12.251126289367676
    9. ':' → logprob: -12.501126289367676
    10. '	   ' → logprob: -12.751126289367676

Token 202: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1428530216217041
    2. 'self' (adapté à ' self') → logprob: -2.642853021621704
    3. '           ' → logprob: -3.267853021621704
    4. '   ' → logprob: -4.142852783203125
    5. '       ' → logprob: -4.892852783203125
    6. '               ' → logprob: -8.392852783203125
    7. ' ' → logprob: -9.142852783203125
    8. '	self' → logprob: -9.142852783203125
    9. '```' → logprob: -11.892852783203125
    10. '    ' → logprob: -11.892852783203125

Token 203: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.0002084277366520837
    2. ' .' → logprob: -8.875208854675293
    3. '.' → logprob: -9.875208854675293
    4. 'pow' → logprob: -12.000208854675293
    5. '.power' → logprob: -12.625208854675293
    6. '.Pow' → logprob: -12.625208854675293
    7. '   ' → logprob: -13.250208854675293
    8. ' pow' → logprob: -14.625208854675293
    9. '_pow' → logprob: -14.625208854675293
    10. '.py' → logprob: -15.250208854675293

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'pow' → logprob: -14.375000953674316
    3. '```' → logprob: -16.75
    4. '[' → logprob: -16.8125
    5. '_pow' → logprob: -16.9375
    6. ' ' → logprob: -17.0625
    7. '   ' → logprob: -17.125
    8. '１' → logprob: -18.3125
    9. '' → logprob: -18.3125
    10. '_' → logprob: -18.9375

Token 205: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.350386295001954e-05
    2. ' [' → logprob: -9.875073432922363
    3. '[' → logprob: -10.750073432922363
    4. ' i' → logprob: -16.62507438659668
    5. '[I' → logprob: -16.62507438659668
    6. '
' → logprob: -17.12507438659668
    7. '   ' → logprob: -17.62507438659668
    8. '[
' → logprob: -17.62507438659668
    9. '][' → logprob: -17.87507438659668
    10. '.append' → logprob: -18.00007438659668

Token 206: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006717386189848185
    2. ' +' → logprob: -5.006717205047607
    3. ']' → logprob: -14.131717681884766
    4. '+i' → logprob: -14.381717681884766
    5. ' ' → logprob: -15.131717681884766
    6. '1' → logprob: -15.756717681884766
    7. '+
' → logprob: -16.756717681884766
    8. '+]' → logprob: -17.006717681884766
    9. ' +
' → logprob: -17.131717681884766
    10. '＋' → logprob: -17.506717681884766

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020449401927180588
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.250204086303711
    4. ']' → logprob: -15.625204086303711
    5. '+' → logprob: -16.62520408630371
    6. '<|end|>' → logprob: -16.87520408630371
    7. '```' → logprob: -17.00020408630371
    8. '
' → logprob: -17.12520408630371
    9. ')' → logprob: -18.00020408630371
    10. '  ' → logprob: -18.93770408630371

Token 208: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5017778277397156
    2. ' =' → logprob: -1.3767778873443604
    3. ']' → logprob: -2.0017778873443604
    4. ' ]' → logprob: -5.751777648925781
    5. ']=' → logprob: -6.001777648925781
    6. ')' → logprob: -6.626777648925781
    7. ' )' → logprob: -10.376777648925781
    8. ')=' → logprob: -10.751777648925781
    9. ' ' → logprob: -11.251777648925781
    10. ',' → logprob: -12.001777648925781

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '*=' → logprob: -14.828889846801758
    4. '＝' → logprob: -16.953889846801758
    5. '=

' → logprob: -17.453889846801758
    6. ']=' → logprob: -18.078889846801758
    7. ' *=' → logprob: -18.078889846801758
    8. '=int' → logprob: -18.703889846801758
    9. '=(' → logprob: -18.703889846801758
    10. ']' → logprob: -18.703889846801758

Token 210: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027261851355433464
    2. 'self' → logprob: -3.652261734008789
    3. ' (' → logprob: -7.527261734008789
    4. ' self' → logprob: -7.777261734008789
    5. '(' → logprob: -13.652261734008789
    6. '   ' → logprob: -14.527261734008789
    7. '	self' → logprob: -14.652261734008789
    8. '           ' → logprob: -14.777261734008789
    9. '*self' → logprob: -15.527261734008789
    10. '=self' → logprob: -15.777261734008789

Token 211: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.007516357582062483
    2. 'pow' → logprob: -5.382516384124756
    3. '(pow' → logprob: -5.882516384124756
    4. '*' → logprob: -10.507515907287598
    5. ' (' → logprob: -10.632515907287598
    6. ' pow' → logprob: -10.882515907287598
    7. '_pow' → logprob: -11.382515907287598
    8. '.' → logprob: -12.257515907287598
    9. '(' → logprob: -12.632515907287598
    10. 'Pow' → logprob: -13.007515907287598

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -14.000003814697266
    3. '[i' → logprob: -14.250003814697266
    4. ' ' → logprob: -14.625003814697266
    5. '```' → logprob: -14.625003814697266
    6. 'pow' → logprob: -15.000003814697266
    7. '(i' → logprob: -15.625003814697266
    8. '[' → logprob: -15.625003814697266
    9. '   ' → logprob: -15.937503814697266
    10. '*' → logprob: -16.062503814697266

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.500012397766113
    3. ' [' → logprob: -13.625012397766113
    4. 'i' → logprob: -14.500012397766113
    5. ' i' → logprob: -16.500011444091797
    6. '[I' → logprob: -16.500011444091797
    7. '```' → logprob: -16.750011444091797
    8. '[
' → logprob: -17.125011444091797
    9. '
' → logprob: -18.125011444091797
    10. '][' → logprob: -19.500011444091797

Token 214: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5830085277557373
    2. ' *' → logprob: -0.8330085277557373
    3. '*self' → logprob: -4.958008766174316
    4. ' ' → logprob: -12.083008766174316
    5. ' ' → logprob: -12.208008766174316
    6. '*object' → logprob: -12.458008766174316
    7. 'self' → logprob: -14.583008766174316
    8. '**' → logprob: -14.708008766174316
    9. '*i' → logprob: -15.083008766174316
    10. ' self' → logprob: -15.083008766174316

Token 215: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004498485010117292
    2. 'Segment' → logprob: -5.504498481750488
    3. '131' → logprob: -8.379498481750488
    4. ' self' → logprob: -8.629498481750488
    5. 'segment' → logprob: -13.004498481750488
    6. 'Self' → logprob: -13.004498481750488
    7. '(self' → logprob: -13.629498481750488
    8. '
' → logprob: -13.629498481750488
    9. ' Segment' → logprob: -13.754498481750488
    10. 'Seg' → logprob: -13.754498481750488

Token 216: '.BASE' (ID: 58017)
  Prédit: '.BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BASE' → logprob: -0.012640198692679405
    2. 'BASE' → logprob: -4.387639999389648
    3. '.' → logprob: -9.262639999389648
    4. '.B' → logprob: -11.012639999389648
    5. '(BASE' → logprob: -11.637639999389648
    6. '.BASELINE' → logprob: -12.387639999389648
    7. ' BASE' → logprob: -12.887639999389648
    8. ' .' → logprob: -13.637639999389648
    9. '.Base' → logprob: -14.262639999389648
    10. '
' → logprob: -14.762639999389648

Token 217: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16023194789886475
    2. ' %' → logprob: -1.9102319478988647
    3. '%i' → logprob: -12.535231590270996
    4. '%n' → logprob: -13.535231590270996
    5. '%B' → logprob: -14.035231590270996
    6. ' ' → logprob: -14.785231590270996
    7. '%A' → logprob: -14.785231590270996
    8. '%s' → logprob: -14.910231590270996
    9. '%D' → logprob: -15.160231590270996
    10. '%x' → logprob: -15.660231590270996

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010861629853025079
    2. ' self' → logprob: -6.876086235046387
    3. 'Segment' → logprob: -9.876086235046387
    4. '(self' → logprob: -13.626086235046387
    5. 'Self' → logprob: -14.751086235046387
    6. 'Seg' → logprob: -15.751086235046387
    7. '
' → logprob: -16.25108528137207
    8. ' Segment' → logprob: -16.37608528137207
    9. '	self' → logprob: -17.25108528137207
    10. '```' → logprob: -17.25108528137207

Token 219: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.014165864326059818
    2. '.MOD' → logprob: -4.264165878295898
    3. '_MOD' → logprob: -13.639165878295898
    4. ' MOD' → logprob: -14.139165878295898
    5. '.' → logprob: -15.514165878295898
    6. '
' → logprob: -16.0141658782959
    7. '   ' → logprob: -16.8891658782959
    8. '.M' → logprob: -17.0141658782959
    9. '1' → logprob: -17.8891658782959
    10. '.Mod' → logprob: -18.2641658782959

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -16.000001907348633
    4. ' ' → logprob: -16.250001907348633
    5. '+' → logprob: -18.937501907348633
    6. '7' → logprob: -19.000001907348633
    7. '```' → logprob: -19.062501907348633
    8. ',' → logprob: -19.125001907348633
    9. '_' → logprob: -19.250001907348633
    10. '[' → logprob: -19.437501907348633

Token 221: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9504606825648807e-05
    2. '       ' → logprob: -11.625019073486328
    3. '
' → logprob: -12.500019073486328
    4. ',' → logprob: -13.500019073486328
    5. '               ' → logprob: -13.625019073486328
    6. 'self' → logprob: -13.750019073486328
    7. '          ' → logprob: -13.875019073486328
    8. '   ' → logprob: -14.125019073486328
    9. '<|end|>' → logprob: -15.125019073486328
    10. ',
' → logprob: -15.375019073486328

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00462771812453866
    2. '       ' → logprob: -5.879627704620361
    3. 'self' → logprob: -7.004627704620361
    4. '
' → logprob: -8.62962818145752
    5. '   ' → logprob: -9.00462818145752
    6. '```' → logprob: -9.25462818145752
    7. '            
' → logprob: -9.37962818145752
    8. ' self' → logprob: -9.50462818145752
    9. '          ' → logprob: -9.62962818145752
    10. ',' → logprob: -10.00462818145752

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4315904378890991
    2. '           ' → logprob: -1.6815904378890991
    3. ' self' → logprob: -1.8065904378890991
    4. '       ' → logprob: -9.30659008026123
    5. '   ' → logprob: -9.80659008026123
    6. '	self' → logprob: -10.55659008026123
    7. ' ' → logprob: -10.55659008026123
    8. '               ' → logprob: -11.93159008026123
    9. '
' → logprob: -12.18159008026123
    10. '          ' → logprob: -12.30659008026123

Token 224: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.0004928641719743609
    2. '.' → logprob: -8.500493049621582
    3. 'pow' → logprob: -8.750493049621582
    4. ' .' → logprob: -9.000493049621582
    5. '.power' → logprob: -12.500493049621582
    6. ' pow' → logprob: -14.000493049621582
    7. '_pow' → logprob: -14.375493049621582
    8. '.py' → logprob: -15.000493049621582
    9. 'Pow' → logprob: -15.250493049621582
    10. '.Pow' → logprob: -15.375493049621582

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. '1' → logprob: -11.87501335144043
    3. 'pow' → logprob: -12.25001335144043
    4. '   ' → logprob: -14.87501335144043
    5. '```' → logprob: -15.12501335144043
    6. '[' → logprob: -15.50001335144043
    7. '
' → logprob: -16.31251335144043
    8. ' ' → logprob: -16.50001335144043
    9. '_pow' → logprob: -16.50001335144043
    10. '_' → logprob: -17.06251335144043

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.500001907348633
    3. ' [' → logprob: -15.375001907348633
    4. '[I' → logprob: -17.375001907348633
    5. '[
' → logprob: -18.000001907348633
    6. '[int' → logprob: -19.125001907348633
    7. '
' → logprob: -19.625001907348633
    8. '```' → logprob: -19.875001907348633
    9. '[index' → logprob: -20.500001907348633
    10. '][' → logprob: -20.750001907348633

Token 227: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017418164061382413
    2. '+i' → logprob: -6.626741886138916
    3. '[i' → logprob: -8.501741409301758
    4. ' +' → logprob: -9.251741409301758
    5. 'i' → logprob: -9.751741409301758
    6. '1' → logprob: -10.501741409301758
    7. ']' → logprob: -11.626741409301758
    8. '<|end|>' → logprob: -11.876741409301758
    9. '[' → logprob: -12.626741409301758
    10. ' i' → logprob: -13.126741409301758

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. '2' → logprob: -11.000041007995605
    3. '<|end|>' → logprob: -11.000041007995605
    4. ' ' → logprob: -12.500041007995605
    5. '+' → logprob: -13.375041007995605
    6. '<|end|>' → logprob: -14.125041007995605
    7. '...' → logprob: -14.875041007995605
    8. '```' → logprob: -15.500041007995605
    9. '   ' → logprob: -15.937541007995605
    10. '[' → logprob: -15.937541007995605

Token 229: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5268879532814026
    2. ' =' → logprob: -1.5268878936767578
    3. ']' → logprob: -1.6518878936767578
    4. ']=' → logprob: -7.651887893676758
    5. ' ]' → logprob: -8.901887893676758
    6. ')' → logprob: -10.151887893676758
    7. ' ' → logprob: -11.901887893676758
    8. '[' → logprob: -13.651887893676758
    9. '<|end|>' → logprob: -14.901887893676758
    10. '']' → logprob: -15.026887893676758

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.72520637512207
    4. ']' → logprob: -16.85020637512207
    5. ' ' → logprob: -17.10020637512207
    6. ']=' → logprob: -19.22520637512207
    7. ',' → logprob: -19.47520637512207
    8. '[' → logprob: -20.10020637512207
    9. '=
' → logprob: -20.47520637512207
    10. '=

' → logprob: -20.47520637512207

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03075772151350975
    2. '(self' → logprob: -3.5307576656341553
    3. ' self' → logprob: -6.905757904052734
    4. '[self' → logprob: -12.780757904052734
    5. '           ' → logprob: -14.155757904052734
    6. ' (' → logprob: -14.655757904052734
    7. '	self' → logprob: -15.530757904052734
    8. '
' → logprob: -15.655757904052734
    9. '       ' → logprob: -15.655757904052734
    10. '*self' → logprob: -16.280757904052734

Token 232: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.2422953099012375
    2. 'self' → logprob: -1.742295265197754
    3. 'pow' → logprob: -3.242295265197754
    4. '[self' → logprob: -7.117295265197754
    5. ' self' → logprob: -9.242295265197754
    6. '*self' → logprob: -10.367295265197754
    7. '.self' → logprob: -11.117295265197754
    8. '_pow' → logprob: -11.242295265197754
    9. ' pow' → logprob: -11.992295265197754
    10. '.' → logprob: -13.492295265197754

Token 233: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004612935590557754
    2. 'pow' → logprob: -7.750461101531982
    3. 'self' → logprob: -10.50046157836914
    4. '   ' → logprob: -14.62546157836914
    5. '1' → logprob: -14.75046157836914
    6. '
' → logprob: -15.00046157836914
    7. '_pow' → logprob: -15.37546157836914
    8. '```' → logprob: -15.62546157836914
    9. ' ' → logprob: -15.75046157836914
    10. '.pow' → logprob: -15.75046157836914

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 'i' → logprob: -17.500001907348633
    4. '[user' → logprob: -17.625001907348633
    5. '```' → logprob: -18.000001907348633
    6. '[
' → logprob: -19.625001907348633
    7. '[I' → logprob: -19.875001907348633
    8. '[self' → logprob: -20.500001907348633
    9. '`' → logprob: -21.250001907348633
    10. '[u' → logprob: -21.375001907348633

Token 235: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5968586206436157
    2. ']*' → logprob: -1.0968586206436157
    3. ']' → logprob: -2.221858501434326
    4. '+' → logprob: -5.221858501434326
    5. 'i' → logprob: -7.221858501434326
    6. '   ' → logprob: -8.221858978271484
    7. '*i' → logprob: -8.221858978271484
    8. '*' → logprob: -8.596858978271484
    9. '```' → logprob: -9.596858978271484
    10. '][' → logprob: -9.721858978271484

Token 236: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.251091377227567e-05
    2. ' self' → logprob: -10.125042915344238
    3. '
' → logprob: -13.125042915344238
    4. '(self' → logprob: -16.250041961669922
    5. '=self' → logprob: -16.625041961669922
    6. '[self' → logprob: -16.625041961669922
    7. 'BASE' → logprob: -16.750041961669922
    8. '	self' → logprob: -17.250041961669922
    9. 'base' → logprob: -17.875041961669922
    10. ' ' → logprob: -17.875041961669922

Token 237: '.BASE' (ID: 58017)
  Prédit: '.BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BASE' → logprob: -0.06199637055397034
    2. 'BASE' → logprob: -2.8119964599609375
    3. '.BASELINE' → logprob: -10.811996459960938
    4. '(BASE' → logprob: -12.936996459960938
    5. '.' → logprob: -13.311996459960938
    6. ' BASE' → logprob: -13.686996459960938
    7. ' .' → logprob: -13.936996459960938
    8. '
' → logprob: -14.186996459960938
    9. '_BASE' → logprob: -14.311996459960938
    10. '.MOD' → logprob: -15.436996459960938

Token 238: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012525303289294243
    2. '%' → logprob: -4.3875250816345215
    3. ' ' → logprob: -11.26252555847168
    4. ' ' → logprob: -12.88752555847168
    5. '`' → logprob: -16.63752555847168
    6. '```' → logprob: -17.26252555847168
    7. ' `%' → logprob: -18.01252555847168
    8. ' %#' → logprob: -18.26252555847168
    9. ' %=' → logprob: -18.26252555847168
    10. ' %
' → logprob: -18.32502555847168

Token 239: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1602257490158081
    2. 'self' → logprob: -1.910225749015808
    3. ' ' → logprob: -14.535225868225098
    4. ' ' → logprob: -14.660225868225098
    5. '
' → logprob: -15.410225868225098
    6. ' 
' → logprob: -15.535225868225098
    7. '(self' → logprob: -15.660225868225098
    8. '	self' → logprob: -16.53522491455078
    9. '```' → logprob: -17.78522491455078
    10. '[self' → logprob: -18.16022491455078

Token 240: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.003237601602450013
    2. 'MOD' → logprob: -5.753237724304199
    3. '_MOD' → logprob: -9.7532377243042
    4. '.MODE' → logprob: -13.8782377243042
    5. ' MOD' → logprob: -14.7532377243042
    6. '.Mod' → logprob: -15.8782377243042
    7. '.' → logprob: -16.003236770629883
    8. ' .' → logprob: -16.128236770629883
    9. '
' → logprob: -16.753236770629883
    10. '.M' → logprob: -17.628236770629883

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. '9' → logprob: -10.750024795532227
    3. '```' → logprob: -13.125024795532227
    4. 'MOD' → logprob: -14.500024795532227
    5. '7' → logprob: -15.375024795532227
    6. ' ' → logprob: -16.000024795532227
    7. '
' → logprob: -16.125024795532227
    8. '1' → logprob: -16.500024795532227
    9. 'BASE' → logprob: -17.000024795532227
    10. '   ' → logprob: -17.250024795532227

Token 242: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.841871440410614
    2. '<|end|>' → logprob: -1.2168715000152588
    3. '       ' → logprob: -1.3418715000152588
    4. '   ' → logprob: -5.34187126159668
    5. '```' → logprob: -6.34187126159668
    6. '<|end|>' → logprob: -6.71687126159668
    7. 'def' → logprob: -6.71687126159668
    8. ' def' → logprob: -7.34187126159668
    9. '        
' → logprob: -7.46687126159668
    10. '    
' → logprob: -8.46687126159668

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5287752151489258
    2. ' self' → logprob: -1.1537752151489258
    3. '       ' → logprob: -2.403775215148926
    4. 'def' → logprob: -5.528775215148926
    5. '   ' → logprob: -7.653775215148926
    6. ' ' → logprob: -9.153775215148926
    7. '<|end|>' → logprob: -9.528775215148926
    8. ' def' → logprob: -9.653775215148926
    9. '#' → logprob: -10.278775215148926
    10. '
' → logprob: -10.403775215148926

Token 245: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0010410251561552286
    2. 'root' → logprob: -7.376040935516357
    3. '.tree' → logprob: -8.251041412353516
    4. '.ro' → logprob: -10.126041412353516
    5. '.hash' → logprob: -10.251041412353516
    6. '.' → logprob: -10.501041412353516
    7. '.st' → logprob: -10.876041412353516
    8. '_root' → logprob: -11.501041412353516
    9. ' root' → logprob: -11.626041412353516
    10. '._' → logprob: -12.876041412353516

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005319497082382441
    2. '=' → logprob: -5.255319595336914
    3. ' ' → logprob: -9.380319595336914
    4. ',' → logprob: -14.880319595336914
    5. ')' → logprob: -15.380319595336914
    6. '=create' → logprob: -15.505319595336914
    7. '<|end|>' → logprob: -15.630319595336914
    8. ' =)' → logprob: -16.255319595336914
    9. '=None' → logprob: -16.380319595336914
    10. ' =
' → logprob: -16.505319595336914

Token 247: ' self' (ID: 1051)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.8512631058692932
    2. ' Segment' → logprob: -0.8512631058692932
    3. ' self' → logprob: -2.3512630462646484
    4. 'self' → logprob: -2.9762630462646484
    5. ' Seg' → logprob: -11.601263046264648
    6. 'Seg' → logprob: -12.601263046264648
    7. ' segment' → logprob: -13.476263046264648
    8. '_segment' → logprob: -13.851263046264648
    9. '(self' → logprob: -14.351263046264648
    10. '   ' → logprob: -14.851263046264648

Token 248: '.build' (ID: 20924)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11354193091392517
    2. '.build' → logprob: -2.238541841506958
    3. 'build' → logprob: -8.113541603088379
    4. '.' → logprob: -8.738541603088379
    5. '.Build' → logprob: -8.738541603088379
    6. '.__' → logprob: -10.488541603088379
    7. '.B' → logprob: -10.988541603088379
    8. '_build' → logprob: -11.113541603088379
    9. '.create' → logprob: -12.113541603088379
    10. '.construct' → logprob: -12.113541603088379

Token 249: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.250000953674316
    3. '0' → logprob: -16.0
    4. 'tree' → logprob: -17.5
    5. '(
' → logprob: -17.5
    6. '((' → logprob: -17.75
    7. '_tree' → logprob: -17.75
    8. '<|end|>' → logprob: -18.75
    9. ' ' → logprob: -19.125
    10. 'def' → logprob: -19.375

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -16.250001907348633
    4. '(' → logprob: -18.375001907348633
    5. ',' → logprob: -19.500001907348633
    6. '1' → logprob: -20.000001907348633
    7. '
' → logprob: -20.250001907348633
    8. ')
' → logprob: -21.000001907348633
    9. 's' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.250001907348633

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002370329457335174
    2. ' ,' → logprob: -8.375237464904785
    3. ',self' → logprob: -12.500237464904785
    4. ',
' → logprob: -13.000237464904785
    5. '<|end|>' → logprob: -15.625237464904785
    6. 'self' → logprob: -16.00023651123047
    7. ',n' → logprob: -16.62523651123047
    8. '
' → logprob: -17.00023651123047
    9. '```' → logprob: -17.12523651123047
    10. ',len' → logprob: -17.12523651123047

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008617646060883999
    2. ' self' → logprob: -4.758617877960205
    3. '       ' → logprob: -13.258617401123047
    4. '   ' → logprob: -13.883617401123047
    5. 'len' → logprob: -15.508617401123047
    6. '	self' → logprob: -16.258617401123047
    7. 'n' → logprob: -17.758617401123047
    8. '
' → logprob: -17.883617401123047
    9. '           ' → logprob: -18.383617401123047
    10. '[self' → logprob: -18.508617401123047

Token 253: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.5491004129871726e-05
    2. 'n' → logprob: -10.000045776367188
    3. ' n' → logprob: -17.750045776367188
    4. ' .' → logprob: -17.875045776367188
    5. ',n' → logprob: -18.000045776367188
    6. '.' → logprob: -18.375045776367188
    7. 'self' → logprob: -19.000045776367188
    8. '	n' → logprob: -19.250045776367188
    9. '<n' → logprob: -19.250045776367188
    10. '_n' → logprob: -20.250045776367188

Token 254: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31327101588249207
    2. ' -' → logprob: -1.3132710456848145
    3. ')' → logprob: -11.938270568847656
    4. ' ' → logprob: -13.688270568847656
    5. '<|end|>' → logprob: -13.813270568847656
    6. '()-' → logprob: -15.813270568847656
    7. '–' → logprob: -16.063270568847656
    8. ' ' → logprob: -16.188270568847656
    9. '```' → logprob: -16.313270568847656
    10. '1' → logprob: -16.438270568847656

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.6250057220459
    4. ')' → logprob: -17.5000057220459
    5. '
' → logprob: -18.5000057220459
    6. '   ' → logprob: -19.2500057220459
    7. '۱' → logprob: -19.2500057220459
    8. '<|end|>' → logprob: -19.5000057220459
    9. '...' → logprob: -19.5625057220459
    10. '`' → logprob: -19.5625057220459

Token 256: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.040457421680912e-05
    2. ' )' → logprob: -9.625070571899414
    3. ',' → logprob: -13.500070571899414
    4. '<|end|>' → logprob: -13.500070571899414
    5. ')
' → logprob: -14.625070571899414
    6. '   ' → logprob: -16.000070571899414
    7. ')return' → logprob: -16.125070571899414
    8. ')`' → logprob: -16.250070571899414
    9. ')#' → logprob: -16.375070571899414
    10. '`)' → logprob: -16.500070571899414

Token 257: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3535022735595703
    2. '   ' → logprob: -1.6035022735595703
    3. ' def' → logprob: -2.6035022735595703
    4. '<|end|>' → logprob: -4.72850227355957
    5. '
' → logprob: -5.10350227355957
    6. '	def' → logprob: -5.22850227355957
    7. '<|end|>' → logprob: -7.35350227355957
    8. '    
' → logprob: -7.60350227355957
    9. ' 
' → logprob: -8.72850227355957
    10. ' ' → logprob: -8.85350227355957

Token 258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0025611496530473232
    2. ' def' → logprob: -6.002561092376709
    3. '   ' → logprob: -9.377561569213867
    4. '	def' → logprob: -14.377561569213867
    5. 'de' → logprob: -16.002561569213867
    6. 'd' → logprob: -17.127561569213867
    7. '```' → logprob: -17.127561569213867
    8. '
' → logprob: -18.002561569213867
    9. ':def' → logprob: -18.752561569213867
    10. '    
' → logprob: -19.002561569213867

Token 259: ' calc' (ID: 25691)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.28121423721313477
    2. ' build' → logprob: -1.4062142372131348
    3. '_build' → logprob: -9.906213760375977
    4. ' ' → logprob: -12.656213760375977
    5. '	build' → logprob: -13.031213760375977
    6. 'update' → logprob: -13.156213760375977
    7. 'b' → logprob: -13.531213760375977
    8. 'push' → logprob: -13.531213760375977
    9. '  ' → logprob: -14.031213760375977
    10. '(build' → logprob: -14.281213760375977

Token 260: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0013389317318797112
    2. '_node' → logprob: -7.126338958740234
    3. '_val' → logprob: -8.001338958740234
    4. '_' → logprob: -9.376338958740234
    5. '_segment' → logprob: -9.626338958740234
    6. '_value' → logprob: -11.126338958740234
    7. '_sub' → logprob: -11.251338958740234
    8. '_single' → logprob: -12.001338958740234
    9. '_range' → logprob: -12.501338958740234
    10. '_prefix' → logprob: -13.501338958740234

Token 261: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004719784017652273
    2. '(' → logprob: -5.3797197341918945
    3. 'self' → logprob: -10.004719734191895
    4. '(s' → logprob: -10.754719734191895
    5. '(
' → logprob: -11.254719734191895
    6. '(node' → logprob: -12.004719734191895
    7. '_val' → logprob: -13.004719734191895
    8. '_token' → logprob: -13.254719734191895
    9. '<|end|>' → logprob: -13.379719734191895
    10. ' (' → logprob: -13.504719734191895

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007791397627443075
    2. ' ,' → logprob: -5.382791519165039
    3. 'self' → logprob: -6.632791519165039
    4. ',node' → logprob: -6.757791519165039
    5. ')' → logprob: -8.632791519165039
    6. 's' → logprob: -9.507791519165039
    7. ',val' → logprob: -9.507791519165039
    8. 'node' → logprob: -10.007791519165039
    9. 'value' → logprob: -10.132791519165039
    10. '(node' → logprob: -10.382791519165039

Token 263: ' c' (ID: 274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.313355803489685
    2. 'length' → logprob: -1.563355803489685
    3. ' length' → logprob: -1.938355803489685
    4. 'node' → logprob: -2.1883559226989746
    5. ' node' → logprob: -2.6883559226989746
    6. ' l' → logprob: -2.8133559226989746
    7. 's' → logprob: -3.3133559226989746
    8. ' s' → logprob: -4.188355922698975
    9. 'val' → logprob: -4.313355922698975
    10. 'char' → logprob: -4.438355922698975

Token 264: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0719151720404625
    2. '):
' → logprob: -2.6969151496887207
    3. ' ):' → logprob: -6.821915149688721
    4. ',' → logprob: -7.321915149688721
    5. ')' → logprob: -9.446915626525879
    6. ':' → logprob: -10.071915626525879
    7. ' ):
' → logprob: -10.321915626525879
    8. '):

' → logprob: -10.946915626525879
    9. '   ' → logprob: -10.946915626525879
    10. '       ' → logprob: -11.571915626525879

Token 265: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20148243010044098
    2. ' length' → logprob: -1.7014824151992798
    3. 'count' → logprob: -10.201482772827148
    4. 'l' → logprob: -10.951482772827148
    5. 'cnt' → logprob: -12.576482772827148
    6. 'exp' → logprob: -13.201482772827148
    7. 'k' → logprob: -13.201482772827148
    8. 'len' → logprob: -13.826482772827148
    9. 'power' → logprob: -13.826482772827148
    10. 'leng' → logprob: -14.201482772827148

Token 266: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008942965418100357
    2. '):
' → logprob: -4.7589430809021
    3. ' ):' → logprob: -8.133942604064941
    4. ')' → logprob: -11.383942604064941
    5. ':' → logprob: -11.508942604064941
    6. '   ' → logprob: -12.508942604064941
    7. ',' → logprob: -12.633942604064941
    8. '):
' → logprob: -12.633942604064941
    9. ' ):
' → logprob: -13.133942604064941
    10. '):

' → logprob: -14.758942604064941

Token 267: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3644128143787384
    2. '):' → logprob: -1.989412784576416
    3. ',' → logprob: -2.239412784576416
    4. ' :' → logprob: -3.614412784576416
    5. '       ' → logprob: -3.989412784576416
    6. '):
' → logprob: -5.364412784576416
    7. ' ,' → logprob: -5.739412784576416
    8. ')' → logprob: -6.114412784576416
    9. ' =' → logprob: -6.489412784576416
    10. '1' → logprob: -6.739412784576416

Token 268: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5885252952575684
    2. 'val' → logprob: -1.7135252952575684
    3. ' val' → logprob: -2.7135252952575684
    4. 'hash' → logprob: -2.7135252952575684
    5. ' hash' → logprob: -2.9635252952575684
    6. 'h' → logprob: -3.2135252952575684
    7. 'return' → logprob: -4.588525295257568
    8. ' h' → logprob: -4.713525295257568
    9. ' return' → logprob: -5.088525295257568
    10. 'v' → logprob: -5.588525295257568

Token 269: 'hash' (ID: 16909)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2833808958530426
    2. 'val' → logprob: -2.2833809852600098
    3. 'hash' → logprob: -2.7833809852600098
    4. 'return' → logprob: -2.9083809852600098
    5. ' h' → logprob: -4.65838098526001
    6. ' return' → logprob: -4.90838098526001
    7. 'v' → logprob: -5.65838098526001
    8. ' val' → logprob: -5.65838098526001
    9. ' hash' → logprob: -5.65838098526001
    10. '   ' → logprob: -8.533380508422852

Token 270: ' of' (ID: 328)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.03413338214159012
    2. '1' → logprob: -3.6591334342956543
    3. ' =' → logprob: -5.534133434295654
    4. '_' → logprob: -5.659133434295654
    5. '_c' → logprob: -8.659132957458496
    6. '_value' → logprob: -9.784132957458496
    7. '=' → logprob: -9.784132957458496
    8. ')' → logprob: -11.034132957458496
    9. '_v' → logprob: -11.034132957458496
    10. 'val' → logprob: -11.409132957458496

Token 271: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7729251980781555
    2. '(ord' → logprob: -1.2729251384735107
    3. ' ord' → logprob: -1.7729251384735107
    4. 'ord' → logprob: -2.6479251384735107
    5. '(c' → logprob: -4.64792537689209
    6. ' c' → logprob: -5.14792537689209
    7. ' (' → logprob: -6.64792537689209
    8. 'pow' → logprob: -7.64792537689209
    9. '((' → logprob: -8.27292537689209
    10. '(pow' → logprob: -10.02292537689209

Token 272: ' repeated' (ID: 24161)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5307033061981201
    2. ')' → logprob: -1.4057033061981201
    3. ' )' → logprob: -2.53070330619812
    4. ' ,' → logprob: -3.78070330619812
    5. ',' → logprob: -4.405703544616699
    6. '*' → logprob: -4.530703544616699
    7. ' =' → logprob: -4.655703544616699
    8. ' ' → logprob: -5.030703544616699
    9. ' **' → logprob: -5.405703544616699
    10. '[' → logprob: -5.780703544616699

Token 273: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.12078920751810074
    2. ' length' → logprob: -2.6207892894744873
    3. '(length' → logprob: -3.4957892894744873
    4. '[length' → logprob: -4.870789051055908
    5. ' character' → logprob: -7.245789051055908
    6. 'c' → logprob: -7.870789051055908
    7. '   ' → logprob: -7.870789051055908
    8. ' (' → logprob: -8.120789527893066
    9. ')' → logprob: -8.245789527893066
    10. 'character' → logprob: -8.245789527893066

Token 274: ' times' (ID: 4238)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5496559143066406
    2. ')' → logprob: -1.5496559143066406
    3. '   ' → logprob: -2.9246559143066406
    4. '):
' → logprob: -3.4246559143066406
    5. ' ):' → logprob: -3.6746559143066406
    6. ' )' → logprob: -4.049655914306641
    7. ':' → logprob: -4.674655914306641
    8. ' ' → logprob: -4.674655914306641
    9. '*' → logprob: -4.799655914306641
    10. '"""
' → logprob: -4.924655914306641

Token 275: '"""
' (ID: 15611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0404046773910522
    2. ' =' → logprob: -1.4154046773910522
    3. '"""
' → logprob: -2.040404796600342
    4. '"""' → logprob: -2.415404796600342
    5. '):' → logprob: -3.165404796600342
    6. ' """' → logprob: -3.790404796600342
    7. ' """
' → logprob: -3.790404796600342
    8. '):
' → logprob: -4.040404796600342
    9. '=' → logprob: -4.040404796600342
    10. ',' → logprob: -4.165404796600342

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5511180758476257
    2. ' =' → logprob: -1.0511181354522705
    3. '=' → logprob: -3.3011181354522705
    4. 'return' → logprob: -4.426117897033691
    5. ':' → logprob: -4.926117897033691
    6. '1' → logprob: -5.676117897033691
    7. '   ' → logprob: -5.801117897033691
    8. ' return' → logprob: -5.926117897033691
    9. ',' → logprob: -6.301117897033691
    10. 'val' → logprob: -6.926117897033691

Token 277: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -1.0637729167938232
    2. 'h' → logprob: -1.1887729167938232
    3. 'x' → logprob: -1.9387729167938232
    4. 'hash' → logprob: -2.3137729167938232
    5. 'res' → logprob: -3.0637729167938232
    6. 'base' → logprob: -3.4387729167938232
    7. 'return' → logprob: -4.438773155212402
    8. 'pow' → logprob: -5.063773155212402
    9. 'part' → logprob: -5.813773155212402
    10. ' val' → logprob: -7.063773155212402

Token 278: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019022980704903603
    2. '=' → logprob: -4.0190229415893555
    3. '1' → logprob: -7.1440229415893555
    4. '_c' → logprob: -10.019022941589355
    5. '_' → logprob: -11.519022941589355
    6. ' =(' → logprob: -11.894022941589355
    7. 'c' → logprob: -11.894022941589355
    8. 's' → logprob: -12.019022941589355
    9. '=(' → logprob: -13.144022941589355
    10. '_val' → logprob: -13.394022941589355

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04864175245165825
    2. '=' → logprob: -3.0486416816711426
    3. ',' → logprob: -10.1736421585083
    4. ' =(' → logprob: -11.9236421585083
    5. ' ' → logprob: -12.2986421585083
    6. '1' → logprob: -13.6736421585083
    7. 'c' → logprob: -14.1736421585083
    8. ',c' → logprob: -14.2986421585083
    9. '=(' → logprob: -14.2986421585083
    10. '   ' → logprob: -14.6736421585083

Token 280: ' (' (ID: 350)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.03003591112792492
    2. ' (' → logprob: -4.405035972595215
    3. '(c' → logprob: -4.905035972595215
    4. ' ord' → logprob: -5.655035972595215
    5. '(pow' → logprob: -5.780035972595215
    6. '(' → logprob: -6.905035972595215
    7. 'ord' → logprob: -7.030035972595215
    8. 'pow' → logprob: -7.405035972595215
    9. '0' → logprob: -7.530035972595215
    10. '((' → logprob: -9.780035972595215

Token 281: 'ord' (ID: 604)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.08669058978557587
    2. 'ord' → logprob: -3.086690664291382
    3. 'pow' → logprob: -3.711690664291382
    4. '(self' → logprob: -5.336690425872803
    5. '(pow' → logprob: -5.586690425872803
    6. 'self' → logprob: -6.461690425872803
    7. '(c' → logprob: -6.461690425872803
    8. ' ord' → logprob: -7.961690425872803
    9. '(' → logprob: -8.211690902709961
    10. ' (' → logprob: -8.211690902709961

Token 282: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.009882282465696335
    2. 'c' → logprob: -4.63488245010376
    3. '(' → logprob: -9.384881973266602
    4. ')c' → logprob: -10.759881973266602
    5. ' c' → logprob: -11.634881973266602
    6. ')' → logprob: -12.634881973266602
    7. 's' → logprob: -13.134881973266602
    8. ' (' → logprob: -13.259881973266602
    9. '[c' → logprob: -13.509881973266602
    10. '('' → logprob: -13.634881973266602

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.541455864906311
    2. ')*' → logprob: -2.1664557456970215
    3. ' *' → logprob: -2.2914557456970215
    4. ' -' → logprob: -2.5414557456970215
    5. '*' → logprob: -3.2914557456970215
    6. '-' → logprob: -3.4164557456970215
    7. '[' → logprob: -3.6664557456970215
    8. ')*(' → logprob: -4.5414557456970215
    9. ' )' → logprob: -5.0414557456970215
    10. '*)' → logprob: -6.4164557456970215

Token 284: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12764520943164825
    2. '*' → logprob: -2.127645254135132
    3. '*(' → logprob: -8.002645492553711
    4. ' -' → logprob: -9.627645492553711
    5. ')*' → logprob: -9.752645492553711
    6. ')' → logprob: -10.127645492553711
    7. '*[' → logprob: -10.127645492553711
    8. '-' → logprob: -10.252645492553711
    9. '[' → logprob: -10.752645492553711
    10. ' ' → logprob: -10.752645492553711

Token 285: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004195929039269686
    2. ' (' → logprob: -5.7541961669921875
    3. '((' → logprob: -7.8791961669921875
    4. 'self' → logprob: -7.8791961669921875
    5. '(sum' → logprob: -9.004196166992188
    6. '(pow' → logprob: -9.504196166992188
    7. '(' → logprob: -10.504196166992188
    8. '(
' → logprob: -11.754196166992188
    9. '
' → logprob: -11.879196166992188
    10. '(this' → logprob: -12.004196166992188

Token 286: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.388225793838501
    2. 'self' → logprob: -1.138225793838501
    3. 'pow' → logprob: -7.138225555419922
    4. '(pow' → logprob: -8.388225555419922
    5. '(' → logprob: -8.513225555419922
    6. '1' → logprob: -9.263225555419922
    7. ' (' → logprob: -11.263225555419922
    8. '[self' → logprob: -11.638225555419922
    9. ' self' → logprob: -12.263225555419922
    10. '   ' → logprob: -12.638225555419922

Token 287: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.3333195447921753
    2. 'pow' → logprob: -1.3333195447921753
    3. 'BASE' → logprob: -4.583319664001465
    4. 'self' → logprob: -5.333319664001465
    5. '(pow' → logprob: -6.583319664001465
    6. '.BASE' → logprob: -6.708319664001465
    7. '
' → logprob: -7.333319664001465
    8. ' pow' → logprob: -7.958319664001465
    9. ')' → logprob: -8.333319664001465
    10. '1' → logprob: -8.708319664001465

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.750020027160645
    3. 'self' → logprob: -12.750020027160645
    4. '
' → logprob: -13.000020027160645
    5. ' ' → logprob: -13.125020027160645
    6. '```' → logprob: -13.250020027160645
    7. '[self' → logprob: -14.312520027160645
    8. 'pow' → logprob: -15.250020027160645
    9. '(' → logprob: -15.312520027160645
    10. '   ' → logprob: -15.562520027160645

Token 289: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.0013379817828536034
    2. 'length' → logprob: -6.626338005065918
    3. '(length' → logprob: -12.376338005065918
    4. ' length' → logprob: -13.126338005065918
    5. '
' → logprob: -13.251338005065918
    6. '[self' → logprob: -13.626338005065918
    7. '[' → logprob: -14.001338005065918
    8. ' [' → logprob: -14.751338005065918
    9. ',length' → logprob: -15.251338005065918
    10. 'self' → logprob: -15.501338005065918

Token 290: ']' (ID: 60)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.013077055104076862
    2. '[self' → logprob: -4.513077259063721
    3. '[' → logprob: -6.513077259063721
    4. 'length' → logprob: -8.638076782226562
    5. '[len' → logprob: -9.513076782226562
    6. '       ' → logprob: -9.638076782226562
    7. ' [' → logprob: -9.763076782226562
    8. '   ' → logprob: -9.888076782226562
    9. '1' → logprob: -10.888076782226562
    10. '           ' → logprob: -11.138076782226562

Token 291: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29289448261260986
    2. ' -' → logprob: -1.4178944826126099
    3. '1' → logprob: -4.66789436340332
    4. '[' → logprob: -6.66789436340332
    5. ' ' → logprob: -8.04289436340332
    6. '   ' → logprob: -8.29289436340332
    7. ')' → logprob: -9.04289436340332
    8. '```' → logprob: -10.04289436340332
    9. '0' → logprob: -10.41789436340332
    10. 'self' → logprob: -10.54289436340332

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.375030517578125
    4. '
' → logprob: -18.125030517578125
    5. ')' → logprob: -18.750030517578125
    6. '     ' → logprob: -19.250030517578125
    7. '  ' → logprob: -19.625030517578125
    8. '```' → logprob: -19.750030517578125
    9. '         ' → logprob: -20.000030517578125
    10. '    ' → logprob: -20.062530517578125

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013558330247178674
    2. ')//' → logprob: -7.3763556480407715
    3. ' )' → logprob: -7.7513556480407715
    4. ')*' → logprob: -8.87635612487793
    5. '))' → logprob: -9.50135612487793
    6. ')*(' → logprob: -10.00135612487793
    7. '*)' → logprob: -11.25135612487793
    8. ')/(' → logprob: -12.12635612487793
    9. ')
' → logprob: -12.25135612487793
    10. '   ' → logprob: -12.50135612487793

Token 294: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1693311482667923
    2. ' *' → logprob: -2.4193310737609863
    3. '*' → logprob: -2.7943310737609863
    4. ')*' → logprob: -6.419331073760986
    5. ' )' → logprob: -6.419331073760986
    6. '*)' → logprob: -7.419331073760986
    7. '*(' → logprob: -7.794331073760986
    8. ')*(' → logprob: -7.919331073760986
    9. ')//' → logprob: -7.919331073760986
    10. '   ' → logprob: -8.169331550598145

Token 295: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.031036892905831337
    2. ' pow' → logprob: -3.531036853790283
    3. '(pow' → logprob: -6.781036853790283
    4. '   ' → logprob: -8.906037330627441
    5. '       ' → logprob: -11.656037330627441
    6. '(' → logprob: -13.406037330627441
    7. '           ' → logprob: -14.281037330627441
    8. '((' → logprob: -14.406037330627441
    9. '    ' → logprob: -14.906037330627441
    10. '  ' → logprob: -14.906037330627441

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030452150851488113
    2. '(pow' → logprob: -3.530452251434326
    3. 'pow' → logprob: -8.030451774597168
    4. '(' → logprob: -8.280451774597168
    5. '((' → logprob: -9.780451774597168
    6. 'self' → logprob: -9.905451774597168
    7. '(
' → logprob: -11.905451774597168
    8. '(s' → logprob: -13.405451774597168
    9. '   ' → logprob: -13.530451774597168
    10. ' pow' → logprob: -13.530451774597168

Token 297: '.BASE' (ID: 58017)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.49485039710998535
    2. '(BASE' → logprob: -1.3698503971099854
    3. '.BASE' → logprob: -2.4948503971099854
    4. 'self' → logprob: -3.4948503971099854
    5. '(self' → logprob: -4.619850158691406
    6. '[' → logprob: -4.869850158691406
    7. '.pow' → logprob: -5.869850158691406
    8. 'BASE' → logprob: -6.494850158691406
    9. '   ' → logprob: -8.244850158691406
    10. 'pow' → logprob: -8.619850158691406

Token 298: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10660851001739502
    2. '(' → logprob: -3.4816083908081055
    3. ' -' → logprob: -3.4816083908081055
    4. '(self' → logprob: -3.9816083908081055
    5. 'self' → logprob: -4.2316083908081055
    6. ',' → logprob: -6.3566083908081055
    7. '-self' → logprob: -6.8566083908081055
    8. ' self' → logprob: -6.9816083908081055
    9. '(-' → logprob: -6.9816083908081055
    10. '1' → logprob: -7.6066083908081055

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -12.250009536743164
    3. '2' → logprob: -13.250009536743164
    4. '
' → logprob: -13.875009536743164
    5. ',' → logprob: -14.000009536743164
    6. ')' → logprob: -15.500009536743164
    7. '   ' → logprob: -15.625009536743164
    8. '```' → logprob: -16.000009536743164
    9. 'self' → logprob: -16.125009536743164
    10. '-' → logprob: -16.125009536743164

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02841726876795292
    2. ',-' → logprob: -4.403417110443115
    3. ' ,' → logprob: -4.528417110443115
    4. ',self' → logprob: -5.403417110443115
    5. ',
' → logprob: -8.153417587280273
    6. 'self' → logprob: -9.903417587280273
    7. ' ,-' → logprob: -10.278417587280273
    8. ',(' → logprob: -10.778417587280273
    9. '(' → logprob: -11.028417587280273
    10. '",-' → logprob: -12.028417587280273

Token 301: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2354944348335266
    2. 'self' → logprob: -1.6104943752288818
    3. ' -' → logprob: -5.360494613647461
    4. ' self' → logprob: -5.485494613647461
    5. '-self' → logprob: -6.860494613647461
    6. '	self' → logprob: -10.485494613647461
    7. ' ' → logprob: -10.735494613647461
    8. '   ' → logprob: -10.985494613647461
    9. '<|end|>' → logprob: -11.110494613647461
    10. '-mod' → logprob: -11.485494613647461

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '
' → logprob: -16.6875
    4. '```' → logprob: -16.75
    5. '   ' → logprob: -16.9375
    6. '2' → logprob: -16.9375
    7. '{' → logprob: -17.875
    8. '<|end|>' → logprob: -17.9375
    9. '...' → logprob: -18.0
    10. '

' → logprob: -18.5

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005657382775098085
    2. ',self' → logprob: -5.255657196044922
    3. ' ,' → logprob: -7.880657196044922
    4. 'self' → logprob: -11.505657196044922
    5. ',
' → logprob: -11.630657196044922
    6. '1' → logprob: -11.630657196044922
    7. ',end' → logprob: -12.005657196044922
    8. ')' → logprob: -13.005657196044922
    9. ',module' → logprob: -13.630657196044922
    10. 'mod' → logprob: -14.130657196044922

Token 304: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009124171338044107
    2. ' self' → logprob: -7.000912189483643
    3. '       ' → logprob: -15.5009126663208
    4. '
' → logprob: -15.8759126663208
    5. '(self' → logprob: -16.000911712646484
    6. '=self' → logprob: -16.125911712646484
    7. '	self' → logprob: -16.375911712646484
    8. '*self' → logprob: -16.375911712646484
    9. '[self' → logprob: -16.500911712646484
    10. '   ' → logprob: -16.875911712646484

Token 305: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00046320082037709653
    2. '.MOD' → logprob: -8.000463485717773
    3. 'self' → logprob: -9.250463485717773
    4. ' MOD' → logprob: -10.625463485717773
    5. ')' → logprob: -13.125463485717773
    6. '_MOD' → logprob: -13.250463485717773
    7. 'Segment' → logprob: -13.375463485717773
    8. '   ' → logprob: -13.375463485717773
    9. '       ' → logprob: -16.000463485717773
    10. 'Mod' → logprob: -16.125463485717773

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.25
    4. 'Segment' → logprob: -17.25
    5. ')' → logprob: -17.375
    6. ',' → logprob: -18.0
    7. 'Tree' → logprob: -18.0
    8. '
' → logprob: -18.125
    9. '2' → logprob: -18.5625
    10. 'self' → logprob: -18.75

Token 307: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005934244254603982
    2. ')' → logprob: -7.625593662261963
    3. ' ))' → logprob: -9.250593185424805
    4. ',' → logprob: -12.375593185424805
    5. '   ' → logprob: -13.375593185424805
    6. ')))' → logprob: -14.250593185424805
    7. ')
' → logprob: -14.500593185424805
    8. ')%' → logprob: -14.625593185424805
    9. '    ' → logprob: -14.875593185424805
    10. '1' → logprob: -15.000593185424805

Token 308: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12979526817798615
    2. ' %' → logprob: -2.1297953128814697
    3. ')' → logprob: -5.879795074462891
    4. ')%' → logprob: -9.87979507446289
    5. ',' → logprob: -11.75479507446289
    6. '%c' → logprob: -13.25479507446289
    7. '%
' → logprob: -13.87979507446289
    8. '%)' → logprob: -14.00479507446289
    9. '%n' → logprob: -14.12979507446289
    10. '%,' → logprob: -14.37979507446289

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002483031013980508
    2. ' self' → logprob: -6.002482891082764
    3. 'Segment' → logprob: -12.377483367919922
    4. '(self' → logprob: -12.877483367919922
    5. 'Self' → logprob: -14.752483367919922
    6. '[self' → logprob: -16.502483367919922
    7. '<|end|>' → logprob: -17.252483367919922
    8. '	self' → logprob: -17.377483367919922
    9. ' ' → logprob: -17.627483367919922
    10. '```' → logprob: -17.877483367919922

Token 310: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3132762610912323
    2. '.MOD' → logprob: -1.3132762908935547
    3. ' MOD' → logprob: -11.938276290893555
    4. '_MOD' → logprob: -12.063276290893555
    5. '.' → logprob: -14.188276290893555
    6. '.M' → logprob: -14.438276290893555
    7. '.Mod' → logprob: -15.063276290893555
    8. 'self' → logprob: -15.438276290893555
    9. '.MODE' → logprob: -15.688276290893555
    10. ')' → logprob: -16.313276290893555

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'OD' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. 'MOD' → logprob: -15.500000953674316
    5. '2' → logprob: -16.625001907348633
    6. 'D' → logprob: -17.625001907348633
    7. 'F' → logprob: -17.750001907348633
    8. 'S' → logprob: -18.000001907348633
    9. 'C' → logprob: -18.125001907348633
    10. '+' → logprob: -18.125001907348633

Token 312: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0700184628367424
    2. '       ' → logprob: -3.4450185298919678
    3. ' ,' → logprob: -3.9450185298919678
    4. ',val' → logprob: -5.320018291473389
    5. ',
' → logprob: -5.820018291473389
    6. 'val' → logprob: -6.070018291473389
    7. ' val' → logprob: -6.195018291473389
    8. '
' → logprob: -6.445018291473389
    9. ' ' → logprob: -6.945018291473389
    10. '        
' → logprob: -8.070018768310547

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1921187937259674
    2. ',' → logprob: -2.4421188831329346
    3. 'val' → logprob: -3.4421188831329346
    4. '<|end|>' → logprob: -4.3171186447143555
    5. ' val' → logprob: -4.4421186447143555
    6. '        
' → logprob: -4.9421186447143555
    7. '
' → logprob: -5.5671186447143555
    8. ' ' → logprob: -5.5671186447143555
    9. ')' → logprob: -5.5671186447143555
    10. ',
' → logprob: -5.9421186447143555

Token 314: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10068698972463608
    2. 'val' (adapté à ' val') → logprob: -2.350687026977539
    3. '       ' → logprob: -7.850687026977539
    4. '
' → logprob: -9.975687026977539
    5. '	val' → logprob: -10.350687026977539
    6. '_val' → logprob: -12.975687026977539
    7. ' 
' → logprob: -13.100687026977539
    8. '        
' → logprob: -13.100687026977539
    9. '   ' → logprob: -13.850687026977539
    10. ' ' → logprob: -13.975687026977539

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -13.375004768371582
    3. '_' → logprob: -13.625004768371582
    4. ',' → logprob: -14.875004768371582
    5. ' ' → logprob: -15.000004768371582
    6. '_val' → logprob: -15.125004768371582
    7. '₂' → logprob: -15.375004768371582
    8. '=' → logprob: -15.500004768371582
    9. '(' → logprob: -16.000003814697266
    10. ' =' → logprob: -16.125003814697266

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715728435665369
    2. '=' → logprob: -5.006715774536133
    3. ',' → logprob: -15.256715774536133
    4. ' =(' → logprob: -16.756715774536133
    5. ' =
' → logprob: -17.756715774536133
    6. ' ' → logprob: -17.756715774536133
    7. ')' → logprob: -19.131715774536133
    8. ' ' → logprob: -19.506715774536133
    9. ' =)' → logprob: -20.381715774536133
    10. '   ' → logprob: -20.506715774536133

Token 317: ' (' (ID: 350)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.5975194573402405
    2. ' (' → logprob: -0.8475194573402405
    3. '(' → logprob: -3.8475193977355957
    4. '(op' → logprob: -12.722519874572754
    5. '(ans' → logprob: -13.222519874572754
    6. ' ' → logprob: -13.347519874572754
    7. '(or' → logprob: -13.722519874572754
    8. '(val' → logprob: -13.722519874572754
    9. '(org' → logprob: -13.847519874572754
    10. '(chr' → logprob: -13.972519874572754

Token 318: 'ord' (ID: 604)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -5.526570384972729e-05
    2. 'ord' → logprob: -10.250055313110352
    3. ' (' → logprob: -11.125055313110352
    4. '(' → logprob: -12.875055313110352
    5. ' ord' → logprob: -14.625055313110352
    6. '((' → logprob: -14.750055313110352
    7. '(chr' → logprob: -14.875055313110352
    8. '(op' → logprob: -15.125055313110352
    9. '(order' → logprob: -15.500055313110352
    10. '(or' → logprob: -16.00005531311035

Token 319: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00031294001382775605
    2. '(' → logprob: -8.125312805175781
    3. 'c' → logprob: -11.000312805175781
    4. '(
' → logprob: -15.750312805175781
    5. '('' → logprob: -16.50031280517578
    6. ')c' → logprob: -17.00031280517578
    7. ' (' → logprob: -17.37531280517578
    8. ')' → logprob: -19.37531280517578
    9. '(C' → logprob: -19.37531280517578
    10. '```' → logprob: -19.50031280517578

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18293756246566772
    2. ' *' → logprob: -2.4329376220703125
    3. '*' → logprob: -2.5579376220703125
    4. ''' → logprob: -6.5579376220703125
    5. ')*' → logprob: -8.557937622070312
    6. ' '' → logprob: -10.057937622070312
    7. ' )' → logprob: -10.182937622070312
    8. ' ' → logprob: -10.182937622070312
    9. '(c' → logprob: -10.307937622070312
    10. '')' → logprob: -10.557937622070312

Token 321: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023247340694069862
    2. '*' → logprob: -3.773247241973877
    3. ')' → logprob: -13.523247718811035
    4. '*(' → logprob: -15.523247718811035
    5. ' *
' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.27324676513672
    7. ',' → logprob: -16.89824676513672
    8. ')*' → logprob: -16.89824676513672
    9. '**' → logprob: -17.64824676513672
    10. '*
' → logprob: -18.02324676513672

Token 322: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006720705423504114
    2. ' (' → logprob: -5.006720542907715
    3. '(' → logprob: -12.631720542907715
    4. '(length' → logprob: -14.256720542907715
    5. '((' → logprob: -14.506720542907715
    6. 'self' → logprob: -14.756720542907715
    7. '(pow' → logprob: -15.631720542907715
    8. '(len' → logprob: -16.00672149658203
    9. '(this' → logprob: -16.50672149658203
    10. ' ' → logprob: -17.63172149658203

Token 323: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3869522213935852
    2. '(self' → logprob: -1.1369521617889404
    3. ' self' → logprob: -9.76195240020752
    4. ' (' → logprob: -11.38695240020752
    5. '[self' → logprob: -11.51195240020752
    6. '
' → logprob: -14.01195240020752
    7. '(
' → logprob: -14.88695240020752
    8. '(' → logprob: -15.01195240020752
    9. '	self' → logprob: -16.136951446533203
    10. '*self' → logprob: -16.136951446533203

Token 324: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.00035274302354082465
    2. 'pow' → logprob: -8.00035285949707
    3. 'BASE' → logprob: -11.50035285949707
    4. '(pow' → logprob: -13.00035285949707
    5. '.' → logprob: -13.75035285949707
    6. 'self' → logprob: -13.87535285949707
    7. 'A' → logprob: -14.75035285949707
    8. ' pow' → logprob: -15.00035285949707
    9. '**' → logprob: -15.00035285949707
    10. '.power' → logprob: -15.12535285949707

Token 325: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16528567671775818
    2. '[length' → logprob: -1.9152857065200806
    3. 'length' → logprob: -5.415285587310791
    4. '1' → logprob: -8.16528606414795
    5. '[' → logprob: -8.79028606414795
    6. '(length' → logprob: -9.16528606414795
    7. '```' → logprob: -10.66528606414795
    8. '[
' → logprob: -11.79028606414795
    9. '   ' → logprob: -12.16528606414795
    10. '.length' → logprob: -12.91528606414795

Token 326: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: 0.0
    2. 'length' → logprob: -18.375
    3. ',length' → logprob: -18.75
    4. '(length' → logprob: -18.75
    5. '[' → logprob: -20.0
    6. ':length' → logprob: -20.5
    7. '[
' → logprob: -21.125
    8. ')[' → logprob: -21.625
    9. ' [' → logprob: -21.75
    10. ')' → logprob: -22.0

Token 327: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00865014549344778
    2. '-' → logprob: -4.758650302886963
    3. ' ' → logprob: -11.133649826049805
    4. '[' → logprob: -11.633649826049805
    5. ')' → logprob: -11.758649826049805
    6. ']' → logprob: -12.758649826049805
    7. ']-' → logprob: -14.758649826049805
    8. ')-' → logprob: -15.133649826049805
    9. '[-' → logprob: -15.133649826049805
    10. ' ' → logprob: -16.133649826049805

Token 328: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10072169452905655
    2. '-' → logprob: -2.350721597671509
    3. '[' → logprob: -7.725721836090088
    4. ' ' → logprob: -9.72572135925293
    5. '[-' → logprob: -11.72572135925293
    6. ')' → logprob: -13.47572135925293
    7. ' [' → logprob: -13.60072135925293
    8. ')-' → logprob: -14.35072135925293
    9. ']' → logprob: -14.47572135925293
    10. ']-' → logprob: -14.60072135925293

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -19.250001907348633
    4. '
' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '```' → logprob: -20.250001907348633
    7. '۱' → logprob: -20.375001907348633
    8. '

' → logprob: -20.812501907348633
    9. 'val' → logprob: -21.000001907348633
    10. '[' → logprob: -21.187501907348633

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. ')*' → logprob: -9.750083923339844
    3. ' )' → logprob: -10.875083923339844
    4. '*' → logprob: -12.375083923339844
    5. ' *' → logprob: -13.375083923339844
    6. ',' → logprob: -16.375083923339844
    7. '   ' → logprob: -16.500083923339844
    8. 'def' → logprob: -17.000083923339844
    9. ')*(' → logprob: -17.250083923339844
    10. ']' → logprob: -17.375083923339844

Token 331: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002866804599761963
    2. '*' → logprob: -6.002866744995117
    3. ')' → logprob: -7.877866744995117
    4. ' ' → logprob: -11.627866744995117
    5. ' )' → logprob: -13.002866744995117
    6. ')*' → logprob: -14.752866744995117
    7. ' ' → logprob: -15.252866744995117
    8. ' *)' → logprob: -16.377866744995117
    9. '*)' → logprob: -16.877866744995117
    10. ' pow' → logprob: -17.127866744995117

Token 332: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.005233763717114925
    2. ' pow' → logprob: -5.2552337646484375
    3. '(pow' → logprob: -18.380233764648438
    4. 'power' → logprob: -20.505233764648438
    5. '   ' → logprob: -21.005233764648438
    6. '_pow' → logprob: -21.380233764648438
    7. '.pow' → logprob: -21.755233764648438
    8. 'p' → logprob: -22.130233764648438
    9. 'po' → logprob: -22.380233764648438
    10. 'Pow' → logprob: -22.630233764648438

Token 333: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -11.000027656555176
    3. 'self' → logprob: -11.500027656555176
    4. '(
' → logprob: -14.375027656555176
    5. '((' → logprob: -14.750027656555176
    6. '(Self' → logprob: -18.125028610229492
    7. ' (' → logprob: -18.250028610229492
    8. '(B' → logprob: -19.125028610229492
    9. '(this' → logprob: -19.375028610229492
    10. '[self' → logprob: -19.500028610229492

Token 334: '.BASE' (ID: 58017)
  Prédit: '(BASE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(BASE' → logprob: -0.19188758730888367
    2. 'BASE' → logprob: -1.816887617111206
    3. '.BASE' → logprob: -4.441887378692627
    4. 'self' → logprob: -8.316887855529785
    5. '
' → logprob: -11.316887855529785
    6. '[' → logprob: -11.441887855529785
    7. '(self' → logprob: -11.816887855529785
    8. ' BASE' → logprob: -12.316887855529785
    9. '(' → logprob: -12.566887855529785
    10. '{' → logprob: -12.691887855529785

Token 335: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008046258008107543
    2. ' -' → logprob: -7.125804424285889
    3. ' ' → logprob: -16.625804901123047
    4. '-
' → logprob: -18.125804901123047
    5. '[' → logprob: -18.375804901123047
    6. '−' → logprob: -18.500804901123047
    7. '
' → logprob: -18.750804901123047
    8. '1' → logprob: -18.750804901123047
    9. '–' → logprob: -19.250804901123047
    10. ',' → logprob: -19.375804901123047

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '-' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '2' → logprob: -14.50000286102295
    5. '   ' → logprob: -16.000001907348633
    6. '
' → logprob: -16.375001907348633
    7. '```' → logprob: -17.500001907348633
    8. ')' → logprob: -18.625001907348633
    9. '

' → logprob: -19.187501907348633
    10. ' -' → logprob: -19.375001907348633

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010616290383040905
    2. ' ,' → logprob: -6.87606143951416
    3. ',
' → logprob: -11.12606143951416
    4. ',-' → logprob: -11.75106143951416
    5. '           ' → logprob: -13.50106143951416
    6. '       ' → logprob: -13.75106143951416
    7. '   ' → logprob: -13.87606143951416
    8. '<|end|>' → logprob: -14.37606143951416
    9. ' ,-' → logprob: -15.00106143951416
    10. '-' → logprob: -15.00106143951416

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011047935113310814
    2. ' -' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.26104736328125
    4. '-in' → logprob: -17.51104736328125
    5. '   ' → logprob: -17.76104736328125
    6. '```' → logprob: -19.13604736328125
    7. '^{-' → logprob: -19.51104736328125
    8. '−' → logprob: -19.51104736328125
    9. '  ' → logprob: -19.88604736328125
    10. ' ' → logprob: -19.88604736328125

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. '2' → logprob: -10.250036239624023
    3. ' ' → logprob: -14.125036239624023
    4. '   ' → logprob: -15.375036239624023
    5. '
' → logprob: -15.750036239624023
    6. '```' → logprob: -16.562536239624023
    7. '

' → logprob: -16.937536239624023
    8. '           ' → logprob: -17.750036239624023
    9. '-' → logprob: -17.875036239624023
    10. '       ' → logprob: -18.062536239624023

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.052377623040229e-05
    2. ' ,' → logprob: -10.250070571899414
    3. ',self' → logprob: -10.375070571899414
    4. ',
' → logprob: -12.875070571899414
    5. 'self' → logprob: -14.375070571899414
    6. '<|end|>' → logprob: -15.500070571899414
    7. '```' → logprob: -15.625070571899414
    8. ')' → logprob: -15.750070571899414
    9. '),' → logprob: -16.500070571899414
    10. '2' → logprob: -17.375070571899414

Token 341: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008614926598966122
    2. ' self' → logprob: -4.758615016937256
    3. '(self' → logprob: -15.758614540100098
    4. '[self' → logprob: -16.633615493774414
    5. ' ' → logprob: -17.008615493774414
    6. '	self' → logprob: -17.258615493774414
    7. '
' → logprob: -17.883615493774414
    8. '   ' → logprob: -17.883615493774414
    9. '       ' → logprob: -18.133615493774414
    10. '2' → logprob: -18.133615493774414

Token 342: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00013536323967855424
    2. 'MOD' → logprob: -9.25013542175293
    3. 'self' → logprob: -10.75013542175293
    4. '_MOD' → logprob: -11.12513542175293
    5. '.MODE' → logprob: -14.12513542175293
    6. '
' → logprob: -14.25013542175293
    7. ' .' → logprob: -14.50013542175293
    8. '   ' → logprob: -14.62513542175293
    9. ',' → logprob: -15.62513542175293
    10. '.Mod' → logprob: -16.00013542175293

Token 343: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. '1' → logprob: -16.75
    6. '```' → logprob: -18.625
    7. '  ' → logprob: -19.25
    8. '

' → logprob: -19.375
    9. 'self' → logprob: -20.4375
    10. '9' → logprob: -20.4375

Token 344: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001649220648687333
    2. ')' → logprob: -9.375164985656738
    3. ' ))' → logprob: -9.625164985656738
    4. '       ' → logprob: -11.750164985656738
    5. '   ' → logprob: -12.250164985656738
    6. '    ' → logprob: -15.125164985656738
    7. '      ' → logprob: -15.250164985656738
    8. ')))' → logprob: -15.375164985656738
    9. '        ' → logprob: -16.000164031982422
    10. ' ' → logprob: -16.250164031982422

Token 345: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4019118547439575
    2. ' %' → logprob: -1.2769118547439575
    3. '%' → logprob: -3.026911735534668
    4. ')%' → logprob: -5.901911735534668
    5. ' )' → logprob: -7.151911735534668
    6. ' ' → logprob: -10.151911735534668
    7. ' %)' → logprob: -11.026911735534668
    8. '%)' → logprob: -11.401911735534668
    9. ' ' → logprob: -12.151911735534668
    10. '```' → logprob: -12.901911735534668

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006273718317970634
    2. ' self' → logprob: -7.375627517700195
    3. '(self' → logprob: -14.125627517700195
    4. '[self' → logprob: -16.875627517700195
    5. '   ' → logprob: -17.125627517700195
    6. '
' → logprob: -17.375627517700195
    7. '       ' → logprob: -17.500627517700195
    8. ' ' → logprob: -18.500627517700195
    9. '```' → logprob: -18.500627517700195
    10. '	self' → logprob: -18.750627517700195

Token 347: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.2700693607330322
    2. '_MOD' → logprob: -1.5200693607330322
    3. 'MOD' → logprob: -4.020069122314453
    4. ' MOD' → logprob: -11.770069122314453
    5. '.M' → logprob: -12.145069122314453
    6. '.Mod' → logprob: -12.145069122314453
    7. ' .' → logprob: -13.645069122314453
    8. '.' → logprob: -13.645069122314453
    9. '
' → logprob: -13.770069122314453
    10. '._' → logprob: -14.020069122314453

Token 348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '9' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.125001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. '
' → logprob: -16.875001907348633
    7. '1' → logprob: -17.000001907348633
    8. '

' → logprob: -18.375001907348633
    9. '  ' → logprob: -19.000001907348633
    10. '``' → logprob: -19.562501907348633

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1137748435139656
    2. ')' → logprob: -2.3637747764587402
    3. '<|end|>' → logprob: -4.98877477645874
    4. ',' → logprob: -6.11377477645874
    5. '
' → logprob: -6.36377477645874
    6. '	' → logprob: -7.36377477645874
    7. 'return' → logprob: -7.73877477645874
    8. ')
' → logprob: -7.98877477645874
    9. ' ' → logprob: -8.238775253295898
    10. '   ' → logprob: -8.363775253295898

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012320152018219233
    2. 'return' → logprob: -7.126232147216797
    3. ' return' → logprob: -8.626232147216797
    4. '
' → logprob: -9.626232147216797
    5. ',' → logprob: -9.876232147216797
    6. '<|end|>' → logprob: -9.876232147216797
    7. ')' → logprob: -10.001232147216797
    8. '   ' → logprob: -11.251232147216797
    9. '	return' → logprob: -12.251232147216797
    10. '	' → logprob: -12.251232147216797

Token 351: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014505110681056976
    2. '       ' → logprob: -4.264504909515381
    3. ' return' → logprob: -8.014505386352539
    4. '	return' → logprob: -12.514505386352539
    5. ')return' → logprob: -13.014505386352539
    6. ':return' → logprob: -13.639505386352539
    7. '   ' → logprob: -13.764505386352539
    8. ')' → logprob: -14.389505386352539
    9. '```' → logprob: -14.639505386352539
    10. '
' → logprob: -14.639505386352539

Token 352: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.003207776928320527
    2. ' (' → logprob: -5.753207683563232
    3. 'val' → logprob: -10.87820816040039
    4. '[val' → logprob: -11.75320816040039
    5. ' val' → logprob: -13.12820816040039
    6. '((' → logprob: -15.00320816040039
    7. '(hash' → logprob: -15.37820816040039
    8. '(ans' → logprob: -15.50320816040039
    9. '(' → logprob: -15.87820816040039
    10. '(value' → logprob: -16.12820816040039

Token 353: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.001507601235061884
    2. '(val' → logprob: -6.501507759094238
    3. ' val' → logprob: -12.376507759094238
    4. '[val' → logprob: -14.001507759094238
    5. ',val' → logprob: -16.126506805419922
    6. ' (' → logprob: -16.751506805419922
    7. '	val' → logprob: -17.001506805419922
    8. '
' → logprob: -17.626506805419922
    9. '   ' → logprob: -17.751506805419922
    10. '_val' → logprob: -18.001506805419922

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013139282818883657
    2. 'val' → logprob: -7.126314163208008
    3. '(val' → logprob: -8.376314163208008
    4. '(c' → logprob: -9.001314163208008
    5. '_val' → logprob: -9.626314163208008
    6. ',val' → logprob: -10.251314163208008
    7. '(' → logprob: -11.251314163208008
    8. ',' → logprob: -11.626314163208008
    9. ' val' → logprob: -12.001314163208008
    10. ',c' → logprob: -12.126314163208008

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01332587469369173
    2. ' ,' → logprob: -4.6383256912231445
    3. ',val' → logprob: -5.6383256912231445
    4. ',
' → logprob: -13.638325691223145
    5. 'val' → logprob: -13.888325691223145
    6. ' val' → logprob: -14.013325691223145
    7. '<<' → logprob: -14.263325691223145
    8. ' ,
' → logprob: -14.763325691223145
    9. ',value' → logprob: -15.513325691223145
    10. '[val' → logprob: -16.01332664489746

Token 356: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.006715370807796717
    2. ' val' → logprob: -5.006715297698975
    3. '(val' → logprob: -17.506715774536133
    4. '	val' → logprob: -18.131715774536133
    5. '_val' → logprob: -19.881715774536133
    6. ',val' → logprob: -20.006715774536133
    7. '[val' → logprob: -20.506715774536133
    8. '   ' → logprob: -20.756715774536133
    9. '       ' → logprob: -21.506715774536133
    10. '    ' → logprob: -22.381715774536133

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'val' → logprob: -18.25
    3. 'al' → logprob: -19.625
    4. '1' → logprob: -19.875
    5. ' ' → logprob: -20.5
    6. '_val' → logprob: -21.375
    7. '２' → logprob: -21.4375
    8. '۲' → logprob: -21.4375
    9. '   ' → logprob: -21.9375
    10. ')' → logprob: -22.0

Token 358: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -12.750004768371582
    3. ' )' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -14.000004768371582
    5. '       ' → logprob: -15.250004768371582
    6. ')
' → logprob: -15.250004768371582
    7. '),' → logprob: -16.8750057220459
    8. ')return' → logprob: -17.1250057220459
    9. ',' → logprob: -17.8750057220459
    10. '')' → logprob: -18.0000057220459

Token 359: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2569359242916107
    2. '   ' → logprob: -1.506935954093933
    3. ' def' → logprob: -5.506936073303223
    4. ')' → logprob: -7.131936073303223
    5. '	def' → logprob: -10.006936073303223
    6. '```' → logprob: -10.381936073303223
    7. ':' → logprob: -10.631936073303223
    8. '<|end|>' → logprob: -11.381936073303223
    9. ',' → logprob: -12.381936073303223
    10. ':def' → logprob: -12.381936073303223

Token 361: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.5577645301818848
    2. 'push' → logprob: -1.3077645301818848
    3. ' build' → logprob: -2.3077645301818848
    4. ' push' → logprob: -2.9327645301818848
    5. '_push' → logprob: -6.432764530181885
    6. '_build' → logprob: -6.432764530181885
    7. 'update' → logprob: -7.932764530181885
    8. 'apply' → logprob: -8.057764053344727
    9. 'merge' → logprob: -8.682764053344727
    10. 'combine' → logprob: -9.682764053344727

Token 362: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.25001049041748
    4. 'self' → logprob: -15.00001049041748
    5. '(
' → logprob: -15.00001049041748
    6. '(s' → logprob: -15.75001049041748
    7. '   ' → logprob: -16.000011444091797
    8. '(node' → logprob: -17.375011444091797
    9. ' ' → logprob: -18.000011444091797
    10. '(this' → logprob: -18.750011444091797

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019614976190496236
    2. 'self' → logprob: -9.00019645690918
    3. ' ,' → logprob: -9.62519645690918
    4. '(self' → logprob: -12.50019645690918
    5. '   ' → logprob: -14.12519645690918
    6. ',self' → logprob: -14.25019645690918
    7. '(' → logprob: -15.37519645690918
    8. ' self' → logprob: -15.37519645690918
    9. '0' → logprob: -15.50019645690918
    10. ' ' → logprob: -15.75019645690918

Token 364: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170225441455841
    2. ' l' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.251171112060547
    4. '	l' → logprob: -18.001171112060547
    5. 'self' → logprob: -18.251171112060547
    6. '(l' → logprob: -20.001171112060547
    7. '```' → logprob: -20.126171112060547
    8. 'left' → logprob: -20.376171112060547
    9. 'start' → logprob: -20.501171112060547
    10. ',l' → logprob: -20.751171112060547

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.180879816180095e-05
    2. ' ,' → logprob: -9.875051498413086
    3. ',
' → logprob: -15.875051498413086
    4. ',l' → logprob: -16.500051498413086
    5. ',int' → logprob: -17.250051498413086
    6. '<|end|>' → logprob: -17.250051498413086
    7. '‌,' → logprob: -18.125051498413086
    8. ',n' → logprob: -18.375051498413086
    9. '   ' → logprob: -19.000051498413086
    10. '<|end|>' → logprob: -19.125051498413086

Token 366: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003177952254191041
    2. ' r' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.628177642822266
    4. 'l' → logprob: -17.378177642822266
    5. '	r' → logprob: -17.503177642822266
    6. ' ' → logprob: -18.003177642822266
    7. '    ' → logprob: -18.128177642822266
    8. ',' → logprob: -19.253177642822266
    9. '  ' → logprob: -19.253177642822266
    10. ')' → logprob: -19.378177642822266

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006723540835082531
    2. '):
' → logprob: -5.006723403930664
    3. ')' → logprob: -12.506723403930664
    4. '):
' → logprob: -12.881723403930664
    5. ' ):' → logprob: -14.006723403930664
    6. ':' → logprob: -14.006723403930664
    7. '):

' → logprob: -15.881723403930664
    8. '   ' → logprob: -16.506723403930664
    9. '       ' → logprob: -18.006723403930664
    10. ')：' → logprob: -18.381723403930664

Token 368: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6176023483276367
    2. '       ' → logprob: -1.2426023483276367
    3. ' node' → logprob: -2.4926023483276367
    4. '   ' → logprob: -2.4926023483276367
    5. '	node' → logprob: -6.117602348327637
    6. 'if' → logprob: -6.242602348327637
    7. ' if' → logprob: -6.242602348327637
    8. ',node' → logprob: -7.742602348327637
    9. '_node' → logprob: -10.367602348327637
    10. 'token' → logprob: -10.492602348327637

Token 369: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.004084574058651924
    2. ' node' → logprob: -5.504084587097168
    3. 'if' → logprob: -12.504084587097168
    4. '   ' → logprob: -13.379084587097168
    5. '       ' → logprob: -14.754084587097168
    6. ' if' → logprob: -15.129084587097168
    7. '	node' → logprob: -15.504084587097168
    8. 'root' → logprob: -18.00408363342285
    9. 'Node' → logprob: -18.75408363342285
    10. '(node' → logprob: -19.12908363342285

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '=
' → logprob: -16.099077224731445
    4. ' ' → logprob: -17.349077224731445
    5. ' =
' → logprob: -17.474077224731445
    6. '＝' → logprob: -18.724077224731445
    7. '=}' → logprob: -19.474077224731445
    8. '   ' → logprob: -19.849077224731445
    9. ')' → logprob: -20.474077224731445
    10. '=

' → logprob: -20.474077224731445

Token 371: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0031777136027812958
    2. ' Segment' → logprob: -5.753177642822266
    3. 'Seg' → logprob: -22.253177642822266
    4. '_segment' → logprob: -22.378177642822266
    5. '   ' → logprob: -22.753177642822266
    6. 'Node' → logprob: -23.003177642822266
    7. '       ' → logprob: -23.253177642822266
    8. 'segment' → logprob: -23.753177642822266
    9. ' segment' → logprob: -24.503177642822266
    10. 'self' → logprob: -24.503177642822266

Token 372: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.704273118884885e-07
    2. 'Tre' → logprob: -14.375000953674316
    3. ' Tree' → logprob: -18.5
    4. 'T' → logprob: -18.875
    5. '<Tree' → logprob: -18.875
    6. 'tree' → logprob: -19.125
    7. '	Tree' → logprob: -19.375
    8. '(Tree' → logprob: -19.5
    9. '_tree' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 373: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'node' → logprob: -18.125
    3. '.Node' → logprob: -20.125
    4. '_node' → logprob: -20.375
    5. '	Node' → logprob: -20.5
    6. '(Node' → logprob: -20.625
    7. ' Node' → logprob: -20.75
    8. '_Node' → logprob: -21.0
    9. '<Node' → logprob: -21.25
    10. 'Nodo' → logprob: -21.75

Token 374: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. 'l' → logprob: -16.375003814697266
    4. '(
' → logprob: -17.375003814697266
    5. ' (' → logprob: -18.875003814697266
    6. ',l' → logprob: -20.125003814697266
    7. '	l' → logprob: -20.250003814697266
    8. '(L' → logprob: -20.625003814697266
    9. '[l' → logprob: -21.000003814697266
    10. '```' → logprob: -21.500003814697266

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006500058807432652
    2. ',r' → logprob: -7.500649929046631
    3. ' ,' → logprob: -9.250650405883789
    4. ',
' → logprob: -14.750650405883789
    5. '   ' → logprob: -16.12565040588379
    6. 'r' → logprob: -16.12565040588379
    7. ',n' → logprob: -16.37565040588379
    8. '<|end|>' → logprob: -16.37565040588379
    9. ',b' → logprob: -17.75065040588379
    10. '‌,' → logprob: -17.75065040588379

Token 376: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. '	r' → logprob: -20.500261306762695
    4. '   ' → logprob: -22.250261306762695
    5. '[r' → logprob: -22.500261306762695
    6. '_r' → logprob: -22.750261306762695
    7. '<|end|>' → logprob: -23.125261306762695
    8. ' ' → logprob: -23.625261306762695
    9. '       ' → logprob: -23.750261306762695
    10. ',r' → logprob: -24.125261306762695

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16025732457637787
    2. ')
' → logprob: -1.910257339477539
    3. ')
' → logprob: -10.535257339477539
    4. '       ' → logprob: -12.535257339477539
    5. '   ' → logprob: -13.035257339477539
    6. ')

' → logprob: -15.285257339477539
    7. ' )' → logprob: -16.03525733947754
    8. ')return' → logprob: -16.53525733947754
    9. '),' → logprob: -16.78525733947754
    10. ' )
' → logprob: -16.91025733947754

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38185253739356995
    2. 'if' → logprob: -1.6318525075912476
    3. ' if' → logprob: -2.131852626800537
    4. '   ' → logprob: -5.756852626800537
    5. ')' → logprob: -11.256852149963379
    6. '```' → logprob: -11.381852149963379
    7. '	if' → logprob: -11.506852149963379
    8. ' ' → logprob: -12.006852149963379
    9. '<|end|>' → logprob: -12.381852149963379
    10. '           ' → logprob: -12.631852149963379

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00023131117632146925
    2. ' if' → logprob: -8.500231742858887
    3. '       ' → logprob: -10.500231742858887
    4. '   ' → logprob: -15.375231742858887
    5. 'If' → logprob: -17.37523078918457
    6. '```' → logprob: -18.25023078918457
    7. '	if' → logprob: -18.37523078918457
    8. ';if' → logprob: -20.75023078918457
    9. ' ' → logprob: -21.12523078918457
    10. '           ' → logprob: -21.75023078918457

Token 380: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.061969365924596786
    2. 'l' → logprob: -2.81196928024292
    3. '	l' → logprob: -13.436969757080078
    4. '   ' → logprob: -16.311969757080078
    5. ' ' → logprob: -17.061969757080078
    6. ' л' → logprob: -17.061969757080078
    7. '_l' → logprob: -17.561969757080078
    8. ' ' → logprob: -17.561969757080078
    9. '(l' → logprob: -18.436969757080078
    10. '    ' → logprob: -18.686969757080078

Token 381: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.52353435754776
    2. ' ==' → logprob: -0.89853435754776
    3. '<=' → logprob: -8.773534774780273
    4. '=' → logprob: -8.898534774780273
    5. ' <=' → logprob: -9.898534774780273
    6. ' >' → logprob: -10.148534774780273
    7. '>' → logprob: -11.398534774780273
    8. '==
' → logprob: -11.898534774780273
    9. '===' → logprob: -12.273534774780273
    10. ' =' → logprob: -13.148534774780273

Token 382: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001234428636962548
    2. ' r' → logprob: -9.000123023986816
    3. '	r' → logprob: -18.500123977661133
    4. '   ' → logprob: -20.125123977661133
    5. '=r' → logprob: -20.500123977661133
    6. ' ' → logprob: -21.750123977661133
    7. '_r' → logprob: -21.875123977661133
    8. '(r' → logprob: -22.750123977661133
    9. '
' → logprob: -22.875123977661133
    10. ',r' → logprob: -23.625123977661133

Token 383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07010560482740402
    2. ':' → logprob: -2.69510555267334
    3. '):
' → logprob: -9.19510555267334
    4. '       ' → logprob: -10.32010555267334
    5. ':
' → logprob: -11.82010555267334
    6. '<|end|>' → logprob: -11.82010555267334
    7. ',' → logprob: -12.32010555267334
    8. '
' → logprob: -12.57010555267334
    9. ':

' → logprob: -12.94510555267334
    10. ' :
' → logprob: -13.07010555267334

Token 384: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26509496569633484
    2. '           ' → logprob: -1.5150949954986572
    3. ',' → logprob: -4.640094757080078
    4. ':
' → logprob: -6.890094757080078
    5. 'node' → logprob: -7.515094757080078
    6. ':' → logprob: -8.140094757080078
    7. '):
' → logprob: -8.140094757080078
    8. ')' → logprob: -8.390094757080078
    9. '<|end|>' → logprob: -8.640094757080078
    10. '        
' → logprob: -8.765094757080078

Token 385: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.6865106821060181
    2. 'node' → logprob: -1.186510682106018
    3. 'c' → logprob: -2.0615105628967285
    4. '           ' → logprob: -3.3115105628967285
    5. ' val' → logprob: -5.0615105628967285
    6. 'v' → logprob: -5.1865105628967285
    7. ' node' → logprob: -5.3115105628967285
    8. 'ch' → logprob: -5.5615105628967285
    9. ' c' → logprob: -5.6865105628967285
    10. 'char' → logprob: -6.0615105628967285

Token 386: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4770740568637848
    2. ' =' → logprob: -0.9770740270614624
    3. '=' → logprob: -6.352074146270752
    4. '_val' → logprob: -7.102074146270752
    5. '_char' → logprob: -8.977073669433594
    6. 'val' → logprob: -9.477073669433594
    7. '_ord' → logprob: -10.727073669433594
    8. '=(' → logprob: -10.727073669433594
    9. 'char' → logprob: -10.977073669433594
    10. 's' → logprob: -10.977073669433594

Token 387: ' ord' (ID: 6608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6919056177139282
    2. '(self' → logprob: -1.0669056177139282
    3. '(ord' → logprob: -2.3169054985046387
    4. ' (' → logprob: -3.9419054985046387
    5. ' self' → logprob: -4.191905498504639
    6. 'ord' → logprob: -4.441905498504639
    7. '(' → logprob: -5.191905498504639
    8. ' ord' → logprob: -5.566905498504639
    9. '(
' → logprob: -7.316905498504639
    10. '   ' → logprob: -8.816905975341797

Token 388: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -9.875051498413086
    3. 'self' → logprob: -15.000051498413086
    4. '(
' → logprob: -16.125051498413086
    5. ' (' → logprob: -17.625051498413086
    6. '(s' → logprob: -18.625051498413086
    7. '((' → logprob: -18.750051498413086
    8. '('' → logprob: -18.875051498413086
    9. ')(' → logprob: -19.125051498413086
    10. '```' → logprob: -19.125051498413086

Token 389: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.02107301540672779
    2. 'self' → logprob: -4.021072864532471
    3. '(self' → logprob: -6.021072864532471
    4. 's' → logprob: -8.146073341369629
    5. '(s' → logprob: -8.771073341369629
    6. ' self' → logprob: -10.521073341369629
    7. '.self' → logprob: -11.896073341369629
    8. ')' → logprob: -12.896073341369629
    9. ' .' → logprob: -13.521073341369629
    10. '(' → logprob: -13.521073341369629

Token 390: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.4915580749511719
    2. '[self' → logprob: -0.9915580749511719
    3. '[node' → logprob: -4.241558074951172
    4. '[val' → logprob: -6.991558074951172
    5. '(self' → logprob: -7.241558074951172
    6. '[s' → logprob: -7.616558074951172
    7. '[' → logprob: -8.116558074951172
    8. ')[' → logprob: -8.991558074951172
    9. '(l' → logprob: -9.116558074951172
    10. 'self' → logprob: -9.491558074951172

Token 391: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018732991069555283
    2. ')
' → logprob: -4.768733024597168
    3. ' )' → logprob: -4.893733024597168
    4. '())' → logprob: -7.018733024597168
    5. '),' → logprob: -8.018733024597168
    6. ' )
' → logprob: -8.143733024597168
    7. '('' → logprob: -8.393733024597168
    8. '')' → logprob: -8.518733024597168
    9. '       ' → logprob: -8.768733024597168
    10. '[' → logprob: -9.393733024597168

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8055962324142456
    2. ',' → logprob: -1.3055962324142456
    3. '
' → logprob: -1.3055962324142456
    4. '       ' → logprob: -5.555596351623535
    5. ' ,' → logprob: -5.930596351623535
    6. 'val' → logprob: -6.680596351623535
    7. ',node' → logprob: -7.055596351623535
    8. '            
' → logprob: -7.805596351623535
    9. '(node' → logprob: -8.055596351623535
    10. 'node' → logprob: -8.305596351623535

Token 393: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.005448378622531891
    2. ' node' → logprob: -6.130448341369629
    3. 'val' → logprob: -6.380448341369629
    4. '           ' → logprob: -6.505448341369629
    5. '       ' → logprob: -11.130448341369629
    6. 'return' → logprob: -11.380448341369629
    7. '(node' → logprob: -11.380448341369629
    8. 'hash' → logprob: -11.505448341369629
    9. '
' → logprob: -11.630448341369629
    10. 'v' → logprob: -12.630448341369629

Token 394: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -7.3458322731312364e-06
    2. ' .' → logprob: -12.750007629394531
    3. '.' → logprob: -13.250007629394531
    4. '.s' → logprob: -13.750007629394531
    5. '.val' → logprob: -15.000007629394531
    6. '.heap' → logprob: -15.375007629394531
    7. '.Hash' → logprob: -16.12500762939453
    8. '.has' → logprob: -16.25000762939453
    9. '.har' → logprob: -16.37500762939453
    10. '.token' → logprob: -17.00000762939453

Token 395: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.8889261304575484e-06
    2. 'val' → logprob: -13.250003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_va' → logprob: -15.375003814697266
    5. '1' → logprob: -15.500003814697266
    6. '_node' → logprob: -15.875003814697266
    7. '_v' → logprob: -16.250003814697266
    8. '=_' → logprob: -16.750003814697266
    9. '_value' → logprob: -16.750003814697266
    10. ' _' → logprob: -16.750003814697266

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132634460926056
    2. '=' → logprob: -1.3132634162902832
    3. ' =(' → logprob: -13.688263893127441
    4. '=(' → logprob: -14.938263893127441
    5. '<|end|>' → logprob: -16.563262939453125
    6. ')' → logprob: -16.688262939453125
    7. ',' → logprob: -16.938262939453125
    8. '＝' → logprob: -17.188262939453125
    9. ' ' → logprob: -17.313262939453125
    10. ')=' → logprob: -17.938262939453125

Token 397: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.038594476878643036
    2. '((' → logprob: -3.2885944843292236
    3. ' (' → logprob: -8.038594245910645
    4. '(ord' → logprob: -8.538594245910645
    5. 'val' → logprob: -11.288594245910645
    6. ' ((' → logprob: -11.663594245910645
    7. '(
' → logprob: -12.788594245910645
    8. '(' → logprob: -13.163594245910645
    9. '(value' → logprob: -13.288594245910645
    10. '   ' → logprob: -13.788594245910645

Token 398: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -9.150362166110426e-05
    2. '(val' → logprob: -9.375091552734375
    3. ' val' → logprob: -12.000091552734375
    4. '
' → logprob: -16.000091552734375
    5. '   ' → logprob: -16.125091552734375
    6. ' (' → logprob: -16.625091552734375
    7. '	val' → logprob: -17.250091552734375
    8. '[val' → logprob: -17.250091552734375
    9. ',val' → logprob: -17.500091552734375
    10. '(' → logprob: -18.000091552734375

Token 399: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016513699665665627
    2. ' ,' → logprob: -4.641513824462891
    3. ',val' → logprob: -5.016513824462891
    4. 'val' → logprob: -9.51651382446289
    5. ',node' → logprob: -10.89151382446289
    6. '[val' → logprob: -12.14151382446289
    7. ',
' → logprob: -12.76651382446289
    8. ' val' → logprob: -12.89151382446289
    9. '
' → logprob: -13.01651382446289
    10. '%' → logprob: -14.89151382446289

Token 400: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004125575942452997
    2. ' self' → logprob: -8.500412940979004
    3. 'Segment' → logprob: -8.500412940979004
    4. '(self' → logprob: -12.250412940979004
    5. '
' → logprob: -15.000412940979004
    6. 'Self' → logprob: -15.875412940979004
    7. ' Segment' → logprob: -16.375411987304688
    8. '=self' → logprob: -16.750411987304688
    9. 'Seg' → logprob: -16.750411987304688
    10. '	self' → logprob: -16.875411987304688

Token 401: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6931681632995605
    2. '.MOD' → logprob: -0.6931681632995605
    3. '_MOD' → logprob: -11.568168640136719
    4. '
' → logprob: -12.568168640136719
    5. ' MOD' → logprob: -13.318168640136719
    6. 'self' → logprob: -13.318168640136719
    7. '.Mod' → logprob: -13.568168640136719
    8. '.MODE' → logprob: -13.943168640136719
    9. '1' → logprob: -14.193168640136719
    10. '```' → logprob: -14.818168640136719

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -16.75
    4. ',' → logprob: -17.0625
    5. '2' → logprob: -17.4375
    6. '
' → logprob: -18.0625
    7. '<|end|>' → logprob: -18.8125
    8. 'self' → logprob: -18.875
    9. '   ' → logprob: -19.0625
    10. '```' → logprob: -19.5

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002878222381696105
    2. ' ,' → logprob: -6.002878189086914
    3. ',
' → logprob: -8.252878189086914
    4. ',val' → logprob: -8.877878189086914
    5. ' ,
' → logprob: -13.377878189086914
    6. ',node' → logprob: -14.377878189086914
    7. 'val' → logprob: -16.252878189086914
    8. ',

' → logprob: -16.502878189086914
    9. ',\
' → logprob: -16.502878189086914
    10. '‌,' → logprob: -17.252878189086914

Token 404: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04858771339058876
    2. ' val' → logprob: -3.0485877990722656
    3. '(val' → logprob: -15.798587799072266
    4. '	val' → logprob: -17.298587799072266
    5. '[val' → logprob: -17.298587799072266
    6. 'v' → logprob: -19.298587799072266
    7. ',val' → logprob: -19.548587799072266
    8. '_val' → logprob: -19.798587799072266
    9. '   ' → logprob: -19.923587799072266
    10. ' ' → logprob: -19.923587799072266

Token 405: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759431719779968
    2. '%' → logprob: -0.8259431719779968
    3. ' ' → logprob: -13.325942993164062
    4. '<|end|>' → logprob: -13.700942993164062
    5. ' ' → logprob: -14.450942993164062
    6. '<|end|>' → logprob: -15.450942993164062
    7. ')' → logprob: -15.950942993164062
    8. '%
' → logprob: -17.075942993164062
    9. ',' → logprob: -17.200942993164062
    10. '%B' → logprob: -18.700942993164062

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048289015889168
    2. ' self' → logprob: -4.511048316955566
    3. '(self' → logprob: -15.011048316955566
    4. '
' → logprob: -16.38604736328125
    5. ' ' → logprob: -17.13604736328125
    6. '	self' → logprob: -17.38604736328125
    7. '[self' → logprob: -17.76104736328125
    8. '       ' → logprob: -18.26104736328125
    9. '   ' → logprob: -18.51104736328125
    10. '           ' → logprob: -19.01104736328125

Token 407: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.008961634710431099
    2. 'MOD' → logprob: -4.7589616775512695
    3. 'self' → logprob: -8.00896167755127
    4. '.MODE' → logprob: -11.88396167755127
    5. '.M' → logprob: -12.25896167755127
    6. '_MOD' → logprob: -13.25896167755127
    7. '.Mod' → logprob: -14.38396167755127
    8. '.S' → logprob: -15.63396167755127
    9. ' MOD' → logprob: -16.258960723876953
    10. ' self' → logprob: -16.508960723876953

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.588793960167095e-05
    2. '1' → logprob: -9.500076293945312
    3. '7' → logprob: -14.750076293945312
    4. ' ' → logprob: -15.750076293945312
    5. '9' → logprob: -16.000076293945312
    6. '   ' → logprob: -16.000076293945312
    7. '
' → logprob: -16.250076293945312
    8. '```' → logprob: -17.000076293945312
    9. '{' → logprob: -18.875076293945312
    10. '0' → logprob: -19.000076293945312

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032391478307545185
    2. ')
' → logprob: -5.753239154815674
    3. '       ' → logprob: -9.753238677978516
    4. ' )' → logprob: -13.128238677978516
    5. ')return' → logprob: -14.378238677978516
    6. '   ' → logprob: -15.003238677978516
    7. ')
' → logprob: -16.003238677978516
    8. '           ' → logprob: -16.253238677978516
    9. ')

' → logprob: -16.503238677978516
    10. ' )
' → logprob: -17.503238677978516

Token 410: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22623105347156525
    2. '           ' → logprob: -1.6012310981750488
    3. 'return' → logprob: -7.476231098175049
    4. 'else' → logprob: -8.60123062133789
    5. '   ' → logprob: -10.72623062133789
    6. ' else' → logprob: -10.85123062133789
    7. ' return' → logprob: -11.35123062133789
    8. '```' → logprob: -11.60123062133789
    9. 'elif' → logprob: -13.35123062133789
    10. ',' → logprob: -14.35123062133789

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4131506085395813
    2. '           ' → logprob: -1.6631505489349365
    3. '       ' → logprob: -1.9131505489349365
    4. ' return' → logprob: -6.788150787353516
    5. 'else' → logprob: -9.413150787353516
    6. '   ' → logprob: -9.663150787353516
    7. '	return' → logprob: -12.413150787353516
    8. '
' → logprob: -13.913150787353516
    9. '		' → logprob: -14.038150787353516
    10. '```' → logprob: -14.288150787353516

Token 412: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.011047814972698689
    2. ' node' → logprob: -4.511047840118408
    3. '	node' → logprob: -18.63604736328125
    4. 'nod' → logprob: -19.01104736328125
    5. '(node' → logprob: -19.38604736328125
    6. 'Node' → logprob: -20.88604736328125
    7. 'n' → logprob: -21.13604736328125
    8. '[node' → logprob: -21.51104736328125
    9. '_node' → logprob: -21.51104736328125
    10. 'token' → logprob: -22.13604736328125

Token 413: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045486391172744334
    2. '
' → logprob: -8.875454902648926
    3. '   ' → logprob: -9.250454902648926
    4. '<|end|>' → logprob: -9.250454902648926
    5. '```' → logprob: -10.500454902648926
    6. '	' → logprob: -11.125454902648926
    7. '​' → logprob: -11.125454902648926
    8. 'return' → logprob: -11.625454902648926
    9. 'else' → logprob: -11.875454902648926
    10. 'if' → logprob: -12.000454902648926

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003758575767278671
    2. '   ' → logprob: -8.625375747680664
    3. '<|end|>' → logprob: -9.000375747680664
    4. '
' → logprob: -10.875375747680664
    5. '```' → logprob: -11.250375747680664
    6. '	' → logprob: -11.625375747680664
    7. '        
' → logprob: -12.125375747680664
    8. '	   ' → logprob: -12.625375747680664
    9. '​' → logprob: -12.875375747680664
    10. '    
' → logprob: -13.000375747680664

Token 415: ' m' (ID: 284)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03628893941640854
    2. ' mid' → logprob: -3.5362889766693115
    3. 'm' (adapté à ' m') → logprob: -5.286288738250732
    4. '       ' → logprob: -6.536288738250732
    5. ' m' → logprob: -12.53628921508789
    6. '   ' → logprob: -13.16128921508789
    7. '	m' → logprob: -15.16128921508789
    8. 'middle' → logprob: -15.28628921508789
    9. '        
' → logprob: -15.28628921508789
    10. '
' → logprob: -15.78628921508789

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14304666221141815
    2. '=' → logprob: -2.0180466175079346
    3. 'iddle' → logprob: -8.143046379089355
    4. 'id' → logprob: -9.893046379089355
    5. '=int' → logprob: -11.893046379089355
    6. '=id' → logprob: -11.893046379089355
    7. '=a' → logprob: -12.893046379089355
    8. '=(' → logprob: -13.143046379089355
    9. '=f' → logprob: -13.518046379089355
    10. '=m' → logprob: -13.893046379089355

Token 417: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.005234002135694027
    2. ' (' → logprob: -5.2552337646484375
    3. '(L' → logprob: -15.505233764648438
    4. '(self' → logprob: -17.755233764648438
    5. '
' → logprob: -17.880233764648438
    6. '(r' → logprob: -17.880233764648438
    7. '   ' → logprob: -18.005233764648438
    8. '(' → logprob: -18.380233764648438
    9. 'l' → logprob: -18.630233764648438
    10. '(left' → logprob: -19.255233764648438

Token 418: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2664456789934775e-06
    2. ' l' → logprob: -13.625000953674316
    3. '	l' → logprob: -19.250001907348633
    4. 'node' → logprob: -19.625001907348633
    5. '(l' → logprob: -20.125001907348633
    6. 'r' → logprob: -20.625001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '_l' → logprob: -21.375001907348633
    9. '[l' → logprob: -21.750001907348633
    10. '$l' → logprob: -21.875001907348633

Token 419: '+r' (ID: 133712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3306807279586792
    2. '+l' → logprob: -1.5806807279586792
    3. '+' → logprob: -2.5806808471679688
    4. '+r' → logprob: -12.205680847167969
    5. 'l' → logprob: -13.455680847167969
    6. '+m' → logprob: -14.705680847167969
    7. '+n' → logprob: -15.205680847167969
    8. '+
' → logprob: -15.455680847167969
    9. '+s' → logprob: -15.705680847167969
    10. ' +
' → logprob: -15.705680847167969

Token 420: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014852936379611492
    2. ')>>' → logprob: -4.639853000640869
    3. ')//' → logprob: -5.514853000640869
    4. '+' → logprob: -7.639853000640869
    5. ' )' → logprob: -7.889853000640869
    6. '>>' → logprob: -8.764852523803711
    7. ' +' → logprob: -10.389852523803711
    8. ' >>' → logprob: -11.264852523803711
    9. ')
' → logprob: -14.639852523803711
    10. ' ' → logprob: -15.014852523803711

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۲' → logprob: -18.75001335144043
    4. '２' → logprob: -19.75001335144043
    5. '   ' → logprob: -19.87501335144043
    6. '२' → logprob: -20.25001335144043
    7. '```' → logprob: -21.12501335144043
    8. '٢' → logprob: -21.25001335144043
    9. '২' → logprob: -21.37501335144043
    10. '22' → logprob: -21.75001335144043

Token 422: '
' (ID: 198)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07841948419809341
    2. ' node' → logprob: -2.7034194469451904
    3. '       ' → logprob: -4.8284196853637695
    4. '	node' → logprob: -8.45341968536377
    5. '[node' → logprob: -9.45341968536377
    6. '
' → logprob: -9.82841968536377
    7. ',node' → logprob: -9.82841968536377
    8. '(node' → logprob: -10.82841968536377
    9. '=node' → logprob: -11.82841968536377
    10. '   ' → logprob: -11.95341968536377

Token 423: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.12728442251682281
    2. '       ' → logprob: -2.377284526824951
    3. ' node' → logprob: -3.627284526824951
    4. '   ' → logprob: -9.752284049987793
    5. '	node' → logprob: -10.127284049987793
    6. '[node' → logprob: -11.627284049987793
    7. ',node' → logprob: -11.877284049987793
    8. '(node' → logprob: -12.502284049987793
    9. '```' → logprob: -12.627284049987793
    10. '
' → logprob: -13.002284049987793

Token 424: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0004350797680672258
    2. ' node' → logprob: -7.750434875488281
    3. '       ' → logprob: -12.375434875488281
    4. '	node' → logprob: -16.50043487548828
    5. '[node' → logprob: -17.75043487548828
    6. '(node' → logprob: -17.87543487548828
    7. '
' → logprob: -18.25043487548828
    8. '   ' → logprob: -18.25043487548828
    9. ',node' → logprob: -18.50043487548828
    10. 'left' → logprob: -18.62543487548828

Token 425: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.778209353797138e-05
    2. '.' → logprob: -9.625067710876465
    3. ' .' → logprob: -13.500067710876465
    4. '.right' → logprob: -15.625067710876465
    5. 'left' → logprob: -16.37506866455078
    6. '.l' → logprob: -16.75006866455078
    7. '.Left' → logprob: -17.75006866455078
    8. '.le' → logprob: -17.87506866455078
    9. ').' → logprob: -19.75006866455078
    10. '.has' → logprob: -20.00006866455078

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022412478923798
    2. ' =' → logprob: -1.9102240800857544
    3. '=node' → logprob: -17.41022491455078
    4. '=self' → logprob: -17.91022491455078
    5. '＝' → logprob: -18.91022491455078
    6. ',' → logprob: -19.16022491455078
    7. '.=' → logprob: -20.16022491455078
    8. '=create' → logprob: -20.28522491455078
    9. '=}' → logprob: -21.53522491455078
    10. '=

' → logprob: -21.53522491455078

Token 427: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019286326132714748
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -18.626928329467773
    4. '=self' → logprob: -19.001928329467773
    5. '[self' → logprob: -19.001928329467773
    6. '	self' → logprob: -19.501928329467773
    7. ' ' → logprob: -19.751928329467773
    8. '       ' → logprob: -20.001928329467773
    9. 'segment' → logprob: -20.001928329467773
    10. 'Segment' → logprob: -20.251928329467773

Token 428: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.00037251986213959754
    2. 'build' → logprob: -8.000372886657715
    3. '.' → logprob: -10.250372886657715
    4. ' .' → logprob: -13.875372886657715
    5. ' build' → logprob: -14.125372886657715
    6. '	build' → logprob: -16.5003719329834
    7. '.b' → logprob: -18.3753719329834
    8. '.create' → logprob: -19.0003719329834
    9. 'uild' → logprob: -19.3753719329834
    10. '_build' → logprob: -19.6253719329834

Token 429: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. '(m' → logprob: -15.750027656555176
    4. '(node' → logprob: -16.750028610229492
    5. 'l' → logprob: -17.250028610229492
    6. '(
' → logprob: -18.375028610229492
    7. '(L' → logprob: -18.875028610229492
    8. ',l' → logprob: -18.875028610229492
    9. ' l' → logprob: -19.000028610229492
    10. '	l' → logprob: -19.375028610229492

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025420128367841244
    2. ',m' → logprob: -6.002542018890381
    3. ' ,' → logprob: -9.627541542053223
    4. 'm' → logprob: -15.127541542053223
    5. ' ' → logprob: -17.12754249572754
    6. ',
' → logprob: -18.00254249572754
    7. ' m' → logprob: -18.00254249572754
    8. '	' → logprob: -18.12754249572754
    9. '‌,' → logprob: -18.25254249572754
    10. ',module' → logprob: -18.37754249572754

Token 431: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.836499985889532e-05
    2. ' m' → logprob: -9.7500581741333
    3. '	m' → logprob: -17.000059127807617
    4. ',m' → logprob: -19.625059127807617
    5. '[m' → logprob: -20.000059127807617
    6. ')m' → logprob: -20.375059127807617
    7. '<m' → logprob: -20.500059127807617
    8. '_m' → logprob: -21.000059127807617
    9. ' м' → logprob: -21.375059127807617
    10. 'м' → logprob: -21.875059127807617

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002570664044469595
    2. ')
' → logprob: -6.002570629119873
    3. ',' → logprob: -9.377571105957031
    4. ' )' → logprob: -11.627571105957031
    5. ')
' → logprob: -14.627571105957031
    6. '),' → logprob: -15.252571105957031
    7. ' )
' → logprob: -15.377571105957031
    8. '   ' → logprob: -15.877571105957031
    9. ',)' → logprob: -16.25257110595703
    10. '       ' → logprob: -16.62757110595703

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4251502454280853
    2. 'node' → logprob: -1.1751502752304077
    3. ' node' → logprob: -3.300150156021118
    4. '   ' → logprob: -7.675150394439697
    5. ',node' → logprob: -9.675149917602539
    6. '
' → logprob: -10.050149917602539
    7. '	node' → logprob: -10.175149917602539
    8. '[node' → logprob: -10.300149917602539
    9. ' ' → logprob: -11.175149917602539
    10. '```' → logprob: -12.050149917602539

Token 434: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.009293925948441029
    2. ' node' → logprob: -5.259294033050537
    3. '       ' → logprob: -5.509294033050537
    4. '   ' → logprob: -13.259293556213379
    5. '	node' → logprob: -14.009293556213379
    6. ' ' → logprob: -16.259294509887695
    7. ',node' → logprob: -17.134294509887695
    8. '[node' → logprob: -17.259294509887695
    9. '(node' → logprob: -17.384294509887695
    10. '```' → logprob: -18.009294509887695

Token 435: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -11.750011444091797
    3. ' .' → logprob: -13.250011444091797
    4. '.left' → logprob: -14.250011444091797
    5. 'right' → logprob: -15.000011444091797
    6. '.r' → logprob: -15.000011444091797
    7. '>.' → logprob: -16.625011444091797
    8. ').' → logprob: -16.875011444091797
    9. '	right' → logprob: -18.000011444091797
    10. '.Right' → logprob: -18.375011444091797

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. '=node' → logprob: -15.850207328796387
    4. ' ' → logprob: -15.975207328796387
    5. ')' → logprob: -17.60020637512207
    6. '   ' → logprob: -18.22520637512207
    7. ' =)' → logprob: -18.97520637512207
    8. ',' → logprob: -19.22520637512207
    9. ' =
' → logprob: -19.85020637512207
    10. '    ' → logprob: -19.97520637512207

Token 437: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246875032782555
    2. ' self' → logprob: -3.7732467651367188
    3. '(self' → logprob: -13.523246765136719
    4. '       ' → logprob: -16.89824676513672
    5. '	self' → logprob: -17.14824676513672
    6. '[self' → logprob: -17.89824676513672
    7. '=self' → logprob: -18.14824676513672
    8. ' ' → logprob: -18.27324676513672
    9. '   ' → logprob: -18.77324676513672
    10. '           ' → logprob: -20.27324676513672

Token 438: '.build' (ID: 20924)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.5759913921356201
    2. '.build' → logprob: -0.8259913921356201
    3. ' build' → logprob: -10.4509916305542
    4. '.' → logprob: -10.8259916305542
    5. '	build' → logprob: -13.3259916305542
    6. ' .' → logprob: -14.0759916305542
    7. '   ' → logprob: -15.5759916305542
    8. 'left' → logprob: -16.075990676879883
    9. '(build' → logprob: -16.200990676879883
    10. ' ' → logprob: -16.325990676879883

Token 439: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.953082341467962e-05
    2. '(l' → logprob: -10.500039100646973
    3. 'm' → logprob: -12.000039100646973
    4. '(node' → logprob: -12.500039100646973
    5. '(r' → logprob: -13.500039100646973
    6. '(' → logprob: -14.500039100646973
    7. 'node' → logprob: -16.62504005432129
    8. '((' → logprob: -17.25004005432129
    9. '(n' → logprob: -17.87504005432129
    10. '(self' → logprob: -18.00004005432129

Token 440: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007236333331093192
    2. ' +' → logprob: -7.250723838806152
    3. '+r' → logprob: -11.250723838806152
    4. '+
' → logprob: -15.125723838806152
    5. 'r' → logprob: -16.125722885131836
    6. '()+' → logprob: -16.625722885131836
    7. '＋' → logprob: -16.750722885131836
    8. '+l' → logprob: -17.125722885131836
    9. '
' → logprob: -17.375722885131836
    10. '1' → logprob: -18.000722885131836

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'r' → logprob: -19.125
    4. '
' → logprob: -20.625
    5. ',r' → logprob: -20.75
    6. ',' → logprob: -21.375
    7. '   ' → logprob: -22.0
    8. '１' → logprob: -22.75
    9. '```' → logprob: -23.5
    10. ' r' → logprob: -23.5

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001991298486245796
    2. ',r' → logprob: -8.750199317932129
    3. ' ,' → logprob: -10.500199317932129
    4. 'r' → logprob: -11.250199317932129
    5. ',
' → logprob: -16.875198364257812
    6. ' r' → logprob: -17.500198364257812
    7. '(r' → logprob: -19.875198364257812
    8. '1' → logprob: -20.375198364257812
    9. '(),' → logprob: -20.750198364257812
    10. '0' → logprob: -21.500198364257812

Token 443: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009115827269852161
    2. ' r' → logprob: -7.000911712646484
    3. '	r' → logprob: -18.125911712646484
    4. '   ' → logprob: -18.750911712646484
    5. '_r' → logprob: -19.750911712646484
    6. '(r' → logprob: -20.500911712646484
    7. '       ' → logprob: -20.750911712646484
    8. ',r' → logprob: -21.000911712646484
    9. ' ' → logprob: -21.125911712646484
    10. '[r' → logprob: -21.625911712646484

Token 444: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10035547614097595
    2. ')' → logprob: -2.350355386734009
    3. '       ' → logprob: -9.22535514831543
    4. ')
' → logprob: -9.97535514831543
    5. '   ' → logprob: -13.47535514831543
    6. ' )
' → logprob: -14.10035514831543
    7. ')

' → logprob: -14.47535514831543
    8. '
' → logprob: -15.60035514831543
    9. ')return' → logprob: -15.85035514831543
    10. ')`
' → logprob: -16.22535514831543

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002069371985271573
    2. ' node' → logprob: -7.252069473266602
    3. '   ' → logprob: -7.752069473266602
    4. 'node' → logprob: -8.502069473266602
    5. ',node' → logprob: -8.502069473266602
    6. '
' → logprob: -8.877069473266602
    7. '	node' → logprob: -9.002069473266602
    8. ',' → logprob: -9.252069473266602
    9. '```' → logprob: -9.377069473266602
    10. '[node' → logprob: -10.127069473266602

Token 446: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.14066816866397858
    2. 'left' → logprob: -2.7656681537628174
    3. 'val' → logprob: -3.5156681537628174
    4. '       ' → logprob: -3.7656681537628174
    5. 'hl' → logprob: -5.1406683921813965
    6. 'l' → logprob: -6.1406683921813965
    7. 'lv' → logprob: -6.1406683921813965
    8. 'h' → logprob: -6.5156683921813965
    9. ' node' → logprob: -6.7656683921813965
    10. 'hash' → logprob: -6.8906683921813965

Token 447: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -2.9875325708417222e-05
    2. '.left' → logprob: -11.000029563903809
    3. '.' → logprob: -11.625029563903809
    4. ' .' → logprob: -13.375029563903809
    5. '.lazy' → logprob: -14.625029563903809
    6. ').' → logprob: -14.750029563903809
    7. '.val' → logprob: -15.000029563903809
    8. '.has' → logprob: -15.250029563903809
    9. '.lock' → logprob: -16.000030517578125
    10. 'hash' → logprob: -16.250030517578125

Token 448: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.7954958821064793e-05
    2. 'val' → logprob: -11.000018119812012
    3. '=' → logprob: -14.000018119812012
    4. ' =' → logprob: -16.500017166137695
    5. '1' → logprob: -16.625017166137695
    6. '_VAL' → logprob: -16.875017166137695
    7. 'Val' → logprob: -17.125017166137695
    8. '_' → logprob: -17.750017166137695
    9. '_vals' → logprob: -17.875017166137695
    10. '_value' → logprob: -18.125017166137695

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. ' =(' → logprob: -14.07594108581543
    4. '=(' → logprob: -14.45094108581543
    5. '=lambda' → logprob: -16.82594108581543
    6. '=node' → logprob: -16.95094108581543
    7. ')' → logprob: -17.20094108581543
    8. '＝' → logprob: -17.57594108581543
    9. '=
' → logprob: -17.95094108581543
    10. '=self' → logprob: -18.20094108581543

Token 450: ' self' (ID: 1051)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.09114129096269608
    2. '(
' → logprob: -2.5911412239074707
    3. '(' → logprob: -4.466141223907471
    4. '(self' → logprob: -7.841141223907471
    5. ' ((' → logprob: -8.591141700744629
    6. '   ' → logprob: -10.216141700744629
    7. '(((' → logprob: -10.466141700744629
    8. 'self' → logprob: -10.591141700744629
    9. ' (' → logprob: -12.091141700744629
    10. ' (
' → logprob: -12.466141700744629

Token 451: '.merge' (ID: 51225)
  Prédit: '.combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.combine' → logprob: -0.012846649624407291
    2. '._' → logprob: -4.76284646987915
    3. '.merge' → logprob: -5.51284646987915
    4. 'combine' → logprob: -9.012846946716309
    5. '.add' → logprob: -10.887846946716309
    6. '.hash' → logprob: -11.012846946716309
    7. '.' → logprob: -11.262846946716309
    8. '.__' → logprob: -12.262846946716309
    9. '.compose' → logprob: -12.762846946716309
    10. '.concat' → logprob: -12.887846946716309

Token 452: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00010795372509164736
    2. '(' → logprob: -9.250107765197754
    3. '(
' → logprob: -12.250107765197754
    4. '((' → logprob: -12.250107765197754
    5. ' (' → logprob: -13.375107765197754
    6. 'node' → logprob: -15.500107765197754
    7. '(n' → logprob: -15.625107765197754
    8. ',node' → logprob: -16.50010871887207
    9. '=node' → logprob: -16.75010871887207
    10. '[node' → logprob: -17.25010871887207

Token 453: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -14.12500286102295
    3. '.hash' → logprob: -14.25000286102295
    4. ' .' → logprob: -14.62500286102295
    5. 'left' → logprob: -15.50000286102295
    6. ').' → logprob: -15.50000286102295
    7. '.right' → logprob: -15.87500286102295
    8. '.val' → logprob: -17.750001907348633
    9. '[left' → logprob: -17.750001907348633
    10. ')' → logprob: -17.875001907348633

Token 454: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -2.4034345187828876e-05
    2. ',' → logprob: -11.25002384185791
    3. '.' → logprob: -12.25002384185791
    4. ').' → logprob: -13.25002384185791
    5. '.left' → logprob: -13.37502384185791
    6. 'hash' → logprob: -13.87502384185791
    7. ' .' → logprob: -14.00002384185791
    8. ')' → logprob: -15.12502384185791
    9. '.right' → logprob: -15.87502384185791
    10. '_hash' → logprob: -16.250024795532227

Token 455: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.896309739408025e-07
    2. 'val' → logprob: -14.750000953674316
    3. '[val' → logprob: -16.125
    4. '[' → logprob: -16.25
    5. ')' → logprob: -17.75
    6. '_' → logprob: -17.75
    7. ',val' → logprob: -17.875
    8. '_VAL' → logprob: -18.375
    9. '_value' → logprob: -18.625
    10. '	val' → logprob: -18.625

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003144562477245927
    2. ',node' → logprob: -5.87814474105835
    3. ' ,' → logprob: -8.003144264221191
    4. ',
' → logprob: -12.378144264221191
    5. '   ' → logprob: -15.128144264221191
    6. '(node' → logprob: -15.253144264221191
    7. ',n' → logprob: -15.628144264221191
    8. '[node' → logprob: -16.753145217895508
    9. 'node' → logprob: -16.753145217895508
    10. '       ' → logprob: -17.128145217895508

Token 457: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07889000326395035
    2. ' node' → logprob: -2.578890085220337
    3. '(node' → logprob: -15.453889846801758
    4. ',node' → logprob: -16.828889846801758
    5. '[node' → logprob: -16.953889846801758
    6. '	node' → logprob: -17.203889846801758
    7. '=node' → logprob: -18.578889846801758
    8. '
' → logprob: -18.953889846801758
    9. ' ' → logprob: -19.078889846801758
    10. '       ' → logprob: -19.703889846801758

Token 458: '.right' (ID: 17627)
  Prédit: '.hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -0.31392529606819153
    2. '.right' → logprob: -1.3139252662658691
    3. '.left' → logprob: -7.563925266265869
    4. 'hash' → logprob: -10.188925743103027
    5. '.val' → logprob: -10.438925743103027
    6. '.' → logprob: -10.563925743103027
    7. ').' → logprob: -10.563925743103027
    8. ' .' → logprob: -11.313925743103027
    9. 'right' → logprob: -12.438925743103027
    10. ')' → logprob: -12.813925743103027

Token 459: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -3.4881879400927573e-05
    2. '_hash' → logprob: -11.250035285949707
    3. 'hash' → logprob: -11.375035285949707
    4. '.val' → logprob: -12.375035285949707
    5. ' .' → logprob: -12.625035285949707
    6. '.' → logprob: -14.125035285949707
    7. ').' → logprob: -14.125035285949707
    8. ' hash' → logprob: -15.125035285949707
    9. '	hash' → logprob: -15.125035285949707
    10. ')' → logprob: -15.625035285949707

Token 460: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0005543439765460789
    2. 'val' → logprob: -7.50055456161499
    3. ')' → logprob: -14.000554084777832
    4. '[val' → logprob: -16.62555503845215
    5. ',val' → logprob: -16.75055503845215
    6. ' val' → logprob: -16.87555503845215
    7. 'Val' → logprob: -17.25055503845215
    8. '	val' → logprob: -17.50055503845215
    9. '_VAL' → logprob: -17.62555503845215
    10. '   ' → logprob: -17.62555503845215

Token 461: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027772970497608185
    2. ')
' → logprob: -6.252777099609375
    3. ' )' → logprob: -7.127777099609375
    4. ',' → logprob: -10.752777099609375
    5. '   ' → logprob: -11.502777099609375
    6. ' )
' → logprob: -12.002777099609375
    7. '       ' → logprob: -13.252777099609375
    8. ')return' → logprob: -13.252777099609375
    9. ')`' → logprob: -13.752777099609375
    10. ')

' → logprob: -13.877777099609375

Token 462: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07889363914728165
    2. ' node' → logprob: -2.5788936614990234
    3. 'm' → logprob: -13.703893661499023
    4. '(node' → logprob: -13.828893661499023
    5. 'r' → logprob: -14.328893661499023
    6. 'n' → logprob: -15.078893661499023
    7. '	node' → logprob: -15.078893661499023
    8. '[node' → logprob: -15.453893661499023
    9. '   ' → logprob: -16.453893661499023
    10. '
' → logprob: -16.703893661499023

Token 463: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0010838981252163649
    2. '.left' → logprob: -7.001083850860596
    3. '.length' → logprob: -9.251084327697754
    4. 'right' → logprob: -9.751084327697754
    5. '.' → logprob: -11.626084327697754
    6. '.r' → logprob: -12.376084327697754
    7. ' .' → logprob: -13.251084327697754
    8. '[right' → logprob: -14.376084327697754
    9. '	right' → logprob: -14.876084327697754
    10. ').' → logprob: -14.876084327697754

Token 464: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.6240566083070007e-06
    2. '.left' → logprob: -14.375001907348633
    3. ' .' → logprob: -14.750001907348633
    4. '.' → logprob: -15.375001907348633
    5. 'length' → logprob: -15.750001907348633
    6. '.hash' → logprob: -16.375001907348633
    7. ').' → logprob: -16.875001907348633
    8. '.size' → logprob: -17.250001907348633
    9. '.len' → logprob: -17.375001907348633
    10. '.l' → logprob: -18.250001907348633

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010119986720383167
    2. ')
' → logprob: -4.635119915008545
    3. '       ' → logprob: -8.760120391845703
    4. ' )' → logprob: -8.760120391845703
    5. '   ' → logprob: -10.260120391845703
    6. ' )
' → logprob: -12.260120391845703
    7. '
' → logprob: -12.885120391845703
    8. ')

' → logprob: -13.135120391845703
    9. ')return' → logprob: -13.510120391845703
    10. ')
' → logprob: -13.760120391845703

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016974377213045955
    2. '<|end|>' → logprob: -7.251697540283203
    3. 'return' → logprob: -7.876697540283203
    4. '	' → logprob: -8.376697540283203
    5. ')' → logprob: -9.251697540283203
    6. ' return' → logprob: -9.751697540283203
    7. '
' → logprob: -9.751697540283203
    8. '	return' → logprob: -9.751697540283203
    9. '   ' → logprob: -10.376697540283203
    10. '<|end|>' → logprob: -10.876697540283203

Token 467: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028767617186531425
    2. '	' → logprob: -8.750288009643555
    3. 'return' (adapté à ' return') → logprob: -9.375288009643555
    4. '   ' → logprob: -10.250288009643555
    5. '	return' → logprob: -12.250288009643555
    6. ' return' → logprob: -12.750288009643555
    7. '	   ' → logprob: -14.500288009643555
    8. '```' → logprob: -15.625288009643555
    9. '           ' → logprob: -15.750288009643555
    10. ' ' → logprob: -16.125288009643555

Token 468: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.048587486147880554
    2. ' node' → logprob: -3.0485875606536865
    3. '	node' → logprob: -17.048587799072266
    4. 'Node' → logprob: -17.798587799072266
    5. 'nod' → logprob: -18.423587799072266
    6. '(node' → logprob: -18.673587799072266
    7. 'n' → logprob: -19.298587799072266
    8. '[node' → logprob: -20.673587799072266
    9. '_node' → logprob: -20.673587799072266
    10. ' ndo' → logprob: -21.423587799072266

Token 469: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.703789472579956
    2. '
' → logprob: -0.828789472579956
    3. '<|end|>' → logprob: -3.203789472579956
    4. '    
' → logprob: -3.703789472579956
    5. '<|end|>' → logprob: -7.203789710998535
    6. '  
' → logprob: -7.453789710998535
    7. '```' → logprob: -7.578789710998535
    8. 'def' → logprob: -7.828789710998535
    9. '	
' → logprob: -8.578789710998535
    10. '        
' → logprob: -8.828789710998535

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014364576898515224
    2. '
' → logprob: -4.889364719390869
    3. '    
' → logprob: -5.514364719390869
    4. 'def' → logprob: -6.014364719390869
    5. '<|end|>' → logprob: -9.389364242553711
    6. '  
' → logprob: -10.139364242553711
    7. '        
' → logprob: -10.389364242553711
    8. '```' → logprob: -10.639364242553711
    9. ' def' → logprob: -10.764364242553711
    10. ' 
' → logprob: -10.889364242553711

Token 471: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47429847717285156
    2. '   ' → logprob: -0.9742984771728516
    3. ' def' → logprob: -9.224298477172852
    4. '    
' → logprob: -9.849298477172852
    5. '
' → logprob: -9.974298477172852
    6. '	def' → logprob: -10.974298477172852
    7. ')' → logprob: -12.974298477172852
    8. '```' → logprob: -14.099298477172852
    9. ' 
' → logprob: -14.224298477172852
    10. ',' → logprob: -14.599298477172852

Token 472: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.5198416113853455
    2. 'push' → logprob: -1.1448416709899902
    3. ' merge' → logprob: -3.0198416709899902
    4. ' push' → logprob: -3.2698416709899902
    5. 'prop' → logprob: -9.769841194152832
    6. '_' → logprob: -9.894841194152832
    7. 'apply' → logprob: -10.019841194152832
    8. '_push' → logprob: -10.144841194152832
    9. '_merge' → logprob: -10.769841194152832
    10. 'update' → logprob: -11.019841194152832

Token 473: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.375005722045898
    3. '(a' → logprob: -15.125005722045898
    4. '(left' → logprob: -15.125005722045898
    5. '(hash' → logprob: -15.875005722045898
    6. '(h' → logprob: -15.875005722045898
    7. ' (' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.3750057220459
    9. '(
' → logprob: -16.5000057220459
    10. ',' → logprob: -17.3750057220459

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42927461862564087
    2. '(self' → logprob: -1.054274559020996
    3. 'self' → logprob: -8.179274559020996
    4. '(' → logprob: -9.304274559020996
    5. ' ,' → logprob: -9.679274559020996
    6. ',self' → logprob: -9.929274559020996
    7. '   ' → logprob: -11.304274559020996
    8. ' (' → logprob: -11.304274559020996
    9. '(hash' → logprob: -11.304274559020996
    10. '(node' → logprob: -11.929274559020996

Token 475: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.28535470366477966
    2. 'h' → logprob: -1.660354733467102
    3. 'hash' → logprob: -3.5353546142578125
    4. 'a' → logprob: -4.1603546142578125
    5. ' left' → logprob: -4.4103546142578125
    6. 'hv' → logprob: -7.5353546142578125
    7. '   ' → logprob: -9.035354614257812
    8. ' h' → logprob: -9.035354614257812
    9. 'val' → logprob: -9.160354614257812
    10. 'ha' → logprob: -9.660354614257812

Token 476: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.12510280311107635
    2. ',' → logprob: -2.2501027584075928
    3. 'hash' → logprob: -4.625102996826172
    4. '_val' → logprob: -6.125102996826172
    5. ' ,' → logprob: -9.750102996826172
    6. 'val' → logprob: -10.250102996826172
    7. '.hash' → logprob: -11.000102996826172
    8. 'Hash' → logprob: -11.375102996826172
    9. ',val' → logprob: -11.375102996826172
    10. '_h' → logprob: -11.500102996826172

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001434690784662962
    2. ' ,' → logprob: -9.000143051147461
    3. ',val' → logprob: -11.750143051147461
    4. '_val' → logprob: -12.000143051147461
    5. ',left' → logprob: -12.750143051147461
    6. 'val' → logprob: -14.375143051147461
    7. ',right' → logprob: -14.375143051147461
    8. '   ' → logprob: -14.375143051147461
    9. 'left' → logprob: -14.875143051147461
    10. 'hash' → logprob: -15.375143051147461

Token 478: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1269330382347107
    2. ' right' → logprob: -2.1269330978393555
    3. '   ' → logprob: -13.126933097839355
    4. 'left' → logprob: -14.126933097839355
    5. '	right' → logprob: -14.126933097839355
    6. ' ' → logprob: -15.251933097839355
    7. '(right' → logprob: -15.376933097839355
    8. '[right' → logprob: -15.376933097839355
    9. '_right' → logprob: -15.876933097839355
    10. ',right' → logprob: -16.00193214416504

Token 479: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.00015705463010817766
    2. '_val' → logprob: -9.750157356262207
    3. 'hash' → logprob: -9.750157356262207
    4. ',' → logprob: -10.750157356262207
    5. ')_' → logprob: -12.875157356262207
    6. ')' → logprob: -12.875157356262207
    7. '_len' → logprob: -13.000157356262207
    8. '[' → logprob: -13.125157356262207
    9. ',_' → logprob: -13.375157356262207
    10. '```' → logprob: -13.500157356262207

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.811348480870947e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',length' → logprob: -13.50004768371582
    4. ',right' → logprob: -14.75004768371582
    5. ',
' → logprob: -15.12504768371582
    6. '   ' → logprob: -16.37504768371582
    7. ',r' → logprob: -16.62504768371582
    8. '‌,' → logprob: -16.75004768371582
    9. ',len' → logprob: -17.00004768371582
    10. ',left' → logprob: -17.12504768371582

Token 481: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12766681611537933
    2. ' right' → logprob: -2.127666711807251
    3. 'left' → logprob: -8.002666473388672
    4. 'length' → logprob: -8.127666473388672
    5. ' length' → logprob: -10.127666473388672
    6. '	right' → logprob: -10.377666473388672
    7. ' left' → logprob: -10.627666473388672
    8. 'r' → logprob: -12.627666473388672
    9. '   ' → logprob: -13.002666473388672
    10. ')' → logprob: -13.252666473388672

Token 482: '_length' (ID: 11514)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.10126455873250961
    2. 'length' → logprob: -2.351264476776123
    3. '_length' → logprob: -7.101264476776123
    4. ' length' → logprob: -8.851264953613281
    5. ')' → logprob: -10.226264953613281
    6. '[length' → logprob: -11.351264953613281
    7. '.' → logprob: -11.851264953613281
    8. ',length' → logprob: -11.976264953613281
    9. ' .' → logprob: -12.101264953613281
    10. '.size' → logprob: -12.726264953613281

Token 483: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20151683688163757
    2. '):' → logprob: -1.70151686668396
    3. ' ):
' → logprob: -10.076517105102539
    4. '):
' → logprob: -10.326517105102539
    5. ' ):' → logprob: -11.076517105102539
    6. '   ' → logprob: -12.326517105102539
    7. '):

' → logprob: -12.576517105102539
    8. ':' → logprob: -12.826517105102539
    9. ')' → logprob: -12.951517105102539
    10. ' ' → logprob: -16.57651710510254

Token 484: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35017719864845276
    2. ':' → logprob: -1.8501771688461304
    3. ',' → logprob: -3.22517728805542
    4. '       ' → logprob: -3.47517728805542
    5. '):
' → logprob: -3.85017728805542
    6. ' (' → logprob: -4.22517728805542
    7. '   ' → logprob: -4.35017728805542
    8. ')' → logprob: -4.97517728805542
    9. '(self' → logprob: -5.85017728805542
    10. '(' → logprob: -6.10017728805542

Token 485: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1224851608276367
    2. '(left' → logprob: -1.6224851608276367
    3. '(' → logprob: -2.2474851608276367
    4. 'return' → logprob: -2.3724851608276367
    5. 'val' (adapté à ' val') → logprob: -2.3724851608276367
    6. '(
' → logprob: -2.7474851608276367
    7. 'left' → logprob: -2.8724851608276367
    8. '(val' → logprob: -3.3724851608276367
    9. ' (' → logprob: -4.247485160827637
    10. ' return' → logprob: -5.872485160827637

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001149867384810932
    2. ' =' → logprob: -9.250115394592285
    3. '=' → logprob: -11.750115394592285
    4. '0' → logprob: -12.250115394592285
    5. '_' → logprob: -12.750115394592285
    6. '_val' → logprob: -13.000115394592285
    7. '=(' → logprob: -14.875115394592285
    8. '   ' → logprob: -15.250115394592285
    9. '_left' → logprob: -15.875115394592285
    10. '=((' → logprob: -16.25011444091797

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520298957824707
    2. '=' → logprob: -1.5020298957824707
    3. '=(' → logprob: -9.252029418945312
    4. '=((' → logprob: -12.752029418945312
    5. ' =(' → logprob: -13.252029418945312
    6. ',' → logprob: -16.252029418945312
    7. '   ' → logprob: -16.502029418945312
    8. ')' → logprob: -17.627029418945312
    9. 'return' → logprob: -17.752029418945312
    10. ' ' → logprob: -18.252029418945312

Token 488: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0005598236457444727
    2. ' (' → logprob: -7.7505598068237305
    3. '(' → logprob: -9.37555980682373
    4. '   ' → logprob: -10.25055980682373
    5. '(right' → logprob: -12.62555980682373
    6. '(lhs' → logprob: -13.12555980682373
    7. '(last' → logprob: -14.00055980682373
    8. '       ' → logprob: -14.25055980682373
    9. '(len' → logprob: -15.12555980682373
    10. '((' → logprob: -15.62555980682373

Token 489: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00072851701406762
    2. 'left' → logprob: -7.375728607177734
    3. ' (' → logprob: -9.250728607177734
    4. '   ' → logprob: -13.000728607177734
    5. ' left' → logprob: -13.375728607177734
    6. '[left' → logprob: -13.750728607177734
    7. '(
' → logprob: -15.250728607177734
    8. '(' → logprob: -15.500728607177734
    9. '
' → logprob: -16.000728607177734
    10. '	left' → logprob: -16.125728607177734

Token 490: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.226628895296017e-06
    2. ' left' → logprob: -11.875007629394531
    3. '(left' → logprob: -15.375007629394531
    4. '	left' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.75000762939453
    6. '.left' → logprob: -19.25000762939453
    7. '[left' → logprob: -19.37500762939453
    8. '
' → logprob: -19.87500762939453
    9. '    
' → logprob: -21.37500762939453
    10. '左' → logprob: -21.37500762939453

Token 491: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0015105740167200565
    2. 'hash' → logprob: -6.5015106201171875
    3. '[' → logprob: -12.751510620117188
    4. '_' → logprob: -13.251510620117188
    5. ' hash' → logprob: -13.376510620117188
    6. '1' → logprob: -14.376510620117188
    7. 'Hash' → logprob: -14.751510620117188
    8. '_HASH' → logprob: -15.501510620117188
    9. 'HASH' → logprob: -16.001510620117188
    10. '	hash' → logprob: -16.501510620117188

Token 492: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006855101673863828
    2. '0' → logprob: -7.625685691833496
    3. '1' → logprob: -9.500685691833496
    4. ' [' → logprob: -9.500685691833496
    5. ')' → logprob: -11.375685691833496
    6. ')[' → logprob: -11.750685691833496
    7. 'val' → logprob: -11.875685691833496
    8. '   ' → logprob: -12.375685691833496
    9. '
' → logprob: -12.500685691833496
    10. '_val' → logprob: -13.125685691833496

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.250003814697266
    5. '
' → logprob: -17.500003814697266
    6. '[' → logprob: -18.375003814697266
    7. '۰' → logprob: -18.500003814697266
    8. '```' → logprob: -18.812503814697266
    9. ')' → logprob: -19.687503814697266
    10. 'val' → logprob: -20.000003814697266

Token 494: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.34986788034439087
    2. '*' → logprob: -1.224867820739746
    3. ')' → logprob: -7.349867820739746
    4. ')*' → logprob: -7.849867820739746
    5. '<<' → logprob: -8.474867820739746
    6. ' ' → logprob: -9.349867820739746
    7. ' <<' → logprob: -9.724867820739746
    8. '*self' → logprob: -11.224867820739746
    9. '   ' → logprob: -11.724867820739746
    10. ' )' → logprob: -12.724867820739746

Token 495: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012497581774368882
    2. ' self' → logprob: -7.12624979019165
    3. 'pow' → logprob: -7.75124979019165
    4. '(self' → logprob: -12.501249313354492
    5. '
' → logprob: -12.751249313354492
    6. ')' → logprob: -13.126249313354492
    7. '   ' → logprob: -13.376249313354492
    8. ' pow' → logprob: -13.751249313354492
    9. '	self' → logprob: -14.001249313354492
    10. '[self' → logprob: -14.001249313354492

Token 496: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.3135083019733429
    2. 'pow' → logprob: -1.3135082721710205
    3. 'BASE' → logprob: -8.688508033752441
    4. ' pow' → logprob: -9.688508033752441
    5. '
' → logprob: -12.813508033752441
    6. '.BASE' → logprob: -13.188508033752441
    7. '(pow' → logprob: -13.563508033752441
    8. 'self' → logprob: -13.688508033752441
    9. '.power' → logprob: -13.688508033752441
    10. '.base' → logprob: -14.063508033752441

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036031559575349092
    2. '[' → logprob: -5.628602981567383
    3. 'self' → logprob: -13.628602981567383
    4. '```' → logprob: -14.253602981567383
    5. ')' → logprob: -15.253602981567383
    6. ' [' → logprob: -15.503602981567383
    7. ' ' → logprob: -15.878602981567383
    8. '[self' → logprob: -15.878602981567383
    9. '   ' → logprob: -16.128602981567383
    10. ')[' → logprob: -16.878602981567383

Token 498: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -2.999452772201039e-05
    2. 'right' → logprob: -10.875029563903809
    3. '[' → logprob: -11.500029563903809
    4. ')[' → logprob: -14.750029563903809
    5. '[left' → logprob: -15.875029563903809
    6. ')' → logprob: -16.250030517578125
    7. '[
' → logprob: -16.500030517578125
    8. ' right' → logprob: -17.375030517578125
    9. '(right' → logprob: -17.875030517578125
    10. ',right' → logprob: -18.250030517578125

Token 499: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.038062144070863724
    2. 'length' → logprob: -3.28806209564209
    3. '[' → logprob: -11.66306209564209
    4. '[length' → logprob: -12.28806209564209
    5. ' length' → logprob: -13.03806209564209
    6. 'Length' → logprob: -13.03806209564209
    7. 'ength' → logprob: -14.66306209564209
    8. '_LENGTH' → logprob: -14.66306209564209
    9. ')' → logprob: -14.78806209564209
    10. '   ' → logprob: -15.41306209564209

Token 500: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3454647362232208
    2. '[' → logprob: -1.3454647064208984
    3. '])' → logprob: -4.095464706420898
    4. ']+' → logprob: -4.595464706420898
    5. ')' → logprob: -5.970464706420898
    6. '+' → logprob: -6.720464706420898
    7. '])+' → logprob: -7.595464706420898
    8. 'right' → logprob: -8.345464706420898
    9. ')+' → logprob: -8.845464706420898
    10. '[right' → logprob: -9.470464706420898

Token 501: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890025526285172
    2. '+' → logprob: -2.5789003372192383
    3. ')' → logprob: -12.078900337219238
    4. '+
' → logprob: -13.328900337219238
    5. ' +
' → logprob: -13.578900337219238
    6. '%' → logprob: -13.828900337219238
    7. ' ' → logprob: -15.078900337219238
    8. ')+' → logprob: -15.828900337219238
    9. ' )' → logprob: -16.203899383544922
    10. ' %' → logprob: -16.578899383544922

Token 502: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.31326258182525635
    2. ' right' → logprob: -1.3132625818252563
    3. '(right' → logprob: -15.063262939453125
    4. ' ' → logprob: -15.313262939453125
    5. '	right' → logprob: -16.063262939453125
    6. '
' → logprob: -16.813262939453125
    7. 'Right' → logprob: -17.313262939453125
    8. ' (' → logprob: -17.313262939453125
    9. '[right' → logprob: -17.313262939453125
    10. '  ' → logprob: -18.313262939453125

Token 503: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0001382241171086207
    2. '[' → logprob: -9.750138282775879
    3. 'hash' → logprob: -9.750138282775879
    4. '_' → logprob: -11.125138282775879
    5. '_val' → logprob: -13.250138282775879
    6. '_HASH' → logprob: -13.875138282775879
    7. 'Hash' → logprob: -14.000138282775879
    8. ')' → logprob: -14.125138282775879
    9. '```' → logprob: -14.375138282775879
    10. ')_' → logprob: -15.125138282775879

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -13.750001907348633
    3. '0' → logprob: -15.625001907348633
    4. ' [' → logprob: -15.750001907348633
    5. '<|end|>' → logprob: -15.750001907348633
    6. '(' → logprob: -16.250001907348633
    7. '
' → logprob: -16.750001907348633
    8. '1' → logprob: -16.875001907348633
    9. '```' → logprob: -17.250001907348633
    10. ')' → logprob: -17.375001907348633

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '۰' → logprob: -19.375001907348633
    6. '```' → logprob: -19.500001907348633
    7. '(' → logprob: -19.625001907348633
    8. '00' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '000' → logprob: -21.375001907348633

Token 506: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10024851560592651
    2. ' )' → logprob: -2.3502485752105713
    3. ')%' → logprob: -10.100248336791992
    4. '   ' → logprob: -15.850248336791992
    5. '       ' → logprob: -16.225248336791992
    6. ' )
' → logprob: -16.350248336791992
    7. ')
' → logprob: -16.475248336791992
    8. '
' → logprob: -16.975248336791992
    9. '}' → logprob: -17.225248336791992
    10. ' ' → logprob: -17.225248336791992

Token 507: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012553330510854721
    2. '%' → logprob: -4.3875532150268555
    3. ')' → logprob: -10.137553215026855
    4. ' ' → logprob: -13.637553215026855
    5. ')%' → logprob: -14.387553215026855
    6. ' ' → logprob: -14.887553215026855
    7. ',' → logprob: -15.012553215026855
    8. '%n' → logprob: -15.137553215026855
    9. '
' → logprob: -15.262553215026855
    10. '%c' → logprob: -15.387553215026855

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005573204252868891
    2. ' self' → logprob: -7.5005574226379395
    3. 'Segment' → logprob: -12.625556945800781
    4. '(self' → logprob: -14.750556945800781
    5. '
' → logprob: -14.875556945800781
    6. 'Self' → logprob: -15.875556945800781
    7. '```' → logprob: -15.875556945800781
    8. 'Seg' → logprob: -18.00055694580078
    9. '	self' → logprob: -18.25055694580078
    10. '[self' → logprob: -19.12555694580078

Token 509: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.12693114578723907
    2. 'MOD' → logprob: -2.1269311904907227
    3. '_MOD' → logprob: -13.126931190490723
    4. '.Mod' → logprob: -15.001931190490723
    5. '.M' → logprob: -15.126931190490723
    6. ' MOD' → logprob: -15.376931190490723
    7. '.MODE' → logprob: -16.626930236816406
    8. '
' → logprob: -16.751930236816406
    9. 'Segment' → logprob: -17.251930236816406
    10. 'self' → logprob: -18.126930236816406

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.500000953674316
    3. '
' → logprob: -16.375
    4. '```' → logprob: -17.375
    5. ' ' → logprob: -17.5
    6. '   ' → logprob: -18.5
    7. 'Tree' → logprob: -19.625
    8. '`' → logprob: -19.875
    9. '``' → logprob: -20.125
    10. '7' → logprob: -20.25

Token 511: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3585518598556519
    2. ',' → logprob: -1.4835518598556519
    3. '
' → logprob: -1.4835518598556519
    4. 'val' → logprob: -1.7335518598556519
    5. ' val' → logprob: -2.9835519790649414
    6. ',
' → logprob: -3.3585519790649414
    7. ',val' → logprob: -4.108551979064941
    8. '        
' → logprob: -5.983551979064941
    9. '	val' → logprob: -6.108551979064941
    10. ')' → logprob: -6.358551979064941

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7832586169242859
    2. 'val' → logprob: -1.0332586765289307
    3. ',' → logprob: -2.5332586765289307
    4. ' val' → logprob: -2.6582586765289307
    5. ',val' → logprob: -4.783258438110352
    6. '<|end|>' → logprob: -4.783258438110352
    7. ',
' → logprob: -5.283258438110352
    8. '        
' → logprob: -6.033258438110352
    9. '   ' → logprob: -6.408258438110352
    10. '	val' → logprob: -6.408258438110352

Token 513: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.11303909868001938
    2. ' val' → logprob: -2.363039016723633
    3. '       ' → logprob: -4.363039016723633
    4. '   ' → logprob: -12.238039016723633
    5. '	val' → logprob: -12.488039016723633
    6. ' ' → logprob: -14.363039016723633
    7. '      ' → logprob: -14.738039016723633
    8. '_val' → logprob: -14.738039016723633
    9. '
' → logprob: -15.363039016723633
    10. '     ' → logprob: -16.113039016723633

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009196366183459759
    2. '1' → logprob: -4.7591962814331055
    3. '[' → logprob: -7.8841962814331055
    4. '(' → logprob: -9.009196281433105
    5. '=' → logprob: -9.884196281433105
    6. '   ' → logprob: -11.509196281433105
    7. '_' → logprob: -11.634196281433105
    8. ' ' → logprob: -12.634196281433105
    9. 'val' → logprob: -13.134196281433105
    10. ' =' → logprob: -13.259196281433105

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ' =(' → logprob: -15.788042068481445
    4. '=(' → logprob: -16.413042068481445
    5. ')' → logprob: -17.413042068481445
    6. ',' → logprob: -18.038042068481445
    7. ' (' → logprob: -18.413042068481445
    8. ':' → logprob: -18.538042068481445
    9. '<|end|>' → logprob: -18.663042068481445
    10. ' ' → logprob: -18.913042068481445

Token 516: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1002885028719902
    2. '(' → logprob: -2.3502883911132812
    3. '((' → logprob: -9.475288391113281
    4. ' ((' → logprob: -12.725288391113281
    5. '(val' → logprob: -13.225288391113281
    6. '(
' → logprob: -16.35028839111328
    7. ' ' → logprob: -16.47528839111328
    8. '(left' → logprob: -16.47528839111328
    9. ' ' → logprob: -17.60028839111328
    10. '   ' → logprob: -17.72528839111328

Token 517: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3992448151111603
    2. '(left' → logprob: -1.149244785308838
    3. '(' → logprob: -4.399244785308838
    4. ' ' → logprob: -12.149245262145996
    5. '((' → logprob: -12.774245262145996
    6. '(right' → logprob: -13.524245262145996
    7. '   ' → logprob: -15.024245262145996
    8. '(lhs' → logprob: -15.399245262145996
    9. ' ((' → logprob: -15.524245262145996
    10. ' ' → logprob: -16.02424430847168

Token 518: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -8.537868779967539e-06
    2. '(left' → logprob: -12.125008583068848
    3. ' left' → logprob: -12.750008583068848
    4. '[left' → logprob: -15.750008583068848
    5. '(' → logprob: -18.37500762939453
    6. '	left' → logprob: -18.50000762939453
    7. '
' → logprob: -18.50000762939453
    8. ' (' → logprob: -19.37500762939453
    9. 'right' → logprob: -19.37500762939453
    10. '.left' → logprob: -19.87500762939453

Token 519: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -5.908022285439074e-05
    2. 'hash' → logprob: -9.750059127807617
    3. '_HASH' → logprob: -14.875059127807617
    4. 'Hash' → logprob: -15.625059127807617
    5. '[' → logprob: -15.750059127807617
    6. '_' → logprob: -16.625059127807617
    7. 'right' → logprob: -17.625059127807617
    8. 'HASH' → logprob: -17.875059127807617
    9. ' hash' → logprob: -18.250059127807617
    10. '<Hash' → logprob: -18.375059127807617

Token 520: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1041145626222715e-05
    2. '1' → logprob: -11.625011444091797
    3. ' [' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.875011444091797
    5. '0' → logprob: -15.125011444091797
    6. '2' → logprob: -15.250011444091797
    7. '(' → logprob: -15.625011444091797
    8. ' ' → logprob: -16.375011444091797
    9. ')[' → logprob: -16.875011444091797
    10. '][' → logprob: -17.000011444091797

Token 521: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005247514229267836
    2. '1' → logprob: -5.255247592926025
    3. '[' → logprob: -11.255247116088867
    4. ' ' → logprob: -14.380247116088867
    5. '   ' → logprob: -15.880247116088867
    6. '
' → logprob: -15.880247116088867
    7. '(' → logprob: -16.880247116088867
    8. '```' → logprob: -18.067747116088867
    9. '01' → logprob: -18.442747116088867
    10. '-' → logprob: -18.630247116088867

Token 522: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31443360447883606
    2. '*self' → logprob: -1.3144335746765137
    3. ')*' → logprob: -6.939433574676514
    4. ' *' → logprob: -9.314434051513672
    5. '*object' → logprob: -10.064434051513672
    6. '*[' → logprob: -10.689434051513672
    7. '[' → logprob: -11.064434051513672
    8. '*this' → logprob: -11.189434051513672
    9. '**' → logprob: -12.814434051513672
    10. '*)' → logprob: -12.814434051513672

Token 523: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.0629870858974755e-05
    2. ' self' → logprob: -9.75006103515625
    3. 'pow' → logprob: -13.12506103515625
    4. '(self' → logprob: -15.62506103515625
    5. '[self' → logprob: -16.87506103515625
    6. '
' → logprob: -17.62506103515625
    7. '       ' → logprob: -17.75006103515625
    8. '	self' → logprob: -18.00006103515625
    9. '   ' → logprob: -18.12506103515625
    10. '*self' → logprob: -18.75006103515625

Token 524: '.pow' (ID: 46534)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6965286135673523
    2. '.pow' → logprob: -0.6965286135673523
    3. 'self' → logprob: -5.696528434753418
    4. ' pow' → logprob: -11.321528434753418
    5. 'Pow' → logprob: -13.446528434753418
    6. '_pow' → logprob: -13.571528434753418
    7. '[self' → logprob: -14.446528434753418
    8. '.self' → logprob: -14.571528434753418
    9. '
' → logprob: -15.196528434753418
    10. '   ' → logprob: -15.196528434753418

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034023032640106976
    2. '1' → logprob: -8.000340461730957
    3. 'length' → logprob: -13.375340461730957
    4. 'pow' → logprob: -13.875340461730957
    5. '_length' → logprob: -14.000340461730957
    6. '[' → logprob: -15.375340461730957
    7. '```' → logprob: -15.500340461730957
    8. '_tree' → logprob: -15.625340461730957
    9. 'right' → logprob: -16.00033950805664
    10. '`' → logprob: -16.75033950805664

Token 526: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.512236498361744e-07
    2. 'right' → logprob: -14.875000953674316
    3. '[
' → logprob: -16.625
    4. '[' → logprob: -17.125
    5. '[root' → logprob: -17.5
    6. '
' → logprob: -18.0
    7. '[left' → logprob: -19.125
    8. '[next' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. ')[' → logprob: -19.875

Token 527: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00014489953173324466
    2. 'length' → logprob: -8.875144958496094
    3. '1' → logprob: -12.500144958496094
    4. '_LENGTH' → logprob: -14.375144958496094
    5. 'ength' → logprob: -15.750144958496094
    6. 'Length' → logprob: -15.875144958496094
    7. '```' → logprob: -16.375144958496094
    8. '[' → logprob: -16.750144958496094
    9. ' length' → logprob: -16.750144958496094
    10. '-length' → logprob: -16.875144958496094

Token 528: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.161254420876503
    2. '[right' → logprob: -1.9112544059753418
    3. '])' → logprob: -7.661254405975342
    4. 'right' → logprob: -8.0362548828125
    5. ']' → logprob: -9.1612548828125
    6. ')+' → logprob: -9.4112548828125
    7. ' )' → logprob: -10.7862548828125
    8. '[left' → logprob: -11.7862548828125
    9. ')]' → logprob: -11.9112548828125
    10. '[' → logprob: -12.1612548828125

Token 529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008628406561911106
    2. '+' → logprob: -4.7586283683776855
    3. ')' → logprob: -11.258628845214844
    4. '[right' → logprob: -15.258628845214844
    5. ')+' → logprob: -15.258628845214844
    6. '[' → logprob: -15.883628845214844
    7. ' )' → logprob: -16.383628845214844
    8. ' ' → logprob: -16.383628845214844
    9. '+)' → logprob: -17.008628845214844
    10. ' ' → logprob: -17.633628845214844

Token 530: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.20141343772411346
    2. 'right' → logprob: -1.7014133930206299
    3. '	right' → logprob: -16.951414108276367
    4. '(right' → logprob: -18.076414108276367
    5. ' ' → logprob: -19.076414108276367
    6. '[right' → logprob: -19.201414108276367
    7. 'Right' → logprob: -20.326414108276367
    8. '右' → logprob: -20.451414108276367
    9. ',right' → logprob: -20.451414108276367
    10. 'r' → logprob: -20.701414108276367

Token 531: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -2.7848862373502925e-05
    2. 'hash' → logprob: -10.500027656555176
    3. '[' → logprob: -15.125027656555176
    4. 'Hash' → logprob: -17.625028610229492
    5. '_HASH' → logprob: -18.125028610229492
    6. 'right' → logprob: -19.125028610229492
    7. '	hash' → logprob: -19.625028610229492
    8. '_length' → logprob: -19.750028610229492
    9. '_right' → logprob: -19.750028610229492
    10. ' hash' → logprob: -19.750028610229492

Token 532: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[
' → logprob: -15.750000953674316
    3. '1' → logprob: -16.125
    4. '```' → logprob: -16.875
    5. ' [' → logprob: -17.25
    6. '   ' → logprob: -17.5
    7. '(' → logprob: -18.375
    8. ')[' → logprob: -18.375
    9. '.' → logprob: -18.75
    10. '2' → logprob: -19.0

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.125005722045898
    3. ' ' → logprob: -17.6250057220459
    4. '```' → logprob: -17.6250057220459
    5. '   ' → logprob: -18.5000057220459
    6. '
' → logprob: -19.0000057220459
    7. '(' → logprob: -19.5000057220459
    8. '۱' → logprob: -20.0000057220459
    9. '' → logprob: -20.1250057220459
    10. '0' → logprob: -20.5000057220459

Token 534: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. ' )' → logprob: -10.000048637390137
    3. '[' → logprob: -13.500048637390137
    4. '])' → logprob: -13.500048637390137
    5. '   ' → logprob: -15.125048637390137
    6. '))' → logprob: -15.375048637390137
    7. '0' → logprob: -16.250049591064453
    8. ']' → logprob: -16.625049591064453
    9. ')%' → logprob: -17.000049591064453
    10. '       ' → logprob: -17.125049591064453

Token 535: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07903046160936356
    2. '%' → logprob: -2.5790305137634277
    3. ')' → logprob: -8.95403003692627
    4. ')%' → logprob: -11.57903003692627
    5. ' ' → logprob: -13.45403003692627
    6. ' )' → logprob: -15.20403003692627
    7. ' %)' → logprob: -16.454030990600586
    8. ' ' → logprob: -16.579030990600586
    9. ']%' → logprob: -16.829030990600586
    10. ']' → logprob: -17.079030990600586

Token 536: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014172209426760674
    2. ' self' → logprob: -4.264172077178955
    3. '(self' → logprob: -12.139172554016113
    4. '       ' → logprob: -13.639172554016113
    5. '   ' → logprob: -13.889172554016113
    6. '
' → logprob: -14.139172554016113
    7. '	self' → logprob: -15.889172554016113
    8. '=self' → logprob: -16.639171600341797
    9. ' ' → logprob: -16.889171600341797
    10. '           ' → logprob: -17.139171600341797

Token 537: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0002669384120963514
    2. '_MOD' → logprob: -8.875267028808594
    3. '.S' → logprob: -9.375267028808594
    4. 'self' → logprob: -10.625267028808594
    5. '.MODE' → logprob: -12.000267028808594
    6. 'MOD' → logprob: -12.625267028808594
    7. '.M' → logprob: -12.875267028808594
    8. '_SEG' → logprob: -13.250267028808594
    9. '.SEC' → logprob: -13.625267028808594
    10. '.Mod' → logprob: -13.750267028808594

Token 538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '9' → logprob: -12.375004768371582
    3. '1' → logprob: -16.625003814697266
    4. ' ' → logprob: -17.625003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '```' → logprob: -18.500003814697266
    7. '
' → logprob: -19.500003814697266
    8. 'MOD' → logprob: -19.500003814697266
    9. '7' → logprob: -20.500003814697266
    10. '``' → logprob: -20.875003814697266

Token 539: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005731113720685244
    2. ')' → logprob: -5.380731105804443
    3. '	' → logprob: -7.130731105804443
    4. 'return' → logprob: -9.005731582641602
    5. ' return' → logprob: -9.880731582641602
    6. '<|end|>' → logprob: -10.255731582641602
    7. '   ' → logprob: -10.630731582641602
    8. '
' → logprob: -11.005731582641602
    9. ',' → logprob: -11.130731582641602
    10. ')
' → logprob: -11.380731582641602

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035691517405211926
    2. ')' → logprob: -8.625356674194336
    3. '	' → logprob: -9.125356674194336
    4. 'return' → logprob: -10.500356674194336
    5. ' return' → logprob: -10.625356674194336
    6. '	return' → logprob: -12.375356674194336
    7. '   ' → logprob: -12.875356674194336
    8. '<|end|>' → logprob: -12.875356674194336
    9. ',' → logprob: -13.000356674194336
    10. '      ' → logprob: -13.750356674194336

Token 541: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45812365412712097
    2. 'return' (adapté à ' return') → logprob: -1.2081236839294434
    3. ' return' → logprob: -2.7081236839294434
    4. ')' → logprob: -6.333123683929443
    5. '	return' → logprob: -8.333123207092285
    6. '	' → logprob: -10.083123207092285
    7. '   ' → logprob: -11.083123207092285
    8. ')return' → logprob: -11.208123207092285
    9. '
' → logprob: -11.958123207092285
    10. ':return' → logprob: -12.583123207092285

Token 542: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -4.894790981779806e-05
    2. ' (' → logprob: -10.000048637390137
    3. '(' → logprob: -12.750048637390137
    4. '[val' → logprob: -14.875048637390137
    5. 'val' → logprob: -15.875048637390137
    6. '(vals' → logprob: -18.250049591064453
    7. ',val' → logprob: -18.500049591064453
    8. ' val' → logprob: -18.875049591064453
    9. '(valor' → logprob: -19.000049591064453
    10. '   ' → logprob: -19.500049591064453

Token 543: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.896309739408025e-07
    2. ' val' → logprob: -14.125000953674316
    3. '(val' → logprob: -19.25
    4. '	val' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. ',val' → logprob: -20.75
    7. '[val' → logprob: -20.75
    8. '_val' → logprob: -21.0
    9. '   ' → logprob: -22.125
    10. '.val' → logprob: -22.125

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012118533049942926
    2. 'val' → logprob: -9.250121116638184
    3. '[val' → logprob: -11.125121116638184
    4. '(val' → logprob: -12.375121116638184
    5. ',val' → logprob: -12.500121116638184
    6. '_val' → logprob: -14.125121116638184
    7. ' val' → logprob: -14.250121116638184
    8. ')' → logprob: -15.250121116638184
    9. ',' → logprob: -15.625121116638184
    10. '```' → logprob: -16.0001220703125

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011236425780225545
    2. ',val' → logprob: -9.250112533569336
    3. ' ,' → logprob: -11.375112533569336
    4. ',
' → logprob: -12.375112533569336
    5. ')' → logprob: -15.125112533569336
    6. '<|end|>' → logprob: -16.625112533569336
    7. 'val' → logprob: -17.125112533569336
    8. ' val' → logprob: -17.750112533569336
    9. '   ' → logprob: -18.625112533569336
    10. '[val' → logprob: -18.875112533569336

Token 546: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001234428636962548
    2. ' val' → logprob: -9.000123023986816
    3. '(val' → logprob: -18.250123977661133
    4. '	val' → logprob: -20.250123977661133
    5. '[val' → logprob: -20.750123977661133
    6. '_val' → logprob: -21.250123977661133
    7. ')' → logprob: -21.375123977661133
    8. '
' → logprob: -21.750123977661133
    9. ' ' → logprob: -22.000123977661133
    10. '   ' → logprob: -22.875123977661133

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -16.75
    4. '_hash' → logprob: -17.25
    5. '[' → logprob: -17.5
    6. '   ' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. 'hash' → logprob: -18.5
    9. '1' → logprob: -18.625
    10. '_' → logprob: -18.875

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.250007629394531
    3. '<|end|>' → logprob: -13.000007629394531
    4. ')return' → logprob: -15.750007629394531
    5. '   ' → logprob: -15.875007629394531
    6. ' )' → logprob: -16.00000762939453
    7. '}' → logprob: -16.00000762939453
    8. '),' → logprob: -18.12500762939453
    9. '       ' → logprob: -18.12500762939453
    10. ')#' → logprob: -18.25000762939453

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023500765673816204
    2. '```' → logprob: -6.502349853515625
    3. '<|end|>' → logprob: -7.752349853515625
    4. 'def' → logprob: -8.127349853515625
    5. ' def' → logprob: -10.127349853515625
    6. '    
' → logprob: -10.502349853515625
    7. '<|end|>' → logprob: -10.877349853515625
    8. '
' → logprob: -11.252349853515625
    9. '	def' → logprob: -12.252349853515625
    10. ',' → logprob: -12.502349853515625

Token 550: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25417712330818176
    2. '   ' → logprob: -1.5041770935058594
    3. ' def' → logprob: -6.629177093505859
    4. '```' → logprob: -7.004177093505859
    5. '    
' → logprob: -12.12917709350586
    6. '	def' → logprob: -12.12917709350586
    7. '
' → logprob: -13.00417709350586
    8. '  ' → logprob: -14.25417709350586
    9. '``' → logprob: -14.75417709350586
    10. ' ' → logprob: -14.87917709350586

Token 551: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.2035328596830368
    2. ' push' → logprob: -1.7035328149795532
    3. '_push' → logprob: -6.203532695770264
    4. '_' → logprob: -10.078533172607422
    5. 'prop' → logprob: -10.453533172607422
    6. 'apply' → logprob: -11.578533172607422
    7. ' propagate' → logprob: -11.828533172607422
    8. 'update' → logprob: -12.953533172607422
    9. ' _' → logprob: -13.203533172607422
    10. '	push' → logprob: -13.828533172607422

Token 552: 'down' (ID: 4653)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.6934557505883276e-05
    2. 'down' → logprob: -10.000057220458984
    3. '_down' → logprob: -11.500057220458984
    4. '(' → logprob: -14.250057220458984
    5. '(node' → logprob: -14.875057220458984
    6. 'self' → logprob: -15.500057220458984
    7. ' (' → logprob: -16.250057220458984
    8. '   ' → logprob: -18.125057220458984
    9. '(s' → logprob: -18.375057220458984
    10. 'Down' → logprob: -19.625057220458984

Token 553: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. '(node' → logprob: -16.625
    3. ' (' → logprob: -17.375
    4. '(' → logprob: -18.25
    5. 'self' → logprob: -19.0
    6. '   ' → logprob: -19.0
    7. '       ' → logprob: -21.5
    8. '(s' → logprob: -21.875
    9. ' self' → logprob: -22.125
    10. '(sel' → logprob: -22.75

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ',node' → logprob: -10.500028610229492
    3. ' ,' → logprob: -14.125028610229492
    4. 'self' → logprob: -18.625028610229492
    5. '):' → logprob: -19.500028610229492
    6. 'node' → logprob: -19.750028610229492
    7. ',
' → logprob: -20.750028610229492
    8. '):
' → logprob: -21.000028610229492
    9. '，' → logprob: -21.625028610229492
    10. '(node' → logprob: -21.625028610229492

Token 555: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.000352266215486452
    2. ' node' → logprob: -8.000351905822754
    3. 'self' → logprob: -11.000351905822754
    4. '   ' → logprob: -16.50035285949707
    5. '	node' → logprob: -18.00035285949707
    6. ',node' → logprob: -18.12535285949707
    7. 'Node' → logprob: -18.62535285949707
    8. '(node' → logprob: -18.75035285949707
    9. ' ' → logprob: -18.87535285949707
    10. ' self' → logprob: -19.50035285949707

Token 556: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31345462799072266
    2. '):' → logprob: -1.3134546279907227
    3. '):
' → logprob: -9.438454627990723
    4. '   ' → logprob: -9.688454627990723
    5. ',' → logprob: -10.438454627990723
    6. ':' → logprob: -11.688454627990723
    7. ')' → logprob: -12.188454627990723
    8. '       ' → logprob: -12.438454627990723
    9. '):

' → logprob: -13.563454627990723
    10. '():
' → logprob: -14.188454627990723

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5401071906089783
    2. '   ' → logprob: -1.290107250213623
    3. ' if' → logprob: -2.290107250213623
    4. 'if' → logprob: -3.290107250213623
    5. '	if' → logprob: -5.665107250213623
    6. '```' → logprob: -10.040106773376465
    7. ',' → logprob: -10.790106773376465
    8. '	   ' → logprob: -11.540106773376465
    9. '	' → logprob: -11.540106773376465
    10. '   ' → logprob: -12.040106773376465

Token 558: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.803360495017841e-05
    2. ' if' → logprob: -9.500078201293945
    3. '       ' → logprob: -13.000078201293945
    4. '   ' → logprob: -14.000078201293945
    5. '	if' → logprob: -18.250078201293945
    6. '```' → logprob: -20.500078201293945
    7. 'for' → logprob: -21.750078201293945
    8. 'If' → logprob: -22.125078201293945
    9. '           ' → logprob: -23.125078201293945
    10. '
' → logprob: -24.750078201293945

Token 559: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07889044284820557
    2. ' node' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.578890800476074
    4. '(node' → logprob: -16.703889846801758
    5. '	node' → logprob: -16.703889846801758
    6. ' ' → logprob: -17.953889846801758
    7. '       ' → logprob: -19.703889846801758
    8. 'not' → logprob: -20.453889846801758
    9. '[node' → logprob: -20.453889846801758
    10. '=node' → logprob: -20.703889846801758

Token 560: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.37500286102295
    3. ' .' → logprob: -13.75000286102295
    4. '.has' → logprob: -15.62500286102295
    5. '.LAZY' → logprob: -17.375003814697266
    6. '.left' → logprob: -17.625003814697266
    7. ').' → logprob: -17.875003814697266
    8. '>.' → logprob: -17.875003814697266
    9. 'lazy' → logprob: -18.375003814697266
    10. '\.' → logprob: -18.625003814697266

Token 561: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005237548612058163
    2. 'is' → logprob: -5.255237579345703
    3. '[' → logprob: -13.755237579345703
    4. '	is' → logprob: -14.130237579345703
    5. ')' → logprob: -14.630237579345703
    6. '!=' → logprob: -14.755237579345703
    7. ' ' → logprob: -15.505237579345703
    8. ':' → logprob: -15.880237579345703
    9. '!==' → logprob: -16.005237579345703
    10. ' )' → logprob: -16.255237579345703

Token 562: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14270232617855072
    2. ' not' → logprob: -2.017702341079712
    3. 'None' → logprob: -10.767702102661133
    4. '	not' → logprob: -13.017702102661133
    5. 'Not' → logprob: -13.517702102661133
    6. 'n' → logprob: -14.267702102661133
    7. '!' → logprob: -14.392702102661133
    8. ' None' → logprob: -14.892702102661133
    9. 'none' → logprob: -15.767702102661133
    10. 'n't' → logprob: -15.767702102661133

Token 563: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.165027217415627e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -16.62502098083496
    4. 'none' → logprob: -17.25002098083496
    5. '_None' → logprob: -17.87502098083496
    6. '=None' → logprob: -18.75002098083496
    7. '   ' → logprob: -20.12502098083496
    8. '#' → logprob: -20.50002098083496
    9. '_none' → logprob: -20.75002098083496
    10. ',None' → logprob: -20.87502098083496

Token 564: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6935410499572754
    2. ':
' → logprob: -0.6935410499572754
    3. '):
' → logprob: -8.443540573120117
    4. '       ' → logprob: -9.443540573120117
    5. ' and' → logprob: -10.193540573120117
    6. ',' → logprob: -10.443540573120117
    7. '():
' → logprob: -11.818540573120117
    8. ':

' → logprob: -12.193540573120117
    9. '           ' → logprob: -12.318540573120117
    10. '<|end|>' → logprob: -12.443540573120117

Token 565: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3869277238845825
    2. ' node' → logprob: -1.1369277238845825
    3. '(node' → logprob: -9.886927604675293
    4. ' (' → logprob: -13.136927604675293
    5. ' ' → logprob: -13.636927604675293
    6. '	node' → logprob: -14.011927604675293
    7. '   ' → logprob: -14.136927604675293
    8. 'not' → logprob: -14.761927604675293
    9. '[node' → logprob: -15.261927604675293
    10. ' not' → logprob: -15.386927604675293

Token 566: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.011070577427744865
    2. '.l' → logprob: -4.511070728302002
    3. '.right' → logprob: -11.761070251464844
    4. '.lazy' → logprob: -12.511070251464844
    5. '.' → logprob: -13.136070251464844
    6. '.has' → logprob: -13.261070251464844
    7. '!=' → logprob: -13.261070251464844
    8. ' .' → logprob: -13.386070251464844
    9. ' !=' → logprob: -13.386070251464844
    10. 'left' → logprob: -14.261070251464844

Token 567: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0061134095303714275
    2. 'is' → logprob: -5.881113529205322
    3. ' and' → logprob: -6.631113529205322
    4. 'and' → logprob: -6.756113529205322
    5. ':' → logprob: -7.506113529205322
    6. '<|end|>' → logprob: -8.631113052368164
    7. ':
' → logprob: -10.381113052368164
    8. '   ' → logprob: -11.131113052368164
    9. '	is' → logprob: -11.631113052368164
    10. ' ' → logprob: -11.631113052368164

Token 568: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30264192819595337
    2. ':
' → logprob: -1.9276418685913086
    3. ':' → logprob: -2.1776418685913086
    4. ',' → logprob: -6.927641868591309
    5. '):
' → logprob: -7.552641868591309
    6. '           ' → logprob: -8.052641868591309
    7. '```' → logprob: -8.802641868591309
    8. '<|end|>' → logprob: -9.802641868591309
    9. ' and' → logprob: -10.052641868591309
    10. '	       ' → logprob: -10.177641868591309

Token 569: ' c' (ID: 274)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.14169564843177795
    2. 'c' (adapté à ' c') → logprob: -2.266695737838745
    3. '           ' → logprob: -4.766695499420166
    4. 'char' → logprob: -4.891695499420166
    5. 'val' → logprob: -5.516695499420166
    6. ' node' → logprob: -5.641695499420166
    7. 'ch' → logprob: -6.516695499420166
    8. '       ' → logprob: -6.766695499420166
    9. ' c' → logprob: -7.391695499420166
    10. 'lazy' → logprob: -7.641695499420166

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0387943759560585
    2. '=' → logprob: -3.2887942790985107
    3. '_val' → logprob: -7.41379451751709
    4. '=node' → logprob: -9.41379451751709
    5. 'val' → logprob: -10.41379451751709
    6. '_char' → logprob: -10.91379451751709
    7. 'c' → logprob: -11.41379451751709
    8. ',' → logprob: -13.03879451751709
    9. '_hash' → logprob: -13.28879451751709
    10. '_code' → logprob: -13.53879451751709

Token 571: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00408801669254899
    2. ' node' → logprob: -5.504087924957275
    3. 'chr' → logprob: -11.754088401794434
    4. 'ord' → logprob: -13.879088401794434
    5. '	node' → logprob: -15.254088401794434
    6. ' ' → logprob: -15.754088401794434
    7. '   ' → logprob: -15.754088401794434
    8. ' chr' → logprob: -16.004087448120117
    9. ' ord' → logprob: -17.129087448120117
    10. '(node' → logprob: -17.379087448120117

Token 572: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -2.6656825866666622e-05
    2. '.' → logprob: -10.62502670288086
    3. 'lazy' → logprob: -14.00002670288086
    4. ' .' → logprob: -14.12502670288086
    5. '.l' → logprob: -15.75002670288086
    6. '.left' → logprob: -15.75002670288086
    7. '.LAZY' → logprob: -16.62502670288086
    8. '\.' → logprob: -17.00002670288086
    9. '_lazy' → logprob: -17.50002670288086
    10. 'Lazy' → logprob: -17.62502670288086

Token 573: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01277567446231842
    2. '
' → logprob: -4.387775897979736
    3. '            
' → logprob: -8.637775421142578
    4. ',' → logprob: -10.262775421142578
    5. '  
' → logprob: -11.387775421142578
    6. 'node' → logprob: -11.762775421142578
    7. '
' → logprob: -12.387775421142578
    8. '       ' → logprob: -12.512775421142578
    9. ' 
' → logprob: -12.637775421142578
    10. '          ' → logprob: -12.637775421142578

Token 574: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012197038158774376
    2. '
' → logprob: -4.512197017669678
    3. 'node' → logprob: -7.137197017669678
    4. ' node' → logprob: -9.012197494506836
    5. 'val' → logprob: -10.137197494506836
    6. '            
' → logprob: -10.262197494506836
    7. ',' → logprob: -10.512197494506836
    8. '       ' → logprob: -10.512197494506836
    9. 'token' → logprob: -10.637197494506836
    10. '```' → logprob: -11.262197494506836

Token 575: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0023578100372105837
    2. 'val' → logprob: -7.1273579597473145
    3. 'left' → logprob: -7.5023579597473145
    4. 'hash' → logprob: -7.7523579597473145
    5. '           ' → logprob: -8.502357482910156
    6. 'for' → logprob: -9.502357482910156
    7. ' node' → logprob: -9.752357482910156
    8. 'self' → logprob: -10.127357482910156
    9. '       ' → logprob: -10.252357482910156
    10. 'cl' → logprob: -10.252357482910156

Token 576: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.125007629394531
    3. '.right' → logprob: -13.875007629394531
    4. 'left' → logprob: -15.375007629394531
    5. '.l' → logprob: -16.37500762939453
    6. '.lazy' → logprob: -16.37500762939453
    7. ' .' → logprob: -16.87500762939453
    8. '.node' → logprob: -17.00000762939453
    9. '.push' → logprob: -17.12500762939453
    10. '.next' → logprob: -17.37500762939453

Token 577: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -0.029769811779260635
    2. '.hash' → logprob: -3.5297698974609375
    3. 'lazy' → logprob: -11.654769897460938
    4. '.' → logprob: -12.029769897460938
    5. ' .' → logprob: -13.529769897460938
    6. ').' → logprob: -13.779769897460938
    7. 'hash' → logprob: -14.654769897460938
    8. '\.' → logprob: -15.154769897460938
    9. '.l' → logprob: -15.279769897460938
    10. '].' → logprob: -16.029769897460938

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868813216686249
    2. '=' → logprob: -1.1368813514709473
    3. '=c' → logprob: -11.511880874633789
    4. ' ' → logprob: -16.26188087463379
    5. 'c' → logprob: -16.38688087463379
    6. '＝' → logprob: -16.51188087463379
    7. ',' → logprob: -17.26188087463379
    8. '=
' → logprob: -17.26188087463379
    9. ' c' → logprob: -18.01188087463379
    10. ' =
' → logprob: -18.76188087463379

Token 579: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.611323624383658e-05
    2. ' c' → logprob: -9.625065803527832
    3. 'node' → logprob: -18.87506675720215
    4. '	c' → logprob: -19.12506675720215
    5. '   ' → logprob: -19.62506675720215
    6. ')c' → logprob: -20.12506675720215
    7. ' ' → logprob: -21.37506675720215
    8. 'cation' → logprob: -21.87506675720215
    9. '
' → logprob: -22.37506675720215
    10. '​' → logprob: -22.37506675720215

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05544712394475937
    2. '
' → logprob: -2.9304471015930176
    3. 'node' → logprob: -7.805447101593018
    4. '
' → logprob: -10.555447578430176
    5. '   ' → logprob: -10.680447578430176
    6. '       ' → logprob: -10.680447578430176
    7. '            
' → logprob: -10.680447578430176
    8. ' 
' → logprob: -11.555447578430176
    9. '  
' → logprob: -11.930447578430176
    10. ' node' → logprob: -11.930447578430176

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01248222216963768
    2. 'node' → logprob: -4.512482166290283
    3. '
' → logprob: -6.762482166290283
    4. ' node' → logprob: -9.012482643127441
    5. 'c' → logprob: -10.387482643127441
    6. '       ' → logprob: -10.387482643127441
    7. 'token' → logprob: -10.762482643127441
    8. 'val' → logprob: -10.887482643127441
    9. '```' → logprob: -10.887482643127441
    10. '   ' → logprob: -11.637482643127441

Token 582: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0011361661599949002
    2. '           ' → logprob: -7.626136302947998
    3. 'val' → logprob: -8.12613582611084
    4. 'left' → logprob: -8.37613582611084
    5. ' node' → logprob: -10.00113582611084
    6. 'c' → logprob: -10.75113582611084
    7. 'char' → logprob: -10.87613582611084
    8. 'hash' → logprob: -11.25113582611084
    9. 'len' → logprob: -12.12613582611084
    10. 'length' → logprob: -12.25113582611084

Token 583: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.001821673708036542
    2. '.right' → logprob: -6.376821517944336
    3. 'left' → logprob: -9.126821517944336
    4. '.' → logprob: -11.876821517944336
    5. '[left' → logprob: -13.876821517944336
    6. '.length' → logprob: -14.376821517944336
    7. '           ' → logprob: -14.501821517944336
    8. '.hash' → logprob: -14.751821517944336
    9. ' left' → logprob: -15.001821517944336
    10. ' .' → logprob: -16.001821517944336

Token 584: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.750003814697266
    3. 'lazy' → logprob: -15.375003814697266
    4. ' .' → logprob: -16.125003814697266
    5. '_lazy' → logprob: -17.875003814697266
    6. '.l' → logprob: -18.250003814697266
    7. ').' → logprob: -18.375003814697266
    8. '.LAZY' → logprob: -18.500003814697266
    9. 'Lazy' → logprob: -18.750003814697266
    10. '.left' → logprob: -19.000003814697266

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687315583229065
    2. '=' → logprob: -1.1368731260299683
    3. '=c' → logprob: -13.136873245239258
    4. 'c' → logprob: -16.261873245239258
    5. ' ' → logprob: -16.386873245239258
    6. '<|end|>' → logprob: -18.386873245239258
    7. '=
' → logprob: -18.511873245239258
    8. '＝' → logprob: -18.511873245239258
    9. ' c' → logprob: -18.886873245239258
    10. ' =
' → logprob: -19.136873245239258

Token 586: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010328111238777637
    2. ' c' → logprob: -6.876032829284668
    3. 'node' → logprob: -18.00103187561035
    4. '	c' → logprob: -18.12603187561035
    5. ' ' → logprob: -19.62603187561035
    6. '   ' → logprob: -19.87603187561035
    7. ')c' → logprob: -20.62603187561035
    8. '           ' → logprob: -20.87603187561035
    9. '_c' → logprob: -20.87603187561035
    10. 'cation' → logprob: -21.12603187561035

Token 587: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030175182968378067
    2. '
' → logprob: -3.53017520904541
    3. 'node' → logprob: -7.90517520904541
    4. '```' → logprob: -10.65517520904541
    5. '       ' → logprob: -11.40517520904541
    6. ' node' → logprob: -11.90517520904541
    7. ',' → logprob: -12.40517520904541
    8. '   ' → logprob: -12.78017520904541
    9. '
' → logprob: -13.28017520904541
    10. '            
' → logprob: -14.03017520904541

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023668646812438965
    2. 'node' → logprob: -3.7736687660217285
    3. '
' → logprob: -8.52366828918457
    4. ' node' → logprob: -9.27366828918457
    5. '```' → logprob: -9.64866828918457
    6. '       ' → logprob: -10.27366828918457
    7. 'token' → logprob: -11.39866828918457
    8. 'val' → logprob: -12.39866828918457
    9. '   ' → logprob: -12.89866828918457
    10. 'length' → logprob: -12.89866828918457

Token 589: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0013415542198345065
    2. 'val' → logprob: -7.126341342926025
    3. '           ' → logprob: -8.501341819763184
    4. 'c' → logprob: -9.251341819763184
    5. 'hash' → logprob: -9.626341819763184
    6. 'char' → logprob: -9.876341819763184
    7. 'left' → logprob: -10.751341819763184
    8. 'h' → logprob: -11.001341819763184
    9. 'hc' → logprob: -11.126341819763184
    10. '       ' → logprob: -11.251341819763184

Token 590: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.991464786347933e-05
    2. 'left' → logprob: -10.375060081481934
    3. '.lazy' → logprob: -11.250060081481934
    4. '.hash' → logprob: -11.500060081481934
    5. '.' → logprob: -12.875060081481934
    6. '.node' → logprob: -14.375060081481934
    7. '.right' → logprob: -14.375060081481934
    8. '.push' → logprob: -15.250060081481934
    9. '[left' → logprob: -15.250060081481934
    10. '.lock' → logprob: -15.750060081481934

Token 591: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -3.2020991056924686e-05
    2. '.length' → logprob: -10.625032424926758
    3. '.lazy' → logprob: -12.250032424926758
    4. '.' → logprob: -13.750032424926758
    5. 'hash' → logprob: -14.000032424926758
    6. ' .' → logprob: -14.250032424926758
    7. ').' → logprob: -16.125032424926758
    8. '	hash' → logprob: -17.000032424926758
    9. '.c' → logprob: -17.250032424926758
    10. '.len' → logprob: -17.250032424926758

Token 592: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0001439459010725841
    2. 'val' → logprob: -8.875144004821777
    3. '=' → logprob: -13.375144004821777
    4. '_VAL' → logprob: -14.500144004821777
    5. '1' → logprob: -14.750144004821777
    6. '_vals' → logprob: -15.750144004821777
    7. ',val' → logprob: -15.750144004821777
    8. ' =' → logprob: -15.875144004821777
    9. 'Val' → logprob: -16.00014305114746
    10. '```' → logprob: -16.12514305114746

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693430483341217
    2. '=' → logprob: -2.126934289932251
    3. ',' → logprob: -12.626934051513672
    4. '=self' → logprob: -12.751934051513672
    5. '=node' → logprob: -16.751934051513672
    6. '＝' → logprob: -17.001934051513672
    7. '=
' → logprob: -17.126934051513672
    8. '=c' → logprob: -18.251934051513672
    9. '=cut' → logprob: -19.251934051513672
    10. ' ' → logprob: -19.251934051513672

Token 594: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004894073354080319
    2. ' self' → logprob: -7.625489234924316
    3. '(self' → logprob: -13.750489234924316
    4. '=self' → logprob: -16.125490188598633
    5. 'c' → logprob: -16.375490188598633
    6. 'node' → logprob: -17.250490188598633
    7. '	self' → logprob: -18.250490188598633
    8. '`' → logprob: -18.625490188598633
    9. 'Self' → logprob: -18.875490188598633
    10. '[self' → logprob: -19.000490188598633

Token 595: '.calc' (ID: 83158)
  Prédit: '.calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.0002615742268972099
    2. 'calc' → logprob: -8.250261306762695
    3. '.' → logprob: -15.750261306762695
    4. '.calculate' → logprob: -16.375261306762695
    5. ' calc' → logprob: -17.000261306762695
    6. ' .' → logprob: -17.250261306762695
    7. '.cal' → logprob: -17.500261306762695
    8. '.c' → logprob: -17.875261306762695
    9. '   ' → logprob: -18.250261306762695
    10. '(calc' → logprob: -18.375261306762695

Token 596: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -4.320199877838604e-07
    2. 'hash' → logprob: -14.75
    3. '(c' → logprob: -18.375
    4. '_HASH' → logprob: -18.5
    5. '_token' → logprob: -19.375
    6. '(hash' → logprob: -19.375
    7. '_cache' → logprob: -19.875
    8. '_' → logprob: -20.0
    9. '_val' → logprob: -20.0
    10. '_char' → logprob: -20.5

Token 597: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00019197762594558299
    2. '(chr' → logprob: -8.625191688537598
    3. '(' → logprob: -12.000191688537598
    4. 'c' → logprob: -12.125191688537598
    5. '(
' → logprob: -15.000191688537598
    6. 'chr' → logprob: -15.250191688537598
    7. '(node' → logprob: -15.875191688537598
    8. '(ord' → logprob: -16.250192642211914
    9. '((' → logprob: -17.375192642211914
    10. ')c' → logprob: -17.625192642211914

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004138003569096327
    2. ',node' → logprob: -5.504137992858887
    3. 'node' → logprob: -10.379137992858887
    4. '(node' → logprob: -10.879137992858887
    5. ' ,' → logprob: -12.129137992858887
    6. '[node' → logprob: -13.004137992858887
    7. ' node' → logprob: -13.629137992858887
    8. '',' → logprob: -15.004137992858887
    9. '=node' → logprob: -15.879137992858887
    10. ',
' → logprob: -16.004138946533203

Token 599: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0001584850688232109
    2. ' node' → logprob: -8.750158309936523
    3. '(node' → logprob: -17.375158309936523
    4. '           ' → logprob: -20.000158309936523
    5. '=node' → logprob: -20.750158309936523
    6. '	node' → logprob: -20.875158309936523
    7. '
' → logprob: -21.500158309936523
    8. '   ' → logprob: -21.500158309936523
    9. ')' → logprob: -21.625158309936523
    10. '[node' → logprob: -22.000158309936523

Token 600: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.79811754100956e-05
    2. 'left' → logprob: -10.250038146972656
    3. '.' → logprob: -13.125038146972656
    4. '.right' → logprob: -15.750038146972656
    5. '.length' → logprob: -15.875038146972656
    6. '[left' → logprob: -16.875038146972656
    7. '.node' → logprob: -17.250038146972656
    8. ' .' → logprob: -17.375038146972656
    9. ' left' → logprob: -17.750038146972656
    10. '```' → logprob: -18.625038146972656

Token 601: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: 0.0
    2. 'length' → logprob: -18.125
    3. '.left' → logprob: -18.875
    4. '.lazy' → logprob: -19.125
    5. '.' → logprob: -19.375
    6. '.size' → logprob: -20.25
    7. '.len' → logprob: -20.875
    8. ' .' → logprob: -21.75
    9. ').' → logprob: -21.875
    10. '.LENGTH' → logprob: -22.0

Token 602: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0141702089458704
    2. ')
' → logprob: -4.264170169830322
    3. '       ' → logprob: -12.63917064666748
    4. '           ' → logprob: -13.88917064666748
    5. ' )' → logprob: -13.88917064666748
    6. ')
' → logprob: -14.13917064666748
    7. '   ' → logprob: -15.01417064666748
    8. ')

' → logprob: -15.01417064666748
    9. ' ' → logprob: -16.014169692993164
    10. ' )
' → logprob: -16.639169692993164

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003179465711582452
    2. '
' → logprob: -9.000317573547363
    3. 'node' → logprob: -9.375317573547363
    4. '```' → logprob: -10.000317573547363
    5. '       ' → logprob: -10.125317573547363
    6. '   ' → logprob: -11.375317573547363
    7. '          ' → logprob: -12.500317573547363
    8. '``' → logprob: -12.875317573547363
    9. ' node' → logprob: -13.125317573547363
    10. '               ' → logprob: -14.000317573547363

Token 604: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0002619318547658622
    2. '           ' → logprob: -8.500262260437012
    3. ' node' → logprob: -9.750262260437012
    4. '       ' → logprob: -16.750261306762695
    5. '(node' → logprob: -17.375261306762695
    6. '	node' → logprob: -17.625261306762695
    7. '   ' → logprob: -17.875261306762695
    8. '```' → logprob: -18.625261306762695
    9. '[node' → logprob: -18.875261306762695
    10. '.node' → logprob: -19.250261306762695

Token 605: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.3080716346157715e-05
    2. 'right' → logprob: -10.875022888183594
    3. '.left' → logprob: -12.500022888183594
    4. '.' → logprob: -14.750022888183594
    5. '.hash' → logprob: -17.500022888183594
    6. '	right' → logprob: -17.750022888183594
    7. ' .' → logprob: -17.875022888183594
    8. 'Right' → logprob: -18.125022888183594
    9. '[right' → logprob: -18.375022888183594
    10. '```' → logprob: -18.500022888183594

Token 606: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -0.00010151672904612496
    2. '.lazy' → logprob: -9.250101089477539
    3. 'hash' → logprob: -12.625101089477539
    4. '.' → logprob: -13.625101089477539
    5. ' .' → logprob: -14.625101089477539
    6. '	hash' → logprob: -15.250101089477539
    7. ').' → logprob: -17.00010108947754
    8. '_hash' → logprob: -17.12510108947754
    9. ' hash' → logprob: -18.00010108947754
    10. '.heap' → logprob: -18.00010108947754

Token 607: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.630610641877865e-06
    2. 'val' → logprob: -12.000006675720215
    3. '_VAL' → logprob: -16.3750057220459
    4. '=' → logprob: -16.5000057220459
    5. ' =' → logprob: -16.6250057220459
    6. '.val' → logprob: -17.0000057220459
    7. 'Val' → logprob: -17.5000057220459
    8. '	val' → logprob: -17.7500057220459
    9. '[val' → logprob: -18.5000057220459
    10. '_' → logprob: -19.7500057220459

Token 608: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022412478923798
    2. '=' → logprob: -1.9102240800857544
    3. '=self' → logprob: -19.41022491455078
    4. '＝' → logprob: -19.53522491455078
    5. ')' → logprob: -19.91022491455078
    6. ',' → logprob: -20.53522491455078
    7. '[' → logprob: -21.16022491455078
    8. '=
' → logprob: -21.16022491455078
    9. ' ' → logprob: -21.41022491455078
    10. ' =
' → logprob: -21.41022491455078

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067167943343520164
    2. ' self' → logprob: -5.006716728210449
    3. '(self' → logprob: -14.00671672821045
    4. '=self' → logprob: -15.50671672821045
    5. '           ' → logprob: -15.88171672821045
    6. '[self' → logprob: -16.131717681884766
    7. '	self' → logprob: -16.631717681884766
    8. '   ' → logprob: -19.006717681884766
    9. '       ' → logprob: -19.131717681884766
    10. 'Self' → logprob: -19.506717681884766

Token 610: '.calc' (ID: 83158)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00023488728038500994
    2. '.calc' → logprob: -8.500234603881836
    3. 'self' → logprob: -10.500234603881836
    4. ' calc' → logprob: -12.500234603881836
    5. '(calc' → logprob: -15.875234603881836
    6. '   ' → logprob: -18.000234603881836
    7. 'cal' → logprob: -18.500234603881836
    8. '```' → logprob: -19.375234603881836
    9. '_calc' → logprob: -19.750234603881836
    10. '
' → logprob: -19.875234603881836

Token 611: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.664371848164592e-05
    2. 'hash' → logprob: -11.500016212463379
    3. '_val' → logprob: -12.125016212463379
    4. 'Hash' → logprob: -14.500016212463379
    5. '_HASH' → logprob: -15.500016212463379
    6. 'val' → logprob: -16.000017166137695
    7. '_calc' → logprob: -16.375017166137695
    8. '_push' → logprob: -17.125017166137695
    9. '```' → logprob: -17.500017166137695
    10. '_lazy' → logprob: -17.625017166137695

Token 612: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.625001907348633
    3. '(
' → logprob: -14.875001907348633
    4. 'c' → logprob: -18.125001907348633
    5. ')c' → logprob: -18.125001907348633
    6. ' (' → logprob: -18.750001907348633
    7. ')' → logprob: -20.000001907348633
    8. '```' → logprob: -20.000001907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. '<c' → logprob: -20.125001907348633

Token 613: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2264212667942047
    2. ',' → logprob: -1.6014212369918823
    3. ',c' → logprob: -7.601421356201172
    4. '(' → logprob: -7.976421356201172
    5. 'c' → logprob: -9.226421356201172
    6. ' (' → logprob: -10.851421356201172
    7. ' ,' → logprob: -10.976421356201172
    8. ')' → logprob: -11.226421356201172
    9. ' c' → logprob: -11.351421356201172
    10. '),' → logprob: -13.851421356201172

Token 614: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.004078878089785576
    2. ' node' → logprob: -5.5040788650512695
    3. '(node' → logprob: -15.12907886505127
    4. 'c' → logprob: -15.37907886505127
    5. ' ' → logprob: -18.004079818725586
    6. '	node' → logprob: -19.879079818725586
    7. '  ' → logprob: -19.879079818725586
    8. '[node' → logprob: -20.254079818725586
    9. ' c' → logprob: -20.629079818725586
    10. ',node' → logprob: -20.754079818725586

Token 615: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0015146232908591628
    2. '.left' → logprob: -6.501514434814453
    3. '.length' → logprob: -11.626514434814453
    4. 'right' → logprob: -12.626514434814453
    5. '.' → logprob: -17.126514434814453
    6. '.lazy' → logprob: -19.126514434814453
    7. '	right' → logprob: -19.376514434814453
    8. '[right' → logprob: -20.251514434814453
    9. 'left' → logprob: -20.376514434814453
    10. '右' → logprob: -20.626514434814453

Token 616: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0020154789090156555
    2. ',' → logprob: -6.627015590667725
    3. '(node' → logprob: -8.127015113830566
    4. '.left' → logprob: -9.127015113830566
    5. '.right' → logprob: -9.252015113830566
    6. 'length' → logprob: -9.377015113830566
    7. '(length' → logprob: -9.877015113830566
    8. ',length' → logprob: -11.002015113830566
    9. '.' → logprob: -11.752015113830566
    10. ',node' → logprob: -11.752015113830566

Token 617: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016516048344783485
    2. ')
' → logprob: -8.750164985656738
    3. '           ' → logprob: -12.125164985656738
    4. '       ' → logprob: -14.250164985656738
    5. ' )' → logprob: -15.125164985656738
    6. '   ' → logprob: -16.625165939331055
    7. ')

' → logprob: -16.625165939331055
    8. '<|end|>' → logprob: -16.750165939331055
    9. ')return' → logprob: -17.125165939331055
    10. '))' → logprob: -17.625165939331055

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017751421546563506
    2. '```' → logprob: -6.62677526473999
    3. '       ' → logprob: -8.501774787902832
    4. '   ' → logprob: -9.251774787902832
    5. '
' → logprob: -9.501774787902832
    6. 'node' → logprob: -9.751774787902832
    7. '``' → logprob: -11.251774787902832
    8. '          ' → logprob: -13.376774787902832
    9. '               ' → logprob: -14.001774787902832
    10. ' node' → logprob: -14.376774787902832

Token 619: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -1.0206720617134124e-05
    2. '           ' → logprob: -11.75001049041748
    3. ' node' → logprob: -13.00001049041748
    4. '
' → logprob: -18.750009536743164
    5. '	node' → logprob: -20.000009536743164
    6. '       ' → logprob: -20.500009536743164
    7. '```' → logprob: -20.875009536743164
    8. '   ' → logprob: -21.000009536743164
    9. '            
' → logprob: -21.750009536743164
    10. '          ' → logprob: -22.875009536743164

Token 620: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -1.6240566083070007e-06
    2. 'lazy' → logprob: -13.500001907348633
    3. '.' → logprob: -16.500001907348633
    4. 'Lazy' → logprob: -18.750001907348633
    5. ').' → logprob: -18.750001907348633
    6. '\.' → logprob: -18.875001907348633
    7. '_lazy' → logprob: -19.000001907348633
    8. ' lazy' → logprob: -19.000001907348633
    9. '.left' → logprob: -19.250001907348633
    10. '.LAZY' → logprob: -19.625001907348633

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324722334742546
    2. ' =' → logprob: -3.773247241973877
    3. '=None' → logprob: -13.273246765136719
    4. 'None' → logprob: -18.89824676513672
    5. '=
' → logprob: -18.89824676513672
    6. '＝' → logprob: -19.14824676513672
    7. '=

' → logprob: -19.64824676513672
    8. ' ' → logprob: -19.77324676513672
    9. '==' → logprob: -20.89824676513672
    10. ' None' → logprob: -21.02324676513672

Token 622: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.704273118884885e-07
    2. ' None' → logprob: -14.375000953674316
    3. '=None' → logprob: -18.125
    4. '(None' → logprob: -18.75
    5. 'none' → logprob: -19.25
    6. '_None' → logprob: -20.0
    7. ',None' → logprob: -20.0
    8. '   ' → logprob: -20.875
    9. '_none' → logprob: -22.25
    10. '.None' → logprob: -23.625

Token 623: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08636993914842606
    2. 'def' → logprob: -3.0863699913024902
    3. '<|end|>' → logprob: -3.9613699913024902
    4. ' def' → logprob: -4.58636999130249
    5. '	def' → logprob: -5.83636999130249
    6. '```' → logprob: -6.33636999130249
    7. '    
' → logprob: -6.83636999130249
    8. '<|end|>' → logprob: -8.336369514465332
    9. ')' → logprob: -8.461369514465332
    10. ' 
' → logprob: -8.461369514465332

Token 625: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5845068097114563
    2. 'def' (adapté à ' def') → logprob: -0.8345068097114563
    3. ' def' → logprob: -4.834506988525391
    4. '	def' → logprob: -8.08450698852539
    5. '    
' → logprob: -9.33450698852539
    6. '```' → logprob: -9.83450698852539
    7. '
' → logprob: -10.45950698852539
    8. '  ' → logprob: -10.58450698852539
    9. '<|end|>' → logprob: -10.70950698852539
    10. ' ' → logprob: -11.20950698852539

Token 626: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.014976255595684052
    2. 'push' → logprob: -4.2649760246276855
    3. '_update' → logprob: -7.6399760246276855
    4. ' update' → logprob: -8.264976501464844
    5. '_push' → logprob: -10.639976501464844
    6. 'range' → logprob: -11.014976501464844
    7. ' push' → logprob: -11.639976501464844
    8. 'apply' → logprob: -11.639976501464844
    9. 'assign' → logprob: -12.264976501464844
    10. '_' → logprob: -12.264976501464844

Token 627: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.62501049041748
    3. 'self' → logprob: -14.37501049041748
    4. '(node' → logprob: -15.00001049041748
    5. ' (' → logprob: -16.625009536743164
    6. '   ' → logprob: -17.625009536743164
    7. '(
' → logprob: -17.750009536743164
    8. '(s' → logprob: -18.250009536743164
    9. 'def' → logprob: -18.500009536743164
    10. '_(' → logprob: -19.625009536743164

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.837811088189483e-05
    2. ',node' → logprob: -10.000068664550781
    3. 'self' → logprob: -10.750068664550781
    4. ' ,' → logprob: -14.625068664550781
    5. 'node' → logprob: -14.750068664550781
    6. ',self' → logprob: -15.375068664550781
    7. '(self' → logprob: -15.750068664550781
    8. '(node' → logprob: -16.87506866455078
    9. ' self' → logprob: -17.00006866455078
    10. '_node' → logprob: -17.25006866455078

Token 629: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.009644527919590473
    2. 'self' → logprob: -4.759644508361816
    3. ' node' → logprob: -6.884644508361816
    4. ' self' → logprob: -12.259644508361816
    5. '   ' → logprob: -15.009644508361816
    6. '(node' → logprob: -15.009644508361816
    7. '	node' → logprob: -15.259644508361816
    8. ',node' → logprob: -15.634644508361816
    9. 'root' → logprob: -16.384645462036133
    10. '.node' → logprob: -16.884645462036133

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',node' → logprob: -13.000003814697266
    3. ' ,' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '       ' → logprob: -16.500003814697266
    6. 'self' → logprob: -17.125003814697266
    7. ',n' → logprob: -18.000003814697266
    8. ',l' → logprob: -19.500003814697266
    9. '(node' → logprob: -19.875003814697266
    10. ',
' → logprob: -20.125003814697266

Token 631: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015784210991114378
    2. 'ql' → logprob: -6.751578330993652
    3. 'ul' → logprob: -8.126578330993652
    4. 'q' → logprob: -9.876578330993652
    5. ' l' → logprob: -10.126578330993652
    6. 'u' → logprob: -11.501578330993652
    7. 'L' → logprob: -12.501578330993652
    8. 'start' → logprob: -12.626578330993652
    9. 'idx' → logprob: -13.751578330993652
    10. '   ' → logprob: -14.001578330993652

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ',r' → logprob: -12.000007629394531
    3. ' ,' → logprob: -13.375007629394531
    4. ',node' → logprob: -18.25000762939453
    5. ',n' → logprob: -18.75000762939453
    6. 'r' → logprob: -19.37500762939453
    7. ',right' → logprob: -19.75000762939453
    8. '   ' → logprob: -20.50000762939453
    9. ',l' → logprob: -20.62500762939453
    10. ',int' → logprob: -20.75000762939453

Token 633: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.625261306762695
    4. ',' → logprob: -20.375261306762695
    5. '       ' → logprob: -21.125261306762695
    6. '    ' → logprob: -21.625261306762695
    7. '     ' → logprob: -22.000261306762695
    8. '	r' → logprob: -22.250261306762695
    9. ',r' → logprob: -22.250261306762695
    10. '
' → logprob: -22.375261306762695

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. ' ,' → logprob: -14.75
    3. '‌,' → logprob: -18.625
    4. ',
' → logprob: -18.875
    5. '،' → logprob: -19.625
    6. ',node' → logprob: -20.125
    7. '):' → logprob: -20.25
    8. '   ' → logprob: -20.625
    9. '       ' → logprob: -21.0
    10. '‍,' → logprob: -21.25

Token 635: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021058887243270874
    2. ' c' → logprob: -3.8960587978363037
    3. 'val' → logprob: -8.271059036254883
    4. 'char' → logprob: -9.021059036254883
    5. '   ' → logprob: -10.146059036254883
    6. ' val' → logprob: -10.271059036254883
    7. 'value' → logprob: -10.771059036254883
    8. 'ch' → logprob: -11.896059036254883
    9. 'lazy' → logprob: -12.146059036254883
    10. ')' → logprob: -12.146059036254883

Token 636: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011079533956944942
    2. '):
' → logprob: -4.51107931137085
    3. ' ):' → logprob: -10.886079788208008
    4. '):
' → logprob: -12.136079788208008
    5. ')' → logprob: -12.261079788208008
    6. ',' → logprob: -13.136079788208008
    7. ':' → logprob: -14.636079788208008
    8. '   ' → logprob: -15.261079788208008
    9. '):

' → logprob: -15.636079788208008
    10. ' ):
' → logprob: -17.261079788208008

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006648106966167688
    2. '   ' → logprob: -5.131648063659668
    3. '<|end|>' → logprob: -8.506648063659668
    4. ' if' → logprob: -8.756648063659668
    5. '    ' → logprob: -9.881648063659668
    6. '        
' → logprob: -10.006648063659668
    7. '	if' → logprob: -10.256648063659668
    8. ',' → logprob: -10.381648063659668
    9. ' ' → logprob: -10.631648063659668
    10. '```' → logprob: -10.631648063659668

Token 638: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03248097002506256
    2. '       ' → logprob: -4.0324811935424805
    3. ' if' → logprob: -4.2824811935424805
    4. '   ' → logprob: -7.7824811935424805
    5. '	if' → logprob: -12.65748119354248
    6. '    ' → logprob: -16.032480239868164
    7. '```' → logprob: -16.407480239868164
    8. '  ' → logprob: -17.532480239868164
    9. '     ' → logprob: -17.657480239868164
    10. '	' → logprob: -17.657480239868164

Token 639: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.05172058939933777
    2. 'r' → logprob: -3.05172061920166
    3. ' node' → logprob: -5.80172061920166
    4. ' r' → logprob: -10.05172061920166
    5. '   ' → logprob: -10.17672061920166
    6. 'l' → logprob: -10.67672061920166
    7. 'not' → logprob: -14.55172061920166
    8. '	node' → logprob: -14.67672061920166
    9. ' l' → logprob: -15.67672061920166
    10. '(node' → logprob: -15.92672061920166

Token 640: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.10103379189968109
    2. '.l' → logprob: -2.3510336875915527
    3. ' is' → logprob: -7.351033687591553
    4. '.lazy' → logprob: -9.101034164428711
    5. '.' → logprob: -9.976034164428711
    6. 'r' → logprob: -11.601034164428711
    7. ' ' → logprob: -13.101034164428711
    8. '==' → logprob: -13.101034164428711
    9. '.right' → logprob: -13.101034164428711
    10. 'lazy' → logprob: -13.226034164428711

Token 641: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3869353234767914
    2. ' <' → logprob: -1.1369353532791138
    3. '<p' → logprob: -11.386935234069824
    4. '<int' → logprob: -11.636935234069824
    5. '<|end|>' → logprob: -11.886935234069824
    6. '<s' → logprob: -12.011935234069824
    7. '[' → logprob: -12.136935234069824
    8. '<n' → logprob: -12.636935234069824
    9. '<class' → logprob: -13.011935234069824
    10. '<c' → logprob: -13.136935234069824

Token 642: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170225441455841
    2. ' l' → logprob: -6.7511701583862305
    3. '	l' → logprob: -17.001171112060547
    4. '_l' → logprob: -20.126171112060547
    5. '   ' → logprob: -20.876171112060547
    6. '=l' → logprob: -21.001171112060547
    7. '=' → logprob: -21.251171112060547
    8. '­l' → logprob: -21.751171112060547
    9. ' ' → logprob: -22.001171112060547
    10. '$l' → logprob: -22.001171112060547

Token 643: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009124171338044107
    2. 'or' → logprob: -7.000912189483643
    3. ' ' → logprob: -14.5009126663208
    4. '	or' → logprob: -14.7509126663208
    5. '<|end|>' → logprob: -17.750911712646484
    6. '    ' → logprob: -18.250911712646484
    7. ' ' → logprob: -18.500911712646484
    8. '0' → logprob: -18.750911712646484
    9. '   ' → logprob: -18.875911712646484
    10. '  ' → logprob: -19.375911712646484

Token 644: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.007664944045245647
    2. ' node' → logprob: -4.882665157318115
    3. 'r' → logprob: -9.757664680480957
    4. ' r' → logprob: -14.382664680480957
    5. '	node' → logprob: -15.632664680480957
    6. '   ' → logprob: -15.882664680480957
    7. '[node' → logprob: -17.632665634155273
    8. '(node' → logprob: -17.632665634155273
    9. ' ' → logprob: -18.007665634155273
    10. '=node' → logprob: -18.257665634155273

Token 645: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.006470583379268646
    2. '.r' → logprob: -5.631470680236816
    3. '.' → logprob: -6.131470680236816
    4. 'l' → logprob: -9.006470680236816
    5. '.i' → logprob: -9.131470680236816
    6. 'r' → logprob: -9.381470680236816
    7. ' .' → logprob: -9.756470680236816
    8. '.u' → logprob: -9.756470680236816
    9. '>' → logprob: -9.881470680236816
    10. ' l' → logprob: -10.506470680236816

Token 646: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020543519407510757
    2. ' >' → logprob: -3.8955435752868652
    3. ' ' → logprob: -14.145543098449707
    4. '&gt' → logprob: -15.270543098449707
    5. '   ' → logprob: -15.895543098449707
    6. '<|end|>' → logprob: -15.895543098449707
    7. '">' → logprob: -16.645544052124023
    8. '>end' → logprob: -17.145544052124023
    9. 'r' → logprob: -17.270544052124023
    10. '>
' → logprob: -17.270544052124023

Token 647: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01814994215965271
    2. ' r' → logprob: -4.0181498527526855
    3. '
' → logprob: -17.768150329589844
    4. '	r' → logprob: -17.768150329589844
    5. '   ' → logprob: -19.018150329589844
    6. ' ' → logprob: -19.518150329589844
    7. '_r' → logprob: -19.893150329589844
    8. '```' → logprob: -20.143150329589844
    9. '<|end|>' → logprob: -20.893150329589844
    10. '=r' → logprob: -21.455650329589844

Token 648: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018489724025130272
    2. ':
' → logprob: -4.143489837646484
    3. ':return' → logprob: -6.143489837646484
    4. ' or' → logprob: -8.268489837646484
    5. '       ' → logprob: -10.143489837646484
    6. '   ' → logprob: -13.018489837646484
    7. ' :' → logprob: -13.268489837646484
    8. '           ' → logprob: -13.893489837646484
    9. ',' → logprob: -14.018489837646484
    10. ':

' → logprob: -14.518489837646484

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00909501314163208
    2. ' return' → logprob: -5.259095191955566
    3. 'return' → logprob: -5.634095191955566
    4. '       ' → logprob: -8.634095191955566
    5. ' True' → logprob: -10.009095191955566
    6. 'True' → logprob: -10.884095191955566
    7. '```' → logprob: -11.509095191955566
    8. '
' → logprob: -11.634095191955566
    9. '   ' → logprob: -11.884095191955566
    10. ':return' → logprob: -12.134095191955566

Token 650: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025137176737189293
    2. '           ' → logprob: -3.775137186050415
    3. ' return' → logprob: -6.275136947631836
    4. '
' → logprob: -12.775136947631836
    5. '{return' → logprob: -13.525136947631836
    6. '```' → logprob: -13.900136947631836
    7. '	return' → logprob: -14.025136947631836
    8. '       ' → logprob: -14.650136947631836
    9. ':return' → logprob: -14.650136947631836
    10. '		' → logprob: -15.275136947631836

Token 651: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008810923318378627
    2. '
' → logprob: -7.375881195068359
    3. '   ' → logprob: -8.50088119506836
    4. '<|end|>' → logprob: -11.37588119506836
    5. '```' → logprob: -11.75088119506836
    6. '        
' → logprob: -11.87588119506836
    7. ' if' → logprob: -11.87588119506836
    8. '	' → logprob: -12.00088119506836
    9. '    
' → logprob: -13.00088119506836
    10. 'if' → logprob: -13.12588119506836

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011765359668061137
    2. '
' → logprob: -7.501176357269287
    3. '   ' → logprob: -8.501176834106445
    4. '```' → logprob: -8.626176834106445
    5. '        
' → logprob: -9.251176834106445
    6. ' if' → logprob: -9.876176834106445
    7. '<|end|>' → logprob: -10.126176834106445
    8. '  
' → logprob: -10.876176834106445
    9. '    
' → logprob: -11.501176834106445
    10. 'if' → logprob: -11.751176834106445

Token 653: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6213600635528564
    2. 'if' (adapté à ' if') → logprob: -0.8713600635528564
    3. ' if' → logprob: -3.1213600635528564
    4. '   ' → logprob: -8.121359825134277
    5. '	if' → logprob: -11.996359825134277
    6. '```' → logprob: -13.246359825134277
    7. ' ' → logprob: -13.871359825134277
    8. 'If' → logprob: -14.996359825134277
    9. '	' → logprob: -15.246359825134277
    10. '      ' → logprob: -15.746359825134277

Token 654: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06382837891578674
    2. ' l' → logprob: -2.938828468322754
    3. 'node' → logprob: -4.813828468322754
    4. ' node' → logprob: -7.188828468322754
    5. '   ' → logprob: -10.438828468322754
    6. ' ' → logprob: -13.188828468322754
    7. '	l' → logprob: -13.438828468322754
    8. '  ' → logprob: -14.688828468322754
    9. '    ' → logprob: -15.188828468322754
    10. '       ' → logprob: -15.813828468322754

Token 655: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03874116763472557
    2. ' <=' → logprob: -3.288741111755371
    3. '>=' → logprob: -7.413741111755371
    4. '<|end|>' → logprob: -9.788741111755371
    5. ' >=' → logprob: -11.413741111755371
    6. '```' → logprob: -12.038741111755371
    7. '[' → logprob: -12.038741111755371
    8. ']<=' → logprob: -12.288741111755371
    9. '[node' → logprob: -12.288741111755371
    10. ')<=' → logprob: -12.663741111755371

Token 656: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00317783304490149
    2. ' node' → logprob: -5.753177642822266
    3. '[node' → logprob: -16.878177642822266
    4. '(node' → logprob: -17.253177642822266
    5. 'token' → logprob: -18.003177642822266
    6. '=node' → logprob: -18.378177642822266
    7. '	node' → logprob: -19.628177642822266
    8. '
' → logprob: -20.003177642822266
    9. '_node' → logprob: -21.003177642822266
    10. 'code' → logprob: -21.003177642822266

Token 657: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.25
    3. '.L' → logprob: -18.25
    4. '.node' → logprob: -18.625
    5. 'l' → logprob: -19.25
    6. ' .' → logprob: -19.875
    7. '.left' → logprob: -20.25
    8. '.r' → logprob: -20.25
    9. '   ' → logprob: -20.5
    10. 'node' → logprob: -21.0

Token 658: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815474033355713
    2. 'and' → logprob: -4.018154621124268
    3. ' <=' → logprob: -12.643155097961426
    4. ' ' → logprob: -13.893155097961426
    5. '<=' → logprob: -14.643155097961426
    6. '        ' → logprob: -16.01815414428711
    7. '    ' → logprob: -17.39315414428711
    8. '<|end|>' → logprob: -17.39315414428711
    9. '```' → logprob: -17.64315414428711
    10. '           ' → logprob: -17.89315414428711

Token 659: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.018152514472603798
    2. ' node' → logprob: -4.018152713775635
    3. 'r' → logprob: -13.143152236938477
    4. '   ' → logprob: -14.893152236938477
    5. ' ' → logprob: -16.518152236938477
    6. '	node' → logprob: -16.643152236938477
    7. ' r' → logprob: -16.768152236938477
    8. '(node' → logprob: -16.768152236938477
    9. '
' → logprob: -17.518152236938477
    10. '           ' → logprob: -17.518152236938477

Token 660: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -1.8074162653647363e-05
    2. 'r' → logprob: -11.000018119812012
    3. '.' → logprob: -14.250018119812012
    4. '   ' → logprob: -15.125018119812012
    5. '	r' → logprob: -15.500018119812012
    6. ' ' → logprob: -16.625017166137695
    7. '[r' → logprob: -17.250017166137695
    8. '```' → logprob: -17.625017166137695
    9. '       ' → logprob: -18.000017166137695
    10. '(r' → logprob: -18.250017166137695

Token 661: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05525708198547363
    2. '<=' → logprob: -2.9302570819854736
    3. '<|end|>' → logprob: -8.930256843566895
    4. ' >=' → logprob: -9.055256843566895
    5. ' ' → logprob: -9.805256843566895
    6. '>=' → logprob: -10.805256843566895
    7. ' and' → logprob: -11.930256843566895
    8. ' ≤' → logprob: -12.305256843566895
    9. '```' → logprob: -12.305256843566895
    10. '       ' → logprob: -12.430256843566895

Token 662: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001170225441455841
    2. ' r' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.501171112060547
    4. '
' → logprob: -20.751171112060547
    5. '	r' → logprob: -22.001171112060547
    6. '           ' → logprob: -22.376171112060547
    7. ' ' → logprob: -22.626171112060547
    8. '       ' → logprob: -22.626171112060547
    9. '_r' → logprob: -22.876171112060547
    10. '[r' → logprob: -23.501171112060547

Token 663: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07030384987592697
    2. ':' → logprob: -2.6953039169311523
    3. '):
' → logprob: -8.820303916931152
    4. '       ' → logprob: -8.820303916931152
    5. ' and' → logprob: -10.070303916931152
    6. ':

' → logprob: -11.695303916931152
    7. '           ' → logprob: -12.070303916931152
    8. ',' → logprob: -12.570303916931152
    9. ':
' → logprob: -12.570303916931152
    10. '```' → logprob: -13.445303916931152

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38940128684043884
    2. '       ' → logprob: -1.1394013166427612
    3. 'node' → logprob: -6.514401435852051
    4. '```' → logprob: -7.514401435852051
    5. ' node' → logprob: -7.889401435852051
    6. '   ' → logprob: -9.63940143585205
    7. '[node' → logprob: -12.01440143585205
    8. '{
' → logprob: -12.13940143585205
    9. '	       ' → logprob: -12.13940143585205
    10. ',node' → logprob: -12.13940143585205

Token 665: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.00282924622297287
    2. ' node' → logprob: -6.502829074859619
    3. '           ' → logprob: -6.752829074859619
    4. '       ' → logprob: -8.877829551696777
    5. 'c' → logprob: -12.252829551696777
    6. '   ' → logprob: -12.627829551696777
    7. '```' → logprob: -12.627829551696777
    8. '	node' → logprob: -12.877829551696777
    9. '
' → logprob: -13.002829551696777
    10. 'token' → logprob: -13.502829551696777

Token 666: '.lazy' (ID: 152918)
  Prédit: '.lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lazy' → logprob: -0.001972884638234973
    2. '.hash' → logprob: -6.251972675323486
    3. '.' → logprob: -10.501973152160645
    4. 'lazy' → logprob: -11.501973152160645
    5. '
' → logprob: -12.501973152160645
    6. ' .' → logprob: -14.126973152160645
    7. '\.' → logprob: -14.751973152160645
    8. '`.' → logprob: -15.501973152160645
    9. '.has' → logprob: -15.626973152160645
    10. ').' → logprob: -15.751973152160645

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022899746894836
    2. ' =' → logprob: -1.910228967666626
    3. '=c' → logprob: -12.285228729248047
    4. '=
' → logprob: -15.910228729248047
    5. ' ' → logprob: -17.785228729248047
    6. '＝' → logprob: -17.785228729248047
    7. '<|end|>' → logprob: -17.785228729248047
    8. 'c' → logprob: -18.160228729248047
    9. '=s' → logprob: -18.535228729248047
    10. ' =
' → logprob: -19.160228729248047

Token 668: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. '	c' → logprob: -19.00007438659668
    4. ')c' → logprob: -19.87507438659668
    5. '   ' → logprob: -21.25007438659668
    6. '_c' → logprob: -21.50007438659668
    7. '$c' → logprob: -22.75007438659668
    8. '%c' → logprob: -22.87507438659668
    9. 'cation' → logprob: -23.25007438659668
    10. ' ' → logprob: -23.50007438659668

Token 669: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003968455363065004
    2. '
' → logprob: -5.878968238830566
    3. 'node' → logprob: -6.878968238830566
    4. ',' → logprob: -9.628968238830566
    5. ' node' → logprob: -10.378968238830566
    6. ',node' → logprob: -11.378968238830566
    7. '       ' → logprob: -11.878968238830566
    8. '   ' → logprob: -12.128968238830566
    9. '```' → logprob: -12.628968238830566
    10. '               ' → logprob: -13.628968238830566

Token 670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005213598255068064
    2. '
' → logprob: -5.380213737487793
    3. '       ' → logprob: -8.130213737487793
    4. '   ' → logprob: -9.505213737487793
    5. 'node' → logprob: -9.505213737487793
    6. '```' → logprob: -9.880213737487793
    7. ',' → logprob: -10.880213737487793
    8. '          ' → logprob: -11.130213737487793
    9. '<|end|>' → logprob: -11.130213737487793
    10. '  
' → logprob: -11.630213737487793

Token 671: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -9.674858301877975e-05
    2. ' node' → logprob: -9.250096321105957
    3. '           ' → logprob: -15.000096321105957
    4. '(node' → logprob: -15.875096321105957
    5. 'token' → logprob: -16.750097274780273
    6. '	node' → logprob: -16.875097274780273
    7. '
' → logprob: -17.375097274780273
    8. '[node' → logprob: -17.625097274780273
    9. '```' → logprob: -17.625097274780273
    10. '=node' → logprob: -17.875097274780273

Token 672: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -0.00030388421146199107
    2. 'hash' → logprob: -8.125304222106934
    3. '.' → logprob: -12.375304222106934
    4. '.lazy' → logprob: -13.000304222106934
    5. ' .' → logprob: -15.375304222106934
    6. '.push' → logprob: -15.375304222106934
    7. '	hash' → logprob: -15.625304222106934
    8. ' hash' → logprob: -15.875304222106934
    9. '.calc' → logprob: -15.875304222106934
    10. '.c' → logprob: -16.125303268432617

Token 673: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.0280383548888494e-06
    2. 'val' → logprob: -14.750000953674316
    3. '_VAL' → logprob: -14.875000953674316
    4. '=_' → logprob: -17.000001907348633
    5. 'Val' → logprob: -17.125001907348633
    6. '_vals' → logprob: -17.625001907348633
    7. '	val' → logprob: -17.625001907348633
    8. '_' → logprob: -17.750001907348633
    9. ',val' → logprob: -17.750001907348633
    10. '-val' → logprob: -17.750001907348633

Token 674: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407880425453186
    2. '=' → logprob: -0.9740787744522095
    3. '=self' → logprob: -14.099079132080078
    4. ',' → logprob: -14.224079132080078
    5. '=
' → logprob: -15.349079132080078
    6. '＝' → logprob: -16.224079132080078
    7. ')' → logprob: -16.849079132080078
    8. ' =
' → logprob: -17.599079132080078
    9. ')=' → logprob: -17.974079132080078
    10. '=}' → logprob: -18.474079132080078

Token 675: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '(self' → logprob: -15.625431060791016
    4. '=self' → logprob: -19.000431060791016
    5. '	self' → logprob: -20.000431060791016
    6. '   ' → logprob: -20.000431060791016
    7. '[self' → logprob: -20.375431060791016
    8. '`' → logprob: -20.500431060791016
    9. 'Self' → logprob: -21.000431060791016
    10. '```' → logprob: -21.000431060791016

Token 676: '.calc' (ID: 83158)
  Prédit: '.calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -0.006719520781189203
    2. 'calc' → logprob: -5.006719589233398
    3. '(calc' → logprob: -13.381719589233398
    4. ' calc' → logprob: -13.381719589233398
    5. '.cal' → logprob: -14.256719589233398
    6. '.' → logprob: -14.881719589233398
    7. ' .' → logprob: -17.5067195892334
    8. '.calculate' → logprob: -17.6317195892334
    9. 'Calc' → logprob: -17.7567195892334
    10. '_calc' → logprob: -17.7567195892334

Token 677: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -6.869017852295656e-06
    2. 'hash' → logprob: -12.000006675720215
    3. '(c' → logprob: -14.625006675720215
    4. '_HASH' → logprob: -16.00000762939453
    5. '_char' → logprob: -16.75000762939453
    6. '_token' → logprob: -17.25000762939453
    7. 'Hash' → logprob: -17.25000762939453
    8. 'c' → logprob: -17.62500762939453
    9. '_' → logprob: -18.12500762939453
    10. '_code' → logprob: -18.12500762939453

Token 678: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.375009536743164
    3. 'c' → logprob: -12.500009536743164
    4. '(
' → logprob: -14.000009536743164
    5. ')c' → logprob: -14.750009536743164
    6. '```' → logprob: -17.250009536743164
    7. '	c' → logprob: -18.000009536743164
    8. '[c' → logprob: -19.250009536743164
    9. '©' → logprob: -19.375009536743164
    10. ' (' → logprob: -19.500009536743164

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004848922253586352
    2. ',node' → logprob: -7.875484943389893
    3. ' ,' → logprob: -9.875484466552734
    4. '(node' → logprob: -9.875484466552734
    5. ',c' → logprob: -14.750484466552734
    6. ',
' → logprob: -14.875484466552734
    7. 'node' → logprob: -15.000484466552734
    8. ',n' → logprob: -15.375484466552734
    9. '(' → logprob: -16.375484466552734
    10. '```' → logprob: -16.625484466552734

Token 680: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002521084388718009
    2. ' node' → logprob: -6.00252103805542
    3. '(node' → logprob: -10.002521514892578
    4. '[node' → logprob: -17.877521514892578
    5. '	node' → logprob: -18.002521514892578
    6. ')' → logprob: -18.127521514892578
    7. '
' → logprob: -18.377521514892578
    8. ' ' → logprob: -18.627521514892578
    9. '   ' → logprob: -19.127521514892578
    10. '=node' → logprob: -19.127521514892578

Token 681: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0012362991692498326
    2. '.node' → logprob: -6.751236438751221
    3. '(node' → logprob: -10.251235961914062
    4. 'node' → logprob: -11.376235961914062
    5. '[node' → logprob: -11.626235961914062
    6. 'length' → logprob: -12.751235961914062
    7. ')' → logprob: -13.251235961914062
    8. '.hash' → logprob: -13.251235961914062
    9. '.' → logprob: -14.126235961914062
    10. ').' → logprob: -14.501235961914062

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023251768201589584
    2. ')
' → logprob: -3.77325177192688
    3. '           ' → logprob: -13.2732515335083
    4. ')
' → logprob: -13.2732515335083
    5. '       ' → logprob: -13.3982515335083
    6. ')

' → logprob: -14.5232515335083
    7. ')return' → logprob: -15.1482515335083
    8. ' )' → logprob: -15.3982515335083
    9. '   ' → logprob: -16.773252487182617
    10. ')\
' → logprob: -17.023252487182617

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006861062138341367
    2. '       ' → logprob: -7.625686168670654
    3. '<|end|>' → logprob: -9.500685691833496
    4. 'return' → logprob: -9.875685691833496
    5. '   ' → logprob: -10.375685691833496
    6. '```' → logprob: -10.750685691833496
    7. '
' → logprob: -11.875685691833496
    8. ' return' → logprob: -12.250685691833496
    9. '	       ' → logprob: -13.875685691833496
    10. '<|end|>' → logprob: -13.875685691833496

Token 684: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05043570697307587
    2. '           ' → logprob: -3.050435781478882
    3. ' return' → logprob: -6.300435543060303
    4. '       ' → logprob: -12.050436019897461
    5. '   ' → logprob: -12.300436019897461
    6. '	return' → logprob: -14.425436019897461
    7. 'self' → logprob: -16.55043601989746
    8. '
' → logprob: -17.55043601989746
    9. '```' → logprob: -18.17543601989746
    10. ' ' → logprob: -18.42543601989746

Token 685: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001831565605243668
    2. '   ' → logprob: -9.62518310546875
    3. '
' → logprob: -9.87518310546875
    4. 'self' → logprob: -9.87518310546875
    5. '```' → logprob: -12.25018310546875
    6. 'node' → logprob: -12.75018310546875
    7. '​' → logprob: -13.00018310546875
    8. '	' → logprob: -14.25018310546875
    9. '        
' → logprob: -14.37518310546875
    10. '
' → logprob: -14.50018310546875

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004248519893735647
    2. '   ' → logprob: -5.75424861907959
    3. '```' → logprob: -6.87924861907959
    4. '
' → logprob: -10.37924861907959
    5. 'self' → logprob: -12.25424861907959
    6. '``' → logprob: -13.12924861907959
    7. 'node' → logprob: -13.37924861907959
    8. '           ' → logprob: -14.50424861907959
    9. '        
' → logprob: -14.87924861907959
    10. '​' → logprob: -15.50424861907959

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.088655985891819
    2. '       ' → logprob: -2.838655948638916
    3. ' self' → logprob: -3.838655948638916
    4. '   ' → logprob: -5.338655948638916
    5. '	self' → logprob: -12.088656425476074
    6. '```' → logprob: -12.838656425476074
    7. ' ' → logprob: -13.963656425476074
    8. '
' → logprob: -15.213656425476074
    9. '           ' → logprob: -15.713656425476074
    10. ' ' → logprob: -15.713656425476074

Token 688: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.0002370329457335174
    2. '.' → logprob: -8.750237464904785
    3. 'push' → logprob: -9.500237464904785
    4. ' .' → logprob: -12.875237464904785
    5. ' push' → logprob: -13.875237464904785
    6. ').' → logprob: -17.25023651123047
    7. '.p' → logprob: -17.25023651123047
    8. '.Push' → logprob: -17.62523651123047
    9. '   ' → logprob: -17.87523651123047
    10. '.pop' → logprob: -18.00023651123047

Token 689: 'down' (ID: 4653)
  Prédit: 'down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: 0.0
    2. ' down' → logprob: -18.375
    3. 'dow' → logprob: -18.75
    4. 'node' → logprob: -20.25
    5. 'push' → logprob: -20.875
    6. '_down' → logprob: -21.0
    7. 'd' → logprob: -21.75
    8. '.down' → logprob: -22.0
    9. 'update' → logprob: -22.875
    10. '(node' → logprob: -22.875

Token 690: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -17.87501335144043
    4. '(
' → logprob: -18.25001335144043
    5. 'node' → logprob: -18.87501335144043
    6. '(n' → logprob: -20.12501335144043
    7. ',node' → logprob: -20.87501335144043
    8. '(token' → logprob: -21.25001335144043
    9. '=node' → logprob: -22.00001335144043
    10. '[node' → logprob: -22.50001335144043

Token 691: ')
' (ID: 446)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.028771663084626198
    2. ',' → logprob: -3.7787716388702393
    3. ')' → logprob: -5.903771877288818
    4. ',node' → logprob: -5.903771877288818
    5. '(' → logprob: -11.02877140045166
    6. ')
' → logprob: -11.52877140045166
    7. ' (' → logprob: -11.65377140045166
    8. ' ,' → logprob: -12.52877140045166
    9. '[node' → logprob: -12.65377140045166
    10. 'node' → logprob: -13.02877140045166

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023155955132097006
    2. '   ' → logprob: -6.127315521240234
    3. 'self' → logprob: -9.752315521240234
    4. ' ' → logprob: -10.127315521240234
    5. '```' → logprob: -11.502315521240234
    6. ' self' → logprob: -12.252315521240234
    7. '	' → logprob: -12.377315521240234
    8. '	self' → logprob: -12.502315521240234
    9. '	   ' → logprob: -13.627315521240234
    10. '        
' → logprob: -13.752315521240234

Token 693: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018830618355423212
    2. ' self' → logprob: -6.626883029937744
    3. '       ' → logprob: -7.501883029937744
    4. 'if' → logprob: -12.751883506774902
    5. '   ' → logprob: -13.876883506774902
    6. 'node' → logprob: -14.251883506774902
    7. '	self' → logprob: -15.501883506774902
    8. ' ' → logprob: -16.376882553100586
    9. '```' → logprob: -16.751882553100586
    10. ' if' → logprob: -17.126882553100586

Token 694: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.00012511172099038959
    2. 'update' → logprob: -9.00012493133545
    3. '.' → logprob: -14.00012493133545
    4. '.left' → logprob: -14.25012493133545
    5. ').' → logprob: -17.125125885009766
    6. ' .' → logprob: -17.500125885009766
    7. '].' → logprob: -17.750125885009766
    8. ' update' → logprob: -18.000125885009766
    9. 'left' → logprob: -19.125125885009766
    10. '`.' → logprob: -19.500125885009766

Token 695: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. ' (' → logprob: -17.12500762939453
    4. '(
' → logprob: -17.75000762939453
    5. 'node' → logprob: -18.00000762939453
    6. ',node' → logprob: -18.25000762939453
    7. '=node' → logprob: -19.25000762939453
    8. ' node' → logprob: -19.75000762939453
    9. '```' → logprob: -20.87500762939453
    10. '[node' → logprob: -21.37500762939453

Token 696: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0001875671005109325
    2. '.node' → logprob: -8.750187873840332
    3. '(node' → logprob: -10.500187873840332
    4. 'left' → logprob: -14.500187873840332
    5. '.right' → logprob: -14.750187873840332
    6. '.' → logprob: -15.625187873840332
    7. ',node' → logprob: -16.125186920166016
    8. '[node' → logprob: -16.250186920166016
    9. 'node' → logprob: -16.375186920166016
    10. ' .' → logprob: -16.750186920166016

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026460483204573393
    2. ',node' → logprob: -6.002645969390869
    3. '(node' → logprob: -8.752646446228027
    4. ' ,' → logprob: -11.377646446228027
    5. ',n' → logprob: -14.502646446228027
    6. ',l' → logprob: -16.37764549255371
    7. 'node' → logprob: -16.62764549255371
    8. ' node' → logprob: -16.75264549255371
    9. '[node' → logprob: -17.25264549255371
    10. '(' → logprob: -17.37764549255371

Token 698: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019286326132714748
    2. ' l' → logprob: -6.251928806304932
    3. '	l' → logprob: -19.376928329467773
    4. '    ' → logprob: -20.501928329467773
    5. '   ' → logprob: -21.626928329467773
    6. '_l' → logprob: -22.876928329467773
    7. ',l' → logprob: -23.001928329467773
    8. '```' → logprob: -23.751928329467773
    9. ' ' → logprob: -24.001928329467773
    10. '       ' → logprob: -24.501928329467773

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.090760431718081e-05
    2. ' ,' → logprob: -10.000090599060059
    3. ',r' → logprob: -10.000090599060059
    4. 'r' → logprob: -17.875091552734375
    5. ',
' → logprob: -18.125091552734375
    6. '‌,' → logprob: -19.000091552734375
    7. ' r' → logprob: -19.125091552734375
    8. '   ' → logprob: -20.500091552734375
    9. ' ' → logprob: -20.750091552734375
    10. '，' → logprob: -21.250091552734375

Token 700: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.615255839889869e-05
    2. ' r' → logprob: -9.250096321105957
    3. '	r' → logprob: -22.37509536743164
    4. '   ' → logprob: -22.75009536743164
    5. ',r' → logprob: -23.00009536743164
    6. '
' → logprob: -23.62509536743164
    7. ' ' → logprob: -23.87509536743164
    8. ',' → logprob: -24.00009536743164
    9. '    ' → logprob: -24.62509536743164
    10. '  ' → logprob: -25.12509536743164

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.000052452087402
    3. ',c' → logprob: -11.875052452087402
    4. ')' → logprob: -16.37505340576172
    5. ',
' → logprob: -17.25005340576172
    6. '‌,' → logprob: -17.25005340576172
    7. '),' → logprob: -17.87505340576172
    8. ',node' → logprob: -17.87505340576172
    9. '   ' → logprob: -18.12505340576172
    10. ',n' → logprob: -18.12505340576172

Token 702: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02975071594119072
    2. ' c' → logprob: -3.5297508239746094
    3. '	c' → logprob: -16.27975082397461
    4. ')c' → logprob: -16.27975082397461
    5. ' ' → logprob: -18.15475082397461
    6. '   ' → logprob: -19.65475082397461
    7. ')' → logprob: -19.77975082397461
    8. '_c' → logprob: -19.90475082397461
    9. '```' → logprob: -19.90475082397461
    10. ' ' → logprob: -20.52975082397461

Token 703: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6159548163414001
    2. ')
' → logprob: -0.8659548163414001
    3. '       ' → logprob: -3.240954875946045
    4. 'self' → logprob: -10.240954399108887
    5. ',' → logprob: -10.740954399108887
    6. '   ' → logprob: -11.365954399108887
    7. ')
' → logprob: -11.740954399108887
    8. '
' → logprob: -11.990954399108887
    9. ' )
' → logprob: -12.865954399108887
    10. '),' → logprob: -12.990954399108887

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015098480507731438
    2. 'self' → logprob: -4.515098571777344
    3. '```' → logprob: -5.890098571777344
    4. ' self' → logprob: -7.515098571777344
    5. '   ' → logprob: -7.765098571777344
    6. '``' → logprob: -9.140098571777344
    7. '	self' → logprob: -9.390098571777344
    8. '	' → logprob: -10.265098571777344
    9. '\' → logprob: -10.640098571777344
    10. '
' → logprob: -11.015098571777344

Token 705: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13284821808338165
    2. '       ' → logprob: -2.1328482627868652
    3. ' self' → logprob: -5.132848262786865
    4. '```' → logprob: -13.632847785949707
    5. '   ' → logprob: -14.507847785949707
    6. '	self' → logprob: -14.632847785949707
    7. ' ' → logprob: -14.757847785949707
    8. ' ' → logprob: -15.882847785949707
    9. '[self' → logprob: -16.382848739624023
    10. '      ' → logprob: -17.132848739624023

Token 706: '.update' (ID: 8689)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.6931508183479309
    2. '.update' → logprob: -0.6931508183479309
    3. '.' → logprob: -13.068150520324707
    4. ' update' → logprob: -13.443150520324707
    5. '	update' → logprob: -17.443151473999023
    6. ' .' → logprob: -18.068151473999023
    7. '更新' → logprob: -18.193151473999023
    8. ':update' → logprob: -18.818151473999023
    9. ' ' → logprob: -19.068151473999023
    10. '   ' → logprob: -19.318151473999023

Token 707: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'node' → logprob: -17.375001907348633
    4. '[node' → logprob: -17.750001907348633
    5. '(
' → logprob: -18.000001907348633
    6. ',node' → logprob: -18.000001907348633
    7. '=node' → logprob: -18.375001907348633
    8. ' (' → logprob: -19.500001907348633
    9. ' node' → logprob: -19.875001907348633
    10. '(n' → logprob: -21.875001907348633

Token 708: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.62500286102295
    3. '.left' → logprob: -13.62500286102295
    4. 'right' → logprob: -17.250001907348633
    5. ' .' → logprob: -17.375001907348633
    6. ').' → logprob: -18.625001907348633
    7. ',right' → logprob: -19.500001907348633
    8. ',' → logprob: -21.000001907348633
    9. '.Right' → logprob: -21.125001907348633
    10. '	right' → logprob: -21.125001907348633

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016301481809932739
    2. ',node' → logprob: -8.750163078308105
    3. ' ,' → logprob: -12.750163078308105
    4. '(node' → logprob: -13.375163078308105
    5. ')' → logprob: -16.75016212463379
    6. 'node' → logprob: -17.00016212463379
    7. ',n' → logprob: -17.12516212463379
    8. ' node' → logprob: -17.62516212463379
    9. '[node' → logprob: -19.37516212463379
    10. ',
' → logprob: -19.87516212463379

Token 710: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0040785204619169235
    2. ' l' → logprob: -5.504078388214111
    3. '	l' → logprob: -16.504077911376953
    4. 'r' → logprob: -17.879077911376953
    5. '   ' → logprob: -19.254077911376953
    6. ' ' → logprob: -20.004077911376953
    7. ',l' → logprob: -20.379077911376953
    8. ',' → logprob: -20.504077911376953
    9. ' л' → logprob: -21.129077911376953
    10. '       ' → logprob: -21.254077911376953

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006657334160991013
    2. ',r' → logprob: -7.375665664672852
    3. ' ,' → logprob: -10.625665664672852
    4. 'r' → logprob: -11.125665664672852
    5. ' r' → logprob: -16.62566566467285
    6. '   ' → logprob: -17.25066566467285
    7. '       ' → logprob: -18.12566566467285
    8. '```' → logprob: -18.37566566467285
    9. ' ' → logprob: -18.75066566467285
    10. ',
' → logprob: -19.62566566467285

Token 712: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00038014890742488205
    2. ' r' → logprob: -7.875380039215088
    3. '   ' → logprob: -20.00037956237793
    4. ',' → logprob: -20.25037956237793
    5. ' ' → logprob: -20.37537956237793
    6. '	r' → logprob: -20.62537956237793
    7. ',r' → logprob: -20.75037956237793
    8. '
' → logprob: -21.00037956237793
    9. '       ' → logprob: -21.75037956237793
    10. '[r' → logprob: -21.75037956237793

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010044389637187123
    2. ' ,' → logprob: -9.625100135803223
    3. ',c' → logprob: -10.750100135803223
    4. ')' → logprob: -11.375100135803223
    5. '),' → logprob: -14.125100135803223
    6. ',
' → logprob: -14.625100135803223
    7. 'c' → logprob: -16.87510108947754
    8. '       ' → logprob: -17.37510108947754
    9. ')c' → logprob: -17.37510108947754
    10. '```' → logprob: -17.37510108947754

Token 714: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005233882926404476
    2. ' c' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.255233764648438
    4. '	c' → logprob: -17.380233764648438
    5. ')c' → logprob: -17.630233764648438
    6. '   ' → logprob: -18.630233764648438
    7. '```' → logprob: -20.005233764648438
    8. '  ' → logprob: -20.005233764648438
    9. '_c' → logprob: -20.505233764648438
    10. '       ' → logprob: -20.505233764648438

Token 715: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09009809792041779
    2. ')' → logprob: -2.7150981426239014
    3. ')
' → logprob: -4.215097904205322
    4. ',' → logprob: -6.340097904205322
    5. '   ' → logprob: -6.465097904205322
    6. ',node' → logprob: -7.090097904205322
    7. ' node' → logprob: -7.465097904205322
    8. 'node' → logprob: -8.84009838104248
    9. '
' → logprob: -8.84009838104248
    10. '[node' → logprob: -10.09009838104248

Token 716: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6601890325546265
    2. '       ' → logprob: -0.9101890325546265
    3. ' node' → logprob: -2.535189151763916
    4. '   ' → logprob: -6.660189151763916
    5. '	node' → logprob: -9.035188674926758
    6. '```' → logprob: -9.910188674926758
    7. ',node' → logprob: -9.910188674926758
    8. ' ' → logprob: -10.660188674926758
    9. '[node' → logprob: -11.285188674926758
    10. '(node' → logprob: -11.785188674926758

Token 717: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.00016957100888248533
    2. ' node' → logprob: -8.75016975402832
    3. '       ' → logprob: -11.50016975402832
    4. '   ' → logprob: -14.62516975402832
    5. '```' → logprob: -15.37516975402832
    6. '	node' → logprob: -15.75016975402832
    7. '[node' → logprob: -17.37516975402832
    8. '(node' → logprob: -17.75016975402832
    9. ',node' → logprob: -17.87516975402832
    10. ' ' → logprob: -18.12516975402832

Token 718: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.12500286102295
    3. 'hash' → logprob: -14.75000286102295
    4. ' .' → logprob: -16.625001907348633
    5. '.has' → logprob: -16.875001907348633
    6. '.lazy' → logprob: -16.875001907348633
    7. ').' → logprob: -17.500001907348633
    8. '.left' → logprob: -17.625001907348633
    9. '	hash' → logprob: -17.625001907348633
    10. '\.' → logprob: -17.750001907348633

Token 719: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -5.5577775128767826e-06
    2. 'val' → logprob: -12.125005722045898
    3. '_VAL' → logprob: -16.6250057220459
    4. '	val' → logprob: -17.2500057220459
    5. '_' → logprob: -18.5000057220459
    6. 'Val' → logprob: -18.5000057220459
    7. '.val' → logprob: -19.2500057220459
    8. '=' → logprob: -19.6250057220459
    9. '_value' → logprob: -19.6250057220459
    10. '[val' → logprob: -19.6250057220459

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '=self' → logprob: -17.251928329467773
    4. '=
' → logprob: -19.626928329467773
    5. '＝' → logprob: -21.001928329467773
    6. 'self' → logprob: -21.751928329467773
    7. '=

' → logprob: -22.001928329467773
    8. '=}' → logprob: -22.001928329467773
    9. '.=' → logprob: -22.376928329467773
    10. '==' → logprob: -23.376928329467773

Token 721: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7968066206085496e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -15.000027656555176
    4. '=self' → logprob: -20.500028610229492
    5. '[self' → logprob: -20.625028610229492
    6. '   ' → logprob: -21.500028610229492
    7. '	self' → logprob: -21.625028610229492
    8. 'this' → logprob: -23.375028610229492
    9. ' ' → logprob: -24.500028610229492
    10. ' ' → logprob: -24.500028610229492

Token 722: '.merge' (ID: 51225)
  Prédit: '.merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.merge' → logprob: -0.0067568132653832436
    2. 'merge' → logprob: -5.006756782531738
    3. '.' → logprob: -10.131756782531738
    4. ' merge' → logprob: -14.131756782531738
    5. 'self' → logprob: -14.381756782531738
    6. ' .' → logprob: -15.256756782531738
    7. '   ' → logprob: -16.881757736206055
    8. '.Merge' → logprob: -17.131757736206055
    9. 'Merge' → logprob: -18.631757736206055
    10. 'mer' → logprob: -18.631757736206055

Token 723: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -15.875017166137695
    4. 'node' → logprob: -17.750017166137695
    5. ' (' → logprob: -18.500017166137695
    6. '(self' → logprob: -19.500017166137695
    7. '((' → logprob: -19.625017166137695
    8. ',node' → logprob: -19.875017166137695
    9. '=node' → logprob: -20.625017166137695
    10. '(

' → logprob: -21.625017166137695

Token 724: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0009519561426714063
    2. '.hash' → logprob: -7.000951766967773
    3. '(node' → logprob: -10.500951766967773
    4. '.node' → logprob: -11.750951766967773
    5. 'hash' → logprob: -12.625951766967773
    6. 'left' → logprob: -13.875951766967773
    7. '.right' → logprob: -14.750951766967773
    8. '(left' → logprob: -15.125951766967773
    9. '.' → logprob: -16.875951766967773
    10. '_hash' → logprob: -16.875951766967773

Token 725: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -4.961759259458631e-06
    2. 'hash' → logprob: -12.750004768371582
    3. '.' → logprob: -13.750004768371582
    4. '.node' → logprob: -14.000004768371582
    5. '.Hash' → logprob: -17.5000057220459
    6. ' .' → logprob: -17.5000057220459
    7. '_hash' → logprob: -18.0000057220459
    8. '[' → logprob: -18.1250057220459
    9. '(hash' → logprob: -18.3750057220459
    10. '.left' → logprob: -18.3750057220459

Token 726: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.842555426876061e-06
    2. 'val' → logprob: -12.625004768371582
    3. 'hash' → logprob: -13.750004768371582
    4. '_hash' → logprob: -14.875004768371582
    5. '.val' → logprob: -17.5000057220459
    6. 'Val' → logprob: -17.7500057220459
    7. '_VAL' → logprob: -18.1250057220459
    8. ',' → logprob: -18.3750057220459
    9. '```' → logprob: -19.5000057220459
    10. ',val' → logprob: -19.8750057220459

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021915239631198347
    2. ',node' → logprob: -8.500219345092773
    3. ' ,' → logprob: -11.125219345092773
    4. '(node' → logprob: -14.375219345092773
    5. ',
' → logprob: -15.625219345092773
    6. '   ' → logprob: -16.625219345092773
    7. ')' → logprob: -17.500219345092773
    8. '(),' → logprob: -17.625219345092773
    9. '[node' → logprob: -17.750219345092773
    10. ',user' → logprob: -18.125219345092773

Token 728: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.001171056181192398
    2. ' node' → logprob: -6.751171112060547
    3. '(node' → logprob: -14.126171112060547
    4. '[node' → logprob: -17.376171112060547
    5. ',node' → logprob: -17.626171112060547
    6. '	node' → logprob: -18.501171112060547
    7. '
' → logprob: -18.751171112060547
    8. '=node' → logprob: -19.126171112060547
    9. '```' → logprob: -20.126171112060547
    10. '   ' → logprob: -20.126171112060547

Token 729: '.right' (ID: 17627)
  Prédit: '.hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -0.004296707455068827
    2. 'hash' → logprob: -5.754296779632568
    3. '_hash' → logprob: -7.004296779632568
    4. '.right' → logprob: -8.50429630279541
    5. ' hash' → logprob: -12.00429630279541
    6. '	hash' → logprob: -14.12929630279541
    7. 'right' → logprob: -15.12929630279541
    8. '_right' → logprob: -15.25429630279541
    9. '.left' → logprob: -15.50429630279541
    10. ')' → logprob: -16.754297256469727

Token 730: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -2.2246291337069124e-05
    2. '_hash' → logprob: -11.000021934509277
    3. 'hash' → logprob: -12.500021934509277
    4. '.length' → logprob: -15.250021934509277
    5. '.val' → logprob: -15.250021934509277
    6. ')' → logprob: -15.625021934509277
    7. '._' → logprob: -15.625021934509277
    8. ').' → logprob: -15.875021934509277
    9. '.' → logprob: -16.000022888183594
    10. ',' → logprob: -16.125022888183594

Token 731: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -8.85235276655294e-05
    2. 'val' → logprob: -9.750088691711426
    3. '.val' → logprob: -11.250088691711426
    4. 'hash' → logprob: -11.875088691711426
    5. 'length' → logprob: -12.125088691711426
    6. '_len' → logprob: -13.375088691711426
    7. '_hash' → logprob: -13.750088691711426
    8. 'Val' → logprob: -14.250088691711426
    9. '_VAL' → logprob: -14.750088691711426
    10. '.length' → logprob: -15.000088691711426

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015465259784832597
    2. ',node' → logprob: -6.501546382904053
    3. ' ,' → logprob: -10.126546859741211
    4. '(node' → logprob: -13.001546859741211
    5. ',
' → logprob: -13.751546859741211
    6. 'node' → logprob: -14.626546859741211
    7. '[node' → logprob: -15.626546859741211
    8. ' node' → logprob: -16.87654685974121
    9. ',n' → logprob: -16.87654685974121
    10. '   ' → logprob: -17.50154685974121

Token 733: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.001170225441455841
    2. ' node' → logprob: -6.7511701583862305
    3. '(node' → logprob: -19.001171112060547
    4. '	node' → logprob: -20.501171112060547
    5. '   ' → logprob: -20.751171112060547
    6. '[node' → logprob: -20.876171112060547
    7. '=node' → logprob: -21.376171112060547
    8. '       ' → logprob: -21.376171112060547
    9. '
' → logprob: -21.751171112060547
    10. '           ' → logprob: -22.751171112060547

Token 734: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.20141500234603882
    2. '.right' → logprob: -1.7014150619506836
    3. 'left' → logprob: -13.451415061950684
    4. 'right' → logprob: -15.201415061950684
    5. '[left' → logprob: -17.076414108276367
    6. '.' → logprob: -18.076414108276367
    7. '[right' → logprob: -19.576414108276367
    8. '```' → logprob: -19.951414108276367
    9. ' .' → logprob: -20.326414108276367
    10. 's' → logprob: -20.451414108276367

Token 735: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.9361264946837764e-07
    2. '.hash' → logprob: -15.625
    3. ' .' → logprob: -18.0
    4. 'length' → logprob: -18.375
    5. '.' → logprob: -19.25
    6. '.left' → logprob: -20.25
    7. '.len' → logprob: -20.75
    8. '.size' → logprob: -20.875
    9. '.width' → logprob: -21.625
    10. '.LENGTH' → logprob: -21.625

Token 736: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.827200897736475e-05
    2. '[' → logprob: -9.625078201293945
    3. '   ' → logprob: -12.125078201293945
    4. ' )' → logprob: -12.500078201293945
    5. ')
' → logprob: -13.500078201293945
    6. '       ' → logprob: -15.250078201293945
    7. ' ' → logprob: -15.375078201293945
    8. '<|end|>' → logprob: -15.375078201293945
    9. '[node' → logprob: -15.750078201293945
    10. ')}' → logprob: -16.125078201293945

Token 737: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0033879068214446306
    2. '   ' → logprob: -5.753387928009033
    3. ' def' → logprob: -8.503387451171875
    4. '	def' → logprob: -12.128387451171875
    5. ' ' → logprob: -13.878387451171875
    6. '
' → logprob: -14.878387451171875
    7. '```' → logprob: -14.878387451171875
    8. '  ' → logprob: -15.128387451171875
    9. '    
' → logprob: -16.753387451171875
    10. '<|end|>' → logprob: -17.253387451171875

Token 739: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.002485169330611825
    2. ' query' → logprob: -6.002485275268555
    3. 'get' → logprob: -11.752485275268555
    4. '_query' → logprob: -13.502485275268555
    5. 'hash' → logprob: -16.252485275268555
    6. ' get' → logprob: -16.877485275268555
    7. '	query' → logprob: -16.877485275268555
    8. '.query' → logprob: -18.377485275268555
    9. 'range' → logprob: -18.377485275268555
    10. ' ' → logprob: -18.752485275268555

Token 740: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. '(node' → logprob: -16.125003814697266
    4. '   ' → logprob: -17.500003814697266
    5. 'self' → logprob: -17.500003814697266
    6. ' (' → logprob: -17.625003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '(s' → logprob: -18.000003814697266
    9. 'def' → logprob: -18.125003814697266
    10. ',' → logprob: -18.500003814697266

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026515673846006393
    2. '(self' → logprob: -3.6515157222747803
    3. ',self' → logprob: -9.02651596069336
    4. 'self' → logprob: -10.15151596069336
    5. '   ' → logprob: -10.40151596069336
    6. ' ,' → logprob: -11.52651596069336
    7. '       ' → logprob: -12.27651596069336
    8. ',node' → logprob: -13.02651596069336
    9. '(node' → logprob: -13.27651596069336
    10. ')' → logprob: -13.40151596069336

Token 742: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32048946619033813
    2. 'node' → logprob: -1.3204894065856934
    3. ' node' → logprob: -5.320489406585693
    4. ' self' → logprob: -6.070489406585693
    5. '   ' → logprob: -14.695489883422852
    6. '(self' → logprob: -14.945489883422852
    7. '(node' → logprob: -15.320489883422852
    8. '       ' → logprob: -16.82048988342285
    9. ',node' → logprob: -16.82048988342285
    10. ' ' → logprob: -16.94548988342285

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. 'self' → logprob: -13.000004768371582
    3. ',self' → logprob: -13.500004768371582
    4. ' ,' → logprob: -13.750004768371582
    5. ' self' → logprob: -18.0000057220459
    6. '       ' → logprob: -18.3750057220459
    7. '(self' → logprob: -18.5000057220459
    8. ',
' → logprob: -18.6250057220459
    9. ',l' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.7500057220459

Token 744: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.5491004129871726e-05
    2. ' l' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.250045776367188
    4. 'node' → logprob: -19.000045776367188
    5. '	l' → logprob: -19.625045776367188
    6. 'self' → logprob: -20.125045776367188
    7. '```' → logprob: -21.500045776367188
    8. '       ' → logprob: -21.750045776367188
    9. ',l' → logprob: -22.000045776367188
    10. ')' → logprob: -22.375045776367188

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',r' → logprob: -14.125003814697266
    4. ',l' → logprob: -16.500003814697266
    5. ',n' → logprob: -17.250003814697266
    6. ',
' → logprob: -17.625003814697266
    7. '   ' → logprob: -19.000003814697266
    8. ',node' → logprob: -19.125003814697266
    9. 'r' → logprob: -19.625003814697266
    10. '       ' → logprob: -21.000003814697266

Token 746: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033546582562848926
    2. ' r' → logprob: -8.000335693359375
    3. ',' → logprob: -17.625335693359375
    4. 'node' → logprob: -18.125335693359375
    5. ',r' → logprob: -18.250335693359375
    6. '   ' → logprob: -18.375335693359375
    7. '       ' → logprob: -19.375335693359375
    8. 'l' → logprob: -19.500335693359375
    9. '	r' → logprob: -21.500335693359375
    10. '    ' → logprob: -21.875335693359375

Token 747: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006205004174262285
    2. '):' → logprob: -5.256205081939697
    3. '):
' → logprob: -7.006205081939697
    4. ')' → logprob: -10.881204605102539
    5. '       ' → logprob: -10.881204605102539
    6. ' ,' → logprob: -11.631204605102539
    7. '   ' → logprob: -12.256204605102539
    8. ',
' → logprob: -13.256204605102539
    9. '):
' → logprob: -13.256204605102539
    10. '),' → logprob: -13.256204605102539

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03326825425028801
    2. '   ' → logprob: -3.9082682132720947
    3. ' if' → logprob: -4.658268451690674
    4. '<|end|>' → logprob: -6.158268451690674
    5. 'if' → logprob: -8.158267974853516
    6. '	if' → logprob: -8.533267974853516
    7. ',' → logprob: -8.658267974853516
    8. '    ' → logprob: -9.283267974853516
    9. '      ' → logprob: -9.783267974853516
    10. '        ' → logprob: -10.158267974853516

Token 749: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008149892091751099
    2. '       ' → logprob: -7.500814914703369
    3. ' if' → logprob: -8.250815391540527
    4. '   ' → logprob: -14.750815391540527
    5. '	if' → logprob: -14.750815391540527
    6. '```' → logprob: -15.625815391540527
    7. 'If' → logprob: -17.12581443786621
    8. '           ' → logprob: -19.25081443786621
    9. '
' → logprob: -20.00081443786621
    10. '        ' → logprob: -20.25081443786621

Token 750: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.12693031132221222
    2. ' node' → logprob: -2.1269302368164062
    3. '   ' → logprob: -13.376930236816406
    4. '	node' → logprob: -15.251930236816406
    5. '(node' → logprob: -15.626930236816406
    6. ' ' → logprob: -15.626930236816406
    7. '[node' → logprob: -17.376930236816406
    8. '    ' → logprob: -17.751930236816406
    9. '  ' → logprob: -18.126930236816406
    10. 'not' → logprob: -19.001930236816406

Token 751: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.005698753986507654
    2. '.l' → logprob: -5.7556986808776855
    3. '.' → logprob: -6.0056986808776855
    4. 'r' → logprob: -11.380699157714844
    5. ' .' → logprob: -11.630699157714844
    6. ' is' → logprob: -11.755699157714844
    7. '   ' → logprob: -12.255699157714844
    8. '.n' → logprob: -12.255699157714844
    9. '`.' → logprob: -13.130699157714844
    10. ').' → logprob: -13.380699157714844

Token 752: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1269630640745163
    2. '<' → logprob: -2.1269631385803223
    3. '[' → logprob: -11.751962661743164
    4. '<class' → logprob: -12.126962661743164
    5. '<|end|>' → logprob: -12.376962661743164
    6. '<p' → logprob: -12.501962661743164
    7. ' ' → logprob: -13.001962661743164
    8. '   ' → logprob: -13.126962661743164
    9. '<ll' → logprob: -13.251962661743164
    10. '<int' → logprob: -13.751962661743164

Token 753: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00861456897109747
    2. ' l' → logprob: -4.758614540100098
    3. '	l' → logprob: -17.008615493774414
    4. '   ' → logprob: -19.008615493774414
    5. ' ' → logprob: -20.008615493774414
    6. '_l' → logprob: -20.133615493774414
    7. '           ' → logprob: -20.258615493774414
    8. '```' → logprob: -20.383615493774414
    9. '=' → logprob: -20.508615493774414
    10. '    ' → logprob: -20.508615493774414

Token 754: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0001398929744027555
    2. 'or' → logprob: -8.875140190124512
    3. '	or' → logprob: -16.750139236450195
    4. ' ' → logprob: -17.375139236450195
    5. '```' → logprob: -17.750139236450195
    6. '<|end|>' → logprob: -18.000139236450195
    7. '       ' → logprob: -18.875139236450195
    8. '        ' → logprob: -19.000139236450195
    9. '   ' → logprob: -19.250139236450195
    10. '    ' → logprob: -19.250139236450195

Token 755: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0619756355881691
    2. ' node' → logprob: -2.8119757175445557
    3. '           ' → logprob: -12.436975479125977
    4. '       ' → logprob: -13.061975479125977
    5. '	node' → logprob: -13.686975479125977
    6. '[node' → logprob: -15.311975479125977
    7. '```' → logprob: -15.436975479125977
    8. '(node' → logprob: -16.311975479125977
    9. ' ' → logprob: -16.436975479125977
    10. '   ' → logprob: -16.936975479125977

Token 756: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -5.466968650580384e-05
    2. '```' → logprob: -11.125054359436035
    3. '       ' → logprob: -11.875054359436035
    4. '.n' → logprob: -11.875054359436035
    5. '.' → logprob: -12.625054359436035
    6. '>.' → logprob: -12.625054359436035
    7. '[' → logprob: -13.125054359436035
    8. '           ' → logprob: -13.250054359436035
    9. 'user' → logprob: -13.375054359436035
    10. '.user' → logprob: -13.375054359436035

Token 757: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0486636720597744
    2. ' >' → logprob: -3.04866361618042
    3. ' or' → logprob: -9.673664093017578
    4. ' ' → logprob: -12.173664093017578
    5. 'or' → logprob: -13.173664093017578
    6. '   ' → logprob: -13.173664093017578
    7. '        ' → logprob: -14.548664093017578
    8. '    ' → logprob: -14.673664093017578
    9. '       ' → logprob: -14.798664093017578
    10. '&gt' → logprob: -14.798664093017578

Token 758: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014001218369230628
    2. ' r' → logprob: -8.875140190124512
    3. '	r' → logprob: -17.000139236450195
    4. '   ' → logprob: -17.375139236450195
    5. '_r' → logprob: -18.375139236450195
    6. ' ' → logprob: -18.625139236450195
    7. '[r' → logprob: -18.875139236450195
    8. '           ' → logprob: -19.000139236450195
    9. '       ' → logprob: -19.500139236450195
    10. '    ' → logprob: -20.125139236450195

Token 759: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39879676699638367
    2. ':
' → logprob: -1.148796796798706
    3. ' or' → logprob: -5.148796558380127
    4. '       ' → logprob: -5.273796558380127
    5. '           ' → logprob: -8.023797035217285
    6. ':return' → logprob: -8.148797035217285
    7. '   ' → logprob: -9.023797035217285
    8. '):
' → logprob: -9.273797035217285
    9. ',' → logprob: -10.148797035217285
    10. ')' → logprob: -11.773797035217285

Token 760: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012892541475594044
    2. '           ' → logprob: -4.887892723083496
    3. ' return' → logprob: -5.512892723083496
    4. 'return' → logprob: -7.387892723083496
    5. '   ' → logprob: -9.012892723083496
    6. '	return' → logprob: -9.387892723083496
    7. '```' → logprob: -9.512892723083496
    8. '	' → logprob: -9.637892723083496
    9. '<|end|>' → logprob: -10.012892723083496
    10. '	       ' → logprob: -10.512892723083496

Token 761: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5148003697395325
    2. '(None' → logprob: -1.5148003101348877
    3. 'return' (adapté à ' return') → logprob: -2.0148003101348877
    4. ' return' → logprob: -3.7648003101348877
    5. 'None' → logprob: -4.264800548553467
    6. '           ' → logprob: -5.014800548553467
    7. ' (' → logprob: -5.639800548553467
    8. ' None' → logprob: -6.389800548553467
    9. '(-' → logprob: -10.014800071716309
    10. '       ' → logprob: -11.139800071716309

Token 762: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004921489744447172
    2. '(None' → logprob: -7.750492095947266
    3. 'None' → logprob: -9.750492095947266
    4. ' (' → logprob: -12.875492095947266
    5. '0' → logprob: -15.000492095947266
    6. ' None' → logprob: -15.750492095947266
    7. '(-' → logprob: -16.375492095947266
    8. '((' → logprob: -18.375492095947266
    9. '(False' → logprob: -19.000492095947266
    10. '   ' → logprob: -20.875492095947266

Token 763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.126929372549057
    2. '(' → logprob: -2.12692928314209
    3. ' (' → logprob: -13.87692928314209
    4. ' ' → logprob: -15.50192928314209
    5. '(-' → logprob: -16.751930236816406
    6. '-' → logprob: -17.501930236816406
    7. '۰' → logprob: -18.001930236816406
    8. ')' → logprob: -18.376930236816406
    9. '(
' → logprob: -18.751930236816406
    10. '   ' → logprob: -18.751930236816406

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008197537390515208
    2. '0' → logprob: -7.125819683074951
    3. ' ,' → logprob: -11.25082015991211
    4. '000' → logprob: -13.75082015991211
    5. ',
' → logprob: -14.37582015991211
    6. ' ' → logprob: -15.12582015991211
    7. '00' → logprob: -15.37582015991211
    8. '```' → logprob: -16.87582015991211
    9. '
' → logprob: -17.12582015991211
    10. ')' → logprob: -17.37582015991211

Token 765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.000001907348633
    4. ')' → logprob: -19.250001907348633
    5. '۰' → logprob: -20.500001907348633
    6. '00' → logprob: -20.562501907348633
    7. '    ' → logprob: -20.937501907348633
    8. '000' → logprob: -21.125001907348633
    9. '-' → logprob: -21.187501907348633
    10. '  ' → logprob: -21.187501907348633

Token 766: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067534977570176125
    2. ')
' → logprob: -5.006753444671631
    3. ',' → logprob: -11.131753921508789
    4. '       ' → logprob: -11.131753921508789
    5. '   ' → logprob: -12.006753921508789
    6. '),' → logprob: -13.756753921508789
    7. ' )' → logprob: -14.506753921508789
    8. ')
' → logprob: -15.256753921508789
    9. ')

' → logprob: -15.506753921508789
    10. ')\
' → logprob: -15.506753921508789

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.77022064034827e-05
    2. ' ' → logprob: -9.500097274780273
    3. 'node' → logprob: -11.500097274780273
    4. '-' → logprob: -12.250097274780273
    5. 'r' → logprob: -13.000097274780273
    6. 'False' → logprob: -13.125097274780273
    7. ')' → logprob: -13.875097274780273
    8. 'True' → logprob: -14.250097274780273
    9. ' node' → logprob: -14.875097274780273
    10. '(' → logprob: -14.875097274780273

Token 768: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2024526447057724
    2. ')' → logprob: -1.7024526596069336
    3. ' )
' → logprob: -7.202452659606934
    4. '       ' → logprob: -9.077452659606934
    5. ',' → logprob: -9.202452659606934
    6. ' )' → logprob: -9.827452659606934
    7. '   ' → logprob: -11.327452659606934
    8. ',)
' → logprob: -12.577452659606934
    9. '
' → logprob: -13.202452659606934
    10. '0' → logprob: -13.327452659606934

Token 769: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07140373438596725
    2. '<|end|>' → logprob: -3.321403741836548
    3. '
' → logprob: -3.821403741836548
    4. '        
' → logprob: -5.446403503417969
    5. ',' → logprob: -6.571403503417969
    6. ')' → logprob: -6.571403503417969
    7. '	' → logprob: -7.821403503417969
    8. '(' → logprob: -7.821403503417969
    9. '<|end|>' → logprob: -7.821403503417969
    10. '   ' → logprob: -8.071403503417969

Token 770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5305351614952087
    2. '        
' → logprob: -2.2805352210998535
    3. '
' → logprob: -2.4055352210998535
    4. '(' → logprob: -2.6555352210998535
    5. ' (' → logprob: -2.9055352210998535
    6. ' ' → logprob: -3.7805352210998535
    7. '<|end|>' → logprob: -4.0305352210998535
    8. '    
' → logprob: -4.5305352210998535
    9. '  
' → logprob: -4.6555352210998535
    10. ' 
' → logprob: -4.9055352210998535

Token 771: ' hash' (ID: 10691)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1827978789806366
    2. 'False' → logprob: -2.682797908782959
    3. 'None' → logprob: -2.807797908782959
    4. '(' → logprob: -3.557797908782959
    5. 'True' → logprob: -4.807797908782959
    6. '-' → logprob: -7.807797908782959
    7. '(None' → logprob: -7.807797908782959
    8. '(-' → logprob: -8.0577974319458
    9. '(False' → logprob: -8.1827974319458
    10. '(True' → logprob: -9.3077974319458

Token 772: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11874013394117355
    2. ' ,' → logprob: -2.6187400817871094
    3. '(' → logprob: -4.368740081787109
    4. '_val' → logprob: -4.743740081787109
    5. '<|end|>' → logprob: -4.868740081787109
    6. ' (' → logprob: -5.618740081787109
    7. '0' → logprob: -6.618740081787109
    8. ')' → logprob: -6.743740081787109
    9. '_,' → logprob: -7.493740081787109
    10. ',val' → logprob: -7.618740081787109

Token 773: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024670789018273354
    2. ' ,' → logprob: -3.7746708393096924
    3. '_val' → logprob: -7.399670600891113
    4. '(' → logprob: -8.399670600891113
    5. ',val' → logprob: -8.774670600891113
    6. ' and' → logprob: -9.274670600891113
    7. ',(' → logprob: -9.774670600891113
    8. '<|end|>' → logprob: -10.024670600891113
    9. ' (' → logprob: -10.149670600891113
    10. 'and' → logprob: -10.149670600891113

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025471694767475128
    2. '<|end|>' → logprob: -4.0254716873168945
    3. ')' → logprob: -5.2754716873168945
    4. ' ,' → logprob: -7.0254716873168945
    5. '
' → logprob: -8.275471687316895
    6. ',
' → logprob: -8.525471687316895
    7. '   ' → logprob: -8.775471687316895
    8. '<|end|>' → logprob: -8.900471687316895
    9. '(' → logprob: -9.150471687316895
    10. ' (' → logprob: -9.650471687316895

Token 775: ' length' (ID: 5517)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005000127712264657
    2. ' ' → logprob: -7.750500202178955
    3. 'node' → logprob: -10.750499725341797
    4. '-' → logprob: -11.000499725341797
    5. 'None' → logprob: -11.250499725341797
    6. ' -' → logprob: -12.375499725341797
    7. 'False' → logprob: -12.500499725341797
    8. 'length' → logprob: -12.875499725341797
    9. '(' → logprob: -13.375499725341797
    10. 'True' → logprob: -13.875499725341797

Token 776: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5464087128639221
    2. '0' → logprob: -0.9214087128639221
    3. ' ,' → logprob: -4.671408653259277
    4. ' ' → logprob: -5.171408653259277
    5. '       ' → logprob: -5.796408653259277
    6. '=' → logprob: -6.921408653259277
    7. '
' → logprob: -6.921408653259277
    8. ')' → logprob: -7.171408653259277
    9. '   ' → logprob: -8.171408653259277
    10. ' =' → logprob: -8.171408653259277

Token 777: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030308065935969353
    2. ',' → logprob: -3.5303080081939697
    3. ' ' → logprob: -8.65530776977539
    4. ' and' → logprob: -8.78030776977539
    5. 'and' → logprob: -10.15530776977539
    6. '(node' → logprob: -10.15530776977539
    7. '(' → logprob: -10.28030776977539
    8. '=' → logprob: -10.65530776977539
    9. 'node' → logprob: -10.78030776977539
    10. ')' → logprob: -11.03030776977539

Token 778: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6856775879859924
    2. '
' → logprob: -1.0606775283813477
    3. '<|end|>' → logprob: -2.4356775283813477
    4. '        
' → logprob: -3.9356775283813477
    5. ',' → logprob: -4.310677528381348
    6. ')' → logprob: -4.435677528381348
    7. '  
' → logprob: -5.310677528381348
    8. '    
' → logprob: -5.435677528381348
    9. '   ' → logprob: -6.185677528381348
    10. '<|end|>' → logprob: -6.685677528381348

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19228239357471466
    2. ')' → logprob: -2.5672824382781982
    3. '(' → logprob: -3.6922824382781982
    4. '   ' → logprob: -3.9422824382781982
    5. '        
' → logprob: -4.067282199859619
    6. '<|end|>' → logprob: -4.817282199859619
    7. '
' → logprob: -5.317282199859619
    8. '```' → logprob: -5.317282199859619
    9. ',' → logprob: -5.567282199859619
    10. '    
' → logprob: -5.817282199859619

Token 780: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5826698541641235
    2. '       ' → logprob: -0.8326698541641235
    3. 'if' (adapté à ' if') → logprob: -5.082669734954834
    4. '```' → logprob: -8.582670211791992
    5. '   ' → logprob: -9.457670211791992
    6. 'val' → logprob: -9.832670211791992
    7. '	if' → logprob: -9.832670211791992
    8. ',' → logprob: -9.957670211791992
    9. ' val' → logprob: -10.707670211791992
    10. '        
' → logprob: -11.832670211791992

Token 781: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000431861262768507
    2. ' l' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.000432014465332
    4. '	l' → logprob: -15.750432014465332
    5. 'node' → logprob: -16.000431060791016
    6. ' ' → logprob: -17.375431060791016
    7. '[l' → logprob: -17.875431060791016
    8. '$l' → logprob: -19.000431060791016
    9. '       ' → logprob: -19.250431060791016
    10. '
' → logprob: -19.250431060791016

Token 782: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.39056363701820374
    2. ' <=' → logprob: -1.1405636072158813
    3. '>=' → logprob: -5.890563488006592
    4. ' >=' → logprob: -7.140563488006592
    5. '=' → logprob: -9.89056396484375
    6. '==' → logprob: -11.01556396484375
    7. '   ' → logprob: -11.39056396484375
    8. '[' → logprob: -11.39056396484375
    9. '>' → logprob: -11.64056396484375
    10. '<' → logprob: -11.76556396484375

Token 783: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005536287208087742
    2. ' node' → logprob: -7.500553607940674
    3. '(node' → logprob: -15.750554084777832
    4. '       ' → logprob: -15.875554084777832
    5. '[node' → logprob: -16.000553131103516
    6. '	node' → logprob: -16.750553131103516
    7. '
' → logprob: -16.875553131103516
    8. '=node' → logprob: -17.625553131103516
    9. '   ' → logprob: -18.000553131103516
    10. '```' → logprob: -18.125553131103516

Token 784: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0001625379954930395
    2. '.node' → logprob: -9.250162124633789
    3. '.' → logprob: -9.750162124633789
    4. 'node' → logprob: -12.750162124633789
    5. '.n' → logprob: -13.000162124633789
    6. ' .' → logprob: -13.500162124633789
    7. '[node' → logprob: -14.500162124633789
    8. '(node' → logprob: -15.375162124633789
    9. '.left' → logprob: -15.750162124633789
    10. '   ' → logprob: -16.12516212463379

Token 785: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03364938497543335
    2. 'and' → logprob: -3.408649444580078
    3. '```' → logprob: -13.783649444580078
    4. '       ' → logprob: -14.408649444580078
    5. '        ' → logprob: -14.658649444580078
    6. '           ' → logprob: -14.658649444580078
    7. ',' → logprob: -15.283649444580078
    8. ' ' → logprob: -15.408649444580078
    9. '   ' → logprob: -15.533649444580078
    10. '<|end|>' → logprob: -15.783649444580078

Token 786: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.04859054833650589
    2. ' node' → logprob: -3.048590660095215
    3. '           ' → logprob: -13.173590660095215
    4. '       ' → logprob: -14.673590660095215
    5. '(node' → logprob: -15.048590660095215
    6. '[node' → logprob: -15.673590660095215
    7. '   ' → logprob: -15.923590660095215
    8. '	node' → logprob: -16.0485897064209
    9. '
' → logprob: -16.6735897064209
    10. ' ' → logprob: -16.7985897064209

Token 787: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.001034595537930727
    2. 'r' → logprob: -6.876034736633301
    3. '	r' → logprob: -14.3760347366333
    4. '   ' → logprob: -14.6260347366333
    5. '.' → logprob: -15.3760347366333
    6. '       ' → logprob: -15.8760347366333
    7. ' ' → logprob: -16.001033782958984
    8. '
' → logprob: -16.251033782958984
    9. ' r' → logprob: -16.251033782958984
    10. '(r' → logprob: -16.751033782958984

Token 788: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5231549739837646
    2. '<=' → logprob: -0.8981549739837646
    3. '>=' → logprob: -11.773155212402344
    4. '<|end|>' → logprob: -11.898155212402344
    5. '```' → logprob: -12.023155212402344
    6. '       ' → logprob: -13.148155212402344
    7. ' >=' → logprob: -13.273155212402344
    8. '   ' → logprob: -13.273155212402344
    9. ']<=' → logprob: -13.273155212402344
    10. ' ' → logprob: -14.273155212402344

Token 789: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004079828038811684
    2. ' r' → logprob: -5.504079818725586
    3. 'node' → logprob: -14.379079818725586
    4. '   ' → logprob: -14.504079818725586
    5. '       ' → logprob: -15.754079818725586
    6. '	r' → logprob: -17.254079818725586
    7. '           ' → logprob: -17.379079818725586
    8. ' node' → logprob: -17.379079818725586
    9. '
' → logprob: -18.254079818725586
    10. ' ' → logprob: -18.254079818725586

Token 790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6244986057281494
    2. ':' → logprob: -0.9994986057281494
    3. '       ' → logprob: -2.4994986057281494
    4. ':return' → logprob: -4.87449836730957
    5. '           ' → logprob: -5.87449836730957
    6. ',' → logprob: -6.24949836730957
    7. '):
' → logprob: -7.49949836730957
    8. '<|end|>' → logprob: -7.87449836730957
    9. 'return' → logprob: -8.37449836730957
    10. ' and' → logprob: -8.99949836730957

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04288659617304802
    2. '       ' → logprob: -3.66788649559021
    3. ' return' → logprob: -4.292886734008789
    4. 'return' → logprob: -6.167886734008789
    5. '	       ' → logprob: -8.042886734008789
    6. '		' → logprob: -8.292886734008789
    7. '	return' → logprob: -9.792886734008789
    8. '```' → logprob: -10.917886734008789
    9. '          ' → logprob: -11.792886734008789
    10. '	' → logprob: -12.167886734008789

Token 792: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01849452592432499
    2. ' return' → logprob: -4.018494606018066
    3. '           ' → logprob: -8.643494606018066
    4. '       ' → logprob: -8.768494606018066
    5. '	return' → logprob: -11.643494606018066
    6. '{return' → logprob: -13.643494606018066
    7. ':return' → logprob: -13.768494606018066
    8. '
' → logprob: -15.143494606018066
    9. '```' → logprob: -15.143494606018066
    10. '(return' → logprob: -15.643494606018066

Token 793: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.002312145894393325
    2. '(*' → logprob: -6.627312183380127
    3. 'node' → logprob: -7.127312183380127
    4. ' (' → logprob: -8.627311706542969
    5. '(' → logprob: -13.127311706542969
    6. ' node' → logprob: -14.377311706542969
    7. '[node' → logprob: -15.127311706542969
    8. '((*' → logprob: -15.127311706542969
    9. '(self' → logprob: -15.752311706542969
    10. '   ' → logprob: -16.00231170654297

Token 794: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0001867326645879075
    2. ' node' → logprob: -8.875186920166016
    3. '*' → logprob: -10.250186920166016
    4. ')' → logprob: -11.750186920166016
    5. ',node' → logprob: -14.000186920166016
    6. '   ' → logprob: -14.250186920166016
    7. '(node' → logprob: -14.250186920166016
    8. '	node' → logprob: -14.750186920166016
    9. '
' → logprob: -15.000186920166016
    10. '[node' → logprob: -15.375186920166016

Token 795: '.hash' (ID: 25140)
  Prédit: '.hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hash' → logprob: -5.4192871175473556e-05
    2. 'hash' → logprob: -10.000054359436035
    3. '.node' → logprob: -12.375054359436035
    4. '.' → logprob: -12.625054359436035
    5. ').' → logprob: -14.750054359436035
    6. ' .' → logprob: -14.875054359436035
    7. 'node' → logprob: -16.50005340576172
    8. '	hash' → logprob: -16.50005340576172
    9. '   ' → logprob: -17.00005340576172
    10. '
' → logprob: -17.12505340576172

Token 796: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.8325677703833207e-05
    2. 'val' → logprob: -10.625028610229492
    3. '_node' → logprob: -14.000028610229492
    4. 'node' → logprob: -14.250028610229492
    5. ')' → logprob: -15.000028610229492
    6. '._' → logprob: -15.125028610229492
    7. '[' → logprob: -15.125028610229492
    8. '[node' → logprob: -15.375028610229492
    9. '```' → logprob: -15.625028610229492
    10. '.val' → logprob: -15.750028610229492

Token 797: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09140296280384064
    2. ',' → logprob: -2.466403007507324
    3. ' ,' → logprob: -6.716403007507324
    4. ',node' → logprob: -6.966403007507324
    5. ')' → logprob: -9.091403007507324
    6. '0' → logprob: -9.716403007507324
    7. '
' → logprob: -9.841403007507324
    8. ' [' → logprob: -11.341403007507324
    9. '[node' → logprob: -11.341403007507324
    10. ')
' → logprob: -11.716403007507324

Token 798: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -16.500001907348633
    4. ',' → logprob: -16.687501907348633
    5. ')' → logprob: -17.812501907348633
    6. ']' → logprob: -17.812501907348633
    7. '   ' → logprob: -17.875001907348633
    8. '۰' → logprob: -18.000001907348633
    9. '1' → logprob: -18.062501907348633
    10. '[' → logprob: -18.625001907348633

Token 799: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009998897090554237
    2. ',node' → logprob: -4.634998798370361
    3. ' ,' → logprob: -8.50999927520752
    4. '),' → logprob: -10.50999927520752
    5. ',
' → logprob: -11.50999927520752
    6. ',n' → logprob: -13.63499927520752
    7. '[node' → logprob: -14.50999927520752
    8. '       ' → logprob: -14.75999927520752
    9. '(node' → logprob: -15.00999927520752
    10. '‌,' → logprob: -15.13499927520752

Token 800: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.836499985889532e-05
    2. ' node' → logprob: -9.7500581741333
    3. '(node' → logprob: -19.625059127807617
    4. ',node' → logprob: -19.625059127807617
    5. '[node' → logprob: -21.125059127807617
    6. '	node' → logprob: -21.125059127807617
    7. '
' → logprob: -21.125059127807617
    8. '   ' → logprob: -22.250059127807617
    9. ')' → logprob: -24.125059127807617
    10. '_node' → logprob: -24.250059127807617

Token 801: '.hash' (ID: 25140)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.04515081271529198
    2. 'node' → logprob: -3.2951507568359375
    3. '1' → logprob: -5.4201507568359375
    4. '_hash' → logprob: -6.6701507568359375
    5. '.hash' → logprob: -7.5451507568359375
    6. '[' → logprob: -7.9201507568359375
    7. '[node' → logprob: -8.420150756835938
    8. ' hash' → logprob: -9.670150756835938
    9. '.node' → logprob: -9.920150756835938
    10. '
' → logprob: -10.295150756835938

Token 802: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0011928485473617911
    2. 'val' → logprob: -6.751193046569824
    3. '[' → logprob: -11.376193046569824
    4. '[node' → logprob: -12.376193046569824
    5. 'node' → logprob: -12.501193046569824
    6. 'hash' → logprob: -14.001193046569824
    7. '.val' → logprob: -14.501193046569824
    8. '1' → logprob: -14.751193046569824
    9. 'Val' → logprob: -15.251193046569824
    10. '[val' → logprob: -15.376193046569824

Token 803: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.73314929776825e-05
    2. '1' → logprob: -9.37508773803711
    3. '[node' → logprob: -13.87508773803711
    4. 'node' → logprob: -14.62508773803711
    5. '
' → logprob: -15.37508773803711
    6. ')' → logprob: -15.50008773803711
    7. '[
' → logprob: -15.62508773803711
    8. ')[' → logprob: -16.00008773803711
    9. '```' → logprob: -16.12508773803711
    10. ',' → logprob: -16.37508773803711

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -15.375000953674316
    3. '
' → logprob: -15.375000953674316
    4. 'node' → logprob: -15.625000953674316
    5. '```' → logprob: -17.875
    6. '[' → logprob: -18.0
    7. '   ' → logprob: -18.375
    8. ' ' → logprob: -19.0625
    9. '-' → logprob: -19.3125
    10. '

' → logprob: -19.8125

Token 805: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002289664000272751
    2. ',node' → logprob: -6.252289772033691
    3. ' ,' → logprob: -8.002289772033691
    4. '),' → logprob: -10.877289772033691
    5. ',
' → logprob: -12.127289772033691
    6. '       ' → logprob: -14.752289772033691
    7. ')' → logprob: -15.002289772033691
    8. '   ' → logprob: -15.002289772033691
    9. ',n' → logprob: -15.502289772033691
    10. 'node' → logprob: -15.752289772033691

Token 806: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0007100477814674377
    2. ' node' → logprob: -7.2507100105285645
    3. '(node' → logprob: -17.625709533691406
    4. '	node' → logprob: -18.125709533691406
    5. '   ' → logprob: -19.125709533691406
    6. 'self' → logprob: -19.125709533691406
    7. '[node' → logprob: -19.875709533691406
    8. '
' → logprob: -20.000709533691406
    9. ' ' → logprob: -20.250709533691406
    10. ',node' → logprob: -20.500709533691406

Token 807: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.004094073548913002
    2. '.node' → logprob: -5.504094123840332
    3. '.len' → logprob: -12.004094123840332
    4. ' .' → logprob: -12.629094123840332
    5. '.' → logprob: -13.129094123840332
    6. '.size' → logprob: -13.379094123840332
    7. '[node' → logprob: -14.379094123840332
    8. ')' → logprob: -14.379094123840332
    9. 'length' → logprob: -14.879094123840332
    10. 'node' → logprob: -15.129094123840332

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004951290902681649
    2. ')
' → logprob: -7.625494956970215
    3. '       ' → logprob: -12.875494956970215
    4. ' )' → logprob: -13.000494956970215
    5. ')return' → logprob: -13.625494956970215
    6. '   ' → logprob: -15.625494956970215
    7. '<|end|>' → logprob: -15.750494956970215
    8. '),' → logprob: -16.00049591064453
    9. ')

' → logprob: -16.00049591064453
    10. ')\
' → logprob: -16.00049591064453

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00377669301815331
    2. '   ' → logprob: -5.628776550292969
    3. '
' → logprob: -9.253776550292969
    4. '	' → logprob: -10.253776550292969
    5. '        
' → logprob: -11.378776550292969
    6. '```' → logprob: -12.003776550292969
    7. '	   ' → logprob: -12.628776550292969
    8. '    
' → logprob: -12.753776550292969
    9. 'm' → logprob: -13.128776550292969
    10. '      ' → logprob: -13.253776550292969

Token 810: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10541979223489761
    2. '       ' → logprob: -2.480419874191284
    3. ' self' → logprob: -4.230419635772705
    4. '```' → logprob: -7.105419635772705
    5. '   ' → logprob: -7.730419635772705
    6. '
' → logprob: -8.355420112609863
    7. '	self' → logprob: -8.855420112609863
    8. '        
' → logprob: -9.605420112609863
    9. '``' → logprob: -10.230420112609863
    10. '[self' → logprob: -11.480420112609863

Token 811: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.0019326817709952593
    2. 'push' → logprob: -6.251932621002197
    3. '.' → logprob: -12.501933097839355
    4. ' push' → logprob: -15.501933097839355
    5. ' .' → logprob: -16.12693214416504
    6. '	push' → logprob: -17.25193214416504
    7. '.
' → logprob: -19.62693214416504
    8. '.p' → logprob: -19.87693214416504
    9. '   ' → logprob: -19.87693214416504
    10. 'Push' → logprob: -20.00193214416504

Token 812: 'down' (ID: 4653)
  Prédit: 'down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -1.9361264946837764e-07
    2. ' down' → logprob: -17.125
    3. 'node' → logprob: -17.375
    4. '(node' → logprob: -19.5
    5. 'def' → logprob: -19.875
    6. 'DOWN' → logprob: -20.375
    7. 'dow' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '_down' → logprob: -20.875

Token 813: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. 'node' → logprob: -16.875
    3. '(' → logprob: -17.375
    4. ' (' → logprob: -20.625
    5. ' node' → logprob: -20.75
    6. ',node' → logprob: -20.75
    7. '(
' → logprob: -21.25
    8. '[node' → logprob: -21.875
    9. '=node' → logprob: -22.25
    10. '(n' → logprob: -22.375

Token 814: ')
' (ID: 446)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.908022285439074e-05
    2. ',node' → logprob: -10.000059127807617
    3. 'node' → logprob: -11.875059127807617
    4. ')' → logprob: -12.500059127807617
    5. ',' → logprob: -13.125059127807617
    6. '=node' → logprob: -15.250059127807617
    7. '(' → logprob: -15.375059127807617
    8. ' (' → logprob: -15.750059127807617
    9. '[node' → logprob: -15.875059127807617
    10. ' node' → logprob: -16.125059127807617

Token 815: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2077619880437851
    2. ' left' → logprob: -1.7077620029449463
    3. 'l' → logprob: -5.207761764526367
    4. '       ' → logprob: -7.457761764526367
    5. '	left' → logprob: -9.457761764526367
    6. '```' → logprob: -9.582761764526367
    7. '   ' → logprob: -10.332761764526367
    8. ' l' → logprob: -10.832761764526367
    9. 'lv' → logprob: -10.957761764526367
    10. 'L' → logprob: -11.207761764526367

Token 816: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0015299785882234573
    2. 'lh' → logprob: -7.626530170440674
    3. ' left' → logprob: -7.876530170440674
    4. 'hl' → logprob: -8.001529693603516
    5. 'l' → logprob: -8.501529693603516
    6. 'lhs' → logprob: -9.626529693603516
    7. 'lv' → logprob: -10.751529693603516
    8. 'L' → logprob: -11.376529693603516
    9. ' lh' → logprob: -11.751529693603516
    10. '       ' → logprob: -12.751529693603516

Token 817: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.004610030446201563
    2. 'hash' → logprob: -5.879610061645508
    3. '_res' → logprob: -7.129610061645508
    4. '_val' → logprob: -7.504610061645508
    5. '_h' → logprob: -8.004610061645508
    6. ' =' → logprob: -9.879610061645508
    7. 'res' → logprob: -10.879610061645508
    8. 'h' → logprob: -11.129610061645508
    9. '_result' → logprob: -11.504610061645508
    10. '=' → logprob: -11.754610061645508

Token 818: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.479636549949646
    2. '=' → logprob: -0.979636549949646
    3. ',' → logprob: -5.2296366691589355
    4. ',left' → logprob: -9.479636192321777
    5. 'left' → logprob: -10.729636192321777
    6. ' ,' → logprob: -11.104636192321777
    7. '=node' → logprob: -11.104636192321777
    8. '_val' → logprob: -11.229636192321777
    9. 'val' → logprob: -11.729636192321777
    10. ',val' → logprob: -11.729636192321777

Token 819: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006718571297824383
    2. ' self' → logprob: -5.006718635559082
    3. '   ' → logprob: -12.756718635559082
    4. '(self' → logprob: -15.881718635559082
    5. '	self' → logprob: -16.381717681884766
    6. '
' → logprob: -16.881717681884766
    7. ' ' → logprob: -17.256717681884766
    8. '       ' → logprob: -17.631717681884766
    9. ' ' → logprob: -18.131717681884766
    10. '*self' → logprob: -18.631717681884766

Token 820: '.query' (ID: 7608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16125370562076569
    2. 'query' → logprob: -1.9112536907196045
    3. '.query' → logprob: -7.411253929138184
    4. ' self' → logprob: -7.911253929138184
    5. 'node' → logprob: -10.286253929138184
    6. ' query' → logprob: -10.911253929138184
    7. '(self' → logprob: -12.411253929138184
    8. '=query' → logprob: -14.786253929138184
    9. '   ' → logprob: -14.911253929138184
    10. '.self' → logprob: -15.286253929138184

Token 821: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.750003814697266
    3. 'node' → logprob: -14.250003814697266
    4. '(
' → logprob: -15.375003814697266
    5. ',node' → logprob: -16.875003814697266
    6. ' node' → logprob: -17.625003814697266
    7. ' (' → logprob: -17.875003814697266
    8. '[node' → logprob: -18.250003814697266
    9. '=node' → logprob: -18.500003814697266
    10. '(n' → logprob: -19.750003814697266

Token 822: '.left' (ID: 15388)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.1708528697490692
    2. ',' → logprob: -2.5458528995513916
    3. '.node' → logprob: -2.9208528995513916
    4. ',node' → logprob: -3.9208528995513916
    5. 'node' → logprob: -6.1708526611328125
    6. ' node' → logprob: -7.0458526611328125
    7. ')' → logprob: -7.5458526611328125
    8. '.left' → logprob: -8.045852661132812
    9. ' (' → logprob: -8.045852661132812
    10. ' ,' → logprob: -8.795852661132812

Token 823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008757318137213588
    2. ',l' → logprob: -7.250875949859619
    3. ' ,' → logprob: -8.875875473022461
    4. ',node' → logprob: -10.750875473022461
    5. '(' → logprob: -13.625875473022461
    6. ',n' → logprob: -14.000875473022461
    7. ')' → logprob: -14.375875473022461
    8. '(node' → logprob: -14.375875473022461
    9. '(l' → logprob: -15.000875473022461
    10. ',k' → logprob: -15.875875473022461

Token 824: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170225441455841
    2. ' l' → logprob: -6.7511701583862305
    3. '	l' → logprob: -17.001171112060547
    4. '_l' → logprob: -19.376171112060547
    5. 'node' → logprob: -19.876171112060547
    6. ',l' → logprob: -20.751171112060547
    7. '   ' → logprob: -20.876171112060547
    8. '       ' → logprob: -20.876171112060547
    9. '    ' → logprob: -21.001171112060547
    10. ' ' → logprob: -21.126171112060547

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027921271976083517
    2. ',r' → logprob: -8.500279426574707
    3. ' ,' → logprob: -9.500279426574707
    4. ',l' → logprob: -14.625279426574707
    5. 'r' → logprob: -16.00027847290039
    6. ',
' → logprob: -16.37527847290039
    7. ',n' → logprob: -17.12527847290039
    8. ',right' → logprob: -17.37527847290039
    9. ',m' → logprob: -18.00027847290039
    10. ' ' → logprob: -18.50027847290039

Token 826: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004307884373702109
    2. ' r' → logprob: -7.750430583953857
    3. ',r' → logprob: -18.375431060791016
    4. '	r' → logprob: -18.875431060791016
    5. 'l' → logprob: -19.125431060791016
    6. '   ' → logprob: -19.500431060791016
    7. ',' → logprob: -19.875431060791016
    8. '       ' → logprob: -21.375431060791016
    9. 'max' → logprob: -21.625431060791016
    10. ' ' → logprob: -21.875431060791016

Token 827: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05446354299783707
    2. ',' → logprob: -3.4294636249542236
    3. ')' → logprob: -3.9294636249542236
    4. '       ' → logprob: -7.5544633865356445
    5. ')
' → logprob: -9.304463386535645
    6. '   ' → logprob: -9.429463386535645
    7. '
' → logprob: -9.554463386535645
    8. '	' → logprob: -10.554463386535645
    9. ')[' → logprob: -10.554463386535645
    10. '[:-' → logprob: -10.554463386535645

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.499421089887619
    2. '```' → logprob: -1.7494211196899414
    3. '   ' → logprob: -2.9994211196899414
    4. 'right' → logprob: -3.3744211196899414
    5. '``' → logprob: -3.3744211196899414
    6. '        
' → logprob: -4.124421119689941
    7. '
' → logprob: -4.374421119689941
    8. '    
' → logprob: -4.749421119689941
    9. 'left' → logprob: -4.874421119689941
    10. '('\' → logprob: -4.999421119689941

Token 829: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.004079589620232582
    2. ' right' → logprob: -5.504079818725586
    3. '	right' → logprob: -13.754079818725586
    4. '       ' → logprob: -16.379079818725586
    5. '.right' → logprob: -18.754079818725586
    6. '右' → logprob: -19.254079818725586
    7. '   ' → logprob: -19.379079818725586
    8. '_right' → logprob: -19.504079818725586
    9. 'r' → logprob: -19.629079818725586
    10. ',right' → logprob: -19.629079818725586

Token 830: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -6.182190554682165e-05
    2. '_' → logprob: -10.125061988830566
    3. '_val' → logprob: -11.625061988830566
    4. ')_' → logprob: -12.125061988830566
    5. ' _' → logprob: -12.750061988830566
    6. ''_' → logprob: -13.375061988830566
    7. '_query' → logprob: -14.875061988830566
    8. '```' → logprob: -15.000061988830566
    9. '"_' → logprob: -15.125061988830566
    10. ')' → logprob: -15.250061988830566

Token 831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ')' → logprob: -15.099078178405762
    4. ',' → logprob: -15.349078178405762
    5. ' ' → logprob: -16.474077224731445
    6. '   ' → logprob: -16.849077224731445
    7. '```' → logprob: -17.599077224731445
    8. '_' → logprob: -17.724077224731445
    9. '[' → logprob: -18.099077224731445
    10. ' =
' → logprob: -18.224077224731445

Token 832: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052360063418745995
    2. ' self' → logprob: -5.2552361488342285
    3. '(self' → logprob: -13.13023567199707
    4. '   ' → logprob: -15.88023567199707
    5. '       ' → logprob: -16.88023567199707
    6. '
' → logprob: -17.75523567199707
    7. ' ' → logprob: -17.75523567199707
    8. '	self' → logprob: -18.00523567199707
    9. ' ' → logprob: -18.75523567199707
    10. '```' → logprob: -18.88023567199707

Token 833: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.5759645700454712
    2. 'query' → logprob: -0.8259645700454712
    3. '(query' → logprob: -11.07596492767334
    4. ' query' → logprob: -12.70096492767334
    5. '	query' → logprob: -13.07596492767334
    6. 'right' → logprob: -13.32596492767334
    7. '$query' → logprob: -13.95096492767334
    8. 'self' → logprob: -14.20096492767334
    9. '(self' → logprob: -15.20096492767334
    10. '```' → logprob: -15.32596492767334

Token 834: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. 'node' → logprob: -17.625
    4. '(
' → logprob: -18.25
    5. ' (' → logprob: -18.625
    6. ',node' → logprob: -18.625
    7. '[node' → logprob: -18.75
    8. '=node' → logprob: -19.5
    9. ' node' → logprob: -20.75
    10. '(root' → logprob: -21.0

Token 835: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.016473475843667984
    2. '(node' → logprob: -4.641473293304443
    3. '.left' → logprob: -5.141473293304443
    4. '.node' → logprob: -7.141473293304443
    5. 'node' → logprob: -11.141473770141602
    6. ',node' → logprob: -11.516473770141602
    7. '[node' → logprob: -12.141473770141602
    8. ',' → logprob: -12.266473770141602
    9. '.' → logprob: -12.891473770141602
    10. '```' → logprob: -13.016473770141602

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00271726050414145
    2. ',node' → logprob: -6.0027174949646
    3. '(node' → logprob: -8.502717018127441
    4. 'node' → logprob: -10.502717018127441
    5. ' ,' → logprob: -12.377717018127441
    6. ' node' → logprob: -12.877717018127441
    7. '[node' → logprob: -13.377717018127441
    8. ')' → logprob: -13.627717018127441
    9. '[' → logprob: -14.627717018127441
    10. '```' → logprob: -15.002717018127441

Token 837: ' l' (ID: 305)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.027297351509332657
    2. ' node' → logprob: -3.777297258377075
    3. 'l' → logprob: -6.152297496795654
    4. 'r' → logprob: -6.277297496795654
    5. ' l' → logprob: -10.402297019958496
    6. ' r' → logprob: -12.527297019958496
    7. '(node' → logprob: -13.277297019958496
    8. '	node' → logprob: -15.152297019958496
    9. 'Node' → logprob: -15.527297019958496
    10. '_node' → logprob: -15.777297019958496

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004402820952236652
    2. ',r' → logprob: -5.7544026374816895
    3. 'r' → logprob: -7.0044026374816895
    4. ',l' → logprob: -8.379403114318848
    5. ' ,' → logprob: -9.754403114318848
    6. 'l' → logprob: -10.754403114318848
    7. ' ' → logprob: -13.129403114318848
    8. '```' → logprob: -13.379403114318848
    9. ')' → logprob: -14.629403114318848
    10. '1' → logprob: -14.754403114318848

Token 839: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003802680876106024
    2. ' r' → logprob: -7.875380039215088
    3. '	r' → logprob: -16.37537956237793
    4. ',r' → logprob: -17.25037956237793
    5. '   ' → logprob: -17.37537956237793
    6. '
' → logprob: -18.25037956237793
    7. ' ' → logprob: -18.62537956237793
    8. '(r' → logprob: -19.62537956237793
    9. '[r' → logprob: -19.62537956237793
    10. ',' → logprob: -19.75037956237793

Token 840: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23868802189826965
    2. ')
' → logprob: -1.6136879920959473
    3. ',' → logprob: -4.738687992095947
    4. '   ' → logprob: -6.363687992095947
    5. '       ' → logprob: -6.988687992095947
    6. ' )' → logprob: -8.113688468933105
    7. '
' → logprob: -8.363688468933105
    8. ' )
' → logprob: -8.363688468933105
    9. ')[' → logprob: -8.363688468933105
    10. '[' → logprob: -8.488688468933105

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22079002857208252
    2. ' val' → logprob: -2.470789909362793
    3. ' (' → logprob: -3.720789909362793
    4. ')' → logprob: -3.970789909362793
    5. 'val' → logprob: -4.345789909362793
    6. ',' → logprob: -4.345789909362793
    7. '```' → logprob: -4.345789909362793
    8. ' if' → logprob: -4.470789909362793
    9. ' return' → logprob: -5.345789909362793
    10. '(' → logprob: -5.720789909362793

Token 842: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.314329594373703
    2. ' if' → logprob: -1.6893296241760254
    3. 'val' → logprob: -2.6893296241760254
    4. ' val' → logprob: -4.314329624176025
    5. 'return' → logprob: -6.189329624176025
    6. '       ' → logprob: -7.439329624176025
    7. 'left' → logprob: -7.939329624176025
    8. ' return' → logprob: -8.314329147338867
    9. 'v' → logprob: -8.939329147338867
    10. 'l' → logprob: -9.439329147338867

Token 843: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0001652796781854704
    2. ' left' → logprob: -8.875164985656738
    3. 'not' → logprob: -10.625164985656738
    4. '(left' → logprob: -15.000164985656738
    5. '[left' → logprob: -15.250164985656738
    6. 'right' → logprob: -15.875164985656738
    7. ' not' → logprob: -16.250165939331055
    8. '   ' → logprob: -16.375165939331055
    9. '	left' → logprob: -16.625165939331055
    10. 'len' → logprob: -16.875165939331055

Token 844: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.62501049041748
    3. 'hash' → logprob: -13.50001049041748
    4. '_HASH' → logprob: -17.875009536743164
    5. ' _' → logprob: -19.000009536743164
    6. 'Hash' → logprob: -19.125009536743164
    7. '_has' → logprob: -19.500009536743164
    8. ' hash' → logprob: -20.000009536743164
    9. '_' → logprob: -20.000009536743164
    10. '_[' → logprob: -20.375009536743164

Token 845: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8193366486229934e-05
    2. ' ==' → logprob: -11.375018119812012
    3. '==' → logprob: -12.000018119812012
    4. ' [' → logprob: -15.375018119812012
    5. '==(' → logprob: -15.750018119812012
    6. '[
' → logprob: -16.875019073486328
    7. '[-' → logprob: -17.625019073486328
    8. '3' → logprob: -18.000019073486328
    9. '
' → logprob: -18.000019073486328
    10. ',' → logprob: -18.125019073486328

Token 846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.735893965815194e-05
    2. '
' → logprob: -12.250017166137695
    3. '1' → logprob: -12.625017166137695
    4. '0' → logprob: -12.625017166137695
    5. '```' → logprob: -13.750017166137695
    6. ' ' → logprob: -13.812517166137695
    7. '-' → logprob: -13.812517166137695
    8. '3' → logprob: -14.562517166137695
    9. '=' → logprob: -14.750017166137695
    10. '(' → logprob: -15.000017166137695

Token 847: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06198202446103096
    2. ' ==' → logprob: -2.8119819164276123
    3. 'and' → logprob: -12.561982154846191
    4. '=' → logprob: -12.686982154846191
    5. '==
' → logprob: -12.686982154846191
    6. ' and' → logprob: -13.436982154846191
    7. ']==' → logprob: -13.561982154846191
    8. '===' → logprob: -14.186982154846191
    9. ')==' → logprob: -14.936982154846191
    10. '()==' → logprob: -15.061982154846191

Token 848: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0019449377432465553
    2. ' ==' → logprob: -6.2519450187683105
    3. '==
' → logprob: -11.251944541931152
    4. 'and' → logprob: -13.501944541931152
    5. '0' → logprob: -13.751944541931152
    6. '+' → logprob: -14.501944541931152
    7. '=' → logprob: -15.251944541931152
    8. '```' → logprob: -16.87694549560547
    9. ')==' → logprob: -17.00194549560547
    10. ']==' → logprob: -17.00194549560547

Token 849: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '       ' → logprob: -18.37502098083496
    4. '   ' → logprob: -18.50002098083496
    5. '۰' → logprob: -19.12502098083496
    6. '０' → logprob: -20.06252098083496
    7. '           ' → logprob: -20.43752098083496
    8. '     ' → logprob: -20.56252098083496
    9. ' ' → logprob: -20.62502098083496
    10. '  ' → logprob: -20.75002098083496

Token 850: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '       ' → logprob: -17.250019073486328
    4. '   ' → logprob: -17.750019073486328
    5. '۰' → logprob: -18.500019073486328
    6. '           ' → logprob: -19.750019073486328
    7. '０' → logprob: -20.062519073486328
    8. 'right' → logprob: -20.250019073486328
    9. '     ' → logprob: -20.312519073486328
    10. '```' → logprob: -20.375019073486328

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2586080729961395
    2. ':
' → logprob: -1.508608102798462
    3. ':return' → logprob: -5.383607864379883
    4. '       ' → logprob: -7.508607864379883
    5. '):' → logprob: -7.758607864379883
    6. '):
' → logprob: -8.008607864379883
    7. ')' → logprob: -8.758607864379883
    8. '           ' → logprob: -9.133607864379883
    9. ' or' → logprob: -9.258607864379883
    10. ' and' → logprob: -9.383607864379883

Token 852: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5860831141471863
    2. '           ' → logprob: -1.086083173751831
    3. 'return' → logprob: -2.961083173751831
    4. '       ' → logprob: -2.961083173751831
    5. ')' → logprob: -7.836082935333252
    6. ' val' → logprob: -8.08608341217041
    7. ',' → logprob: -8.58608341217041
    8. '```' → logprob: -8.58608341217041
    9. '	       ' → logprob: -8.96108341217041
    10. '   ' → logprob: -8.96108341217041

Token 853: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020569678395986557
    2. ' return' → logprob: -4.020569801330566
    3. 'right' → logprob: -6.145569801330566
    4. '{return' → logprob: -8.895569801330566
    5. ' right' → logprob: -10.145569801330566
    6. '```' → logprob: -10.145569801330566
    7. ')return' → logprob: -10.645569801330566
    8. '
' → logprob: -12.145569801330566
    9. 'left' → logprob: -12.270569801330566
    10. '           ' → logprob: -12.520569801330566

Token 854: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014165041036903858
    2. ' right' → logprob: -4.264164924621582
    3. '(right' → logprob: -13.389164924621582
    4. '	right' → logprob: -17.2641658782959
    5. '   ' → logprob: -17.6391658782959
    6. '(' → logprob: -18.3891658782959
    7. 'r' → logprob: -19.2641658782959
    8. ' (' → logprob: -19.6391658782959
    9. 'Right' → logprob: -20.0141658782959
    10. ' ' → logprob: -20.2641658782959

Token 855: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.125001907348633
    3. '```' → logprob: -14.375001907348633
    4. 'hash' → logprob: -15.000001907348633
    5. ''_' → logprob: -15.000001907348633
    6. '_HASH' → logprob: -17.000001907348633
    7. '"_' → logprob: -17.000001907348633
    8. '_has' → logprob: -17.375001907348633
    9. ')_' → logprob: -17.750001907348633
    10. ' _' → logprob: -17.875001907348633

Token 856: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5528484582901001
    2. 'val' → logprob: -1.6778484582901
    3. ' val' → logprob: -2.4278483390808105
    4. ')' → logprob: -2.5528483390808105
    5. '       ' → logprob: -3.6778483390808105
    6. ')
' → logprob: -4.8028483390808105
    7. '        
' → logprob: -4.9278483390808105
    8. '<|end|>' → logprob: -5.0528483390808105
    9. ',val' → logprob: -5.3028483390808105
    10. ',' → logprob: -5.8028483390808105

Token 857: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1893073469400406
    2. 'val' → logprob: -2.814307451248169
    3. '(' → logprob: -3.314307451248169
    4. '(
' → logprob: -3.814307451248169
    5. ',' → logprob: -3.939307451248169
    6. ' val' → logprob: -4.43930721282959
    7. '(val' → logprob: -5.18930721282959
    8. '<|end|>' → logprob: -5.56430721282959
    9. ',val' → logprob: -5.56430721282959
    10. '   ' → logprob: -6.56430721282959

Token 858: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.101538896560669
    2. '       ' → logprob: -1.226538896560669
    3. ' val' → logprob: -1.726538896560669
    4. 'val' → logprob: -1.976538896560669
    5. 'if' (adapté à ' if') → logprob: -2.851538896560669
    6. '   ' → logprob: -9.85153865814209
    7. '
' → logprob: -10.85153865814209
    8. '```' → logprob: -11.72653865814209
    9. 'elif' → logprob: -11.72653865814209
    10. 'return' → logprob: -11.97653865814209

Token 859: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2520450949668884
    2. ' right' → logprob: -1.5020451545715332
    3. 'left' → logprob: -9.377044677734375
    4. ' left' → logprob: -11.502044677734375
    5. '	right' → logprob: -11.752044677734375
    6. 'not' → logprob: -12.627044677734375
    7. '[right' → logprob: -13.127044677734375
    8. ' ' → logprob: -13.252044677734375
    9. '(right' → logprob: -13.252044677734375
    10. 'Right' → logprob: -13.752044677734375

Token 860: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -5.145118848304264e-05
    2. '_' → logprob: -11.125051498413086
    3. ''_' → logprob: -11.625051498413086
    4. '```' → logprob: -11.875051498413086
    5. 'hash' → logprob: -12.000051498413086
    6. '_has' → logprob: -12.375051498413086
    7. '_HASH' → logprob: -13.250051498413086
    8. ')_' → logprob: -13.375051498413086
    9. '[' → logprob: -13.500051498413086
    10. ' _' → logprob: -13.625051498413086

Token 861: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -17.0
    3. '==' → logprob: -17.0
    4. '[
' → logprob: -17.875
    5. 'and' → logprob: -18.25
    6. '(' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. ' ==' → logprob: -19.5
    9. 's' → logprob: -19.5
    10. ' is' → logprob: -19.75

Token 862: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '0' → logprob: -16.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '(' → logprob: -18.000001907348633
    8. '
' → logprob: -18.750001907348633
    9. '۲' → logprob: -18.875001907348633
    10. '...' → logprob: -19.187501907348633

Token 863: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02062644064426422
    2. '==' → logprob: -3.8956265449523926
    3. ')' → logprob: -9.770626068115234
    4. ']==' → logprob: -11.520626068115234
    5. ')==' → logprob: -11.895626068115234
    6. ' ' → logprob: -12.520626068115234
    7. '[' → logprob: -13.145626068115234
    8. '<|end|>' → logprob: -13.145626068115234
    9. ']' → logprob: -13.270626068115234
    10. '0' → logprob: -15.270626068115234

Token 864: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759449005126953
    2. '==' → logprob: -0.8259449005126953
    3. '==
' → logprob: -12.950944900512695
    4. ']==' → logprob: -13.700944900512695
    5. ')==' → logprob: -13.700944900512695
    6. '[' → logprob: -15.450944900512695
    7. '0' → logprob: -15.700944900512695
    8. ' ' → logprob: -15.825944900512695
    9. '()==' → logprob: -16.325944900512695
    10. '===' → logprob: -16.450944900512695

Token 865: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.625123977661133
    4. '۰' → logprob: -19.250123977661133
    5. '```' → logprob: -19.875123977661133
    6. '  ' → logprob: -20.250123977661133
    7. ' ' → logprob: -20.500123977661133
    8. '=' → logprob: -20.625123977661133
    9. '00' → logprob: -21.125123977661133
    10. '０' → logprob: -21.500123977661133

Token 866: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -18.750011444091797
    4. '   ' → logprob: -19.625011444091797
    5. '<|end|>' → logprob: -20.125011444091797
    6. '```' → logprob: -20.250011444091797
    7. '00' → logprob: -20.375011444091797
    8. '=' → logprob: -20.500011444091797
    9. '０' → logprob: -20.687511444091797
    10. '  ' → logprob: -21.562511444091797

Token 867: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6496545076370239
    2. ':
' → logprob: -0.7746545076370239
    3. '       ' → logprob: -4.274654388427734
    4. '):
' → logprob: -6.774654388427734
    5. ':return' → logprob: -7.649654388427734
    6. ',' → logprob: -7.774654388427734
    7. '   ' → logprob: -8.399654388427734
    8. '):' → logprob: -8.899654388427734
    9. ' :
' → logprob: -8.899654388427734
    10. '<|end|>' → logprob: -9.274654388427734

Token 868: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19311609864234924
    2. ' val' → logprob: -1.9431160688400269
    3. ' return' → logprob: -3.9431161880493164
    4. 'val' → logprob: -4.818116188049316
    5. 'return' → logprob: -6.568116188049316
    6. '           ' → logprob: -7.193116188049316
    7. ' (' → logprob: -7.818116188049316
    8. ',' → logprob: -7.943116188049316
    9. '   ' → logprob: -8.068116188049316
    10. '(' → logprob: -8.068116188049316

Token 869: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029777569696307182
    2. ' return' → logprob: -3.5297775268554688
    3. '       ' → logprob: -10.904777526855469
    4. '	return' → logprob: -12.029777526855469
    5. '{return' → logprob: -13.279777526855469
    6. '   ' → logprob: -15.029777526855469
    7. '
' → logprob: -15.404777526855469
    8. '           ' → logprob: -15.529777526855469
    9. ':return' → logprob: -15.779777526855469
    10. 'eturn' → logprob: -16.40477752685547

Token 870: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011047814972698689
    2. ' left' → logprob: -4.511047840118408
    3. '(left' → logprob: -17.38604736328125
    4. '	left' → logprob: -18.76104736328125
    5. '   ' → logprob: -20.13604736328125
    6. '[left' → logprob: -21.63604736328125
    7. ' ' → logprob: -22.01104736328125
    8. '(' → logprob: -22.01104736328125
    9. '左' → logprob: -22.38604736328125
    10. '_left' → logprob: -22.63604736328125

Token 871: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -8.41866585687967e-06
    2. 'hash' → logprob: -11.750008583068848
    3. '(left' → logprob: -15.250008583068848
    4. 'left' → logprob: -16.50000762939453
    5. '_' → logprob: -16.87500762939453
    6. '_left' → logprob: -17.25000762939453
    7. '```' → logprob: -17.75000762939453
    8. '_HASH' → logprob: -18.25000762939453
    9. '[left' → logprob: -18.25000762939453
    10. '
' → logprob: -19.12500762939453

Token 872: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0166701078414917
    2. ')' → logprob: -1.1416701078414917
    3. '   ' → logprob: -2.2666702270507812
    4. '(' → logprob: -3.0166702270507812
    5. '       ' → logprob: -3.2666702270507812
    6. ' val' → logprob: -3.2666702270507812
    7. ',val' → logprob: -3.5166702270507812
    8. 'val' → logprob: -3.8916702270507812
    9. ' (' → logprob: -4.141670227050781
    10. '(val' → logprob: -5.266670227050781

Token 873: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1606920957565308
    2. ' val' → logprob: -1.2856920957565308
    3. '       ' → logprob: -1.6606920957565308
    4. 'val' → logprob: -2.0356922149658203
    5. '   ' → logprob: -3.7856922149658203
    6. '(' → logprob: -4.28569221496582
    7. ' (' → logprob: -4.41069221496582
    8. ',val' → logprob: -4.66069221496582
    9. ')' → logprob: -4.78569221496582
    10. ' return' → logprob: -5.53569221496582

Token 874: ' merged' (ID: 49536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5492846369743347
    2. '(self' → logprob: -1.5492846965789795
    3. '(
' → logprob: -2.5492846965789795
    4. '(val' → logprob: -3.0492846965789795
    5. '       ' → logprob: -3.5492846965789795
    6. '((' → logprob: -3.6742846965789795
    7. ' (' → logprob: -4.2992844581604
    8. 'return' → logprob: -4.5492844581604
    9. '(return' → logprob: -6.0492844581604
    10. 'val' → logprob: -6.6742844581604

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11823654174804688
    2. ' =' → logprob: -2.243236541748047
    3. '_val' → logprob: -5.993236541748047
    4. '(' → logprob: -6.368236541748047
    5. ' (' → logprob: -7.493236541748047
    6. '_hash' → logprob: -7.618236541748047
    7. '(
' → logprob: -10.618236541748047
    8. '=(' → logprob: -10.618236541748047
    9. '_value' → logprob: -10.743236541748047
    10. 'val' → logprob: -10.868236541748047

Token 876: ' (
' (ID: 4112)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09842611104249954
    2. '(' → logprob: -2.973426103591919
    3. '(
' → logprob: -3.348426103591919
    4. '((' → logprob: -5.098426342010498
    5. 'self' → logprob: -7.098426342010498
    6. ' (' → logprob: -7.598426342010498
    7. '   ' → logprob: -11.59842586517334
    8. ' self' → logprob: -12.09842586517334
    9. ' (
' → logprob: -12.47342586517334
    10. '(

' → logprob: -12.47342586517334

Token 877: '           ' (ID: 352)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.041488103568553925
    2. ' (' → logprob: -3.2914881706237793
    3. '(' → logprob: -6.166488170623779
    4. '((' → logprob: -7.416488170623779
    5. '       ' → logprob: -7.791488170623779
    6. '   ' → logprob: -8.666487693786621
    7. '           ' → logprob: -9.916487693786621
    8. 'left' → logprob: -10.541487693786621
    9. '(
' → logprob: -10.666487693786621
    10. '(self' → logprob: -11.041487693786621

Token 878: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0021280182991176844
    2. '((' → logprob: -7.1271281242370605
    3. '(' (adapté à ' (') → logprob: -7.2521281242370605
    4. ' (' → logprob: -7.5021281242370605
    5. '   ' → logprob: -11.002127647399902
    6. '(
' → logprob: -11.252127647399902
    7. '(self' → logprob: -11.502127647399902
    8. '           ' → logprob: -11.752127647399902
    9. '
' → logprob: -13.127127647399902
    10. ' ' → logprob: -13.502127647399902

Token 879: 'left' (ID: 4530)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.03100627288222313
    2. 'left' → logprob: -3.531006336212158
    3. ' (' → logprob: -6.906006336212158
    4. '((' → logprob: -9.406005859375
    5. '(' → logprob: -9.656005859375
    6. '[left' → logprob: -10.156005859375
    7. '(
' → logprob: -10.531005859375
    8. ' left' → logprob: -10.781005859375
    9. '   ' → logprob: -12.031005859375
    10. '
' → logprob: -12.781005859375

Token 880: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.3782830137643032e-05
    2. 'hash' → logprob: -11.62501335144043
    3. '[' → logprob: -12.37501335144043
    4. '_' → logprob: -15.50001335144043
    5. ' hash' → logprob: -16.62501335144043
    6. '_HASH' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.25001335144043
    8. '           ' → logprob: -17.62501335144043
    9. '
' → logprob: -18.00001335144043
    10. '       ' → logprob: -18.62501335144043

Token 881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22545896470546722
    2. '0' → logprob: -1.6004589796066284
    3. '(' → logprob: -10.725459098815918
    4. ' ' → logprob: -11.850459098815918
    5. '   ' → logprob: -12.100459098815918
    6. '[
' → logprob: -12.725459098815918
    7. ',' → logprob: -13.725459098815918
    8. '#' → logprob: -13.725459098815918
    9. '       ' → logprob: -13.850459098815918
    10. ' [' → logprob: -13.975459098815918

Token 882: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '۰' → logprob: -17.187501907348633
    6. '```' → logprob: -17.500001907348633
    7. '1' → logprob: -17.625001907348633
    8. '00' → logprob: -17.812501907348633
    9. ',' → logprob: -17.875001907348633
    10. '(' → logprob: -17.937501907348633

Token 883: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09204183518886566
    2. '*self' → logprob: -2.5920417308807373
    3. ' *' → logprob: -4.342041969299316
    4. '**' → logprob: -10.467041969299316
    5. '*(' → logprob: -11.217041969299316
    6. ' ' → logprob: -12.467041969299316
    7. '*object' → logprob: -12.592041969299316
    8. ')*' → logprob: -13.467041969299316
    9. '*this' → logprob: -14.092041969299316
    10. ' ' → logprob: -14.217041969299316

Token 884: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01671031303703785
    2. 'pow' → logprob: -4.26671028137207
    3. ' self' → logprob: -6.39171028137207
    4. 'Segment' → logprob: -8.26671028137207
    5. '       ' → logprob: -9.14171028137207
    6. '(self' → logprob: -9.39171028137207
    7. ' pow' → logprob: -9.64171028137207
    8. 'tree' → logprob: -10.14171028137207
    9. 'segment' → logprob: -10.26671028137207
    10. 'seg' → logprob: -10.39171028137207

Token 885: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.20215992629528046
    2. 'pow' → logprob: -1.7021598815917969
    3. 'self' → logprob: -7.577159881591797
    4. ' pow' → logprob: -8.702159881591797
    5. '   ' → logprob: -10.952159881591797
    6. '       ' → logprob: -11.827159881591797
    7. '.' → logprob: -12.077159881591797
    8. '(pow' → logprob: -12.202159881591797
    9. '```' → logprob: -12.327159881591797
    10. '
' → logprob: -12.452159881591797

Token 886: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033999193692579865
    2. '2' → logprob: -8.000340461730957
    3. '[' → logprob: -13.000340461730957
    4. '```' → logprob: -14.250340461730957
    5. '[len' → logprob: -15.125340461730957
    6. '[right' → logprob: -15.375340461730957
    7. 'pow' → logprob: -15.937840461730957
    8. '[root' → logprob: -16.00033950805664
    9. '[self' → logprob: -16.12533950805664
    10. 'self' → logprob: -16.18783950805664

Token 887: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -7.5649528298527e-05
    2. 'right' → logprob: -9.500075340270996
    3. '[' → logprob: -14.750075340270996
    4. '[left' → logprob: -15.500075340270996
    5. ' right' → logprob: -16.875076293945312
    6. '[
' → logprob: -17.250076293945312
    7. ',right' → logprob: -17.625076293945312
    8. '[root' → logprob: -18.250076293945312
    9. '(right' → logprob: -18.375076293945312
    10. '	right' → logprob: -19.125076293945312

Token 888: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0013344056205824018
    2. 'hash' → logprob: -6.876334190368652
    3. '[' → logprob: -8.126334190368652
    4. 'Hash' → logprob: -13.251334190368652
    5. '```' → logprob: -14.001334190368652
    6. '_HASH' → logprob: -14.126334190368652
    7. ' hash' → logprob: -14.376334190368652
    8. '_has' → logprob: -15.251334190368652
    9. '.hash' → logprob: -15.751334190368652
    10. 's' → logprob: -15.751334190368652

Token 889: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -16.375
    3. '3' → logprob: -17.0
    4. '[
' → logprob: -17.0
    5. '   ' → logprob: -17.5
    6. '```' → logprob: -17.875
    7. ' [' → logprob: -18.125
    8. '][' → logprob: -18.25
    9. '       ' → logprob: -19.125
    10. '(' → logprob: -19.75

Token 890: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029780801385641098
    2. '[' → logprob: -3.529780864715576
    3. '   ' → logprob: -10.904780387878418
    4. ' ' → logprob: -11.779780387878418
    5. '(' → logprob: -13.279780387878418
    6. '```' → logprob: -13.654780387878418
    7. '       ' → logprob: -14.529780387878418
    8. '  ' → logprob: -16.029781341552734
    9. '-' → logprob: -16.154781341552734
    10. '.' → logprob: -16.279781341552734

Token 891: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5256024599075317
    2. '])' → logprob: -1.4006024599075317
    3. '[' → logprob: -2.025602340698242
    4. ']+' → logprob: -3.525602340698242
    5. '])+' → logprob: -7.150602340698242
    6. '],' → logprob: -10.150602340698242
    7. ' ]' → logprob: -10.150602340698242
    8. ']])' → logprob: -11.025602340698242
    9. ']]' → logprob: -11.150602340698242
    10. ' ])' → logprob: -11.275602340698242

Token 892: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06502577662467957
    2. '+' → logprob: -2.815025806427002
    3. ')' → logprob: -5.815025806427002
    4. ')+' → logprob: -10.190025329589844
    5. ')%' → logprob: -10.815025329589844
    6. '+)' → logprob: -12.440025329589844
    7. '%' → logprob: -12.440025329589844
    8. '),' → logprob: -13.565025329589844
    9. '+
' → logprob: -13.815025329589844
    10. ' )' → logprob: -14.065025329589844

Token 893: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01814994215965271
    2. ' right' → logprob: -4.0181498527526855
    3. '	right' → logprob: -17.268150329589844
    4. 'left' → logprob: -19.018150329589844
    5. '           ' → logprob: -19.018150329589844
    6. '(right' → logprob: -19.643150329589844
    7. ' ' → logprob: -20.393150329589844
    8. '[right' → logprob: -20.518150329589844
    9. 'r' → logprob: -20.893150329589844
    10. '               ' → logprob: -21.268150329589844

Token 894: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -7.5649528298527e-05
    2. 'hash' → logprob: -9.500075340270996
    3. '[' → logprob: -14.625075340270996
    4. '```' → logprob: -16.375076293945312
    5. '_HASH' → logprob: -16.625076293945312
    6. 'Hash' → logprob: -16.750076293945312
    7. '_' → logprob: -17.000076293945312
    8. ' hash' → logprob: -17.875076293945312
    9. 'hashed' → logprob: -18.375076293945312
    10. '
' → logprob: -18.625076293945312

Token 895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.25
    3. '0' → logprob: -16.25
    4. '```' → logprob: -17.125
    5. '][' → logprob: -18.625
    6. '(' → logprob: -19.125
    7. ')[' → logprob: -19.25
    8. ' [' → logprob: -19.625
    9. '#' → logprob: -19.875
    10. '1' → logprob: -19.875

Token 896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067176250740885735
    2. '[' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.631717681884766
    4. '```' → logprob: -14.756717681884766
    5. '(' → logprob: -15.756717681884766
    6. '   ' → logprob: -15.881717681884766
    7. '#' → logprob: -16.256717681884766
    8. '][' → logprob: -16.756717681884766
    9. '[
' → logprob: -17.256717681884766
    10. '<|end|>' → logprob: -17.506717681884766

Token 897: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002740327501669526
    2. '])' → logprob: -6.502740383148193
    3. ')%' → logprob: -7.502740383148193
    4. '       ' → logprob: -8.002739906311035
    5. ' )' → logprob: -8.502739906311035
    6. '[' → logprob: -9.502739906311035
    7. ',' → logprob: -10.627739906311035
    8. ']' → logprob: -10.627739906311035
    9. '           ' → logprob: -11.627739906311035
    10. '),' → logprob: -12.377739906311035

Token 898: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042998626828193665
    2. ',
' → logprob: -3.4179985523223877
    3. '%' → logprob: -4.792998790740967
    4. ' %' → logprob: -7.542998790740967
    5. '           ' → logprob: -8.417998313903809
    6. ')' → logprob: -9.417998313903809
    7. '%,' → logprob: -9.417998313903809
    8. ' ,' → logprob: -10.167998313903809
    9. '       ' → logprob: -10.667998313903809
    10. ',

' → logprob: -11.667998313903809

Token 899: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004237600602209568
    2. 'Segment' → logprob: -5.504237651824951
    3. ' self' → logprob: -8.754237174987793
    4. ' Segment' → logprob: -14.754237174987793
    5. '(self' → logprob: -15.004237174987793
    6. 'Seg' → logprob: -15.254237174987793
    7. 'Self' → logprob: -15.379237174987793
    8. '
' → logprob: -16.12923812866211
    9. '   ' → logprob: -17.12923812866211
    10. 'segment' → logprob: -18.12923812866211

Token 900: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.790934681892395
    2. '.MOD' → logprob: -0.790934681892395
    3. 'Segment' → logprob: -2.4159345626831055
    4. '.S' → logprob: -5.6659345626831055
    5. 'SEG' → logprob: -8.540934562683105
    6. 'self' → logprob: -9.290934562683105
    7. '.Mod' → logprob: -10.415934562683105
    8. '_SEG' → logprob: -11.165934562683105
    9. '.ST' → logprob: -11.415934562683105
    10. '.MODE' → logprob: -11.415934562683105

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -18.375
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. '**' → logprob: -19.375
    6. ' ' → logprob: -19.5
    7. ',' → logprob: -19.6875
    8. ')' → logprob: -19.8125
    9. '১' → logprob: -20.125
    10. '۱' → logprob: -20.125

Token 902: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062645323574543
    2. ',
' → logprob: -2.812645435333252
    3. '           ' → logprob: -7.312645435333252
    4. ' ,' → logprob: -12.812644958496094
    5. ',\
' → logprob: -12.937644958496094
    6. ',
' → logprob: -13.437644958496094
    7. ',

' → logprob: -13.562644958496094
    8. '       ' → logprob: -13.812644958496094
    9. '   ' → logprob: -14.937644958496094
    10. '),' → logprob: -15.562644958496094

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8702765703201294
    2. ' (' → logprob: -1.1202765703201294
    3. '(left' → logprob: -1.3702765703201294
    4. '(' → logprob: -7.24527645111084
    5. '          ' → logprob: -9.37027645111084
    6. '((' → logprob: -10.24527645111084
    7. '(len' → logprob: -10.62027645111084
    8. '   ' → logprob: -11.49527645111084
    9. '       ' → logprob: -11.62027645111084
    10. '(lhs' → logprob: -11.62027645111084

Token 904: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00671809446066618
    2. ' (' → logprob: -5.006718158721924
    3. '           ' → logprob: -13.131717681884766
    4. '(' (adapté à ' (') → logprob: -14.131717681884766
    5. ' ' → logprob: -16.881717681884766
    6. '   ' → logprob: -17.256717681884766
    7. '[left' → logprob: -17.381717681884766
    8. '(last' → logprob: -17.631717681884766
    9. '(right' → logprob: -17.756717681884766
    10. '((' → logprob: -17.881717681884766

Token 905: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00020544764993246645
    2. '(left' → logprob: -8.500205039978027
    3. ' left' → logprob: -13.250205039978027
    4. '[left' → logprob: -16.000205993652344
    5. '	left' → logprob: -17.250205993652344
    6. '   ' → logprob: -18.875205993652344
    7. ' (' → logprob: -19.000205993652344
    8. '(' → logprob: -19.375205993652344
    9. '           ' → logprob: -19.875205993652344
    10. '
' → logprob: -19.875205993652344

Token 906: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -5.347765181795694e-05
    2. 'hash' → logprob: -9.875053405761719
    3. 'left' → logprob: -13.500053405761719
    4. '(left' → logprob: -15.375053405761719
    5. '[left' → logprob: -16.12505340576172
    6. 'Hash' → logprob: -16.25005340576172
    7. '_HASH' → logprob: -17.75005340576172
    8. 'hashed' → logprob: -17.87505340576172
    9. 'HASH' → logprob: -18.62505340576172
    10. '```' → logprob: -19.37505340576172

Token 907: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -18.875
    3. '   ' → logprob: -19.125
    4. '1' → logprob: -19.375
    5. '```' → logprob: -19.375
    6. '(' → logprob: -19.75
    7. ' [' → logprob: -20.125
    8. '0' → logprob: -20.125
    9. '       ' → logprob: -20.75
    10. '2' → logprob: -21.375

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. '
' → logprob: -16.125
    4. '   ' → logprob: -17.625
    5. ' ' → logprob: -17.875
    6. '```' → logprob: -17.875
    7. '  ' → logprob: -19.5
    8. '

' → logprob: -19.9375
    9. '(' → logprob: -20.125
    10. '0' → logprob: -20.25

Token 909: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001787513610906899
    2. '*self' → logprob: -6.5017876625061035
    3. ' *' → logprob: -8.376787185668945
    4. '*object' → logprob: -10.251787185668945
    5. '*[' → logprob: -11.876787185668945
    6. ')*' → logprob: -12.626787185668945
    7. '[' → logprob: -12.876787185668945
    8. '**' → logprob: -12.876787185668945
    9. '*out' → logprob: -13.501787185668945
    10. ']*' → logprob: -14.126787185668945

Token 910: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.318681188422488e-05
    2. ' self' → logprob: -11.25001335144043
    3. '[self' → logprob: -16.62501335144043
    4. '(self' → logprob: -17.25001335144043
    5. 'pow' → logprob: -18.37501335144043
    6. '
' → logprob: -19.75001335144043
    7. '=self' → logprob: -20.00001335144043
    8. '	self' → logprob: -20.75001335144043
    9. '*self' → logprob: -20.87501335144043
    10. 'right' → logprob: -21.00001335144043

Token 911: '.pow' (ID: 46534)
  Prédit: '.pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pow' → logprob: -0.0002967320033349097
    2. 'pow' → logprob: -8.125296592712402
    3. 'self' → logprob: -15.000296592712402
    4. '_pow' → logprob: -16.50029754638672
    5. '
' → logprob: -17.00029754638672
    6. ' pow' → logprob: -17.50029754638672
    7. '[self' → logprob: -17.50029754638672
    8. '.power' → logprob: -17.62529754638672
    9. '.po' → logprob: -17.62529754638672
    10. '.' → logprob: -17.62529754638672

Token 912: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.067210353910923
    2. '[right' → logprob: -2.9422104358673096
    3. 'right' → logprob: -4.4422101974487305
    4. 'self' → logprob: -8.81721019744873
    5. '1' → logprob: -8.81721019744873
    6. '   ' → logprob: -9.69221019744873
    7. 'pow' → logprob: -10.19221019744873
    8. '[' → logprob: -10.69221019744873
    9. '[self' → logprob: -11.56721019744873
    10. '(right' → logprob: -11.81721019744873

Token 913: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.7432603272027336e-06
    2. 'right' → logprob: -13.625001907348633
    3. '[' → logprob: -15.250001907348633
    4. '[root' → logprob: -16.625001907348633
    5. '[left' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.000001907348633
    7. ' [' → logprob: -17.625001907348633
    8. ' right' → logprob: -18.750001907348633
    9. '[next' → logprob: -19.750001907348633
    10. '(right' → logprob: -20.000001907348633

Token 914: '_hash' (ID: 20844)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.0948158382670954e-05
    2. '_hash' → logprob: -10.500030517578125
    3. 'hash' → logprob: -13.000030517578125
    4. 'right' → logprob: -15.000030517578125
    5. '[right' → logprob: -15.000030517578125
    6. '2' → logprob: -16.125030517578125
    7. '```' → logprob: -16.500030517578125
    8. '[
' → logprob: -16.500030517578125
    9. '
' → logprob: -17.250030517578125
    10. '   ' → logprob: -17.375030517578125

Token 915: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.875
    3. '[
' → logprob: -16.375
    4. '```' → logprob: -17.375
    5. ' [' → logprob: -17.875
    6. '   ' → logprob: -18.0
    7. '][' → logprob: -18.125
    8. '
' → logprob: -19.0
    9. ' ' → logprob: -19.625
    10. ')[' → logprob: -19.75

Token 916: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04300582408905029
    2. '[' → logprob: -3.16800594329834
    3. '```' → logprob: -13.04300594329834
    4. ' ' → logprob: -13.16800594329834
    5. '   ' → logprob: -13.91800594329834
    6. '-' → logprob: -14.91800594329834
    7. '
' → logprob: -15.04300594329834
    8. '(' → logprob: -15.41800594329834
    9. '۲' → logprob: -15.54300594329834
    10. '1' → logprob: -16.418004989624023

Token 917: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.698698704596609e-05
    2. ']+' → logprob: -9.375097274780273
    3. ' ]' → logprob: -11.750097274780273
    4. '[' → logprob: -12.500097274780273
    5. ')' → logprob: -15.750097274780273
    6. '[]' → logprob: -17.125097274780273
    7. ']
' → logprob: -17.250097274780273
    8. '0' → logprob: -17.375097274780273
    9. '']' → logprob: -17.625097274780273
    10. ']]' → logprob: -18.000097274780273

Token 918: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03804963827133179
    2. '+' → logprob: -3.2880496978759766
    3. '           ' → logprob: -12.913049697875977
    4. '          ' → logprob: -13.288049697875977
    5. '        ' → logprob: -13.788049697875977
    6. '[' → logprob: -13.788049697875977
    7. '            ' → logprob: -14.413049697875977
    8. '         ' → logprob: -14.788049697875977
    9. '       ' → logprob: -15.288049697875977
    10. ' ' → logprob: -15.288049697875977

Token 919: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07888989895582199
    2. ' right' → logprob: -2.578889846801758
    3. '	right' → logprob: -17.078889846801758
    4. '(right' → logprob: -17.328889846801758
    5. '[right' → logprob: -18.453889846801758
    6. '
' → logprob: -19.328889846801758
    7. ' ' → logprob: -19.828889846801758
    8. ',right' → logprob: -20.078889846801758
    9. 'Right' → logprob: -20.453889846801758
    10. '_right' → logprob: -20.703889846801758

Token 920: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.00011033779446734115
    2. 'hash' → logprob: -9.125110626220703
    3. 'right' → logprob: -14.250110626220703
    4. '[right' → logprob: -14.375110626220703
    5. 'Hash' → logprob: -16.625110626220703
    6. '[' → logprob: -16.750110626220703
    7. '_HASH' → logprob: -17.500110626220703
    8. '_right' → logprob: -18.125110626220703
    9. '(right' → logprob: -18.625110626220703
    10. ' hash' → logprob: -19.000110626220703

Token 921: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[
' → logprob: -15.250000953674316
    3. '0' → logprob: -16.75
    4. '```' → logprob: -16.875
    5. ' [' → logprob: -18.125
    6. '   ' → logprob: -18.25
    7. '#' → logprob: -18.25
    8. '
' → logprob: -18.25
    9. '1' → logprob: -18.375
    10. '][' → logprob: -18.75

Token 922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25658634305000305
    2. '[' → logprob: -1.5065863132476807
    3. '0' → logprob: -5.38158655166626
    4. '(' → logprob: -10.881586074829102
    5. '
' → logprob: -11.631586074829102
    6. '2' → logprob: -12.506586074829102
    7. ' ' → logprob: -13.006586074829102
    8. '```' → logprob: -13.131586074829102
    9. '[
' → logprob: -13.256586074829102
    10. '   ' → logprob: -13.256586074829102

Token 923: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002943590050563216
    2. '[' → logprob: -6.002943515777588
    3. '])' → logprob: -8.127943992614746
    4. '       ' → logprob: -9.252943992614746
    5. ' )' → logprob: -10.002943992614746
    6. ']' → logprob: -12.252943992614746
    7. ')
' → logprob: -12.377943992614746
    8. ')])' → logprob: -12.377943992614746
    9. '))' → logprob: -12.627943992614746
    10. '   ' → logprob: -12.627943992614746

Token 924: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16304615139961243
    2. ',' → logprob: -2.03804612159729
    3. '%' → logprob: -4.913046360015869
    4. ')%' → logprob: -5.163046360015869
    5. '       ' → logprob: -5.538046360015869
    6. '),' → logprob: -6.913046360015869
    7. ' )' → logprob: -7.288046360015869
    8. ',
' → logprob: -7.663046360015869
    9. ')
' → logprob: -7.663046360015869
    10. ' %' → logprob: -8.538045883178711

Token 925: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009139667963609099
    2. ' self' → logprob: -7.000914096832275
    3. '(self' → logprob: -13.625913619995117
    4. '           ' → logprob: -14.625913619995117
    5. '       ' → logprob: -14.750913619995117
    6. '   ' → logprob: -16.000913619995117
    7. '
' → logprob: -16.375913619995117
    8. '	self' → logprob: -16.500913619995117
    9. '[self' → logprob: -16.625913619995117
    10. '         ' → logprob: -17.000913619995117

Token 926: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.007688258774578571
    2. 'self' → logprob: -5.632688045501709
    3. 'MOD' → logprob: -5.632688045501709
    4. '_MOD' → logprob: -7.757688045501709
    5. '.MODE' → logprob: -9.882688522338867
    6. '.M' → logprob: -11.882688522338867
    7. ' self' → logprob: -12.132688522338867
    8. '.Mod' → logprob: -12.132688522338867
    9. '   ' → logprob: -14.382688522338867
    10. '
' → logprob: -14.382688522338867

Token 927: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. '9' → logprob: -12.375005722045898
    3. '1' → logprob: -13.875005722045898
    4. ' ' → logprob: -15.000005722045898
    5. 'MOD' → logprob: -15.750005722045898
    6. '   ' → logprob: -16.1250057220459
    7. '7' → logprob: -16.3750057220459
    8. 'self' → logprob: -17.1250057220459
    9. '(' → logprob: -17.8750057220459
    10. '```' → logprob: -19.0000057220459

Token 928: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0385560542345047
    2. ',
' → logprob: -3.2885560989379883
    3. ')' → logprob: -8.163556098937988
    4. '           ' → logprob: -9.288556098937988
    5. '),' → logprob: -9.788556098937988
    6. '       ' → logprob: -9.913556098937988
    7. ' ,' → logprob: -11.913556098937988
    8. ',\
' → logprob: -12.163556098937988
    9. '   ' → logprob: -12.413556098937988
    10. ',

' → logprob: -12.663556098937988

Token 929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0442935973405838
    2. '(left' → logprob: -3.2942936420440674
    3. 'left' → logprob: -5.794293403625488
    4. '       ' → logprob: -6.794293403625488
    5. ' (' → logprob: -7.419293403625488
    6. '(' → logprob: -7.419293403625488
    7. 'merged' → logprob: -7.919293403625488
    8. '   ' → logprob: -8.419293403625488
    9. ' left' → logprob: -8.794293403625488
    10. ' merged' → logprob: -9.919293403625488

Token 930: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.011048170737922192
    2. ' left' → logprob: -4.511048316955566
    3. '(left' → logprob: -15.511048316955566
    4. '	left' → logprob: -15.886048316955566
    5. ' ' → logprob: -16.51104736328125
    6. '   ' → logprob: -17.38604736328125
    7. '           ' → logprob: -17.76104736328125
    8. ' ' → logprob: -18.38604736328125
    9. 'right' → logprob: -18.38604736328125
    10. '[left' → logprob: -18.63604736328125

Token 931: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -6.392202976712724e-06
    2. 'hash' → logprob: -12.000006675720215
    3. '[' → logprob: -15.875006675720215
    4. 'Hash' → logprob: -17.8750057220459
    5. '_HASH' → logprob: -18.0000057220459
    6. '```' → logprob: -18.3750057220459
    7. '_' → logprob: -19.0000057220459
    8. '
' → logprob: -19.1250057220459
    9. ' hash' → logprob: -19.3750057220459
    10. '_has' → logprob: -19.5000057220459

Token 932: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9266199160483666e-05
    2. '2' → logprob: -10.875019073486328
    3. '[
' → logprob: -16.375019073486328
    4. '   ' → logprob: -17.000019073486328
    5. '```' → logprob: -18.000019073486328
    6. ' [' → logprob: -18.125019073486328
    7. '(' → logprob: -18.625019073486328
    8. '][' → logprob: -19.000019073486328
    9. ' ' → logprob: -19.250019073486328
    10. '
' → logprob: -19.375019073486328

Token 933: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7954958821064793e-05
    2. '[' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.500018119812012
    4. '
' → logprob: -15.125018119812012
    5. '   ' → logprob: -15.750018119812012
    6. '۲' → logprob: -16.500017166137695
    7. '(' → logprob: -16.625017166137695
    8. '```' → logprob: -16.875017166137695
    9. '1' → logprob: -18.187517166137695
    10. '-' → logprob: -18.437517166137695

Token 934: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519325315952301
    2. ' +' → logprob: -1.5019325017929077
    3. '+
' → logprob: -13.751932144165039
    4. '+r' → logprob: -14.126932144165039
    5. ' +
' → logprob: -15.251932144165039
    6. ']+' → logprob: -15.501932144165039
    7. ')+' → logprob: -15.501932144165039
    8. '[' → logprob: -16.00193214416504
    9. '+self' → logprob: -16.12693214416504
    10. '           ' → logprob: -16.25193214416504

Token 935: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687604665756226
    2. ' +' → logprob: -1.136876106262207
    3. '[' → logprob: -12.511876106262207
    4. '+
' → logprob: -14.511876106262207
    5. '+r' → logprob: -14.636876106262207
    6. ' +
' → logprob: -15.886876106262207
    7. '+self' → logprob: -16.88687515258789
    8. '+xml' → logprob: -17.01187515258789
    9. '+[' → logprob: -17.01187515258789
    10. '＋' → logprob: -17.13687515258789

Token 936: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0019286326132714748
    2. ' right' → logprob: -6.251928806304932
    3. '	right' → logprob: -19.876928329467773
    4. '[right' → logprob: -20.751928329467773
    5. ' ' → logprob: -21.376928329467773
    6. '(right' → logprob: -21.876928329467773
    7. '   ' → logprob: -22.376928329467773
    8. '           ' → logprob: -23.251928329467773
    9. '.right' → logprob: -23.501928329467773
    10. '       ' → logprob: -23.501928329467773

Token 937: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -3.7697225252486533e-06
    2. 'hash' → logprob: -12.500003814697266
    3. 'Hash' → logprob: -17.125003814697266
    4. '```' → logprob: -18.875003814697266
    5. '[' → logprob: -19.000003814697266
    6. '_HASH' → logprob: -19.125003814697266
    7. '_hint' → logprob: -19.500003814697266
    8. ' hash' → logprob: -19.750003814697266
    9. '_key' → logprob: -20.125003814697266
    10. '_right' → logprob: -20.500003814697266

Token 938: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.500000953674316
    3. '2' → logprob: -16.0
    4. '[
' → logprob: -16.125
    5. '(' → logprob: -17.875
    6. '``' → logprob: -19.75
    7. 's' → logprob: -19.875
    8. '1' → logprob: -19.875
    9. '0' → logprob: -20.0
    10. '-' → logprob: -20.125

Token 939: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.253713218029588e-05
    2. '[' → logprob: -9.875062942504883
    3. ' ' → logprob: -11.500062942504883
    4. '   ' → logprob: -14.375062942504883
    5. '```' → logprob: -15.500062942504883
    6. '۲' → logprob: -17.375062942504883
    7. '  ' → logprob: -18.000062942504883
    8. 'right' → logprob: -18.125062942504883
    9. '
' → logprob: -18.750062942504883
    10. '	' → logprob: -19.125062942504883

Token 940: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028394684195518494
    2. '       ' → logprob: -5.8778395652771
    3. ')
' → logprob: -10.877839088439941
    4. ' )' → logprob: -12.127839088439941
    5. '   ' → logprob: -12.877839088439941
    6. '<|end|>' → logprob: -12.877839088439941
    7. ')return' → logprob: -13.752839088439941
    8. '	' → logprob: -14.002839088439941
    9. '
' → logprob: -14.377839088439941
    10. '}' → logprob: -14.752839088439941

Token 941: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7012299299240112
    2. '       ' → logprob: -0.7012299299240112
    3. ')
' → logprob: -4.826230049133301
    4. ')return' → logprob: -10.9512300491333
    5. '	' → logprob: -12.0762300491333
    6. '   ' → logprob: -12.4512300491333
    7. '           ' → logprob: -13.5762300491333
    8. ')
' → logprob: -13.7012300491333
    9. '<|end|>' → logprob: -14.2012300491333
    10. '               ' → logprob: -14.4512300491333

Token 942: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052997030317783356
    2. '       ' → logprob: -3.05299711227417
    3. ')
' (adapté à ' )
') → logprob: -5.42799711227417
    4. ')return' → logprob: -12.552996635437012
    5. '   ' → logprob: -12.927996635437012
    6. ')
' → logprob: -14.302996635437012
    7. ' )' → logprob: -14.552996635437012
    8. '	' → logprob: -14.927996635437012
    9. '           ' → logprob: -15.552996635437012
    10. 'return' → logprob: -16.427997589111328

Token 943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025437972508370876
    2. 'return' → logprob: -6.252543926239014
    3. '	' → logprob: -8.502543449401855
    4. ' return' → logprob: -8.627543449401855
    5. '	return' → logprob: -8.627543449401855
    6. ')return' → logprob: -11.252543449401855
    7. '   ' → logprob: -11.377543449401855
    8. ':return' → logprob: -11.502543449401855
    9. '{return' → logprob: -12.252543449401855
    10. '<|end|>' → logprob: -12.502543449401855

Token 944: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04905760660767555
    2. '       ' → logprob: -3.049057722091675
    3. ' return' → logprob: -7.799057483673096
    4. '	return' → logprob: -9.924057960510254
    5. '	' → logprob: -12.424057960510254
    6. ':return' → logprob: -12.924057960510254
    7. ')return' → logprob: -13.299057960510254
    8. '{return' → logprob: -13.674057960510254
    9. '   ' → logprob: -14.174057960510254
    10. '           ' → logprob: -14.924057960510254

Token 945: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -1.676292231422849e-05
    2. ' merged' → logprob: -11.000017166137695
    3. 'mer' → logprob: -22.625017166137695
    4. 'm' → logprob: -23.375017166137695
    5. 'merge' → logprob: -23.375017166137695
    6. '(' → logprob: -24.125017166137695
    7. 'Merged' → logprob: -24.500017166137695
    8. '
' → logprob: -25.375017166137695
    9. '   ' → logprob: -25.375017166137695
    10. 'mapped' → logprob: -25.500017166137695

Token 946: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4261154234409332
    2. 'n' → logprob: -1.1761153936386108
    3. 'Q' → logprob: -3.4261155128479004
    4. 'q' → logprob: -6.0511155128479
    5. 't' → logprob: -6.9261155128479
    6. '#' → logprob: -7.0511155128479
    7. '<|end|>' → logprob: -7.3011155128479
    8. 'N' → logprob: -8.301115036010742
    9. 'T' → logprob: -8.301115036010742
    10. 'class' → logprob: -8.926115036010742

Token 948: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0001427538663847372
    2. ' solve' → logprob: -9.375143051147461
    3. 'main' → logprob: -10.500143051147461
    4. ' process' → logprob: -10.500143051147461
    5. ' m' → logprob: -14.000143051147461
    6. ' solution' → logprob: -14.375143051147461
    7. ' ma' → logprob: -14.625143051147461
    8. '	main' → logprob: -15.125143051147461
    9. ' parse' → logprob: -15.625143051147461
    10. 'solve' → logprob: -15.750143051147461

Token 949: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003407071635592729
    2. '():
' → logprob: -8.000340461730957
    3. ' ():' → logprob: -12.500340461730957
    4. '()' → logprob: -13.875340461730957
    5. '():
' → logprob: -14.750340461730957
    6. '()>' → logprob: -15.625340461730957
    7. '():

' → logprob: -17.125341415405273
    8. '();' → logprob: -17.875341415405273
    9. ':' → logprob: -18.125341415405273
    10. '()">' → logprob: -18.625341415405273

Token 950: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7347538471221924
    2. 'n' → logprob: -1.2347538471221924
    3. '   ' → logprob: -1.4847538471221924
    4. '	n' → logprob: -5.859753608703613
    5. '```' → logprob: -10.609753608703613
    6. '_n' → logprob: -10.984753608703613
    7. 'N' → logprob: -12.109753608703613
    8. ' N' → logprob: -12.234753608703613
    9. ',n' → logprob: -12.609753608703613
    10. ' ' → logprob: -13.734753608703613

Token 951: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11949918419122696
    2. '   ' → logprob: -2.3694992065429688
    3. ' n' → logprob: -4.119499206542969
    4. 'N' (adapté à ' N') → logprob: -5.994499206542969
    5. '	n' → logprob: -8.119499206542969
    6. 'q' → logprob: -10.619499206542969
    7. ' N' → logprob: -10.744499206542969
    8. 'import' → logprob: -12.244499206542969
    9. '```' → logprob: -12.244499206542969
    10. 'Q' → logprob: -12.369499206542969

Token 952: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031115243211388588
    2. ',Q' → logprob: -3.5311152935028076
    3. ',K' → logprob: -6.6561150550842285
    4. ',M' → logprob: -10.156115531921387
    5. 'Q' → logprob: -10.656115531921387
    6. ' ,' → logprob: -11.906115531921387
    7. ' =' → logprob: -12.281115531921387
    8. ',q' → logprob: -13.656115531921387
    9. ',k' → logprob: -13.906115531921387
    10. ' Q' → logprob: -14.156115531921387

Token 953: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '=int' → logprob: -17.501502990722656
    4. '<int' → logprob: -18.126502990722656
    5. '[int' → logprob: -18.251502990722656
    6. '10' → logprob: -19.501502990722656
    7. '(int' → logprob: -19.501502990722656
    8. ':int' → logprob: -19.876502990722656
    9. 'ints' → logprob: -20.001502990722656
    10. ' ' → logprob: -20.001502990722656

Token 954: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25206509232521057
    2. 'input' → logprob: -1.5020650625228882
    3. '(' → logprob: -9.12706470489502
    4. ' input' → logprob: -10.87706470489502
    5. '()' → logprob: -12.12706470489502
    6. '=input' → logprob: -13.25206470489502
    7. '(sys' → logprob: -14.75206470489502
    8. '<input' → logprob: -15.37706470489502
    9. ',input' → logprob: -15.50206470489502
    10. '(
' → logprob: -15.62706470489502

Token 955: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02903454378247261
    2. '().' → logprob: -4.029034614562988
    3. '()' → logprob: -4.529034614562988
    4. '())
' → logprob: -10.904034614562988
    5. ')' → logprob: -11.404034614562988
    6. '(' → logprob: -13.404034614562988
    7. ' ())' → logprob: -13.529034614562988
    8. '()
' → logprob: -13.904034614562988
    9. '();)' → logprob: -14.154034614562988
    10. '())

' → logprob: -15.904034614562988

Token 956: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7964675426483154
    2. 'S' → logprob: -0.9214675426483154
    3. 'Q' → logprob: -2.5464675426483154
    4. ' s' → logprob: -3.4214675426483154
    5. ' S' → logprob: -3.9214675426483154
    6. '   ' → logprob: -4.2964677810668945
    7. ' Q' → logprob: -5.7964677810668945
    8. 'A' → logprob: -6.1714677810668945
    9. 'q' → logprob: -8.046467781066895
    10. 'K' → logprob: -8.796467781066895

Token 957: ' U' (ID: 601)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36736422777175903
    2. 'S' → logprob: -1.2423641681671143
    3. 'Q' → logprob: -3.9923641681671143
    4. 'K' → logprob: -8.867363929748535
    5. ' s' → logprob: -10.242363929748535
    6. ' S' → logprob: -10.742363929748535
    7. 'q' → logprob: -10.867363929748535
    8. 'A' → logprob: -11.367363929748535
    9. 'tree' → logprob: -11.492363929748535
    10. '_s' → logprob: -11.992363929748535

Token 958: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6893826127052307
    2. '=' → logprob: -1.689382553100586
    3. 'P' → logprob: -1.814382553100586
    4. ' =' → logprob: -2.564382553100586
    5. ',' → logprob: -2.814382553100586
    6. 'PPER' → logprob: -5.689382553100586
    7. 'pper' → logprob: -6.439382553100586
    8. 'n' → logprob: -7.314382553100586
    9. ',P' → logprob: -7.439382553100586
    10. 's' → logprob: -7.439382553100586

Token 959: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005508480593562126
    2. '[int' → logprob: -5.7555084228515625
    3. ' int' → logprob: -6.1305084228515625
    4. '[]' → logprob: -10.130508422851562
    5. 'N' → logprob: -10.130508422851562
    6. 'input' → logprob: -10.630508422851562
    7. '[]
' → logprob: -10.880508422851562
    8. '[N' → logprob: -11.505508422851562
    9. '=int' → logprob: -12.755508422851562
    10. ' N' → logprob: -13.005508422851562

Token 960: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2519893944263458
    2. '()' → logprob: -1.5019893646240234
    3. '()
' → logprob: -10.751989364624023
    4. '(' → logprob: -11.126989364624023
    5. '())' → logprob: -11.751989364624023
    6. '()\' → logprob: -12.876989364624023
    7. '()<' → logprob: -13.251989364624023
    8. '()

' → logprob: -13.376989364624023
    9. '()='' → logprob: -13.626989364624023
    10. '()(' → logprob: -13.751989364624023

Token 961: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03708644583821297
    2. 'split' → logprob: -3.7870864868164062
    3. 'rstrip' → logprob: -4.287086486816406
    4. ' strip' → logprob: -15.537086486816406
    5. 'rs' → logprob: -15.662086486816406
    6. 'read' → logprob: -16.162086486816406
    7. 'rst' → logprob: -16.537086486816406
    8. 'decode' → logprob: -17.162086486816406
    9. 'r' → logprob: -17.537086486816406
    10. '(strip' → logprob: -17.787086486816406

Token 962: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05002428963780403
    2. '()
' → logprob: -3.0500242710113525
    3. '()\' → logprob: -7.050024509429932
    4. '
' → logprob: -8.925024032592773
    5. '())' → logprob: -9.050024032592773
    6. '().' → logprob: -9.675024032592773
    7. '   ' → logprob: -9.675024032592773
    8. '(' → logprob: -10.175024032592773
    9. '('\' → logprob: -10.800024032592773
    10. '<|end|>' → logprob: -10.800024032592773

Token 963: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.20603168499656e-05
    2. '\n' → logprob: -9.750061988830566
    3. 'newline' → logprob: -13.375061988830566
    4. 'nl' → logprob: -13.500061988830566
    5. '\' → logprob: -15.500061988830566
    6. '
' → logprob: -16.250062942504883
    7. '')' → logprob: -16.500062942504883
    8. 'input' → logprob: -16.875062942504883
    9. ')\' → logprob: -16.875062942504883
    10. ')' → logprob: -17.000062942504883

Token 964: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2585604786872864
    2. ')
' → logprob: -1.5085604190826416
    3. '')' → logprob: -5.633560657501221
    4. '')
' → logprob: -6.008560657501221
    5. '())
' → logprob: -8.258560180664062
    6. '())' → logprob: -9.133560180664062
    7. ')
' → logprob: -9.633560180664062
    8. '()' → logprob: -9.633560180664062
    9. ')')
' → logprob: -10.758560180664062
    10. ')\' → logprob: -10.883560180664062

Token 965: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11641798913478851
    2. 'Q' → logprob: -2.49141788482666
    3. 'seg' → logprob: -4.61641788482666
    4. 'tree' → logprob: -5.24141788482666
    5. 'st' → logprob: -5.49141788482666
    6. 'ST' → logprob: -5.99141788482666
    7. 'K' → logprob: -6.61641788482666
    8. 's' → logprob: -6.74141788482666
    9. 'S' → logprob: -6.99141788482666
    10. 'segment' → logprob: -7.24141788482666

Token 966: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.15091276168823242
    2. 'seg' → logprob: -2.6509127616882324
    3. 'st' → logprob: -3.4009127616882324
    4. 'tree' → logprob: -4.025912761688232
    5. 'segment' → logprob: -4.275912761688232
    6. 'M' → logprob: -6.775912761688232
    7. 'ST' → logprob: -7.025912761688232
    8. 'q' → logprob: -7.150912761688232
    9. 'S' → logprob: -7.525912761688232
    10. 'K' → logprob: -8.15091323852539

Token 967: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759658217430115
    2. '=' → logprob: -0.8259658217430115
    3. '   ' → logprob: -11.200965881347656
    4. '=int' → logprob: -11.325965881347656
    5. ' ' → logprob: -15.575965881347656
    6. '	' → logprob: -15.825965881347656
    7. '＝' → logprob: -16.825965881347656
    8. ',' → logprob: -16.950965881347656
    9. '=
' → logprob: -17.200965881347656
    10. '  ' → logprob: -17.200965881347656

Token 968: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. '   ' → logprob: -20.00002670288086
    4. '[int' → logprob: -20.37502670288086
    5. '=int' → logprob: -20.50002670288086
    6. '(int' → logprob: -21.37502670288086
    7. '	int' → logprob: -22.37502670288086
    8. '<int' → logprob: -23.00002670288086
    9. 'in' → logprob: -23.00002670288086
    10. ' ' → logprob: -23.50002670288086

Token 969: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00044103997061029077
    2. 'input' → logprob: -7.875441074371338
    3. '()' → logprob: -9.87544059753418
    4. '=input' → logprob: -12.37544059753418
    5. '(' → logprob: -13.00044059753418
    6. ' input' → logprob: -13.12544059753418
    7. ',input' → logprob: -15.12544059753418
    8. '<input' → logprob: -15.50044059753418
    9. '	input' → logprob: -16.00044059753418
    10. '()
' → logprob: -16.00044059753418

Token 970: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018536647781729698
    2. '()' → logprob: -4.518536567687988
    3. '())
' → logprob: -5.018536567687988
    4. ')' → logprob: -7.143536567687988
    5. '()
' → logprob: -9.893536567687988
    6. '())
' → logprob: -12.643536567687988
    7. '();)' → logprob: -14.018536567687988
    8. ')
' → logprob: -14.143536567687988
    9. '())

' → logprob: -14.768536567687988
    10. ' ())' → logprob: -15.393536567687988

Token 971: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5577825903892517
    2. '   ' → logprob: -0.9327825903892517
    3. ' for' → logprob: -3.4327826499938965
    4. '	for' → logprob: -6.9327826499938965
    5. '
' → logprob: -7.9327826499938965
    6. '    
' → logprob: -8.307782173156738
    7. '<|end|>' → logprob: -9.182782173156738
    8. '```' → logprob: -9.932782173156738
    9. '  
' → logprob: -11.557782173156738
    10. '\' → logprob: -12.557782173156738

Token 972: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -0.5915252566337585
    2. 'tree' → logprob: -1.3415253162384033
    3. 'seg' → logprob: -2.2165253162384033
    4. '   ' → logprob: -3.5915253162384033
    5. 'for' → logprob: -3.9665253162384033
    6. ' seg' → logprob: -4.341525077819824
    7. 'segment' → logprob: -4.841525077819824
    8. 'ST' → logprob: -5.966525077819824
    9. ' tree' → logprob: -6.091525077819824
    10. ' st' → logprob: -6.841525077819824

Token 973: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06379225105047226
    2. ' =' → logprob: -2.8137922286987305
    3. 'ree' → logprob: -6.3137922286987305
    4. 'r' → logprob: -11.93879222869873
    5. 'reet' → logprob: -12.81379222869873
    6. '=new' → logprob: -14.43879222869873
    7. '=s' → logprob: -15.06379222869873
    8. '=_' → logprob: -15.06379222869873
    9. '=re' → logprob: -15.43879222869873
    10. '＝' → logprob: -15.56379222869873

Token 974: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -2.935296834039036e-06
    2. ' Segment' → logprob: -12.75000286102295
    3. 'Seg' → logprob: -22.125003814697266
    4. 'Segments' → logprob: -25.125003814697266
    5. 'segment' → logprob: -25.250003814697266
    6. '_segment' → logprob: -25.500003814697266
    7. '   ' → logprob: -25.500003814697266
    8. '
' → logprob: -25.500003814697266
    9. 'Section' → logprob: -26.875003814697266
    10. 'Sentence' → logprob: -27.375003814697266

Token 975: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.816093228830141e-06
    2. 'Tre' → logprob: -13.12500286102295
    3. '(Tree' → logprob: -15.37500286102295
    4. '	Tree' → logprob: -16.000001907348633
    5. 'T' → logprob: -16.125001907348633
    6. '<Tree' → logprob: -16.250001907348633
    7. ' Tree' → logprob: -16.375001907348633
    8. 'tree' → logprob: -18.000001907348633
    9. '_tree' → logprob: -18.000001907348633
    10. '.Tree' → logprob: -18.125001907348633

Token 976: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -1.9361264946837764e-07
    2. 'U' → logprob: -17.25
    3. '(Q' → logprob: -17.625
    4. '(' → logprob: -17.625
    5. '(S' → logprob: -19.375
    6. '((' → logprob: -19.875
    7. '(st' → logprob: -19.875
    8. '(N' → logprob: -20.125
    9. '(s' → logprob: -20.5
    10. '(User' → logprob: -20.75

Token 977: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007173155900090933
    2. ')
' → logprob: -7.2507171630859375
    3. '   ' → logprob: -12.000717163085938
    4. ' )' → logprob: -14.125717163085938
    5. ')
' → logprob: -15.500717163085938
    6. ')

' → logprob: -16.750717163085938
    7. '),' → logprob: -17.375717163085938
    8. '
' → logprob: -17.375717163085938
    9. ')`' → logprob: -17.375717163085938
    10. ' ' → logprob: -17.500717163085938

Token 978: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148305416107178
    2. 'for' → logprob: -1.3148305416107178
    3. ' for' → logprob: -6.564830780029297
    4. '```' → logprob: -9.064830780029297
    5. '	for' → logprob: -10.064830780029297
    6. '``' → logprob: -16.064830780029297
    7. 'import' → logprob: -16.814830780029297
    8. '_for' → logprob: -17.189830780029297
    9. '   ' → logprob: -17.189830780029297
    10. 'while' → logprob: -17.439830780029297

Token 979: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.375
    4. 'import' → logprob: -18.375
    5. 'from' → logprob: -18.75
    6. 'output' → logprob: -19.75
    7. '	for' → logprob: -20.0
    8. 'result' → logprob: -20.625
    9. '
' → logprob: -21.25
    10. 'results' → logprob: -22.375

Token 980: ' binary' (ID: 15600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0068391067907214165
    2. ' for' → logprob: -5.006839275360107
    3. '   ' → logprob: -9.00683879852295
    4. 'result' → logprob: -14.75683879852295
    5. 'output' → logprob: -15.13183879852295
    6. '	for' → logprob: -15.63183879852295
    7. 'import' → logprob: -16.006839752197266
    8. 'from' → logprob: -16.006839752197266
    9. 'res' → logprob: -16.881839752197266
    10. 'answer' → logprob: -17.506839752197266

Token 981: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.27246344089508057
    2. '_search' → logprob: -2.022463321685791
    3. ' search' → logprob: -2.272463321685791
    4. 'l' → logprob: -7.022463321685791
    5. ' =' → logprob: -7.147463321685791
    6. '_left' → logprob: -7.772463321685791
    7. 'left' → logprob: -8.14746379852295
    8. '_l' → logprob: -9.14746379852295
    9. 'earch' → logprob: -9.39746379852295
    10. 'def' → logprob: -9.52246379852295

Token 982: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37746304273605347
    2. ' for' → logprob: -1.5024631023406982
    3. '   ' → logprob: -2.5024631023406982
    4. '
' → logprob: -5.252462863922119
    5. 'def' → logprob: -5.502462863922119
    6. '	for' → logprob: -7.752462863922119
    7. ' def' → logprob: -9.377463340759277
    8. ',' → logprob: -10.752463340759277
    9. '    
' → logprob: -10.877463340759277
    10. '```' → logprob: -11.002463340759277

Token 983: ' first' (ID: 1577)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.93963223695755
    2. ' mid' → logprob: -1.8146321773529053
    3. 'length' → logprob: -2.1896321773529053
    4. 'max' → logprob: -2.6896321773529053
    5. 'l' → logprob: -2.8146321773529053
    6. ' length' → logprob: -3.1896321773529053
    7. 'm' → logprob: -3.6896321773529053
    8. 'i' → logprob: -3.6896321773529053
    9. ' res' → logprob: -3.9396321773529053
    10. ' l' → logprob: -4.064632415771484

Token 984: ' diff' (ID: 8868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.249178409576416
    2. '_' → logprob: -1.624178409576416
    3. ' def' → logprob: -1.874178409576416
    4. ' =' → logprob: -3.124178409576416
    5. 'pos' → logprob: -3.249178409576416
    6. 'mid' → logprob: -3.249178409576416
    7. 'diff' → logprob: -3.249178409576416
    8. ' ' → logprob: -3.874178409576416
    9. ' mismatch' → logprob: -3.999178409576416
    10. '=' → logprob: -4.124178409576416

Token 985: ' char' (ID: 1826)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.111092448234558
    2. '   ' → logprob: -1.236092448234558
    3. '
' → logprob: -1.986092448234558
    4. ' def' → logprob: -2.4860925674438477
    5. ' for' → logprob: -2.6110925674438477
    6. 'for' → logprob: -2.7360925674438477
    7. ' ' → logprob: -5.111092567443848
    8. '       ' → logprob: -5.611092567443848
    9. '	for' → logprob: -6.361092567443848
    10. '	def' → logprob: -6.361092567443848

Token 986: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014553161337971687
    2. 'for' → logprob: -4.389553070068359
    3. ' for' → logprob: -6.639553070068359
    4. 'def' → logprob: -7.264553070068359
    5. '<|end|>' → logprob: -11.13955307006836
    6. '	for' → logprob: -11.63955307006836
    7. '
' → logprob: -11.88955307006836
    8. '  ' → logprob: -13.51455307006836
    9. ' def' → logprob: -14.51455307006836
    10. 'import' → logprob: -14.63955307006836

Token 987: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4506572484970093
    2. 'l' → logprob: -2.200657367706299
    3. 'two' → logprob: -2.700657367706299
    4. 's' → logprob: -2.950657367706299
    5. 'st' → logprob: -3.325657367706299
    6. 'left' → logprob: -3.450657367706299
    7. 'U' → logprob: -4.325657367706299
    8. 'the' → logprob: -5.325657367706299
    9. ' two' → logprob: -5.450657367706299
    10. 'a' → logprob: -5.575657367706299

Token 988: '1' (ID: 16)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9693455696105957
    2. 'and' → logprob: -1.0943455696105957
    3. ',' → logprob: -1.8443455696105957
    4. '   ' → logprob: -3.0943455696105957
    5. 't' → logprob: -3.3443455696105957
    6. '1' → logprob: -3.3443455696105957
    7. '[left' → logprob: -5.844345569610596
    8. 'tring' → logprob: -6.344345569610596
    9. ' ' → logprob: -6.844345569610596
    10. '[' → logprob: -6.844345569610596

Token 989: '[a' (ID: 32035)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7696200609207153
    2. ',' → logprob: -1.3946200609207153
    3. '   ' → logprob: -1.3946200609207153
    4. ' ,' → logprob: -4.269619941711426
    5. ' ' → logprob: -4.644619941711426
    6. 'and' → logprob: -4.769619941711426
    7. '_' → logprob: -5.894619941711426
    8. '  ' → logprob: -6.644619941711426
    9. '    ' → logprob: -7.394619941711426
    10. '[' → logprob: -7.519619941711426

Token 990: ':b' (ID: 87246)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3007494807243347
    2. ' ,' → logprob: -1.8007495403289795
    3. ',b' → logprob: -2.8007495403289795
    4. '],' → logprob: -4.0507493019104
    5. 'nd' → logprob: -4.8007493019104
    6. 'b' → logprob: -5.5507493019104
    7. '   ' → logprob: -6.5507493019104
    8. ' and' → logprob: -7.8007493019104
    9. '
' → logprob: -8.050749778747559
    10. ':],' → logprob: -8.175749778747559

Token 991: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3819330632686615
    2. '+' → logprob: -2.2569329738616943
    3. ',c' → logprob: -2.5069329738616943
    4. ',a' → logprob: -2.8819329738616943
    5. ' ,' → logprob: -3.3819329738616943
    6. 'c' → logprob: -4.506933212280273
    7. ']' → logprob: -4.631933212280273
    8. ',b' → logprob: -5.006933212280273
    9. 'a' → logprob: -5.506933212280273
    10. '],' → logprob: -5.631933212280273

Token 992: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05199369788169861
    2. ',' → logprob: -3.0519936084747314
    3. 'def' → logprob: -6.3019938468933105
    4. ' and' → logprob: -8.051993370056152
    5. ' ,' → logprob: -8.551993370056152
    6. '
' → logprob: -8.801993370056152
    7. '  ' → logprob: -9.176993370056152
    8. 'and' → logprob: -9.301993370056152
    9. ' =' → logprob: -9.676993370056152
    10. ' ' → logprob: -9.676993370056152

Token 993: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4754524827003479
    2. ' s' → logprob: -0.9754524827003479
    3. '   ' → logprob: -7.225452423095703
    4. 'U' → logprob: -7.850452423095703
    5. '#' → logprob: -9.725452423095703
    6. 'st' → logprob: -9.850452423095703
    7. ' U' → logprob: -10.100452423095703
    8. 'u' → logprob: -10.850452423095703
    9. '    ' → logprob: -11.350452423095703
    10. ' ' → logprob: -11.725452423095703

Token 994: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21362914144992828
    2. '1' → logprob: -1.838629126548767
    3. 's' → logprob: -3.4636292457580566
    4. ''s' → logprob: -7.088629245758057
    5. '[' → logprob: -7.213629245758057
    6. '```' → logprob: -8.213628768920898
    7. 't' → logprob: -10.713628768920898
    8. '`s' → logprob: -10.963628768920898
    9. ''' → logprob: -11.088628768920898
    10. ' s' → logprob: -11.588628768920898

Token 995: '[c' (ID: 22840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.385598748922348
    2. ' for' → logprob: -1.6355987787246704
    3. 'for' → logprob: -2.135598659515381
    4. ',' → logprob: -6.010598659515381
    5. '
' → logprob: -7.260598659515381
    6. 's' → logprob: -7.385598659515381
    7. 'def' → logprob: -7.760598659515381
    8. ' (' → logprob: -7.885598659515381
    9. ' ' → logprob: -8.135599136352539
    10. '(' → logprob: -8.385599136352539

Token 996: ':d' (ID: 88567)
  Prédit: ':d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':d' → logprob: -0.0006240377551876009
    2. ',d' → logprob: -7.625624179840088
    3. 'd' → logprob: -9.25062370300293
    4. ':e' → logprob: -11.12562370300293
    5. ':def' → logprob: -12.12562370300293
    6. ' :' → logprob: -12.25062370300293
    7. ':]' → logprob: -12.87562370300293
    8. '-' → logprob: -13.25062370300293
    9. ',' → logprob: -13.37562370300293
    10. '
' → logprob: -13.37562370300293

Token 997: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2115947008132935
    2. '   ' → logprob: -1.3365947008132935
    3. '])' → logprob: -1.3365947008132935
    4. ')
' → logprob: -2.336594581604004
    5. '])
' → logprob: -3.711594581604004
    6. ']' → logprob: -3.836594581604004
    7. ',' → logprob: -4.211594581604004
    8. ' ' → logprob: -5.711594581604004
    9. '
' → logprob: -6.211594581604004
    10. '):' → logprob: -6.711594581604004

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025513887405395508
    2. 'for' → logprob: -3.9005138874053955
    3. ' for' → logprob: -5.400513648986816
    4. '
' → logprob: -8.650513648986816
    5. '<|end|>' → logprob: -9.025513648986816
    6. '```' → logprob: -9.525513648986816
    7. '	for' → logprob: -9.775513648986816
    8. 'def' → logprob: -11.275513648986816
    9. '    
' → logprob: -13.150513648986816
    10. 'import' → logprob: -13.650513648986816

Token 999: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22629113495349884
    2. '   ' → logprob: -2.4762911796569824
    3. 'def' (adapté à ' def') → logprob: -2.4762911796569824
    4. ' for' → logprob: -3.4762911796569824
    5. '
' → logprob: -5.851291179656982
    6. ' def' → logprob: -7.851291179656982
    7. '	for' → logprob: -9.726290702819824
    8. '```' → logprob: -9.726290702819824
    9. 'indent' → logprob: -10.351290702819824
    10. '    
' → logprob: -11.101290702819824

Token 1000: ' first' (ID: 1577)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.32112449407577515
    2. 'bs' → logprob: -2.19612455368042
    3. 'l' → logprob: -2.44612455368042
    4. 'b' → logprob: -3.82112455368042
    5. 'find' → logprob: -4.32112455368042
    6. 'bin' → logprob: -4.32112455368042
    7. 'lower' → logprob: -4.94612455368042
    8. 'bis' → logprob: -4.94612455368042
    9. 'first' → logprob: -4.94612455368042
    10. 'check' → logprob: -6.69612455368042

Token 1001: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.004144642036408186
    2. '_difference' → logprob: -6.379144668579102
    3. '_token' → logprob: -6.504144668579102
    4. '_char' → logprob: -7.879144668579102
    5. '_' → logprob: -8.254144668579102
    6. '_d' → logprob: -9.379144668579102
    7. '_non' → logprob: -10.129144668579102
    8. '_pos' → logprob: -10.629144668579102
    9. '_occ' → logprob: -10.629144668579102
    10. '_dist' → logprob: -11.129144668579102

Token 1002: '(a' (ID: 6271)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.35786423087120056
    2. '(a' → logprob: -1.732864260673523
    3. '(l' → logprob: -2.8578641414642334
    4. 'char' → logprob: -3.1078641414642334
    5. '_pos' → logprob: -4.7328643798828125
    6. '_index' → logprob: -6.1078643798828125
    7. '(' → logprob: -6.2328643798828125
    8. '(i' → logprob: -6.4828643798828125
    9. '(left' → logprob: -6.4828643798828125
    10. '(self' → logprob: -7.1078643798828125

Token 1003: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05148033797740936
    2. ' ,' → logprob: -3.051480293273926
    3. ',b' → logprob: -6.551480293273926
    4. ',
' → logprob: -7.426480293273926
    5. '   ' → logprob: -8.176480293273926
    6. ',a' → logprob: -8.676480293273926
    7. '_,' → logprob: -9.051480293273926
    8. '```' → logprob: -10.301480293273926
    9. ',c' → logprob: -10.551480293273926
    10. 'a' → logprob: -10.801480293273926

Token 1004: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016039233014453202
    2. ' b' → logprob: -9.500160217285156
    3. '   ' → logprob: -10.250160217285156
    4. 'c' → logprob: -11.125160217285156
    5. 'a' → logprob: -11.250160217285156
    6. '           ' → logprob: -12.000160217285156
    7. '       ' → logprob: -12.500160217285156
    8. 'l' → logprob: -12.625160217285156
    9. '
' → logprob: -13.250160217285156
    10. 'def' → logprob: -13.250160217285156

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004017137107439339
    2. ',c' → logprob: -7.875401496887207
    3. ' ,' → logprob: -11.000401496887207
    4. ',
' → logprob: -12.875401496887207
    5. ',b' → logprob: -13.625401496887207
    6. '   ' → logprob: -14.750401496887207
    7. ',a' → logprob: -15.125401496887207
    8. '‌,' → logprob: -16.000402450561523
    9. '       ' → logprob: -16.250402450561523
    10. '_,' → logprob: -16.250402450561523

Token 1006: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003503611544147134
    2. ' c' → logprob: -5.753503799438477
    3. '   ' → logprob: -8.128503799438477
    4. '           ' → logprob: -11.753503799438477
    5. '       ' → logprob: -12.128503799438477
    6. '    ' → logprob: -12.753503799438477
    7. '               ' → logprob: -13.128503799438477
    8. '  ' → logprob: -13.128503799438477
    9. '	c' → logprob: -13.253503799438477
    10. ' ' → logprob: -13.378503799438477

Token 1007: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013230959884822369
    2. ',d' → logprob: -6.876323223114014
    3. ' ,' → logprob: -8.251322746276855
    4. ',b' → logprob: -11.001322746276855
    5. '   ' → logprob: -12.376322746276855
    6. ',
' → logprob: -12.626322746276855
    7. 'd' → logprob: -12.626322746276855
    8. ',c' → logprob: -14.251322746276855
    9. 'def' → logprob: -15.001322746276855
    10. ',r' → logprob: -15.501322746276855

Token 1008: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004622137639671564
    2. ' d' → logprob: -5.379621982574463
    3. '   ' → logprob: -14.504622459411621
    4. 'c' → logprob: -14.504622459411621
    5. '
' → logprob: -15.129622459411621
    6. '	d' → logprob: -15.754622459411621
    7. 'def' → logprob: -15.879622459411621
    8. ',d' → logprob: -16.254621505737305
    9. 'b' → logprob: -16.629621505737305
    10. ' ' → logprob: -17.004621505737305

Token 1009: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012583237141370773
    2. '):
' → logprob: -4.387583255767822
    3. ')' → logprob: -10.137582778930664
    4. '   ' → logprob: -10.512582778930664
    5. '):
' → logprob: -12.887582778930664
    6. ':' → logprob: -13.262582778930664
    7. '       ' → logprob: -13.387582778930664
    8. '):

' → logprob: -14.762582778930664
    9. ' ):' → logprob: -15.137582778930664
    10. ',' → logprob: -15.637582778930664

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14467550814151764
    2. '   ' → logprob: -2.0196754932403564
    3. '```' → logprob: -6.3946757316589355
    4. '    ' → logprob: -8.644675254821777
    5. '     ' → logprob: -10.144675254821777
    6. '    
' → logprob: -10.519675254821777
    7. '	   ' → logprob: -10.644675254821777
    8. '      ' → logprob: -11.519675254821777
    9. 'def' → logprob: -12.019675254821777
    10. '           ' → logprob: -12.019675254821777

Token 1011: ' length' (ID: 5517)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.763330340385437
    2. ' l' → logprob: -1.513330340385437
    3. ' low' → logprob: -2.1383304595947266
    4. ' lo' → logprob: -2.3883304595947266
    5. '       ' → logprob: -3.2633304595947266
    6. 'low' → logprob: -3.2633304595947266
    7. ' left' → logprob: -4.638330459594727
    8. 'left' → logprob: -5.138330459594727
    9. '   ' → logprob: -5.388330459594727
    10. '```' → logprob: -5.888330459594727

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815904915332794
    2. ' =' → logprob: -1.406590461730957
    3. ',' → logprob: -8.531590461730957
    4. '       ' → logprob: -8.906590461730957
    5. '        ' → logprob: -9.906590461730957
    6. ')' → logprob: -11.531590461730957
    7. ' ' → logprob: -11.656590461730957
    8. '    ' → logprob: -11.906590461730957
    9. '   ' → logprob: -12.156590461730957
    10. '=
' → logprob: -12.406590461730957

Token 1013: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4575028121471405
    2. ' min' → logprob: -1.582502841949463
    3. 'b' → logprob: -1.957502841949463
    4. ' b' → logprob: -4.332502841949463
    5. '0' → logprob: -4.957502841949463
    6. ' ' → logprob: -9.207502365112305
    7. '(min' → logprob: -9.707502365112305
    8. 'd' → logprob: -9.957502365112305
    9. '	min' → logprob: -10.457502365112305
    10. '   ' → logprob: -11.082502365112305

Token 1014: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.338466093642637e-05
    2. 'b' → logprob: -10.000073432922363
    3. '(' → logprob: -10.625073432922363
    4. '(
' → logprob: -13.375073432922363
    5. ' (' → logprob: -13.750073432922363
    6. '((' → logprob: -15.000073432922363
    7. '(len' → logprob: -15.500073432922363
    8. '   ' → logprob: -16.125072479248047
    9. '	b' → logprob: -16.250072479248047
    10. '(a' → logprob: -17.000072479248047

Token 1015: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3918263912200928
    2. '-' → logprob: -1.2668263912200928
    3. '+' → logprob: -3.6418263912200928
    4. ',' → logprob: -4.391826629638672
    5. ' +' → logprob: -6.266826629638672
    6. '-b' → logprob: -7.391826629638672
    7. '-length' → logprob: -7.891826629638672
    8. ' ,' → logprob: -8.516826629638672
    9. '-a' → logprob: -9.016826629638672
    10. '   ' → logprob: -9.016826629638672

Token 1016: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015066476771607995
    2. ' a' → logprob: -6.501506805419922
    3. '	a' → logprob: -13.126506805419922
    4. ')a' → logprob: -14.251506805419922
    5. ',a' → logprob: -14.876506805419922
    6. '   ' → logprob: -15.751506805419922
    7. '>a' → logprob: -15.751506805419922
    8. '_a' → logprob: -15.751506805419922
    9. '<|end|>' → logprob: -16.001506805419922
    10. '=a' → logprob: -16.251506805419922

Token 1017: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31620049476623535
    2. ' +' → logprob: -1.3162004947662354
    3. ',' → logprob: -5.941200256347656
    4. ' ,' → logprob: -8.441200256347656
    5. '       ' → logprob: -10.691200256347656
    6. '+,' → logprob: -11.316200256347656
    7. ')' → logprob: -11.691200256347656
    8. '+c' → logprob: -11.691200256347656
    9. ',
' → logprob: -12.191200256347656
    10. '```' → logprob: -12.316200256347656

Token 1018: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -19.125019073486328
    4. '```' → logprob: -19.375019073486328
    5. '   ' → logprob: -19.750019073486328
    6. ',' → logprob: -19.875019073486328
    7. ')' → logprob: -20.875019073486328
    8. 'length' → logprob: -21.250019073486328
    9. '１' → logprob: -21.375019073486328
    10. '2' → logprob: -21.625019073486328

Token 1019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011213806457817554
    2. ' ,' → logprob: -5.636213779449463
    3. ')' → logprob: -5.761213779449463
    4. '+' → logprob: -6.011213779449463
    5. '       ' → logprob: -7.011213779449463
    6. ' +' → logprob: -7.511213779449463
    7. ',
' → logprob: -8.011214256286621
    8. ')
' → logprob: -9.136214256286621
    9. '),' → logprob: -10.761214256286621
    10. '```' → logprob: -11.011214256286621

Token 1020: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02982870303094387
    2. ' d' → logprob: -3.5298287868499756
    3. '   ' → logprob: -10.029829025268555
    4. '       ' → logprob: -11.279829025268555
    5. '           ' → logprob: -12.029829025268555
    6. '
' → logprob: -12.904829025268555
    7. ' ' → logprob: -12.904829025268555
    8. '    ' → logprob: -13.529829025268555
    9. '	d' → logprob: -13.529829025268555
    10. '               ' → logprob: -13.904829025268555

Token 1021: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014167606830597
    2. '-' → logprob: -1.7014167308807373
    3. '-c' → logprob: -14.076416969299316
    4. ' ' → logprob: -14.326416969299316
    5. 'c' → logprob: -14.326416969299316
    6. '```' → logprob: -14.576416969299316
    7. ',' → logprob: -15.076416969299316
    8. '   ' → logprob: -15.576416969299316
    9. ')' → logprob: -16.576416015625
    10. '[' → logprob: -16.826416015625

Token 1022: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008051026379689574
    2. ' c' → logprob: -7.125804901123047
    3. ')c' → logprob: -14.875804901123047
    4. '<|end|>' → logprob: -15.500804901123047
    5. '	c' → logprob: -17.125804901123047
    6. '_c' → logprob: -17.750804901123047
    7. 'd' → logprob: -18.000804901123047
    8. ' ' → logprob: -18.375804901123047
    9. '```' → logprob: -18.500804901123047
    10. 'ct' → logprob: -18.625804901123047

Token 1023: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38698843121528625
    2. ' +' → logprob: -1.1369884014129639
    3. '1' → logprob: -9.636988639831543
    4. ')' → logprob: -10.636988639831543
    5. ')+' → logprob: -11.886988639831543
    6. '+
' → logprob: -12.136988639831543
    7. '       ' → logprob: -12.261988639831543
    8. ' ' → logprob: -13.011988639831543
    9. ',' → logprob: -13.136988639831543
    10. ')
' → logprob: -13.761988639831543

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '
' → logprob: -15.375003814697266
    4. '```' → logprob: -16.125003814697266
    5. '0' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.812503814697266
    7. ')' → logprob: -17.250003814697266
    8. '+' → logprob: -18.062503814697266
    9. '`' → logprob: -18.187503814697266
    10. '１' → logprob: -18.437503814697266

Token 1025: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4980509579181671
    2. ')' → logprob: -0.9980509281158447
    3. '       ' → logprob: -3.7480509281158447
    4. ')
' → logprob: -9.873050689697266
    5. '):
' → logprob: -10.123050689697266
    6. ',' → logprob: -11.998050689697266
    7. '   ' → logprob: -12.373050689697266
    8. '```' → logprob: -12.373050689697266
    9. '
' → logprob: -12.498050689697266
    10. ' )
' → logprob: -12.998050689697266

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005681329872459173
    2. '   ' → logprob: -5.75568151473999
    3. '<|end|>' → logprob: -7.38068151473999
    4. ' for' → logprob: -7.88068151473999
    5. '
' → logprob: -8.130681037902832
    6. ',' → logprob: -8.130681037902832
    7. '        
' → logprob: -8.505681037902832
    8. '	' → logprob: -8.880681037902832
    9. '```' → logprob: -9.505681037902832
    10. '    
' → logprob: -9.505681037902832

Token 1027: ' low' (ID: 4465)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.49664390087127686
    2. '       ' → logprob: -1.2466439008712769
    3. 'low' (adapté à ' low') → logprob: -2.8716440200805664
    4. 'lo' → logprob: -3.7466440200805664
    5. 'left' → logprob: -4.371644020080566
    6. ' l' → logprob: -5.996644020080566
    7. '```' → logprob: -5.996644020080566
    8. '   ' → logprob: -6.246644020080566
    9. ' lo' → logprob: -6.371644020080566
    10. ' low' → logprob: -6.996644020080566

Token 1028: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13167989253997803
    2. '=' → logprob: -2.1316800117492676
    3. ',' → logprob: -5.381680011749268
    4. ' ,' → logprob: -9.00667953491211
    5. ' ' → logprob: -11.88167953491211
    6. '<|end|>' → logprob: -11.88167953491211
    7. ' =
' → logprob: -14.50667953491211
    8. ')' → logprob: -14.75667953491211
    9. '```' → logprob: -14.75667953491211
    10. '0' → logprob: -14.88167953491211

Token 1029: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.375007629394531
    3. '1' → logprob: -12.750007629394531
    4. '       ' → logprob: -17.00000762939453
    5. '   ' → logprob: -18.50000762939453
    6. '
' → logprob: -19.37500762939453
    7. '```' → logprob: -19.50000762939453
    8. '=' → logprob: -20.12500762939453
    9. '        ' → logprob: -22.50000762939453
    10. '           ' → logprob: -23.00000762939453

Token 1030: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.375000953674316
    4. 'a' → logprob: -16.5
    5. '=' → logprob: -21.125
    6. '
' → logprob: -21.125
    7. '```' → logprob: -21.25
    8. '   ' → logprob: -21.875
    9. '-' → logprob: -22.25
    10. '۰' → logprob: -22.375

Token 1031: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007823217660188675
    2. ' 
' → logprob: -5.5078229904174805
    3. '<|end|>' → logprob: -6.8828229904174805
    4. ',' → logprob: -7.0078229904174805
    5. ',
' → logprob: -7.8828229904174805
    6. '```' → logprob: -8.00782299041748
    7. '  
' → logprob: -8.25782299041748
    8. 'high' → logprob: -8.63282299041748
    9. '        
' → logprob: -8.75782299041748
    10. '       ' → logprob: -9.50782299041748

Token 1032: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031477559357881546
    2. '       ' → logprob: -4.156477451324463
    3. ' 
' → logprob: -5.156477451324463
    4. ' high' → logprob: -5.281477451324463
    5. 'high' → logprob: -6.656477451324463
    6. ',
' → logprob: -7.031477451324463
    7. ',' → logprob: -7.156477451324463
    8. '(high' → logprob: -7.906477451324463
    9. '```' → logprob: -8.406477928161621
    10. '<|end|>' → logprob: -8.406477928161621

Token 1033: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.002476016292348504
    2. ' high' → logprob: -6.002476215362549
    3. '1' → logprob: -15.75247573852539
    4. 'up' → logprob: -16.12747573852539
    5. 'High' → logprob: -17.37747573852539
    6. '
' → logprob: -17.62747573852539
    7. 'hi' → logprob: -18.00247573852539
    8. 'low' → logprob: -18.12747573852539
    9. '   ' → logprob: -18.50247573852539
    10. 'upp' → logprob: -19.50247573852539

Token 1034: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743349254131317
    2. '=' → logprob: -0.9743349552154541
    3. 'length' → logprob: -8.974334716796875
    4. ' length' → logprob: -9.224334716796875
    5. '[length' → logprob: -10.974334716796875
    6. ',length' → logprob: -11.349334716796875
    7. '(length' → logprob: -13.224334716796875
    8. ',' → logprob: -14.724334716796875
    9. '=
' → logprob: -14.849334716796875
    10. '
' → logprob: -14.974334716796875

Token 1035: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0019286326132714748
    2. ' length' → logprob: -6.251928806304932
    3. '	length' → logprob: -18.376928329467773
    4. 'len' → logprob: -19.626928329467773
    5. '(length' → logprob: -21.001928329467773
    6. '[length' → logprob: -21.126928329467773
    7. 'leng' → logprob: -21.501928329467773
    8. ',length' → logprob: -22.001928329467773
    9. '   ' → logprob: -22.126928329467773
    10. 'ength' → logprob: -22.501928329467773

Token 1036: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6470400094985962
    2. ' +' → logprob: -1.2720400094985962
    3. '
' → logprob: -1.7720400094985962
    4. '       ' → logprob: -4.147039890289307
    5. '<|end|>' → logprob: -5.022039890289307
    6. ' -' → logprob: -7.022039890289307
    7. '```' → logprob: -7.272039890289307
    8. '+
' → logprob: -7.522039890289307
    9. '-' → logprob: -7.772039890289307
    10. '   ' → logprob: -8.147040367126465

Token 1037: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6671165227890015
    2. '       ' → logprob: -0.7921165227890015
    3. '<|end|>' → logprob: -4.292116641998291
    4. '```' → logprob: -5.042116641998291
    5. '        
' → logprob: -5.792116641998291
    6. '   ' → logprob: -6.042116641998291
    7. '  
' → logprob: -6.042116641998291
    8. '		
' → logprob: -7.167116641998291
    9. '    
' → logprob: -7.167116641998291
    10. '	
' → logprob: -7.167116641998291

Token 1038: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.45224475860595703
    2. '       ' → logprob: -1.452244758605957
    3. 'while' (adapté à ' while') → logprob: -2.702244758605957
    4. '   ' → logprob: -2.952244758605957
    5. '	while' → logprob: -4.577244758605957
    6. '
' → logprob: -9.077244758605957
    7. ' ' → logprob: -10.327244758605957
    8. '	' → logprob: -11.827244758605957
    9. '```' → logprob: -11.827244758605957
    10. '    ' → logprob: -11.952244758605957

Token 1039: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.5759433507919312
    2. 'low' → logprob: -0.8259433507919312
    3. 'high' → logprob: -13.325942993164062
    4. ' high' → logprob: -13.575942993164062
    5. '(low' → logprob: -14.075942993164062
    6. ' ' → logprob: -15.700942993164062
    7. ' True' → logprob: -16.950942993164062
    8. '_low' → logprob: -17.075942993164062
    9. 'True' → logprob: -18.200942993164062
    10. '
' → logprob: -18.450942993164062

Token 1040: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14335770905017853
    2. '<' → logprob: -2.018357753753662
    3. ' <=' → logprob: -7.393357753753662
    4. '<=' → logprob: -10.768357276916504
    5. ' !=' → logprob: -11.018357276916504
    6. '<int' → logprob: -11.643357276916504
    7. ' ' → logprob: -12.393357276916504
    8. '<n' → logprob: -12.643357276916504
    9. '<len' → logprob: -12.643357276916504
    10. ' ' → logprob: -14.018357276916504

Token 1041: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0011703446507453918
    2. ' high' → logprob: -6.7511701583862305
    3. '
' → logprob: -16.501171112060547
    4. 'High' → logprob: -17.126171112060547
    5. '.high' → logprob: -17.501171112060547
    6. '(high' → logprob: -17.626171112060547
    7. '高' → logprob: -18.876171112060547
    8. '/high' → logprob: -18.876171112060547
    9. '-high' → logprob: -19.376171112060547
    10. '_high' → logprob: -19.501171112060547

Token 1042: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3404911756515503
    2. ':' → logprob: -1.5904911756515503
    3. '           ' → logprob: -2.59049129486084
    4. ',' → logprob: -5.71549129486084
    5. '<|end|>' → logprob: -6.59049129486084
    6. '<|end|>' → logprob: -6.84049129486084
    7. '       ' → logprob: -6.96549129486084
    8. '[' → logprob: -7.34049129486084
    9. ',
' → logprob: -7.96549129486084
    10. '	       ' → logprob: -8.21549129486084

Token 1043: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0084723811596632
    2. ' 
' → logprob: -5.383472442626953
    3. '            
' → logprob: -7.008472442626953
    4. '	       ' → logprob: -7.133472442626953
    5. '
' → logprob: -7.633472442626953
    6. '```' → logprob: -8.508472442626953
    7. '    
' → logprob: -8.758472442626953
    8. '		' → logprob: -8.758472442626953
    9. ' ' → logprob: -8.883472442626953
    10. '   ' → logprob: -8.883472442626953

Token 1044: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.011397935450077057
    2. ' mid' → logprob: -4.511397838592529
    3. 'm' → logprob: -8.511398315429688
    4. '(mid' → logprob: -9.511398315429688
    5. '           ' → logprob: -9.636398315429688
    6. 'middle' → logprob: -11.886398315429688
    7. '   ' → logprob: -13.886398315429688
    8. '```' → logprob: -14.886398315429688
    9. 'low' → logprob: -15.136398315429688
    10. '(m' → logprob: -15.136398315429688

Token 1045: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10037974268198013
    2. '=' → logprob: -2.350379705429077
    3. '=(' → logprob: -9.350379943847656
    4. '=int' → logprob: -9.850379943847656
    5. ' =(' → logprob: -10.850379943847656
    6. '=end' → logprob: -12.975379943847656
    7. '=len' → logprob: -13.100379943847656
    8. '=((' → logprob: -13.350379943847656
    9. ' ' → logprob: -13.975379943847656
    10. '+=' → logprob: -13.975379943847656

Token 1046: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.0002823120157700032
    2. ' (' → logprob: -8.250282287597656
    3. '(left' → logprob: -11.875282287597656
    4. '(l' → logprob: -12.000282287597656
    5. '(lower' → logprob: -12.125282287597656
    6. '(mid' → logprob: -14.125282287597656
    7. '(high' → logprob: -14.625282287597656
    8. '(lo' → logprob: -15.250282287597656
    9. '(' → logprob: -15.750282287597656
    10. 'low' → logprob: -15.750282287597656

Token 1047: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -5.514650183613412e-05
    2. ' low' → logprob: -10.500055313110352
    3. '(low' → logprob: -10.500055313110352
    4. 'high' → logprob: -17.50005531311035
    5. '_low' → logprob: -19.37505531311035
    6. '.low' → logprob: -19.50005531311035
    7. '
' → logprob: -19.87505531311035
    8. '   ' → logprob: -20.12505531311035
    9. ' ' → logprob: -20.12505531311035
    10. ')' → logprob: -20.37505531311035

Token 1048: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31372392177581787
    2. '+' → logprob: -1.3137239217758179
    3. 'low' → logprob: -7.938724040985107
    4. '(low' → logprob: -9.68872356414795
    5. ')' → logprob: -10.93872356414795
    6. ' low' → logprob: -11.06372356414795
    7. '```' → logprob: -12.68872356414795
    8. 'high' → logprob: -12.93872356414795
    9. '+(' → logprob: -14.06372356414795
    10. '(high' → logprob: -14.06372356414795

Token 1049: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.00016086915275081992
    2. ' high' → logprob: -8.750161170959473
    3. '(high' → logprob: -13.000161170959473
    4. '1' → logprob: -16.250160217285156
    5. '
' → logprob: -18.125160217285156
    6. '.high' → logprob: -18.250160217285156
    7. '/high' → logprob: -19.125160217285156
    8. '_high' → logprob: -20.000160217285156
    9. '-high' → logprob: -20.250160217285156
    10. '高' → logprob: -20.250160217285156

Token 1050: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06340407580137253
    2. ' +' → logprob: -3.438404083251953
    3. '+' → logprob: -3.813404083251953
    4. ')//' → logprob: -5.438404083251953
    5. ')>>' → logprob: -6.063404083251953
    6. ' )' → logprob: -7.938404083251953
    7. '>>' → logprob: -9.688404083251953
    8. ' //' → logprob: -9.938404083251953
    9. ' >>' → logprob: -10.438404083251953
    10. '```' → logprob: -10.688404083251953

Token 1051: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6356330513954163
    2. '//' → logprob: -1.1356329917907715
    3. '>>' → logprob: -2.5106329917907715
    4. '+' → logprob: -2.8856329917907715
    5. ' +' → logprob: -4.8856329917907715
    6. ')' → logprob: -6.2606329917907715
    7. ' >>' → logprob: -6.3856329917907715
    8. '
' → logprob: -7.7606329917907715
    9. ')//' → logprob: -8.63563346862793
    10. '```' → logprob: -8.76063346862793

Token 1052: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -21.0
    4. '1' → logprob: -22.0
    5. '```' → logprob: -22.0
    6. '２' → logprob: -22.75
    7. '   ' → logprob: -22.875
    8. '۲' → logprob: -23.0
    9. '=' → logprob: -23.875
    10. '22' → logprob: -24.875

Token 1053: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '1' → logprob: -22.0
    4. '
' → logprob: -22.375
    5. '```' → logprob: -23.75
    6. '3' → logprob: -25.375
    7. '۲' → logprob: -25.5
    8. '   ' → logprob: -25.5
    9. '=' → logprob: -25.875
    10. '

' → logprob: -26.0

Token 1054: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10546334832906723
    2. '<|end|>' → logprob: -3.1054632663726807
    3. '
' → logprob: -3.8554632663726807
    4. '            
' → logprob: -4.60546350479126
    5. ' 
' → logprob: -5.48046350479126
    6. '+' → logprob: -5.48046350479126
    7. ')' → logprob: -5.85546350479126
    8. '<|end|>' → logprob: -6.10546350479126
    9. '  
' → logprob: -6.35546350479126
    10. '       ' → logprob: -6.35546350479126

Token 1055: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030580461025238037
    2. '
' → logprob: -6.628057956695557
    3. '            
' → logprob: -7.378057956695557
    4. '       ' → logprob: -7.878057956695557
    5. '        
' → logprob: -8.628058433532715
    6. '   ' → logprob: -8.878058433532715
    7. '    
' → logprob: -9.378058433532715
    8. ' 
' → logprob: -9.503058433532715
    9. '  
' → logprob: -10.128058433532715
    10. '		' → logprob: -10.378058433532715

Token 1056: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3068421483039856
    2. 'hash' → logprob: -1.6818420886993408
    3. 'h' (adapté à ' h') → logprob: -2.806842088699341
    4. 'left' → logprob: -4.43184232711792
    5. 'l' → logprob: -6.93184232711792
    6. 'hs' → logprob: -7.05684232711792
    7. 'if' → logprob: -7.05684232711792
    8. ' hash' → logprob: -7.55684232711792
    9. 'lhs' → logprob: -7.80684232711792
    10. 'res' → logprob: -8.181841850280762

Token 1057: '1' (ID: 16)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6945340633392334
    2. ' =' → logprob: -1.0695340633392334
    3. '1' → logprob: -2.3195340633392334
    4. '=' → logprob: -3.4445340633392334
    5. '_left' → logprob: -4.9445343017578125
    6. '_val' → logprob: -5.1945343017578125
    7. 's' → logprob: -5.6945343017578125
    8. '           ' → logprob: -5.6945343017578125
    9. '_hash' → logprob: -6.1945343017578125
    10. '_sub' → logprob: -6.4445343017578125

Token 1058: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25215256214141846
    2. '=' → logprob: -1.5021525621414185
    3. ',' → logprob: -8.502152442932129
    4. '    ' → logprob: -12.377152442932129
    5. '        ' → logprob: -12.877152442932129
    6. '           ' → logprob: -13.002152442932129
    7. ')' → logprob: -13.002152442932129
    8. '=h' → logprob: -13.377152442932129
    9. '       ' → logprob: -13.752152442932129
    10. ' ,' → logprob: -14.002152442932129

Token 1059: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.07889165729284286
    2. ' st' → logprob: -2.5788917541503906
    3. '           ' → logprob: -13.20389175415039
    4. '	st' → logprob: -17.45389175415039
    5. '(st' → logprob: -18.45389175415039
    6. '   ' → logprob: -18.82889175415039
    7. '
' → logprob: -19.45389175415039
    8. '               ' → logprob: -19.95389175415039
    9. ' ' → logprob: -20.07889175415039
    10. '       ' → logprob: -20.07889175415039

Token 1060: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -6.392202976712724e-06
    2. 'query' → logprob: -12.000006675720215
    3. '.' → logprob: -16.5000057220459
    4. '```' → logprob: -17.6250057220459
    5. '	query' → logprob: -18.0000057220459
    6. '$query' → logprob: -18.6250057220459
    7. '=query' → logprob: -18.7500057220459
    8. ' .' → logprob: -18.7500057220459
    9. '_query' → logprob: -19.2500057220459
    10. ' query' → logprob: -19.5000057220459

Token 1061: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.875012397766113
    4. '```' → logprob: -15.250012397766113
    5. '	st' → logprob: -15.875012397766113
    6. ' (' → logprob: -16.25001335144043
    7. ' st' → logprob: -16.50001335144043
    8. 'st' → logprob: -16.62501335144043
    9. '(St' → logprob: -17.37501335144043
    10. '   ' → logprob: -18.25001335144043

Token 1062: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.024413248524069786
    2. 'root' → logprob: -3.8994133472442627
    3. '.st' → logprob: -5.649413108825684
    4. '(st' → logprob: -8.274413108825684
    5. '.node' → logprob: -10.274413108825684
    6. 'st' → logprob: -11.274413108825684
    7. '(root' → logprob: -11.399413108825684
    8. ',' → logprob: -12.024413108825684
    9. '.query' → logprob: -12.274413108825684
    10. '   ' → logprob: -12.524413108825684

Token 1063: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006392885115928948
    2. ',a' → logprob: -7.37563943862915
    3. ' ,' → logprob: -11.500638961791992
    4. 'a' → logprob: -13.500638961791992
    5. '   ' → logprob: -14.625638961791992
    6. ',c' → logprob: -16.250638961791992
    7. '```' → logprob: -16.250638961791992
    8. ',b' → logprob: -16.750638961791992
    9. ',h' → logprob: -16.875638961791992
    10. '(a' → logprob: -17.000638961791992

Token 1064: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7120533811976202e-05
    2. ' a' → logprob: -11.000017166137695
    3. '	a' → logprob: -15.375017166137695
    4. ')a' → logprob: -16.125017166137695
    5. '
' → logprob: -17.625017166137695
    6. '   ' → logprob: -18.500017166137695
    7. '>a' → logprob: -19.125017166137695
    8. '#a' → logprob: -19.250017166137695
    9. '           ' → logprob: -19.375017166137695
    10. ''a' → logprob: -19.375017166137695

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03233255818486214
    2. ',a' → logprob: -3.9073326587677
    3. '+' → logprob: -4.657332420349121
    4. 'a' → logprob: -7.282332420349121
    5. ' +' → logprob: -7.282332420349121
    6. '+a' → logprob: -7.657332420349121
    7. ' ,' → logprob: -8.032332420349121
    8. ',b' → logprob: -11.657332420349121
    9. '```' → logprob: -12.032332420349121
    10. ' a' → logprob: -12.282332420349121

Token 1066: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.625000953674316
    3. '(a' → logprob: -16.5
    4. '	a' → logprob: -18.25
    5. '```' → logprob: -18.75
    6. ''a' → logprob: -20.125
    7. ')a' → logprob: -20.125
    8. '[a' → logprob: -20.5
    9. '   ' → logprob: -20.875
    10. '#a' → logprob: -21.375

Token 1067: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858771339058876
    2. ' +' → logprob: -3.0485877990722656
    3. 'mid' → logprob: -16.173587799072266
    4. '[mid' → logprob: -16.548587799072266
    5. '```' → logprob: -16.923587799072266
    6. '           ' → logprob: -17.423587799072266
    7. '+
' → logprob: -17.423587799072266
    8. '+m' → logprob: -18.048587799072266
    9. ' ' → logprob: -18.298587799072266
    10. '＋' → logprob: -18.548587799072266

Token 1068: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.1472419600977446e-06
    2. ' mid' → logprob: -14.000000953674316
    3. '[mid' → logprob: -15.125000953674316
    4. '(mid' → logprob: -18.000001907348633
    5. '
' → logprob: -19.750001907348633
    6. 'midd' → logprob: -20.500001907348633
    7. 'midt' → logprob: -21.625001907348633
    8. 'm' → logprob: -22.125001907348633
    9. '_mid' → logprob: -22.375001907348633
    10. 'middle' → logprob: -22.375001907348633

Token 1069: ')
' (ID: 446)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.2921948730945587
    2. '[' → logprob: -2.1671948432922363
    3. ')' → logprob: -2.5421948432922363
    4. '+' → logprob: -3.1671948432922363
    5. '-' → logprob: -4.417194843292236
    6. ' +' → logprob: -6.167194843292236
    7. ',' → logprob: -6.542194843292236
    8. ')
' → logprob: -7.292194843292236
    9. ' -' → logprob: -7.667194843292236
    10. '           ' → logprob: -8.042195320129395

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056853074580430984
    2. '<|end|>' → logprob: -2.9318530559539795
    3. ')' → logprob: -6.556853294372559
    4. '<|end|>' → logprob: -8.556853294372559
    5. '            
' → logprob: -8.931853294372559
    6. '		' → logprob: -10.056853294372559
    7. ' ' → logprob: -10.681853294372559
    8. '          ' → logprob: -10.931853294372559
    9. '[' → logprob: -11.056853294372559
    10. '       ' → logprob: -11.306853294372559

Token 1071: ' h' (ID: 312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15176592767238617
    2. ' if' → logprob: -2.651765823364258
    3. '
' → logprob: -4.526765823364258
    4. ' h' → logprob: -4.526765823364258
    5. 'if' → logprob: -4.776765823364258
    6. '            
' → logprob: -4.776765823364258
    7. '[' → logprob: -4.901765823364258
    8. ')' → logprob: -5.151765823364258
    9. ' 
' → logprob: -5.276765823364258
    10. 'h' (adapté à ' h') → logprob: -5.276765823364258

Token 1072: '2' (ID: 17)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6366677284240723
    2. '1' → logprob: -1.8866677284240723
    3. '=' → logprob: -2.1366677284240723
    4. '[' → logprob: -2.2616677284240723
    5. ' =' → logprob: -2.3866677284240723
    6. '_' → logprob: -6.386667728424072
    7. '=_' → logprob: -6.886667728424072
    8. '
' → logprob: -7.761667728424072
    9. '```' → logprob: -7.886667728424072
    10. 'val' → logprob: -8.261667251586914

Token 1073: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047814972698689
    2. '=' → logprob: -4.511047840118408
    3. '<|end|>' → logprob: -18.01104736328125
    4. ' =
' → logprob: -18.26104736328125
    5. ')' → logprob: -18.38604736328125
    6. ' ' → logprob: -19.38604736328125
    7. '[' → logprob: -19.51104736328125
    8. '=
' → logprob: -19.76104736328125
    9. ',' → logprob: -20.26104736328125
    10. ' ' → logprob: -21.26104736328125

Token 1074: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.20162753760814667
    2. ' st' → logprob: -1.701627492904663
    3. '(st' → logprob: -8.451627731323242
    4. '	st' → logprob: -15.076627731323242
    5. 's' → logprob: -15.826627731323242
    6. '(' → logprob: -16.076627731323242
    7. ' ' → logprob: -17.326627731323242
    8. ' (' → logprob: -17.826627731323242
    9. '_st' → logprob: -18.576627731323242
    10. '   ' → logprob: -18.826627731323242

Token 1075: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.0002108118060277775
    2. 'query' → logprob: -8.500210762023926
    3. ' query' → logprob: -13.250210762023926
    4. '.' → logprob: -13.250210762023926
    5. '(st' → logprob: -13.750210762023926
    6. '(query' → logprob: -14.125210762023926
    7. '.st' → logprob: -14.750210762023926
    8. '.root' → logprob: -15.250210762023926
    9. ' .' → logprob: -15.375210762023926
    10. 'Query' → logprob: -15.500210762023926

Token 1076: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.750016212463379
    3. 'st' → logprob: -11.875016212463379
    4. ' st' → logprob: -13.750016212463379
    5. '(
' → logprob: -15.625016212463379
    6. '	st' → logprob: -16.000017166137695
    7. '```' → logprob: -18.125017166137695
    8. ' (' → logprob: -18.250017166137695
    9. '(stor' → logprob: -18.750017166137695
    10. '/st' → logprob: -19.625017166137695

Token 1077: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00012403888104017824
    2. 'root' → logprob: -9.000123977661133
    3. '.st' → logprob: -14.625123977661133
    4. ' root' → logprob: -17.500123977661133
    5. '.' → logprob: -17.625123977661133
    6. '.ro' → logprob: -17.625123977661133
    7. '[root' → logprob: -18.000123977661133
    8. '.node' → logprob: -18.250123977661133
    9. '	root' → logprob: -19.125123977661133
    10. ' .' → logprob: -19.125123977661133

Token 1078: ',' (ID: 11)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0010471008718013763
    2. ',' → logprob: -6.876047134399414
    3. '(' → logprob: -12.126047134399414
    4. ' st' → logprob: -12.376047134399414
    5. 'st' → logprob: -13.501047134399414
    6. '```' → logprob: -13.626047134399414
    7. ')' → logprob: -14.126047134399414
    8. '[' → logprob: -14.751047134399414
    9. '(
' → logprob: -15.376047134399414
    10. ' (' → logprob: -15.751047134399414

Token 1079: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3868769407272339
    2. 'c' → logprob: -1.1368769407272339
    3. 'a' → logprob: -13.886877059936523
    4. 'st' → logprob: -14.011877059936523
    5. '	c' → logprob: -14.136877059936523
    6. '   ' → logprob: -14.386877059936523
    7. 's' → logprob: -14.636877059936523
    8. ' ' → logprob: -14.761877059936523
    9. '(c' → logprob: -14.886877059936523
    10. ')c' → logprob: -14.886877059936523

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00250918953679502
    2. ',c' → logprob: -6.002509117126465
    3. ' ,' → logprob: -11.002509117126465
    4. 'c' → logprob: -11.252509117126465
    5. ',a' → logprob: -13.752509117126465
    6. '<|end|>' → logprob: -14.752509117126465
    7. ' c' → logprob: -15.002509117126465
    8. 'a' → logprob: -15.002509117126465
    9. ',
' → logprob: -15.127509117126465
    10. ',k' → logprob: -15.252509117126465

Token 1081: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005535095697268844
    2. ' c' → logprob: -7.500553607940674
    3. ')c' → logprob: -16.250553131103516
    4. 'a' → logprob: -16.375553131103516
    5. '<|end|>' → logprob: -16.375553131103516
    6. '	c' → logprob: -16.625553131103516
    7. '```' → logprob: -17.250553131103516
    8. '(c' → logprob: -17.875553131103516
    9. '[c' → logprob: -18.000553131103516
    10. '   ' → logprob: -18.375553131103516

Token 1082: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031308311969041824
    2. '+c' → logprob: -3.53130841255188
    3. ' +' → logprob: -6.531308174133301
    4. 'c' → logprob: -9.9063081741333
    5. '+m' → logprob: -10.5313081741333
    6. ',c' → logprob: -11.4063081741333
    7. ',' → logprob: -12.5313081741333
    8. '```' → logprob: -12.7813081741333
    9. '[mid' → logprob: -14.0313081741333
    10. '<|end|>' → logprob: -14.1563081741333

Token 1083: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: 0.0
    2. '[mid' → logprob: -16.875
    3. ' mid' → logprob: -17.625
    4. '(mid' → logprob: -18.625
    5. 'm' → logprob: -21.25
    6. 'midd' → logprob: -22.125
    7. '-mid' → logprob: -22.375
    8. '
' → logprob: -22.625
    9. '_mid' → logprob: -22.75
    10. 'middle' → logprob: -23.25

Token 1084: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14442017674446106
    2. ')' → logprob: -2.0194201469421387
    3. ')
' → logprob: -6.769420146942139
    4. '<|end|>' → logprob: -7.894420146942139
    5. '       ' → logprob: -9.144420623779297
    6. '          ' → logprob: -10.894420623779297
    7. '
' → logprob: -11.269420623779297
    8. ',' → logprob: -11.644420623779297
    9. ')\
' → logprob: -11.644420623779297
    10. '   ' → logprob: -11.894420623779297

Token 1085: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030252093449234962
    2. '<|end|>' → logprob: -3.655251979827881
    3. '
' → logprob: -6.280251979827881
    4. '<|end|>' → logprob: -7.905251979827881
    5. ')' → logprob: -8.030252456665039
    6. '```' → logprob: -8.030252456665039
    7. '            
' → logprob: -8.530252456665039
    8. '  
' → logprob: -8.655252456665039
    9. ' 
' → logprob: -8.655252456665039
    10. '       ' → logprob: -8.780252456665039

Token 1086: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2820473313331604
    2. ' if' → logprob: -1.6570472717285156
    3. 'if' (adapté à ' if') → logprob: -2.9070472717285156
    4. '<|end|>' → logprob: -8.907047271728516
    5. '```' → logprob: -9.282047271728516
    6. '       ' → logprob: -10.032047271728516
    7. '
' → logprob: -10.782047271728516
    8. '	if' → logprob: -10.782047271728516
    9. '   ' → logprob: -11.032047271728516
    10. ' ' → logprob: -11.032047271728516

Token 1087: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.688212614681106e-05
    2. ' h' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.875017166137695
    4. '(h' → logprob: -18.750017166137695
    5. '
' → logprob: -19.125017166137695
    6. '	h' → logprob: -19.750017166137695
    7. '[h' → logprob: -21.375017166137695
    8. '```' → logprob: -21.625017166137695
    9. '  ' → logprob: -21.750017166137695
    10. '

' → logprob: -21.875017166137695

Token 1088: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '
' → logprob: -17.125
    4. 'ash' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. '`' → logprob: -19.625
    7. 'hash' → logprob: -19.875
    8. 'h' → logprob: -19.875
    9. '' → logprob: -20.125
    10. 'a' → logprob: -20.5625

Token 1089: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007047821767628193
    2. ' ==' → logprob: -5.507047653198242
    3. '==' → logprob: -5.882047653198242
    4. '=' → logprob: -9.507047653198242
    5. '           ' → logprob: -10.882047653198242
    6. ' =' → logprob: -11.132047653198242
    7. '0' → logprob: -11.382047653198242
    8. '[:' → logprob: -12.007047653198242
    9. '```' → logprob: -12.007047653198242
    10. ' [' → logprob: -12.132047653198242

Token 1090: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031043823808431625
    2. '2' → logprob: -3.656043767929077
    3. ':' → logprob: -5.406044006347656
    4. '3' → logprob: -9.281044006347656
    5. '
' → logprob: -10.531044006347656
    6. ':-' → logprob: -10.781044006347656
    7. '(' → logprob: -10.906044006347656
    8. ':]' → logprob: -10.906044006347656
    9. '::-' → logprob: -11.906044006347656
    10. '1' → logprob: -11.906044006347656

Token 1091: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25198429822921753
    2. ' ==' → logprob: -1.5019843578338623
    3. '=' → logprob: -10.251984596252441
    4. '==
' → logprob: -12.251984596252441
    5. ']==' → logprob: -12.376984596252441
    6. ')==' → logprob: -12.376984596252441
    7. '[' → logprob: -12.501984596252441
    8. ')' → logprob: -13.751984596252441
    9. '===' → logprob: -14.001984596252441
    10. '```' → logprob: -15.251984596252441

Token 1092: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001061867456883192
    2. ' ==' → logprob: -6.876061916351318
    3. '=' → logprob: -10.50106143951416
    4. '==
' → logprob: -13.62606143951416
    5. '!=' → logprob: -16.001062393188477
    6. '===' → logprob: -16.626062393188477
    7. ')==' → logprob: -16.626062393188477
    8. ']==' → logprob: -17.251062393188477
    9. '```' → logprob: -17.251062393188477
    10. '[' → logprob: -17.626062393188477

Token 1093: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.306760805164231e-05
    2. ' h' → logprob: -11.25001335144043
    3. '	h' → logprob: -18.50001335144043
    4. '0' → logprob: -18.87501335144043
    5. 'st' → logprob: -19.50001335144043
    6. '_h' → logprob: -19.87501335144043
    7. '"h' → logprob: -19.87501335144043
    8. '(h' → logprob: -20.12501335144043
    9. '=h' → logprob: -20.12501335144043
    10. ':h' → logprob: -20.37501335144043

Token 1094: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.375000953674316
    3. 'h' → logprob: -14.375000953674316
    4. '[' → logprob: -16.375001907348633
    5. 'w' → logprob: -19.875001907348633
    6. 'f' → logprob: -20.000001907348633
    7. 'key' → logprob: -20.500001907348633
    8. '```' → logprob: -20.625001907348633
    9. 'i' → logprob: -20.750001907348633
    10. 's' → logprob: -20.750001907348633

Token 1095: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.309382373117842e-05
    2. '0' → logprob: -10.875033378601074
    3. 'and' → logprob: -11.375033378601074
    4. '           ' → logprob: -13.250033378601074
    5. '       ' → logprob: -15.250033378601074
    6. ' and' → logprob: -15.750033378601074
    7. '(' → logprob: -15.750033378601074
    8. '```' → logprob: -15.875033378601074
    9. '               ' → logprob: -16.250032424926758
    10. '   ' → logprob: -16.500032424926758

Token 1096: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. '1' → logprob: -14.50000286102295
    4. ' ' → logprob: -16.125001907348633
    5. '(' → logprob: -17.687501907348633
    6. '```' → logprob: -17.687501907348633
    7. '   ' → logprob: -17.937501907348633
    8. '2' → logprob: -18.625001907348633
    9. '۰' → logprob: -18.687501907348633
    10. '
' → logprob: -19.125001907348633

Token 1097: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06200745329260826
    2. 'and' → logprob: -2.812007427215576
    3. '	and' → logprob: -11.062007904052734
    4. '           ' → logprob: -11.937007904052734
    5. '<|end|>' → logprob: -12.187007904052734
    6. ' ' → logprob: -12.562007904052734
    7. '            ' → logprob: -12.812007904052734
    8. '               ' → logprob: -13.062007904052734
    9. ')' → logprob: -13.937007904052734
    10. '<|end|>' → logprob: -14.687007904052734

Token 1098: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519477307796478
    2. 'and' → logprob: -1.5019477605819702
    3. '	and' → logprob: -12.001947402954102
    4. '           ' → logprob: -12.126947402954102
    5. '<|end|>' → logprob: -12.501947402954102
    6. '            ' → logprob: -13.751947402954102
    7. ' ' → logprob: -14.126947402954102
    8. '               ' → logprob: -15.001947402954102
    9. ':' → logprob: -15.251947402954102
    10. ':
' → logprob: -15.751947402954102

Token 1099: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06196846812963486
    2. ' h' → logprob: -2.8119685649871826
    3. '(h' → logprob: -14.061968803405762
    4. '	h' → logprob: -16.811967849731445
    5. '
' → logprob: -16.936967849731445
    6. '[h' → logprob: -18.311967849731445
    7. '```' → logprob: -18.311967849731445
    8. ' (' → logprob: -18.686967849731445
    9. ' ' → logprob: -19.436967849731445
    10. ',h' → logprob: -19.686967849731445

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '2' → logprob: -12.125008583068848
    3. '[' → logprob: -13.250008583068848
    4. 'h' → logprob: -13.875008583068848
    5. '```' → logprob: -15.750008583068848
    6. '
' → logprob: -17.00000762939453
    7. '[
' → logprob: -17.75000762939453
    8. '[h' → logprob: -18.75000762939453
    9. '(' → logprob: -18.81250762939453
    10. 'a' → logprob: -18.87500762939453

Token 1101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2233183042553719e-05
    2. '1' → logprob: -11.750012397766113
    3. 'and' → logprob: -13.000012397766113
    4. '==' → logprob: -14.375012397766113
    5. '```' → logprob: -15.000012397766113
    6. '(' → logprob: -15.250012397766113
    7. ',' → logprob: -15.375012397766113
    8. '[
' → logprob: -15.875012397766113
    9. '<|end|>' → logprob: -16.000011444091797
    10. '
' → logprob: -16.000011444091797

Token 1102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.750004768371582
    3. '0' → logprob: -13.750004768371582
    4. '
' → logprob: -15.000004768371582
    5. '   ' → logprob: -16.875003814697266
    6. '2' → logprob: -16.875003814697266
    7. '```' → logprob: -17.375003814697266
    8. '(' → logprob: -18.812503814697266
    9. ' ' → logprob: -18.937503814697266
    10. '
' → logprob: -19.062503814697266

Token 1103: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7531235218048096
    2. ']' → logprob: -1.7531235218048096
    3. ']==' → logprob: -1.8781235218048096
    4. '[' → logprob: -2.1281235218048096
    5. '==' → logprob: -2.5031235218048096
    6. '<|end|>' → logprob: -7.0031232833862305
    7. ')==' → logprob: -8.00312328338623
    8. ')' → logprob: -8.00312328338623
    9. ' ]' → logprob: -8.25312328338623
    10. '][' → logprob: -10.25312328338623

Token 1104: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1803015172481537
    2. '==' → logprob: -1.805301547050476
    3. '[' → logprob: -8.055301666259766
    4. '<|end|>' → logprob: -8.680301666259766
    5. ')==' → logprob: -10.305301666259766
    6. ']==' → logprob: -11.055301666259766
    7. '==
' → logprob: -11.555301666259766
    8. ')' → logprob: -12.805301666259766
    9. ' ==
' → logprob: -13.430301666259766
    10. '=' → logprob: -13.430301666259766

Token 1105: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.130576806142926e-05
    2. ' h' → logprob: -10.375031471252441
    3. '
' → logprob: -16.750030517578125
    4. '```' → logprob: -19.125030517578125
    5. '	h' → logprob: -19.250030517578125
    6. '
' → logprob: -20.250030517578125
    7. '[h' → logprob: -20.375030517578125
    8. '   ' → logprob: -20.625030517578125
    9. '`' → logprob: -20.625030517578125
    10. '2' → logprob: -20.875030517578125

Token 1106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.625000953674316
    3. 'h' → logprob: -15.375000953674316
    4. '[' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '২' → logprob: -19.250001907348633
    7. '
' → logprob: -19.375001907348633
    8. '۲' → logprob: -19.750001907348633
    9. '``' → logprob: -20.062501907348633
    10. '[
' → logprob: -20.125001907348633

Token 1107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.375005722045898
    3. '.' → logprob: -14.500005722045898
    4. '```' → logprob: -15.625005722045898
    5. '[
' → logprob: -16.2500057220459
    6. 'and' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.5000057220459
    8. ' [' → logprob: -17.1250057220459
    9. '(' → logprob: -17.2500057220459
    10. ':' → logprob: -17.5000057220459

Token 1108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -13.25000286102295
    3. '0' → logprob: -14.87500286102295
    4. '[' → logprob: -15.12500286102295
    5. '2' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.125003814697266
    7. ' ' → logprob: -16.125003814697266
    8. 'h' → logprob: -16.750003814697266
    9. '```' → logprob: -16.875003814697266
    10. '

' → logprob: -17.500003814697266

Token 1109: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.742678165435791
    2. ':' → logprob: -0.992678165435791
    3. ':
' → logprob: -2.617678165435791
    4. '<|end|>' → logprob: -3.492678165435791
    5. '               ' → logprob: -4.242678165435791
    6. 'and' → logprob: -4.242678165435791
    7. '           ' → logprob: -4.742678165435791
    8. '):
' → logprob: -5.367678165435791
    9. ')' → logprob: -5.992678165435791
    10. '):' → logprob: -6.117678165435791

Token 1110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014396385522559285
    2. '           ' → logprob: -6.626439571380615
    3. '	           ' → logprob: -9.626440048217773
    4. '                   ' → logprob: -10.876440048217773
    5. '   ' → logprob: -11.626440048217773
    6. '		       ' → logprob: -12.251440048217773
    7. '	       ' → logprob: -12.376440048217773
    8. '			' → logprob: -13.001440048217773
    9. '       ' → logprob: -13.126440048217773
    10. ' low' → logprob: -13.251440048217773

Token 1111: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.005427984986454248
    2. ' low' → logprob: -5.255427837371826
    3. '               ' → logprob: -8.630428314208984
    4. '           ' → logprob: -11.755428314208984
    5. '(low' → logprob: -12.755428314208984
    6. '                   ' → logprob: -13.380428314208984
    7. '   ' → logprob: -13.880428314208984
    8. 'lowest' → logprob: -14.380428314208984
    9. '.low' → logprob: -14.755428314208984
    10. ' ' → logprob: -15.130428314208984

Token 1112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929982289671898
    2. '=' → logprob: -5.130929946899414
    3. ' +=' → logprob: -13.630929946899414
    4. ' ' → logprob: -15.630929946899414
    5. ' =
' → logprob: -17.005929946899414
    6. '+=' → logprob: -17.380929946899414
    7. '＝' → logprob: -19.505929946899414
    8. '<|end|>' → logprob: -19.505929946899414
    9. ' =)' → logprob: -19.880929946899414
    10. '=
' → logprob: -20.005929946899414

Token 1113: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014164687134325504
    2. ' mid' → logprob: -4.264164924621582
    3. '(mid' → logprob: -13.764164924621582
    4. '[mid' → logprob: -16.014163970947266
    5. '_mid' → logprob: -19.389163970947266
    6. ' ' → logprob: -19.764163970947266
    7. '
' → logprob: -20.264163970947266
    8. ' midpoint' → logprob: -20.514163970947266
    9. ' ' → logprob: -20.764163970947266
    10. 'middle' → logprob: -21.264163970947266

Token 1114: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10036604106426239
    2. ' +' → logprob: -2.3503661155700684
    3. '1' → logprob: -9.60036563873291
    4. '+
' → logprob: -10.47536563873291
    5. '
' → logprob: -10.85036563873291
    6. '<|end|>' → logprob: -11.47536563873291
    7. '<|end|>' → logprob: -11.60036563873291
    8. ' ' → logprob: -12.10036563873291
    9. ' +
' → logprob: -12.60036563873291
    10. ' plus' → logprob: -13.10036563873291

Token 1115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.75
    4. '<|end|>' → logprob: -21.75
    5. '   ' → logprob: -21.875
    6. '۱' → logprob: -22.6875
    7. '``' → logprob: -22.75
    8. '0' → logprob: -23.125
    9. '১' → logprob: -23.5
    10. '
' → logprob: -23.5

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.125
    4. '<|end|>' → logprob: -21.25
    5. '
' → logprob: -22.375
    6. 'token' → logprob: -23.0
    7. '   ' → logprob: -23.125
    8. '۱' → logprob: -24.125
    9. '``' → logprob: -24.375
    10. '0' → logprob: -24.5

Token 1117: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23031149804592133
    2. 'else' → logprob: -1.6053115129470825
    3. ' else' → logprob: -5.480311393737793
    4. '		' → logprob: -7.730311393737793
    5. '<|end|>' → logprob: -8.730311393737793
    6. '```' → logprob: -10.105311393737793
    7. '
' → logprob: -11.105311393737793
    8. '	else' → logprob: -11.230311393737793
    9. '	       ' → logprob: -11.855311393737793
    10. '\
' → logprob: -11.980311393737793

Token 1118: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1294255256652832
    2. '           ' → logprob: -2.254425525665283
    3. ' else' → logprob: -4.254425525665283
    4. '		' → logprob: -7.254425525665283
    5. '<|end|>' → logprob: -7.379425525665283
    6. 'high' → logprob: -7.879425525665283
    7. '```' → logprob: -9.129425048828125
    8. '	else' → logprob: -9.254425048828125
    9. '       ' → logprob: -9.254425048828125
    10. '(high' → logprob: -9.754425048828125

Token 1119: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01283134613186121
    2. ' else' → logprob: -4.387831211090088
    3. '       ' → logprob: -8.137831687927246
    4. '           ' → logprob: -11.012831687927246
    5. 'high' → logprob: -12.387831687927246
    6. '	else' → logprob: -12.512831687927246
    7. '<|end|>' → logprob: -13.387831687927246
    8. '```' → logprob: -13.762831687927246
    9. ' high' → logprob: -14.262831687927246
    10. '#else' → logprob: -14.762831687927246

Token 1120: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1067931205034256
    2. 'high' → logprob: -2.481793165206909
    3. ' high' → logprob: -4.10679292678833
    4. '(high' → logprob: -7.98179292678833
    5. '			' → logprob: -8.606793403625488
    6. '           ' → logprob: -8.606793403625488
    7. '	           ' → logprob: -8.981793403625488
    8. '.high' → logprob: -9.606793403625488
    9. '		       ' → logprob: -9.856793403625488
    10. '_high' → logprob: -9.981793403625488

Token 1121: '               ' (ID: 506)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.08170466870069504
    2. '               ' → logprob: -2.581704616546631
    3. ' high' → logprob: -5.956704616546631
    4. '           ' → logprob: -9.831705093383789
    5. '(high' → logprob: -9.831705093383789
    6. '       ' → logprob: -9.956705093383789
    7. '   ' → logprob: -10.706705093383789
    8. '```' → logprob: -10.956705093383789
    9. '.high' → logprob: -11.581705093383789
    10. '_high' → logprob: -12.206705093383789

Token 1122: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -9.615255839889869e-05
    2. ' high' → logprob: -9.250096321105957
    3. '高' → logprob: -18.62509536743164
    4. '_high' → logprob: -18.87509536743164
    5. 'High' → logprob: -19.00009536743164
    6. '
' → logprob: -19.00009536743164
    7. '   ' → logprob: -19.00009536743164
    8. '           ' → logprob: -19.25009536743164
    9. '.high' → logprob: -19.75009536743164
    10. '               ' → logprob: -20.62509536743164

Token 1123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939416885376
    2. ' =' → logprob: -0.825939416885376
    3. '=
' → logprob: -18.075939178466797
    4. ' =
' → logprob: -18.200939178466797
    5. '＝' → logprob: -18.200939178466797
    6. ' ' → logprob: -20.825939178466797
    7. '=end' → logprob: -21.825939178466797
    8. '=cut' → logprob: -21.950939178466797
    9. '.=' → logprob: -22.200939178466797
    10. '=

' → logprob: -22.450939178466797

Token 1124: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -3.547789674485102e-05
    2. ' mid' → logprob: -10.250035285949707
    3. '[mid' → logprob: -21.500036239624023
    4. '_mid' → logprob: -22.750036239624023
    5. '(mid' → logprob: -23.125036239624023
    6. 'middle' → logprob: -23.750036239624023
    7. 'mi' → logprob: -24.125036239624023
    8. 'm' → logprob: -25.625036239624023
    9. 'midd' → logprob: -25.750036239624023
    10. '
' → logprob: -25.875036239624023

Token 1125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02481604367494583
    2. '<|end|>' → logprob: -3.7748160362243652
    3. '   ' → logprob: -7.899816036224365
    4. ' return' → logprob: -8.274816513061523
    5. '<|end|>' → logprob: -8.399816513061523
    6. '	return' → logprob: -8.524816513061523
    7. ')' → logprob: -8.649816513061523
    8. '	' → logprob: -9.024816513061523
    9. 'return' → logprob: -9.274816513061523
    10. '```' → logprob: -10.399816513061523

Token 1127: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03835197538137436
    2. ' return' → logprob: -3.7883520126342773
    3. 'return' (adapté à ' return') → logprob: -5.038352012634277
    4. '   ' → logprob: -5.663352012634277
    5. '	return' → logprob: -5.663352012634277
    6. '<|end|>' → logprob: -6.913352012634277
    7. '	' → logprob: -8.913352012634277
    8. ' if' → logprob: -9.038352012634277
    9. '	   ' → logprob: -9.788352012634277
    10. ')' → logprob: -10.163352012634277

Token 1128: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -2.165027217415627e-05
    2. ' low' → logprob: -10.750021934509277
    3. '(low' → logprob: -15.875021934509277
    4. ' ' → logprob: -19.00002098083496
    5. 'lo' → logprob: -19.62502098083496
    6. '0' → logprob: -19.75002098083496
    7. 'high' → logprob: -20.12502098083496
    8. '.low' → logprob: -20.25002098083496
    9. '_low' → logprob: -20.37502098083496
    10. ' ' → logprob: -20.50002098083496

Token 1129: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03135291114449501
    2. '<|end|>' → logprob: -3.531352996826172
    3. 'for' → logprob: -7.281352996826172
    4. 'if' → logprob: -7.531352996826172
    5. 'while' → logprob: -9.656352996826172
    6. '#' → logprob: -9.781352996826172
    7. '<|end|>' → logprob: -10.031352996826172
    8. '
' → logprob: -10.156352996826172
    9. '...' → logprob: -10.406352996826172
    10. ' for' → logprob: -10.406352996826172

Token 1131: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100768029689789
    2. 'for' (adapté à ' for') → logprob: -1.4350768327713013
    3. 'while' → logprob: -4.060076713562012
    4. 'if' → logprob: -4.685076713562012
    5. ' for' → logprob: -6.685076713562012
    6. '<|end|>' → logprob: -8.185076713562012
    7. '#' → logprob: -8.935076713562012
    8. ' while' → logprob: -9.685076713562012
    9. ')' → logprob: -10.060076713562012
    10. '    
' → logprob: -10.060076713562012

Token 1132: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029760440811514854
    2. ' _' → logprob: -3.5297603607177734
    3. '_i' → logprob: -12.529760360717773
    4. '_line' → logprob: -12.654760360717773
    5. ' line' → logprob: -14.279760360717773
    6. ' in' → logprob: -14.404760360717773
    7. ' ' → logprob: -14.904760360717773
    8. '_=' → logprob: -14.904760360717773
    9. '_in' → logprob: -15.154760360717773
    10. '_I' → logprob: -16.154760360717773

Token 1133: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28226399421691895
    2. ' in' → logprob: -1.407263994216919
    3. 'n' → logprob: -7.78226375579834
    4. ' ' → logprob: -8.15726375579834
    5. 'i' → logprob: -8.40726375579834
    6. ',' → logprob: -9.28226375579834
    7. '  ' → logprob: -11.03226375579834
    8. ' i' → logprob: -11.28226375579834
    9. 'line' → logprob: -11.65726375579834
    10. 's' → logprob: -11.90726375579834

Token 1134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001981333363801241
    2. ' range' → logprob: -6.251981258392334
    3. 'input' → logprob: -9.876981735229492
    4. 'in' → logprob: -14.126981735229492
    5. 'Q' → logprob: -14.751981735229492
    6. '(range' → logprob: -16.626981735229492
    7. 'list' → logprob: -16.876981735229492
    8. 'sys' → logprob: -17.126981735229492
    9. 'read' → logprob: -17.501981735229492
    10. 'user' → logprob: -17.501981735229492

Token 1135: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.811348480870947e-05
    2. '(int' → logprob: -10.50004768371582
    3. 'Q' → logprob: -11.00004768371582
    4. '(' → logprob: -12.50004768371582
    5. ' (' → logprob: -16.00004768371582
    6. ' Q' → logprob: -17.87504768371582
    7. '(q' → logprob: -18.00004768371582
    8. '()' → logprob: -19.37504768371582
    9. '(N' → logprob: -19.62504768371582
    10. 'int' → logprob: -20.00004768371582

Token 1136: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6132885813713074
    2. '():' → logprob: -1.4882886409759521
    3. '):' → logprob: -2.488288640975952
    4. '):
' → logprob: -2.738288640975952
    5. ',' → logprob: -3.238288640975952
    6. ':' → logprob: -3.488288640975952
    7. ':
' → logprob: -5.363288402557373
    8. '()' → logprob: -5.488288402557373
    9. '   ' → logprob: -6.113288402557373
    10. '()):
' → logprob: -6.488288402557373

Token 1137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42015624046325684
    2. ' line' → logprob: -1.7951562404632568
    3. 'tokens' → logprob: -2.670156240463257
    4. '```' → logprob: -3.170156240463257
    5. '       ' → logprob: -3.920156240463257
    6. ' parts' → logprob: -4.420156478881836
    7. 't' → logprob: -4.920156478881836
    8. '	line' → logprob: -5.295156478881836
    9. ' tokens' → logprob: -5.420156478881836
    10. 'line' → logprob: -5.670156478881836

Token 1138: ' line' (ID: 2543)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.5546490550041199
    2. 'line' (adapté à ' line') → logprob: -1.5546491146087646
    3. 'query' → logprob: -2.5546491146087646
    4. 'tmp' → logprob: -2.9296491146087646
    5. 't' → logprob: -3.1796491146087646
    6. '   ' → logprob: -4.0546488761901855
    7. 'args' → logprob: -5.0546488761901855
    8. 'l' → logprob: -5.5546488761901855
    9. 'q' → logprob: -5.5546488761901855
    10. 'lst' → logprob: -5.5546488761901855

Token 1139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20148038864135742
    2. '=' → logprob: -1.7014803886413574
    3. '=line' → logprob: -9.701480865478516
    4. 'tokens' → logprob: -13.326480865478516
    5. '=input' → logprob: -13.701480865478516
    6. 's' → logprob: -13.701480865478516
    7. '_' → logprob: -15.076480865478516
    8. '_tokens' → logprob: -15.076480865478516
    9. '	' → logprob: -15.576480865478516
    10. '_=' → logprob: -15.576480865478516

Token 1140: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007099286303855479
    2. ' input' → logprob: -7.2507100105285645
    3. 'list' → logprob: -20.625709533691406
    4. '=input' → logprob: -22.875709533691406
    5. '	input' → logprob: -23.250709533691406
    6. '(input' → logprob: -23.500709533691406
    7. '<input' → logprob: -24.250709533691406
    8. '_input' → logprob: -24.250709533691406
    9. 'inp' → logprob: -24.250709533691406
    10. 'Input' → logprob: -24.250709533691406

Token 1141: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025869545061141253
    2. '()' → logprob: -6.002586841583252
    3. '()
' → logprob: -9.12758731842041
    4. '()).' → logprob: -14.37758731842041
    5. '()
' → logprob: -14.75258731842041
    6. '(' → logprob: -14.87758731842041
    7. '.strip' → logprob: -15.62758731842041
    8. '.split' → logprob: -15.62758731842041
    9. ' ().' → logprob: -15.75258731842041
    10. '()\' → logprob: -15.75258731842041

Token 1142: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4794480800628662
    2. 'split' → logprob: -0.9794480800628662
    3. 'rstrip' → logprob: -5.229448318481445
    4. ' strip' → logprob: -16.979448318481445
    5. '(split' → logprob: -17.104448318481445
    6. ' split' → logprob: -17.604448318481445
    7. 'spl' → logprob: -17.604448318481445
    8. 's' → logprob: -17.854448318481445
    9. '(strip' → logprob: -17.854448318481445
    10. 'rs' → logprob: -18.354448318481445

Token 1143: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07457460463047028
    2. '<|end|>' → logprob: -3.0745747089385986
    3. '()
' → logprob: -4.3245744705200195
    4. '       ' → logprob: -5.0745744705200195
    5. '
' → logprob: -6.9495744705200195
    6. '[' → logprob: -6.9495744705200195
    7. '<|end|>' → logprob: -7.0745744705200195
    8. '        
' → logprob: -7.0745744705200195
    9. '(' → logprob: -7.8245744705200195
    10. '()[' → logprob: -8.19957447052002

Token 1144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5408304333686829
    2. ' if' → logprob: -0.9158304333686829
    3. 'if' → logprob: -4.290830612182617
    4. '	if' → logprob: -6.790830612182617
    5. '	' → logprob: -7.290830612182617
    6. '```' → logprob: -7.290830612182617
    7. 't' → logprob: -8.165830612182617
    8. '   ' → logprob: -8.290830612182617
    9. '<|end|>' → logprob: -8.790830612182617
    10. ' ' → logprob: -9.040830612182617

Token 1145: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39954787492752075
    2. 'if' (adapté à ' if') → logprob: -1.149547815322876
    3. 'type' → logprob: -5.024548053741455
    4. 'op' → logprob: -5.899548053741455
    5. 'cmd' → logprob: -6.274548053741455
    6. '       ' → logprob: -7.274548053741455
    7. ' if' → logprob: -8.274547576904297
    8. ' t' → logprob: -9.024547576904297
    9. 'typ' → logprob: -9.274547576904297
    10. '   ' → logprob: -9.774547576904297

Token 1146: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015046248445287347
    2. ' line' → logprob: -6.501504421234131
    3. 'len' → logprob: -13.001504898071289
    4. '[line' → logprob: -18.37650489807129
    5. '(line' → logprob: -18.50150489807129
    6. '=line' → logprob: -19.50150489807129
    7. '	line' → logprob: -19.62650489807129
    8. '#line' → logprob: -19.62650489807129
    9. '   ' → logprob: -20.12650489807129
    10. ' ' → logprob: -21.00150489807129

Token 1147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '==' → logprob: -12.000009536743164
    3. '[
' → logprob: -13.500009536743164
    4. '=' → logprob: -14.000009536743164
    5. '```' → logprob: -14.750009536743164
    6. '0' → logprob: -15.000009536743164
    7. 'and' → logprob: -15.125009536743164
    8. '   ' → logprob: -16.625009536743164
    9. ' and' → logprob: -17.125009536743164
    10. '\[' → logprob: -17.250009536743164

Token 1148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '1' → logprob: -16.500001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '=' → logprob: -19.500001907348633
    7. '۰' → logprob: -20.000001907348633
    8. ']' → logprob: -20.375001907348633
    9. '#' → logprob: -20.375001907348633
    10. '2' → logprob: -20.375001907348633

Token 1149: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6348950862884521
    2. ' ==' → logprob: -0.7598950862884521
    3. '[' → logprob: -6.884895324707031
    4. '=='' → logprob: -6.884895324707031
    5. '=' → logprob: -9.634895324707031
    6. '=="' → logprob: -9.759895324707031
    7. '==
' → logprob: -10.259895324707031
    8. ' =='' → logprob: -10.384895324707031
    9. ']==' → logprob: -10.884895324707031
    10. '===' → logprob: -11.134895324707031

Token 1150: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05772346630692482
    2. ' ==' → logprob: -3.0577235221862793
    3. '[' → logprob: -5.682723522186279
    4. '=='' → logprob: -5.807723522186279
    5. '=' → logprob: -6.182723522186279
    6. '=="' → logprob: -7.932723522186279
    7. '===' → logprob: -9.307723045349121
    8. '==
' → logprob: -9.557723045349121
    9. ' =' → logprob: -10.057723045349121
    10. ''' → logprob: -11.432723045349121

Token 1151: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.2962409555912018
    2. ''' → logprob: -1.5462409257888794
    3. ''u' → logprob: -3.546241044998169
    4. ''A' → logprob: -4.79624080657959
    5. ''I' → logprob: -5.79624080657959
    6. ''C' → logprob: -7.04624080657959
    7. '"' → logprob: -7.29624080657959
    8. ''a' → logprob: -7.67124080657959
    9. ''O' → logprob: -7.79624080657959
    10. ''S' → logprob: -8.04624080657959

Token 1152: 'set' (ID: 977)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3653973639011383
    2. '1' → logprob: -1.490397334098816
    3. '"' → logprob: -3.4903974533081055
    4. 'update' → logprob: -3.4903974533081055
    5. 'Q' → logprob: -5.2403974533081055
    6. ''U' → logprob: -5.4903974533081055
    7. 'replace' → logprob: -5.9903974533081055
    8. ''C' → logprob: -6.3653974533081055
    9. 'u' → logprob: -6.8653974533081055
    10. 'U' → logprob: -7.1153974533081055

Token 1153: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.35060441493988037
    2. '':
' → logprob: -1.2256044149398804
    3. ''' → logprob: -6.22560453414917
    4. '':
' → logprob: -9.350604057312012
    5. ' '' → logprob: -10.225604057312012
    6. '__':
' → logprob: -11.600604057312012
    7. ''):
' → logprob: -11.850604057312012
    8. ' ':' → logprob: -11.975604057312012
    9. '':

' → logprob: -12.475604057312012
    10. '':'' → logprob: -12.850604057312012

Token 1154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05574765056371689
    2. '       ' → logprob: -3.6807477474212646
    3. ' ' → logprob: -4.6807475090026855
    4. ',' → logprob: -5.0557475090026855
    5. '```' → logprob: -6.0557475090026855
    6. '        ' → logprob: -6.4307475090026855
    7. '(' → logprob: -6.6807475090026855
    8. '[' → logprob: -7.0557475090026855
    9. '	       ' → logprob: -7.1807475090026855
    10. '        
' → logprob: -7.1807475090026855

Token 1155: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.032645177096128464
    2. 'a' → logprob: -4.032645225524902
    3. '       ' → logprob: -5.157645225524902
    4. ' l' → logprob: -5.532645225524902
    5. '_,' → logprob: -5.657645225524902
    6. 'x' (adapté à ' x') → logprob: -8.157645225524902
    7. 'idx' → logprob: -8.282645225524902
    8. 'L' → logprob: -8.407645225524902
    9. 'st' → logprob: -9.157645225524902
    10. ' st' → logprob: -9.657645225524902

Token 1156: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39593496918678284
    2. ',' → logprob: -1.7709349393844604
    3. '=' → logprob: -2.39593505859375
    4. ' ,' → logprob: -3.52093505859375
    5. '[' → logprob: -4.02093505859375
    6. '_' → logprob: -5.27093505859375
    7. '=int' → logprob: -5.39593505859375
    8. '_idx' → logprob: -5.77093505859375
    9. '_index' → logprob: -7.02093505859375
    10. '[int' → logprob: -7.14593505859375

Token 1157: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010898546315729618
    2. ' y' → logprob: -6.876090049743652
    3. 'l' → logprob: -10.001090049743652
    4. 'int' → logprob: -11.376090049743652
    5. 'x' → logprob: -16.876089096069336
    6. ' l' → logprob: -17.126089096069336
    7. 'length' → logprob: -17.126089096069336
    8. '=int' → logprob: -18.126089096069336
    9. ' int' → logprob: -18.626089096069336
    10. 'd' → logprob: -18.751089096069336

Token 1158: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4952510595321655
    2. '=' → logprob: -1.1202510595321655
    3. ',' → logprob: -2.745251178741455
    4. ' ,' → logprob: -9.120250701904297
    5. '=int' → logprob: -10.495250701904297
    6. ' ' → logprob: -11.870250701904297
    7. ',x' → logprob: -13.120250701904297
    8. '=line' → logprob: -13.995250701904297
    9. ',int' → logprob: -14.245250701904297
    10. ')' → logprob: -14.370250701904297

Token 1159: ' z' (ID: 579)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6973327994346619
    2. 'z' → logprob: -0.6973327994346619
    3. ' z' → logprob: -6.072332859039307
    4. ' c' → logprob: -6.322332859039307
    5. 'ch' → logprob: -10.447332382202148
    6. 'x' → logprob: -10.572332382202148
    7. ' ' → logprob: -12.197332382202148
    8. 'v' → logprob: -12.572332382202148
    9. 'line' → logprob: -12.572332382202148
    10. 's' → logprob: -13.197332382202148

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931602954864502
    2. ' =' → logprob: -0.6931602954864502
    3. '=int' → logprob: -11.443160057067871
    4. ' ' → logprob: -13.443160057067871
    5. ',' → logprob: -14.068160057067871
    6. '＝' → logprob: -16.568161010742188
    7. 'x' → logprob: -17.068161010742188
    8. ' ' → logprob: -17.443161010742188
    9. 'int' → logprob: -17.443161010742188
    10. '   ' → logprob: -17.568161010742188

Token 1161: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010402000043541193
    2. 'map' → logprob: -9.750103950500488
    3. ' int' → logprob: -10.000103950500488
    4. ' map' → logprob: -15.500103950500488
    5. '[int' → logprob: -17.875104904174805
    6. '(int' → logprob: -18.625104904174805
    7. '   ' → logprob: -19.125104904174805
    8. '	int' → logprob: -20.750104904174805
    9. ' ' → logprob: -21.500104904174805
    10. '
' → logprob: -21.625104904174805

Token 1162: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.0802738870552275e-05
    2. 'line' → logprob: -11.50001049041748
    3. '(' → logprob: -15.25001049041748
    4. '[line' → logprob: -15.62501049041748
    5. '=line' → logprob: -16.625011444091797
    6. '#line' → logprob: -16.625011444091797
    7. ' line' → logprob: -17.125011444091797
    8. ',line' → logprob: -17.875011444091797
    9. '(
' → logprob: -20.000011444091797
    10. '	line' → logprob: -20.375011444091797

Token 1163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.750000953674316
    3. '[
' → logprob: -16.625001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '(' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '2' → logprob: -18.250001907348633
    8. ')' → logprob: -19.375001907348633
    9. '()[' → logprob: -19.750001907348633
    10. '\[' → logprob: -19.875001907348633

Token 1164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.125
    3. '   ' → logprob: -17.125
    4. ' ' → logprob: -17.625
    5. '[' → logprob: -18.25
    6. '2' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. ')' → logprob: -19.5
    9. '``' → logprob: -19.75
    10. ']' → logprob: -20.375

Token 1165: '])-' (ID: 160447)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002609663875773549
    2. ')' → logprob: -6.752609729766846
    3. ']),' → logprob: -7.127609729766846
    4. '],' → logprob: -8.252609252929688
    5. ')],' → logprob: -8.377609252929688
    6. ' ),' → logprob: -9.252609252929688
    7. ')-' → logprob: -11.377609252929688
    8. '[' → logprob: -11.502609252929688
    9. '-' → logprob: -12.002609252929688
    10. ',' → logprob: -12.127609252929688

Token 1166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -16.125003814697266
    4. ',' → logprob: -16.375003814697266
    5. '```' → logprob: -19.000003814697266
    6. '
' → logprob: -19.500003814697266
    7. ' ,' → logprob: -19.625003814697266
    8. ')' → logprob: -19.875003814697266
    9. '<|end|>' → logprob: -20.875003814697266
    10. '...' → logprob: -21.500003814697266

Token 1167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005283919163048267
    2. ' ,' → logprob: -5.255283832550049
    3. ',
' → logprob: -10.880284309387207
    4. ',line' → logprob: -11.880284309387207
    5. ',y' → logprob: -12.255284309387207
    6. '<|end|>' → logprob: -12.880284309387207
    7. ',int' → logprob: -13.005284309387207
    8. '‌,' → logprob: -13.130284309387207
    9. ' ' → logprob: -13.255284309387207
    10. ')' → logprob: -13.630284309387207

Token 1168: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9743012671824545e-05
    2. ' int' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. '           ' → logprob: -15.125020027160645
    5. '  ' → logprob: -18.250019073486328
    6. '    ' → logprob: -18.250019073486328
    7. '       ' → logprob: -18.500019073486328
    8. '[int' → logprob: -18.750019073486328
    9. '	int' → logprob: -18.875019073486328
    10. '
' → logprob: -18.875019073486328

Token 1169: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6955732107162476
    2. '(line' → logprob: -0.6955732107162476
    3. '[line' → logprob: -6.570573329925537
    4. ' line' → logprob: -7.570573329925537
    5. '#line' → logprob: -7.945573329925537
    6. '=line' → logprob: -8.945572853088379
    7. '	line' → logprob: -11.570572853088379
    8. ',line' → logprob: -11.820572853088379
    9. '(
' → logprob: -13.570572853088379
    10. ')' → logprob: -13.820572853088379

Token 1170: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20143868029117584
    2. '2' → logprob: -1.7014386653900146
    3. ')' → logprob: -11.451438903808594
    4. '```' → logprob: -12.201438903808594
    5. '   ' → logprob: -12.826438903808594
    6. ' ' → logprob: -13.701438903808594
    7. ' [' → logprob: -14.076438903808594
    8. ']' → logprob: -14.201438903808594
    9. '           ' → logprob: -14.576438903808594
    10. '(' → logprob: -14.576438903808594

Token 1171: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.875012397766113
    3. '3' → logprob: -13.250012397766113
    4. '```' → logprob: -13.875012397766113
    5. '
' → logprob: -14.062512397766113
    6. '   ' → logprob: -14.562512397766113
    7. '``' → logprob: -15.437512397766113
    8. '1' → logprob: -15.687512397766113
    9. '

' → logprob: -16.000011444091797
    10. '[' → logprob: -16.375011444091797

Token 1172: '])-' (ID: 160447)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.001912457519210875
    2. ')' → logprob: -6.876912593841553
    3. ' )' → logprob: -8.126912117004395
    4. '-' → logprob: -8.376912117004395
    5. '),' → logprob: -8.751912117004395
    6. ']-' → logprob: -9.376912117004395
    7. '])-' → logprob: -9.751912117004395
    8. ' ' → logprob: -11.251912117004395
    9. '[' → logprob: -11.626912117004395
    10. ' -' → logprob: -11.751912117004395

Token 1173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. 'int' → logprob: -11.250015258789062
    3. ' ' → logprob: -13.875015258789062
    4. '0' → logprob: -14.750015258789062
    5. ',' → logprob: -15.000015258789062
    6. '
' → logprob: -15.875015258789062
    7. ' int' → logprob: -17.750015258789062
    8. ',int' → logprob: -18.375015258789062
    9. '=int' → logprob: -18.375015258789062
    10. '```' → logprob: -18.375015258789062

Token 1174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026903904508799314
    2. ' ,' → logprob: -6.127690315246582
    3. ',c' → logprob: -8.252690315246582
    4. '           ' → logprob: -8.502690315246582
    5. ',s' → logprob: -11.752690315246582
    6. ' c' → logprob: -12.502690315246582
    7. ',val' → logprob: -12.877690315246582
    8. ',
' → logprob: -13.002690315246582
    9. ',z' → logprob: -13.002690315246582
    10. ',x' → logprob: -13.252690315246582

Token 1175: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004306692280806601
    2. ' line' → logprob: -7.750430583953857
    3. 'str' → logprob: -18.625431060791016
    4. 'z' → logprob: -18.750431060791016
    5. 'lin' → logprob: -19.125431060791016
    6. '	line' → logprob: -19.125431060791016
    7. '
' → logprob: -19.500431060791016
    8. ' ' → logprob: -19.500431060791016
    9. '#line' → logprob: -19.750431060791016
    10. '(line' → logprob: -20.125431060791016

Token 1176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.636475493200123e-05
    2. '3' → logprob: -9.500076293945312
    3. '4' → logprob: -14.750076293945312
    4. '```' → logprob: -14.750076293945312
    5. '[
' → logprob: -15.250076293945312
    6. '2' → logprob: -16.125076293945312
    7. '6' → logprob: -16.875076293945312
    8. '(' → logprob: -16.875076293945312
    9. '1' → logprob: -17.125076293945312
    10. '`' → logprob: -17.250076293945312

Token 1177: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '[' → logprob: -18.000001907348633
    5. '```' → logprob: -19.375001907348633
    6. ']' → logprob: -20.500001907348633
    7. '۳' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '0' → logprob: -21.375001907348633
    10. '1' → logprob: -21.500001907348633

Token 1178: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6322821378707886
    2. ')' → logprob: -0.8822821378707886
    3. '           ' → logprob: -3.257282257080078
    4. '[' → logprob: -4.382282257080078
    5. '')' → logprob: -6.632282257080078
    6. ']' → logprob: -6.757282257080078
    7. '       ' → logprob: -8.007282257080078
    8. ']
' → logprob: -8.132282257080078
    9. '')
' → logprob: -8.507282257080078
    10. ')
' → logprob: -9.257282257080078

Token 1179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9862216504407115e-05
    2. '       ' → logprob: -11.500020027160645
    3. '
' → logprob: -12.125020027160645
    4. '   ' → logprob: -12.875020027160645
    5. 'st' → logprob: -14.375020027160645
    6. '               ' → logprob: -15.125020027160645
    7. '```' → logprob: -15.250020027160645
    8. '            
' → logprob: -15.750020027160645
    9. '          ' → logprob: -15.875020027160645
    10. '		' → logprob: -16.500019073486328

Token 1180: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -7.576873758807778e-05
    2. '           ' → logprob: -9.750075340270996
    3. '       ' → logprob: -11.000075340270996
    4. ' st' → logprob: -14.750075340270996
    5. '   ' → logprob: -14.875075340270996
    6. '```' → logprob: -17.125076293945312
    7. '	st' → logprob: -17.250076293945312
    8. '
' → logprob: -18.750076293945312
    9. '               ' → logprob: -19.875076293945312
    10. '         ' → logprob: -21.125076293945312

Token 1181: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -12.75000286102295
    3. 'update' → logprob: -17.750003814697266
    4. '`.' → logprob: -20.375003814697266
    5. ' .' → logprob: -21.125003814697266
    6. '.updated' → logprob: -21.375003814697266
    7. '.set' → logprob: -21.750003814697266
    8. '```' → logprob: -21.750003814697266
    9. '}.' → logprob: -22.000003814697266
    10. '.up' → logprob: -22.000003814697266

Token 1182: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'st' → logprob: -17.25
    4. '(St' → logprob: -18.375
    5. '	st' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. ' st' → logprob: -19.125
    8. '(
' → logprob: -19.125
    9. '(ST' → logprob: -19.25
    10. ' (' → logprob: -19.5

Token 1183: '.root' (ID: 25375)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.06238127127289772
    2. '.root' → logprob: -2.8123812675476074
    3. 'st' → logprob: -7.937381267547607
    4. '.st' → logprob: -10.187381744384766
    5. '(root' → logprob: -11.687381744384766
    6. '(st' → logprob: -12.437381744384766
    7. ' root' → logprob: -12.562381744384766
    8. ' st' → logprob: -13.187381744384766
    9. '```' → logprob: -15.437381744384766
    10. '	root' → logprob: -15.812381744384766

Token 1184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012826144229620695
    2. ',x' → logprob: -6.876282691955566
    3. 'st' → logprob: -8.876282691955566
    4. '(st' → logprob: -9.626282691955566
    5. ' st' → logprob: -10.626282691955566
    6. ' ,' → logprob: -11.126282691955566
    7. 'x' → logprob: -13.001282691955566
    8. ',s' → logprob: -13.751282691955566
    9. '(x' → logprob: -14.751282691955566
    10. '```' → logprob: -14.876282691955566

Token 1185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.375
    3. ')x' → logprob: -21.125
    4. '(x' → logprob: -21.5
    5. '	x' → logprob: -22.375
    6. '"x' → logprob: -23.375
    7. '{x' → logprob: -23.875
    8. '=x' → logprob: -24.5
    9. '0' → logprob: -24.875
    10. '>x' → logprob: -25.125

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008519167313352227
    2. ',y' → logprob: -7.125852108001709
    3. ' ,' → logprob: -10.00085163116455
    4. 'y' → logprob: -14.50085163116455
    5. ',
' → logprob: -14.62585163116455
    6. ',x' → logprob: -14.62585163116455
    7. '<|end|>' → logprob: -14.87585163116455
    8. ' y' → logprob: -16.500852584838867
    9. '‌,' → logprob: -16.875852584838867
    10. '```' → logprob: -17.750852584838867

Token 1187: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.611323624383658e-05
    2. ' y' → logprob: -9.625065803527832
    3. '	y' → logprob: -18.00006675720215
    4. ')y' → logprob: -19.25006675720215
    5. '‘y' → logprob: -20.12506675720215
    6. '\' → logprob: -20.50006675720215
    7. '*y' → logprob: -20.50006675720215
    8. ''y' → logprob: -20.75006675720215
    9. 'Y' → logprob: -21.75006675720215
    10. '(y' → logprob: -21.87506675720215

Token 1188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004113692557439208
    2. ',z' → logprob: -7.875411510467529
    3. ' ,' → logprob: -10.375411033630371
    4. ',
' → logprob: -17.125411987304688
    5. '```' → logprob: -17.875411987304688
    6. 'z' → logprob: -18.625411987304688
    7. '
' → logprob: -18.750411987304688
    8. ')' → logprob: -19.750411987304688
    9. '           ' → logprob: -20.000411987304688
    10. '   ' → logprob: -20.125411987304688

Token 1189: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.7848862373502925e-05
    2. ' z' → logprob: -10.500027656555176
    3. '           ' → logprob: -15.750027656555176
    4. '	z' → logprob: -17.625028610229492
    5. ''z' → logprob: -18.750028610229492
    6. '   ' → logprob: -19.375028610229492
    7. '
' → logprob: -20.875028610229492
    8. '          ' → logprob: -21.125028610229492
    9. '*z' → logprob: -21.750028610229492
    10. '       ' → logprob: -22.000028610229492

Token 1190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.583550642360933e-05
    2. ')
' → logprob: -10.250036239624023
    3. ' )' → logprob: -16.125036239624023
    4. '       ' → logprob: -16.500036239624023
    5. ')return' → logprob: -16.625036239624023
    6. '<|end|>' → logprob: -16.625036239624023
    7. '           ' → logprob: -16.875036239624023
    8. ')

' → logprob: -17.500036239624023
    9. '   ' → logprob: -17.875036239624023
    10. '),' → logprob: -18.000036239624023

Token 1191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06263457983732224
    2. '<|end|>' → logprob: -2.8126344680786133
    3. '<|end|>' → logprob: -8.437634468078613
    4. '```' → logprob: -8.562634468078613
    5. 'elif' → logprob: -8.812634468078613
    6. '   ' → logprob: -10.812634468078613
    7. '	' → logprob: -10.937634468078613
    8. 'continue' → logprob: -11.062634468078613
    9. '...' → logprob: -11.187634468078613
    10. 'else' → logprob: -11.562634468078613

Token 1192: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25316953659057617
    2. 'elif' → logprob: -1.5031695365905762
    3. ' elif' → logprob: -6.878169536590576
    4. 'else' (adapté à ' else') → logprob: -8.753170013427734
    5. '```' → logprob: -10.378170013427734
    6. '	elif' → logprob: -11.503170013427734
    7. '   ' → logprob: -12.503170013427734
    8. ' else' → logprob: -13.253170013427734
    9. '	' → logprob: -13.378170013427734
    10. '<|end|>' → logprob: -13.378170013427734

Token 1193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2173919677734375
    2. ' if' → logprob: -2.5923919677734375
    3. ':
' → logprob: -2.9673919677734375
    4. '       ' → logprob: -3.9673919677734375
    5. ' :' → logprob: -4.4673919677734375
    6. ' =' → logprob: -4.5923919677734375
    7. 'if' → logprob: -4.8423919677734375
    8. '        ' → logprob: -5.4673919677734375
    9. '{' → logprob: -5.4673919677734375
    10. '=' → logprob: -5.7173919677734375

Token 1194: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09520633518695831
    2. '       ' → logprob: -2.8452062606811523
    3. '           ' → logprob: -4.095206260681152
    4. ' x' → logprob: -4.345206260681152
    5. 'a' → logprob: -5.970206260681152
    6. '#' → logprob: -9.095206260681152
    7. '   ' → logprob: -10.220206260681152
    8. '```' → logprob: -10.220206260681152
    9. '        ' → logprob: -10.345206260681152
    10. ' a' → logprob: -10.470206260681152

Token 1195: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07467561215162277
    2. 'a' (adapté à ' a') → logprob: -2.6996755599975586
    3. '           ' → logprob: -5.824675559997559
    4. ' x' → logprob: -7.324675559997559
    5. 'u' → logprob: -7.824675559997559
    6. 'p' → logprob: -8.074675559997559
    7. 'l' → logprob: -8.449675559997559
    8. 'i' → logprob: -9.824675559997559
    9. ' a' → logprob: -10.074675559997559
    10. '       ' → logprob: -10.449675559997559

Token 1196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000318065780447796
    2. ' ,' → logprob: -8.25031852722168
    3. '=' → logprob: -10.12531852722168
    4. ' =' → logprob: -12.12531852722168
    5. ',b' → logprob: -12.75031852722168
    6. 'b' → logprob: -13.25031852722168
    7. ',a' → logprob: -13.50031852722168
    8. '<|end|>' → logprob: -13.62531852722168
    9. 'a' → logprob: -13.87531852722168
    10. ' ' → logprob: -14.00031852722168

Token 1197: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10021023452281952
    2. ' b' → logprob: -2.350210189819336
    3. 'a' → logprob: -13.100210189819336
    4. 'int' → logprob: -14.600210189819336
    5. '=' → logprob: -15.100210189819336
    6. '   ' → logprob: -15.725210189819336
    7. ',b' → logprob: -15.850210189819336
    8. ' =' → logprob: -15.975210189819336
    9. '	b' → logprob: -16.225210189819336
    10. ' a' → logprob: -16.350210189819336

Token 1198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003688197582960129
    2. '=' → logprob: -5.628688335418701
    3. ' ,' → logprob: -9.753687858581543
    4. ' =' → logprob: -10.753687858581543
    5. ',a' → logprob: -12.503687858581543
    6. ',c' → logprob: -13.628687858581543
    7. ',b' → logprob: -13.878687858581543
    8. '=int' → logprob: -14.003687858581543
    9. ',int' → logprob: -14.003687858581543
    10. 'a' → logprob: -14.378687858581543

Token 1199: ' c' (ID: 274)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05748838186264038
    2. ' int' → logprob: -3.557488441467285
    3. 'c' → logprob: -3.682488441467285
    4. ' c' → logprob: -6.307488441467285
    5. '=int' → logprob: -7.932488441467285
    6. '(int' → logprob: -12.807488441467285
    7. '[int' → logprob: -13.057488441467285
    8. ' =' → logprob: -13.307488441467285
    9. '   ' → logprob: -13.682488441467285
    10. ',int' → logprob: -13.807488441467285

Token 1200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015481874579563737
    2. '=' → logprob: -6.5015482902526855
    3. ' =' → logprob: -10.626547813415527
    4. ' ,' → logprob: -11.001547813415527
    5. ',c' → logprob: -12.751547813415527
    6. ',d' → logprob: -14.001547813415527
    7. ',int' → logprob: -15.376547813415527
    8. '<|end|>' → logprob: -16.126548767089844
    9. '=int' → logprob: -16.251548767089844
    10. ',x' → logprob: -16.376548767089844

Token 1201: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061970602720975876
    2. ' d' → logprob: -2.8119707107543945
    3. 'int' → logprob: -13.311970710754395
    4. 'c' → logprob: -13.811970710754395
    5. ' c' → logprob: -15.436970710754395
    6. ' int' → logprob: -15.811970710754395
    7. ' ' → logprob: -17.186969757080078
    8. '<|end|>' → logprob: -18.186969757080078
    9. '=int' → logprob: -18.561969757080078
    10. ',d' → logprob: -19.686969757080078

Token 1202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0042383125983178616
    2. ' =' → logprob: -5.504238128662109
    3. ',' → logprob: -8.75423812866211
    4. '=int' → logprob: -13.12923812866211
    5. ',int' → logprob: -17.00423812866211
    6. ' ,' → logprob: -17.50423812866211
    7. '＝' → logprob: -18.37923812866211
    8. 'a' → logprob: -18.62923812866211
    9. ' ' → logprob: -18.87923812866211
    10. '=line' → logprob: -19.12923812866211

Token 1203: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005533903022296727
    2. ' int' → logprob: -7.500553607940674
    3. '[int' → logprob: -15.250553131103516
    4. '   ' → logprob: -15.625553131103516
    5. '
' → logprob: -16.375553131103516
    6. '    ' → logprob: -17.250553131103516
    7. '	int' → logprob: -17.500553131103516
    8. '  ' → logprob: -18.625553131103516
    9. '(int' → logprob: -18.750553131103516
    10. '           ' → logprob: -18.750553131103516

Token 1204: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0024999137967824936
    2. 'line' → logprob: -6.002500057220459
    3. '[line' → logprob: -11.0024995803833
    4. ' line' → logprob: -12.3774995803833
    5. '(' → logprob: -13.3774995803833
    6. '=line' → logprob: -14.0024995803833
    7. '#line' → logprob: -14.3774995803833
    8. 'a' → logprob: -16.002500534057617
    9. '(
' → logprob: -16.127500534057617
    10. ',line' → logprob: -16.752500534057617

Token 1205: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31341812014579773
    2. '1' → logprob: -1.3134181499481201
    3. '3' → logprob: -9.0634183883667
    4. '2' → logprob: -11.0634183883667
    5. '   ' → logprob: -11.5634183883667
    6. '           ' → logprob: -12.6884183883667
    7. '(' → logprob: -12.6884183883667
    8. ' [' → logprob: -13.5634183883667
    9. ')' → logprob: -13.8134183883667
    10. '0' → logprob: -13.8134183883667

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. '3' → logprob: -14.750003814697266
    4. 'a' → logprob: -15.250003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '
' → logprob: -18.625003814697266
    8. '```' → logprob: -18.625003814697266
    9. '[a' → logprob: -19.000003814697266
    10. '2' → logprob: -19.500003814697266

Token 1207: '])-' (ID: 160447)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.0011275982251390815
    2. ')' → logprob: -7.12612771987915
    3. '),' → logprob: -8.126127243041992
    4. '-' → logprob: -11.626127243041992
    5. '   ' → logprob: -12.126127243041992
    6. ']-' → logprob: -13.251127243041992
    7. ')+' → logprob: -13.251127243041992
    8. ' )' → logprob: -13.376127243041992
    9. ' ' → logprob: -13.876127243041992
    10. '       ' → logprob: -13.876127243041992

Token 1208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.375008583068848
    3. ' ' → logprob: -12.750008583068848
    4. ',' → logprob: -13.500008583068848
    5. '<|end|>' → logprob: -14.625008583068848
    6. '
' → logprob: -17.250009536743164
    7. '```' → logprob: -17.250009536743164
    8. 'int' → logprob: -17.500009536743164
    9. ')' → logprob: -17.500009536743164
    10. ' ,' → logprob: -19.125009536743164

Token 1209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010083963861688972
    2. ',int' → logprob: -7.0010085105896
    3. ' ,' → logprob: -9.376008033752441
    4. 'int' → logprob: -12.376008033752441
    5. ',
' → logprob: -12.376008033752441
    6. ',c' → logprob: -13.376008033752441
    7. 'c' → logprob: -14.501008033752441
    8. 'd' → logprob: -14.751008033752441
    9. '<|end|>' → logprob: -15.001008033752441
    10. ',d' → logprob: -15.126008033752441

Token 1210: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. '(int' → logprob: -20.125123977661133
    4. '=int' → logprob: -20.375123977661133
    5. '[int' → logprob: -20.500123977661133
    6. '<int' → logprob: -21.125123977661133
    7. '   ' → logprob: -21.875123977661133
    8. ',int' → logprob: -22.250123977661133
    9. '	int' → logprob: -22.375123977661133
    10. '  ' → logprob: -22.500123977661133

Token 1211: '(line' (ID: 18178)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11609366536140442
    2. 'line' → logprob: -2.241093635559082
    3. '(line' → logprob: -6.116093635559082
    4. ' int' → logprob: -7.991093635559082
    5. '[line' → logprob: -8.116093635559082
    6. ' line' → logprob: -8.991093635559082
    7. 'b' → logprob: -9.241093635559082
    8. '[int' → logprob: -9.741093635559082
    9. '<int' → logprob: -10.366093635559082
    10. 'c' → logprob: -10.491093635559082

Token 1212: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015249757561832666
    2. '[' → logprob: -7.001524925231934
    3. '3' → logprob: -7.626524925231934
    4. '4' → logprob: -9.001524925231934
    5. '   ' → logprob: -13.876524925231934
    6. ' ' → logprob: -14.001524925231934
    7. '```' → logprob: -14.876524925231934
    8. 'c' → logprob: -15.251524925231934
    9. '1' → logprob: -16.87652587890625
    10. '[c' → logprob: -17.12652587890625

Token 1213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -17.875
    3. '4' → logprob: -18.375
    4. '```' → logprob: -18.875
    5. '[' → logprob: -19.0
    6. '۲' → logprob: -19.25
    7. '
' → logprob: -19.625
    8. '1' → logprob: -19.75
    9. '２' → logprob: -19.75
    10. ' ' → logprob: -19.75

Token 1214: '])-' (ID: 160447)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.11956338584423065
    2. ']-' → logprob: -2.744563341140747
    3. ')+' → logprob: -4.369563579559326
    4. '),' → logprob: -4.494563579559326
    5. '+' → logprob: -5.244563579559326
    6. ']+' → logprob: -5.244563579559326
    7. '[' → logprob: -5.744563579559326
    8. ')' → logprob: -5.744563579559326
    9. '])-' → logprob: -5.994563579559326
    10. '-' → logprob: -6.369563579559326

Token 1215: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.710618905955926e-05
    2. ' int' → logprob: -9.250097274780273
    3. 'c' → logprob: -14.875097274780273
    4. '[int' → logprob: -15.250097274780273
    5. ',int' → logprob: -16.250097274780273
    6. ',' → logprob: -16.250097274780273
    7. '(int' → logprob: -16.750097274780273
    8. '1' → logprob: -16.875097274780273
    9. '<int' → logprob: -17.000097274780273
    10. '=int' → logprob: -18.125097274780273

Token 1216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002918446552939713
    2. ' ,' → logprob: -8.50029182434082
    3. ',int' → logprob: -9.37529182434082
    4. 'int' → logprob: -13.62529182434082
    5. ',c' → logprob: -14.50029182434082
    6. ',
' → logprob: -14.50029182434082
    7. '           ' → logprob: -14.62529182434082
    8. '   ' → logprob: -15.00029182434082
    9. ' ' → logprob: -16.25029182434082
    10. '       ' → logprob: -16.50029182434082

Token 1217: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014163747429847717
    2. ' int' → logprob: -4.264163970947266
    3. '	int' → logprob: -16.889163970947266
    4. '(int' → logprob: -17.014163970947266
    5. '<int' → logprob: -17.139163970947266
    6. '[int' → logprob: -17.389163970947266
    7. '=int' → logprob: -18.639163970947266
    8. ',int' → logprob: -18.764163970947266
    9. ']int' → logprob: -20.139163970947266
    10. '   ' → logprob: -20.264163970947266

Token 1218: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005444537382572889
    2. 'int' → logprob: -8.000544548034668
    3. '[line' → logprob: -8.625544548034668
    4. 'line' → logprob: -10.500544548034668
    5. '(int' → logprob: -14.000544548034668
    6. '3' → logprob: -14.500544548034668
    7. '=line' → logprob: -14.875544548034668
    8. '4' → logprob: -16.12554359436035
    9. ' line' → logprob: -16.87554359436035
    10. ',line' → logprob: -17.00054359436035

Token 1219: '[' (ID: 58)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16077615320682526
    2. '[' → logprob: -1.910776138305664
    3. '4' → logprob: -7.535776138305664
    4. '1' → logprob: -11.285776138305664
    5. '5' → logprob: -12.910776138305664
    6. '   ' → logprob: -13.285776138305664
    7. '           ' → logprob: -14.535776138305664
    8. '
' → logprob: -14.660776138305664
    9. '```' → logprob: -16.160776138305664
    10. 'c' → logprob: -16.410776138305664

Token 1220: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.961759259458631e-06
    2. '4' → logprob: -12.375004768371582
    3. '2' → logprob: -15.250004768371582
    4. '[' → logprob: -15.250004768371582
    5. ' ' → logprob: -15.875004768371582
    6. '```' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.0000057220459
    8. 'c' → logprob: -17.3750057220459
    9. '-' → logprob: -17.8750057220459
    10. ']' → logprob: -18.3750057220459

Token 1221: '])-' (ID: 160447)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.040250591933727264
    2. ']-' → logprob: -3.665250539779663
    3. '])-' → logprob: -4.540250778198242
    4. '),' → logprob: -7.165250778198242
    5. '-' → logprob: -7.540250778198242
    6. ')' → logprob: -8.040250778198242
    7. '   ' → logprob: -8.165250778198242
    8. ',' → logprob: -8.415250778198242
    9. '0' → logprob: -8.665250778198242
    10. '+' → logprob: -8.790250778198242

Token 1222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'int' → logprob: -13.375003814697266
    4. ' int' → logprob: -17.000003814697266
    5. ',' → logprob: -18.125003814697266
    6. '0' → logprob: -19.000003814697266
    7. '```' → logprob: -19.375003814697266
    8. '[int' → logprob: -19.750003814697266
    9. '   ' → logprob: -20.125003814697266
    10. '3' → logprob: -21.000003814697266

Token 1223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.579495235811919e-05
    2. ' ,' → logprob: -9.62509536743164
    3. ',d' → logprob: -11.00009536743164
    4. ',c' → logprob: -11.62509536743164
    5. 'd' → logprob: -13.50009536743164
    6. ',int' → logprob: -13.75009536743164
    7. '   ' → logprob: -14.50009536743164
    8. 'c' → logprob: -14.75009536743164
    9. '           ' → logprob: -14.75009536743164
    10. ',
' → logprob: -16.00009536743164

Token 1224: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004078401252627373
    2. ' int' → logprob: -5.504078388214111
    3. '(int' → logprob: -19.879077911376953
    4. '<int' → logprob: -20.004077911376953
    5. '[int' → logprob: -20.254077911376953
    6. '   ' → logprob: -20.879077911376953
    7. '=int' → logprob: -20.879077911376953
    8. '	int' → logprob: -21.754077911376953
    9. '  ' → logprob: -22.504077911376953
    10. ':int' → logprob: -22.629077911376953

Token 1225: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00011129142512800172
    2. 'line' → logprob: -9.25011157989502
    3. '[line' → logprob: -11.12511157989502
    4. 'int' → logprob: -15.87511157989502
    5. '#line' → logprob: -16.125110626220703
    6. ' line' → logprob: -16.750110626220703
    7. '=line' → logprob: -16.875110626220703
    8. ',line' → logprob: -18.125110626220703
    9. '(int' → logprob: -18.750110626220703
    10. '(' → logprob: -19.250110626220703

Token 1226: '[' (ID: 58)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.14271752536296844
    2. '[' → logprob: -2.0177175998687744
    3. ']' → logprob: -11.392717361450195
    4. '][' → logprob: -11.517717361450195
    5. '-' → logprob: -12.017717361450195
    6. ')' → logprob: -12.767717361450195
    7. '```' → logprob: -12.892717361450195
    8. '[
' → logprob: -13.017717361450195
    9. '   ' → logprob: -13.267717361450195
    10. '3' → logprob: -13.642717361450195

Token 1227: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. '3' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '[' → logprob: -18.375
    5. '```' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. '۴' → logprob: -18.75
    8. '４' → logprob: -19.5
    9. '  ' → logprob: -20.0
    10. '৪' → logprob: -20.0

Token 1228: '])-' (ID: 160447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2562425136566162
    2. ']+' → logprob: -2.256242513656616
    3. ']' → logprob: -2.756242513656616
    4. ')+' → logprob: -3.381242513656616
    5. '-' → logprob: -5.006242752075195
    6. ']-' → logprob: -5.381242752075195
    7. ')-' → logprob: -5.506242752075195
    8. '])' → logprob: -5.506242752075195
    9. '+' → logprob: -6.381242752075195
    10. ')]' → logprob: -6.631242752075195

Token 1229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '0' → logprob: -15.125001907348633
    4. '-' → logprob: -16.125001907348633
    5. ',' → logprob: -17.125001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'd' → logprob: -17.875001907348633
    8. ')' → logprob: -18.500001907348633
    9. 'int' → logprob: -19.125001907348633
    10. '+' → logprob: -19.125001907348633

Token 1230: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9620104432106018
    2. '           ' → logprob: -1.087010383605957
    3. 'res' → logprob: -1.837010383605957
    4. '       ' → logprob: -3.337010383605957
    5. 'length' → logprob: -4.087010383605957
    6. ' res' → logprob: -4.337010383605957
    7. '
' → logprob: -4.462010383605957
    8. ' pos' → logprob: -4.837010383605957
    9. 'result' → logprob: -4.962010383605957
    10. 'print' → logprob: -5.212010383605957

Token 1231: '           ' (ID: 352)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9759207367897034
    2. ' res' → logprob: -1.6009206771850586
    3. '       ' → logprob: -2.2259206771850586
    4. 'pos' → logprob: -2.4759206771850586
    5. '           ' → logprob: -2.6009206771850586
    6. 'result' → logprob: -3.1009206771850586
    7. 'print' → logprob: -3.1009206771850586
    8. '
' → logprob: -3.7259206771850586
    9. 'length' → logprob: -4.850920677185059
    10. 'diff' → logprob: -4.975920677185059

Token 1232: ' diff' (ID: 8868)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04940294101834297
    2. 'ans' → logprob: -3.799402952194214
    3. 'diff' (adapté à ' diff') → logprob: -4.674402713775635
    4. 'length' → logprob: -5.549402713775635
    5. 'idx' → logprob: -5.799402713775635
    6. 'print' → logprob: -6.049402713775635
    7. 'fd' → logprob: -6.174402713775635
    8. 'pos' → logprob: -6.299402713775635
    9. 'l' → logprob: -6.424402713775635
    10. 'r' → logprob: -7.424402713775635

Token 1233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6340468525886536
    2. ' =' → logprob: -0.7590468525886536
    3. '_length' → logprob: -7.009047031402588
    4. '_index' → logprob: -9.38404655456543
    5. '_len' → logprob: -9.38404655456543
    6. '=len' → logprob: -9.63404655456543
    7. '_idx' → logprob: -9.88404655456543
    8. '=_' → logprob: -9.88404655456543
    9. '_pos' → logprob: -10.13404655456543
    10. 's' → logprob: -10.38404655456543

Token 1234: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0015034328680485487
    2. ' first' → logprob: -6.5015034675598145
    3. 'st' → logprob: -13.751502990722656
    4. '0' → logprob: -17.251502990722656
    5. ' st' → logprob: -18.126502990722656
    6. '(first' → logprob: -18.876502990722656
    7. '	first' → logprob: -19.501502990722656
    8. '   ' → logprob: -20.001502990722656
    9. '
' → logprob: -20.251502990722656
    10. 'f' → logprob: -20.501502990722656

Token 1235: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.02983703836798668
    2. 'diff' → logprob: -3.529837131500244
    3. '(a' → logprob: -9.529836654663086
    4. 'a' → logprob: -11.404836654663086
    5. 'Diff' → logprob: -13.779836654663086
    6. '	diff' → logprob: -14.529836654663086
    7. 'dif' → logprob: -14.904836654663086
    8. 'difference' → logprob: -15.029836654663086
    9. 'd' → logprob: -15.154836654663086
    10. ' diff' → logprob: -16.279836654663086

Token 1236: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003476209531072527
    2. 'a' → logprob: -8.000348091125488
    3. '(b' → logprob: -11.500348091125488
    4. 'b' → logprob: -13.625348091125488
    5. '(' → logprob: -14.250348091125488
    6. '(
' → logprob: -16.250347137451172
    7. ',a' → logprob: -18.625347137451172
    8. '[a' → logprob: -18.750347137451172
    9. '((' → logprob: -18.875347137451172
    10. '```' → logprob: -18.875347137451172

Token 1237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12702113389968872
    2. ',b' → logprob: -2.127021074295044
    3. 'b' → logprob: -9.502020835876465
    4. ' ,' → logprob: -11.002020835876465
    5. ',
' → logprob: -14.627020835876465
    6. '```' → logprob: -14.877020835876465
    7. ' b' → logprob: -15.127020835876465
    8. ',d' → logprob: -15.752020835876465
    9. ',B' → logprob: -15.752020835876465
    10. '           ' → logprob: -16.12702178955078

Token 1238: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0486038476228714
    2. 'c' → logprob: -3.0486037731170654
    3. 'd' → logprob: -11.423604011535645
    4. ' b' → logprob: -12.298604011535645
    5. ' c' → logprob: -13.923604011535645
    6. '```' → logprob: -16.673603057861328
    7. 'a' → logprob: -16.923603057861328
    8. '   ' → logprob: -17.548603057861328
    9. '	b' → logprob: -18.298603057861328
    10. ',b' → logprob: -18.798603057861328

Token 1239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00122713518794626
    2. ',c' → logprob: -6.751226902008057
    3. ' ,' → logprob: -9.876227378845215
    4. ',
' → logprob: -12.501227378845215
    5. '           ' → logprob: -14.126227378845215
    6. ',d' → logprob: -14.501227378845215
    7. ',b' → logprob: -15.251227378845215
    8. '   ' → logprob: -16.0012264251709
    9. 'c' → logprob: -16.0012264251709
    10. ' c' → logprob: -16.7512264251709

Token 1240: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.615255839889869e-05
    2. ' c' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. '	c' → logprob: -20.62509536743164
    5. '           ' → logprob: -21.00009536743164
    6. '
' → logprob: -21.25009536743164
    7. '```' → logprob: -21.62509536743164
    8. ' ' → logprob: -22.12509536743164
    9. ')c' → logprob: -22.12509536743164
    10. '               ' → logprob: -22.12509536743164

Token 1241: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.39096227288246155
    2. ',' → logprob: -1.1409622430801392
    3. 'd' → logprob: -6.26596212387085
    4. '+' → logprob: -6.51596212387085
    5. '+d' → logprob: -7.51596212387085
    6. ')' → logprob: -9.265962600708008
    7. ' +' → logprob: -10.765962600708008
    8. ' ,' → logprob: -11.390962600708008
    9. ')d' → logprob: -11.765962600708008
    10. ')+' → logprob: -11.765962600708008

Token 1242: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002613358374219388
    2. ' d' → logprob: -8.250261306762695
    3. '	d' → logprob: -18.875261306762695
    4. '_d' → logprob: -20.875261306762695
    5. 'b' → logprob: -21.000261306762695
    6. ')d' → logprob: -21.125261306762695
    7. '(d' → logprob: -21.625261306762695
    8. 'c' → logprob: -21.750261306762695
    9. '   ' → logprob: -22.375261306762695
    10. ',d' → logprob: -22.625261306762695

Token 1243: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01960926316678524
    2. ')' → logprob: -4.144609451293945
    3. '           ' → logprob: -5.644609451293945
    4. '       ' → logprob: -11.144609451293945
    5. ')
' → logprob: -11.144609451293945
    6. '
' → logprob: -13.894609451293945
    7. ')

' → logprob: -14.769609451293945
    8. 'print' → logprob: -15.144609451293945
    9. ' )
' → logprob: -15.644609451293945
    10. '```' → logprob: -15.644609451293945

Token 1244: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3600069582462311
    2. '           ' → logprob: -2.2350070476531982
    3. 'if' → logprob: -2.3600070476531982
    4. 'print' → logprob: -2.3600070476531982
    5. ' if' → logprob: -5.360006809234619
    6. '<|end|>' → logprob: -6.860006809234619
    7. '```' → logprob: -8.235007286071777
    8. ' print' → logprob: -8.485007286071777
    9. '   ' → logprob: -8.610007286071777
    10. '``' → logprob: -11.485007286071777

Token 1245: ' len' (ID: 4631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38738885521888733
    2. 'print' → logprob: -1.137388825416565
    3. ' if' → logprob: -8.012389183044434
    4. '       ' → logprob: -9.387389183044434
    5. '           ' → logprob: -9.762389183044434
    6. ' print' → logprob: -10.637389183044434
    7. '```' → logprob: -12.387389183044434
    8. 'token' → logprob: -12.512389183044434
    9. 'result' → logprob: -12.637389183044434
    10. 'i' → logprob: -12.637389183044434

Token 1246: '1' (ID: 16)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5543440580368042
    2. '1' → logprob: -1.9293440580368042
    3. '_segment' → logprob: -2.1793441772460938
    4. '_' → logprob: -3.1793441772460938
    5. '_seg' → logprob: -3.3043441772460938
    6. '_s' → logprob: -3.6793441772460938
    7. '_a' → logprob: -3.8043441772460938
    8. '_sub' → logprob: -4.304344177246094
    9. '_ab' → logprob: -4.679344177246094
    10. '_min' → logprob: -5.679344177246094

Token 1247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327173113822937
    2. '=' → logprob: -1.3132717609405518
    3. '=len' → logprob: -12.813271522521973
    4. '1' → logprob: -13.063271522521973
    5. '           ' → logprob: -13.438271522521973
    6. ',' → logprob: -13.688271522521973
    7. 's' → logprob: -14.813271522521973
    8. '=b' → logprob: -15.188271522521973
    9. '```' → logprob: -15.563271522521973
    10. ')' → logprob: -15.688271522521973

Token 1248: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03390466794371605
    2. '(b' → logprob: -3.408904552459717
    3. ' b' → logprob: -8.533905029296875
    4. ' (' → logprob: -10.158905029296875
    5. 'min' → logprob: -11.283905029296875
    6. '(min' → logprob: -12.658905029296875
    7. '   ' → logprob: -13.158905029296875
    8. '(' → logprob: -13.533905029296875
    9. '	b' → logprob: -14.033905029296875
    10. ' ' → logprob: -14.408905029296875

Token 1249: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009760221466422081
    2. ' -' → logprob: -4.63476037979126
    3. '+' → logprob: -13.884759902954102
    4. '-b' → logprob: -14.134759902954102
    5. '−' → logprob: -14.259759902954102
    6. '-length' → logprob: -15.134759902954102
    7. '-
' → logprob: -15.384759902954102
    8. '```' → logprob: -15.384759902954102
    9. '<|end|>' → logprob: -16.0097599029541
    10. '–' → logprob: -16.0097599029541

Token 1250: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033558503491804004
    2. ' a' → logprob: -8.000335693359375
    3. '	a' → logprob: -17.000335693359375
    4. '           ' → logprob: -17.750335693359375
    5. '   ' → logprob: -18.250335693359375
    6. ' ' → logprob: -18.750335693359375
    7. '```' → logprob: -19.125335693359375
    8. '>a' → logprob: -19.375335693359375
    9. '       ' → logprob: -19.625335693359375
    10. ')a' → logprob: -19.750335693359375

Token 1251: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013267839094623923
    2. ' +' → logprob: -6.626326560974121
    3. '+
' → logprob: -15.001326560974121
    4. '```' → logprob: -15.876326560974121
    5. '[' → logprob: -16.376327514648438
    6. '-' → logprob: -16.376327514648438
    7. '<|end|>' → logprob: -16.876327514648438
    8. '()+' → logprob: -17.501327514648438
    9. ''+' → logprob: -17.876327514648438
    10. '>' → logprob: -18.251327514648438

Token 1252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -18.750001907348633
    4. '```' → logprob: -19.750001907348633
    5. '2' → logprob: -20.000001907348633
    6. '+' → logprob: -20.000001907348633
    7. '  ' → logprob: -21.625001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '۱' → logprob: -21.625001907348633
    10. '
' → logprob: -21.750001907348633

Token 1253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '2' → logprob: -22.875
    4. '۱' → logprob: -23.0
    5. '```' → logprob: -23.125
    6. '১' → logprob: -23.375
    7. '<|end|>' → logprob: -23.5
    8. '１' → logprob: -23.75
    9. 'length' → logprob: -24.3125
    10. '१' → logprob: -24.5625

Token 1254: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16088758409023285
    2. 'if' → logprob: -3.0358874797821045
    3. '<|end|>' → logprob: -3.1608874797821045
    4. ' if' → logprob: -3.4108874797821045
    5. 'len' → logprob: -5.160887718200684
    6. ',' → logprob: -5.535887718200684
    7. 'and' → logprob: -5.910887718200684
    8. ' and' → logprob: -5.910887718200684
    9. '```' → logprob: -6.035887718200684
    10. '+' → logprob: -6.035887718200684

Token 1255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026877928525209427
    2. '```' → logprob: -3.7768778800964355
    3. 'len' → logprob: -6.7768778800964355
    4. '<|end|>' → logprob: -6.9018778800964355
    5. ' if' → logprob: -7.4018778800964355
    6. '       ' → logprob: -8.401878356933594
    7. '          ' → logprob: -9.401878356933594
    8. '[len' → logprob: -9.401878356933594
    9. 'if' → logprob: -9.651878356933594
    10. ' len' → logprob: -9.776878356933594

Token 1256: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' (adapté à ' len') → logprob: -0.09208118915557861
    2. 'if' → logprob: -2.467081069946289
    3. 'print' → logprob: -6.592081069946289
    4. 'length' → logprob: -6.967081069946289
    5. 'res' → logprob: -7.967081069946289
    6. '           ' → logprob: -8.342081069946289
    7. 'l' → logprob: -9.467081069946289
    8. 'diff' → logprob: -10.092081069946289
    9. '```' → logprob: -10.467081069946289
    10. ' if' → logprob: -11.217081069946289

Token 1257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02249465510249138
    2. '=' → logprob: -4.022494792938232
    3. ' =' → logprob: -5.647494792938232
    4. 'len' → logprob: -7.397494792938232
    5. '=len' → logprob: -8.897494316101074
    6. ' ' → logprob: -10.897494316101074
    7. '```' → logprob: -11.522494316101074
    8. '   ' → logprob: -11.647494316101074
    9. '           ' → logprob: -12.772494316101074
    10. '_len' → logprob: -12.772494316101074

Token 1258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ',' → logprob: -13.099081039428711
    4. '=len' → logprob: -13.974081039428711
    5. '<|end|>' → logprob: -14.724081039428711
    6. ' ' → logprob: -15.599081039428711
    7. '           ' → logprob: -15.599081039428711
    8. '        ' → logprob: -16.09908103942871
    9. '          ' → logprob: -16.47408103942871
    10. '            ' → logprob: -16.84908103942871

Token 1259: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078758880496025
    2. ' d' → logprob: -5.5040788650512695
    3. '
' → logprob: -16.129077911376953
    4. '   ' → logprob: -16.379077911376953
    5. ' ' → logprob: -16.754077911376953
    6. '	d' → logprob: -17.004077911376953
    7. '(d' → logprob: -17.754077911376953
    8. '           ' → logprob: -17.879077911376953
    9. '  ' → logprob: -18.504077911376953
    10. '       ' → logprob: -19.129077911376953

Token 1260: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42872124910354614
    2. '-' → logprob: -1.0537211894989014
    3. '-c' → logprob: -11.80372142791748
    4. 'c' → logprob: -12.05372142791748
    5. '<|end|>' → logprob: -13.30372142791748
    6. ' ' → logprob: -13.67872142791748
    7. '+' → logprob: -14.05372142791748
    8. '```' → logprob: -14.05372142791748
    9. '[' → logprob: -14.17872142791748
    10. '>' → logprob: -14.55372142791748

Token 1261: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416398212313652
    2. ' c' → logprob: -4.264163970947266
    3. '	c' → logprob: -15.014163970947266
    4. ')c' → logprob: -16.389163970947266
    5. '   ' → logprob: -17.889163970947266
    6. '           ' → logprob: -18.014163970947266
    7. ' ' → logprob: -18.139163970947266
    8. '(c' → logprob: -18.264163970947266
    9. '_c' → logprob: -18.389163970947266
    10. '<c' → logprob: -18.764163970947266

Token 1262: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869345188140869
    2. ' +' → logprob: -1.136934518814087
    3. '+
' → logprob: -10.136934280395508
    4. '<|end|>' → logprob: -11.386934280395508
    5. ' +
' → logprob: -12.011934280395508
    6. '```' → logprob: -14.136934280395508
    7. ' ' → logprob: -14.261934280395508
    8. '1' → logprob: -14.261934280395508
    9. '
' → logprob: -14.386934280395508
    10. '<|end|>' → logprob: -14.511934280395508

Token 1263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023810577113181353
    2. ' ' → logprob: -8.375238418579102
    3. '+' → logprob: -11.875238418579102
    4. ' +' → logprob: -15.000238418579102
    5. '2' → logprob: -16.2502384185791
    6. ' (' → logprob: -17.5002384185791
    7. '(' → logprob: -17.5002384185791
    8. 'd' → logprob: -18.3752384185791
    9. '           ' → logprob: -18.8752384185791
    10. 'length' → logprob: -18.8752384185791

Token 1264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004952482995577157
    2. '+' → logprob: -7.750495433807373
    3. ' ' → logprob: -9.750494956970215
    4. ' +' → logprob: -12.000494956970215
    5. '(' → logprob: -16.37549591064453
    6. '2' → logprob: -17.12549591064453
    7. '```' → logprob: -18.12549591064453
    8. '           ' → logprob: -18.37549591064453
    9. '
' → logprob: -18.37549591064453
    10. ' (' → logprob: -18.62549591064453

Token 1265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4430953562259674
    2. 'if' → logprob: -1.943095326423645
    3. '       ' → logprob: -2.1930954456329346
    4. ' if' → logprob: -2.9430954456329346
    5. '```' → logprob: -3.3180954456329346
    6. '<|end|>' → logprob: -4.4430952072143555
    7. '   ' → logprob: -7.5680952072143555
    8. '[' → logprob: -7.9430952072143555
    9. 'If' → logprob: -7.9430952072143555
    10. '``' → logprob: -8.068095207214355

Token 1266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09920138865709305
    2. ' if' → logprob: -3.3492014408111572
    3. '       ' → logprob: -3.4742014408111572
    4. '<|end|>' → logprob: -3.9742014408111572
    5. 'if' → logprob: -5.099201202392578
    6. '```' → logprob: -5.974201202392578
    7. '   ' → logprob: -8.099201202392578
    8. ',' → logprob: -8.974201202392578
    9. '[' → logprob: -9.224201202392578
    10. '<|end|>' → logprob: -9.474201202392578

Token 1267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08190755546092987
    2. 'print' → logprob: -2.5819075107574463
    3. '           ' → logprob: -5.831907749176025
    4. ' if' → logprob: -9.956907272338867
    5. '```' → logprob: -10.956907272338867
    6. '       ' → logprob: -11.956907272338867
    7. 'result' → logprob: -12.581907272338867
    8. ' print' → logprob: -13.081907272338867
    9. '   ' → logprob: -13.956907272338867
    10. 'res' → logprob: -14.081907272338867

Token 1268: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0016298363916575909
    2. ' diff' → logprob: -6.501629829406738
    3. 'a' → logprob: -9.126629829406738
    4. '	diff' → logprob: -11.751629829406738
    5. '(diff' → logprob: -12.001629829406738
    6. '   ' → logprob: -12.876629829406738
    7. 'low' → logprob: -14.001629829406738
    8. '    ' → logprob: -15.126629829406738
    9. 'dif' → logprob: -15.376629829406738
    10. 'd' → logprob: -15.501629829406738

Token 1269: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18176420032978058
    2. '>=' → logprob: -2.3067641258239746
    3. ' ==' → logprob: -2.8067641258239746
    4. ' >=' → logprob: -5.181764125823975
    5. '>' → logprob: -7.931764125823975
    6. '<' → logprob: -8.806764602661133
    7. ' >' → logprob: -10.431764602661133
    8. '<=' → logprob: -10.556764602661133
    9. ' <' → logprob: -10.681764602661133
    10. '≥' → logprob: -12.806764602661133

Token 1270: ' min' (ID: 1349)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21774153411388397
    2. 'min' → logprob: -1.7177414894104004
    3. '0' → logprob: -4.2177414894104
    4. 'max' → logprob: -6.9677414894104
    5. ' min' → logprob: -8.342741966247559
    6. ' len' → logprob: -9.342741966247559
    7. '(min' → logprob: -9.842741966247559
    8. 'length' → logprob: -9.967741966247559
    9. '=min' → logprob: -10.592741966247559
    10. '(len' → logprob: -10.842741966247559

Token 1271: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -7.3458322731312364e-06
    2. 'len' → logprob: -11.875007629394531
    3. '[len' → logprob: -15.875007629394531
    4. '((' → logprob: -16.62500762939453
    5. '(' → logprob: -17.25000762939453
    6. '	len' → logprob: -17.37500762939453
    7. '<len' → logprob: -17.37500762939453
    8. '=len' → logprob: -18.25000762939453
    9. ',len' → logprob: -18.75000762939453
    10. '(length' → logprob: -19.25000762939453

Token 1272: '1' (ID: 16)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.04451688006520271
    2. '1' → logprob: -3.7945168018341064
    3. 'len' → logprob: -3.9195168018341064
    4. '(a' → logprob: -7.6695170402526855
    5. '(' → logprob: -7.9195170402526855
    6. '(diff' → logprob: -9.294516563415527
    7. '(
' → logprob: -9.544516563415527
    8. '(b' → logprob: -9.794516563415527
    9. '```' → logprob: -10.669516563415527
    10. '[len' → logprob: -10.794516563415527

Token 1273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00831692572683096
    2. ',len' → logprob: -5.008316993713379
    3. ',d' → logprob: -7.008316993713379
    4. ' ,' → logprob: -7.883316993713379
    5. ',length' → logprob: -8.258316993713379
    6. ',
' → logprob: -10.508316993713379
    7. ',b' → logprob: -11.633316993713379
    8. ',min' → logprob: -12.508316993713379
    9. ',int' → logprob: -12.633316993713379
    10. ',size' → logprob: -12.758316993713379

Token 1274: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0325924449716695e-05
    2. ' len' → logprob: -11.50001049041748
    3. 'diff' → logprob: -17.250009536743164
    4. 'length' → logprob: -17.375009536743164
    5. '	len' → logprob: -19.000009536743164
    6. '(len' → logprob: -19.750009536743164
    7. 'min' → logprob: -20.000009536743164
    8. '[len' → logprob: -20.250009536743164
    9. '           ' → logprob: -20.375009536743164
    10. '   ' → logprob: -20.500009536743164

Token 1275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002686944557353854
    2. '1' → logprob: -6.627686977386475
    3. '(diff' → logprob: -6.877686977386475
    4. '```' → logprob: -9.002686500549316
    5. ')' → logprob: -9.502686500549316
    6. '(len' → logprob: -10.627686500549316
    7. 'diff' → logprob: -11.127686500549316
    8. '(b' → logprob: -11.377686500549316
    9. '{
' → logprob: -11.377686500549316
    10. '(a' → logprob: -11.502686500549316

Token 1276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5779353380203247
    2. ' or' → logprob: -1.5779353380203247
    3. ':
' → logprob: -1.8279353380203247
    4. ')' → logprob: -3.452935218811035
    5. ':' → logprob: -3.952935218811035
    6. ' and' → logprob: -4.702935218811035
    7. '):' → logprob: -5.077935218811035
    8. '           ' → logprob: -5.702935218811035
    9. '               ' → logprob: -7.202935218811035
    10. 'and' → logprob: -7.202935218811035

Token 1277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002643675310537219
    2. 'print' → logprob: -6.377643585205078
    3. ' print' → logprob: -7.252643585205078
    4. ' if' → logprob: -9.252643585205078
    5. ' and' → logprob: -10.252643585205078
    6. '           ' → logprob: -10.502643585205078
    7. 'if' → logprob: -10.877643585205078
    8. '   ' → logprob: -11.127643585205078
    9. ':
' → logprob: -11.377643585205078
    10. '```' → logprob: -11.502643585205078

Token 1278: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07624519616365433
    2. ' print' → logprob: -2.8262453079223633
    3. 'if' (adapté à ' if') → logprob: -4.701245307922363
    4. ' if' → logprob: -5.326245307922363
    5. '               ' → logprob: -9.201245307922363
    6. '```' → logprob: -10.201245307922363
    7. '                   ' → logprob: -10.701245307922363
    8. 'result' → logprob: -10.951245307922363
    9. '           ' → logprob: -10.951245307922363
    10. 'output' → logprob: -12.076245307922363

Token 1279: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.896309739408025e-07
    2. '(len' → logprob: -14.250000953674316
    3. ' len' → logprob: -16.375
    4. '	len' → logprob: -18.5
    5. 'min' → logprob: -18.75
    6. 'length' → logprob: -20.5
    7. '   ' → logprob: -21.25
    8. 'diff' → logprob: -21.25
    9. '(' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 1280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. '(len' → logprob: -8.875141143798828
    3. 'len' → logprob: -13.875141143798828
    4. '<len' → logprob: -15.375141143798828
    5. '2' → logprob: -15.875141143798828
    6. '(min' → logprob: -16.500141143798828
    7. '[len' → logprob: -16.875141143798828
    8. '```' → logprob: -18.000141143798828
    9. 's' → logprob: -18.375141143798828
    10. '=len' → logprob: -18.375141143798828

Token 1281: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6559805870056152
    2. '==' → logprob: -0.7809805870056152
    3. '<=' → logprob: -4.405980587005615
    4. ' <=' → logprob: -4.530980587005615
    5. '=' → logprob: -10.530981063842773
    6. '<|end|>' → logprob: -10.530981063842773
    7. ' <' → logprob: -11.155981063842773
    8. '>' → logprob: -11.405981063842773
    9. '<' → logprob: -11.405981063842773
    10. '```' → logprob: -11.530981063842773

Token 1282: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012118533049942926
    2. 'min' → logprob: -9.125121116638184
    3. ' len' → logprob: -11.500121116638184
    4. 'diff' → logprob: -13.500121116638184
    5. '(len' → logprob: -15.750121116638184
    6. '=len' → logprob: -15.750121116638184
    7. 'length' → logprob: -15.875121116638184
    8. '	len' → logprob: -16.0001220703125
    9. 'leni' → logprob: -16.3751220703125
    10. '[len' → logprob: -17.8751220703125

Token 1283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.282920129597187e-05
    2. 'len' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.875012397766113
    4. '```' → logprob: -15.500012397766113
    5. ' len' → logprob: -15.625012397766113
    6. '(len' → logprob: -15.750012397766113
    7. ' ' → logprob: -15.875012397766113
    8. 'min' → logprob: -16.00001335144043
    9. '
' → logprob: -16.25001335144043
    10. '[len' → logprob: -17.12501335144043

Token 1284: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5009984374046326
    2. '                   ' → logprob: -1.8759984970092773
    3. ' and' → logprob: -2.0009984970092773
    4. ':' → logprob: -2.7509984970092773
    5. '               ' → logprob: -3.6259984970092773
    6. 'and' → logprob: -5.000998497009277
    7. '           ' → logprob: -5.875998497009277
    8. ',' → logprob: -6.500998497009277
    9. '==' → logprob: -7.375998497009277
    10. '=' → logprob: -7.500998497009277

Token 1285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022461307235062122
    2. '               ' → logprob: -7.002245903015137
    3. '                       ' → logprob: -7.377245903015137
    4. ' print' → logprob: -8.627245903015137
    5. 'print' → logprob: -8.627245903015137
    6. '                           ' → logprob: -10.002245903015137
    7. ' return' → logprob: -10.252245903015137
    8. '```' → logprob: -10.502245903015137
    9. '	               ' → logprob: -10.502245903015137
    10. '		           ' → logprob: -10.627245903015137

Token 1286: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00737826619297266
    2. ' print' → logprob: -5.507378101348877
    3. '                   ' → logprob: -5.757378101348877
    4. '               ' → logprob: -9.882378578186035
    5. '                       ' → logprob: -10.007378578186035
    6. '	print' → logprob: -10.882378578186035
    7. '   ' → logprob: -11.632378578186035
    8. '           ' → logprob: -12.382378578186035
    9. '
' → logprob: -13.257378578186035
    10. '       ' → logprob: -14.132378578186035

Token 1287: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2239874005317688
    2. '('' → logprob: -2.223987340927124
    3. '("="' → logprob: -2.848987340927124
    4. '("' → logprob: -3.598987340927124
    5. '('='' → logprob: -5.723987579345703
    6. '=' → logprob: -6.473987579345703
    7. '0' → logprob: -6.723987579345703
    8. '(-' → logprob: -6.973987579345703
    9. '"' → logprob: -9.223987579345703
    10. '(`' → logprob: -9.348987579345703

Token 1288: 'e' (ID: 68)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.317895770072937
    2. ''' → logprob: -1.567895770072937
    3. '=' → logprob: -1.567895770072937
    4. 'Yes' → logprob: -2.3178958892822266
    5. '='' → logprob: -2.8178958892822266
    6. 'E' → logprob: -3.6928958892822266
    7. 'equal' → logprob: -4.192895889282227
    8. '=\' → logprob: -4.192895889282227
    9. '=s' → logprob: -4.317895889282227
    10. ''=' → logprob: -4.442895889282227

Token 1289: '')
' (ID: 2515)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.036432404071092606
    2. 'q' → logprob: -3.4114325046539307
    3. 'qu' → logprob: -6.661432266235352
    4. 'quals' → logprob: -7.411432266235352
    5. 'qal' → logprob: -7.661432266235352
    6. 'qua' → logprob: -9.036432266235352
    7. 'qa' → logprob: -9.161432266235352
    8. 'ql' → logprob: -9.786432266235352
    9. 'QUAL' → logprob: -10.161432266235352
    10. 'ual' → logprob: -10.161432266235352

Token 1290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14084018766880035
    2. 'else' → logprob: -2.1408402919769287
    3. ' else' → logprob: -4.64084005355835
    4. 'elif' → logprob: -6.39084005355835
    5. '           ' → logprob: -7.01584005355835
    6. ')' → logprob: -7.76584005355835
    7. '                   ' → logprob: -7.89084005355835
    8. '<|end|>' → logprob: -8.015840530395508
    9. '	else' → logprob: -9.640840530395508
    10. '			' → logprob: -9.640840530395508

Token 1291: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1404309719800949
    2. 'elif' (adapté à ' elif') → logprob: -2.6404309272766113
    3. 'else' → logprob: -2.8904309272766113
    4. '               ' → logprob: -5.515430927276611
    5. ' else' → logprob: -9.64043140411377
    6. ' elif' → logprob: -10.26543140411377
    7. '                   ' → logprob: -12.89043140411377
    8. '       ' → logprob: -13.26543140411377
    9. '   ' → logprob: -13.64043140411377
    10. 'elseif' → logprob: -13.64043140411377

Token 1292: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1602558046579361
    2. ' len' → logprob: -1.910255789756775
    3. 'diff' → logprob: -10.785255432128906
    4. ' diff' → logprob: -11.660255432128906
    5. 'length' → logprob: -14.035255432128906
    6. 'min' → logprob: -14.285255432128906
    7. '	len' → logprob: -15.160255432128906
    8. '(len' → logprob: -15.160255432128906
    9. ' min' → logprob: -16.160255432128906
    10. ' length' → logprob: -16.535255432128906

Token 1293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9069290161132812
    2. '(len' → logprob: -0.9069290161132812
    3. '(diff' → logprob: -2.1569290161132812
    4. '<len' → logprob: -3.9069290161132812
    5. '2' → logprob: -4.156929016113281
    6. '[len' → logprob: -4.531929016113281
    7. 'len' → logprob: -4.531929016113281
    8. 'diff' → logprob: -4.656929016113281
    9. ' len' → logprob: -5.406929016113281
    10. '(b' → logprob: -6.531929016113281

Token 1294: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6461002230644226
    2. '<' → logprob: -0.8961002230644226
    3. ' >' → logprob: -3.2711002826690674
    4. '>' → logprob: -3.5211002826690674
    5. '><' → logprob: -9.521100044250488
    6. '<|end|>' → logprob: -9.771100044250488
    7. '[' → logprob: -11.021100044250488
    8. '<int' → logprob: -11.646100044250488
    9. ' ' → logprob: -12.146100044250488
    10. '>
' → logprob: -12.271100044250488

Token 1295: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024762547109276056
    2. ' len' → logprob: -6.002476215362549
    3. 'diff' → logprob: -14.877476692199707
    4. 'length' → logprob: -16.12747573852539
    5. '	len' → logprob: -16.75247573852539
    6. '=len' → logprob: -17.62747573852539
    7. '           ' → logprob: -18.25247573852539
    8. '=' → logprob: -18.37747573852539
    9. '(len' → logprob: -18.37747573852539
    10. 'Len' → logprob: -19.12747573852539

Token 1296: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05934670940041542
    2. '2' → logprob: -2.9343466758728027
    3. ' len' → logprob: -5.684346675872803
    4. 'diff' → logprob: -6.934346675872803
    5. ' diff' → logprob: -10.184347152709961
    6. 'length' → logprob: -11.184347152709961
    7. '=len' → logprob: -12.559347152709961
    8. ' ' → logprob: -12.559347152709961
    9. '   ' → logprob: -12.684347152709961
    10. '(len' → logprob: -12.809347152709961

Token 1297: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20842157304286957
    2. ':' → logprob: -1.7084215879440308
    3. '               ' → logprob: -5.83342170715332
    4. '):
' → logprob: -6.20842170715332
    5. '                   ' → logprob: -7.08342170715332
    6. '           ' → logprob: -7.45842170715332
    7. ',' → logprob: -8.58342170715332
    8. ')' → logprob: -9.45842170715332
    9. '():
' → logprob: -9.45842170715332
    10. '                       ' → logprob: -9.58342170715332

Token 1298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5463135838508606
    2. 'print' → logprob: -1.0463135242462158
    3. ' print' → logprob: -2.796313524246216
    4. '               ' → logprob: -5.046313762664795
    5. '                       ' → logprob: -7.171313762664795
    6. '           ' → logprob: -7.671313762664795
    7. '   ' → logprob: -7.921313762664795
    8. '```' → logprob: -9.171313285827637
    9. '	print' → logprob: -9.296313285827637
    10. '       ' → logprob: -9.421313285827637

Token 1299: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.522638169466518e-05
    2. '                   ' → logprob: -11.375024795532227
    3. ' print' → logprob: -11.375024795532227
    4. 'pr' → logprob: -14.375024795532227
    5. '	print' → logprob: -14.625024795532227
    6. 'printf' → logprob: -14.875024795532227
    7. '   ' → logprob: -15.625024795532227
    8. '               ' → logprob: -16.125024795532227
    9. '                       ' → logprob: -16.125024795532227
    10. 'pri' → logprob: -16.500024795532227

Token 1300: '('' (ID: 706)
  Prédit: '('<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('<' → logprob: -0.062329865992069244
    2. '('' → logprob: -2.8123297691345215
    3. '(' → logprob: -8.56233024597168
    4. '('-' → logprob: -9.06233024597168
    5. '("<' → logprob: -10.93733024597168
    6. '(-' → logprob: -11.93733024597168
    7. ''' → logprob: -12.06233024597168
    8. ''<' → logprob: -12.18733024597168
    9. '('&' → logprob: -12.43733024597168
    10. '('='' → logprob: -12.93733024597168

Token 1301: 's' (ID: 82)
  Prédit: ''l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''l' → logprob: -0.2400943487882614
    2. ''s' → logprob: -1.9900943040847778
    3. ''<' → logprob: -2.8650944232940674
    4. '-' → logprob: -4.490094184875488
    5. ''a' → logprob: -5.615094184875488
    6. ''' → logprob: -5.990094184875488
    7. ''b' → logprob: -7.365094184875488
    8. ''-' → logprob: -7.865094184875488
    9. ''n' → logprob: -8.240094184875488
    10. '-l' → logprob: -8.615094184875488

Token 1302: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.012035686522722244
    2. 'm' → logprob: -5.137035846710205
    3. ')' → logprob: -6.387035846710205
    4. '')
' → logprob: -7.012035846710205
    5. ''' → logprob: -7.512035846710205
    6. ''<' → logprob: -7.762035846710205
    7. '<|end|>' → logprob: -7.887035846710205
    8. ''>' → logprob: -8.137035369873047
    9. 'n' → logprob: -8.262035369873047
    10. '<' → logprob: -8.387035369873047

Token 1303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030159449204802513
    2. 'else' → logprob: -3.5301594734191895
    3. ' else' → logprob: -7.9051594734191895
    4. 'elif' → logprob: -11.280158996582031
    5. '                   ' → logprob: -11.780158996582031
    6. '<|end|>' → logprob: -12.030158996582031
    7. '           ' → logprob: -12.280158996582031
    8. '			' → logprob: -13.405158996582031
    9. '       ' → logprob: -13.530158996582031
    10. '              ' → logprob: -13.530158996582031

Token 1304: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4751492440700531
    2. 'else' (adapté à ' else') → logprob: -0.9751492738723755
    3. 'elif' → logprob: -7.100149154663086
    4. ' else' → logprob: -8.350149154663086
    5. '	else' → logprob: -12.975149154663086
    6. '			' → logprob: -13.475149154663086
    7. '		       ' → logprob: -13.725149154663086
    8. '       ' → logprob: -13.725149154663086
    9. '           ' → logprob: -13.850149154663086
    10. '                   ' → logprob: -13.975149154663086

Token 1305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.671653151512146
    2. ':
' → logprob: -1.296653151512146
    3. '                   ' → logprob: -1.546653151512146
    4. '           ' → logprob: -6.5466532707214355
    5. '               ' → logprob: -7.9216532707214355
    6. 'print' → logprob: -8.421652793884277
    7. '   ' → logprob: -8.671652793884277
    8. '                  ' → logprob: -8.671652793884277
    9. '                       ' → logprob: -9.421652793884277
    10. '{
' → logprob: -9.671652793884277

Token 1306: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018585331737995148
    2. 'print' → logprob: -4.018585205078125
    3. ' print' → logprob: -8.893585205078125
    4. '               ' → logprob: -9.018585205078125
    5. '           ' → logprob: -9.143585205078125
    6. '   ' → logprob: -9.768585205078125
    7. '                  ' → logprob: -12.268585205078125
    8. '
' → logprob: -13.018585205078125
    9. '```' → logprob: -13.393585205078125
    10. '                       ' → logprob: -14.268585205078125

Token 1307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028111785650253296
    2. '                   ' → logprob: -6.002810955047607
    3. ' print' → logprob: -8.502811431884766
    4. 'p' → logprob: -9.377811431884766
    5. '   ' → logprob: -11.502811431884766
    6. 'l' → logprob: -11.627811431884766
    7. '               ' → logprob: -11.877811431884766
    8. 'r' → logprob: -12.002811431884766
    9. 'n' → logprob: -12.127811431884766
    10. '```' → logprob: -12.752811431884766

Token 1308: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. ''' → logprob: -15.87501049041748
    4. '("' → logprob: -16.875011444091797
    5. ''s' → logprob: -16.875011444091797
    6. ''l' → logprob: -17.000011444091797
    7. ''t' → logprob: -17.250011444091797
    8. '(
' → logprob: -17.500011444091797
    9. ''o' → logprob: -17.875011444091797
    10. '()' → logprob: -18.375011444091797

Token 1309: 't' (ID: 83)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.9710216522216797
    2. ''l' → logprob: -1.0960216522216797
    3. ''g' → logprob: -1.7210216522216797
    4. ''d' → logprob: -3.5960216522216797
    5. ''' → logprob: -3.7210216522216797
    6. 'l' → logprob: -3.7210216522216797
    7. 'b' → logprob: -4.72102165222168
    8. ''f' → logprob: -4.84602165222168
    9. ''s' → logprob: -5.34602165222168
    10. ''p' → logprob: -5.97102165222168

Token 1310: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -5.717296517104842e-05
    2. '')
' → logprob: -10.000057220458984
    3. '<|end|>' → logprob: -11.875057220458984
    4. '")' → logprob: -13.000057220458984
    5. 's' → logprob: -13.625057220458984
    6. ')' → logprob: -14.125057220458984
    7. '')}' → logprob: -15.750057220458984
    8. ''' → logprob: -15.750057220458984
    9. '')

' → logprob: -16.750057220458984
    10. '');' → logprob: -17.000057220458984

Token 1311: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1312: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6539846062660217
    2. '           ' → logprob: -0.7789846062660217
    3. ' else' → logprob: -4.528984546661377
    4. '<|end|>' → logprob: -4.903984546661377
    5. '               ' → logprob: -6.778984546661377
    6. '       ' → logprob: -6.903984546661377
    7. '	else' → logprob: -8.778985023498535
    8. '          ' → logprob: -8.903985023498535
    9. ')' → logprob: -9.278985023498535
    10. '		' → logprob: -9.653985023498535

Token 1313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4157615602016449
    2. '           ' → logprob: -2.0407614707946777
    3. ':
' → logprob: -2.0407614707946777
    4. '               ' → logprob: -2.7907614707946777
    5. '():
' → logprob: -5.540761470794678
    6. ' :' → logprob: -5.915761470794678
    7. ',' → logprob: -6.290761470794678
    8. 'print' → logprob: -6.415761470794678
    9. '                   ' → logprob: -6.665761470794678
    10. '():' → logprob: -6.790761470794678

Token 1314: '               ' (ID: 506)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6204049587249756
    2. '               ' → logprob: -1.6204049587249756
    3. 'ch' → logprob: -2.4954049587249756
    4. 'c' → logprob: -3.1204049587249756
    5. 'char' → logprob: -3.1204049587249756
    6. '           ' → logprob: -3.7454049587249756
    7. '```' → logprob: -4.245405197143555
    8. 's' → logprob: -4.245405197143555
    9. 'print' → logprob: -4.495405197143555
    10. ' h' → logprob: -4.745405197143555

Token 1315: ' ch' (ID: 549)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6024872064590454
    2. 'ha' → logprob: -1.4774872064590454
    3. 'ch' (adapté à ' ch') → logprob: -1.7274872064590454
    4. 'char' → logprob: -3.727487087249756
    5. 'hc' → logprob: -4.352487087249756
    6. 'res' → logprob: -5.352487087249756
    7. 'ca' → logprob: -6.227487087249756
    8. 'hash' → logprob: -6.977487087249756
    9. 'c' → logprob: -7.352487087249756
    10. 'print' → logprob: -7.977487087249756

Token 1316: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10867682099342346
    2. '1' → logprob: -2.6086769104003906
    3. '=' → logprob: -3.9836769104003906
    4. 'ar' → logprob: -5.108676910400391
    5. '_h' → logprob: -6.108676910400391
    6. '_index' → logprob: -7.358676910400391
    7. '           ' → logprob: -8.48367691040039
    8. '_code' → logprob: -8.48367691040039
    9. '_a' → logprob: -8.60867691040039
    10. '       ' → logprob: -8.85867691040039

Token 1317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428256332874298
    2. '=' → logprob: -2.0178256034851074
    3. ',' → logprob: -9.267826080322266
    4. '=sys' → logprob: -11.767826080322266
    5. '```' → logprob: -11.892826080322266
    6. '_code' → logprob: -11.892826080322266
    7. '=line' → logprob: -12.017826080322266
    8. '[' → logprob: -12.267826080322266
    9. '=_' → logprob: -12.267826080322266
    10. ',_' → logprob: -12.392826080322266

Token 1318: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.26630842685699463
    2. 'U' → logprob: -1.7663084268569946
    3. 'chr' → logprob: -3.641308307647705
    4. ' U' → logprob: -3.891308307647705
    5. ' st' → logprob: -4.516308307647705
    6. ' chr' → logprob: -6.016308307647705
    7. 'input' → logprob: -6.766308307647705
    8. 'ord' → logprob: -7.391308307647705
    9. ' ord' → logprob: -7.516308307647705
    10. ''U' → logprob: -9.266308784484863

Token 1319: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -12.37501049041748
    3. 'query' → logprob: -12.50001049041748
    4. '.root' → logprob: -13.75001049041748
    5. '.input' → logprob: -14.87501049041748
    6. '=query' → logprob: -14.87501049041748
    7. ' .' → logprob: -15.37501049041748
    8. '.update' → logprob: -15.62501049041748
    9. '.s' → logprob: -15.75001049041748
    10. '.get' → logprob: -16.000011444091797

Token 1320: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -5.9153885558771435e-06
    2. '(node' → logprob: -13.000005722045898
    3. '(' → logprob: -13.500005722045898
    4. 'st' → logprob: -14.500005722045898
    5. ' st' → logprob: -14.875005722045898
    6. '(
' → logprob: -14.875005722045898
    7. '```' → logprob: -15.000005722045898
    8. '(root' → logprob: -15.750005722045898
    9. '(s' → logprob: -16.0000057220459
    10. ' (' → logprob: -16.2500057220459

Token 1321: '.root' (ID: 25375)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.21543468534946442
    2. '.st' → logprob: -2.3404347896575928
    3. 'st' → logprob: -2.8404347896575928
    4. '.root' → logprob: -3.4654347896575928
    5. 'root' → logprob: -5.215434551239014
    6. '.node' → logprob: -7.090434551239014
    7. ' st' → logprob: -7.215434551239014
    8. '(root' → logprob: -7.340434551239014
    9. '(' → logprob: -9.465435028076172
    10. 'node' → logprob: -10.590435028076172

Token 1322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48593980073928833
    2. '(st' → logprob: -1.1109397411346436
    3. 'st' → logprob: -2.9859397411346436
    4. ' st' → logprob: -5.485939979553223
    5. ',None' → logprob: -7.985939979553223
    6. ' ,' → logprob: -8.610939979553223
    7. ')' → logprob: -9.360939979553223
    8. '(' → logprob: -9.360939979553223
    9. '(None' → logprob: -9.610939979553223
    10. ',s' → logprob: -9.735939979553223

Token 1323: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.93448489275761e-05
    2. ' a' → logprob: -9.500079154968262
    3. '   ' → logprob: -13.000079154968262
    4. 'diff' → logprob: -13.875079154968262
    5. 'c' → logprob: -15.000079154968262
    6. '(a' → logprob: -15.125079154968262
    7. '	a' → logprob: -16.000080108642578
    8. 'b' → logprob: -16.000080108642578
    9. '    ' → logprob: -16.625080108642578
    10. ')a' → logprob: -17.000080108642578

Token 1324: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.457111656665802
    2. '[' → logprob: -1.9571115970611572
    3. ',ch' → logprob: -2.2071115970611572
    4. ',a' → logprob: -2.3321115970611572
    5. 'a' → logprob: -5.082111835479736
    6. '0' → logprob: -5.207111835479736
    7. ')[' → logprob: -5.957111835479736
    8. '[a' → logprob: -6.832111835479736
    9. ',[' → logprob: -7.332111835479736
    10. '(a' → logprob: -7.582111835479736

Token 1325: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00012737659562844783
    2. 'a' → logprob: -9.750127792358398
    3. 'ch' → logprob: -10.125127792358398
    4. ' diff' → logprob: -10.875127792358398
    5. 'b' → logprob: -12.000127792358398
    6. '(diff' → logprob: -12.875127792358398
    7. '	diff' → logprob: -14.625127792358398
    8. 'c' → logprob: -15.125127792358398
    9. 'first' → logprob: -15.375127792358398
    10. '0' → logprob: -16.5001277923584

Token 1326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06227687746286392
    2. ')[' → logprob: -2.937276840209961
    3. '[' → logprob: -5.187276840209961
    4. '   ' → logprob: -7.812276840209961
    5. ',a' → logprob: -8.062276840209961
    6. ' ,' → logprob: -8.187276840209961
    7. ',[' → logprob: -8.812276840209961
    8. 'a' → logprob: -9.312276840209961
    9. '           ' → logprob: -9.562276840209961
    10. ' )[' → logprob: -9.687276840209961

Token 1327: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.939851037808694e-05
    2. ' a' → logprob: -10.500029563903809
    3. 'st' → logprob: -14.125029563903809
    4. '1' → logprob: -14.875029563903809
    5. '   ' → logprob: -15.125029563903809
    6. '(a' → logprob: -15.250029563903809
    7. ')' → logprob: -16.000028610229492
    8. '	a' → logprob: -17.625028610229492
    9. ')a' → logprob: -17.750028610229492
    10. '0' → logprob: -17.750028610229492

Token 1328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001674110535532236
    2. 'diff' → logprob: -7.251674175262451
    3. '[' → logprob: -7.376674175262451
    4. ' +' → logprob: -8.251673698425293
    5. '0' → logprob: -10.251673698425293
    6. ')' → logprob: -11.376673698425293
    7. ')[' → logprob: -12.251673698425293
    8. '```' → logprob: -12.251673698425293
    9. ',' → logprob: -12.501673698425293
    10. '+[' → logprob: -12.751673698425293

Token 1329: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.7432603272027336e-06
    2. ' diff' → logprob: -13.500001907348633
    3. '	diff' → logprob: -15.500001907348633
    4. '
' → logprob: -18.625001907348633
    5. 'dif' → logprob: -18.875001907348633
    6. '_diff' → logprob: -18.875001907348633
    7. '(diff' → logprob: -19.125001907348633
    8. '.diff' → logprob: -19.500001907348633
    9. '```' → logprob: -20.500001907348633
    10. '[' → logprob: -21.125001907348633

Token 1330: ')
' (ID: 446)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.003951475024223328
    2. ',' → logprob: -6.128951549530029
    3. '[' → logprob: -6.628951549530029
    4. ' )[' → logprob: -9.128951072692871
    5. '   ' → logprob: -9.378951072692871
    6. '           ' → logprob: -9.628951072692871
    7. '```' → logprob: -10.003951072692871
    8. ')' → logprob: -10.378951072692871
    9. '       ' → logprob: -10.878951072692871
    10. '][' → logprob: -11.253951072692871

Token 1331: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2969760000705719
    2. ')[' → logprob: -2.046976089477539
    3. 'ch' → logprob: -3.546976089477539
    4. '```' → logprob: -3.546976089477539
    5. ')' → logprob: -4.171976089477539
    6. '
' → logprob: -4.421976089477539
    7. '<|end|>' → logprob: -4.796976089477539
    8. '           ' → logprob: -4.921976089477539
    9. ',' → logprob: -5.046976089477539
    10. '()[' → logprob: -5.546976089477539

Token 1332: ' ch' (ID: 549)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10277244448661804
    2. ' if' → logprob: -2.4777724742889404
    3. 'print' → logprob: -4.352772235870361
    4. '               ' → logprob: -7.352772235870361
    5. ' print' → logprob: -8.85277271270752
    6. '                   ' → logprob: -10.35277271270752
    7. 'c' → logprob: -11.47777271270752
    8. 'val' → logprob: -11.47777271270752
    9. 'ch' (adapté à ' ch') → logprob: -11.72777271270752
    10. '```' → logprob: -11.97777271270752

Token 1333: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6285626888275146
    2. '_val' → logprob: -0.8785626888275146
    3. ' =' → logprob: -3.3785626888275146
    4. '=' → logprob: -4.753562927246094
    5. 'val' → logprob: -5.753562927246094
    6. '[' → logprob: -5.878562927246094
    7. '2' → logprob: -7.628562927246094
    8. '_code' → logprob: -7.878562927246094
    9. '_value' → logprob: -8.128562927246094
    10. '_' → logprob: -8.753562927246094

Token 1334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. '[' → logprob: -17.761871337890625
    4. ' ' → logprob: -18.386871337890625
    5. '=
' → logprob: -18.386871337890625
    6. 'st' → logprob: -18.511871337890625
    7. '＝' → logprob: -19.136871337890625
    8. ' st' → logprob: -19.261871337890625
    9. ')' → logprob: -19.386871337890625
    10. ',' → logprob: -19.386871337890625

Token 1335: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0007100477814674377
    2. ' st' → logprob: -7.2507100105285645
    3. '(st' → logprob: -15.625710487365723
    4. '	st' → logprob: -17.625709533691406
    5. 't' → logprob: -18.375709533691406
    6. '           ' → logprob: -19.125709533691406
    7. 's' → logprob: -20.375709533691406
    8. '```' → logprob: -20.375709533691406
    9. '   ' → logprob: -20.625709533691406
    10. '       ' → logprob: -21.250709533691406

Token 1336: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -8.590104698669165e-05
    2. 'query' → logprob: -9.375085830688477
    3. '(query' → logprob: -14.750085830688477
    4. '$query' → logprob: -15.250085830688477
    5. '=query' → logprob: -16.125085830688477
    6. '	query' → logprob: -16.375085830688477
    7. ' query' → logprob: -16.500085830688477
    8. '```' → logprob: -17.125085830688477
    9. 'QUERY' → logprob: -17.875085830688477
    10. '.root' → logprob: -18.375085830688477

Token 1337: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'st' → logprob: -17.875
    4. ' st' → logprob: -18.125
    5. '	st' → logprob: -18.375
    6. '(
' → logprob: -18.375
    7. '/st' → logprob: -18.875
    8. ' (' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. '(St' → logprob: -19.125

Token 1338: '.root' (ID: 25375)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.4676187038421631
    2. 'root' → logprob: -1.217618703842163
    3. '(st' → logprob: -2.592618703842163
    4. ' st' → logprob: -6.967618942260742
    5. 'node' → logprob: -7.467618942260742
    6. '(root' → logprob: -7.467618942260742
    7. 'c' → logprob: -8.467618942260742
    8. 'd' → logprob: -8.467618942260742
    9. '.root' → logprob: -9.217618942260742
    10. '.st' → logprob: -9.842618942260742

Token 1339: ',' (ID: 11)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.062239911407232285
    2. ',' → logprob: -2.8122398853302
    3. ' st' → logprob: -9.062239646911621
    4. 'st' → logprob: -9.437239646911621
    5. '=' → logprob: -11.187239646911621
    6. ')' → logprob: -11.437239646911621
    7. '```' → logprob: -11.562239646911621
    8. '[' → logprob: -11.937239646911621
    9. '/st' → logprob: -12.062239646911621
    10. '(
' → logprob: -12.062239646911621

Token 1340: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01667092926800251
    2. 'st' → logprob: -4.2666707038879395
    3. ' c' → logprob: -6.0166707038879395
    4. ' st' → logprob: -9.641671180725098
    5. '(c' → logprob: -14.141671180725098
    6. '(st' → logprob: -14.391671180725098
    7. '```' → logprob: -16.51667022705078
    8. 'b' → logprob: -16.76667022705078
    9. '[c' → logprob: -17.01667022705078
    10. '	c' → logprob: -17.01667022705078

Token 1341: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016267085447907448
    2. ',c' → logprob: -4.1412672996521
    3. '+' → logprob: -9.016266822814941
    4. 'c' → logprob: -9.641266822814941
    5. ' ,' → logprob: -11.391266822814941
    6. 'root' → logprob: -11.766266822814941
    7. ',
' → logprob: -11.766266822814941
    8. '[c' → logprob: -12.516266822814941
    9. '(c' → logprob: -12.766266822814941
    10. '+,' → logprob: -12.891266822814941

Token 1342: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.318681188422488e-05
    2. ' diff' → logprob: -11.87501335144043
    3. 'ch' → logprob: -12.12501335144043
    4. '(diff' → logprob: -14.75001335144043
    5. '	diff' → logprob: -16.00001335144043
    6. 'c' → logprob: -16.12501335144043
    7. 'dif' → logprob: -17.25001335144043
    8. 'd' → logprob: -17.50001335144043
    9. '.diff' → logprob: -18.50001335144043
    10. '_diff' → logprob: -18.75001335144043

Token 1343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003837213444057852
    2. ',c' → logprob: -7.8753838539123535
    3. ' ,' → logprob: -13.250383377075195
    4. ',
' → logprob: -14.500383377075195
    5. 'c' → logprob: -14.750383377075195
    6. '```' → logprob: -15.250383377075195
    7. ',ch' → logprob: -15.500383377075195
    8. ')' → logprob: -15.875383377075195
    9. '           ' → logprob: -16.000383377075195
    10. '_,' → logprob: -17.625383377075195

Token 1344: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008614808320999146
    2. ' c' → logprob: -4.758615016937256
    3. '	c' → logprob: -16.258615493774414
    4. '   ' → logprob: -16.508615493774414
    5. ')c' → logprob: -16.758615493774414
    6. ' ' → logprob: -17.758615493774414
    7. '  ' → logprob: -17.883615493774414
    8. '           ' → logprob: -18.008615493774414
    9. '(c' → logprob: -18.258615493774414
    10. '       ' → logprob: -18.883615493774414

Token 1345: '+' (ID: 10)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1304374784231186
    2. '+' → logprob: -2.5054373741149902
    3. ',c' → logprob: -3.8804373741149902
    4. ',' → logprob: -4.13043737411499
    5. ')' → logprob: -6.75543737411499
    6. 'diff' → logprob: -6.88043737411499
    7. '+c' → logprob: -6.88043737411499
    8. ')c' → logprob: -8.130437850952148
    9. '```' → logprob: -9.130437850952148
    10. ' +' → logprob: -9.505437850952148

Token 1346: 'diff' (ID: 31460)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002806656062602997
    2. 'diff' → logprob: -5.877806663513184
    3. ' c' → logprob: -14.002806663513184
    4. '```' → logprob: -14.627806663513184
    5. '
' → logprob: -16.002805709838867
    6. '	diff' → logprob: -16.627805709838867
    7. '   ' → logprob: -16.752805709838867
    8. 'ch' → logprob: -16.877805709838867
    9. '	c' → logprob: -17.127805709838867
    10. ' diff' → logprob: -17.127805709838867

Token 1347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4346620440483093
    2. ')
' → logprob: -1.184662103652954
    3. '()' → logprob: -3.184662103652954
    4. '()
' → logprob: -6.184661865234375
    5. '())
' → logprob: -6.434661865234375
    6. '())' → logprob: -6.809661865234375
    7. ')[' → logprob: -8.559661865234375
    8. '       ' → logprob: -9.809661865234375
    9. '```' → logprob: -9.809661865234375
    10. ')
' → logprob: -10.309661865234375

Token 1348: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8199727535247803
    2. ' if' → logprob: -1.1949727535247803
    3. '[' → logprob: -2.1949727535247803
    4. '           ' → logprob: -3.3199727535247803
    5. '               ' → logprob: -3.3199727535247803
    6. '                   ' → logprob: -3.9449727535247803
    7. '```' → logprob: -4.069972991943359
    8. 'if' → logprob: -4.319972991943359
    9. '<|end|>' → logprob: -5.069972991943359
    10. '	if' → logprob: -5.319972991943359

Token 1349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39036527276039124
    2. ' if' → logprob: -1.1403652429580688
    3. 'print' → logprob: -5.765365123748779
    4. '               ' → logprob: -8.765365600585938
    5. ' print' → logprob: -8.890365600585938
    6. '
' → logprob: -10.265365600585938
    7. '                   ' → logprob: -11.140365600585938
    8. '	if' → logprob: -12.640365600585938
    9. '```' → logprob: -12.640365600585938
    10. 'val' → logprob: -14.015365600585938

Token 1350: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.3663626305060461e-05
    2. ' ch' → logprob: -11.75001335144043
    3. 'chr' → logprob: -12.25001335144043
    4. '(ch' → logprob: -14.25001335144043
    5. 'ord' → logprob: -15.50001335144043
    6. '	ch' → logprob: -17.50001335144043
    7. '   ' → logprob: -18.75001335144043
    8. '_ch' → logprob: -19.37501335144043
    9. 'st' → logprob: -19.87501335144043
    10. '
' → logprob: -20.25001335144043

Token 1351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008714676834642887
    2. '[' → logprob: -4.75871467590332
    3. '```' → logprob: -10.63371467590332
    4. '=' → logprob: -11.25871467590332
    5. '(' → logprob: -11.75871467590332
    6. 'ch' → logprob: -11.88371467590332
    7. 'val' → logprob: -11.88371467590332
    8. '               ' → logprob: -12.13371467590332
    9. '_val' → logprob: -12.13371467590332
    10. '#' → logprob: -12.25871467590332

Token 1352: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.619311974034645e-05
    2. '()[' → logprob: -10.625036239624023
    3. '(' → logprob: -11.625036239624023
    4. '```' → logprob: -13.750036239624023
    5. '0' → logprob: -14.125036239624023
    6. '<' → logprob: -15.625036239624023
    7. ' ' → logprob: -15.625036239624023
    8. ')[' → logprob: -15.750036239624023
    9. ' [' → logprob: -15.875036239624023
    10. '
' → logprob: -16.125036239624023

Token 1353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005680450703948736
    2. '2' → logprob: -7.50056791305542
    3. '1' → logprob: -11.375568389892578
    4. '(' → logprob: -12.750568389892578
    5. '[' → logprob: -14.625568389892578
    6. '
' → logprob: -15.375568389892578
    7. '```' → logprob: -17.250568389892578
    8. ':' → logprob: -17.500568389892578
    9. ' ' → logprob: -17.875568389892578
    10. '{' → logprob: -18.063068389892578

Token 1354: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.017930302768945694
    2. '<' → logprob: -4.267930507659912
    3. ' >' → logprob: -5.642930507659912
    4. '>' → logprob: -9.767930030822754
    5. '<int' → logprob: -9.892930030822754
    6. '[' → logprob: -10.517930030822754
    7. ')' → logprob: -10.892930030822754
    8. '<char' → logprob: -11.267930030822754
    9. '<class' → logprob: -12.392930030822754
    10. ')<' → logprob: -12.517930030822754

Token 1355: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5772097706794739
    2. '<' → logprob: -0.8272097706794739
    3. ' >' → logprob: -7.327209949493408
    4. '>' → logprob: -7.952209949493408
    5. '[' → logprob: -8.95220947265625
    6. '<int' → logprob: -10.07720947265625
    7. '<char' → logprob: -10.45220947265625
    8. ' ch' → logprob: -11.70220947265625
    9. '<th' → logprob: -11.82720947265625
    10. ' ' → logprob: -11.82720947265625

Token 1356: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.306760805164231e-05
    2. ' ch' → logprob: -11.25001335144043
    3. '	ch' → logprob: -20.87501335144043
    4. '_ch' → logprob: -23.87501335144043
    5. '(ch' → logprob: -24.50001335144043
    6. '[ch' → logprob: -24.50001335144043
    7. ',ch' → logprob: -24.62501335144043
    8. 'Ch' → logprob: -25.62501335144043
    9. '
' → logprob: -26.37501335144043
    10. '  ' → logprob: -27.00001335144043

Token 1357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.959636033978313e-05
    2. '[' → logprob: -9.875089645385742
    3. 'ch' → logprob: -10.375089645385742
    4. '[ch' → logprob: -13.000089645385742
    5. ' ch' → logprob: -13.250089645385742
    6. '1' → logprob: -13.250089645385742
    7. '       ' → logprob: -15.750089645385742
    8. '           ' → logprob: -15.750089645385742
    9. '(ch' → logprob: -15.875089645385742
    10. '   ' → logprob: -15.875089645385742

Token 1358: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038443657103925943
    2. '0' → logprob: -7.875384330749512
    3. '(' → logprob: -13.000384330749512
    4. '```' → logprob: -14.000384330749512
    5. '1' → logprob: -14.625384330749512
    6. '   ' → logprob: -14.750384330749512
    7. '       ' → logprob: -16.375385284423828
    8. '           ' → logprob: -17.250385284423828
    9. ' [' → logprob: -17.375385284423828
    10. '#' → logprob: -17.500385284423828

Token 1359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.125003814697266
    3. '[' → logprob: -13.625003814697266
    4. '2' → logprob: -15.125003814697266
    5. '```' → logprob: -15.625003814697266
    6. ' ' → logprob: -16.062503814697266
    7. '   ' → logprob: -16.625003814697266
    8. 'ch' → logprob: -17.625003814697266
    9. '3' → logprob: -17.687503814697266
    10. '``' → logprob: -17.750003814697266

Token 1360: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0648176670074463
    2. ':
' → logprob: -1.1898176670074463
    3. ':' → logprob: -1.3148176670074463
    4. '):' → logprob: -2.9398176670074463
    5. '               ' → logprob: -4.189817428588867
    6. '                   ' → logprob: -4.689817428588867
    7. '():
' → logprob: -5.689817428588867
    8. '<|end|>' → logprob: -8.064817428588867
    9. ''):
' → logprob: -8.189817428588867
    10. ']:
' → logprob: -8.314817428588867

Token 1361: '                   ' (ID: 699)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49549439549446106
    2. '                   ' → logprob: -1.2454943656921387
    3. '               ' → logprob: -2.9954943656921387
    4. ' print' → logprob: -3.9954943656921387
    5. '```' → logprob: -4.745494365692139
    6. '                       ' → logprob: -4.995494365692139
    7. ':
' → logprob: -5.245494365692139
    8. '   ' → logprob: -6.495494365692139
    9. '                               ' → logprob: -6.620494365692139
    10. '(print' → logprob: -6.745494365692139

Token 1362: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.517272024415433e-05
    2. ' print' → logprob: -9.500075340270996
    3. '                   ' → logprob: -15.875075340270996
    4. 'python' → logprob: -16.62507438659668
    5. '	print' → logprob: -16.62507438659668
    6. '```' → logprob: -16.87507438659668
    7. 'printf' → logprob: -19.00007438659668
    8. 'pr' → logprob: -19.87507438659668
    9. '.print' → logprob: -20.50007438659668
    10. '
' → logprob: -20.50007438659668

Token 1363: '('' (ID: 706)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.3215678930282593
    2. '('' → logprob: -1.3215678930282593
    3. 's' → logprob: -5.321568012237549
    4. '`s' → logprob: -6.571568012237549
    5. '(' → logprob: -6.696568012237549
    6. ''t' → logprob: -8.19656753540039
    7. ''S' → logprob: -8.69656753540039
    8. ''' → logprob: -9.07156753540039
    9. '"s' → logprob: -9.44656753540039
    10. 't' → logprob: -9.82156753540039

Token 1364: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013474537990987301
    2. ''s' → logprob: -4.388474464416504
    3. ''' → logprob: -7.138474464416504
    4. ''<' → logprob: -9.888474464416504
    5. '`s' → logprob: -10.263474464416504
    6. ''S' → logprob: -10.263474464416504
    7. '<s' → logprob: -11.138474464416504
    8. '"s' → logprob: -11.263474464416504
    9. '
' → logprob: -12.263474464416504
    10. 'l' → logprob: -12.763474464416504

Token 1365: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07337866723537445
    2. '')
' → logprob: -2.698378562927246
    3. 't' → logprob: -6.198378562927246
    4. '<|end|>' → logprob: -7.198378562927246
    5. ')' → logprob: -7.823378562927246
    6. 'else' → logprob: -9.573378562927246
    7. '")' → logprob: -9.823378562927246
    8. 's' → logprob: -9.948378562927246
    9. ')
' → logprob: -10.573378562927246
    10. '```' → logprob: -10.948378562927246

Token 1366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2635142207145691
    2. 'else' → logprob: -1.5135142803192139
    3. ' else' → logprob: -5.138514041900635
    4. '			' → logprob: -6.013514041900635
    5. '<|end|>' → logprob: -6.638514041900635
    6. '```' → logprob: -7.013514041900635
    7. 'elif' → logprob: -7.513514041900635
    8. '		       ' → logprob: -9.763514518737793
    9. ')' → logprob: -10.013514518737793
    10. '                   ' → logprob: -10.013514518737793

Token 1367: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4760919511318207
    2. '               ' → logprob: -0.9760919809341431
    3. 'elif' → logprob: -6.6010918617248535
    4. ' else' → logprob: -7.3510918617248535
    5. '			' → logprob: -12.226092338562012
    6. '                   ' → logprob: -12.851092338562012
    7. '```' → logprob: -13.476092338562012
    8. '           ' → logprob: -14.101092338562012
    9. '              ' → logprob: -14.476092338562012
    10. ' elif' → logprob: -14.601092338562012

Token 1368: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00048501143464818597
    2. '                       ' → logprob: -8.75048542022705
    3. '                  ' → logprob: -9.37548542022705
    4. ':' → logprob: -9.37548542022705
    5. ':
' → logprob: -9.50048542022705
    6. '               ' → logprob: -10.87548542022705
    7. '                    ' → logprob: -11.12548542022705
    8. '           ' → logprob: -11.25048542022705
    9. '   ' → logprob: -11.62548542022705
    10. '                           ' → logprob: -12.25048542022705

Token 1369: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013265990652143955
    2. 'print' → logprob: -4.888266086578369
    3. '```' → logprob: -5.388266086578369
    4. '           ' → logprob: -8.388265609741211
    5. '                  ' → logprob: -8.513265609741211
    6. '                       ' → logprob: -8.888265609741211
    7. '               ' → logprob: -9.013265609741211
    8. '   ' → logprob: -9.513265609741211
    9. '                    ' → logprob: -9.513265609741211
    10. ' print' → logprob: -9.513265609741211

Token 1370: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.554343366995454e-05
    2. '                   ' → logprob: -9.875085830688477
    3. '```' → logprob: -10.625085830688477
    4. ' print' → logprob: -11.625085830688477
    5. '               ' → logprob: -15.375085830688477
    6. '	print' → logprob: -15.625085830688477
    7. '           ' → logprob: -16.125085830688477
    8. '                  ' → logprob: -16.375085830688477
    9. '``' → logprob: -16.375085830688477
    10. '                       ' → logprob: -17.125085830688477

Token 1371: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.2617008400848135e-05
    2. '(' → logprob: -10.750032424926758
    3. ''t' → logprob: -12.125032424926758
    4. '(
' → logprob: -13.250032424926758
    5. ''s' → logprob: -13.750032424926758
    6. 't' → logprob: -13.750032424926758
    7. '(t' → logprob: -14.875032424926758
    8. '                   ' → logprob: -15.250032424926758
    9. '("' → logprob: -15.375032424926758
    10. '               ' → logprob: -15.500032424926758

Token 1372: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006718571297824383
    2. ''t' → logprob: -5.006718635559082
    3. '`t' → logprob: -12.881718635559082
    4. ''' → logprob: -15.256718635559082
    5. '‘t' → logprob: -15.631718635559082
    6. ' t' → logprob: -16.256717681884766
    7. '   ' → logprob: -17.006717681884766
    8. '	t' → logprob: -17.381717681884766
    9. 'e' → logprob: -18.131717681884766
    10. ')t' → logprob: -18.256717681884766

Token 1373: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0355607271194458
    2. ')' → logprob: -3.4105606079101562
    3. '<|end|>' → logprob: -6.535560607910156
    4. '')
' → logprob: -8.535560607910156
    5. '```' → logprob: -9.035560607910156
    6. '")' → logprob: -9.785560607910156
    7. '`)' → logprob: -10.535560607910156
    8. '           ' → logprob: -10.660560607910156
    9. '               ' → logprob: -11.410560607910156
    10. '                   ' → logprob: -12.285560607910156

Token 1374: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20410819351673126
    2. '<|end|>' → logprob: -1.7041082382202148
    3. '```' → logprob: -6.829108238220215
    4. '<|end|>' → logprob: -6.829108238220215
    5. '
' → logprob: -8.704108238220215
    6. '#' → logprob: -9.079108238220215
    7. '}' → logprob: -9.704108238220215
    8. '   ' → logprob: -10.204108238220215
    9. ']' → logprob: -11.204108238220215
    10. '...' → logprob: -11.329108238220215

Token 1375: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.19661690294742584
    2. '__' → logprob: -1.8216168880462646
    3. ' main' → logprob: -4.571617126464844
    4. '()' → logprob: -6.571617126464844
    5. 'main' → logprob: -6.696617126464844
    6. 'if' → logprob: -6.946617126464844
    7. ' if' → logprob: -7.446617126464844
    8. '_' → logprob: -7.446617126464844
    9. '_main' → logprob: -7.446617126464844
    10. ' _' → logprob: -7.571617126464844

Token 1376: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04232078418135643
    2. ' ==' → logprob: -4.167320728302002
    3. '==' → logprob: -4.167320728302002
    4. '```' → logprob: -5.292320728302002
    5. 'name' → logprob: -6.167320728302002
    6. '.__' → logprob: -6.792320728302002
    7. '=="' → logprob: -7.542320728302002
    8. '=='' → logprob: -8.29232120513916
    9. '__.__' → logprob: -8.29232120513916
    10. 'main' → logprob: -8.54232120513916

Token 1377: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012103531043976545
    2. '__.__' → logprob: -7.1262102127075195
    3. '__('' → logprob: -8.87621021270752
    4. '```' → logprob: -9.25121021270752
    5. '==' → logprob: -9.62621021270752
    6. '__["' → logprob: -11.00121021270752
    7. '__.' → logprob: -11.00121021270752
    8. '=='' → logprob: -11.37621021270752
    9. '__[' → logprob: -11.75121021270752
    10. '__":
' → logprob: -11.75121021270752

Token 1378: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.45112717151641846
    2. ' ==' → logprob: -1.5761271715164185
    3. '__' → logprob: -1.9511271715164185
    4. '```' → logprob: -5.076127052307129
    5. '=="' → logprob: -5.451127052307129
    6. '=='' → logprob: -6.451127052307129
    7. '__.__' → logprob: -7.701127052307129
    8. '**' → logprob: -7.701127052307129
    9. '.' → logprob: -8.201127052307129
    10. '.__' → logprob: -8.701127052307129

Token 1379: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.038214996457099915
    2. '"' → logprob: -3.288214921951294
    3. '__' → logprob: -8.663214683532715
    4. '`' → logprob: -14.663214683532715
    5. ' '__' → logprob: -16.91321563720703
    6. 'main' → logprob: -17.41321563720703
    7. ''name' → logprob: -17.53821563720703
    8. ''m' → logprob: -17.66321563720703
    9. ''post' → logprob: -17.66321563720703
    10. ' "__' → logprob: -17.78821563720703

Token 1380: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011471817269921303
    2. '__' → logprob: -4.511471748352051
    3. ''' → logprob: -8.51147174835205
    4. '"' → logprob: -8.51147174835205
    5. 'name' → logprob: -10.88647174835205
    6. '_main' → logprob: -14.13647174835205
    7. 'built' → logprob: -14.13647174835205
    8. ' main' → logprob: -14.51147174835205
    9. '```' → logprob: -15.88647174835205
    10. ''name' → logprob: -16.011472702026367

Token 1381: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04353722184896469
    2. '__' → logprob: -4.043537139892578
    3. '__':
' → logprob: -4.168537139892578
    4. '.' → logprob: -5.793537139892578
    5. '():
' → logprob: -6.418537139892578
    6. '">
' → logprob: -6.418537139892578
    7. '```' → logprob: -7.793537139892578
    8. '[' → logprob: -7.918537139892578
    9. '<|end|>' → logprob: -7.918537139892578
    10. ':
' → logprob: -8.293537139892578

Token 1382: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001830410328693688
    2. '	main' → logprob: -8.75018310546875
    3. ' main' → logprob: -11.00018310546875
    4. '   ' → logprob: -12.12518310546875
    5. '_main' → logprob: -13.75018310546875
    6. '```' → logprob: -14.25018310546875
    7. '(main' → logprob: -15.50018310546875
    8. 'run' → logprob: -16.12518310546875
    9. '
' → logprob: -16.62518310546875
    10. 'import' → logprob: -17.00018310546875

Token 1383: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.750000953674316
    3. '	main' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.25
    5. '_main' → logprob: -20.625
    6. '.main' → logprob: -22.125
    7. '(main' → logprob: -22.25
    8. 'import' → logprob: -22.5
    9. '```' → logprob: -23.875
    10. 'Main' → logprob: -24.25

Token 1384: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1382
Tokens correctement prédits (1ère position, stricte): 677
Tokens correctement prédits (1ère position, avec adaptation): 744
Tokens correctement prédits (top 10): 1285
Précision stricte (1ère position): 48.99%
Précision adaptée (1ère position): 53.84%
Précision (top 10): 92.98%
================================================================================
