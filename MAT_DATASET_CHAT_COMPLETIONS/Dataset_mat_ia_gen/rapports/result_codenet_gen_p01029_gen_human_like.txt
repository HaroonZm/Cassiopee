================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

sys.setrecursionlimit(10**7)
input = sys.stdin.readline

V, E = map(int, input().split())
a = list(input().strip().split())

graph = [[] for _ in range(V)]
for _ in range(E):
    s, t = map(int, input().split())
    graph[s].append(t)
    graph[t].append(s)

# letters assigned to each node; None if not assigned yet
assigned = [None if x == '?' else x for x in a]

# For each node, store the set of letters used by neighbors
# But since degree <= 25, we can handle neighbors directly

# We will assign letters to nodes with initially '?' in order of their index,
# but only after taking care to assign the lex smallest letter not used by neighbor letters.
# As the problem states:
#  - While there is any '.' node unassigned:
#     - Select one unassigned node
#     - Assign smallest letter not used by neighbors
#  - Repeat until all assigned.

# To get lex smallest overall, assign in order of node index, each node when it becomes available:
# But problem says pick any unassigned node, so choosing in ascending index order is acceptable to get lex min.

# The problem states "そのような丸が存在しない場合はこの処理を終了する" - so keep assigning until no nodes remain unassigned

# To implement efficiently:
# We'll repeatedly try to assign letters to any unassigned node.
# But that can be costly to scan all nodes repeatedly.

# Optimization:
# Use a queue or priority queue of nodes that can be assigned now.
# Initially, nodes with '?' and at least one neighbor with assigned letter can't have all letters banned.
# So we must process nodes whose forbidden letters sets are less than 26.

# Initially, forbidden sets are calculated.

# However, neighbors may not be assigned, so forbidden sets may be empty.

# To model this, keep track for each node of letters assigned to neighbors
# Since some neighbors may also be unassigned, letters assigned only grow as we assign nodes.

# Because no node can have degree >= 26, for each node at least one letter is available.

# Approach:
# For each node with '?', we wait until assigned letters of neighbors are known.
# But since the process is sequential, after we assign a letter to a node,
# we update the forbidden letters of its neighbors.

# So we can use a queue of nodes ready to assign, i.e. nodes with '?' and where we can assign as forbidden letters known.

# Because the problem says to choose any unassigned node, to minimize lex order, pick the one with smallest index.

# So maintain a priority queue of such nodes.

# Initially, nodes with '?' are all candidates to assign.

# But assigning a letter before their neighbors' letters assigned may block some choices?

# Actually this problem is a typical greedy coloring problem,
# similar to graph coloring with 26 colors, with the twist that some nodes are pre-colored.

# The greedy approach is:
# For each uncolored node, assign the smallest letter not assigned to its neighbors.

# Since existing nodes with letters are fixed, and no node has degree >= 26, always possible.

# Implement greedy as:
# For i in [0..V-1]:
#    if assigned[i] is None:
#       forbidden = letters assigned to neighbors
#       assign smallest letter not in forbidden
#       assigned[i] = letter

# Because problem says "the process repeats while there exists any unassigned node".

# For performance, we do a single pass from 0 to V-1 assigning letters to unassigned nodes in order.

# This is justified because the problem wants lex smallest string overall,
# so assigning in ascending node order and assigning smallest possible letter each time is correct.

res = assigned[:]

for i in range(V):
    if res[i] is not None:
        continue
    forbidden = set()
    for nb in graph[i]:
        if res[nb] is not None:
            forbidden.add(res[nb])
    for c in 'abcdefghijklmnopqrstuvwxyz':
        if c not in forbidden:
            res[i] = c
            break

print(''.join(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. '#' → logprob: -13.625036239624023
    4. '_' → logprob: -14.375036239624023
    5. 'ify' → logprob: -14.750036239624023
    6. ')' → logprob: -15.250036239624023
    7. 's' → logprob: -15.250036239624023
    8. ',' → logprob: -15.250036239624023
    9. 'u' → logprob: -15.375036239624023
    10. '

' → logprob: -15.375036239624023

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4816220998764038
    2. '
' → logprob: -1.9816220998764038
    3. '\' → logprob: -2.7316222190856934
    4. '\n' → logprob: -2.8566222190856934
    5. 'def' → logprob: -3.1066222190856934
    6. '```' → logprob: -3.6066222190856934
    7. '.
' → logprob: -4.231622219085693
    8. 'import' → logprob: -4.356622219085693
    9. '' → logprob: -5.481622219085693
    10. 'from' → logprob: -5.481622219085693

Token 8: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.664371848164592e-05
    2. ' .' → logprob: -12.250016212463379
    3. '.readline' → logprob: -13.625016212463379
    4. '.import' → logprob: -13.750016212463379
    5. '.stdout' → logprob: -13.750016212463379
    6. '.`' → logprob: -14.250016212463379
    7. '.​' → logprob: -14.250016212463379
    8. '."""' → logprob: -14.250016212463379
    9. '.user' → logprob: -14.500016212463379
    10. '.)' → logprob: -14.750016212463379

Token 9: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.7170729041099548
    2. '_version' → logprob: -1.5920729637145996
    3. '_limit' → logprob: -2.2170729637145996
    4. '_rec' → logprob: -3.5920729637145996
    5. '_trace' → logprob: -3.5920729637145996
    6. '_execution' → logprob: -3.7170729637145996
    7. '_int' → logprob: -3.8420729637145996
    8. '_encoding' → logprob: -4.2170729637146
    9. 'trace' → logprob: -4.7170729637146
    10. '_threshold' → logprob: -4.7170729637146

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0038114727940410376
    2. 'limit' → logprob: -6.003811359405518
    3. 'urs' → logprob: -7.128811359405518
    4. 'ur' → logprob: -8.378811836242676
    5. 'ursive' → logprob: -8.753811836242676
    6. 'ursor' → logprob: -10.503811836242676
    7. 'urf' → logprob: -10.878811836242676
    8. 'urse' → logprob: -11.128811836242676
    9. 'ut' → logprob: -11.253811836242676
    10. 'utf' → logprob: -11.503811836242676

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.941161776310764e-05
    2. '_limit' → logprob: -10.375039100646973
    3. ' limit' → logprob: -11.875039100646973
    4. 'depth' → logprob: -14.000039100646973
    5. '.limit' → logprob: -16.12504005432129
    6. 'lim' → logprob: -16.25004005432129
    7. 'Limit' → logprob: -16.87504005432129
    8. '-limit' → logprob: -17.62504005432129
    9. '(limit' → logprob: -18.25004005432129
    10. '_LIMIT' → logprob: -18.25004005432129

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.2994620242971e-06
    2. ' (' → logprob: -12.125008583068848
    3. '(
' → logprob: -13.625008583068848
    4. '((' → logprob: -14.625008583068848
    5. '(

' → logprob: -14.625008583068848
    6. '(None' → logprob: -16.00000762939453
    7. '```' → logprob: -16.25000762939453
    8. '("("' → logprob: -16.37500762939453
    9. '('' → logprob: -16.62500762939453
    10. '()' → logprob: -16.87500762939453

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023251652717590332
    2. '100' → logprob: -3.773251533508301
    3. '500' → logprob: -13.1482515335083
    4. ' ' → logprob: -13.8982515335083
    5. '999' → logprob: -13.8982515335083
    6. '1' → logprob: -14.1482515335083
    7. '300' → logprob: -14.3982515335083
    8. '(' → logprob: -14.6482515335083
    9. '   ' → logprob: -14.8982515335083
    10. '200' → logprob: -15.8982515335083

Token 14: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3288334608078003
    2. '000' → logprob: -1.3288334608078003
    3. '00' → logprob: -4.82883358001709
    4. '6' → logprob: -5.07883358001709
    5. '7' → logprob: -6.82883358001709
    6. '5' → logprob: -9.32883358001709
    7. '4' → logprob: -10.57883358001709
    8. ')' → logprob: -11.70383358001709
    9. '07' → logprob: -12.07883358001709
    10. '8' → logprob: -12.20383358001709

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00048083928413689137
    2. '9' → logprob: -7.750480651855469
    3. '8' → logprob: -10.125480651855469
    4. '6' → logprob: -11.500480651855469
    5. '```' → logprob: -19.75048065185547
    6. '**' → logprob: -21.25048065185547
    7. '``' → logprob: -21.87548065185547
    8. ' ' → logprob: -22.37548065185547
    9. ')' → logprob: -22.62548065185547
    10. '

' → logprob: -23.25048065185547

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.125000953674316
    4. ')
' → logprob: -15.875000953674316
    5. '```' → logprob: -18.125
    6. ')))' → logprob: -18.375
    7. '),' → logprob: -18.5
    8. ')

' → logprob: -19.0
    9. ')`' → logprob: -19.125
    10. '）' → logprob: -19.125

Token 17: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7856675982475281
    2. 'def' → logprob: -1.1606676578521729
    3. '
' → logprob: -1.6606676578521729
    4. '
' → logprob: -4.285667419433594
    5. '```' → logprob: -4.535667419433594
    6. 'class' → logprob: -5.160667419433594
    7. '\' → logprob: -5.535667419433594
    8. 'n' → logprob: -6.160667419433594
    9. '' → logprob: -6.910667419433594
    10. '\n' → logprob: -7.160667419433594

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002417276380583644
    2. '()' → logprob: -6.377417087554932
    3. '40' → logprob: -8.62741756439209
    4. '('' → logprob: -8.75241756439209
    5. '```' → logprob: -9.12741756439209
    6. ')' → logprob: -10.00241756439209
    7. '("("' → logprob: -10.25241756439209
    8. ''' → logprob: -10.25241756439209
    9. '("")' → logprob: -10.50241756439209
    10. '"' → logprob: -11.00241756439209

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06557298451662064
    2. ' input' → logprob: -2.94057297706604
    3. 'sys' → logprob: -4.940573215484619
    4. 'input' → logprob: -5.690573215484619
    5. ' lambda' → logprob: -9.565572738647461
    6. '	sys' → logprob: -11.315572738647461
    7. ' ' → logprob: -11.690572738647461
    8. '=sys' → logprob: -11.815572738647461
    9. 'lambda' → logprob: -12.940572738647461
    10. ' raw' → logprob: -13.815572738647461

Token 20: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3891209363937378
    2. '.' → logprob: -1.3891209363937378
    3. '.stdin' → logprob: -2.6391210556030273
    4. ' .' → logprob: -7.264121055603027
    5. '.stdout' → logprob: -8.389121055603027
    6. '.read' → logprob: -8.764121055603027
    7. '.setdefault' → logprob: -9.139121055603027
    8. '.input' → logprob: -9.889121055603027
    9. '..' → logprob: -9.889121055603027
    10. '.\' → logprob: -10.139121055603027

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000581388536375016
    2. '.read' → logprob: -8.125581741333008
    3. 'read' → logprob: -8.375581741333008
    4. '.' → logprob: -10.125581741333008
    5. '.buffer' → logprob: -12.000581741333008
    6. '.Read' → logprob: -12.875581741333008
    7. 'buffer' → logprob: -13.125581741333008
    8. ' readline' → logprob: -13.375581741333008
    9. '.readlines' → logprob: -13.625581741333008
    10. '```' → logprob: -15.000581741333008

Token 22: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49593299627304077
    2. 'n' → logprob: -0.9959329962730408
    3. '\' → logprob: -4.6209330558776855
    4. 'N' → logprob: -5.3709330558776855
    5. 'class' → logprob: -5.9959330558776855
    6. '\n' → logprob: -6.1209330558776855
    7. 'd' → logprob: -7.2459330558776855
    8. '(n' → logprob: -7.9959330558776855
    9. 'for' → logprob: -8.370932579040527
    10. '#' → logprob: -8.370932579040527

Token 23: 'V' (ID: 53)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7376962900161743
    2. 'def' → logprob: -0.7376962900161743
    3. 'class' → logprob: -3.2376961708068848
    4. 'N' → logprob: -5.987696170806885
    5. '
' → logprob: -7.487696170806885
    6. '

' → logprob: -7.737696170806885
    7. 'd' → logprob: -7.737696170806885
    8. '\' → logprob: -8.737696647644043
    9. '\n' → logprob: -10.237696647644043
    10. '    
' → logprob: -10.612696647644043

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5936134457588196
    2. '=' → logprob: -1.3436133861541748
    3. ',' → logprob: -1.7186133861541748
    4. ' ,' → logprob: -5.593613624572754
    5. ' ' → logprob: -5.843613624572754
    6. '.' → logprob: -8.468613624572754
    7. ')' → logprob: -8.718613624572754
    8. '[' → logprob: -9.343613624572754
    9. '_' → logprob: -9.593613624572754
    10. ' N' → logprob: -9.718613624572754

Token 25: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.2812819182872772
    2. ' E' → logprob: -1.4062819480895996
    3. ' ' → logprob: -9.156281471252441
    4. 'K' → logprob: -11.406281471252441
    5. ' K' → logprob: -12.656281471252441
    6. ',E' → logprob: -13.156281471252441
    7. 'space' → logprob: -13.406281471252441
    8. ' =' → logprob: -13.531281471252441
    9. 'V' → logprob: -13.531281471252441
    10. 'Q' → logprob: -14.281281471252441

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5830782651901245
    2. '=' → logprob: -0.8330782651901245
    3. ',' → logprob: -4.958078384399414
    4. ' ,' → logprob: -9.958078384399414
    5. ' ' → logprob: -10.958078384399414
    6. '<|end|>' → logprob: -11.958078384399414
    7. ' =
' → logprob: -12.333078384399414
    8. ')' → logprob: -12.833078384399414
    9. '=input' → logprob: -13.083078384399414
    10. ' =",' → logprob: -13.458078384399414

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12692894041538239
    2. 'map' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.87692928314209
    4. '	map' → logprob: -15.25192928314209
    5. '(map' → logprob: -16.501928329467773
    6. ' list' → logprob: -17.001928329467773
    7. ' m' → logprob: -17.626928329467773
    8. 'list' → logprob: -17.751928329467773
    9. 'input' → logprob: -17.751928329467773
    10. 'm' → logprob: -17.876928329467773

Token 28: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6445746421813965
    2. '(int' → logprob: -0.8945746421813965
    3. '(lambda' → logprob: -2.8945746421813965
    4. '(input' → logprob: -4.7695746421813965
    5. '(str' → logprob: -6.5195746421813965
    6. '<|end|>' → logprob: -8.019575119018555
    7. '((' → logprob: -9.269575119018555
    8. '(
' → logprob: -9.519575119018555
    9. '(eval' → logprob: -9.769575119018555
    10. 'int' → logprob: -9.894575119018555

Token 29: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46376216411590576
    2. '(input' → logprob: -1.2137621641159058
    3. ',' → logprob: -3.0887622833251953
    4. '(sys' → logprob: -4.338762283325195
    5. '(int' → logprob: -5.088762283325195
    6. ',input' → logprob: -5.088762283325195
    7. ')' → logprob: -6.338762283325195
    8. 'input' → logprob: -8.463762283325195
    9. '(str' → logprob: -8.963762283325195
    10. '(),' → logprob: -9.338762283325195

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008663970977067947
    2. ' input' → logprob: -4.758664131164551
    3. 'sys' → logprob: -10.13366413116455
    4. ' sys' → logprob: -12.38366413116455
    5. 'map' → logprob: -12.88366413116455
    6. '(input' → logprob: -13.00866413116455
    7. ' ' → logprob: -15.63366413116455
    8. 'int' → logprob: -15.75866413116455
    9. ',input' → logprob: -16.383663177490234
    10. ')' → logprob: -16.633663177490234

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.010562080889940262
    2. '()' → logprob: -4.635561943054199
    3. '())' → logprob: -7.135561943054199
    4. '(' → logprob: -13.5105619430542
    5. '()]' → logprob: -14.0105619430542
    6. '()))' → logprob: -14.1355619430542
    7. ')' → logprob: -14.2605619430542
    8. '()[' → logprob: -14.3855619430542
    9. '());' → logprob: -14.3855619430542
    10. ' ().' → logprob: -14.5105619430542

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03826743736863136
    2. 'strip' → logprob: -3.2882673740386963
    3. 'rstrip' → logprob: -8.413267135620117
    4. ')' → logprob: -13.538267135620117
    5. '(split' → logprob: -14.038267135620117
    6. ' split' → logprob: -14.288267135620117
    7. '().' → logprob: -14.663267135620117
    8. 'read' → logprob: -14.663267135620117
    9. '()' → logprob: -15.913267135620117
    10. 'spl' → logprob: -16.038267135620117

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.423219696851447e-05
    2. '))' → logprob: -10.250083923339844
    3. '())' → logprob: -10.375083923339844
    4. '()' → logprob: -11.375083923339844
    5. '(' → logprob: -13.000083923339844
    6. '),' → logprob: -13.625083923339844
    7. ')`' → logprob: -14.625083923339844
    8. ')
' → logprob: -14.875083923339844
    9. '`)' → logprob: -15.125083923339844
    10. ' )' → logprob: -15.250083923339844

Token 34: 'a' (ID: 64)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.041637107729911804
    2. 'dist' → logprob: -3.6666371822357178
    3. 'parent' → logprob: -4.541636943817139
    4. 'INF' → logprob: -6.541636943817139
    5. 'adj' → logprob: -6.916636943817139
    6. 'distance' → logprob: -7.666636943817139
    7. ' graph' → logprob: -7.791636943817139
    8. 'tree' → logprob: -7.916636943817139
    9. 'dp' → logprob: -8.291637420654297
    10. 'edges' → logprob: -8.541637420654297

Token 35: ' =' (ID: 314)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.2947140038013458
    2. 'd' → logprob: -1.4197139739990234
    3. 'rr' → logprob: -5.794713973999023
    4. ',' → logprob: -5.794713973999023
    5. 'r' → logprob: -6.044713973999023
    6. ',d' → logprob: -6.544713973999023
    7. ' =' → logprob: -7.044713973999023
    8. 'j' → logprob: -8.044713973999023
    9. 'dp' → logprob: -8.044713973999023
    10. 'rray' → logprob: -8.419713973999023

Token 36: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1357148885726929
    2. ' []' → logprob: -1.3857148885726929
    3. ' [' → logprob: -1.5107148885726929
    4. ' [[]' → logprob: -1.7607148885726929
    5. '[int' → logprob: -4.135715007781982
    6. '[' → logprob: -4.135715007781982
    7. '[a' → logprob: -6.885715007781982
    8. '[V' → logprob: -7.135715007781982
    9. '[n' → logprob: -7.635715007781982
    10. '[list' → logprob: -7.885715007781982

Token 37: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3960477113723755
    2. '(' → logprob: -1.1460477113723755
    3. '(range' → logprob: -5.396047592163086
    4. '(int' → logprob: -6.021047592163086
    5. '()' → logprob: -6.646047592163086
    6. 'map' → logprob: -8.021047592163086
    7. '(input' → logprob: -9.271047592163086
    8. '<|end|>' → logprob: -9.521047592163086
    9. '(
' → logprob: -9.771047592163086
    10. '(a' → logprob: -10.146047592163086

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31404268741607666
    2. '())' → logprob: -1.3140426874160767
    3. '()' → logprob: -7.189042568206787
    4. '(' → logprob: -11.439043045043945
    5. ')' → logprob: -11.939043045043945
    6. '()))' → logprob: -12.314043045043945
    7. '();)' → logprob: -14.064043045043945
    8. '()[' → logprob: -14.439043045043945
    9. '());' → logprob: -14.689043045043945
    10. '()]' → logprob: -14.939043045043945

Token 39: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.27004745602607727
    2. 'strip' → logprob: -1.5200474262237549
    3. 'rstrip' → logprob: -4.020047664642334
    4. 'read' → logprob: -12.895047187805176
    5. ' split' → logprob: -15.520047187805176
    6. 'spl' → logprob: -16.020048141479492
    7. 'rs' → logprob: -16.145048141479492
    8. ' strip' → logprob: -16.395048141479492
    9. 'str' → logprob: -17.645048141479492
    10. 'replace' → logprob: -17.770048141479492

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2257966697216034
    2. '())' → logprob: -2.475796699523926
    3. '()' → logprob: -2.725796699523926
    4. '('' → logprob: -3.100796699523926
    5. '(' → logprob: -4.975796699523926
    6. ')' → logprob: -7.975796699523926
    7. '(()' → logprob: -9.600796699523926
    8. '("' → logprob: -10.100796699523926
    9. '("("' → logprob: -10.350796699523926
    10. '()))' → logprob: -11.100796699523926

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. 'spl' → logprob: -16.375
    4. 'rstrip' → logprob: -16.375
    5. 'replace' → logprob: -17.375
    6. '(split' → logprob: -17.375
    7. 'sp' → logprob: -18.75
    8. 'strip' → logprob: -19.125
    9. ')' → logprob: -19.125
    10. '.split' → logprob: -19.625

Token 42: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010433495044708252
    2. '()' → logprob: -4.760433673858643
    3. '('' → logprob: -6.885433673858643
    4. '()))' → logprob: -7.635433673858643
    5. ')' → logprob: -8.885433197021484
    6. '(' → logprob: -9.385433197021484
    7. '(','' → logprob: -10.510433197021484
    8. '(),' → logprob: -10.885433197021484
    9. ' ())' → logprob: -11.260433197021484
    10. '()]' → logprob: -12.010433197021484

Token 43: 'graph' (ID: 7978)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0288732051849365
    2. '<|end|>' → logprob: -1.0288732051849365
    3. '
' → logprob: -2.2788732051849365
    4. ' ' → logprob: -3.5288732051849365
    5. '=' → logprob: -3.5288732051849365
    6. '[' → logprob: -3.7788732051849365
    7. '+' → logprob: -3.7788732051849365
    8. '\n' → logprob: -3.9038732051849365
    9. 'a' → logprob: -4.278873443603516
    10. '0' → logprob: -5.278873443603516

Token 44: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012264199322089553
    2. '=' → logprob: -7.126226425170898
    3. ' =' → logprob: -8.751226425170898
    4. '\[' → logprob: -9.126226425170898
    5. '[]' → logprob: -10.126226425170898
    6. '.' → logprob: -10.376226425170898
    7. ']' → logprob: -11.126226425170898
    8. '.setdefault' → logprob: -11.501226425170898
    9. '[:]' → logprob: -11.626226425170898
    10. '[
' → logprob: -11.876226425170898

Token 45: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012281588278710842
    2. ' [[]' → logprob: -4.76228141784668
    3. '{' → logprob: -5.76228141784668
    4. '{}' → logprob: -7.76228141784668
    5. ' [' → logprob: -9.88728141784668
    6. '[]' → logprob: -10.76228141784668
    7. ' [{}' → logprob: -12.13728141784668
    8. ' {' → logprob: -12.13728141784668
    9. 'default' → logprob: -12.26228141784668
    10. '[{' → logprob: -13.13728141784668

Token 46: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6148139834403992
    2. ' for' → logprob: -0.9898139834403992
    3. ')' → logprob: -2.989814043045044
    4. ',' → logprob: -3.989814043045044
    5. ']' → logprob: -4.739813804626465
    6. '(V' → logprob: -4.989813804626465
    7. '(' → logprob: -6.114813804626465
    8. '()' → logprob: -7.364813804626465
    9. ' (' → logprob: -9.364813804626465
    10. ')]' → logprob: -9.364813804626465

Token 47: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11548762768507004
    2. ' range' → logprob: -2.740487575531006
    3. '(' → logprob: -3.865487575531006
    4. ' _' → logprob: -4.490487575531006
    5. 'range' → logprob: -5.240487575531006
    6. ' in' → logprob: -5.865487575531006
    7. '(range' → logprob: -5.865487575531006
    8. ' i' → logprob: -6.990487575531006
    9. ' ' → logprob: -8.740488052368164
    10. '_range' → logprob: -9.240488052368164

Token 48: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5052164793014526
    2. ' in' → logprob: -1.2552164793014526
    3. 'in' → logprob: -2.255216598510742
    4. ' range' → logprob: -5.005216598510742
    5. '(range' → logprob: -10.005216598510742
    6. 'ange' → logprob: -12.630216598510742
    7. ' ' → logprob: -12.755216598510742
    8. 'i' → logprob: -13.130216598510742
    9. '(' → logprob: -13.505216598510742
    10. '_' → logprob: -14.005216598510742

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246292024850845
    2. ' range' → logprob: -3.7732462882995605
    3. '(range' → logprob: -14.398246765136719
    4. ' ' → logprob: -16.27324676513672
    5. '	range' → logprob: -16.64824676513672
    6. '   ' → logprob: -18.02324676513672
    7. 'r' → logprob: -18.14824676513672
    8. 'rang' → logprob: -18.27324676513672
    9. 'ran' → logprob: -18.52324676513672
    10. ')' → logprob: -18.64824676513672

Token 50: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -4.751746746478602e-05
    2. '(' → logprob: -10.00004768371582
    3. '(range' → logprob: -13.62504768371582
    4. '((' → logprob: -14.50004768371582
    5. ' (' → logprob: -15.62504768371582
    6. 'range' → logprob: -16.25004768371582
    7. '(E' → logprob: -17.25004768371582
    8. ' range' → logprob: -17.37504768371582
    9. ')(' → logprob: -17.62504768371582
    10. '(v' → logprob: -18.25004768371582

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.5822400857578032e-05
    2. ')' → logprob: -11.000025749206543
    3. ']' → logprob: -11.750025749206543
    4. ' )' → logprob: -14.500025749206543
    5. ')]
' → logprob: -16.00002670288086
    6. '+' → logprob: -16.12502670288086
    7. '])' → logprob: -16.37502670288086
    8. '>]' → logprob: -16.50002670288086
    9. ')],' → logprob: -17.12502670288086
    10. ' ]' → logprob: -17.12502670288086

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01746593602001667
    2. ' for' → logprob: -4.392466068267822
    3. '<|end|>' → logprob: -5.392466068267822
    4. ')' → logprob: -8.767465591430664
    5. '
' → logprob: -10.267465591430664
    6. '<|end|>' → logprob: -10.392465591430664
    7. ' ' → logprob: -10.517465591430664
    8. 'i' → logprob: -10.517465591430664
    9. 'a' → logprob: -11.642465591430664
    10. '```' → logprob: -11.642465591430664

Token 53: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.021571537479758263
    2. '_' → logprob: -3.896571636199951
    3. ' range' → logprob: -7.271571636199951
    4. ' ' → logprob: -8.396571159362793
    5. ' i' → logprob: -9.396571159362793
    6. 'range' → logprob: -11.021571159362793
    7. '_range' → logprob: -13.021571159362793
    8. ' V' → logprob: -13.146571159362793
    9. ' ‌' → logprob: -13.521571159362793
    10. ' ' → logprob: -13.521571159362793

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03002665750682354
    2. 'in' → logprob: -3.53002667427063
    3. ' ' → logprob: -8.65502643585205
    4. ' i' → logprob: -10.28002643585205
    5. '_' → logprob: -10.78002643585205
    6. 'n' → logprob: -11.03002643585205
    7. 'i' → logprob: -11.03002643585205
    8. 'range' → logprob: -12.40502643585205
    9. ',' → logprob: -13.15502643585205
    10. ' _' → logprob: -13.40502643585205

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269380897283554
    2. ' range' → logprob: -2.1269381046295166
    3. '(range' → logprob: -12.751937866210938
    4. '	range' → logprob: -12.876937866210938
    5. ' ' → logprob: -13.376937866210938
    6. 'rang' → logprob: -14.626937866210938
    7. 'ange' → logprob: -15.001937866210938
    8. 'ran' → logprob: -15.001937866210938
    9. '_range' → logprob: -15.251937866210938
    10. 'r' → logprob: -15.251937866210938

Token 56: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0006892018136568367
    2. 'E' → logprob: -8.500689506530762
    3. ' E' → logprob: -8.500689506530762
    4. '(' → logprob: -8.750689506530762
    5. ' (' → logprob: -9.000689506530762
    6. '	E' → logprob: -15.500689506530762
    7. ' ' → logprob: -15.625689506530762
    8. ',E' → logprob: -16.375688552856445
    9. '(V' → logprob: -17.250688552856445
    10. '(
' → logprob: -17.250688552856445

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012060654116794467
    2. ' ):' → logprob: -6.876205921173096
    3. ')' → logprob: -9.126206398010254
    4. '):
' → logprob: -9.751206398010254
    5. ':' → logprob: -12.376206398010254
    6. ' )' → logprob: -14.501206398010254
    7. '):
' → logprob: -14.501206398010254
    8. '():' → logprob: -15.126206398010254
    9. ',' → logprob: -15.251206398010254
    10. ']:' → logprob: -15.626206398010254

Token 58: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.39238855242729187
    2. ' ' → logprob: -2.0173885822296143
    3. ' v' → logprob: -2.8923885822296143
    4. '<|end|>' → logprob: -3.0173885822296143
    5. ' 
' → logprob: -4.142388343811035
    6. '   ' → logprob: -4.142388343811035
    7. ' line' → logprob: -4.517388343811035
    8. ' a' → logprob: -4.767388343811035
    9. ' graph' → logprob: -4.767388343811035
    10. 'u' → logprob: -5.142388343811035

Token 59: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.012667040340602398
    2. ' u' → logprob: -4.387667179107666
    3. 's' (adapté à ' s') → logprob: -9.762666702270508
    4. 'from' → logprob: -10.512666702270508
    5. 'v' → logprob: -11.012666702270508
    6. '   ' → logprob: -11.887666702270508
    7. 'b' → logprob: -11.887666702270508
    8. 'start' → logprob: -12.012666702270508
    9. 'a' → logprob: -12.137666702270508
    10. '	u' → logprob: -12.262666702270508

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14301607012748718
    2. ' ,' → logprob: -2.0180160999298096
    3. ',t' → logprob: -8.64301586151123
    4. '_,' → logprob: -10.01801586151123
    5. 't' → logprob: -10.51801586151123
    6. ',v' → logprob: -11.14301586151123
    7. ',y' → logprob: -11.51801586151123
    8. ',e' → logprob: -11.51801586151123
    9. 'tr' → logprob: -11.89301586151123
    10. ',input' → logprob: -12.14301586151123

Token 61: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10010421276092529
    2. ' e' → logprob: -3.100104331970215
    3. 'd' → logprob: -3.725104331970215
    4. 't' → logprob: -3.850104331970215
    5. ' t' → logprob: -5.975104331970215
    6. ' d' → logprob: -6.100104331970215
    7. ' ' → logprob: -10.975104331970215
    8. 'g' → logprob: -11.475104331970215
    9. '   ' → logprob: -12.725104331970215
    10. '  ' → logprob: -12.975104331970215

Token 62: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013127363054081798
    2. ' ,' → logprob: -7.251312732696533
    3. '=' → logprob: -7.501312732696533
    4. ' =' → logprob: -10.001313209533691
    5. ',v' → logprob: -13.251313209533691
    6. ',s' → logprob: -14.376313209533691
    7. '_,' → logprob: -14.501313209533691
    8. 's' → logprob: -15.251313209533691
    9. ' ' → logprob: -15.626313209533691
    10. ',t' → logprob: -15.626313209533691

Token 63: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01818084716796875
    2. 'map' → logprob: -4.018180847167969
    3. ' list' → logprob: -11.018180847167969
    4. ' ' → logprob: -11.643180847167969
    5. '	map' → logprob: -12.893180847167969
    6. ' input' → logprob: -13.518180847167969
    7. 'list' → logprob: -14.518180847167969
    8. ',map' → logprob: -15.393180847167969
    9. '  ' → logprob: -15.518180847167969
    10. '(map' → logprob: -15.768180847167969

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.584239938296378e-06
    2. 'int' → logprob: -12.500007629394531
    3. '(' → logprob: -13.375007629394531
    4. '(lambda' → logprob: -14.000007629394531
    5. '=int' → logprob: -15.000007629394531
    6. '<int' → logprob: -15.125007629394531
    7. ',int' → logprob: -15.250007629394531
    8. '[int' → logprob: -15.875007629394531
    9. '(in' → logprob: -16.00000762939453
    10. ' (' → logprob: -16.25000762939453

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032686468213796616
    2. ',input' → logprob: -3.532686471939087
    3. '(),' → logprob: -5.907686233520508
    4. ',int' → logprob: -8.907686233520508
    5. ' ,' → logprob: -10.157686233520508
    6. '(input' → logprob: -11.657686233520508
    7. '(' → logprob: -11.907686233520508
    8. '```' → logprob: -12.532686233520508
    9. '()' → logprob: -13.032686233520508
    10. ',s' → logprob: -13.157686233520508

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759416222572327
    2. ' input' → logprob: -0.8259416222572327
    3. ',input' → logprob: -14.200942039489746
    4. '(input' → logprob: -14.825942039489746
    5. '	input' → logprob: -15.075942039489746
    6. '=input' → logprob: -15.575942039489746
    7. ' ' → logprob: -15.950942039489746
    8. ' sys' → logprob: -15.950942039489746
    9. 'sys' → logprob: -16.07594108581543
    10. ')' → logprob: -16.70094108581543

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.939851037808694e-05
    2. '()' → logprob: -10.625029563903809
    3. '(' → logprob: -12.625029563903809
    4. '.' → logprob: -13.875029563903809
    5. ' ().' → logprob: -15.000029563903809
    6. '   ' → logprob: -16.000028610229492
    7. '()
' → logprob: -16.250028610229492
    8. ')' → logprob: -16.750028610229492
    9. '.split' → logprob: -17.000028610229492
    10. '	' → logprob: -17.000028610229492

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -15.000000953674316
    3. 'spl' → logprob: -15.875000953674316
    4. ' split' → logprob: -16.0
    5. '(split' → logprob: -16.875
    6. 'rstrip' → logprob: -19.5
    7. 'plit' → logprob: -19.625
    8. 's' → logprob: -19.625
    9. '.split' → logprob: -20.375
    10. 'sp' → logprob: -21.0

Token 69: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07539587467908859
    2. '())' → logprob: -2.9503958225250244
    3. '()' → logprob: -3.9503958225250244
    4. ')
' → logprob: -8.325395584106445
    5. ',' → logprob: -8.325395584106445
    6. ' )' → logprob: -8.575395584106445
    7. '(),' → logprob: -9.075395584106445
    8. '())
' → logprob: -9.200395584106445
    9. '(' → logprob: -9.950395584106445
    10. '),' → logprob: -10.575395584106445

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18609856069087982
    2. '	graph' → logprob: -2.811098575592041
    3. '<|end|>' → logprob: -2.811098575592041
    4. ',' → logprob: -3.686098575592041
    5. 'graph' → logprob: -4.811098575592041
    6. ')' → logprob: -5.561098575592041
    7. ' ,' → logprob: -5.811098575592041
    8. '    
' → logprob: -5.936098575592041
    9. ' graph' → logprob: -6.311098575592041
    10. '    ' → logprob: -6.811098575592041

Token 71: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7061408758163452
    2. 'graph' (adapté à ' graph') → logprob: -0.7061408758163452
    3. '   ' → logprob: -4.956140995025635
    4. '	graph' → logprob: -5.706140995025635
    5. ',' → logprob: -7.081140995025635
    6. 'w' → logprob: -8.206140518188477
    7. 'weight' → logprob: -8.456140518188477
    8. ' ,' → logprob: -8.581140518188477
    9. '(graph' → logprob: -8.956140518188477
    10. ' w' → logprob: -9.081140518188477

Token 72: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -6.44443862256594e-05
    2. '[' → logprob: -10.250064849853516
    3. '[t' → logprob: -10.500064849853516
    4. 's' → logprob: -14.750064849853516
    5. ' [' → logprob: -15.125064849853516
    6. '[q' → logprob: -16.250064849853516
    7. '[g' → logprob: -16.375064849853516
    8. '[src' → logprob: -16.500064849853516
    9. '[int' → logprob: -16.750064849853516
    10. '[S' → logprob: -16.875064849853516

Token 73: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -6.921253225300461e-05
    2. ').' → logprob: -10.500069618225098
    3. '.append' → logprob: -11.000069618225098
    4. ']' → logprob: -11.250069618225098
    5. '.' → logprob: -11.500069618225098
    6. ' ].' → logprob: -14.500069618225098
    7. '[' → logprob: -14.750069618225098
    8. '}.' → logprob: -14.875069618225098
    9. '```' → logprob: -16.25006866455078
    10. '][' → logprob: -16.37506866455078

Token 74: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. ' append' → logprob: -14.375000953674316
    3. '.append' → logprob: -14.875000953674316
    4. ' ' → logprob: -15.750000953674316
    5. 'push' → logprob: -16.000001907348633
    6. 'appen' → logprob: -17.000001907348633
    7. 'Append' → logprob: -17.125001907348633
    8. '_append' → logprob: -17.500001907348633
    9. 'app' → logprob: -17.625001907348633
    10. '	append' → logprob: -17.750001907348633

Token 75: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.1632993072271347
    2. '((' → logprob: -1.913299322128296
    3. '(' → logprob: -5.788299083709717
    4. 't' → logprob: -12.038299560546875
    5. ' (' → logprob: -14.038299560546875
    6. '([' → logprob: -16.788299560546875
    7. '(int' → logprob: -16.913299560546875
    8. '(
' → logprob: -17.038299560546875
    9. '()' → logprob: -17.163299560546875
    10. ')t' → logprob: -17.163299560546875

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009864693507552147
    2. ',' → logprob: -4.884864807128906
    3. ' )' → logprob: -6.134864807128906
    4. ',)' → logprob: -10.634864807128906
    5. '),' → logprob: -11.009864807128906
    6. '<|end|>' → logprob: -11.134864807128906
    7. ')
' → logprob: -11.884864807128906
    8. '   ' → logprob: -12.134864807128906
    9. ' ,' → logprob: -12.759864807128906
    10. '))' → logprob: -12.759864807128906

Token 77: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' graph' (ID: 7465)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '[t' (ID: 32184)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -5.6100132496794686e-05
    2. '[' → logprob: -10.000056266784668
    3. '[t' → logprob: -11.500056266784668
    4. 's' → logprob: -15.125056266784668
    5. ' [' → logprob: -17.50005531311035
    6. ''s' → logprob: -17.62505531311035
    7. ',s' → logprob: -17.75005531311035
    8. '[src' → logprob: -18.00005531311035
    9. '(s' → logprob: -18.50005531311035
    10. '	s' → logprob: -18.62505531311035

Token 80: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6166881918907166
    2. '].' → logprob: -1.1166882514953613
    3. '.' → logprob: -2.7416882514953613
    4. '.append' → logprob: -2.7416882514953613
    5. ')' → logprob: -5.741688251495361
    6. ' .' → logprob: -8.241687774658203
    7. '<|end|>' → logprob: -8.616687774658203
    8. '.)' → logprob: -9.616687774658203
    9. ')].' → logprob: -9.991687774658203
    10. ' ].' → logprob: -10.616687774658203

Token 81: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. 'app' → logprob: -14.625001907348633
    3. '_append' → logprob: -14.625001907348633
    4. '.append' → logprob: -14.875001907348633
    5. 'appen' → logprob: -15.125001907348633
    6. ' append' → logprob: -15.250001907348633
    7. '	append' → logprob: -15.250001907348633
    8. 'Append' → logprob: -16.125001907348633
    9. 'pp' → logprob: -16.875001907348633
    10. 'prepend' → logprob: -17.625001907348633

Token 82: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740983843803406
    2. '(s' → logprob: -0.9740983843803406
    3. '(
' → logprob: -11.974098205566406
    4. 's' → logprob: -12.224098205566406
    5. '('' → logprob: -12.724098205566406
    6. ' (' → logprob: -12.724098205566406
    7. ')' → logprob: -13.474098205566406
    8. '(S' → logprob: -14.224098205566406
    9. '(

' → logprob: -14.474098205566406
    10. '(`' → logprob: -14.974098205566406

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ')
' → logprob: -11.500020027160645
    3. ' )' → logprob: -11.625020027160645
    4. '
' → logprob: -15.750020027160645
    5. '<|end|>' → logprob: -15.750020027160645
    6. '))' → logprob: -16.500019073486328
    7. '   ' → logprob: -16.625019073486328
    8. ' ' → logprob: -16.625019073486328
    9. '}' → logprob: -16.750019073486328
    10. '```' → logprob: -17.000019073486328

Token 84: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2058505415916443
    2. 'dist' → logprob: -2.330850601196289
    3. 'd' → logprob: -2.830850601196289
    4. 'distance' → logprob: -4.580850601196289
    5. ' visited' → logprob: -4.955850601196289
    6. 'u' → logprob: -5.705850601196289
    7. 'visit' → logprob: -6.705850601196289
    8. 'c' → logprob: -7.080850601196289
    9. 'v' → logprob: -7.080850601196289
    10. 'p' → logprob: -7.330850601196289

Token 85: ' letters' (ID: 18151)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4475058615207672
    2. ' ' → logprob: -1.8225058317184448
    3. '#' → logprob: -2.4475059509277344
    4. ' visited' → logprob: -3.1975059509277344
    5. 'visited' → logprob: -3.6975059509277344
    6. 'v' → logprob: -4.947505950927734
    7. ' #' → logprob: -5.447505950927734
    8. 'def' → logprob: -5.572505950927734
    9. ' d' → logprob: -6.072505950927734
    10. '_' → logprob: -6.072505950927734

Token 86: ' assigned' (ID: 21482)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3525939881801605
    2. '=' → logprob: -1.727594017982483
    3. '_' → logprob: -2.8525938987731934
    4. '_dist' → logprob: -4.227593898773193
    5. '[' → logprob: -4.727593898773193
    6. '_count' → logprob: -4.852593898773193
    7. 'dist' → logprob: -5.477593898773193
    8. ')' → logprob: -5.477593898773193
    9. ':' → logprob: -5.727593898773193
    10. ' ' → logprob: -5.727593898773193

Token 87: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03947485238313675
    2. '=' → logprob: -3.7894749641418457
    3. ' ' → logprob: -4.664474964141846
    4. '_' → logprob: -5.539474964141846
    5. '[' → logprob: -7.539474964141846
    6. '[:]' → logprob: -7.664474964141846
    7. '_to' → logprob: -7.914474964141846
    8. ' to' → logprob: -8.164474487304688
    9. ':' → logprob: -8.164474487304688
    10. ',' → logprob: -8.289474487304688

Token 88: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.0659114271402359
    2. 'each' → logprob: -3.1909115314483643
    3. ' vertices' → logprob: -4.065911293029785
    4. ' nodes' → logprob: -5.940911293029785
    5. ' the' → logprob: -6.690911293029785
    6. 'vertices' → logprob: -7.440911293029785
    7. ' ' → logprob: -7.815911293029785
    8. ' node' → logprob: -9.440911293029785
    9. ' all' → logprob: -9.440911293029785
    10. 'e' → logprob: -9.690911293029785

Token 89: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5827232003211975
    2. ' vertex' → logprob: -0.9577232003211975
    3. 'vertex' → logprob: -3.4577231407165527
    4. 'node' → logprob: -3.7077231407165527
    5. ' vertices' → logprob: -6.957723140716553
    6. '_vertex' → logprob: -8.582723617553711
    7. ' ' → logprob: -8.832723617553711
    8. 'vertices' → logprob: -8.957723617553711
    9. ' nodes' → logprob: -9.957723617553711
    10. ' index' → logprob: -9.957723617553711

Token 90: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24606141448020935
    2. '_' → logprob: -2.746061325073242
    3. '=' → logprob: -2.871061325073242
    4. 'assigned' → logprob: -4.496061325073242
    5. 'a' → logprob: -4.746061325073242
    6. ' ' → logprob: -4.871061325073242
    7. 'dist' → logprob: -4.996061325073242
    8. ':' → logprob: -5.246061325073242
    9. ',' → logprob: -5.246061325073242
    10. '_colors' → logprob: -5.371061325073242

Token 91: ' None' (ID: 4662)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4338427782058716
    2. ' dist' → logprob: -1.8088427782058716
    3. 'color' → logprob: -1.9338427782058716
    4. ' color' → logprob: -2.308842658996582
    5. 'colors' → logprob: -2.558842658996582
    6. 'visited' → logprob: -2.933842658996582
    7. ' colors' → logprob: -3.308842658996582
    8. 'distance' → logprob: -3.558842658996582
    9. ' d' → logprob: -3.933842658996582
    10. 'assigned' → logprob: -4.308842658996582

Token 92: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2622982859611511
    2. '<|end|>' → logprob: -2.262298345565796
    3. '=' → logprob: -2.637298345565796
    4. ' ' → logprob: -3.762298345565796
    5. ',' → logprob: -3.887298345565796
    6. ' for' → logprob: -5.387298107147217
    7. '[' → logprob: -5.887298107147217
    8. '<|end|>' → logprob: -7.012298107147217
    9. ')' → logprob: -7.387298107147217
    10. '_' → logprob: -7.762298107147217

Token 93: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3304916322231293
    2. 'not' → logprob: -1.3304916620254517
    3. ' no' → logprob: -4.330491542816162
    4. 'no' → logprob: -5.830491542816162
    5. 'un' → logprob: -7.955491542816162
    6. ' un' → logprob: -8.08049201965332
    7. ' node' → logprob: -9.20549201965332
    8. ' the' → logprob: -9.70549201965332
    9. ' there' → logprob: -10.58049201965332
    10. 'None' → logprob: -11.08049201965332

Token 94: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.5621318221092224
    2. ' assigned' → logprob: -0.9371318221092224
    3. ' ' → logprob: -3.687131881713867
    4. ' yet' → logprob: -5.312131881713867
    5. ' None' → logprob: -5.687131881713867
    6. 'a' → logprob: -6.437131881713867
    7. 'visited' → logprob: -7.062131881713867
    8. 'None' → logprob: -7.687131881713867
    9. ' visited' → logprob: -8.062131881713867
    10. ' =' → logprob: -8.187131881713867

Token 95: ' yet' (ID: 5073)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08164557069540024
    2. ' =' → logprob: -3.9566454887390137
    3. 'a' → logprob: -4.331645488739014
    4. ',' → logprob: -4.706645488739014
    5. '\n' → logprob: -4.831645488739014
    6. '```' → logprob: -5.831645488739014
    7. '_nodes' → logprob: -5.831645488739014
    8. '
' → logprob: -5.956645488739014
    9. '[' → logprob: -5.956645488739014
    10. ' ' → logprob: -6.081645488739014

Token 96: '
' (ID: 198)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.3973283767700195
    2. '\n' → logprob: -1.7723283767700195
    3. 'letters' → logprob: -1.7723283767700195
    4. 'a' → logprob: -2.6473283767700195
    5. 'node' → logprob: -2.6473283767700195
    6. '_' → logprob: -2.8973283767700195
    7. 'n' → logprob: -3.3973283767700195
    8. '
' → logprob: -3.5223283767700195
    9. ',' → logprob: -4.1473283767700195
    10. '[node' → logprob: -4.2723283767700195

Token 97: 'assigned' (ID: 81593)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.1485044956207275
    2. 'color' → logprob: -2.2735044956207275
    3. 'letter' → logprob: -2.5235044956207275
    4. ' letters' → logprob: -2.5235044956207275
    5. 'colors' → logprob: -2.6485044956207275
    6. ' color' → logprob: -2.6485044956207275
    7. 'assigned' → logprob: -2.6485044956207275
    8. 'node' → logprob: -2.8985044956207275
    9. ' colors' → logprob: -3.1485044956207275
    10. ' node' → logprob: -3.8985044956207275

Token 98: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008002049289643764
    2. ' =' → logprob: -5.133002281188965
    3. '_nodes' → logprob: -7.633002281188965
    4. '_letters' → logprob: -8.008002281188965
    5. '[' → logprob: -8.383002281188965
    6. '=' → logprob: -8.383002281188965
    7. ' _' → logprob: -8.758002281188965
    8. ' ' → logprob: -9.883002281188965
    9. '_space' → logprob: -9.883002281188965
    10. '[]' → logprob: -10.008002281188965

Token 99: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38694512844085693
    2. '[' → logprob: -1.136945128440857
    3. '[n' → logprob: -10.386944770812988
    4. ' ' → logprob: -11.011944770812988
    5. '[a' → logprob: -11.511944770812988
    6. '[int' → logprob: -12.636944770812988
    7. '[N' → logprob: -13.386944770812988
    8. '[node' → logprob: -13.386944770812988
    9. '[len' → logprob: -13.761944770812988
    10. '[s' → logprob: -14.011944770812988

Token 100: 'None' (ID: 8505)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3869856894016266
    2. 'None' → logprob: -1.1369856595993042
    3. ' ' → logprob: -10.386985778808594
    4. ' 
' → logprob: -11.011985778808594
    5. ')' → logprob: -11.136985778808594
    6. ' N' → logprob: -11.511985778808594
    7. 'N' → logprob: -11.636985778808594
    8. '_None' → logprob: -12.011985778808594
    9. '.None' → logprob: -12.511985778808594
    10. '(None' → logprob: -12.636985778808594

Token 101: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005755288060754538
    2. ' ]' → logprob: -5.630755424499512
    3. ')' → logprob: -6.630755424499512
    4. ')]' → logprob: -8.005755424499512
    5. ',' → logprob: -8.130755424499512
    6. '<|end|>' → logprob: -9.130755424499512
    7. '[' → logprob: -10.880755424499512
    8. '[]' → logprob: -11.255755424499512
    9. ']
' → logprob: -11.380755424499512
    10. ']()' → logprob: -11.755755424499512

Token 102: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6406216025352478
    2. ' a' → logprob: -0.7656216025352478
    3. 'x' → logprob: -6.390621662139893
    4. ' x' → logprob: -6.390621662139893
    5. ' True' → logprob: -7.015621662139893
    6. ' i' → logprob: -7.015621662139893
    7. 'i' → logprob: -7.265621662139893
    8. '_' → logprob: -7.890621662139893
    9. ' ' → logprob: -8.140621185302734
    10. ' not' → logprob: -8.390621185302734

Token 103: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.053560346364974976
    2. 'is' → logprob: -3.053560256958008
    3. '==' → logprob: -5.803560256958008
    4. ' ==' → logprob: -6.928560256958008
    5. ' ' → logprob: -7.803560256958008
    6. 'in' → logprob: -9.053560256958008
    7. ' in' → logprob: -9.178560256958008
    8. 'else' → logprob: -9.303560256958008
    9. ' else' → logprob: -9.678560256958008
    10. ' i' → logprob: -10.053560256958008

Token 104: ' '?'' (ID: 192100)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5712244510650635
    2. ' '' → logprob: -1.9462244510650635
    3. ''a' → logprob: -2.0712244510650635
    4. ' '_'' → logprob: -2.3212244510650635
    5. ' '-'' → logprob: -2.5712244510650635
    6. ' '#'' → logprob: -2.9462244510650635
    7. ''-' → logprob: -3.0712244510650635
    8. ' None' → logprob: -3.3212244510650635
    9. ''#' → logprob: -3.4462244510650635
    10. ' '?'' → logprob: -3.6962244510650635

Token 105: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12700161337852478
    2. 'else' → logprob: -2.1270015239715576
    3. ' ' → logprob: -9.627001762390137
    4. '	else' → logprob: -12.627001762390137
    5. ' or' → logprob: -13.127001762390137
    6. ' els' → logprob: -14.752001762390137
    7. '  ' → logprob: -15.127001762390137
    8. ' ' → logprob: -15.377001762390137
    9. ' for' → logprob: -15.752001762390137
    10. ' in' → logprob: -15.752001762390137

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4394153356552124
    2. ' x' → logprob: -1.0644153356552124
    3. ''x' → logprob: -5.314415454864502
    4. ''' → logprob: -5.939415454864502
    5. ' '' → logprob: -6.814415454864502
    6. ' ' → logprob: -7.439415454864502
    7. 'a' → logprob: -7.814415454864502
    8. ' a' → logprob: -8.564414978027344
    9. '"x' → logprob: -8.564414978027344
    10. ''a' → logprob: -8.814414978027344

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009292741306126118
    2. 'for' → logprob: -4.7592926025390625
    3. ' ' → logprob: -7.3842926025390625
    4. ')' → logprob: -10.634292602539062
    5. ']' → logprob: -11.009292602539062
    6. '	for' → logprob: -12.134292602539062
    7. ' ]' → logprob: -12.884292602539062
    8. '  ' → logprob: -13.759292602539062
    9. '   ' → logprob: -13.884292602539062
    10. ' )' → logprob: -14.259292602539062

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1422196477651596
    2. ' x' → logprob: -2.1422195434570312
    3. 'a' → logprob: -4.267219543457031
    4. ' a' → logprob: -6.767219543457031
    5. '(x' → logprob: -13.267219543457031
    6. ' ' → logprob: -13.892219543457031
    7. '	x' → logprob: -15.392219543457031
    8. ')x' → logprob: -16.14221954345703
    9. 'range' → logprob: -16.89221954345703
    10. ',x' → logprob: -17.01721954345703

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021393602713942528
    2. 'in' → logprob: -3.8963935375213623
    3. 'a' → logprob: -7.271393775939941
    4. '<|end|>' → logprob: -9.646393775939941
    5. ' a' → logprob: -11.021393775939941
    6. ' ' → logprob: -11.521393775939941
    7. '[a' → logprob: -11.521393775939941
    8. '(a' → logprob: -11.646393775939941
    9. ' ' → logprob: -11.771393775939941
    10. ',' → logprob: -12.146393775939941

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04859384149312973
    2. ' a' → logprob: -3.048593759536743
    3. ' ' → logprob: -12.298593521118164
    4. '(a' → logprob: -15.048593521118164
    5. '	a' → logprob: -15.423593521118164
    6. '   ' → logprob: -15.423593521118164
    7. ')a' → logprob: -15.423593521118164
    8. ''a' → logprob: -15.673593521118164
    9. '  ' → logprob: -16.361093521118164
    10. '[a' → logprob: -16.486093521118164

Token 111: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006585574708878994
    2. ')]' → logprob: -5.131585597991943
    3. ')' → logprob: -8.131585121154785
    4. ' ]' → logprob: -8.256585121154785
    5. '])' → logprob: -9.256585121154785
    6. ']
' → logprob: -12.381585121154785
    7. '`]' → logprob: -13.756585121154785
    8. '])]' → logprob: -14.256585121154785
    9. '()]' → logprob: -14.756585121154785
    10. ' ])' → logprob: -15.506585121154785

Token 112: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8471114635467529
    2. '<|end|>' → logprob: -2.222111463546753
    3. 'def' → logprob: -2.472111463546753
    4. 'visited' → logprob: -2.597111463546753
    5. 'n' → logprob: -3.097111463546753
    6. '#' → logprob: -3.097111463546753
    7. 'for' → logprob: -3.222111463546753
    8. 'd' → logprob: -3.972111463546753
    9. ' visited' → logprob: -4.097111701965332
    10. '' → logprob: -4.347111701965332

Token 113: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9185784459114075
    2. 'from' → logprob: -1.1685783863067627
    3. 'visited' → logprob: -2.2935783863067627
    4. '#' → logprob: -2.5435783863067627
    5. 'import' → logprob: -3.7935783863067627
    6. 'dist' → logprob: -4.043578624725342
    7. 'queue' → logprob: -4.543578624725342
    8. 'for' → logprob: -4.668578624725342
    9. 'q' → logprob: -4.668578624725342
    10. 'stack' → logprob: -5.043578624725342

Token 114: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2430313527584076
    2. ' _' → logprob: -2.3680312633514404
    3. ' ' → logprob: -2.6180312633514404
    4. ' node' → logprob: -3.4930312633514404
    5. ' c' → logprob: -4.7430315017700195
    6. '_' → logprob: -5.9930315017700195
    7. ' u' → logprob: -6.3680315017700195
    8. ' idx' → logprob: -6.7430315017700195
    9. ' n' → logprob: -6.8680315017700195
    10. ' v' → logprob: -7.6180315017700195

Token 115: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.1118306890130043
    2. ' i' → logprob: -2.611830711364746
    3. 'node' → logprob: -4.236830711364746
    4. ' u' → logprob: -4.986830711364746
    5. 'i' → logprob: -5.236830711364746
    6. ' v' → logprob: -6.736830711364746
    7. 'u' → logprob: -7.111830711364746
    8. 'v' → logprob: -7.111830711364746
    9. ' vertex' → logprob: -7.111830711364746
    10. 'neighbor' → logprob: -7.361830711364746

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2349124401807785
    2. ' ,' → logprob: -1.609912395477295
    3. ' in' → logprob: -4.984912395477295
    4. ':' → logprob: -7.109912395477295
    5. ' ' → logprob: -7.359912395477295
    6. ' i' → logprob: -7.609912395477295
    7. ' :' → logprob: -8.609912872314453
    8. ' =' → logprob: -9.859912872314453
    9. '  ' → logprob: -9.984912872314453
    10. '<|end|>' → logprob: -10.484912872314453

Token 117: ' store' (ID: 4897)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.7400182485580444
    2. '#' → logprob: -1.9900182485580444
    3. 'possible' → logprob: -2.115018367767334
    4. 'we' → logprob: -2.490018367767334
    5. ' visited' → logprob: -2.990018367767334
    6. 'neighbors' → logprob: -3.240018367767334
    7. 'visited' → logprob: -3.240018367767334
    8. ' possible' → logprob: -3.490018367767334
    9. 'count' → logprob: -3.740018367767334
    10. ' the' → logprob: -3.865018367767334

Token 118: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3337695002555847
    2. ' its' → logprob: -1.8337695598602295
    3. 'the' → logprob: -2.3337695598602295
    4. ' a' → logprob: -4.33376932144165
    5. 'possible' → logprob: -5.58376932144165
    6. 'a' → logprob: -6.20876932144165
    7. ' possible' → logprob: -6.58376932144165
    8. 'its' → logprob: -6.95876932144165
    9. '<|end|>' → logprob: -7.33376932144165
    10. 'neighbors' → logprob: -7.58376932144165

Token 119: ' set' (ID: 920)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9711328744888306
    2. ' set' → logprob: -2.596132755279541
    3. 'neighbors' → logprob: -2.596132755279541
    4. 'minimum' → logprob: -2.971132755279541
    5. 'neighbor' → logprob: -3.221132755279541
    6. 'set' → logprob: -3.346132755279541
    7. ' possible' → logprob: -3.471132755279541
    8. 'degree' → logprob: -3.596132755279541
    9. ' neighbors' → logprob: -3.846132755279541
    10. 'indices' → logprob: -3.846132755279541

Token 120: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2784402668476105
    2. ' ' → logprob: -2.028440237045288
    3. '(' → logprob: -2.778440237045288
    4. '<|end|>' → logprob: -3.653440237045288
    5. '()' → logprob: -4.653440475463867
    6. ' (' → logprob: -5.153440475463867
    7. 'of' → logprob: -5.278440475463867
    8. '  ' → logprob: -7.153440475463867
    9. '<|end|>' → logprob: -7.153440475463867
    10. ' )' → logprob: -8.528440475463867

Token 121: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.932746171951294
    2. 'possible' → logprob: -1.807746171951294
    3. 'letters' → logprob: -2.307746171951294
    4. ' possible' → logprob: -2.932746171951294
    5. ' used' → logprob: -3.182746171951294
    6. ' assigned' → logprob: -3.307746171951294
    7. 'assigned' → logprob: -3.307746171951294
    8. 'used' → logprob: -3.807746171951294
    9. 'available' → logprob: -3.807746171951294
    10. 'neighbor' → logprob: -3.932746171951294

Token 122: ' used' (ID: 2061)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.0396491289138794
    2. ' ' → logprob: -1.1646491289138794
    3. '<|end|>' → logprob: -2.03964900970459
    4. ' assigned' → logprob: -3.41464900970459
    5. ' used' → logprob: -3.41464900970459
    6. ' =' → logprob: -3.41464900970459
    7. ',' → logprob: -4.03964900970459
    8. ' possible' → logprob: -4.53964900970459
    9. 's' → logprob: -4.78964900970459
    10. ' of' → logprob: -4.91464900970459

Token 123: ' by' (ID: 656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7523053288459778
    2. ' by' → logprob: -1.627305269241333
    3. ' used' → logprob: -2.127305269241333
    4. ' in' → logprob: -2.627305269241333
    5. 'used' → logprob: -3.627305269241333
    6. 'by' → logprob: -3.877305269241333
    7. 'in' → logprob: -4.377305507659912
    8. ' =' → logprob: -4.752305507659912
    9. ',' → logprob: -4.877305507659912
    10. ' around' → logprob: -4.877305507659912

Token 124: ' neighbors' (ID: 31655)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.5089602470397949
    2. ' neighbors' → logprob: -1.258960247039795
    3. ' neighboring' → logprob: -3.133960247039795
    4. 'neighbors' → logprob: -3.133960247039795
    5. ' adjacent' → logprob: -4.758960247039795
    6. 'neighbor' → logprob: -5.258960247039795
    7. ' neighbor' → logprob: -5.383960247039795
    8. 'its' → logprob: -5.508960247039795
    9. ' the' → logprob: -6.133960247039795
    10. '_neighbors' → logprob: -7.633960247039795

Token 125: '
' (ID: 198)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.2452707290649414
    2. 'neighbor' → logprob: -1.3702707290649414
    3. 'used' → logprob: -1.4952707290649414
    4. '_neighbors' → logprob: -2.9952707290649414
    5. ' used' → logprob: -3.1202707290649414
    6. ' neighbors' → logprob: -3.3702707290649414
    7. ' =' → logprob: -3.6202707290649414
    8. ' neighbor' → logprob: -4.370270729064941
    9. ',' → logprob: -4.495270729064941
    10. '_neighbor' → logprob: -4.995270729064941

Token 126: '#' (ID: 2)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.7804386615753174
    2. ' neighbor' → logprob: -1.9054386615753174
    3. 'neighbors' → logprob: -1.9054386615753174
    4. ' used' → logprob: -2.2804386615753174
    5. 'used' → logprob: -2.6554386615753174
    6. ' neighbors' → logprob: -2.9054386615753174
    7. 'n' → logprob: -5.905438423156738
    8. 'ne' → logprob: -6.155438423156738
    9. ' neighboring' → logprob: -6.280438423156738
    10. ' neigh' → logprob: -7.030438423156738

Token 127: ' But' (ID: 3072)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.19891224801540375
    2. 'neighbors' → logprob: -2.4489121437072754
    3. 'used' → logprob: -2.9489121437072754
    4. ' neighbor' → logprob: -3.5739121437072754
    5. ' used' → logprob: -4.573912143707275
    6. ' neighbors' → logprob: -6.448912143707275
    7. 'ne' → logprob: -6.948912143707275
    8. 'letters' → logprob: -8.948912620544434
    9. ' neigh' → logprob: -9.698912620544434
    10. 'nei' → logprob: -9.823912620544434

Token 128: ' since' (ID: 3630)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.425647258758545
    2. ' the' → logprob: -2.175647258758545
    3. ' we' → logprob: -2.175647258758545
    4. ' ' → logprob: -2.550647258758545
    5. 'for' → logprob: -2.800647258758545
    6. 'neighbors' → logprob: -2.925647258758545
    7. ' for' → logprob: -3.425647258758545
    8. ' not' → logprob: -3.675647258758545
    9. ' neighbors' → logprob: -3.675647258758545
    10. '#' → logprob: -3.675647258758545

Token 129: ' degree' (ID: 9882)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1824584007263184
    2. 'neighbors' → logprob: -1.8074584007263184
    3. 'we' → logprob: -1.9324584007263184
    4. ' the' → logprob: -2.1824584007263184
    5. ' we' → logprob: -2.8074584007263184
    6. 'each' → logprob: -3.0574584007263184
    7. 'letters' → logprob: -3.5574584007263184
    8. ' sets' → logprob: -3.9324584007263184
    9. 'you' → logprob: -4.182458400726318
    10. 'graph' → logprob: -4.307458400726318

Token 130: ' <=' (ID: 5017)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6246582269668579
    2. '<|end|>' → logprob: -1.124658226966858
    3. 's' → logprob: -2.6246581077575684
    4. ' of' → logprob: -4.374658107757568
    5. ' can' → logprob: -4.624658107757568
    6. 'is' → logprob: -4.624658107757568
    7. '<|end|>' → logprob: -4.624658107757568
    8. ' might' → logprob: -4.749658107757568
    9. ' could' → logprob: -6.249658107757568
    10. ' may' → logprob: -6.249658107757568

Token 131: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.1184093952178955
    2. '10' → logprob: -1.7434093952178955
    3. '26' → logprob: -1.7434093952178955
    4. '2' → logprob: -1.8684093952178955
    5. '25' → logprob: -2.8684093952178955
    6. '3' → logprob: -2.9934093952178955
    7. '1' → logprob: -4.618409156799316
    8. '5' → logprob: -4.618409156799316
    9. ' ' → logprob: -4.743409156799316
    10. '100' → logprob: -4.993409156799316

Token 132: '25' (ID: 1161)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9221163392066956
    2. '20' → logprob: -1.6721162796020508
    3. '26' → logprob: -1.9221162796020508
    4. '3' → logprob: -2.297116279602051
    5. '25' → logprob: -2.672116279602051
    6. '2' → logprob: -3.172116279602051
    7. '1' → logprob: -4.422116279602051
    8. '5' → logprob: -4.672116279602051
    9. '4' → logprob: -4.672116279602051
    10. '9' → logprob: -5.047116279602051

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003563846228644252
    2. ' ,' → logprob: -5.87856388092041
    3. ',
' → logprob: -7.25356388092041
    4. ' and' → logprob: -11.37856388092041
    5. ' we' → logprob: -11.62856388092041
    6. '
' → logprob: -12.25356388092041
    7. ' for' → logprob: -12.37856388092041
    8. ' the' → logprob: -13.00356388092041
    9. '.' → logprob: -13.25356388092041
    10. ',

' → logprob: -13.25356388092041

Token 134: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.18000175058841705
    2. 'we' → logprob: -2.555001735687256
    3. ' ' → logprob: -3.930001735687256
    4. '#' → logprob: -4.680001735687256
    5. ' #' → logprob: -4.680001735687256
    6. ' the' → logprob: -4.930001735687256
    7. ' sets' → logprob: -5.055001735687256
    8. ' for' → logprob: -5.180001735687256
    9. '<|end|>' → logprob: -5.805001735687256
    10. ' there' → logprob: -6.055001735687256

Token 135: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1611216962337494
    2. 'can' → logprob: -1.9111217260360718
    3. ' will' → logprob: -9.286121368408203
    4. ''ll' → logprob: -9.536121368408203
    5. ' could' → logprob: -9.536121368408203
    6. '#' → logprob: -9.661121368408203
    7. 'could' → logprob: -9.786121368408203
    8. '<|end|>' → logprob: -9.911121368408203
    9. '	can' → logprob: -10.286121368408203
    10. '...' → logprob: -10.411121368408203

Token 136: ' handle' (ID: 5318)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.3615117073059082
    2. 'use' → logprob: -1.9865117073059082
    3. ' just' → logprob: -2.736511707305908
    4. ' represent' → logprob: -3.736511707305908
    5. ' store' → logprob: -3.736511707305908
    6. 'store' → logprob: -4.236511707305908
    7. 'just' → logprob: -5.236511707305908
    8. ' check' → logprob: -5.236511707305908
    9. ' track' → logprob: -5.361511707305908
    10. 'check' → logprob: -5.736511707305908

Token 137: ' neighbors' (ID: 31655)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -1.6026710271835327
    2. ' it' → logprob: -1.8526710271835327
    3. ' used' → logprob: -1.9776710271835327
    4. 'neighbors' → logprob: -2.3526711463928223
    5. ' letters' → logprob: -2.4776711463928223
    6. ' neighbors' → logprob: -2.6026711463928223
    7. ' them' → logprob: -2.7276711463928223
    8. 'used' → logprob: -2.9776711463928223
    9. 'this' → logprob: -3.7276711463928223
    10. ' the' → logprob: -3.9776711463928223

Token 138: ' directly' (ID: 8516)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.6113101243972778
    2. 'by' → logprob: -1.7363101243972778
    3. 'as' → logprob: -1.9863101243972778
    4. ''s' → logprob: -2.6113100051879883
    5. ' by' → logprob: -2.7363100051879883
    6. ',' → logprob: -2.8613100051879883
    7. ' as' → logprob: -3.1113100051879883
    8. ' with' → logprob: -3.4863100051879883
    9. 's' → logprob: -3.8613100051879883
    10. 'used' → logprob: -3.8613100051879883

Token 139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45633694529533386
    2. 'def' → logprob: -2.3313369750976562
    3. 'visited' → logprob: -2.3313369750976562
    4. '<|end|>' → logprob: -2.8313369750976562
    5. 'for' → logprob: -3.0813369750976562
    6. '#' → logprob: -4.081336975097656
    7. '.' → logprob: -4.706336975097656
    8. 'neighbors' → logprob: -5.081336975097656
    9. 'color' → logprob: -5.206336975097656
    10. 'used' → logprob: -5.331336975097656

Token 140: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2824738025665283
    2. 'visited' → logprob: -1.4074738025665283
    3. 'for' → logprob: -1.5324738025665283
    4. '
' → logprob: -1.6574738025665283
    5. '#' → logprob: -3.9074738025665283
    6. '<|end|>' → logprob: -4.157473564147949
    7. ' for' → logprob: -4.657473564147949
    8. ' visited' → logprob: -5.532473564147949
    9. '

' → logprob: -5.782473564147949
    10. 'color' → logprob: -6.157473564147949

Token 141: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5225631594657898
    2. 'for' → logprob: -1.1475632190704346
    3. 'from' → logprob: -3.5225632190704346
    4. 'visited' → logprob: -4.0225629806518555
    5. 'color' → logprob: -4.3975629806518555
    6. 'used' → logprob: -5.2725629806518555
    7. '#' → logprob: -5.5225629806518555
    8. 'queue' → logprob: -5.6475629806518555
    9. 'colors' → logprob: -5.6475629806518555
    10. 'q' → logprob: -5.7725629806518555

Token 142: ' will' (ID: 738)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7358653545379639
    2. '=' → logprob: -1.6108653545379639
    3. ' =' → logprob: -1.6108653545379639
    4. ''' → logprob: -2.860865354537964
    5. '.' → logprob: -4.235865592956543
    6. ' need' → logprob: -4.360865592956543
    7. ',' → logprob: -5.110865592956543
    8. ''ll' → logprob: -5.110865592956543
    9. ' want' → logprob: -5.235865592956543
    10. '#' → logprob: -5.610865592956543

Token 143: ' assign' (ID: 14975)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.5552632212638855
    2. 'implement' → logprob: -2.3052632808685303
    3. ' use' → logprob: -2.4302632808685303
    4. 'define' → logprob: -2.6802632808685303
    5. 'continue' → logprob: -2.9302632808685303
    6. 'try' → logprob: -3.6802632808685303
    7. 'process' → logprob: -4.305263042449951
    8. 'color' → logprob: -4.555263042449951
    9. ' implement' → logprob: -4.555263042449951
    10. 'def' → logprob: -4.680263042449951

Token 144: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.055052321404218674
    2. 'letters' → logprob: -3.0550522804260254
    3. '<|end|>' → logprob: -5.805052280426025
    4. ' colors' → logprob: -6.055052280426025
    5. ' the' → logprob: -7.930052280426025
    6. '_letters' → logprob: -8.430052757263184
    7. 'colors' → logprob: -8.680052757263184
    8. ' nodes' → logprob: -10.430052757263184
    9. ' lex' → logprob: -10.555052757263184
    10. ' missing' → logprob: -10.805052757263184

Token 145: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45731404423713684
    2. ' for' → logprob: -2.2073140144348145
    3. 'from' → logprob: -2.3323140144348145
    4. 'def' → logprob: -2.3323140144348145
    5. 'import' → logprob: -4.0823140144348145
    6. '
' → logprob: -4.3323140144348145
    7. ' from' → logprob: -4.5823140144348145
    8. 'visited' → logprob: -5.3323140144348145
    9. 'used' → logprob: -5.9573140144348145
    10. 'available' → logprob: -6.0823140144348145

Token 146: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.9709105491638184
    2. '[node' → logprob: -1.7209105491638184
    3. ' nodes' → logprob: -1.8459105491638184
    4. 'the' → logprob: -2.0959105491638184
    5. '[' → logprob: -3.4709105491638184
    6. '[i' → logprob: -3.7209105491638184
    7. '[]' → logprob: -4.095910549163818
    8. ' the' → logprob: -4.345910549163818
    9. '?' → logprob: -4.470910549163818
    10. 'each' → logprob: -4.470910549163818

Token 147: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6670061349868774
    2. ' for' → logprob: -1.7920061349868774
    3. 'for' → logprob: -2.542006015777588
    4. '#' → logprob: -2.542006015777588
    5. 'def' → logprob: -3.167006015777588
    6. '<|end|>' → logprob: -3.167006015777588
    7. ' ' → logprob: -3.292006015777588
    8. ' 
' → logprob: -4.292006015777588
    9. '

' → logprob: -5.292006015777588
    10. ',' → logprob: -5.792006015777588

Token 148: ' initially' (ID: 25998)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.1260706186294556
    2. ' assigned' → logprob: -1.3760706186294556
    3. 'None' → logprob: -1.3760706186294556
    4. 'assigned' → logprob: -2.126070499420166
    5. 'a' → logprob: -4.251070499420166
    6. ' a' → logprob: -4.501070499420166
    7. '?' → logprob: -4.501070499420166
    8. ' unknown' → logprob: -5.376070499420166
    9. ' question' → logprob: -5.501070499420166
    10. 'unknown' → logprob: -6.751070499420166

Token 149: ' '?'' (ID: 192100)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -1.1621825695037842
    2. 'None' → logprob: -1.1621825695037842
    3. ' None' → logprob: -1.1621825695037842
    4. ' '?'' → logprob: -3.537182569503784
    5. ' ?' → logprob: -4.787182807922363
    6. ''' → logprob: -4.787182807922363
    7. ' '?' → logprob: -5.412182807922363
    8. ''?' → logprob: -5.787182807922363
    9. ' unknown' → logprob: -6.537182807922363
    10. '`' → logprob: -6.787182807922363

Token 150: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19738700985908508
    2. 'def' → logprob: -2.0723869800567627
    3. 'from' → logprob: -3.9473869800567627
    4. 'visited' → logprob: -4.697387218475342
    5. 'import' → logprob: -5.322387218475342
    6. 'queue' → logprob: -5.447387218475342
    7. '#' → logprob: -5.697387218475342
    8. 'q' → logprob: -5.822387218475342
    9. 'stack' → logprob: -6.197387218475342
    10. 'order' → logprob: -6.447387218475342

Token 151: ' order' (ID: 2569)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9275910258293152
    2. 'a' → logprob: -1.92759108543396
    3. ' the' → logprob: -2.17759108543396
    4. 'order' → logprob: -2.30259108543396
    5. ' order' → logprob: -2.55259108543396
    6. 'the' → logprob: -2.92759108543396
    7. 'queue' → logprob: -3.55259108543396
    8. ' queue' → logprob: -3.92759108543396
    9. 'def' → logprob: -4.177590847015381
    10. ' nodes' → logprob: -5.052590847015381

Token 152: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1525471210479736
    2. 'for' → logprob: -1.2775471210479736
    3. 'def' → logprob: -2.4025471210479736
    4. ' for' → logprob: -2.5275471210479736
    5. '<|end|>' → logprob: -2.9025471210479736
    6. 'current' → logprob: -3.0275471210479736
    7. '#' → logprob: -3.7775471210479736
    8. 'idx' → logprob: -3.7775471210479736
    9. 'index' → logprob: -4.0275468826293945
    10. ',' → logprob: -4.5275468826293945

Token 153: ' their' (ID: 1043)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'their' → logprob: -1.5483953952789307
    2. 'degree' → logprob: -1.5483953952789307
    3. ' their' → logprob: -1.6733953952789307
    4. 'in' → logprob: -2.6733953952789307
    5. 'range' → logprob: -3.2983953952789307
    6. 'index' → logprob: -3.4233953952789307
    7. ' increasing' → logprob: -3.5483953952789307
    8. ' degree' → logprob: -3.7983953952789307
    9. 'nodes' → logprob: -3.7983953952789307
    10. 'V' → logprob: -3.7983953952789307

Token 154: ' index' (ID: 3472)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.5111821889877319
    2. 'index' → logprob: -1.886182188987732
    3. 'indices' → logprob: -2.2611823081970215
    4. 'degrees' → logprob: -2.8861823081970215
    5. ' degree' → logprob: -3.6361823081970215
    6. ' indices' → logprob: -4.0111823081970215
    7. ' degrees' → logprob: -4.0111823081970215
    8. ' index' → logprob: -4.6361823081970215
    9. 'node' → logprob: -5.3861823081970215
    10. 'indexes' → logprob: -5.3861823081970215

Token 155: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34691569209098816
    2. '
' → logprob: -2.2219157218933105
    3. 'def' → logprob: -2.2219157218933105
    4. ' for' → logprob: -3.7219157218933105
    5. 'i' → logprob: -3.8469157218933105
    6. 'idx' → logprob: -4.3469157218933105
    7. 'current' → logprob: -4.8469157218933105
    8. 'index' → logprob: -6.4719157218933105
    9. '<|end|>' → logprob: -6.8469157218933105
    10. '#' → logprob: -7.2219157218933105

Token 156: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3536326289176941
    2. '#' → logprob: -2.103632688522339
    3. 'and' → logprob: -3.353632688522339
    4. ' and' → logprob: -3.603632688522339
    5. ' ensuring' → logprob: -3.603632688522339
    6. 'for' → logprob: -4.22863245010376
    7. 'starting' → logprob: -4.35363245010376
    8. ' def' → logprob: -4.72863245010376
    9. ' to' → logprob: -4.72863245010376
    10. ' starting' → logprob: -5.22863245010376

Token 157: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07312651723623276
    2. 'for' → logprob: -3.6981265544891357
    3. 'def' → logprob: -4.073126316070557
    4. 'visited' → logprob: -4.448126316070557
    5. 'used' → logprob: -5.198126316070557
    6. ' #' → logprob: -5.948126316070557
    7. 'assigned' → logprob: -6.198126316070557
    8. 'while' → logprob: -7.198126316070557
    9. ' for' → logprob: -7.198126316070557
    10. 'available' → logprob: -7.323126316070557

Token 158: ' only' (ID: 1606)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7386422157287598
    2. '#' → logprob: -2.1136422157287598
    3. ' the' → logprob: -2.2386422157287598
    4. 'we' → logprob: -3.3636422157287598
    5. ' #' → logprob: -3.4886422157287598
    6. ' continue' → logprob: -3.7386422157287598
    7. ' only' → logprob: -4.23864221572876
    8. ' in' → logprob: -4.48864221572876
    9. 'def' → logprob: -4.48864221572876
    10. '   ' → logprob: -4.48864221572876

Token 159: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.2226646989583969
    2. 'after' → logprob: -2.3476645946502686
    3. ' if' → logprob: -2.5976645946502686
    4. 'if' → logprob: -4.347664833068848
    5. ' when' → logprob: -5.097664833068848
    6. 'assign' → logprob: -5.597664833068848
    7. ' assign' → logprob: -6.597664833068848
    8. ' assigning' → logprob: -6.597664833068848
    9. ' for' → logprob: -7.097664833068848
    10. ' to' → logprob: -7.347664833068848

Token 160: ' taking' (ID: 6167)
  Prédit: ' ensuring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ensuring' → logprob: -0.8853747248649597
    2. ' checking' → logprob: -1.1353747844696045
    3. 'checking' → logprob: -2.3853747844696045
    4. ' verifying' → logprob: -3.5103747844696045
    5. ' making' → logprob: -4.010374546051025
    6. ' confirming' → logprob: -4.010374546051025
    7. ' reading' → logprob: -4.510374546051025
    8. ' we' → logprob: -4.510374546051025
    9. 'all' → logprob: -4.635374546051025
    10. 'ens' → logprob: -4.635374546051025

Token 161: ' care' (ID: 2631)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.2510906159877777
    2. 'into' → logprob: -2.1260905265808105
    3. 'care' → logprob: -3.1260905265808105
    4. ' care' → logprob: -3.1260905265808105
    5. 'neighbors' → logprob: -4.7510905265808105
    6. 'neighbor' → logprob: -6.0010905265808105
    7. ' advantage' → logprob: -7.1260905265808105
    8. ' neighbors' → logprob: -7.6260905265808105
    9. ' the' → logprob: -8.126091003417969
    10. ' adjacency' → logprob: -8.376091003417969

Token 162: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0011161656584590673
    2. ' ' → logprob: -7.7511162757873535
    3. 'of' → logprob: -7.7511162757873535
    4. '<|end|>' → logprob: -9.376115798950195
    5. ' to' → logprob: -9.501115798950195
    6. '_' → logprob: -10.501115798950195
    7. ' that' → logprob: -10.626115798950195
    8. '  ' → logprob: -11.626115798950195
    9. '<|end|>' → logprob: -12.126115798950195
    10. ',' → logprob: -12.126115798950195

Token 163: ' assign' (ID: 14975)
  Prédit: ' ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensure' → logprob: -0.7845033407211304
    2. ' avoid' → logprob: -1.5345033407211304
    3. ' check' → logprob: -2.40950345993042
    4. 'ensure' → logprob: -2.53450345993042
    5. 'assign' → logprob: -2.90950345993042
    6. ' assign' → logprob: -3.65950345993042
    7. 'avoid' → logprob: -4.03450345993042
    8. 'check' → logprob: -4.28450345993042
    9. ' maintain' → logprob: -4.28450345993042
    10. ' respect' → logprob: -5.40950345993042

Token 164: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.40336787700653076
    2. ' letters' → logprob: -1.4033678770065308
    3. ' the' → logprob: -2.6533679962158203
    4. ' them' → logprob: -5.15336799621582
    5. ' an' → logprob: -6.27836799621582
    6. '<|end|>' → logprob: -6.27836799621582
    7. 'a' → logprob: -6.40336799621582
    8. 'letters' → logprob: -6.52836799621582
    9. ' to' → logprob: -7.40336799621582
    10. ' each' → logprob: -7.52836799621582

Token 165: ' lex' (ID: 37772)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.620392918586731
    2. 'lowest' → logprob: -1.870392918586731
    3. 'small' → logprob: -1.995392918586731
    4. ' lex' → logprob: -2.2453927993774414
    5. 'lex' → logprob: -3.2453927993774414
    6. ' lowest' → logprob: -4.370392799377441
    7. ' small' → logprob: -5.870392799377441
    8. ' minimal' → logprob: -5.995392799377441
    9. 'minimum' → logprob: -6.120392799377441
    10. 'letter' → logprob: -6.745392799377441

Token 166: ' smallest' (ID: 42173)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.05356486141681671
    2. 'i' → logprob: -3.6785647869110107
    3. ' smallest' → logprob: -3.9285647869110107
    4. ' ' → logprob: -5.80356502532959
    5. 'ical' → logprob: -6.67856502532959
    6. ' i' → logprob: -6.80356502532959
    7. 'ically' → logprob: -7.92856502532959
    8. 'icon' → logprob: -8.05356502532959
    9. ' order' → logprob: -8.17856502532959
    10. ' smaller' → logprob: -8.67856502532959

Token 167: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.8096792697906494
    2. '<|end|>' → logprob: -0.9346792697906494
    3. ' ' → logprob: -2.9346792697906494
    4. ' valid' → logprob: -3.0596792697906494
    5. ' possible' → logprob: -4.18467903137207
    6. '_' → logprob: -4.43467903137207
    7. ' available' → logprob: -4.55967903137207
    8. ' letters' → logprob: -5.05967903137207
    9. 'letter' → logprob: -5.93467903137207
    10. '_letter' → logprob: -5.93467903137207

Token 168: ' not' (ID: 625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' used' (ID: 2061)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22418461740016937
    2. ' used' → logprob: -1.7241846323013306
    3. 'in' → logprob: -4.099184513092041
    4. ' ' → logprob: -5.974184513092041
    5. 'used' → logprob: -6.474184513092041
    6. ' already' → logprob: -7.099184513092041
    7. '_used' → logprob: -7.974184513092041
    8. '<|end|>' → logprob: -8.2241849899292
    9. 'already' → logprob: -8.8491849899292
    10. '_' → logprob: -9.8491849899292

Token 170: ' by' (ID: 656)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.9194460511207581
    2. ' by' → logprob: -1.2944459915161133
    3. '<|end|>' → logprob: -1.9194459915161133
    4. ' in' → logprob: -2.5444459915161133
    5. 'by' → logprob: -3.0444459915161133
    6. 'in' → logprob: -4.419445991516113
    7. ' at' → logprob: -4.794445991516113
    8. ' next' → logprob: -4.794445991516113
    9. ' to' → logprob: -5.044445991516113
    10. ' ' → logprob: -5.419445991516113

Token 171: ' neighbor' (ID: 13034)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.31434333324432373
    2. ' neighbors' → logprob: -1.4393433332443237
    3. 'neighbor' → logprob: -4.314343452453613
    4. ' any' → logprob: -4.314343452453613
    5. 'any' → logprob: -5.814343452453613
    6. ' neighboring' → logprob: -7.314343452453613
    7. ' the' → logprob: -7.439343452453613
    8. ' neighbor' → logprob: -7.689343452453613
    9. ' their' → logprob: -8.064343452453613
    10. 'adj' → logprob: -8.314343452453613

Token 172: ' letters' (ID: 18151)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6494766473770142
    2. 'for' → logprob: -1.6494766473770142
    3. '<|end|>' → logprob: -2.5244765281677246
    4. 'def' → logprob: -2.5244765281677246
    5. ' for' → logprob: -3.5244765281677246
    6. '#' → logprob: -3.8994765281677246
    7. '

' → logprob: -4.149476528167725
    8. '\n' → logprob: -4.399476528167725
    9. ')' → logprob: -5.024476528167725
    10. '_' → logprob: -5.149476528167725

Token 173: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6848462224006653
    2. 'def' → logprob: -1.3098461627960205
    3. 'for' → logprob: -2.1848461627960205
    4. '#' → logprob: -3.3098461627960205
    5. '

' → logprob: -3.5598461627960205
    6. '<|end|>' → logprob: -4.3098464012146
    7. ' for' → logprob: -4.9348464012146
    8. 'visited' → logprob: -5.6848464012146
    9. '?' → logprob: -5.9348464012146
    10. 'idx' → logprob: -6.3098464012146

Token 174: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7182421088218689
    2. 'for' → logprob: -0.8432421088218689
    3. ' for' → logprob: -3.5932421684265137
    4. '<|end|>' → logprob: -3.8432421684265137
    5. 'def' → logprob: -4.093242168426514
    6. '\n' → logprob: -5.218242168426514
    7. '#' → logprob: -5.843242168426514
    8. '

' → logprob: -6.593242168426514
    9. ')' → logprob: -6.718242168426514
    10. ' 
' → logprob: -6.843242168426514

Token 175: ' As' (ID: 1877)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27616703510284424
    2. 'def' → logprob: -1.5261670351028442
    3. ' for' → logprob: -5.151166915893555
    4. '
' → logprob: -5.276166915893555
    5. 'visited' → logprob: -5.401166915893555
    6. '#' → logprob: -6.151166915893555
    7. 'idx' → logprob: -6.401166915893555
    8. '

' → logprob: -6.901166915893555
    9. 'current' → logprob: -7.526166915893555
    10. 'i' → logprob: -7.651166915893555

Token 176: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8996614217758179
    2. 'for' → logprob: -1.1496614217758179
    3. ' for' → logprob: -1.6496614217758179
    4. ' def' → logprob: -4.649661540985107
    5. 'visited' → logprob: -4.774661540985107
    6. ' a' → logprob: -4.899661540985107
    7. 's' → logprob: -5.024661540985107
    8. '
' → logprob: -5.524661540985107
    9. 'igned' → logprob: -5.649661540985107
    10. 'import' → logprob: -5.649661540985107

Token 177: ' problem' (ID: 4792)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4701460599899292
    2. 'next' → logprob: -1.5951460599899292
    3. 'def' → logprob: -1.9701460599899292
    4. 'for' → logprob: -2.7201461791992188
    5. 'graph' → logprob: -2.9701461791992188
    6. ' code' → logprob: -3.4701461791992188
    7. ' graph' → logprob: -3.7201461791992188
    8. '#' → logprob: -3.9701461791992188
    9. ' for' → logprob: -3.9701461791992188
    10. 'code' → logprob: -4.095146179199219

Token 178: ' states' (ID: 9407)
  Prédit: 'description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'description' → logprob: -0.8805115222930908
    2. 'statement' → logprob: -1.6305115222930908
    3. 'is' → logprob: -2.630511522293091
    4. ' statement' → logprob: -2.755511522293091
    5. ' is' → logprob: -3.130511522293091
    6. 'states' → logprob: -3.255511522293091
    7. ' description' → logprob: -3.380511522293091
    8. ' states' → logprob: -3.380511522293091
    9. 'mentions' → logprob: -4.005511283874512
    10. 'des' → logprob: -4.130511283874512

Token 179: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2605007588863373
    2. '
' → logprob: -2.51050066947937
    3. 'def' → logprob: -2.88550066947937
    4. ' for' → logprob: -3.13550066947937
    5. '#' → logprob: -3.63550066947937
    6. 'visited' → logprob: -5.510500907897949
    7. '<|end|>' → logprob: -6.135500907897949
    8. '

' → logprob: -6.260500907897949
    9. ',' → logprob: -6.760500907897949
    10. 'letters' → logprob: -6.885500907897949

Token 180: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.050602998584508896
    2. '<|end|>' → logprob: -4.300602912902832
    3. '
' → logprob: -4.925602912902832
    4. 'for' → logprob: -5.050602912902832
    5. ' #' → logprob: -5.550602912902832
    6. 'pass' → logprob: -5.550602912902832
    7. '<|end|>' → logprob: -6.050602912902832
    8. 'def' → logprob: -6.050602912902832
    9. ' for' → logprob: -6.300602912902832
    10. ' ' → logprob: -6.425602912902832

Token 181: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1706661581993103
    2. ' #' → logprob: -3.295666217803955
    3. 'def' → logprob: -3.545666217803955
    4. '<|end|>' → logprob: -3.545666217803955
    5. 'for' → logprob: -4.170666217803955
    6. ' pass' → logprob: -4.420666217803955
    7. ' for' → logprob: -4.545666217803955
    8. 'pass' → logprob: -4.920666217803955
    9. '<|end|>' → logprob: -5.170666217803955
    10. ' ' → logprob: -5.795666217803955

Token 182: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18920829892158508
    2. 'def' → logprob: -2.0642082691192627
    3. 'for' → logprob: -3.8142082691192627
    4. 'pass' → logprob: -5.314208507537842
    5. '<|end|>' → logprob: -5.814208507537842
    6. ' #' → logprob: -6.064208507537842
    7. '
' → logprob: -6.689208507537842
    8. ' for' → logprob: -6.814208507537842
    9. '<|end|>' → logprob: -6.814208507537842
    10. 'from' → logprob: -7.189208507537842

Token 183: ' While' (ID: 8406)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4153783321380615
    2. '#' → logprob: -1.6653783321380615
    3. 'for' → logprob: -1.9153783321380615
    4. 'def' → logprob: -2.5403783321380615
    5. 'We' → logprob: -3.1653783321380615
    6. 'from' → logprob: -3.1653783321380615
    7. ' We' → logprob: -3.2903783321380615
    8. 'For' → logprob: -3.5403783321380615
    9. ' def' → logprob: -3.7903783321380615
    10. ' #' → logprob: -4.040378570556641

Token 184: ' there' (ID: 1354)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8338412642478943
    2. 'assign' → logprob: -1.958841323852539
    3. ' True' → logprob: -1.958841323852539
    4. 'there' → logprob: -2.708841323852539
    5. 'assigned' → logprob: -2.708841323852539
    6. 'len' → logprob: -3.083841323852539
    7. 'a' → logprob: -3.583841323852539
    8. 'not' → logprob: -4.208841323852539
    9. 'the' → logprob: -4.333841323852539
    10. 'we' → logprob: -5.208841323852539

Token 185: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07170592993497849
    2. ' are' → logprob: -3.0717058181762695
    3. ' ' → logprob: -4.6967058181762695
    4. ' a' → logprob: -5.0717058181762695
    5. 'is' → logprob: -5.8217058181762695
    6. '#' → logprob: -6.8217058181762695
    7. ' remains' → logprob: -6.9467058181762695
    8. 'a' → logprob: -7.9467058181762695
    9. ' exists' → logprob: -8.07170581817627
    10. ' was' → logprob: -8.44670581817627

Token 186: ' any' (ID: 1062)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7714844942092896
    2. ' any' → logprob: -1.1464844942092896
    3. 'a' → logprob: -2.396484375
    4. ' at' → logprob: -2.521484375
    5. 'any' → logprob: -3.521484375
    6. ' still' → logprob: -4.896484375
    7. 'at' → logprob: -5.021484375
    8. ' an' → logprob: -5.896484375
    9. ' some' → logprob: -7.021484375
    10. ' ' → logprob: -8.021484375

Token 187: ' '.'' (ID: 64762)
  Prédit: ' '?''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '?'' → logprob: -0.9589028358459473
    2. '?' → logprob: -1.0839028358459473
    3. ''' → logprob: -2.0839028358459473
    4. ' node' → logprob: -2.9589028358459473
    5. ' assigned' → logprob: -3.4589028358459473
    6. 'assigned' → logprob: -4.208902835845947
    7. '?a' → logprob: -4.708902835845947
    8. ' ?' → logprob: -4.708902835845947
    9. ''?' → logprob: -4.958902835845947
    10. ' '?' → logprob: -5.333902835845947

Token 188: ' node' (ID: 4596)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.35355669260025024
    2. '<|end|>' → logprob: -1.6035566329956055
    3. '_' → logprob: -3.6035566329956055
    4. ' or' → logprob: -3.7285566329956055
    5. ' ' → logprob: -3.9785566329956055
    6. ')' → logprob: -5.1035566329956055
    7. ' ?' → logprob: -5.3535566329956055
    8. ''' → logprob: -5.8535566329956055
    9. '<|end|>' → logprob: -5.9785566329956055
    10. ',' → logprob: -6.3535566329956055

Token 189: ' un' (ID: 537)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.3350066542625427
    2. ':' → logprob: -2.2100067138671875
    3. ',' → logprob: -2.3350067138671875
    4. '_' → logprob: -3.7100067138671875
    5. ''' → logprob: -4.2100067138671875
    6. ' ' → logprob: -4.8350067138671875
    7. ' in' → logprob: -5.2100067138671875
    8. ' ,' → logprob: -5.2100067138671875
    9. ' or' → logprob: -5.5850067138671875
    10. ' ?' → logprob: -5.9600067138671875

Token 190: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0005594660760834813
    2. ' assigned' → logprob: -8.00055980682373
    3. 's' → logprob: -9.75055980682373
    4. 'a' → logprob: -9.87555980682373
    5. 'visited' → logprob: -11.12555980682373
    6. 'processed' → logprob: -11.37555980682373
    7. 'ass' → logprob: -11.37555980682373
    8. '```' → logprob: -11.62555980682373
    9. '#' → logprob: -11.87555980682373
    10. '?' → logprob: -12.25055980682373

Token 191: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7906633019447327
    2. ':' → logprob: -1.165663242340088
    3. ',' → logprob: -1.915663242340088
    4. '?' → logprob: -3.415663242340088
    5. '.' → logprob: -4.040663242340088
    6. '<|end|>' → logprob: -4.290663242340088
    7. ':
' → logprob: -5.790663242340088
    8. ''' → logprob: -5.915663242340088
    9. '_
' → logprob: -5.915663242340088
    10. '
' → logprob: -6.040663242340088

Token 192: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7185239791870117
    2. '<|end|>' → logprob: -1.4685239791870117
    3. ' 
' → logprob: -1.8435239791870117
    4. '\n' → logprob: -2.9685239791870117
    5. '
' → logprob: -3.2185239791870117
    6. '#' → logprob: -4.843523979187012
    7. '\' → logprob: -4.843523979187012
    8. '  
' → logprob: -5.218523979187012
    9. ' \' → logprob: -5.843523979187012
    10. 'n' → logprob: -6.343523979187012

Token 193: '    ' (ID: 257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2054501175880432
    2. '<|end|>' → logprob: -2.0804500579833984
    3. ' 
' → logprob: -3.0804500579833984
    4. '#' → logprob: -5.205450057983398
    5. '
' → logprob: -6.205450057983398
    6. 'for' → logprob: -6.705450057983398
    7. ' for' → logprob: -6.705450057983398
    8. '  
' → logprob: -7.080450057983398
    9. '<|end|>' → logprob: -7.205450057983398
    10. ' \' → logprob: -7.330450057983398

Token 194: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22035232186317444
    2. '<|end|>' → logprob: -2.4703524112701416
    3. ' 
' → logprob: -2.8453524112701416
    4. '\n' → logprob: -4.3453521728515625
    5. '  
' → logprob: -4.5953521728515625
    6. ' \' → logprob: -4.5953521728515625
    7. '
' → logprob: -4.9703521728515625
    8. '\' → logprob: -5.4703521728515625
    9. ' for' → logprob: -6.3453521728515625
    10. '<|end|>' → logprob: -6.4703521728515625

Token 195: ' Select' (ID: 13482)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31741249561309814
    2. 'for' → logprob: -2.3174123764038086
    3. ' i' → logprob: -3.3174123764038086
    4. ' pass' → logprob: -3.5674123764038086
    5. ' ' → logprob: -3.8174123764038086
    6. ' u' → logprob: -4.567412376403809
    7. ' node' → logprob: -4.692412376403809
    8. '<|end|>' → logprob: -4.692412376403809
    9. 'i' → logprob: -5.067412376403809
    10. ' None' → logprob: -5.192412376403809

Token 196: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3270350396633148
    2. 'the' → logprob: -1.3270350694656372
    3. 'i' → logprob: -5.577034950256348
    4. ' i' → logprob: -5.952034950256348
    5. 'min' → logprob: -6.452034950256348
    6. ' a' → logprob: -7.202034950256348
    7. 'a' → logprob: -7.327034950256348
    8. ' any' → logprob: -7.452034950256348
    9. 'node' → logprob: -7.577034950256348
    10. 'u' → logprob: -7.952034950256348

Token 197: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0019537294283509254
    2. ' assigned' → logprob: -7.126953601837158
    3. '.' → logprob: -7.751953601837158
    4. 'ass' → logprob: -8.876954078674316
    5. '#' → logprob: -9.001954078674316
    6. '?' → logprob: -9.126954078674316
    7. 'a' → logprob: -9.751954078674316
    8. ')' → logprob: -10.001954078674316
    9. '=' → logprob: -10.376954078674316
    10. '   ' → logprob: -10.501954078674316

Token 199: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6207517981529236
    2. '<|end|>' → logprob: -1.2457518577575684
    3. ' ' → logprob: -2.3707518577575684
    4. '?' → logprob: -2.9957518577575684
    5. 'node' → logprob: -3.6207518577575684
    6. '<|end|>' → logprob: -6.495751857757568
    7. ' ?' → logprob: -7.620751857757568
    8. '[node' → logprob: -8.12075138092041
    9. ')' → logprob: -8.24575138092041
    10. ' question' → logprob: -8.37075138092041

Token 200: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '    ' (ID: 257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26003706455230713
    2. '<|end|>' → logprob: -1.7600370645523071
    3. '#' → logprob: -4.510036945343018
    4. ',' → logprob: -5.260036945343018
    5. '<|end|>' → logprob: -5.260036945343018
    6. ' 
' → logprob: -5.385036945343018
    7. ' (' → logprob: -5.385036945343018
    8. '    ' → logprob: -5.760036945343018
    9. ' for' → logprob: -6.010036945343018
    10. '   ' → logprob: -6.010036945343018

Token 203: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24286463856697083
    2. '#' → logprob: -1.7428646087646484
    3. ' #' → logprob: -3.9928646087646484
    4. ' ' → logprob: -4.617864608764648
    5. '    ' → logprob: -4.742864608764648
    6. '  ' → logprob: -6.617864608764648
    7. '    
' → logprob: -7.492864608764648
    8. '       ' → logprob: -8.367864608764648
    9. '     ' → logprob: -8.742864608764648
    10. ')' → logprob: -8.867864608764648

Token 204: ' Assign' (ID: 60840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43472394347190857
    2. ' for' → logprob: -2.1847238540649414
    3. 'for' → logprob: -2.5597238540649414
    4. ' #' → logprob: -2.8097238540649414
    5. '#' → logprob: -3.0597238540649414
    6. ' ' → logprob: -3.6847238540649414
    7. '    ' → logprob: -4.309723854064941
    8. '  ' → logprob: -5.684723854064941
    9. 'neighbors' → logprob: -6.684723854064941
    10. ' current' → logprob: -6.934723854064941

Token 205: ' smallest' (ID: 42173)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3023662567138672
    2. 'the' → logprob: -2.177366256713867
    3. ''' → logprob: -2.677366256713867
    4. ' a' → logprob: -2.802366256713867
    5. ' ' → logprob: -5.177366256713867
    6. 'a' → logprob: -5.552366256713867
    7. '<|end|>' → logprob: -6.302366256713867
    8. ' next' → logprob: -6.927366256713867
    9. ')' → logprob: -7.052366256713867
    10. ' to' → logprob: -7.302366256713867

Token 206: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48299527168273926
    2. '(' → logprob: -1.7329952716827393
    3. ' letter' → logprob: -2.8579952716827393
    4. 'letter' → logprob: -2.9829952716827393
    5. '_letter' → logprob: -3.1079952716827393
    6. ' ' → logprob: -3.7329952716827393
    7. ' (' → logprob: -4.10799503326416
    8. '('' → logprob: -6.35799503326416
    9. ' _' → logprob: -6.48299503326416
    10. ' lex' → logprob: -6.48299503326416

Token 207: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8247460126876831
    2. ' not' → logprob: -1.324746012687683
    3. '<|end|>' → logprob: -1.574746012687683
    4. '_' → logprob: -3.4497461318969727
    5. ' that' → logprob: -3.8247461318969727
    6. 'a' → logprob: -5.199746131896973
    7. 'not' → logprob: -5.324746131896973
    8. ' '' → logprob: -5.699746131896973
    9. ',' → logprob: -6.074746131896973
    10. ' a' → logprob: -6.199746131896973

Token 208: ' used' (ID: 2061)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05394071713089943
    2. 'in' → logprob: -3.678940773010254
    3. ' used' → logprob: -3.678940773010254
    4. 'used' → logprob: -7.053940773010254
    5. ' ' → logprob: -7.178940773010254
    6. '_' → logprob: -8.553940773010254
    7. '_used' → logprob: -8.678940773010254
    8. ' ' → logprob: -12.678940773010254
    9. '_in' → logprob: -12.928940773010254
    10. ' already' → logprob: -12.928940773010254

Token 209: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.4867714047431946
    2. ' by' → logprob: -0.9867714047431946
    3. ' ' → logprob: -5.736771583557129
    4. '_' → logprob: -5.986771583557129
    5. 'b' → logprob: -6.486771583557129
    6. '<|end|>' → logprob: -6.486771583557129
    7. ',' → logprob: -7.236771583557129
    8. '_by' → logprob: -7.361771583557129
    9. ')' → logprob: -7.486771583557129
    10. '  ' → logprob: -8.611771583557129

Token 210: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.725877583026886
    2. 'neighbors' → logprob: -1.2258775234222412
    3. 'neighbor' → logprob: -2.100877523422241
    4. ' neighbor' → logprob: -2.600877523422241
    5. ' its' → logprob: -3.850877523422241
    6. ' neighboring' → logprob: -6.10087776184082
    7. 'its' → logprob: -7.22587776184082
    8. ' the' → logprob: -7.22587776184082
    9. ' ' → logprob: -8.35087776184082
    10. '_neighbors' → logprob: -8.47587776184082

Token 211: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24493803083896637
    2. 'for' → logprob: -2.8699381351470947
    3. '

' → logprob: -3.1199381351470947
    4. '_' → logprob: -3.4949381351470947
    5. '<|end|>' → logprob: -3.4949381351470947
    6. '.' → logprob: -3.9949381351470947
    7. '#' → logprob: -5.119937896728516
    8. ' for' → logprob: -5.369937896728516
    9. '' → logprob: -5.494937896728516
    10. '_
' → logprob: -5.869937896728516

Token 212: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5079880952835083
    2. 'for' → logprob: -2.2579879760742188
    3. '

' → logprob: -2.5079879760742188
    4. '.' → logprob: -2.5079879760742188
    5. 'def' → logprob: -3.8829879760742188
    6. '.
' → logprob: -3.8829879760742188
    7. '_' → logprob: -3.8829879760742188
    8. '#' → logprob: -3.8829879760742188
    9. ' for' → logprob: -4.632987976074219
    10. '_
' → logprob: -5.257987976074219

Token 213: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1373758167028427
    2. 'un' → logprob: -3.512375831604004
    3. '?' → logprob: -3.887375831604004
    4. '.' → logprob: -3.887375831604004
    5. '
' → logprob: -4.262375831604004
    6. 'while' → logprob: -4.887375831604004
    7. ' for' → logprob: -5.137375831604004
    8. '

' → logprob: -5.262375831604004
    9. '#' → logprob: -5.637375831604004
    10. 'def' → logprob: -5.637375831604004

Token 214: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07701721042394638
    2. '.' → logprob: -3.702017307281494
    3. 'un' → logprob: -4.577017307281494
    4. '?' → logprob: -5.202017307281494
    5. 'while' → logprob: -5.327017307281494
    6. 'visited' → logprob: -5.452017307281494
    7. '
' → logprob: -5.577017307281494
    8. ' for' → logprob: -5.577017307281494
    9. 'used' → logprob: -5.702017307281494
    10. '.
' → logprob: -6.077017307281494

Token 215: ' Repeat' (ID: 75886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1360868364572525
    2. ' for' → logprob: -3.136086940765381
    3. 'while' → logprob: -3.511086940765381
    4. 'def' → logprob: -3.761086940765381
    5. 'visited' → logprob: -4.386086940765381
    6. '#' → logprob: -5.136086940765381
    7. 'import' → logprob: -5.636086940765381
    8. ' while' → logprob: -6.386086940765381
    9. 'from' → logprob: -6.511086940765381
    10. '
' → logprob: -6.886086940765381

Token 216: ' until' (ID: 4609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38374462723731995
    2. '
' → logprob: -1.7587445974349976
    3. '?' → logprob: -3.008744716644287
    4. '

' → logprob: -3.258744716644287
    5. ' for' → logprob: -3.383744716644287
    6. '.' → logprob: -5.008744716644287
    7. '#' → logprob: -5.633744716644287
    8. 'def' → logprob: -5.758744716644287
    9. '?
' → logprob: -6.758744716644287
    10. 'while' → logprob: -6.883744716644287

Token 217: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.23587653040885925
    2. 'all' → logprob: -1.7358765602111816
    3. ' no' → logprob: -3.9858765602111816
    4. 'None' → logprob: -4.735876560211182
    5. ' None' → logprob: -5.360876560211182
    6. 'no' → logprob: -7.110876560211182
    7. 'assigned' → logprob: -7.360876560211182
    8. ' assigned' → logprob: -8.735876083374023
    9. ' ' → logprob: -9.860876083374023
    10. ' none' → logprob: -10.360876083374023

Token 218: ' assigned' (ID: 21482)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.2974240183830261
    2. '_' → logprob: -1.672424077987671
    3. 'for' → logprob: -3.797424077987671
    4. 'assigned' → logprob: -4.047423839569092
    5. '#' → logprob: -5.422423839569092
    6. '.' → logprob: -5.547423839569092
    7. 'question' → logprob: -5.672423839569092
    8. '
' → logprob: -5.797423839569092
    9. '?_' → logprob: -5.797423839569092
    10. '_question' → logprob: -6.172423839569092

Token 219: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8956022262573242
    2. '
' → logprob: -1.5206022262573242
    3. '.' → logprob: -1.8956022262573242
    4. '?' → logprob: -3.145602226257324
    5. '#' → logprob: -3.145602226257324
    6. '

' → logprob: -3.270602226257324
    7. '.
' → logprob: -3.645602226257324
    8. 'def' → logprob: -4.520602226257324
    9. 'assigned' → logprob: -4.770602226257324
    10. ' for' → logprob: -5.020602226257324

Token 220: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47685784101486206
    2. '
' → logprob: -1.1018579006195068
    3. '

' → logprob: -3.601857900619507
    4. ' for' → logprob: -4.726857662200928
    5. '\n' → logprob: -5.351857662200928
    6. 'def' → logprob: -7.101857662200928
    7. '
' → logprob: -7.226857662200928
    8. '#' → logprob: -7.476857662200928
    9. '  
' → logprob: -7.726857662200928
    10. '\' → logprob: -7.976857662200928

Token 221: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016140762716531754
    2. ' for' → logprob: -5.266140937805176
    3. 'un' → logprob: -5.891140937805176
    4. 'def' → logprob: -6.141140937805176
    5. '?' → logprob: -6.641140937805176
    6. 'visited' → logprob: -6.641140937805176
    7. 'assigned' → logprob: -7.141140937805176
    8. 'used' → logprob: -7.141140937805176
    9. '
' → logprob: -7.641140937805176
    10. 'q' → logprob: -8.516140937805176

Token 222: ' get' (ID: 717)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.5586003065109253
    2. 'complete' → logprob: -1.3086003065109253
    3. 'continue' → logprob: -2.308600425720215
    4. 'do' → logprob: -4.433600425720215
    5. '_complete' → logprob: -4.808600425720215
    6. 'def' → logprob: -4.808600425720215
    7. 'import' → logprob: -5.058600425720215
    8. ' complete' → logprob: -5.308600425720215
    9. '_continue' → logprob: -5.808600425720215
    10. 'fill' → logprob: -5.933600425720215

Token 223: ' lex' (ID: 37772)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.47795119881629944
    2. ' a' → logprob: -1.977951169013977
    3. 'the' → logprob: -2.1029512882232666
    4. 'a' → logprob: -2.7279512882232666
    5. ' ' → logprob: -4.3529510498046875
    6. 'neighbors' → logprob: -4.6029510498046875
    7. '_' → logprob: -5.1029510498046875
    8. ' an' → logprob: -5.7279510498046875
    9. ' neighbors' → logprob: -5.8529510498046875
    10. ')' → logprob: -6.2279510498046875

Token 224: ' smallest' (ID: 42173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5698567628860474
    2. '_' → logprob: -1.0698567628860474
    3. ' smallest' → logprob: -3.069856643676758
    4. 'ic' → logprob: -4.319856643676758
    5. 'i' → logprob: -4.694856643676758
    6. 'space' → logprob: -5.069856643676758
    7. ' _' → logprob: -5.819856643676758
    8. 'a' → logprob: -6.069856643676758
    9. 'e' → logprob: -6.694856643676758
    10. '_small' → logprob: -6.819856643676758

Token 225: ' overall' (ID: 10705)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20250852406024933
    2. ' ' → logprob: -2.5775084495544434
    3. ' _' → logprob: -3.8275084495544434
    4. '_letter' → logprob: -3.9525084495544434
    5. ' letter' → logprob: -5.077508449554443
    6. 'a' → logprob: -5.452508449554443
    7. '_letters' → logprob: -5.452508449554443
    8. ',' → logprob: -5.577508449554443
    9. ' used' → logprob: -5.827508449554443
    10. ')' → logprob: -5.827508449554443

Token 226: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2017498016357422
    2. 'assigned' → logprob: -1.4517498016357422
    3. 'for' → logprob: -2.326749801635742
    4. 'def' → logprob: -2.576749801635742
    5. 'import' → logprob: -3.201749801635742
    6. ',' → logprob: -3.326749801635742
    7. 'used' → logprob: -3.701749801635742
    8. '_used' → logprob: -3.826749801635742
    9. 'visited' → logprob: -4.451749801635742
    10. 'from' → logprob: -4.576749801635742

Token 227: ' assign' (ID: 14975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09604162722826004
    2. '#' → logprob: -3.846041679382324
    3. 'def' → logprob: -3.971041679382324
    4. 'import' → logprob: -4.346041679382324
    5. 'letters' → logprob: -4.471041679382324
    6. 'available' → logprob: -5.221041679382324
    7. ' for' → logprob: -5.971041679382324
    8. 'from' → logprob: -5.971041679382324
    9. 'alphabet' → logprob: -6.346041679382324
    10. 'used' → logprob: -6.471041679382324

Token 228: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4807544946670532
    2. 'for' → logprob: -1.4807544946670532
    3. ' for' → logprob: -1.9807544946670532
    4. '_' → logprob: -2.2307543754577637
    5. ' to' → logprob: -2.4807543754577637
    6. ' i' → logprob: -2.8557543754577637
    7. ' in' → logprob: -3.1057543754577637
    8. 'to' → logprob: -3.7307543754577637
    9. 'in' → logprob: -4.730754375457764
    10. 'letters' → logprob: -4.855754375457764

Token 229: ' order' (ID: 2569)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6876917481422424
    2. 'order' → logprob: -0.8126917481422424
    3. ' order' → logprob: -3.4376916885375977
    4. ' range' → logprob: -4.187691688537598
    5. 'index' → logprob: -5.687691688537598
    6. 'sorted' → logprob: -7.187691688537598
    7. 'for' → logprob: -7.312691688537598
    8. 'lex' → logprob: -7.937691688537598
    9. '0' → logprob: -8.187691688537598
    10. ' index' → logprob: -8.562691688537598

Token 230: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5315130352973938
    2. '
' → logprob: -1.156512975692749
    3. ' for' → logprob: -2.781512975692749
    4. '\n' → logprob: -4.531513214111328
    5. '

' → logprob: -5.031513214111328
    6. 'i' → logprob: -5.531513214111328
    7. 'idx' → logprob: -6.031513214111328
    8. '.' → logprob: -6.406513214111328
    9. '?' → logprob: -6.531513214111328
    10. '#' → logprob: -6.656513214111328

Token 231: ' node' (ID: 4596)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2269226759672165
    2. 'i' → logprob: -2.4769227504730225
    3. 'node' → logprob: -2.6019227504730225
    4. 'indices' → logprob: -4.351922512054443
    5. 'range' → logprob: -4.351922512054443
    6. 'nodes' → logprob: -4.476922512054443
    7. 'in' → logprob: -5.476922512054443
    8. ' index' → logprob: -7.101922512054443
    9. 'indexes' → logprob: -7.101922512054443
    10. 'idx' → logprob: -7.351922512054443

Token 232: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8985885381698608
    2. ' i' → logprob: -2.2735886573791504
    3. ':' → logprob: -2.5235886573791504
    4. ',' → logprob: -2.5235886573791504
    5. 'idx' → logprob: -2.5235886573791504
    6. 'for' → logprob: -2.6485886573791504
    7. '_idx' → logprob: -2.8985886573791504
    8. '
' → logprob: -3.0235886573791504
    9. 'i' → logprob: -3.0235886573791504
    10. ' for' → logprob: -3.1485886573791504

Token 233: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4324262738227844
    2. 'for' → logprob: -1.3074262142181396
    3. '\n' → logprob: -3.5574262142181396
    4. '

' → logprob: -3.5574262142181396
    5. ' for' → logprob: -4.057426452636719
    6. '
' → logprob: -7.182426452636719
    7. ' 
' → logprob: -7.432426452636719
    8. '#' → logprob: -7.432426452636719
    9. '\' → logprob: -7.682426452636719
    10. 'def' → logprob: -7.807426452636719

Token 234: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12504474818706512
    2. ' for' → logprob: -2.500044822692871
    3. 'i' → logprob: -3.875044822692871
    4. '
' → logprob: -5.625044822692871
    5. 'idx' → logprob: -5.625044822692871
    6. ' 
' → logprob: -6.625044822692871
    7. '#' → logprob: -6.625044822692871
    8. ' i' → logprob: -6.750044822692871
    9. 'def' → logprob: -7.750044822692871
    10. 'n' → logprob: -7.750044822692871

Token 235: ' node' (ID: 4596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0733855962753296
    2. ' node' → logprob: -1.6983855962753296
    3. '.' → logprob: -1.9483855962753296
    4. 'assigned' → logprob: -2.823385715484619
    5. 'node' → logprob: -3.073385715484619
    6. ' assigned' → logprob: -3.323385715484619
    7. '[node' → logprob: -3.823385715484619
    8. '?' → logprob: -4.198385715484619
    9. '_' → logprob: -4.198385715484619
    10. ' un' → logprob: -4.198385715484619

Token 236: ' when' (ID: 1261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42468997836112976
    2. '
' → logprob: -1.5496900081634521
    3. ':
' → logprob: -2.924690008163452
    4. ' for' → logprob: -3.424690008163452
    5. ':' → logprob: -3.799690008163452
    6. '\n' → logprob: -4.299689769744873
    7. '

' → logprob: -6.549689769744873
    8. '_' → logprob: -6.674689769744873
    9. '_
' → logprob: -6.799689769744873
    10. '[i' → logprob: -6.799689769744873

Token 237: ' it' (ID: 480)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.01337185874581337
    2. ' assigned' → logprob: -4.76337194442749
    3. 'needed' → logprob: -6.63837194442749
    4. 'True' → logprob: -6.63837194442749
    5. ' True' → logprob: -7.51337194442749
    6. 'a' → logprob: -7.76337194442749
    7. 'None' → logprob: -8.388371467590332
    8. 'visited' → logprob: -8.638371467590332
    9. 'len' → logprob: -9.388371467590332
    10. 'assign' → logprob: -9.388371467590332

Token 238: ' becomes' (ID: 14081)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2369424104690552
    2. 'is' → logprob: -1.3619424104690552
    3. 's' → logprob: -1.7369424104690552
    4. ''s' → logprob: -2.1119422912597656
    5. ' becomes' → logprob: -2.4869422912597656
    6. ' has' → logprob: -3.1119422912597656
    7. 'has' → logprob: -3.8619422912597656
    8. 'be' → logprob: -5.861942291259766
    9. '#' → logprob: -6.986942291259766
    10. ' gets' → logprob: -7.236942291259766

Token 239: ' available' (ID: 2839)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.2102298736572266
    2. 'ready' → logprob: -1.5852298736572266
    3. 'assigned' → logprob: -1.7102298736572266
    4. 'time' → logprob: -2.3352298736572266
    5. 'necessary' → logprob: -2.7102298736572266
    6. 'assign' → logprob: -2.9602298736572266
    7. 'possible' → logprob: -3.4602298736572266
    8. 'its' → logprob: -3.8352298736572266
    9. 'needed' → logprob: -4.460229873657227
    10. 'None' → logprob: -4.710229873657227

Token 240: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2924209237098694
    2. 'for' → logprob: -1.9174208641052246
    3. '

' → logprob: -3.6674208641052246
    4. ' for' → logprob: -4.542420864105225
    5. ',' → logprob: -4.792420864105225
    6. '.' → logprob: -4.792420864105225
    7. '#' → logprob: -4.792420864105225
    8. '\n' → logprob: -5.417420864105225
    9. '' → logprob: -5.542420864105225
    10. '<|end|>' → logprob: -5.792420864105225

Token 241: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0461529865860939
    2. '
' → logprob: -3.9211530685424805
    3. ' for' → logprob: -4.4211530685424805
    4. 'assigned' → logprob: -5.7961530685424805
    5. 'visited' → logprob: -5.7961530685424805
    6. 'def' → logprob: -6.2961530685424805
    7. 'used' → logprob: -6.6711530685424805
    8. '

' → logprob: -7.0461530685424805
    9. '\n' → logprob: -7.5461530685424805
    10. '```' → logprob: -8.17115306854248

Token 242: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14088065922260284
    2. 'visited' → logprob: -3.015880584716797
    3. 'used' → logprob: -3.265880584716797
    4. 'assigned' → logprob: -4.390880584716797
    5. 'available' → logprob: -4.515880584716797
    6. 'un' → logprob: -4.640880584716797
    7. 'def' → logprob: -4.890880584716797
    8. 'queue' → logprob: -7.140880584716797
    9. 'next' → logprob: -7.515880584716797
    10. '```' → logprob: -8.015880584716797

Token 243: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0520682334899902
    2. '#' → logprob: -1.3020682334899902
    3. ' for' → logprob: -2.1770682334899902
    4. ' the' → logprob: -2.9270682334899902
    5. 'the' → logprob: -3.1770682334899902
    6. ' #' → logprob: -3.3020682334899902
    7. 'assigned' → logprob: -4.17706823348999
    8. 'graph' → logprob: -4.42706823348999
    9. 'import' → logprob: -5.05206823348999
    10. 'while' → logprob: -5.05206823348999

Token 244: ' says' (ID: 5003)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.117295503616333
    2. '.' → logprob: -1.492295503616333
    3. ' is' → logprob: -2.117295503616333
    4. '=' → logprob: -2.242295503616333
    5. '#' → logprob: -2.867295503616333
    6. ',' → logprob: -3.242295503616333
    7. '_' → logprob: -4.117295265197754
    8. ' ' → logprob: -4.617295265197754
    9. 'is' → logprob: -4.617295265197754
    10. ')' → logprob: -4.742295265197754

Token 245: ' pick' (ID: 5230)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6923149824142456
    2. '...' → logprob: -1.4423149824142456
    3. '<|end|>' → logprob: -2.317315101623535
    4. ' ' → logprob: -2.442315101623535
    5. ':' → logprob: -3.442315101623535
    6. ',' → logprob: -4.192315101623535
    7. '.' → logprob: -4.692315101623535
    8. '<|end|>' → logprob: -5.692315101623535
    9. ' #' → logprob: -6.192315101623535
    10. '?' → logprob: -6.567315101623535

Token 246: ' any' (ID: 1062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0488092340528965
    2. 'the' → logprob: -4.048809051513672
    3. ' next' → logprob: -4.798809051513672
    4. ' an' → logprob: -4.923809051513672
    5. ' a' → logprob: -5.548809051513672
    6. ' one' → logprob: -5.798809051513672
    7. ' node' → logprob: -6.798809051513672
    8. ' any' → logprob: -6.923809051513672
    9. ' smallest' → logprob: -7.048809051513672
    10. ' ' → logprob: -7.298809051513672

Token 247: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3246721029281616
    2. ':' → logprob: -1.4496721029281616
    3. '
' → logprob: -1.9496721029281616
    4. '.' → logprob: -2.699672222137451
    5. ',' → logprob: -2.949672222137451
    6. 'for' → logprob: -3.074672222137451
    7. '#' → logprob: -3.699672222137451
    8. '[' → logprob: -3.824672222137451
    9. '<|end|>' → logprob: -3.824672222137451
    10. ' for' → logprob: -4.449672222137451

Token 248: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0002703953068703413
    2. 'visited' → logprob: -9.12527084350586
    3. 'processed' → logprob: -10.25027084350586
    4. '```' → logprob: -10.37527084350586
    5. 'used' → logprob: -10.62527084350586
    6. 'ass' → logprob: -11.12527084350586
    7. ' assigned' → logprob: -11.62527084350586
    8. 'finished' → logprob: -11.75027084350586
    9. 'assign' → logprob: -11.87527084350586
    10. 'a' → logprob: -12.12527084350586

Token 249: ' node' (ID: 4596)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33448243141174316
    2. '?' → logprob: -2.584482431411743
    3. '
' → logprob: -2.709482431411743
    4. 'while' → logprob: -3.459482431411743
    5. 'assigned' → logprob: -4.084482192993164
    6. '#' → logprob: -4.084482192993164
    7. ' for' → logprob: -4.209482192993164
    8. '\n' → logprob: -4.459482192993164
    9. '.' → logprob: -4.709482192993164
    10. '

' → logprob: -4.834482192993164

Token 251: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6928869485855103
    2. '
' → logprob: -1.4428869485855103
    3. ':' → logprob: -2.1928868293762207
    4. ' 
' → logprob: -3.5678868293762207
    5. ' ' → logprob: -4.067886829376221
    6. '\n' → logprob: -4.067886829376221
    7. ',' → logprob: -4.567886829376221
    8. 'not' → logprob: -4.692886829376221
    9. '.' → logprob: -4.942886829376221
    10. '  
' → logprob: -5.067886829376221

Token 252: ' choosing' (ID: 20296)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20577339828014374
    2. 'for' → logprob: -1.9557733535766602
    3. 'pass' → logprob: -3.45577335357666
    4. ' for' → logprob: -6.20577335357666
    5. 'while' → logprob: -6.20577335357666
    6. 'continue' → logprob: -6.33077335357666
    7. 'assigned' → logprob: -6.58077335357666
    8. ' #' → logprob: -7.08077335357666
    9. 'i' → logprob: -7.08077335357666
    10. '
' → logprob: -7.33077335357666

Token 253: ' in' (ID: 306)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2311011403799057
    2. 'the' → logprob: -1.731101155281067
    3. ' min' → logprob: -4.606101036071777
    4. ' in' → logprob: -4.981101036071777
    5. 'min' → logprob: -4.981101036071777
    6. ' next' → logprob: -6.731101036071777
    7. 'in' → logprob: -7.106101036071777
    8. ' node' → logprob: -7.231101036071777
    9. ' i' → logprob: -7.981101036071777
    10. 'i' → logprob: -8.106101036071777

Token 254: ' ascending' (ID: 75564)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.04780079424381256
    2. 'range' → logprob: -3.4228007793426514
    3. 'index' → logprob: -4.5478010177612305
    4. ' order' → logprob: -6.1728010177612305
    5. 'node' → logprob: -7.2978010177612305
    6. 'in' → logprob: -7.6728010177612305
    7. 'sorted' → logprob: -9.79780101776123
    8. ' range' → logprob: -10.17280101776123
    9. 'lex' → logprob: -10.54780101776123
    10. '0' → logprob: -10.54780101776123

Token 255: ' index' (ID: 3472)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.36376285552978516
    2. '<|end|>' → logprob: -1.6137628555297852
    3. ' order' → logprob: -3.113762855529785
    4. '_' → logprob: -3.613762855529785
    5. ')' → logprob: -4.488762855529785
    6. 'index' → logprob: -4.613762855529785
    7. '_order' → logprob: -4.863762855529785
    8. '<|end|>' → logprob: -6.113762855529785
    9. '_index' → logprob: -6.738762855529785
    10. ']' → logprob: -8.613762855529785

Token 256: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35629528760910034
    2. '
' → logprob: -2.106295347213745
    3. '\n' → logprob: -2.981295347213745
    4. '#' → logprob: -4.106295108795166
    5. 'def' → logprob: -4.231295108795166
    6. ')' → logprob: -4.356295108795166
    7. ' for' → logprob: -4.481295108795166
    8. '\' → logprob: -4.606295108795166
    9. '.' → logprob: -4.981295108795166
    10. '

' → logprob: -5.106295108795166

Token 257: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015927141532301903
    2. '
' → logprob: -4.890927314758301
    3. ' for' → logprob: -5.515927314758301
    4. 'def' → logprob: -6.765927314758301
    5. '?' → logprob: -7.015927314758301
    6. 'assigned' → logprob: -7.265927314758301
    7. '\n' → logprob: -8.2659273147583
    8. '

' → logprob: -8.2659273147583
    9. 'i' → logprob: -8.6409273147583
    10. 'idx' → logprob: -8.8909273147583

Token 258: ' acceptable' (ID: 34028)
  Prédit: 'acceptable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acceptable' → logprob: -1.131926417350769
    2. 'fine' → logprob: -1.131926417350769
    3. 'reasonable' → logprob: -1.881926417350769
    4. 'valid' → logprob: -2.6319265365600586
    5. ' acceptable' → logprob: -3.6319265365600586
    6. ' fine' → logprob: -4.006926536560059
    7. ' reasonable' → logprob: -4.006926536560059
    8. 'consistent' → logprob: -4.256926536560059
    9. 'a' → logprob: -4.506926536560059
    10. 'good' → logprob: -4.756926536560059

Token 259: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05116448923945427
    2. 'def' → logprob: -3.801164388656616
    3. '?' → logprob: -4.051164627075195
    4. 'assigned' → logprob: -5.676164627075195
    5. 'question' → logprob: -6.926164627075195
    6. ' for' → logprob: -6.926164627075195
    7. 'q' → logprob: -7.176164627075195
    8. 'un' → logprob: -7.301164627075195
    9. 'visited' → logprob: -7.426164627075195
    10. 'idx' → logprob: -7.801164627075195

Token 260: ' get' (ID: 717)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10103627294301987
    2. 'complete' → logprob: -2.851036310195923
    3. ' continue' → logprob: -4.601036071777344
    4. 'ensure' → logprob: -5.101036071777344
    5. 'implement' → logprob: -5.601036071777344
    6. 'pro' → logprob: -5.851036071777344
    7. 'assign' → logprob: -6.101036071777344
    8. ' complete' → logprob: -6.476036071777344
    9. 'maint' → logprob: -6.601036071777344
    10. 'process' → logprob: -6.726036071777344

Token 261: ' lex' (ID: 37772)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4875641465187073
    2. 'lex' → logprob: -1.9875640869140625
    3. ' lex' → logprob: -2.1125640869140625
    4. '#' → logprob: -2.7375640869140625
    5. ' the' → logprob: -3.3625640869140625
    6. 'a' → logprob: -3.9875640869140625
    7. 'minimal' → logprob: -5.6125640869140625
    8. ' a' → logprob: -5.9875640869140625
    9. ' minimal' → logprob: -7.1125640869140625
    10. 'consistent' → logprob: -7.7375640869140625

Token 262: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.251013159751892
    2. '_' → logprob: -1.376013159751892
    3. ' smallest' → logprob: -1.376013159751892
    4. ' _' → logprob: -2.7510132789611816
    5. ' )' → logprob: -3.0010132789611816
    6. ' ]' → logprob: -3.6260132789611816
    7. ')' → logprob: -4.251013278961182
    8. '[' → logprob: -5.126013278961182
    9. 'a' → logprob: -5.126013278961182
    10. '<|end|>' → logprob: -5.126013278961182

Token 263: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09814681112766266
    2. '
' → logprob: -3.473146915435791
    3. 'assigned' → logprob: -3.973146915435791
    4. 'available' → logprob: -4.723146915435791
    5. ' for' → logprob: -4.973146915435791
    6. '#' → logprob: -5.223146915435791
    7. '

' → logprob: -5.348146915435791
    8. 'used' → logprob: -5.848146915435791
    9. 'def' → logprob: -5.848146915435791
    10. '?' → logprob: -6.098146915435791

Token 264: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09218110144138336
    2. '
' → logprob: -3.3421812057495117
    3. '\n' → logprob: -3.4671812057495117
    4. ' for' → logprob: -4.467181205749512
    5. '\' → logprob: -6.467181205749512
    6. '?' → logprob: -6.592181205749512
    7. ':' → logprob: -6.842181205749512
    8. '

' → logprob: -6.967181205749512
    9. '#' → logprob: -7.217181205749512
    10. 'a' → logprob: -7.592181205749512

Token 265: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04084322229027748
    2. 'used' → logprob: -4.6658430099487305
    3. 'assigned' → logprob: -4.7908430099487305
    4. 'visited' → logprob: -5.0408430099487305
    5. 'idx' → logprob: -5.4158430099487305
    6. 'un' → logprob: -5.6658430099487305
    7. 'def' → logprob: -5.7908430099487305
    8. 'pos' → logprob: -6.7908430099487305
    9. 'next' → logprob: -7.2908430099487305
    10. 'available' → logprob: -7.4158430099487305

Token 266: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3383787870407104
    2. 'for' → logprob: -2.08837890625
    3. 'def' → logprob: -2.33837890625
    4. 'un' → logprob: -2.58837890625
    5. '?' → logprob: -2.58837890625
    6. 'remaining' → logprob: -2.58837890625
    7. 'queue' → logprob: -2.96337890625
    8. 'import' → logprob: -3.21337890625
    9. 'next' → logprob: -3.46337890625
    10. '.' → logprob: -3.46337890625

Token 267: ' states' (ID: 9407)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9893375635147095
    2. ' continues' → logprob: -1.7393375635147095
    3. ' is' → logprob: -1.8643375635147095
    4. 'def' → logprob: -3.23933744430542
    5. ''' → logprob: -3.23933744430542
    6. ':' → logprob: -3.36433744430542
    7. ' remains' → logprob: -3.86433744430542
    8. ' was' → logprob: -4.23933744430542
    9. ' seems' → logprob: -4.23933744430542
    10. '.' → logprob: -4.36433744430542

Token 268: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6298168301582336
    2. 'for' → logprob: -2.129816770553589
    3. 'def' → logprob: -2.254816770553589
    4. ':
' → logprob: -3.004816770553589
    5. '
' → logprob: -3.379816770553589
    6. '#' → logprob: -3.379816770553589
    7. '?' → logprob: -3.504816770553589
    8. 'assigned' → logprob: -3.754816770553589
    9. ' for' → logprob: -4.004817008972168
    10. ',' → logprob: -4.754817008972168

Token 269: 'その' (ID: 32894)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.44906479120254517
    2. ''' → logprob: -1.8240647315979004
    3. '"' → logprob: -1.9490647315979004
    4. '.' → logprob: -5.1990647315979
    5. '#' → logprob: -5.4490647315979
    6. ' for' → logprob: -5.4490647315979
    7. 'for' → logprob: -5.6990647315979
    8. '"?' → logprob: -5.6990647315979
    9. '?"' → logprob: -5.8240647315979
    10. 'a' → logprob: -5.9490647315979

Token 270: 'よう' (ID: 72683)
  Prédit: 'ま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ま' → logprob: -0.19601699709892273
    2. '続きを' → logprob: -3.321017026901245
    3. '後' → logprob: -3.321017026901245
    4. ''' → logprob: -4.196016788482666
    5. '続' → logprob: -4.321016788482666
    6. 'コード' → logprob: -4.321016788482666
    7. '時' → logprob: -5.071016788482666
    8. '次' → logprob: -5.071016788482666
    9. '先' → logprob: -5.321016788482666
    10. 'の' → logprob: -5.321016788482666

Token 271: 'な' (ID: 5784)
  Prédit: 'な'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.13085642457008362
    2. 'に' → logprob: -2.255856513977051
    3. '.' → logprob: -5.755856513977051
    4. 'です' → logprob: -5.880856513977051
    5. '#' → logprob: -6.505856513977051
    6. 'が' → logprob: -6.880856513977051
    7. 'コード' → logprob: -7.005856513977051
    8. '?' → logprob: -7.130856513977051
    9. 'で' → logprob: -7.130856513977051
    10. '[' → logprob: -7.380856513977051

Token 272: '丸' (ID: 170295)
  Prédit: '文字'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '文字' → logprob: -1.1956042051315308
    2. 'コード' → logprob: -1.1956042051315308
    3. 'グ' → logprob: -2.6956043243408203
    4. '?' → logprob: -3.3206043243408203
    5. 'assign' → logprob: -3.3206043243408203
    6. '字' → logprob: -3.8206043243408203
    7. '割' → logprob: -3.9456043243408203
    8. 'ノ' → logprob: -3.9456043243408203
    9. '入力' → logprob: -4.07060432434082
    10. '解' → logprob: -4.07060432434082

Token 273: 'が' (ID: 6632)
  Prédit: '括'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '括' → logprob: -0.32603880763053894
    2. '```' → logprob: -1.7010388374328613
    3. '_' → logprob: -3.2010388374328613
    4. '``' → logprob: -5.076038837432861
    5. ''' → logprob: -5.076038837432861
    6. '`' → logprob: -5.326038837432861
    7. '囲' → logprob: -5.326038837432861
    8. '印' → logprob: -5.451038837432861
    9. 'を' → logprob: -5.576038837432861
    10. 'か' → logprob: -5.951038837432861

Token 274: '存在' (ID: 53591)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.7592470645904541
    2. 'の' → logprob: -1.509247064590454
    3. 'を' → logprob: -2.134247064590454
    4. ''' → logprob: -3.884247064590454
    5. '?' → logprob: -3.884247064590454
    6. 'は' → logprob: -3.884247064590454
    7. 'に' → logprob: -4.009246826171875
    8. '"' → logprob: -4.134246826171875
    9. ' を' → logprob: -4.134246826171875
    10. ' が' → logprob: -4.384246826171875

Token 275: 'し' (ID: 3829)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4586865901947021
    2. '_' → logprob: -1.5836865901947021
    3. 'が' → logprob: -1.7086865901947021
    4. '.' → logprob: -2.583686590194702
    5. 'の' → logprob: -3.583686590194702
    6. 's' → logprob: -3.708686590194702
    7. 'は' → logprob: -3.708686590194702
    8. '?' → logprob: -3.833686590194702
    9. ')' → logprob: -3.958686590194702
    10. 'し' → logprob: -4.083686828613281

Token 276: 'ない' (ID: 47592)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.326424241065979
    2. 'た' → logprob: -1.826424241065979
    3. ''' → logprob: -2.3264241218566895
    4. ')' → logprob: -2.5764241218566895
    5. 'て' → logprob: -2.8264241218566895
    6. 'ます' → logprob: -2.8264241218566895
    7. '_' → logprob: -3.4514241218566895
    8. ':' → logprob: -3.5764241218566895
    9. '.' → logprob: -3.5764241218566895
    10. '"' → logprob: -3.7014241218566895

Token 277: '場合' (ID: 72486)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7053725719451904
    2. '.' → logprob: -2.0803725719451904
    3. '。' → logprob: -2.4553725719451904
    4. ')' → logprob: -2.9553725719451904
    5. '":' → logprob: -3.0803725719451904
    6. '"' → logprob: -3.0803725719451904
    7. '):' → logprob: -3.2053725719451904
    8. ':
' → logprob: -3.3303725719451904
    9. '")' → logprob: -4.4553728103637695
    10. '?' → logprob: -5.2053728103637695

Token 278: 'は' (ID: 5205)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07218626141548157
    2. ',' → logprob: -2.947186231613159
    3. ':
' → logprob: -4.947186470031738
    4. '):' → logprob: -5.697186470031738
    5. '.' → logprob: -6.072186470031738
    6. ')' → logprob: -6.822186470031738
    7. '":' → logprob: -7.072186470031738
    8. '：' → logprob: -7.697186470031738
    9. '。' → logprob: -8.197186470031738
    10. '"' → logprob: -8.697186470031738

Token 279: 'この' (ID: 31859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18167045712471008
    2. 'print' → logprob: -2.5566704273223877
    3. '
' → logprob: -3.9316704273223877
    4. '"' → logprob: -4.306670665740967
    5. ''' → logprob: -4.431670665740967
    6. '0' → logprob: -5.056670665740967
    7. 'No' → logprob: -5.306670665740967
    8. 'no' → logprob: -5.431670665740967
    9. 'す' → logprob: -6.056670665740967
    10. 'は' → logprob: -6.181670665740967

Token 280: '処' (ID: 158556)
  Prédit: 'コード'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'コード' → logprob: -0.28643420338630676
    2. '```' → logprob: -3.4114341735839844
    3. 'ため' → logprob: -3.6614341735839844
    4. '問題' → logprob: -3.7864341735839844
    5. '場合' → logprob: -4.036434173583984
    6. '"' → logprob: -4.036434173583984
    7. 'す' → logprob: -4.036434173583984
    8. '.' → logprob: -4.411434173583984
    9. '?' → logprob: -4.661434173583984
    10. ':' → logprob: -4.911434173583984

Token 281: '理' (ID: 5584)
  Prédit: '理'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '理' → logprob: -0.037861067801713943
    2. '```' → logprob: -4.662860870361328
    3. '置' → logprob: -4.912860870361328
    4. '断' → logprob: -5.912860870361328
    5. '#' → logprob: -6.412860870361328
    6. 'import' → logprob: -6.537860870361328
    7. 'f' → logprob: -6.662860870361328
    8. 'ン' → logprob: -6.662860870361328
    9. 'if' → logprob: -6.787860870361328
    10. 'exit' → logprob: -7.037860870361328

Token 282: 'を' (ID: 7277)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -1.0005977153778076
    2. '#' → logprob: -2.0005977153778076
    3. '.' → logprob: -2.0005977153778076
    4. 'を' → logprob: -2.2505977153778076
    5. 'が' → logprob: -2.5005977153778076
    6. 'continue' → logprob: -3.1255977153778076
    7. '。' → logprob: -3.5005977153778076
    8. '続きを' → logprob: -3.8755977153778076
    9. ')' → logprob: -4.375597953796387
    10. '...' → logprob: -4.625597953796387

Token 283: '終了' (ID: 166212)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4174445569515228
    2. 'break' → logprob: -1.9174445867538452
    3. '続' → logprob: -2.1674444675445557
    4. '終了' → logprob: -3.2924444675445557
    5. '中' → logprob: -3.7924444675445557
    6. 'skip' → logprob: -5.792444705963135
    7. '```' → logprob: -5.792444705963135
    8. '行' → logprob: -5.917444705963135
    9. 'や' → logprob: -6.417444705963135
    10. 'for' → logprob: -6.792444705963135

Token 284: 'する' (ID: 39065)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.722062110900879
    2. '.' → logprob: -1.722062110900879
    3. '
' → logprob: -1.847062110900879
    4. '。' → logprob: -1.972062110900879
    5. '<|end|>' → logprob: -2.722062110900879
    6. '"' → logprob: -2.972062110900879
    7. ')' → logprob: -3.097062110900879
    8. '<|end|>' → logprob: -3.222062110900879
    9. 'します' → logprob: -3.722062110900879
    10. 'し' → logprob: -3.972062110900879

Token 285: '"' (ID: 1)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5269090533256531
    2. '.' → logprob: -2.276909112930298
    3. '
' → logprob: -2.276909112930298
    4. '"' → logprob: -2.776909112930298
    5. '。' → logprob: -2.901909112930298
    6. 'for' → logprob: -4.151908874511719
    7. '#
' → logprob: -4.776908874511719
    8. '?' → logprob: -5.276908874511719
    9. '。
' → logprob: -5.276908874511719
    10. ')' → logprob: -5.276908874511719

Token 286: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08450134843587875
    2. '
' → logprob: -2.834501266479492
    3. '#' → logprob: -5.334501266479492
    4. ' for' → logprob: -5.584501266479492
    5. 'while' → logprob: -5.834501266479492
    6. '?' → logprob: -5.959501266479492
    7. '.' → logprob: -6.084501266479492
    8. 'def' → logprob: -6.459501266479492
    9. 'assigned' → logprob: -6.834501266479492
    10. '

' → logprob: -7.459501266479492

Token 287: ' so' (ID: 813)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2831604480743408
    2. 'for' → logprob: -1.2831604480743408
    3. '#' → logprob: -1.6581604480743408
    4. 'while' → logprob: -2.783160448074341
    5. ' 
' → logprob: -3.658160448074341
    6. ' for' → logprob: -3.658160448074341
    7. '\n' → logprob: -3.783160448074341
    8. '  
' → logprob: -3.908160448074341
    9. 'def' → logprob: -4.158160209655762
    10. 'un' → logprob: -4.658160209655762

Token 288: ' keep' (ID: 3357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8827210664749146
    2. 'pass' → logprob: -1.3827210664749146
    3. 'break' → logprob: -2.007720947265625
    4. '#' → logprob: -2.507720947265625
    5. 'while' → logprob: -2.632720947265625
    6. ' for' → logprob: -4.632720947265625
    7. 'continue' → logprob: -5.132720947265625
    8. ' pass' → logprob: -5.507720947265625
    9. '.' → logprob: -5.507720947265625
    10. ' break' → logprob: -5.757720947265625

Token 289: ' assigning' (ID: 123177)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0937386751174927
    2. ':' → logprob: -1.5937386751174927
    3. 'assign' → logprob: -1.5937386751174927
    4. 'going' → logprob: -2.718738555908203
    5. 'running' → logprob: -3.468738555908203
    6. ':
' → logprob: -3.718738555908203
    7. 'for' → logprob: -3.843738555908203
    8. 'checking' → logprob: -3.968738555908203
    9. 'trying' → logprob: -4.468738555908203
    10. 'processing' → logprob: -4.593738555908203

Token 290: ' until' (ID: 4609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15088580548763275
    2. 'while' → logprob: -2.525885820388794
    3. '
' → logprob: -3.525885820388794
    4. ' for' → logprob: -3.775885820388794
    5. '?' → logprob: -6.400885581970215
    6. ' while' → logprob: -6.900885581970215
    7. '\n' → logprob: -7.025885581970215
    8. '#' → logprob: -7.525885581970215
    9. '```' → logprob: -7.900885581970215
    10. '.' → logprob: -7.900885581970215

Token 291: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.21107567846775055
    2. 'all' → logprob: -2.461075782775879
    3. 'not' → logprob: -3.086075782775879
    4. 'True' → logprob: -3.711075782775879
    5. 'False' → logprob: -3.961075782775879
    6. ' no' → logprob: -4.336075782775879
    7. 'None' → logprob: -7.586075782775879
    8. 'len' → logprob: -7.711075782775879
    9. 'there' → logprob: -7.836075782775879
    10. ' not' → logprob: -8.211075782775879

Token 292: ' nodes' (ID: 15749)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.0206300020217896
    2. 'None' → logprob: -1.3956300020217896
    3. ' None' → logprob: -2.0206298828125
    4. ' un' → logprob: -2.7706298828125
    5. ' assigned' → logprob: -2.7706298828125
    6. '?' → logprob: -3.3956298828125
    7. ' True' → logprob: -3.6456298828125
    8. ' '?'' → logprob: -3.8956298828125
    9. ''' → logprob: -4.2706298828125
    10. 'True' → logprob: -4.2706298828125

Token 293: ' remain' (ID: 12760)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8603044152259827
    2. 'with' → logprob: -0.9853044152259827
    3. '_' → logprob: -3.485304355621338
    4. ' ' → logprob: -3.860304355621338
    5. 'assigned' → logprob: -3.985304355621338
    6. '[' → logprob: -4.485304355621338
    7. '#' → logprob: -4.610304355621338
    8. 'が' → logprob: -4.735304355621338
    9. '[i' → logprob: -4.985304355621338
    10. ',' → logprob: -5.110304355621338

Token 294: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2686070501804352
    2. '?' → logprob: -1.5186070203781128
    3. ' for' → logprob: -5.393607139587402
    4. 'assigned' → logprob: -6.143607139587402
    5. 'question' → logprob: -6.518607139587402
    6. '.' → logprob: -6.643607139587402
    7. '#' → logprob: -6.643607139587402
    8. 'un' → logprob: -6.768607139587402
    9. 'visited' → logprob: -7.143607139587402
    10. 'used' → logprob: -7.268607139587402

Token 295: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -5.9153885558771435e-06
    2. ' assigned' → logprob: -13.000005722045898
    3. '```' → logprob: -13.250005722045898
    4. '#' → logprob: -14.500005722045898
    5. 'None' → logprob: -15.125005722045898
    6. '.' → logprob: -15.750005722045898
    7. '[' → logprob: -16.0000057220459
    8. '`' → logprob: -16.0000057220459
    9. 'ass' → logprob: -16.3750057220459
    10. ')' → logprob: -16.6250057220459

Token 296: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1942306011915207
    2. '?' → logprob: -2.819230556488037
    3. 'question' → logprob: -2.944230556488037
    4. 'while' → logprob: -3.444230556488037
    5. 'un' → logprob: -4.569230556488037
    6. 'queue' → logprob: -5.319230556488037
    7. 'visited' → logprob: -5.569230556488037
    8. 'q' → logprob: -5.694230556488037
    9. 'assigned' → logprob: -5.819230556488037
    10. 'changed' → logprob: -5.944230556488037

Token 297: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04549838975071907
    2. '?' → logprob: -3.4204983711242676
    3. 'def' → logprob: -5.295498371124268
    4. ' for' → logprob: -6.170498371124268
    5. 'assigned' → logprob: -6.545498371124268
    6. 'question' → logprob: -6.920498371124268
    7. 'visited' → logprob: -7.170498371124268
    8. 'un' → logprob: -8.295498847961426
    9. '```' → logprob: -8.420498847961426
    10. 'q' → logprob: -8.420498847961426

Token 298: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05995640158653259
    2. '?' → logprob: -3.8099563121795654
    3. '_' → logprob: -4.4349565505981445
    4. ' for' → logprob: -5.1849565505981445
    5. '.' → logprob: -5.3099565505981445
    6. 'assigned' → logprob: -5.3099565505981445
    7. ':' → logprob: -6.3099565505981445
    8. '=' → logprob: -6.3099565505981445
    9. 'i' → logprob: -7.0599565505981445
    10. '#' → logprob: -7.1849565505981445

Token 299: ' implement' (ID: 6365)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -1.0139304399490356
    2. 'continue' → logprob: -1.3889304399490356
    3. 'assign' → logprob: -1.8889304399490356
    4. 'fill' → logprob: -3.013930320739746
    5. 'for' → logprob: -3.388930320739746
    6. '完成' → logprob: -3.638930320739746
    7. 'i' → logprob: -3.763930320739746
    8. '#' → logprob: -3.763930320739746
    9. 'range' → logprob: -3.763930320739746
    10. 'do' → logprob: -4.263930320739746

Token 300: ' efficiently' (ID: 34229)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9115936160087585
    2. 'queue' → logprob: -1.2865936756134033
    3. 'from' → logprob: -1.7865936756134033
    4. 'for' → logprob: -2.9115936756134033
    5. 'def' → logprob: -3.1615936756134033
    6. 'while' → logprob: -3.7865936756134033
    7. 'changed' → logprob: -4.786593437194824
    8. 'import' → logprob: -4.911593437194824
    9. 'visited' → logprob: -5.411593437194824
    10. 'q' → logprob: -5.661593437194824

Token 301: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4964137077331543
    2. 'un' → logprob: -1.6214137077331543
    3. 'queue' → logprob: -2.1214137077331543
    4. 'import' → logprob: -3.1214137077331543
    5. 'assigned' → logprob: -4.996413707733154
    6. 'visited' → logprob: -5.496413707733154
    7. 'degree' → logprob: -5.496413707733154
    8. 'q' → logprob: -5.996413707733154
    9. 'available' → logprob: -5.996413707733154
    10. '#' → logprob: -6.246413707733154

Token 302: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18912048637866974
    2. 'queue' → logprob: -2.5641205310821533
    3. 'import' → logprob: -3.5641205310821533
    4. 'used' → logprob: -3.9391205310821533
    5. 'un' → logprob: -3.9391205310821533
    6. 'available' → logprob: -4.814120292663574
    7. 'visited' → logprob: -5.439120292663574
    8. 'assigned' → logprob: -5.814120292663574
    9. 'degree' → logprob: -5.814120292663574
    10. '#' → logprob: -6.064120292663574

Token 303: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.896204948425293
    2. 'used' → logprob: -1.271204948425293
    3. 'available' → logprob: -1.771204948425293
    4. 'import' → logprob: -2.771204948425293
    5. 'neighbor' → logprob: -3.396204948425293
    6. 'unused' → logprob: -4.271204948425293
    7. 'queue' → logprob: -5.021204948425293
    8. '#' → logprob: -5.146204948425293
    9. 'possible' → logprob: -5.521204948425293
    10. 'degree' → logprob: -5.771204948425293

Token 304: ' repeatedly' (ID: 45605)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11119186133146286
    2. 'import' → logprob: -2.361191749572754
    3. 'assigned' → logprob: -5.486191749572754
    4. 'queue' → logprob: -5.736191749572754
    5. 'use' → logprob: -7.236191749572754
    6. 'ready' → logprob: -7.611191749572754
    7. 'continue' → logprob: -7.736191749572754
    8. 'for' → logprob: -7.736191749572754
    9. 'visited' → logprob: -7.861191749572754
    10. '#' → logprob: -8.236191749572754

Token 305: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.302782416343689
    2. 'for' → logprob: -1.302782416343689
    3. 'from' → logprob: -1.677782416343689
    4. 'assign' → logprob: -2.5527825355529785
    5. 'find' → logprob: -2.9277825355529785
    6. 'process' → logprob: -3.4277825355529785
    7. 'queue' → logprob: -3.5527825355529785
    8. 'try' → logprob: -4.1777825355529785
    9. 'check' → logprob: -4.5527825355529785
    10. 'use' → logprob: -4.8027825355529785

Token 306: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2188096046447754
    2. 'to' → logprob: -1.8438096046447754
    3. 'for' → logprob: -4.093809604644775
    4. ' to' → logprob: -4.093809604644775
    5. ':
' → logprob: -5.968809604644775
    6. 'i' → logprob: -6.843809604644775
    7. ' for' → logprob: -8.468809127807617
    8. '   ' → logprob: -8.718809127807617
    9. '_nodes' → logprob: -8.968809127807617
    10. 'nodes' → logprob: -9.218809127807617

Token 307: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.2298997938632965
    2. 'for' → logprob: -1.6048997640609741
    3. 'change' → logprob: -5.604899883270264
    4. 'assigned' → logprob: -8.729899406433105
    5. 'continue' → logprob: -8.979899406433105
    6. 'find' → logprob: -9.229899406433105
    7. 'fill' → logprob: -9.354899406433105
    8. 'import' → logprob: -9.479899406433105
    9. 'changed' → logprob: -10.104899406433105
    10. ' for' → logprob: -10.104899406433105

Token 308: ' letters' (ID: 18151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4899061322212219
    2. 'to' → logprob: -2.614906072616577
    3. '.' → logprob: -2.739906072616577
    4. 'for' → logprob: -3.114906072616577
    5. 'assigned' → logprob: -3.489906072616577
    6. '?' → logprob: -3.614906072616577
    7. '_' → logprob: -3.864906072616577
    8. 'a' → logprob: -3.989906072616577
    9. ' to' → logprob: -3.989906072616577
    10. ',' → logprob: -4.239906311035156

Token 309: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3606301248073578
    2. '.' → logprob: -2.1106300354003906
    3. ',' → logprob: -3.4856300354003906
    4. 'while' → logprob: -3.7356300354003906
    5. '
' → logprob: -3.8606300354003906
    6. ' for' → logprob: -3.8606300354003906
    7. ')' → logprob: -4.235630035400391
    8. ':' → logprob: -4.360630035400391
    9. '#' → logprob: -4.485630035400391
    10. '_' → logprob: -4.735630035400391

Token 310: ' any' (ID: 1062)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0530955791473389
    2. 'nodes' → logprob: -1.3030955791473389
    3. 'un' → logprob: -1.6780955791473389
    4. 'i' → logprob: -2.678095579147339
    5. ' nodes' → logprob: -3.303095579147339
    6. 'assigned' → logprob: -3.553095579147339
    7. '[i' → logprob: -3.803095579147339
    8. 'any' → logprob: -4.803095817565918
    9. 'None' → logprob: -4.928095817565918
    10. '[' → logprob: -5.303095817565918

Token 311: ' un' (ID: 537)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.21548177301883698
    2. ' node' → logprob: -2.090481758117676
    3. 'i' → logprob: -3.215481758117676
    4. '?' → logprob: -3.965481758117676
    5. '[node' → logprob: -5.590481758117676
    6. 'un' → logprob: -6.465481758117676
    7. ' i' → logprob: -6.465481758117676
    8. 'idx' → logprob: -7.090481758117676
    9. 'u' → logprob: -7.590481758117676
    10. 'x' → logprob: -7.715481758117676

Token 312: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00018983196059707552
    2. 'un' → logprob: -9.250189781188965
    3. 'visited' → logprob: -10.000189781188965
    4. '```' → logprob: -10.375189781188965
    5. 'ass' → logprob: -12.000189781188965
    6. ' assigned' → logprob: -12.750189781188965
    7. '[' → logprob: -13.500189781188965
    8. 'assign' → logprob: -14.125189781188965
    9. '#' → logprob: -14.250189781188965
    10. '`' → logprob: -14.375189781188965

Token 313: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.16748178005218506
    2. ' node' → logprob: -2.1674818992614746
    3. 'nodes' → logprob: -3.9174818992614746
    4. '[node' → logprob: -4.917481899261475
    5. '_nodes' → logprob: -5.167481899261475
    6. ')' → logprob: -6.042481899261475
    7. ' nodes' → logprob: -6.542481899261475
    8. '?' → logprob: -7.292481899261475
    9. '_node' → logprob: -7.542481899261475
    10. '.' → logprob: -8.292481422424316

Token 314: '.
' (ID: 558)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4522058963775635
    2. '
' → logprob: -1.4522058963775635
    3. 'for' → logprob: -2.3272058963775635
    4. ' while' → logprob: -4.452205657958984
    5. ',' → logprob: -5.577205657958984
    6. '#' → logprob: -5.952205657958984
    7. ' for' → logprob: -6.077205657958984
    8. '.' → logprob: -6.077205657958984
    9. '_' → logprob: -6.827205657958984
    10. ':' → logprob: -7.202205657958984

Token 315: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7921208143234253
    2. 'for' → logprob: -0.9171208143234253
    3. '
' → logprob: -2.417120933532715
    4. ' while' → logprob: -3.417120933532715
    5. ' for' → logprob: -4.542120933532715
    6. ':' → logprob: -5.667120933532715
    7. '#' → logprob: -5.917120933532715
    8. '\n' → logprob: -6.042120933532715
    9. '```' → logprob: -6.542120933532715
    10. ',' → logprob: -7.292120933532715

Token 316: ' But' (ID: 3072)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0294076856225729
    2. 'for' → logprob: -4.404407501220703
    3. 'visited' → logprob: -4.904407501220703
    4. 'assigned' → logprob: -5.279407501220703
    5. 'changed' → logprob: -6.779407501220703
    6. ' while' → logprob: -6.779407501220703
    7. '```' → logprob: -7.404407501220703
    8. 'un' → logprob: -7.529407501220703
    9. 'used' → logprob: -7.904407501220703
    10. '#' → logprob: -9.279407501220703

Token 317: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.667171597480774
    2. '#' → logprob: -1.792171597480774
    3. ' not' → logprob: -1.792171597480774
    4. 'not' → logprob: -2.2921714782714844
    5. ' for' → logprob: -2.4171714782714844
    6. ' True' → logprob: -3.1671714782714844
    7. 'while' → logprob: -3.2921714782714844
    8. 'assigned' → logprob: -3.5421714782714844
    9. ' assigned' → logprob: -3.5421714782714844
    10. 'len' → logprob: -4.042171478271484

Token 318: ' can' (ID: 665)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.625541090965271
    2. 'may' → logprob: -2.0005412101745605
    3. ':' → logprob: -2.1255412101745605
    4. 'can' → logprob: -2.2505412101745605
    5. '#' → logprob: -2.5005412101745605
    6. 'for' → logprob: -2.5005412101745605
    7. ' is' → logprob: -3.1255412101745605
    8. 'could' → logprob: -3.3755412101745605
    9. '.' → logprob: -3.5005412101745605
    10. 'might' → logprob: -3.7505412101745605

Token 319: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5207329988479614
    2. ' be' → logprob: -1.0207329988479614
    3. ' lead' → logprob: -3.770732879638672
    4. ' take' → logprob: -5.395732879638672
    5. 'take' → logprob: -5.395732879638672
    6. 'cause' → logprob: -5.395732879638672
    7. ' cause' → logprob: -5.770732879638672
    8. ' become' → logprob: -6.520732879638672
    9. 'not' → logprob: -6.895732879638672
    10. 'lead' → logprob: -7.020732879638672

Token 320: ' costly' (ID: 44091)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.8055472373962402
    2. 'ine' → logprob: -1.0555472373962402
    3. 'O' → logprob: -1.6805472373962402
    4. 'slow' → logprob: -4.80554723739624
    5. 'too' → logprob: -4.93054723739624
    6. '非常' → logprob: -7.30554723739624
    7. ' very' → logprob: -7.55554723739624
    8. 'ext' → logprob: -7.55554723739624
    9. ' inefficient' → logprob: -7.80554723739624
    10. 'o' → logprob: -8.180547714233398

Token 321: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43203204870224
    2. 'while' → logprob: -1.9320321083068848
    3. 'assigned' → logprob: -2.5570321083068848
    4. '#' → logprob: -3.0570321083068848
    5. 'visited' → logprob: -3.3070321083068848
    6. 'def' → logprob: -3.6820321083068848
    7. ' for' → logprob: -5.307032108306885
    8. '.' → logprob: -5.932032108306885
    9. '```' → logprob: -6.557032108306885
    10. 'un' → logprob: -6.682032108306885

Token 322: ' scan' (ID: 14659)
  Prédit: 'implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implement' → logprob: -0.2709067165851593
    2. 'complete' → logprob: -2.270906686782837
    3. 'do' → logprob: -2.895906686782837
    4. 'continue' → logprob: -4.145906925201416
    5. 'check' → logprob: -4.520906925201416
    6. 'code' → logprob: -4.520906925201416
    7. 'finish' → logprob: -4.770906925201416
    8. 'perform' → logprob: -5.145906925201416
    9. 'run' → logprob: -5.270906925201416
    10. 'simulate' → logprob: -5.770906925201416

Token 323: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6983767151832581
    2. ' nodes' → logprob: -1.1983766555786133
    3. '_nodes' → logprob: -1.9483766555786133
    4. 'for' → logprob: -4.073376655578613
    5. ' un' → logprob: -4.823376655578613
    6. ' for' → logprob: -5.198376655578613
    7. 'un' → logprob: -5.198376655578613
    8. '_' → logprob: -5.198376655578613
    9. ')' → logprob: -5.573376655578613
    10. '#' → logprob: -6.448376655578613

Token 325: ' repeatedly' (ID: 45605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1142163276672363
    2. ':' → logprob: -1.7392163276672363
    3. '
' → logprob: -1.8642163276672363
    4. '.' → logprob: -2.1142163276672363
    5. ',' → logprob: -2.6142163276672363
    6. '_' → logprob: -3.2392163276672363
    7. '#' → logprob: -3.7392163276672363
    8. 'assigned' → logprob: -3.7392163276672363
    9. ' for' → logprob: -4.739216327667236
    10. ')' → logprob: -4.864216327667236

Token 326: '.

' (ID: 364)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.7219281196594238
    2. 'visited' → logprob: -1.9719281196594238
    3. '#' → logprob: -2.471928119659424
    4. 'for' → logprob: -2.471928119659424
    5. 'def' → logprob: -3.221928119659424
    6. 'while' → logprob: -3.596928119659424
    7. 'used' → logprob: -3.721928119659424
    8. 'available' → logprob: -3.971928119659424
    9. '.' → logprob: -4.471928119659424
    10. 'from' → logprob: -4.471928119659424

Token 327: '#' (ID: 2)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.022628903388977
    2. 'from' → logprob: -1.522628903388977
    3. 'queue' → logprob: -1.772628903388977
    4. 'assigned' → logprob: -1.772628903388977
    5. 'available' → logprob: -3.3976287841796875
    6. 'import' → logprob: -3.7726287841796875
    7. 'visited' → logprob: -5.5226287841796875
    8. '#' → logprob: -5.7726287841796875
    9. 'assign' → logprob: -5.7726287841796875
    10. '```' → logprob: -5.7726287841796875

Token 328: ' Optimization' (ID: 78012)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0989634990692139
    2. 'queue' → logprob: -1.0989634990692139
    3. 'un' → logprob: -1.5989634990692139
    4. 'import' → logprob: -3.223963499069214
    5. 'available' → logprob: -3.473963499069214
    6. 'assigned' → logprob: -3.723963499069214
    7. 'while' → logprob: -4.848963737487793
    8. 'ready' → logprob: -4.848963737487793
    9. 'degree' → logprob: -5.598963737487793
    10. 'q' → logprob: -5.723963737487793

Token 329: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.49775776267051697
    2. 'assigned' → logprob: -2.12275767326355
    3. 'import' → logprob: -2.49775767326355
    4. 'un' → logprob: -2.49775767326355
    5. 'available' → logprob: -3.74775767326355
    6. '#' → logprob: -3.87275767326355
    7. 'used' → logprob: -3.99775767326355
    8. 'queue' → logprob: -4.372757911682129
    9. 'degree' → logprob: -4.372757911682129
    10. 'assign' → logprob: -5.372757911682129

Token 330: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17168113589286804
    2. '#' → logprob: -2.4216811656951904
    3. 'available' → logprob: -3.9216811656951904
    4. 'import' → logprob: -4.296680927276611
    5. 'used' → logprob: -4.671680927276611
    6. 'un' → logprob: -5.296680927276611
    7. 'assigned' → logprob: -5.296680927276611
    8. ' from' → logprob: -5.671680927276611
    9. 'queue' → logprob: -6.046680927276611
    10. 'ready' → logprob: -6.421680927276611

Token 331: ' Use' (ID: 7649)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.02759542688727379
    2. 'import' → logprob: -4.652595520019531
    3. '#' → logprob: -5.152595520019531
    4. 'un' → logprob: -6.152595520019531
    5. 'queue' → logprob: -6.152595520019531
    6. 'neighbor' → logprob: -6.277595520019531
    7. 'available' → logprob: -6.402595520019531
    8. 'degree' → logprob: -6.652595520019531
    9. 'candidate' → logprob: -7.277595520019531
    10. 'possible' → logprob: -7.652595520019531

Token 332: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3596145212650299
    2. 'a' → logprob: -1.3596144914627075
    3. 'queue' → logprob: -3.484614610671997
    4. 'deque' → logprob: -4.859614372253418
    5. 'import' → logprob: -5.734614372253418
    6. 'heap' → logprob: -6.234614372253418
    7. 'collections' → logprob: -6.859614372253418
    8. 'adj' → logprob: -8.484614372253418
    9. 'neighbors' → logprob: -8.859614372253418
    10. 'neighbor' → logprob: -8.984614372253418

Token 333: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.26000648736953735
    2. 'deque' → logprob: -1.5100064277648926
    3. 'heap' → logprob: -5.010006427764893
    4. 'from' → logprob: -7.135006427764893
    5. 'set' → logprob: -7.635006427764893
    6. 'priority' → logprob: -9.76000690460205
    7. ' queue' → logprob: -11.51000690460205
    8. ' deque' → logprob: -12.13500690460205
    9. 'que' → logprob: -12.26000690460205
    10. 'collections' → logprob: -12.26000690460205

Token 334: ' or' (ID: 503)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0038459135685116053
    2. 'import' → logprob: -6.253845691680908
    3. ' from' → logprob: -6.503845691680908
    4. 'deque' → logprob: -8.253846168518066
    5. '
' → logprob: -9.253846168518066
    6. '=' → logprob: -11.378846168518066
    7. ',' → logprob: -11.378846168518066
    8. 'queue' → logprob: -11.503846168518066
    9. 'q' → logprob: -11.628846168518066
    10. '```' → logprob: -12.253846168518066

Token 335: ' priority' (ID: 17621)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.49036550521850586
    2. 'heap' → logprob: -0.9903655052185059
    3. 'set' → logprob: -4.615365505218506
    4. ' deque' → logprob: -5.990365505218506
    5. ' heap' → logprob: -6.115365505218506
    6. 'from' → logprob: -7.115365505218506
    7. 'import' → logprob: -8.365365982055664
    8. '[]' → logprob: -8.615365982055664
    9. 'priority' → logprob: -8.865365982055664
    10. 'stack' → logprob: -9.365365982055664

Token 336: ' queue' (ID: 13661)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.21620121598243713
    2. '_' → logprob: -1.8412011861801147
    3. ')' → logprob: -4.216201305389404
    4. '_queue' → logprob: -4.466201305389404
    5. 'queue' → logprob: -4.966201305389404
    6. '=' → logprob: -7.716201305389404
    7. ' ' → logprob: -7.966201305389404
    8. 'heap' → logprob: -8.216200828552246
    9. '.' → logprob: -8.341200828552246
    10. ' =' → logprob: -8.591200828552246

Token 337: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.35587623715400696
    2. 'import' → logprob: -1.4808762073516846
    3. 'q' → logprob: -3.4808762073516846
    4. 'un' → logprob: -4.480876445770264
    5. 'queue' → logprob: -4.480876445770264
    6. ' from' → logprob: -5.480876445770264
    7. ',' → logprob: -5.605876445770264
    8. '=' → logprob: -5.605876445770264
    9. 'deque' → logprob: -6.605876445770264
    10. ' =' → logprob: -7.105876445770264

Token 338: ' nodes' (ID: 15749)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.23281000554561615
    2. 'i' → logprob: -2.3578100204467773
    3. 'nodes' → logprob: -2.3578100204467773
    4. 'node' → logprob: -5.482810020446777
    5. '[i' → logprob: -5.857810020446777
    6. 'indices' → logprob: -6.232810020446777
    7. '[node' → logprob: -6.232810020446777
    8. ' nodes' → logprob: -7.232810020446777
    9. 'assigned' → logprob: -7.357810020446777
    10. ' un' → logprob: -7.357810020446777

Token 339: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.685608983039856
    2. '?' → logprob: -2.1856088638305664
    3. ' =' → logprob: -2.1856088638305664
    4. '_' → logprob: -2.8106088638305664
    5. '=[]' → logprob: -2.9356088638305664
    6. '[]' → logprob: -3.1856088638305664
    7. 'import' → logprob: -3.6856088638305664
    8. ',' → logprob: -3.9356088638305664
    9. 'un' → logprob: -4.060608863830566
    10. 'for' → logprob: -4.685608863830566

Token 340: ' can' (ID: 665)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.7072619795799255
    2. 'have' → logprob: -1.3322620391845703
    3. ' are' → logprob: -1.5822620391845703
    4. 'are' → logprob: -3.5822620391845703
    5. ' can' → logprob: -5.33226203918457
    6. 'can' → logprob: -6.58226203918457
    7. 'currently' → logprob: -6.83226203918457
    8. 'already' → logprob: -7.58226203918457
    9. ' currently' → logprob: -7.95726203918457
    10. '<|end|>' → logprob: -8.08226203918457

Token 341: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.04374365881085396
    2. ' be' → logprob: -3.16874361038208
    3. 'currently' → logprob: -7.79374361038208
    4. 'now' → logprob: -8.918744087219238
    5. 'potential' → logprob: -9.668744087219238
    6. '	be' → logprob: -10.293744087219238
    7. '```' → logprob: -10.918744087219238
    8. 'next' → logprob: -11.418744087219238
    9. 'already' → logprob: -11.543744087219238
    10. 'have' → logprob: -11.668744087219238

Token 342: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.004027583636343479
    2. ' assigned' → logprob: -6.129027366638184
    3. 'processed' → logprob: -6.504027366638184
    4. 'consider' → logprob: -9.754027366638184
    5. 'potential' → logprob: -10.004027366638184
    6. 'currently' → logprob: -10.129027366638184
    7. 's' → logprob: -10.379027366638184
    8. '```' → logprob: -10.754027366638184
    9. ' safely' → logprob: -10.879027366638184
    10. 'attempt' → logprob: -11.254027366638184

Token 343: ' now' (ID: 1954)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6952046751976013
    2. 'import' → logprob: -1.070204734802246
    3. 'queue' → logprob: -3.195204734802246
    4. 'q' → logprob: -3.570204734802246
    5. ' from' → logprob: -4.070204734802246
    6. ',' → logprob: -4.320204734802246
    7. 'un' → logprob: -4.445204734802246
    8. 'assigned' → logprob: -4.445204734802246
    9. '.' → logprob: -5.070204734802246
    10. '=' → logprob: -5.445204734802246

Token 344: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32680627703666687
    2. 'import' → logprob: -1.5768063068389893
    3. 'queue' → logprob: -2.9518063068389893
    4. 'q' → logprob: -5.07680606842041
    5. 'un' → logprob: -5.95180606842041
    6. 'available' → logprob: -6.07680606842041
    7. 'assigned' → logprob: -6.32680606842041
    8. '```' → logprob: -6.45180606842041
    9. 'deque' → logprob: -6.95180606842041
    10. ' from' → logprob: -6.95180606842041

Token 345: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.272916555404663
    2. 'import' → logprob: -1.897916555404663
    3. '_' → logprob: -2.272916555404663
    4. '[]' → logprob: -2.397916555404663
    5. ' =' → logprob: -3.022916555404663
    6. ':' → logprob: -3.147916555404663
    7. ',' → logprob: -3.272916555404663
    8. '.' → logprob: -3.397916555404663
    9. 'q' → logprob: -3.647916555404663
    10. 'from' → logprob: -3.772916555404663

Token 346: ' Initially' (ID: 96924)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44100576639175415
    2. 'from' → logprob: -1.6910057067871094
    3. 'q' → logprob: -2.8160057067871094
    4. 'assigned' → logprob: -3.4410057067871094
    5. 'queue' → logprob: -3.9410057067871094
    6. '```' → logprob: -4.816005706787109
    7. '[]' → logprob: -4.941005706787109
    8. '#' → logprob: -5.066005706787109
    9. ',' → logprob: -5.191005706787109
    10. 'available' → logprob: -5.316005706787109

Token 347: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2659839391708374
    2. 'q' → logprob: -2.140984058380127
    3. 'import' → logprob: -3.140984058380127
    4. ',' → logprob: -3.890984058380127
    5. ' =' → logprob: -3.890984058380127
    6. 'queue' → logprob: -4.390984058380127
    7. 'pq' → logprob: -5.515984058380127
    8. 'nodes' → logprob: -5.765984058380127
    9. 'from' → logprob: -5.890984058380127
    10. 'for' → logprob: -6.015984058380127

Token 348: ' nodes' (ID: 15749)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1993085145950317
    2. 'for' → logprob: -1.4493085145950317
    3. 'from' → logprob: -1.6993085145950317
    4. 'q' → logprob: -2.199308395385742
    5. 'queue' → logprob: -2.449308395385742
    6. 'pq' → logprob: -2.574308395385742
    7. 'heap' → logprob: -5.074308395385742
    8. 'dq' → logprob: -7.074308395385742
    9. 'que' → logprob: -8.949308395385742
    10. 'available' → logprob: -9.074308395385742

Token 349: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.5646920204162598
    2. '=' → logprob: -1.3146920204162598
    3. ' =' → logprob: -2.5646920204162598
    4. '_with' → logprob: -3.5646920204162598
    5. ' with' → logprob: -4.31469202041626
    6. 'that' → logprob: -4.81469202041626
    7. '_that' → logprob: -4.81469202041626
    8. 'for' → logprob: -5.06469202041626
    9. 'without' → logprob: -5.56469202041626
    10. '_without' → logprob: -5.68969202041626

Token 350: ' '?'' (ID: 192100)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.013683986850082874
    2. '0' → logprob: -5.138683795928955
    3. ' assigned' → logprob: -6.013683795928955
    4. 'no' → logprob: -6.138683795928955
    5. 'None' → logprob: -6.388683795928955
    6. 'all' → logprob: -7.888683795928955
    7. 'a' → logprob: -7.888683795928955
    8. ' no' → logprob: -8.388684272766113
    9. '[]' → logprob: -8.513684272766113
    10. '[' → logprob: -9.638684272766113

Token 351: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2906050682067871
    2. '_nodes' → logprob: -2.665605068206787
    3. ' =' → logprob: -2.790605068206787
    4. '=' → logprob: -3.540605068206787
    5. '?' → logprob: -4.290605068206787
    6. ',' → logprob: -4.915605068206787
    7. '_queue' → logprob: -5.415605068206787
    8. '[' → logprob: -5.415605068206787
    9. 'assigned' → logprob: -5.540605068206787
    10. 'for' → logprob: -5.540605068206787

Token 352: ' at' (ID: 540)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06593465059995651
    2. 'assigned' → logprob: -3.190934658050537
    3. 'sum' → logprob: -4.690934658050537
    4. 'len' → logprob: -4.940934658050537
    5. 'not' → logprob: -5.815934658050537
    6. '0' → logprob: -7.065934658050537
    7. 'any' → logprob: -7.440934658050537
    8. ' all' → logprob: -7.690934658050537
    9. '[]' → logprob: -8.065934181213379
    10. 'False' → logprob: -8.190934181213379

Token 353: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.03357793018221855
    2. 'most' → logprob: -4.033577919006348
    3. 'assigned' → logprob: -4.783577919006348
    4. 'this' → logprob: -7.033577919006348
    5. ' least' → logprob: -7.033577919006348
    6. 'any' → logprob: -7.408577919006348
    7. '```' → logprob: -7.533577919006348
    8. '[]' → logprob: -7.658577919006348
    9. 'ype' → logprob: -8.158577919006348
    10. '=[]' → logprob: -8.158577919006348

Token 354: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.32621413469314575
    2. '0' → logprob: -1.701214075088501
    3. ' one' → logprob: -3.076214075088501
    4. 'no' → logprob: -4.20121431350708
    5. ' ' → logprob: -4.57621431350708
    6. '1' → logprob: -5.20121431350708
    7. 'all' → logprob: -5.32621431350708
    8. 'least' → logprob: -5.45121431350708
    9. 'zero' → logprob: -5.82621431350708
    10. 'len' → logprob: -6.57621431350708

Token 355: ' neighbor' (ID: 13034)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6845327019691467
    2. 'neighbor' → logprob: -1.309532642364502
    3. ' assigned' → logprob: -1.809532642364502
    4. ' neighbor' → logprob: -3.559532642364502
    5. ')' → logprob: -4.684532642364502
    6. 'neighbors' → logprob: -5.559532642364502
    7. '?' → logprob: -5.684532642364502
    8. '[]' → logprob: -6.309532642364502
    9. 'degree' → logprob: -6.559532642364502
    10. 'queue' → logprob: -6.684532642364502

Token 356: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.05885724723339081
    2. 'a' → logprob: -3.0588572025299072
    3. 'None' → logprob: -5.183857440948486
    4. 'an' → logprob: -6.558857440948486
    5. ' assigned' → logprob: -6.683857440948486
    6. 'known' → logprob: -7.808857440948486
    7. 'already' → logprob: -8.058856964111328
    8. 'not' → logprob: -8.058856964111328
    9. ' a' → logprob: -8.933856964111328
    10. 'non' → logprob: -9.058856964111328

Token 358: ' letter' (ID: 10263)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.0769374370574951
    2. '=' → logprob: -1.7019374370574951
    3. '_' → logprob: -2.076937437057495
    4. ')' → logprob: -2.326937437057495
    5. '?' → logprob: -2.326937437057495
    6. ' =' → logprob: -2.701937437057495
    7. '=[]' → logprob: -3.201937437057495
    8. '[]' → logprob: -4.701937675476074
    9. ',' → logprob: -4.951937675476074
    10. '<|end|>' → logprob: -5.826937675476074

Token 359: ' can't' (ID: 8535)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1586529016494751
    2. ':' → logprob: -3.1586527824401855
    3. '<|end|>' → logprob: -3.4086527824401855
    4. '?' → logprob: -4.9086527824401855
    5. '  
' → logprob: -4.9086527824401855
    6. '[]' → logprob: -5.0336527824401855
    7. ',' → logprob: -5.1586527824401855
    8. 'for' → logprob: -5.1586527824401855
    9. '

' → logprob: -5.2836527824401855
    10. ')' → logprob: -5.2836527824401855

Token 360: ' have' (ID: 679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3577319383621216
    2. '=' → logprob: -2.482731819152832
    3. ''' → logprob: -3.232731819152832
    4. '_' → logprob: -3.357731819152832
    5. ' ' → logprob: -3.482731819152832
    6. '?' → logprob: -3.607731819152832
    7. ' =' → logprob: -4.482731819152832
    8. ',' → logprob: -4.607731819152832
    9. '#' → logprob: -4.732731819152832
    10. '.' → logprob: -4.732731819152832

Token 361: ' all' (ID: 722)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4773743748664856
    2. ' None' → logprob: -1.8523743152618408
    3. '?' → logprob: -2.727374315261841
    4. ')' → logprob: -3.102374315261841
    5. ''' → logprob: -3.602374315261841
    6. '=' → logprob: -4.35237455368042
    7. '=None' → logprob: -4.60237455368042
    8. 'assigned' → logprob: -4.97737455368042
    9. 'a' → logprob: -5.22737455368042
    10. '')' → logprob: -5.35237455368042

Token 362: ' letters' (ID: 18151)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.7490676045417786
    2. '?' → logprob: -1.6240675449371338
    3. '_neighbors' → logprob: -2.874067544937134
    4. '_nodes' → logprob: -3.374067544937134
    5. ')' → logprob: -3.499067544937134
    6. 'nodes' → logprob: -3.624067544937134
    7. ' neighbors' → logprob: -3.624067544937134
    8. 'assigned' → logprob: -3.749067544937134
    9. 'letters' → logprob: -3.999067544937134
    10. ' nodes' → logprob: -3.999067544937134

Token 363: ' banned' (ID: 44833)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6778063774108887
    2. '?' → logprob: -1.6778063774108887
    3. '[]' → logprob: -2.6778063774108887
    4. '<|end|>' → logprob: -2.6778063774108887
    5. ')' → logprob: -3.0528063774108887
    6. '=' → logprob: -4.177806377410889
    7. ',' → logprob: -4.427806377410889
    8. '.' → logprob: -4.427806377410889
    9. '

' → logprob: -4.552806377410889
    10. '  
' → logprob: -5.177806377410889

Token 364: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7096788883209229
    2. '[]' → logprob: -2.459678888320923
    3. ':' → logprob: -2.584678888320923
    4. '?' → logprob: -2.709678888320923
    5. '
' → logprob: -3.084678888320923
    6. ',' → logprob: -3.209678888320923
    7. 'import' → logprob: -3.709678888320923
    8. ')' → logprob: -4.209678649902344
    9. '_' → logprob: -4.209678649902344
    10. ' =' → logprob: -4.209678649902344

Token 365: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9297804832458496
    2. 'from' → logprob: -1.4297804832458496
    3. 'un' → logprob: -1.9297804832458496
    4. 'q' → logprob: -2.8047804832458496
    5. 'for' → logprob: -2.8047804832458496
    6. '?' → logprob: -3.5547804832458496
    7. 'import' → logprob: -3.8047804832458496
    8. 'assigned' → logprob: -4.05478048324585
    9. '```' → logprob: -5.05478048324585
    10. 'def' → logprob: -5.42978048324585

Token 366: ' So' (ID: 2632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.331004023551941
    2. ':' → logprob: -1.831004023551941
    3. ' =' → logprob: -1.956004023551941
    4. '_' → logprob: -2.3310041427612305
    5. '
' → logprob: -2.7060041427612305
    6. '[]' → logprob: -2.9560041427612305
    7. '?' → logprob: -3.2060041427612305
    8. ')' → logprob: -3.2060041427612305
    9. ' ' → logprob: -3.9560041427612305
    10. ',' → logprob: -4.3310041427612305

Token 367: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0026848316192627
    2. 'from' → logprob: -1.3776848316192627
    3. 'queue' → logprob: -1.5026848316192627
    4. 'import' → logprob: -2.1276848316192627
    5. 'q' → logprob: -4.002684593200684
    6. 'available' → logprob: -4.502684593200684
    7. 'assigned' → logprob: -5.752684593200684
    8. '#' → logprob: -6.002684593200684
    9. 'heap' → logprob: -7.377684593200684
    10. ' for' → logprob: -7.502684593200684

Token 368: ' must' (ID: 2804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.248205542564392
    2. 'can' → logprob: -1.248205542564392
    3. 'import' → logprob: -1.373205542564392
    4. 'need' → logprob: -2.8732056617736816
    5. 'continue' → logprob: -3.1232056617736816
    6. 'from' → logprob: -4.123205661773682
    7. ' can' → logprob: -4.248205661773682
    8. 'initialize' → logprob: -4.498205661773682
    9. 'queue' → logprob: -4.998205661773682
    10. 'will' → logprob: -5.248205661773682

Token 369: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9352865815162659
    2. 'initialize' → logprob: -1.185286521911621
    3. 'from' → logprob: -1.810286521911621
    4. 'import' → logprob: -2.810286521911621
    5. 'continue' → logprob: -2.935286521911621
    6. 'enqueue' → logprob: -4.685286521911621
    7. 'find' → logprob: -5.560286521911621
    8. 'check' → logprob: -6.185286521911621
    9. 'push' → logprob: -6.310286521911621
    10. 'add' → logprob: -6.685286521911621

Token 370: ' nodes' (ID: 15749)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3141541481018066
    2. '=' → logprob: -1.6891541481018066
    3. 'import' → logprob: -2.0641541481018066
    4. '?' → logprob: -2.1891541481018066
    5. ':' → logprob: -2.3141541481018066
    6. '.' → logprob: -2.4391541481018066
    7. ',' → logprob: -3.4391541481018066
    8. 'for' → logprob: -4.189154148101807
    9. '_' → logprob: -4.439154148101807
    10. ')' → logprob: -4.689154148101807

Token 371: ' whose' (ID: 12119)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9257245063781738
    2. '.' → logprob: -2.050724506378174
    3. 'for' → logprob: -2.550724506378174
    4. ',' → logprob: -2.800724506378174
    5. 'import' → logprob: -2.800724506378174
    6. ' =' → logprob: -2.925724506378174
    7. 'from' → logprob: -2.925724506378174
    8. ':' → logprob: -4.050724506378174
    9. ')' → logprob: -4.175724506378174
    10. '=[]' → logprob: -4.175724506378174

Token 372: ' forbidden' (ID: 74435)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.44996199011802673
    2. 'neighbors' → logprob: -1.1999620199203491
    3. 'neighbor' → logprob: -3.9499619007110596
    4. ' assigned' → logprob: -4.324962139129639
    5. ' neighbors' → logprob: -4.699962139129639
    6. 'degree' → logprob: -5.074962139129639
    7. 'all' → logprob: -5.199962139129639
    8. 'len' → logprob: -6.074962139129639
    9. 'b' → logprob: -7.074962139129639
    10. 'None' → logprob: -7.449962139129639

Token 373: ' letters' (ID: 18151)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.01663915440440178
    2. ' =' → logprob: -5.516639232635498
    3. '_chars' → logprob: -5.891639232635498
    4. 'letters' → logprob: -6.016639232635498
    5. '=set' → logprob: -6.266639232635498
    6. '=' → logprob: -6.266639232635498
    7. ')' → logprob: -6.766639232635498
    8. '_nodes' → logprob: -7.141639232635498
    9. ']' → logprob: -7.766639232635498
    10. '_set' → logprob: -7.891639232635498

Token 374: ' sets' (ID: 11982)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0598831176757812
    2. ' =' → logprob: -1.3098831176757812
    3. '=set' → logprob: -1.9348831176757812
    4. 's' → logprob: -2.9348831176757812
    5. ')' → logprob: -3.3098831176757812
    6. ':' → logprob: -3.4348831176757812
    7. ' are' → logprob: -3.9348831176757812
    8. '_set' → logprob: -4.059883117675781
    9. '.' → logprob: -4.184883117675781
    10. 'set' → logprob: -4.559883117675781

Token 375: ' are' (ID: 553)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1545072793960571
    2. '=' → logprob: -1.1545072793960571
    3. ' =' → logprob: -1.5295072793960571
    4. '_' → logprob: -3.2795071601867676
    5. ' ' → logprob: -3.2795071601867676
    6. ' are' → logprob: -4.529507160186768
    7. ',' → logprob: -4.779507160186768
    8. '.' → logprob: -4.904507160186768
    9. ']' → logprob: -4.904507160186768
    10. ':' → logprob: -5.404507160186768

Token 376: ' less' (ID: 3760)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.8130473494529724
    2. 'complete' → logprob: -0.8130473494529724
    3. 'updated' → logprob: -3.313047409057617
    4. 'not' → logprob: -3.313047409057617
    5. 'empty' → logprob: -4.813047409057617
    6. 'known' → logprob: -5.063047409057617
    7. 'ready' → logprob: -5.063047409057617
    8. '{' → logprob: -6.063047409057617
    9. ' set' → logprob: -6.188047409057617
    10. 'completed' → logprob: -6.188047409057617

Token 377: ' than' (ID: 1572)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6917537450790405
    2. ' ' → logprob: -1.3167537450790405
    3. '=' → logprob: -1.8167537450790405
    4. ')' → logprob: -3.44175386428833
    5. ' 
' → logprob: -4.81675386428833
    6. ' )' → logprob: -5.31675386428833
    7. ' +=' → logprob: -5.69175386428833
    8. '    ' → logprob: -5.69175386428833
    9. '   ' → logprob: -5.94175386428833
    10. '  ' → logprob: -6.56675386428833

Token 378: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.00011927806917810813
    2. '27' → logprob: -10.12511920928955
    3. ' ' → logprob: -10.25011920928955
    4. '=' → logprob: -10.75011920928955
    5. 'V' → logprob: -11.37511920928955
    6. '25' → logprob: -12.12511920928955
    7. 'alphabet' → logprob: -13.00011920928955
    8. '
' → logprob: -14.25011920928955
    9. 'len' → logprob: -14.37511920928955
    10. ' =' → logprob: -14.87511920928955

Token 379: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0006089136004447937
    2. 'V' → logprob: -7.750608921051025
    3. '27' → logprob: -9.500608444213867
    4. '25' → logprob: -9.500608444213867
    5. '=' → logprob: -10.625608444213867
    6. 'len' → logprob: -13.625608444213867
    7. ' ' → logprob: -14.000608444213867
    8. 'alphabet' → logprob: -15.000608444213867
    9. ' V' → logprob: -15.250608444213867
    10. 'set' → logprob: -15.875608444213867

Token 380: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2527262270450592
    2. 'import' → logprob: -2.8777263164520264
    3. 'assigned' → logprob: -3.0027263164520264
    4. 'queue' → logprob: -3.2527263164520264
    5. 'for' → logprob: -3.5027263164520264
    6. '?' → logprob: -4.627726078033447
    7. 'available' → logprob: -4.752726078033447
    8. '#' → logprob: -5.377726078033447
    9. 'q' → logprob: -5.377726078033447
    10. '```' → logprob: -5.627726078033447

Token 381: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.673150897026062
    2. 'from' → logprob: -1.923150897026062
    3. 'assigned' → logprob: -2.1731510162353516
    4. 'import' → logprob: -2.6731510162353516
    5. 'available' → logprob: -3.2981510162353516
    6. 'q' → logprob: -3.2981510162353516
    7. 'for' → logprob: -4.048151016235352
    8. 'un' → logprob: -4.173151016235352
    9. '#' → logprob: -4.423151016235352
    10. 'def' → logprob: -4.548151016235352

Token 382: ' Initially' (ID: 96924)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2626274824142456
    2. 'for' → logprob: -1.3876274824142456
    3. 'import' → logprob: -2.012627601623535
    4. 'assigned' → logprob: -2.512627601623535
    5. '#' → logprob: -2.887627601623535
    6. 'q' → logprob: -3.137627601623535
    7. 'visited' → logprob: -3.137627601623535
    8. 'queue' → logprob: -3.762627601623535
    9. 'def' → logprob: -4.512627601623535
    10. '```' → logprob: -4.887627601623535

Token 383: ',' (ID: 11)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1433364152908325
    2. '=' → logprob: -1.3933364152908325
    3. 'for' → logprob: -1.6433364152908325
    4. 'q' → logprob: -2.393336296081543
    5. 'from' → logprob: -2.768336296081543
    6. ' =' → logprob: -3.393336296081543
    7. 'un' → logprob: -4.018336296081543
    8. 'to' → logprob: -4.268336296081543
    9. 'import' → logprob: -5.768336296081543
    10. 'assigned' → logprob: -6.143336296081543

Token 384: ' forbidden' (ID: 74435)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4794362485408783
    2. 'queue' → logprob: -1.6044362783432007
    3. 'for' → logprob: -2.104436159133911
    4. 'import' → logprob: -3.104436159133911
    5. 'q' → logprob: -4.47943639755249
    6. 'candidate' → logprob: -8.104435920715332
    7. 'b' → logprob: -8.229435920715332
    8. 'available' → logprob: -8.354435920715332
    9. 'un' → logprob: -8.479435920715332
    10. 'pq' → logprob: -8.979435920715332

Token 385: ' sets' (ID: 11982)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13334566354751587
    2. '_letters' → logprob: -2.383345603942871
    3. '=' → logprob: -3.633345603942871
    4. '_for' → logprob: -5.508345603942871
    5. '=set' → logprob: -6.508345603942871
    6. 'letters' → logprob: -8.383345603942871
    7. 'for' → logprob: -8.383345603942871
    8. '_sets' → logprob: -10.633345603942871
    9. 's' → logprob: -11.008345603942871
    10. '[' → logprob: -11.008345603942871

Token 386: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47439053654670715
    2. ' =' → logprob: -0.9743905067443848
    3. 'for' → logprob: -9.099390983581543
    4. '=[]' → logprob: -9.599390983581543
    5. '[' → logprob: -10.599390983581543
    6. '_for' → logprob: -10.724390983581543
    7. '=[' → logprob: -10.724390983581543
    8. 's' → logprob: -10.849390983581543
    9. ',' → logprob: -11.474390983581543
    10. ':' → logprob: -12.099390983581543

Token 387: ' calculated' (ID: 25702)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032505544368177652
    2. ' [' → logprob: -5.753250598907471
    3. '[]' → logprob: -10.753250122070312
    4. '[node' → logprob: -10.878250122070312
    5. '[{' → logprob: -11.503250122070312
    6. '[s' → logprob: -12.503250122070312
    7. 'set' → logprob: -12.753250122070312
    8. '[i' → logprob: -12.753250122070312
    9. '[f' → logprob: -12.878250122070312
    10. '[b' → logprob: -13.253250122070312

Token 388: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.751746746478602e-05
    2. 'b' → logprob: -11.50004768371582
    3. ' for' → logprob: -11.50004768371582
    4. 'neighbor' → logprob: -11.87504768371582
    5. '#' → logprob: -12.12504768371582
    6. ' forbidden' → logprob: -12.75004768371582
    7. 'neighbors' → logprob: -12.75004768371582
    8. 'from' → logprob: -13.12504768371582
    9. 'used' → logprob: -13.50004768371582
    10. '```' → logprob: -14.12504768371582

Token 389: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.093505099765025e-05
    2. 'from' → logprob: -11.750020980834961
    3. 'b' → logprob: -12.125020980834961
    4. '#' → logprob: -12.500020980834961
    5. 'assigned' → logprob: -13.750020980834961
    6. 'neighbor' → logprob: -14.250020980834961
    7. 'import' → logprob: -14.500020980834961
    8. '```' → logprob: -14.875020980834961
    9. 'def' → logprob: -15.375020980834961
    10. 'FOR' → logprob: -15.500020980834961

Token 390: ' However' (ID: 5551)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.5107177862082608e-05
    2. 'from' → logprob: -11.375024795532227
    3. '#' → logprob: -11.750024795532227
    4. 'b' → logprob: -12.375024795532227
    5. 'def' → logprob: -14.125024795532227
    6. 'import' → logprob: -15.750024795532227
    7. 'neighbor' → logprob: -16.125024795532227
    8. 'assigned' → logprob: -16.375024795532227
    9. 'FOR' → logprob: -16.500024795532227
    10. ' forbidden' → logprob: -17.125024795532227

Token 391: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11756686866283417
    2. '#' → logprob: -2.8675668239593506
    3. ',' → logprob: -3.6175668239593506
    4. '_' → logprob: -5.36756706237793
    5. ' for' → logprob: -5.36756706237793
    6. 'assigned' → logprob: -5.36756706237793
    7. '.' → logprob: -5.86756706237793
    8. '=' → logprob: -6.61756706237793
    9. ' =' → logprob: -6.86756706237793
    10. '_for' → logprob: -7.11756706237793

Token 392: ' neighbors' (ID: 31655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013752414844930172
    2. '#' → logprob: -4.638752460479736
    3. 'assigned' → logprob: -6.263752460479736
    4. ' for' → logprob: -6.638752460479736
    5. 'def' → logprob: -8.013751983642578
    6. '
' → logprob: -10.138751983642578
    7. '```' → logprob: -10.388751983642578
    8. 'from' → logprob: -10.513751983642578
    9. 'neighbors' → logprob: -10.638751983642578
    10. '

' → logprob: -10.638751983642578

Token 393: ' may' (ID: 1340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5251426696777344
    2. '=' → logprob: -1.9001426696777344
    3. ':' → logprob: -2.1501426696777344
    4. '[' → logprob: -2.2751426696777344
    5. 'の' → logprob: -2.2751426696777344
    6. ''s' → logprob: -2.9001426696777344
    7. ']' → logprob: -3.0251426696777344
    8. ''' → logprob: -3.4001426696777344
    9. 's' → logprob: -3.6501426696777344
    10. ',' → logprob: -3.6501426696777344

Token 394: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6913188099861145
    2. 'have' → logprob: -1.8163187503814697
    3. '.append' → logprob: -2.4413187503814697
    4. 'be' → logprob: -2.6913187503814697
    5. ' not' → logprob: -2.8163187503814697
    6. ' be' → logprob: -3.3163187503814697
    7. '.' → logprob: -3.8163187503814697
    8. 'continue' → logprob: -4.191318988800049
    9. ' have' → logprob: -4.441318988800049
    10. 'also' → logprob: -4.566318988800049

Token 395: ' be' (ID: 413)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.1999829262495041
    2. 'be' → logprob: -2.4499828815460205
    3. ' have' → logprob: -3.4499828815460205
    4. ' be' → logprob: -3.6999828815460205
    5. 'yet' → logprob: -4.1999831199646
    6. ' yet' → logprob: -4.4499831199646
    7. 'all' → logprob: -5.8249831199646
    8. '_have' → logprob: -6.4499831199646
    9. 'necessarily' → logprob: -6.5749831199646
    10. '.' → logprob: -7.0749831199646

Token 396: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.07839976251125336
    2. 'None' → logprob: -3.578399658203125
    3. ' assigned' → logprob: -4.328399658203125
    4. '?' → logprob: -4.953399658203125
    5. ' None' → logprob: -5.328399658203125
    6. 'known' → logprob: -5.453399658203125
    7. 'fully' → logprob: -5.703399658203125
    8. 'all' → logprob: -5.953399658203125
    9. 'processed' → logprob: -6.078399658203125
    10. 'visited' → logprob: -6.078399658203125

Token 397: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0642846822738647
    2. ':' → logprob: -1.8142846822738647
    3. '
' → logprob: -2.0642848014831543
    4. ')' → logprob: -2.5642848014831543
    5. '#' → logprob: -3.3142848014831543
    6. 'def' → logprob: -3.5642848014831543
    7. ',' → logprob: -3.5642848014831543
    8. '=' → logprob: -3.6892848014831543
    9. '.' → logprob: -3.6892848014831543
    10. '<|end|>' → logprob: -3.6892848014831543

Token 398: ' so' (ID: 813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46918821334838867
    2. '#' → logprob: -2.0941882133483887
    3. 'for' → logprob: -2.8441882133483887
    4. '
' → logprob: -3.0941882133483887
    5. '<|end|>' → logprob: -3.3441882133483887
    6. 'def' → logprob: -3.7191882133483887
    7. ' so' → logprob: -3.8441882133483887
    8. ':' → logprob: -4.219188213348389
    9. '.' → logprob: -5.094188213348389
    10. ',' → logprob: -5.344188213348389

Token 399: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22864919900894165
    2. '#' → logprob: -2.853649139404297
    3. 'continue' → logprob: -2.853649139404297
    4. '
' → logprob: -3.478649139404297
    5. ' for' → logprob: -4.603649139404297
    6. 'assigned' → logprob: -4.728649139404297
    7. 'pass' → logprob: -5.228649139404297
    8. ' 
' → logprob: -5.353649139404297
    9. '<|end|>' → logprob: -5.603649139404297
    10. '.' → logprob: -5.728649139404297

Token 400: ' sets' (ID: 11982)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.6557267308235168
    2. '_sets' → logprob: -1.530726671218872
    3. ' =' → logprob: -2.405726671218872
    4. '_' → logprob: -2.655726671218872
    5. ')' → logprob: -3.405726671218872
    6. '[' → logprob: -4.280726909637451
    7. '_set' → logprob: -4.405726909637451
    8. 'letters' → logprob: -4.530726909637451
    9. '=' → logprob: -4.655726909637451
    10. 's' → logprob: -5.280726909637451

Token 401: ' may' (ID: 1340)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24077822268009186
    2. ' =' → logprob: -1.7407782077789307
    3. ')' → logprob: -3.6157782077789307
    4. ' are' → logprob: -5.61577844619751
    5. '=[]' → logprob: -6.36577844619751
    6. '.' → logprob: -6.74077844619751
    7. '<|end|>' → logprob: -6.99077844619751
    8. ']' → logprob: -7.11577844619751
    9. '#' → logprob: -7.24077844619751
    10. '[' → logprob: -7.86577844619751

Token 402: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3790706992149353
    2. ' =' → logprob: -1.75407075881958
    3. ')' → logprob: -2.50407075881958
    4. ' not' → logprob: -4.25407075881958
    5. ' be' → logprob: -4.50407075881958
    6. '=[]' → logprob: -4.87907075881958
    7. 'continue' → logprob: -5.00407075881958
    8. 'not' → logprob: -5.12907075881958
    9. '.' → logprob: -5.25407075881958
    10. ' continue' → logprob: -6.12907075881958

Token 403: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.6135430932044983
    2. 'in' → logprob: -1.1135430335998535
    3. 'updated' → logprob: -2.3635430335998535
    4. 'set' → logprob: -4.6135430335998535
    5. '[]' → logprob: -5.6135430335998535
    6. ' incomplete' → logprob: -5.7385430335998535
    7. 'correct' → logprob: -6.1135430335998535
    8. 'initial' → logprob: -6.1135430335998535
    9. 'complete' → logprob: -6.3635430335998535
    10. 'partial' → logprob: -6.6135430335998535

Token 404: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057631537318229675
    2. '
' → logprob: -3.682631492614746
    3. '#' → logprob: -4.807631492614746
    4. ' for' → logprob: -5.307631492614746
    5. 'assigned' → logprob: -5.682631492614746
    6. 'def' → logprob: -5.807631492614746
    7. '.' → logprob: -6.807631492614746
    8. 'visited' → logprob: -7.057631492614746
    9. ':' → logprob: -7.182631492614746
    10. ',' → logprob: -7.307631492614746

Token 405: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09814097732305527
    2. 'assigned' → logprob: -3.4731409549713135
    3. 'used' → logprob: -3.8481409549713135
    4. 'visited' → logprob: -4.348141193389893
    5. '#' → logprob: -4.348141193389893
    6. 'from' → logprob: -5.098141193389893
    7. ' for' → logprob: -6.473141193389893
    8. 'import' → logprob: -6.848141193389893
    9. '```' → logprob: -6.848141193389893
    10. '
' → logprob: -7.223141193389893

Token 406: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015550585463643074
    2. 'assigned' → logprob: -5.14055061340332
    3. 'from' → logprob: -5.26555061340332
    4. '#' → logprob: -6.89055061340332
    5. 'queue' → logprob: -6.89055061340332
    6. 'def' → logprob: -7.01555061340332
    7. 'visited' → logprob: -7.89055061340332
    8. 'b' → logprob: -8.39055061340332
    9. 'used' → logprob: -8.51555061340332
    10. 'un' → logprob: -8.76555061340332

Token 407: ' model' (ID: 2359)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6121241450309753
    2. '#' → logprob: -1.9871242046356201
    3. '_' → logprob: -2.23712420463562
    4. ' continue' → logprob: -2.48712420463562
    5. '=' → logprob: -3.73712420463562
    6. 'for' → logprob: -4.112123966217041
    7. ' =' → logprob: -4.862123966217041
    8. ':' → logprob: -4.987123966217041
    9. 's' → logprob: -4.987123966217041
    10. ' ' → logprob: -4.987123966217041

Token 408: ' this' (ID: 495)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7250603437423706
    2. 'assigned' → logprob: -1.8500603437423706
    3. ')' → logprob: -2.10006046295166
    4. 'for' → logprob: -2.22506046295166
    5. 'neighbors' → logprob: -2.22506046295166
    6. 'the' → logprob: -2.47506046295166
    7. ' the' → logprob: -2.60006046295166
    8. ' assigned' → logprob: -3.60006046295166
    9. ',' → logprob: -3.72506046295166
    10. '#' → logprob: -3.97506046295166

Token 409: ',' (ID: 11)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.7111249566078186
    2. 'for' → logprob: -1.8361248970031738
    3. 'import' → logprob: -2.961124897003174
    4. ' =' → logprob: -3.211124897003174
    5. ':' → logprob: -3.336124897003174
    6. '#' → logprob: -3.461124897003174
    7. 'def' → logprob: -3.586124897003174
    8. ',' → logprob: -3.711124897003174
    9. '
' → logprob: -3.961124897003174
    10. '```' → logprob: -4.086124897003174

Token 410: ' keep' (ID: 3357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44175222516059875
    2. 'from' → logprob: -1.8167521953582764
    3. 'visited' → logprob: -2.8167521953582764
    4. 'assigned' → logprob: -3.0667521953582764
    5. 'queue' → logprob: -3.5667521953582764
    6. '#' → logprob: -4.0667524337768555
    7. 'import' → logprob: -4.1917524337768555
    8. 'def' → logprob: -5.4417524337768555
    9. ' for' → logprob: -5.4417524337768555
    10. 'continue' → logprob: -5.5667524337768555

Token 411: ' track' (ID: 5290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4153805673122406
    2. 'a' → logprob: -2.0403804779052734
    3. 'track' → logprob: -2.5403804779052734
    4. 'neighbors' → logprob: -3.4153804779052734
    5. 'neighbor' → logprob: -3.5403804779052734
    6. ' track' → logprob: -3.9153804779052734
    7. 'from' → logprob: -4.790380477905273
    8. 'tracking' → logprob: -4.790380477905273
    9. 'import' → logprob: -4.915380477905273
    10. ' a' → logprob: -5.040380477905273

Token 412: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3215951919555664
    2. ' of' → logprob: -1.8215951919555664
    3. 'of' → logprob: -2.4465951919555664
    4. '[' → logprob: -4.321595191955566
    5. '_of' → logprob: -5.071595191955566
    6. ')' → logprob: -6.071595191955566
    7. '[]' → logprob: -7.071595191955566
    8. '=' → logprob: -7.446595191955566
    9. ',' → logprob: -7.571595191955566
    10. '#' → logprob: -7.571595191955566

Token 413: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.10160771757364273
    2. ' each' → logprob: -2.3516077995300293
    3. '_' → logprob: -8.226607322692871
    4. 'i' → logprob: -8.476607322692871
    5. ')' → logprob: -8.601607322692871
    6. 'e' → logprob: -8.976607322692871
    7. 'neighbor' → logprob: -9.226607322692871
    8. '_each' → logprob: -9.351607322692871
    9. ' node' → logprob: -9.726607322692871
    10. 'neighbors' → logprob: -9.851607322692871

Token 414: ' node' (ID: 4596)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0140668153762817
    2. ' node' → logprob: -1.3890668153762817
    3. 'node' → logprob: -1.5140668153762817
    4. ')' → logprob: -2.264066696166992
    5. 'neighbor' → logprob: -3.764066696166992
    6. '[node' → logprob: -4.514066696166992
    7. '_node' → logprob: -5.264066696166992
    8. 'assigned' → logprob: -5.264066696166992
    9. '_neighbor' → logprob: -5.389066696166992
    10. ' ' → logprob: -5.639066696166992

Token 415: ' of' (ID: 328)
  Prédit: '_neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -1.2490291595458984
    2. '_' → logprob: -1.9990291595458984
    3. '_used' → logprob: -2.1240291595458984
    4. '_of' → logprob: -2.6240291595458984
    5. 'of' → logprob: -2.8740291595458984
    6. '_remaining' → logprob: -3.1240291595458984
    7. ' of' → logprob: -3.4990291595458984
    8. ',' → logprob: -3.7490291595458984
    9. '_for' → logprob: -3.8740291595458984
    10. '[' → logprob: -3.8740291595458984

Token 416: ' letters' (ID: 18151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1889433860778809
    2. 'neighbors' → logprob: -1.3139433860778809
    3. 'the' → logprob: -1.4389433860778809
    4. 'neighbor' → logprob: -2.438943386077881
    5. ' the' → logprob: -3.313943386077881
    6. 'assigned' → logprob: -3.688943386077881
    7. 'each' → logprob: -5.313943386077881
    8. ' neighbors' → logprob: -5.313943386077881
    9. 'bidden' → logprob: -5.438943386077881
    10. ' forbidden' → logprob: -5.438943386077881

Token 417: ' assigned' (ID: 21482)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.10949037224054337
    2. '_' → logprob: -3.109490394592285
    3. '_b' → logprob: -3.484490394592285
    4. '_for' → logprob: -4.609490394592285
    5. '_usage' → logprob: -6.109490394592285
    6. '_mask' → logprob: -6.234490394592285
    7. '_taken' → logprob: -6.359490394592285
    8. 'used' → logprob: -6.484490394592285
    9. '_to' → logprob: -6.734490394592285
    10. '_count' → logprob: -6.734490394592285

Token 418: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.40050405263900757
    2. '_' → logprob: -2.9005041122436523
    3. ' to' → logprob: -2.9005041122436523
    4. '[' → logprob: -3.0255041122436523
    5. 'to' → logprob: -3.1505041122436523
    6. '_used' → logprob: -3.2755041122436523
    7. '_neighbors' → logprob: -3.7755041122436523
    8. '[]' → logprob: -3.9005041122436523
    9. 's' → logprob: -5.025504112243652
    10. '_letters' → logprob: -5.400504112243652

Token 419: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.011974084191024303
    2. ' neighbors' → logprob: -4.511973857879639
    3. 'neighbor' → logprob: -7.136973857879639
    4. ' its' → logprob: -9.761974334716797
    5. 'its' → logprob: -10.136974334716797
    6. '_neighbors' → logprob: -11.386974334716797
    7. 'ne' → logprob: -11.511974334716797
    8. 'adj' → logprob: -12.761974334716797
    9. 'their' → logprob: -13.261974334716797
    10. 'the' → logprob: -13.386974334716797

Token 420: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22793342173099518
    2. 'used' → logprob: -2.352933406829834
    3. '#' → logprob: -3.602933406829834
    4. 'assigned' → logprob: -3.852933406829834
    5. 'neighbors' → logprob: -3.977933406829834
    6. 'neighbor' → logprob: -4.227933406829834
    7. 'b' → logprob: -5.102933406829834
    8. '_for' → logprob: -5.602933406829834
    9. '_used' → logprob: -5.852933406829834
    10. 'visited' → logprob: -6.352933406829834

Token 421: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3844435513019562
    2. 'used' → logprob: -2.509443521499634
    3. 'assigned' → logprob: -2.634443521499634
    4. '#' → logprob: -3.384443521499634
    5. '_for' → logprob: -3.759443521499634
    6. '_used' → logprob: -4.009443759918213
    7. 'neighbors' → logprob: -4.009443759918213
    8. ' =' → logprob: -4.384443759918213
    9. 'neighbor' → logprob: -4.509443759918213
    10. 'count' → logprob: -5.259443759918213

Token 422: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2656332850456238
    2. 'assigned' → logprob: -2.6406333446502686
    3. 'used' → logprob: -2.7656333446502686
    4. '#' → logprob: -4.1406331062316895
    5. 'visited' → logprob: -4.5156331062316895
    6. '
' → logprob: -4.7656331062316895
    7. '_for' → logprob: -4.7656331062316895
    8. ' for' → logprob: -4.8906331062316895
    9. 'neighbor' → logprob: -5.0156331062316895
    10. 'b' → logprob: -5.0156331062316895

Token 423: ' some' (ID: 1236)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3714615106582642
    2. 'a' → logprob: -2.1214613914489746
    3. ''' → logprob: -2.2464613914489746
    4. 'assigned' → logprob: -2.2464613914489746
    5. ' assigned' → logprob: -2.4964613914489746
    6. 'V' → logprob: -3.1214613914489746
    7. '_' → logprob: -3.3714613914489746
    8. ' all' → logprob: -3.7464613914489746
    9. 'each' → logprob: -3.7464613914489746
    10. ' each' → logprob: -4.121461391448975

Token 424: ' neighbors' (ID: 31655)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8820957541465759
    2. ' neighbors' → logprob: -1.1320958137512207
    3. 'neighbors' → logprob: -2.7570958137512207
    4. '#' → logprob: -3.8820958137512207
    5. ' are' → logprob: -4.007095813751221
    6. ' nodes' → logprob: -4.007095813751221
    7. ' of' → logprob: -4.132095813751221
    8. ' ' → logprob: -4.382095813751221
    9. '_neighbors' → logprob: -4.382095813751221
    10. ' may' → logprob: -4.632095813751221

Token 425: ' may' (ID: 1340)
  Prédit: 'may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'may' → logprob: -0.870719313621521
    2. 'have' → logprob: -1.370719313621521
    3. 'are' → logprob: -2.2457194328308105
    4. ' may' → logprob: -2.9957194328308105
    5. ' are' → logprob: -3.1207194328308105
    6. 'might' → logprob: -3.6207194328308105
    7. ' have' → logprob: -3.9957194328308105
    8. 'assigned' → logprob: -4.2457194328308105
    9. '
' → logprob: -4.6207194328308105
    10. ''' → logprob: -4.6207194328308105

Token 426: ' also' (ID: 1217)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6923294067382812
    2. 'be' → logprob: -1.5673294067382812
    3. ' be' → logprob: -1.6923294067382812
    4. ' not' → logprob: -2.4423294067382812
    5. 'have' → logprob: -4.567329406738281
    6. ' have' → logprob: -5.067329406738281
    7. '#' → logprob: -7.442329406738281
    8. 'remain' → logprob: -7.692329406738281
    9. ' remain' → logprob: -8.067329406738281
    10. 'are' → logprob: -8.442329406738281

Token 427: ' be' (ID: 413)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6560534238815308
    2. 'be' → logprob: -0.9060534238815308
    3. ' not' → logprob: -3.1560535430908203
    4. ' be' → logprob: -3.4060535430908203
    5. 'have' → logprob: -6.90605354309082
    6. ' have' → logprob: -9.40605354309082
    7. '#' → logprob: -10.28105354309082
    8. '
' → logprob: -10.65605354309082
    9. '   ' → logprob: -11.15605354309082
    10. 'remain' → logprob: -11.40605354309082

Token 428: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.31002530455589294
    2. 'None' → logprob: -2.435025215148926
    3. 'assigned' → logprob: -2.935025215148926
    4. ''?' → logprob: -3.060025215148926
    5. '?' → logprob: -3.310025215148926
    6. ''un' → logprob: -3.560025215148926
    7. ''' → logprob: -5.060025215148926
    8. ' None' → logprob: -6.060025215148926
    9. 'unknown' → logprob: -6.185025215148926
    10. ' un' → logprob: -7.060025215148926

Token 429: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00010592726175673306
    2. ' assigned' → logprob: -10.500105857849121
    3. '```' → logprob: -10.500105857849121
    4. 'finished' → logprob: -10.625105857849121
    5. 'completed' → logprob: -12.000105857849121
    6. '
' → logprob: -12.500105857849121
    7. '#' → logprob: -12.625105857849121
    8. 'initialized' → logprob: -12.625105857849121
    9. 'resolved' → logprob: -12.875105857849121
    10. 'processed' → logprob: -13.750105857849121

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3744111955165863
    2. '
' → logprob: -1.8744112253189087
    3. ',
' → logprob: -2.374411106109619
    4. '#' → logprob: -3.749411106109619
    5. 'for' → logprob: -4.874411106109619
    6. 'assigned' → logprob: -5.249411106109619
    7. '<|end|>' → logprob: -5.374411106109619
    8. '.' → logprob: -5.999411106109619
    9. ' and' → logprob: -6.249411106109619
    10. '<|end|>' → logprob: -6.374411106109619

Token 431: ' letters' (ID: 18151)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5198790431022644
    2. '
' → logprob: -2.144879102706909
    3. 'for' → logprob: -2.894879102706909
    4. ')' → logprob: -3.019879102706909
    5. ' we' → logprob: -3.394879102706909
    6. ',' → logprob: -3.769879102706909
    7. ' for' → logprob: -3.769879102706909
    8. ' 
' → logprob: -4.39487886428833
    9. 'continue' → logprob: -4.64487886428833
    10. 'def' → logprob: -4.64487886428833

Token 432: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.6633267402648926
    2. 'used' → logprob: -1.9133267402648926
    3. '_used' → logprob: -1.9133267402648926
    4. '=' → logprob: -2.0383267402648926
    5. ' are' → logprob: -2.2883267402648926
    6. ' =' → logprob: -2.5383267402648926
    7. ' used' → logprob: -3.1633267402648926
    8. '_' → logprob: -3.1633267402648926
    9. ' assigned' → logprob: -3.7883267402648926
    10. '_ass' → logprob: -3.9133267402648926

Token 433: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' grow' (ID: 3839)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1653439700603485
    2. '=' → logprob: -2.415343999862671
    3. ' to' → logprob: -3.040343999862671
    4. '.' → logprob: -5.665343761444092
    5. 'if' → logprob: -6.540343761444092
    6. '+=' → logprob: -6.665343761444092
    7. 'after' → logprob: -6.790343761444092
    8. 'are' → logprob: -7.040343761444092
    9. ' =' → logprob: -7.165343761444092
    10. 'for' → logprob: -7.165343761444092

Token 435: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06496155261993408
    2. 'for' → logprob: -3.9399614334106445
    3. '#' → logprob: -4.4399614334106445
    4. 'assigned' → logprob: -4.4399614334106445
    5. '

' → logprob: -4.9399614334106445
    6. 'def' → logprob: -6.5649614334106445
    7. 'import' → logprob: -6.8149614334106445
    8. '\n' → logprob: -6.8149614334106445
    9. 'from' → logprob: -6.9399614334106445
    10. '```' → logprob: -7.0649614334106445

Token 436: ' we' (ID: 581)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.3168274760246277
    2. ' neighbors' → logprob: -2.0668275356292725
    3. ' nodes' → logprob: -2.6918275356292725
    4. 'assigned' → logprob: -3.4418275356292725
    5. 'nodes' → logprob: -3.6918275356292725
    6. ' assigned' → logprob: -5.316827297210693
    7. 'they' → logprob: -5.691827297210693
    8. ' they' → logprob: -6.191827297210693
    9. ' assignments' → logprob: -6.191827297210693
    10. ' we' → logprob: -6.566827297210693

Token 437: ' assign' (ID: 14975)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.4461362957954407
    2. 'assign' → logprob: -1.696136236190796
    3. ' process' → logprob: -1.821136236190796
    4. 'pro' → logprob: -6.071136474609375
    5. 'visit' → logprob: -6.071136474609375
    6. 'update' → logprob: -6.446136474609375
    7. 'go' → logprob: -6.571136474609375
    8. 'progress' → logprob: -6.696136474609375
    9. 'continue' → logprob: -6.821136474609375
    10. 'discover' → logprob: -7.071136474609375

Token 438: ' nodes' (ID: 15749)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24998103082180023
    2. 'for' → logprob: -2.999980926513672
    3. 'assigned' → logprob: -3.374980926513672
    4. 'def' → logprob: -3.749980926513672
    5. '#' → logprob: -3.749980926513672
    6. ' =' → logprob: -4.499980926513672
    7. '

' → logprob: -4.624980926513672
    8. 'used' → logprob: -4.624980926513672
    9. 'visited' → logprob: -5.249980926513672
    10. ',' → logprob: -5.499980926513672

Token 439: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3360159993171692
    2. 'assigned' → logprob: -2.2110159397125244
    3. 'used' → logprob: -2.4610159397125244
    4. 'visited' → logprob: -3.4610159397125244
    5. 'from' → logprob: -3.8360159397125244
    6. '#' → logprob: -4.4610161781311035
    7. 'queue' → logprob: -4.7110161781311035
    8. 'available' → logprob: -5.8360161781311035
    9. 'b' → logprob: -6.2110161781311035
    10. '
' → logprob: -6.3360161781311035

Token 440: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48691481351852417
    2. 'assigned' → logprob: -1.861914873123169
    3. 'visited' → logprob: -2.236914873123169
    4. 'used' → logprob: -3.111914873123169
    5. 'queue' → logprob: -3.861914873123169
    6. '#' → logprob: -3.986914873123169
    7. 'def' → logprob: -4.98691463470459
    8. '
' → logprob: -5.11191463470459
    9. 'from' → logprob: -5.61191463470459
    10. 'available' → logprob: -5.73691463470459

Token 441: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19381332397460938
    2. 'assigned' → logprob: -2.3188133239746094
    3. 'queue' → logprob: -4.068813323974609
    4. 'from' → logprob: -4.193813323974609
    5. 'available' → logprob: -4.318813323974609
    6. 'def' → logprob: -4.693813323974609
    7. 'un' → logprob: -5.318813323974609
    8. 'assign' → logprob: -5.568813323974609
    9. 'used' → logprob: -5.693813323974609
    10. '#' → logprob: -5.693813323974609

Token 442: ' no' (ID: 860)
  Prédit: ' assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assigned' → logprob: -0.6907051801681519
    2. 'assigned' → logprob: -1.1907051801681519
    3. ' all' → logprob: -3.5657052993774414
    4. ' the' → logprob: -3.8157052993774414
    5. 'for' → logprob: -4.190705299377441
    6. ' ' → logprob: -4.190705299377441
    7. 'all' → logprob: -4.315705299377441
    8. ' for' → logprob: -4.565705299377441
    9. '#' → logprob: -4.690705299377441
    10. 'V' → logprob: -4.940705299377441

Token 443: ' node' (ID: 4596)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9069483280181885
    2. 'de' → logprob: -1.9069483280181885
    3. 'w' → logprob: -1.9069483280181885
    4. '=' → logprob: -2.2819483280181885
    5. 'ne' → logprob: -2.2819483280181885
    6. 't' → logprob: -2.5319483280181885
    7. 'e' → logprob: -2.7819483280181885
    8. 'n' → logprob: -3.2819483280181885
    9. ' =' → logprob: -3.4069483280181885
    10. '[' → logprob: -3.6569483280181885

Token 444: ' can' (ID: 665)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.4297140836715698
    2. '_' → logprob: -2.1797142028808594
    3. ''s' → logprob: -2.4297142028808594
    4. ' can' → logprob: -2.5547142028808594
    5. ' is' → logprob: -2.5547142028808594
    6. ''' → logprob: -2.8047142028808594
    7. '#' → logprob: -3.0547142028808594
    8. 's' → logprob: -3.3047142028808594
    9. 'has' → logprob: -3.4297142028808594
    10. 'assigned' → logprob: -3.4297142028808594

Token 445: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.258658230304718
    2. ' have' → logprob: -2.0086581707000732
    3. 'be' → logprob: -2.7586581707000732
    4. ' be' → logprob: -4.133658409118652
    5. 'assign' → logprob: -4.883658409118652
    6. 'remain' → logprob: -6.633658409118652
    7. 'ever' → logprob: -6.883658409118652
    8. '
' → logprob: -7.633658409118652
    9. 'appear' → logprob: -7.758658409118652
    10. ' ' → logprob: -7.946158409118652

Token 446: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.5246450304985046
    2. 'more' → logprob: -2.3996450901031494
    3. 'a' → logprob: -2.5246450901031494
    4. ' degree' → logprob: -2.7746450901031494
    5. '26' → logprob: -2.8996450901031494
    6. 'neighbors' → logprob: -3.3996450901031494
    7. ' ' → logprob: -3.8996450901031494
    8. ' more' → logprob: -4.14964485168457
    9. 'all' → logprob: -4.77464485168457
    10. ' neighbors' → logprob: -4.89964485168457

Token 447: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6910403966903687
    2. '>' → logprob: -1.5660403966903687
    3. ' <=' → logprob: -1.9410403966903687
    4. '=' → logprob: -2.941040515899658
    5. ' ' → logprob: -3.316040515899658
    6. '<=' → logprob: -3.941040515899658
    7. '_' → logprob: -4.566040515899658
    8. ' =' → logprob: -5.441040515899658
    9. ')' → logprob: -5.816040515899658
    10. ' <' → logprob: -5.816040515899658

Token 448: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0017430083826184273
    2. ' ' → logprob: -6.376742839813232
    3. '=' → logprob: -10.87674331665039
    4. '```' → logprob: -11.75174331665039
    5. '27' → logprob: -12.50174331665039
    6. '
' → logprob: -13.12674331665039
    7. ' =' → logprob: -13.87674331665039
    8. '6' → logprob: -14.00174331665039
    9. '1' → logprob: -14.12674331665039
    10. ''' → logprob: -14.25174331665039

Token 449: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.02693316340446472
    2. ' ' → logprob: -3.651933193206787
    3. '1' → logprob: -8.776932716369629
    4. '6' → logprob: -9.026932716369629
    5. ''' → logprob: -9.401932716369629
    6. '=' → logprob: -9.776932716369629
    7. '2' → logprob: -10.339432716369629
    8. '
' → logprob: -10.589432716369629
    9. '```' → logprob: -10.589432716369629
    10. '27' → logprob: -10.651932716369629

Token 450: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8263991475105286
    2. '
' → logprob: -1.3263990879058838
    3. 'assigned' → logprob: -1.9513990879058838
    4. 'queue' → logprob: -3.451399087905884
    5. 'used' → logprob: -3.451399087905884
    6. '#' → logprob: -3.826399087905884
    7. 'available' → logprob: -3.951399087905884
    8. 'from' → logprob: -4.701399326324463
    9. 'visited' → logprob: -4.701399326324463
    10. '

' → logprob: -5.326399326324463

Token 451: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1458733081817627
    2. ')' → logprob: -1.7708733081817627
    3. ' we' → logprob: -2.3958733081817627
    4. '#' → logprob: -2.5208733081817627
    5. '<|end|>' → logprob: -2.7708733081817627
    6. ' the' → logprob: -2.8958733081817627
    7. ' 
' → logprob: -3.1458733081817627
    8. '
' → logprob: -3.2708733081817627
    9. ' for' → logprob: -3.6458733081817627
    10. ',' → logprob: -4.145873069763184

Token 452: ' each' (ID: 2454)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.78065425157547
    2. ' neighbor' → logprob: -1.6556541919708252
    3. '_' → logprob: -2.530654191970825
    4. ' _' → logprob: -2.905654191970825
    5. 'neighbor' → logprob: -3.155654191970825
    6. 'each' → logprob: -3.280654191970825
    7. ' each' → logprob: -3.530654191970825
    8. 'node' → logprob: -4.030654430389404
    9. ' i' → logprob: -4.155654430389404
    10. 'bidden' → logprob: -4.280654430389404

Token 453: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.1293705403804779
    2. 'node' → logprob: -2.3793704509735107
    3. '_' → logprob: -4.12937068939209
    4. ')' → logprob: -5.25437068939209
    5. 'neighbor' → logprob: -5.87937068939209
    6. '[node' → logprob: -6.37937068939209
    7. ' neighbor' → logprob: -7.62937068939209
    8. ' ' → logprob: -8.12937068939209
    9. '(node' → logprob: -8.37937068939209
    10. ' _' → logprob: -8.62937068939209

Token 454: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06706633418798447
    2. ':' → logprob: -3.1920664310455322
    3. ')' → logprob: -5.317066192626953
    4. '#' → logprob: -6.317066192626953
    5. ' ,' → logprob: -6.442066192626953
    6. ''s' → logprob: -6.692066192626953
    7. ',
' → logprob: -6.817066192626953
    8. '.' → logprob: -6.942066192626953
    9. '):' → logprob: -6.942066192626953
    10. ':
' → logprob: -7.067066192626953

Token 455: ' least' (ID: 5153)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.1416415274143219
    2. ' most' → logprob: -2.516641616821289
    3. 'a' → logprob: -3.766641616821289
    4. 'any' → logprob: -5.266641616821289
    5. 'least' → logprob: -5.266641616821289
    6. ' a' → logprob: -5.641641616821289
    7. ' this' → logprob: -5.641641616821289
    8. 'this' → logprob: -5.766641616821289
    9. ' least' → logprob: -6.641641616821289
    10. ' any' → logprob: -6.891641616821289

Token 456: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.009601548314094543
    2. ' a' → logprob: -5.509601593017578
    3. 'one' → logprob: -6.134601593017578
    4. ' the' → logprob: -7.009601593017578
    5. ' ' → logprob: -7.259601593017578
    6. ' all' → logprob: -8.009601593017578
    7. 'a' → logprob: -8.134601593017578
    8. ')' → logprob: -8.634601593017578
    9. ' there' → logprob: -8.759601593017578
    10. ' in' → logprob: -9.134601593017578

Token 457: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -1.180093765258789
    2. '_' → logprob: -1.305093765258789
    3. 'letter' → logprob: -1.680093765258789
    4. '
' → logprob: -3.680093765258789
    5. '\n' → logprob: -3.805093765258789
    6. ' ' → logprob: -4.055093765258789
    7. ')' → logprob: -4.055093765258789
    8. ' possible' → logprob: -4.305093765258789
    9. 'possible' → logprob: -4.305093765258789
    10. ' of' → logprob: -4.430093765258789

Token 458: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3366777002811432
    2. '_' → logprob: -2.2116777896881104
    3. ' is' → logprob: -2.3366777896881104
    4. ' =' → logprob: -4.336677551269531
    5. ' can' → logprob: -4.711677551269531
    6. ':' → logprob: -4.961677551269531
    7. ' ' → logprob: -5.086677551269531
    8. ')' → logprob: -5.586677551269531
    9. ' remains' → logprob: -5.586677551269531
    10. ',' → logprob: -5.711677551269531

Token 459: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.6855022311210632
    2. ' available' → logprob: -1.560502290725708
    3. ' always' → logprob: -1.935502290725708
    4. 'always' → logprob: -2.310502290725708
    5. ' guaranteed' → logprob: -3.685502290725708
    6. ' free' → logprob: -5.310502052307129
    7. 'free' → logprob: -5.560502052307129
    8. '```' → logprob: -6.560502052307129
    9. 'allowed' → logprob: -6.935502052307129
    10. 'possible' → logprob: -7.060502052307129

Token 460: '.

' (ID: 364)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6768988966941833
    2. 'available' → logprob: -1.9268989562988281
    3. 'for' → logprob: -2.051898956298828
    4. 'assigned' → logprob: -2.676898956298828
    5. 'from' → logprob: -2.801898956298828
    6. 'un' → logprob: -3.801898956298828
    7. '#' → logprob: -4.176898956298828
    8. 'visited' → logprob: -4.301898956298828
    9. '
' → logprob: -4.926898956298828
    10. 'used' → logprob: -5.426898956298828

Token 461: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0923922061920166
    2. 'queue' → logprob: -2.0923922061920166
    3. 'assigned' → logprob: -2.0923922061920166
    4. 'available' → logprob: -2.2173922061920166
    5. 'visited' → logprob: -2.2173922061920166
    6. 'used' → logprob: -2.3423922061920166
    7. '#' → logprob: -3.4673922061920166
    8. '
' → logprob: -3.4673922061920166
    9. 'def' → logprob: -4.9673919677734375
    10. 'b' → logprob: -5.7173919677734375

Token 462: ' Approach' (ID: 86383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7892138361930847
    2. 'available' → logprob: -1.7892138957977295
    3. 'queue' → logprob: -2.1642138957977295
    4. 'assigned' → logprob: -2.2892138957977295
    5. 'from' → logprob: -2.7892138957977295
    6. 'used' → logprob: -3.2892138957977295
    7. 'visited' → logprob: -3.7892138957977295
    8. 'def' → logprob: -4.41421365737915
    9. '#' → logprob: -4.78921365737915
    10. 'assign' → logprob: -5.28921365737915

Token 463: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30428168177604675
    2. 'from' → logprob: -2.304281711578369
    3. 'assigned' → logprob: -2.929281711578369
    4. 'used' → logprob: -3.554281711578369
    5. 'available' → logprob: -3.554281711578369
    6. 'queue' → logprob: -3.804281711578369
    7. '#' → logprob: -4.054281711578369
    8. 'visited' → logprob: -5.054281711578369
    9. 'def' → logprob: -6.804281711578369
    10. 'b' → logprob: -6.929281711578369

Token 464: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8892258405685425
    2. 'assigned' → logprob: -0.8892258405685425
    3. 'for' → logprob: -3.139225959777832
    4. 'available' → logprob: -3.389225959777832
    5. 'visited' → logprob: -3.514225959777832
    6. '#' → logprob: -3.639225959777832
    7. 'used' → logprob: -3.764225959777832
    8. 'queue' → logprob: -5.264225959777832
    9. 'import' → logprob: -5.264225959777832
    10. 'un' → logprob: -5.889225959777832

Token 465: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7016584277153015
    2. 'for' → logprob: -1.7016584873199463
    3. 'assigned' → logprob: -1.8266584873199463
    4. 'queue' → logprob: -2.5766584873199463
    5. 'available' → logprob: -2.8266584873199463
    6. '#' → logprob: -5.201658248901367
    7. 'used' → logprob: -5.451658248901367
    8. 'import' → logprob: -5.701658248901367
    9. 'assign' → logprob: -5.701658248901367
    10. 'visited' → logprob: -6.201658248901367

Token 466: ' each' (ID: 2454)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.45080989599227905
    2. ' node' → logprob: -1.4508099555969238
    3. 'i' → logprob: -2.700809955596924
    4. '_' → logprob: -3.950809955596924
    5. 'neighbor' → logprob: -4.325809955596924
    6. 'u' → logprob: -4.575809955596924
    7. 'n' → logprob: -5.075809955596924
    8. ' i' → logprob: -5.700809955596924
    9. 'neighbors' → logprob: -5.700809955596924
    10. ' u' → logprob: -7.075809955596924

Token 467: ' node' (ID: 4596)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.730814516544342
    2. ' node' → logprob: -1.2308144569396973
    3. 'node' → logprob: -2.1058144569396973
    4. ' _' → logprob: -3.4808144569396973
    5. '?' → logprob: -3.9808144569396973
    6. 'i' → logprob: -4.730814456939697
    7. 'n' → logprob: -4.855814456939697
    8. ' ' → logprob: -4.855814456939697
    9. ' un' → logprob: -4.980814456939697
    10. ' i' → logprob: -5.605814456939697

Token 468: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7934001088142395
    2. ':' → logprob: -1.1684000492095947
    3. '_' → logprob: -2.7934000492095947
    4. ' in' → logprob: -2.9184000492095947
    5. 'in' → logprob: -3.2934000492095947
    6. 'with' → logprob: -4.043400287628174
    7. 'assigned' → logprob: -4.543400287628174
    8. ' with' → logprob: -4.793400287628174
    9. '[' → logprob: -5.418400287628174
    10. ' ,' → logprob: -5.793400287628174

Token 469: ' '?' (ID: 73818)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.8591389656066895
    2. 'assigned' → logprob: -1.2341389656066895
    3. 'a' → logprob: -1.3591389656066895
    4. ''?' → logprob: -4.8591389656066895
    5. ''' → logprob: -5.2341389656066895
    6. ' assigned' → logprob: -5.4841389656066895
    7. ' a' → logprob: -5.8591389656066895
    8. '`' → logprob: -5.9841389656066895
    9. '?a' → logprob: -6.4841389656066895
    10. ' '?'' → logprob: -6.6091389656066895

Token 470: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3580169081687927
    2. '',' → logprob: -1.9830169677734375
    3. '_' → logprob: -2.7330169677734375
    4. '?' → logprob: -3.8580169677734375
    5. ' '' → logprob: -3.9830169677734375
    6. '':' → logprob: -4.4830169677734375
    7. '?',' → logprob: -4.8580169677734375
    8. '_',' → logprob: -5.1080169677734375
    9. ',' → logprob: -5.2330169677734375
    10. ' ',' → logprob: -5.2330169677734375

Token 471: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.347431480884552
    2. ' forbidden' → logprob: -2.8474314212799072
    3. ' for' → logprob: -2.9724314212799072
    4. 'available' → logprob: -3.0974314212799072
    5. '   ' → logprob: -3.7224314212799072
    6. 'queue' → logprob: -3.9724314212799072
    7. 'neighbors' → logprob: -4.472431659698486
    8. ' used' → logprob: -4.847431659698486
    9. ' queue' → logprob: -4.972431659698486
    10. 'import' → logprob: -4.972431659698486

Token 472: ' wait' (ID: 5238)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -1.1152961254119873
    2. ' can' → logprob: -2.2402961254119873
    3. 'will' → logprob: -2.6152961254119873
    4. 'initialize' → logprob: -2.6152961254119873
    5. 'can' → logprob: -2.7402961254119873
    6. 'continue' → logprob: -2.8652961254119873
    7. 'enqueue' → logprob: -2.8652961254119873
    8. ' continue' → logprob: -3.1152961254119873
    9. ''ll' → logprob: -3.6152961254119873
    10. 'maint' → logprob: -4.240296363830566

Token 473: ' until' (ID: 4609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7858960032463074
    2. '_' → logprob: -1.0358960628509521
    3. 'until' → logprob: -2.035896062850952
    4. ' until' → logprob: -3.785896062850952
    5. '_until' → logprob: -4.910895824432373
    6. ')' → logprob: -5.285895824432373
    7. '.' → logprob: -5.535895824432373
    8. ' for' → logprob: -5.660895824432373
    9. 'to' → logprob: -5.785895824432373
    10. '=' → logprob: -5.910895824432373

Token 474: ' assigned' (ID: 21482)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3904017210006714
    2. 'assigned' → logprob: -1.5154017210006714
    3. 'neighbors' → logprob: -2.390401840209961
    4. 'len' → logprob: -2.515401840209961
    5. ' True' → logprob: -3.015401840209961
    6. 'it' → logprob: -3.265401840209961
    7. 'True' → logprob: -3.265401840209961
    8. ' all' → logprob: -3.390401840209961
    9. 'its' → logprob: -3.390401840209961
    10. ' it' → logprob: -3.640401840209961

Token 475: ' letters' (ID: 18151)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7856268882751465
    2. '_' → logprob: -2.0356268882751465
    3. 'for' → logprob: -2.2856268882751465
    4. ':
' → logprob: -2.5356268882751465
    5. '?' → logprob: -3.1606268882751465
    6. '.' → logprob: -3.5356268882751465
    7. '=' → logprob: -3.6606268882751465
    8. '
' → logprob: -3.7856268882751465
    9. '#' → logprob: -4.1606268882751465
    10. ',' → logprob: -4.2856268882751465

Token 476: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06804607808589935
    2. '=' → logprob: -3.6930460929870605
    3. '[' → logprob: -4.3180460929870605
    4. '.' → logprob: -5.1930460929870605
    5. ']' → logprob: -5.4430460929870605
    6. ',' → logprob: -5.8180460929870605
    7. ''' → logprob: -6.1930460929870605
    8. ':' → logprob: -6.4430460929870605
    9. 's' → logprob: -6.4430460929870605
    10. ')' → logprob: -6.8180460929870605

Token 477: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.24457040429115295
    2. ' neighbors' → logprob: -1.6195703744888306
    3. ' its' → logprob: -4.619570255279541
    4. 'all' → logprob: -5.869570255279541
    5. 'neighbor' → logprob: -6.119570255279541
    6. 'its' → logprob: -6.119570255279541
    7. ' all' → logprob: -6.869570255279541
    8. ' their' → logprob: -8.3695707321167
    9. 'their' → logprob: -8.6195707321167
    10. '#' → logprob: -9.7445707321167

Token 478: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.945294737815857
    2. '
' → logprob: -1.945294737815857
    3. ' =' → logprob: -2.0702948570251465
    4. '=' → logprob: -2.1952948570251465
    5. 'for' → logprob: -2.3202948570251465
    6. '_' → logprob: -2.6952948570251465
    7. '?' → logprob: -3.0702948570251465
    8. ':
' → logprob: -3.1952948570251465
    9. 'def' → logprob: -3.5702948570251465
    10. '#' → logprob: -4.1952948570251465

Token 479: ' known' (ID: 5542)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' → logprob: -0.3831639587879181
    2. 'known' → logprob: -1.2581639289855957
    3. 'all' → logprob: -4.633163928985596
    4. 'available' → logprob: -4.758163928985596
    5. 'complete' → logprob: -5.258163928985596
    6. ' updated' → logprob: -5.883163928985596
    7. 'ready' → logprob: -6.383163928985596
    8. ' known' → logprob: -6.633163928985596
    9. 'en' → logprob: -7.133163928985596
    10. 'final' → logprob: -7.133163928985596

Token 480: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8066035509109497
    2. '
' → logprob: -1.0566035509109497
    3. '#' → logprob: -2.55660343170166
    4. 'queue' → logprob: -4.05660343170166
    5. 'def' → logprob: -4.05660343170166
    6. 'while' → logprob: -4.18160343170166
    7. 'assigned' → logprob: -4.43160343170166
    8. 'q' → logprob: -4.80660343170166
    9. ' for' → logprob: -5.18160343170166
    10. ':
' → logprob: -5.43160343170166

Token 481: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1974767446517944
    2. 'for' → logprob: -1.5724767446517944
    3. 'from' → logprob: -1.5724767446517944
    4. '#' → logprob: -2.072476863861084
    5. 'assigned' → logprob: -2.447476863861084
    6. 'available' → logprob: -3.947476863861084
    7. '
' → logprob: -4.822476863861084
    8. 'visited' → logprob: -5.072476863861084
    9. 'used' → logprob: -5.197476863861084
    10. 'q' → logprob: -5.322476863861084

Token 482: ' But' (ID: 3072)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5854846239089966
    2. 'from' → logprob: -1.8354846239089966
    3. 'for' → logprob: -2.335484504699707
    4. 'assigned' → logprob: -2.585484504699707
    5. 'available' → logprob: -3.210484504699707
    6. '#' → logprob: -3.585484504699707
    7. 'visited' → logprob: -4.585484504699707
    8. 'un' → logprob: -5.335484504699707
    9. 'q' → logprob: -5.585484504699707
    10. 'ready' → logprob: -5.835484504699707

Token 483: ' since' (ID: 3630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9459192752838135
    2. '#' → logprob: -1.8209192752838135
    3. ' for' → logprob: -2.3209192752838135
    4. ' True' → logprob: -2.5709192752838135
    5. 'assigned' → logprob: -2.8209192752838135
    6. ' assigned' → logprob: -3.6959192752838135
    7. 'not' → logprob: -3.6959192752838135
    8. 'True' → logprob: -3.8209192752838135
    9. 'len' → logprob: -3.8209192752838135
    10. '
' → logprob: -4.445919036865234

Token 484: ' the' (ID: 290)
  Prédit: ' assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assigned' → logprob: -0.9019805788993835
    2. 'assigned' → logprob: -0.9019805788993835
    3. ' True' → logprob: -3.0269806385040283
    4. ' all' → logprob: -3.1519806385040283
    5. 'all' → logprob: -3.5269806385040283
    6. ' the' → logprob: -4.276980400085449
    7. 'len' → logprob: -4.401980400085449
    8. 'True' → logprob: -4.651980400085449
    9. ' len' → logprob: -4.776980400085449
    10. 'the' → logprob: -5.276980400085449

Token 485: ' process' (ID: 2273)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.199522614479065
    2. '_' → logprob: -1.824522614479065
    3. 'neighbors' → logprob: -2.5745224952697754
    4. ''' → logprob: -2.6995224952697754
    5. ' assigned' → logprob: -3.0745224952697754
    6. 'a' → logprob: -3.3245224952697754
    7. 'space' → logprob: -3.8245224952697754
    8. '`' → logprob: -3.8245224952697754
    9. '?' → logprob: -3.8245224952697754
    10. 'for' → logprob: -3.9495224952697754

Token 486: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4508069157600403
    2. ' is' → logprob: -1.7008068561553955
    3. 'is' → logprob: -3.3258068561553955
    4. '_' → logprob: -3.7008068561553955
    5. ' =' → logprob: -4.075807094573975
    6. ' ' → logprob: -4.075807094573975
    7. ' continues' → logprob: -4.450807094573975
    8. '.' → logprob: -4.575807094573975
    9. ')' → logprob: -4.700807094573975
    10. '#' → logprob: -4.825807094573975

Token 487: ' sequential' (ID: 83182)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.7934895753860474
    2. 'gu' → logprob: -2.293489456176758
    3. 'not' → logprob: -2.543489456176758
    4. 'iter' → logprob: -3.168489456176758
    5. 'possible' → logprob: -3.168489456176758
    6. ' guaranteed' → logprob: -3.168489456176758
    7. 'increment' → logprob: -3.418489456176758
    8. 'completed' → logprob: -3.918489456176758
    9. 'finished' → logprob: -4.043489456176758
    10. 'ready' → logprob: -4.043489456176758

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09999959170818329
    2. ':' → logprob: -3.2249996662139893
    3. '.' → logprob: -3.9749996662139893
    4. ',
' → logprob: -4.34999942779541
    5. '#' → logprob: -4.97499942779541
    6. 'for' → logprob: -5.59999942779541
    7. ' for' → logprob: -5.72499942779541
    8. '
' → logprob: -5.97499942779541
    9. ':
' → logprob: -6.59999942779541
    10. ' and' → logprob: -6.72499942779541

Token 489: ' after' (ID: 1934)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4839513301849365
    2. 'for' → logprob: -1.6089513301849365
    3. ' for' → logprob: -1.9839513301849365
    4. ')' → logprob: -2.6089513301849365
    5. ' we' → logprob: -2.7339513301849365
    6. '
' → logprob: -3.1089513301849365
    7. ' 
' → logprob: -3.4839513301849365
    8. ' assigned' → logprob: -3.4839513301849365
    9. 'def' → logprob: -4.108951568603516
    10. ' ' → logprob: -4.108951568603516

Token 490: ' we' (ID: 581)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.0541681051254272
    2. 'all' → logprob: -1.6791681051254272
    3. 'the' → logprob: -1.6791681051254272
    4. 'assign' → logprob: -2.679168224334717
    5. '```' → logprob: -2.804168224334717
    6. ' the' → logprob: -3.679168224334717
    7. 'a' → logprob: -3.804168224334717
    8. ' each' → logprob: -3.929168224334717
    9. ' all' → logprob: -4.304168224334717
    10. 'import' → logprob: -4.679168224334717

Token 491: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.0722239017486572
    2. ' continue' → logprob: -1.4472239017486572
    3. ' assign' → logprob: -1.8222239017486572
    4. ' have' → logprob: -2.6972239017486572
    5. 'continue' → logprob: -3.0722239017486572
    6. ' complete' → logprob: -3.5722239017486572
    7. ' finish' → logprob: -4.197223663330078
    8. ' process' → logprob: -4.447223663330078
    9. 'finish' → logprob: -4.572223663330078
    10. ' find' → logprob: -4.697223663330078

Token 492: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2774720788002014
    2. 'a' → logprob: -1.5274720191955566
    3. ' the' → logprob: -5.402472019195557
    4. ' letters' → logprob: -5.652472019195557
    5. 'the' → logprob: -5.902472019195557
    6. ')' → logprob: -6.152472019195557
    7. '_' → logprob: -6.277472019195557
    8. ' one' → logprob: -6.277472019195557
    9. ' tokens' → logprob: -6.652472019195557
    10. ',' → logprob: -6.902472019195557

Token 493: ' letter' (ID: 10263)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0900440663099289
    2. '_' → logprob: -3.0900440216064453
    3. ' ' → logprob: -4.340044021606445
    4. 'n' → logprob: -4.715044021606445
    5. ''' → logprob: -5.340044021606445
    6. 'node' → logprob: -5.965044021606445
    7. '[node' → logprob: -6.090044021606445
    8. ' space' → logprob: -6.465044021606445
    9. '[' → logprob: -6.715044021606445
    10. '?' → logprob: -6.965044021606445

Token 494: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36640357971191406
    2. ' to' → logprob: -1.241403579711914
    3. 'to' → logprob: -4.616403579711914
    4. ' ,' → logprob: -5.491403579711914
    5. ' ' → logprob: -6.241403579711914
    6. '.' → logprob: -7.991403579711914
    7. '_to' → logprob: -8.241403579711914
    8. '#' → logprob: -8.366403579711914
    9. '_' → logprob: -8.616403579711914
    10. ')' → logprob: -8.866403579711914

Token 495: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17873847484588623
    2. 'a' → logprob: -2.178738594055176
    3. ' each' → logprob: -4.053738594055176
    4. ' the' → logprob: -4.303738594055176
    5. 'the' → logprob: -5.053738594055176
    6. ' node' → logprob: -5.053738594055176
    7. 'each' → logprob: -5.553738594055176
    8. 'node' → logprob: -6.428738594055176
    9. ' neighbors' → logprob: -8.053738594055176
    10. 'neighbors' → logprob: -8.303738594055176

Token 496: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.011052886955440044
    2. ' node' → logprob: -4.761053085327148
    3. 'neighbor' → logprob: -6.136053085327148
    4. '?' → logprob: -8.511053085327148
    5. 'n' → logprob: -10.261053085327148
    6. '[node' → logprob: -10.636053085327148
    7. ' neighbor' → logprob: -13.511053085327148
    8. '	node' → logprob: -13.511053085327148
    9. '=node' → logprob: -13.511053085327148
    10. 'assigned' → logprob: -14.386053085327148

Token 497: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051135108806192875
    2. ':' → logprob: -6.38011360168457
    3. ']' → logprob: -7.00511360168457
    4. 'for' → logprob: -7.63011360168457
    5. '.' → logprob: -7.88011360168457
    6. ')' → logprob: -7.88011360168457
    7. ' for' → logprob: -8.38011360168457
    8. ',
' → logprob: -8.38011360168457
    9. '_' → logprob: -9.00511360168457
    10. '   ' → logprob: -9.00511360168457

Token 498: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31046438217163086
    2. 'for' → logprob: -2.060464382171631
    3. '   ' → logprob: -2.810464382171631
    4. ',' → logprob: -2.810464382171631
    5. '#' → logprob: -4.310464382171631
    6. ' we' → logprob: -6.435464382171631
    7. ' ' → logprob: -7.435464382171631
    8. ' #' → logprob: -7.685464382171631
    9. ')' → logprob: -7.810464382171631
    10. ' a' → logprob: -8.185464859008789

Token 499: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5869640111923218
    2. ' for' → logprob: -0.8369640111923218
    3. '   ' → logprob: -4.711964130401611
    4. '#' → logprob: -6.336964130401611
    5. ' #' → logprob: -9.461963653564453
    6. ' ' → logprob: -10.461963653564453
    7. '```' → logprob: -10.711963653564453
    8. ' ' → logprob: -10.836963653564453
    9. '
' → logprob: -11.461963653564453
    10. 'graph' → logprob: -12.086963653564453

Token 500: ' update' (ID: 4027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.515648365020752
    2. 'import' → logprob: -2.265648365020752
    3. ' for' → logprob: -2.515648365020752
    4. ' can' → logprob: -2.640648365020752
    5. ' need' → logprob: -3.265648365020752
    6. 'continue' → logprob: -3.515648365020752
    7. 'need' → logprob: -3.890648365020752
    8. ' will' → logprob: -4.140648365020752
    9. 'can' → logprob: -4.515648365020752
    10. ' continue' → logprob: -4.890648365020752

Token 501: ' the' (ID: 290)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.1484798192977905
    2. ' the' → logprob: -1.3984798192977905
    3. 'neighbor' → logprob: -1.5234798192977905
    4. 'the' → logprob: -2.52347993850708
    5. ' neighbors' → logprob: -3.02347993850708
    6. 'for' → logprob: -3.02347993850708
    7. ' neighbor' → logprob: -4.39847993850708
    8. ' for' → logprob: -4.52347993850708
    9. 'assigned' → logprob: -4.64847993850708
    10. ' its' → logprob: -5.89847993850708

Token 502: ' forbidden' (ID: 74435)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.584195613861084
    2. 'for' → logprob: -1.584195613861084
    3. ' neighbors' → logprob: -1.709195613861084
    4. ' for' → logprob: -3.334195613861084
    5. 'neighbor' → logprob: -4.334195613861084
    6. 'assigned' → logprob: -5.584195613861084
    7. ' neighbor' → logprob: -6.959195613861084
    8. ' assigned' → logprob: -7.084195613861084
    9. '   ' → logprob: -7.584195613861084
    10. '```' → logprob: -8.084196090698242

Token 503: ' letters' (ID: 18151)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.0056295315735042095
    2. 'letters' → logprob: -6.255629539489746
    3. '_sets' → logprob: -6.630629539489746
    4. '_set' → logprob: -7.505629539489746
    5. '_' → logprob: -8.005629539489746
    6. '_letter' → logprob: -8.130629539489746
    7. '_neighbors' → logprob: -8.505629539489746
    8. '[' → logprob: -8.630629539489746
    9. 'sets' → logprob: -9.005629539489746
    10. '_nodes' → logprob: -9.130629539489746

Token 504: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05321022868156433
    2. ' for' → logprob: -4.678210258483887
    3. '_' → logprob: -4.928210258483887
    4. '_for' → logprob: -5.178210258483887
    5. '=' → logprob: -5.303210258483887
    6. '[' → logprob: -5.803210258483887
    7. '_mask' → logprob: -5.803210258483887
    8. 's' → logprob: -6.053210258483887
    9. ' =' → logprob: -6.178210258483887
    10. ']' → logprob: -6.178210258483887

Token 505: ' its' (ID: 1617)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6570039987564087
    2. 'neighbor' → logprob: -1.7820039987564087
    3. ' its' → logprob: -1.9070039987564087
    4. 'its' → logprob: -2.157003879547119
    5. 'all' → logprob: -3.407003879547119
    6. ' neighbors' → logprob: -4.407003879547119
    7. ' all' → logprob: -6.282003879547119
    8. 'each' → logprob: -7.282003879547119
    9. 'the' → logprob: -7.407003879547119
    10. ' neighbor' → logprob: -8.407004356384277

Token 506: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.06339848041534424
    2. ' neighbors' → logprob: -2.8133983612060547
    3. 'neighbor' → logprob: -6.563398361206055
    4. ' neighbor' → logprob: -11.688398361206055
    5. '_neighbors' → logprob: -11.938398361206055
    6. '	' → logprob: -14.063398361206055
    7. ' neighbours' → logprob: -14.063398361206055
    8. ' neighboring' → logprob: -14.563398361206055
    9. ' ' → logprob: -14.563398361206055
    10. 'adj' → logprob: -15.313398361206055

Token 507: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06982115656137466
    2. 'assigned' → logprob: -3.6948211193084717
    3. 'queue' → logprob: -3.9448211193084717
    4. 'def' → logprob: -4.694821357727051
    5. 'visited' → logprob: -5.944821357727051
    6. '#' → logprob: -5.944821357727051
    7. 'from' → logprob: -6.319821357727051
    8. 'q' → logprob: -6.319821357727051
    9. '=' → logprob: -7.444821357727051
    10. 'available' → logprob: -7.444821357727051

Token 508: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0285537242889404
    2. 'assigned' → logprob: -1.0285537242889404
    3. 'from' → logprob: -2.1535537242889404
    4. 'visited' → logprob: -2.6535537242889404
    5. 'for' → logprob: -2.7785537242889404
    6. '#' → logprob: -4.6535539627075195
    7. 'def' → logprob: -4.9035539627075195
    8. 'available' → logprob: -5.0285539627075195
    9. 'q' → logprob: -5.4035539627075195
    10. 'import' → logprob: -6.2785539627075195

Token 509: ' So' (ID: 2632)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0816612243652344
    2. 'assigned' → logprob: -1.7066612243652344
    3. 'from' → logprob: -1.8316612243652344
    4. 'for' → logprob: -1.8316612243652344
    5. 'available' → logprob: -2.3316612243652344
    6. 'q' → logprob: -4.081661224365234
    7. 'visited' → logprob: -4.706661224365234
    8. '#' → logprob: -4.706661224365234
    9. 'def' → logprob: -4.956661224365234
    10. 'used' → logprob: -4.956661224365234

Token 510: ' we' (ID: 581)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4053017497062683
    2. 'queue' → logprob: -1.655301809310913
    3. 'assigned' → logprob: -2.530301809310913
    4. 'import' → logprob: -3.155301809310913
    5. '#' → logprob: -5.155301570892334
    6. 'for' → logprob: -5.530301570892334
    7. 'q' → logprob: -6.030301570892334
    8. ' from' → logprob: -6.155301570892334
    9. ' assigned' → logprob: -6.405301570892334
    10. '
' → logprob: -6.780301570892334

Token 511: ' can' (ID: 665)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3340758085250854
    2. '[' → logprob: -1.3340758085250854
    3. '.append' → logprob: -1.9590758085250854
    4. '_' → logprob: -2.584075927734375
    5. 'continue' → logprob: -2.834075927734375
    6. ' =' → logprob: -3.584075927734375
    7. ' need' → logprob: -3.834075927734375
    8. ' continue' → logprob: -3.834075927734375
    9. 'need' → logprob: -3.959075927734375
    10. 'for' → logprob: -3.959075927734375

Token 512: ' use' (ID: 1199)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18076089024543762
    2. 'import' → logprob: -1.9307608604431152
    3. 'use' → logprob: -4.430760860443115
    4. 'initialize' → logprob: -5.055760860443115
    5. 'continue' → logprob: -7.180760860443115
    6. 'start' → logprob: -7.805760860443115
    7. 'push' → logprob: -8.430761337280273
    8. '```' → logprob: -8.430761337280273
    9. 'enqueue' → logprob: -9.430761337280273
    10. 'maint' → logprob: -9.680761337280273

Token 513: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9274451732635498
    2. 'from' → logprob: -0.9274451732635498
    3. 'import' → logprob: -2.17744517326355
    4. 'heap' → logprob: -2.42744517326355
    5. '```' → logprob: -5.802445411682129
    6. 'deque' → logprob: -6.052445411682129
    7. 'queue' → logprob: -6.302445411682129
    8. ' a' → logprob: -11.177445411682129
    9. 'collections' → logprob: -11.302445411682129
    10. 'priority' → logprob: -12.052445411682129

Token 514: ' queue' (ID: 13661)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5348228812217712
    2. 'queue' → logprob: -1.784822940826416
    3. 'deque' → logprob: -2.034822940826416
    4. 'heap' → logprob: -2.284822940826416
    5. 'import' → logprob: -4.284822940826416
    6. 'priority' → logprob: -9.159822463989258
    7. 'collections' → logprob: -11.409822463989258
    8. '```' → logprob: -12.034822463989258
    9. '[]' → logprob: -13.159822463989258
    10. ' deque' → logprob: -14.534822463989258

Token 515: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.002833053469657898
    2. 'queue' → logprob: -6.127832889556885
    3. 'q' → logprob: -7.752832889556885
    4. 'import' → logprob: -9.377833366394043
    5. ' from' → logprob: -9.752833366394043
    6. '
' → logprob: -10.377833366394043
    7. 'deque' → logprob: -10.752833366394043
    8. '```' → logprob: -11.502833366394043
    9. '=' → logprob: -12.752833366394043
    10. 'assigned' → logprob: -12.752833366394043

Token 516: ' nodes' (ID: 15749)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09287064522504807
    2. 'assigned' → logprob: -2.9678707122802734
    3. 'i' → logprob: -4.717870712280273
    4. 'nodes' → logprob: -4.967870712280273
    5. '[i' → logprob: -6.092870712280273
    6. 'n' → logprob: -6.217870712280273
    7. 'q' → logprob: -6.217870712280273
    8. 'c' → logprob: -6.342870712280273
    9. '[node' → logprob: -6.467870712280273
    10. '?' → logprob: -6.592870712280273

Token 517: ' ready' (ID: 6977)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08185449987649918
    2. ' =' → logprob: -2.5818545818328857
    3. '=[]' → logprob: -6.206854343414307
    4. 'from' → logprob: -7.706854343414307
    5. 'import' → logprob: -9.706854820251465
    6. '_' → logprob: -10.081854820251465
    7. '_to' → logprob: -10.206854820251465
    8. '.' → logprob: -10.206854820251465
    9. 'deque' → logprob: -10.331854820251465
    10. ',' → logprob: -10.331854820251465

Token 518: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18150822818279266
    2. '=[]' → logprob: -2.6815083026885986
    3. 'to' → logprob: -3.0565083026885986
    4. '_to' → logprob: -3.9315083026885986
    5. '_nodes' → logprob: -5.3065080642700195
    6. ' to' → logprob: -5.3065080642700195
    7. ' =' → logprob: -5.4315080642700195
    8. 'from' → logprob: -6.0565080642700195
    9. '_queue' → logprob: -6.1815080642700195
    10. 'q' → logprob: -6.5565080642700195

Token 519: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.0020612843800336123
    2. 'be' → logprob: -6.377061367034912
    3. 'process' → logprob: -8.127060890197754
    4. 'enqueue' → logprob: -10.877060890197754
    5. ' assign' → logprob: -11.127060890197754
    6. '_assign' → logprob: -11.502060890197754
    7. 'deque' → logprob: -12.127060890197754
    8. 'assigned' → logprob: -12.752060890197754
    9. 'append' → logprob: -12.877060890197754
    10. ' be' → logprob: -12.877060890197754

Token 520: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.050259556621313095
    2. 'queue' → logprob: -3.175259590148926
    3. 'import' → logprob: -6.175259590148926
    4. '
' → logprob: -6.300259590148926
    5. 'ready' → logprob: -6.675259590148926
    6. '```' → logprob: -7.050259590148926
    7. 'q' → logprob: -7.300259590148926
    8. '=' → logprob: -8.925259590148926
    9. ' from' → logprob: -9.425259590148926
    10. 'assigned' → logprob: -9.550259590148926

Token 521: ' i' (ID: 575)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.865989625453949
    2. 'for' → logprob: -1.9909896850585938
    3. 'from' → logprob: -2.2409896850585938
    4. 'import' → logprob: -2.3659896850585938
    5. 'queue' → logprob: -2.9909896850585938
    6. 'deque' → logprob: -2.9909896850585938
    7. '
' → logprob: -3.8659896850585938
    8. '=' → logprob: -3.8659896850585938
    9. '[]
' → logprob: -3.8659896850585938
    10. '#' → logprob: -4.615989685058594

Token 522: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12558752298355103
    2. 'm' → logprob: -2.3755874633789062
    3. 'nit' → logprob: -4.125587463378906
    4. 't' → logprob: -5.750587463378906
    5. 'nd' → logprob: -6.125587463378906
    6. 'tem' → logprob: -6.500587463378906
    7. 'nt' → logprob: -7.125587463378906
    8. '=' → logprob: -7.625587463378906
    9. 'tems' → logprob: -8.875587463378906
    10. 'import' → logprob: -9.125587463378906

Token 523: '.' (ID: 13)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.44611021876335144
    2. 'deque' → logprob: -1.9461102485656738
    3. '=' → logprob: -2.821110248565674
    4. 'collections' → logprob: -3.071110248565674
    5. '[]
' → logprob: -3.571110248565674
    6. 'ue' → logprob: -4.071110248565674
    7. 'e' → logprob: -4.321110248565674
    8. 'u' → logprob: -4.696110248565674
    9. 'n' → logprob: -4.821110248565674
    10. '[' → logprob: -5.321110248565674

Token 524: ' nodes' (ID: 15749)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19508664309978485
    2. '[node' → logprob: -2.570086717605591
    3. ' []' → logprob: -3.320086717605591
    4. '[n' → logprob: -3.820086717605591
    5. '[i' → logprob: -4.445086479187012
    6. 'n' → logprob: -4.820086479187012
    7. '[' → logprob: -4.945086479187012
    8. 'node' → logprob: -6.445086479187012
    9. '[q' → logprob: -6.445086479187012
    10. '[token' → logprob: -6.820086479187012

Token 525: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.6381027102470398
    2. ' with' → logprob: -1.5131027698516846
    3. '_' → logprob: -2.6381027698516846
    4. '_ready' → logprob: -3.1381027698516846
    5. '_with' → logprob: -3.3881027698516846
    6. '[' → logprob: -3.6381027698516846
    7. 'that' → logprob: -3.7631027698516846
    8. ' that' → logprob: -3.7631027698516846
    9. '_that' → logprob: -4.8881025314331055
    10. ' =' → logprob: -5.7631025314331055

Token 526: ' '?'' (ID: 192100)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.374507337808609
    2. '0' → logprob: -1.3745073080062866
    3. 'no' → logprob: -3.874507427215576
    4. '[]' → logprob: -4.374507427215576
    5. 'True' → logprob: -4.874507427215576
    6. 'all' → logprob: -4.999507427215576
    7. 'len' → logprob: -5.874507427215576
    8. 'False' → logprob: -5.874507427215576
    9. 'None' → logprob: -6.874507427215576
    10. ' no' → logprob: -6.874507427215576

Token 527: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9678318500518799
    2. ' =' → logprob: -1.4678318500518799
    3. '=' → logprob: -1.5928318500518799
    4. '_nodes' → logprob: -2.46783185005188
    5. '_queue' → logprob: -3.21783185005188
    6. '?' → logprob: -3.84283185005188
    7. '_ready' → logprob: -4.467831611633301
    8. ':' → logprob: -5.342831611633301
    9. '_q' → logprob: -5.717831611633301
    10. ',' → logprob: -6.092831611633301

Token 528: ' where' (ID: 1919)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7594721913337708
    2. '0' → logprob: -2.009472131729126
    3. 'for' → logprob: -2.134472131729126
    4. 'True' → logprob: -2.259472131729126
    5. 'assigned' → logprob: -2.884472131729126
    6. 'sum' → logprob: -3.259472131729126
    7. 'len' → logprob: -3.509472131729126
    8. 'neighbors' → logprob: -4.009472370147705
    9. 'False' → logprob: -4.134472370147705
    10. 'no' → logprob: -5.259472370147705

Token 529: ' we' (ID: 581)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.42122867703437805
    2. 'len' → logprob: -1.9212286472320557
    3. 'for' → logprob: -2.1712286472320557
    4. 'all' → logprob: -3.2962286472320557
    5. ' assigned' → logprob: -4.421228885650635
    6. 'not' → logprob: -4.796228885650635
    7. 'True' → logprob: -4.921228885650635
    8. ' len' → logprob: -5.296228885650635
    9. 'any' → logprob: -5.921228885650635
    10. ' True' → logprob: -6.421228885650635

Token 530: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.2676074206829071
    2. 'know' → logprob: -1.7676074504852295
    3. ' can' → logprob: -3.6426074504852295
    4. 'have' → logprob: -4.39260721206665
    5. 'cannot' → logprob: -5.26760721206665
    6. 'assigned' → logprob: -5.76760721206665
    7. 'len' → logprob: -5.89260721206665
    8. 'are' → logprob: -5.89260721206665
    9. 'find' → logprob: -5.89260721206665
    10. ' know' → logprob: -6.39260721206665

Token 531: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.015257819555699825
    2. 'pop' → logprob: -5.515257835388184
    3. 'put' → logprob: -6.015257835388184
    4. ' assign' → logprob: -6.140257835388184
    5. 'enqueue' → logprob: -6.265257835388184
    6. 'continue' → logprob: -7.265257835388184
    7. '```' → logprob: -7.265257835388184
    8. 'process' → logprob: -7.265257835388184
    9. 'append' → logprob: -7.640257835388184
    10. 'add' → logprob: -7.890257835388184

Token 532: ' as' (ID: 472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28865671157836914
    2. '_letters' → logprob: -2.163656711578369
    3. ')' → logprob: -3.038656711578369
    4. ' =' → logprob: -4.288656711578369
    5. '_nodes' → logprob: -4.538656711578369
    6. 'letters' → logprob: -4.788656711578369
    7. '[node' → logprob: -5.038656711578369
    8. '_now' → logprob: -5.163656711578369
    9. '[' → logprob: -5.288656711578369
    10. ' letters' → logprob: -5.413656711578369

Token 533: ' forbidden' (ID: 74435)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.5903998613357544
    2. 'heap' → logprob: -1.5903998613357544
    3. 's' → logprob: -1.9653998613357544
    4. 'igned' → logprob: -2.340399742126465
    5. '[]' → logprob: -2.465399742126465
    6. 'signed' → logprob: -2.965399742126465
    7. 'assigned' → logprob: -3.090399742126465
    8. 'queue' → logprob: -3.590399742126465
    9. 'soon' → logprob: -3.840399742126465
    10. 'found' → logprob: -4.590399742126465

Token 534: ' letters' (ID: 18151)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.0388374924659729
    2. '_set' → logprob: -4.413837432861328
    3. '_bits' → logprob: -5.038837432861328
    4. '_nodes' → logprob: -5.288837432861328
    5. '_chars' → logprob: -5.413837432861328
    6. ' =' → logprob: -5.913837432861328
    7. '_mask' → logprob: -6.413837432861328
    8. '_' → logprob: -6.538837432861328
    9. 'letters' → logprob: -6.788837432861328
    10. '_sets' → logprob: -7.288837432861328

Token 535: ' known' (ID: 5542)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.479804128408432
    2. ' =' → logprob: -1.1048041582107544
    3. '_queue' → logprob: -5.104804039001465
    4. '_nodes' → logprob: -5.104804039001465
    5. 'for' → logprob: -5.354804039001465
    6. '_set' → logprob: -5.729804039001465
    7. 'from' → logprob: -5.729804039001465
    8. ')' → logprob: -5.854804039001465
    9. ':' → logprob: -5.854804039001465
    10. '=set' → logprob: -5.979804039001465

Token 536: '.

' (ID: 364)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1162780150771141
    2. ' =' → logprob: -2.6162779331207275
    3. ':' → logprob: -4.491278171539307
    4. '_ready' → logprob: -5.366278171539307
    5. '.' → logprob: -5.741278171539307
    6. ':
' → logprob: -5.866278171539307
    7. '=
' → logprob: -5.866278171539307
    8. 'for' → logprob: -6.241278171539307
    9. '_' → logprob: -6.491278171539307
    10. 'ready' → logprob: -6.741278171539307

Token 537: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.10265380144119263
    2. 'ready' → logprob: -2.852653741836548
    3. 'q' → logprob: -4.102653980255127
    4. 'assigned' → logprob: -4.727653980255127
    5. 'for' → logprob: -5.227653980255127
    6. '
' → logprob: -5.852653980255127
    7. 'from' → logprob: -6.602653980255127
    8. '#' → logprob: -6.727653980255127
    9. 'assign' → logprob: -6.852653980255127
    10. 'available' → logprob: -7.352653980255127

Token 538: ' Because' (ID: 13602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4314799904823303
    2. 'ready' → logprob: -1.5564799308776855
    3. 'queue' → logprob: -2.1814799308776855
    4. 'import' → logprob: -4.5564799308776855
    5. 'assigned' → logprob: -4.9314799308776855
    6. 'available' → logprob: -5.5564799308776855
    7. 'q' → logprob: -6.3064799308776855
    8. 'for' → logprob: -6.8064799308776855
    9. '#' → logprob: -6.8064799308776855
    10. 'assign' → logprob: -7.3064799308776855

Token 539: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8723726272583008
    2. 'assigned' → logprob: -1.8723726272583008
    3. '[]' → logprob: -2.122372627258301
    4. 'queue' → logprob: -2.122372627258301
    5. '
' → logprob: -2.372372627258301
    6. '?' → logprob: -2.372372627258301
    7. 'import' → logprob: -3.247372627258301
    8. '`' → logprob: -3.622372627258301
    9. '#' → logprob: -3.622372627258301
    10. 'ready' → logprob: -3.872372627258301

Token 540: ' problem' (ID: 4792)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -1.3881819248199463
    2. '_' → logprob: -2.0131819248199463
    3. 'a' → logprob: -2.1381819248199463
    4. 'assigned' → logprob: -2.2631819248199463
    5. 'for' → logprob: -2.8881819248199463
    6. ''' → logprob: -3.1381819248199463
    7. 'q' → logprob: -3.2631819248199463
    8. '=' → logprob: -3.3881819248199463
    9. ')' → logprob: -3.5131819248199463
    10. '[' → logprob: -3.6381819248199463

Token 541: ' says' (ID: 5003)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.385459303855896
    2. '#' → logprob: -1.885459303855896
    3. '_' → logprob: -1.885459303855896
    4. '[' → logprob: -2.2604594230651855
    5. '[node' → logprob: -2.2604594230651855
    6. ':' → logprob: -2.8854594230651855
    7. '.' → logprob: -3.6354594230651855
    8. 'def' → logprob: -3.8854594230651855
    9. ' is' → logprob: -4.1354594230651855
    10. 'for' → logprob: -4.1354594230651855

Token 542: ' to' (ID: 316)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1709665060043335
    2. '[]' → logprob: -1.7959665060043335
    3. 'for' → logprob: -2.420966625213623
    4. ':' → logprob: -2.670966625213623
    5. '=' → logprob: -2.920966625213623
    6. '[' → logprob: -3.170966625213623
    7. '?' → logprob: -3.295966625213623
    8. '[node' → logprob: -3.295966625213623
    9. '[:]' → logprob: -3.545966625213623
    10. '#' → logprob: -3.545966625213623

Token 543: ' choose' (ID: 5655)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42999884486198425
    2. 'import' → logprob: -2.3049988746643066
    3. 'enqueue' → logprob: -2.6799988746643066
    4. 'process' → logprob: -3.5549988746643066
    5. 'for' → logprob: -3.5549988746643066
    6. 'maint' → logprob: -3.8049988746643066
    7. 'initialize' → logprob: -3.9299988746643066
    8. 'push' → logprob: -4.304998874664307
    9. 'put' → logprob: -4.429998874664307
    10. 'append' → logprob: -4.554998874664307

Token 544: ' any' (ID: 1062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.42120641469955444
    2. ' nodes' → logprob: -2.296206474304199
    3. 'the' → logprob: -2.421206474304199
    4. 'nodes' → logprob: -3.046206474304199
    5. ' any' → logprob: -3.421206474304199
    6. ' a' → logprob: -3.546206474304199
    7. 'a' → logprob: -4.171206474304199
    8. '_' → logprob: -4.921206474304199
    9. 'any' → logprob: -5.171206474304199
    10. ' an' → logprob: -5.796206474304199

Token 545: ' un' (ID: 537)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.23162488639354706
    2. 'node' → logprob: -1.8566248416900635
    3. '_' → logprob: -3.2316248416900635
    4. '_node' → logprob: -6.231625080108643
    5. '[node' → logprob: -6.356625080108643
    6. '?' → logprob: -6.981625080108643
    7. ''' → logprob: -7.481625080108643
    8. '(node' → logprob: -7.481625080108643
    9. ' un' → logprob: -7.731625080108643
    10. ')' → logprob: -7.731625080108643

Token 546: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.12410930544137955
    2. 'n' → logprob: -2.4991092681884766
    3. 'q' → logprob: -3.8741092681884766
    4. '_' → logprob: -5.124109268188477
    5. '`' → logprob: -6.374109268188477
    6. '#' → logprob: -6.499109268188477
    7. '?' → logprob: -7.374109268188477
    8. 'ass' → logprob: -7.499109268188477
    9. '')' → logprob: -7.499109268188477
    10. 'a' → logprob: -7.624109268188477

Token 547: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8371752500534058
    2. ' node' → logprob: -1.3371752500534058
    3. '_' → logprob: -1.8371752500534058
    4. '_node' → logprob: -2.0871753692626953
    5. '[node' → logprob: -4.462175369262695
    6. '_nodes' → logprob: -5.587175369262695
    7. ')' → logprob: -6.587175369262695
    8. '[' → logprob: -6.712175369262695
    9. '(node' → logprob: -7.462175369262695
    10. ' _' → logprob: -7.712175369262695

Token 548: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.176414132118225
    2. 'for' → logprob: -1.426414132118225
    3. 'with' → logprob: -2.3014140129089355
    4. ':
' → logprob: -2.3014140129089355
    5. '_' → logprob: -2.9264140129089355
    6. '=' → logprob: -3.5514140129089355
    7. ',' → logprob: -3.5514140129089355
    8. '[' → logprob: -3.6764140129089355
    9. '[node' → logprob: -4.0514140129089355
    10. '?' → logprob: -4.4264140129089355

Token 549: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6516250371932983
    2. ':' → logprob: -1.0266250371932983
    3. '?' → logprob: -3.276625156402588
    4. ':
' → logprob: -4.276625156402588
    5. '.' → logprob: -4.651625156402588
    6. '
' → logprob: -4.651625156402588
    7. '#' → logprob: -4.776625156402588
    8. 'while' → logprob: -4.901625156402588
    9. ')' → logprob: -5.276625156402588
    10. ' for' → logprob: -5.776625156402588

Token 550: ' minimize' (ID: 41776)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.185106635093689
    2. 'for' → logprob: -1.935106635093689
    3. 'import' → logprob: -2.3101067543029785
    4. ' =' → logprob: -2.8101067543029785
    5. '#' → logprob: -3.0601067543029785
    6. ':' → logprob: -3.3101067543029785
    7. '=' → logprob: -3.4351067543029785
    8. 'continue' → logprob: -3.9351067543029785
    9. 'while' → logprob: -3.9351067543029785
    10. 'q' → logprob: -4.1851067543029785

Token 551: ' lex' (ID: 37772)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8629854321479797
    2. 'the' → logprob: -0.9879854321479797
    3. ')' → logprob: -2.237985372543335
    4. ''' → logprob: -3.237985372543335
    5. 'letters' → logprob: -4.112985610961914
    6. ' the' → logprob: -4.862985610961914
    7. 'a' → logprob: -4.987985610961914
    8. '_letters' → logprob: -5.362985610961914
    9. 'import' → logprob: -5.612985610961914
    10. 'assigned' → logprob: -6.237985610961914

Token 552: ' order' (ID: 2569)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.8616743683815002
    2. '_small' → logprob: -0.8616743683815002
    3. 'ic' → logprob: -2.4866743087768555
    4. 'small' → logprob: -4.3616743087768555
    5. '_' → logprob: -4.8616743087768555
    6. '_order' → logprob: -4.9866743087768555
    7. '_priority' → logprob: -5.6116743087768555
    8. ' _' → logprob: -5.7366743087768555
    9. 'min' → logprob: -5.7366743087768555
    10. 'icon' → logprob: -5.8616743087768555

Token 553: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6948126554489136
    2. '_' → logprob: -1.0698126554489136
    3. '=' → logprob: -2.819812774658203
    4. 'for' → logprob: -3.819812774658203
    5. ',' → logprob: -4.194812774658203
    6. '[' → logprob: -4.569812774658203
    7. ')' → logprob: -4.944812774658203
    8. ' =' → logprob: -5.069812774658203
    9. ':
' → logprob: -5.444812774658203
    10. '?' → logprob: -5.694812774658203

Token 554: ' pick' (ID: 5230)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14238528907299042
    2. ' for' → logprob: -2.767385244369507
    3. 'i' → logprob: -4.142385482788086
    4. ':' → logprob: -4.267385482788086
    5. 'while' → logprob: -5.392385482788086
    6. 'assigned' → logprob: -5.392385482788086
    7. 'def' → logprob: -5.767385482788086
    8. ')' → logprob: -5.892385482788086
    9. 'idx' → logprob: -6.017385482788086
    10. ' i' → logprob: -6.267385482788086

Token 555: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.12619610130786896
    2. 'the' → logprob: -2.5011961460113525
    3. ' i' → logprob: -4.251195907592773
    4. 'i' → logprob: -4.876195907592773
    5. ' node' → logprob: -5.251195907592773
    6. ' _' → logprob: -6.376195907592773
    7. ' next' → logprob: -6.501195907592773
    8. ' =' → logprob: -6.876195907592773
    9. ' in' → logprob: -7.126195907592773
    10. 'node' → logprob: -7.251195907592773

Token 556: ' one' (ID: 1001)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2219655513763428
    2. 'lowest' → logprob: -1.7219655513763428
    3. ' smallest' → logprob: -1.8469655513763428
    4. ' node' → logprob: -1.8469655513763428
    5. 'node' → logprob: -3.0969655513763428
    6. 'next' → logprob: -3.3469655513763428
    7. '[' → logprob: -3.9719655513763428
    8. 'n' → logprob: -3.9719655513763428
    9. ' ' → logprob: -4.221965789794922
    10. ' lowest' → logprob: -4.471965789794922

Token 557: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5739969611167908
    2. '_' → logprob: -2.0739970207214355
    3. 'in' → logprob: -2.0739970207214355
    4. '=' → logprob: -3.4489970207214355
    5. 'import' → logprob: -3.6989970207214355
    6. '[' → logprob: -3.8239970207214355
    7. 'with' → logprob: -3.9489970207214355
    8. ' that' → logprob: -4.1989970207214355
    9. ' with' → logprob: -4.5739970207214355
    10. ')' → logprob: -4.8239970207214355

Token 558: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.42664268612861633
    2. 'the' → logprob: -2.051642656326294
    3. 'assigned' → logprob: -2.676642656326294
    4. 'small' → logprob: -3.551642656326294
    5. '0' → logprob: -3.926642656326294
    6. ' smallest' → logprob: -4.051642894744873
    7. '?' → logprob: -4.051642894744873
    8. ''' → logprob: -4.051642894744873
    9. ' the' → logprob: -4.176642894744873
    10. 'a' → logprob: -4.676642894744873

Token 559: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.39735516905784607
    2. ')' → logprob: -2.147355079650879
    3. '_' → logprob: -2.397355079650879
    4. 'i' → logprob: -2.897355079650879
    5. 'idx' → logprob: -4.397355079650879
    6. ' index' → logprob: -5.147355079650879
    7. 'assigned' → logprob: -5.272355079650879
    8. '_index' → logprob: -5.397355079650879
    9. '<|end|>' → logprob: -5.647355079650879
    10. 'node' → logprob: -5.647355079650879

Token 560: '.

' (ID: 364)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ready' → logprob: -1.4910261631011963
    2. 'queue' → logprob: -1.8660261631011963
    3. 'import' → logprob: -2.3660261631011963
    4. 'q' → logprob: -2.4910261631011963
    5. 'assigned' → logprob: -2.6160261631011963
    6. '=' → logprob: -2.7410261631011963
    7. '#' → logprob: -2.7410261631011963
    8. 'from' → logprob: -3.1160261631011963
    9. ' =' → logprob: -3.4910261631011963
    10. 'un' → logprob: -3.6160261631011963

Token 561: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8525189161300659
    2. 'ready' → logprob: -1.352518916130066
    3. 'import' → logprob: -1.602518916130066
    4. 'queue' → logprob: -2.2275190353393555
    5. 'available' → logprob: -6.6025190353393555
    6. 'assigned' → logprob: -6.6025190353393555
    7. 'q' → logprob: -6.8525190353393555
    8. 'heap' → logprob: -7.2275190353393555
    9. '```' → logprob: -7.7275190353393555
    10. '#' → logprob: -7.9775190353393555

Token 562: ' So' (ID: 2632)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ready' → logprob: -0.8891816735267639
    2. 'queue' → logprob: -1.2641816139221191
    3. 'import' → logprob: -1.7641816139221191
    4. 'from' → logprob: -2.639181613922119
    5. 'q' → logprob: -3.889181613922119
    6. 'assigned' → logprob: -4.264181613922119
    7. 'un' → logprob: -4.639181613922119
    8. 'available' → logprob: -5.014181613922119
    9. '#' → logprob: -5.264181613922119
    10. 'heap' → logprob: -6.014181613922119

Token 563: ' maintain' (ID: 12930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12438082695007324
    2. 'ready' → logprob: -3.1243808269500732
    3. 'queue' → logprob: -3.8743808269500732
    4. 'heap' → logprob: -3.9993808269500732
    5. 'un' → logprob: -4.249381065368652
    6. 'available' → logprob: -5.499381065368652
    7. 'from' → logprob: -5.499381065368652
    8. 'pq' → logprob: -5.499381065368652
    9. 'assigned' → logprob: -5.624381065368652
    10. '#' → logprob: -6.124381065368652

Token 564: ' a' (ID: 261)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0009211080614477396
    2. 'heap' → logprob: -7.625921249389648
    3. ' import' → logprob: -9.000921249389648
    4. 'available' → logprob: -9.375921249389648
    5. 'a' → logprob: -9.625921249389648
    6. 'from' → logprob: -10.250921249389648
    7. '```' → logprob: -10.500921249389648
    8. 'pq' → logprob: -10.625921249389648
    9. 'queue' → logprob: -11.125921249389648
    10. 'q' → logprob: -11.125921249389648

Token 565: ' priority' (ID: 17621)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4742612838745117
    2. 'heap' → logprob: -0.9742612838745117
    3. 'pq' → logprob: -9.224261283874512
    4. 'min' → logprob: -10.474261283874512
    5. 'queue' → logprob: -10.599261283874512
    6. 'from' → logprob: -11.474261283874512
    7. 'hq' → logprob: -12.099261283874512
    8. 'priority' → logprob: -12.099261283874512
    9. 'visited' → logprob: -12.599261283874512
    10. ' heap' → logprob: -12.724261283874512

Token 566: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03563470020890236
    2. '_queue' → logprob: -4.035634517669678
    3. 'q' → logprob: -4.660634517669678
    4. ' queue' → logprob: -4.910634517669678
    5. '_' → logprob: -7.910634517669678
    6. 'que' → logprob: -9.910634994506836
    7. '_q' → logprob: -10.910634994506836
    8. '```' → logprob: -11.160634994506836
    9. ',' → logprob: -11.410634994506836
    10. 'heap' → logprob: -11.910634994506836

Token 567: ' of' (ID: 328)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.9594782590866089
    2. 'import' → logprob: -1.2094782590866089
    3. 'heap' → logprob: -2.0844783782958984
    4. 'ready' → logprob: -2.9594783782958984
    5. 'queue' → logprob: -2.9594783782958984
    6. '=' → logprob: -3.7094783782958984
    7. 'q' → logprob: -3.9594783782958984
    8. ' =' → logprob: -4.459478378295898
    9. '```' → logprob: -4.584478378295898
    10. 'un' → logprob: -5.084478378295898

Token 568: ' such' (ID: 2238)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5915141701698303
    2. 'un' → logprob: -1.2165141105651855
    3. 'indices' → logprob: -2.5915141105651855
    4. 'c' → logprob: -3.8415141105651855
    5. ' nodes' → logprob: -4.3415141105651855
    6. '(nodes' → logprob: -4.7165141105651855
    7. 'i' → logprob: -4.9665141105651855
    8. 'candidate' → logprob: -5.3415141105651855
    9. '(i' → logprob: -5.4665141105651855
    10. '?' → logprob: -5.9665141105651855

Token 569: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.0197988748550415
    2. '_nodes' → logprob: -1.2697988748550415
    3. ' nodes' → logprob: -1.6447988748550415
    4. '_' → logprob: -2.769798755645752
    5. ')' → logprob: -3.519798755645752
    6. '[' → logprob: -4.644798755645752
    7. '?' → logprob: -4.644798755645752
    8. 'assigned' → logprob: -5.019798755645752
    9. 'ready' → logprob: -5.394798755645752
    10. 'un' → logprob: -5.394798755645752

Token 570: '.

' (ID: 364)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ready' → logprob: -0.08286255598068237
    2. 'queue' → logprob: -3.582862615585327
    3. 'assigned' → logprob: -4.332862377166748
    4. 'import' → logprob: -4.582862377166748
    5. 'available' → logprob: -4.707862377166748
    6. '#' → logprob: -5.082862377166748
    7. 'q' → logprob: -6.082862377166748
    8. 'for' → logprob: -6.082862377166748
    9. 'pq' → logprob: -6.082862377166748
    10. 'assign' → logprob: -6.457862377166748

Token 571: '#' (ID: 2)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ready' → logprob: -0.2710517346858978
    2. 'assigned' → logprob: -2.6460516452789307
    3. '#' → logprob: -3.0210516452789307
    4. 'available' → logprob: -3.2710516452789307
    5. 'queue' → logprob: -3.6460516452789307
    6. 'for' → logprob: -4.02105188369751
    7. 'visited' → logprob: -4.39605188369751
    8. 'import' → logprob: -4.89605188369751
    9. 'un' → logprob: -5.52105188369751
    10. 'def' → logprob: -5.89605188369751

Token 572: ' Initially' (ID: 96924)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ready' → logprob: -0.1889379322528839
    2. 'import' → logprob: -2.8139379024505615
    3. 'queue' → logprob: -3.1889379024505615
    4. 'pq' → logprob: -3.1889379024505615
    5. 'available' → logprob: -4.438938140869141
    6. 'q' → logprob: -5.313938140869141
    7. 'assign' → logprob: -5.438938140869141
    8. 'from' → logprob: -5.938938140869141
    9. 'heap' → logprob: -6.063938140869141
    10. 'assigned' → logprob: -6.563938140869141

Token 573: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7927486896514893
    2. 'pq' → logprob: -1.5427486896514893
    3. 'import' → logprob: -2.2927486896514893
    4. 'q' → logprob: -2.2927486896514893
    5. ' =' → logprob: -3.4177486896514893
    6. ',' → logprob: -4.04274845123291
    7. 'heap' → logprob: -4.04274845123291
    8. 'queue' → logprob: -4.29274845123291
    9. 'nodes' → logprob: -4.54274845123291
    10. '=' → logprob: -5.04274845123291

Token 574: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13877594470977783
    2. 'pq' → logprob: -2.6387758255004883
    3. 'import' → logprob: -3.2637758255004883
    4. 'heap' → logprob: -4.513775825500488
    5. 'q' → logprob: -5.513775825500488
    6. 'queue' → logprob: -6.138775825500488
    7. 'available' → logprob: -7.013775825500488
    8. 'ready' → logprob: -7.138775825500488
    9. 'from' → logprob: -7.888775825500488
    10. ' pq' → logprob: -9.138775825500488

Token 575: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.26569855213165283
    2. '_with' → logprob: -1.5156985521316528
    3. ' with' → logprob: -5.390698432922363
    4. '?' → logprob: -5.890698432922363
    5. ' =' → logprob: -5.890698432922363
    6. '=' → logprob: -7.015698432922363
    7. 'for' → logprob: -7.265698432922363
    8. '_for' → logprob: -7.515698432922363
    9. '_' → logprob: -8.140698432922363
    10. '_question' → logprob: -8.140698432922363

Token 576: ' '?'' (ID: 192100)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.21013900637626648
    2. 'assigned' → logprob: -2.585139036178589
    3. ''?' → logprob: -2.960139036178589
    4. '?q' → logprob: -4.33513879776001
    5. ''' → logprob: -4.46013879776001
    6. 'None' → logprob: -4.96013879776001
    7. 'i' → logprob: -5.08513879776001
    8. 'a' → logprob: -5.08513879776001
    9. '?a' → logprob: -5.96013879776001
    10. '`' → logprob: -6.46013879776001

Token 577: ' are' (ID: 553)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.1994094848632812
    2. '=' → logprob: -1.6994094848632812
    3. 'for' → logprob: -1.6994094848632812
    4. ' =' → logprob: -2.9494094848632812
    5. '_ready' → logprob: -2.9494094848632812
    6. 'ready' → logprob: -3.5744094848632812
    7. '_with' → logprob: -3.9494094848632812
    8. '_to' → logprob: -3.9494094848632812
    9. 'import' → logprob: -4.199409484863281
    10. '=[]' → logprob: -4.199409484863281

Token 578: ' all' (ID: 722)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4939613342285156
    2. 'in' → logprob: -2.1189613342285156
    3. 'added' → logprob: -2.2439613342285156
    4. 'for' → logprob: -2.8689613342285156
    5. 'import' → logprob: -3.6189613342285156
    6. '[i' → logprob: -4.118961334228516
    7. 'heap' → logprob: -4.493961334228516
    8. 'assigned' → logprob: -4.993961334228516
    9. 'put' → logprob: -5.118961334228516
    10. 'p' → logprob: -5.243961334228516

Token 579: ' candidates' (ID: 18116)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.713705837726593
    2. 'added' → logprob: -1.3387057781219482
    3. 'put' → logprob: -1.5887057781219482
    4. 'in' → logprob: -3.5887057781219482
    5. ' pushed' → logprob: -5.838706016540527
    6. ' added' → logprob: -5.963706016540527
    7. 'he' → logprob: -6.088706016540527
    8. 'ready' → logprob: -6.338706016540527
    9. 'insert' → logprob: -6.588706016540527
    10. 'queued' → logprob: -6.963706016540527

Token 580: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8196648359298706
    2. 'pq' → logprob: -1.5696648359298706
    3. 'heap' → logprob: -1.6946648359298706
    4. 'import' → logprob: -2.81966495513916
    5. '?' → logprob: -3.56966495513916
    6. 'q' → logprob: -3.94466495513916
    7. '```' → logprob: -4.56966495513916
    8. '#' → logprob: -4.81966495513916
    9. 'queue' → logprob: -4.94466495513916
    10. 'assigned' → logprob: -5.31966495513916

Token 581: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.42328527569770813
    2. 'push' → logprob: -1.6732852458953857
    3. 'be' → logprob: -2.6732852458953857
    4. 'put' → logprob: -2.7982852458953857
    5. 'add' → logprob: -4.798285484313965
    6. 'import' → logprob: -4.923285484313965
    7. 'heap' → logprob: -5.173285484313965
    8. 'process' → logprob: -5.423285484313965
    9. 'enqueue' → logprob: -7.673285484313965
    10. 'insert' → logprob: -8.048285484313965

Token 582: '.

' (ID: 364)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.667752742767334
    2. 'for' → logprob: -1.792752742767334
    3. 'import' → logprob: -1.917752742767334
    4. 'heap' → logprob: -2.417752742767334
    5. 'queue' → logprob: -3.542752742767334
    6. 'q' → logprob: -3.917752742767334
    7. 'ready' → logprob: -4.167752742767334
    8. 'available' → logprob: -5.042752742767334
    9. 'candidate' → logprob: -5.292752742767334
    10. 'assigned' → logprob: -6.292752742767334

Token 583: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6519805192947388
    2. 'pq' → logprob: -1.4019805192947388
    3. 'import' → logprob: -2.026980400085449
    4. 'heap' → logprob: -3.526980400085449
    5. 'queue' → logprob: -3.776980400085449
    6. 'ready' → logprob: -4.276980400085449
    7. 'q' → logprob: -4.651980400085449
    8. 'available' → logprob: -4.651980400085449
    9. 'candidate' → logprob: -5.526980400085449
    10. 'assigned' → logprob: -5.526980400085449

Token 584: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2833598852157593
    2. 'pq' → logprob: -2.533360004425049
    3. 'import' → logprob: -2.783360004425049
    4. 'heap' → logprob: -3.783360004425049
    5. 'available' → logprob: -4.158360004425049
    6. '#' → logprob: -4.283360004425049
    7. 'ready' → logprob: -4.408360004425049
    8. 'queue' → logprob: -4.408360004425049
    9. 'candidate' → logprob: -4.658360004425049
    10. 'assigned' → logprob: -5.033360004425049

Token 585: ' assigning' (ID: 123177)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47472161054611206
    2. ''' → logprob: -2.349721670150757
    3. '#' → logprob: -2.599721670150757
    4. ' not' → logprob: -2.724721670150757
    5. 'not' → logprob: -3.724721670150757
    6. ' ' → logprob: -3.974721670150757
    7. ')' → logprob: -4.474721431732178
    8. '.' → logprob: -4.599721431732178
    9. 'for' → logprob: -4.724721431732178
    10. ',' → logprob: -4.849721431732178

Token 586: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5475735664367676
    2. ')' → logprob: -1.4225735664367676
    3. '(' → logprob: -1.9225735664367676
    4. ''' → logprob: -4.797573566436768
    5. ',' → logprob: -5.547573566436768
    6. '_nodes' → logprob: -5.547573566436768
    7. '[' → logprob: -6.047573566436768
    8. 'a' → logprob: -6.297573566436768
    9. ']' → logprob: -6.547573566436768
    10. '_letters' → logprob: -6.672573566436768

Token 587: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3520558178424835
    2. ''' → logprob: -2.227055788040161
    3. '[' → logprob: -2.227055788040161
    4. 'space' → logprob: -3.602055788040161
    5. ')' → logprob: -3.977055788040161
    6. ' ' → logprob: -4.97705602645874
    7. '[node' → logprob: -5.22705602645874
    8. '.' → logprob: -5.47705602645874
    9. '?' → logprob: -5.47705602645874
    10. '=' → logprob: -6.47705602645874

Token 588: ' before' (ID: 2254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1013188585639
    2. ' to' → logprob: -3.351318836212158
    3. '_to' → logprob: -3.851318836212158
    4. '=' → logprob: -4.851318836212158
    5. 'to' → logprob: -5.226318836212158
    6. ',' → logprob: -5.351318836212158
    7. ''' → logprob: -5.601318836212158
    8. ' ' → logprob: -5.976318836212158
    9. ' _' → logprob: -5.976318836212158
    10. ' for' → logprob: -6.351318836212158

Token 589: ' their' (ID: 1043)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8829611539840698
    2. 'kn' → logprob: -2.2579612731933594
    3. 'checking' → logprob: -2.6329612731933594
    4. 'we' → logprob: -2.7579612731933594
    5. 'neighbors' → logprob: -2.7579612731933594
    6. 'confirm' → logprob: -3.2579612731933594
    7. 'the' → logprob: -3.3829612731933594
    8. 'a' → logprob: -3.3829612731933594
    9. 'adding' → logprob: -3.5079612731933594
    10. 'processing' → logprob: -3.8829612731933594

Token 590: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.23992687463760376
    2. 'for' → logprob: -1.864926815032959
    3. ' neighbors' → logprob: -3.239926815032959
    4. ' for' → logprob: -4.614926815032959
    5. ' forbidden' → logprob: -5.364926815032959
    6. 'neighbor' → logprob: -6.239926815032959
    7. 'assigned' → logprob: -7.614926815032959
    8. 'all' → logprob: -7.864926815032959
    9. 'degree' → logprob: -8.114927291870117
    10. 'adj' → logprob: -8.239927291870117

Token 591: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.45708167552948
    2. ''' → logprob: -1.70708167552948
    3. '_' → logprob: -2.2070817947387695
    4. ' is' → logprob: -2.3320817947387695
    5. '.' → logprob: -2.7070817947387695
    6. ' are' → logprob: -2.9570817947387695
    7. ' ' → logprob: -3.0820817947387695
    8. '=' → logprob: -3.4570817947387695
    9. ''s' → logprob: -3.4570817947387695
    10. ',' → logprob: -3.7070817947387695

Token 592: ' letters' (ID: 18151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5263166427612305
    2. 'assigned' → logprob: -1.7763166427612305
    3. 'letters' → logprob: -1.9013166427612305
    4. ' letters' → logprob: -3.6513166427612305
    5. ' for' → logprob: -3.7763166427612305
    6. ' assigned' → logprob: -4.0263166427612305
    7. ' forbidden' → logprob: -5.0263166427612305
    8. ' are' → logprob: -6.0263166427612305
    9. 'are' → logprob: -6.0263166427612305
    10. 'used' → logprob: -6.5263166427612305

Token 593: ' assigned' (ID: 21482)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5935947895050049
    2. '_' → logprob: -1.5935947895050049
    3. ' ' → logprob: -1.9685947895050049
    4. ' is' → logprob: -2.218594789505005
    5. ')' → logprob: -2.593594789505005
    6. ',' → logprob: -2.718594789505005
    7. ' are' → logprob: -3.093594789505005
    8. ' can' → logprob: -3.093594789505005
    9. '.' → logprob: -3.343594789505005
    10. '=' → logprob: -4.593594551086426

Token 594: ' may' (ID: 1340)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22864967584609985
    2. ')' → logprob: -2.978649616241455
    3. '_to' → logprob: -3.103649616241455
    4. ''' → logprob: -3.603649616241455
    5. '=' → logprob: -4.728649616241455
    6. ' is' → logprob: -4.728649616241455
    7. ']' → logprob: -4.853649616241455
    8. '#' → logprob: -5.353649616241455
    9. '.' → logprob: -5.353649616241455
    10. '[' → logprob: -5.728649616241455

Token 595: ' block' (ID: 4355)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.642266571521759
    2. ' be' → logprob: -1.6422665119171143
    3. ' not' → logprob: -2.1422665119171143
    4. 'continue' → logprob: -3.3922665119171143
    5. '
' → logprob: -4.017266750335693
    6. '_' → logprob: -4.267266750335693
    7. ' is' → logprob: -4.392266750335693
    8. ' have' → logprob: -4.642266750335693
    9. '\n' → logprob: -4.767266750335693
    10. ' 
' → logprob: -4.767266750335693

Token 596: ' some' (ID: 1236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.504156231880188
    2. '_' → logprob: -1.754156231880188
    3. '=' → logprob: -2.8791561126708984
    4. ''' → logprob: -3.3791561126708984
    5. ' ' → logprob: -3.6291561126708984
    6. ' =' → logprob: -4.129156112670898
    7. '?' → logprob: -4.254156112670898
    8. 'for' → logprob: -4.629156112670898
    9. ']' → logprob: -4.754156112670898
    10. ' for' → logprob: -5.129156112670898

Token 597: ' choices' (ID: 14494)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.47759300470352173
    2. ')' → logprob: -3.102592945098877
    3. '.' → logprob: -3.102592945098877
    4. '_' → logprob: -3.227592945098877
    5. 'import' → logprob: -3.477592945098877
    6. '#' → logprob: -3.852592945098877
    7. 'for' → logprob: -3.852592945098877
    8. ' nodes' → logprob: -3.852592945098877
    9. '_nodes' → logprob: -4.102592945098877
    10. 'nodes' → logprob: -4.227592945098877

Token 598: '?

' (ID: 1715)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3755886554718018
    2. 'assigned' → logprob: -2.0005886554718018
    3. 'queue' → logprob: -2.0005886554718018
    4. '#' → logprob: -2.1255886554718018
    5. 'def' → logprob: -2.7505886554718018
    6. 'from' → logprob: -2.8755886554718018
    7. 'import' → logprob: -3.0005886554718018
    8. 'available' → logprob: -3.2505886554718018
    9. 'ready' → logprob: -3.5005886554718018
    10. 'un' → logprob: -3.6255886554718018

Token 599: '#' (ID: 2)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.4494077265262604
    2. 'import' → logprob: -2.1994078159332275
    3. 'heap' → logprob: -2.8244078159332275
    4. 'queue' → logprob: -2.9494078159332275
    5. 'available' → logprob: -3.4494078159332275
    6. '#' → logprob: -3.6994078159332275
    7. 'for' → logprob: -3.9494078159332275
    8. 'q' → logprob: -4.074407577514648
    9. 'assigned' → logprob: -4.574407577514648
    10. 'candidate' → logprob: -4.824407577514648

Token 600: ' Actually' (ID: 50557)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.011672854423523
    2. 'pq' → logprob: -1.761672854423523
    3. '#' → logprob: -2.2616729736328125
    4. 'ready' → logprob: -2.8866729736328125
    5. 'queue' → logprob: -2.8866729736328125
    6. 'heap' → logprob: -2.8866729736328125
    7. 'assigned' → logprob: -3.1366729736328125
    8. 'available' → logprob: -3.1366729736328125
    9. 'for' → logprob: -3.3866729736328125
    10. 'q' → logprob: -4.0116729736328125

Token 601: ' this' (ID: 495)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6097928881645203
    2. '#' → logprob: -1.484792947769165
    3. ',' → logprob: -2.984792947769165
    4. 'for' → logprob: -3.484792947769165
    5. 'import' → logprob: -3.734792947769165
    6. ':
' → logprob: -3.734792947769165
    7. '.' → logprob: -3.859792947769165
    8. ' 
' → logprob: -4.359792709350586
    9. ' ' → logprob: -4.734792709350586
    10. '=' → logprob: -4.859792709350586

Token 602: ' problem' (ID: 4792)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18162265419960022
    2. '.' → logprob: -3.5566227436065674
    3. ':' → logprob: -3.5566227436065674
    4. '_' → logprob: -3.5566227436065674
    5. '#' → logprob: -3.6816227436065674
    6. 'is' → logprob: -4.181622505187988
    7. ' can' → logprob: -5.306622505187988
    8. ')' → logprob: -5.556622505187988
    9. '=' → logprob: -5.681622505187988
    10. ' may' → logprob: -5.806622505187988

Token 603: ' is' (ID: 382)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.218934178352356
    2. ' is' → logprob: -1.718934178352356
    3. '.' → logprob: -2.0939340591430664
    4. ':' → logprob: -2.5939340591430664
    5. ' ' → logprob: -2.5939340591430664
    6. '<|end|>' → logprob: -3.0939340591430664
    7. '=' → logprob: -3.7189340591430664
    8. '<|end|>' → logprob: -3.7189340591430664
    9. ',' → logprob: -3.8439340591430664
    10. ''' → logprob: -3.9689340591430664

Token 604: ' a' (ID: 261)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8264385461807251
    2. ' incomplete' → logprob: -1.951438546180725
    3. 'in' → logprob: -2.3264384269714355
    4. ' not' → logprob: -3.0764384269714355
    5. '#' → logprob: -3.0764384269714355
    6. 'too' → logprob: -3.9514384269714355
    7. ' tricky' → logprob: -4.2014384269714355
    8. 'a' → logprob: -4.2014384269714355
    9. ' straightforward' → logprob: -4.3264384269714355
    10. 'finished' → logprob: -4.4514384269714355

Token 605: ' typical' (ID: 19271)
  Prédit: ' greedy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' greedy' → logprob: -1.4258031845092773
    2. '#' → logprob: -1.9258031845092773
    3. 'gre' → logprob: -2.0508031845092773
    4. 'b' → logprob: -2.0508031845092773
    5. 'graph' → logprob: -2.5508031845092773
    6. 'common' → logprob: -3.4258031845092773
    7. '*' → logprob: -3.5508031845092773
    8. ' graph' → logprob: -3.5508031845092773
    9. ' common' → logprob: -4.050803184509277
    10. ' well' → logprob: -4.175803184509277

Token 606: ' greedy' (ID: 107110)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6304588913917542
    2. 'graph' → logprob: -1.1304588317871094
    3. ' graph' → logprob: -2.5054588317871094
    4. 'back' → logprob: -3.3804588317871094
    5. ' coloring' → logprob: -4.380458831787109
    6. 'constraint' → logprob: -5.130458831787109
    7. ' back' → logprob: -5.880458831787109
    8. 'gre' → logprob: -6.255458831787109
    9. ' greedy' → logprob: -6.255458831787109
    10. ' color' → logprob: -7.380458831787109

Token 607: ' coloring' (ID: 50205)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1535335779190063
    2. '_' → logprob: -1.6535335779190063
    3. '=' → logprob: -3.153533458709717
    4. ')' → logprob: -3.153533458709717
    5. 'q' → logprob: -3.278533458709717
    6. ' =' → logprob: -3.278533458709717
    7. ':' → logprob: -3.403533458709717
    8. '[' → logprob: -3.528533458709717
    9. '.' → logprob: -3.528533458709717
    10. ' ' → logprob: -3.778533458709717

Token 608: ' problem' (ID: 4792)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -1.390845775604248
    2. 'for' → logprob: -1.640845775604248
    3. 'assigned' → logprob: -1.640845775604248
    4. '#' → logprob: -2.390845775604248
    5. 'available' → logprob: -3.265845775604248
    6. 'queue' → logprob: -3.390845775604248
    7. '=' → logprob: -3.640845775604248
    8. 'def' → logprob: -3.640845775604248
    9. 'ready' → logprob: -3.765845775604248
    10. 'q' → logprob: -3.890845775604248

Token 609: ',
' (ID: 412)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.9118603467941284
    2. 'for' → logprob: -2.036860466003418
    3. '#' → logprob: -2.286860466003418
    4. 'queue' → logprob: -2.411860466003418
    5. 'available' → logprob: -2.786860466003418
    6. '?' → logprob: -3.036860466003418
    7. 'visited' → logprob: -3.661860466003418
    8. 'ready' → logprob: -3.786860466003418
    9. 'q' → logprob: -3.786860466003418
    10. 'un' → logprob: -3.911860466003418

Token 610: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3068796694278717
    2. ':' → logprob: -2.431879758834839
    3. ')' → logprob: -3.431879758834839
    4. '.' → logprob: -3.556879758834839
    5. 'for' → logprob: -3.806879758834839
    6. ' ' → logprob: -4.05687952041626
    7. ',' → logprob: -4.18187952041626
    8. ' 
' → logprob: -4.80687952041626
    9. '
' → logprob: -5.43187952041626
    10. ' #' → logprob: -5.68187952041626

Token 611: ' similar' (ID: 6771)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34641367197036743
    2. '#' → logprob: -2.2214136123657227
    3. 'import' → logprob: -2.9714136123657227
    4. 'visited' → logprob: -3.8464136123657227
    5. 'heap' → logprob: -4.096413612365723
    6. 'def' → logprob: -4.221413612365723
    7. 'assigned' → logprob: -4.346413612365723
    8. 'while' → logprob: -4.471413612365723
    9. 'from' → logprob: -4.596413612365723
    10. 'color' → logprob: -4.971413612365723

Token 612: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6958426237106323
    2. 'to' → logprob: -0.6958426237106323
    3. '(' → logprob: -7.195842742919922
    4. '_to' → logprob: -7.570842742919922
    5. '('' → logprob: -8.070842742919922
    6. '#' → logprob: -8.320842742919922
    7. 'import' → logprob: -8.320842742919922
    8. '.' → logprob: -9.070842742919922
    9. '=' → logprob: -9.320842742919922
    10. '_' → logprob: -9.445842742919922

Token 613: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03247496858239174
    2. 'gre' → logprob: -4.282474994659424
    3. 'the' → logprob: -5.407474994659424
    4. 'vertex' → logprob: -5.407474994659424
    5. 'assign' → logprob: -5.782474994659424
    6. 'a' → logprob: -5.907474994659424
    7. 'color' → logprob: -6.282474994659424
    8. ' graph' → logprob: -8.282474517822266
    9. 'Gre' → logprob: -8.907474517822266
    10. 'Graph' → logprob: -8.907474517822266

Token 614: ' coloring' (ID: 50205)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.3884115219116211
    2. 'color' → logprob: -1.638411521911621
    3. '_col' → logprob: -2.388411521911621
    4. ' =' → logprob: -4.388411521911621
    5. '_' → logprob: -4.888411521911621
    6. '=' → logprob: -5.888411521911621
    7. '_colors' → logprob: -6.013411521911621
    8. '-color' → logprob: -6.138411521911621
    9. ' coloring' → logprob: -6.138411521911621
    10. '[' → logprob: -6.138411521911621

Token 615: ' with' (ID: 483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5334057807922363
    2. 'for' → logprob: -1.6584057807922363
    3. 'assigned' → logprob: -1.7834057807922363
    4. '?' → logprob: -2.5334057807922363
    5. 'available' → logprob: -2.9084057807922363
    6. '=' → logprob: -3.1584057807922363
    7. 'import' → logprob: -3.2834057807922363
    8. 'def' → logprob: -3.2834057807922363
    9. 'q' → logprob: -3.5334057807922363
    10. 'queue' → logprob: -4.033405780792236

Token 616: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0684979110956192
    2. ' ' → logprob: -3.443497896194458
    3. 'colors' → logprob: -4.943498134613037
    4. 'constraints' → logprob: -4.943498134613037
    5. 'a' → logprob: -5.318498134613037
    6. ' constraints' → logprob: -5.693498134613037
    7. 'k' → logprob: -6.193498134613037
    8. 'out' → logprob: -6.318498134613037
    9. 'at' → logprob: -6.943498134613037
    10. 'the' → logprob: -7.193498134613037

Token 617: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.019845126196742058
    2. 'colors' → logprob: -5.769845008850098
    3. 'k' → logprob: -5.894845008850098
    4. 'heap' → logprob: -6.144845008850098
    5. 'a' → logprob: -6.269845008850098
    6. ' ' → logprob: -6.519845008850098
    7. 'at' → logprob: -6.519845008850098
    8. 'constraints' → logprob: -6.644845008850098
    9. 'priority' → logprob: -7.269845008850098
    10. '#' → logprob: -7.644845008850098

Token 618: ' colors' (ID: 10803)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41978907585144043
    2. '):' → logprob: -2.0447890758514404
    3. 'letters' → logprob: -2.7947890758514404
    4. ':' → logprob: -2.7947890758514404
    5. ']' → logprob: -3.9197890758514404
    6. ' letters' → logprob: -4.4197893142700195
    7. 'colors' → logprob: -4.7947893142700195
    8. '_letters' → logprob: -4.7947893142700195
    9. '.' → logprob: -5.2947893142700195
    10. '#' → logprob: -5.4197893142700195

Token 619: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4269310534000397
    2. 'for' → logprob: -2.551931142807007
    3. 'from' → logprob: -2.676931142807007
    4. 'heap' → logprob: -2.926931142807007
    5. 'queue' → logprob: -3.176931142807007
    6. 'def' → logprob: -3.801931142807007
    7. 'pq' → logprob: -3.801931142807007
    8. '#' → logprob: -4.301930904388428
    9. 'ready' → logprob: -4.426930904388428
    10. 'available' → logprob: -4.551930904388428

Token 620: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.151373267173767
    2. 'heap' → logprob: -2.0263733863830566
    3. ')' → logprob: -2.4013733863830566
    4. '?' → logprob: -2.5263733863830566
    5. 'import' → logprob: -2.6513733863830566
    6. '#' → logprob: -2.7763733863830566
    7. 'while' → logprob: -3.5263733863830566
    8. 'q' → logprob: -3.7763733863830566
    9. 'visited' → logprob: -3.9013733863830566
    10. 'pq' → logprob: -3.9013733863830566

Token 621: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6952041387557983
    2. 'no' → logprob: -1.9452041387557983
    3. 'letters' → logprob: -2.570204257965088
    4. 'each' → logprob: -2.820204257965088
    5. 'a' → logprob: -3.070204257965088
    6. 'constraints' → logprob: -3.570204257965088
    7. '#' → logprob: -3.695204257965088
    8. 'some' → logprob: -3.820204257965088
    9. 'all' → logprob: -4.320204257965088
    10. 'constraint' → logprob: -4.570204257965088

Token 622: ' twist' (ID: 38337)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraint' → logprob: -0.13951468467712402
    2. 'restriction' → logprob: -2.764514684677124
    3. 'rest' → logprob: -4.139514923095703
    4. 'next' → logprob: -4.889514923095703
    5. '#' → logprob: -5.014514923095703
    6. 'following' → logprob: -5.139514923095703
    7. ' constraint' → logprob: -5.139514923095703
    8. 'remaining' → logprob: -5.514514923095703
    9. 'same' → logprob: -5.639514923095703
    10. 'only' → logprob: -6.139514923095703

Token 623: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7437781095504761
    2. ':' → logprob: -1.243778109550476
    3. ''' → logprob: -2.4937782287597656
    4. '#' → logprob: -3.6187782287597656
    5. ' =' → logprob: -3.6187782287597656
    6. 'import' → logprob: -4.243778228759766
    7. ',' → logprob: -4.368778228759766
    8. ' ' → logprob: -4.493778228759766
    9. '.' → logprob: -4.618778228759766
    10. ' of' → logprob: -4.993778228759766

Token 624: ' some' (ID: 1236)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.347797155380249
    2. '#' → logprob: -1.597797155380249
    3. 'the' → logprob: -2.097797155380249
    4. 'each' → logprob: -2.097797155380249
    5. 'we' → logprob: -2.222797155380249
    6. ' we' → logprob: -3.347797155380249
    7. 'all' → logprob: -4.097797393798828
    8. ' neighbors' → logprob: -4.097797393798828
    9. 'nodes' → logprob: -4.347797393798828
    10. 'you' → logprob: -4.347797393798828

Token 625: ' nodes' (ID: 15749)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.491364598274231
    2. ' nodes' → logprob: -1.866364598274231
    3. ')' → logprob: -1.991364598274231
    4. 'nodes' → logprob: -2.1163644790649414
    5. 'neighbors' → logprob: -2.8663644790649414
    6. 'letters' → logprob: -2.9913644790649414
    7. ' are' → logprob: -3.6163644790649414
    8. ' letters' → logprob: -3.6163644790649414
    9. '?' → logprob: -3.7413644790649414
    10. 'node' → logprob: -3.7413644790649414

Token 626: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3104496896266937
    2. '=' → logprob: -2.9354496002197266
    3. ' have' → logprob: -3.0604496002197266
    4. ')' → logprob: -3.4354496002197266
    5. '#' → logprob: -3.8104496002197266
    6. ',' → logprob: -4.060449600219727
    7. ' can' → logprob: -4.310449600219727
    8. ''' → logprob: -4.560449600219727
    9. ']' → logprob: -4.685449600219727
    10. 'are' → logprob: -4.935449600219727

Token 627: ' pre' (ID: 876)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.8371369242668152
    2. '?' → logprob: -0.9621369242668152
    3. 'assigned' → logprob: -1.96213698387146
    4. ''' → logprob: -4.837136745452881
    5. 'initial' → logprob: -5.212136745452881
    6. ' already' → logprob: -5.212136745452881
    7. ''?' → logprob: -5.337136745452881
    8. ' assigned' → logprob: -5.962136745452881
    9. '#' → logprob: -5.962136745452881
    10. '```' → logprob: -6.087136745452881

Token 628: '-colored' (ID: 89525)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.017443090677261353
    2. '```' → logprob: -5.1424431800842285
    3. 's' → logprob: -5.5174431800842285
    4. 'served' → logprob: -6.8924431800842285
    5. ' assigned' → logprob: -7.1424431800842285
    6. 'd' → logprob: -7.1424431800842285
    7. 'v' → logprob: -7.8924431800842285
    8. '-' → logprob: -7.8924431800842285
    9. 'viously' → logprob: -7.8924431800842285
    10. '_' → logprob: -8.01744270324707

Token 629: '.

' (ID: 364)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0837864875793457
    2. 'ready' → logprob: -1.7087864875793457
    3. '#' → logprob: -2.2087864875793457
    4. 'import' → logprob: -2.3337864875793457
    5. 'available' → logprob: -2.8337864875793457
    6. 'from' → logprob: -3.0837864875793457
    7. 'assigned' → logprob: -3.4587864875793457
    8. 'heap' → logprob: -3.9587864875793457
    9. 'q' → logprob: -4.208786487579346
    10. '?' → logprob: -4.333786487579346

Token 630: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8960531949996948
    2. 'from' → logprob: -2.2710533142089844
    3. 'pq' → logprob: -2.2710533142089844
    4. 'ready' → logprob: -2.3960533142089844
    5. 'available' → logprob: -2.6460533142089844
    6. 'import' → logprob: -2.6460533142089844
    7. 'candidate' → logprob: -3.6460533142089844
    8. 'q' → logprob: -4.021053314208984
    9. 'assigned' → logprob: -4.021053314208984
    10. '#' → logprob: -4.146053314208984

Token 631: ' The' (ID: 623)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4646741449832916
    2. 'for' → logprob: -2.589674234390259
    3. 'from' → logprob: -2.839674234390259
    4. 'heap' → logprob: -2.839674234390259
    5. 'pq' → logprob: -2.964674234390259
    6. 'queue' → logprob: -3.214674234390259
    7. 'ready' → logprob: -3.839674234390259
    8. 'available' → logprob: -3.964674234390259
    9. 'def' → logprob: -4.08967399597168
    10. 'assigned' → logprob: -4.71467399597168

Token 632: ' greedy' (ID: 107110)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.573591709136963
    2. ' ' → logprob: -1.698591709136963
    3. 'space' → logprob: -2.323591709136963
    4. ' next' → logprob: -3.073591709136963
    5. '[' → logprob: -3.448591709136963
    6. '`' → logprob: -3.573591709136963
    7. '#' → logprob: -3.698591709136963
    8. ')' → logprob: -3.823591709136963
    9. '=' → logprob: -3.823591709136963
    10. 'color' → logprob: -3.823591709136963

Token 633: ' approach' (ID: 7139)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11274392157793045
    2. ' _' → logprob: -3.487743854522705
    3. ')' → logprob: -3.737743854522705
    4. '_color' → logprob: -3.862743854522705
    5. ' =' → logprob: -5.112743854522705
    6. '_colors' → logprob: -5.612743854522705
    7. '=' → logprob: -6.112743854522705
    8. '[' → logprob: -6.112743854522705
    9. ' ' → logprob: -6.237743854522705
    10. 'color' → logprob: -6.612743854522705

Token 634: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.026859164237976
    2. '=' → logprob: -1.026859164237976
    3. '#' → logprob: -3.0268592834472656
    4. '[' → logprob: -3.2768592834472656
    5. '_' → logprob: -3.6518592834472656
    6. '.' → logprob: -3.6518592834472656
    7. 'def' → logprob: -3.7768592834472656
    8. 'for' → logprob: -3.7768592834472656
    9. ')' → logprob: -3.9018592834472656
    10. ' ' → logprob: -4.276859283447266

Token 635: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48987653851509094
    2. 'for' → logprob: -0.9898765087127686
    3. '#' → logprob: -5.864876747131348
    4. '[]' → logprob: -5.989876747131348
    5. 'continue' → logprob: -6.114876747131348
    6. 'completed' → logprob: -6.364876747131348
    7. '```' → logprob: -6.864876747131348
    8. ':' → logprob: -6.864876747131348
    9. 'to' → logprob: -7.489876747131348
    10. 'import' → logprob: -7.739876747131348

Token 636: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1938754916191101
    2. 'import' → logprob: -3.318875551223755
    3. 'assigned' → logprob: -3.443875551223755
    4. 'queue' → logprob: -4.068875312805176
    5. 'visited' → logprob: -4.193875312805176
    6. 'from' → logprob: -4.193875312805176
    7. 'q' → logprob: -4.193875312805176
    8. ' for' → logprob: -4.443875312805176
    9. 'def' → logprob: -4.943875312805176
    10. 'color' → logprob: -5.443875312805176

Token 637: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0148127730935812
    2. 'visited' → logprob: -5.01481294631958
    3. 'assigned' → logprob: -5.88981294631958
    4. '#' → logprob: -6.13981294631958
    5. 'available' → logprob: -6.76481294631958
    6. 'while' → logprob: -7.88981294631958
    7. 'color' → logprob: -7.88981294631958
    8. 'queue' → logprob: -8.264812469482422
    9. 'used' → logprob: -8.264812469482422
    10. 'from' → logprob: -9.139812469482422

Token 638: ' each' (ID: 2454)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.15559948980808258
    2. 'node' → logprob: -2.030599594116211
    3. 'i' → logprob: -5.280599594116211
    4. '_' → logprob: -5.780599594116211
    5. ' i' → logprob: -5.780599594116211
    6. ' _' → logprob: -7.780599594116211
    7. 'u' → logprob: -8.155599594116211
    8. ' u' → logprob: -8.155599594116211
    9. ' v' → logprob: -8.655599594116211
    10. 'v' → logprob: -9.280599594116211

Token 639: ' un' (ID: 537)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5702561140060425
    2. '?' → logprob: -1.4452561140060425
    3. 'node' → logprob: -1.9452561140060425
    4. 'i' → logprob: -4.070256233215332
    5. ' i' → logprob: -4.195256233215332
    6. ' ?' → logprob: -4.570256233215332
    7. ''' → logprob: -5.695256233215332
    8. 'v' → logprob: -6.445256233215332
    9. '_' → logprob: -6.820256233215332
    10. '`' → logprob: -6.820256233215332

Token 640: 'colored' (ID: 177046)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.05420453101396561
    2. 'n' → logprob: -3.3042044639587402
    3. 'q' → logprob: -4.92920446395874
    4. '#' → logprob: -6.05420446395874
    5. '_' → logprob: -6.67920446395874
    6. '[' → logprob: -6.80420446395874
    7. '`' → logprob: -7.42920446395874
    8. '[node' → logprob: -7.67920446395874
    9. '   ' → logprob: -8.304204940795898
    10. ' assigned' → logprob: -8.554204940795898

Token 641: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.20786751806735992
    2. ' ' → logprob: -1.8328675031661987
    3. '_' → logprob: -3.8328676223754883
    4. 'node' → logprob: -5.332867622375488
    5. ' _' → logprob: -7.707867622375488
    6. '_node' → logprob: -8.457867622375488
    7. '[node' → logprob: -9.082867622375488
    8. ')' → logprob: -9.082867622375488
    9. ',' → logprob: -9.332867622375488
    10. ' ,' → logprob: -10.082867622375488

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13030071556568146
    2. ':' → logprob: -2.880300760269165
    3. ' in' → logprob: -3.255300760269165
    4. ' ,' → logprob: -4.380300521850586
    5. 'in' → logprob: -5.130300521850586
    6. ' with' → logprob: -6.005300521850586
    7. ' :' → logprob: -6.130300521850586
    8. 'with' → logprob: -7.005300521850586
    9. '[' → logprob: -7.755300521850586
    10. ' i' → logprob: -8.130300521850586

Token 643: ' assign' (ID: 14975)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8687299489974976
    2. ' #' → logprob: -2.118730068206787
    3. 'neighbors' → logprob: -2.118730068206787
    4. 'for' → logprob: -2.243730068206787
    5. '   ' → logprob: -2.368730068206787
    6. '#' → logprob: -2.368730068206787
    7. 'while' → logprob: -2.493730068206787
    8. ' while' → logprob: -2.868730068206787
    9. ' ' → logprob: -3.493730068206787
    10. ' neighbors' → logprob: -3.993730068206787

Token 644: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.057319872081279755
    2. 'the' → logprob: -3.0573198795318604
    3. ' a' → logprob: -5.057319641113281
    4. ' its' → logprob: -7.682319641113281
    5. 'a' → logprob: -7.932319641113281
    6. ''' → logprob: -8.057319641113281
    7. ' =' → logprob: -8.682319641113281
    8. '=' → logprob: -8.932319641113281
    9. ' ' → logprob: -9.182319641113281
    10. ' next' → logprob: -9.307319641113281

Token 645: ' smallest' (ID: 42173)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7771227955818176
    2. ' next' → logprob: -1.4021227359771729
    3. '_' → logprob: -2.152122735977173
    4. ' ' → logprob: -2.277122735977173
    5. 'next' → logprob: -3.777122735977173
    6. ' smallest' → logprob: -4.402122974395752
    7. '[' → logprob: -5.402122974395752
    8. '```' → logprob: -5.777122974395752
    9. ''s' → logprob: -5.902122974395752
    10. '"' → logprob: -6.027122974395752

Token 646: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10190587490797043
    2. ' ' → logprob: -2.8519058227539062
    3. ' letter' → logprob: -3.9769058227539062
    4. ' _' → logprob: -5.601905822753906
    5. 'letter' → logprob: -5.726905822753906
    6. 'space' → logprob: -5.726905822753906
    7. ''' → logprob: -6.601905822753906
    8. ' space' → logprob: -6.851905822753906
    9. ' )' → logprob: -6.976905822753906
    10. ')' → logprob: -6.976905822753906

Token 647: ' not' (ID: 625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: ' assigned' (ID: 21482)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.8182917237281799
    2. 'used' → logprob: -1.0682916641235352
    3. ' in' → logprob: -2.193291664123535
    4. 'in' → logprob: -2.318291664123535
    5. '_used' → logprob: -5.693291664123535
    6. '_' → logprob: -7.193291664123535
    7. ' ' → logprob: -7.693291664123535
    8. 'already' → logprob: -8.818291664123535
    9. 'assigned' → logprob: -9.193291664123535
    10. ' already' → logprob: -9.568291664123535

Token 649: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8071163296699524
    2. '_' → logprob: -1.3071162700653076
    3. '_to' → logprob: -1.9321162700653076
    4. 'to' → logprob: -2.3071162700653076
    5. ' ' → logprob: -4.182116508483887
    6. ' next' → logprob: -5.432116508483887
    7. ')' → logprob: -5.557116508483887
    8. '_next' → logprob: -5.807116508483887
    9. ' _' → logprob: -6.182116508483887
    10. '.' → logprob: -6.432116508483887

Token 650: ' its' (ID: 1617)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.39090269804000854
    2. ' neighbors' → logprob: -1.3909027576446533
    3. 'neighbor' → logprob: -3.1409027576446533
    4. ' its' → logprob: -3.8909027576446533
    5. ' neighbor' → logprob: -4.890902519226074
    6. ' any' → logprob: -6.515902519226074
    7. 'its' → logprob: -7.515902519226074
    8. 'any' → logprob: -7.765902519226074
    9. ' the' → logprob: -8.140902519226074
    10. 'ne' → logprob: -8.390902519226074

Token 651: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.03938649594783783
    2. ' neighbors' → logprob: -3.289386510848999
    3. 'neighbor' → logprob: -6.66438627243042
    4. '_neighbors' → logprob: -10.289386749267578
    5. 'adj' → logprob: -10.914386749267578
    6. ' neighbor' → logprob: -11.414386749267578
    7. ' ' → logprob: -14.039386749267578
    8. ' neighbours' → logprob: -14.164386749267578
    9. ' adjacent' → logprob: -14.664386749267578
    10. ' neighboring' → logprob: -14.664386749267578

Token 652: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.363528847694397
    2. ':' → logprob: -2.8635287284851074
    3. '=' → logprob: -3.2385287284851074
    4. 'while' → logprob: -3.3635287284851074
    5. ' =' → logprob: -3.7385287284851074
    6. '[]' → logprob: -3.9885287284851074
    7. 'def' → logprob: -4.238528728485107
    8. '#' → logprob: -4.238528728485107
    9. '
' → logprob: -4.488528728485107
    10. ':
' → logprob: -4.613528728485107

Token 653: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8922412395477295
    2. '
' → logprob: -1.0172412395477295
    3. ':' → logprob: -2.5172412395477295
    4. ':
' → logprob: -3.5172412395477295
    5. '.' → logprob: -3.8922412395477295
    6. ')' → logprob: -4.017241477966309
    7. '_' → logprob: -4.642241477966309
    8. ' for' → logprob: -4.642241477966309
    9. ',' → logprob: -4.642241477966309
    10. '  
' → logprob: -5.267241477966309

Token 654: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6515170335769653
    2. 'queue' → logprob: -1.7765170335769653
    3. 'def' → logprob: -3.026516914367676
    4. 'q' → logprob: -3.151516914367676
    5. 'un' → logprob: -3.401516914367676
    6. 'assigned' → logprob: -3.401516914367676
    7. 'heap' → logprob: -3.526516914367676
    8. 'import' → logprob: -3.526516914367676
    9. 'visited' → logprob: -3.651516914367676
    10. '#' → logprob: -4.151516914367676

Token 655: ' existing' (ID: 9595)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6817467212677002
    2. 'True' → logprob: -1.5567467212677002
    3. 'len' → logprob: -2.6817467212677
    4. 'V' → logprob: -3.0567467212677
    5. ' True' → logprob: -3.4317467212677
    6. '26' → logprob: -3.5567467212677
    7. 'None' → logprob: -3.6817467212677
    8. 'all' → logprob: -4.056746482849121
    9. ''' → logprob: -4.056746482849121
    10. ' assigned' → logprob: -4.556746482849121

Token 656: ' nodes' (ID: 15749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4801817834377289
    2. 'neighbors' → logprob: -2.7301816940307617
    3. '_nodes' → logprob: -3.1051816940307617
    4. 'assigned' → logprob: -3.3551816940307617
    5. '_neighbors' → logprob: -3.6051816940307617
    6. ' nodes' → logprob: -3.7301816940307617
    7. 'letters' → logprob: -3.8551816940307617
    8. 'nodes' → logprob: -3.9801816940307617
    9. ' _' → logprob: -4.105181694030762
    10. ' neighbors' → logprob: -4.355181694030762

Token 657: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7819058895111084
    2. '_' → logprob: -1.2819058895111084
    3. ''' → logprob: -2.5319058895111084
    4. '[node' → logprob: -3.4069058895111084
    5. ']' → logprob: -3.5319058895111084
    6. '=' → logprob: -3.6569058895111084
    7. '[s' → logprob: -4.0319061279296875
    8. ',' → logprob: -4.5319061279296875
    9. ')' → logprob: -5.0319061279296875
    10. '#' → logprob: -5.0319061279296875

Token 658: ' letters' (ID: 18151)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5790049433708191
    2. '?' → logprob: -1.8290050029754639
    3. 'assigned' → logprob: -2.204005002975464
    4. 'None' → logprob: -3.079005002975464
    5. ''?' → logprob: -3.454005002975464
    6. '`' → logprob: -3.579005002975464
    7. 'a' → logprob: -3.579005002975464
    8. ''a' → logprob: -4.829004764556885
    9. '```' → logprob: -5.079004764556885
    10. '"' → logprob: -5.329004764556885

Token 659: ' are' (ID: 553)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9874351620674133
    2. ''' → logprob: -1.3624351024627686
    3. ' are' → logprob: -1.6124351024627686
    4. '=' → logprob: -3.3624351024627686
    5. 'assigned' → logprob: -4.487435340881348
    6. ' in' → logprob: -4.487435340881348
    7. ' assigned' → logprob: -4.612435340881348
    8. ']' → logprob: -4.612435340881348
    9. ' not' → logprob: -4.862435340881348
    10. '```' → logprob: -4.987435340881348

Token 660: ' fixed' (ID: 13213)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.09917526692152023
    2. 'known' → logprob: -3.599175214767456
    3. 'fixed' → logprob: -3.849175214767456
    4. 'assigned' → logprob: -3.974175214767456
    5. 'all' → logprob: -4.224175453186035
    6. 'given' → logprob: -5.099175453186035
    7. 'not' → logprob: -6.474175453186035
    8. 'neighbors' → logprob: -6.974175453186035
    9. ' already' → logprob: -7.599175453186035
    10. 'pre' → logprob: -7.724175453186035

Token 661: ',' (ID: 11)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.9164738059043884
    2. 'for' → logprob: -1.4164738655090332
    3. ',' → logprob: -2.541473865509033
    4. ':' → logprob: -2.666473865509033
    5. ')' → logprob: -3.166473865509033
    6. ']' → logprob: -3.666473865509033
    7. '
' → logprob: -4.041473865509033
    8. ' for' → logprob: -4.166473865509033
    9. '_' → logprob: -4.416473865509033
    10. '#' → logprob: -4.541473865509033

Token 662: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021082350984215736
    2. '#' → logprob: -4.771082401275635
    3. 'visited' → logprob: -6.021082401275635
    4. 'import' → logprob: -6.146082401275635
    5. 'while' → logprob: -6.396082401275635
    6. ' for' → logprob: -6.521082401275635
    7. 'assigned' → logprob: -7.396082401275635
    8. 'idx' → logprob: -7.396082401275635
    9. 'queue' → logprob: -7.521082401275635
    10. '?' → logprob: -7.521082401275635

Token 663: ' no' (ID: 860)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1325479745864868
    2. 'for' → logprob: -1.5075479745864868
    3. 'all' → logprob: -1.8825479745864868
    4. '?' → logprob: -2.1325478553771973
    5. ' for' → logprob: -3.3825478553771973
    6. ' all' → logprob: -3.6325478553771973
    7. 'assigned' → logprob: -3.8825478553771973
    8. '
' → logprob: -4.257547855377197
    9. 'None' → logprob: -4.257547855377197
    10. 'import' → logprob: -4.882547855377197

Token 664: ' node' (ID: 4596)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.4284293055534363
    2. 'node' → logprob: -1.803429365158081
    3. ' node' → logprob: -2.553429365158081
    4. ' neighbor' → logprob: -3.303429365158081
    5. 'un' → logprob: -4.053429126739502
    6. 'neighbors' → logprob: -4.303429126739502
    7. '
' → logprob: -4.428429126739502
    8. 'for' → logprob: -5.678429126739502
    9. ' for' → logprob: -6.053429126739502
    10. '#' → logprob: -6.053429126739502

Token 665: ' has' (ID: 853)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7306767702102661
    2. ' has' → logprob: -2.1056766510009766
    3. ')' → logprob: -2.4806766510009766
    4. ''' → logprob: -3.4806766510009766
    5. '_' → logprob: -3.4806766510009766
    6. ' ' → logprob: -3.4806766510009766
    7. '   ' → logprob: -3.6056766510009766
    8. 'can' → logprob: -3.6056766510009766
    9. '=' → logprob: -3.7306766510009766
    10. ''s' → logprob: -4.105676651000977

Token 666: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.026025310158729553
    2. 'more' → logprob: -3.7760252952575684
    3. 'neighbors' → logprob: -6.151025295257568
    4. 'neighbor' → logprob: -8.526025772094727
    5. ' degree' → logprob: -8.651025772094727
    6. 'a' → logprob: -9.276025772094727
    7. '>' → logprob: -9.401025772094727
    8. '```' → logprob: -10.526025772094727
    9. ' more' → logprob: -11.026025772094727
    10. '
' → logprob: -11.651025772094727

Token 667: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16004902124404907
    2. '>' → logprob: -2.6600489616394043
    3. ' >=' → logprob: -2.7850489616394043
    4. ' >' → logprob: -4.535048961639404
    5. '26' → logprob: -6.410048961639404
    6. '≥' → logprob: -6.785048961639404
    7. '=' → logprob: -7.160048961639404
    8. 'greater' → logprob: -7.910048961639404
    9. '<=' → logprob: -8.160049438476562
    10. 'import' → logprob: -8.660049438476562

Token 668: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '27' → logprob: -15.00008487701416
    4. '```' → logprob: -18.000085830688477
    5. '=' → logprob: -18.250085830688477
    6. '
' → logprob: -18.875085830688477
    7. '`' → logprob: -19.375085830688477
    8. '6' → logprob: -19.500085830688477
    9. '2' → logprob: -19.625085830688477
    10. '>' → logprob: -19.750085830688477

Token 669: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.008631349541246891
    2. ' ' → logprob: -4.758631229400635
    3. '
' → logprob: -12.383631706237793
    4. '27' → logprob: -12.508631706237793
    5. ''' → logprob: -13.008631706237793
    6. ' 
' → logprob: -13.383631706237793
    7. 'space' → logprob: -14.133631706237793
    8. '`' → logprob: -14.383631706237793
    9. '```' → logprob: -14.446131706237793
    10. '=' → logprob: -14.758631706237793

Token 670: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4274568259716034
    2. ',' → logprob: -1.3024568557739258
    3. ':
' → logprob: -3.677456855773926
    4. ')' → logprob: -3.802456855773926
    5. '.' → logprob: -4.677456855773926
    6. '):' → logprob: -5.302456855773926
    7. '#' → logprob: -5.552456855773926
    8. 'for' → logprob: -5.927456855773926
    9. ',
' → logprob: -6.052456855773926
    10. ']' → logprob: -6.552456855773926

Token 671: ' always' (ID: 3324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5363687872886658
    2. '#' → logprob: -1.0363688468933105
    3. ' for' → logprob: -2.9113688468933105
    4. '
' → logprob: -7.0363688468933105
    5. ',' → logprob: -7.1613688468933105
    6. 'the' → logprob: -7.2863688468933105
    7. ' the' → logprob: -7.4113688468933105
    8. ' #' → logprob: -7.9113688468933105
    9. ' we' → logprob: -7.9113688468933105
    10. 'def' → logprob: -8.036368370056152

Token 672: ' possible' (ID: 4149)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.2857089042663574
    2. ' has' → logprob: -1.6607089042663574
    3. 'has' → logprob: -2.0357089042663574
    4. ' have' → logprob: -2.0357089042663574
    5. 'there' → logprob: -2.6607089042663574
    6. 'available' → logprob: -3.4107089042663574
    7. 'possible' → logprob: -3.5357089042663574
    8. ' a' → logprob: -3.7857089042663574
    9. 'a' → logprob: -3.9107089042663574
    10. ' find' → logprob: -4.285708904266357

Token 673: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5807976126670837
    2. 'q' → logprob: -2.3307976722717285
    3. 'queue' → logprob: -2.4557976722717285
    4. '
' → logprob: -2.5807976722717285
    5. 'heap' → logprob: -3.5807976722717285
    6. '#' → logprob: -3.7057976722717285
    7. 'import' → logprob: -3.8307976722717285
    8. 'assigned' → logprob: -3.8307976722717285
    9. 'available' → logprob: -3.9557976722717285
    10. 'def' → logprob: -4.4557976722717285

Token 674: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.41797488927841187
    2. 'from' → logprob: -1.7929749488830566
    3. 'import' → logprob: -3.0429749488830566
    4. 'pq' → logprob: -3.7929749488830566
    5. 'for' → logprob: -3.9179749488830566
    6. 'un' → logprob: -4.167974948883057
    7. 'assigned' → logprob: -4.167974948883057
    8. 'heap' → logprob: -4.292974948883057
    9. 'q' → logprob: -4.417974948883057
    10. '#' → logprob: -5.167974948883057

Token 675: ' Implement' (ID: 32889)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1268929243087769
    2. 'import' → logprob: -1.6268929243087769
    3. 'from' → logprob: -2.3768930435180664
    4. 'pq' → logprob: -2.5018930435180664
    5. 'for' → logprob: -3.0018930435180664
    6. 'def' → logprob: -3.1268930435180664
    7. 'available' → logprob: -3.2518930435180664
    8. 'heap' → logprob: -3.2518930435180664
    9. 'ready' → logprob: -3.2518930435180664
    10. 'q' → logprob: -3.5018930435180664

Token 676: ' greedy' (ID: 107110)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4657074511051178
    2. 'assigned' → logprob: -1.5907074213027954
    3. 'queue' → logprob: -2.715707540512085
    4. 'def' → logprob: -3.465707540512085
    5. 'q' → logprob: -3.590707540512085
    6. 'visited' → logprob: -4.090707302093506
    7. 'from' → logprob: -4.840707302093506
    8. 'import' → logprob: -5.590707302093506
    9. 'used' → logprob: -5.715707302093506
    10. '#' → logprob: -5.965707302093506

Token 677: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034216397907584906
    2. 'def' → logprob: -6.878421783447266
    3. 'assigned' → logprob: -8.003421783447266
    4. 'q' → logprob: -8.128421783447266
    5. 'queue' → logprob: -8.253421783447266
    6. 'import' → logprob: -8.253421783447266
    7. 'visited' → logprob: -8.253421783447266
    8. 'un' → logprob: -8.628421783447266
    9. 'from' → logprob: -9.003421783447266
    10. '#' → logprob: -9.003421783447266

Token 678: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01181846670806408
    2. 'def' → logprob: -5.6368184089660645
    3. ' for' → logprob: -5.7618184089660645
    4. '
' → logprob: -5.8868184089660645
    5. '```' → logprob: -6.3868184089660645
    6. 'visited' → logprob: -8.761818885803223
    7. ' follows' → logprob: -9.011818885803223
    8. 'heap' → logprob: -9.136818885803223
    9. '``' → logprob: -9.261818885803223
    10. 'queue' → logprob: -10.136818885803223

Token 679: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022414892446249723
    2. 'from' → logprob: -7.127241611480713
    3. 'queue' → logprob: -7.377241611480713
    4. 'q' → logprob: -8.127241134643555
    5. 'import' → logprob: -8.502241134643555
    6. '
' → logprob: -9.252241134643555
    7. 'stack' → logprob: -9.627241134643555
    8. 'un' → logprob: -10.252241134643555
    9. 'assigned' → logprob: -10.502241134643555
    10. ' for' → logprob: -11.002241134643555

Token 680: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007883060025051236
    2. 'from' → logprob: -7.37578821182251
    3. 'def' → logprob: -9.625788688659668
    4. 'import' → logprob: -10.250788688659668
    5. 'visited' → logprob: -10.500788688659668
    6. 'queue' → logprob: -11.000788688659668
    7. '
' → logprob: -12.000788688659668
    8. 'assigned' → logprob: -12.875788688659668
    9. ' for' → logprob: -13.375788688659668
    10. 'q' → logprob: -13.375788688659668

Token 681: ' i' (ID: 575)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5136495232582092
    2. 'i' → logprob: -1.7636494636535645
    3. 'node' → logprob: -1.8886494636535645
    4. ' i' → logprob: -2.6386494636535645
    5. 'u' → logprob: -5.8886494636535645
    6. ' u' → logprob: -6.1386494636535645
    7. ' idx' → logprob: -6.5136494636535645
    8. ' v' → logprob: -7.6386494636535645
    9. 'v' → logprob: -8.513649940490723
    10. 'idx' → logprob: -8.763649940490723

Token 682: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4228542447090149
    2. 'n' → logprob: -1.5478541851043701
    3. '_' → logprob: -3.54785418510437
    4. ',' → logprob: -3.92285418510437
    5. '=' → logprob: -4.172854423522949
    6. ' ' → logprob: -4.172854423522949
    7. ' _' → logprob: -4.547854423522949
    8. ':' → logprob: -4.797854423522949
    9. 'in' → logprob: -5.047854423522949
    10. 'f' → logprob: -5.047854423522949

Token 683: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575940728187561
    2. ' range' → logprob: -0.825940728187561
    3. ' ' → logprob: -14.70094108581543
    4. '0' → logprob: -14.82594108581543
    5. '	range' → logprob: -15.20094108581543
    6. '(range' → logprob: -16.07594108581543
    7. '  ' → logprob: -16.70094108581543
    8. '   ' → logprob: -16.95094108581543
    9. '
' → logprob: -17.95094108581543
    10. '`' → logprob: -18.07594108581543

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05105076730251312
    2. 'range' → logprob: -3.0510506629943848
    3. 'V' → logprob: -6.176050662994385
    4. ' range' → logprob: -7.926050662994385
    5. '(V' → logprob: -12.551051139831543
    6. 'i' → logprob: -12.676051139831543
    7. ' V' → logprob: -12.801051139831543
    8. ']' → logprob: -12.926051139831543
    9. ' ' → logprob: -13.176051139831543
    10. '(range' → logprob: -13.426051139831543

Token 685: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.504403829574585
    2. ']' → logprob: -1.504403829574585
    3. ']:' → logprob: -2.379403829574585
    4. ':' → logprob: -3.379403829574585
    5. '..' → logprob: -3.879403829574585
    6. '...' → logprob: -5.004404067993164
    7. ':]' → logprob: -5.129404067993164
    8. ' ,' → logprob: -6.004404067993164
    9. ' ]' → logprob: -6.629404067993164
    10. ',V' → logprob: -6.629404067993164

Token 686: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0031983929220587015
    2. ' V' → logprob: -5.753198623657227
    3. ' ' → logprob: -12.003198623657227
    4. '
' → logprob: -12.878198623657227
    5. '(V' → logprob: -12.878198623657227
    6. ',' → logprob: -13.003198623657227
    7. '`' → logprob: -13.378198623657227
    8. ']' → logprob: -13.503198623657227
    9. ')' → logprob: -14.378198623657227
    10. '   ' → logprob: -14.503198623657227

Token 687: '-' (ID: 12)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.596420168876648
    2. '):' → logprob: -1.096420168876648
    3. '):
' → logprob: -3.3464202880859375
    4. '-' → logprob: -3.4714202880859375
    5. ']' → logprob: -3.7214202880859375
    6. ']:
' → logprob: -4.0964202880859375
    7. ')' → logprob: -5.0964202880859375
    8. ',' → logprob: -7.5964202880859375
    9. ' -' → logprob: -8.221420288085938
    10. ' ):' → logprob: -8.221420288085938

Token 688: '1' (ID: 16)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.23907291889190674
    2. '-' → logprob: -2.364072799682617
    3. ')' → logprob: -2.489072799682617
    4. '):' → logprob: -4.114072799682617
    5. '1' → logprob: -4.614072799682617
    6. ']' → logprob: -4.989072799682617
    7. '(V' → logprob: -7.489072799682617
    8. ')V' → logprob: -7.864072799682617
    9. '),' → logprob: -8.364072799682617
    10. 'i' → logprob: -8.364072799682617

Token 689: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6389779448509216
    2. ']:' → logprob: -0.7639779448509216
    3. ']' → logprob: -5.138978004455566
    4. ']:
' → logprob: -8.388978004455566
    5. ']:

' → logprob: -8.888978004455566
    6. ' ]' → logprob: -10.388978004455566
    7. '],' → logprob: -10.888978004455566
    8. ',' → logprob: -11.013978004455566
    9. ']
' → logprob: -11.013978004455566
    10. '):
' → logprob: -11.138978004455566

Token 690: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042594991624355316
    2. ':' → logprob: -3.6675949096679688
    3. ' if' → logprob: -4.542594909667969
    4. 'if' → logprob: -5.667594909667969
    5. ' ' → logprob: -7.042594909667969
    6. ':
' → logprob: -7.792594909667969
    7. '    
' → logprob: -8.292594909667969
    8. ',' → logprob: -8.792594909667969
    9. '   ' → logprob: -9.417594909667969
    10. ' :' → logprob: -9.667594909667969

Token 691: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13175982236862183
    2. '   ' → logprob: -2.3817598819732666
    3. 'if' → logprob: -3.5067598819732666
    4. '```' → logprob: -7.7567596435546875
    5. ' ' → logprob: -8.381759643554688
    6. ' for' → logprob: -8.881759643554688
    7. ':' → logprob: -9.756759643554688
    8. '    ' → logprob: -9.881759643554688
    9. ' 
' → logprob: -10.756759643554688
    10. ' i' → logprob: -10.756759643554688

Token 692: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26340410113334656
    2. ' if' → logprob: -1.513404130935669
    3. '   ' → logprob: -4.51340389251709
    4. '```' → logprob: -9.01340389251709
    5. ' ' → logprob: -9.26340389251709
    6. ' 
' → logprob: -9.88840389251709
    7. 'for' → logprob: -10.38840389251709
    8. '
' → logprob: -10.63840389251709
    9. '	if' → logprob: -11.01340389251709
    10. 'i' → logprob: -11.13840389251709

Token 693: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.11284764856100082
    2. ' assigned' → logprob: -2.2378475666046143
    3. '   ' → logprob: -11.612847328186035
    4. ' ' → logprob: -11.987847328186035
    5. 'a' → logprob: -12.362847328186035
    6. ' a' → logprob: -12.862847328186035
    7. ' ' → logprob: -13.862847328186035
    8. '  ' → logprob: -14.737847328186035
    9. 'None' → logprob: -14.987847328186035
    10. '`' → logprob: -15.112847328186035

Token 694: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006020752713084221
    2. '[' → logprob: -5.131020545959473
    3. '```' → logprob: -10.256020545959473
    4. ' [' → logprob: -10.756020545959473
    5. '\[' → logprob: -11.131020545959473
    6. '[
' → logprob: -12.506020545959473
    7. 'i' → logprob: -13.006020545959473
    8. '_' → logprob: -13.381020545959473
    9. '[node' → logprob: -13.631020545959473
    10. '`' → logprob: -13.631020545959473

Token 695: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00828914437443018
    2. ']==' → logprob: -5.008289337158203
    3. '[i' → logprob: -6.883289337158203
    4. '[' → logprob: -8.508289337158203
    5. ' ]' → logprob: -8.758289337158203
    6. ']!=' → logprob: -9.758289337158203
    7. ' is' → logprob: -9.883289337158203
    8. '   ' → logprob: -10.633289337158203
    9. '==' → logprob: -10.633289337158203
    10. 'is' → logprob: -11.883289337158203

Token 696: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4764886498451233
    2. ' ==' → logprob: -1.4764885902404785
    3. '==' → logprob: -1.9764885902404785
    4. '[' → logprob: -5.4764885902404785
    5. 'is' → logprob: -5.4764885902404785
    6. '=' → logprob: -6.2264885902404785
    7. '[i' → logprob: -7.6014885902404785
    8. ' =' → logprob: -7.7264885902404785
    9. ' !=' → logprob: -8.601489067077637
    10. ' ' → logprob: -8.851489067077637

Token 697: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06198493763804436
    2. ' None' → logprob: -2.8119850158691406
    3. ''' → logprob: -11.31198501586914
    4. ' ' → logprob: -13.06198501586914
    5. ' '' → logprob: -14.06198501586914
    6. '   ' → logprob: -14.68698501586914
    7. '"' → logprob: -14.81198501586914
    8. '==' → logprob: -15.56198501586914
    9. ' ' → logprob: -15.81198501586914
    10. ' ==' → logprob: -15.93698501586914

Token 698: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13645674288272858
    2. ':
' → logprob: -2.1364567279815674
    3. '[' → logprob: -5.5114569664001465
    4. '[i' → logprob: -6.0114569664001465
    5. ',' → logprob: -6.8864569664001465
    6. '   ' → logprob: -7.0114569664001465
    7. '=' → logprob: -8.136456489562988
    8. ' :' → logprob: -8.636456489562988
    9. ' =' → logprob: -9.261456489562988
    10. ' and' → logprob: -9.261456489562988

Token 699: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23566767573356628
    2. ':' → logprob: -1.9856677055358887
    3. '       ' → logprob: -3.1106677055358887
    4. ':
' → logprob: -4.610667705535889
    5. '    ' → logprob: -5.860667705535889
    6. '    
' → logprob: -5.860667705535889
    7. '#' → logprob: -6.110667705535889
    8. '
' → logprob: -6.360667705535889
    9. ' :' → logprob: -6.485667705535889
    10. ',' → logprob: -6.485667705535889

Token 700: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041677817702293396
    2. '
' → logprob: -4.291677951812744
    3. ':' → logprob: -5.416677951812744
    4. '       ' → logprob: -5.666677951812744
    5. '    
' → logprob: -5.791677951812744
    6. '    ' → logprob: -6.166677951812744
    7. '```' → logprob: -6.166677951812744
    8. 'for' → logprob: -6.541677951812744
    9. '  
' → logprob: -6.666677951812744
    10. ' for' → logprob: -6.791677951812744

Token 701: ' forbidden' (ID: 74435)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6661314964294434
    2. 'for' → logprob: -1.9161314964294434
    3. 'neighbor' → logprob: -1.9161314964294434
    4. ' used' → logprob: -2.2911314964294434
    5. 'neighbors' → logprob: -2.9161314964294434
    6. '   ' → logprob: -4.041131496429443
    7. '#' → logprob: -4.791131496429443
    8. '```' → logprob: -5.791131496429443
    9. ' neighbor' → logprob: -6.541131496429443
    10. ' forbidden' → logprob: -6.666131496429443

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4569646120071411
    2. '_' → logprob: -1.9569646120071411
    3. '_letters' → logprob: -2.2069644927978516
    4. '[' → logprob: -2.8319644927978516
    5. '=' → logprob: -3.4569644927978516
    6. '_chars' → logprob: -4.831964492797852
    7. '[i' → logprob: -5.581964492797852
    8. 's' → logprob: -5.956964492797852
    9. 'letters' → logprob: -6.206964492797852
    10. '_indices' → logprob: -6.581964492797852

Token 703: ' letters' (ID: 18151)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04865163192152977
    2. '{' → logprob: -3.048651695251465
    3. '{s' → logprob: -10.548651695251465
    4. ' set' → logprob: -10.923651695251465
    5. '{
' → logprob: -11.298651695251465
    6. '{i' → logprob: -12.798651695251465
    7. ' {' → logprob: -13.548651695251465
    8. '(set' → logprob: -13.923651695251465
    9. '{x' → logprob: -14.423651695251465
    10. '{sub' → logprob: -14.798651695251465

Token 704: ' assigned' (ID: 21482)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48655030131340027
    2. '_used' → logprob: -1.2365503311157227
    3. ' =' → logprob: -3.4865503311157227
    4. '=' → logprob: -4.611550331115723
    5. '_of' → logprob: -4.611550331115723
    6. '_mask' → logprob: -4.986550331115723
    7. '_ass' → logprob: -5.111550331115723
    8. '[' → logprob: -5.736550331115723
    9. '_taken' → logprob: -5.986550331115723
    10. '_to' → logprob: -5.986550331115723

Token 705: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3251958191394806
    2. 'to' → logprob: -2.700195789337158
    3. '[i' → logprob: -2.950195789337158
    4. '[' → logprob: -2.950195789337158
    5. ' to' → logprob: -3.075195789337158
    6. '_' → logprob: -3.200195789337158
    7. 'To' → logprob: -5.700195789337158
    8. ' =' → logprob: -5.950195789337158
    9. '=' → logprob: -6.575195789337158
    10. '
' → logprob: -6.700195789337158

Token 706: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.42921558022499084
    2. 'neighbors' → logprob: -1.1792155504226685
    3. ' graph' → logprob: -3.804215669631958
    4. 'neighbor' → logprob: -5.054215431213379
    5. 'graph' → logprob: -5.179215431213379
    6. ' i' → logprob: -5.929215431213379
    7. ' neighbor' → logprob: -6.054215431213379
    8. ' node' → logprob: -7.804215431213379
    9. '[i' → logprob: -8.054215431213379
    10. 'i' → logprob: -8.054215431213379

Token 707: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8293760418891907
    2. '   ' → logprob: -0.9543760418891907
    3. '
' → logprob: -3.204375982284546
    4. ' =' → logprob: -3.704375982284546
    5. ':' → logprob: -3.704375982284546
    6. ' for' → logprob: -4.454376220703125
    7. '[i' → logprob: -4.704376220703125
    8. '=' → logprob: -4.704376220703125
    9. ' ' → logprob: -4.829376220703125
    10. '[' → logprob: -4.829376220703125

Token 708: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.834429144859314
    2. '   ' → logprob: -0.959429144859314
    3. 'for' → logprob: -2.7094292640686035
    4. ':' → logprob: -3.3344292640686035
    5. '      ' → logprob: -4.0844292640686035
    6. ':
' → logprob: -4.3344292640686035
    7. '
' → logprob: -4.5844292640686035
    8. ' for' → logprob: -4.7094292640686035
    9. '[' → logprob: -5.4594292640686035
    10. '[i' → logprob: -5.5844292640686035

Token 709: '      ' (ID: 1699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7409250736236572
    2. '   ' → logprob: -1.6159250736236572
    3. 'for' → logprob: -1.6159250736236572
    4. '      ' → logprob: -2.9909250736236572
    5. ':
' → logprob: -3.8659250736236572
    6. ' for' → logprob: -4.615924835205078
    7. ':' → logprob: -4.990924835205078
    8. '
' → logprob: -5.240924835205078
    9. '     ' → logprob: -5.490924835205078
    10. '           ' → logprob: -5.865924835205078

Token 710: ' assign' (ID: 14975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.666770875453949
    2. 'used' → logprob: -1.5417709350585938
    3. 'available' → logprob: -1.6667709350585938
    4. 'allowed' → logprob: -2.6667709350585938
    5. 'avail' → logprob: -5.791770935058594
    6. ' used' → logprob: -5.916770935058594
    7. '
' → logprob: -6.791770935058594
    8. 'found' → logprob: -6.916770935058594
    9. ' for' → logprob: -7.041770935058594
    10. '   ' → logprob: -7.166770935058594

Token 711: ' smallest' (ID: 42173)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2654539346694946
    2. ' =' → logprob: -1.3904539346694946
    3. ' a' → logprob: -1.8904539346694946
    4. '=' → logprob: -3.015453815460205
    5. ' assigned' → logprob: -3.015453815460205
    6. 'a' → logprob: -3.265453815460205
    7. '[a' → logprob: -3.265453815460205
    8. ''' → logprob: -3.765453815460205
    9. 'assigned' → logprob: -3.765453815460205
    10. '_' → logprob: -4.015453815460205

Token 712: ' letter' (ID: 10263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16268159449100494
    2. ''' → logprob: -2.6626815795898438
    3. ' _' → logprob: -3.2876815795898438
    4. ' ' → logprob: -3.4126815795898438
    5. '"' → logprob: -5.787681579589844
    6. '_letter' → logprob: -6.287681579589844
    7. ' '' → logprob: -6.662681579589844
    8. '(' → logprob: -7.537681579589844
    9. ' letter' → logprob: -7.662681579589844
    10. '('' → logprob: -7.787681579589844

Token 713: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7772710919380188
    2. ':
' → logprob: -1.277271032333374
    3. ':' → logprob: -2.027271032333374
    4. '
' → logprob: -2.902271032333374
    5. ' for' → logprob: -3.277271032333374
    6. '[i' → logprob: -4.152271270751953
    7. '\n' → logprob: -5.027271270751953
    8. 'if' → logprob: -5.402271270751953
    9. '   ' → logprob: -5.527271270751953
    10. '```' → logprob: -6.777271270751953

Token 714: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31550267338752747
    2. ' in' → logprob: -1.315502643585205
    3. 'used' → logprob: -7.190502643585205
    4. ' used' → logprob: -7.565502643585205
    5. ' ' → logprob: -7.815502643585205
    6. '_' → logprob: -8.690503120422363
    7. '_in' → logprob: -9.690503120422363
    8. '_used' → logprob: -9.815503120422363
    9. 'found' → logprob: -10.315503120422363
    10. '	in' → logprob: -10.565503120422363

Token 715: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040242893737740815
    2. ' forbidden' → logprob: -8.375402450561523
    3. '{' → logprob: -9.375402450561523
    4. ' for' → logprob: -9.500402450561523
    5. '(for' → logprob: -12.875402450561523
    6. 'set' → logprob: -13.375402450561523
    7. '`' → logprob: -13.500402450561523
    8. '[' → logprob: -13.750402450561523
    9. 'assigned' → logprob: -14.125402450561523
    10. ' {' → logprob: -14.125402450561523

Token 716: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007631232030689716
    2. '
' → logprob: -5.257631301879883
    3. ' for' → logprob: -6.132631301879883
    4. '\n' → logprob: -9.132631301879883
    5. '```' → logprob: -10.132631301879883
    6. '\' → logprob: -11.007631301879883
    7. 'i' → logprob: -11.132631301879883
    8. ':' → logprob: -11.757631301879883
    9. '   ' → logprob: -12.382631301879883
    10. '  
' → logprob: -12.632631301879883

Token 717: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07296450436115265
    2. '
' → logprob: -3.0729644298553467
    3. ' for' → logprob: -3.8229644298553467
    4. ':' → logprob: -6.822964668273926
    5. ':
' → logprob: -7.197964668273926
    6. '\n' → logprob: -9.072964668273926
    7. '   ' → logprob: -9.322964668273926
    8. '```' → logprob: -9.572964668273926
    9. ' 
' → logprob: -10.947964668273926
    10. '  
' → logprob: -10.947964668273926

Token 718: '      ' (ID: 1699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2724740505218506
    2. '
' → logprob: -2.5224740505218506
    3. ':
' → logprob: -2.6474740505218506
    4. ':' → logprob: -2.8974740505218506
    5. ' for' → logprob: -4.02247428894043
    6. '\n' → logprob: -4.77247428894043
    7. '```' → logprob: -6.39747428894043
    8. '  
' → logprob: -7.02247428894043
    9. '   ' → logprob: -7.39747428894043
    10. 'if' → logprob: -7.64747428894043

Token 719: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' (adapté à ' assigned') → logprob: -0.019242381677031517
    2. 'for' → logprob: -4.144242286682129
    3. ' assigned' → logprob: -6.269242286682129
    4. '   ' → logprob: -6.894242286682129
    5. '       ' → logprob: -9.769242286682129
    6. ' for' → logprob: -10.019242286682129
    7. 'print' → logprob: -10.269242286682129
    8. '#' → logprob: -10.394242286682129
    9. '  ' → logprob: -10.769242286682129
    10. '
' → logprob: -10.894242286682129

Token 720: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021105022460687906
    2. '[' → logprob: -8.500210762023926
    3. '```' → logprob: -12.250210762023926
    4. ' [' → logprob: -14.000210762023926
    5. '\[' → logprob: -14.375210762023926
    6. '[I' → logprob: -14.750210762023926
    7. '[
' → logprob: -15.250210762023926
    8. '=' → logprob: -16.000211715698242
    9. '`' → logprob: -16.125211715698242
    10. '   ' → logprob: -16.500211715698242

Token 721: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029047278221696615
    2. ']' → logprob: -6.002904891967773
    3. ']=' → logprob: -8.627904891967773
    4. '[' → logprob: -8.627904891967773
    5. '=' → logprob: -9.877904891967773
    6. 'i' → logprob: -11.627904891967773
    7. ' =' → logprob: -13.002904891967773
    8. '   ' → logprob: -13.502904891967773
    9. '```' → logprob: -13.627904891967773
    10. '
' → logprob: -13.752904891967773

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.163456529378891
    2. '[i' → logprob: -1.9134565591812134
    3. '[' → logprob: -5.788456439971924
    4. ' =' → logprob: -9.163456916809082
    5. ']' → logprob: -10.413456916809082
    6. '```' → logprob: -11.413456916809082
    7. '=i' → logprob: -11.788456916809082
    8. ']=' → logprob: -13.288456916809082
    9. '[:]' → logprob: -13.413456916809082
    10. '=`' → logprob: -13.538456916809082

Token 723: ' letter' (ID: 10263)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.5499818325042725
    2. ''' → logprob: -1.7999818325042725
    3. 'chr' → logprob: -2.2999818325042725
    4. 'a' → logprob: -2.6749818325042725
    5. 'min' → logprob: -3.0499818325042725
    6. 'next' → logprob: -4.174982070922852
    7. ''s' → logprob: -5.549982070922852
    8. '[' → logprob: -6.174982070922852
    9. ' next' → logprob: -6.174982070922852
    10. 'heap' → logprob: -6.299982070922852

Token 724: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6036151051521301
    2. 'for' → logprob: -1.3536150455474854
    3. '\n' → logprob: -2.1036150455474854
    4. ':' → logprob: -3.9786150455474854
    5. ' for' → logprob: -4.3536152839660645
    6. ':
' → logprob: -4.3536152839660645
    7. '  
' → logprob: -4.4786152839660645
    8. '\' → logprob: -5.7286152839660645
    9. '```' → logprob: -5.7286152839660645
    10. '' → logprob: -6.3536152839660645

Token 725: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16067686676979065
    2. '
' → logprob: -2.285676956176758
    3. '\n' → logprob: -3.535676956176758
    4. ' for' → logprob: -4.160676956176758
    5. '```' → logprob: -7.410676956176758
    6. '\' → logprob: -8.035676956176758
    7. 'i' → logprob: -8.285676956176758
    8. ' 
' → logprob: -8.660676956176758
    9. ':
' → logprob: -9.160676956176758
    10. '   ' → logprob: -9.160676956176758

Token 726: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007846875116229057
    2. '
' → logprob: -6.007846832275391
    3. ' for' → logprob: -6.132846832275391
    4. '\n' → logprob: -6.632846832275391
    5. 'i' → logprob: -6.757846832275391
    6. '\' → logprob: -9.00784683227539
    7. ':' → logprob: -9.13284683227539
    8. 'if' → logprob: -9.25784683227539
    9. '```' → logprob: -9.38284683227539
    10. ':
' → logprob: -9.63284683227539

Token 727: ' problem' (ID: 4792)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4709392786026
    2. 'i' → logprob: -1.8459392786026
    3. ' V' → logprob: -1.8459392786026
    4. 'V' → logprob: -2.0959391593933105
    5. ' True' → logprob: -2.4709391593933105
    6. ' for' → logprob: -2.9709391593933105
    7. ' ' → logprob: -3.4709391593933105
    8. ' assigned' → logprob: -3.4709391593933105
    9. ' len' → logprob: -3.8459391593933105
    10. 'for' → logprob: -3.9709391593933105

Token 728: ' says' (ID: 5003)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.529259443283081
    2. ':' → logprob: -1.904259443283081
    3. '[' → logprob: -2.154259443283081
    4. 'for' → logprob: -2.154259443283081
    5. ' for' → logprob: -4.65425968170166
    6. '
' → logprob: -5.52925968170166
    7. '#' → logprob: -5.65425968170166
    8. '.' → logprob: -6.15425968170166
    9. '[
' → logprob: -6.27925968170166
    10. '=' → logprob: -6.65425968170166

Token 729: ' "' (ID: 392)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.994821548461914
    2. ':' → logprob: -2.119821548461914
    3. 'V' → logprob: -2.119821548461914
    4. 'for' → logprob: -2.994821548461914
    5. ''' → logprob: -3.119821548461914
    6. ' the' → logprob: -3.244821548461914
    7. ' V' → logprob: -3.369821548461914
    8. ' :' → logprob: -3.369821548461914
    9. ' for' → logprob: -3.369821548461914
    10. ' not' → logprob: -3.369821548461914

Token 730: 'the' (ID: 3086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5288786292076111
    2. ':' → logprob: -1.5288786888122559
    3. ' for' → logprob: -2.903878688812256
    4. '"' → logprob: -2.903878688812256
    5. '":' → logprob: -4.153878688812256
    6. '.' → logprob: -4.653878688812256
    7. '[i' → logprob: -4.903878688812256
    8. ' "' → logprob: -5.028878688812256
    9. 'i' → logprob: -5.028878688812256
    10. '#' → logprob: -5.403878688812256

Token 731: ' process' (ID: 2273)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.8417481184005737
    2. '"' → logprob: -1.3417481184005737
    3. ' code' → logprob: -3.0917482376098633
    4. ' ' → logprob: -3.4667482376098633
    5. ' assigned' → logprob: -3.4667482376098633
    6. ' rest' → logprob: -3.5917482376098633
    7. '#' → logprob: -4.216748237609863
    8. 'n' → logprob: -4.341748237609863
    9. ' ")' → logprob: -4.591748237609863
    10. ' "]' → logprob: -4.716748237609863

Token 732: ' repeats' (ID: 95681)
  Prédit: ' を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' を' → logprob: -0.9412851333618164
    2. 'を' → logprob: -1.3162851333618164
    3. '#' → logprob: -1.6912851333618164
    4. ' is' → logprob: -2.9412851333618164
    5. ' continues' → logprob: -3.0662851333618164
    6. ')' → logprob: -5.316285133361816
    7. 'は' → logprob: -5.566285133361816
    8. ' #' → logprob: -5.566285133361816
    9. 'が' → logprob: -5.566285133361816
    10. ' completes' → logprob: -5.691285133361816

Token 733: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11799036711454391
    2. ' for' → logprob: -2.867990255355835
    3. ' until' → logprob: -4.117990493774414
    4. 'until' → logprob: -4.117990493774414
    5. '```' → logprob: -5.117990493774414
    6. '[i' → logprob: -5.367990493774414
    7. '.' → logprob: -5.617990493774414
    8. '#' → logprob: -5.867990493774414
    9. ':' → logprob: -6.242990493774414
    10. 'i' → logprob: -6.617990493774414

Token 734: ' there' (ID: 1354)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.4675664901733398
    2. 'any' → logprob: -1.7175664901733398
    3. 'True' → logprob: -1.7175664901733398
    4. ' True' → logprob: -2.46756649017334
    5. ' there' → logprob: -2.46756649017334
    6. ' any' → logprob: -2.59256649017334
    7. ''' → logprob: -3.09256649017334
    8. ' assigned' → logprob: -3.34256649017334
    9. 'there' → logprob: -3.71756649017334
    10. 'None' → logprob: -3.71756649017334

Token 735: ' exists' (ID: 13031)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09213392436504364
    2. ' is' → logprob: -2.4671339988708496
    3. 'まだ' → logprob: -7.34213399887085
    4. 'は' → logprob: -7.46713399887085
    5. ' are' → logprob: -7.59213399887085
    6. 'are' → logprob: -7.71713399887085
    7. ' still' → logprob: -8.842133522033691
    8. ' は' → logprob: -8.842133522033691
    9. '#' → logprob: -8.967133522033691
    10. 'still' → logprob: -9.092133522033691

Token 736: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.3108747005462646
    2. ' any' → logprob: -1.4358747005462646
    3. 'assigned' → logprob: -1.6858747005462646
    4. ''' → logprob: -2.4358747005462646
    5. 'None' → logprob: -2.4358747005462646
    6. ' assigned' → logprob: -3.3108747005462646
    7. ' None' → logprob: -3.6858747005462646
    8. 'True' → logprob: -4.310874938964844
    9. '?' → logprob: -4.935874938964844
    10. 'a' → logprob: -5.060874938964844

Token 737: ' un' (ID: 537)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.0973867177963257
    2. '?' → logprob: -1.4723867177963257
    3. ' assigned' → logprob: -2.3473868370056152
    4. ' un' → logprob: -2.5973868370056152
    5. '`' → logprob: -2.7223868370056152
    6. ' None' → logprob: -3.0973868370056152
    7. 'None' → logprob: -3.2223868370056152
    8. 'un' → logprob: -3.3473868370056152
    9. ' '?'' → logprob: -4.097386837005615
    10. ' node' → logprob: -4.222386837005615

Token 738: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.001138550229370594
    2. '`' → logprob: -8.001138687133789
    3. '```' → logprob: -8.251138687133789
    4. ''' → logprob: -9.126138687133789
    5. '=' → logprob: -9.251138687133789
    6. '?' → logprob: -9.376138687133789
    7. 'ass' → logprob: -10.001138687133789
    8. 'assign' → logprob: -10.001138687133789
    9. '#' → logprob: -10.501138687133789
    10. ''''' → logprob: -10.501138687133789

Token 739: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0846138522028923
    2. '_' → logprob: -3.709613800048828
    3. 'node' → logprob: -3.709613800048828
    4. ' ' → logprob: -4.209613800048828
    5. '[node' → logprob: -4.584613800048828
    6. ''' → logprob: -6.584613800048828
    7. '[' → logprob: -6.584613800048828
    8. '_node' → logprob: -7.084613800048828
    9. '[i' → logprob: -7.459613800048828
    10. ')' → logprob: -7.709613800048828

Token 740: '".

' (ID: 12263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4003005027770996
    2. ':
' → logprob: -1.7753005027770996
    3. 'for' → logprob: -1.9003005027770996
    4. ' for' → logprob: -6.5253005027771
    5. 'while' → logprob: -6.5253005027771
    6. '):' → logprob: -6.9003005027771
    7. '":' → logprob: -6.9003005027771
    8. '[i' → logprob: -6.9003005027771
    9. 'i' → logprob: -7.0253005027771
    10. '.' → logprob: -7.1503005027771

Token 741: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006083175539970398
    2. '```' → logprob: -7.750608444213867
    3. '
' → logprob: -8.875608444213867
    4. ' for' → logprob: -10.500608444213867
    5. '\n' → logprob: -12.375608444213867
    6. '``' → logprob: -12.875608444213867
    7. 'i' → logprob: -13.625608444213867
    8. '`' → logprob: -14.500608444213867
    9. '\' → logprob: -14.625608444213867
    10. '    
' → logprob: -15.250608444213867

Token 742: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5451681974809617e-05
    2. '```' → logprob: -11.250015258789062
    3. 'i' → logprob: -13.750015258789062
    4. ' for' → logprob: -13.875015258789062
    5. '
' → logprob: -15.750015258789062
    6. 'assigned' → logprob: -16.125015258789062
    7. '``' → logprob: -16.750015258789062
    8. 'def' → logprob: -18.125015258789062
    9. '`' → logprob: -18.375015258789062
    10. '#' → logprob: -18.625015258789062

Token 743: ' performance' (ID: 6198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018835941329598427
    2. '_' → logprob: -4.39383602142334
    3. ' i' → logprob: -5.14383602142334
    4. '_i' → logprob: -8.39383602142334
    5. 'node' → logprob: -8.89383602142334
    6. ' _' → logprob: -10.01883602142334
    7. ' node' → logprob: -10.26883602142334
    8. '```' → logprob: -11.39383602142334
    9. '_node' → logprob: -12.39383602142334
    10. ' ' → logprob: -13.26883602142334

Token 744: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010405418463051319
    2. ' for' → logprob: -4.635405540466309
    3. ':' → logprob: -8.260405540466309
    4. '
' → logprob: -8.760405540466309
    5. ':
' → logprob: -9.135405540466309
    6. '```' → logprob: -10.260405540466309
    7. 'i' → logprob: -10.385405540466309
    8. '#' → logprob: -10.760405540466309
    9. ',' → logprob: -11.760405540466309
    10. 'range' → logprob: -12.135405540466309

Token 745: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012853124178946018
    2. ' for' → logprob: -4.387853145599365
    3. 'i' → logprob: -8.387852668762207
    4. 'while' → logprob: -10.137852668762207
    5. ' i' → logprob: -11.012852668762207
    6. '
' → logprob: -11.012852668762207
    7. '   ' → logprob: -11.512852668762207
    8. ' 
' → logprob: -11.512852668762207
    9. '```' → logprob: -12.262852668762207
    10. 'assigned' → logprob: -12.637852668762207

Token 746: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14441131055355072
    2. ' for' → logprob: -2.769411325454712
    3. ' continue' → logprob: -3.394411325454712
    4. ':' → logprob: -4.019411087036133
    5. ' ' → logprob: -4.769411087036133
    6. '=' → logprob: -5.894411087036133
    7. 'continue' → logprob: -6.269411087036133
    8. ' =' → logprob: -6.519411087036133
    9. ' can' → logprob: -6.769411087036133
    10. '#' → logprob: -6.769411087036133

Token 747: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045996569097042084
    2. ' for' → logprob: -3.17099666595459
    3. '
' → logprob: -6.42099666595459
    4. '```' → logprob: -7.42099666595459
    5. '   ' → logprob: -7.67099666595459
    6. 'i' → logprob: -9.42099666595459
    7. 'while' → logprob: -10.04599666595459
    8. ' in' → logprob: -10.42099666595459
    9. ' i' → logprob: -10.42099666595459
    10. 'in' → logprob: -10.67099666595459

Token 748: ' single' (ID: 4590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05697896331548691
    2. ' for' → logprob: -3.056978940963745
    3. 'def' → logprob: -5.806979179382324
    4. 'i' → logprob: -6.431979179382324
    5. 'range' → logprob: -7.806979179382324
    6. '```' → logprob: -7.931979179382324
    7. 'n' → logprob: -8.056979179382324
    8. 'while' → logprob: -8.056979179382324
    9. ' i' → logprob: -8.181979179382324
    10. ' single' → logprob: -8.306979179382324

Token 749: ' pass' (ID: 1853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12882016599178314
    2. ' for' → logprob: -2.1288201808929443
    3. 'pass' → logprob: -7.253819942474365
    4. ' pass' → logprob: -7.753819942474365
    5. ' loop' → logprob: -8.003820419311523
    6. '
' → logprob: -8.878820419311523
    7. ' 
' → logprob: -9.628820419311523
    8. '```' → logprob: -10.253820419311523
    9. 'i' → logprob: -10.378820419311523
    10. 'range' → logprob: -10.878820419311523

Token 750: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005189551156945527
    2. '
' → logprob: -8.500518798828125
    3. ' for' → logprob: -8.500518798828125
    4. '```' → logprob: -9.250518798828125
    5. 'i' → logprob: -11.875518798828125
    6. '#' → logprob: -13.375518798828125
    7. '``' → logprob: -13.625518798828125
    8. '\n' → logprob: -14.250518798828125
    9. 'assigned' → logprob: -14.250518798828125
    10. '`' → logprob: -14.750518798828125

Token 751: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031887630466371775
    2. 'i' → logprob: -5.753188610076904
    3. 'range' → logprob: -11.628189086914062
    4. '```' → logprob: -13.878189086914062
    5. ' ' → logprob: -14.878189086914062
    6. '`' → logprob: -14.878189086914062
    7. 'zero' → logprob: -15.378189086914062
    8. ' i' → logprob: -16.003189086914062
    9. 'index' → logprob: -16.628189086914062
    10. 'the' → logprob: -17.503189086914062

Token 752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009124171338044107
    2. 'i' → logprob: -7.000912189483643
    3. ' ' → logprob: -15.1259126663208
    4. '```' → logprob: -15.2509126663208
    5. 'range' → logprob: -15.5009126663208
    6. 'zero' → logprob: -16.500911712646484
    7. '
' → logprob: -17.125911712646484
    8. '`' → logprob: -17.375911712646484
    9. ' i' → logprob: -17.625911712646484
    10. 'import' → logprob: -18.000911712646484

Token 753: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01706288941204548
    2. ')' → logprob: -5.142062664031982
    3. '<|end|>' → logprob: -6.142062664031982
    4. '#' → logprob: -6.892062664031982
    5. '
' → logprob: -6.892062664031982
    6. '):' → logprob: -7.017062664031982
    7. '[i' → logprob: -7.267062664031982
    8. ':
' → logprob: -7.267062664031982
    9. ']' → logprob: -7.517062664031982
    10. ',' → logprob: -7.642062664031982

Token 754: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.9361264946837764e-07
    2. ' V' → logprob: -16.0
    3. '(V' → logprob: -18.5
    4. '<V' → logprob: -18.5
    5. '```' → logprob: -18.875
    6. '
' → logprob: -19.75
    7. 'v' → logprob: -20.125
    8. '	V' → logprob: -20.125
    9. '`' → logprob: -21.125
    10. '_V' → logprob: -21.5

Token 755: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002288471907377243
    2. '
' → logprob: -6.502288341522217
    3. ' for' → logprob: -7.502288341522217
    4. '```' → logprob: -9.502288818359375
    5. 'i' → logprob: -9.752288818359375
    6. ':' → logprob: -10.252288818359375
    7. '\n' → logprob: -11.252288818359375
    8. ':
' → logprob: -11.627288818359375
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -12.252288818359375
    10. 'if' → logprob: -12.377288818359375

Token 756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. '-' → logprob: -9.875060081481934
    3. 'i' → logprob: -13.125060081481934
    4. ' ' → logprob: -14.125060081481934
    5. 'V' → logprob: -14.250060081481934
    6. '0' → logprob: -14.375060081481934
    7. 'id' → logprob: -14.500060081481934
    8. ')' → logprob: -14.500060081481934
    9. '```' → logprob: -15.000060081481934
    10. '#' → logprob: -15.250060081481934

Token 757: ' assigning' (ID: 123177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0073115224950015545
    2. '
' → logprob: -5.5073113441467285
    3. ' for' → logprob: -6.5073113441467285
    4. '```' → logprob: -7.8823113441467285
    5. ':' → logprob: -8.007311820983887
    6. 'i' → logprob: -8.132311820983887
    7. '\n' → logprob: -8.257311820983887
    8. ':
' → logprob: -8.632311820983887
    9. 'if' → logprob: -10.007311820983887
    10. '\' → logprob: -10.257311820983887

Token 758: ' letters' (ID: 18151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06878919154405594
    2. '
' → logprob: -3.19378924369812
    3. ' for' → logprob: -4.318789005279541
    4. ':' → logprob: -5.193789005279541
    5. ':
' → logprob: -5.193789005279541
    6. '\n' → logprob: -7.318789005279541
    7. '```' → logprob: -9.6937894821167
    8. '   ' → logprob: -9.6937894821167
    9. '  
' → logprob: -10.5687894821167
    10. '
' → logprob: -10.8187894821167

Token 759: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31203901767730713
    2. '
' → logprob: -1.6870390176773071
    3. ':
' → logprob: -3.5620388984680176
    4. ':' → logprob: -3.6870388984680176
    5. ' for' → logprob: -4.187038898468018
    6. '\n' → logprob: -4.687038898468018
    7. '  
' → logprob: -6.812038898468018
    8. '
' → logprob: -7.812038898468018
    9. '```' → logprob: -7.812038898468018
    10. 'if' → logprob: -7.937038898468018

Token 760: ' un' (ID: 537)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.7412061095237732
    2. 'None' → logprob: -0.9912061095237732
    3. 'i' → logprob: -2.116206169128418
    4. 'assigned' → logprob: -4.366206169128418
    5. ' nodes' → logprob: -4.741206169128418
    6. 'each' → logprob: -5.491206169128418
    7. 'node' → logprob: -6.241206169128418
    8. ' None' → logprob: -6.366206169128418
    9. '[i' → logprob: -6.866206169128418
    10. 'un' → logprob: -7.366206169128418

Token 761: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00032354547875002027
    2. '[' → logprob: -8.625323295593262
    3. '[]' → logprob: -10.625323295593262
    4. ' assigned' → logprob: -10.750323295593262
    5. '[i' → logprob: -10.875323295593262
    6. '.' → logprob: -11.250323295593262
    7. '?' → logprob: -11.375323295593262
    8. '#' → logprob: -11.375323295593262
    9. ']' → logprob: -12.000323295593262
    10. '```' → logprob: -12.125323295593262

Token 762: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07583211362361908
    2. ':
' → logprob: -3.5758321285247803
    3. '
' → logprob: -3.7008321285247803
    4. ':' → logprob: -4.450831890106201
    5. ' for' → logprob: -4.825831890106201
    6. '\n' → logprob: -7.950831890106201
    7. '```' → logprob: -9.45083236694336
    8. '   ' → logprob: -10.20083236694336
    9. ',' → logprob: -10.82583236694336
    10. 'i' → logprob: -10.95083236694336

Token 763: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030662229284644127
    2. '
' → logprob: -3.6556622982025146
    3. ' for' → logprob: -5.5306620597839355
    4. ':' → logprob: -8.655662536621094
    5. ':
' → logprob: -9.280662536621094
    6. '```' → logprob: -10.280662536621094
    7. '\n' → logprob: -10.780662536621094
    8. '

' → logprob: -11.780662536621094
    9. '
' → logprob: -12.155662536621094
    10. '  
' → logprob: -12.155662536621094

Token 764: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00220818561501801
    2. ' order' → logprob: -6.877208232879639
    3. 'one' → logprob: -7.002208232879639
    4. 'a' → logprob: -9.25220775604248
    5. 'the' → logprob: -9.37720775604248
    6. 'range' → logprob: -10.12720775604248
    7. 'assigned' → logprob: -11.12720775604248
    8. 'sequence' → logprob: -11.50220775604248
    9. '```' → logprob: -12.37720775604248
    10. 'i' → logprob: -12.50220775604248

Token 765: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002831464516930282
    2. '
' → logprob: -8.875283241271973
    3. ' for' → logprob: -9.000283241271973
    4. '```' → logprob: -11.250283241271973
    5. '\n' → logprob: -13.000283241271973
    6. 'i' → logprob: -13.000283241271973
    7. '``' → logprob: -14.750283241271973
    8. '\' → logprob: -14.875283241271973
    9. ':' → logprob: -15.500283241271973
    10. '#' → logprob: -15.625283241271973

Token 766: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01623225025832653
    2. '
' → logprob: -4.266232013702393
    3. ' for' → logprob: -6.266232013702393
    4. ':
' → logprob: -9.76623249053955
    5. '\n' → logprob: -10.14123249053955
    6. ':' → logprob: -10.64123249053955
    7. '```' → logprob: -10.76623249053955
    8. '

' → logprob: -12.51623249053955
    9. '#' → logprob: -12.76623249053955
    10. '
' → logprob: -13.14123249053955

Token 767: ' This' (ID: 1328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006458373973146081
    2. '```' → logprob: -7.875645637512207
    3. '
' → logprob: -9.000645637512207
    4. ' for' → logprob: -10.000645637512207
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.375645637512207
    6. 'i' → logprob: -11.250645637512207
    7. '#' → logprob: -11.500645637512207
    8. 'a' → logprob: -11.500645637512207
    9. '\n' → logprob: -11.625645637512207
    10. '``' → logprob: -12.375645637512207

Token 768: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053482141345739365
    2. ':' → logprob: -3.4284820556640625
    3. ' for' → logprob: -4.9284820556640625
    4. '.' → logprob: -5.4284820556640625
    5. '#' → logprob: -5.5534820556640625
    6. '
' → logprob: -6.8034820556640625
    7. '```' → logprob: -7.4284820556640625
    8. 'def' → logprob: -7.6784820556640625
    9. '=' → logprob: -8.053482055664062
    10. ':
' → logprob: -8.428482055664062

Token 769: ' justified' (ID: 78757)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1508598327636719
    2. 's' → logprob: -1.4008598327636719
    3. 'complete' → logprob: -2.150859832763672
    4. 'all' → logprob: -3.275859832763672
    5. 'acceptable' → logprob: -3.650859832763672
    6. ':' → logprob: -3.775859832763672
    7. 'def' → logprob: -4.025859832763672
    8. 'for' → logprob: -4.150859832763672
    9. 'consistent' → logprob: -4.150859832763672
    10. ' the' → logprob: -4.275859832763672

Token 770: ' because' (ID: 2236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3605238199234009
    2. '
' → logprob: -1.9855238199234009
    3. ':
' → logprob: -2.3605237007141113
    4. ' for' → logprob: -3.1105237007141113
    5. ':' → logprob: -3.8605237007141113
    6. '\n' → logprob: -5.860523700714111
    7. '[i' → logprob: -6.610523700714111
    8. '```' → logprob: -7.860523700714111
    9. '[' → logprob: -8.98552417755127
    10. '   ' → logprob: -9.36052417755127

Token 771: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7828985452651978
    2. 'all' → logprob: -1.7828985452651978
    3. ' the' → logprob: -2.032898426055908
    4. 'the' → logprob: -3.032898426055908
    5. 'neighbors' → logprob: -3.157898426055908
    6. ' no' → logprob: -3.282898426055908
    7. '#' → logprob: -3.782898426055908
    8. 'each' → logprob: -4.157898426055908
    9. ' neighbors' → logprob: -4.407898426055908
    10. ' each' → logprob: -4.407898426055908

Token 772: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.7407358884811401
    2. '#' → logprob: -2.1157360076904297
    3. 'problem' → logprob: -2.2407360076904297
    4. ' code' → logprob: -2.3657360076904297
    5. ' assigned' → logprob: -2.6157360076904297
    6. 'remaining' → logprob: -2.8657360076904297
    7. ' rest' → logprob: -2.9907360076904297
    8. 'assigned' → logprob: -2.9907360076904297
    9. 'rest' → logprob: -3.3657360076904297
    10. 'neighbors' → logprob: -3.4907360076904297

Token 773: ' wants' (ID: 10648)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.581066906452179
    2. ':' → logprob: -1.3310668468475342
    3. ' completes' → logprob: -2.956066846847534
    4. ' is' → logprob: -3.706066846847534
    5. ')' → logprob: -4.081067085266113
    6. '#' → logprob: -4.456067085266113
    7. '.' → logprob: -4.581067085266113
    8. ' will' → logprob: -4.706067085266113
    9. ' can' → logprob: -5.206067085266113
    10. '):' → logprob: -5.331067085266113

Token 774: ' lex' (ID: 37772)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7920899987220764
    2. ' the' → logprob: -1.2920899391174316
    3. ' us' → logprob: -2.0420899391174316
    4. 'us' → logprob: -2.6670899391174316
    5. 'a' → logprob: -3.5420899391174316
    6. ' a' → logprob: -3.7920899391174316
    7. ' to' → logprob: -4.917089939117432
    8. ' code' → logprob: -5.792089939117432
    9. ' lex' → logprob: -6.042089939117432
    10. 'to' → logprob: -6.167089939117432

Token 775: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.18398301303386688
    2. ' for' → logprob: -3.058983087539673
    3. ' ' → logprob: -3.558983087539673
    4. 'for' → logprob: -3.808983087539673
    5. ')' → logprob: -4.058982849121094
    6. 'ic' → logprob: -4.683982849121094
    7. 'i' → logprob: -4.808982849121094
    8. '[i' → logprob: -5.183982849121094
    9. ' =' → logprob: -5.433982849121094
    10. '=' → logprob: -5.683982849121094

Token 776: ' string' (ID: 1621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07104793936014175
    2. '
' → logprob: -2.8210480213165283
    3. ' for' → logprob: -4.821047782897949
    4. ':
' → logprob: -8.19604778289795
    5. '\n' → logprob: -8.44604778289795
    6. '```' → logprob: -8.82104778289795
    7. ':' → logprob: -9.07104778289795
    8. '
' → logprob: -10.32104778289795
    9. 'if' → logprob: -10.69604778289795
    10. '#' → logprob: -10.94604778289795

Token 777: ' overall' (ID: 10705)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015125024132430553
    2. '
' → logprob: -4.390124797821045
    3. ' for' → logprob: -6.390124797821045
    4. '\n' → logprob: -7.765124797821045
    5. '```' → logprob: -8.515125274658203
    6. '\' → logprob: -9.765125274658203
    7. 'i' → logprob: -10.265125274658203
    8. 'def' → logprob: -10.265125274658203
    9. ':' → logprob: -10.515125274658203
    10. '  
' → logprob: -10.890125274658203

Token 778: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013158346526324749
    2. '
' → logprob: -4.513158321380615
    3. ' for' → logprob: -6.763158321380615
    4. '```' → logprob: -7.513158321380615
    5. '\n' → logprob: -8.263158798217773
    6. '\' → logprob: -10.263158798217773
    7. ':' → logprob: -10.388158798217773
    8. '``' → logprob: -11.388158798217773
    9. 'a' → logprob: -11.763158798217773
    10. '#' → logprob: -11.888158798217773

Token 779: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03951564431190491
    2. ' for' → logprob: -3.664515733718872
    3. ':' → logprob: -5.789515495300293
    4. '#' → logprob: -6.164515495300293
    5. 'i' → logprob: -6.664515495300293
    6. ':
' → logprob: -6.789515495300293
    7. ')' → logprob: -7.039515495300293
    8. 'if' → logprob: -7.289515495300293
    9. 'while' → logprob: -7.289515495300293
    10. '\n' → logprob: -7.914515495300293

Token 780: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032658842392265797
    2. ' for' → logprob: -6.378265857696533
    3. '#' → logprob: -7.003265857696533
    4. 'while' → logprob: -8.378266334533691
    5. 'i' → logprob: -9.003266334533691
    6. 'assigned' → logprob: -9.253266334533691
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.628266334533691
    8. 'if' → logprob: -10.753266334533691
    9. '
' → logprob: -10.878266334533691
    10. '```' → logprob: -10.878266334533691

Token 781: ' assigning' (ID: 123177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10105491429567337
    2. ' for' → logprob: -2.3510549068450928
    3. '   ' → logprob: -8.476055145263672
    4. '#' → logprob: -8.726055145263672
    5. 'continue' → logprob: -8.726055145263672
    6. '```' → logprob: -9.351055145263672
    7. ' assigned' → logprob: -10.101055145263672
    8. ' continue' → logprob: -10.351055145263672
    9. 'assigned' → logprob: -10.351055145263672
    10. ' ' → logprob: -10.851055145263672

Token 782: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4946809709072113
    2. ' letters' → logprob: -1.3696810007095337
    3. ' the' → logprob: -3.119680881500244
    4. 'in' → logprob: -3.494680881500244
    5. ' assigned' → logprob: -3.994680881500244
    6. 'letters' → logprob: -4.369680881500244
    7. ' to' → logprob: -5.119680881500244
    8. '[i' → logprob: -5.244680881500244
    9. ' all' → logprob: -5.369680881500244
    10. ' for' → logprob: -5.494680881500244

Token 783: ' ascending' (ID: 75564)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4471587836742401
    2. ' order' → logprob: -1.0721588134765625
    3. 'index' → logprob: -5.1971588134765625
    4. ' lex' → logprob: -5.8221588134765625
    5. 'range' → logprob: -5.9471588134765625
    6. ' index' → logprob: -6.1971588134765625
    7. 'lex' → logprob: -6.6971588134765625
    8. ' range' → logprob: -7.4471588134765625
    9. ' the' → logprob: -7.5721588134765625
    10. 'i' → logprob: -7.8221588134765625

Token 784: ' node' (ID: 4596)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.08810196816921234
    2. ' index' → logprob: -2.588101863861084
    3. ' ' → logprob: -6.088101863861084
    4. 'index' → logprob: -6.213101863861084
    5. 'order' → logprob: -6.463101863861084
    6. ' _' → logprob: -6.713101863861084
    7. ' i' → logprob: -6.838101863861084
    8. '_' → logprob: -7.213101863861084
    9. '_index' → logprob: -9.213102340698242
    10. '```' → logprob: -10.463102340698242

Token 785: ' order' (ID: 2569)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.4089916944503784
    2. '_' → logprob: -1.5339916944503784
    3. ' index' → logprob: -1.6589916944503784
    4. '_index' → logprob: -2.908991813659668
    5. ' i' → logprob: -3.033991813659668
    6. 'index' → logprob: -3.033991813659668
    7. ' ' → logprob: -3.283991813659668
    8. '```' → logprob: -3.533991813659668
    9. 's' → logprob: -4.033991813659668
    10. ']' → logprob: -4.158991813659668

Token 786: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3505658805370331
    2. ':
' → logprob: -1.6005659103393555
    3. ':' → logprob: -2.6005659103393555
    4. '
' → logprob: -4.7255659103393555
    5. ' for' → logprob: -4.7255659103393555
    6. '\n' → logprob: -6.9755659103393555
    7. '```' → logprob: -8.350565910339355
    8. ',' → logprob: -8.975565910339355
    9. '[i' → logprob: -8.975565910339355
    10. '[' → logprob: -9.725565910339355

Token 787: ' assigning' (ID: 123177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1378331184387207
    2. ' continuing' → logprob: -1.5128331184387207
    3. ' for' → logprob: -1.6378331184387207
    4. 'continu' → logprob: -2.0128331184387207
    5. ' updating' → logprob: -3.8878331184387207
    6. 'assign' → logprob: -3.8878331184387207
    7. ' assigning' → logprob: -4.137833118438721
    8. '```' → logprob: -4.512833118438721
    9. '#' → logprob: -4.637833118438721
    10. 'continue' → logprob: -4.762833118438721

Token 788: ' smallest' (ID: 42173)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23499630391597748
    2. ' letters' → logprob: -1.8599963188171387
    3. 'the' → logprob: -4.109996318817139
    4. ' to' → logprob: -4.359996318817139
    5. ' not' → logprob: -4.859996318817139
    6. 'letters' → logprob: -5.484996318817139
    7. ' in' → logprob: -5.984996318817139
    8. ' assigned' → logprob: -6.109996318817139
    9. ' each' → logprob: -6.484996318817139
    10. ' a' → logprob: -6.609996318817139

Token 789: ' possible' (ID: 4149)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.5803462862968445
    2. 'letter' → logprob: -1.0803463459014893
    3. ' possible' → logprob: -3.3303463459014893
    4. 'possible' → logprob: -4.20534610748291
    5. '_letter' → logprob: -4.33034610748291
    6. ''' → logprob: -4.45534610748291
    7. '_' → logprob: -5.33034610748291
    8. ' available' → logprob: -5.70534610748291
    9. 'available' → logprob: -5.70534610748291
    10. ' ' → logprob: -5.83034610748291

Token 790: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.9622991681098938
    2. 'letter' → logprob: -1.337299108505249
    3. '_' → logprob: -2.212299108505249
    4. ''' → logprob: -2.962299108505249
    5. '_letter' → logprob: -3.587299108505249
    6. ' 
' → logprob: -3.962299108505249
    7. '`' → logprob: -4.087299346923828
    8. ')' → logprob: -4.087299346923828
    9. ' ' → logprob: -4.587299346923828
    10. '
' → logprob: -4.712299346923828

Token 791: ' each' (ID: 2454)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09946034103631973
    2. '[i' → logprob: -2.8494603633880615
    3. 'for' → logprob: -4.724460124969482
    4. ':
' → logprob: -4.974460124969482
    5. ' for' → logprob: -5.724460124969482
    6. ')' → logprob: -6.099460124969482
    7. '):' → logprob: -6.099460124969482
    8. ',' → logprob: -6.349460124969482
    9. '.' → logprob: -6.349460124969482
    10. '[' → logprob: -6.724460124969482

Token 792: ' time' (ID: 1058)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.21438243985176086
    2. ' is' → logprob: -2.8393824100494385
    3. 'not' → logprob: -3.2143824100494385
    4. ':' → logprob: -4.089382648468018
    5. ' ' → logprob: -4.339382648468018
    6. ' for' → logprob: -4.589382648468018
    7. ' to' → logprob: -4.839382648468018
    8. '.' → logprob: -4.964382648468018
    9. 'for' → logprob: -5.589382648468018
    10. ' i' → logprob: -5.714382648468018

Token 793: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20826786756515503
    2. '
' → logprob: -1.7082679271697998
    3. ' for' → logprob: -5.708267688751221
    4. '\n' → logprob: -5.958267688751221
    5. ':' → logprob: -7.958267688751221
    6. ':
' → logprob: -8.708268165588379
    7. '```' → logprob: -8.708268165588379
    8. '

' → logprob: -9.458268165588379
    9. '
' → logprob: -9.958268165588379
    10. '\' → logprob: -10.833268165588379

Token 794: ' correct' (ID: 6145)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06055258959531784
    2. ''\' → logprob: -3.9355525970458984
    3. ' guaranteed' → logprob: -4.685552597045898
    4. ' correct' → logprob: -5.310552597045898
    5. '\r' → logprob: -5.435552597045898
    6. '\' → logprob: -5.685552597045898
    7. ' sufficient' → logprob: -5.810552597045898
    8. ' valid' → logprob: -5.935552597045898
    9. 's' → logprob: -6.060552597045898
    10. ''' → logprob: -6.310552597045898

Token 795: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028806407004594803
    2. '
' → logprob: -3.653806447982788
    3. '\n' → logprob: -6.778806209564209
    4. ' for' → logprob: -7.403806209564209
    5. '```' → logprob: -7.903806209564209
    6. '\' → logprob: -9.153806686401367
    7. '#' → logprob: -10.278806686401367
    8. '

' → logprob: -10.403806686401367
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.653806686401367
    10. '``' → logprob: -10.903806686401367

Token 796: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008462806232273579
    2. '```' → logprob: -4.883462905883789
    3. '
' → logprob: -7.633462905883789
    4. ' for' → logprob: -8.133462905883789
    5. '``' → logprob: -10.383462905883789
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -11.383462905883789
    7. '\n' → logprob: -11.508462905883789
    8. 'a' → logprob: -11.883462905883789
    9. '#' → logprob: -12.758462905883789
    10. 'i' → logprob: -13.133462905883789

Token 797: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2872965931892395
    2. '=' → logprob: -1.4122965335845947
    3. 'ult' → logprob: -5.412296772003174
    4. 's' → logprob: -7.787296772003174
    5. '[]' → logprob: -8.162296295166016
    6. '[' → logprob: -8.412296295166016
    7. 'ault' → logprob: -8.912296295166016
    8. ' ' → logprob: -8.912296295166016
    9. '[:]' → logprob: -9.412296295166016
    10. ']' → logprob: -9.537296295166016

Token 798: ' assigned' (ID: 21482)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8425998091697693
    2. 'assigned' → logprob: -1.342599868774414
    3. '[]' → logprob: -1.592599868774414
    4. '["' → logprob: -2.717599868774414
    5. '[' → logprob: -3.592599868774414
    6. '""' → logprob: -4.967599868774414
    7. '''' → logprob: -6.467599868774414
    8. '[a' → logprob: -6.717599868774414
    9. 'a' → logprob: -7.967599868774414
    10. ' assigned' → logprob: -8.092599868774414

Token 799: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037456906866282225
    2. ')' → logprob: -5.7537455558776855
    3. ')]' → logprob: -7.6287455558776855
    4. ']

' → logprob: -10.128746032714844
    5. ']
' → logprob: -10.378746032714844
    6. ' ]' → logprob: -12.378746032714844
    7. ']
' → logprob: -13.503746032714844
    8. '])' → logprob: -13.503746032714844
    9. '()]' → logprob: -13.878746032714844
    10. '']' → logprob: -14.378746032714844

Token 801: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.735893965815194e-05
    2. ' for' → logprob: -11.000017166137695
    3. '```' → logprob: -14.875017166137695
    4. '
' → logprob: -15.125017166137695
    5. 'i' → logprob: -17.875017166137695
    6. '``' → logprob: -19.500017166137695
    7. '	for' → logprob: -20.250017166137695
    8. 'f' → logprob: -20.875017166137695
    9. '`' → logprob: -21.125017166137695
    10. 'def' → logprob: -21.750017166137695

Token 802: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759684443473816
    2. 'i' → logprob: -0.8259684443473816
    3. '_' → logprob: -11.200968742370605
    4. '_i' → logprob: -11.575968742370605
    5. ' _' → logprob: -13.075968742370605
    6. ' node' → logprob: -13.825968742370605
    7. '	i' → logprob: -13.825968742370605
    8. ' ' → logprob: -14.200968742370605
    9. '`' → logprob: -15.075968742370605
    10. 'node' → logprob: -15.200968742370605

Token 803: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038051363080739975
    2. 'in' → logprob: -3.2880513668060303
    3. ' ' → logprob: -12.03805160522461
    4. '	in' → logprob: -13.66305160522461
    5. ',' → logprob: -13.91305160522461
    6. ' i' → logprob: -15.16305160522461
    7. 'import' → logprob: -15.53805160522461
    8. 'range' → logprob: -15.66305160522461
    9. '  ' → logprob: -15.66305160522461
    10. ')' → logprob: -16.16305160522461

Token 804: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. 'ran' → logprob: -19.87507438659668
    4. '(range' → logprob: -19.87507438659668
    5. 'r' → logprob: -20.37507438659668
    6. ' ' → logprob: -21.12507438659668
    7. 'rang' → logprob: -21.37507438659668
    8. '	range' → logprob: -21.75007438659668
    9. '   ' → logprob: -21.87507438659668
    10. '`' → logprob: -22.50007438659668

Token 805: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -7.64839569455944e-05
    2. '(' → logprob: -9.500076293945312
    3. 'V' → logprob: -14.125076293945312
    4. '(len' → logprob: -14.375076293945312
    5. '(
' → logprob: -16.250076293945312
    6. ' (' → logprob: -16.625076293945312
    7. '   ' → logprob: -18.000076293945312
    8. ',' → logprob: -18.000076293945312
    9. '(i' → logprob: -18.500076293945312
    10. '((' → logprob: -18.750076293945312

Token 806: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11297862231731415
    2. '):' → logprob: -2.23797869682312
    3. '):
' → logprob: -9.1129789352417
    4. ':' → logprob: -10.6129789352417
    5. ')' → logprob: -12.1129789352417
    6. ':
' → logprob: -12.2379789352417
    7. '):

' → logprob: -12.8629789352417
    8. ' ):
' → logprob: -12.9879789352417
    9. '   ' → logprob: -13.1129789352417
    10. ']:
' → logprob: -13.7379789352417

Token 807: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003813376184552908
    2. 'if' → logprob: -5.75381326675415
    3. ' if' → logprob: -7.37881326675415
    4. '   ' → logprob: -11.878813743591309
    5. '	if' → logprob: -12.753813743591309
    6. ' ' → logprob: -14.378813743591309
    7. '    
' → logprob: -15.378813743591309
    8. '  ' → logprob: -15.753813743591309
    9. '   ' → logprob: -15.753813743591309
    10. '       ' → logprob: -16.503812789916992

Token 808: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35201188921928406
    2. 'if' (adapté à ' if') → logprob: -1.6020119190216064
    3. ' if' → logprob: -2.3520119190216064
    4. '	if' → logprob: -9.852011680603027
    5. '   ' → logprob: -12.602011680603027
    6. ' ' → logprob: -12.977011680603027
    7. '       ' → logprob: -14.852011680603027
    8. '  ' → logprob: -14.977011680603027
    9. '    
' → logprob: -14.977011680603027
    10. '    ' → logprob: -15.352011680603027

Token 809: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008709237910807133
    2. ' res' → logprob: -5.38370943069458
    3. 'assigned' → logprob: -5.63370943069458
    4. ' assigned' → logprob: -7.63370943069458
    5. '   ' → logprob: -11.133708953857422
    6. '	res' → logprob: -12.133708953857422
    7. ' ' → logprob: -13.633708953857422
    8. '  ' → logprob: -16.633708953857422
    9. 'reserved' → logprob: -17.008708953857422
    10. '(res' → logprob: -17.133708953857422

Token 810: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -14.000001907348633
    3. '[' → logprob: -14.125001907348633
    4. 'i' → logprob: -15.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '[
' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ' i' → logprob: -18.750001907348633
    9. '[I' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.125001907348633

Token 811: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08536291122436523
    2. ']' → logprob: -2.5853629112243652
    3. 'is' → logprob: -5.335362911224365
    4. '==' → logprob: -7.085362911224365
    5. ']==' → logprob: -7.960362911224365
    6. ')' → logprob: -8.210363388061523
    7. ' ]' → logprob: -9.335363388061523
    8. ' ==' → logprob: -9.835363388061523
    9. '[' → logprob: -10.835363388061523
    10. ' ' → logprob: -11.960363388061523

Token 812: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20226627588272095
    2. ' is' → logprob: -1.7022662162780762
    3. '==' → logprob: -7.077266216278076
    4. ' ==' → logprob: -12.202266693115234
    5. ')' → logprob: -13.702266693115234
    6. '	is' → logprob: -14.327266693115234
    7. '=' → logprob: -14.702266693115234
    8. '[' → logprob: -14.702266693115234
    9. 'in' → logprob: -14.952266693115234
    10. ' ' → logprob: -15.077266693115234

Token 813: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019287518225610256
    2. ' None' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.376928329467773
    4. '_None' → logprob: -17.251928329467773
    5. '=None' → logprob: -17.876928329467773
    6. '(None' → logprob: -18.751928329467773
    7. '   ' → logprob: -18.751928329467773
    8. 'none' → logprob: -20.626928329467773
    9. '_none' → logprob: -20.876928329467773
    10. '  ' → logprob: -21.001928329467773

Token 814: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.676292231422849e-05
    2. ' None' → logprob: -11.000017166137695
    3. '(None' → logprob: -18.000017166137695
    4. '   ' → logprob: -18.625017166137695
    5. '_None' → logprob: -18.750017166137695
    6. 'N' → logprob: -20.500017166137695
    7. ' ' → logprob: -20.875017166137695
    8. 'not' → logprob: -21.125017166137695
    9. '=None' → logprob: -21.375017166137695
    10. '
' → logprob: -21.625017166137695

Token 815: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2222657948732376
    2. '       ' → logprob: -1.7222658395767212
    3. ' continue' → logprob: -4.847265720367432
    4. ':
' → logprob: -5.222265720367432
    5. '   ' → logprob: -5.972265720367432
    6. 'continue' → logprob: -5.972265720367432
    7. '	continue' → logprob: -6.347265720367432
    8. ' continues' → logprob: -8.97226619720459
    9. '	' → logprob: -9.09726619720459
    10. '     ' → logprob: -10.22226619720459

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036365609616041183
    2. ' continue' → logprob: -3.786365509033203
    3. '   ' → logprob: -4.786365509033203
    4. '    ' → logprob: -7.286365509033203
    5. 'continue' → logprob: -7.411365509033203
    6. '	continue' → logprob: -7.411365509033203
    7. '    
' → logprob: -7.536365509033203
    8. ' continues' → logprob: -7.786365509033203
    9. '        
' → logprob: -8.036365509033203
    10. ' ' → logprob: -8.036365509033203

Token 817: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5977956652641296
    2. ' continue' → logprob: -0.8477956652641296
    3. '   ' → logprob: -4.472795486450195
    4. '       ' → logprob: -4.847795486450195
    5. '	continue' → logprob: -6.097795486450195
    6. 'contin' → logprob: -9.722795486450195
    7. 'continu' → logprob: -11.347795486450195
    8. ' ' → logprob: -11.972795486450195
    9. ' continu' → logprob: -12.097795486450195
    10. ' continues' → logprob: -12.222795486450195

Token 818: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03378976881504059
    2. '
' → logprob: -3.658789873123169
    3. '    
' → logprob: -5.40878963470459
    4. 'for' → logprob: -7.03378963470459
    5. ' forbidden' → logprob: -7.03378963470459
    6. '  
' → logprob: -7.90878963470459
    7. '   
' → logprob: -8.53378963470459
    8. '   ' → logprob: -8.90878963470459
    9. ' 
' → logprob: -9.15878963470459
    10. ' for' → logprob: -9.65878963470459

Token 819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00968290213495493
    2. '    
' → logprob: -5.759683132171631
    3. 'for' → logprob: -6.009683132171631
    4. '
' → logprob: -6.134683132171631
    5. ' forbidden' → logprob: -7.259683132171631
    6. '  
' → logprob: -8.259682655334473
    7. '   
' → logprob: -9.009682655334473
    8. '   ' → logprob: -9.134682655334473
    9. ' for' → logprob: -9.259682655334473
    10. '  ' → logprob: -9.259682655334473

Token 820: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04163607582449913
    2. '   ' → logprob: -3.2916359901428223
    3. 'used' → logprob: -6.041635990142822
    4. 'neighbor' → logprob: -7.041635990142822
    5. ' forbidden' → logprob: -8.79163646697998
    6. 'neighbors' → logprob: -9.04163646697998
    7. ' for' → logprob: -10.91663646697998
    8. ' used' → logprob: -11.66663646697998
    9. 'ne' → logprob: -11.79163646697998
    10. '    
' → logprob: -11.91663646697998

Token 821: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602986603975296
    2. '=' → logprob: -1.9102987051010132
    3. '=set' → logprob: -9.660298347473145
    4. '_letters' → logprob: -12.035298347473145
    5. 's' → logprob: -13.785298347473145
    6. '_' → logprob: -13.785298347473145
    7. '_set' → logprob: -13.910298347473145
    8. ' ' → logprob: -14.410298347473145
    9. '   ' → logprob: -14.910298347473145
    10. '	' → logprob: -15.660298347473145

Token 822: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018154622986912727
    2. '{' → logprob: -4.018154621124268
    3. '{s' → logprob: -13.018155097961426
    4. ' set' → logprob: -13.268155097961426
    5. '{
' → logprob: -14.393155097961426
    6. ' {' → logprob: -15.893155097961426
    7. '{i' → logprob: -17.26815414428711
    8. '=set' → logprob: -17.64315414428711
    9. '	set' → logprob: -17.89315414428711
    10. '{sub' → logprob: -18.01815414428711

Token 823: '()
' (ID: 1234)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.30781880021095276
    2. '(' → logprob: -2.43281888961792
    3. '()' → logprob: -2.43281888961792
    4. '(graph' → logprob: -2.93281888961792
    5. '()
' → logprob: -4.18281888961792
    6. '([' → logprob: -4.18281888961792
    7. '(
' → logprob: -5.55781888961792
    8. '(chr' → logprob: -7.93281888961792
    9. '(ord' → logprob: -8.057818412780762
    10. '(c' → logprob: -8.057818412780762

Token 824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018968674121424556
    2. 'for' → logprob: -6.751896858215332
    3. ' for' → logprob: -7.251896858215332
    4. '       ' → logprob: -11.626896858215332
    5. '	for' → logprob: -12.376896858215332
    6. '    
' → logprob: -12.626896858215332
    7. '   ' → logprob: -15.001896858215332
    8. '
' → logprob: -15.251896858215332
    9. ' ' → logprob: -15.501896858215332
    10. '  ' → logprob: -15.876896858215332

Token 825: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004153549205511808
    2. '   ' → logprob: -5.504153728485107
    3. ' for' → logprob: -9.50415325164795
    4. '	for' → logprob: -14.37915325164795
    5. '    
' → logprob: -17.254154205322266
    6. ' ' → logprob: -18.129154205322266
    7. '       ' → logprob: -18.129154205322266
    8. '  ' → logprob: -18.379154205322266
    9. '
' → logprob: -18.754154205322266
    10. '  
' → logprob: -20.504154205322266

Token 826: ' nb' (ID: 28791)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.2266007661819458
    2. 'nei' → logprob: -1.4766007661819458
    3. 'n' → logprob: -1.7266007661819458
    4. 'neighbor' → logprob: -1.9766007661819458
    5. 'nbr' → logprob: -2.2266006469726562
    6. 'nv' → logprob: -4.476600646972656
    7. 'ne' → logprob: -4.476600646972656
    8. 'j' → logprob: -4.726600646972656
    9. 'nb' → logprob: -4.726600646972656
    10. 'v' → logprob: -5.226600646972656

Token 827: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34854018688201904
    2. 'in' → logprob: -1.223540186882019
    3. ' ' → logprob: -9.598540306091309
    4. '	in' → logprob: -11.223540306091309
    5. '  ' → logprob: -12.723540306091309
    6. '   ' → logprob: -13.098540306091309
    7. 'n' → logprob: -13.348540306091309
    8. 'i' → logprob: -13.723540306091309
    9. ' ' → logprob: -13.973540306091309
    10. '_' → logprob: -14.223540306091309

Token 828: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -7.941850526549388e-06
    2. ' graph' → logprob: -11.750007629394531
    3. '(graph' → logprob: -19.37500762939453
    4. '	graph' → logprob: -20.50000762939453
    5. 'graphql' → logprob: -24.12500762939453
    6. '   ' → logprob: -24.50000762939453
    7. 'raph' → logprob: -24.50000762939453
    8. 'graphic' → logprob: -24.62500762939453
    9. 'Graph' → logprob: -25.50000762939453
    10. '.graph' → logprob: -25.75000762939453

Token 829: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.50000286102295
    3. 'i' → logprob: -14.00000286102295
    4. ' [' → logprob: -14.50000286102295
    5. '[s' → logprob: -15.62500286102295
    6. 's' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '[
' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '```' → logprob: -18.375003814697266

Token 830: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10230013728141785
    2. ']:
' → logprob: -2.3523001670837402
    3. ']' → logprob: -6.60230016708374
    4. ']):' → logprob: -8.477299690246582
    5. '):' → logprob: -8.977299690246582
    6. '):
' → logprob: -9.227299690246582
    7. ']:
' → logprob: -9.352299690246582
    8. ']):
' → logprob: -9.727299690246582
    9. '   ' → logprob: -9.852299690246582
    10. ':' → logprob: -10.227299690246582

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01938082091510296
    2. 'if' → logprob: -4.019381046295166
    3. ' if' → logprob: -6.769381046295166
    4. '   ' → logprob: -9.519380569458008
    5. '```' → logprob: -12.519380569458008
    6. '	   ' → logprob: -13.644380569458008
    7. '
' → logprob: -13.894380569458008
    8. 'for' → logprob: -13.894380569458008
    9. '	if' → logprob: -14.394380569458008
    10. '           ' → logprob: -15.644380569458008

Token 832: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0025883850175887346
    2. 'c' → logprob: -6.502588272094727
    3. '   ' → logprob: -7.627588272094727
    4. 'letter' → logprob: -8.002588272094727
    5. 'ch' → logprob: -9.127588272094727
    6. ' if' → logprob: -9.252588272094727
    7. 'l' → logprob: -10.877588272094727
    8. 'res' → logprob: -11.252588272094727
    9. 'x' → logprob: -12.127588272094727
    10. 'f' → logprob: -12.127588272094727

Token 833: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.60414821645827e-06
    2. ' res' → logprob: -12.500004768371582
    3. 'assigned' → logprob: -14.250004768371582
    4. '
' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '	res' → logprob: -17.875003814697266
    7. '(res' → logprob: -18.125003814697266
    8. '
' → logprob: -18.375003814697266
    9. '    
' → logprob: -18.625003814697266
    10. 'ress' → logprob: -18.750003814697266

Token 834: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '[i' → logprob: -14.875000953674316
    4. ' [' → logprob: -15.250000953674316
    5. '   ' → logprob: -16.625001907348633
    6. '][' → logprob: -16.750001907348633
    7. '[
' → logprob: -17.750001907348633
    8. '[int' → logprob: -17.750001907348633
    9. '[node' → logprob: -18.000001907348633
    10. 'nb' → logprob: -18.125001907348633

Token 835: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -1.259079363080673e-05
    2. ' nb' → logprob: -11.875012397766113
    3. '[' → logprob: -12.500012397766113
    4. '	nb' → logprob: -14.125012397766113
    5. '(nb' → logprob: -14.625012397766113
    6. 'i' → logprob: -15.375012397766113
    7. '_nb' → logprob: -15.375012397766113
    8. '   ' → logprob: -16.75001335144043
    9. '```' → logprob: -17.87501335144043
    10. '][' → logprob: -18.00001335144043

Token 836: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022090699523687363
    2. ' is' → logprob: -4.147090911865234
    3. 'is' → logprob: -5.147090911865234
    4. ']!=' → logprob: -8.772090911865234
    5. ' ]' → logprob: -10.522090911865234
    6. ']:' → logprob: -11.397090911865234
    7. ']:
' → logprob: -11.897090911865234
    8. ' ' → logprob: -12.522090911865234
    9. '']' → logprob: -12.772090911865234
    10. ')' → logprob: -12.897090911865234

Token 837: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2521030902862549
    2. 'is' → logprob: -1.5021030902862549
    3. '!=' → logprob: -9.252102851867676
    4. ')' → logprob: -9.752102851867676
    5. 'not' → logprob: -12.627102851867676
    6. ']' → logprob: -13.002102851867676
    7. ' ' → logprob: -13.002102851867676
    8. 'in' → logprob: -13.127102851867676
    9. ':' → logprob: -13.127102851867676
    10. ' not' → logprob: -13.377102851867676

Token 838: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.026449497789144516
    2. ' not' → logprob: -3.65144944190979
    3. '
' → logprob: -10.401449203491211
    4. 'n' → logprob: -10.651449203491211
    5. '   ' → logprob: -11.026449203491211
    6. '!' → logprob: -11.151449203491211
    7. 'None' → logprob: -11.276449203491211
    8. ' ' → logprob: -11.901449203491211
    9. 'n't' → logprob: -12.151449203491211
    10. 'Not' → logprob: -12.526449203491211

Token 839: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.4391956685576588e-05
    2. ' None' → logprob: -10.625024795532227
    3. '(None' → logprob: -16.875024795532227
    4. '_None' → logprob: -16.875024795532227
    5. '=None' → logprob: -17.625024795532227
    6. 'not' → logprob: -19.000024795532227
    7. '   ' → logprob: -19.250024795532227
    8. '.None' → logprob: -20.000024795532227
    9. '```' → logprob: -20.000024795532227
    10. '...' → logprob: -20.125024795532227

Token 840: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32506319880485535
    2. ':
' → logprob: -1.7000632286071777
    3. '       ' → logprob: -2.9500632286071777
    4. '           ' → logprob: -4.700063228607178
    5. '):
' → logprob: -4.950063228607178
    6. '):' → logprob: -4.950063228607178
    7. 'and' → logprob: -5.075063228607178
    8. ' and' → logprob: -5.825063228607178
    9. '   ' → logprob: -5.950063228607178
    10. ',' → logprob: -6.075063228607178

Token 841: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00385102815926075
    2. '           ' → logprob: -5.753850936889648
    3. '
' → logprob: -8.878850936889648
    4. '   ' → logprob: -8.878850936889648
    5. '        
' → logprob: -9.253850936889648
    6. '	   ' → logprob: -9.753850936889648
    7. '```' → logprob: -9.753850936889648
    8. ',' → logprob: -10.628850936889648
    9. '	       ' → logprob: -11.003850936889648
    10. '    ' → logprob: -11.003850936889648

Token 842: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003402524860575795
    2. ' forbidden' → logprob: -5.7534027099609375
    3. '   ' → logprob: -8.753402709960938
    4. ' for' → logprob: -9.753402709960938
    5. 'bidden' → logprob: -13.503402709960938
    6. '
' → logprob: -13.753402709960938
    7. '           ' → logprob: -13.878402709960938
    8. 'Forbidden' → logprob: -14.003402709960938
    9. ' forb' → logprob: -14.003402709960938
    10. '```' → logprob: -14.628402709960938

Token 843: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.10024646669626236
    2. '.' → logprob: -2.3502464294433594
    3. ' .' → logprob: -10.22524642944336
    4. '   ' → logprob: -13.60024642944336
    5. 'add' → logprob: -14.72524642944336
    6. '.append' → logprob: -14.97524642944336
    7. '.Add' → logprob: -15.22524642944336
    8. '           ' → logprob: -15.35024642944336
    9. '.dis' → logprob: -15.35024642944336
    10. ' ' → logprob: -15.60024642944336

Token 844: '(res' (ID: 8331)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.6060808522743173e-05
    2. ' res' → logprob: -11.250025749206543
    3. '(res' → logprob: -11.250025749206543
    4. 'ord' → logprob: -17.75002670288086
    5. '	res' → logprob: -18.12502670288086
    6. '$res' → logprob: -19.12502670288086
    7. '_res' → logprob: -19.25002670288086
    8. 'resc' → logprob: -19.87502670288086
    9. 'ress' → logprob: -20.50002670288086
    10. 'r' → logprob: -21.12502670288086

Token 845: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. '[
' → logprob: -13.250007629394531
    3. ')[' → logprob: -13.500007629394531
    4. '```' → logprob: -13.750007629394531
    5. ' [' → logprob: -13.875007629394531
    6. ')' → logprob: -14.125007629394531
    7. '][' → logprob: -15.125007629394531
    8. '[n' → logprob: -15.125007629394531
    9. '`' → logprob: -15.375007629394531
    10. '
' → logprob: -15.625007629394531

Token 846: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.0008335703751072288
    2. '[' → logprob: -7.125833511352539
    3. ' nb' → logprob: -10.875833511352539
    4. '_nb' → logprob: -12.500833511352539
    5. '	nb' → logprob: -12.500833511352539
    6. '(nb' → logprob: -13.125833511352539
    7. ']' → logprob: -14.750833511352539
    8. '```' → logprob: -16.12583351135254
    9. 'i' → logprob: -16.50083351135254
    10. '.nb' → logprob: -16.75083351135254

Token 847: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002192137064412236
    2. '])
' → logprob: -6.25219202041626
    3. '   ' → logprob: -9.127192497253418
    4. '[i' → logprob: -10.377192497253418
    5. ' ])' → logprob: -10.502192497253418
    6. ']' → logprob: -11.002192497253418
    7. ''])' → logprob: -11.002192497253418
    8. '       ' → logprob: -11.377192497253418
    9. ')])' → logprob: -11.377192497253418
    10. ')' → logprob: -11.502192497253418

Token 848: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026637211441993713
    2. ' for' → logprob: -3.901637315750122
    3. 'for' → logprob: -5.401637077331543
    4. '
' → logprob: -6.776637077331543
    5. '    
' → logprob: -8.026637077331543
    6. '```' → logprob: -10.151637077331543
    7. ' 
' → logprob: -11.151637077331543
    8. '       ' → logprob: -12.151637077331543
    9. '	for' → logprob: -12.276637077331543
    10. '    ' → logprob: -12.276637077331543

Token 849: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0589133501052856
    2. ' for' → logprob: -1.0589133501052856
    3. 'for' (adapté à ' for') → logprob: -1.1839133501052856
    4. '
' → logprob: -9.183913230895996
    5. '    
' → logprob: -9.808913230895996
    6. '```' → logprob: -10.058913230895996
    7. '	for' → logprob: -10.683913230895996
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -12.433913230895996
    9. '   ' → logprob: -12.558913230895996
    10. ' 
' → logprob: -13.121413230895996

Token 850: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004766765050590038
    2. 'ch' → logprob: -5.754766941070557
    3. 'j' → logprob: -6.754766941070557
    4. 'l' → logprob: -8.129766464233398
    5. ' c' → logprob: -9.379766464233398
    6. 'x' → logprob: -11.129766464233398
    7. 'letter' → logprob: -11.629766464233398
    8. 'k' → logprob: -12.129766464233398
    9. '_c' → logprob: -12.754766464233398
    10. 'ord' → logprob: -12.879766464233398

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05494525283575058
    2. 'in' → logprob: -2.929945230484009
    3. ' ' → logprob: -10.17994499206543
    4. 'a' → logprob: -12.30494499206543
    5. 'n' → logprob: -12.30494499206543
    6. '  ' → logprob: -12.80494499206543
    7. '	in' → logprob: -13.17994499206543
    8. '   ' → logprob: -13.55494499206543
    9. 's' → logprob: -13.55494499206543
    10. 'range' → logprob: -13.92994499206543

Token 852: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17444883286952972
    2. '"' → logprob: -2.4244487285614014
    3. ''' → logprob: -2.6744487285614014
    4. ' range' → logprob: -6.4244489669799805
    5. 'map' → logprob: -7.7994489669799805
    6. ''r' → logprob: -8.42444896697998
    7. ''s' → logprob: -9.29944896697998
    8. 'chr' → logprob: -9.67444896697998
    9. '(range' → logprob: -9.92444896697998
    10. ''re' → logprob: -10.04944896697998

Token 853: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.676981345459353e-06
    2. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -12.250005722045898
    3. 'abcdefghijkl' → logprob: -14.625005722045898
    4. 'abcdefgh' → logprob: -15.750005722045898
    5. 'abc' → logprob: -15.875005722045898
    6. 'abcdef' → logprob: -17.0000057220459
    7. 'a' → logprob: -17.8750057220459
    8. ' abc' → logprob: -17.8750057220459
    9. ''' → logprob: -18.7500057220459
    10. 'ab' → logprob: -20.5000057220459

Token 854: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5152961611747742
    2. '':' → logprob: -1.015296220779419
    3. ':' → logprob: -3.265296220779419
    4. ':
' → logprob: -6.76529598236084
    5. ''' → logprob: -7.39029598236084
    6. '':
' → logprob: -8.89029598236084
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.26529598236084
    8. '':'' → logprob: -9.76529598236084
    9. '":' → logprob: -10.14029598236084
    10. ''):
' → logprob: -10.51529598236084

Token 855: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018881915137171745
    2. ':' → logprob: -4.518881797790527
    3. '   ' → logprob: -5.268881797790527
    4. ' if' → logprob: -6.518881797790527
    5. '<|end|>' → logprob: -7.268881797790527
    6. 'if' → logprob: -8.268881797790527
    7. ':
' → logprob: -10.518881797790527
    8. '[' → logprob: -10.768881797790527
    9. '           ' → logprob: -10.893881797790527
    10. '      ' → logprob: -11.018881797790527

Token 856: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9868010878562927
    2. ' if' → logprob: -1.2368011474609375
    3. '       ' → logprob: -1.6118011474609375
    4. '   ' → logprob: -1.9868011474609375
    5. '	if' → logprob: -8.986801147460938
    6. '           ' → logprob: -10.361801147460938
    7. ':' → logprob: -10.736801147460938
    8. ' ' → logprob: -10.736801147460938
    9. '[' → logprob: -11.361801147460938
    10. '<|end|>' → logprob: -11.361801147460938

Token 857: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170460251159966
    2. ' c' → logprob: -6.751170635223389
    3. '	c' → logprob: -15.75117015838623
    4. '   ' → logprob: -16.626171112060547
    5. ' ' → logprob: -18.376171112060547
    6. 'not' → logprob: -19.251171112060547
    7. '       ' → logprob: -19.376171112060547
    8. ')c' → logprob: -19.376171112060547
    9. ' ' → logprob: -19.626171112060547
    10. '
' → logprob: -20.251171112060547

Token 858: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03805767372250557
    2. 'not' → logprob: -3.288057565689087
    3. ')' → logprob: -11.163057327270508
    4. '	not' → logprob: -13.788057327270508
    5. ' no' → logprob: -14.788057327270508
    6. ' ' → logprob: -15.538057327270508
    7. '_not' → logprob: -16.038057327270508
    8. '<|end|>' → logprob: -16.413057327270508
    9. ':not' → logprob: -16.788057327270508
    10. '       ' → logprob: -16.913057327270508

Token 859: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1505327820777893
    2. ' in' → logprob: -2.1505327224731445
    3. 'for' → logprob: -3.7755327224731445
    4. '<|end|>' → logprob: -8.650532722473145
    5. ')' → logprob: -9.900532722473145
    6. ' for' → logprob: -9.900532722473145
    7. ' forbidden' → logprob: -10.400532722473145
    8. '.' → logprob: -10.525532722473145
    9. 'bidden' → logprob: -10.775532722473145
    10. '   ' → logprob: -12.150532722473145

Token 860: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012487331696320325
    2. ' forbidden' → logprob: -9.00012493133545
    3. ' for' → logprob: -13.75012493133545
    4. 'Forbidden' → logprob: -15.25012493133545
    5. '(for' → logprob: -17.625123977661133
    6. '_for' → logprob: -17.625123977661133
    7. 'forced' → logprob: -18.000123977661133
    8. 'bidden' → logprob: -18.000123977661133
    9. '.for' → logprob: -18.500123977661133
    10. 'forgot' → logprob: -18.750123977661133

Token 861: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029765989631414413
    2. ':
' → logprob: -3.529766082763672
    3. '):' → logprob: -11.779766082763672
    4. '):
' → logprob: -13.279766082763672
    5. ':
' → logprob: -13.279766082763672
    6. '       ' → logprob: -14.029766082763672
    7. '=' → logprob: -14.654766082763672
    8. ':

' → logprob: -14.654766082763672
    9. '           ' → logprob: -14.779766082763672
    10. ':return' → logprob: -14.779766082763672

Token 862: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10571283847093582
    2. ':
' → logprob: -2.355712890625
    3. '           ' → logprob: -5.730712890625
    4. '       ' → logprob: -6.480712890625
    5. '):' → logprob: -8.230712890625
    6. 'res' → logprob: -8.480712890625
    7. '):
' → logprob: -9.855712890625
    8. '[' → logprob: -10.105712890625
    9. '   ' → logprob: -10.605712890625
    10. '=' → logprob: -11.480712890625

Token 863: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.001736943726427853
    2. '           ' → logprob: -6.501737117767334
    3. ' res' → logprob: -8.501736640930176
    4. '       ' → logprob: -10.751736640930176
    5. '               ' → logprob: -11.626736640930176
    6. '   ' → logprob: -14.751736640930176
    7. '
' → logprob: -15.501736640930176
    8. '	res' → logprob: -15.626736640930176
    9. '```' → logprob: -16.001737594604492
    10. '          ' → logprob: -16.626737594604492

Token 864: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -12.375009536743164
    3. '```' → logprob: -12.375009536743164
    4. '[I' → logprob: -14.250009536743164
    5. '\[' → logprob: -16.000009536743164
    6. '][' → logprob: -16.250009536743164
    7. '[c' → logprob: -16.375009536743164
    8. 'i' → logprob: -16.500009536743164
    9. '[
' → logprob: -17.250009536743164
    10. '[int' → logprob: -17.250009536743164

Token 865: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03130611404776573
    2. ']' → logprob: -3.531306028366089
    3. ']=' → logprob: -6.906306266784668
    4. '][' → logprob: -7.656306266784668
    5. '[' → logprob: -10.156306266784668
    6. '[
' → logprob: -11.156306266784668
    7. 'i' → logprob: -12.031306266784668
    8. '   ' → logprob: -12.156306266784668
    9. '=' → logprob: -12.906306266784668
    10. '```' → logprob: -12.906306266784668

Token 866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023072600364685
    2. ' =' → logprob: -1.9102307558059692
    3. '[' → logprob: -13.03523063659668
    4. '[i' → logprob: -13.66023063659668
    5. ' =
' → logprob: -14.41023063659668
    6. '=i' → logprob: -14.41023063659668
    7. '＝' → logprob: -15.03523063659668
    8. '=c' → logprob: -15.03523063659668
    9. '=
' → logprob: -15.03523063659668
    10. ']' → logprob: -15.66023063659668

Token 867: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. '	c' → logprob: -19.12507438659668
    4. '(c' → logprob: -21.12507438659668
    5. '`' → logprob: -21.12507438659668
    6. '   ' → logprob: -21.25007438659668
    7. ')c' → logprob: -21.37507438659668
    8. '[c' → logprob: -22.50007438659668
    9. ' ' → logprob: -22.62507438659668
    10. '*c' → logprob: -22.62507438659668

Token 868: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011932267807424068
    2. 'break' → logprob: -4.511932373046875
    3. '		' → logprob: -7.386932373046875
    4. '       ' → logprob: -9.261932373046875
    5. ' break' → logprob: -9.636932373046875
    6. '
' → logprob: -10.261932373046875
    7. '	break' → logprob: -10.386932373046875
    8. '               ' → logprob: -11.011932373046875
    9. '            
' → logprob: -12.261932373046875
    10. '          ' → logprob: -12.886932373046875

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033903829171322286
    2. '		' → logprob: -8.37533950805664
    3. 'break' → logprob: -9.50033950805664
    4. ' break' → logprob: -11.75033950805664
    5. '       ' → logprob: -11.87533950805664
    6. '            
' → logprob: -12.12533950805664
    7. '               ' → logprob: -12.75033950805664
    8. '	break' → logprob: -13.12533950805664
    9. '
' → logprob: -13.25033950805664
    10. '	       ' → logprob: -13.62533950805664

Token 870: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.007155534811317921
    2. '           ' → logprob: -5.257155418395996
    3. ' break' → logprob: -6.257155418395996
    4. '	break' → logprob: -13.007155418395996
    5. '		' → logprob: -14.882155418395996
    6. '
' → logprob: -15.507155418395996
    7. '       ' → logprob: -15.507155418395996
    8. '               ' → logprob: -16.257156372070312
    9. '            
' → logprob: -16.757156372070312
    10. '   ' → logprob: -16.757156372070312

Token 871: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01950194500386715
    2. '<|end|>' → logprob: -4.64450216293335
    3. 'print' → logprob: -5.01950216293335
    4. '```' → logprob: -6.51950216293335
    5. ')' → logprob: -7.76950216293335
    6. '\n' → logprob: -8.144501686096191
    7. '

' → logprob: -8.269501686096191
    8. '  
' → logprob: -8.269501686096191
    9. '#' → logprob: -8.769501686096191
    10. 'for' → logprob: -9.644501686096191

Token 872: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001147006405517459
    2. '
' → logprob: -6.8761467933654785
    3. 'for' → logprob: -9.251147270202637
    4. '```' → logprob: -11.251147270202637
    5. ' print' → logprob: -12.626147270202637
    6. '  
' → logprob: -14.751147270202637
    7. '#' → logprob: -15.001147270202637
    8. '

' → logprob: -15.126147270202637
    9. '
' → logprob: -15.501147270202637
    10. '<|end|>' → logprob: -15.751147270202637

Token 873: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06204969435930252
    2. '("' → logprob: -2.812049627304077
    3. '(' → logprob: -9.437049865722656
    4. '''.' → logprob: -13.312049865722656
    5. '(""' → logprob: -15.187049865722656
    6. '"' → logprob: -15.562049865722656
    7. '('').' → logprob: -15.937049865722656
    8. '(
' → logprob: -16.937049865722656
    9. '(*' → logprob: -17.562049865722656
    10. '("").' → logprob: -17.687049865722656

Token 874: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.34157252311706543
    2. ''.' → logprob: -1.3415725231170654
    3. ''' → logprob: -3.5915725231170654
    4. '''' → logprob: -8.341572761535645
    5. ' ''.' → logprob: -10.341572761535645
    6. '')' → logprob: -10.341572761535645
    7. '').' → logprob: -10.466572761535645
    8. '"' → logprob: -10.841572761535645
    9. '',' → logprob: -13.341572761535645
    10. '```' → logprob: -13.591572761535645

Token 875: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.704273118884885e-07
    2. 'jo' → logprob: -15.375000953674316
    3. 'j' → logprob: -15.500000953674316
    4. ' join' → logprob: -15.750000953674316
    5. '```' → logprob: -16.625
    6. '.join' → logprob: -18.25
    7. '''.' → logprob: -18.375
    8. '
' → logprob: -20.25
    9. '``' → logprob: -20.25
    10. '(join' → logprob: -21.25

Token 876: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.001502598519437015
    2. 'res' → logprob: -6.501502513885498
    3. '$res' → logprob: -15.751502990722656
    4. '	res' → logprob: -16.376502990722656
    5. ',res' → logprob: -17.501502990722656
    6. ')' → logprob: -18.251502990722656
    7. '=res' → logprob: -18.251502990722656
    8. '(' → logprob: -18.251502990722656
    9. ' res' → logprob: -18.626502990722656
    10. '_res' → logprob: -19.126502990722656

Token 877: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759396553039551
    2. '))' → logprob: -0.8259396553039551
    3. '])' → logprob: -16.575939178466797
    4. ')))' → logprob: -16.825939178466797
    5. ')`' → logprob: -17.200939178466797
    6. ')
' → logprob: -17.450939178466797
    7. ''))' → logprob: -17.575939178466797
    8. '})' → logprob: -17.700939178466797
    9. '')' → logprob: -17.825939178466797
    10. '))
' → logprob: -17.825939178466797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 875
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 437
Précision stricte (1ère position): 15.89%
Précision adaptée (1ère position): 16.80%
Précision (top 10): 49.94%
================================================================================
