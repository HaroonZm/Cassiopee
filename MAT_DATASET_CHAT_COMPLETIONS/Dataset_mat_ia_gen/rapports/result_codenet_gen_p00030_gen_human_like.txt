================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import combinations

for line in stdin:
    n, s = map(int, line.split())
    if n == 0 and s == 0:
        break
    count = 0
    for combo in combinations(range(10), n):
        if sum(combo) == s:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.058916591107845306
    2. '.readline' → logprob: -3.3089165687561035
    3. '\n' → logprob: -4.4339165687561035
    4. '.read' → logprob: -6.0589165687561035
    5. 'import' → logprob: -6.3089165687561035
    6. '```' → logprob: -7.0589165687561035
    7. 'newline' → logprob: -7.1839165687561035
    8. '
' → logprob: -7.3089165687561035
    9. ',' → logprob: -7.9339165687561035
    10. '\' → logprob: -7.9339165687561035

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15172699093818665
    2. '.readline' → logprob: -2.4017269611358643
    3. '\n' → logprob: -4.276727199554443
    4. 'for' → logprob: -4.901727199554443
    5. 'import' → logprob: -4.901727199554443
    6. 'print' → logprob: -4.901727199554443
    7. 'newline' → logprob: -5.526727199554443
    8. '```' → logprob: -6.026727199554443
    9. '
' → logprob: -6.151727199554443
    10. '.read' → logprob: -6.651727199554443

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.015410419553518295
    2. ' sys' → logprob: -4.765410423278809
    3. ' io' → logprob: -5.890410423278809
    4. ' math' → logprob: -6.640410423278809
    5. ' typing' → logprob: -7.390410423278809
    6. 'os' → logprob: -7.515410423278809
    7. ' collections' → logprob: -7.640410423278809
    8. ' stdout' → logprob: -8.015410423278809
    9. ' itertools' → logprob: -8.140410423278809
    10. ' subprocess' → logprob: -8.640410423278809

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1270381361246109
    2. 'import' → logprob: -2.1270382404327393
    3. '_import' → logprob: -10.12703800201416
    4. '	import' → logprob: -10.12703800201416
    5. ' ' → logprob: -11.87703800201416
    6. '.' → logprob: -12.12703800201416
    7. '.import' → logprob: -12.37703800201416
    8. ' im' → logprob: -13.12703800201416
    9. '.im' → logprob: -13.50203800201416
    10. '<|end|>' → logprob: -13.50203800201416

Token 8: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.520456075668335
    2. 'count' → logprob: -1.520456075668335
    3. 'com' → logprob: -1.895456075668335
    4. 'per' → logprob: -2.270456075668335
    5. 'group' → logprob: -2.770456075668335
    6. 'is' → logprob: -2.895456075668335
    7. 'import' → logprob: -3.020456075668335
    8. ' permutations' → logprob: -3.270456075668335
    9. 'chain' → logprob: -3.395456075668335
    10. 'cycle' → logprob: -3.520456075668335

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22533543407917023
    2. '\n' → logprob: -2.2253353595733643
    3. '(
' → logprob: -3.1003353595733643
    4. '\' → logprob: -3.8503353595733643
    5. '```' → logprob: -4.475335597991943
    6. 'import' → logprob: -5.850335597991943
    7. '\(' → logprob: -5.975335597991943
    8. '
' → logprob: -6.225335597991943
    9. 'newline' → logprob: -6.350335597991943
    10. 'for' → logprob: -6.475335597991943

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.340568870306015
    2. '\n' → logprob: -2.715568780899048
    3. '\' → logprob: -2.840568780899048
    4. 'import' → logprob: -3.090568780899048
    5. 'data' → logprob: -3.340568780899048
    6. 'def' → logprob: -3.965568780899048
    7. 'n' → logprob: -4.340569019317627
    8. '(' → logprob: -4.340569019317627
    9. '
' → logprob: -4.965569019317627
    10. '```' → logprob: -5.340569019317627

Token 11: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022352905943989754
    2. '  ' → logprob: -4.397352695465088
    3. ' i' → logprob: -5.397352695465088
    4. ' line' → logprob: -5.397352695465088
    5. ' item' → logprob: -8.022353172302246
    6. ' space' → logprob: -8.647353172302246
    7. ' element' → logprob: -9.522353172302246
    8. ' token' → logprob: -10.522353172302246
    9. ' _' → logprob: -11.022353172302246
    10. ' n' → logprob: -11.022353172302246

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1461244523525238
    2. 'in' → logprob: -2.0211243629455566
    3. ' =' → logprob: -7.396124362945557
    4. '<|end|>' → logprob: -7.521124362945557
    5. ' ' → logprob: -7.646124362945557
    6. 'import' → logprob: -8.021124839782715
    7. '(' → logprob: -8.396124839782715
    8. ',' → logprob: -8.521124839782715
    9. '```' → logprob: -9.021124839782715
    10. '[' → logprob: -9.271124839782715

Token 13: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.31359168887138367
    2. ' stdin' → logprob: -1.313591718673706
    3. '(stdin' → logprob: -8.188591957092285
    4. '.stdin' → logprob: -9.938591957092285
    5. 'stdout' → logprob: -13.938591957092285
    6. 'std' → logprob: -14.313591957092285
    7. ' readline' → logprob: -14.313591957092285
    8. 's' → logprob: -14.438591957092285
    9. ' std' → logprob: -14.938591957092285
    10. 'stderr' → logprob: -16.06359100341797

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036084887688048184
    2. ':
' → logprob: -8.500360488891602
    3. '.readline' → logprob: -9.125360488891602
    4. '.' → logprob: -10.875360488891602
    5. ':**' → logprob: -11.625360488891602
    6. '():' → logprob: -12.750360488891602
    7. '):' → logprob: -13.000360488891602
    8. '.readlines' → logprob: -13.125360488891602
    9. ' :' → logprob: -13.375360488891602
    10. '.rstrip' → logprob: -13.500360488891602

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01919654570519924
    2. ' line' → logprob: -5.519196510314941
    3. '    
' → logprob: -5.519196510314941
    4. ' ' → logprob: -5.894196510314941
    5. ' readline' → logprob: -6.019196510314941
    6. ' if' → logprob: -6.269196510314941
    7. ' 
' → logprob: -7.394196510314941
    8. '    ' → logprob: -7.519196510314941
    9. ' token' → logprob: -7.894196510314941
    10. '.strip' → logprob: -8.019196510314941

Token 16: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.26884725689888
    2. ' numbers' → logprob: -2.2688472270965576
    3. ' n' → logprob: -3.2688472270965576
    4. '   ' → logprob: -3.8938472270965576
    5. ' nums' → logprob: -4.018847465515137
    6. ' items' → logprob: -4.518847465515137
    7. 'line' → logprob: -4.768847465515137
    8. ' if' → logprob: -4.893847465515137
    9. ' arr' → logprob: -5.018847465515137
    10. ' pairs' → logprob: -5.268847465515137

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033137653954327106
    2. '=' → logprob: -5.7533135414123535
    3. ' ' → logprob: -9.628314018249512
    4. ',' → logprob: -9.878314018249512
    5. '=int' → logprob: -11.628314018249512
    6. ' ,' → logprob: -12.253314018249512
    7. ')' → logprob: -12.878314018249512
    8. '  ' → logprob: -13.753314018249512
    9. ' =
' → logprob: -15.128314018249512
    10. ' )' → logprob: -15.378314018249512

Token 18: ' s' (ID: 265)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.28373610973358154
    2. 'k' → logprob: -2.408736228942871
    3. ' ' → logprob: -3.033736228942871
    4. '=' → logprob: -3.158736228942871
    5. 'm' → logprob: -3.783736228942871
    6. ' m' → logprob: -3.908736228942871
    7. ' =' → logprob: -5.283736228942871
    8. '*' → logprob: -5.408736228942871
    9. 's' → logprob: -6.658736228942871
    10. 'data' → logprob: -6.658736228942871

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697996199131012
    2. '=' → logprob: -2.1269800662994385
    3. ',' → logprob: -10.50197982788086
    4. ' ' → logprob: -11.75197982788086
    5. '=input' → logprob: -11.75197982788086
    6. 'plit' → logprob: -13.25197982788086
    7. '=line' → logprob: -13.25197982788086
    8. '=int' → logprob: -13.75197982788086
    9. '_' → logprob: -14.37697982788086
    10. ')' → logprob: -14.50197982788086

Token 20: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4987185001373291
    2. ' map' → logprob: -1.248718500137329
    3. 'line' → logprob: -2.373718500137329
    4. 'map' → logprob: -4.37371826171875
    5. ' ' → logprob: -9.99871826171875
    6. ' list' → logprob: -12.12371826171875
    7. '[line' → logprob: -12.24871826171875
    8. '   ' → logprob: -12.37371826171875
    9. ' [' → logprob: -12.62371826171875
    10. '(line' → logprob: -12.74871826171875

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1606108844280243
    2. '(' → logprob: -2.5356109142303467
    3. '(lambda' → logprob: -2.9106109142303467
    4. '(str' → logprob: -4.285610675811768
    5. 'int' → logprob: -8.285611152648926
    6. '[int' → logprob: -8.410611152648926
    7. '<|end|>' → logprob: -8.410611152648926
    8. '<int' → logprob: -9.660611152648926
    9. '```' → logprob: -9.785611152648926
    10. '(eval' → logprob: -10.660611152648926

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4462728798389435
    2. '(line' → logprob: -1.821272850036621
    3. ',line' → logprob: -1.946272850036621
    4. ')' → logprob: -2.946272850036621
    5. '(stdin' → logprob: -7.696272850036621
    6. '(' → logprob: -7.696272850036621
    7. '.readline' → logprob: -8.196272850036621
    8. '#line' → logprob: -8.321272850036621
    9. 'line' → logprob: -8.321272850036621
    10. '),' → logprob: -8.446272850036621

Token 23: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1603032350540161
    2. ' line' → logprob: -1.9103032350540161
    3. '   ' → logprob: -9.785303115844727
    4. ')' → logprob: -11.910303115844727
    5. '(line' → logprob: -12.035303115844727
    6. ' ' → logprob: -12.660303115844727
    7. '	line' → logprob: -12.785303115844727
    8. '    ' → logprob: -13.285303115844727
    9. '=line' → logprob: -14.035303115844727
    10. '[line' → logprob: -14.285303115844727

Token 24: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5083149671554565
    2. '.split' → logprob: -1.0083149671554565
    3. '().' → logprob: -3.508315086364746
    4. '.rstrip' → logprob: -6.008315086364746
    5. '.' → logprob: -6.758315086364746
    6. ').' → logprob: -10.133315086364746
    7. ')' → logprob: -10.883315086364746
    8. ' .' → logprob: -11.383315086364746
    9. 'strip' → logprob: -11.883315086364746
    10. '.readline' → logprob: -12.008315086364746

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3916448950767517
    2. ')' → logprob: -1.2666449546813965
    3. '('' → logprob: -4.0166449546813965
    4. '))' → logprob: -4.1416449546813965
    5. '()))' → logprob: -5.6416449546813965
    6. '()' → logprob: -6.0166449546813965
    7. '(' → logprob: -6.2666449546813965
    8. '(','' → logprob: -8.641644477844238
    9. '(',' → logprob: -9.266644477844238
    10. '')' → logprob: -9.266644477844238

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19332186877727509
    2. '    
' → logprob: -2.943321943283081
    3. '<|end|>' → logprob: -3.568321943283081
    4. ' if' → logprob: -3.693321943283081
    5. ' ' → logprob: -4.193321704864502
    6. ':' → logprob: -4.693321704864502
    7. ' 
' → logprob: -4.943321704864502
    8. '\n' → logprob: -4.943321704864502
    9. '    ' → logprob: -5.318321704864502
    10. '   
' → logprob: -5.443321704864502

Token 27: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3622875511646271
    2. ' if' → logprob: -2.4872875213623047
    3. '    
' → logprob: -2.8622875213623047
    4. 'if' (adapté à ' if') → logprob: -3.1122875213623047
    5. ' 
' → logprob: -4.112287521362305
    6. '```' → logprob: -4.237287521362305
    7. ' ' → logprob: -4.362287521362305
    8. 'for' → logprob: -4.362287521362305
    9. '    ' → logprob: -4.862287521362305
    10. ' for' → logprob: -5.112287521362305

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.030306559056043625
    2. ' not' → logprob: -3.530306577682495
    3. 'n' → logprob: -8.030306816101074
    4. ' ' → logprob: -9.155306816101074
    5. ' s' → logprob: -9.405306816101074
    6. 'not' → logprob: -10.280306816101074
    7. ' ' → logprob: -12.155306816101074
    8. '```' → logprob: -14.030306816101074
    9. '	n' → logprob: -14.280306816101074
    10. '(n' → logprob: -14.530306816101074

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.046340446919202805
    2. '==' → logprob: -3.6713404655456543
    3. ' <' → logprob: -4.046340465545654
    4. ' <=' → logprob: -6.296340465545654
    5. '<' → logprob: -8.171339988708496
    6. ' >' → logprob: -9.421339988708496
    7. '<=' → logprob: -10.171339988708496
    8. ' ' → logprob: -10.421339988708496
    9. '=' → logprob: -10.921339988708496
    10. '   ' → logprob: -11.046339988708496

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542239770293236
    2. ' ' → logprob: -3.8955421447753906
    3. '   ' → logprob: -15.77054214477539
    4. 's' → logprob: -16.02054214477539
    5. '  ' → logprob: -16.39554214477539
    6. '۰' → logprob: -17.52054214477539
    7. '=' → logprob: -17.70804214477539
    8. '    ' → logprob: -18.02054214477539
    9. ' ' → logprob: -18.02054214477539
    10. ' s' → logprob: -18.33304214477539

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024025145103223622
    2. ' ' → logprob: -8.375240325927734
    3. 's' → logprob: -11.625240325927734
    4. 'n' → logprob: -16.000240325927734
    5. '   ' → logprob: -16.000240325927734
    6. '  ' → logprob: -16.250240325927734
    7. '-' → logprob: -17.000240325927734
    8. '```' → logprob: -17.062740325927734
    9. ' s' → logprob: -17.125240325927734
    10. '1' → logprob: -17.312740325927734

Token 32: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01472384762018919
    2. ' and' → logprob: -4.264723777770996
    3. ' :' → logprob: -8.264723777770996
    4. ':
' → logprob: -8.514723777770996
    5. 'and' → logprob: -10.764723777770996
    6. ':return' → logprob: -10.764723777770996
    7. ' or' → logprob: -11.014723777770996
    8. ' ' → logprob: -11.139723777770996
    9. ',' → logprob: -11.514723777770996
    10. '   ' → logprob: -11.764723777770996

Token 33: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.006719759665429592
    2. 's' → logprob: -5.006719589233398
    3. ' ' → logprob: -12.381719589233398
    4. ' ' → logprob: -16.3817195892334
    5. '0' → logprob: -16.6317195892334
    6. '	s' → logprob: -17.8817195892334
    7. '  ' → logprob: -18.5067195892334
    8. '_s' → logprob: -19.1317195892334
    9. '<|end|>' → logprob: -19.2567195892334
    10. ' n' → logprob: -20.0067195892334

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14281849563121796
    2. '==' → logprob: -2.0178184509277344
    3. '<|end|>' → logprob: -9.517818450927734
    4. '=' → logprob: -10.267818450927734
    5. '0' → logprob: -11.392818450927734
    6. ' ' → logprob: -12.017818450927734
    7. '<|end|>' → logprob: -12.017818450927734
    8. ' =' → logprob: -12.267818450927734
    9. ' ' → logprob: -13.017818450927734
    10. '  ' → logprob: -13.517818450927734

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510471045970917
    2. ' ' → logprob: -4.387510299682617
    3. '   ' → logprob: -14.762510299682617
    4. '  ' → logprob: -15.262510299682617
    5. ' ' → logprob: -16.512510299682617
    6. '<|end|>' → logprob: -17.200010299682617
    7. '۰' → logprob: -17.450010299682617
    8. '    ' → logprob: -18.387510299682617
    9. '```' → logprob: -18.825010299682617
    10. '<|end|>' → logprob: -18.825010299682617

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -18.25007438659668
    4. '۰' → logprob: -18.37507438659668
    5. '  ' → logprob: -18.50007438659668
    6. '<|end|>' → logprob: -19.06257438659668
    7. '   ' → logprob: -19.18757438659668
    8. '-' → logprob: -19.31257438659668
    9. '०' → logprob: -19.37507438659668
    10. '1' → logprob: -19.68757438659668

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.111979357432574e-05
    2. ':
' → logprob: -9.62507152557373
    3. '   ' → logprob: -13.12507152557373
    4. ':return' → logprob: -13.25007152557373
    5. ' :' → logprob: -14.12507152557373
    6. '):' → logprob: -15.62507152557373
    7. '       ' → logprob: -16.250070571899414
    8. ':**' → logprob: -17.500070571899414
    9. '():' → logprob: -17.625070571899414
    10. ':\' → logprob: -17.750070571899414

Token 38: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35636499524116516
    2. '       ' → logprob: -1.7313649654388428
    3. ':' → logprob: -2.1063649654388428
    4. ':
' → logprob: -7.356365203857422
    5. '\t' → logprob: -9.106365203857422
    6. '	break' → logprob: -9.606365203857422
    7. '\n' → logprob: -9.856365203857422
    8. '    ' → logprob: -10.231365203857422
    9. '     ' → logprob: -10.356365203857422
    10. ' break' → logprob: -10.481365203857422

Token 39: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06650232523679733
    2. 'break' (adapté à ' break') → logprob: -3.066502332687378
    3. '       ' → logprob: -4.316502094268799
    4. '   ' → logprob: -5.441502094268799
    5. '	break' → logprob: -9.566502571105957
    6. '           ' → logprob: -12.941502571105957
    7. '```' → logprob: -13.566502571105957
    8. ' ' → logprob: -14.066502571105957
    9. '_break' → logprob: -14.691502571105957
    10. 'Break' → logprob: -15.691502571105957

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23799747228622437
    2. '    
' → logprob: -1.9879975318908691
    3. '
' → logprob: -3.237997531890869
    4. '\n' → logprob: -4.237997531890869
    5. '  
' → logprob: -5.487997531890869
    6. '<|end|>' → logprob: -5.612997531890869
    7. '   
' → logprob: -6.112997531890869
    8. '```' → logprob: -6.362997531890869
    9. 'n' → logprob: -6.487997531890869
    10. ' 
' → logprob: -6.737997531890869

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5530208945274353
    2. '   ' → logprob: -1.30302095413208
    3. '```' → logprob: -2.42802095413208
    4. '    
' → logprob: -2.92802095413208
    5. '\n' → logprob: -5.30302095413208
    6. '  
' → logprob: -6.80302095413208
    7. '   
' → logprob: -6.92802095413208
    8. '``' → logprob: -7.67802095413208
    9. '    ' → logprob: -7.92802095413208
    10. '' → logprob: -7.92802095413208

Token 42: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3582872152328491
    2. '
' → logprob: -1.6082872152328491
    3. '    
' → logprob: -3.1082873344421387
    4. '```' → logprob: -4.233287334442139
    5. 'pairs' → logprob: -4.733287334442139
    6. '    ' → logprob: -5.358287334442139
    7. ' 
' → logprob: -5.483287334442139
    8. 'n' → logprob: -5.483287334442139
    9. '   
' → logprob: -5.858287334442139
    10. '     
' → logprob: -6.733287334442139

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037463728338479996
    2. '=' → logprob: -3.537463665008545
    3. ' ' → logprob: -5.537463665008545
    4. '(' → logprob: -6.412463665008545
    5. '_' → logprob: -6.537463665008545
    6. 's' → logprob: -8.287464141845703
    7. '_space' → logprob: -9.162464141845703
    8. '  ' → logprob: -9.787464141845703
    9. '    ' → logprob: -10.162464141845703
    10. 'space' → logprob: -10.287464141845703

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326808333396912
    2. ' ' → logprob: -0.7576808333396912
    3. 'sum' → logprob: -10.257680892944336
    4. ' sum' → logprob: -10.632680892944336
    5. '1' → logprob: -12.132680892944336
    6. 's' → logprob: -12.757680892944336
    7. 'n' → logprob: -13.570180892944336
    8. ' s' → logprob: -13.695180892944336
    9. 'len' → logprob: -14.132680892944336
    10. ' ' → logprob: -14.195180892944336

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007357738213613629
    2. 'sum' → logprob: -7.500735759735107
    3. ' ' → logprob: -9.125736236572266
    4. 'len' → logprob: -10.125736236572266
    5. '1' → logprob: -11.250736236572266
    6. 'comb' → logprob: -12.875736236572266
    7. ' sum' → logprob: -13.000736236572266
    8. 'com' → logprob: -13.000736236572266
    9. '3' → logprob: -13.625736236572266
    10. 's' → logprob: -13.625736236572266

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08307770639657974
    2. '<|end|>' → logprob: -3.0830776691436768
    3. '   ' → logprob: -4.583077907562256
    4. '    
' → logprob: -4.833077907562256
    5. '\n' → logprob: -5.208077907562256
    6. ' 
' → logprob: -6.083077907562256
    7. '  
' → logprob: -6.333077907562256
    8. '\' → logprob: -6.958077907562256
    9. ' ' → logprob: -7.208077907562256
    10. ' for' → logprob: -7.208077907562256

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4573930501937866
    2. '<|end|>' → logprob: -1.8323930501937866
    3. '
' → logprob: -2.082393169403076
    4. '    
' → logprob: -3.457393169403076
    5. ' 
' → logprob: -4.457393169403076
    6. ' ' → logprob: -4.457393169403076
    7. ' for' → logprob: -4.582393169403076
    8. 'for' → logprob: -5.082393169403076
    9. '<|end|>' → logprob: -6.082393169403076
    10. '  
' → logprob: -6.082393169403076

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.43910112977027893
    2. ' for' → logprob: -1.4391010999679565
    3. '   ' → logprob: -3.064101219177246
    4. 'nums' → logprob: -3.439101219177246
    5. 'numbers' → logprob: -4.189101219177246
    6. ' numbers' → logprob: -5.564101219177246
    7. 'arr' → logprob: -5.814101219177246
    8. ' nums' → logprob: -6.064101219177246
    9. 'c' → logprob: -6.314101219177246
    10. 'lst' → logprob: -6.564101219177246

Token 49: ' combo' (ID: 32014)
  Prédit: ' combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combo' → logprob: -1.1675152778625488
    2. ' comb' → logprob: -1.5425152778625488
    3. 'combo' → logprob: -2.042515277862549
    4. ' subset' → logprob: -2.042515277862549
    5. 'comb' → logprob: -2.417515277862549
    6. 'subset' → logprob: -3.167515277862549
    7. 'c' → logprob: -3.792515277862549
    8. ' c' → logprob: -3.917515277862549
    9. 'com' → logprob: -5.292515277862549
    10. ' combination' → logprob: -5.292515277862549

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018302272073924541
    2. 'in' → logprob: -6.376830101013184
    3. 's' → logprob: -9.251830101013184
    4. ' ' → logprob: -11.626830101013184
    5. ',' → logprob: -12.376830101013184
    6. '(' → logprob: -12.376830101013184
    7. '<|end|>' → logprob: -12.501830101013184
    8. ')' → logprob: -12.626830101013184
    9. ' =' → logprob: -13.876830101013184
    10. '    ' → logprob: -14.001830101013184

Token 51: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.10028064250946045
    2. ' combinations' → logprob: -2.35028076171875
    3. '(com' → logprob: -10.35028076171875
    4. ' com' → logprob: -10.35028076171875
    5. ' range' → logprob: -13.10028076171875
    6. 'comb' → logprob: -13.22528076171875
    7. 'range' → logprob: -13.35028076171875
    8. '   ' → logprob: -13.35028076171875
    9. '	com' → logprob: -13.47528076171875
    10. ' list' → logprob: -15.35028076171875

Token 52: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.000018119812012
    3. '(list' → logprob: -15.000018119812012
    4. '(s' → logprob: -15.375018119812012
    5. 'range' → logprob: -15.875018119812012
    6. '(r' → logprob: -16.750017166137695
    7. ' (' → logprob: -17.375017166137695
    8. ' range' → logprob: -17.375017166137695
    9. ')' → logprob: -18.250017166137695
    10. '((' → logprob: -18.500017166137695

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08894994109869003
    2. '(n' → logprob: -2.4639499187469482
    3. '(s' → logprob: -11.963950157165527
    4. '1' → logprob: -13.963950157165527
    5. ' (' → logprob: -13.963950157165527
    6. ' ' → logprob: -14.588950157165527
    7. 'n' → logprob: -15.088950157165527
    8. '   ' → logprob: -15.088950157165527
    9. '(
' → logprob: -15.463950157165527
    10. '(i' → logprob: -15.713950157165527

Token 54: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14735177159309387
    2. 'n' → logprob: -2.0223517417907715
    3. '(' → logprob: -5.6473517417907715
    4. '(n' → logprob: -7.2723517417907715
    5. ' n' → logprob: -8.77235221862793
    6. '   ' → logprob: -9.14735221862793
    7. ' ' → logprob: -10.02235221862793
    8. ')n' → logprob: -10.39735221862793
    9. ',n' → logprob: -10.64735221862793
    10. '	n' → logprob: -10.77235221862793

Token 55: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0012264199322089553
    2. ' ),' → logprob: -6.876226425170898
    3. ',' → logprob: -9.001226425170898
    4. ')' → logprob: -10.376226425170898
    5. '1' → logprob: -12.251226425170898
    6. '   ' → logprob: -12.376226425170898
    7. '0' → logprob: -12.376226425170898
    8. '```' → logprob: -12.626226425170898
    9. ',),' → logprob: -12.751226425170898
    10. ' ,' → logprob: -13.251226425170898

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7609524130821228
    2. 'n' → logprob: -1.2609524726867676
    3. ' s' → logprob: -1.7609524726867676
    4. 's' → logprob: -2.6359524726867676
    5. ' ' → logprob: -6.010952472686768
    6. '5' → logprob: -6.135952472686768
    7. '6' → logprob: -7.760952472686768
    8. '3' → logprob: -7.885952472686768
    9. '7' → logprob: -9.26095199584961
    10. '9' → logprob: -9.88595199584961

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014781296253204346
    2. '):
' → logprob: -4.264781475067139
    3. ' ):' → logprob: -8.01478099822998
    4. '):
' → logprob: -8.88978099822998
    5. ')' → logprob: -9.13978099822998
    6. ':' → logprob: -11.01478099822998
    7. '):

' → logprob: -11.88978099822998
    8. ',' → logprob: -12.38978099822998
    9. ' ):
' → logprob: -12.63978099822998
    10. '   ' → logprob: -12.76478099822998

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18425270915031433
    2. '<|end|>' → logprob: -2.5592527389526367
    3. '    ' → logprob: -3.1842527389526367
    4. '   ' → logprob: -3.8092527389526367
    5. ':' → logprob: -4.684252738952637
    6. ' ' → logprob: -5.059252738952637
    7. '        
' → logprob: -5.934252738952637
    8. '    
' → logprob: -6.434252738952637
    9. '
' → logprob: -6.684252738952637
    10. '<|end|>' → logprob: -6.684252738952637

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4059813320636749
    2. '   ' → logprob: -1.4059813022613525
    3. 'if' (adapté à ' if') → logprob: -3.2809813022613525
    4. '    ' → logprob: -3.9059813022613525
    5. '       ' → logprob: -4.280981540679932
    6. '
' → logprob: -5.530981540679932
    7. ' ' → logprob: -5.530981540679932
    8. 'sum' → logprob: -5.905981540679932
    9. ' s' → logprob: -6.905981540679932
    10. ' sum' → logprob: -7.030981540679932

Token 60: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.07071433961391449
    2. 'sum' → logprob: -2.695714235305786
    3. ' ' → logprob: -7.570714473724365
    4. '    ' → logprob: -9.570713996887207
    5. ' s' → logprob: -9.820713996887207
    6. '=sum' → logprob: -10.195713996887207
    7. '   ' → logprob: -10.445713996887207
    8. '(sum' → logprob: -10.695713996887207
    9. '	sum' → logprob: -11.695713996887207
    10. 's' → logprob: -11.820713996887207

Token 61: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.009945905767381191
    2. '(' → logprob: -4.759945869445801
    3. '(i' → logprob: -7.884945869445801
    4. '(com' → logprob: -8.2599458694458
    5. '(x' → logprob: -8.5099458694458
    6. '(s' → logprob: -9.0099458694458
    7. 'combo' → logprob: -9.1349458694458
    8. '(list' → logprob: -10.0099458694458
    9. '(c' → logprob: -10.0099458694458
    10. '([' → logprob: -10.3849458694458

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02659101039171219
    2. '==' → logprob: -4.276590824127197
    3. ')==' → logprob: -4.776590824127197
    4. ' ==' → logprob: -5.776590824127197
    5. ' )' → logprob: -7.151590824127197
    6. '=' → logprob: -10.776591300964355
    7. ')=' → logprob: -11.901591300964355
    8. 's' → logprob: -13.151591300964355
    9. ' ' → logprob: -13.401591300964355
    10. ')>=' → logprob: -13.526591300964355

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43039101362228394
    2. '==' → logprob: -1.0553910732269287
    3. '=' → logprob: -6.55539083480835
    4. ' =' → logprob: -9.930391311645508
    5. '>=' → logprob: -10.180391311645508
    6. ' <=' → logprob: -10.430391311645508
    7. ' >=' → logprob: -10.680391311645508
    8. ' ' → logprob: -10.680391311645508
    9. ')==' → logprob: -10.805391311645508
    10. '<=' → logprob: -10.930391311645508

Token 64: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03804171830415726
    2. 's' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.163042068481445
    4. ' ' → logprob: -17.038042068481445
    5. '	s' → logprob: -19.163042068481445
    6. '(s' → logprob: -19.288042068481445
    7. '>s' → logprob: -19.538042068481445
    8. '{s' → logprob: -20.038042068481445
    9. '`s' → logprob: -20.288042068481445
    10. '    ' → logprob: -20.413042068481445

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024827925954014063
    2. ':
' → logprob: -6.002482891082764
    3. '       ' → logprob: -13.127482414245605
    4. ':
' → logprob: -13.377482414245605
    5. '):' → logprob: -13.377482414245605
    6. ' :' → logprob: -13.877482414245605
    7. '   ' → logprob: -14.752482414245605
    8. ' and' → logprob: -15.002482414245605
    9. ':

' → logprob: -15.627482414245605
    10. '):
' → logprob: -16.127483367919922

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23352530598640442
    2. '       ' → logprob: -2.108525276184082
    3. ':' → logprob: -2.483525276184082
    4. ':
' → logprob: -6.483525276184082
    5. '
' → logprob: -6.733525276184082
    6. '               ' → logprob: -8.733525276184082
    7. '<|end|>' → logprob: -8.733525276184082
    8. '   ' → logprob: -9.733525276184082
    9. ' :' → logprob: -9.983525276184082
    10. '```' → logprob: -10.108525276184082

Token 67: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -1.1402254104614258
    2. ' count' → logprob: -1.2652254104614258
    3. '       ' → logprob: -1.3902254104614258
    4. '   ' → logprob: -2.765225410461426
    5. '               ' → logprob: -2.765225410461426
    6. '    ' → logprob: -4.140225410461426
    7. '           ' → logprob: -5.515225410461426
    8. ' ' → logprob: -6.390225410461426
    9. '	count' → logprob: -8.015225410461426
    10. '                ' → logprob: -8.390225410461426

Token 68: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030477361753582954
    2. '+=' → logprob: -3.530477285385132
    3. '+' → logprob: -7.280477523803711
    4. ' +' → logprob: -11.030477523803711
    5. ' ' → logprob: -11.655477523803711
    6. '<|end|>' → logprob: -11.780477523803711
    7. ']+=' → logprob: -13.030477523803711
    8. '++' → logprob: -14.280477523803711
    9. '   ' → logprob: -14.405477523803711
    10. '=' → logprob: -14.905477523803711

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.250158309936523
    4. '```' → logprob: -18.312658309936523
    5. '１' → logprob: -19.000158309936523
    6. '  ' → logprob: -19.062658309936523
    7. '<|end|>' → logprob: -19.125158309936523
    8. '۱' → logprob: -19.125158309936523
    9. '2' → logprob: -19.812658309936523
    10. ' ' → logprob: -20.250158309936523

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -18.250011444091797
    4. '   ' → logprob: -18.937511444091797
    5. 'count' → logprob: -19.000011444091797
    6. '１' → logprob: -19.250011444091797
    7. '2' → logprob: -19.312511444091797
    8. '!' → logprob: -19.500011444091797
    9. '۱' → logprob: -19.562511444091797
    10. '  ' → logprob: -19.812511444091797

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17712394893169403
    2. 'print' → logprob: -2.1771240234375
    3. '
' → logprob: -3.0521240234375
    4. '<|end|>' → logprob: -6.6771240234375
    5. ' print' → logprob: -8.1771240234375
    6. '    
' → logprob: -9.4271240234375
    7. '	print' → logprob: -11.3021240234375
    8. ' ' → logprob: -11.4271240234375
    9. '       ' → logprob: -11.6771240234375
    10. '
' → logprob: -11.6771240234375

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25206416845321655
    2. 'print' → logprob: -1.5020642280578613
    3. '
' → logprob: -9.627063751220703
    4. ' print' → logprob: -10.252063751220703
    5. '```' → logprob: -10.877063751220703
    6. '    
' → logprob: -11.752063751220703
    7. '<|end|>' → logprob: -12.502063751220703
    8. '	print' → logprob: -13.877063751220703
    9. '       ' → logprob: -14.377063751220703
    10. ')' → logprob: -15.377063751220703

Token 73: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.302704761968926e-05
    2. '   ' → logprob: -10.000073432922363
    3. ' print' → logprob: -10.500073432922363
    4. '```' → logprob: -17.000072479248047
    5. '	print' → logprob: -19.000072479248047
    6. ' ' → logprob: -20.250072479248047
    7. '#print' → logprob: -20.375072479248047
    8. '    
' → logprob: -20.750072479248047
    9. '(print' → logprob: -20.750072479248047
    10. 'printf' → logprob: -20.875072479248047

Token 74: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0007457832107320428
    2. '(' → logprob: -7.25074577331543
    3. 'count' → logprob: -10.25074577331543
    4. '(f' → logprob: -15.62574577331543
    5. ' count' → logprob: -16.62574577331543
    6. '()' → logprob: -16.75074577331543
    7. ' (' → logprob: -17.12574577331543
    8. '(cnt' → logprob: -17.25074577331543
    9. '(c' → logprob: -17.50074577331543
    10. '=count' → logprob: -17.50074577331543

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. '`)' → logprob: -16.250001907348633
    4. ')
' → logprob: -16.625001907348633
    5. '))' → logprob: -18.000001907348633
    6. ')`' → logprob: -18.000001907348633
    7. '())' → logprob: -18.500001907348633
    8. '()' → logprob: -18.625001907348633
    9. '')' → logprob: -18.875001907348633
    10. '）' → logprob: -20.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 52.05%
Précision adaptée (1ère position): 56.16%
Précision (top 10): 89.04%
================================================================================
