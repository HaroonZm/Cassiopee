================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CardSet:
    def __init__(self, cards):
        self._cards = sorted(set(cards))
        self._max_card = self._cards[-1]
        self._index_by_value = {v: i for i, v in enumerate(self._cards)}
        self._precompute_divisor_answers_cache = {}

    def query_max_remainder(self, divisor):
        if divisor in self._precompute_divisor_answers_cache:
            return self._precompute_divisor_answers_cache[divisor]
        answer = self._compute_max_remainder_for_divisor(divisor)
        self._precompute_divisor_answers_cache[divisor] = answer
        return answer

    def _compute_max_remainder_for_divisor(self, d):
        """
        Compute the maximum remainder for all cards modulo d using a sophisticated 
        scan over multiples of d within the range of card values.
        """
        max_rem = 0
        # For each block of size d, find max card less than block end
        for block_start in range(d, self._max_card + d, d):
            # max value in this block is block_start - 1
            idx = self._bisect_right_cards(block_start - 1)
            if idx == 0:
                continue  # no card <= block_start -1
            highest_card_in_block = self._cards[idx - 1]
            rem = highest_card_in_block % d
            if rem > max_rem:
                max_rem = rem
                if max_rem == d - 1:
                    break  # can't do better than this
        return max_rem

    def _bisect_right_cards(self, x):
        """
        Custom binary search: returns index where x would be inserted to keep sorted order.
        """
        lo, hi = 0, len(self._cards)
        while lo < hi:
            mid = (lo + hi) // 2
            if self._cards[mid] <= x:
                lo = mid + 1
            else:
                hi = mid
        return lo


class QueryProcessor:
    def __init__(self, card_set):
        self._card_set = card_set
        self._handlers = []

    def add_handler(self, handler):
        self._handlers.append(handler)

    def process_queries(self, queries):
        results = []
        for query in queries:
            for handler in self._handlers:
                if handler.can_handle(query):
                    result = handler.handle(query)
                    results.append(result)
                    break
        return results


class MaxRemainderQueryHandler:
    def __init__(self, card_set):
        self._card_set = card_set

    def can_handle(self, query):
        # In this simplified system, all queries are processed by this handler
        return True

    def handle(self, divisor):
        return self._card_set.query_max_remainder(divisor)


def main():
    import sys
    input = sys.stdin.readline

    N, Q = map(int, input().split())
    cards = list(map(int, input().split()))
    card_set = CardSet(cards)
    query_handler = MaxRemainderQueryHandler(card_set)
    processor = QueryProcessor(card_set)
    processor.add_handler(query_handler)

    queries = [int(input()) for _ in range(Q)]
    results = processor.process_queries(queries)

    print('\n'.join(map(str, results)))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Card' (ID: 9958)
  → Token d'amorce (pas de prédiction)

Token 2: 'Set' (ID: 1984)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21900029480457306
    2. '(' → logprob: -2.2190003395080566
    3. '{' → logprob: -2.4690003395080566
    4. ' {' → logprob: -6.219000339508057
    5. '.' → logprob: -6.969000339508057
    6. ' :' → logprob: -9.093999862670898
    7. '(:' → logprob: -9.343999862670898
    8. '[' → logprob: -9.593999862670898
    9. ' ' → logprob: -10.593999862670898
    10. '```' → logprob: -11.218999862670898

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39289024472236633
    2. '(' → logprob: -1.142890214920044
    3. '   ' → logprob: -5.392890453338623
    4. '```' → logprob: -7.392890453338623
    5. '(
' → logprob: -8.517889976501465
    6. ':
' → logprob: -8.892889976501465
    7. '():' → logprob: -9.017889976501465
    8. '\' → logprob: -9.517889976501465
    9. '[' → logprob: -10.142889976501465
    10. '.' → logprob: -10.267889976501465

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26945003867149353
    2. '    ' → logprob: -1.769450068473816
    3. '   ' → logprob: -3.8944499492645264
    4. ' 
' → logprob: -4.8944501876831055
    5. ' def' → logprob: -5.0194501876831055
    6. ' pass' → logprob: -5.0194501876831055
    7. '     
' → logprob: -5.5194501876831055
    8. '<|end|>' → logprob: -5.8944501876831055
    9. '    
' → logprob: -6.0194501876831055
    10. '```' → logprob: -6.0194501876831055

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2924085557460785
    2. '__' → logprob: -1.6674085855484009
    3. ' __' → logprob: -2.9174084663391113
    4. ' ' → logprob: -4.667408466339111
    5. '<|end|>' → logprob: -8.04240894317627
    6. '_' → logprob: -8.16740894317627
    7. '  ' → logprob: -8.91740894317627
    8. '  ' → logprob: -9.54240894317627
    9. ' )' → logprob: -10.16740894317627
    10. ' ‌' → logprob: -10.29240894317627

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.522638169466518e-05
    2. ' init' → logprob: -11.000024795532227
    3. '_init' → logprob: -11.750024795532227
    4. 'ini' → logprob: -15.000024795532227
    5. '_' → logprob: -16.250024795532227
    6. '	init' → logprob: -16.250024795532227
    7. 'i' → logprob: -16.750024795532227
    8. '__' → logprob: -17.375024795532227
    9. '_i' → logprob: -18.000024795532227
    10. 'in' → logprob: -18.125024795532227

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6434598565101624
    2. '__' → logprob: -0.7684598565101624
    3. '(' → logprob: -5.018459796905518
    4. '__(
' → logprob: -6.018459796905518
    5. '__((' → logprob: -7.143459796905518
    6. '__('' → logprob: -8.018460273742676
    7. '_' → logprob: -8.143460273742676
    8. '(self' → logprob: -9.518460273742676
    9. '__(*' → logprob: -9.518460273742676
    10. '```' → logprob: -9.893460273742676

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000822495436295867
    2. ' self' → logprob: -7.1258225440979
    3. '(self' → logprob: -11.125822067260742
    4. ')' → logprob: -13.125822067260742
    5. '_self' → logprob: -14.875822067260742
    6. ' ' → logprob: -15.625822067260742
    7. ',self' → logprob: -15.625822067260742
    8. '       ' → logprob: -15.750822067260742
    9. '	self' → logprob: -16.250822067260742
    10. 'space' → logprob: -16.500822067260742

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06454934924840927
    2. 'self' → logprob: -3.439549446105957
    3. ')' → logprob: -4.314549446105957
    4. ' ,' → logprob: -4.814549446105957
    5. '<|end|>' → logprob: -5.564549446105957
    6. '):' → logprob: -7.189549446105957
    7. '_' → logprob: -7.189549446105957
    8. ',self' → logprob: -7.189549446105957
    9. ' self' → logprob: -7.314549446105957
    10. '(self' → logprob: -7.689549446105957

Token 11: ' cards' (ID: 10541)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6371044516563416
    2. 'self' → logprob: -0.7621044516563416
    3. ' cards' → logprob: -6.262104511260986
    4. 'cards' → logprob: -6.637104511260986
    5. 'deck' → logprob: -7.137104511260986
    6. ' deck' → logprob: -8.012104034423828
    7. ')' → logprob: -9.137104034423828
    8. ' decks' → logprob: -11.262104034423828
    9. ' )' → logprob: -12.012104034423828
    10. 'card' → logprob: -12.387104034423828

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004248758312314749
    2. ':' → logprob: -6.50424861907959
    3. ')' → logprob: -6.75424861907959
    4. '):
' → logprob: -6.87924861907959
    5. '=' → logprob: -8.37924861907959
    6. ',' → logprob: -9.00424861907959
    7. '   ' → logprob: -9.50424861907959
    8. '<|end|>' → logprob: -10.37924861907959
    9. '[' → logprob: -10.50424861907959
    10. '.' → logprob: -11.75424861907959

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00688965804874897
    2. '    ' → logprob: -5.881889820098877
    3. '   ' → logprob: -6.256889820098877
    4. '        ' → logprob: -7.756889820098877
    5. '(' → logprob: -7.881889820098877
    6. '```' → logprob: -7.881889820098877
    7. ':' → logprob: -8.881889343261719
    8. 'self' → logprob: -8.881889343261719
    9. '     ' → logprob: -9.006889343261719
    10. '        
' → logprob: -9.131889343261719

Token 14: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13388372957706451
    2. ' self' → logprob: -2.1338837146759033
    3. '       ' → logprob: -5.008883953094482
    4. ' ' → logprob: -9.633883476257324
    5. '   ' → logprob: -9.758883476257324
    6. '```' → logprob: -9.758883476257324
    7. '        ' → logprob: -10.133883476257324
    8. ' ' → logprob: -11.383883476257324
    9. '    ' → logprob: -12.883883476257324
    10. '_' → logprob: -13.008883476257324

Token 15: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07035640627145767
    2. '.cards' → logprob: -2.6953563690185547
    3. ' .' → logprob: -8.070356369018555
    4. '.card' → logprob: -9.570356369018555
    5. '.items' → logprob: -12.320356369018555
    6. '_cards' → logprob: -12.320356369018555
    7. '._' → logprob: -12.445356369018555
    8. '.c' → logprob: -12.945356369018555
    9. '.tokens' → logprob: -13.070356369018555
    10. '.is' → logprob: -13.570356369018555

Token 16: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0009018116979859769
    2. '_cards' → logprob: -7.125901699066162
    3. 'card' → logprob: -10.00090217590332
    4. ' cards' → logprob: -10.87590217590332
    5. 'car' → logprob: -11.25090217590332
    6. '.cards' → logprob: -12.00090217590332
    7. 'c' → logprob: -12.25090217590332
    8. '_card' → logprob: -12.50090217590332
    9. 'cars' → logprob: -13.62590217590332
    10. '(cards' → logprob: -13.75090217590332

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38699987530708313
    2. ' =' → logprob: -1.1369998455047607
    3. ' ' → logprob: -9.88700008392334
    4. '<|end|>' → logprob: -10.13700008392334
    5. '_' → logprob: -11.26200008392334
    6. ')' → logprob: -12.38700008392334
    7. '.' → logprob: -12.51200008392334
    8. '=[]' → logprob: -13.01200008392334
    9. '[' → logprob: -13.01200008392334
    10. '   ' → logprob: -13.13700008392334

Token 18: ' sorted' (ID: 20099)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.08912311494350433
    2. 'cards' → logprob: -2.464123010635376
    3. '(cards' → logprob: -9.589122772216797
    4. ' list' → logprob: -9.839122772216797
    5. '[]' → logprob: -11.089122772216797
    6. 'list' → logprob: -11.339122772216797
    7. ' []' → logprob: -11.464122772216797
    8. '.cards' → logprob: -11.464122772216797
    9. '[' → logprob: -12.464122772216797
    10. ' [' → logprob: -12.714122772216797

Token 19: '(set' (ID: 25904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003718723077327013
    2. '(cards' → logprob: -5.628718852996826
    3. '((' → logprob: -10.128718376159668
    4. '(
' → logprob: -11.253718376159668
    5. '(tokens' → logprob: -11.378718376159668
    6. '(

' → logprob: -11.753718376159668
    7. '<|end|>' → logprob: -11.753718376159668
    8. '(card' → logprob: -12.128718376159668
    9. '(items' → logprob: -12.628718376159668
    10. '('' → logprob: -13.003718376159668

Token 20: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0031974392477422953
    2. '(' → logprob: -5.75319766998291
    3. '(card' → logprob: -11.12819766998291
    4. ')' → logprob: -13.25319766998291
    5. '(c' → logprob: -13.75319766998291
    6. '(

' → logprob: -15.25319766998291
    7. '(tokens' → logprob: -15.37819766998291
    8. ' cards' → logprob: -15.37819766998291
    9. '(
' → logprob: -15.37819766998291
    10. ')(' → logprob: -15.62819766998291

Token 21: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.425002783536911
    2. '))' → logprob: -1.1750028133392334
    3. '),' → logprob: -3.3000028133392334
    4. ',' → logprob: -7.800002574920654
    5. ')))' → logprob: -10.175003051757812
    6. '       ' → logprob: -10.300003051757812
    7. '   ' → logprob: -10.800003051757812
    8. ' )' → logprob: -12.675003051757812
    9. '[' → logprob: -12.925003051757812
    10. ' ))' → logprob: -13.175003051757812

Token 22: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6657850742340088
    2. '   ' → logprob: -2.415785074234009
    3. '\n' → logprob: -2.540785074234009
    4. '[' → logprob: -2.790785074234009
    5. '_' → logprob: -3.040785074234009
    6. '
' → logprob: -3.040785074234009
    7. ' ' → logprob: -3.290785074234009
    8. '\' → logprob: -3.915785074234009
    9. '```' → logprob: -4.16578483581543
    10. '<|end|>' → logprob: -4.16578483581543

Token 23: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01387551985681057
    2. ' ' → logprob: -4.888875484466553
    3. '<|end|>' → logprob: -5.513875484466553
    4. ':' → logprob: -7.263875484466553
    5. '<|end|>' → logprob: -7.888875484466553
    6. ' .' → logprob: -8.138875961303711
    7. '   ' → logprob: -8.638875961303711
    8. '_' → logprob: -8.888875961303711
    9. '[:]' → logprob: -8.888875961303711
    10. ')' → logprob: -9.888875961303711

Token 25: 'max' (ID: 3228)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.035935599356889725
    2. 'card' → logprob: -4.785935401916504
    3. '_card' → logprob: -5.660935401916504
    4. 'index' → logprob: -5.785935401916504
    5. 'sorted' → logprob: -5.785935401916504
    6. 'size' → logprob: -5.910935401916504
    7. 'Card' → logprob: -6.410935401916504
    8. 'rank' → logprob: -6.535935401916504
    9. '_cards' → logprob: -6.910935401916504
    10. 'counts' → logprob: -7.160935401916504

Token 26: '_card' (ID: 37760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04826413467526436
    2. '_card' → logprob: -3.9232640266418457
    3. '_value' → logprob: -4.298264026641846
    4. '_val' → logprob: -5.548264026641846
    5. ' _' → logprob: -5.923264026641846
    6. '_size' → logprob: -6.048264026641846
    7. '_cards' → logprob: -6.298264026641846
    8. '_count' → logprob: -7.048264026641846
    9. '_length' → logprob: -7.923264026641846
    10. '_id' → logprob: -8.173264503479004

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6792616844177246
    2. '_' → logprob: -1.3042616844177246
    3. '=' → logprob: -1.5542616844177246
    4. ' ' → logprob: -5.429261684417725
    5. ',' → logprob: -5.929261684417725
    6. ')' → logprob: -6.804261684417725
    7. '<|end|>' → logprob: -7.304261684417725
    8. 's' → logprob: -8.429262161254883
    9. ' _' → logprob: -8.429262161254883
    10. '   ' → logprob: -8.554262161254883

Token 28: ' self' (ID: 1051)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.030851975083351135
    2. ' self' → logprob: -3.6558520793914795
    3. 'max' → logprob: -5.5308518409729
    4. 'self' → logprob: -7.5308518409729
    5. ' None' → logprob: -10.780852317810059
    6. ' ' → logprob: -11.280852317810059
    7. '(max' → logprob: -13.030852317810059
    8. ' len' → logprob: -13.155852317810059
    9. ' cards' → logprob: -13.780852317810059
    10. 'len' → logprob: -13.905852317810059

Token 29: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.016818635165691376
    2. '.' → logprob: -4.141818523406982
    3. ' .' → logprob: -7.641818523406982
    4. '_' → logprob: -8.76681900024414
    5. '<|end|>' → logprob: -9.39181900024414
    6. '_.' → logprob: -11.14181900024414
    7. ' ' → logprob: -11.39181900024414
    8. '.__' → logprob: -11.76681900024414
    9. '[' → logprob: -12.26681900024414

Token 30: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00032044618274085224
    2. 'max' → logprob: -8.125320434570312
    3. '_cards' → logprob: -11.000320434570312
    4. '_max' → logprob: -12.750320434570312
    5. '(cards' → logprob: -13.500320434570312
    6. '.cards' → logprob: -13.875320434570312
    7. 'cars' → logprob: -14.375320434570312
    8. ' cards' → logprob: -15.000320434570312
    9. 'card' → logprob: -15.375320434570312
    10. '   ' → logprob: -15.625320434570312

Token 31: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0013389317318797112
    2. '[' → logprob: -6.626338958740234
    3. '[len' → logprob: -12.876338958740234
    4. ' and' → logprob: -13.001338958740234
    5. '[
' → logprob: -13.251338958740234
    6. '[::-' → logprob: -13.501338958740234
    7. '.' → logprob: -13.751338958740234
    8. 's' → logprob: -14.126338958740234
    9. '][-' → logprob: -14.626338958740234
    10. ' [-' → logprob: -14.626338958740234

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '2' → logprob: -17.25
    4. ']' → logprob: -17.5
    5. '１' → logprob: -18.625
    6. ':' → logprob: -19.5
    7. ')' → logprob: -19.75
    8. '0' → logprob: -19.875
    9. '3' → logprob: -20.0
    10. '5' → logprob: -20.0

Token 33: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034596563782542944
    2. ']' → logprob: -5.753459453582764
    3. '])' → logprob: -8.628459930419922
    4. ' )' → logprob: -10.128459930419922
    5. ')]' → logprob: -10.878459930419922
    6. ')])' → logprob: -11.128459930419922
    7. '}' → logprob: -12.003459930419922
    8. '）' → logprob: -12.128459930419922
    9. '))' → logprob: -12.253459930419922
    10. ')
' → logprob: -12.878459930419922

Token 34: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028045272454619408
    2. '_' → logprob: -3.903045177459717
    3. '._' → logprob: -5.028045177459717
    4. '<|end|>' → logprob: -7.653045177459717
    5. ' ' → logprob: -8.153045654296875
    6. ' .' → logprob: -10.028045654296875
    7. 'def' → logprob: -10.153045654296875
    8. '<|end|>' → logprob: -11.278045654296875
    9. ')' → logprob: -11.528045654296875
    10. ' _' → logprob: -12.653045654296875

Token 37: 'index' (ID: 2257)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9989628195762634
    2. 'cards' → logprob: -1.7489628791809082
    3. 'card' → logprob: -1.9989628791809082
    4. 'max' → logprob: -1.9989628791809082
    5. 'size' → logprob: -3.748962879180908
    6. 'len' → logprob: -3.998962879180908
    7. 'index' → logprob: -4.248962879180908
    8. 'length' → logprob: -4.373962879180908
    9. 'count' → logprob: -4.498962879180908
    10. 'sorted' → logprob: -4.623962879180908

Token 38: '_by' (ID: 8214)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7731536626815796
    2. '=' → logprob: -1.1481536626815796
    3. 'es' → logprob: -1.7731536626815796
    4. ' =' → logprob: -3.648153781890869
    5. '_' → logprob: -3.898153781890869
    6. '_map' → logprob: -5.898153781890869
    7. 'ed' → logprob: -7.523153781890869
    8. '_s' → logprob: -7.648153781890869
    9. 'e' → logprob: -7.898153781890869
    10. '_=' → logprob: -8.273153305053711

Token 39: '_value' (ID: 6734)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.18692883849143982
    2. 'card' → logprob: -2.3119287490844727
    3. '_value' → logprob: -3.3119287490844727
    4. ' card' → logprob: -4.061928749084473
    5. 'value' → logprob: -4.811928749084473
    6. ' value' → logprob: -5.436928749084473
    7. '_' → logprob: -6.811928749084473
    8. ' _' → logprob: -6.936928749084473
    9. ' ' → logprob: -6.936928749084473
    10. '_cards' → logprob: -7.311928749084473

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759875178337097
    2. '=' → logprob: -0.8259875178337097
    3. ' ' → logprob: -10.950987815856934
    4. '[' → logprob: -11.450987815856934
    5. '={}' → logprob: -11.950987815856934
    6. ' ={' → logprob: -12.325987815856934
    7. '   ' → logprob: -13.450987815856934
    8. 's' → logprob: -13.825987815856934
    9. ',' → logprob: -14.200987815856934
    10. ' =
' → logprob: -14.325987815856934

Token 41: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.030817296355962753
    2. ' {' → logprob: -3.7808172702789307
    3. '{}' → logprob: -4.90581750869751
    4. '{i' → logprob: -10.030817031860352
    5. '{x' → logprob: -10.155817031860352
    6. ' {}' → logprob: -10.280817031860352
    7. '{id' → logprob: -12.030817031860352
    8. '{k' → logprob: -12.155817031860352
    9. '{s' → logprob: -12.530817031860352
    10. '{return' → logprob: -13.280817031860352

Token 42: 'v' (ID: 85)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.18099427223205566
    2. 'value' → logprob: -2.6809942722320557
    3. 'v' → logprob: -2.8059942722320557
    4. 'c' → logprob: -3.6809942722320557
    5. ' card' → logprob: -4.805994033813477
    6. 'val' → logprob: -6.680994033813477
    7. 'k' → logprob: -6.930994033813477
    8. ' value' → logprob: -7.805994033813477
    9. ' v' → logprob: -8.180994033813477
    10. '   ' → logprob: -8.930994033813477

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006820985581725836
    2. ':i' → logprob: -5.256821155548096
    3. ':index' → logprob: -6.506821155548096
    4. ' :' → logprob: -9.756820678710938
    5. ':v' → logprob: -10.756820678710938
    6. ':self' → logprob: -12.631820678710938
    7. ':k' → logprob: -12.756820678710938
    8. ':value' → logprob: -12.881820678710938
    9. ':n' → logprob: -14.006820678710938
    10. '   ' → logprob: -14.506820678710938

Token 44: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6329435110092163
    2. ' i' → logprob: -0.7579435110092163
    3. ' idx' → logprob: -8.507943153381348
    4. 'idx' → logprob: -9.882943153381348
    5. ' ' → logprob: -10.757943153381348
    6. '   ' → logprob: -10.757943153381348
    7. 'index' → logprob: -10.757943153381348
    8. ' index' → logprob: -11.882943153381348
    9. '	i' → logprob: -12.257943153381348
    10. '    ' → logprob: -12.757943153381348

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0056860726326704025
    2. 'for' → logprob: -5.255686283111572
    3. '           ' → logprob: -8.255685806274414
    4. ' v' → logprob: -10.130685806274414
    5. '        ' → logprob: -10.255685806274414
    6. ':' → logprob: -10.380685806274414
    7. '       ' → logprob: -10.505685806274414
    8. 'v' → logprob: -11.380685806274414
    9. '   ' → logprob: -11.755685806274414
    10. ',' → logprob: -11.755685806274414

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06123969331383705
    2. 'i' → logprob: -2.936239719390869
    3. ' ' → logprob: -6.436239719390869
    4. 'enumer' → logprob: -6.561239719390869
    5. ' v' → logprob: -7.311239719390869
    6. ' range' → logprob: -7.436239719390869
    7. 'v' → logprob: -7.436239719390869
    8. ' (' → logprob: -8.186239242553711
    9. ' enumerate' → logprob: -8.311239242553711
    10. '	i' → logprob: -8.811239242553711

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005503153428435326
    2. ',v' → logprob: -5.380503177642822
    3. ' in' → logprob: -7.630503177642822
    4. ' ,' → logprob: -8.880502700805664
    5. 'enumer' → logprob: -9.380502700805664
    6. ',i' → logprob: -9.380502700805664
    7. 'in' → logprob: -10.255502700805664
    8. ',value' → logprob: -11.380502700805664
    9. ',n' → logprob: -11.755502700805664
    10. 'v' → logprob: -12.005502700805664

Token 48: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25193408131599426
    2. ' v' → logprob: -1.5019340515136719
    3. '	v' → logprob: -13.001934051513672
    4. '<|end|>' → logprob: -14.126934051513672
    5. 'value' → logprob: -14.251934051513672
    6. ' ' → logprob: -14.501934051513672
    7. ' in' → logprob: -15.876934051513672
    8. '```' → logprob: -16.251934051513672
    9. '  ' → logprob: -16.501934051513672
    10. ')v' → logprob: -16.876934051513672

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07013537734746933
    2. 'in' → logprob: -2.6951353549957275
    3. ' ' → logprob: -9.445135116577148
    4. '<|end|>' → logprob: -9.945135116577148
    5. 'n' → logprob: -10.195135116577148
    6. ',' → logprob: -11.945135116577148
    7. 's' → logprob: -12.195135116577148
    8. '```' → logprob: -12.445135116577148
    9. '	in' → logprob: -12.695135116577148
    10. '  ' → logprob: -12.820135116577148

Token 50: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20141801238059998
    2. 'enumer' → logprob: -1.7014180421829224
    3. '```' → logprob: -12.826417922973633
    4. ' enumer' → logprob: -14.076417922973633
    5. 'Enumer' → logprob: -15.201417922973633
    6. 'en' → logprob: -15.576417922973633
    7. '<|end|>' → logprob: -15.826417922973633
    8. '.enumer' → logprob: -15.951417922973633
    9. ' enumeration' → logprob: -16.201417922973633
    10. ' ' → logprob: -16.326417922973633

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002537104592192918
    2. '(' → logprob: -8.875253677368164
    3. 'self' → logprob: -9.375253677368164
    4. '(cards' → logprob: -10.625253677368164
    5. ' self' → logprob: -12.500253677368164
    6. ' (' → logprob: -14.875253677368164
    7. '(card' → logprob: -15.625253677368164
    8. '(sorted' → logprob: -15.875253677368164
    9. '	self' → logprob: -15.875253677368164
    10. 'cards' → logprob: -16.000253677368164

Token 52: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.787507714354433e-05
    2. '.' → logprob: -10.25004768371582
    3. ' .' → logprob: -11.50004768371582
    4. ')' → logprob: -14.25004768371582
    5. ')._' → logprob: -15.25004768371582
    6. '   ' → logprob: -15.37504768371582
    7. ' ' → logprob: -15.50004768371582
    8. '_cards' → logprob: -15.75004768371582
    9. '.cards' → logprob: -15.87504768371582
    10. '.__' → logprob: -16.12504768371582

Token 53: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.01106562465429306
    2. '_cards' → logprob: -4.511065483093262
    3. '.cards' → logprob: -11.511065483093262
    4. ' cards' → logprob: -12.261065483093262
    5. '(cards' → logprob: -13.511065483093262
    6. 'card' → logprob: -15.136065483093262
    7. '_card' → logprob: -15.136065483093262
    8. 'max' → logprob: -15.636065483093262
    9. ')' → logprob: -16.136066436767578
    10. 'cars' → logprob: -16.261066436767578

Token 54: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00013536323967855424
    2. ')' → logprob: -9.62513542175293
    3. '}' → logprob: -10.00013542175293
    4. ' )' → logprob: -11.87513542175293
    5. '       ' → logprob: -12.00013542175293
    6. ')}
' → logprob: -13.00013542175293
    7. '})' → logprob: -13.12513542175293
    8. ');}' → logprob: -13.37513542175293
    9. ')}}' → logprob: -13.62513542175293
    10. '   ' → logprob: -14.00013542175293

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6635107398033142
    2. '<|end|>' → logprob: -1.663510799407959
    3. 'def' → logprob: -2.038510799407959
    4. '   ' → logprob: -2.413510799407959
    5. ' def' → logprob: -3.413510799407959
    6. '    
' → logprob: -4.038510799407959
    7. ' 
' → logprob: -4.913510799407959
    8. ' ' → logprob: -5.038510799407959
    9. '<|end|>' → logprob: -5.913510799407959
    10. '        
' → logprob: -6.413510799407959

Token 57: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01705210655927658
    2. '._' → logprob: -4.142052173614502
    3. '<|end|>' → logprob: -7.892052173614502
    4. ' .' → logprob: -8.017051696777344
    5. ' ' → logprob: -8.392051696777344
    6. '<|end|>' → logprob: -11.392051696777344
    7. '.__' → logprob: -12.017051696777344
    8. '.

' → logprob: -12.017051696777344
    9. '_' → logprob: -12.017051696777344
    10. '.
' → logprob: -12.642051696777344

Token 58: 'pre' (ID: 2235)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'card' → logprob: -1.7762573957443237
    2. 'values' → logprob: -2.1512575149536133
    3. 'value' → logprob: -2.2762575149536133
    4. 'max' → logprob: -2.4012575149536133
    5. 'length' → logprob: -2.6512575149536133
    6. 'count' → logprob: -2.9012575149536133
    7. 'size' → logprob: -2.9012575149536133
    8. 'cards' → logprob: -2.9012575149536133
    9. 'len' → logprob: -3.5262575149536133
    10. 'index' → logprob: -3.6512575149536133

Token 59: 'compute' (ID: 54521)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.6619793176651001
    2. 'v' → logprob: -2.2869791984558105
    3. 'd' → logprob: -2.4119791984558105
    4. '_fix' → logprob: -2.4119791984558105
    5. 'vious' → logprob: -2.6619791984558105
    6. '_sum' → logprob: -3.0369791984558105
    7. 'sum' → logprob: -4.7869791984558105
    8. 'dict' → logprob: -5.0369791984558105
    9. 'viously' → logprob: -5.2869791984558105
    10. 'f' → logprob: -5.2869791984558105

Token 60: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3463762402534485
    2. '_counts' → logprob: -2.9713761806488037
    3. '_values' → logprob: -3.2213761806488037
    4. '_max' → logprob: -3.8463761806488037
    5. '_ranges' → logprob: -3.8463761806488037
    6. '_cards' → logprob: -3.9713761806488037
    7. '_s' → logprob: -4.221376419067383
    8. '_sets' → logprob: -4.346376419067383
    9. '_scores' → logprob: -4.596376419067383
    10. 's' → logprob: -5.221376419067383

Token 61: 'isor' (ID: 65473)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13585688173770905
    2. 's' → logprob: -2.885856866836548
    3. 'iders' → logprob: -3.385856866836548
    4. 'isions' → logprob: -4.885857105255127
    5. 'isible' → logprob: -5.010857105255127
    6. 'ers' → logprob: -5.385857105255127
    7. 'ision' → logprob: -5.760857105255127
    8. '_' → logprob: -6.010857105255127
    9. 'isor' → logprob: -6.385857105255127
    10. 'idors' → logprob: -6.635857105255127

Token 62: '_answers' (ID: 157516)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005425465060397983
    2. '_s' → logprob: -8.000542640686035
    3. '_counts' → logprob: -9.750542640686035
    4. '_' → logprob: -10.250542640686035
    5. '_map' → logprob: -10.625542640686035
    6. '=' → logprob: -10.875542640686035
    7. ' =' → logprob: -11.000542640686035
    8. '_sets' → logprob: -11.000542640686035
    9. '_values' → logprob: -11.625542640686035
    10. '_indices' → logprob: -12.500542640686035

Token 63: '_cache' (ID: 27045)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016868919134140015
    2. '(' → logprob: -4.641869068145752
    3. 's' → logprob: -5.266869068145752
    4. '_' → logprob: -6.641869068145752
    5. '()
' → logprob: -8.016868591308594
    6. '=' → logprob: -9.391868591308594
    7. ' ()' → logprob: -9.766868591308594
    8. '()

' → logprob: -10.516868591308594
    9. 'es' → logprob: -10.641868591308594
    10. ' =' → logprob: -10.891868591308594

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38946962356567383
    2. '=' → logprob: -1.1394696235656738
    3. '_' → logprob: -6.514469623565674
    4. '(' → logprob: -7.389469623565674
    5. ' ' → logprob: -7.889469623565674
    6. '()' → logprob: -10.639469146728516
    7. 'd' → logprob: -10.764469146728516
    8. '[' → logprob: -10.889469146728516
    9. 's' → logprob: -11.514469146728516
    10. '={}' → logprob: -11.764469146728516

Token 65: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5243290066719055
    2. ' {}' → logprob: -0.8993290066719055
    3. 'dict' → logprob: -8.02432918548584
    4. ' dict' → logprob: -8.27432918548584
    5. ' ' → logprob: -9.02432918548584
    6. ' []' → logprob: -9.02432918548584
    7. '[]' → logprob: -9.14932918548584
    8. ' defaultdict' → logprob: -9.39932918548584
    9. '[' → logprob: -10.02432918548584
    10. '   ' → logprob: -10.14932918548584

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23770096898078918
    2. '   ' → logprob: -2.487700939178467
    3. '<|end|>' → logprob: -2.737700939178467
    4. '    
' → logprob: -3.487700939178467
    5. ' 
' → logprob: -4.487700939178467
    6. ' ' → logprob: -4.612700939178467
    7. '  
' → logprob: -6.112700939178467
    8. 'def' → logprob: -6.112700939178467
    9. '<|end|>' → logprob: -6.487700939178467
    10. 'n' → logprob: -6.737700939178467

Token 67: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6700921058654785
    2. '   ' → logprob: -0.7950921058654785
    3. ' ' → logprob: -4.1700921058654785
    4. ' def' → logprob: -4.5450921058654785
    5. '    ' → logprob: -5.4200921058654785
    6. '    
' → logprob: -6.0450921058654785
    7. ' 
' → logprob: -6.4200921058654785
    8. '  ' → logprob: -7.4200921058654785
    9. '       ' → logprob: -7.9200921058654785
    10. '
' → logprob: -8.29509162902832

Token 68: ' query' (ID: 5703)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4717639684677124
    2. ' ' → logprob: -1.2217639684677124
    3. '_' → logprob: -3.221764087677002
    4. ' get' → logprob: -3.596764087677002
    5. '_get' → logprob: -5.596764087677002
    6. ' __' → logprob: -5.846764087677002
    7. '_space' → logprob: -7.221764087677002
    8. ' ' → logprob: -7.346764087677002
    9. ' space' → logprob: -7.346764087677002
    10. 'get' → logprob: -7.346764087677002

Token 69: '_max' (ID: 13731)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.281570702791214
    2. '(' → logprob: -1.4065706729888916
    3. ' (' → logprob: -9.531570434570312
    4. '_' → logprob: -10.031570434570312
    5. '_by' → logprob: -10.406570434570312
    6. '_query' → logprob: -10.531570434570312
    7. '_card' → logprob: -10.656570434570312
    8. '   ' → logprob: -10.906570434570312
    9. '_count' → logprob: -10.906570434570312
    10. '(
' → logprob: -10.906570434570312

Token 70: '_re' (ID: 3067)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.8346049189567566
    2. '_card' → logprob: -1.0846049785614014
    3. '_value' → logprob: -2.4596049785614014
    4. '_' → logprob: -2.5846049785614014
    5. '(self' → logprob: -3.2096049785614014
    6. '_cards' → logprob: -5.084604740142822
    7. '_self' → logprob: -5.584604740142822
    8. 'imum' → logprob: -5.959604740142822
    9. '(' → logprob: -6.709604740142822
    10. '_val' → logprob: -7.209604740142822

Token 71: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.7036396265029907
    2. 'm' → logprob: -0.9536396265029907
    3. 'lated' → logprob: -3.453639507293701
    4. 'l' → logprob: -3.453639507293701
    5. 'lation' → logprob: -4.328639507293701
    6. 's' → logprob: -4.578639507293701
    7. 'ma' → logprob: -5.078639507293701
    8. 'ward' → logprob: -5.203639507293701
    9. 'main' → logprob: -5.203639507293701
    10. 'peated' → logprob: -5.828639507293701

Token 72: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00979575328528881
    2. '(' → logprob: -4.634795665740967
    3. ' (' → logprob: -11.009796142578125
    4. '(
' → logprob: -11.884796142578125
    5. '   ' → logprob: -12.384796142578125
    6. '_by' → logprob: -12.634796142578125
    7. '(s' → logprob: -13.384796142578125
    8. 'self' → logprob: -13.384796142578125
    9. '_for' → logprob: -14.259796142578125
    10. '_value' → logprob: -14.259796142578125

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004170873435214162
    2. ' ,' → logprob: -8.00041675567627
    3. 'self' → logprob: -9.87541675567627
    4. ',self' → logprob: -11.00041675567627
    5. '):' → logprob: -12.87541675567627
    6. 's' → logprob: -13.37541675567627
    7. ',value' → logprob: -13.62541675567627
    8. '   ' → logprob: -13.62541675567627
    9. ',s' → logprob: -14.00041675567627
    10. ',
' → logprob: -14.00041675567627

Token 74: ' divisor' (ID: 100482)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9467480182647705
    2. ' divisor' → logprob: -1.4467480182647705
    3. 'self' → logprob: -2.0717480182647705
    4. ' x' → logprob: -2.5717480182647705
    5. ' k' → logprob: -2.6967480182647705
    6. 'k' → logprob: -3.6967480182647705
    7. 'x' → logprob: -3.6967480182647705
    8. 'div' → logprob: -3.8217480182647705
    9. ' a' → logprob: -5.571747779846191
    10. ' n' → logprob: -5.821747779846191

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0169408917427063
    2. ',' → logprob: -4.391941070556641
    3. ':' → logprob: -6.016941070556641
    4. ' ):' → logprob: -6.641941070556641
    5. ')' → logprob: -8.01694107055664
    6. '=' → logprob: -8.51694107055664
    7. '):
' → logprob: -9.51694107055664
    8. '=None' → logprob: -10.26694107055664
    9. '   ' → logprob: -11.01694107055664
    10. ' :' → logprob: -12.39194107055664

Token 76: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024008434265851974
    2. '():' → logprob: -4.399008274078369
    3. '):' → logprob: -4.524008274078369
    4. ' :' → logprob: -7.774008274078369
    5. '       ' → logprob: -9.274008750915527
    6. ',' → logprob: -11.149008750915527
    7. '<|end|>' → logprob: -11.649008750915527
    8. ':**' → logprob: -11.774008750915527
    9. '   ' → logprob: -12.024008750915527
    10. '=' → logprob: -12.274008750915527

Token 77: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6162682175636292
    2. ' max' → logprob: -1.8662681579589844
    3. '        ' → logprob: -2.1162681579589844
    4. ' if' → logprob: -2.6162681579589844
    5. ' ' → logprob: -3.2412681579589844
    6. 'max' → logprob: -3.3662681579589844
    7. 'if' (adapté à ' if') → logprob: -4.866268157958984
    8. '    ' → logprob: -5.616268157958984
    9. ' i' → logprob: -5.741268157958984
    10. ' #' → logprob: -5.866268157958984

Token 78: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.0011243832996115088
    2. 'div' → logprob: -6.876124382019043
    3. ' not' → logprob: -10.376124382019043
    4. ' self' → logprob: -10.501124382019043
    5. ' dividend' → logprob: -11.251124382019043
    6. ' div' → logprob: -12.001124382019043
    7. 'self' → logprob: -12.251124382019043
    8. '(div' → logprob: -13.001124382019043
    9. ' divis' → logprob: -13.001124382019043
    10. '	div' → logprob: -13.626124382019043

Token 79: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7289150357246399
    2. ' in' → logprob: -1.3539149761199951
    3. ' >' → logprob: -1.6039149761199951
    4. '>' → logprob: -3.103914976119995
    5. 'not' → logprob: -5.978915214538574
    6. ' ' → logprob: -5.978915214538574
    7. ' <=' → logprob: -5.978915214538574
    8. ' >=' → logprob: -5.978915214538574
    9. ' ==' → logprob: -6.603915214538574
    10. ' <' → logprob: -7.353915214538574

Token 80: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04859986528754234
    2. 'self' → logprob: -3.0485999584198
    3. '	self' → logprob: -12.173600196838379
    4. '(self' → logprob: -13.173600196838379
    5. '<|end|>' → logprob: -13.298600196838379
    6. ' ' → logprob: -13.423600196838379
    7. '_self' → logprob: -14.048600196838379
    8. '=self' → logprob: -14.923600196838379
    9. ' ' → logprob: -15.423600196838379
    10. '$self' → logprob: -15.673600196838379

Token 81: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.4617256056226324e-05
    2. '.' → logprob: -11.250014305114746
    3. ')._' → logprob: -14.625014305114746
    4. ']._' → logprob: -14.750014305114746
    5. ' .' → logprob: -14.875014305114746
    6. '       ' → logprob: -16.375015258789062
    7. '."_' → logprob: -16.875015258789062
    8. '.__' → logprob: -17.000015258789062
    9. '.'_' → logprob: -17.250015258789062
    10. '->_' → logprob: -17.500015258789062

Token 82: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6931869983673096
    2. '_pre' → logprob: -0.6931869983673096
    3. ' pre' → logprob: -10.81818675994873
    4. '_cards' → logprob: -12.31818675994873
    5. '_div' → logprob: -12.69318675994873
    6. 'query' → logprob: -12.94318675994873
    7. 'compute' → logprob: -13.06818675994873
    8. '-pre' → logprob: -13.69318675994873
    9. '_max' → logprob: -14.06818675994873
    10. '_query' → logprob: -14.31818675994873

Token 83: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00019138160860165954
    2. '_compute' → logprob: -8.625191688537598
    3. 'computer' → logprob: -12.750191688537598
    4. ' compute' → logprob: -13.375191688537598
    5. 'comput' → logprob: -13.500191688537598
    6. 'com' → logprob: -13.500191688537598
    7. '_' → logprob: -13.875191688537598
    8. 'computed' → logprob: -13.875191688537598
    9. '_com' → logprob: -14.125191688537598
    10. ' ' → logprob: -14.500191688537598

Token 84: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.000181372175575234
    2. 'div' → logprob: -9.375181198120117
    3. '_' → logprob: -10.750181198120117
    4. 'f' → logprob: -11.125181198120117
    5. 'e' → logprob: -11.500181198120117
    6. 'ed' → logprob: -11.750181198120117
    7. 's' → logprob: -12.250181198120117
    8. '<div' → logprob: -12.375181198120117
    9. '_d' → logprob: -12.500181198120117
    10. 'd' → logprob: -13.000181198120117

Token 85: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.00015943869948387146
    2. 'is' → logprob: -8.75015926361084
    3. 's' → logprob: -15.62515926361084
    4. '_is' → logprob: -15.75015926361084
    5. 'isible' → logprob: -16.000160217285156
    6. 'os' → logprob: -16.375160217285156
    7. '__' → logprob: -16.625160217285156
    8. 'issor' → logprob: -17.000160217285156
    9. '_' → logprob: -17.125160217285156
    10. '   ' → logprob: -17.125160217285156

Token 86: '_answers' (ID: 157516)
  Prédit: '_answers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answers' → logprob: -4.723352049040841e-06
    2. '_ans' → logprob: -12.750004768371582
    3. '_cache' → logprob: -14.250004768371582
    4. '_results' → logprob: -15.500004768371582
    5. '_questions' → logprob: -15.750004768371582
    6. '```' → logprob: -15.875004768371582
    7. '_answer' → logprob: -16.000003814697266
    8. 'answers' → logprob: -16.250003814697266
    9. '

' → logprob: -16.500003814697266
    10. 's' → logprob: -16.625003814697266

Token 87: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.22688446938991547
    2. ':' → logprob: -1.6018844842910767
    3. '_:' → logprob: -6.976884365081787
    4. '_' → logprob: -8.476884841918945
    5. '):' → logprob: -8.476884841918945
    6. '}:' → logprob: -10.851884841918945
    7. '_cached' → logprob: -10.976884841918945
    8. '():' → logprob: -11.226884841918945
    9. '_c' → logprob: -11.226884841918945
    10. '_CACHE' → logprob: -11.726884841918945

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006178391631692648
    2. ':
' → logprob: -7.750617980957031
    3. ' :' → logprob: -8.875617980957031
    4. ':return' → logprob: -10.125617980957031
    5. '       ' → logprob: -13.000617980957031
    6. '):' → logprob: -13.250617980957031
    7. '           ' → logprob: -13.750617980957031
    8. ' and' → logprob: -14.875617980957031
    9. ' :
' → logprob: -15.000617980957031
    10. ':**' → logprob: -15.250617980957031

Token 89: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011379179544746876
    2. '           ' → logprob: -4.761379241943359
    3. ':
' → logprob: -6.261379241943359
    4. ':return' → logprob: -7.261379241943359
    5. ' :' → logprob: -9.88637924194336
    6. '       ' → logprob: -10.26137924194336
    7. ',' → logprob: -11.13637924194336
    8. '):' → logprob: -11.13637924194336
    9. '            ' → logprob: -11.76137924194336
    10. '():' → logprob: -12.38637924194336

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48340699076652527
    2. '           ' → logprob: -1.3584070205688477
    3. 'return' (adapté à ' return') → logprob: -2.1084070205688477
    4. ':return' → logprob: -6.733407020568848
    5. '               ' → logprob: -7.358407020568848
    6. ' 
' → logprob: -7.358407020568848
    7. '<|end|>' → logprob: -7.608407020568848
    8. '
' → logprob: -7.983407020568848
    9. ' ' → logprob: -7.983407020568848
    10. '            
' → logprob: -8.358407020568848

Token 91: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018150413408875465
    2. 'self' → logprob: -4.018150329589844
    3. '           ' → logprob: -15.768150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '	self' → logprob: -16.268150329589844
    6. '0' → logprob: -17.143150329589844
    7. '(self' → logprob: -17.518150329589844
    8. '_self' → logprob: -18.018150329589844
    9. '       ' → logprob: -18.143150329589844
    10. ' ' → logprob: -18.143150329589844

Token 92: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00012523093027994037
    2. '.' → logprob: -9.12512493133545
    3. ' .' → logprob: -11.50012493133545
    4. '       ' → logprob: -12.50012493133545
    5. '_' → logprob: -14.25012493133545
    6. '           ' → logprob: -15.12512493133545
    7. '   ' → logprob: -15.25012493133545
    8. ']._' → logprob: -15.25012493133545
    9. '->_' → logprob: -15.37512493133545
    10. ' _' → logprob: -15.50012493133545

Token 93: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -8.895480277715251e-06
    2. '_pre' → logprob: -11.875008583068848
    3. 'max' → logprob: -15.000008583068848
    4. ' pre' → logprob: -15.125008583068848
    5. 'query' → logprob: -15.500008583068848
    6. 'pro' → logprob: -15.875008583068848
    7. 'p' → logprob: -16.125009536743164
    8. '	pre' → logprob: -16.125009536743164
    9. '```' → logprob: -16.250009536743164
    10. '.pre' → logprob: -16.250009536743164

Token 94: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -3.47626737493556e-05
    2. '_compute' → logprob: -10.62503433227539
    3. 'computed' → logprob: -12.37503433227539
    4. ' compute' → logprob: -12.62503433227539
    5. 'cache' → logprob: -14.50003433227539
    6. 'code' → logprob: -14.62503433227539
    7. '.compute' → logprob: -14.75003433227539
    8. 'c' → logprob: -15.25003433227539
    9. 'comput' → logprob: -15.50003433227539
    10. '_' → logprob: -15.62503433227539

Token 95: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.000596043246332556
    2. 'div' → logprob: -7.500596046447754
    3. 'iv' → logprob: -10.500596046447754
    4. '<div' → logprob: -13.625596046447754
    5. 'answers' → logprob: -13.625596046447754
    6. 'v' → logprob: -13.875596046447754
    7. 'er' → logprob: -13.875596046447754
    8. 'or' → logprob: -14.000596046447754
    9. '```' → logprob: -14.000596046447754
    10. '_answers' → logprob: -14.250596046447754

Token 96: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.0002342912630410865
    2. 'is' → logprob: -8.375234603881836
    3. 'os' → logprob: -14.500234603881836
    4. 'isible' → logprob: -14.750234603881836
    5. '_is' → logprob: -14.875234603881836
    6. '__' → logprob: -15.375234603881836
    7. 'idor' → logprob: -15.375234603881836
    8. 'visor' → logprob: -15.500234603881836
    9. 'esor' → logprob: -15.500234603881836
    10. 's' → logprob: -15.750234603881836

Token 97: '_answers' (ID: 157516)
  Prédit: '_answers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answers' → logprob: -0.00016766376211307943
    2. 'answers' → logprob: -8.750167846679688
    3. 'Answers' → logprob: -12.000167846679688
    4. '_ans' → logprob: -13.250167846679688
    5. '_answer' → logprob: -14.875167846679688
    6. 'ans' → logprob: -15.250167846679688
    7. ' answers' → logprob: -15.250167846679688
    8. '```' → logprob: -16.625167846679688
    9. 'div' → logprob: -16.875167846679688
    10. '_scores' → logprob: -17.000167846679688

Token 98: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -2.4868770196917467e-05
    2. 'cache' → logprob: -10.875024795532227
    3. '_' → logprob: -13.000024795532227
    4. 'Cache' → logprob: -13.250024795532227
    5. '_cached' → logprob: -14.000024795532227
    6. '_CACHE' → logprob: -15.875024795532227
    7. '   ' → logprob: -16.000024795532227
    8. '[' → logprob: -16.250024795532227
    9. '_answers' → logprob: -16.250024795532227
    10. '_
' → logprob: -16.500024795532227

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.875
    3. ' [' → logprob: -16.25
    4. '```' → logprob: -17.5
    5. '

' → logprob: -18.375
    6. '[data' → logprob: -18.5
    7. ' ' → logprob: -18.625
    8. '[df' → logprob: -18.75
    9. 'div' → logprob: -18.875
    10. '(div' → logprob: -19.0

Token 100: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.125003814697266
    3. ' divisor' → logprob: -13.625003814697266
    4. '(div' → logprob: -14.750003814697266
    5. '_div' → logprob: -15.750003814697266
    6. '	div' → logprob: -15.875003814697266
    7. ']' → logprob: -16.000003814697266
    8. '-div' → logprob: -16.250003814697266
    9. '][' → logprob: -18.500003814697266
    10. ' divis' → logprob: -18.875003814697266

Token 101: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.00018065694894175977
    2. 'is' → logprob: -9.5001802444458
    3. 'visor' → logprob: -10.3751802444458
    4. '   ' → logprob: -11.1251802444458
    5. ' divisor' → logprob: -11.6251802444458
    6. 'xor' → logprob: -12.0001802444458
    7. 'div' → logprob: -12.1251802444458
    8. '```' → logprob: -12.6251802444458
    9. 'os' → logprob: -12.7501802444458
    10. '       ' → logprob: -13.0001802444458

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031708183232694864
    2. ')' → logprob: -6.003170967102051
    3. ']
' → logprob: -7.753170967102051
    4. '       ' → logprob: -8.37817096710205
    5. ' ]' → logprob: -11.75317096710205
    6. ']

' → logprob: -11.75317096710205
    7. '])' → logprob: -12.12817096710205
    8. ')]' → logprob: -12.50317096710205
    9. ']
' → logprob: -12.87817096710205
    10. '[' → logprob: -12.87817096710205

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2068036049604416
    2. '
' → logprob: -1.831803560256958
    3. '        
' → logprob: -3.706803560256958
    4. '        ' → logprob: -7.081803798675537
    5. '' → logprob: -8.206803321838379
    6. '        

' → logprob: -8.581803321838379
    7. ' 
' → logprob: -8.956803321838379
    8. '        
        
' → logprob: -9.081803321838379
    9. '
' → logprob: -9.206803321838379
    10. '    
' → logprob: -9.456803321838379

Token 104: ' answer' (ID: 6052)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20748883485794067
    2. ' max' → logprob: -2.207488775253296
    3. 'max' → logprob: -3.457488775253296
    4. '
' → logprob: -4.582489013671875
    5. 'result' → logprob: -4.582489013671875
    6. ' result' → logprob: -4.832489013671875
    7. '#' → logprob: -4.957489013671875
    8. '        
' → logprob: -5.957489013671875
    9. ' answer' → logprob: -6.707489013671875
    10. 'answer' (adapté à ' answer') → logprob: -7.207489013671875

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0048673804849386215
    2. '=' → logprob: -5.3798675537109375
    3. '_' → logprob: -8.504867553710938
    4. ' ' → logprob: -10.629867553710938
    5. 's' → logprob: -11.754867553710938
    6. ',' → logprob: -12.504867553710938
    7. '_max' → logprob: -13.004867553710938
    8. ':' → logprob: -13.879867553710938
    9. '_space' → logprob: -14.254867553710938
    10. ' _' → logprob: -14.254867553710938

Token 106: ' self' (ID: 1051)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6366589665412903
    2. '0' → logprob: -1.0116589069366455
    3. ' -' → logprob: -2.5116589069366455
    4. ' ' → logprob: -4.636659145355225
    5. ' max' → logprob: -4.761659145355225
    6. ' self' → logprob: -5.261659145355225
    7. 'max' → logprob: -7.136659145355225
    8. ' None' → logprob: -7.386659145355225
    9. 'self' → logprob: -7.886659145355225
    10. '-max' → logprob: -8.011658668518066

Token 107: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12691938877105713
    2. '._' → logprob: -2.2519192695617676
    3. ' .' → logprob: -4.376919269561768
    4. '.max' → logprob: -7.376919269561768
    5. ' ' → logprob: -8.751919746398926
    6. 'max' → logprob: -8.876919746398926
    7. '_max' → logprob: -9.001919746398926
    8. '_' → logprob: -9.126919746398926
    9. '.
' → logprob: -10.251919746398926
    10. '[' → logprob: -10.501919746398926

Token 108: 'compute' (ID: 54521)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03449484333395958
    2. 'cards' → logprob: -3.4094948768615723
    3. 'pre' → logprob: -7.659494876861572
    4. 'index' → logprob: -8.409494400024414
    5. 'query' → logprob: -10.284494400024414
    6. '_max' → logprob: -10.534494400024414
    7. 'find' → logprob: -10.909494400024414
    8. 'div' → logprob: -11.534494400024414
    9. 'card' → logprob: -11.534494400024414
    10. ' max' → logprob: -12.034494400024414

Token 109: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0008871606551110744
    2. '_' → logprob: -7.625887393951416
    3. '_answer' → logprob: -8.125886917114258
    4. '_div' → logprob: -9.875886917114258
    5. '_best' → logprob: -11.250886917114258
    6. '_for' → logprob: -11.750886917114258
    7. 'max' → logprob: -12.125886917114258
    8. '_query' → logprob: -12.375886917114258
    9. '_card' → logprob: -12.625886917114258
    10. '_opt' → logprob: -12.875886917114258

Token 110: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0005328982952050865
    2. '_' → logprob: -8.125533103942871
    3. '_card' → logprob: -9.500533103942871
    4. '_max' → logprob: -9.750533103942871
    5. '_rem' → logprob: -9.875533103942871
    6. '_answer' → logprob: -11.125533103942871
    7. '_remaining' → logprob: -11.625533103942871
    8. '_return' → logprob: -12.000533103942871
    9. '_div' → logprob: -12.500533103942871
    10. ' _' → logprob: -12.750533103942871

Token 111: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.00012582694762386382
    2. 'ma' → logprob: -9.125125885009766
    3. 'm' → logprob: -11.000125885009766
    4. 'main' → logprob: -16.000125885009766
    5. ' ma' → logprob: -18.250125885009766
    6. 'st' → logprob: -18.250125885009766
    7. 'mai' → logprob: -18.250125885009766
    8. 'ema' → logprob: -18.625125885009766
    9. '```' → logprob: -19.125125885009766
    10. '_ma' → logprob: -19.250125885009766

Token 112: '_for' (ID: 11903)
  Prédit: '(div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.018155446276068687
    2. '(' → logprob: -4.018155574798584
    3. ' (' → logprob: -13.018155097961426
    4. '(
' → logprob: -13.268155097961426
    5. '(

' → logprob: -14.518155097961426
    6. '(def' → logprob: -14.893155097961426
    7. '   ' → logprob: -15.768155097961426
    8. '(dis' → logprob: -15.768155097961426
    9. 'div' → logprob: -15.893155097961426
    10. '       ' → logprob: -16.143156051635742

Token 113: '_div' (ID: 36926)
  Prédit: '(div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.2910178303718567
    2. 'div' → logprob: -1.791017770767212
    3. '_div' → logprob: -3.041017770767212
    4. '(self' → logprob: -3.916017770767212
    5. 'self' → logprob: -5.291018009185791
    6. ' divisor' → logprob: -5.791018009185791
    7. '_cards' → logprob: -5.791018009185791
    8. '(' → logprob: -6.041018009185791
    9. '_card' → logprob: -6.791018009185791
    10. 'card' → logprob: -7.166018009185791

Token 114: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -4.23917081207037e-05
    2. 'is' → logprob: -10.125041961669922
    3. ' is' → logprob: -14.375041961669922
    4. '   ' → logprob: -15.375041961669922
    5. '{' → logprob: -15.875041961669922
    6. '(' → logprob: -15.875041961669922
    7. '(is' → logprob: -16.000041961669922
    8. 'isible' → logprob: -16.125041961669922
    9. '[' → logprob: -16.250041961669922
    10. '_is' → logprob: -16.375041961669922

Token 115: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.014166681095957756
    2. '(' → logprob: -4.264166831970215
    3. '(
' → logprob: -13.139166831970215
    4. ' (' → logprob: -14.264166831970215
    5. '(

' → logprob: -15.764166831970215
    6. '(di' → logprob: -15.889166831970215
    7. '(dis' → logprob: -16.2641658782959
    8. 'div' → logprob: -16.5141658782959
    9. '(d' → logprob: -16.7641658782959
    10. '(def' → logprob: -17.2641658782959

Token 116: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.00020592445798683912
    2. 'is' → logprob: -8.500205993652344
    3. ' is' → logprob: -14.875205993652344
    4. '   ' → logprob: -15.000205993652344
    5. 'istor' → logprob: -15.125205993652344
    6. 'isible' → logprob: -15.500205993652344
    7. 'issor' → logprob: -15.750205993652344
    8. 's' → logprob: -15.875205993652344
    9. 'or' → logprob: -16.375205993652344
    10. '_is' → logprob: -16.500205993652344

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007669831975363195
    2. ')
' → logprob: -7.250766754150391
    3. '       ' → logprob: -10.00076675415039
    4. ' )' → logprob: -12.00076675415039
    5. '   ' → logprob: -12.50076675415039
    6. ')
' → logprob: -13.87576675415039
    7. '()' → logprob: -15.37576675415039
    8. ' ' → logprob: -15.87576675415039
    9. ')

' → logprob: -15.87576675415039
    10. ' )
' → logprob: -16.00076675415039

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040636269841343164
    2. 'self' → logprob: -8.250406265258789
    3. ' self' → logprob: -10.000406265258789
    4. '        
' → logprob: -10.125406265258789
    5. '
' → logprob: -10.375406265258789
    6. '' → logprob: -11.125406265258789
    7. '	' → logprob: -13.000406265258789
    8. '<|end|>' → logprob: -13.125406265258789
    9. '           ' → logprob: -13.625406265258789
    10. '\' → logprob: -13.625406265258789

Token 119: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01710331067442894
    2. '
' → logprob: -4.26710319519043
    3. 'self' (adapté à ' self') → logprob: -6.01710319519043
    4. ' self' → logprob: -7.76710319519043
    5. '
' → logprob: -10.39210319519043
    6. '        
' → logprob: -10.64210319519043
    7. '	self' → logprob: -12.01710319519043
    8. '' → logprob: -12.76710319519043
    9. '	' → logprob: -12.89210319519043
    10. '   ' → logprob: -13.39210319519043

Token 120: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00015014449309092015
    2. '.' → logprob: -9.625149726867676
    3. ')._' → logprob: -10.125149726867676
    4. ' .' → logprob: -10.500149726867676
    5. ']._' → logprob: -11.125149726867676
    6. ' ' → logprob: -14.500149726867676
    7. '."_' → logprob: -15.125149726867676
    8. '._

' → logprob: -15.875149726867676
    9. '.'_' → logprob: -16.125150680541992
    10. '.​' → logprob: -16.125150680541992

Token 121: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -2.45848218582978e-06
    2. '_pre' → logprob: -13.00000286102295
    3. ' pre' → logprob: -16.000001907348633
    4. '	pre' → logprob: -20.500001907348633
    5. 'pro' → logprob: -21.375001907348633
    6. '-pre' → logprob: -21.750001907348633
    7. 'preter' → logprob: -22.000001907348633
    8. 'prev' → logprob: -22.125001907348633
    9. '-' → logprob: -22.500001907348633
    10. '.pre' → logprob: -22.625001907348633

Token 122: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -8.77627644513268e-06
    2. 'cache' → logprob: -12.625008583068848
    3. '_compute' → logprob: -12.750008583068848
    4. 'com' → logprob: -14.625008583068848
    5. 'computer' → logprob: -14.750008583068848
    6. 'computed' → logprob: -15.000008583068848
    7. ' compute' → logprob: -15.125008583068848
    8. '_' → logprob: -15.250008583068848
    9. 'comput' → logprob: -15.500008583068848
    10. 'store' → logprob: -15.625008583068848

Token 123: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.875009536743164
    3. 'div' → logprob: -14.000009536743164
    4. '_DIV' → logprob: -15.125009536743164
    5. '_del' → logprob: -15.125009536743164
    6. '_def' → logprob: -15.625009536743164
    7. '_d' → logprob: -15.875009536743164
    8. '_answers' → logprob: -16.000009536743164
    9. '<div' → logprob: -16.250009536743164
    10. ' _' → logprob: -16.375009536743164

Token 124: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.00021212305000517517
    2. 'is' → logprob: -8.625211715698242
    3. 'ide' → logprob: -11.625211715698242
    4. 'ider' → logprob: -12.750211715698242
    5. 'os' → logprob: -12.750211715698242
    6. 'ision' → logprob: -13.250211715698242
    7. 'idor' → logprob: -13.375211715698242
    8. 'isible' → logprob: -13.375211715698242
    9. 'itor' → logprob: -13.500211715698242
    10. 'er' → logprob: -13.500211715698242

Token 125: '_answers' (ID: 157516)
  Prédit: '_answers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answers' → logprob: -5.9153885558771435e-06
    2. '_ans' → logprob: -13.125005722045898
    3. 'Answers' → logprob: -13.500005722045898
    4. 'answers' → logprob: -14.625005722045898
    5. '```' → logprob: -14.875005722045898
    6. '_answer' → logprob: -15.000005722045898
    7. '-' → logprob: -15.500005722045898
    8. '"_' → logprob: -16.0000057220459
    9. ''_' → logprob: -16.0000057220459
    10. ')_' → logprob: -16.1250057220459

Token 126: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.128163257315464e-07
    2. '_cached' → logprob: -16.25
    3. '_answers' → logprob: -16.75
    4. '_CACHE' → logprob: -17.0
    5. '_c' → logprob: -17.25
    6. '_cash' → logprob: -17.5
    7. '_code' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. '_cap' → logprob: -19.5
    10. '-cache' → logprob: -19.5

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '[var' → logprob: -14.000003814697266
    3. '[data' → logprob: -14.500003814697266
    4. '[df' → logprob: -14.625003814697266
    5. '[col' → logprob: -14.875003814697266
    6. '[ind' → logprob: -15.000003814697266
    7. '[d' → logprob: -15.250003814697266
    8. '[val' → logprob: -15.750003814697266
    9. '[assembly' → logprob: -16.000003814697266
    10. '[cur' → logprob: -16.500003814697266

Token 128: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.00025871701654978096
    2. ' divisor' → logprob: -8.375258445739746
    3. '[' → logprob: -11.125258445739746
    4. '(div' → logprob: -12.125258445739746
    5. '	div' → logprob: -13.125258445739746
    6. ']' → logprob: -13.375258445739746
    7. '_div' → logprob: -13.625258445739746
    8. ' ' → logprob: -14.375258445739746
    9. ' div' → logprob: -14.750258445739746
    10. '
' → logprob: -14.750258445739746

Token 129: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.00022821188031230122
    2. 'is' → logprob: -8.875227928161621
    3. 'itor' → logprob: -10.000227928161621
    4. 'tor' → logprob: -11.000227928161621
    5. 'visor' → logprob: -13.000227928161621
    6. '               ' → logprob: -13.375227928161621
    7. 'os' → logprob: -13.375227928161621
    8. '   ' → logprob: -13.375227928161621
    9. '_is' → logprob: -13.375227928161621
    10. ' divisor' → logprob: -13.375227928161621

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002634395845234394
    2. ' ]' → logprob: -6.127634525299072
    3. ']=' → logprob: -7.752634525299072
    4. '=' → logprob: -11.377634048461914
    5. ' =' → logprob: -11.877634048461914
    6. ')' → logprob: -14.377634048461914
    7. ' ' → logprob: -14.752634048461914
    8. '[' → logprob: -15.877634048461914
    9. '   ' → logprob: -18.377634048461914
    10. '],' → logprob: -18.627634048461914

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020752996206284
    2. ' =' → logprob: -2.350207567214966
    3. ' =
' → logprob: -14.975207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '=
' → logprob: -15.850207328796387
    6. '=

' → logprob: -16.225208282470703
    7. '_' → logprob: -16.600208282470703
    8. '_=' → logprob: -16.975208282470703
    9. '[' → logprob: -17.475208282470703
    10. '＝' → logprob: -17.600208282470703

Token 132: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.01105170976370573
    2. 'answer' → logprob: -4.511051654815674
    3. ' ' → logprob: -12.636052131652832
    4. '	answer' → logprob: -14.511052131652832
    5. '(answer' → logprob: -15.886052131652832
    6. '.answer' → logprob: -17.511051177978516
    7. ' 
' → logprob: -17.511051177978516
    8. '_answer' → logprob: -17.636051177978516
    9. 'Answer' → logprob: -17.886051177978516
    10. ' ' → logprob: -18.636051177978516

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006114124786108732
    2. '
' → logprob: -5.3811140060424805
    3. 'return' → logprob: -7.0061140060424805
    4. ' return' → logprob: -8.00611400604248
    5. '        
' → logprob: -9.38111400604248
    6. '	return' → logprob: -9.88111400604248
    7. '<|end|>' → logprob: -10.13111400604248
    8. '	' → logprob: -10.63111400604248
    9. '   ' → logprob: -11.25611400604248
    10. '  
' → logprob: -11.88111400604248

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014176189433783293
    2. 'return' → logprob: -7.126417636871338
    3. ' return' → logprob: -7.751417636871338
    4. '	' → logprob: -9.37641716003418
    5. '   ' → logprob: -10.37641716003418
    6. '	return' → logprob: -10.62641716003418
    7. '
' → logprob: -10.75141716003418
    8. '        
' → logprob: -11.25141716003418
    9. '           ' → logprob: -13.37641716003418
    10. '    
' → logprob: -13.75141716003418

Token 135: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4329738914966583
    2. '       ' → logprob: -1.432973861694336
    3. 'return' (adapté à ' return') → logprob: -2.182973861694336
    4. '	return' → logprob: -9.307973861694336
    5. '
' → logprob: -11.807973861694336
    6. ' ' → logprob: -12.182973861694336
    7. '   ' → logprob: -12.682973861694336
    8. '	' → logprob: -12.932973861694336
    9. ':return' → logprob: -12.932973861694336
    10. '_return' → logprob: -13.432973861694336

Token 136: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.0019299437990412116
    2. 'answer' → logprob: -6.251929759979248
    3. '(answer' → logprob: -14.251930236816406
    4. '	answer' → logprob: -14.501930236816406
    5. ' ' → logprob: -15.501930236816406
    6. '_answer' → logprob: -17.376930236816406
    7. '.answer' → logprob: -18.126930236816406
    8. 'Answer' → logprob: -18.501930236816406
    9. ' ' → logprob: -19.376930236816406
    10. ' ans' → logprob: -19.751930236816406

Token 137: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1905236542224884
    2. '   ' → logprob: -2.440523624420166
    3. '<|end|>' → logprob: -3.565523624420166
    4. '    
' → logprob: -3.815523624420166
    5. '_' → logprob: -4.565523624420166
    6. '  
' → logprob: -5.190523624420166
    7. ' 
' → logprob: -5.315523624420166
    8. '```' → logprob: -6.190523624420166
    9. 'def' → logprob: -6.315523624420166
    10. ' ' → logprob: -6.690523624420166

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4356589913368225
    2. '   ' → logprob: -1.4356589317321777
    3. '    
' → logprob: -3.1856589317321777
    4. ' 
' → logprob: -3.3106589317321777
    5. 'def' → logprob: -4.185658931732178
    6. '  
' → logprob: -4.935658931732178
    7. '_' → logprob: -4.935658931732178
    8. ' def' → logprob: -6.185658931732178
    9. '\n' → logprob: -6.810658931732178
    10. ' ' → logprob: -6.935658931732178

Token 139: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008853166364133358
    2. ' def' → logprob: -4.883852958679199
    3. '   ' → logprob: -6.758852958679199
    4. ' ' → logprob: -9.8838529586792
    5. '_' → logprob: -11.2588529586792
    6. '    
' → logprob: -11.8838529586792
    7. ' 
' → logprob: -12.2588529586792
    8. '	def' → logprob: -12.3838529586792
    9. '
' → logprob: -13.1338529586792
    10. '_def' → logprob: -13.8838529586792

Token 140: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.2555489242076874
    2. ' _' → logprob: -1.5055489540100098
    3. '_' → logprob: -5.63054895401001
    4. '_find' → logprob: -12.505548477172852
    5. '_pre' → logprob: -13.005548477172852
    6. '_query' → logprob: -13.005548477172852
    7. '_max' → logprob: -13.130548477172852
    8. '_com' → logprob: -13.380548477172852
    9. '_get' → logprob: -13.630548477172852
    10. ' ' → logprob: -14.005548477172852

Token 141: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -4.320199877838604e-07
    2. '_compute' → logprob: -14.875
    3. 'computer' → logprob: -17.625
    4. ' compute' → logprob: -17.75
    5. 'comput' → logprob: -17.875
    6. 'calculate' → logprob: -17.875
    7. 'computed' → logprob: -18.125
    8. 'com' → logprob: -18.125
    9. '.compute' → logprob: -19.0
    10. 'create' → logprob: -20.5

Token 142: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. 'max' → logprob: -15.750000953674316
    4. ' _' → logprob: -17.5
    5. '_MAX' → logprob: -18.625
    6. '_Max' → logprob: -19.125
    7. '_compute' → logprob: -19.625
    8. '_for' → logprob: -19.875
    9. ' max' → logprob: -20.375
    10. '_m' → logprob: -20.5

Token 143: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0357971228659153
    2. '_max' → logprob: -3.410797119140625
    3. '_' → logprob: -6.785797119140625
    4. '_rem' → logprob: -7.285797119140625
    5. '_div' → logprob: -8.910797119140625
    6. '_remaining' → logprob: -10.035797119140625
    7. '_rest' → logprob: -10.785797119140625
    8. '_mod' → logprob: -10.910797119140625
    9. '_possible' → logprob: -10.910797119140625
    10. '_for' → logprob: -11.160797119140625

Token 144: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0011411691084504128
    2. 'ma' → logprob: -7.37614107131958
    3. 'm' → logprob: -8.376141548156738
    4. 'main' → logprob: -8.626141548156738
    5. '_ma' → logprob: -9.876141548156738
    6. '_' → logprob: -10.501141548156738
    7. 'a' → logprob: -11.751141548156738
    8. 'ema' → logprob: -12.376141548156738
    9. 're' → logprob: -12.876141548156738
    10. '_m' → logprob: -13.501141548156738

Token 145: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.009128909558057785
    2. '(self' → logprob: -5.134129047393799
    3. '_' → logprob: -5.884129047393799
    4. '(' → logprob: -8.25912857055664
    5. 'for' → logprob: -9.88412857055664
    6. 'self' → logprob: -10.25912857055664
    7. '   ' → logprob: -10.50912857055664
    8. '_(' → logprob: -11.25912857055664
    9. 'For' → logprob: -12.00912857055664
    10. '       ' → logprob: -12.38412857055664

Token 146: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.00023965541913639754
    2. '_' → logprob: -8.750239372253418
    3. 'div' → logprob: -9.500239372253418
    4. '_card' → logprob: -13.250239372253418
    5. '__' → logprob: -13.875239372253418
    6. ' _' → logprob: -14.250239372253418
    7. 'self' → logprob: -14.750239372253418
    8. '_
' → logprob: -14.750239372253418
    9. '_d' → logprob: -14.875239372253418
    10. '(self' → logprob: -15.250239372253418

Token 147: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.007258862257003784
    2. 'is' → logprob: -5.007258892059326
    3. '_div' → logprob: -9.257258415222168
    4. 'div' → logprob: -9.257258415222168
    5. ' divisor' → logprob: -9.757258415222168
    6. '_is' → logprob: -9.882258415222168
    7. 'or' → logprob: -10.132258415222168
    8. 'isible' → logprob: -11.007258415222168
    9. 'visor' → logprob: -11.132258415222168
    10. '_' → logprob: -11.507258415222168

Token 148: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006745471036992967
    2. '(' → logprob: -7.375674724578857
    3. '   ' → logprob: -11.0006742477417
    4. '       ' → logprob: -11.2506742477417
    5. 'self' → logprob: -11.8756742477417
    6. '(
' → logprob: -12.1256742477417
    7. ' (' → logprob: -12.5006742477417
    8. ' ' → logprob: -14.0006742477417
    9. ' self' → logprob: -14.2506742477417
    10. '(s' → logprob: -16.000675201416016

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015051870606839657
    2. ' ,' → logprob: -4.26505184173584
    3. '):' → logprob: -7.26505184173584
    4. ',
' → logprob: -9.89005184173584
    5. '):
' → logprob: -10.39005184173584
    6. 'self' → logprob: -10.64005184173584
    7. ' ):' → logprob: -11.14005184173584
    8. 'div' → logprob: -11.26505184173584
    9. ')' → logprob: -11.39005184173584
    10. '   ' → logprob: -11.39005184173584

Token 150: ' d' (ID: 272)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8600624799728394
    2. ' divisor' → logprob: -0.8600624799728394
    3. 'self' → logprob: -2.235062599182129
    4. ' self' → logprob: -3.110062599182129
    5. '       ' → logprob: -7.110062599182129
    6. ' div' → logprob: -7.610062599182129
    7. '   ' → logprob: -7.985062599182129
    8. ' ' → logprob: -8.860062599182129
    9. '	div' → logprob: -9.485062599182129
    10. ')' → logprob: -9.610062599182129

Token 151: '):
' (ID: 1883)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.043758492916822433
    2. '):' → logprob: -3.4187583923339844
    3. '):
' → logprob: -4.793758392333984
    4. ')' → logprob: -7.293758392333984
    5. 'ivid' → logprob: -7.293758392333984
    6. 'ef' → logprob: -8.418758392333984
    7. 'ivs' → logprob: -9.918758392333984
    8. '):

' → logprob: -10.418758392333984
    9. 'visor' → logprob: -10.668758392333984
    10. '   ' → logprob: -10.918758392333984

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04126369208097458
    2. ':' → logprob: -3.6662635803222656
    3. ' max' → logprob: -5.541263580322266
    4. 'max' → logprob: -6.041263580322266
    5. ' ' → logprob: -6.166263580322266
    6. '   ' → logprob: -6.916263580322266
    7. '        ' → logprob: -7.166263580322266
    8. '#' → logprob: -7.416263580322266
    9. ':
' → logprob: -7.541263580322266
    10. '
' → logprob: -7.791263580322266

Token 153: ' """
' (ID: 7037)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6148384213447571
    2. ' max' → logprob: -0.8648384213447571
    3. ' best' → logprob: -3.9898383617401123
    4. 'best' → logprob: -5.114838600158691
    5. ' if' → logprob: -5.864838600158691
    6. '#' → logprob: -6.239838600158691
    7. ' answer' → logprob: -6.614838600158691
    8. ' remainder' → logprob: -6.739838600158691
    9. 'answer' → logprob: -6.864838600158691
    10. 'result' → logprob: -7.239838600158691

Token 154: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19535887241363525
    2. ' max' → logprob: -2.0703587532043457
    3. 'best' → logprob: -4.820358753204346
    4. 'result' → logprob: -5.070358753204346
    5. 'left' → logprob: -5.070358753204346
    6. '       ' → logprob: -5.320358753204346
    7. 'answer' → logprob: -5.570358753204346
    8. ' best' → logprob: -5.945358753204346
    9. ' result' → logprob: -6.070358753204346
    10. ' remainder' → logprob: -6.070358753204346

Token 155: ' Compute' (ID: 45438)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46707454323768616
    2. ' max' → logprob: -1.4670745134353638
    3. '#' → logprob: -2.3420746326446533
    4. 'cards' → logprob: -4.842074394226074
    5. ' #' → logprob: -5.217074394226074
    6. ' if' → logprob: -5.342074394226074
    7. ' best' → logprob: -5.592074394226074
    8. 'res' → logprob: -6.217074394226074
    9. 're' → logprob: -6.217074394226074
    10. 'rema' → logprob: -6.342074394226074

Token 156: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3018362522125244
    2. 'max' → logprob: -1.4268362522125244
    3. ' the' → logprob: -4.176836013793945
    4. ' best' → logprob: -6.801836013793945
    5. '#' → logprob: -7.051836013793945
    6. ' remainder' → logprob: -7.551836013793945
    7. 'the' → logprob: -7.676836013793945
    8. ' maximum' → logprob: -7.926836013793945
    9. ' result' → logprob: -8.301836013793945
    10. ' #' → logprob: -8.426836013793945

Token 157: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12563440203666687
    2. ' max' → logprob: -2.2506344318389893
    3. 'maximum' → logprob: -4.87563419342041
    4. ' maximum' → logprob: -5.62563419342041
    5. '#' → logprob: -7.25063419342041
    6. 'best' → logprob: -8.75063419342041
    7. 'answer' → logprob: -9.50063419342041
    8. ' best' → logprob: -9.75063419342041
    9. ' remainder' → logprob: -9.75063419342041
    10. 'result' → logprob: -10.00063419342041

Token 158: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.02282341755926609
    2. 're' → logprob: -3.8978233337402344
    3. '_re' → logprob: -6.522823333740234
    4. ' possible' → logprob: -7.647823333740234
    5. ' ' → logprob: -9.397823333740234
    6. 'possible' → logprob: -9.522823333740234
    7. '_' → logprob: -10.772823333740234
    8. ' return' → logprob: -10.772823333740234
    9. ' value' → logprob: -10.897823333740234
    10. 'return' → logprob: -11.397823333740234

Token 159: ' for' (ID: 395)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -1.1410095691680908
    2. ' of' → logprob: -1.6410095691680908
    3. ' from' → logprob: -2.266009569168091
    4. ' ' → logprob: -2.266009569168091
    5. '<|end|>' → logprob: -2.391009569168091
    6. ' for' → logprob: -2.641009569168091
    7. ' possible' → logprob: -4.016009330749512
    8. ':' → logprob: -4.391009330749512
    9. '<|end|>' → logprob: -4.891009330749512
    10. ' by' → logprob: -5.016009330749512

Token 160: ' all' (ID: 722)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2230923175811768
    2. ' card' → logprob: -1.5980923175811768
    3. ' divisor' → logprob: -1.5980923175811768
    4. ' each' → logprob: -2.4730923175811768
    5. ' remainder' → logprob: -3.2230923175811768
    6. ' cards' → logprob: -3.4730923175811768
    7. ' self' → logprob: -3.4730923175811768
    8. ' the' → logprob: -3.9730923175811768
    9. ' x' → logprob: -4.098092079162598
    10. ' value' → logprob: -4.223092079162598

Token 161: ' cards' (ID: 10541)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -1.109484076499939
    2. 'cards' → logprob: -1.359484076499939
    3. ' cards' → logprob: -1.359484076499939
    4. ' card' → logprob: -2.7344841957092285
    5. '_card' → logprob: -4.2344841957092285
    6. '_cards' → logprob: -4.3594841957092285
    7. ' self' → logprob: -4.7344841957092285
    8. ' values' → logprob: -4.8594841957092285
    9. 'self' → logprob: -5.1094841957092285
    10. 'c' → logprob: -5.1094841957092285

Token 162: ' modulo' (ID: 112372)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.3004647493362427
    2. '       ' → logprob: -1.5504647493362427
    3. ' with' → logprob: -4.675464630126953
    4. ' of' → logprob: -5.175464630126953
    5. ' after' → logprob: -5.175464630126953
    6. ' by' → logprob: -5.425464630126953
    7. ' for' → logprob: -5.550464630126953
    8. ',' → logprob: -6.050464630126953
    9. ' that' → logprob: -6.050464630126953
    10. ' given' → logprob: -6.300464630126953

Token 163: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14354431629180908
    2. 'd' → logprob: -2.0185441970825195
    3. ' the' → logprob: -7.1435441970825195
    4. 'the' → logprob: -10.89354419708252
    5. ' self' → logprob: -11.14354419708252
    6. ' ' → logprob: -11.39354419708252
    7. ' (' → logprob: -12.26854419708252
    8. 'self' → logprob: -12.76854419708252
    9. '```' → logprob: -13.01854419708252
    10. ' `' → logprob: -13.01854419708252

Token 164: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2037322223186493
    2. ':' → logprob: -2.2037322521209717
    3. '.' → logprob: -2.9537322521209717
    4. '\n' → logprob: -5.328732013702393
    5. ',' → logprob: -5.453732013702393
    6. '
' → logprob: -5.578732013702393
    7. ':
' → logprob: -5.828732013702393
    8. '        
' → logprob: -7.203732013702393
    9. '```' → logprob: -7.328732013702393
    10. '   ' → logprob: -7.328732013702393

Token 165: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.49080324172973633
    2. ' the' → logprob: -2.1158032417297363
    3. ' binary' → logprob: -2.1158032417297363
    4. ' a' → logprob: -2.7408032417297363
    5. ' d' → logprob: -2.9908032417297363
    6. 'self' → logprob: -4.115803241729736
    7. 'binary' → logprob: -5.490803241729736
    8. 'd' → logprob: -5.615803241729736
    9. ' dynamic' → logprob: -6.115803241729736
    10. ' two' → logprob: -6.240803241729736

Token 166: ' sophisticated' (ID: 36278)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.3228178918361664
    2. ' dynamic' → logprob: -2.447817802429199
    3. 'binary' → logprob: -2.572817802429199
    4. ' divide' → logprob: -2.697817802429199
    5. ' two' → logprob: -4.572817802429199
    6. ' combination' → logprob: -5.072817802429199
    7. 'divide' → logprob: -5.197817802429199
    8. ' self' → logprob: -6.072817802429199
    9. 'dynamic' → logprob: -6.197817802429199
    10. ' dp' → logprob: -6.322817802429199

Token 167: ' 
' (ID: 793)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.06713154911994934
    2. ' algorithm' → logprob: -3.192131519317627
    3. ' dynamic' → logprob: -4.567131519317627
    4. ' method' → logprob: -5.067131519317627
    5. 'appro' → logprob: -5.942131519317627
    6. ' strategy' → logprob: -6.692131519317627
    7. ' technique' → logprob: -6.817131519317627
    8. 'algorithm' → logprob: -7.317131519317627
    9. ' logic' → logprob: -8.067131996154785
    10. ' and' → logprob: -8.317131996154785

Token 168: '       ' (ID: 309)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.02041587419807911
    2. ' dynamic' → logprob: -5.270415782928467
    3. ' algorithm' → logprob: -5.395415782928467
    4. ' method' → logprob: -5.520415782928467
    5. ' strategy' → logprob: -5.770415782928467
    6. 'appro' → logprob: -7.145415782928467
    7. '   ' → logprob: -7.770415782928467
    8. ' search' → logprob: -8.145416259765625
    9. '       ' → logprob: -8.270416259765625
    10. ' technique' → logprob: -8.520416259765625

Token 169: ' scan' (ID: 14659)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.30827462673187256
    2. 'appro' → logprob: -2.933274745941162
    3. ' method' → logprob: -3.433274745941162
    4. ' dynamic' → logprob: -3.683274745941162
    5. '#' → logprob: -3.808274745941162
    6. ')' → logprob: -4.433274745941162
    7. ' for' → logprob: -4.433274745941162
    8. '...' → logprob: -4.683274745941162
    9. 'dynamic' → logprob: -4.683274745941162
    10. 'binary' → logprob: -4.683274745941162

Token 170: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8027026057243347
    2. '   ' → logprob: -1.8027026653289795
    3. ' ' → logprob: -2.1777026653289795
    4. ' approach' → logprob: -2.5527026653289795
    5. 'ing' → logprob: -3.0527026653289795
    6. ' of' → logprob: -3.1777026653289795
    7. ' method' → logprob: -3.4277026653289795
    8. ' for' → logprob: -4.4277024269104
    9. ' that' → logprob: -4.9277024269104
    10. '.' → logprob: -5.1777024269104

Token 171: ' multiples' (ID: 70720)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3318261504173279
    2. ' the' → logprob: -1.4568262100219727
    3. 'self' → logprob: -3.0818262100219727
    4. 'the' → logprob: -5.956826210021973
    5. ' all' → logprob: -7.831826210021973
    6. ' range' → logprob: -8.706826210021973
    7. ' sorted' → logprob: -9.456826210021973
    8. ' a' → logprob: -9.706826210021973
    9. ' ' → logprob: -9.706826210021973
    10. ' cards' → logprob: -10.206826210021973

Token 172: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06515088677406311
    2. '.' → logprob: -4.065150737762451
    3. ',' → logprob: -4.315150737762451
    4. 'of' → logprob: -4.815150737762451
    5. ')' → logprob: -5.065150737762451
    6. '   ' → logprob: -5.190150737762451
    7. 'd' → logprob: -5.815150737762451
    8. '=' → logprob: -6.190150737762451
    9. ' and' → logprob: -6.190150737762451
    10. ' ' → logprob: -6.690150737762451

Token 173: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06319461017847061
    2. ' d' → logprob: -2.813194513320923
    3. ' the' → logprob: -7.563194751739502
    4. 'self' → logprob: -7.813194751739502
    5. 'the' → logprob: -8.688194274902344
    6. ' self' → logprob: -9.188194274902344
    7. '   ' → logprob: -11.813194274902344
    8. '       ' → logprob: -11.813194274902344
    9. ' ' → logprob: -11.938194274902344
    10. '
' → logprob: -12.313194274902344

Token 174: ' within' (ID: 3518)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4399595260620117
    2. '.' → logprob: -1.8149595260620117
    3. ':' → logprob: -2.1899595260620117
    4. ',' → logprob: -3.6899595260620117
    5. '
' → logprob: -4.314959526062012
    6. ':
' → logprob: -4.439959526062012
    7. ' to' → logprob: -4.564959526062012
    8. '.
' → logprob: -5.564959526062012
    9. ' :' → logprob: -5.814959526062012
    10. '   ' → logprob: -6.064959526062012

Token 175: ' the' (ID: 290)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1328336000442505
    2. ' self' → logprob: -1.5078336000442505
    3. ' the' → logprob: -1.6328336000442505
    4. 'self' → logprob: -1.8828336000442505
    5. 'range' → logprob: -2.257833480834961
    6. 'the' → logprob: -5.507833480834961
    7. '   ' → logprob: -9.007833480834961
    8. ' a' → logprob: -9.507833480834961
    9. '[self' → logprob: -10.632833480834961
    10. ' xrange' → logprob: -11.007833480834961

Token 176: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7663135528564453
    2. 'self' → logprob: -1.1413135528564453
    3. 'range' → logprob: -2.0163135528564453
    4. ' self' → logprob: -2.6413135528564453
    5. 'class' → logprob: -6.016313552856445
    6. 'card' → logprob: -6.516313552856445
    7. ' class' → logprob: -6.516313552856445
    8. 'max' → logprob: -6.516313552856445
    9. ' card' → logprob: -7.266313552856445
    10. ' max' → logprob: -7.641313552856445

Token 177: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45284804701805115
    2. ' of' → logprob: -1.0778480768203735
    3. '.' → logprob: -4.452847957611084
    4. '(' → logprob: -6.202847957611084
    5. '(self' → logprob: -6.202847957611084
    6. ',' → logprob: -6.327847957611084
    7. ')' → logprob: -6.577847957611084
    8. 'of' → logprob: -7.077847957611084
    9. ':' → logprob: -7.327847957611084
    10. '   ' → logprob: -7.452847957611084

Token 178: ' card' (ID: 4766)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16137878596782684
    2. ' self' → logprob: -1.9113787412643433
    3. ' the' → logprob: -7.161378860473633
    4. 'the' → logprob: -8.286378860473633
    5. '       ' → logprob: -9.786378860473633
    6. '(self' → logprob: -10.661378860473633
    7. 'card' → logprob: -11.286378860473633
    8. 'range' → logprob: -11.661378860473633
    9. 'cards' → logprob: -12.286378860473633
    10. ' range' → logprob: -12.661378860473633

Token 179: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05133539438247681
    2. ' values' → logprob: -3.301335334777832
    3. 'values' → logprob: -4.676335334777832
    4. ' s' → logprob: -5.926335334777832
    5. '_values' → logprob: -6.801335334777832
    6. '   ' → logprob: -9.801335334777832
    7. '_s' → logprob: -10.301335334777832
    8. ' ' → logprob: -12.426335334777832
    9. '_set' → logprob: -12.551335334777832
    10. '.values' → logprob: -13.176335334777832

Token 180: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03574317321181297
    2. ':' → logprob: -4.410743236541748
    3. '.' → logprob: -5.035743236541748
    4. ',' → logprob: -5.035743236541748
    5. '
' → logprob: -5.410743236541748
    6. '):' → logprob: -6.410743236541748
    7. '   ' → logprob: -7.035743236541748
    8. '<|end|>' → logprob: -7.660743236541748
    9. ':
' → logprob: -8.03574275970459
    10. ')' → logprob: -8.03574275970459

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003546497318893671
    2. '"""' → logprob: -7.003546714782715
    3. '
' → logprob: -7.503546714782715
    4. '        
' → logprob: -7.878546714782715
    5. '<|end|>' → logprob: -7.878546714782715
    6. '\n' → logprob: -8.003546714782715
    7. '```' → logprob: -8.378546714782715
    8. ')' → logprob: -8.628546714782715
    9. '#' → logprob: -9.378546714782715
    10. ',' → logprob: -9.503546714782715

Token 182: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.258004367351532
    2. '       ' → logprob: -1.7580044269561768
    3. ' 
' → logprob: -3.8830044269561768
    4. '\n' → logprob: -4.133004188537598
    5. '        
' → logprob: -4.883004188537598
    6. '```' → logprob: -5.508004188537598
    7. '"""' → logprob: -5.883004188537598
    8. '  
' → logprob: -6.633004188537598
    9. '"""
' (adapté à ' """
') → logprob: -7.258004188537598
    10. '#' → logprob: -7.508004188537598

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0665396898984909
    2. 'n' → logprob: -3.691539764404297
    3. '
' → logprob: -4.566539764404297
    4. '\' → logprob: -4.941539764404297
    5. ' 
' → logprob: -5.316539764404297
    6. '#' → logprob: -5.441539764404297
    7. 'result' → logprob: -6.066539764404297
    8. 'r' → logprob: -6.191539764404297
    9. '        
' → logprob: -6.441539764404297
    10. ' result' → logprob: -6.941539764404297

Token 184: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2539607584476471
    2. 'answer' → logprob: -2.2539608478546143
    3. 'result' → logprob: -2.6289608478546143
    4. 'best' → logprob: -3.8789608478546143
    5. 'res' → logprob: -4.753960609436035
    6. 'ans' → logprob: -6.003960609436035
    7. ' max' → logprob: -6.003960609436035
    8. 'n' → logprob: -6.128960609436035
    9. 'left' → logprob: -6.253960609436035
    10. 're' → logprob: -6.503960609436035

Token 185: '_rem' (ID: 42194)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.008115102536976337
    2. '_rem' → logprob: -5.133115291595459
    3. '_' → logprob: -6.758115291595459
    4. '_value' → logprob: -8.1331148147583
    5. '_card' → logprob: -8.7581148147583
    6. '_mod' → logprob: -8.8831148147583
    7. '_val' → logprob: -9.1331148147583
    8. '_r' → logprob: -9.2581148147583
    9. ' =' → logprob: -10.5081148147583
    10. '_result' → logprob: -10.7581148147583

Token 186: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29235729575157166
    2. ' =' → logprob: -2.1673572063446045
    3. 'inder' → logprob: -3.4173572063446045
    4. '   ' → logprob: -3.5423572063446045
    5. 'ainer' → logprob: -3.5423572063446045
    6. '=' → logprob: -4.042357444763184
    7. '       ' → logprob: -4.792357444763184
    8. 'ander' → logprob: -5.542357444763184
    9. '  ' → logprob: -5.792357444763184
    10. ' ' → logprob: -6.167357444763184

Token 187: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6441240310668945
    2. '0' → logprob: -0.7691240310668945
    3. ' -' → logprob: -5.0191240310668945
    4. ' ' → logprob: -5.5191240310668945
    5. '-d' → logprob: -7.6441240310668945
    6. 'd' → logprob: -8.644124031066895
    7. '-self' → logprob: -9.269124031066895
    8. 'self' → logprob: -10.644124031066895
    9. ' d' → logprob: -11.269124031066895
    10. ' self' → logprob: -11.394124031066895

Token 188: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6349206566810608
    2. '0' → logprob: -0.7599206566810608
    3. 'd' → logprob: -6.884920597076416
    4. '-d' → logprob: -7.259920597076416
    5. ' -' → logprob: -8.259921073913574
    6. ' ' → logprob: -8.384921073913574
    7. '-self' → logprob: -10.009921073913574
    8. 'self' → logprob: -10.759921073913574
    9. '-max' → logprob: -12.134921073913574
    10. ' d' → logprob: -12.384921073913574

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06984394788742065
    2. ' 
' → logprob: -3.5698440074920654
    3. '       ' → logprob: -3.8198440074920654
    4. '        
' → logprob: -5.319843769073486
    5. '
' → logprob: -5.444843769073486
    6. '  
' → logprob: -6.319843769073486
    7. ',' → logprob: -6.319843769073486
    8. ' for' → logprob: -6.694843769073486
    9. '\n' → logprob: -7.069843769073486
    10. '' → logprob: -7.069843769073486

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006632709410041571
    2. '
' → logprob: -5.6316328048706055
    3. ',' → logprob: -7.5066328048706055
    4. '  
' → logprob: -7.8816328048706055
    5. ' for' → logprob: -8.131632804870605
    6. ' current' → logprob: -8.381632804870605
    7. '        
' → logprob: -8.381632804870605
    8. '#' → logprob: -8.631632804870605
    9. ' i' → logprob: -9.006632804870605
    10. '   ' → logprob: -9.131632804870605

Token 191: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4036230742931366
    2. 'n' → logprob: -2.653623104095459
    3. '       ' → logprob: -2.903623104095459
    4. ' for' → logprob: -3.153623104095459
    5. 'm' → logprob: -3.778623104095459
    6. 'cards' → logprob: -3.778623104095459
    7. 'current' → logprob: -4.028623104095459
    8. 'i' → logprob: -4.028623104095459
    9. 'multiple' → logprob: -4.278623104095459
    10. 'prev' → logprob: -4.528623104095459

Token 192: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7046279311180115
    2. 'prev' → logprob: -1.8296279907226562
    3. 'cards' → logprob: -1.9546279907226562
    4. 'last' → logprob: -2.8296279907226562
    5. 'start' → logprob: -3.5796279907226562
    6. 'current' → logprob: -4.079627990722656
    7. 'n' → logprob: -4.204627990722656
    8. 'm' → logprob: -4.329627990722656
    9. 'max' → logprob: -4.579627990722656
    10. 'i' → logprob: -4.829627990722656

Token 193: ' each' (ID: 2454)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.7686017751693726
    2. ' card' → logprob: -2.143601894378662
    3. ' m' → logprob: -2.268601894378662
    4. ' i' → logprob: -2.518601894378662
    5. 'd' → logprob: -2.643601894378662
    6. ' multiple' → logprob: -2.893601894378662
    7. 'm' → logprob: -2.893601894378662
    8. ' val' → logprob: -3.018601894378662
    9. 'i' → logprob: -3.143601894378662
    10. ' v' → logprob: -3.143601894378662

Token 194: ' block' (ID: 4355)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' card' → logprob: -1.0874981880187988
    2. 'card' → logprob: -1.4624981880187988
    3. ' multiple' → logprob: -1.7124981880187988
    4. 'multiple' → logprob: -2.337498188018799
    5. 'm' → logprob: -3.712498188018799
    6. ' value' → logprob: -4.212498188018799
    7. 'v' → logprob: -4.212498188018799
    8. 'c' → logprob: -4.337498188018799
    9. 'mult' → logprob: -4.337498188018799
    10. ' i' → logprob: -4.462498188018799

Token 195: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19677689671516418
    2. '_start' → logprob: -2.696776866912842
    3. 'start' → logprob: -3.071776866912842
    4. '       ' → logprob: -4.446776866912842
    5. 'in' → logprob: -4.446776866912842
    6. 'size' → logprob: -4.571776866912842
    7. ',' → logprob: -5.071776866912842
    8. ' of' → logprob: -5.071776866912842
    9. '_size' → logprob: -5.321776866912842
    10. 'd' → logprob: -5.946776866912842

Token 196: ' size' (ID: 2349)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6158884167671204
    2. ' d' → logprob: -1.8658883571624756
    3. 'multip' → logprob: -2.3658883571624756
    4. ' multiples' → logprob: -2.4908883571624756
    5. 'range' → logprob: -3.4908883571624756
    6. 'cards' → logprob: -4.115888595581055
    7. 'self' → logprob: -4.490888595581055
    8. ' range' → logprob: -4.490888595581055
    9. 'values' → logprob: -4.615888595581055
    10. ' cards' → logprob: -4.740888595581055

Token 197: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47422555088996887
    2. ' d' → logprob: -0.9742255210876465
    3. ' ' → logprob: -10.224225997924805
    4. 'div' → logprob: -10.474225997924805
    5. '   ' → logprob: -10.974225997924805
    6. '_d' → logprob: -11.224225997924805
    7. 's' → logprob: -11.974225997924805
    8. '*d' → logprob: -12.661725997924805
    9. 'self' → logprob: -12.724225997924805
    10. ',' → logprob: -12.786725997924805

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10730531811714172
    2. ' in' → logprob: -2.4823052883148193
    3. ':' → logprob: -4.482305526733398
    4. ' ,' → logprob: -5.232305526733398
    5. 'in' → logprob: -6.982305526733398
    6. '=' → logprob: -9.232305526733398
    7. ',
' → logprob: -9.357305526733398
    8. '       ' → logprob: -9.607305526733398
    9. ' for' → logprob: -9.857305526733398
    10. ' i' → logprob: -10.357305526733398

Token 199: ' find' (ID: 1646)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4354095757007599
    2. 'start' → logprob: -2.1854095458984375
    3. ' for' → logprob: -2.6854095458984375
    4. ' i' → logprob: -2.6854095458984375
    5. ' current' → logprob: -3.6854095458984375
    6. '       ' → logprob: -4.5604095458984375
    7. 'i' → logprob: -4.6854095458984375
    8. ' multiple' → logprob: -4.8104095458984375
    9. 'for' → logprob: -5.1854095458984375
    10. ' m' → logprob: -5.3104095458984375

Token 200: ' max' (ID: 2999)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04064374044537544
    2. 'the' → logprob: -3.5406436920166016
    3. ' max' → logprob: -5.790643692016602
    4. 'max' → logprob: -6.540643692016602
    5. ' cards' → logprob: -6.915643692016602
    6. ' a' → logprob: -7.540643692016602
    7. 's' → logprob: -7.665643692016602
    8. ' last' → logprob: -7.790643692016602
    9. '<|end|>' → logprob: -8.165643692016602
    10. ' i' → logprob: -8.165643692016602

Token 201: ' card' (ID: 4766)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.23737949132919312
    2. '_value' → logprob: -2.487379550933838
    3. '_' → logprob: -3.237379550933838
    4. '_val' → logprob: -3.362379550933838
    5. '_rem' → logprob: -4.487379550933838
    6. '_index' → logprob: -4.612379550933838
    7. 'card' → logprob: -4.862379550933838
    8. '_re' → logprob: -5.112379550933838
    9. ' card' → logprob: -5.237379550933838
    10. '_token' → logprob: -6.612379550933838

Token 202: ' less' (ID: 3760)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5654798150062561
    2. '%' → logprob: -2.1904797554016113
    3. '_value' → logprob: -2.3154797554016113
    4. ' in' → logprob: -2.9404797554016113
    5. '_in' → logprob: -2.9404797554016113
    6. '_mod' → logprob: -3.8154797554016113
    7. ' that' → logprob: -4.065479755401611
    8. ' value' → logprob: -4.190479755401611
    9. ' mod' → logprob: -4.565479755401611
    10. '_val' → logprob: -5.190479755401611

Token 203: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.30355218052864075
    2. 'than' → logprob: -1.4285521507263184
    3. '_than' → logprob: -4.053552150726318
    4. '=' → logprob: -5.678552150726318
    5. '       ' → logprob: -7.803552150726318
    6. 'Than' → logprob: -7.928552150726318
    7. '-than' → logprob: -9.178552627563477
    8. '           ' → logprob: -9.428552627563477
    9. ' or' → logprob: -9.553552627563477
    10. '<=' → logprob: -9.678552627563477

Token 204: ' block' (ID: 4355)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016906075179576874
    2. ' or' → logprob: -4.516906261444092
    3. ' =' → logprob: -6.141906261444092
    4. 'or' → logprob: -7.016906261444092
    5. ' (' → logprob: -7.516906261444092
    6. ' ' → logprob: -7.766906261444092
    7. ' block' → logprob: -8.641905784606934
    8. 'd' → logprob: -8.766905784606934
    9. ' self' → logprob: -9.016905784606934
    10. ' d' → logprob: -9.016905784606934

Token 205: ' end' (ID: 1268)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.26152464747428894
    2. '_end' → logprob: -2.3865246772766113
    3. '_max' → logprob: -2.3865246772766113
    4. '_upper' → logprob: -4.636524677276611
    5. 'start' → logprob: -4.761524677276611
    6. '_size' → logprob: -4.886524677276611
    7. '_' → logprob: -5.386524677276611
    8. '_min' → logprob: -5.761524677276611
    9. '   ' → logprob: -6.011524677276611
    10. '_value' → logprob: -6.386524677276611

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3605741858482361
    2. ',' → logprob: -2.110574245452881
    3. '        
' → logprob: -3.360574245452881
    4. ' 
' → logprob: -3.610574245452881
    5. '
' → logprob: -3.735574245452881
    6. ' and' → logprob: -3.735574245452881
    7. ' ,' → logprob: -4.235574245452881
    8. ':' → logprob: -4.485574245452881
    9. ' for' → logprob: -4.485574245452881
    10. ' ' → logprob: -4.860574245452881

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02120339125394821
    2. '
' → logprob: -4.521203517913818
    3. ' for' → logprob: -6.021203517913818
    4. ',' → logprob: -6.146203517913818
    5. '        
' → logprob: -6.646203517913818
    6. ' 
' → logprob: -7.021203517913818
    7. '  
' → logprob: -7.146203517913818
    8. '   ' → logprob: -7.521203517913818
    9. ':' → logprob: -8.02120304107666
    10. 'for' → logprob: -8.14620304107666

Token 208: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10667002201080322
    2. ' for' → logprob: -2.8566699028015137
    3. ' current' → logprob: -4.731669902801514
    4. 'for' (adapté à ' for') → logprob: -4.981669902801514
    5. ' i' → logprob: -5.481669902801514
    6. ' block' → logprob: -5.731669902801514
    7. ' start' → logprob: -5.731669902801514
    8. 'start' → logprob: -5.856669902801514
    9. 'current' → logprob: -5.981669902801514
    10. ' next' → logprob: -6.356669902801514

Token 209: ' block' (ID: 4355)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.8915148377418518
    2. ' block' → logprob: -1.766514778137207
    3. ' m' → logprob: -1.891514778137207
    4. ' start' → logprob: -2.266514778137207
    5. ' base' → logprob: -3.266514778137207
    6. ' k' → logprob: -3.516514778137207
    7. ' end' → logprob: -3.641514778137207
    8. ' mul' → logprob: -3.641514778137207
    9. 'multiple' → logprob: -5.016514778137207
    10. ' i' → logprob: -5.141514778137207

Token 210: '_start' (ID: 10949)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.3165832757949829
    2. '_start' → logprob: -1.316583275794983
    3. '_' → logprob: -6.066583156585693
    4. ' in' → logprob: -7.316583156585693
    5. 'end' → logprob: -9.066583633422852
    6. 'start' → logprob: -10.066583633422852
    7. '_idx' → logprob: -10.441583633422852
    8. '_index' → logprob: -10.691583633422852
    9. '_size' → logprob: -11.066583633422852
    10. ' _' → logprob: -11.066583633422852

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1275682896375656
    2. 'in' → logprob: -2.127568244934082
    3. ',' → logprob: -7.502568244934082
    4. ' ' → logprob: -9.752568244934082
    5. ' ,' → logprob: -11.877568244934082
    6. ')' → logprob: -12.502568244934082
    7. '_in' → logprob: -12.752568244934082
    8. 'range' → logprob: -12.752568244934082
    9. '	in' → logprob: -13.002568244934082
    10. '
' → logprob: -13.127568244934082

Token 212: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12694910168647766
    2. 'range' → logprob: -2.1269490718841553
    3. '	range' → logprob: -11.251949310302734
    4. ' ' → logprob: -12.626949310302734
    5. '(range' → logprob: -13.001949310302734
    6. '   ' → logprob: -13.501949310302734
    7. ' xrange' → logprob: -14.126949310302734
    8. '  ' → logprob: -16.001949310302734
    9. ' ' → logprob: -16.501949310302734
    10. '_range' → logprob: -16.876949310302734

Token 213: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023902282118797302
    2. '(d' → logprob: -3.773902177810669
    3. '(self' → logprob: -7.398902416229248
    4. '0' → logprob: -10.89890193939209
    5. 'd' → logprob: -11.39890193939209
    6. ' (' → logprob: -11.64890193939209
    7. '(
' → logprob: -12.77390193939209
    8. ' ' → logprob: -14.14890193939209
    9. ',' → logprob: -14.27390193939209
    10. 'self' → logprob: -15.02390193939209

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -11.500024795532227
    3. ',d' → logprob: -11.750024795532227
    4. ',
' → logprob: -13.000024795532227
    5. 'd' → logprob: -13.625024795532227
    6. ',

' → logprob: -14.000024795532227
    7. ',len' → logprob: -14.750024795532227
    8. ',self' → logprob: -15.125024795532227
    9. '+' → logprob: -15.375024795532227
    10. '-' → logprob: -15.625024795532227

Token 215: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.3596853831550106e-05
    2. ' self' → logprob: -10.250053405761719
    3. '(self' → logprob: -11.750053405761719
    4. 'len' → logprob: -12.250053405761719
    5. 'max' → logprob: -13.500053405761719
    6. '       ' → logprob: -13.875053405761719
    7. '   ' → logprob: -14.000053405761719
    8. '
' → logprob: -14.375053405761719
    9. '2' → logprob: -14.750053405761719
    10. '           ' → logprob: -14.875053405761719

Token 216: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.013864113949239254
    2. '_max' → logprob: -4.638864040374756
    3. ' _' → logprob: -6.888864040374756
    4. ',' → logprob: -7.013864040374756
    5. '   ' → logprob: -7.513864040374756
    6. '.' → logprob: -7.513864040374756
    7. '.max' → logprob: -8.638864517211914
    8. '
' → logprob: -8.888864517211914
    9. '+' → logprob: -9.138864517211914
    10. ':' → logprob: -9.263864517211914

Token 217: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004639334045350552
    2. '_max' → logprob: -5.379639148712158
    3. '_cards' → logprob: -11.879639625549316
    4. 'cards' → logprob: -12.129639625549316
    5. ' max' → logprob: -12.754639625549316
    6. '
' → logprob: -12.879639625549316
    7. '_' → logprob: -14.629639625549316
    8. '.max' → logprob: -15.504639625549316
    9. '_card' → logprob: -16.004638671875
    10. '

' → logprob: -16.129638671875

Token 218: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -5.5577775128767826e-06
    2. '_value' → logprob: -13.375005722045898
    3. '+' → logprob: -14.000005722045898
    4. 'card' → logprob: -14.000005722045898
    5. '_' → logprob: -14.250005722045898
    6. '_cards' → logprob: -14.625005722045898
    7. ' _' → logprob: -15.500005722045898
    8. '
' → logprob: -15.750005722045898
    9. '_CARD' → logprob: -16.1250057220459
    10. 'Card' → logprob: -16.1250057220459

Token 219: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22552098333835602
    2. ' +' → logprob: -1.6005209684371948
    3. '+d' → logprob: -9.475521087646484
    4. ',' → logprob: -11.350521087646484
    5. '   ' → logprob: -11.850521087646484
    6. '+,' → logprob: -12.475521087646484
    7. '+
' → logprob: -12.725521087646484
    8. ' ' → logprob: -13.100521087646484
    9. ' ' → logprob: -14.100521087646484
    10. ' ,' → logprob: -14.100521087646484

Token 220: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5841996073722839
    2. '1' → logprob: -0.8341996073722839
    3. ' d' → logprob: -5.08419942855835
    4. ' ' → logprob: -6.20919942855835
    5. '
' → logprob: -11.709199905395508
    6. '   ' → logprob: -12.334199905395508
    7. '

' → logprob: -12.709199905395508
    8. '	d' → logprob: -13.334199905395508
    9. '2' → logprob: -13.709199905395508
    10. '  ' → logprob: -13.959199905395508

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002238043351098895
    2. ',d' → logprob: -6.2522382736206055
    3. ' ,' → logprob: -8.752238273620605
    4. '+d' → logprob: -9.502238273620605
    5. '+' → logprob: -9.877238273620605
    6. 'd' → logprob: -11.377238273620605
    7. '+,' → logprob: -12.502238273620605
    8. ',
' → logprob: -12.502238273620605
    9. ' +' → logprob: -12.627238273620605
    10. '   ' → logprob: -13.627238273620605

Token 222: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3868824541568756
    2. 'd' → logprob: -1.1368824243545532
    3. ')d' → logprob: -12.261882781982422
    4. '	d' → logprob: -12.511882781982422
    5. ' ' → logprob: -13.761882781982422
    6. '   ' → logprob: -14.386882781982422
    7. ' ' → logprob: -14.636882781982422
    8. '    ' → logprob: -14.636882781982422
    9. ')' → logprob: -15.136882781982422
    10. '  ' → logprob: -16.761882781982422

Token 223: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4741356074810028
    2. '):' → logprob: -0.9741356372833252
    3. '):
' → logprob: -10.474135398864746
    4. '   ' → logprob: -11.599135398864746
    5. '       ' → logprob: -12.224135398864746
    6. ':' → logprob: -12.224135398864746
    7. ',' → logprob: -12.724135398864746
    8. ')' → logprob: -12.849135398864746
    9. '):

' → logprob: -13.099135398864746
    10. ' ):
' → logprob: -13.224135398864746

Token 224: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02470824122428894
    2. ':
' → logprob: -3.8997082710266113
    3. '       ' → logprob: -6.399708271026611
    4. '           ' → logprob: -6.774708271026611
    5. ',' → logprob: -7.399708271026611
    6. '):' → logprob: -7.649708271026611
    7. '):
' → logprob: -9.024707794189453
    8. '<|end|>' → logprob: -10.649707794189453
    9. ':block' → logprob: -10.899707794189453
    10. ' :' → logprob: -10.899707794189453

Token 225: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9339534044265747
    2. 'left' → logprob: -1.9339534044265747
    3. '           ' → logprob: -2.183953285217285
    4. 'l' → logprob: -3.308953285217285
    5. 'low' → logprob: -3.308953285217285
    6. 'pos' → logprob: -3.558953285217285
    7. 'c' → logprob: -3.558953285217285
    8. '#' (adapté à ' #') → logprob: -3.558953285217285
    9. ' idx' → logprob: -3.558953285217285
    10. 'lo' → logprob: -3.558953285217285

Token 226: ' max' (ID: 2999)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6666483283042908
    2. 'pos' → logprob: -1.7916483879089355
    3. 'left' → logprob: -2.0416483879089355
    4. 'lo' → logprob: -3.4166483879089355
    5. 'import' → logprob: -3.5416483879089355
    6. 'low' → logprob: -3.6666483879089355
    7. 'l' → logprob: -3.7916483879089355
    8. '#' → logprob: -3.9166483879089355
    9. 'i' → logprob: -4.4166483879089355
    10. 'index' → logprob: -4.5416483879089355

Token 227: ' value' (ID: 1432)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0043673403561115265
    2. '_index' → logprob: -6.254367351531982
    3. '_val' → logprob: -6.504367351531982
    4. '_candidate' → logprob: -7.629367351531982
    5. '_value' → logprob: -8.004366874694824
    6. '_idx' → logprob: -9.879366874694824
    7. '_' → logprob: -10.379366874694824
    8. '_cards' → logprob: -11.754366874694824
    9. 'card' → logprob: -11.754366874694824
    10. '_less' → logprob: -12.379366874694824

Token 228: ' in' (ID: 306)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -1.2295811176300049
    2. '_in' → logprob: -1.3545811176300049
    3. '_index' → logprob: -1.6045811176300049
    4. ' =' → logprob: -2.604581117630005
    5. '_candidate' → logprob: -2.854581117630005
    6. '_idx' → logprob: -2.979581117630005
    7. '_b' → logprob: -3.354581117630005
    8. '_val' → logprob: -4.229580879211426
    9. '_card' → logprob: -5.604580879211426
    10. '_value' → logprob: -5.729580879211426

Token 229: ' this' (ID: 495)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4936402142047882
    2. 'self' → logprob: -1.1186401844024658
    3. ' [' → logprob: -3.368640184402466
    4. '[self' → logprob: -4.243640422821045
    5. '[' → logprob: -4.993640422821045
    6. ' the' → logprob: -5.743640422821045
    7. ' range' → logprob: -7.368640422821045
    8. 'the' → logprob: -7.868640422821045
    9. '(self' → logprob: -7.993640422821045
    10. '[i' → logprob: -8.118639945983887

Token 230: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.21273374557495117
    2. 'block' → logprob: -2.337733745574951
    3. '_block' → logprob: -3.212733745574951
    4. ' range' → logprob: -4.337733745574951
    5. ' =' → logprob: -5.087733745574951
    6. ' set' → logprob: -5.212733745574951
    7. '_card' → logprob: -5.837733745574951
    8. ' -' → logprob: -5.837733745574951
    9. ' [' → logprob: -5.962733745574951
    10. ' _' → logprob: -5.962733745574951

Token 231: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1025424525141716
    2. '=' → logprob: -2.6025424003601074
    3. '_idx' → logprob: -4.477542400360107
    4. '_index' → logprob: -5.852542400360107
    5. '_candidates' → logprob: -5.852542400360107
    6. '_less' → logprob: -6.852542400360107
    7. 'idx' → logprob: -6.977542400360107
    8. ' idx' → logprob: -7.477542400360107
    9. '           ' → logprob: -7.477542400360107
    10. '_possible' → logprob: -7.852542400360107

Token 232: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.05532025173306465
    2. 'block' → logprob: -3.1803202629089355
    3. ' min' → logprob: -4.5553202629089355
    4. 'min' → logprob: -7.1803202629089355
    5. ' max' → logprob: -7.8053202629089355
    6. '           ' → logprob: -8.555319786071777
    7. 'max' → logprob: -9.430319786071777
    8. ' self' → logprob: -9.930319786071777
    9. ' next' → logprob: -10.180319786071777
    10. '_block' → logprob: -10.180319786071777

Token 233: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00014406509581021965
    2. '_end' → logprob: -8.875144004821777
    3. '_stop' → logprob: -13.750144004821777
    4. 'Start' → logprob: -14.000144004821777
    5. 'start' → logprob: -14.500144004821777
    6. '_' → logprob: -14.750144004821777
    7. '_START' → logprob: -15.500144004821777
    8. '_Start' → logprob: -15.625144004821777
    9. '-' → logprob: -15.750144004821777
    10. '-start' → logprob: -15.875144004821777

Token 234: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28115782141685486
    2. '-' → logprob: -1.4061578512191772
    3. ' ' → logprob: -12.156157493591309
    4. ')' → logprob: -14.281157493591309
    5. '   ' → logprob: -14.656157493591309
    6. ' ' → logprob: -14.906157493591309
    7. '
' → logprob: -15.156157493591309
    8. ',' → logprob: -15.906157493591309
    9. '–' → logprob: -16.156158447265625
    10. 'minus' → logprob: -16.406158447265625

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '
' → logprob: -17.37510871887207
    4. '   ' → logprob: -18.37510871887207
    5. '<|end|>' → logprob: -18.87510871887207
    6. ' ' → logprob: -19.12510871887207
    7. '```' → logprob: -20.62510871887207
    8. '۱' → logprob: -21.12510871887207
    9. '...' → logprob: -21.25010871887207
    10. '           ' → logprob: -21.25010871887207

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -19.62500762939453
    4. '
' → logprob: -19.75000762939453
    5. '   ' → logprob: -20.12500762939453
    6. '۱' → logprob: -20.62500762939453
    7. '```' → logprob: -20.75000762939453
    8. '           ' → logprob: -21.25000762939453
    9. '১' → logprob: -21.87500762939453
    10. 'from' → logprob: -21.87500762939453

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011809160932898521
    2. ',' → logprob: -5.261809349060059
    3. '
' → logprob: -5.761809349060059
    4. '<|end|>' → logprob: -7.011809349060059
    5. '       ' → logprob: -7.761809349060059
    6. ')' → logprob: -7.886809349060059
    7. '<|end|>' → logprob: -8.011809349060059
    8. ' if' → logprob: -8.261809349060059
    9. ' while' → logprob: -9.011809349060059
    10. ':' → logprob: -9.011809349060059

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011025304906070232
    2. '
' → logprob: -5.136025428771973
    3. ',' → logprob: -6.136025428771973
    4. ' if' → logprob: -7.511025428771973
    5. '<|end|>' → logprob: -7.636025428771973
    6. '            
' → logprob: -7.761025428771973
    7. ')' → logprob: -7.886025428771973
    8. '       ' → logprob: -8.261025428771973
    9. ':' → logprob: -9.636025428771973
    10. ' while' → logprob: -9.761025428771973

Token 239: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.7339025139808655
    2. 'pos' → logprob: -1.2339024543762207
    3. 'import' → logprob: -3.1089024543762207
    4. ' idx' → logprob: -3.3589024543762207
    5. '#' → logprob: -3.4839024543762207
    6. 'lo' → logprob: -3.9839024543762207
    7. 'left' → logprob: -4.108902454376221
    8. 'i' → logprob: -4.108902454376221
    9. 'max' → logprob: -4.358902454376221
    10. 'index' → logprob: -4.858902454376221

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270542562007904
    2. '=' → logprob: -2.0177054405212402
    3. '_' → logprob: -11.267704963684082
    4. ' =
' → logprob: -12.767704963684082
    5. '	' → logprob: -12.892704963684082
    6. ' ' → logprob: -12.892704963684082
    7. ',' → logprob: -13.142704963684082
    8. '   ' → logprob: -13.392704963684082
    9. 's' → logprob: -13.767704963684082
    10. ')' → logprob: -14.267704963684082

Token 241: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16050925850868225
    2. 'self' → logprob: -1.9105092287063599
    3. ' ' → logprob: -8.78550910949707
    4. '0' → logprob: -9.41050910949707
    5. ' bis' → logprob: -10.78550910949707
    6. 'len' → logprob: -12.03550910949707
    7. 'bis' → logprob: -12.41050910949707
    8. ' len' → logprob: -12.53550910949707
    9. '   ' → logprob: -12.66050910949707
    10. '       ' → logprob: -13.03550910949707

Token 242: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0008746589301154017
    2. '_by' → logprob: -7.2508745193481445
    3. '.get' → logprob: -9.500874519348145
    4. '.' → logprob: -10.625874519348145
    5. ' .' → logprob: -10.625874519348145
    6. ' _' → logprob: -12.000874519348145
    7. '_index' → logprob: -12.500874519348145
    8. '['_' → logprob: -12.625874519348145
    9. '_cards' → logprob: -12.750874519348145
    10. 'self' → logprob: -12.750874519348145

Token 243: 'bis' (ID: 38042)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.04144487529993057
    2. 'bis' → logprob: -3.291444778442383
    3. 'cards' → logprob: -6.416444778442383
    4. 'find' → logprob: -7.666444778442383
    5. 'binary' → logprob: -7.666444778442383
    6. 'pre' → logprob: -8.166444778442383
    7. 'max' → logprob: -8.666444778442383
    8. '_index' → logprob: -8.791444778442383
    9. 'value' → logprob: -10.166444778442383
    10. 'search' → logprob: -10.166444778442383

Token 244: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.236549335066229e-05
    2. 'earch' → logprob: -11.250021934509277
    3. 'e' → logprob: -12.125021934509277
    4. 'ec' → logprob: -13.375021934509277
    5. 'ected' → logprob: -14.125021934509277
    6. 'ection' → logprob: -14.750021934509277
    7. '_left' → logprob: -15.000021934509277
    8. 'ector' → logprob: -15.375021934509277
    9. 'ects' → logprob: -15.625021934509277
    10. '_search' → logprob: -16.500022888183594

Token 245: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.08392779529094696
    2. '_right' → logprob: -2.583927869796753
    3. '.b' → logprob: -5.833927631378174
    4. '_' → logprob: -6.583927631378174
    5. '_cards' → logprob: -8.083928108215332
    6. '_by' → logprob: -8.708928108215332
    7. '._' → logprob: -9.833928108215332
    8. '(_' → logprob: -10.458928108215332
    9. '_index' → logprob: -11.333928108215332
    10. '_card' → logprob: -11.333928108215332

Token 246: '_cards' (ID: 101651)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009733980987221003
    2. '(' → logprob: -7.250973224639893
    3. '(block' → logprob: -8.62597370147705
    4. ' (' → logprob: -10.12597370147705
    5. 'self' → logprob: -10.37597370147705
    6. '(
' → logprob: -12.37597370147705
    7. ' self' → logprob: -13.00097370147705
    8. ')(' → logprob: -13.25097370147705
    9. '[self' → logprob: -14.37597370147705
    10. '((' → logprob: -14.50097370147705

Token 247: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.009969978593289852
    2. '(' → logprob: -4.634970188140869
    3. '(
' → logprob: -9.134969711303711
    4. ' (' → logprob: -9.634969711303711
    5. '(self' → logprob: -10.634969711303711
    6. '((' → logprob: -12.384969711303711
    7. '[' → logprob: -13.009969711303711
    8. ')(' → logprob: -13.384969711303711
    9. ',' → logprob: -13.384969711303711
    10. '(

' → logprob: -13.634969711303711

Token 248: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0012084494810551405
    2. ',' → logprob: -7.376208305358887
    3. ')' → logprob: -8.501208305358887
    4. 'start' → logprob: -8.751208305358887
    5. '_,' → logprob: -8.876208305358887
    6. '_' → logprob: -10.751208305358887
    7. 'Start' → logprob: -11.251208305358887
    8. '_)' → logprob: -11.626208305358887
    9. ')_' → logprob: -11.876208305358887
    10. '[' → logprob: -12.376208305358887

Token 249: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017430083826184273
    2. ' )' → logprob: -6.626742839813232
    3. ')
' → logprob: -8.00174331665039
    4. ',' → logprob: -10.75174331665039
    5. '       ' → logprob: -10.87674331665039
    6. ')`' → logprob: -11.37674331665039
    7. '           ' → logprob: -11.87674331665039
    8. ')-' → logprob: -12.25174331665039
    9. ')+' → logprob: -12.37674331665039
    10. ' )
' → logprob: -12.62674331665039

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012558852904476225
    2. ' ' → logprob: -9.250125885009766
    3. ')' → logprob: -10.500125885009766
    4. ' )' → logprob: -14.250125885009766
    5. '<|end|>' → logprob: -14.500125885009766
    6. '0' → logprob: -15.500125885009766
    7. ',' → logprob: -15.500125885009766
    8. '2' → logprob: -15.875125885009766
    9. ')>' → logprob: -16.250125885009766
    10. '),' → logprob: -18.062625885009766

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.75001049041748
    3. ')' → logprob: -13.12501049041748
    4. '<|end|>' → logprob: -14.37501049041748
    5. '2' → logprob: -15.87501049041748
    6. '0' → logprob: -16.375011444091797
    7. '```' → logprob: -16.625011444091797
    8. ',' → logprob: -17.125011444091797
    9. '
' → logprob: -17.250011444091797
    10. '   ' → logprob: -18.250011444091797

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. ')
' → logprob: -10.375042915344238
    3. ' )' → logprob: -12.250042915344238
    4. '       ' → logprob: -12.875042915344238
    5. ')`' → logprob: -14.000042915344238
    6. ')+' → logprob: -14.125042915344238
    7. '   ' → logprob: -14.500042915344238
    8. ',' → logprob: -14.500042915344238
    9. '           ' → logprob: -15.375042915344238
    10. '),' → logprob: -15.875042915344238

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49966946244239807
    2. '       ' → logprob: -1.7496694326400757
    3. ' -' → logprob: -2.1246695518493652
    4. '-' → logprob: -2.4996695518493652
    5. ' if' → logprob: -4.999669551849365
    6. '
' → logprob: -4.999669551849365
    7. 'if' → logprob: -6.999669551849365
    8. '-
' → logprob: -7.874669551849365
    9. ' 
' → logprob: -7.999669551849365
    10. ')' → logprob: -7.999669551849365

Token 254: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26302385330200195
    2. 'if' (adapté à ' if') → logprob: -1.513023853302002
    3. '       ' → logprob: -5.013023853302002
    4. '           ' → logprob: -6.888023853302002
    5. ' ' → logprob: -7.013023853302002
    6. '
' → logprob: -7.388023853302002
    7. '<|end|>' → logprob: -7.388023853302002
    8. ' 
' → logprob: -8.013023376464844
    9. ')' → logprob: -8.263023376464844
    10. ':' → logprob: -8.888023376464844

Token 255: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.023322343826293945
    2. 'idx' → logprob: -3.773322343826294
    3. '	idx' → logprob: -9.523322105407715
    4. ' ' → logprob: -13.898322105407715
    5. '(idx' → logprob: -14.023322105407715
    6. '   ' → logprob: -14.773322105407715
    7. ' ' → logprob: -14.773322105407715
    8. '0' → logprob: -15.273322105407715
    9. '[idx' → logprob: -15.398322105407715
    10. '_idx' → logprob: -15.398322105407715

Token 256: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5786250829696655
    2. '==' → logprob: -0.8286250829696655
    3. '>' → logprob: -6.453625202178955
    4. ' >' → logprob: -7.328625202178955
    5. '=' → logprob: -8.578624725341797
    6. '<=' → logprob: -9.828624725341797
    7. ' ' → logprob: -9.828624725341797
    8. ':' → logprob: -9.828624725341797
    9. ' <=' → logprob: -10.703624725341797
    10. ' is' → logprob: -11.078624725341797

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31333673000335693
    2. ' ' → logprob: -1.313336730003357
    3. 'len' → logprob: -9.688336372375488
    4. ' len' → logprob: -12.063336372375488
    5. ' -' → logprob: -12.438336372375488
    6. '-' → logprob: -12.813336372375488
    7. '   ' → logprob: -15.188336372375488
    8. '  ' → logprob: -15.813336372375488
    9. ' ' → logprob: -16.813337326049805
    10. 'None' → logprob: -17.688337326049805

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017946491425391287
    2. ' ' → logprob: -8.875179290771484
    3. '-' → logprob: -10.250179290771484
    4. ' -' → logprob: -13.125179290771484
    5. 'len' → logprob: -13.250179290771484
    6. '   ' → logprob: -15.500179290771484
    7. 'None' → logprob: -16.125179290771484
    8. '  ' → logprob: -17.000179290771484
    9. ' len' → logprob: -17.375179290771484
    10. ')' → logprob: -17.875179290771484

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47688809037208557
    2. ':
' → logprob: -0.9768880605697632
    3. '               ' → logprob: -6.101888179779053
    4. '           ' → logprob: -7.851888179779053
    5. ':return' → logprob: -8.976887702941895
    6. 'continue' → logprob: -10.476887702941895
    7. ' continue' → logprob: -11.851887702941895
    8. ':
' → logprob: -12.476887702941895
    9. ':

' → logprob: -12.726887702941895
    10. ' or' → logprob: -12.976887702941895

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0452364943921566
    2. 'continue' → logprob: -3.420236587524414
    3. ' continue' → logprob: -4.670236587524414
    4. '           ' → logprob: -6.170236587524414
    5. '   ' → logprob: -11.170236587524414
    6. '	continue' → logprob: -11.170236587524414
    7. '
' → logprob: -12.170236587524414
    8. '_continue' → logprob: -12.170236587524414
    9. ' continues' → logprob: -12.420236587524414
    10. 'Continue' → logprob: -12.545236587524414

Token 261: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.31120774149894714
    2. '               ' → logprob: -2.0612077713012695
    3. ' continue' → logprob: -2.0612077713012695
    4. '           ' → logprob: -4.4362077713012695
    5. '	continue' → logprob: -7.0612077713012695
    6. '   ' → logprob: -9.93620777130127
    7. '                   ' → logprob: -10.31120777130127
    8. '_continue' → logprob: -10.81120777130127
    9. 'contin' → logprob: -11.81120777130127
    10. '
' → logprob: -11.81120777130127

Token 262: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8845989108085632
    2. '           ' → logprob: -0.8845989108085632
    3. '       ' → logprob: -2.759598970413208
    4. ' 
' → logprob: -3.259598970413208
    5. '  
' → logprob: -3.759598970413208
    6. '<|end|>' → logprob: -4.134598731994629
    7. '            
' → logprob: -4.759598731994629
    8. '    
' → logprob: -5.134598731994629
    9. '        
' → logprob: -5.384598731994629
    10. '   
' → logprob: -6.134598731994629

Token 263: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15763936936855316
    2. '
' → logprob: -2.157639265060425
    3. '       ' → logprob: -3.907639265060425
    4. '            
' → logprob: -5.907639503479004
    5. ')' → logprob: -6.657639503479004
    6. 'max' → logprob: -6.782639503479004
    7. ' 
' → logprob: -6.907639503479004
    8. ',' → logprob: -7.657639503479004
    9. '  
' → logprob: -7.782639503479004
    10. '    
' → logprob: -7.907639503479004

Token 264: ' no' (ID: 860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001226539141498506
    2. 'max' → logprob: -7.376226425170898
    3. 'continue' → logprob: -9.001226425170898
    4. '       ' → logprob: -9.126226425170898
    5. ' max' → logprob: -9.626226425170898
    6. '   ' → logprob: -9.751226425170898
    7. '#' → logprob: -10.126226425170898
    8. '               ' → logprob: -10.126226425170898
    9. '```' → logprob: -10.876226425170898
    10. 'for' → logprob: -11.001226425170898

Token 265: ' card' (ID: 4766)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.4906902015209198
    2. ' card' → logprob: -1.7406902313232422
    3. 'cards' → logprob: -2.365690231323242
    4. ' valid' → logprob: -3.240690231323242
    5. '_cards' → logprob: -3.615690231323242
    6. '_card' → logprob: -3.990690231323242
    7. 'card' → logprob: -4.240690231323242
    8. ' self' → logprob: -5.115690231323242
    9. 'self' → logprob: -5.365690231323242
    10. '_valid' → logprob: -5.990690231323242

Token 266: ' <=' (ID: 5017)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2305304855108261
    2. '<|end|>' → logprob: -3.2305305004119873
    3. ' with' → logprob: -3.3555305004119873
    4. '           ' → logprob: -3.6055305004119873
    5. 'at' → logprob: -3.7305305004119873
    6. ' found' → logprob: -3.9805305004119873
    7. ' is' → logprob: -4.605530261993408
    8. ' has' → logprob: -4.980530261993408
    9. '<=' → logprob: -5.230530261993408
    10. '       ' → logprob: -5.230530261993408

Token 267: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.5760051608085632
    2. 'block' → logprob: -0.8260051608085632
    3. '(block' → logprob: -10.326004981994629
    4. '	block' → logprob: -10.826004981994629
    5. ' ' → logprob: -12.451004981994629
    6. '_block' → logprob: -12.826004981994629
    7. '
' → logprob: -13.076004981994629
    8. ' ' → logprob: -13.826004981994629
    9. '   ' → logprob: -14.201004981994629
    10. ':block' → logprob: -14.201004981994629

Token 268: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0006828876794315875
    2. 'start' → logprob: -7.375682830810547
    3. 'idx' → logprob: -10.875682830810547
    4. '_end' → logprob: -11.625682830810547
    5. ')' → logprob: -11.875682830810547
    6. '_idx' → logprob: -12.375682830810547
    7. '-start' → logprob: -13.000682830810547
    8. '-' → logprob: -13.125682830810547
    9. '```' → logprob: -13.250682830810547
    10. '[' → logprob: -13.500682830810547

Token 269: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889209687709808
    2. '-' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.57889175415039
    4. '   ' → logprob: -14.45389175415039
    5. '1' → logprob: -16.07889175415039
    6. '       ' → logprob: -16.32889175415039
    7. ' ' → logprob: -16.57889175415039
    8. '−' → logprob: -16.82889175415039
    9. ' -
' → logprob: -17.32889175415039
    10. '  ' → logprob: -17.32889175415039

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028778647538274527
    2. ' ' → logprob: -5.877877712249756
    3. '2' → logprob: -9.752878189086914
    4. '<|end|>' → logprob: -12.002878189086914
    5. '   ' → logprob: -13.815378189086914
    6. '```' → logprob: -13.940378189086914
    7. ' ' → logprob: -14.315378189086914
    8. ',' → logprob: -14.377878189086914
    9. '<|end|>' → logprob: -14.752878189086914
    10. ')' → logprob: -14.877878189086914

Token 271: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007996371947228909
    2. '
' → logprob: -5.257996559143066
    3. '            
' → logprob: -7.132996559143066
    4. ')' → logprob: -7.632996559143066
    5. ',' → logprob: -8.132996559143066
    6. '       ' → logprob: -8.507996559143066
    7. '<|end|>' → logprob: -8.632996559143066
    8. '          ' → logprob: -9.007996559143066
    9. ' 
' → logprob: -9.132996559143066
    10. '  
' → logprob: -9.382996559143066

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024081990122795105
    2. 'idx' → logprob: -4.399082183837891
    3. ' idx' → logprob: -5.524082183837891
    4. '       ' → logprob: -5.649082183837891
    5. '
' → logprob: -7.274082183837891
    6. ' if' → logprob: -7.399082183837891
    7. 'max' → logprob: -7.899082183837891
    8. 'if' → logprob: -8.39908218383789
    9. '            
' → logprob: -8.52408218383789
    10. '```' → logprob: -8.52408218383789

Token 273: ' highest' (ID: 11639)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7196944355964661
    2. '           ' → logprob: -1.0946943759918213
    3. 'candidate' → logprob: -2.5946943759918213
    4. ' max' → logprob: -3.2196943759918213
    5. ' candidate' → logprob: -3.8446943759918213
    6. 'card' → logprob: -4.5946946144104
    7. 'current' → logprob: -4.8446946144104
    8. 'value' → logprob: -5.5946946144104
    9. 'val' → logprob: -5.5946946144104
    10. ' current' → logprob: -5.7196946144104

Token 274: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.05277858301997185
    2. '_val' → logprob: -3.677778482437134
    3. '_value' → logprob: -3.927778482437134
    4. ' =' → logprob: -5.427778720855713
    5. '_' → logprob: -6.802778720855713
    6. '=' → logprob: -7.552778720855713
    7. '_index' → logprob: -8.677778244018555
    8. '_idx' → logprob: -9.052778244018555
    9. '_cards' → logprob: -10.177778244018555
    10. '=_' → logprob: -10.552778244018555

Token 275: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519378066062927
    2. '=' → logprob: -1.5019378662109375
    3. '=self' → logprob: -12.626937866210938
    4. ' ' → logprob: -12.751937866210938
    5. ' =
' → logprob: -14.001937866210938
    6. ',' → logprob: -15.126937866210938
    7. '=
' → logprob: -15.126937866210938
    8. ' ' → logprob: -15.501937866210938
    9. '=

' → logprob: -15.626937866210938
    10. '	' → logprob: -16.001937866210938

Token 276: '_block' (ID: 15644)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8379291892051697
    2. 'block' → logprob: -0.8379291892051697
    3. '_block' → logprob: -2.5879292488098145
    4. 'this' → logprob: -3.4629292488098145
    5. ' block' → logprob: -4.7129292488098145
    6. ' self' → logprob: -5.4629292488098145
    7. 'the' → logprob: -5.4629292488098145
    8. '=' → logprob: -6.2129292488098145
    9. ' this' → logprob: -6.2129292488098145
    10. '_this' → logprob: -6.2129292488098145

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327199935913086
    2. '=' → logprob: -1.3132719993591309
    3. '=self' → logprob: -11.813272476196289
    4. ' ' → logprob: -13.688272476196289
    5. ',' → logprob: -14.063272476196289
    6. ' ' → logprob: -15.313272476196289
    7. ' =
' → logprob: -15.438272476196289
    8. '=

' → logprob: -15.813272476196289
    9. '=
' → logprob: -16.18827247619629
    10. '	' → logprob: -16.68827247619629

Token 278: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740793704986572
    2. 'self' → logprob: -0.9740793704986572
    3. ' ' → logprob: -14.099079132080078
    4. '	self' → logprob: -14.099079132080078
    5. '(self' → logprob: -15.224079132080078
    6. '       ' → logprob: -15.724079132080078
    7. '   ' → logprob: -15.974079132080078
    8. ' ' → logprob: -15.974079132080078
    9. '=self' → logprob: -16.599079132080078
    10. '           ' → logprob: -16.724079132080078

Token 279: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.9160102712921798e-05
    2. '.' → logprob: -10.625029563903809
    3. ' .' → logprob: -13.000029563903809
    4. '	' → logprob: -14.125029563903809
    5. '   ' → logprob: -14.750029563903809
    6. ']._' → logprob: -15.000029563903809
    7. ' ' → logprob: -15.625029563903809
    8. '
' → logprob: -15.875029563903809
    9. '_' → logprob: -15.875029563903809
    10. '.
' → logprob: -16.000028610229492

Token 280: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00012761499965563416
    2. '_cards' → logprob: -9.250127792358398
    3. 'index' → logprob: -10.750127792358398
    4. ' cards' → logprob: -12.500127792358398
    5. '.cards' → logprob: -12.875127792358398
    6. '(cards' → logprob: -13.750127792358398
    7. '_index' → logprob: -14.250127792358398
    8. 'max' → logprob: -14.375127792358398
    9. 'card' → logprob: -15.500127792358398
    10. 'Cards' → logprob: -16.1251277923584

Token 281: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.981667537620524e-06
    2. 'idx' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. '[
' → logprob: -16.000001907348633
    5. '[index' → logprob: -17.750001907348633
    6. ' idx' → logprob: -17.750001907348633
    7. '	idx' → logprob: -18.375001907348633
    8. '```' → logprob: -18.500001907348633
    9. ' [' → logprob: -18.750001907348633
    10. '[id' → logprob: -19.125001907348633

Token 282: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04301072657108307
    2. ' -' → logprob: -3.168010711669922
    3. ')' → logprob: -12.293010711669922
    4. '[' → logprob: -12.793010711669922
    5. ']' → logprob: -13.293010711669922
    6. '1' → logprob: -13.418010711669922
    7. '<|end|>' → logprob: -15.543010711669922
    8. ' ' → logprob: -15.668010711669922
    9. ')-' → logprob: -16.293010711669922
    10. '0' → logprob: -16.418010711669922

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -14.375123977661133
    4. ')' → logprob: -16.625123977661133
    5. '```' → logprob: -17.125123977661133
    6. '   ' → logprob: -17.250123977661133
    7. ',' → logprob: -17.687623977661133
    8. '0' → logprob: -17.812623977661133
    9. '...' → logprob: -18.187623977661133
    10. '
' → logprob: -18.500123977661133

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -16.125015258789062
    4. '<|end|>' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.375015258789062
    6. '0' → logprob: -17.812515258789062
    7. '```' → logprob: -18.000015258789062
    8. ')' → logprob: -18.062515258789062
    9. '  ' → logprob: -18.500015258789062
    10. 'def' → logprob: -18.562515258789062

Token 285: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1614776998758316
    2. ']
' → logprob: -1.9114776849746704
    3. ')' → logprob: -7.286477565765381
    4. '       ' → logprob: -9.036478042602539
    5. ' ]' → logprob: -9.161478042602539
    6. ']
' → logprob: -9.411478042602539
    7. ')
' → logprob: -9.786478042602539
    8. ']%' → logprob: -10.036478042602539
    9. ']

' → logprob: -10.286478042602539
    10. '
' → logprob: -10.286478042602539

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007833861745893955
    2. '
' → logprob: -5.757833957672119
    3. ' remainder' → logprob: -6.257833957672119
    4. ' max' → logprob: -6.757833957672119
    5. '            
' → logprob: -7.757833957672119
    6. ',' → logprob: -8.257833480834961
    7. ' if' → logprob: -8.507833480834961
    8. 'max' → logprob: -8.757833480834961
    9. '       ' → logprob: -9.632833480834961
    10. ' current' → logprob: -9.757833480834961

Token 287: ' rem' (ID: 1662)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -1.109141230583191
    2. ' max' → logprob: -1.234141230583191
    3. ' rem' → logprob: -1.734141230583191
    4. ' current' → logprob: -2.8591413497924805
    5. 'max' → logprob: -2.9841413497924805
    6. '
' → logprob: -3.3591413497924805
    7. 'rem' (adapté à ' rem') → logprob: -3.7341413497924805
    8. ' candidate' → logprob: -4.4841413497924805
    9. 'current' → logprob: -4.6091413497924805
    10. 're' → logprob: -5.6091413497924805

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741794764995575
    2. ' =' → logprob: -0.9741795063018799
    3. '_' → logprob: -10.0991792678833
    4. 's' → logprob: -10.2241792678833
    5. '	' → logprob: -12.0991792678833
    6. '_=' → logprob: -12.8491792678833
    7. ' ' → logprob: -13.3491792678833
    8. 'ax' → logprob: -13.5991792678833
    9. '=max' → logprob: -13.7241792678833
    10. ',' → logprob: -13.7241792678833

Token 289: ' highest' (ID: 11639)
  Prédit: ' highest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' highest' → logprob: -0.2819645404815674
    2. 'highest' → logprob: -1.4069645404815674
    3. '(high' → logprob: -7.531964302062988
    4. ' (' → logprob: -8.781964302062988
    5. 'high' → logprob: -9.281964302062988
    6. ' high' → logprob: -10.656964302062988
    7. '(' → logprob: -12.156964302062988
    8. '(h' → logprob: -14.656964302062988
    9. '/high' → logprob: -14.781964302062988
    10. '最高' → logprob: -14.906964302062988

Token 290: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.375014305114746
    3. 'card' → logprob: -13.750014305114746
    4. 'Card' → logprob: -15.125014305114746
    5. '
' → logprob: -15.375014305114746
    6. '_CARD' → logprob: -15.500014305114746
    7. '_car' → logprob: -15.500014305114746
    8. '_
' → logprob: -15.875014305114746
    9. '_cards' → logprob: -16.25001335144043
    10. ' _' → logprob: -16.37501335144043

Token 291: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.468279752880335e-05
    2. '_' → logprob: -10.125064849853516
    3. 'in' → logprob: -11.125064849853516
    4. '%' → logprob: -12.375064849853516
    5. ' _' → logprob: -13.250064849853516
    6. 'In' → logprob: -14.000064849853516
    7. 's' → logprob: -14.000064849853516
    8. ' in' → logprob: -14.500064849853516
    9. '_block' → logprob: -15.000064849853516
    10. ' %' → logprob: -15.625064849853516

Token 292: '_block' (ID: 15644)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.2271125763654709
    2. '_block' → logprob: -1.6021125316619873
    3. ' block' → logprob: -6.477112770080566
    4. 'the' → logprob: -9.852112770080566
    5. '_' → logprob: -10.477112770080566
    6. '	block' → logprob: -11.227112770080566
    7. '
' → logprob: -11.727112770080566
    8. '%' → logprob: -11.852112770080566
    9. 'd' → logprob: -12.102112770080566
    10. ' ' → logprob: -12.477112770080566

Token 293: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.023314543068408966
    2. '%' → logprob: -3.7733144760131836
    3. ' %
' → logprob: -10.273314476013184
    4. ' ' → logprob: -10.773314476013184
    5. '%d' → logprob: -11.523314476013184
    6. '%
' → logprob: -13.898314476013184
    7. ' ' → logprob: -14.148314476013184
    8. '%x' → logprob: -14.773314476013184
    9. ')' → logprob: -15.023314476013184
    10. ' %

' → logprob: -15.148314476013184

Token 294: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25193095207214355
    2. ' d' → logprob: -1.5019309520721436
    3. ' 
' → logprob: -14.001931190490723
    4. '
' → logprob: -15.001931190490723
    5. ' ' → logprob: -15.626931190490723
    6. '	d' → logprob: -15.626931190490723
    7. '_d' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.376930236816406
    9. '(d' → logprob: -17.126930236816406
    10. ')d' → logprob: -17.376930236816406

Token 295: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1455242931842804
    2. ' if' → logprob: -2.645524263381958
    3. 'if' → logprob: -3.520524263381958
    4. '
' → logprob: -3.770524263381958
    5. '       ' → logprob: -5.020524501800537
    6. '               ' → logprob: -5.895524501800537
    7. '<|end|>' → logprob: -7.270524501800537
    8. ')' → logprob: -7.645524501800537
    9. '          ' → logprob: -8.520524024963379
    10. '		' → logprob: -8.645524024963379

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10418272763490677
    2. ' if' → logprob: -3.104182720184326
    3. '
' → logprob: -3.229182720184326
    4. 'if' → logprob: -4.479182720184326
    5. '       ' → logprob: -6.854182720184326
    6. '            
' → logprob: -7.104182720184326
    7. '               ' → logprob: -8.104183197021484
    8. '<|end|>' → logprob: -8.479183197021484
    9. ' 
' → logprob: -8.854183197021484
    10. '  
' → logprob: -9.229183197021484

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11493158340454102
    2. ' if' → logprob: -2.614931583404541
    3. '           ' → logprob: -3.364931583404541
    4. '
' → logprob: -7.614931583404541
    5. 'max' → logprob: -8.114931106567383
    6. '       ' → logprob: -10.739931106567383
    7. '               ' → logprob: -11.614931106567383
    8. ' max' → logprob: -12.989931106567383
    9. '            
' → logprob: -13.364931106567383
    10. '	if' → logprob: -13.489931106567383

Token 298: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.061967913061380386
    2. 'rem' → logprob: -2.8119678497314453
    3. '(rem' → logprob: -15.061967849731445
    4. '
' → logprob: -18.186967849731445
    5. 'reman' → logprob: -18.561967849731445
    6. '   ' → logprob: -19.061967849731445
    7. ' ' → logprob: -19.061967849731445
    8. ' ' → logprob: -19.561967849731445
    9. '

' → logprob: -19.936967849731445
    10. '_rem' → logprob: -20.061967849731445

Token 299: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25193750858306885
    2. '>' → logprob: -1.5019375085830688
    3. ' ' → logprob: -12.001937866210938
    4. '   ' → logprob: -14.501937866210938
    5. ' >
' → logprob: -14.626937866210938
    6. ' ' → logprob: -15.376937866210938
    7. ' >

' → logprob: -16.126937866210938
    8. '           ' → logprob: -16.251937866210938
    9. '">' → logprob: -16.376937866210938
    10. '[' → logprob: -16.376937866210938

Token 300: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078997299075127
    2. ' max' → logprob: -5.5040788650512695
    3. '
' → logprob: -14.62907886505127
    4. '	max' → logprob: -16.504079818725586
    5. '           ' → logprob: -17.254079818725586
    6. '   ' → logprob: -18.379079818725586
    7. '_max' → logprob: -18.754079818725586
    8. ' ' → logprob: -19.504079818725586
    9. '(max' → logprob: -19.879079818725586
    10. '```' → logprob: -19.879079818725586

Token 301: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.000000953674316
    3. '_re' → logprob: -15.750000953674316
    4. ' _' → logprob: -16.375
    5. '_rel' → logprob: -16.75
    6. 'rem' → logprob: -16.75
    7. '_
' → logprob: -17.875
    8. '_Rem' → logprob: -18.125
    9. '
' → logprob: -18.25
    10. '_REM' → logprob: -18.875

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011608283035457134
    2. ':
' → logprob: -4.761608123779297
    3. '           ' → logprob: -6.511608123779297
    4. '               ' → logprob: -6.511608123779297
    5. '=' → logprob: -12.511608123779297
    6. '):
' → logprob: -13.011608123779297
    7. '):' → logprob: -13.261608123779297
    8. '<|end|>' → logprob: -13.261608123779297
    9. '                       ' → logprob: -13.511608123779297
    10. '                   ' → logprob: -13.761608123779297

Token 303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008450066088698804
    2. '
' → logprob: -8.250844955444336
    3. '           ' → logprob: -8.250844955444336
    4. ' max' → logprob: -8.875844955444336
    5. 'max' → logprob: -9.125844955444336
    6. '                   ' → logprob: -10.250844955444336
    7. '   ' → logprob: -12.000844955444336
    8. '                ' → logprob: -12.250844955444336
    9. '                
' → logprob: -12.375844955444336
    10. '                       ' → logprob: -12.750844955444336

Token 304: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.058626268059015274
    2. 'max' (adapté à ' max') → logprob: -3.058626174926758
    3. '               ' → logprob: -4.808626174926758
    4. '                   ' → logprob: -6.933626174926758
    5. '
' → logprob: -7.433626174926758
    6. ' 
' → logprob: -9.058626174926758
    7. '                ' → logprob: -9.808626174926758
    8. '           ' → logprob: -10.808626174926758
    9. '_max' → logprob: -11.058626174926758
    10. '[max' → logprob: -11.183626174926758

Token 305: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.875001907348633
    3. '_re' → logprob: -15.125001907348633
    4. '_rest' → logprob: -15.375001907348633
    5. 'rem' → logprob: -15.500001907348633
    6. ' _' → logprob: -15.750001907348633
    7. '_res' → logprob: -16.125001907348633
    8. '_Rem' → logprob: -16.375001907348633
    9. 'Rem' → logprob: -17.000001907348633
    10. '_rel' → logprob: -17.125001907348633

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. '=

' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.376930236816406
    5. '=
' → logprob: -16.501930236816406
    6. '.=' → logprob: -16.501930236816406
    7. ' =
' → logprob: -16.501930236816406
    8. '=max' → logprob: -17.501930236816406
    9. '<|end|>' → logprob: -17.626930236816406
    10. '＝' → logprob: -17.626930236816406

Token 307: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.023245595395565033
    2. 'rem' → logprob: -3.7732455730438232
    3. '(rem' → logprob: -16.023244857788086
    4. ' ' → logprob: -18.648244857788086
    5. '_rem' → logprob: -19.023244857788086
    6. ' ret' → logprob: -19.273244857788086
    7. 're' → logprob: -19.398244857788086
    8. 'r' → logprob: -20.398244857788086
    9. '.rem' → logprob: -20.398244857788086
    10. '
' → logprob: -21.023244857788086

Token 308: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.614671528339386
    2. '       ' → logprob: -0.864671528339386
    3. '        
' → logprob: -3.739671468734741
    4. 'return' → logprob: -5.36467170715332
    5. ' return' → logprob: -5.98967170715332
    6. '  
' → logprob: -6.36467170715332
    7. ' 
' → logprob: -6.48967170715332
    8. '    
' → logprob: -7.23967170715332
    9. '	return' → logprob: -7.36467170715332
    10. '		
' → logprob: -7.73967170715332

Token 309: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2282300740480423
    2. '
' → logprob: -1.8532301187515259
    3. ' 
' → logprob: -3.8532299995422363
    4. '        
' → logprob: -4.478229999542236
    5. ' return' → logprob: -4.853229999542236
    6. '  
' → logprob: -6.728229999542236
    7. '    
' → logprob: -6.728229999542236
    8. 'return' → logprob: -6.978229999542236
    9. '	return' → logprob: -7.228229999542236
    10. '        ' → logprob: -7.353229999542236

Token 310: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5770742893218994
    2. 'if' (adapté à ' if') → logprob: -0.9520742893218994
    3. '                ' → logprob: -4.07707405090332
    4. '               ' → logprob: -4.82707405090332
    5. 'self' → logprob: -5.32707405090332
    6. 'return' → logprob: -5.70207405090332
    7. '                
' → logprob: -5.95207405090332
    8. '
' → logprob: -6.07707405090332
    9. ' 
' → logprob: -6.07707405090332
    10. ' ' → logprob: -6.20207405090332

Token 311: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.227250610711053e-05
    2. ' max' → logprob: -10.250041961669922
    3. '
' → logprob: -12.375041961669922
    4. 'rem' → logprob: -12.875041961669922
    5. '	max' → logprob: -17.750041961669922
    6. 'maximum' → logprob: -18.125041961669922
    7. 'ma' → logprob: -18.625041961669922
    8. ' rem' → logprob: -18.625041961669922
    9. 'm' → logprob: -18.750041961669922
    10. '
' → logprob: -19.000041961669922

Token 312: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.375001907348633
    3. 'rem' → logprob: -15.250001907348633
    4. '==' → logprob: -15.625001907348633
    5. '
' → logprob: -16.250001907348633
    6. '_rest' → logprob: -16.625001907348633
    7. '_res' → logprob: -17.125001907348633
    8. '_re' → logprob: -17.500001907348633
    9. 'Rem' → logprob: -17.625001907348633
    10. ' rem' → logprob: -17.625001907348633

Token 313: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008723417297005653
    2. ' ==' → logprob: -4.758723258972168
    3. '==
' → logprob: -9.383723258972168
    4. '=' → logprob: -11.133723258972168
    5. ']==' → logprob: -13.008723258972168
    6. ')==' → logprob: -13.008723258972168
    7. '==(' → logprob: -13.758723258972168
    8. '>=' → logprob: -13.758723258972168
    9. ' ' → logprob: -14.383723258972168
    10. ')' → logprob: -14.383723258972168

Token 314: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.65101717156358e-05
    2. ' d' → logprob: -9.250096321105957
    3. '(d' → logprob: -15.625096321105957
    4. 'div' → logprob: -15.875096321105957
    5. '
' → logprob: -17.250097274780273
    6. '   ' → logprob: -17.375097274780273
    7. ' ' → logprob: -18.000097274780273
    8. '	d' → logprob: -18.500097274780273
    9. ' (' → logprob: -19.125097274780273
    10. '(' → logprob: -19.125097274780273

Token 315: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2519298195838928
    2. ' -' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.126930236816406
    4. '1' → logprob: -15.501930236816406
    5. '   ' → logprob: -16.876930236816406
    6. 'minus' → logprob: -17.126930236816406
    7. ':' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '_minus' → logprob: -17.626930236816406
    10. '–' → logprob: -18.001930236816406

Token 316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -18.750085830688477
    4. '```' → logprob: -19.500085830688477
    5. '   ' → logprob: -21.000085830688477
    6. '0' → logprob: -21.000085830688477
    7. ' ' → logprob: -21.125085830688477
    8. '2' → logprob: -21.500085830688477
    9. 'def' → logprob: -21.875085830688477
    10. '=' → logprob: -22.062585830688477

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -19.125
    4. '```' → logprob: -19.5
    5. '
' → logprob: -19.875
    6. '۱' → logprob: -20.625
    7. 'def' → logprob: -20.625
    8. '2' → logprob: -21.0
    9. '-' → logprob: -21.375
    10. '   ' → logprob: -21.5625

Token 318: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.36038434505462646
    2. ':' → logprob: -1.7353843450546265
    3. '                   ' → logprob: -2.110384464263916
    4. '               ' → logprob: -5.610384464263916
    5. '           ' → logprob: -6.985384464263916
    6. ':return' → logprob: -8.360383987426758
    7. '                       ' → logprob: -8.985383987426758
    8. '):
' → logprob: -9.860383987426758
    9. '                           ' → logprob: -10.860383987426758
    10. ',' → logprob: -11.110383987426758

Token 319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012678056373260915
    2. 'break' → logprob: -9.750126838684082
    3. '               ' → logprob: -10.875126838684082
    4. 'return' → logprob: -11.125126838684082
    5. ' break' → logprob: -11.375126838684082
    6. '                       ' → logprob: -11.500126838684082
    7. ' return' → logprob: -12.125126838684082
    8. '           ' → logprob: -12.875126838684082
    9. '                  ' → logprob: -13.375126838684082
    10. '				' → logprob: -14.125126838684082

Token 320: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.09322353452444077
    2. '                   ' → logprob: -2.5932235717773438
    3. ' break' → logprob: -4.343223571777344
    4. 'return' → logprob: -7.218223571777344
    5. '	break' → logprob: -8.718223571777344
    6. '                       ' → logprob: -8.968223571777344
    7. '   ' → logprob: -9.343223571777344
    8. '               ' → logprob: -9.343223571777344
    9. '       ' → logprob: -10.968223571777344
    10. '           ' → logprob: -11.218223571777344

Token 321: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020003693643957376
    2. '
' → logprob: -7.127000331878662
    3. 'return' → logprob: -7.377000331878662
    4. '	return' → logprob: -8.25200080871582
    5. '	' → logprob: -8.62700080871582
    6. ' return' → logprob: -9.75200080871582
    7. '   ' → logprob: -10.50200080871582
    8. '           ' → logprob: -11.37700080871582
    9. '        
' → logprob: -11.37700080871582
    10. '	   ' → logprob: -12.50200080871582

Token 322: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5406740307807922
    2. '       ' → logprob: -0.9156740307807922
    3. 'return' → logprob: -4.415674209594727
    4. ' return' → logprob: -6.040674209594727
    5. '        
' → logprob: -7.165674209594727
    6. '' → logprob: -7.665674209594727
    7. '   ' → logprob: -7.790674209594727
    8. '	return' → logprob: -7.790674209594727
    9. '  
' → logprob: -8.790674209594727
    10. '
' → logprob: -8.790674209594727

Token 323: ' can't' (ID: 8535)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10745242238044739
    2. '       ' → logprob: -2.357452392578125
    3. ' return' → logprob: -4.982452392578125
    4. '
' → logprob: -8.357452392578125
    5. '   ' → logprob: -9.982452392578125
    6. 'def' → logprob: -10.857452392578125
    7. '               ' → logprob: -10.857452392578125
    8. '```' → logprob: -11.357452392578125
    9. 'break' → logprob: -11.732452392578125
    10. 'early' → logprob: -12.232452392578125

Token 324: ' do' (ID: 621)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.5833490490913391
    2. 'get' → logprob: -1.2083489894866943
    3. 'be' → logprob: -3.2083489894866943
    4. ' do' → logprob: -3.2083489894866943
    5. ' get' → logprob: -3.3333489894866943
    6. 'im' → logprob: -3.8333489894866943
    7. ' be' → logprob: -6.083349227905273
    8. 'return' → logprob: -6.833349227905273
    9. 'maximize' → logprob: -7.333349227905273
    10. 'beat' → logprob: -7.708349227905273

Token 325: ' better' (ID: 3432)
  Prédit: 'better'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'better' → logprob: -0.16037066280841827
    2. ' better' → logprob: -1.9103707075119019
    3. 'any' → logprob: -9.285370826721191
    4. 'Better' → logprob: -10.410370826721191
    5. ' beter' → logprob: -11.785370826721191
    6. ' بهتر' → logprob: -12.160370826721191
    7. ' besser' → logprob: -12.660370826721191
    8. ' any' → logprob: -12.910370826721191
    9. ' лучше' → logprob: -13.285370826721191
    10. 'b' → logprob: -14.285370826721191

Token 326: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006883674650453031
    2. '
' → logprob: -8.000688552856445
    3. 'return' → logprob: -8.375688552856445
    4. '           ' → logprob: -9.625688552856445
    5. ' return' → logprob: -10.250688552856445
    6. '   ' → logprob: -12.125688552856445
    7. '	' → logprob: -12.500688552856445
    8. '               ' → logprob: -12.750688552856445
    9. '	return' → logprob: -13.000688552856445
    10. '        
' → logprob: -13.375688552856445

Token 327: ' this' (ID: 495)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.2675339877605438
    2. ' this' → logprob: -2.017534017562866
    3. 'that' → logprob: -2.892534017562866
    4. ' d' → logprob: -4.017533779144287
    5. 'this' → logprob: -4.142533779144287
    6. 'd' → logprob: -4.392533779144287
    7. 'max' → logprob: -9.892534255981445
    8. ' max' → logprob: -11.892534255981445
    9. ' ' → logprob: -12.267534255981445
    10. ' maximum' → logprob: -13.017534255981445

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039094552397727966
    2. '
' → logprob: -3.4140944480895996
    3. '   ' → logprob: -6.7890944480896
    4. '	return' → logprob: -7.0390944480896
    5. '        
' → logprob: -7.1640944480896
    6. 'return' → logprob: -7.2890944480896
    7. '           ' → logprob: -7.4140944480896
    8. ' return' → logprob: -7.5390944480896
    9. '	' → logprob: -9.039094924926758
    10. ')' → logprob: -9.164094924926758

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03412071242928505
    2. '	return' → logprob: -4.034120559692383
    3. 'return' → logprob: -5.034120559692383
    4. '
' → logprob: -5.284120559692383
    5. '   ' → logprob: -6.284120559692383
    6. '	' → logprob: -6.409120559692383
    7. ' return' → logprob: -7.909120559692383
    8. '        
' → logprob: -9.159120559692383
    9. '	   ' → logprob: -9.909120559692383
    10. '           ' → logprob: -9.909120559692383

Token 330: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044007204473018646
    2. 'return' (adapté à ' return') → logprob: -3.4190073013305664
    3. ' return' → logprob: -5.169007301330566
    4. '   ' → logprob: -6.044007301330566
    5. '	return' → logprob: -6.294007301330566
    6. '	' → logprob: -8.294007301330566
    7. '
' → logprob: -10.169007301330566
    8. '        
' → logprob: -10.419007301330566
    9. ' ' → logprob: -11.419007301330566
    10. '<|end|>' → logprob: -11.419007301330566

Token 331: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25193166732788086
    2. 'max' → logprob: -1.5019316673278809
    3. '	max' → logprob: -13.001932144165039
    4. ' ' → logprob: -15.001932144165039
    5. '(max' → logprob: -17.00193214416504
    6. '_max' → logprob: -17.37693214416504
    7. ',max' → logprob: -18.00193214416504
    8. '[max' → logprob: -18.50193214416504
    9. '​' → logprob: -19.62693214416504
    10. '=max' → logprob: -19.75193214416504

Token 332: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -4.127333340875339e-06
    2. 'rem' → logprob: -13.125003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_re' → logprob: -14.125003814697266
    5. '_rest' → logprob: -16.125003814697266
    6. '_res' → logprob: -16.250003814697266
    7. '_rel' → logprob: -16.625003814697266
    8. '_ret' → logprob: -17.125003814697266
    9. '_rec' → logprob: -17.250003814697266
    10. '_r' → logprob: -17.375003814697266

Token 333: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022847412154078484
    2. '
' → logprob: -4.2728471755981445
    3. '    
' → logprob: -5.0228471755981445
    4. 'def' → logprob: -7.1478471755981445
    5. ' 
' → logprob: -8.522847175598145
    6. '<|end|>' → logprob: -8.647847175598145
    7. ':' → logprob: -8.897847175598145
    8. '	def' → logprob: -9.397847175598145
    9. '  
' → logprob: -9.647847175598145
    10. '_' → logprob: -9.772847175598145

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014458229765295982
    2. '_' → logprob: -4.889458179473877
    3. 'def' → logprob: -5.639458179473877
    4. '
' → logprob: -6.764458179473877
    5. '    
' → logprob: -6.764458179473877
    6. '	def' → logprob: -8.389458656311035
    7. ' def' → logprob: -8.764458656311035
    8. ' 
' → logprob: -9.139458656311035
    9. ' ' → logprob: -9.389458656311035
    10. '       ' → logprob: -10.014458656311035

Token 335: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08000009506940842
    2. '   ' → logprob: -3.080000162124634
    3. ' def' → logprob: -3.580000162124634
    4. '_def' → logprob: -6.704999923706055
    5. '_' → logprob: -6.954999923706055
    6. 'import' → logprob: -7.954999923706055
    7. '	def' → logprob: -8.204999923706055
    8. ' _' → logprob: -9.329999923706055
    9. ' ' → logprob: -9.954999923706055
    10. '_de' → logprob: -10.329999923706055

Token 336: ' _' (ID: 1175)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12944813072681427
    2. ' _' → logprob: -2.129448175430298
    3. '_' → logprob: -6.004447937011719
    4. '_def' → logprob: -10.629447937011719
    5. '_find' → logprob: -11.879447937011719
    6. '_cards' → logprob: -12.629447937011719
    7. '_bs' → logprob: -13.504447937011719
    8. '_bc' → logprob: -13.754447937011719
    9. '_pb' → logprob: -14.379447937011719
    10. '_add' → logprob: -14.379447937011719

Token 337: 'bis' (ID: 38042)
  Prédit: 'bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.9361264946837764e-07
    2. '_b' → logprob: -16.0
    3. 'cards' → logprob: -16.875
    4. ' bis' → logprob: -18.375
    5. '-b' → logprob: -18.625
    6. '_' → logprob: -19.0
    7. 'index' → logprob: -19.375
    8. 'bs' → logprob: -19.75
    9. '_cards' → logprob: -19.75
    10. 'b' → logprob: -20.0

Token 338: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.3856492842023727e-06
    2. 'e' → logprob: -14.250000953674316
    3. 'sect' → logprob: -15.125000953674316
    4. 'ec' → logprob: -15.750000953674316
    5. 'ected' → logprob: -15.750000953674316
    6. '_' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.125001907348633
    8. 'pect' → logprob: -17.875001907348633
    9. 'ecta' → logprob: -18.125001907348633
    10. 'ects' → logprob: -18.250001907348633

Token 339: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00014370749704539776
    2. '_left' → logprob: -9.375144004821777
    3. '_' → logprob: -9.750144004821777
    4. '_rhs' → logprob: -15.500144004821777
    5. '_r' → logprob: -15.750144004821777
    6. ' _' → logprob: -16.12514305114746
    7. '_RIGHT' → logprob: -17.37514305114746
    8. '_b' → logprob: -18.12514305114746
    9. '_self' → logprob: -18.25014305114746
    10. '_in' → logprob: -18.50014305114746

Token 340: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0022826455533504486
    2. '_' → logprob: -6.377282619476318
    3. '(self' → logprob: -8.127283096313477
    4. '(' → logprob: -8.377283096313477
    5. '_(' → logprob: -10.877283096313477
    6. '(cards' → logprob: -11.502283096313477
    7. '```' → logprob: -12.502283096313477
    8. '_card' → logprob: -12.627283096313477
    9. '_C' → logprob: -13.002283096313477
    10. '_codes' → logprob: -13.252283096313477

Token 341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18000264465808868
    2. '(' → logprob: -1.8050026893615723
    3. ' (' → logprob: -8.805002212524414
    4. '(
' → logprob: -9.430002212524414
    5. 'self' → logprob: -11.930002212524414
    6. '(s' → logprob: -12.055002212524414
    7. '<|end|>' → logprob: -12.305002212524414
    8. '(

' → logprob: -13.555002212524414
    9. '	self' → logprob: -13.680002212524414
    10. '(sel' → logprob: -13.805002212524414

Token 342: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11511190235614777
    2. ',' → logprob: -2.490111827850342
    3. '(' → logprob: -4.115111827850342
    4. ')(' → logprob: -4.990111827850342
    5. 'self' → logprob: -6.865111827850342
    6. ' (' → logprob: -7.365111827850342
    7. ')' → logprob: -7.740111827850342
    8. ')(
' → logprob: -8.8651123046875
    9. ',self' → logprob: -8.9901123046875
    10. '}(' → logprob: -9.4901123046875

Token 343: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5375990271568298
    2. 'value' → logprob: -1.2875990867614746
    3. ' x' → logprob: -2.2875990867614746
    4. ' value' → logprob: -3.2875990867614746
    5. 'target' → logprob: -7.912599086761475
    6. 'val' → logprob: -8.037598609924316
    7. ' val' → logprob: -8.287598609924316
    8. 'key' → logprob: -9.537598609924316
    9. ' target' → logprob: -10.537598609924316
    10. ' key' → logprob: -10.787598609924316

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07140295952558517
    2. ',' → logprob: -2.8214030265808105
    3. 'self' → logprob: -4.9464030265808105
    4. '):
' → logprob: -6.3214030265808105
    5. '(self' → logprob: -8.946402549743652
    6. ')' → logprob: -9.446402549743652
    7. '   ' → logprob: -9.446402549743652
    8. ' ):' → logprob: -9.446402549743652
    9. '       ' → logprob: -9.571402549743652
    10. ' self' → logprob: -11.071402549743652

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11288907378911972
    2. 'import' → logprob: -2.362889051437378
    3. 'return' → logprob: -5.487889289855957
    4. ' import' → logprob: -6.112889289855957
    5. ' return' → logprob: -6.112889289855957
    6. 'self' → logprob: -6.487889289855957
    7. ' self' → logprob: -6.862889289855957
    8. '   ' → logprob: -7.612889289855957
    9. ' ' → logprob: -8.362889289855957
    10. '```' → logprob: -8.362889289855957

Token 346: ' """
' (ID: 7037)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24474018812179565
    2. '       ' → logprob: -1.6197402477264404
    3. 'from' → logprob: -4.494740009307861
    4. ' import' → logprob: -4.994740009307861
    5. ' from' → logprob: -7.869740009307861
    6. 'return' → logprob: -7.994740009307861
    7. '   ' → logprob: -8.99474048614502
    8. 'left' → logprob: -9.49474048614502
    9. '```' → logprob: -9.86974048614502
    10. ' lo' → logprob: -10.24474048614502

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.888566792011261
    2. ' lo' → logprob: -1.2635667324066162
    3. 'import' → logprob: -1.5135667324066162
    4. ' import' → logprob: -3.388566732406616
    5. 'l' → logprob: -4.388566970825195
    6. 'from' → logprob: -4.388566970825195
    7. ' l' → logprob: -4.763566970825195
    8. ' from' → logprob: -5.013566970825195
    9. 'lo' → logprob: -5.388566970825195
    10. ' left' → logprob: -5.763566970825195

Token 348: ' Custom' (ID: 11306)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3074795603752136
    2. 'lo' → logprob: -1.8074796199798584
    3. 'left' → logprob: -2.5574796199798584
    4. 'low' → logprob: -4.557479381561279
    5. 'from' → logprob: -5.182479381561279
    6. 'l' → logprob: -5.807479381561279
    7. ' lo' → logprob: -5.807479381561279
    8. '       ' → logprob: -7.057479381561279
    9. ' import' → logprob: -9.932479858398438
    10. '   ' → logprob: -9.932479858398438

Token 349: ' binary' (ID: 15600)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23633141815662384
    2. 'import' → logprob: -1.8613314628601074
    3. ' bis' → logprob: -4.486331462860107
    4. 'from' → logprob: -4.611331462860107
    5. 'bis' → logprob: -4.611331462860107
    6. ' def' → logprob: -5.111331462860107
    7. '_binary' → logprob: -5.236331462860107
    8. '       ' → logprob: -5.361331462860107
    9. '   ' → logprob: -6.111331462860107
    10. '_b' → logprob: -6.611331462860107

Token 350: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.052050068974494934
    2. ' search' → logprob: -3.3020501136779785
    3. 'search' → logprob: -4.3020501136779785
    4. '_' → logprob: -7.9270501136779785
    5. ' _' → logprob: -11.92704963684082
    6. '   ' → logprob: -13.55204963684082
    7. 'def' → logprob: -14.05204963684082
    8. 'Search' → logprob: -15.67704963684082
    9. ' def' → logprob: -15.80204963684082
    10. ' ' → logprob: -16.30204963684082

Token 351: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11832782626152039
    2. '       ' → logprob: -2.2433278560638428
    3. '(' → logprob: -5.493327617645264
    4. '   ' → logprob: -7.493327617645264
    5. 'def' → logprob: -8.118328094482422
    6. ' (' → logprob: -8.743328094482422
    7. 'self' → logprob: -9.118328094482422
    8. '(
' → logprob: -9.243328094482422
    9. ' self' → logprob: -10.243328094482422
    10. ' for' → logprob: -10.618328094482422

Token 352: ' returns' (ID: 7377)
  Prédit: ' lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.08068554848432541
    2. '       ' → logprob: -3.080685615539551
    3. ' low' → logprob: -4.330685615539551
    4. ' left' → logprob: -4.580685615539551
    5. 'lo' → logprob: -5.705685615539551
    6. 'left' → logprob: -6.205685615539551
    7. 'low' → logprob: -6.330685615539551
    8. 'import' → logprob: -7.580685615539551
    9. ' import' → logprob: -8.58068561553955
    10. ' l' → logprob: -8.95568561553955

Token 353: ' index' (ID: 3472)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21735505759716034
    2. 'len' → logprob: -2.3423550128936768
    3. 'the' → logprob: -3.0923550128936768
    4. ' len' → logprob: -4.217355251312256
    5. ' self' → logprob: -4.467355251312256
    6. 'self' → logprob: -4.717355251312256
    7. '       ' → logprob: -4.967355251312256
    8. ' bis' → logprob: -5.967355251312256
    9. ' lo' → logprob: -6.592355251312256
    10. 'left' → logprob: -6.592355251312256

Token 354: ' where' (ID: 1919)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1502628326416016
    2. 'import' → logprob: -1.9002628326416016
    3. 'of' → logprob: -2.1502628326416016
    4. ' in' → logprob: -2.4002628326416016
    5. '       ' → logprob: -2.7752628326416016
    6. ' to' → logprob: -2.9002628326416016
    7. ' self' → logprob: -3.4002628326416016
    8. ' for' → logprob: -3.4002628326416016
    9. 'from' → logprob: -3.4002628326416016
    10. '(self' → logprob: -3.9002628326416016

Token 355: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2520837187767029
    2. ' x' → logprob: -1.5020837783813477
    3. 'import' → logprob: -9.127083778381348
    4. ' to' → logprob: -10.502083778381348
    5. '	x' → logprob: -12.252083778381348
    6. 'to' → logprob: -12.377083778381348
    7. ' ' → logprob: -12.502083778381348
    8. '   ' → logprob: -13.627083778381348
    9. '_x' → logprob: -14.002083778381348
    10. ' cards' → logprob: -14.752083778381348

Token 356: ' would' (ID: 1481)
  Prédit: ' would'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' would' → logprob: -0.06737218797206879
    2. ' could' → logprob: -3.4423720836639404
    3. 'would' → logprob: -3.5673720836639404
    4. '+' → logprob: -6.1923723220825195
    5. ' should' → logprob: -6.4423723220825195
    6. 'could' → logprob: -7.4423723220825195
    7. 'should' → logprob: -7.9423723220825195
    8. ' can' → logprob: -9.06737232208252
    9. ' +' → logprob: -9.44237232208252
    10. ')' → logprob: -9.81737232208252

Token 357: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.20197436213493347
    2. ' be' → logprob: -1.7019743919372559
    3. '	be' → logprob: -7.951974391937256
    4. '_be' → logprob: -9.076973915100098
    5. '+' → logprob: -10.076973915100098
    6. 'go' → logprob: -11.576973915100098
    7. '```' → logprob: -11.576973915100098
    8. '<|end|>' → logprob: -11.701973915100098
    9. '.be' → logprob: -12.576973915100098
    10. 'insert' → logprob: -12.826973915100098

Token 358: ' inserted' (ID: 40986)
  Prédit: ' inserted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inserted' → logprob: -0.0015124812489375472
    2. 'insert' → logprob: -6.50151252746582
    3. '_insert' → logprob: -11.75151252746582
    4. ' placed' → logprob: -13.12651252746582
    5. 'Inserted' → logprob: -15.87651252746582
    6. 'placed' → logprob: -16.75151252746582
    7. ' insert' → logprob: -16.87651252746582
    8. ' inser' → logprob: -17.12651252746582
    9. '	insert' → logprob: -17.50151252746582
    10. '.insert' → logprob: -17.62651252746582

Token 359: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1131872907280922
    2. ' in' → logprob: -2.363187313079834
    3. 'to' → logprob: -4.613187313079834
    4. 'in' → logprob: -5.988187313079834
    5. '       ' → logprob: -8.613186836242676
    6. ' for' → logprob: -9.363186836242676
    7. ' while' → logprob: -9.613186836242676
    8. ',' → logprob: -9.988186836242676
    9. ' into' → logprob: -10.613186836242676
    10. '   ' → logprob: -10.988186836242676

Token 360: ' keep' (ID: 3357)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.5120043158531189
    2. 'insert' → logprob: -1.1370043754577637
    3. ' maintain' → logprob: -3.1370043754577637
    4. 'keep' → logprob: -4.262004375457764
    5. '_insert' → logprob: -4.762004375457764
    6. ' insert' → logprob: -5.137004375457764
    7. ' the' → logprob: -6.137004375457764
    8. 'return' → logprob: -6.762004375457764
    9. ' keep' → logprob: -7.012004375457764
    10. 'the' → logprob: -7.137004375457764

Token 361: ' sorted' (ID: 20099)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9660528898239136
    2. 'self' → logprob: -1.0910528898239136
    3. ' self' → logprob: -1.3410528898239136
    4. ' sorted' → logprob: -5.091053009033203
    5. '_sorted' → logprob: -5.341053009033203
    6. 'the' → logprob: -5.716053009033203
    7. 'sorted' → logprob: -5.841053009033203
    8. '   ' → logprob: -5.841053009033203
    9. '       ' → logprob: -7.091053009033203
    10. ' list' → logprob: -8.466053009033203

Token 362: ' order' (ID: 2569)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6757538914680481
    2. '_cards' → logprob: -1.3007538318634033
    3. 'self' → logprob: -2.4257538318634033
    4. '_list' → logprob: -3.3007538318634033
    5. 'list' → logprob: -3.6757538318634033
    6. '(cards' → logprob: -4.050754070281982
    7. 'array' → logprob: -4.550754070281982
    8. ' list' → logprob: -4.550754070281982
    9. ' self' → logprob: -5.175754070281982
    10. 'arr' → logprob: -5.300754070281982

Token 363: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034229230135679245
    2. ' in' → logprob: -4.409229278564453
    3. '(self' → logprob: -4.409229278564453
    4. '   ' → logprob: -5.784229278564453
    5. ',' → logprob: -6.409229278564453
    6. 'in' → logprob: -6.909229278564453
    7. '(' → logprob: -6.909229278564453
    8. 'def' → logprob: -6.909229278564453
    9. 'self' → logprob: -7.409229278564453
    10. ' (' → logprob: -8.284229278564453

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010790417902171612
    2. '
' → logprob: -5.3857903480529785
    3. '   ' → logprob: -5.7607903480529785
    4. '        
' → logprob: -6.7607903480529785
    5. ' 
' → logprob: -6.7607903480529785
    6. '```' → logprob: -8.260790824890137
    7. '    
' → logprob: -9.260790824890137
    8. '\n' → logprob: -9.260790824890137
    9. '  
' → logprob: -9.635790824890137
    10. '        ' → logprob: -10.260790824890137

Token 365: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018942449241876602
    2. '   ' → logprob: -6.376894474029541
    3. '```' → logprob: -9.001893997192383
    4. '
' → logprob: -10.876893997192383
    5. 'return' → logprob: -11.251893997192383
    6. ' return' → logprob: -11.626893997192383
    7. 'def' → logprob: -11.751893997192383
    8. '           ' → logprob: -12.876893997192383
    9. '    ' → logprob: -13.001893997192383
    10. '        
' → logprob: -13.126893997192383

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013901159400120378
    2. '   ' → logprob: -7.876389980316162
    3. ' lo' → logprob: -8.00139045715332
    4. 'left' → logprob: -8.50139045715332
    5. 'low' → logprob: -8.62639045715332
    6. '```' → logprob: -9.25139045715332
    7. 'lo' → logprob: -9.37639045715332
    8. 'import' → logprob: -9.75139045715332
    9. ' low' → logprob: -10.75139045715332
    10. ' left' → logprob: -11.00139045715332

Token 367: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' (adapté à ' lo') → logprob: -0.7651939988136292
    2. 'left' → logprob: -1.0151939392089844
    3. 'low' → logprob: -1.7651939392089844
    4. ' lo' → logprob: -7.515193939208984
    5. 'l' → logprob: -7.765193939208984
    6. '       ' → logprob: -8.515193939208984
    7. 'import' → logprob: -9.515193939208984
    8. ' left' → logprob: -10.765193939208984
    9. ' low' → logprob: -13.265193939208984
    10. '```' → logprob: -13.265193939208984

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6951484680175781
    2. '=' → logprob: -0.9451484680175781
    3. ' =' → logprob: -2.195148468017578
    4. ' ,' → logprob: -7.070148468017578
    5. '       ' → logprob: -8.820148468017578
    6. '        ' → logprob: -10.945148468017578
    7. ' ' → logprob: -11.570148468017578
    8. '   ' → logprob: -12.820148468017578
    9. '    ' → logprob: -13.195148468017578
    10. ',
' → logprob: -13.320148468017578

Token 369: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.03805835545063019
    2. ' hi' → logprob: -3.288058280944824
    3. '_hi' → logprob: -11.538058280944824
    4. 'ho' → logprob: -12.538058280944824
    5. 'Hi' → logprob: -14.163058280944824
    6. ' ' → logprob: -14.163058280944824
    7. 'high' → logprob: -14.788058280944824
    8. '<|end|>' → logprob: -14.913058280944824
    9. '-hi' → logprob: -15.038058280944824
    10. '
' → logprob: -15.038058280944824

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326422095298767
    2. ' =' → logprob: -1.31326425075531
    3. ' ' → logprob: -13.188263893127441
    4. '=
' → logprob: -15.313263893127441
    5. ' =
' → logprob: -16.063264846801758
    6. ',' → logprob: -16.563264846801758
    7. '<|end|>' → logprob: -16.813264846801758
    8. '=self' → logprob: -16.938264846801758
    9. '    ' → logprob: -17.188264846801758
    10. '=

' → logprob: -17.813264846801758

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -17.625335693359375
    4. '   ' → logprob: -17.875335693359375
    5. '       ' → logprob: -18.750335693359375
    6. ' ' → logprob: -19.125335693359375
    7. '  ' → logprob: -19.625335693359375
    8. '
' → logprob: -19.875335693359375
    9. '	' → logprob: -21.000335693359375
    10. '０' → logprob: -21.125335693359375

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '000' → logprob: -20.875001907348633
    6. '00' → logprob: -20.875001907348633
    7. '[' → logprob: -21.375001907348633
    8. '
' → logprob: -21.375001907348633
    9. '=' → logprob: -21.500001907348633
    10. '       ' → logprob: -21.750001907348633

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005795597098767757
    2. '       ' → logprob: -6.255795478820801
    3. ',
' → logprob: -6.255795478820801
    4. '
' → logprob: -6.505795478820801
    5. ' ,' → logprob: -8.3807954788208
    6. ',len' → logprob: -9.1307954788208
    7. '<|end|>' → logprob: -9.7557954788208
    8. '```' → logprob: -11.5057954788208
    9. '   ' → logprob: -12.0057954788208
    10. '        
' → logprob: -12.3807954788208

Token 374: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141372084617615
    2. ' len' → logprob: -1.7014137506484985
    3. '(len' → logprob: -15.576414108276367
    4. 'self' → logprob: -15.576414108276367
    5. '       ' → logprob: -16.576414108276367
    6. '   ' → logprob: -16.826414108276367
    7. '	len' → logprob: -17.451414108276367
    8. ' self' → logprob: -18.326414108276367
    9. '[len' → logprob: -18.451414108276367
    10. '=len' → logprob: -18.826414108276367

Token 375: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -10.625025749206543
    3. 'self' → logprob: -13.875025749206543
    4. ' (' → logprob: -17.375024795532227
    5. ' self' → logprob: -18.750024795532227
    6. '(
' → logprob: -19.250024795532227
    7. '```' → logprob: -20.125024795532227
    8. '	self' → logprob: -20.750024795532227
    9. '=self' → logprob: -20.875024795532227
    10. '[self' → logprob: -21.250024795532227

Token 376: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005694134160876274
    2. '(self' → logprob: -5.5056939125061035
    3. 'self' → logprob: -6.7556939125061035
    4. '   ' → logprob: -8.880694389343262
    5. '_self' → logprob: -9.505694389343262
    6. '       ' → logprob: -9.755694389343262
    7. '_cards' → logprob: -10.130694389343262
    8. ' self' → logprob: -10.255694389343262
    9. '.' → logprob: -10.505694389343262
    10. '	self' → logprob: -10.755694389343262

Token 377: 'cards' (ID: 40956)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -8.44706009957008e-05
    2. '._' → logprob: -9.62508487701416
    3. ' _' → logprob: -11.37508487701416
    4. '   ' → logprob: -13.25008487701416
    5. '```' → logprob: -13.75008487701416
    6. '.cards' → logprob: -13.87508487701416
    7. 'cards' → logprob: -13.87508487701416
    8. '_card' → logprob: -14.50008487701416
    9. '
' → logprob: -15.00008487701416
    10. '_c' → logprob: -15.25008487701416

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026772029232233763
    2. '<|end|>' → logprob: -6.1276774406433105
    3. ')
' → logprob: -7.7526774406433105
    4. ')-' → logprob: -10.377676963806152
    5. '<|end|>' → logprob: -11.252676963806152
    6. ' )' → logprob: -11.627676963806152
    7. '-' → logprob: -13.627676963806152
    8. '')' → logprob: -13.877676963806152
    9. '       ' → logprob: -14.377676963806152
    10. '),' → logprob: -14.377676963806152

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026697113644331694
    2. '   ' → logprob: -7.127669811248779
    3. '	while' → logprob: -7.127669811248779
    4. ' while' → logprob: -7.502669811248779
    5. 'while' → logprob: -7.752669811248779
    6. '
' → logprob: -10.252669334411621
    7. '```' → logprob: -11.127669334411621
    8. '        
' → logprob: -11.252669334411621
    9. '<|end|>' → logprob: -12.752669334411621
    10. '	       ' → logprob: -13.002669334411621

Token 380: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15195773541927338
    2. ' while' → logprob: -2.7769577503204346
    3. 'while' (adapté à ' while') → logprob: -3.0269577503204346
    4. '   ' → logprob: -3.5269577503204346
    5. '	while' → logprob: -7.1519575119018555
    6. ' ' → logprob: -10.151957511901855
    7. '  ' → logprob: -10.901957511901855
    8. '    ' → logprob: -11.151957511901855
    9. '```' → logprob: -11.276957511901855
    10. '	   ' → logprob: -12.151957511901855

Token 381: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.008614926598966122
    2. ' lo' → logprob: -4.758615016937256
    3. '(lo' → logprob: -14.758614540100098
    4. '_lo' → logprob: -17.008615493774414
    5. 'Lo' → logprob: -18.633615493774414
    6. ' ' → logprob: -18.633615493774414
    7. '   ' → logprob: -19.008615493774414
    8. '  ' → logprob: -20.383615493774414
    9. 'loo' → logprob: -20.383615493774414
    10. '.lo' → logprob: -20.758615493774414

Token 382: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38814976811408997
    2. '<' → logprob: -1.1381497383117676
    3. '<|end|>' → logprob: -7.638149738311768
    4. ' <=' → logprob: -7.763149738311768
    5. '<=' → logprob: -8.513150215148926
    6. ' ' → logprob: -9.513150215148926
    7. '[' → logprob: -11.263150215148926
    8. '<int' → logprob: -11.388150215148926
    9. '<len' → logprob: -11.638150215148926
    10. '<n' → logprob: -11.638150215148926

Token 383: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -1.1637164789135568e-05
    2. ' hi' → logprob: -11.375011444091797
    3. 'ho' → logprob: -16.000011444091797
    4. 'Hi' → logprob: -18.750011444091797
    5. 'ha' → logprob: -19.875011444091797
    6. '_hi' → logprob: -20.125011444091797
    7. ' ' → logprob: -21.000011444091797
    8. '-hi' → logprob: -21.875011444091797
    9. '
' → logprob: -22.000011444091797
    10. 'hiq' → logprob: -22.500011444091797

Token 384: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6339974403381348
    2. ':' → logprob: -0.7589974403381348
    3. '           ' → logprob: -7.883997440338135
    4. '       ' → logprob: -8.258996963500977
    5. ' and' → logprob: -8.508996963500977
    6. '<|end|>' → logprob: -8.758996963500977
    7. '):
' → logprob: -9.133996963500977
    8. '   ' → logprob: -9.508996963500977
    9. '<|end|>' → logprob: -9.758996963500977
    10. ',' → logprob: -10.383996963500977

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15941265225410461
    2. '       ' → logprob: -2.5344126224517822
    3. '   ' → logprob: -3.9094126224517822
    4. ' 
' → logprob: -4.534412860870361
    5. ' ' → logprob: -5.159412860870361
    6. '
' → logprob: -5.159412860870361
    7. '            
' → logprob: -5.784412860870361
    8. '    ' → logprob: -6.159412860870361
    9. ' mid' → logprob: -6.159412860870361
    10. '        ' → logprob: -6.534412860870361

Token 386: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.023366138339042664
    2. ' mid' → logprob: -3.7733662128448486
    3. 'm' → logprob: -9.64836597442627
    4. '           ' → logprob: -10.02336597442627
    5. '   ' → logprob: -12.39836597442627
    6. '_mid' → logprob: -12.77336597442627
    7. '[mid' → logprob: -13.64836597442627
    8. 'mi' → logprob: -13.89836597442627
    9. 'middle' → logprob: -14.39836597442627
    10. 'md' → logprob: -14.52336597442627

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28158149123191833
    2. '=' → logprob: -1.4065815210342407
    3. '<|end|>' → logprob: -7.781581401824951
    4. ' ' → logprob: -12.40658187866211
    5. ')' → logprob: -12.53158187866211
    6. '=int' → logprob: -13.53158187866211
    7. '```' → logprob: -14.28158187866211
    8. '<|end|>' → logprob: -14.28158187866211
    9. '=
' → logprob: -14.78158187866211
    10. '=(' → logprob: -14.90658187866211

Token 388: ' (' (ID: 350)
  Prédit: '(lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lo' → logprob: -0.2520425021648407
    2. ' (' → logprob: -1.502042531967163
    3. ' lo' → logprob: -9.252042770385742
    4. '(' → logprob: -11.502042770385742
    5. ' ' → logprob: -12.627042770385742
    6. 'lo' → logprob: -13.252042770385742
    7. '(low' → logprob: -13.377042770385742
    8. '
' → logprob: -15.252042770385742
    9. '_lo' → logprob: -16.127042770385742
    10. '   ' → logprob: -16.377042770385742

Token 389: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -1.1472419600977446e-06
    2. ' lo' → logprob: -13.750000953674316
    3. 'hi' → logprob: -17.000001907348633
    4. '(lo' → logprob: -17.625001907348633
    5. '_lo' → logprob: -19.500001907348633
    6. 'li' → logprob: -20.750001907348633
    7. 'Lo' → logprob: -21.500001907348633
    8. '.lo' → logprob: -22.875001907348633
    9. 'loo' → logprob: -23.000001907348633
    10. '-lo' → logprob: -23.250001907348633

Token 390: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692999839782715
    2. ' +' → logprob: -2.126929998397827
    3. ')' → logprob: -14.126930236816406
    4. 'lo' → logprob: -14.251930236816406
    5. '+
' → logprob: -15.876930236816406
    6. '＋' → logprob: -16.126930236816406
    7. '```' → logprob: -16.126930236816406
    8. '
' → logprob: -16.751930236816406
    9. ' +
' → logprob: -17.251930236816406
    10. '0' → logprob: -17.751930236816406

Token 391: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -5.836499985889532e-05
    2. ' hi' → logprob: -9.7500581741333
    3. ' ' → logprob: -18.125059127807617
    4. 'ho' → logprob: -19.750059127807617
    5. '  ' → logprob: -19.875059127807617
    6. '
' → logprob: -19.875059127807617
    7. '_hi' → logprob: -20.000059127807617
    8. ')' → logprob: -20.125059127807617
    9. 'Hi' → logprob: -20.250059127807617
    10. '   ' → logprob: -20.500059127807617

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021557629224844277
    2. ')//' → logprob: -8.500215530395508
    3. ')>>' → logprob: -11.375215530395508
    4. ' )' → logprob: -14.250215530395508
    5. ')
' → logprob: -17.125215530395508
    6. '）' → logprob: -20.000215530395508
    7. '0' → logprob: -21.500215530395508
    8. '   ' → logprob: -21.875215530395508
    9. ')

' → logprob: -22.250215530395508
    10. ')#' → logprob: -22.250215530395508

Token 393: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017272992990911007
    2. ')>>' → logprob: -7.376727104187012
    3. ' //' → logprob: -7.626727104187012
    4. ')//' → logprob: -8.251727104187012
    5. '>>' → logprob: -8.626727104187012
    6. '//' → logprob: -9.751727104187012
    7. ' )' → logprob: -9.751727104187012
    8. ' >>' → logprob: -10.001727104187012
    9. '```' → logprob: -12.501727104187012
    10. ']' → logprob: -13.501727104187012

Token 394: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.252185821533203
    4. '۲' → logprob: -17.502185821533203
    5. '  ' → logprob: -18.002185821533203
    6. '
' → logprob: -18.814685821533203
    7. '    ' → logprob: -19.377185821533203
    8. '```' → logprob: -19.439685821533203
    9. '٢' → logprob: -19.877185821533203
    10. '3' → logprob: -19.939685821533203

Token 395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۲' → logprob: -20.750001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '２' → logprob: -22.375001907348633
    6. '२' → logprob: -23.500001907348633
    7. '  ' → logprob: -23.500001907348633
    8. '```' → logprob: -23.750001907348633
    9. '٢' → logprob: -23.875001907348633
    10. '২' → logprob: -24.062501907348633

Token 396: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006490480620414019
    2. ' if' → logprob: -6.131490707397461
    3. '       ' → logprob: -6.256490707397461
    4. '
' → logprob: -6.506490707397461
    5. 'if' → logprob: -7.881490707397461
    6. '            
' → logprob: -9.006490707397461
    7. '<|end|>' → logprob: -9.506490707397461
    8. '		' → logprob: -9.631490707397461
    9. '               ' → logprob: -9.881490707397461
    10. '   ' → logprob: -10.131490707397461

Token 398: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04031917825341225
    2. ' if' → logprob: -3.2903192043304443
    3. 'if' (adapté à ' if') → logprob: -6.165318965911865
    4. '               ' → logprob: -9.040319442749023
    5. '   ' → logprob: -10.040319442749023
    6. ' ' → logprob: -12.915319442749023
    7. '       ' → logprob: -12.915319442749023
    8. '	if' → logprob: -13.040319442749023
    9. 'If' → logprob: -13.665319442749023
    10. '            ' → logprob: -13.915319442749023

Token 399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038271214812994
    2. ' self' → logprob: -3.288271188735962
    3. 'x' → logprob: -8.413270950317383
    4. '	self' → logprob: -12.038270950317383
    5. ' x' → logprob: -13.413270950317383
    6. '(self' → logprob: -15.913270950317383
    7. '   ' → logprob: -16.163270950317383
    8. ' ' → logprob: -17.163270950317383
    9. ' ' → logprob: -17.288270950317383
    10. '$self' → logprob: -18.163270950317383

Token 400: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.4378848391061183e-05
    2. '.' → logprob: -11.875014305114746
    3. '_cards' → logprob: -12.625014305114746
    4. ' .' → logprob: -13.875014305114746
    5. '   ' → logprob: -14.000014305114746
    6. ']._' → logprob: -14.625014305114746
    7. ')._' → logprob: -14.875014305114746
    8. '_card' → logprob: -15.875014305114746
    9. ' ' → logprob: -15.875014305114746
    10. '[' → logprob: -16.000015258789062

Token 401: 'cards' (ID: 40956)
  Prédit: 'cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.014179028570652008
    2. '_cards' → logprob: -4.264179229736328
    3. '.cards' → logprob: -11.764179229736328
    4. ' cards' → logprob: -12.139179229736328
    5. '(cards' → logprob: -14.139179229736328
    6. '_card' → logprob: -14.389179229736328
    7. 'index' → logprob: -15.889179229736328
    8. 'max' → logprob: -16.264179229736328
    9. '_b' → logprob: -16.264179229736328
    10. '_index' → logprob: -16.639179229736328

Token 402: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -5.598092684522271e-05
    2. '[' → logprob: -10.250056266784668
    3. '[
' → logprob: -11.250056266784668
    4. '[m' → logprob: -12.000056266784668
    5. 'mid' → logprob: -13.750056266784668
    6. ' [' → logprob: -15.625056266784668
    7. '_mid' → logprob: -17.25005531311035
    8. '[mem' → logprob: -17.37505531311035
    9. '(mid' → logprob: -17.37505531311035
    10. '[right' → logprob: -18.00005531311035

Token 403: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2523549497127533
    2. ' <=' → logprob: -1.5023549795150757
    3. '>' → logprob: -8.002354621887207
    4. ')<=' → logprob: -10.002354621887207
    5. ' >' → logprob: -10.502354621887207
    6. ']<=' → logprob: -11.252354621887207
    7. ')' → logprob: -12.377354621887207
    8. ' ' → logprob: -14.627354621887207
    9. ']' → logprob: -15.252354621887207
    10. '≤' → logprob: -16.377355575561523

Token 404: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.005406523123383522
    2. ' <=' → logprob: -5.505406379699707
    3. '>' → logprob: -6.630406379699707
    4. ')<=' → logprob: -12.380406379699707
    5. ' >' → logprob: -13.380406379699707
    6. ']<=' → logprob: -13.880406379699707
    7. '<' → logprob: -15.005406379699707
    8. ')' → logprob: -15.005406379699707
    9. '≤' → logprob: -16.005407333374023
    10. 'le' → logprob: -16.380407333374023

Token 405: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014141082763672
    2. 'x' → logprob: -1.7014141082763672
    3. '	x' → logprob: -14.201414108276367
    4. ' ' → logprob: -16.451414108276367
    5. ' ' → logprob: -17.076414108276367
    6. ')x' → logprob: -20.076414108276367
    7. ' 
' → logprob: -20.451414108276367
    8. '_x' → logprob: -20.826414108276367
    9. '(x' → logprob: -21.451414108276367
    10. ',x' → logprob: -21.576414108276367

Token 406: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4744296371936798
    2. ':
' → logprob: -0.9744296073913574
    3. '):
' → logprob: -8.349430084228516
    4. ')' → logprob: -10.474430084228516
    5. '           ' → logprob: -10.599430084228516
    6. '               ' → logprob: -10.599430084228516
    7. ':
' → logprob: -11.349430084228516
    8. '):' → logprob: -11.349430084228516
    9. ',' → logprob: -12.224430084228516
    10. ' :
' → logprob: -12.849430084228516

Token 407: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007822271436452866
    2. ':
' → logprob: -5.757822036743164
    3. '           ' → logprob: -6.132822036743164
    4. '
' → logprob: -6.507822036743164
    5. ' 
' → logprob: -8.507822036743164
    6. ':' → logprob: -8.507822036743164
    7. ' lo' → logprob: -8.757822036743164
    8. '                   ' → logprob: -9.257822036743164
    9. '):
' → logprob: -9.507822036743164
    10. '                
' → logprob: -9.507822036743164

Token 408: ' lo' (ID: 1445)
  Prédit: ' lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.0006282062386162579
    2. 'lo' (adapté à ' lo') → logprob: -7.3756279945373535
    3. '               ' → logprob: -13.625628471374512
    4. '           ' → logprob: -15.125628471374512
    5. '(lo' → logprob: -16.625627517700195
    6. '_lo' → logprob: -16.875627517700195
    7. '
' → logprob: -17.000627517700195
    8. '                   ' → logprob: -17.375627517700195
    9. '.lo' → logprob: -17.625627517700195
    10. 'Lo' → logprob: -19.000627517700195

Token 409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. '+=' → logprob: -15.25192928314209
    4. ' +=' → logprob: -15.37692928314209
    5. '=
' → logprob: -17.001930236816406
    6. ' =
' → logprob: -17.251930236816406
    7. '＝' → logprob: -17.751930236816406
    8. ' ' → logprob: -18.001930236816406
    9. '.=' → logprob: -19.751930236816406
    10. '	' → logprob: -20.376930236816406

Token 410: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2519293427467346
    2. 'mid' → logprob: -1.5019292831420898
    3. '(mid' → logprob: -15.62692928314209
    4. '[mid' → logprob: -15.75192928314209
    5. '_mid' → logprob: -18.376930236816406
    6. ' midpoint' → logprob: -18.626930236816406
    7. '
' → logprob: -20.251930236816406
    8. ' ' → logprob: -20.751930236816406
    9. ' mids' → logprob: -21.001930236816406
    10. '.mid' → logprob: -21.501930236816406

Token 411: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25195086002349854
    2. ' +' → logprob: -1.5019508600234985
    3. '+
' → logprob: -11.626951217651367
    4. ' plus' → logprob: -12.376951217651367
    5. ' ' → logprob: -12.501951217651367
    6. '1' → logprob: -12.626951217651367
    7. ' +
' → logprob: -14.126951217651367
    8. '＋' → logprob: -15.001951217651367
    9. 'plus' → logprob: -15.251951217651367
    10. '
' → logprob: -16.251951217651367

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -19.00002670288086
    4. '   ' → logprob: -19.87502670288086
    5. '۱' → logprob: -22.50002670288086
    6. '<|end|>' → logprob: -22.87502670288086
    7. '  ' → logprob: -23.00002670288086
    8. '
' → logprob: -23.00002670288086
    9. '           ' → logprob: -23.25002670288086
    10. '0' → logprob: -23.43752670288086

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -20.125
    4. '0' → logprob: -21.625
    5. '   ' → logprob: -21.875
    6. '۱' → logprob: -23.0
    7. '
' → logprob: -23.125
    8. '[' → logprob: -23.625
    9. '-' → logprob: -23.9375
    10. '``' → logprob: -24.375

Token 414: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02901867777109146
    2. 'else' → logprob: -3.9040186405181885
    3. ' else' → logprob: -4.779018878936768
    4. '		' → logprob: -11.15401840209961
    5. '
' → logprob: -11.65401840209961
    6. '<|end|>' → logprob: -11.90401840209961
    7. 'elif' → logprob: -13.77901840209961
    8. '          ' → logprob: -13.90401840209961
    9. '```' → logprob: -14.15401840209961
    10. '	else' → logprob: -14.40401840209961

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00585934380069375
    2. 'else' → logprob: -5.255859375
    3. ' else' → logprob: -7.380859375
    4. '		' → logprob: -13.630859375
    5. '          ' → logprob: -14.630859375
    6. '       ' → logprob: -15.255859375
    7. '            ' → logprob: -15.755859375
    8. '               ' → logprob: -16.755859375
    9. 'elif' → logprob: -16.880859375
    10. '```' → logprob: -17.130859375

Token 416: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10770700126886368
    2. ' else' → logprob: -2.8577070236206055
    3. '           ' → logprob: -3.1077070236206055
    4. '       ' → logprob: -12.232707023620605
    5. '   ' → logprob: -15.357707023620605
    6. 'elif' → logprob: -15.357707023620605
    7. '		' → logprob: -15.732707023620605
    8. '	else' → logprob: -16.10770606994629
    9. '```' → logprob: -16.85770606994629
    10. '          ' → logprob: -16.98270606994629

Token 417: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0720856636762619
    2. ':
' → logprob: -3.0720856189727783
    3. '           ' → logprob: -4.072085857391357
    4. ':' → logprob: -5.447085857391357
    5. '                   ' → logprob: -7.447085857391357
    6. '<|end|>' → logprob: -7.822085857391357
    7. '
' → logprob: -8.1970853805542
    8. '{
' → logprob: -9.4470853805542
    9. '):
' → logprob: -9.6970853805542
    10. '              ' → logprob: -9.6970853805542

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08240234851837158
    2. ' hi' → logprob: -2.582402229309082
    3. 'hi' → logprob: -5.957402229309082
    4. '           ' → logprob: -7.332402229309082
    5. '   ' → logprob: -9.082402229309082
    6. '                   ' → logprob: -9.832402229309082
    7. '       ' → logprob: -10.957402229309082
    8. ' ' → logprob: -10.957402229309082
    9. '              ' → logprob: -11.332402229309082
    10. ' ' → logprob: -11.457402229309082

Token 419: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' (adapté à ' hi') → logprob: -0.023258987814188004
    2. ' hi' → logprob: -3.773258924484253
    3. '               ' → logprob: -11.398259162902832
    4. '           ' → logprob: -13.898259162902832
    5. '_hi' → logprob: -14.648259162902832
    6. 'ho' → logprob: -14.773259162902832
    7. '                   ' → logprob: -15.398259162902832
    8. 'hl' → logprob: -16.023258209228516
    9. '   ' → logprob: -16.148258209228516
    10. ' ' → logprob: -16.523258209228516

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '<|end|>' → logprob: -17.376928329467773
    4. '=
' → logprob: -17.751928329467773
    5. ' ' → logprob: -18.376928329467773
    6. ' =
' → logprob: -18.751928329467773
    7. '=end' → logprob: -18.876928329467773
    8. '＝' → logprob: -19.001928329467773
    9. '=cut' → logprob: -19.251928329467773
    10. ')' → logprob: -19.751928329467773

Token 421: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.004078401252627373
    2. ' mid' → logprob: -5.504078388214111
    3. '[mid' → logprob: -19.754077911376953
    4. '_mid' → logprob: -21.254077911376953
    5. ' midpoint' → logprob: -21.629077911376953
    6. 'mi' → logprob: -21.754077911376953
    7. '(mid' → logprob: -22.129077911376953
    8. ' ' → logprob: -22.879077911376953
    9. 'middle' → logprob: -23.129077911376953
    10. 'midd' → logprob: -23.254077911376953

Token 422: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002351145725697279
    2. 'return' → logprob: -6.2523512840271
    3. ' return' → logprob: -8.002350807189941
    4. '	return' → logprob: -10.127350807189941
    5. '	' → logprob: -10.502350807189941
    6. '<|end|>' → logprob: -11.627350807189941
    7. '   ' → logprob: -13.002350807189941
    8. '
' → logprob: -13.252350807189941
    9. '        
' → logprob: -13.377350807189941
    10. 'eturn' → logprob: -13.877350807189941

Token 424: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2064000815153122
    2. 'return' (adapté à ' return') → logprob: -1.7064000368118286
    3. ' return' → logprob: -5.331399917602539
    4. '	return' → logprob: -9.831399917602539
    5. '   ' → logprob: -10.081399917602539
    6. '<|end|>' → logprob: -10.831399917602539
    7. ')return' → logprob: -12.581399917602539
    8. 'eturn' → logprob: -12.831399917602539
    9. '```' → logprob: -12.956399917602539
    10. '	' → logprob: -12.956399917602539

Token 425: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.1269284337759018
    2. ' lo' → logprob: -2.1269283294677734
    3. '(lo' → logprob: -15.751928329467773
    4. '_lo' → logprob: -16.126928329467773
    5. '0' → logprob: -17.251928329467773
    6. '.lo' → logprob: -18.001928329467773
    7. 'loo' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.251928329467773
    9. '   ' → logprob: -18.251928329467773
    10. 'le' → logprob: -18.626928329467773

Token 426: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: ' Query' (ID: 18574)
  Prédit: ' Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Card' → logprob: -0.22936749458312988
    2. ' Deck' → logprob: -1.8543674945831299
    3. ' Poker' → logprob: -3.47936749458313
    4. ' Player' → logprob: -5.229367256164551
    5. 'Card' → logprob: -5.979367256164551
    6. ' Hand' → logprob: -5.979367256164551
    7. 'Deck' → logprob: -5.979367256164551
    8. ' Game' → logprob: -6.604367256164551
    9. 'Poker' → logprob: -6.729367256164551
    10. ' Solution' → logprob: -7.479367256164551

Token 429: 'Processor' (ID: 22334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7563087344169617
    2. 'Handler' → logprob: -1.2563087940216064
    3. 'Set' → logprob: -1.8813087940216064
    4. 'Processor' → logprob: -3.0063087940216064
    5. '(' → logprob: -3.7563087940216064
    6. '{' → logprob: -5.506308555603027
    7. 'Executor' → logprob: -6.256308555603027
    8. 'Builder' → logprob: -6.756308555603027
    9. ' (' → logprob: -6.756308555603027
    10. 's' → logprob: -6.756308555603027

Token 430: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.4060561776859686e-05
    2. ':
' → logprob: -10.375043869018555
    3. ' :' → logprob: -12.125043869018555
    4. '(' → logprob: -12.375043869018555
    5. '<|end|>' → logprob: -14.250043869018555
    6. '(object' → logprob: -14.625043869018555
    7. '():' → logprob: -14.875043869018555
    8. ':

' → logprob: -15.125043869018555
    9. ':**' → logprob: -15.125043869018555
    10. '：' → logprob: -15.375043869018555

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006834960542619228
    2. ' def' → logprob: -5.006834983825684
    3. ' class' → logprob: -10.381834983825684
    4. '    ' → logprob: -10.756834983825684
    5. 'def' → logprob: -10.756834983825684
    6. '    
' → logprob: -11.506834983825684
    7. 'class' → logprob: -11.756834983825684
    8. '	def' → logprob: -12.131834983825684
    9. '<|end|>' → logprob: -12.131834983825684
    10. '```' → logprob: -12.381834983825684

Token 432: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09764524549245834
    2. 'def' (adapté à ' def') → logprob: -2.5976452827453613
    3. '   ' → logprob: -4.472645282745361
    4. 'class' → logprob: -4.972645282745361
    5. ' class' → logprob: -8.347644805908203
    6. 'import' → logprob: -14.472644805908203
    7. '	def' → logprob: -14.847644805908203
    8. '    ' → logprob: -15.097644805908203
    9. '```' → logprob: -15.097644805908203
    10. ' ' → logprob: -15.597644805908203

Token 433: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5191958546638489
    2. ' __' → logprob: -1.269195795059204
    3. '__' → logprob: -2.144195795059204
    4. ' init' → logprob: -5.519196033477783
    5. ' def' → logprob: -6.519196033477783
    6. 'def' → logprob: -7.144196033477783
    7. '_init' → logprob: -8.644195556640625
    8. ' ' → logprob: -9.394195556640625
    9. '  ' → logprob: -9.644195556640625
    10. '___' → logprob: -9.769195556640625

Token 434: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.125
    3. 'ini' → logprob: -20.375
    4. '_init' → logprob: -20.375
    5. 'int' → logprob: -20.5
    6. '   ' → logprob: -21.5
    7. '	init' → logprob: -21.625
    8. 'inite' → logprob: -21.75
    9. '(init' → logprob: -22.125
    10. 'def' → logprob: -22.25

Token 435: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003357846988365054
    2. '__' → logprob: -5.753357887268066
    3. '(self' → logprob: -9.128357887268066
    4. '__(
' → logprob: -9.628357887268066
    5. '__((' → logprob: -12.503357887268066
    6. ' (' → logprob: -13.878357887268066
    7. '_(' → logprob: -14.253357887268066
    8. '(' → logprob: -15.628357887268066
    9. '__('' → logprob: -16.00335693359375
    10. '__("' → logprob: -16.62835693359375

Token 436: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02641049027442932
    2. ' self' → logprob: -3.6514105796813965
    3. 'cards' → logprob: -10.151410102844238
    4. '   ' → logprob: -10.401410102844238
    5. ')' → logprob: -11.526410102844238
    6. ' cards' → logprob: -12.151410102844238
    7. '(self' → logprob: -12.151410102844238
    8. '
' → logprob: -12.401410102844238
    9. '_cards' → logprob: -12.526410102844238
    10. 'def' → logprob: -13.026410102844238

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004167322069406509
    2. ' ,' → logprob: -6.004167556762695
    3. '(cards' → logprob: -7.379167556762695
    4. ' (' → logprob: -7.754167556762695
    5. '(self' → logprob: -8.129167556762695
    6. 'self' → logprob: -8.879167556762695
    7. '_cards' → logprob: -9.629167556762695
    8. '_,' → logprob: -10.379167556762695
    9. ',(' → logprob: -10.629167556762695
    10. ' self' → logprob: -11.004167556762695

Token 438: ' card' (ID: 4766)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.2515250444412231
    2. ' card' → logprob: -1.3765250444412231
    3. 'cards' → logprob: -1.6265250444412231
    4. 'Card' → logprob: -2.2515249252319336
    5. 'card' → logprob: -2.3765249252319336
    6. ' Card' → logprob: -2.7515249252319336
    7. 'self' → logprob: -7.251524925231934
    8. ' self' → logprob: -7.251524925231934
    9. '_card' → logprob: -8.001524925231934
    10. ' initial' → logprob: -9.001524925231934

Token 439: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007365014404058456
    2. '_set' → logprob: -5.1323652267456055
    3. '_s' → logprob: -7.0073652267456055
    4. '_list' → logprob: -8.257365226745605
    5. '_sets' → logprob: -9.132365226745605
    6. '):
' → logprob: -10.007365226745605
    7. 'set' → logprob: -10.132365226745605
    8. 'Set' → logprob: -10.382365226745605
    9. ' s' → logprob: -10.757365226745605
    10. '   ' → logprob: -11.632365226745605

Token 440: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3142443597316742
    2. '):' → logprob: -1.3142443895339966
    3. '):
' → logprob: -7.189244270324707
    4. '   ' → logprob: -9.439244270324707
    5. ':' → logprob: -10.189244270324707
    6. '_cards' → logprob: -10.439244270324707
    7. ' ):' → logprob: -10.564244270324707
    8. ' ,' → logprob: -10.689244270324707
    9. '(cards' → logprob: -11.189244270324707
    10. ')' → logprob: -12.939244270324707

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011734402505680919
    2. '   ' → logprob: -7.501173496246338
    3. 'self' → logprob: -8.00117301940918
    4. '<|end|>' → logprob: -9.37617301940918
    5. 'def' → logprob: -9.62617301940918
    6. '        
' → logprob: -10.62617301940918
    7. ' self' → logprob: -10.87617301940918
    8. ',' → logprob: -11.25117301940918
    9. '     ' → logprob: -11.75117301940918
    10. '      ' → logprob: -11.75117301940918

Token 442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07998358458280563
    2. ' self' → logprob: -2.5799834728240967
    3. '       ' → logprob: -6.829983711242676
    4. '   ' → logprob: -11.954983711242676
    5. '	self' → logprob: -12.079983711242676
    6. ' ' → logprob: -16.20498275756836
    7. 'def' → logprob: -17.57998275756836
    8. '	' → logprob: -18.20498275756836
    9. '_self' → logprob: -18.32998275756836
    10. ' ' → logprob: -18.45498275756836

Token 443: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.10006916522979736
    2. '.' → logprob: -2.600069046020508
    3. '.card' → logprob: -3.975069046020508
    4. '   ' → logprob: -6.975069046020508
    5. '_card' → logprob: -6.975069046020508
    6. '.__' → logprob: -9.350069046020508
    7. ' .' → logprob: -9.725069046020508
    8. '_' → logprob: -10.225069046020508
    9. 'card' → logprob: -10.600069046020508
    10. ' ' → logprob: -10.725069046020508

Token 444: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.00016086915275081992
    2. 'queries' → logprob: -9.375161170959473
    3. 'cards' → logprob: -10.000161170959473
    4. 'query' → logprob: -11.250161170959473
    5. '_card' → logprob: -11.500161170959473
    6. 'cache' → logprob: -12.750161170959473
    7. 'div' → logprob: -12.875161170959473
    8. 'max' → logprob: -14.125161170959473
    9. '_queries' → logprob: -15.125161170959473
    10. 'set' → logprob: -15.250161170959473

Token 445: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0001777960715116933
    2. 'set' → logprob: -9.000177383422852
    3. '_' → logprob: -10.500177383422852
    4. 's' → logprob: -10.875177383422852
    5. '_s' → logprob: -12.375177383422852
    6. '_cards' → logprob: -13.250177383422852
    7. 'Set' → logprob: -14.375177383422852
    8. '_sets' → logprob: -14.625177383422852
    9. '   ' → logprob: -15.250177383422852
    10. ' _' → logprob: -15.750177383422852

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602296084165573
    2. ' =' → logprob: -1.9102295637130737
    3. '   ' → logprob: -12.535229682922363
    4. ' ' → logprob: -14.035229682922363
    5. '.' → logprob: -14.660229682922363
    6. '    ' → logprob: -15.160229682922363
    7. '  ' → logprob: -16.410228729248047
    8. ')' → logprob: -16.660228729248047
    9. '.=' → logprob: -17.410228729248047
    10. '_' → logprob: -17.410228729248047

Token 447: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.10020871460437775
    2. ' card' → logprob: -2.3502087593078613
    3. 'Card' → logprob: -13.600208282470703
    4. '	card' → logprob: -14.600208282470703
    5. '(card' → logprob: -15.600208282470703
    6. '_card' → logprob: -16.475208282470703
    7. '.card' → logprob: -17.850208282470703
    8. '   ' → logprob: -18.850208282470703
    9. ' Card' → logprob: -19.975208282470703
    10. ' ' → logprob: -20.850208282470703

Token 448: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0032516273204237223
    2. '_' → logprob: -5.753251552581787
    3. 'set' → logprob: -10.753252029418945
    4. 's' → logprob: -11.378252029418945
    5. 'Set' → logprob: -11.503252029418945
    6. ' _' → logprob: -11.503252029418945
    7. '_processor' → logprob: -12.128252029418945
    8. '   ' → logprob: -12.253252029418945
    9. '_
' → logprob: -13.253252029418945
    10. '_SET' → logprob: -13.628252029418945

Token 449: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32193368673324585
    2. '   ' → logprob: -1.3219337463378906
    3. '<|end|>' → logprob: -5.446933746337891
    4. '    
' → logprob: -5.696933746337891
    5. 'def' → logprob: -7.946933746337891
    6. '<|end|>' → logprob: -8.44693374633789
    7. '

' → logprob: -9.32193374633789
    8. '        
' → logprob: -9.82193374633789
    9. ' def' → logprob: -10.32193374633789
    10. '	def' → logprob: -10.32193374633789

Token 450: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007770944386720657
    2. '
' → logprob: -4.882771015167236
    3. '    
' → logprob: -9.007770538330078
    4. 'def' → logprob: -11.132770538330078
    5. ' def' → logprob: -11.382770538330078
    6. '        
' → logprob: -12.132770538330078
    7. '```' → logprob: -12.257770538330078
    8. ' ' → logprob: -13.132770538330078
    9. '       ' → logprob: -14.382770538330078
    10. ' 
' → logprob: -14.382770538330078

Token 451: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011709606274962425
    2. '   ' → logprob: -4.636709690093994
    3. 'self' (adapté à ' self') → logprob: -7.011709690093994
    4. ' def' → logprob: -7.136709690093994
    5. '       ' → logprob: -8.886709213256836
    6. '
' → logprob: -9.261709213256836
    7. ' ' → logprob: -11.636709213256836
    8. '	def' → logprob: -12.761709213256836
    9. ' self' → logprob: -13.011709213256836
    10. '

' → logprob: -13.261709213256836

Token 452: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006115193944424391
    2. '.' → logprob: -5.631114959716797
    3. '   ' → logprob: -6.256114959716797
    4. '_queries' → logprob: -9.131114959716797
    5. '.query' → logprob: -9.256114959716797
    6. '.__' → logprob: -9.256114959716797
    7. 'def' → logprob: -9.631114959716797
    8. '_' → logprob: -10.006114959716797
    9. '_query' → logprob: -10.006114959716797
    10. ' .' → logprob: -10.506114959716797

Token 453: 'handlers' (ID: 100009)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.2744596302509308
    2. 'query' → logprob: -2.3994596004486084
    3. 'memo' → logprob: -2.8994596004486084
    4. 'results' → logprob: -3.3994596004486084
    5. 'queries' → logprob: -4.0244598388671875
    6. 'answers' → logprob: -4.2744598388671875
    7. 'max' → logprob: -5.1494598388671875
    8. 'div' → logprob: -5.1494598388671875
    9. 'last' → logprob: -5.2744598388671875
    10. 'pre' → logprob: -5.6494598388671875

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146040618419647
    2. '=' → logprob: -1.701460361480713
    3. '[' → logprob: -10.576460838317871
    4. '_' → logprob: -11.451460838317871
    5. ' ' → logprob: -12.951460838317871
    6. '={}' → logprob: -12.951460838317871
    7. '.setdefault' → logprob: -13.201460838317871
    8. '   ' → logprob: -13.576460838317871
    9. '={'' → logprob: -15.076460838317871
    10. '{' → logprob: -15.076460838317871

Token 455: ' []

' (ID: 32833)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.08868248760700226
    2. '{' → logprob: -2.8386824131011963
    3. '{
' → logprob: -3.7136824131011963
    4. '[]' → logprob: -6.463682651519775
    5. '[' → logprob: -8.463682174682617
    6. ' {}' → logprob: -9.088682174682617
    7. '[
' → logprob: -10.213682174682617
    8. ' {' → logprob: -10.588682174682617
    9. '   ' → logprob: -11.838682174682617
    10. ' {
' → logprob: -12.213682174682617

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020878082141280174
    2. '    
' → logprob: -7.002087593078613
    3. 'def' → logprob: -7.377087593078613
    4. ' def' → logprob: -8.127087593078613
    5. '	def' → logprob: -9.127087593078613
    6. '       ' → logprob: -9.877087593078613
    7. '        
' → logprob: -10.627087593078613
    8. '
' → logprob: -10.752087593078613
    9. '<|end|>' → logprob: -11.377087593078613
    10. '(' → logprob: -11.502087593078613

Token 457: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23263336718082428
    2. '   ' → logprob: -1.732633352279663
    3. 'def' (adapté à ' def') → logprob: -3.482633352279663
    4. '	def' → logprob: -11.607633590698242
    5. '
' → logprob: -13.607633590698242
    6. ' ' → logprob: -15.232633590698242
    7. '       ' → logprob: -15.482633590698242
    8. '    
' → logprob: -15.857633590698242
    9. '   ' → logprob: -15.982633590698242
    10. ' 
' → logprob: -16.482633590698242

Token 458: ' add' (ID: 1147)
  Prédit: ' register'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' register' → logprob: -0.7638990879058838
    2. ' add' → logprob: -1.0138990879058838
    3. 'register' → logprob: -2.513899087905884
    4. 'add' → logprob: -3.263899087905884
    5. ' def' → logprob: -3.388899087905884
    6. 'def' → logprob: -4.388898849487305
    7. ' process' → logprob: -5.388898849487305
    8. 'process' → logprob: -7.763898849487305
    9. ' handle' → logprob: -8.388898849487305
    10. '_register' → logprob: -8.763898849487305

Token 459: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.3874308168888092
    2. '_query' → logprob: -1.1374307870864868
    3. '_' → logprob: -8.012431144714355
    4. '_request' → logprob: -9.637431144714355
    5. '_command' → logprob: -10.012431144714355
    6. '_question' → logprob: -10.762431144714355
    7. '(self' → logprob: -11.012431144714355
    8. '_event' → logprob: -11.137431144714355
    9. '_listener' → logprob: -11.387431144714355
    10. '_answer' → logprob: -12.137431144714355

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00326517247594893
    2. '(' → logprob: -5.753265380859375
    3. '(handler' → logprob: -9.503265380859375
    4. ' (' → logprob: -11.878265380859375
    5. '(
' → logprob: -13.628265380859375
    6. 'self' → logprob: -13.753265380859375
    7. '   ' → logprob: -13.878265380859375
    8. '(func' → logprob: -13.878265380859375
    9. '(lambda' → logprob: -15.003265380859375
    10. '_handler' → logprob: -15.003265380859375

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042447797022759914
    2. ' ,' → logprob: -8.2504243850708
    3. ',self' → logprob: -9.3754243850708
    4. 'self' → logprob: -10.2504243850708
    5. '(self' → logprob: -11.2504243850708
    6. ')' → logprob: -11.3754243850708
    7. '(handler' → logprob: -12.0004243850708
    8. '):' → logprob: -12.6254243850708
    9. '_handler' → logprob: -13.6254243850708
    10. ',_' → logprob: -13.8754243850708

Token 462: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.14469799399375916
    2. ' handler' → logprob: -2.019697904586792
    3. 'self' → logprob: -7.144698143005371
    4. ' self' → logprob: -7.394698143005371
    5. 'func' → logprob: -8.269698143005371
    6. ' func' → logprob: -8.894698143005371
    7. 'query' → logprob: -9.269698143005371
    8. ')' → logprob: -10.144698143005371
    9. '(handler' → logprob: -10.644698143005371
    10. 'callback' → logprob: -11.144698143005371

Token 463: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046280235052108765
    2. ',' → logprob: -3.1712801456451416
    3. '):
' → logprob: -6.296280384063721
    4. ')' → logprob: -7.546280384063721
    5. '(self' → logprob: -8.171279907226562
    6. '(handler' → logprob: -8.296279907226562
    7. 'self' → logprob: -9.046279907226562
    8. '_handler' → logprob: -9.796279907226562
    9. '   ' → logprob: -9.796279907226562
    10. ' ):' → logprob: -10.046279907226562

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1637304276227951
    2. '(self' → logprob: -2.4137303829193115
    3. '(' → logprob: -3.0387303829193115
    4. ' self' → logprob: -5.163730621337891
    5. 'self' → logprob: -5.288730621337891
    6. '   ' → logprob: -6.038730621337891
    7. ' (' → logprob: -9.16373062133789
    8. '(
' → logprob: -9.28873062133789
    9. '```' → logprob: -9.28873062133789
    10. '    ' → logprob: -9.66373062133789

Token 465: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25440970063209534
    2. 'self' (adapté à ' self') → logprob: -1.504409670829773
    3. '       ' → logprob: -6.0044097900390625
    4. '   ' → logprob: -12.629409790039062
    5. '	self' → logprob: -13.004409790039062
    6. '(self' → logprob: -13.629409790039062
    7. '        
' → logprob: -13.879409790039062
    8. '```' → logprob: -14.254409790039062
    9. '_self' → logprob: -14.629409790039062
    10. ' ' → logprob: -15.004409790039062

Token 466: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0036100437864661217
    2. '.' → logprob: -5.628610134124756
    3. '_' → logprob: -12.503609657287598
    4. ' .' → logprob: -12.878609657287598
    5. ')._' → logprob: -13.628609657287598
    6. '.__' → logprob: -14.253609657287598
    7. '   ' → logprob: -14.753609657287598
    8. '.add' → logprob: -15.378609657287598
    9. '.append' → logprob: -15.753609657287598
    10. '.​' → logprob: -15.753609657287598

Token 467: 'handlers' (ID: 100009)
  Prédit: 'handlers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handlers' → logprob: -4.36574100604048e-06
    2. '_handlers' → logprob: -12.500004768371582
    3. 'handler' → logprob: -15.250004768371582
    4. 'handle' → logprob: -15.875004768371582
    5. 'handles' → logprob: -16.375003814697266
    6. '.handlers' → logprob: -17.125003814697266
    7. ' handlers' → logprob: -17.625003814697266
    8. 'hand' → logprob: -17.875003814697266
    9. 'add' → logprob: -19.500003814697266
    10. 'han' → logprob: -19.500003814697266

Token 468: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005236479919403791
    2. '.' → logprob: -5.255236625671387
    3. 'append' → logprob: -14.005236625671387
    4. '.extend' → logprob: -14.255236625671387
    5. '.app' → logprob: -14.630236625671387
    6. '.add' → logprob: -14.755236625671387
    7. '.insert' → logprob: -16.38023567199707
    8. '.ap' → logprob: -16.63023567199707
    9. '_append' → logprob: -16.63023567199707
    10. '.Append' → logprob: -17.00523567199707

Token 469: '(handler' (ID: 76448)
  Prédit: '(handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(handler' → logprob: -0.12695205211639404
    2. '(' → logprob: -2.1269521713256836
    3. 'handler' → logprob: -10.876952171325684
    4. '(
' → logprob: -13.251952171325684
    5. '(handle' → logprob: -13.501952171325684
    6. '(hand' → logprob: -13.751952171325684
    7. '(operator' → logprob: -14.501952171325684
    8. '	handler' → logprob: -16.501951217651367
    9. '(

' → logprob: -16.751951217651367
    10. ' (' → logprob: -17.126951217651367

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9292415749514475e-05
    2. ')
' → logprob: -11.500039100646973
    3. ' )' → logprob: -11.875039100646973
    4. '       ' → logprob: -11.875039100646973
    5. '   ' → logprob: -12.000039100646973
    6. '()' → logprob: -12.750039100646973
    7. '(' → logprob: -12.875039100646973
    8. '())' → logprob: -13.250039100646973
    9. '[' → logprob: -14.750039100646973
    10. '<|end|>' → logprob: -14.875039100646973

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7372189164161682
    2. 'def' → logprob: -0.7372189164161682
    3. ' def' → logprob: -3.2372188568115234
    4. '
' → logprob: -5.737218856811523
    5. '    
' → logprob: -7.612218856811523
    6. '	def' → logprob: -9.987218856811523
    7. ' ' → logprob: -10.987218856811523
    8. ' 
' → logprob: -10.987218856811523
    9. '        
' → logprob: -11.487218856811523
    10. '```' → logprob: -11.737218856811523

Token 472: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020497082732617855
    2. ' def' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.500205039978027
    4. '	def' → logprob: -17.00020408630371
    5. '```' → logprob: -18.62520408630371
    6. 'de' → logprob: -19.50020408630371
    7. '
' → logprob: -20.25020408630371
    8. 'ndef' → logprob: -20.87520408630371
    9. 'async' → logprob: -21.00020408630371
    10. ' ' → logprob: -21.87520408630371

Token 473: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.03297094628214836
    2. 'process' → logprob: -3.532970905303955
    3. ' run' → logprob: -6.657970905303955
    4. ' query' → logprob: -6.907970905303955
    5. ' handle' → logprob: -7.532970905303955
    6. ' execute' → logprob: -8.657971382141113
    7. 'query' → logprob: -9.282971382141113
    8. 'handle' → logprob: -10.032971382141113
    9. '_process' → logprob: -10.157971382141113
    10. 'run' → logprob: -10.907971382141113

Token 474: '_queries' (ID: 172558)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.08666916936635971
    2. '(self' → logprob: -3.2116692066192627
    3. '(' → logprob: -3.9616692066192627
    4. '_queries' → logprob: -4.086668968200684
    5. '_' → logprob: -5.836668968200684
    6. '(query' → logprob: -6.711668968200684
    7. '_request' → logprob: -7.336668968200684
    8. '_command' → logprob: -7.461668968200684
    9. '_question' → logprob: -8.211668968200684
    10. '_input' → logprob: -8.711668968200684

Token 475: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004106065724045038
    2. '(' → logprob: -5.504106044769287
    3. ' (' → logprob: -10.504106521606445
    4. '(
' → logprob: -15.629106521606445
    5. 'self' → logprob: -17.379106521606445
    6. '   ' → logprob: -17.879106521606445
    7. '(Self' → logprob: -18.504106521606445
    8. '(sel' → logprob: -19.004106521606445
    9. ' ' → logprob: -19.129106521606445
    10. ' self' → logprob: -19.254106521606445

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. '):' → logprob: -12.12501049041748
    3. ' ,' → logprob: -13.25001049041748
    4. 'self' → logprob: -13.50001049041748
    5. ',self' → logprob: -14.75001049041748
    6. ',input' → logprob: -14.75001049041748
    7. ',line' → logprob: -15.37501049041748
    8. '):
' → logprob: -16.625009536743164
    9. '   ' → logprob: -16.750009536743164
    10. ',
' → logprob: -16.750009536743164

Token 477: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.18143564462661743
    2. ' queries' → logprob: -1.8064355850219727
    3. 'self' → logprob: -6.806435585021973
    4. ' self' → logprob: -8.056435585021973
    5. 'query' → logprob: -8.306435585021973
    6. ' query' → logprob: -11.431435585021973
    7. 'requests' → logprob: -12.556435585021973
    8. ')' → logprob: -13.931435585021973
    9. 'lines' → logprob: -14.681435585021973
    10. 'q' → logprob: -14.806435585021973

Token 478: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009259315207600594
    2. '):
' → logprob: -4.759259223937988
    3. ',' → logprob: -7.759259223937988
    4. '       ' → logprob: -9.134259223937988
    5. ':' → logprob: -9.884259223937988
    6. '   ' → logprob: -10.009259223937988
    7. '):
' → logprob: -11.634259223937988
    8. ')' → logprob: -13.759259223937988
    9. 'self' → logprob: -13.884259223937988
    10. ' ):' → logprob: -14.134259223937988

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018546271603554487
    2. 'for' → logprob: -7.501854419708252
    3. ' for' → logprob: -7.626854419708252
    4. 'result' → logprob: -7.751854419708252
    5. 'results' → logprob: -8.62685489654541
    6. ':' → logprob: -10.00185489654541
    7. ' results' → logprob: -10.37685489654541
    8. 'return' → logprob: -11.00185489654541
    9. ' result' → logprob: -11.00185489654541
    10. '(' → logprob: -11.12685489654541

Token 480: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.25964054465293884
    2. 'results' (adapté à ' results') → logprob: -1.7596405744552612
    3. ' result' → logprob: -3.5096404552459717
    4. 'result' → logprob: -4.509640693664551
    5. '       ' → logprob: -4.759640693664551
    6. ' for' → logprob: -5.009640693664551
    7. 'for' → logprob: -7.884640693664551
    8. ' output' → logprob: -11.63464069366455
    9. 'output' → logprob: -12.38464069366455
    10. ' answers' → logprob: -12.50964069366455

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757557436823845
    2. '=' → logprob: -3.529757499694824
    3. ' ' → logprob: -13.279757499694824
    4. '=[]' → logprob: -13.279757499694824
    5. '_' → logprob: -13.654757499694824
    6. '[' → logprob: -14.404757499694824
    7. '   ' → logprob: -14.654757499694824
    8. '.append' → logprob: -14.904757499694824
    9. '[]' → logprob: -15.654757499694824
    10. '	' → logprob: -15.779757499694824

Token 482: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014291257597506046
    2. ' []' → logprob: -4.264291286468506
    3. '[]
' → logprob: -9.014290809631348
    4. '[' → logprob: -12.264290809631348
    5. ' []
' → logprob: -13.514290809631348
    6. '[]

' → logprob: -17.389291763305664
    7. ' ' → logprob: -18.264291763305664
    8. ' [' → logprob: -18.514291763305664
    9. '[]}' → logprob: -19.014291763305664
    10. '   ' → logprob: -19.014291763305664

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16599640250205994
    2. ' for' → logprob: -1.9159964323043823
    3. 'for' → logprob: -5.290996551513672
    4. '
' → logprob: -7.915996551513672
    5. '   ' → logprob: -8.915996551513672
    6. '        
' → logprob: -9.540996551513672
    7. ':' → logprob: -9.915996551513672
    8. ':
' → logprob: -10.790996551513672
    9. '    
' → logprob: -11.040996551513672
    10. '  
' → logprob: -11.290996551513672

Token 484: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038160838186740875
    2. ' for' → logprob: -3.288160800933838
    3. '       ' → logprob: -9.038161277770996
    4. '	for' → logprob: -14.538161277770996
    5. '   ' → logprob: -16.41316032409668
    6. '
' → logprob: -17.28816032409668
    7. ' ' → logprob: -18.91316032409668
    8. '```' → logprob: -19.03816032409668
    9. '	' → logprob: -19.28816032409668
    10. '_for' → logprob: -20.91316032409668

Token 485: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.4999553859233856
    2. 'query' → logprob: -0.999955415725708
    3. 'div' → logprob: -4.499955177307129
    4. ' divisor' → logprob: -4.749955177307129
    5. ' q' → logprob: -5.874955177307129
    6. 'q' → logprob: -5.874955177307129
    7. ' div' → logprob: -8.874955177307129
    8. ' ' → logprob: -12.624955177307129
    9. '	query' → logprob: -12.624955177307129
    10. '(query' → logprob: -12.749955177307129

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4337673783302307
    2. 'in' → logprob: -1.058767318725586
    3. '_' → logprob: -5.683767318725586
    4. '[' → logprob: -6.933767318725586
    5. '_in' → logprob: -7.808767318725586
    6. '_type' → logprob: -8.683767318725586
    7. ',' → logprob: -10.308767318725586
    8. '	in' → logprob: -11.183767318725586
    9. 'type' → logprob: -11.808767318725586
    10. ' ' → logprob: -12.308767318725586

Token 487: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.5942220687866211
    2. 'self' → logprob: -0.8442220687866211
    3. ' queries' → logprob: -4.594222068786621
    4. ' self' → logprob: -4.844222068786621
    5. 'query' → logprob: -8.969222068786621
    6. '   ' → logprob: -13.594222068786621
    7. 'requests' → logprob: -13.594222068786621
    8. ' query' → logprob: -13.969222068786621
    9. 'questions' → logprob: -14.594222068786621
    10. '_queries' → logprob: -14.594222068786621

Token 488: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04969380423426628
    2. ':
' → logprob: -3.0496938228607178
    3. '[' → logprob: -7.299693584442139
    4. '           ' → logprob: -8.549694061279297
    5. '       ' → logprob: -8.799694061279297
    6. ',' → logprob: -10.674694061279297
    7. '[:' → logprob: -11.049694061279297
    8. '.' → logprob: -11.299694061279297
    9. '):
' → logprob: -12.299694061279297
    10. ':

' → logprob: -12.674694061279297

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011240257881581783
    2. ' if' → logprob: -7.751123905181885
    3. '            
' → logprob: -8.376124382019043
    4. 'if' → logprob: -9.876124382019043
    5. '```' → logprob: -9.876124382019043
    6. 'result' → logprob: -10.251124382019043
    7. 'query' → logprob: -10.376124382019043
    8. '    
' → logprob: -10.501124382019043
    9. '            ' → logprob: -10.876124382019043
    10. ' 
' → logprob: -11.001124382019043

Token 490: ' for' (ID: 395)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.715703547000885
    2. 'result' → logprob: -0.715703547000885
    3. ' for' → logprob: -3.9657034873962402
    4. 'for' (adapté à ' for') → logprob: -6.71570348739624
    5. ' handled' → logprob: -7.46570348739624
    6. 'res' → logprob: -7.71570348739624
    7. ' results' → logprob: -7.96570348739624
    8. 'results' → logprob: -8.465703964233398
    9. '           ' → logprob: -9.090703964233398
    10. ' res' → logprob: -9.090703964233398

Token 491: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.47407999634742737
    2. ' handler' → logprob: -0.974079966545105
    3. '	handler' → logprob: -12.974080085754395
    4. '(handler' → logprob: -14.474080085754395
    5. '_handler' → logprob: -16.474079132080078
    6. ' ' → logprob: -18.224079132080078
    7. '   ' → logprob: -18.224079132080078
    8. 'handle' → logprob: -18.474079132080078
    9. '  ' → logprob: -18.474079132080078
    10. '.handler' → logprob: -18.974079132080078

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04327983036637306
    2. 'in' → logprob: -3.1682798862457275
    3. ' ' → logprob: -8.793279647827148
    4. '(' → logprob: -10.543279647827148
    5. '  ' → logprob: -11.043279647827148
    6. ',' → logprob: -11.168279647827148
    7. '_in' → logprob: -11.293279647827148
    8. ' (' → logprob: -11.418279647827148
    9. 's' → logprob: -11.543279647827148
    10. '	in' → logprob: -11.668279647827148

Token 493: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.251930832862854
    2. ' self' → logprob: -1.501930832862854
    3. '(self' → logprob: -14.001931190490723
    4. '	self' → logprob: -14.751931190490723
    5. '   ' → logprob: -15.126931190490723
    6. '  ' → logprob: -16.626930236816406
    7. ' ' → logprob: -16.876930236816406
    8. '    ' → logprob: -17.001930236816406
    9. '_self' → logprob: -17.126930236816406
    10. '       ' → logprob: -18.376930236816406

Token 494: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.000019073486328
    3. ' .' → logprob: -13.625019073486328
    4. ')._' → logprob: -15.500019073486328
    5. '.__' → logprob: -15.750019073486328
    6. '_' → logprob: -16.125019073486328
    7. ']._' → logprob: -16.125019073486328
    8. '   ' → logprob: -16.875019073486328
    9. '._
' → logprob: -16.875019073486328
    10. '.process' → logprob: -17.000019073486328

Token 495: 'handlers' (ID: 100009)
  Prédit: 'handlers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handlers' → logprob: -3.690834273584187e-05
    2. '_handlers' → logprob: -10.25003719329834
    3. '.handlers' → logprob: -13.87503719329834
    4. 'handle' → logprob: -15.37503719329834
    5. 'handles' → logprob: -15.62503719329834
    6. ' handlers' → logprob: -16.625036239624023
    7. 'handler' → logprob: -17.750036239624023
    8. 'hand' → logprob: -18.000036239624023
    9. 'han' → logprob: -18.750036239624023
    10. 'processors' → logprob: -18.750036239624023

Token 496: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.705468475818634
    2. ':
' → logprob: -1.2054684162139893
    3. ':' → logprob: -2.0804684162139893
    4. '(handler' → logprob: -2.8304684162139893
    5. '(query' → logprob: -4.205468654632568
    6. '           ' → logprob: -6.455468654632568
    7. '[' → logprob: -6.955468654632568
    8. ',' → logprob: -7.080468654632568
    9. '():
' → logprob: -7.580468654632568
    10. '):
' → logprob: -7.580468654632568

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022892709239386022
    2. ':' → logprob: -10.250228881835938
    3. '                
' → logprob: -10.375228881835938
    4. ':
' → logprob: -10.625228881835938
    5. ' if' → logprob: -11.000228881835938
    6. '<|end|>' → logprob: -11.125228881835938
    7. '(tokens' → logprob: -11.625228881835938
    8. '(token' → logprob: -11.750228881835938
    9. '():
' → logprob: -11.750228881835938
    10. ',' → logprob: -11.750228881835938

Token 498: ' if' (ID: 538)
  Prédit: ' handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handler' → logprob: -1.2387412786483765
    2. ' if' → logprob: -1.3637412786483765
    3. '               ' → logprob: -1.4887412786483765
    4. ' result' → logprob: -2.488741397857666
    5. 'handler' → logprob: -2.488741397857666
    6. 'result' → logprob: -3.613741397857666
    7. 'if' (adapté à ' if') → logprob: -4.238741397857666
    8. ' results' → logprob: -4.363741397857666
    9. 'results' → logprob: -5.613741397857666
    10. ' query' → logprob: -6.863741397857666

Token 499: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.3132706880569458
    2. ' handler' → logprob: -1.3132706880569458
    3. '(handler' → logprob: -12.313270568847656
    4. '	handler' → logprob: -12.938270568847656
    5. '_handler' → logprob: -14.438270568847656
    6. '               ' → logprob: -14.563270568847656
    7. '.handler' → logprob: -15.563270568847656
    8. ' not' → logprob: -15.563270568847656
    9. '                   ' → logprob: -15.688270568847656
    10. 'handle' → logprob: -15.938270568847656

Token 500: '.can' (ID: 46002)
  Prédit: '(query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.010407772846519947
    2. '.handle' → logprob: -5.0104079246521
    3. ' (' → logprob: -6.6354079246521
    4. '.process' → logprob: -7.1354079246521
    5. '(' → logprob: -7.5104079246521
    6. '.' → logprob: -8.135407447814941
    7. '.query' → logprob: -8.260407447814941
    8. '.check' → logprob: -9.135407447814941
    9. ' .' → logprob: -9.885407447814941
    10. '   ' → logprob: -10.510407447814941

Token 501: '_handle' (ID: 24155)
  Prédit: '_handle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handle' → logprob: -0.011671427637338638
    2. '_process' → logprob: -4.511671543121338
    3. '_answer' → logprob: -7.636671543121338
    4. '_' → logprob: -9.88667106628418
    5. '_execute' → logprob: -9.88667106628418
    6. 'handle' → logprob: -10.76167106628418
    7. '_accept' → logprob: -11.88667106628418
    8. '_apply' → logprob: -12.88667106628418
    9. '_handler' → logprob: -13.26167106628418
    10. '   ' → logprob: -13.51167106628418

Token 502: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.0004925066023133695
    2. ' (' → logprob: -8.250492095947266
    3. '(' → logprob: -8.375492095947266
    4. 'query' → logprob: -14.750492095947266
    5. '(request' → logprob: -15.875492095947266
    6. '(q' → logprob: -16.500492095947266
    7. ' query' → logprob: -16.750492095947266
    8. '(
' → logprob: -17.500492095947266
    9. '=query' → logprob: -17.625492095947266
    10. '(question' → logprob: -18.625492095947266

Token 503: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23810438811779022
    2. '):' → logprob: -1.6131043434143066
    3. '(query' → logprob: -4.488104343414307
    4. '           ' → logprob: -7.988104343414307
    5. '()):
' → logprob: -7.988104343414307
    6. '():
' → logprob: -8.738104820251465
    7. ',' → logprob: -8.988104820251465
    8. '               ' → logprob: -9.113104820251465
    9. ')' → logprob: -9.488104820251465
    10. '[' → logprob: -10.363104820251465

Token 504: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004383843857795
    2. ':
' → logprob: -6.3793840408325195
    3. ' and' → logprob: -7.0043840408325195
    4. ' return' → logprob: -7.6293840408325195
    5. '():
' → logprob: -8.00438404083252
    6. ':' → logprob: -8.00438404083252
    7. '                    
' → logprob: -8.37938404083252
    8. 'return' → logprob: -8.87938404083252
    9. '                       ' → logprob: -9.37938404083252
    10. '               ' → logprob: -10.12938404083252

Token 505: ' result' (ID: 1534)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38899508118629456
    2. '                       ' → logprob: -1.3889950513839722
    3. 'return' → logprob: -2.6389951705932617
    4. '                   ' → logprob: -7.138995170593262
    5. ' result' → logprob: -7.638995170593262
    6. 'result' (adapté à ' result') → logprob: -8.888995170593262
    7. '
' → logprob: -10.763995170593262
    8. '       ' → logprob: -11.138995170593262
    9. '                        
' → logprob: -11.388995170593262
    10. '               ' → logprob: -12.013995170593262

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014188071712851524
    2. '=' → logprob: -4.264188289642334
    3. '                   ' → logprob: -11.514187812805176
    4. ',' → logprob: -12.014187812805176
    5. '.append' → logprob: -12.389187812805176
    6. '               ' → logprob: -14.014187812805176
    7. '                       ' → logprob: -14.014187812805176
    8. ' ' → logprob: -14.389187812805176
    9. '[' → logprob: -15.014187812805176
    10. ')' → logprob: -15.014187812805176

Token 507: ' handler' (ID: 13310)
  Prédit: ' handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handler' → logprob: -0.31326285004615784
    2. 'handler' → logprob: -1.3132628202438354
    3. '                   ' → logprob: -14.688262939453125
    4. '	handler' → logprob: -15.063262939453125
    5. '(handler' → logprob: -15.313262939453125
    6. 'handle' → logprob: -16.188262939453125
    7. ' handle' → logprob: -17.063262939453125
    8. '                    ' → logprob: -17.438262939453125
    9. '_handler' → logprob: -18.063262939453125
    10. 'Handler' → logprob: -18.313262939453125

Token 508: '.handle' (ID: 16214)
  Prédit: '.handle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.handle' → logprob: -0.04930341616272926
    2. '.process' → logprob: -3.0493035316467285
    3. '.can' → logprob: -7.6743035316467285
    4. '.' → logprob: -8.54930305480957
    5. '.execute' → logprob: -10.17430305480957
    6. ' .' → logprob: -11.42430305480957
    7. '.query' → logprob: -12.67430305480957
    8. '.perform' → logprob: -13.04930305480957
    9. '.run' → logprob: -14.29930305480957
    10. '   ' → logprob: -14.79930305480957

Token 509: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.0004952482995577157
    2. '(' → logprob: -7.625495433807373
    3. ' (' → logprob: -12.000494956970215
    4. '(
' → logprob: -15.000494956970215
    5. '(question' → logprob: -15.000494956970215
    6. '(q' → logprob: -16.00049591064453
    7. '=query' → logprob: -16.00049591064453
    8. 'query' → logprob: -16.50049591064453
    9. '(request' → logprob: -16.75049591064453
    10. '_query' → logprob: -17.25049591064453

Token 510: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062050141394138336
    2. ')' → logprob: -2.8120501041412354
    3. '                   ' → logprob: -9.687049865722656
    4. ')
' → logprob: -11.562049865722656
    5. '               ' → logprob: -12.437049865722656
    6. ' )
' → logprob: -12.562049865722656
    7. ')

' → logprob: -14.312049865722656
    8. '):
' → logprob: -14.312049865722656
    9. ')return' → logprob: -14.312049865722656
    10. ',' → logprob: -14.687049865722656

Token 511: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008510822663083673
    2. '                    
' → logprob: -8.000850677490234
    3. '               ' → logprob: -8.250850677490234
    4. '                       ' → logprob: -9.375850677490234
    5. '<|end|>' → logprob: -9.750850677490234
    6. '           ' → logprob: -10.375850677490234
    7. '                    ' → logprob: -11.000850677490234
    8. '
' → logprob: -11.500850677490234
    9. '                        
' → logprob: -11.750850677490234
    10. '                  ' → logprob: -12.000850677490234

Token 512: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.13109788298606873
    2. 'results' (adapté à ' results') → logprob: -2.3810977935791016
    3. '                   ' → logprob: -3.5060977935791016
    4. '
' → logprob: -8.256097793579102
    5. '                    
' → logprob: -10.256097793579102
    6. '	results' → logprob: -10.631097793579102
    7. '(results' → logprob: -11.006097793579102
    8. ' 
' → logprob: -11.381097793579102
    9. '               ' → logprob: -11.381097793579102
    10. '.results' → logprob: -11.381097793579102

Token 513: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -12.500003814697266
    3. '.extend' → logprob: -15.750003814697266
    4. 'append' → logprob: -16.375003814697266
    5. '.app' → logprob: -17.000003814697266
    6. '.Append' → logprob: -17.625003814697266
    7. '.ap' → logprob: -19.125003814697266
    8. '.push' → logprob: -19.750003814697266
    9. '_append' → logprob: -19.750003814697266
    10. ' .' → logprob: -20.125003814697266

Token 514: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0485910028219223
    2. '(' → logprob: -3.048590898513794
    3. 'result' → logprob: -12.798590660095215
    4. '(
' → logprob: -14.173590660095215
    5. '(

' → logprob: -16.92359161376953
    6. ' result' → logprob: -17.42359161376953
    7. ' (' → logprob: -17.54859161376953
    8. '(res' → logprob: -17.79859161376953
    9. '(results' → logprob: -18.29859161376953
    10. '(response' → logprob: -18.92359161376953

Token 515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018836578819900751
    2. ')
' → logprob: -7.126883506774902
    3. '               ' → logprob: -8.001883506774902
    4. '<|end|>' → logprob: -8.251883506774902
    5. '           ' → logprob: -8.501883506774902
    6. '
' → logprob: -9.126883506774902
    7. '                   ' → logprob: -9.376883506774902
    8. ')return' → logprob: -10.626883506774902
    9. '       ' → logprob: -11.001883506774902
    10. ')\' → logprob: -12.001883506774902

Token 516: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017762737348675728
    2. '       ' → logprob: -5.267762660980225
    3. '               ' → logprob: -5.267762660980225
    4. '<|end|>' → logprob: -5.392762660980225
    5. 'return' → logprob: -7.142762660980225
    6. ' return' → logprob: -7.392762660980225
    7. '           ' → logprob: -8.017763137817383
    8. '                    
' → logprob: -8.267763137817383
    9. '
' → logprob: -8.767763137817383
    10. '                       ' → logprob: -8.892763137817383

Token 517: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5280996561050415
    2. '                   ' → logprob: -1.2780996561050415
    3. 'break' (adapté à ' break') → logprob: -2.028099536895752
    4. '               ' → logprob: -9.77810001373291
    5. '                       ' → logprob: -10.65310001373291
    6. '
' → logprob: -11.02810001373291
    7. '	break' → logprob: -11.40310001373291
    8. '_break' → logprob: -12.40310001373291
    9. '           ' → logprob: -12.65310001373291
    10. '                    ' → logprob: -12.65310001373291

Token 518: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19108690321445465
    2. ' return' → logprob: -2.316087007522583
    3. 'return' (adapté à ' return') → logprob: -2.941087007522583
    4. '   ' → logprob: -3.816087007522583
    5. '
' → logprob: -8.691086769104004
    6. '           ' → logprob: -9.691086769104004
    7. '    ' → logprob: -10.066086769104004
    8. '	return' → logprob: -10.191086769104004
    9. ' else' → logprob: -10.566086769104004
    10. ' ' → logprob: -10.691086769104004

Token 521: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.003178071230649948
    2. 'results' → logprob: -5.753178119659424
    3. '	results' → logprob: -15.253177642822266
    4. ' ' → logprob: -16.753177642822266
    5. '_results' → logprob: -18.753177642822266
    6. '(results' → logprob: -20.128177642822266
    7. ' ' → logprob: -20.753177642822266
    8. ' result' → logprob: -21.003177642822266
    9. '.results' → logprob: -21.628177642822266
    10. 'result' → logprob: -21.628177642822266

Token 522: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001839752309024334
    2. '
' → logprob: -6.751839637756348
    3. '<|end|>' → logprob: -7.626839637756348
    4. ' class' → logprob: -8.751839637756348
    5. '```' → logprob: -11.626839637756348
    6. '<class' → logprob: -11.626839637756348
    7. '[' → logprob: -13.876839637756348
    8. '<|end|>' → logprob: -14.001839637756348
    9. '

' → logprob: -14.251839637756348
    10. '	class' → logprob: -14.376839637756348

Token 523: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -8.41866585687967e-06
    2. ' class' → logprob: -12.000008583068848
    3. '```' → logprob: -13.875008583068848
    4. '<class' → logprob: -14.625008583068848
    5. '"class' → logprob: -14.875008583068848
    6. '
' → logprob: -15.375008583068848
    7. 'import' → logprob: -16.12500762939453
    8. 'c' → logprob: -17.25000762939453
    9. 'clas' → logprob: -18.37500762939453
    10. 'from' → logprob: -18.37500762939453

Token 524: ' Max' (ID: 10093)
  Prédit: ' Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Card' → logprob: -0.593856930732727
    2. ' Query' → logprob: -1.968856930732727
    3. ' Simple' → logprob: -2.3438568115234375
    4. ' Handler' → logprob: -2.5938568115234375
    5. ' Div' → logprob: -3.3438568115234375
    6. 'Card' → logprob: -3.7188568115234375
    7. ' Max' → logprob: -4.5938568115234375
    8. ' R' → logprob: -4.8438568115234375
    9. ' Hand' → logprob: -4.9688568115234375
    10. 'Query' → logprob: -4.9688568115234375

Token 525: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.664371848164592e-05
    2. ' R' → logprob: -12.500016212463379
    3. ' remainder' → logprob: -12.500016212463379
    4. 'Reminder' → logprob: -12.750016212463379
    5. 'Card' → logprob: -13.125016212463379
    6. 'Rem' → logprob: -13.250016212463379
    7. 'Modulo' → logprob: -13.500016212463379
    8. 'Remaining' → logprob: -14.750016212463379
    9. 'Value' → logprob: -15.500016212463379
    10. 'Query' → logprob: -15.875016212463379

Token 526: 'ema' (ID: 4603)
  Prédit: 'ema'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ema' → logprob: -0.007669798564165831
    2. 'em' → logprob: -4.882669925689697
    3. 'e' → logprob: -9.882669448852539
    4. 'R' → logprob: -11.507669448852539
    5. 'emain' → logprob: -13.882669448852539
    6. '_em' → logprob: -15.382669448852539
    7. 'emand' → logprob: -15.507669448852539
    8. 'emo' → logprob: -16.00766944885254
    9. 'est' → logprob: -16.13266944885254
    10. 'Card' → logprob: -16.13266944885254

Token 527: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -1.1472419600977446e-06
    2. 'nder' → logprob: -14.375000953674316
    3. 'ind' → logprob: -14.875000953674316
    4. 'inde' → logprob: -16.250001907348633
    5. 'under' → logprob: -18.000001907348633
    6. 'ider' → logprob: -18.000001907348633
    7. 'index' → logprob: -18.125001907348633
    8. 'indeer' → logprob: -18.375001907348633
    9. 'inders' → logprob: -19.000001907348633
    10. 'ander' → logprob: -19.125001907348633

Token 528: 'Query' (ID: 3962)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.010189731605350971
    2. 'Query' → logprob: -4.760189533233643
    3. 'Finder' → logprob: -6.510189533233643
    4. 'Calculator' → logprob: -9.8851900100708
    5. 'For' → logprob: -11.0101900100708
    6. ':' → logprob: -12.3851900100708
    7. 'Quer' → logprob: -12.6351900100708
    8. '_Handler' → logprob: -12.8851900100708
    9. 'By' → logprob: -13.2601900100708
    10. 'Processor' → logprob: -13.7601900100708

Token 529: 'Handler' (ID: 4139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012545442208647728
    2. ':
' → logprob: -4.387545585632324
    3. 'Handler' → logprob: -10.637545585632324
    4. '(Query' → logprob: -13.012545585632324
    5. ':

' → logprob: -13.137545585632324
    6. ' :' → logprob: -13.262545585632324
    7. '):' → logprob: -13.387545585632324
    8. '(' → logprob: -14.137545585632324
    9. 'Query' → logprob: -14.262545585632324
    10. '_Handler' → logprob: -14.637545585632324

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00595261761918664
    2. ':
' → logprob: -5.130952835083008
    3. ' :' → logprob: -11.005952835083008
    4. ':def' → logprob: -13.255952835083008
    5. '(' → logprob: -13.380952835083008
    6. ':

' → logprob: -13.505952835083008
    7. ' :
' → logprob: -14.255952835083008
    8. '<|end|>' → logprob: -14.380952835083008
    9. '(object' → logprob: -14.755952835083008
    10. '   ' → logprob: -15.005952835083008

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004283534828573465
    2. ' def' → logprob: -5.504283428192139
    3. 'def' → logprob: -9.004283905029297
    4. ':
' → logprob: -10.254283905029297
    5. ':' → logprob: -10.379283905029297
    6. '	def' → logprob: -11.879283905029297
    7. '    
' → logprob: -12.754283905029297
    8. '<|end|>' → logprob: -13.129283905029297
    9. '    ' → logprob: -14.254283905029297
    10. ':def' → logprob: -14.254283905029297

Token 532: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3992373049259186
    2. 'def' (adapté à ' def') → logprob: -1.1492372751235962
    3. '   ' → logprob: -4.399237155914307
    4. ' ' → logprob: -12.899237632751465
    5. '	def' → logprob: -14.774237632751465
    6. '  ' → logprob: -14.899237632751465
    7. '    ' → logprob: -15.274237632751465
    8. '```' → logprob: -17.27423667907715
    9. ' de' → logprob: -17.52423667907715
    10. 'de' → logprob: -17.52423667907715

Token 533: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01211813185364008
    2. ' __' → logprob: -4.762118339538574
    3. 'def' → logprob: -6.137118339538574
    4. ' can' → logprob: -7.012118339538574
    5. '__' → logprob: -8.512118339538574
    6. 'can' → logprob: -8.762118339538574
    7. ' init' → logprob: -9.762118339538574
    8. 'init' → logprob: -11.512118339538574
    9. '_can' → logprob: -12.012118339538574
    10. '_init' → logprob: -13.262118339538574

Token 534: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.25
    3. '_init' → logprob: -18.625
    4. 'int' → logprob: -19.25
    5. 'def' → logprob: -20.125
    6. 'ini' → logprob: -20.375
    7. '(init' → logprob: -20.5
    8. '_' → logprob: -20.625
    9. '	init' → logprob: -21.0
    10. '__' → logprob: -21.5

Token 535: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.31533125042915344
    2. '(self' → logprob: -1.315331220626831
    3. ' (' → logprob: -6.31533145904541
    4. '(' → logprob: -8.94033145904541
    5. '_(' → logprob: -9.44033145904541
    6. '__(
' → logprob: -10.94033145904541
    7. '__' → logprob: -11.56533145904541
    8. ',' → logprob: -11.69033145904541
    9. 'self' → logprob: -12.31533145904541
    10. ' ' → logprob: -13.56533145904541

Token 536: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011785586830228567
    2. ' self' → logprob: -6.751178741455078
    3. ',' → logprob: -12.501178741455078
    4. '(self' → logprob: -12.626178741455078
    5. '
' → logprob: -14.501178741455078
    6. ',self' → logprob: -15.501178741455078
    7. ')' → logprob: -15.626178741455078
    8. 'card' → logprob: -15.876178741455078
    9. '   ' → logprob: -15.876178741455078
    10. '	self' → logprob: -16.501178741455078

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.061676347395405e-05
    2. ' ,' → logprob: -10.12505054473877
    3. 'self' → logprob: -11.87505054473877
    4. '):' → logprob: -13.50005054473877
    5. '_,' → logprob: -13.87505054473877
    6. ',_' → logprob: -14.62505054473877
    7. '):
' → logprob: -15.12505054473877
    8. ',
' → logprob: -15.75005054473877
    9. ',self' → logprob: -15.75005054473877
    10. '__,' → logprob: -16.500051498413086

Token 538: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6327583193778992
    2. ' card' → logprob: -0.7577583193778992
    3. '_card' → logprob: -10.007758140563965
    4. 'self' → logprob: -10.507758140563965
    5. ' self' → logprob: -10.757758140563965
    6. '(card' → logprob: -11.257758140563965
    7. '	card' → logprob: -11.507758140563965
    8. ' ' → logprob: -11.757758140563965
    9. '):
' → logprob: -12.132758140563965
    10. ')' → logprob: -12.257758140563965

Token 539: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0006629953859373927
    2. 'Set' → logprob: -7.375662803649902
    3. 'set' → logprob: -10.375662803649902
    4. '_Set' → logprob: -13.000662803649902
    5. '_' → logprob: -14.000662803649902
    6. ' set' → logprob: -14.375662803649902
    7. '_SET' → logprob: -14.375662803649902
    8. '_sets' → logprob: -14.625662803649902
    9. 's' → logprob: -15.250662803649902
    10. '_s' → logprob: -15.750662803649902

Token 540: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2521701455116272
    2. '):
' → logprob: -1.5021700859069824
    3. ',' → logprob: -8.62717056274414
    4. '   ' → logprob: -10.62717056274414
    5. '):
' → logprob: -10.62717056274414
    6. '       ' → logprob: -11.62717056274414
    7. '):

' → logprob: -13.12717056274414
    8. ':' → logprob: -14.37717056274414
    9. ' ):' → logprob: -14.37717056274414
    10. ')' → logprob: -14.50217056274414

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030829108436591923
    2. 'self' → logprob: -8.7503080368042
    3. '   ' → logprob: -9.3753080368042
    4. ' self' → logprob: -9.8753080368042
    5. ',' → logprob: -12.1253080368042
    6. '	self' → logprob: -13.2503080368042
    7. '<|end|>' → logprob: -13.7503080368042
    8. '(self' → logprob: -13.8753080368042
    9. '	' → logprob: -14.0003080368042
    10. 'def' → logprob: -14.3753080368042

Token 542: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16294091939926147
    2. ' self' → logprob: -1.9129409790039062
    3. '       ' → logprob: -5.912940979003906
    4. '	self' → logprob: -11.662940979003906
    5. '   ' → logprob: -16.287940979003906
    6. '(self' → logprob: -16.662940979003906
    7. ' ' → logprob: -17.037940979003906
    8. '_self' → logprob: -17.287940979003906
    9. '	' → logprob: -17.412940979003906
    10. ' ' → logprob: -18.037940979003906

Token 543: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0006776464288122952
    2. '.' → logprob: -7.625677585601807
    3. '   ' → logprob: -8.750678062438965
    4. ' .' → logprob: -11.375678062438965
    5. '       ' → logprob: -11.750678062438965
    6. '.__' → logprob: -12.375678062438965
    7. ' ' → logprob: -13.500678062438965
    8. '.card' → logprob: -13.625678062438965
    9. '_card' → logprob: -13.625678062438965
    10. '_' → logprob: -13.875678062438965

Token 544: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -2.816093228830141e-06
    2. '_card' → logprob: -13.62500286102295
    3. 'cards' → logprob: -13.75000286102295
    4. 'max' → logprob: -15.50000286102295
    5. ' card' → logprob: -16.750001907348633
    6. '_max' → logprob: -17.625001907348633
    7. '.card' → logprob: -18.000001907348633
    8. 'car' → logprob: -18.125001907348633
    9. '	card' → logprob: -18.125001907348633
    10. '(card' → logprob: -19.125001907348633

Token 545: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -4.842555426876061e-06
    2. 'Set' → logprob: -12.750004768371582
    3. 'set' → logprob: -13.250004768371582
    4. '_sets' → logprob: -16.7500057220459
    5. '_' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.3750057220459
    7. '_SET' → logprob: -17.8750057220459
    8. '_Set' → logprob: -18.2500057220459
    9. '
' → logprob: -18.6250057220459
    10. '       ' → logprob: -19.6250057220459

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031796174589544535
    2. ' =' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.878179550170898
    4. '=query' → logprob: -14.378179550170898
    5. ',' → logprob: -16.2531795501709
    6. '=
' → logprob: -16.7531795501709
    7. '.' → logprob: -16.8781795501709
    8. '    ' → logprob: -16.8781795501709
    9. '  ' → logprob: -17.0031795501709
    10. '.query' → logprob: -17.1281795501709

Token 547: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.5759406089782715
    2. 'card' → logprob: -0.8259406089782715
    3. '	card' → logprob: -13.95094108581543
    4. '_card' → logprob: -16.07594108581543
    5. 'Card' → logprob: -16.07594108581543
    6. '(card' → logprob: -16.32594108581543
    7. ' Card' → logprob: -18.32594108581543
    8. '.card' → logprob: -18.70094108581543
    9. 'car' → logprob: -19.95094108581543
    10. ' ' → logprob: -20.45094108581543

Token 548: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.0280383548888494e-06
    2. 'set' → logprob: -13.875000953674316
    3. 'Set' → logprob: -16.750001907348633
    4. '_' → logprob: -17.875001907348633
    5. '_SET' → logprob: -18.875001907348633
    6. ' _' → logprob: -19.250001907348633
    7. '_sets' → logprob: -19.250001907348633
    8. '_Set' → logprob: -19.750001907348633
    9. '_s' → logprob: -20.875001907348633
    10. ' set' → logprob: -21.125001907348633

Token 549: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1341826170682907
    2. '   ' → logprob: -2.1341826915740967
    3. '<|end|>' → logprob: -5.259182453155518
    4. '    
' → logprob: -6.634182453155518
    5. '<|end|>' → logprob: -8.634182929992676
    6. '

' → logprob: -8.759182929992676
    7. 'def' → logprob: -9.134182929992676
    8. ' def' → logprob: -9.634182929992676
    9. '        
' → logprob: -9.759182929992676
    10. '       ' → logprob: -10.509182929992676

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011939727846765891
    2. '
' → logprob: -9.25011920928955
    3. 'def' → logprob: -11.37511920928955
    4. '    
' → logprob: -12.00011920928955
    5. ' def' → logprob: -13.00011920928955
    6. '       ' → logprob: -13.00011920928955
    7. '        
' → logprob: -14.12511920928955
    8. '```' → logprob: -16.625120162963867
    9. '	def' → logprob: -16.750120162963867
    10. '<|end|>' → logprob: -17.250120162963867

Token 551: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.5716304410016164e-05
    2. ' def' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.250035285949707
    4. '	def' → logprob: -20.750036239624023
    5. '
' → logprob: -23.875036239624023
    6. ' ' → logprob: -24.375036239624023
    7. 'de' → logprob: -25.000036239624023
    8. '_def' → logprob: -25.000036239624023
    9. ':def' → logprob: -25.375036239624023
    10. '  ' → logprob: -25.500036239624023

Token 552: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.061968810856342316
    2. ' can' → logprob: -2.8119688034057617
    3. '_can' → logprob: -14.186968803405762
    4. 'def' → logprob: -14.686968803405762
    5. '	can' → logprob: -16.686969757080078
    6. '.can' → logprob: -17.936969757080078
    7. 'Can' → logprob: -18.686969757080078
    8. ' def' → logprob: -18.811969757080078
    9. 'c' → logprob: -19.186969757080078
    10. '   ' → logprob: -20.436969757080078

Token 553: '_handle' (ID: 24155)
  Prédit: '_handle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handle' → logprob: -0.00015181333583313972
    2. ' _' → logprob: -9.250151634216309
    3. '_hand' → logprob: -10.500151634216309
    4. '_' → logprob: -11.125151634216309
    5. '_handler' → logprob: -12.250151634216309
    6. '_continue' → logprob: -13.500151634216309
    7. '_process' → logprob: -13.875151634216309
    8. '
' → logprob: -13.875151634216309
    9. '_Handle' → logprob: -14.000151634216309
    10. '_manage' → logprob: -14.125151634216309

Token 554: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028300806879997253
    2. '(' → logprob: -5.8778300285339355
    3. ' (' → logprob: -10.752830505371094
    4. 'self' → logprob: -12.877830505371094
    5. '(
' → logprob: -14.377830505371094
    6. '<|end|>' → logprob: -15.627830505371094
    7. ' self' → logprob: -15.877830505371094
    8. '(Self' → logprob: -16.127830505371094
    9. '(sel' → logprob: -16.877830505371094
    10. '(

' → logprob: -17.252830505371094

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7044581770896912
    2. '(self' → logprob: -0.7044581770896912
    3. 'self' → logprob: -5.204458236694336
    4. ',self' → logprob: -5.329458236694336
    5. ' ,' → logprob: -7.329458236694336
    6. ' (' → logprob: -9.704458236694336
    7. ' self' → logprob: -9.829458236694336
    8. 'query' → logprob: -10.079458236694336
    9. '(query' → logprob: -10.579458236694336
    10. '(' → logprob: -10.829458236694336

Token 556: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.06355388462543488
    2. ' query' → logprob: -3.438553810119629
    3. 'self' → logprob: -3.563553810119629
    4. ' self' → logprob: -6.813553810119629
    5. ')' → logprob: -12.063553810119629
    6. '$query' → logprob: -12.188553810119629
    7. '.query' → logprob: -12.563553810119629
    8. '       ' → logprob: -13.313553810119629
    9. '_query' → logprob: -13.438553810119629
    10. ' '' → logprob: -13.563553810119629

Token 557: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3242850601673126
    2. '):' → logprob: -1.3242850303649902
    3. 'self' → logprob: -5.32428503036499
    4. '):
' → logprob: -5.57428503036499
    5. '(self' → logprob: -6.32428503036499
    6. '       ' → logprob: -8.824285507202148
    7. ')' → logprob: -9.324285507202148
    8. ',self' → logprob: -9.324285507202148
    9. ' self' → logprob: -9.699285507202148
    10. '   ' → logprob: -9.949285507202148

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05626163259148598
    2. ' return' → logprob: -2.9312615394592285
    3. 'return' → logprob: -6.6812615394592285
    4. ' and' → logprob: -10.681262016296387
    5. '   ' → logprob: -10.806262016296387
    6. '        
' → logprob: -11.556262016296387
    7. '	return' → logprob: -11.681262016296387
    8. '(return' → logprob: -11.806262016296387
    9. '{return' → logprob: -12.056262016296387
    10. ' 
' → logprob: -12.306262016296387

Token 559: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3648883104324341
    2. '       ' → logprob: -1.364888310432434
    3. ' return' → logprob: -2.9898881912231445
    4. '	return' → logprob: -11.864888191223145
    5. '
' → logprob: -12.364888191223145
    6. '{return' → logprob: -12.489888191223145
    7. '   ' → logprob: -12.989888191223145
    8. ':return' → logprob: -13.989888191223145
    9. 'eturn' → logprob: -14.239888191223145
    10. '.return' → logprob: -14.239888191223145

Token 560: ' In' (ID: 730)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5759702920913696
    2. ' return' → logprob: -0.8259702920913696
    3. '       ' → logprob: -10.450970649719238
    4. ' isinstance' → logprob: -13.950970649719238
    5. '   ' → logprob: -14.450970649719238
    6. '
' → logprob: -15.950970649719238
    7. '	return' → logprob: -16.325969696044922
    8. 'query' → logprob: -16.325969696044922
    9. ' ' → logprob: -17.075969696044922
    10. 'if' → logprob: -17.200969696044922

Token 561: ' this' (ID: 495)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.6430440545082092
    2. ' query' → logprob: -0.8930440545082092
    3. ' isinstance' → logprob: -2.7680439949035645
    4. ' hasattr' → logprob: -6.2680439949035645
    5. 'is' → logprob: -8.893044471740723
    6. '(query' → logprob: -10.268044471740723
    7. ' getattr' → logprob: -11.143044471740723
    8. 'len' → logprob: -11.768044471740723
    9. ' return' → logprob: -11.893044471740723
    10. 'return' → logprob: -12.143044471740723

Token 562: ' simplified' (ID: 77177)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.4336247742176056
    2. 'query' → logprob: -1.8086247444152832
    3. ' query' → logprob: -2.558624744415283
    4. 'def' → logprob: -2.808624744415283
    5. ' and' → logprob: -4.308624744415283
    6. ' def' → logprob: -4.558624744415283
    7. 'class' → logprob: -5.683624744415283
    8. ' if' → logprob: -5.808624744415283
    9. '_query' → logprob: -6.058624744415283
    10. ' case' → logprob: -6.058624744415283

Token 563: ' system' (ID: 2420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15656985342502594
    2. ' def' → logprob: -2.1565699577331543
    3. ' and' → logprob: -4.781569957733154
    4. '   ' → logprob: -4.906569957733154
    5. ' if' → logprob: -5.656569957733154
    6. 'and' → logprob: -6.031569957733154
    7. ' isinstance' → logprob: -6.656569957733154
    8. 'query' → logprob: -6.781569957733154
    9. ' query' → logprob: -6.906569957733154
    10. 'if' → logprob: -7.156569957733154

Token 564: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3674015402793884
    2. 'return' → logprob: -1.8674015998840332
    3. ' return' → logprob: -1.9924015998840332
    4. ' and' → logprob: -4.867401599884033
    5. ':return' → logprob: -6.117401599884033
    6. ',' → logprob: -6.242401599884033
    7. ':' → logprob: -6.617401599884033
    8. ':
' → logprob: -6.617401599884033
    9. 'and' → logprob: -6.867401599884033
    10. '   ' → logprob: -7.617401599884033

Token 565: ' all' (ID: 722)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03989911451935768
    2. ' return' → logprob: -3.2898991107940674
    3. '       ' → logprob: -6.2898993492126465
    4. '	return' → logprob: -14.914898872375488
    5. '   ' → logprob: -15.789898872375488
    6. ')return' → logprob: -16.664899826049805
    7. '```' → logprob: -16.664899826049805
    8. ':return' → logprob: -16.664899826049805
    9. '        ' → logprob: -16.914899826049805
    10. '{return' → logprob: -17.039899826049805

Token 566: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.22280676662921906
    2. 'queries' → logprob: -1.9728068113327026
    3. ' isinstance' → logprob: -3.722806692123413
    4. 'query' → logprob: -4.097806930541992
    5. ' query' → logprob: -4.722806930541992
    6. '_queries' → logprob: -5.347806930541992
    7. 'tokens' → logprob: -6.222806930541992
    8. ' tokens' → logprob: -6.722806930541992
    9. 'is' → logprob: -7.222806930541992
    10. '_query' → logprob: -7.722806930541992

Token 567: ' are' (ID: 553)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.2819092273712158
    2. ' are' → logprob: -1.5319092273712158
    3. ' have' → logprob: -1.6569092273712158
    4. ' and' → logprob: -2.031909227371216
    5. '.' → logprob: -2.656909227371216
    6. 'have' → logprob: -3.281909227371216
    7. 'and' → logprob: -3.656909227371216
    8. '.startswith' → logprob: -4.031908988952637
    9. '       ' → logprob: -4.281908988952637
    10. 'are' → logprob: -5.281908988952637

Token 568: ' processed' (ID: 23478)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2027069330215454
    2. '('' → logprob: -1.9527069330215454
    3. 'of' → logprob: -1.9527069330215454
    4. ' isinstance' → logprob: -2.327706813812256
    5. '{'' → logprob: -2.452706813812256
    6. 'is' → logprob: -2.827706813812256
    7. 'instances' → logprob: -3.827706813812256
    8. 'dict' → logprob: -3.952706813812256
    9. 'queries' → logprob: -3.952706813812256
    10. ' instances' → logprob: -4.077706813812256

Token 569: ' by' (ID: 656)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0683131068944931
    2. 'and' → logprob: -2.8183131217956543
    3. ' if' → logprob: -5.818313121795654
    4. '       ' → logprob: -5.818313121795654
    5. 'return' → logprob: -9.443312644958496
    6. ' or' → logprob: -10.193312644958496
    7. ':' → logprob: -10.568312644958496
    8. ' by' → logprob: -10.568312644958496
    9. '   ' → logprob: -10.568312644958496
    10. 'if' → logprob: -10.818312644958496

Token 570: ' this' (ID: 495)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8515142798423767
    2. 'self' → logprob: -0.8515142798423767
    3. 'True' → logprob: -2.1015143394470215
    4. ' isinstance' → logprob: -4.4765143394470215
    5. 'lambda' → logprob: -4.6015143394470215
    6. ' True' → logprob: -6.7265143394470215
    7. ' self' → logprob: -7.2265143394470215
    8. 'Max' → logprob: -7.6015143394470215
    9. 'query' → logprob: -8.476513862609863
    10. ' lambda' → logprob: -9.601513862609863

Token 571: ' handler' (ID: 13310)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9164369106292725
    2. ' def' → logprob: -1.1664369106292725
    3. 'def' → logprob: -1.5414369106292725
    4. ' return' → logprob: -3.4164369106292725
    5. 'return' → logprob: -4.041437149047852
    6. 'and' → logprob: -4.416437149047852
    7. ' query' → logprob: -5.291437149047852
    8. 'query' → logprob: -6.041437149047852
    9. '   ' → logprob: -7.166437149047852
    10. ':' → logprob: -7.666437149047852

Token 572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05114785209298134
    2. ' and' → logprob: -3.051147937774658
    3. 'return' → logprob: -6.926147937774658
    4. ' return' → logprob: -7.426147937774658
    5. 'and' → logprob: -7.426147937774658
    6. '   ' → logprob: -8.5511474609375
    7. '(' → logprob: -10.4261474609375
    8. ' ' → logprob: -10.8011474609375
    9. '           ' → logprob: -10.8011474609375
    10. '
' → logprob: -11.0511474609375

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009593760594725609
    2. '   ' → logprob: -4.884593963623047
    3. ' and' → logprob: -7.384593963623047
    4. ' return' → logprob: -7.759593963623047
    5. '(self' → logprob: -7.759593963623047
    6. 'return' → logprob: -8.634593963623047
    7. 'def' → logprob: -9.009593963623047
    8. 'self' → logprob: -9.884593963623047
    9. ' self' → logprob: -10.134593963623047
    10. '(' → logprob: -10.259593963623047

Token 574: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35197412967681885
    2. '       ' → logprob: -1.6019741296768188
    3. ' return' → logprob: -2.3519740104675293
    4. '	return' → logprob: -11.351974487304688
    5. '   ' → logprob: -12.226974487304688
    6. '
' → logprob: -13.351974487304688
    7. ' 
' → logprob: -13.976974487304688
    8. ' ' → logprob: -13.976974487304688
    9. '{return' → logprob: -14.226974487304688
    10. '        
' → logprob: -14.851974487304688

Token 575: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804768621921539
    2. ' True' → logprob: -3.2880477905273438
    3. 'query' → logprob: -12.288047790527344
    4. ' isinstance' → logprob: -14.163047790527344
    5. ''' → logprob: -15.288047790527344
    6. ' query' → logprob: -15.913047790527344
    7. '"' → logprob: -15.913047790527344
    8. 'true' → logprob: -16.163047790527344
    9. '(True' → logprob: -16.288047790527344
    10. 'is' → logprob: -16.413047790527344

Token 576: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13254515826702118
    2. '<|end|>' → logprob: -2.382545232772827
    3. '
' → logprob: -4.007544994354248
    4. '    
' → logprob: -4.507544994354248
    5. '<|end|>' → logprob: -7.132544994354248
    6. '```' → logprob: -7.132544994354248
    7. '  
' → logprob: -8.007545471191406
    8. 'def' → logprob: -8.382545471191406
    9. '  ' → logprob: -9.257545471191406
    10. '

' → logprob: -9.507545471191406

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014047624543309212
    2. 'def' → logprob: -4.389047622680664
    3. ' def' → logprob: -6.639047622680664
    4. '
' → logprob: -9.014047622680664
    5. '    
' → logprob: -10.014047622680664
    6. '```' → logprob: -10.139047622680664
    7. '<|end|>' → logprob: -11.389047622680664
    8. ' ' → logprob: -12.514047622680664
    9. '  ' → logprob: -12.764047622680664
    10. '<|end|>' → logprob: -13.764047622680664

Token 578: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000983862322755158
    2. ' def' → logprob: -7.500983715057373
    3. '   ' → logprob: -7.750983715057373
    4. '
' → logprob: -14.625984191894531
    5. '	def' → logprob: -16.12598419189453
    6. '    
' → logprob: -17.87598419189453
    7. ' ' → logprob: -18.00098419189453
    8. '```' → logprob: -18.62598419189453
    9. '  ' → logprob: -18.75098419189453
    10. '       ' → logprob: -20.50098419189453

Token 579: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.04858986660838127
    2. ' handle' → logprob: -3.0485899448394775
    3. 'def' → logprob: -13.173589706420898
    4. '_handle' → logprob: -15.423589706420898
    5. ' def' → logprob: -15.673589706420898
    6. '	handle' → logprob: -16.2985897064209
    7. '.handle' → logprob: -16.4235897064209
    8. '   ' → logprob: -18.4235897064209
    9. '(handle' → logprob: -18.7985897064209
    10. ' ' → logprob: -18.9235897064209

Token 580: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2127087504486553e-05
    2. '(' → logprob: -11.125021934509277
    3. ' (' → logprob: -12.125021934509277
    4. '(query' → logprob: -13.250021934509277
    5. 'self' → logprob: -16.500022888183594
    6. '_query' → logprob: -17.250022888183594
    7. ' self' → logprob: -18.500022888183594
    8. '(s' → logprob: -18.875022888183594
    9. '(sel' → logprob: -19.375022888183594
    10. '_(' → logprob: -19.625022888183594

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ' ,' → logprob: -10.250065803527832
    3. ',self' → logprob: -10.625065803527832
    4. 'self' → logprob: -12.750065803527832
    5. '(query' → logprob: -13.625065803527832
    6. '(self' → logprob: -14.500065803527832
    7. '_query' → logprob: -14.625065803527832
    8. '_,' → logprob: -15.000065803527832
    9. 'query' → logprob: -15.125065803527832
    10. ',q' → logprob: -16.12506675720215

Token 582: ' divisor' (ID: 100482)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.061969030648469925
    2. ' query' → logprob: -2.811969041824341
    3. 'self' → logprob: -13.686968803405762
    4. '	query' → logprob: -16.811969757080078
    5. ' self' → logprob: -17.186969757080078
    6. '       ' → logprob: -17.186969757080078
    7. '   ' → logprob: -17.186969757080078
    8. '(query' → logprob: -17.436969757080078
    9. '$query' → logprob: -17.436969757080078
    10. '.query' → logprob: -17.561969757080078

Token 583: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004095735494047403
    2. '):
' → logprob: -5.504095554351807
    3. ' ):' → logprob: -11.629096031188965
    4. ')' → logprob: -12.129096031188965
    5. '):
' → logprob: -13.379096031188965
    6. '   ' → logprob: -14.004096031188965
    7. ',' → logprob: -15.629096031188965
    8. '       ' → logprob: -15.879096031188965
    9. '):

' → logprob: -16.12909507751465
    10. ':' → logprob: -17.25409507751465

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013753529638051987
    2. 'return' → logprob: -6.876375198364258
    3. ' return' → logprob: -8.001375198364258
    4. 'result' → logprob: -13.376375198364258
    5. '```' → logprob: -13.876375198364258
    6. '        
' → logprob: -14.126375198364258
    7. ':
' → logprob: -14.251375198364258
    8. ':' → logprob: -14.251375198364258
    9. '):
' → logprob: -14.501375198364258
    10. '
' → logprob: -14.751375198364258

Token 585: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07694987207651138
    2. ' return' → logprob: -3.0769498348236084
    3. '       ' → logprob: -3.5769498348236084
    4. '	return' → logprob: -13.076950073242188
    5. 'result' → logprob: -14.201950073242188
    6. '```' → logprob: -15.826950073242188
    7. '   ' → logprob: -16.576950073242188
    8. '{return' → logprob: -16.701950073242188
    9. '
' → logprob: -16.951950073242188
    10. 'eturn' → logprob: -18.701950073242188

Token 586: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16022422909736633
    2. 'self' → logprob: -1.910224199295044
    3. '(self' → logprob: -16.78522491455078
    4. '	self' → logprob: -16.91022491455078
    5. ' ' → logprob: -17.53522491455078
    6. '```' → logprob: -18.78522491455078
    7. '=self' → logprob: -18.91022491455078
    8. '       ' → logprob: -19.66022491455078
    9. '_self' → logprob: -19.78522491455078
    10. '   ' → logprob: -20.66022491455078

Token 587: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. ')._' → logprob: -17.0
    4. ']._' → logprob: -17.25
    5. ' .' → logprob: -17.75
    6. '_' → logprob: -18.5
    7. 'self' → logprob: -18.625
    8. '."_' → logprob: -19.5
    9. '   ' → logprob: -19.75
    10. '.\' → logprob: -20.125

Token 588: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -1.9361264946837764e-07
    2. '_card' → logprob: -16.5
    3. '.card' → logprob: -18.75
    4. 'car' → logprob: -19.75
    5. 'cards' → logprob: -19.875
    6. '	card' → logprob: -19.875
    7. '(card' → logprob: -20.25
    8. ' card' → logprob: -21.375
    9. 'max' → logprob: -21.75
    10. 'Card' → logprob: -22.25

Token 589: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.1008713702030946e-06
    2. 'Set' → logprob: -13.250001907348633
    3. 'set' → logprob: -15.000001907348633
    4. '_Set' → logprob: -19.000001907348633
    5. 'et' → logprob: -19.250001907348633
    6. '_SET' → logprob: -19.750001907348633
    7. '_' → logprob: -20.000001907348633
    8. '_sets' → logprob: -20.250001907348633
    9. '-set' → logprob: -20.500001907348633
    10. '.set' → logprob: -20.500001907348633

Token 590: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -12.125012397766113
    3. 'query' → logprob: -12.500012397766113
    4. ' .' → logprob: -12.750012397766113
    5. ' query' → logprob: -18.000011444091797
    6. '	query' → logprob: -18.500011444091797
    7. '.question' → logprob: -19.375011444091797
    8. '`.' → logprob: -20.000011444091797
    9. '=query' → logprob: -20.250011444091797
    10. '$query' → logprob: -20.875011444091797

Token 591: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: 0.0
    2. 'max' → logprob: -17.75
    3. '_MAX' → logprob: -20.25
    4. '_' → logprob: -20.375
    5. 'Max' → logprob: -21.625
    6. '_min' → logprob: -22.0
    7. '_Max' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. '__' → logprob: -22.875
    10. '_
' → logprob: -23.0

Token 592: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00021796036162413657
    2. '_rem' → logprob: -8.625218391418457
    3. '_max' → logprob: -11.375218391418457
    4. 're' → logprob: -11.500218391418457
    5. '_' → logprob: -12.000218391418457
    6. '_r' → logprob: -12.875218391418457
    7. '_res' → logprob: -13.250218391418457
    8. '_div' → logprob: -13.875218391418457
    9. 'mainder' → logprob: -14.000218391418457
    10. 'a' → logprob: -14.500218391418457

Token 593: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.002038914244621992
    2. 'ma' → logprob: -6.252038955688477
    3. 'm' → logprob: -9.127038955688477
    4. 'main' → logprob: -14.127038955688477
    5. 'a' → logprob: -15.127038955688477
    6. 'mand' → logprob: -15.127038955688477
    7. 'div' → logprob: -15.377038955688477
    8. 'mai' → logprob: -16.377038955688477
    9. ' ma' → logprob: -16.877038955688477
    10. '_ma' → logprob: -17.377038955688477

Token 594: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. '(di' → logprob: -16.375553131103516
    4. '(dis' → logprob: -16.500553131103516
    5. '(
' → logprob: -16.875553131103516
    6. '(dist' → logprob: -17.500553131103516
    7. '(d' → logprob: -17.500553131103516
    8. ' (' → logprob: -17.500553131103516
    9. '((' → logprob: -17.750553131103516
    10. 'div' → logprob: -18.125553131103516

Token 595: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -2.8802491215174086e-05
    2. 'is' → logprob: -10.500028610229492
    3. ' is' → logprob: -14.125028610229492
    4. '_is' → logprob: -16.625028610229492
    5. ' divisor' → logprob: -16.750028610229492
    6. '{' → logprob: -17.125028610229492
    7. 'isible' → logprob: -17.375028610229492
    8. 's' → logprob: -17.625028610229492
    9. '   ' → logprob: -18.000028610229492
    10. '=' → logprob: -18.000028610229492

Token 596: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -16.875001907348633
    4. '))' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. ')

' → logprob: -18.500001907348633
    7. ')
' → logprob: -18.625001907348633
    8. ')return' → logprob: -18.750001907348633
    9. '       ' → logprob: -19.125001907348633
    10. '}' → logprob: -19.625001907348633

Token 597: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02706949971616268
    2. 'card' → logprob: -4.152069568634033
    3. '```' → logprob: -4.902069568634033
    4. 'c' → logprob: -6.527069568634033
    5. 'cards' → logprob: -6.902069568634033
    6. 'query' → logprob: -7.277069568634033
    7. 'def' → logprob: -9.152069091796875
    8. 'if' → logprob: -9.902069091796875
    9. '[' → logprob: -10.277069091796875
    10. '<|end|>' → logprob: -10.652069091796875

Token 598: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009540032595396042
    2. ' example' → logprob: -4.88454008102417
    3. ' run' → logprob: -6.88454008102417
    4. ' process' → logprob: -7.63454008102417
    5. ' solve' → logprob: -8.634539604187012
    6. ' test' → logprob: -9.134539604187012
    7. ' create' → logprob: -10.134539604187012
    8. ' sample' → logprob: -10.759539604187012
    9. ' solution' → logprob: -11.134539604187012
    10. 'main' → logprob: -11.384539604187012

Token 599: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.845798710244708e-05
    2. '():
' → logprob: -10.625038146972656
    3. ' ():' → logprob: -11.250038146972656
    4. '()' → logprob: -14.375038146972656
    5. '_' → logprob: -15.125038146972656
    6. '():
' → logprob: -16.000038146972656
    7. '(' → logprob: -17.375038146972656
    8. '():

' → logprob: -17.500038146972656
    9. '(":' → logprob: -18.125038146972656
    10. ':' → logprob: -18.625038146972656

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08152218163013458
    2. ' import' → logprob: -2.706522226333618
    3. 'import' → logprob: -4.956521987915039
    4. ' cards' → logprob: -5.581521987915039
    5. ' n' → logprob: -8.081521987915039
    6. 'cards' → logprob: -8.706521987915039
    7. ' input' → logprob: -9.206521987915039
    8. 'n' → logprob: -9.581521987915039
    9. '(cards' → logprob: -10.831521987915039
    10. '```' → logprob: -11.081521987915039

Token 601: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28837236762046814
    2. 'import' (adapté à ' import') → logprob: -1.6633723974227905
    3. 'n' → logprob: -4.28837251663208
    4. ' n' → logprob: -4.28837251663208
    5. ' cards' → logprob: -4.41337251663208
    6. 'cards' → logprob: -4.53837251663208
    7. '   ' → logprob: -4.78837251663208
    8. ' input' → logprob: -7.03837251663208
    9. ' card' → logprob: -7.66337251663208
    10. 'card' → logprob: -8.163372039794922

Token 602: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005234475247561932
    2. 'sys' → logprob: -5.255234241485596
    3. '=sys' → logprob: -14.880234718322754
    4. '	sys' → logprob: -15.380234718322754
    5. '(sys' → logprob: -16.880233764648438
    6. ' random' → logprob: -17.005233764648438
    7. 'random' → logprob: -17.880233764648438
    8. ' math' → logprob: -18.380233764648438
    9. '_sys' → logprob: -18.505233764648438
    10. ' ' → logprob: -20.005233764648438

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055733099579811096
    2. '
' → logprob: -3.5557332038879395
    3. '    
' → logprob: -4.3057332038879395
    4. 'input' → logprob: -5.4307332038879395
    5. ' input' → logprob: -5.9307332038879395
    6. 'data' → logprob: -6.0557332038879395
    7. ' lines' → logprob: -6.9307332038879395
    8. 'n' → logprob: -7.4307332038879395
    9. ' data' → logprob: -8.305732727050781
    10. ' readline' → logprob: -8.305732727050781

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0937897190451622
    2. ' input' → logprob: -3.09378981590271
    3. 'input' → logprob: -3.21878981590271
    4. 'data' → logprob: -6.343789577484131
    5. ' lines' → logprob: -6.593789577484131
    6. ' data' → logprob: -7.718789577484131
    7. ' readline' → logprob: -8.218790054321289
    8. 'n' → logprob: -8.593790054321289
    9. '    
' → logprob: -9.843790054321289
    10. '```' → logprob: -10.218790054321289

Token 605: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07382142543792725
    2. 'input' (adapté à ' input') → logprob: -2.823821544647217
    3. '   ' → logprob: -4.573821544647217
    4. ' lines' → logprob: -7.323821544647217
    5. ' data' → logprob: -7.573821544647217
    6. 'data' → logprob: -8.323821067810059
    7. 'n' → logprob: -11.323821067810059
    8. ' n' → logprob: -11.448821067810059
    9. ' readline' → logprob: -11.698821067810059
    10. ' cards' → logprob: -12.198821067810059

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9826192855834961
    2. '_data' → logprob: -1.607619285583496
    3. '=' → logprob: -1.732619285583496
    4. '()' → logprob: -2.232619285583496
    5. '_' → logprob: -2.857619285583496
    6. '_line' → logprob: -2.857619285583496
    7. '_lines' → logprob: -3.732619285583496
    8. 'data' → logprob: -7.107619285583496
    9. '=sys' → logprob: -7.482619285583496
    10. '_=' → logprob: -7.607619285583496

Token 607: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693408131599426
    2. ' sys' → logprob: -2.126934051513672
    3. 'input' → logprob: -12.876934051513672
    4. '=sys' → logprob: -12.876934051513672
    5. '	sys' → logprob: -14.376934051513672
    6. ' input' → logprob: -15.501934051513672
    7. '(sys' → logprob: -15.876934051513672
    8. 'lambda' → logprob: -17.876934051513672
    9. 'stdin' → logprob: -19.001934051513672
    10. '_sys' → logprob: -19.626934051513672

Token 608: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0014229720691218972
    2. '.' → logprob: -6.626422882080078
    3. '.readline' → logprob: -10.001422882080078
    4. '.stdout' → logprob: -11.251422882080078
    5. 'stdin' → logprob: -11.251422882080078
    6. ' .' → logprob: -11.376422882080078
    7. '._' → logprob: -11.626422882080078
    8. '.\' → logprob: -13.501422882080078
    9. '().' → logprob: -13.626422882080078
    10. '.std' → logprob: -14.001422882080078

Token 609: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5761718153953552
    2. 'read' → logprob: -0.8261718153953552
    3. '.read' → logprob: -9.451171875
    4. ' readline' → logprob: -9.951171875
    5. 'buffer' → logprob: -10.076171875
    6. 'reader' → logprob: -10.201171875
    7. 'readonly' → logprob: -11.451171875
    8. 'stdin' → logprob: -11.951171875
    9. '_read' → logprob: -12.701171875
    10. 'rea' → logprob: -12.951171875

Token 610: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009708948782645166
    2. 'n' → logprob: -7.625970840454102
    3. '()' → logprob: -8.500970840454102
    4. '    
' → logprob: -8.875970840454102
    5. '
' → logprob: -9.875970840454102
    6. '(n' → logprob: -10.125970840454102
    7. ' n' → logprob: -11.125970840454102
    8. '()
' → logprob: -11.375970840454102
    9. '(' → logprob: -12.875970840454102
    10. '<|end|>' → logprob: -13.000970840454102

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3135494291782379
    2. 'n' → logprob: -1.3135493993759155
    3. ' n' → logprob: -8.313549041748047
    4. 't' → logprob: -10.938549041748047
    5. '    
' → logprob: -11.688549041748047
    6. '	n' → logprob: -11.813549041748047
    7. 'num' → logprob: -12.813549041748047
    8. '(n' → logprob: -12.938549041748047
    9. '```' → logprob: -14.063549041748047
    10. 'N' → logprob: -14.188549041748047

Token 612: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007662679417990148
    2. '   ' → logprob: -7.750766277313232
    3. 'N' (adapté à ' N') → logprob: -8.250765800476074
    4. 'num' → logprob: -9.625765800476074
    5. ' n' → logprob: -11.875765800476074
    6. '_n' → logprob: -14.250765800476074
    7. 'card' → logprob: -14.375765800476074
    8. 'cards' → logprob: -16.37576675415039
    9. '	n' → logprob: -17.12576675415039
    10. '
' → logprob: -17.37576675415039

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07973595708608627
    2. ' =' → logprob: -3.2047359943389893
    3. '=' → logprob: -3.3297359943389893
    4. ' ,' → logprob: -8.70473575592041
    5. '=int' → logprob: -9.95473575592041
    6. ',N' → logprob: -11.32973575592041
    7. ',k' → logprob: -11.82973575592041
    8. '   ' → logprob: -11.95473575592041
    9. ',K' → logprob: -12.70473575592041
    10. ',Q' → logprob: -12.82973575592041

Token 614: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.06237992271780968
    2. ' Q' → logprob: -2.812379837036133
    3. 'M' → logprob: -7.937379837036133
    4. ' M' → logprob: -10.187379837036133
    5. 'K' → logprob: -11.437379837036133
    6. 'q' → logprob: -12.312379837036133
    7. ' K' → logprob: -14.062379837036133
    8. 'D' → logprob: -14.437379837036133
    9. ' ' → logprob: -15.687379837036133
    10. ' q' → logprob: -15.812379837036133

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858759790658951
    2. ' =' → logprob: -3.0485875606536865
    3. ',' → logprob: -15.673587799072266
    4. '=line' → logprob: -17.048587799072266
    5. '=input' → logprob: -17.298587799072266
    6. '=int' → logprob: -17.423587799072266
    7. '＝' → logprob: -18.048587799072266
    8. ')' → logprob: -18.298587799072266
    9. ' ' → logprob: -18.298587799072266
    10. '=list' → logprob: -18.548587799072266

Token 616: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019331586081534624
    2. 'map' → logprob: -6.2519330978393555
    3. ' input' → logprob: -12.376933097839355
    4. ' ' → logprob: -16.001934051513672
    5. 'input' → logprob: -16.126934051513672
    6. ' list' → logprob: -16.126934051513672
    7. '	map' → logprob: -17.376934051513672
    8. ' ' → logprob: -17.751934051513672
    9. ' [' → logprob: -18.251934051513672
    10. '(map' → logprob: -18.751934051513672

Token 617: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03502677008509636
    2. '(input' → logprob: -3.535026788711548
    3. '(' → logprob: -5.410026550292969
    4. '(str' → logprob: -7.285026550292969
    5. '(lambda' → logprob: -10.035026550292969
    6. 'int' → logprob: -10.285026550292969
    7. 'input' → logprob: -10.785026550292969
    8. '(list' → logprob: -13.160026550292969
    9. 'str' → logprob: -13.785026550292969
    10. '(
' → logprob: -14.410026550292969

Token 618: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.044447313994169235
    2. '(' → logprob: -3.419447422027588
    3. ',' → logprob: -5.169447422027588
    4. ',input' → logprob: -5.544447422027588
    5. 'input' → logprob: -7.669447422027588
    6. '(sys' → logprob: -8.16944694519043
    7. ')' → logprob: -8.79444694519043
    8. ' (' → logprob: -9.41944694519043
    9. '(),' → logprob: -10.29444694519043
    10. '(int' → logprob: -10.29444694519043

Token 619: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324547804892063
    2. ' input' → logprob: -3.7732455730438232
    3. '=input' → logprob: -18.523244857788086
    4. '   ' → logprob: -18.898244857788086
    5. '(input' → logprob: -18.898244857788086
    6. ',input' → logprob: -19.648244857788086
    7. ' ' → logprob: -20.023244857788086
    8. '	input' → logprob: -20.523244857788086
    9. ')' → logprob: -20.898244857788086
    10. 'sys' → logprob: -20.898244857788086

Token 620: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.375011444091797
    3. ' ().' → logprob: -16.500011444091797
    4. '())' → logprob: -16.625011444091797
    5. '()
' → logprob: -19.875011444091797
    6. '()[' → logprob: -20.750011444091797
    7. '(' → logprob: -20.875011444091797
    8. '().'' → logprob: -21.000011444091797
    9. ')' → logprob: -21.750011444091797
    10. '()>' → logprob: -22.125011444091797

Token 621: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030787937343120575
    2. 'strip' → logprob: -3.530787944793701
    3. '().' → logprob: -7.530787944793701
    4. 'rstrip' → logprob: -7.655787944793701
    5. 'read' → logprob: -10.780787467956543
    6. '(split' → logprob: -13.030787467956543
    7. ' split' → logprob: -13.530787467956543
    8. '()' → logprob: -14.405787467956543
    9. '.readline' → logprob: -14.530787467956543
    10. ')' → logprob: -14.530787467956543

Token 622: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3904542326927185
    2. ')' → logprob: -1.1404542922973633
    3. '()' → logprob: -5.640454292297363
    4. '())
' → logprob: -10.765454292297363
    5. '(' → logprob: -13.265454292297363
    6. ' )' → logprob: -13.890454292297363
    7. ')
' → logprob: -13.890454292297363
    8. ' ())' → logprob: -15.140454292297363
    9. '()
' → logprob: -15.515454292297363
    10. '().' → logprob: -16.265453338623047

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4815088212490082
    2. ' cards' → logprob: -1.1065088510513306
    3. 'cards' → logprob: -2.981508731842041
    4. '_cards' → logprob: -7.606508731842041
    5. '.cards' → logprob: -9.8565092086792
    6. '(cards' → logprob: -9.8565092086792
    7. '    
' → logprob: -10.1065092086792
    8. ' card' → logprob: -10.9815092086792
    9. '
' → logprob: -11.4815092086792
    10. '	c' → logprob: -11.6065092086792

Token 624: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.4295472800731659
    2. ' cards' → logprob: -1.0545473098754883
    3. '_cards' → logprob: -7.929547309875488
    4. '   ' → logprob: -8.304547309875488
    5. ' card' → logprob: -9.304547309875488
    6. 'card' → logprob: -9.554547309875488
    7. 'Cards' → logprob: -11.054547309875488
    8. '.cards' → logprob: -11.054547309875488
    9. '(cards' → logprob: -11.429547309875488
    10. '
' → logprob: -11.679547309875488

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407862544059753
    2. ' =' → logprob: -0.9740786552429199
    3. '   ' → logprob: -14.099078178405762
    4. ',' → logprob: -15.224078178405762
    5. ' ' → logprob: -15.599078178405762
    6. '=[]' → logprob: -16.349079132080078
    7. ' =[' → logprob: -16.349079132080078
    8. '	' → logprob: -16.599079132080078
    9. '[' → logprob: -16.849079132080078
    10. '    ' → logprob: -16.974079132080078

Token 626: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0067201098427176476
    2. ' list' → logprob: -5.006720066070557
    3. 'map' → logprob: -12.256720542907715
    4. '[list' → logprob: -16.8817195892334
    5. ' map' → logprob: -19.2567195892334
    6. '	list' → logprob: -20.6317195892334
    7. 'List' → logprob: -20.7567195892334
    8. '=list' → logprob: -21.0067195892334
    9. '[' → logprob: -21.1317195892334
    10. 'sorted' → logprob: -21.2567195892334

Token 627: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.6087021473795176e-05
    2. '(' → logprob: -10.000045776367188
    3. '(int' → logprob: -15.125045776367188
    4. 'map' → logprob: -15.625045776367188
    5. '()' → logprob: -16.125045776367188
    6. '(
' → logprob: -17.250045776367188
    7. '(m' → logprob: -17.875045776367188
    8. '(range' → logprob: -18.500045776367188
    9. '(ma' → logprob: -19.625045776367188
    10. ' map' → logprob: -19.750045776367188

Token 628: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005612540990114212
    2. 'int' → logprob: -7.500561237335205
    3. '(' → logprob: -12.000561714172363
    4. '[int' → logprob: -14.000561714172363
    5. '(
' → logprob: -14.875561714172363
    6. '```' → logprob: -15.125561714172363
    7. '=int' → logprob: -15.500561714172363
    8. ',int' → logprob: -15.625561714172363
    9. ' int' → logprob: -16.000560760498047
    10. '<int' → logprob: -16.625560760498047

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21325571835041046
    2. ',input' → logprob: -1.713255763053894
    3. '(input' → logprob: -4.463255882263184
    4. '(' → logprob: -9.338255882263184
    5. ' (' → logprob: -9.713255882263184
    6. ' ,' → logprob: -9.838255882263184
    7. 'input' → logprob: -11.213255882263184
    8. ',int' → logprob: -11.213255882263184
    9. '   ' → logprob: -11.463255882263184
    10. ',(' → logprob: -12.963255882263184

Token 630: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750484973192215
    2. ' input' → logprob: -3.5297505855560303
    3. '(input' → logprob: -19.02975082397461
    4. '	input' → logprob: -19.15475082397461
    5. '_input' → logprob: -19.52975082397461
    6. '   ' → logprob: -20.02975082397461
    7. ',input' → logprob: -20.15475082397461
    8. '<input' → logprob: -21.52975082397461
    9. '=input' → logprob: -21.77975082397461
    10. 'Input' → logprob: -22.02975082397461

Token 631: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5570885807392187e-05
    2. '()' → logprob: -11.125015258789062
    3. '()))' → logprob: -14.625015258789062
    4. '())' → logprob: -15.750015258789062
    5. '(' → logprob: -16.000015258789062
    6. ' ().' → logprob: -16.875015258789062
    7. '()));' → logprob: -17.375015258789062
    8. '.readline' → logprob: -17.500015258789062
    9. '()
' → logprob: -18.750015258789062
    10. '().__' → logprob: -18.875015258789062

Token 632: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001249925117008388
    2. 'strip' → logprob: -9.00012493133545
    3. 'rstrip' → logprob: -13.87512493133545
    4. ' split' → logprob: -14.87512493133545
    5. '(split' → logprob: -15.50012493133545
    6. 'read' → logprob: -17.250125885009766
    7. 'spl' → logprob: -18.500125885009766
    8. '.split' → logprob: -18.625125885009766
    9. '().' → logprob: -19.375125885009766
    10. 'plit' → logprob: -20.375125885009766

Token 633: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0008914520149119198
    2. '()' → logprob: -7.25089168548584
    3. '))' → logprob: -9.00089168548584
    4. '()))
' → logprob: -10.25089168548584
    5. '(' → logprob: -11.37589168548584
    6. '())' → logprob: -12.25089168548584
    7. '()));' → logprob: -12.25089168548584
    8. '(),' → logprob: -14.37589168548584
    9. '()))

' → logprob: -14.87589168548584
    10. '().' → logprob: -15.62589168548584

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010235629044473171
    2. 'card' → logprob: -5.260235786437988
    3. ' card' → logprob: -5.385235786437988
    4. '    
' → logprob: -9.135235786437988
    5. 'query' → logprob: -9.135235786437988
    6. '
' → logprob: -9.385235786437988
    7. ' query' → logprob: -9.760235786437988
    8. '	card' → logprob: -10.385235786437988
    9. '```' → logprob: -12.885235786437988
    10. 'q' → logprob: -13.010235786437988

Token 635: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' (adapté à ' card') → logprob: -0.0018411792116239667
    2. '   ' → logprob: -6.501841068267822
    3. ' card' → logprob: -8.12684154510498
    4. '
' → logprob: -10.12684154510498
    5. '```' → logprob: -13.87684154510498
    6. '	card' → logprob: -14.00184154510498
    7. '_card' → logprob: -14.25184154510498
    8. '    
' → logprob: -15.12684154510498
    9. 'car' → logprob: -15.87684154510498
    10. 'cards' → logprob: -15.87684154510498

Token 636: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.2664456789934775e-06
    2. 'set' → logprob: -13.750000953674316
    3. 's' → logprob: -16.500001907348633
    4. '_' → logprob: -16.625001907348633
    5. 'Set' → logprob: -19.375001907348633
    6. '_sets' → logprob: -19.375001907348633
    7. '_s' → logprob: -20.625001907348633
    8. ' _' → logprob: -20.750001907348633
    9. '_Set' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.125001907348633

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759394764900208
    2. '=' → logprob: -0.8259394764900208
    3. ' =
' → logprob: -17.575939178466797
    4. ' ' → logprob: -18.575939178466797
    5. '=
' → logprob: -18.575939178466797
    6. '＝' → logprob: -19.825939178466797
    7. '=create' → logprob: -21.075939178466797
    8. '=set' → logprob: -21.325939178466797
    9. '=

' → logprob: -21.450939178466797
    10. ' =
' → logprob: -21.825939178466797

Token 638: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.0002613358374219388
    2. ' Card' → logprob: -8.250261306762695
    3. 'Car' → logprob: -21.125261306762695
    4. '(Card' → logprob: -22.750261306762695
    5. '<Card' → logprob: -23.000261306762695
    6. '   ' → logprob: -23.750261306762695
    7. '_card' → logprob: -24.250261306762695
    8. 'Code' → logprob: -25.250261306762695
    9. '.Card' → logprob: -25.500261306762695
    10. 'Cards' → logprob: -25.625261306762695

Token 639: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: 0.0
    2. 'set' → logprob: -17.0
    3. '_set' → logprob: -20.875
    4. '	Set' → logprob: -21.125
    5. 'Sets' → logprob: -22.0
    6. '_Set' → logprob: -22.125
    7. 'et' → logprob: -22.25
    8. ' Set' → logprob: -22.375
    9. 'Card' → logprob: -22.5
    10. 'S' → logprob: -23.375

Token 640: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.015355725772678852
    2. '(card' → logprob: -4.765355587005615
    3. 'cards' → logprob: -5.140355587005615
    4. '   ' → logprob: -7.390355587005615
    5. 'card' → logprob: -9.015356063842773
    6. ' cards' → logprob: -9.640356063842773
    7. '(Card' → logprob: -10.765356063842773
    8. 'Card' → logprob: -11.015356063842773
    9. '(Query' → logprob: -11.640356063842773
    10. 'Max' → logprob: -12.765356063842773

Token 641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021026436239480972
    2. '   ' → logprob: -4.396026611328125
    3. ')
' → logprob: -4.771026611328125
    4. ')
' → logprob: -13.396026611328125
    5. '<|end|>' → logprob: -13.521026611328125
    6. 'query' → logprob: -13.646026611328125
    7. '    
' → logprob: -13.896026611328125
    8. '<Query' → logprob: -14.021026611328125
    9. ' ' → logprob: -14.521026611328125
    10. '
' → logprob: -14.646026611328125

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00712500000372529
    2. 'query' → logprob: -5.632124900817871
    3. ' query' → logprob: -5.757124900817871
    4. 'qp' → logprob: -8.882124900817871
    5. ' qp' → logprob: -9.007124900817871
    6. ' processor' → logprob: -10.257124900817871
    7. 'processor' → logprob: -10.507124900817871
    8. 'q' → logprob: -11.132124900817871
    9. 'handler' → logprob: -12.132124900817871
    10. ' q' → logprob: -12.132124900817871

Token 643: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' (adapté à ' query') → logprob: -0.019711190834641457
    2. 'processor' → logprob: -4.019711017608643
    3. 'qp' → logprob: -6.519711017608643
    4. ' query' → logprob: -9.5197114944458
    5. '   ' → logprob: -12.2697114944458
    6. ' processor' → logprob: -12.5197114944458
    7. ' qp' → logprob: -13.1447114944458
    8. 'q' → logprob: -14.0197114944458
    9. 'handler' → logprob: -14.2697114944458
    10. 'max' → logprob: -15.5197114944458

Token 644: '_handler' (ID: 23758)
  Prédit: '_processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -1.8624639324116288e-06
    2. 's' → logprob: -14.500001907348633
    3. '_processors' → logprob: -14.500001907348633
    4. 'Processor' → logprob: -15.000001907348633
    5. '_handler' → logprob: -15.250001907348633
    6. 'processor' → logprob: -15.500001907348633
    7. '_process' → logprob: -16.250001907348633
    8. '_proc' → logprob: -18.750001907348633
    9. '_processing' → logprob: -19.375001907348633
    10. '_processed' → logprob: -19.500001907348633

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04895373806357384
    2. '=' → logprob: -3.0489537715911865
    3. 's' → logprob: -7.923953533172607
    4. ' ' → logprob: -13.173954010009766
    5. '_processor' → logprob: -14.173954010009766
    6. '   ' → logprob: -14.423954010009766
    7. '=query' → logprob: -14.423954010009766
    8. '  ' → logprob: -15.548954010009766
    9. 'Processor' → logprob: -16.173954010009766
    10. 'processor' → logprob: -16.298954010009766

Token 646: ' Max' (ID: 10093)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.25192907452583313
    2. ' Max' → logprob: -1.5019290447235107
    3. '	Max' → logprob: -18.126928329467773
    4. 'Query' → logprob: -18.376928329467773
    5. '_Max' → logprob: -18.376928329467773
    6. ' max' → logprob: -19.126928329467773
    7. ' ' → logprob: -21.126928329467773
    8. '(Max' → logprob: -21.126928329467773
    9. '-Max' → logprob: -21.126928329467773
    10. ' Query' → logprob: -21.376928329467773

Token 647: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.9361264946837764e-07
    2. ' R' → logprob: -16.375
    3. 'Query' → logprob: -17.25
    4. ' remainder' → logprob: -19.375
    5. '_R' → logprob: -20.25
    6. 'Remaining' → logprob: -20.5
    7. 'Reminder' → logprob: -20.5
    8. '```' → logprob: -20.75
    9. 'Handler' → logprob: -21.0
    10. '   ' → logprob: -21.125

Token 648: 'ema' (ID: 4603)
  Prédit: 'ema'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ema' → logprob: -0.00043257648940198123
    2. 'em' → logprob: -7.75043249130249
    3. 'mainder' → logprob: -13.375432968139648
    4. 'R' → logprob: -15.625432968139648
    5. 'e' → logprob: -16.00043296813965
    6. 'emain' → logprob: -16.62543296813965
    7. 'emma' → logprob: -19.50043296813965
    8. 'emo' → logprob: -19.50043296813965
    9. 'emi' → logprob: -20.50043296813965
    10. ' remainder' → logprob: -20.50043296813965

Token 649: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.0004294771933928132
    2. 'nder' → logprob: -7.875429630279541
    3. 'ander' → logprob: -10.125429153442383
    4. 'mainder' → logprob: -12.125429153442383
    5. 'a' → logprob: -14.000429153442383
    6. 'r' → logprob: -14.125429153442383
    7. 'under' → logprob: -14.125429153442383
    8. 'R' → logprob: -14.875429153442383
    9. ' remainder' → logprob: -15.500429153442383
    10. 'ind' → logprob: -15.625429153442383

Token 650: 'Query' (ID: 3962)
  Prédit: 'Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: 0.0
    2. 'query' → logprob: -18.0
    3. '_query' → logprob: -19.625
    4. '	Query' → logprob: -20.375
    5. '_Query' → logprob: -20.5
    6. 'Q' → logprob: -20.625
    7. 'Quer' → logprob: -20.625
    8. ' Query' → logprob: -21.125
    9. 'Queue' → logprob: -21.5
    10. 'Handler' → logprob: -22.0

Token 651: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.4855663721391466e-05
    2. 'Query' → logprob: -11.250015258789062
    3. 'handler' → logprob: -13.625015258789062
    4. 'Handle' → logprob: -14.375015258789062
    5. '_handler' → logprob: -18.125015258789062
    6. 'Handlers' → logprob: -18.875015258789062
    7. '_Handler' → logprob: -19.250015258789062
    8. 'Handling' → logprob: -19.375015258789062
    9. 'Hand' → logprob: -19.500015258789062
    10. 'handle' → logprob: -19.625015258789062

Token 652: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -2.6060808522743173e-05
    2. '(Card' → logprob: -11.000025749206543
    3. '(' → logprob: -11.875025749206543
    4. 'card' → logprob: -13.750025749206543
    5. '(
' → logprob: -14.625025749206543
    6. 'Card' → logprob: -15.375025749206543
    7. '(car' → logprob: -15.875025749206543
    8. '(cards' → logprob: -16.00002670288086
    9. ' (' → logprob: -16.12502670288086
    10. ' card' → logprob: -16.25002670288086

Token 653: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.688212614681106e-05
    2. 'set' → logprob: -11.000017166137695
    3. 'Set' → logprob: -16.500017166137695
    4. 'et' → logprob: -17.000017166137695
    5. '_sets' → logprob: -18.125017166137695
    6. '_SET' → logprob: -19.375017166137695
    7. '_' → logprob: -19.625017166137695
    8. '_Set' → logprob: -20.500017166137695
    9. '-set' → logprob: -20.625017166137695
    10. '   ' → logprob: -20.625017166137695

Token 654: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047381144016981125
    2. '   ' → logprob: -3.5473811626434326
    3. ')
' → logprob: -4.0473809242248535
    4. ')
' → logprob: -13.172381401062012
    5. '    
' → logprob: -13.672381401062012
    6. 'query' → logprob: -14.172381401062012
    7. ' ' → logprob: -14.297381401062012
    8. '<|end|>' → logprob: -14.297381401062012
    9. ' )' → logprob: -14.547381401062012
    10. '(query' → logprob: -14.672381401062012

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060637714341282845
    2. ' qp' → logprob: -6.006063938140869
    3. ' query' → logprob: -6.756063938140869
    4. 'qp' → logprob: -7.256063938140869
    5. ' processor' → logprob: -7.256063938140869
    6. 'query' → logprob: -7.506063938140869
    7. 'processor' → logprob: -8.256063461303711
    8. '    
' → logprob: -8.756063461303711
    9. '
' → logprob: -11.506063461303711
    10. 'q' → logprob: -12.131063461303711

Token 656: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.288501113653183
    2. 'query' → logprob: -1.7885011434555054
    3. 'qp' → logprob: -2.538501024246216
    4. ' processor' → logprob: -6.163501262664795
    5. ' qp' → logprob: -6.413501262664795
    6. '   ' → logprob: -7.788501262664795
    7. ' query' → logprob: -8.413500785827637
    8. 'QP' → logprob: -10.663500785827637
    9. 'q' → logprob: -12.038500785827637
    10. '    
' → logprob: -12.788500785827637

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17765356600284576
    2. '.add' → logprob: -2.3026535511016846
    3. '=' → logprob: -2.8026535511016846
    4. '.' → logprob: -6.177653789520264
    5. '.process' → logprob: -10.677653312683105
    6. '.=' → logprob: -11.552653312683105
    7. '   ' → logprob: -11.677653312683105
    8. ' .' → logprob: -12.427653312683105
    9. ' ' → logprob: -13.552653312683105
    10. '  ' → logprob: -13.927653312683105

Token 658: ' Query' (ID: 18574)
  Prédit: ' Query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Query' → logprob: -0.01416350994259119
    2. 'Query' → logprob: -4.264163494110107
    3. '	Query' → logprob: -18.889163970947266
    4. '_Query' → logprob: -19.139163970947266
    5. '<Query' → logprob: -19.264163970947266
    6. '(Query' → logprob: -19.639163970947266
    7. '.Query' → logprob: -20.014163970947266
    8. ' query' → logprob: -20.139163970947266
    9. '_query' → logprob: -22.014163970947266
    10. 'Processor' → logprob: -23.014163970947266

Token 659: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -19.375
    3. 'processor' → logprob: -20.25
    4. ' Processor' → logprob: -23.125
    5. '_processor' → logprob: -23.25
    6. 'Processors' → logprob: -23.5
    7. 'Proces' → logprob: -24.5
    8. 'Handler' → logprob: -24.625
    9. 'Processed' → logprob: -25.375
    10. ' processor' → logprob: -25.75

Token 660: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.0001717166742309928
    2. '(Card' → logprob: -8.875171661376953
    3. '(' → logprob: -10.875171661376953
    4. '   ' → logprob: -11.750171661376953
    5. '(
' → logprob: -13.500171661376953
    6. 'card' → logprob: -13.750171661376953
    7. '(C' → logprob: -14.375171661376953
    8. 'Card' → logprob: -14.500171661376953
    9. '(cards' → logprob: -14.625171661376953
    10. '(car' → logprob: -14.875171661376953

Token 661: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -6.909333023941144e-05
    2. 'Set' → logprob: -10.125068664550781
    3. 'set' → logprob: -10.500068664550781
    4. '_sets' → logprob: -14.000068664550781
    5. '_processor' → logprob: -15.750068664550781
    6. 'et' → logprob: -16.12506866455078
    7. 's' → logprob: -16.50006866455078
    8. '_Set' → logprob: -16.87506866455078
    9. '_handler' → logprob: -17.25006866455078
    10. '   ' → logprob: -17.62506866455078

Token 662: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2952568233013153
    2. ')' → logprob: -1.4202568531036377
    3. '   ' → logprob: -4.295256614685059
    4. '(process' → logprob: -8.295256614685059
    5. '()
' → logprob: -10.295256614685059
    6. '(query' → logprob: -10.670256614685059
    7. '(' → logprob: -11.170256614685059
    8. '()' → logprob: -11.795256614685059
    9. '())
' → logprob: -12.045256614685059
    10. 'processor' → logprob: -12.045256614685059

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07447048276662827
    2. 'processor' → logprob: -2.9494705200195312
    3. ' processor' → logprob: -3.9494705200195312
    4. '.processor' → logprob: -9.449470520019531
    5. '(process' → logprob: -10.699470520019531
    6. '_processor' → logprob: -10.949470520019531
    7. '    
' → logprob: -12.449470520019531
    8. 'processors' → logprob: -12.574470520019531
    9. 'process' → logprob: -13.324470520019531
    10. '```' → logprob: -14.199470520019531

Token 664: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.04311428964138031
    2. '   ' → logprob: -3.418114185333252
    3. ' processor' → logprob: -4.668114185333252
    4. '.processor' → logprob: -10.66811466217041
    5. 'process' → logprob: -12.66811466217041
    6. 'processors' → logprob: -13.04311466217041
    7. '    
' → logprob: -13.79311466217041
    8. '_processor' → logprob: -13.79311466217041
    9. '
' → logprob: -14.41811466217041
    10. '(process' → logprob: -14.41811466217041

Token 665: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.505351095460355e-05
    2. '.' → logprob: -9.500075340270996
    3. '.append' → logprob: -16.62507438659668
    4. '   ' → logprob: -18.00007438659668
    5. ' .' → logprob: -18.25007438659668
    6. '.ad' → logprob: -18.37507438659668
    7. '._' → logprob: -18.62507438659668
    8. '.Add' → logprob: -18.87507438659668
    9. '.ADD' → logprob: -20.00007438659668
    10. ')add' → logprob: -20.00007438659668

Token 666: '_handler' (ID: 23758)
  Prédit: '(query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.000839046377222985
    2. '_handler' → logprob: -7.2508392333984375
    3. '(' → logprob: -9.375839233398438
    4. '(handler' → logprob: -10.250839233398438
    5. '(_' → logprob: -12.875839233398438
    6. '_hand' → logprob: -13.500839233398438
    7. 'handler' → logprob: -13.625839233398438
    8. ' (' → logprob: -14.250839233398438
    9. '(q' → logprob: -14.375839233398438
    10. '_query' → logprob: -14.625839233398438

Token 667: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. 'query' → logprob: -15.00000286102295
    4. '(
' → logprob: -18.625001907348633
    5. ' (' → logprob: -19.750001907348633
    6. '(q' → logprob: -19.875001907348633
    7. '=query' → logprob: -19.875001907348633
    8. '(Query' → logprob: -20.000001907348633
    9. ' query' → logprob: -20.875001907348633
    10. '(question' → logprob: -22.375001907348633

Token 668: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.20171591639518738
    2. '(query' → logprob: -1.7017159461975098
    3. 'handler' → logprob: -8.826715469360352
    4. '=query' → logprob: -9.826715469360352
    5. '(' → logprob: -10.076715469360352
    6. 'Handler' → logprob: -10.076715469360352
    7. ')' → logprob: -12.326715469360352
    8. 's' → logprob: -13.326715469360352
    9. '(handler' → logprob: -13.326715469360352
    10. 'query' → logprob: -13.576715469360352

Token 669: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6967921257019043
    2. '   ' → logprob: -1.0717921257019043
    3. '
' → logprob: -2.0717921257019043
    4. ')
' → logprob: -3.5717921257019043
    5. '<|end|>' → logprob: -5.696792125701904
    6. '    
' → logprob: -6.571792125701904
    7. '  
' → logprob: -8.196792602539062
    8. '<|end|>' → logprob: -8.821792602539062
    9. ' 
' → logprob: -10.071792602539062
    10. ' ' → logprob: -10.446792602539062

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16345266997814178
    2. 'for' → logprob: -1.9134526252746582
    3. ' for' → logprob: -6.288452625274658
    4. 'queries' → logprob: -6.788452625274658
    5. '    
' → logprob: -9.163453102111816
    6. '
' → logprob: -9.163453102111816
    7. '```' → logprob: -11.038453102111816
    8. ' queries' → logprob: -12.288453102111816
    9. '	for' → logprob: -12.788453102111816
    10. '  
' → logprob: -13.163453102111816

Token 671: ' queries' (ID: 32122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06621361523866653
    2. 'queries' (adapté à ' queries') → logprob: -2.816213607788086
    3. 'results' → logprob: -5.691213607788086
    4. ' for' → logprob: -7.691213607788086
    5. '   ' → logprob: -8.066213607788086
    6. ' queries' → logprob: -10.066213607788086
    7. 'outputs' → logprob: -10.316213607788086
    8. 'answers' → logprob: -11.441213607788086
    9. ' results' → logprob: -13.066213607788086
    10. 'query' → logprob: -14.441213607788086

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696149945259094
    2. '=' → logprob: -2.1269614696502686
    3. '   ' → logprob: -10.376961708068848
    4. '=[]
' → logprob: -14.001961708068848
    5. ' =[' → logprob: -14.376961708068848
    6. '=[' → logprob: -15.501961708068848
    7. '=[]' → logprob: -15.501961708068848
    8. 'for' → logprob: -16.00196075439453
    9. ' ' → logprob: -16.12696075439453
    10. '    ' → logprob: -16.50196075439453

Token 673: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20349007844924927
    2. '[list' → logprob: -2.2034900188446045
    3. '[int' → logprob: -2.7034900188446045
    4. ' [' → logprob: -5.203490257263184
    5. '[List' → logprob: -7.203490257263184
    6. '[input' → logprob: -9.578490257263184
    7. '[str' → logprob: -9.953490257263184
    8. '[array' → logprob: -10.078490257263184
    9. '[item' → logprob: -10.203490257263184
    10. '[q' → logprob: -10.453490257263184

Token 674: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001940653775818646
    2. ' int' → logprob: -6.251940727233887
    3. '   ' → logprob: -11.626940727233887
    4. 'map' → logprob: -13.126940727233887
    5. '(int' → logprob: -14.501940727233887
    6. '       ' → logprob: -15.376940727233887
    7. '    ' → logprob: -16.12693977355957
    8. '	int' → logprob: -16.37693977355957
    9. '
' → logprob: -16.75193977355957
    10. ' ' → logprob: -16.75193977355957

Token 675: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.3438327843905427e-05
    2. 'input' → logprob: -11.25002384185791
    3. '(' → logprob: -11.50002384185791
    4. '(
' → logprob: -16.375022888183594
    5. ' (' → logprob: -17.000022888183594
    6. '()' → logprob: -17.875022888183594
    7. ' input' → logprob: -18.625022888183594
    8. ',input' → logprob: -19.125022888183594
    9. '(in' → logprob: -19.250022888183594
    10. '=input' → logprob: -19.500022888183594

Token 676: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5770443677902222
    2. '())' → logprob: -0.8270443677902222
    3. '()' → logprob: -6.827044486999512
    4. '())
' → logprob: -11.702044486999512
    5. '()
' → logprob: -12.077044486999512
    6. '()]' → logprob: -12.327044486999512
    7. ' ())' → logprob: -14.077044486999512
    8. ')' → logprob: -14.952044486999512
    9. '())
' → logprob: -16.202043533325195
    10. '()
' → logprob: -16.452043533325195

Token 677: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0630703791975975
    2. '().' → logprob: -2.813070297241211
    3. 'for' → logprob: -7.563070297241211
    4. ' for' → logprob: -7.813070297241211
    5. ')' → logprob: -9.563070297241211
    6. '.strip' → logprob: -9.813070297241211
    7. '())' → logprob: -10.938070297241211
    8. '   ' → logprob: -12.063070297241211
    9. 'rstrip' → logprob: -12.188070297241211
    10. '()
' → logprob: -12.438070297241211

Token 678: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.627176768844947e-05
    2. ' _' → logprob: -9.500096321105957
    3. '_in' → logprob: -12.000096321105957
    4. '_q' → logprob: -12.125096321105957
    5. '_range' → logprob: -12.625096321105957
    6. '_i' → logprob: -12.875096321105957
    7. '_Q' → logprob: -14.375096321105957
    8. '_line' → logprob: -14.500096321105957
    9. '_ref' → logprob: -15.500096321105957
    10. '_query' → logprob: -15.875096321105957

Token 679: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010246247984468937
    2. ' range' → logprob: -4.760246276855469
    3. 'in' → logprob: -6.760246276855469
    4. ' in' → logprob: -8.510246276855469
    5. '_range' → logprob: -8.760246276855469
    6. '_' → logprob: -9.135246276855469
    7. '  ' → logprob: -13.135246276855469
    8. ' ' → logprob: -13.635246276855469
    9. '   ' → logprob: -14.510246276855469
    10. '_in' → logprob: -14.635246276855469

Token 680: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '	range' → logprob: -20.1250057220459
    4. '(range' → logprob: -20.7500057220459
    5. '   ' → logprob: -21.1250057220459
    6. 'rang' → logprob: -21.8750057220459
    7. '  ' → logprob: -22.3750057220459
    8. '
' → logprob: -23.0000057220459
    9. ' ' → logprob: -23.3750057220459
    10. '_range' → logprob: -23.3750057220459

Token 681: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0011921331752091646
    2. '(Q' → logprob: -6.751192092895508
    3. ' Q' → logprob: -10.751192092895508
    4. '	Q' → logprob: -14.501192092895508
    5. '(' → logprob: -17.751192092895508
    6. ',Q' → logprob: -18.126192092895508
    7. '   ' → logprob: -18.626192092895508
    8. '<Q' → logprob: -19.001192092895508
    9. '_Q' → logprob: -20.001192092895508
    10. '.Q' → logprob: -21.001192092895508

Token 682: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.039490099996328354
    2. ']' → logprob: -3.289489984512329
    3. ')' → logprob: -6.539490222930908
    4. '])' → logprob: -14.53948974609375
    5. ' ]' → logprob: -14.66448974609375
    6. '   ' → logprob: -14.78948974609375
    7. '()]' → logprob: -14.91448974609375
    8. '`]' → logprob: -15.66448974609375
    9. '])]' → logprob: -15.91448974609375
    10. ')]
' → logprob: -16.03948974609375

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39157354831695557
    2. 'results' → logprob: -1.1415735483169556
    3. ' results' → logprob: -5.391573429107666
    4. '	results' → logprob: -9.891573905944824
    5. 'outputs' → logprob: -10.016573905944824
    6. 'for' → logprob: -10.516573905944824
    7. '    
' → logprob: -12.641573905944824
    8. '```' → logprob: -12.641573905944824
    9. 'output' → logprob: -13.266573905944824
    10. 'answers' → logprob: -13.266573905944824

Token 684: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.01435765065252781
    2. ' results' → logprob: -4.264357566833496
    3. '   ' → logprob: -9.014357566833496
    4. 'outputs' → logprob: -10.264357566833496
    5. 'answers' → logprob: -11.014357566833496
    6. 'for' → logprob: -11.389357566833496
    7. 'result' → logprob: -12.639357566833496
    8. '	results' → logprob: -12.889357566833496
    9. 'output' → logprob: -13.889357566833496
    10. '    
' → logprob: -14.389357566833496

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2032841444015503
    2. '=' → logprob: -1.7032841444015503
    3. '.append' → logprob: -6.45328426361084
    4. '.extend' → logprob: -8.57828426361084
    5. '   ' → logprob: -10.45328426361084
    6. '=[]' → logprob: -10.57828426361084
    7. ' =
' → logprob: -11.32828426361084
    8. '=[]
' → logprob: -11.45328426361084
    9. '.' → logprob: -11.57828426361084
    10. ' +=' → logprob: -11.95328426361084

Token 686: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.02324594371020794
    2. ' processor' → logprob: -3.7732460498809814
    3. 'process' → logprob: -15.648245811462402
    4. '[' → logprob: -16.14824676513672
    5. 'processors' → logprob: -16.27324676513672
    6. '   ' → logprob: -17.52324676513672
    7. '.processor' → logprob: -17.64824676513672
    8. 'Processor' → logprob: -17.64824676513672
    9. 'processed' → logprob: -18.02324676513672
    10. '(process' → logprob: -18.52324676513672

Token 687: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.500001907348633
    3. 'process' → logprob: -17.125001907348633
    4. ' .' → logprob: -17.250001907348633
    5. '.processor' → logprob: -18.750001907348633
    6. '.perform' → logprob: -19.125001907348633
    7. '	process' → logprob: -19.750001907348633
    8. '.Process' → logprob: -19.875001907348633
    9. '.run' → logprob: -20.250001907348633
    10. '(process' → logprob: -20.500001907348633

Token 688: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -1.9385402993066236e-05
    2. 'queries' → logprob: -11.000019073486328
    3. '(' → logprob: -13.500019073486328
    4. 's' → logprob: -14.500019073486328
    5. 'Queries' → logprob: -14.625019073486328
    6. '_requests' → logprob: -16.375019073486328
    7. '_questions' → logprob: -17.125019073486328
    8. '_query' → logprob: -17.875019073486328
    9. ' queries' → logprob: -17.875019073486328
    10. '_' → logprob: -18.125019073486328

Token 689: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -15.625
    3. '(results' → logprob: -18.0
    4. '((' → logprob: -19.125
    5. '```' → logprob: -19.25
    6. 'queries' → logprob: -19.375
    7. '(
' → logprob: -19.375
    8. '(commands' → logprob: -19.875
    9. ' ' → logprob: -20.625
    10. '([' → logprob: -20.75

Token 690: 'queries' (ID: 63909)
  Prédit: 'queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -5.512236498361744e-07
    2. ' queries' → logprob: -14.500000953674316
    3. 'questions' → logprob: -19.25
    4. '(' → logprob: -19.75
    5. '[' → logprob: -20.625
    6. 'requests' → logprob: -21.0
    7. 'quer' → logprob: -21.25
    8. 'quests' → logprob: -21.25
    9. 'query' → logprob: -21.375
    10. '   ' → logprob: -23.25

Token 691: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08499332517385483
    2. '   ' → logprob: -2.709993362426758
    3. ')' → logprob: -4.209993362426758
    4. '
' → logprob: -9.834993362426758
    5. '()
' → logprob: -10.959993362426758
    6. '    
' → logprob: -11.334993362426758
    7. ')
' → logprob: -12.334993362426758
    8. ')

' → logprob: -13.334993362426758
    9. '())
' → logprob: -13.459993362426758
    10. '```' → logprob: -13.459993362426758

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01422461960464716
    2. 'for' → logprob: -4.264224529266357
    3. ' for' → logprob: -9.764225006103516
    4. '```' → logprob: -12.764225006103516
    5. '
' → logprob: -14.389225006103516
    6. '	for' → logprob: -15.514225006103516
    7. '    
' → logprob: -16.264225006103516
    8. '``' → logprob: -18.139225006103516
    9. '       ' → logprob: -18.389225006103516
    10. 'print' → logprob: -20.014225006103516

Token 693: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009249189170077443
    2. '   ' → logprob: -7.000925064086914
    3. ' for' → logprob: -11.500925064086914
    4. '
' → logprob: -12.750925064086914
    5. '	for' → logprob: -15.625925064086914
    6. 'print' (adapté à ' print') → logprob: -15.750925064086914
    7. '```' → logprob: -17.625925064086914
    8. '    
' → logprob: -18.625925064086914
    9. '``' → logprob: -20.625925064086914
    10. '
' → logprob: -21.125925064086914

Token 694: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.019390759989619255
    2. '("\' → logprob: -4.26939058303833
    3. '(*' → logprob: -5.26939058303833
    4. '(' → logprob: -10.144391059875488
    5. '(
' → logprob: -11.144391059875488
    6. ''\' → logprob: -11.519391059875488
    7. '(*(' → logprob: -13.519391059875488
    8. '"\' → logprob: -14.144391059875488
    9. '()' → logprob: -14.394391059875488
    10. '()
' → logprob: -16.144390106201172

Token 695: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029781503602862358
    2. '\n' → logprob: -3.5297815799713135
    3. '
' → logprob: -10.779781341552734
    4. ''\' → logprob: -11.654781341552734
    5. 'join' → logprob: -14.904781341552734
    6. ''.' → logprob: -15.154781341552734
    7. '"\' → logprob: -15.404781341552734
    8. '
' → logprob: -15.904781341552734
    9. '```' → logprob: -16.404781341552734
    10. '10' → logprob: -16.529781341552734

Token 696: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.15665557980537415
    2. '.join' → logprob: -2.7816555500030518
    3. 'join' → logprob: -3.1566555500030518
    4. '.' → logprob: -3.2816555500030518
    5. '".' → logprob: -6.781655788421631
    6. ').' → logprob: -7.031655788421631
    7. 'print' → logprob: -7.531655788421631
    8. '''.' → logprob: -8.656655311584473
    9. ' .' → logprob: -9.656655311584473
    10. ' join' → logprob: -10.281655311584473

Token 697: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. 'print' → logprob: -15.625
    3. ' join' → logprob: -16.875
    4. 'jo' → logprob: -17.375
    5. 'j' → logprob: -18.0
    6. '.join' → logprob: -20.5
    7. ''.' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. 'write' → logprob: -22.25
    10. ')' → logprob: -22.25

Token 698: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3220190405845642
    2. '(str' → logprob: -1.322019100189209
    3. 'map' → logprob: -5.322019100189209
    4. 'str' → logprob: -5.572019100189209
    5. '[str' → logprob: -10.44701862335205
    6. '(' → logprob: -13.57201862335205
    7. '([' → logprob: -13.82201862335205
    8. ' map' → logprob: -14.07201862335205
    9. '```' → logprob: -14.94701862335205
    10. '	map' → logprob: -15.19701862335205

Token 699: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.20145173370838165
    2. 'str' → logprob: -1.7014517784118652
    3. '```' → logprob: -10.451451301574707
    4. '[str' → logprob: -12.826451301574707
    5. '=str' → logprob: -12.826451301574707
    6. ' str' → logprob: -13.701451301574707
    7. '	str' → logprob: -13.826451301574707
    8. '
' → logprob: -13.951451301574707
    9. '   ' → logprob: -14.701451301574707
    10. '``' → logprob: -15.201451301574707

Token 700: ',' (ID: 11)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.2521466314792633
    2. ',' → logprob: -1.502146601676941
    3. 'results' → logprob: -9.12714672088623
    4. '(' → logprob: -9.25214672088623
    5. ' results' → logprob: -12.87714672088623
    6. ')' → logprob: -13.00214672088623
    7. ' ,' → logprob: -13.25214672088623
    8. '	results' → logprob: -13.25214672088623
    9. ',
' → logprob: -13.62714672088623
    10. ' (' → logprob: -13.87714672088623

Token 701: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.04858918860554695
    2. ' results' → logprob: -3.0485892295837402
    3. '(results' → logprob: -13.298588752746582
    4. '	results' → logprob: -16.1735897064209
    5. '.results' → logprob: -19.2985897064209
    6. '_results' → logprob: -20.2985897064209
    7. 'Results' → logprob: -20.2985897064209
    8. 'result' → logprob: -21.6735897064209
    9. '-results' → logprob: -21.7985897064209
    10. '   ' → logprob: -21.7985897064209

Token 702: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.014684110297821e-06
    2. ')))' → logprob: -12.625008583068848
    3. ')' → logprob: -12.750008583068848
    4. '))
' → logprob: -12.875008583068848
    5. '   ' → logprob: -16.875009536743164
    6. '()))' → logprob: -17.625009536743164
    7. ' ))' → logprob: -17.875009536743164
    8. ' ' → logprob: -18.875009536743164
    9. '));' → logprob: -20.000009536743164
    10. ''))' → logprob: -20.250009536743164

Token 703: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048790041357278824
    2. '())' → logprob: -3.0487899780273438
    3. '()' → logprob: -9.048789978027344
    4. ')
' → logprob: -9.673789978027344
    5. '())
' → logprob: -11.548789978027344
    6. '))' → logprob: -12.923789978027344
    7. '(' → logprob: -13.173789978027344
    8. '   ' → logprob: -13.423789978027344
    9. '()
' → logprob: -13.673789978027344
    10. '<|end|>' → logprob: -13.673789978027344

Token 704: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.008129963040119e-06
    2. 'main' → logprob: -13.000003814697266
    3. ' if' → logprob: -13.375003814697266
    4. '```' → logprob: -15.875003814697266
    5. '#' → logprob: -19.000003814697266
    6. '
' → logprob: -19.125003814697266
    7. '    
' → logprob: -20.375003814697266
    8. '#if' → logprob: -20.875003814697266
    9. '  
' → logprob: -21.000003814697266
    10. 'If' → logprob: -21.125003814697266

Token 705: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.34862834215164185
    2. '__' → logprob: -1.223628282546997
    3. '_name' → logprob: -9.848628044128418
    4. 'name' → logprob: -9.848628044128418
    5. '_' → logprob: -9.973628044128418
    6. ' ' → logprob: -11.598628044128418
    7. '___' → logprob: -12.098628044128418
    8. 'Name' → logprob: -12.473628044128418
    9. '﻿' → logprob: -12.973628044128418
    10. ' name' → logprob: -13.098628044128418

Token 706: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19160248339176178
    2. '==' → logprob: -1.8166024684906006
    3. ' ==' → logprob: -4.69160270690918
    4. '=='' → logprob: -6.81660270690918
    5. '=="' → logprob: -7.19160270690918
    6. '__.__' → logprob: -8.56660270690918
    7. 'if' → logprob: -8.69160270690918
    8. 'name' → logprob: -8.94160270690918
    9. '[' → logprob: -10.31660270690918
    10. ' __' → logprob: -10.31660270690918

Token 707: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.531315314830863e-06
    2. '__.__' → logprob: -12.875003814697266
    3. '==' → logprob: -14.125003814697266
    4. '__('' → logprob: -16.625003814697266
    5. '___' → logprob: -17.250003814697266
    6. '__
' → logprob: -17.625003814697266
    7. '__.' → logprob: -17.625003814697266
    8. '____' → logprob: -17.875003814697266
    9. '__["' → logprob: -18.000003814697266
    10. '=="' → logprob: -18.625003814697266

Token 708: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11770474910736084
    2. '==' → logprob: -2.2427048683166504
    3. ' ==' → logprob: -5.49270486831665
    4. '=="' → logprob: -7.49270486831665
    5. '=='' → logprob: -8.992704391479492
    6. '__.__' → logprob: -10.117704391479492
    7. '=' → logprob: -11.617704391479492
    8. '_' → logprob: -12.367704391479492
    9. '.__' → logprob: -12.367704391479492
    10. '==
' → logprob: -12.492704391479492

Token 709: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10020958632230759
    2. ''' → logprob: -2.3502094745635986
    3. ' "__' → logprob: -13.35020923614502
    4. '__' → logprob: -13.72520923614502
    5. ' '__' → logprob: -15.97520923614502
    6. ''"' → logprob: -16.850210189819336
    7. '   ' → logprob: -17.350210189819336
    8. '"'' → logprob: -17.350210189819336
    9. '"class' → logprob: -17.475210189819336
    10. '"name' → logprob: -17.850210189819336

Token 710: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023413995280861855
    2. '__' → logprob: -3.773413896560669
    3. '"' → logprob: -9.27341365814209
    4. '_main' → logprob: -10.02341365814209
    5. 'name' → logprob: -11.14841365814209
    6. ''' → logprob: -11.27341365814209
    7. ' main' → logprob: -13.39841365814209
    8. '___' → logprob: -15.02341365814209
    9. '__":
' → logprob: -15.14841365814209
    10. '-main' → logprob: -15.64841365814209

Token 711: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1294998824596405
    2. '__' → logprob: -2.129499912261963
    3. '__':
' → logprob: -6.129499912261963
    4. '__.' → logprob: -8.754499435424805
    5. '__.__' → logprob: -9.629499435424805
    6. '.' → logprob: -9.629499435424805
    7. '__["' → logprob: -9.629499435424805
    8. '.__' → logprob: -12.004499435424805
    9. '__
' → logprob: -12.004499435424805
    10. '__:' → logprob: -12.129499435424805

Token 712: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.030106816440820694
    2. '__' → logprob: -3.530106782913208
    3. ' main' → logprob: -8.155106544494629
    4. '   ' → logprob: -9.905106544494629
    5. '_main' → logprob: -11.655106544494629
    6. '	main' → logprob: -12.155106544494629
    7. '(main' → logprob: -13.655106544494629
    8. '____' → logprob: -14.280106544494629
    9. ' __' → logprob: -14.405106544494629
    10. '___' → logprob: -14.655106544494629

Token 713: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '   ' → logprob: -21.5
    4. '	main' → logprob: -22.125
    5. '_main' → logprob: -25.875
    6. '(main' → logprob: -26.5
    7. '.main' → logprob: -27.125
    8. '```' → logprob: -27.625
    9. '
' → logprob: -28.0
    10. 'import' → logprob: -28.25

Token 714: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16033552587032318
    2. '<|end|>' → logprob: -2.0353355407714844
    3. '```' → logprob: -5.410335540771484
    4. '
' → logprob: -5.410335540771484
    5. ')' → logprob: -5.910335540771484
    6. '(' → logprob: -6.285335540771484
    7. ':' → logprob: -6.285335540771484
    8. '#' → logprob: -7.285335540771484
    9. '()
' → logprob: -7.785335540771484
    10. '<|end|>' → logprob: -8.160335540771484


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 712
Tokens correctement prédits (1ère position, stricte): 356
Tokens correctement prédits (1ère position, avec adaptation): 384
Tokens correctement prédits (top 10): 609
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 53.93%
Précision (top 10): 85.53%
================================================================================
