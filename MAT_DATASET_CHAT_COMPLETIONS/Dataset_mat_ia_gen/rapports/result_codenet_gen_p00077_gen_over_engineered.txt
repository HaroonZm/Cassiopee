================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator


class DecompressionError(Exception):
    pass


class Token(ABC):
    @abstractmethod
    def expand(self) -> str:
        pass


class LiteralToken(Token):
    def __init__(self, char: str):
        self.char = char

    def expand(self) -> str:
        return self.char


class CompressedToken(Token):
    def __init__(self, count: int, char: str):
        self.count = count
        self.char = char

    def expand(self) -> str:
        return self.char * self.count


class Tokenizer:
    def __init__(self, data: str):
        self.data = data
        self.pos = 0
        self.length = len(data)

    def __iter__(self) -> Iterator[Token]:
        while self.pos < self.length:
            ch = self.data[self.pos]
            if ch == '@':
                yield self._consume_compressed()
            else:
                yield self._consume_literal()
        return

    def _consume_literal(self) -> Token:
        ch = self.data[self.pos]
        if ch == '@':
            raise DecompressionError("Unexpected @ in literal consumption")
        self.pos += 1
        return LiteralToken(ch)

    def _consume_compressed(self) -> Token:
        # Current pos points to '@'
        self.pos += 1  # consume '@'
        count_str = ''
        while self.pos < self.length and self.data[self.pos].isdigit():
            count_str += self.data[self.pos]
            self.pos += 1
        if count_str == '':
            raise DecompressionError("Missing count number after @")
        if self.pos >= self.length:
            raise DecompressionError("Missing character after count")
        count = int(count_str)
        ch = self.data[self.pos]
        if ch == '@':
            raise DecompressionError("Decompressed string cannot contain '@'")
        self.pos += 1
        return CompressedToken(count, ch)


class Decompressor:
    def __init__(self, compressed: str):
        self.compressed = compressed

    def decompress(self) -> str:
        tokenizer = Tokenizer(self.compressed)
        tokens = list(tokenizer)
        return ''.join(token.expand() for token in tokens)


class Processor:
    def __init__(self, lines: List[str]):
        self.lines = lines

    def process(self) -> List[str]:
        output = []
        for line in self.lines:
            decompressor = Decompressor(line)
            decompressed = decompressor.decompress()
            output.append(decompressed)
        return output


def main():
    import sys
    lines = [line.rstrip('\n') for line in sys.stdin if line.strip()]
    processor = Processor(lines)
    results = processor.process()
    for result in results:
        print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.15575426816940308
    2. 'ABC' → logprob: -2.030754327774048
    3. ' ' → logprob: -5.280754089355469
    4. 'abc' → logprob: -6.155754089355469
    5. 'import' → logprob: -6.405754089355469
    6. ' abc' → logprob: -7.030754089355469
    7. 'ABCDE' → logprob: -7.030754089355469
    8. ' A' → logprob: -7.655754089355469
    9. ' import' → logprob: -7.780754089355469
    10. 'abstract' → logprob: -8.155754089355469

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12386952340602875
    2. ',' → logprob: -2.2488694190979004
    3. 'import' → logprob: -5.4988694190979
    4. ' ' → logprob: -6.4988694190979
    5. '<|end|>' → logprob: -6.6238694190979
    6. '```' → logprob: -6.7488694190979
    7. ' .' → logprob: -6.9988694190979
    8. ' import' → logprob: -7.8738694190979
    9. ' ,' → logprob: -8.123869895935059
    10. ':' → logprob: -8.123869895935059

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5769391059875488
    2. 'abstract' → logprob: -0.8269391059875488
    3. 'Abstract' → logprob: -7.076939105987549
    4. ' ' → logprob: -9.70193862915039
    5. '.abstract' → logprob: -10.82693862915039
    6. ' A' → logprob: -11.32693862915039
    7. ' ABC' → logprob: -11.32693862915039
    8. '```' → logprob: -11.32693862915039
    9. '123' → logprob: -12.45193862915039
    10. 'AB' → logprob: -12.57693862915039

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00019889144459739327
    2. 'classmethod' → logprob: -9.000199317932129
    3. 'm' → logprob: -10.000199317932129
    4. '_method' → logprob: -11.250199317932129
    5. 'staticmethod' → logprob: -11.750199317932129
    6. 'meth' → logprob: -12.375199317932129
    7. ' method' → logprob: -13.750199317932129
    8. '```' → logprob: -13.875199317932129
    9. 'ethod' → logprob: -14.125199317932129
    10. 'abstract' → logprob: -14.375199317932129

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19047626852989197
    2. '```' → logprob: -2.315476179122925
    3. 'class' → logprob: -3.440476179122925
    4. '

' → logprob: -4.315476417541504
    5. '' → logprob: -4.565476417541504
    6. '
' → logprob: -5.065476417541504
    7. '\n' → logprob: -5.315476417541504
    8. '``' → logprob: -6.440476417541504
    9. '\' → logprob: -6.690476417541504
    10. '.' → logprob: -7.190476417541504

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584696590900421
    2. '

' → logprob: -1.3334696292877197
    3. 'class' → logprob: -2.5834696292877197
    4. '```' → logprob: -4.333469867706299
    5. '' → logprob: -5.083469867706299
    6. '
' → logprob: -5.833469867706299
    7. ' 

' → logprob: -6.458469867706299
    8. ' class' → logprob: -6.708469867706299
    9. '


' → logprob: -6.958469867706299
    10. '``' → logprob: -7.583469867706299

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.07908674329519272
    2. ' collections' → logprob: -2.8290867805480957
    3. ' dat' → logprob: -5.579086780548096
    4. ' os' → logprob: -5.954086780548096
    5. ' io' → logprob: -6.329086780548096
    6. 'typing' → logprob: -6.329086780548096
    7. ' abc' → logprob: -6.454086780548096
    8. ' sys' → logprob: -6.954086780548096
    9. ' datetime' → logprob: -7.204086780548096
    10. ' math' → logprob: -7.454086780548096

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13478213548660278
    2. 'import' → logprob: -2.134782075881958
    3. '.' → logprob: -5.259782314300537
    4. '<|end|>' → logprob: -7.009782314300537
    5. '.import' → logprob: -7.884782314300537
    6. '[' → logprob: -8.009781837463379
    7. '```' → logprob: -8.384781837463379
    8. ' as' → logprob: -8.509781837463379
    9. '_import' → logprob: -9.509781837463379
    10. '.space' → logprob: -9.509781837463379

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5475577116012573
    2. ' Union' → logprob: -1.6725577116012573
    3. ' List' → logprob: -2.047557830810547
    4. 'Any' → logprob: -2.547557830810547
    5. ' Optional' → logprob: -5.047557830810547
    6. ' Callable' → logprob: -5.172557830810547
    7. 'List' → logprob: -5.797557830810547
    8. 'Union' → logprob: -5.797557830810547
    9. ' ' → logprob: -6.047557830810547
    10. ' Protocol' → logprob: -6.047557830810547

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.45397552847862244
    2. '
' → logprob: -1.5789755582809448
    3. '

' → logprob: -1.9539755582809448
    4. '```' → logprob: -4.328975677490234
    5. '


' → logprob: -6.953975677490234
    6. '\n' → logprob: -7.078975677490234
    7. '``' → logprob: -7.328975677490234
    8. '
' → logprob: -8.078975677490234
    9. '<class' → logprob: -8.453975677490234
    10. ' class' → logprob: -8.453975677490234

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -12.750004768371582
    3. ' class' → logprob: -13.750004768371582
    4. '"class' → logprob: -15.875004768371582
    5. 'clas' → logprob: -16.125003814697266
    6. '
' → logprob: -16.125003814697266
    7. '<class' → logprob: -16.250003814697266
    8. '-class' → logprob: -17.000003814697266
    9. '@class' → logprob: -18.125003814697266
    10. '``' → logprob: -18.125003814697266

Token 16: ' De' (ID: 1516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.068853959441185
    2. ' Iterable' → logprob: -3.9438538551330566
    3. ' Abstract' → logprob: -4.068853855133057
    4. ' Space' → logprob: -4.568853855133057
    5. ' ABC' → logprob: -5.943853855133057
    6. ' Base' → logprob: -6.193853855133057
    7. ' Task' → logprob: -6.693853855133057
    8. ' My' → logprob: -6.693853855133057
    9. ' Serializer' → logprob: -6.693853855133057
    10. ' Iterator' → logprob: -6.818853855133057

Token 17: 'compression' (ID: 157910)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.029163764789700508
    2. 'corator' → logprob: -3.7791638374328613
    3. 'coder' → logprob: -6.529163837432861
    4. 'f' → logprob: -6.529163837432861
    5. 'vice' → logprob: -7.154163837432861
    6. 'ck' → logprob: -8.154163360595703
    7. 'queue' → logprob: -8.154163360595703
    8. 'veloper' → logprob: -8.404163360595703
    9. 'ques' → logprob: -8.529163360595703
    10. 'pendency' → logprob: -9.029163360595703

Token 18: 'Error' (ID: 2255)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034114394802600145
    2. ':' → logprob: -6.003411293029785
    3. 'Strategy' → logprob: -7.753411293029785
    4. 'Handler' → logprob: -9.503411293029785
    5. 'Operator' → logprob: -9.503411293029785
    6. '(Abstract' → logprob: -9.503411293029785
    7. 'Interface' → logprob: -10.503411293029785
    8. 'Base' → logprob: -10.753411293029785
    9. '():' → logprob: -10.878411293029785
    10. 'Layer' → logprob: -11.128411293029785

Token 19: '(Exception' (ID: 30178)
  Prédit: '(Exception'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Exception' → logprob: -0.009766833856701851
    2. '(' → logprob: -4.634767055511475
    3. '(Runtime' → logprob: -12.509766578674316
    4. ':' → logprob: -13.259766578674316
    5. '(Abstract' → logprob: -13.384766578674316
    6. '(:' → logprob: -13.384766578674316
    7. '(Value' → logprob: -13.884766578674316
    8. '(Enum' → logprob: -15.009766578674316
    9. '(Error' → logprob: -15.634766578674316
    10. '```' → logprob: -15.884766578674316

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008620958775281906
    2. ')' → logprob: -4.758620738983154
    3. ':' → logprob: -12.383621215820312
    4. '):
' → logprob: -13.258621215820312
    5. ' ):' → logprob: -15.258621215820312
    6. '):

' → logprob: -17.133621215820312
    7. ').' → logprob: -17.633621215820312
    8. '),' → logprob: -17.633621215820312
    9. ')：' → logprob: -17.758621215820312
    10. ',' → logprob: -17.883621215820312

Token 21: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.4498226046562195
    2. '   ' → logprob: -1.3248226642608643
    3. '    ' → logprob: -2.9498226642608643
    4. ' ' → logprob: -4.074822425842285
    5. ':' → logprob: -4.449822425842285
    6. ')' → logprob: -5.199822425842285
    7. '
' → logprob: -5.574822425842285
    8. '\n' → logprob: -6.574822425842285
    9. '<|end|>' → logprob: -7.074822425842285
    10. 'pass' → logprob: -7.199822425842285

Token 22: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.3064880967140198
    2. 'pass' (adapté à ' pass') → logprob: -1.806488037109375
    3. '   ' → logprob: -2.306488037109375
    4. '	pass' → logprob: -9.556488037109375
    5. '    ' → logprob: -10.181488037109375
    6. '       ' → logprob: -11.681488037109375
    7. '\n' → logprob: -11.806488037109375
    8. 'Pass' → logprob: -12.681488037109375
    9. ' ' → logprob: -13.806488037109375
    10. '_pass' → logprob: -14.056488037109375

Token 23: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.006474725902080536
    2. '
' → logprob: -5.756474494934082
    3. '


' → logprob: -6.256474494934082
    4. 'class' → logprob: -6.631474494934082
    5. '```' → logprob: -10.881474494934082
    6. '



' → logprob: -11.256474494934082
    7. ' 

' → logprob: -12.006474494934082
    8. '\n' → logprob: -12.006474494934082
    9. '' → logprob: -12.881474494934082
    10. '
' → logprob: -13.006474494934082

Token 24: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008636995335109532
    2. '
' → logprob: -7.500863552093506
    3. '

' → logprob: -8.125864028930664
    4. ' class' → logprob: -12.000864028930664
    5. '


' → logprob: -12.750864028930664
    6. '  
' → logprob: -13.750864028930664
    7. '
' → logprob: -14.000864028930664
    8. ' 
' → logprob: -14.375864028930664
    9. ' 

' → logprob: -14.375864028930664
    10. '```' → logprob: -14.625864028930664

Token 25: ' Token' (ID: 17951)
  Prédit: ' De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' De' → logprob: -0.0033004588913172483
    2. 'De' → logprob: -6.878300666809082
    3. ' Decoder' → logprob: -6.878300666809082
    4. ' Abstract' → logprob: -8.003300666809082
    5. ' Data' → logprob: -8.253300666809082
    6. ' Compressor' → logprob: -8.253300666809082
    7. ' Compression' → logprob: -8.628300666809082
    8. ' ' → logprob: -10.003300666809082
    9. ' Binary' → logprob: -10.378300666809082
    10. ' Base' → logprob: -11.253300666809082

Token 26: '(' (ID: 7)
  Prédit: 'izer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.013984965160489082
    2. 'Stream' → logprob: -4.5139851570129395
    3. 'Processor' → logprob: -7.1389851570129395
    4. '(' → logprob: -7.3889851570129395
    5. 'Extractor' → logprob: -8.388984680175781
    6. 'IZER' → logprob: -8.388984680175781
    7. 'Reader' → logprob: -8.513984680175781
    8. 'Iterator' → logprob: -8.513984680175781
    9. 'Decoder' → logprob: -9.138984680175781
    10. 'Recognizer' → logprob: -9.138984680175781

Token 27: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.006494739558547735
    2. '):' → logprob: -5.756494522094727
    3. ')' → logprob: -5.881494522094727
    4. ' ABC' → logprob: -8.131494522094727
    5. 'object' → logprob: -8.756494522094727
    6. 'abc' → logprob: -10.131494522094727
    7. 'Abstract' → logprob: -11.756494522094727
    8. 'str' → logprob: -12.381494522094727
    9. 'abstract' → logprob: -12.506494522094727
    10. '):
' → logprob: -12.506494522094727

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001280714524909854
    2. ')' → logprob: -6.751280784606934
    3. ':' → logprob: -9.251280784606934
    4. '):
' → logprob: -11.376280784606934
    5. ',' → logprob: -13.501280784606934
    6. ' ):' → logprob: -13.751280784606934
    7. '):

' → logprob: -15.251280784606934
    8. '):
' → logprob: -16.001279830932617
    9. ')：' → logprob: -17.001279830932617
    10. ').' → logprob: -17.126279830932617

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013780910521745682
    2. '):' → logprob: -6.876378059387207
    3. ' :' → logprob: -9.001378059387207
    4. '   ' → logprob: -9.126378059387207
    5. ':
' → logprob: -9.501378059387207
    6. ')' → logprob: -10.751378059387207
    7. '(' → logprob: -12.001378059387207
    8. ':def' → logprob: -13.126378059387207
    9. ',' → logprob: -13.251378059387207
    10. '<|end|>' → logprob: -13.501378059387207

Token 30: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590300738811493
    2. ':' → logprob: -1.8840301036834717
    3. '@' (adapté à ' @') → logprob: -2.6340301036834717
    4. 'def' → logprob: -6.259029865264893
    5. ' @' → logprob: -7.009029865264893
    6. ' :' → logprob: -7.509029865264893
    7. '    ' → logprob: -7.634029865264893
    8. ' def' → logprob: -8.75903034210205
    9. '    
' → logprob: -9.38403034210205
    10. ')' → logprob: -9.63403034210205

Token 31: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.246537173457909e-06
    2. 'ab' → logprob: -13.125003814697266
    3. 'property' → logprob: -13.875003814697266
    4. 'abs' → logprob: -14.125003814697266
    5. 'staticmethod' → logprob: -15.375003814697266
    6. ' abstract' → logprob: -15.625003814697266
    7. 'abc' → logprob: -16.625003814697266
    8. '.abstract' → logprob: -17.000003814697266
    9. 'classmethod' → logprob: -18.000003814697266
    10. 'a' → logprob: -18.250003814697266

Token 32: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.8670179997570813e-05
    2. 'meth' → logprob: -11.750019073486328
    3. '_method' → logprob: -12.125019073486328
    4. 'classmethod' → logprob: -12.500019073486328
    5. 'property' → logprob: -14.500019073486328
    6. 'm' → logprob: -14.875019073486328
    7. 'staticmethod' → logprob: -15.000019073486328
    8. 'ethod' → logprob: -16.125019073486328
    9. '	method' → logprob: -16.125019073486328
    10. 'abstract' → logprob: -16.750019073486328

Token 33: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09085339307785034
    2. '(' → logprob: -3.090853452682495
    3. ' def' → logprob: -3.590853452682495
    4. '
' → logprob: -5.340853214263916
    5. '   ' → logprob: -6.215853214263916
    6. '    
' → logprob: -6.715853214263916
    7. ' ' → logprob: -6.965853214263916
    8. ')' → logprob: -7.340853214263916
    9. '\' → logprob: -7.465853214263916
    10. 'method' → logprob: -7.590853214263916

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06969062983989716
    2. 'def' → logprob: -3.319690704345703
    3. '(' → logprob: -3.819690704345703
    4. ' def' → logprob: -5.694690704345703
    5. '(
' → logprob: -6.194690704345703
    6. '    
' → logprob: -6.444690704345703
    7. '\' → logprob: -7.319690704345703
    8. ')' → logprob: -8.319690704345703
    9. '<|end|>' → logprob: -8.319690704345703
    10. '()' → logprob: -9.319690704345703

Token 35: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003513125702738762
    2. ' def' → logprob: -8.000350952148438
    3. '
' → logprob: -11.375350952148438
    4. '   ' → logprob: -13.500350952148438
    5. 'classmethod' → logprob: -13.625350952148438
    6. 'property' → logprob: -14.125350952148438
    7. 'staticmethod' → logprob: -15.875350952148438
    8. '```' → logprob: -15.875350952148438
    9. 'de' → logprob: -16.000350952148438
    10. '    
' → logprob: -16.125350952148438

Token 36: ' expand' (ID: 10791)
  Prédit: ' decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.16292054951190948
    2. ' tokenize' → logprob: -2.5379204750061035
    3. ' decompress' → logprob: -4.2879204750061035
    4. ' process' → logprob: -4.6629204750061035
    5. ' def' → logprob: -4.9129204750061035
    6. ' iterate' → logprob: -5.0379204750061035
    7. ' parse' → logprob: -5.4129204750061035
    8. ' to' → logprob: -5.5379204750061035
    9. ' get' → logprob: -5.6629204750061035
    10. ' de' → logprob: -5.9129204750061035

Token 37: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07055739313364029
    2. '(' → logprob: -2.6955573558807373
    3. '(
' → logprob: -8.820557594299316
    4. '_tokens' → logprob: -9.070557594299316
    5. ' (' → logprob: -9.445557594299316
    6. '(s' → logprob: -9.570557594299316
    7. 'self' → logprob: -9.695557594299316
    8. '()' → logprob: -9.945557594299316
    9. '_token' → logprob: -10.070557594299316
    10. '_text' → logprob: -12.070557594299316

Token 38: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6459701061248779
    2. ')' → logprob: -0.8959701061248779
    3. '):' → logprob: -3.020970106124878
    4. 'self' → logprob: -4.020970344543457
    5. ' ,' → logprob: -8.520970344543457
    6. ':' → logprob: -8.645970344543457
    7. ',self' → logprob: -9.020970344543457
    8. ' )' → logprob: -9.395970344543457
    9. ')->' → logprob: -9.395970344543457
    10. ' self' → logprob: -9.770970344543457

Token 39: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26850491762161255
    2. ':' → logprob: -2.0185048580169678
    3. '(' → logprob: -2.6435048580169678
    4. '():' → logprob: -4.143505096435547
    5. ')' → logprob: -5.518505096435547
    6. 'self' → logprob: -5.643505096435547
    7. ' ->' → logprob: -5.768505096435547
    8. '(s' → logprob: -6.518505096435547
    9. '->' → logprob: -7.018505096435547
    10. '   ' → logprob: -7.268505096435547

Token 40: ' str' (ID: 989)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.7743441462516785
    2. 'str' → logprob: -1.2743442058563232
    3. 'Iterator' → logprob: -2.2743442058563232
    4. ' str' → logprob: -2.7743442058563232
    5. ' List' → logprob: -2.8993442058563232
    6. ' Iterator' → logprob: -3.2743442058563232
    7. 'int' → logprob: -8.274344444274902
    8. 'Iterable' → logprob: -8.899344444274902
    9. ' ' → logprob: -9.024344444274902
    10. 'Iter' → logprob: -9.274344444274902

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.493430894101039e-05
    2. ':
' → logprob: -9.875075340270996
    3. ':return' → logprob: -11.500075340270996
    4. '<|end|>' → logprob: -11.875075340270996
    5. '():' → logprob: -12.625075340270996
    6. '):' → logprob: -13.875075340270996
    7. ':def' → logprob: -14.375075340270996
    8. ' :' → logprob: -14.875075340270996
    9. '   ' → logprob: -15.000075340270996
    10. ':**' → logprob: -15.375075340270996

Token 42: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1116210222244263
    2. '...' → logprob: -1.1116210222244263
    3. 'pass' (adapté à ' pass') → logprob: -1.6116210222244263
    4. ' pass' → logprob: -2.1116209030151367
    5. '<|end|>' → logprob: -4.361620903015137
    6. '   ' → logprob: -4.986620903015137
    7. 'raise' → logprob: -7.861620903015137
    8. '  ' → logprob: -8.111620903015137
    9. ' raise' → logprob: -8.236620903015137
    10. '    ' → logprob: -8.611620903015137

Token 44: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3353167772293091
    2. '

' → logprob: -1.335316777229309
    3. '


' → logprob: -4.2103166580200195
    4. '<|end|>' → logprob: -5.4603166580200195
    5. '\n' → logprob: -6.9603166580200195
    6. '
    
' → logprob: -7.5853166580200195
    7. '   ' → logprob: -8.33531665802002
    8. '    
' → logprob: -8.33531665802002
    9. '<|end|>' → logprob: -8.71031665802002
    10. 'class' → logprob: -9.08531665802002

Token 45: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33557751774787903
    2. 'class' → logprob: -1.3355774879455566
    3. '

' → logprob: -3.8355774879455566
    4. '


' → logprob: -8.585577964782715
    5. ' class' → logprob: -9.210577964782715
    6. '\n' → logprob: -9.335577964782715
    7. '
' → logprob: -10.710577964782715
    8. '  
' → logprob: -11.085577964782715
    9. '
    
' → logprob: -11.335577964782715
    10. ' 
' → logprob: -11.460577964782715

Token 46: ' Literal' (ID: 100414)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8011939525604248
    2. ' Token' → logprob: -0.8011939525604248
    3. ' Literal' → logprob: -2.801193952560425
    4. ' Text' → logprob: -4.176194190979004
    5. ' String' → logprob: -5.551194190979004
    6. ' Repeat' → logprob: -5.551194190979004
    7. ' Space' → logprob: -5.676194190979004
    8. ' Block' → logprob: -5.926194190979004
    9. ' List' → logprob: -6.051194190979004
    10. ' Plain' → logprob: -6.676194190979004

Token 47: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.10479061305522919
    2. '(Token' → logprob: -2.354790687561035
    3. '(' → logprob: -5.854790687561035
    4. ':' → logprob: -6.979790687561035
    5. ' Token' → logprob: -7.854790687561035
    6. '	Token' → logprob: -8.229790687561035
    7. '<Token' → logprob: -9.229790687561035
    8. '_token' → logprob: -11.729790687561035
    9. 'Tokenizer' → logprob: -12.604790687561035
    10. 'Text' → logprob: -12.854790687561035

Token 48: '(Token' (ID: 78497)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2556389570236206
    2. '(Token' → logprob: -2.13063907623291
    3. '(' → logprob: -2.25563907623291
    4. '):' → logprob: -6.75563907623291
    5. ' :' → logprob: -7.50563907623291
    6. '():' → logprob: -8.88063907623291
    7. ')' → logprob: -10.25563907623291
    8. '<Token' → logprob: -10.88063907623291
    9. '(:' → logprob: -11.13063907623291
    10. '(T' → logprob: -11.25563907623291

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020461321400944144
    2. ')' → logprob: -8.625205039978027
    3. '):
' → logprob: -11.250205039978027
    4. ':' → logprob: -11.500205039978027
    5. ' ):' → logprob: -13.625205039978027
    6. '   ' → logprob: -16.25020408630371
    7. '):
' → logprob: -16.37520408630371
    8. ',' → logprob: -16.37520408630371
    9. ']:' → logprob: -16.37520408630371
    10. '():' → logprob: -16.75020408630371

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004195575136691332
    2. '    
' → logprob: -5.754195690155029
    3. '    ' → logprob: -7.129195690155029
    4. ' def' → logprob: -9.379195213317871
    5. '  ' → logprob: -10.379195213317871
    6. ' 
' → logprob: -10.629195213317871
    7. ' ' → logprob: -11.254195213317871
    8. '     
' → logprob: -11.254195213317871
    9. '<|end|>' → logprob: -11.254195213317871
    10. '   
' → logprob: -11.879195213317871

Token 51: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47847047448158264
    2. '   ' → logprob: -0.9784704446792603
    3. 'def' (adapté à ' def') → logprob: -5.478470325469971
    4. '    ' → logprob: -8.728470802307129
    5. ' indentation' → logprob: -10.478470802307129
    6. '    
' → logprob: -11.728470802307129
    7. ' indent' → logprob: -12.728470802307129
    8. ' ind' → logprob: -13.103470802307129
    9. '	def' → logprob: -13.978470802307129
    10. ' 
' → logprob: -14.228470802307129

Token 52: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22995321452617645
    2. ' expand' → logprob: -2.1049532890319824
    3. ' def' → logprob: -3.1049532890319824
    4. ' ' → logprob: -3.3549532890319824
    5. '  ' → logprob: -6.479953289031982
    6. 'expand' → logprob: -6.854953289031982
    7. '   ' → logprob: -7.604953289031982
    8. ' ' → logprob: -8.479952812194824
    9. ' _' → logprob: -8.854952812194824
    10. ' init' → logprob: -8.979952812194824

Token 53: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'it' → logprob: -15.000000953674316
    3. 'def' → logprob: -16.375
    4. '   ' → logprob: -16.5
    5. ' init' → logprob: -17.25
    6. 'ini' → logprob: -17.625
    7. 'inite' → logprob: -18.0
    8. '	init' → logprob: -18.0
    9. ' ' → logprob: -18.25
    10. 'nit' → logprob: -18.625

Token 54: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04666099324822426
    2. '__(' → logprob: -3.171660900115967
    3. '(' → logprob: -5.921660900115967
    4. ' (' → logprob: -7.171660900115967
    5. '_(' → logprob: -9.171661376953125
    6. '__(
' → logprob: -10.671661376953125
    7. 'self' → logprob: -11.046661376953125
    8. '<|end|>' → logprob: -11.046661376953125
    9. '__' → logprob: -11.796661376953125
    10. '<>(' → logprob: -11.921661376953125

Token 55: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019289902411401272
    2. ' self' → logprob: -6.251928806304932
    3. 'value' → logprob: -16.126928329467773
    4. '       ' → logprob: -16.376928329467773
    5. 'text' → logprob: -16.376928329467773
    6. '   ' → logprob: -16.626928329467773
    7. ' ' → logprob: -17.876928329467773
    8. '(self' → logprob: -18.126928329467773
    9. '	self' → logprob: -18.251928329467773
    10. ',' → logprob: -18.501928329467773

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09173800051212311
    2. 'self' → logprob: -2.591737985610962
    3. 'text' → logprob: -5.091738224029541
    4. ' ,' → logprob: -6.091738224029541
    5. ' self' → logprob: -6.091738224029541
    6. 'value' → logprob: -6.466738224029541
    7. 'content' → logprob: -8.716737747192383
    8. 'token' → logprob: -9.716737747192383
    9. '_literal' → logprob: -9.716737747192383
    10. ' text' → logprob: -10.216737747192383

Token 57: ' char' (ID: 1826)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.4391239583492279
    2. 'value' → logprob: -1.8141239881515503
    3. ' text' → logprob: -2.1891238689422607
    4. 'text' → logprob: -2.6891238689422607
    5. ' literal' → logprob: -4.68912410736084
    6. 'literal' → logprob: -6.06412410736084
    7. ' content' → logprob: -7.93912410736084
    8. 'self' → logprob: -9.06412410736084
    9. 'content' → logprob: -9.18912410736084
    10. '   ' → logprob: -9.68912410736084

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002278542669955641
    2. ':str' → logprob: -9.000227928161621
    3. '):' → logprob: -10.375227928161621
    4. 'acter' → logprob: -10.375227928161621
    5. 'acters' → logprob: -10.750227928161621
    6. ')' → logprob: -10.875227928161621
    7. ' :' → logprob: -14.375227928161621
    8. 's' → logprob: -15.000227928161621
    9. '_:' → logprob: -15.375227928161621
    10. 'ater' → logprob: -16.250226974487305

Token 59: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2519325315952301
    2. 'str' → logprob: -1.5019325017929077
    3. ')' → logprob: -13.751932144165039
    4. '	str' → logprob: -13.751932144165039
    5. ':str' → logprob: -14.251932144165039
    6. '[str' → logprob: -14.876932144165039
    7. '=str' → logprob: -16.37693214416504
    8. '   ' → logprob: -16.75193214416504
    9. ' ' → logprob: -17.37693214416504
    10. '(str' → logprob: -18.12693214416504

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024258511140942574
    2. ')' → logprob: -3.774258613586426
    3. ':' → logprob: -7.024258613586426
    4. '):
' → logprob: -9.649258613586426
    5. ' ):' → logprob: -10.024258613586426
    6. '   ' → logprob: -11.649258613586426
    7. ' )' → logprob: -13.274258613586426
    8. ' ' → logprob: -13.649258613586426
    9. '):
' → logprob: -14.524258613586426
    10. '       ' → logprob: -14.649258613586426

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022606621496379375
    2. ' self' → logprob: -8.875226020812988
    3. 'self' → logprob: -9.625226020812988
    4. '   ' → logprob: -11.625226020812988
    5. ' ' → logprob: -12.125226020812988
    6. '      ' → logprob: -13.125226020812988
    7. '	' → logprob: -13.750226020812988
    8. '     ' → logprob: -14.500226020812988
    9. '    ' → logprob: -14.500226020812988
    10. ',' → logprob: -15.375226020812988

Token 62: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1083013042807579
    2. ' self' → logprob: -2.3583014011383057
    3. '       ' → logprob: -4.858301162719727
    4. 'super' → logprob: -8.358301162719727
    5. ' super' → logprob: -9.858301162719727
    6. '   ' → logprob: -11.858301162719727
    7. ' ' → logprob: -12.983301162719727
    8. '	self' → logprob: -13.608301162719727
    9. ' ' → logprob: -15.483301162719727
    10. '        ' → logprob: -15.483301162719727

Token 63: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.010583538562059402
    2. '.' → logprob: -4.635583400726318
    3. 'char' → logprob: -7.260583400726318
    4. ' char' → logprob: -10.385583877563477
    5. '   ' → logprob: -10.510583877563477
    6. ' .' → logprob: -10.635583877563477
    7. '_char' → logprob: -11.385583877563477
    8. '.character' → logprob: -11.635583877563477
    9. '.Char' → logprob: -12.510583877563477
    10. '       ' → logprob: -12.510583877563477

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132653534412384
    2. '=' → logprob: -1.313265323638916
    3. ' ' → logprob: -12.813265800476074
    4. ')' → logprob: -15.063265800476074
    5. ' =)' → logprob: -15.688265800476074
    6. ' =
' → logprob: -16.063264846801758
    7. 's' → logprob: -16.438264846801758
    8. '   ' → logprob: -16.813264846801758
    9. '    ' → logprob: -17.313264846801758
    10. ' )' → logprob: -17.813264846801758

Token 65: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.07889111340045929
    2. 'char' → logprob: -2.5788910388946533
    3. '<char' → logprob: -14.453890800476074
    4. '(char' → logprob: -14.703890800476074
    5. ',char' → logprob: -15.953890800476074
    6. ' ' → logprob: -16.32889175415039
    7. '_char' → logprob: -16.32889175415039
    8. '	char' → logprob: -16.45389175415039
    9. '.char' → logprob: -16.95389175415039
    10. ' ' → logprob: -17.82889175415039

Token 66: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2765308916568756
    2. '
' → logprob: -1.6515308618545532
    3. ' def' → logprob: -3.7765309810638428
    4. 'def' → logprob: -4.401530742645264
    5. '    
' → logprob: -4.901530742645264
    6. ' 
' → logprob: -6.026530742645264
    7. '<|end|>' → logprob: -6.026530742645264
    8. ' ' → logprob: -7.026530742645264
    9. '  
' → logprob: -7.401530742645264
    10. '<|end|>' → logprob: -8.401531219482422

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005533903022296727
    2. ' def' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750553131103516
    4. '	def' → logprob: -18.500553131103516
    5. ' ' → logprob: -19.125553131103516
    6. '    
' → logprob: -21.000553131103516
    7. '@' → logprob: -21.125553131103516
    8. '```' → logprob: -21.750553131103516
    9. '
' → logprob: -21.875553131103516
    10. '       ' → logprob: -22.000553131103516

Token 69: ' expand' (ID: 10791)
  Prédit: ' expand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expand' → logprob: -0.00026538874953985214
    2. 'expand' → logprob: -8.250265121459961
    3. ' def' → logprob: -13.375265121459961
    4. ' ' → logprob: -13.750265121459961
    5. '.expand' → logprob: -13.875265121459961
    6. ' ' → logprob: -15.125265121459961
    7. '_expand' → logprob: -15.125265121459961
    8. ' expanded' → logprob: -17.50026512145996
    9. ' exp' → logprob: -17.87526512145996
    10. ' expands' → logprob: -17.87526512145996

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022241918370127678
    2. '(' → logprob: -3.8972418308258057
    3. '()' → logprob: -6.397242069244385
    4. ' (' → logprob: -11.272241592407227
    5. '(
' → logprob: -12.147241592407227
    6. 'self' → logprob: -12.647241592407227
    7. ' ' → logprob: -12.772241592407227
    8. '   ' → logprob: -13.022241592407227
    9. '       ' → logprob: -13.397241592407227
    10. '(s' → logprob: -13.647241592407227

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. ' )' → logprob: -11.500021934509277
    3. 'self' → logprob: -11.500021934509277
    4. '   ' → logprob: -14.125021934509277
    5. '):' → logprob: -14.875021934509277
    6. ')->' → logprob: -15.125021934509277
    7. '       ' → logprob: -15.250021934509277
    8. ' ' → logprob: -15.875021934509277
    9. '()' → logprob: -16.875022888183594
    10. '->' → logprob: -17.125022888183594

Token 72: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.06399992108345032
    2. '->' → logprob: -3.188999891281128
    3. '(' → logprob: -4.564000129699707
    4. '(self' → logprob: -4.939000129699707
    5. ':' → logprob: -6.189000129699707
    6. '       ' → logprob: -8.314000129699707
    7. ' =' → logprob: -8.814000129699707
    8. '   ' → logprob: -8.939000129699707
    9. ')' → logprob: -9.064000129699707
    10. ':return' → logprob: -9.314000129699707

Token 73: ' str' (ID: 989)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08023291826248169
    2. 'self' → logprob: -2.580232858657837
    3. ' str' → logprob: -6.705233097076416
    4. ' ' → logprob: -10.330232620239258
    5. 'str' → logprob: -10.330232620239258
    6. ' f' → logprob: -10.955232620239258
    7. ' '' → logprob: -11.205232620239258
    8. ' ' → logprob: -11.330232620239258
    9. '"' → logprob: -12.455232620239258
    10. ''' → logprob: -12.705232620239258

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021835691295564175
    2. ':
' → logprob: -6.377183437347412
    3. ':return' → logprob: -8.12718391418457
    4. '       ' → logprob: -8.87718391418457
    5. '):' → logprob: -10.87718391418457
    6. 'return' → logprob: -11.87718391418457
    7. ' :' → logprob: -12.37718391418457
    8. ' return' → logprob: -12.62718391418457
    9. '():' → logprob: -13.00218391418457
    10. '.' → logprob: -13.12718391418457

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18203511834144592
    2. 'return' → logprob: -2.182035207748413
    3. 'self' → logprob: -2.932035207748413
    4. ' return' → logprob: -8.182035446166992
    5. ' self' → logprob: -10.057035446166992
    6. '{return' → logprob: -13.057035446166992
    7. '   ' → logprob: -13.182035446166992
    8. '```' → logprob: -14.557035446166992
    9. '           ' → logprob: -15.307035446166992
    10. '      ' → logprob: -16.307035446166992

Token 76: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023363690823316574
    2. 'self' → logprob: -3.7733635902404785
    3. ' return' → logprob: -9.523364067077637
    4. '       ' → logprob: -10.023364067077637
    5. ' self' → logprob: -14.398364067077637
    6. '{return' → logprob: -17.14836311340332
    7. '	return' → logprob: -18.02336311340332
    8. '```' → logprob: -18.27336311340332
    9. '   ' → logprob: -18.77336311340332
    10. ':return' → logprob: -19.02336311340332

Token 77: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132616877555847
    2. ' self' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.938261032104492
    4. '       ' → logprob: -18.063261032104492
    5. '	self' → logprob: -18.188261032104492
    6. ' ' → logprob: -18.938261032104492
    7. 'f' → logprob: -19.688261032104492
    8. '   ' → logprob: -20.063261032104492
    9. '(self' → logprob: -20.438261032104492
    10. ' f' → logprob: -20.563261032104492

Token 78: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.250005722045898
    3. 'char' → logprob: -14.875005722045898
    4. '<char' → logprob: -16.0000057220459
    5. ' .' → logprob: -16.1250057220459
    6. '.car' → logprob: -16.5000057220459
    7. '.character' → logprob: -16.8750057220459
    8. '.Char' → logprob: -17.5000057220459
    9. '.chat' → logprob: -17.6250057220459
    10. '.chart' → logprob: -18.5000057220459

Token 79: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12900753319263458
    2. '

' → logprob: -2.504007577896118
    3. '


' → logprob: -3.504007577896118
    4. '\n' → logprob: -5.129007339477539
    5. '<|end|>' → logprob: -6.879007339477539
    6. '    
' → logprob: -7.504007339477539
    7. '' → logprob: -7.879007339477539
    8. '



' → logprob: -8.129007339477539
    9. 'class' → logprob: -8.379007339477539
    10. '```' → logprob: -8.504007339477539

Token 80: 'class' (ID: 1444)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6832594275474548
    2. '
' → logprob: -1.1832594871520996
    3. 'class' → logprob: -1.6832594871520996
    4. '


' → logprob: -5.9332594871521
    5. '\n' → logprob: -9.183259010314941
    6. '```' → logprob: -9.808259010314941
    7. ' class' → logprob: -10.183259010314941
    8. '' → logprob: -10.433259010314941
    9. 'newline' → logprob: -11.183259010314941
    10. '
    
' → logprob: -11.183259010314941

Token 81: ' Com' (ID: 1390)
  Prédit: ' Repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Repeat' → logprob: -0.023109430447220802
    2. 'Repeat' → logprob: -4.648109436035156
    3. ' Sequence' → logprob: -5.273109436035156
    4. ' Re' → logprob: -5.648109436035156
    5. ' Run' → logprob: -6.898109436035156
    6. ' Expand' → logprob: -7.148109436035156
    7. ' Back' → logprob: -7.898109436035156
    8. ' Copy' → logprob: -8.023109436035156
    9. 'Sequence' → logprob: -8.148109436035156
    10. ' Pointer' → logprob: -8.148109436035156

Token 82: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.19406381249427795
    2. 'pression' → logprob: -2.069063901901245
    3. 'press' → logprob: -4.194063663482666
    4. 'p' → logprob: -4.569063663482666
    5. 'posite' → logprob: -4.569063663482666
    6. 'pos' → logprob: -5.444063663482666
    7. 'ponent' → logprob: -5.694063663482666
    8. 'pressor' → logprob: -5.819063663482666
    9. 'pres' → logprob: -6.819063663482666
    10. 'plex' → logprob: -7.444063663482666

Token 83: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -1.318681188422488e-05
    2. 'Sequence' → logprob: -12.25001335144043
    3. 'Block' → logprob: -13.25001335144043
    4. 'String' → logprob: -13.62501335144043
    5. 'Tokens' → logprob: -13.62501335144043
    6. 'Segment' → logprob: -14.12501335144043
    7. '	Token' → logprob: -14.25001335144043
    8. 'token' → logprob: -14.37501335144043
    9. 'Tokenizer' → logprob: -15.00001335144043
    10. 'Tok' → logprob: -15.00001335144043

Token 84: '(Token' (ID: 78497)
  Prédit: '(Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Token' → logprob: -0.0006414268864318728
    2. '(' → logprob: -7.375641345977783
    3. ' (' → logprob: -12.250641822814941
    4. '	Token' → logprob: -12.625641822814941
    5. '<Token' → logprob: -12.625641822814941
    6. '(T' → logprob: -13.375641822814941
    7. '(Tile' → logprob: -14.625641822814941
    8. ' Token' → logprob: -14.750641822814941
    9. ':' → logprob: -15.375641822814941
    10. '(token' → logprob: -15.625641822814941

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3797154426574707
    2. ',' → logprob: -1.2547154426574707
    3. '):
' → logprob: -3.5047154426574707
    4. ' ,' → logprob: -8.129714965820312
    5. ')' → logprob: -8.629714965820312
    6. '   ' → logprob: -9.629714965820312
    7. ':' → logprob: -9.879714965820312
    8. ',
' → logprob: -10.129714965820312
    9. ' ):' → logprob: -10.129714965820312
    10. '(' → logprob: -11.129714965820312

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12295828014612198
    2. ':' → logprob: -2.872958183288574
    3. ' def' → logprob: -3.122958183288574
    4. 'def' → logprob: -4.997958183288574
    5. '(' → logprob: -5.997958183288574
    6. ':
' → logprob: -6.247958183288574
    7. '    
' → logprob: -7.372958183288574
    8. '  ' → logprob: -7.372958183288574
    9. '<|end|>' → logprob: -7.622958183288574
    10. ' (' → logprob: -7.997958183288574

Token 87: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.026721365749835968
    2. 'def' (adapté à ' def') → logprob: -3.651721477508545
    3. '   ' → logprob: -8.026721000671387
    4. '	def' → logprob: -10.026721000671387
    5. ':' → logprob: -10.401721000671387
    6. '(' → logprob: -12.026721000671387
    7. '    ' → logprob: -12.151721000671387
    8. ' :' → logprob: -12.651721000671387
    9. ' (' → logprob: -13.401721000671387
    10. ':def' → logprob: -13.401721000671387

Token 88: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007580481935292482
    2. '_init' → logprob: -6.007580280303955
    3. '__' → logprob: -6.257580280303955
    4. ' def' → logprob: -6.632580280303955
    5. ' init' → logprob: -7.757580280303955
    6. 'init' → logprob: -8.007580757141113
    7. ' (' → logprob: -8.257580757141113
    8. '```' → logprob: -8.507580757141113
    9. ' ' → logprob: -8.882580757141113
    10. '  ' → logprob: -9.257580757141113

Token 89: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.032889168709516525
    2. 'def' → logprob: -4.032889366149902
    3. 'it' → logprob: -5.282889366149902
    4. '__' → logprob: -5.657889366149902
    5. '   ' → logprob: -6.657889366149902
    6. 'nit' → logprob: -6.657889366149902
    7. '_init' → logprob: -6.782889366149902
    8. ' __' → logprob: -7.157889366149902
    9. '```' → logprob: -8.282889366149902
    10. '__
' → logprob: -8.407889366149902

Token 90: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7205057740211487
    2. '__(' → logprob: -0.7205057740211487
    3. '(' → logprob: -3.720505714416504
    4. '__(
' → logprob: -6.845505714416504
    5. '_(' → logprob: -7.345505714416504
    6. ' (' → logprob: -7.595505714416504
    7. '__' → logprob: -8.970505714416504
    8. 'self' → logprob: -9.095505714416504
    9. '```' → logprob: -9.345505714416504
    10. ')(' → logprob: -9.720505714416504

Token 91: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010381679749116302
    2. ' self' → logprob: -6.876038074493408
    3. ',' → logprob: -13.126038551330566
    4. '       ' → logprob: -13.876038551330566
    5. '(self' → logprob: -14.376038551330566
    6. '
' → logprob: -14.376038551330566
    7. '   ' → logprob: -15.126038551330566
    8. '	self' → logprob: -15.376038551330566
    9. '0' → logprob: -15.626038551330566
    10. 's' → logprob: -15.751038551330566

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010092071170220152
    2. ' ,' → logprob: -9.500101089477539
    3. '<|end|>' → logprob: -11.500101089477539
    4. 'self' → logprob: -11.625101089477539
    5. ' (' → logprob: -13.875101089477539
    6. ',
' → logprob: -14.375101089477539
    7. 'string' → logprob: -14.500101089477539
    8. '<|end|>' → logprob: -14.625101089477539
    9. '‌,' → logprob: -14.750101089477539
    10. ',char' → logprob: -14.875101089477539

Token 93: ' count' (ID: 3605)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.2670220136642456
    2. 'self' → logprob: -1.5170220136642456
    3. ' length' → logprob: -1.7670220136642456
    4. ' count' → logprob: -2.517022132873535
    5. 'count' → logprob: -2.517022132873535
    6. ' self' → logprob: -2.892022132873535
    7. ' data' → logprob: -3.517022132873535
    8. 'data' → logprob: -3.642022132873535
    9. 'tokens' → logprob: -4.642022132873535
    10. ' tokens' → logprob: -5.517022132873535

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022901371121406555
    2. ',' → logprob: -6.12729024887085
    3. ':int' → logprob: -9.377289772033691
    4. ' :' → logprob: -11.127289772033691
    5. ' ,' → logprob: -12.377289772033691
    6. '=' → logprob: -15.127289772033691
    7. '_:' → logprob: -15.502289772033691
    8. ':,' → logprob: -15.752289772033691
    9. 'int' → logprob: -16.002290725708008
    10. 's' → logprob: -16.127290725708008

Token 95: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1602584570646286
    2. ' int' → logprob: -1.910258412361145
    3. ' ' → logprob: -10.910258293151855
    4. 'str' → logprob: -12.285258293151855
    5. ' str' → logprob: -12.410258293151855
    6. '[int' → logprob: -13.035258293151855
    7. '	int' → logprob: -13.660258293151855
    8. ':int' → logprob: -13.785258293151855
    9. '  ' → logprob: -14.160258293151855
    10. 'List' → logprob: -14.910258293151855

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008514398941770196
    2. ' ,' → logprob: -7.125851631164551
    3. '):' → logprob: -10.37585163116455
    4. ')' → logprob: -11.50085163116455
    5. ':' → logprob: -13.37585163116455
    6. '   ' → logprob: -14.12585163116455
    7. ' ):' → logprob: -14.25085163116455
    8. ',int' → logprob: -15.00085163116455
    9. ',n' → logprob: -15.12585163116455
    10. ' ' → logprob: -15.50085163116455

Token 97: ' char' (ID: 1826)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.15645384788513184
    2. ' tokens' → logprob: -2.781453847885132
    3. 'token' → logprob: -3.156453847885132
    4. 'sequence' → logprob: -4.406454086303711
    5. 'sub' → logprob: -4.906454086303711
    6. ' sequence' → logprob: -5.531454086303711
    7. 'content' → logprob: -5.656454086303711
    8. 'substring' → logprob: -6.031454086303711
    9. 'data' → logprob: -6.156454086303711
    10. 'inner' → logprob: -6.156454086303711

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.558399319241289e-05
    2. 's' → logprob: -10.625025749206543
    3. ' :' → logprob: -14.375025749206543
    4. ')' → logprob: -14.875025749206543
    5. '_:' → logprob: -15.875025749206543
    6. ':str' → logprob: -16.375024795532227
    7. 'acters' → logprob: -16.750024795532227
    8. '):' → logprob: -17.250024795532227
    9. '```' → logprob: -18.375024795532227
    10. ',' → logprob: -19.125024795532227

Token 99: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.11687721312046051
    2. 'str' → logprob: -2.241877317428589
    3. ' Token' → logprob: -5.61687707901001
    4. 'Token' → logprob: -8.616877555847168
    5. ' ' → logprob: -8.741877555847168
    6. ')' → logprob: -11.366877555847168
    7. '[str' → logprob: -11.491877555847168
    8. '	str' → logprob: -11.866877555847168
    9. ' '' → logprob: -11.991877555847168
    10. 'List' → logprob: -12.241877555847168

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010767532512545586
    2. '):
' → logprob: -7.501076698303223
    3. ')' → logprob: -7.751076698303223
    4. ':' → logprob: -9.376076698303223
    5. ',' → logprob: -12.626076698303223
    6. ' ):' → logprob: -12.876076698303223
    7. '   ' → logprob: -13.001076698303223
    8. '       ' → logprob: -15.876076698303223
    9. ' ' → logprob: -15.876076698303223
    10. '):
' → logprob: -16.25107765197754

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015431918436661363
    2. 'self' → logprob: -6.751543045043945
    3. ' self' → logprob: -8.376543045043945
    4. '   ' → logprob: -9.001543045043945
    5. '	self' → logprob: -12.501543045043945
    6. '     ' → logprob: -12.626543045043945
    7. '
' → logprob: -13.001543045043945
    8. '      ' → logprob: -13.001543045043945
    9. ' ' → logprob: -13.126543045043945
    10. '	' → logprob: -13.626543045043945

Token 102: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04391366243362427
    2. ' self' → logprob: -3.2939136028289795
    3. '       ' → logprob: -5.168913841247559
    4. '	self' → logprob: -8.918913841247559
    5. 'super' → logprob: -11.668913841247559
    6. '	' → logprob: -11.918913841247559
    7. '   ' → logprob: -12.168913841247559
    8. ' ' → logprob: -12.418913841247559
    9. ' ' → logprob: -12.543913841247559
    10. ' super' → logprob: -14.418913841247559

Token 103: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.38692763447761536
    2. '.' → logprob: -1.136927604675293
    3. ' .' → logprob: -10.386927604675293
    4. 'count' → logprob: -12.261927604675293
    5. ' ' → logprob: -12.886927604675293
    6. '=count' → logprob: -13.136927604675293
    7. ').' → logprob: -13.261927604675293
    8. '.
' → logprob: -13.386927604675293
    9. '.Count' → logprob: -13.761927604675293
    10. '.c' → logprob: -13.761927604675293

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270628124475479
    2. '=' → logprob: -2.1270627975463867
    3. ' ' → logprob: -9.377062797546387
    4. ',' → logprob: -11.377062797546387
    5. ' ,' → logprob: -11.377062797546387
    6. ':' → logprob: -11.377062797546387
    7. ')' → logprob: -12.002062797546387
    8. '<|end|>' → logprob: -12.252062797546387
    9. '    ' → logprob: -14.127062797546387
    10. ' :' → logprob: -14.377062797546387

Token 105: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.018151111900806427
    2. 'count' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. '	count' → logprob: -14.76815128326416
    5. '(count' → logprob: -16.393150329589844
    6. '$count' → logprob: -17.768150329589844
    7. '[count' → logprob: -18.018150329589844
    8. '=count' → logprob: -18.018150329589844
    9. ' ' → logprob: -18.393150329589844
    10. '_count' → logprob: -18.393150329589844

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007641222910024226
    2. '
' → logprob: -8.125763893127441
    3. '<|end|>' → logprob: -8.375763893127441
    4. ',' → logprob: -9.125763893127441
    5. ' ' → logprob: -10.625763893127441
    6. '        
' → logprob: -10.875763893127441
    7. '        ' → logprob: -11.125763893127441
    8. ' 
' → logprob: -11.250763893127441
    9. '   ' → logprob: -11.375763893127441
    10. ',
' → logprob: -11.500763893127441

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011494209989905357
    2. 'self' → logprob: -4.761494159698486
    3. ' self' → logprob: -5.886494159698486
    4. ' ' → logprob: -10.011494636535645
    5. ',' → logprob: -10.761494636535645
    6. '   ' → logprob: -11.386494636535645
    7. '<|end|>' → logprob: -12.511494636535645
    8. '	self' → logprob: -12.761494636535645
    9. '      ' → logprob: -13.136494636535645
    10. '        
' → logprob: -13.386494636535645

Token 108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007032568100839853
    2. ' self' → logprob: -7.37570333480835
    3. 'char' → logprob: -9.625702857971191
    4. '       ' → logprob: -11.500702857971191
    5. '   ' → logprob: -15.000702857971191
    6. '	self' → logprob: -15.625702857971191
    7. ' ' → logprob: -16.625703811645508
    8. ' char' → logprob: -18.250703811645508
    9. '     ' → logprob: -18.250703811645508
    10. 'this' → logprob: -18.750703811645508

Token 109: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.008318465203046799
    2. '.' → logprob: -5.0083184242248535
    3. 'char' → logprob: -6.5083184242248535
    4. ' .' → logprob: -9.633318901062012
    5. '.Char' → logprob: -11.508318901062012
    6. '<char' → logprob: -11.883318901062012
    7. ' char' → logprob: -12.008318901062012
    8. '	char' → logprob: -12.383318901062012
    9. '.token' → logprob: -12.383318901062012
    10. '.user' → logprob: -13.133318901062012

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269870102405548
    2. ' =' → logprob: -2.1269869804382324
    3. '<|end|>' → logprob: -10.12698745727539
    4. ')' → logprob: -11.37698745727539
    5. ' ' → logprob: -12.62698745727539
    6. '[' → logprob: -14.50198745727539
    7. '<|end|>' → logprob: -14.62698745727539
    8. '=
' → logprob: -14.75198745727539
    9. ' =
' → logprob: -14.87698745727539
    10. '_' → logprob: -15.12698745727539

Token 111: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.03368972986936569
    2. 'char' → logprob: -3.4086897373199463
    3. ' ' → logprob: -10.283689498901367
    4. '(char' → logprob: -12.908689498901367
    5. '<char' → logprob: -13.033689498901367
    6. ' ' → logprob: -13.158689498901367
    7. '	char' → logprob: -13.283689498901367
    8. ',char' → logprob: -15.158689498901367
    9. '_char' → logprob: -15.408689498901367
    10. ' 
' → logprob: -15.408689498901367

Token 112: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5411342978477478
    2. '
' → logprob: -0.9161342978477478
    3. '<|end|>' → logprob: -4.666134357452393
    4. 'def' → logprob: -5.166134357452393
    5. '<|end|>' → logprob: -6.291134357452393
    6. '    
' → logprob: -7.916134357452393
    7. '

' → logprob: -8.666133880615234
    8. '  
' → logprob: -8.916133880615234
    9. ' def' → logprob: -9.416133880615234
    10. '```' → logprob: -9.791133880615234

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3926429748535156
    2. '
' → logprob: -1.1426429748535156
    3. 'def' → logprob: -6.017642974853516
    4. '<|end|>' → logprob: -7.142642974853516
    5. '    
' → logprob: -7.392642974853516
    6. ' def' → logprob: -7.392642974853516
    7. '

' → logprob: -7.517642974853516
    8. '  
' → logprob: -8.017642974853516
    9. '```' → logprob: -9.392642974853516
    10. ' 
' → logprob: -9.517642974853516

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0802738870552275e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.37501049041748
    4. '@' → logprob: -19.375011444091797
    5. '	def' → logprob: -19.750011444091797
    6. '
' → logprob: -20.750011444091797
    7. ' ' → logprob: -22.000011444091797
    8. '    
' → logprob: -22.250011444091797
    9. 'de' → logprob: -22.375011444091797
    10. '@property' → logprob: -22.875011444091797

Token 115: ' expand' (ID: 10791)
  Prédit: ' expand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expand' → logprob: -0.6931942105293274
    2. 'expand' → logprob: -0.6931942105293274
    3. ' def' → logprob: -10.943194389343262
    4. 'def' → logprob: -11.443194389343262
    5. '.expand' → logprob: -11.568194389343262
    6. '   ' → logprob: -12.568194389343262
    7. ' ' → logprob: -13.068194389343262
    8. '_expand' → logprob: -13.318194389343262
    9. 'exp' → logprob: -14.443194389343262
    10. ' 
' → logprob: -14.943194389343262

Token 116: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028205793350934982
    2. '(' → logprob: -3.6532058715820312
    3. '()' → logprob: -6.403205871582031
    4. '(
' → logprob: -8.528205871582031
    5. ' (' → logprob: -10.903205871582031
    6. 'self' → logprob: -12.028205871582031
    7. ')' → logprob: -12.153205871582031
    8. '       ' → logprob: -12.403205871582031
    9. '(

' → logprob: -12.403205871582031
    10. '(s' → logprob: -12.653205871582031

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003907543432433158
    2. ' )' → logprob: -8.125391006469727
    3. '):' → logprob: -9.875391006469727
    4. '):
' → logprob: -11.250391006469727
    5. '   ' → logprob: -11.500391006469727
    6. '()' → logprob: -11.625391006469727
    7. ' ' → logprob: -11.875391006469727
    8. '       ' → logprob: -13.500391006469727
    9. ' ):' → logprob: -14.500391006469727
    10. '	' → logprob: -14.750391006469727

Token 118: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.004343121778219938
    2. ')' → logprob: -5.754343032836914
    3. '->' → logprob: -7.004343032836914
    4. ':' → logprob: -9.379343032836914
    5. '()' → logprob: -9.629343032836914
    6. '       ' → logprob: -10.879343032836914
    7. '(self' → logprob: -11.004343032836914
    8. '(' → logprob: -11.504343032836914
    9. ' ' → logprob: -11.504343032836914
    10. '   ' → logprob: -11.629343032836914

Token 119: ' str' (ID: 989)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16152536869049072
    2. ' str' → logprob: -2.161525249481201
    3. 'self' → logprob: -3.411525249481201
    4. 'str' → logprob: -7.411525249481201
    5. ' ' → logprob: -7.911525249481201
    6. ' char' → logprob: -11.41152572631836
    7. ' ' → logprob: -11.78652572631836
    8. ' '' → logprob: -12.03652572631836
    9. 's' → logprob: -12.03652572631836
    10. ' s' → logprob: -12.91152572631836

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013503716327250004
    2. ':
' → logprob: -4.513503551483154
    3. '       ' → logprob: -6.513503551483154
    4. '():' → logprob: -8.388504028320312
    5. ':return' → logprob: -8.513504028320312
    6. ' :' → logprob: -8.888504028320312
    7. 'return' → logprob: -9.138504028320312
    8. ' return' → logprob: -9.513504028320312
    9. ' ->' → logprob: -9.513504028320312
    10. '():
' → logprob: -10.013504028320312

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8032423257827759
    2. 'return' → logprob: -0.8032423257827759
    3. ' return' → logprob: -2.5532422065734863
    4. 'self' → logprob: -3.6782422065734863
    5. ' self' → logprob: -6.803242206573486
    6. '{return' → logprob: -11.303242683410645
    7. '   ' → logprob: -11.678242683410645
    8. '```' → logprob: -12.178242683410645
    9. '	return' → logprob: -12.428242683410645
    10. ':return' → logprob: -12.928242683410645

Token 122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031088316813111305
    2. ' return' → logprob: -3.531088352203369
    3. 'self' → logprob: -6.656088352203369
    4. '       ' → logprob: -10.156087875366211
    5. ' self' → logprob: -11.531087875366211
    6. '	return' → logprob: -14.031087875366211
    7. ' ' → logprob: -15.031087875366211
    8. '   ' → logprob: -15.781087875366211
    9. '```' → logprob: -15.781087875366211
    10. 'ret' → logprob: -16.03108787536621

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687849044799805
    2. ' self' → logprob: -1.136878490447998
    3. '	self' → logprob: -13.011878967285156
    4. '   ' → logprob: -13.136878967285156
    5. ' ' → logprob: -13.386878967285156
    6. ' ' → logprob: -14.261878967285156
    7. '(self' → logprob: -15.636878967285156
    8. '```' → logprob: -16.386878967285156
    9. 'elf' → logprob: -16.511878967285156
    10. 's' → logprob: -16.511878967285156

Token 124: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.00023333763238042593
    2. 'char' → logprob: -8.37523365020752
    3. '.count' → logprob: -13.25023365020752
    4. '<char' → logprob: -15.00023365020752
    5. ' char' → logprob: -15.25023365020752
    6. '	char' → logprob: -15.87523365020752
    7. '.' → logprob: -15.87523365020752
    8. '_char' → logprob: -16.875232696533203
    9. '(char' → logprob: -17.000232696533203
    10. '.repeat' → logprob: -17.500232696533203

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00892842747271061
    2. '*' → logprob: -4.883928298950195
    3. '*self' → logprob: -6.633928298950195
    4. ' ' → logprob: -13.008928298950195
    5. ' ' → logprob: -13.508928298950195
    6. 'self' → logprob: -13.758928298950195
    7. '**' → logprob: -14.758928298950195
    8. ' **' → logprob: -14.883928298950195
    9. ' self' → logprob: -15.258928298950195
    10. '```' → logprob: -16.008928298950195

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -18.75007438659668
    4. '(self' → logprob: -19.37507438659668
    5. '	self' → logprob: -20.12507438659668
    6. '   ' → logprob: -20.50007438659668
    7. '[self' → logprob: -21.12507438659668
    8. ' ' → logprob: -22.25007438659668
    9. '```' → logprob: -22.50007438659668
    10. '​' → logprob: -22.62507438659668

Token 127: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00020616286201402545
    2. 'count' → logprob: -8.500205993652344
    3. '.' → logprob: -13.250205993652344
    4. 'ount' → logprob: -14.125205993652344
    5. ' .' → logprob: -16.250205993652344
    6. '	count' → logprob: -16.750205993652344
    7. ' count' → logprob: -17.125205993652344
    8. 'Count' → logprob: -17.250205993652344
    9. '.Count' → logprob: -17.875205993652344
    10. '$count' → logprob: -17.875205993652344

Token 128: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07917222380638123
    2. '
' → logprob: -2.704172134399414
    3. '

' → logprob: -4.829172134399414
    4. '


' → logprob: -7.079172134399414
    5. ' class' → logprob: -8.829172134399414
    6. '
' → logprob: -9.454172134399414
    7. '```' → logprob: -10.329172134399414
    8. 'def' → logprob: -10.454172134399414
    9. '<class' → logprob: -10.954172134399414
    10. 'from' → logprob: -11.579172134399414

Token 129: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00020115631923545152
    2. 'def' → logprob: -8.625201225280762
    3. '
' → logprob: -10.875201225280762
    4. ' class' → logprob: -14.375201225280762
    5. '"class' → logprob: -14.375201225280762
    6. '```' → logprob: -14.375201225280762
    7. '

' → logprob: -15.000201225280762
    8. 'clas' → logprob: -15.750201225280762
    9. '<class' → logprob: -16.125200271606445
    10. '  
' → logprob: -16.625200271606445

Token 130: ' Token' (ID: 17951)
  Prédit: ' Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Token' → logprob: -0.5285190343856812
    2. ' De' → logprob: -1.0285190343856812
    3. 'Token' → logprob: -4.528519153594971
    4. ' Com' → logprob: -4.528519153594971
    5. ' Parser' → logprob: -4.778519153594971
    6. 'De' → logprob: -5.028519153594971
    7. ' Decoder' → logprob: -5.528519153594971
    8. ' Composite' → logprob: -6.403519153594971
    9. ' Compressor' → logprob: -6.653519153594971
    10. 'Tokenizer' → logprob: -6.903519153594971

Token 131: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.11414171010255814
    2. 'Stream' → logprob: -2.3641417026519775
    3. 'Iterator' → logprob: -4.364141941070557
    4. 'Reader' → logprob: -7.239141941070557
    5. 'Parser' → logprob: -8.239141464233398
    6. 'Generator' → logprob: -10.239141464233398
    7. 'Processor' → logprob: -10.489141464233398
    8. 'Streamer' → logprob: -11.114141464233398
    9. 'IZER' → logprob: -11.364141464233398
    10. 'ize' → logprob: -11.614141464233398

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020492668263614178
    2. '(' → logprob: -6.252049446105957
    3. ':
' → logprob: -9.252049446105957
    4. '():' → logprob: -11.002049446105957
    5. '(Token' → logprob: -13.127049446105957
    6. '(object' → logprob: -13.502049446105957
    7. ' :' → logprob: -13.627049446105957
    8. '(Abstract' → logprob: -13.752049446105957
    9. ':

' → logprob: -14.127049446105957
    10. ':def' → logprob: -14.627049446105957

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04332343861460686
    2. ' def' → logprob: -3.168323516845703
    3. 'def' → logprob: -8.168323516845703
    4. ' indentation' → logprob: -10.793323516845703
    5. '    
' → logprob: -12.043323516845703
    6. '   ' → logprob: -12.543323516845703
    7. ' ind' → logprob: -12.918323516845703
    8. '	def' → logprob: -13.043323516845703
    9. ' indent' → logprob: -13.418323516845703
    10. '   ' → logprob: -14.293323516845703

Token 134: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.038091402500867844
    2. 'def' (adapté à ' def') → logprob: -3.2880914211273193
    3. '   ' → logprob: -9.913091659545898
    4. '	def' → logprob: -15.788091659545898
    5. ' ' → logprob: -16.1630916595459
    6. ' pattern' → logprob: -16.6630916595459
    7. 'pattern' → logprob: -17.1630916595459
    8. 'de' → logprob: -17.4130916595459
    9. '    
' → logprob: -18.1630916595459
    10. ' 
' → logprob: -18.1630916595459

Token 135: ' __' (ID: 2516)
  Prédit: ' init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.17893804609775543
    2. ' __' → logprob: -2.553938150405884
    3. ' def' → logprob: -2.803938150405884
    4. 'init' → logprob: -3.928938150405884
    5. '_init' → logprob: -5.553937911987305
    6. ' iter' → logprob: -6.428937911987305
    7. ' iterate' → logprob: -8.928937911987305
    8. '_iter' → logprob: -9.803937911987305
    9. ' tokenize' → logprob: -10.428937911987305
    10. ' _' → logprob: -10.803937911987305

Token 136: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. 'iter' → logprob: -14.125001907348633
    3. 'in' → logprob: -14.875001907348633
    4. 'ini' → logprob: -15.125001907348633
    5. ' init' → logprob: -16.500001907348633
    6. '_init' → logprob: -18.375001907348633
    7. 'inite' → logprob: -19.500001907348633
    8. 'call' → logprob: -19.625001907348633
    9. 'nit' → logprob: -19.750001907348633
    10. '	init' → logprob: -19.875001907348633

Token 137: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10154924541711807
    2. '(self' → logprob: -2.3515491485595703
    3. '(' → logprob: -6.97654914855957
    4. '__(
' → logprob: -8.35154914855957
    5. 'self' → logprob: -9.47654914855957
    6. ' (' → logprob: -10.47654914855957
    7. '_(' → logprob: -10.97654914855957
    8. ')(' → logprob: -11.22654914855957
    9. '<>(' → logprob: -11.35154914855957
    10. '__' → logprob: -11.47654914855957

Token 138: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.0722858102526516e-05
    2. ' self' → logprob: -10.375041007995605
    3. '
' → logprob: -11.750041007995605
    4. '   ' → logprob: -14.000041007995605
    5. '       ' → logprob: -14.375041007995605
    6. '(self' → logprob: -17.00004005432129
    7. 's' → logprob: -17.37504005432129
    8. '0' → logprob: -17.87504005432129
    9. '	self' → logprob: -18.25004005432129
    10. ')' → logprob: -18.25004005432129

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2647630572319031
    2. 'self' → logprob: -1.5147631168365479
    3. ' self' → logprob: -4.389762878417969
    4. ' ,' → logprob: -8.139762878417969
    5. '   ' → logprob: -11.014762878417969
    6. '(self' → logprob: -11.389762878417969
    7. '       ' → logprob: -11.764762878417969
    8. ',self' → logprob: -12.014762878417969
    9. 's' → logprob: -12.639762878417969
    10. ' (' → logprob: -12.889762878417969

Token 140: ' data' (ID: 1238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40522605180740356
    2. ' self' → logprob: -1.1552259922027588
    3. 'text' → logprob: -4.655226230621338
    4. ' text' → logprob: -5.155226230621338
    5. ' data' → logprob: -6.530226230621338
    6. 'data' → logprob: -7.155226230621338
    7. ' s' → logprob: -8.40522575378418
    8. ' input' → logprob: -8.78022575378418
    9. 's' → logprob: -9.40522575378418
    10. 'input' → logprob: -9.65522575378418

Token 141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028970264247618616
    2. ':str' → logprob: -8.250289916992188
    3. ' :' → logprob: -11.000289916992188
    4. '):' → logprob: -12.000289916992188
    5. '_:' → logprob: -12.625289916992188
    6. '):
' → logprob: -13.625289916992188
    7. ')' → logprob: -14.875289916992188
    8. '   ' → logprob: -15.250289916992188
    9. '_str' → logprob: -15.625289916992188
    10. ',' → logprob: -16.500289916992188

Token 142: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.1269388198852539
    2. 'str' → logprob: -2.126938819885254
    3. ')' → logprob: -12.501938819885254
    4. ':str' → logprob: -12.876938819885254
    5. '[str' → logprob: -13.626938819885254
    6. '	str' → logprob: -13.751938819885254
    7. '   ' → logprob: -14.376938819885254
    8. ' ' → logprob: -14.376938819885254
    9. '):
' → logprob: -15.876938819885254
    10. '(str' → logprob: -15.876938819885254

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006843241862952709
    2. ')' → logprob: -5.256843090057373
    3. '):
' → logprob: -6.506843090057373
    4. ' ):' → logprob: -9.756843566894531
    5. ':' → logprob: -10.256843566894531
    6. ',' → logprob: -10.881843566894531
    7. '   ' → logprob: -13.631843566894531
    8. '):
' → logprob: -13.881843566894531
    9. ' )' → logprob: -14.506843566894531
    10. ' ' → logprob: -16.13184356689453

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007108540274202824
    2. 'self' → logprob: -5.132108688354492
    3. ' self' → logprob: -6.757108688354492
    4. '   ' → logprob: -11.132108688354492
    5. '	self' → logprob: -13.882108688354492
    6. ' ' → logprob: -15.132108688354492
    7. '      ' → logprob: -15.132108688354492
    8. '	' → logprob: -16.632108688354492
    9. '           ' → logprob: -16.757108688354492
    10. ',' → logprob: -16.882108688354492

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002363636391237378
    2. ' self' → logprob: -6.252363681793213
    3. '       ' → logprob: -7.752363681793213
    4. '   ' → logprob: -12.752363204956055
    5. '
' → logprob: -13.252363204956055
    6. '        
' → logprob: -15.252363204956055
    7. '	self' → logprob: -15.752363204956055
    8. '        ' → logprob: -16.877363204956055
    9. ' ' → logprob: -17.377363204956055
    10. '    ' → logprob: -17.627363204956055

Token 146: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0051686507649719715
    2. ' .' → logprob: -5.755168437957764
    3. 'data' → logprob: -6.880168437957764
    4. '.' → logprob: -8.130168914794922
    5. ' data' → logprob: -8.630168914794922
    6. ' =' → logprob: -8.755168914794922
    7. '_data' → logprob: -9.005168914794922
    8. '=data' → logprob: -9.255168914794922
    9. '._' → logprob: -9.505168914794922
    10. '=' → logprob: -11.755168914794922

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3617691695690155
    2. '=' → logprob: -1.236769199371338
    3. '_' → logprob: -5.236769199371338
    4. ':' → logprob: -5.486769199371338
    5. '_index' → logprob: -6.611769199371338
    6. '_idx' → logprob: -6.861769199371338
    7. ')' → logprob: -7.861769199371338
    8. '_len' → logprob: -8.11176872253418
    9. ',' → logprob: -8.61176872253418
    10. '_length' → logprob: -8.73676872253418

Token 148: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5759398937225342
    2. ' data' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.950940132141113
    4. '	data' → logprob: -16.075939178466797
    5. '$data' → logprob: -17.200939178466797
    6. '    ' → logprob: -17.325939178466797
    7. '_data' → logprob: -17.575939178466797
    8. '(data' → logprob: -17.950939178466797
    9. ')data' → logprob: -18.325939178466797
    10. '\data' → logprob: -18.575939178466797

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06643394380807877
    2. '       ' → logprob: -2.941433906555176
    3. '   ' → logprob: -4.566433906555176
    4. '    
' → logprob: -8.316433906555176
    5. ',' → logprob: -8.566433906555176
    6. '<|end|>' → logprob: -8.566433906555176
    7. ',
' → logprob: -9.191433906555176
    8. ' 
' → logprob: -9.441433906555176
    9. 'self' → logprob: -9.816433906555176
    10. ' ' → logprob: -10.066433906555176

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005266957450658083
    2. 'self' → logprob: -6.005267143249512
    3. '
' → logprob: -6.255267143249512
    4. ' self' → logprob: -7.630267143249512
    5. '   ' → logprob: -8.130267143249512
    6. 'def' → logprob: -10.380267143249512
    7. ',' → logprob: -10.880267143249512
    8. '<|end|>' → logprob: -11.505267143249512
    9. ' ' → logprob: -11.755267143249512
    10. '    
' → logprob: -13.130267143249512

Token 151: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001547002699226141
    2. ' self' → logprob: -6.501546859741211
    3. '       ' → logprob: -10.751546859741211
    4. '0' → logprob: -11.001546859741211
    5. '   ' → logprob: -12.001546859741211
    6. ' ' → logprob: -15.501546859741211
    7. '	self' → logprob: -16.12654685974121
    8. '           ' → logprob: -16.75154685974121
    9. '1' → logprob: -18.00154685974121
    10. '        
' → logprob: -18.25154685974121

Token 152: '.pos' (ID: 25321)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.7088921070098877
    2. '.pos' → logprob: -0.7088921070098877
    3. '.position' → logprob: -4.208891868591309
    4. '.idx' → logprob: -7.833891868591309
    5. '._' → logprob: -8.583891868591309
    6. 'pos' → logprob: -9.458891868591309
    7. 'index' → logprob: -10.083891868591309
    8. '.data' → logprob: -11.458891868591309
    9. '.length' → logprob: -11.458891868591309
    10. '.i' → logprob: -11.583891868591309

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009765060618519783
    2. '=' → logprob: -4.634765148162842
    3. ' ' → logprob: -11.759764671325684
    4. ' +=' → logprob: -14.634764671325684
    5. '_' → logprob: -15.634764671325684
    6. ':' → logprob: -15.884764671325684
    7. '0' → logprob: -16.134765625
    8. ' =)' → logprob: -16.259765625
    9. ',' → logprob: -16.759765625
    10. ')' → logprob: -16.884765625

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '<|end|>' → logprob: -20.26104736328125
    4. '۰' → logprob: -20.63604736328125
    5. '```' → logprob: -21.38604736328125
    6. '1' → logprob: -21.63604736328125
    7. '  ' → logprob: -21.69854736328125
    8. ' 
' → logprob: -21.82354736328125
    9. ' ' → logprob: -21.88604736328125
    10. '   ' → logprob: -22.26104736328125

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -18.500003814697266
    4. '```' → logprob: -20.375003814697266
    5. '[' → logprob: -20.875003814697266
    6. '`' → logprob: -21.125003814697266
    7. '０' → logprob: -21.687503814697266
    8. '০' → logprob: -21.812503814697266
    9. '٠' → logprob: -21.937503814697266
    10. '   ' → logprob: -22.125003814697266

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2917860150337219
    2. '<|end|>' → logprob: -1.7917859554290771
    3. '

' → logprob: -3.041785955429077
    4. 'def' → logprob: -4.166786193847656
    5. '<|end|>' → logprob: -4.666786193847656
    6. '   ' → logprob: -4.791786193847656
    7. ' def' → logprob: -5.916786193847656
    8. '    
' → logprob: -6.416786193847656
    9. '```' → logprob: -7.916786193847656
    10. '	def' → logprob: -9.416786193847656

Token 157: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3816053569316864
    2. '<|end|>' → logprob: -1.6316053867340088
    3. '

' → logprob: -3.006605386734009
    4. '   ' → logprob: -3.631605386734009
    5. 'def' → logprob: -3.881605386734009
    6. '<|end|>' → logprob: -4.38160514831543
    7. '    
' → logprob: -5.50660514831543
    8. '```' → logprob: -5.88160514831543
    9. ' def' → logprob: -6.50660514831543
    10. '  
' → logprob: -6.75660514831543

Token 158: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00226040231063962
    2. ' def' → logprob: -6.377260208129883
    3. '   ' → logprob: -8.877260208129883
    4. '<|end|>' → logprob: -9.002260208129883
    5. '
' → logprob: -9.252260208129883
    6. '    
' → logprob: -9.627260208129883
    7. 'self' (adapté à ' self') → logprob: -10.377260208129883
    8. '    

' → logprob: -10.627260208129883
    9. '<|end|>' → logprob: -11.002260208129883
    10. '        
' → logprob: -11.502260208129883

Token 159: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.40010523796081543
    2. ' length' → logprob: -2.0251052379608154
    3. '.len' → logprob: -2.5251052379608154
    4. 'length' → logprob: -3.1501052379608154
    5. 'len' → logprob: -3.6501052379608154
    6. ' .' → logprob: -4.0251054763793945
    7. '.' → logprob: -4.7751054763793945
    8. '.data' → logprob: -5.4001054763793945
    9. '_len' → logprob: -5.5251054763793945
    10. '._' → logprob: -5.7751054763793945

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061973731964826584
    2. '=' → logprob: -2.811973810195923
    3. '=len' → logprob: -12.436973571777344
    4. ' ' → logprob: -13.061973571777344
    5. ' =
' → logprob: -17.561973571777344
    6. '   ' → logprob: -17.811973571777344
    7. 'len' → logprob: -18.561973571777344
    8. '    ' → logprob: -18.936973571777344
    9. ' ==' → logprob: -19.061973571777344
    10. ',' → logprob: -19.186973571777344

Token 161: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1602245420217514
    2. 'len' → logprob: -1.9102245569229126
    3. '(len' → logprob: -16.03522491455078
    4. '	len' → logprob: -16.16022491455078
    5. '=len' → logprob: -16.91022491455078
    6. '[len' → logprob: -17.66022491455078
    7. ' ' → logprob: -17.78522491455078
    8. '   ' → logprob: -17.78522491455078
    9. ',len' → logprob: -19.03522491455078
    10. '<len' → logprob: -19.28522491455078

Token 162: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.003301293356344104
    2. '(self' → logprob: -5.75330114364624
    3. '(' → logprob: -9.003301620483398
    4. 'data' → logprob: -14.628301620483398
    5. '(
' → logprob: -16.2533016204834
    6. 'self' → logprob: -17.7533016204834
    7. '(dat' → logprob: -18.5033016204834
    8. ' (' → logprob: -19.2533016204834
    9. '(this' → logprob: -19.7533016204834
    10. '(s' → logprob: -20.3783016204834

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -13.375004768371582
    3. ' )' → logprob: -13.375004768371582
    4. '<|end|>' → logprob: -14.000004768371582
    5. '}' → logprob: -15.375004768371582
    6. ' ' → logprob: -16.750003814697266
    7. '),' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. ')

' → logprob: -17.250003814697266

Token 164: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.317536324262619
    2. 'def' → logprob: -2.1925363540649414
    3. '   ' → logprob: -2.5675363540649414
    4. ' def' → logprob: -3.5675363540649414
    5. '    
' → logprob: -3.9425363540649414
    6. '<|end|>' → logprob: -4.317536354064941
    7. '  
' → logprob: -5.067536354064941
    8. '

' → logprob: -5.192536354064941
    9. ' 
' → logprob: -5.567536354064941
    10. '```' → logprob: -5.692536354064941

Token 165: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018209058791399002
    2. ' def' → logprob: -4.018208980560303
    3. '   ' → logprob: -9.768209457397461
    4. 'de' → logprob: -14.018209457397461
    5. 'd' → logprob: -14.518209457397461
    6. ' 
' → logprob: -15.143209457397461
    7. '    
' → logprob: -16.26820945739746
    8. '```' → logprob: -16.51820945739746
    9. ' ' → logprob: -17.01820945739746
    10. '    ' → logprob: -17.14320945739746

Token 166: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002540943678468466
    2. ' __' → logprob: -6.5025410652160645
    3. '_next' → logprob: -7.8775410652160645
    4. '_iter' → logprob: -8.752540588378906
    5. 'next' → logprob: -8.752540588378906
    6. '_token' → logprob: -8.752540588378906
    7. 'def' → logprob: -9.252540588378906
    8. 'token' → logprob: -9.877540588378906
    9. '_iterator' → logprob: -11.627540588378906
    10. '_tokens' → logprob: -11.877540588378906

Token 167: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -5.836499985889532e-05
    2. 'next' → logprob: -9.7500581741333
    3. 'iterator' → logprob: -19.250059127807617
    4. 'init' → logprob: -19.375059127807617
    5. 'len' → logprob: -20.375059127807617
    6. '_iter' → logprob: -21.750059127807617
    7. ' iter' → logprob: -22.000059127807617
    8. 'iterate' → logprob: -23.125059127807617
    9. 'ait' → logprob: -23.375059127807617
    10. 'call' → logprob: -23.875059127807617

Token 168: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00012523093027994037
    2. '__' → logprob: -9.00012493133545
    3. '__(
' → logprob: -13.25012493133545
    4. '__('' → logprob: -17.375125885009766
    5. '__("' → logprob: -18.875125885009766
    6. '__((' → logprob: -19.375125885009766
    7. '__

' → logprob: -19.625125885009766
    8. '_(' → logprob: -20.000125885009766
    9. '(self' → logprob: -20.375125885009766
    10. '_' → logprob: -20.500125885009766

Token 169: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002783783129416406
    2. ')' → logprob: -8.25027847290039
    3. ' self' → logprob: -11.00027847290039
    4. '
' → logprob: -15.87527847290039
    5. '   ' → logprob: -16.37527847290039
    6. '	self' → logprob: -16.50027847290039
    7. '(self' → logprob: -17.25027847290039
    8. '):
' → logprob: -17.75027847290039
    9. ')
' → logprob: -18.00027847290039
    10. ' ' → logprob: -18.50027847290039

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20332607626914978
    2. '):' → logprob: -1.7033261060714722
    3. '):
' → logprob: -6.578326225280762
    4. 'self' → logprob: -7.703326225280762
    5. '   ' → logprob: -11.328326225280762
    6. ' )' → logprob: -11.453326225280762
    7. ' ):' → logprob: -11.453326225280762
    8. '(self' → logprob: -11.953326225280762
    9. ')->' → logprob: -12.203326225280762
    10. ':' → logprob: -12.203326225280762

Token 171: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022453267127275467
    2. '->' → logprob: -4.522453308105469
    3. ' ->' → logprob: -5.022453308105469
    4. 'self' → logprob: -6.147453308105469
    5. ':' → logprob: -6.397453308105469
    6. ')' → logprob: -7.397453308105469
    7. '(' → logprob: -8.397453308105469
    8. '   ' → logprob: -9.897453308105469
    9. 'def' → logprob: -10.647453308105469
    10. ':
' → logprob: -11.397453308105469

Token 172: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.5760759711265564
    2. ' Iterator' → logprob: -0.8260759711265564
    3. '	Iterator' → logprob: -9.201075553894043
    4. '"' → logprob: -11.701075553894043
    5. ''' → logprob: -11.701075553894043
    6. ' ' → logprob: -11.826075553894043
    7. ' '' → logprob: -12.076075553894043
    8. '_iterator' → logprob: -13.201075553894043
    9. '.Iterator' → logprob: -13.826075553894043
    10. '   ' → logprob: -13.951075553894043

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. '[
' → logprob: -13.375003814697266
    3. '[token' → logprob: -13.625003814697266
    4. 'Token' → logprob: -15.000003814697266
    5. '<Token' → logprob: -15.000003814697266
    6. ' [' → logprob: -15.625003814697266
    7. '	Token' → logprob: -16.125003814697266
    8. '(Token' → logprob: -16.375003814697266
    9. ' ' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.625003814697266

Token 174: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -5.438573680294212e-06
    2. ' Token' → logprob: -12.250005722045898
    3. '	Token' → logprob: -14.875005722045898
    4. 'str' → logprob: -15.875005722045898
    5. '[' → logprob: -16.1250057220459
    6. 'Tokenizer' → logprob: -17.8750057220459
    7. 'token' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.2500057220459
    9. '_token' → logprob: -19.5000057220459
    10. '(Token' → logprob: -19.5000057220459

Token 175: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.012293950654566288
    2. ':' → logprob: -4.762293815612793
    3. '):' → logprob: -6.012293815612793
    4. ']' → logprob: -7.387293815612793
    5. '>:' → logprob: -7.762293815612793
    6. ']:
' → logprob: -9.137293815612793
    7. '>' → logprob: -10.762293815612793
    8. '   ' → logprob: -10.887293815612793
    9. '}:' → logprob: -11.762293815612793
    10. ']:
' → logprob: -12.262293815612793

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -12.125021934509277
    3. ' while' → logprob: -12.250021934509277
    4. 'while' → logprob: -13.000021934509277
    5. '
' → logprob: -13.125021934509277
    6. '	' → logprob: -13.875021934509277
    7. ' return' → logprob: -13.875021934509277
    8. 'return' → logprob: -14.125021934509277
    9. 'def' → logprob: -14.375021934509277
    10. '      ' → logprob: -14.375021934509277

Token 177: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11480947583913803
    2. 'while' (adapté à ' while') → logprob: -2.614809513092041
    3. 'return' → logprob: -4.114809513092041
    4. ' while' → logprob: -4.114809513092041
    5. ' return' → logprob: -5.989809513092041
    6. '   ' → logprob: -9.364809036254883
    7. '    ' → logprob: -11.864809036254883
    8. ' ' → logprob: -12.114809036254883
    9. '        
' → logprob: -12.614809036254883
    10. '	while' → logprob: -12.739809036254883

Token 178: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17981213331222534
    2. 'self' → logprob: -1.8048121929168701
    3. '	self' → logprob: -9.80481243133545
    4. ' True' → logprob: -13.05481243133545
    5. '_self' → logprob: -13.17981243133545
    6. ' ' → logprob: -13.30481243133545
    7. '(self' → logprob: -13.30481243133545
    8. 'True' → logprob: -13.30481243133545
    9. '   ' → logprob: -14.42981243133545
    10. 'Self' → logprob: -14.55481243133545

Token 179: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00010187433508690447
    2. '.' → logprob: -9.250102043151855
    3. 'pos' → logprob: -12.250102043151855
    4. '.<' → logprob: -15.000102043151855
    5. ' .' → logprob: -15.125102043151855
    6. 'self' → logprob: -16.37510108947754
    7. '[pos' → logprob: -16.87510108947754
    8. '.self' → logprob: -17.12510108947754
    9. '<' → logprob: -17.37510108947754
    10. '.has' → logprob: -17.50010108947754

Token 180: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00672448705881834
    2. '<' → logprob: -5.0067243576049805
    3. ' ' → logprob: -11.75672435760498
    4. '<len' → logprob: -14.38172435760498
    5. '[' → logprob: -15.88172435760498
    6. ' <
' → logprob: -16.006725311279297
    7. '<n' → logprob: -16.131725311279297
    8. '<size' → logprob: -16.381725311279297
    9. '<m' → logprob: -16.631725311279297
    10. '<class' → logprob: -16.881725311279297

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1002088338136673
    2. ' self' → logprob: -2.3502087593078613
    3. 'len' → logprob: -13.35020923614502
    4. ' len' → logprob: -14.85020923614502
    5. '	self' → logprob: -16.475208282470703
    6. ' ' → logprob: -17.350208282470703
    7. 'elf' → logprob: -17.600208282470703
    8. '_self' → logprob: -17.600208282470703
    9. '
' → logprob: -17.725208282470703
    10. '   ' → logprob: -18.100208282470703

Token 182: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.771655115589965e-05
    2. 'ength' → logprob: -11.375018119812012
    3. '.len' → logprob: -12.875018119812012
    4. '.' → logprob: -13.375018119812012
    5. '.l' → logprob: -14.125018119812012
    6. '.data' → logprob: -14.375018119812012
    7. 'length' → logprob: -14.500018119812012
    8. ' .' → logprob: -15.875018119812012
    9. ':length' → logprob: -16.500017166137695
    10. '.width' → logprob: -17.375017166137695

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029180420096963644
    2. ':
' → logprob: -5.877918243408203
    3. ' :' → logprob: -9.127918243408203
    4. ' :
' → logprob: -12.877918243408203
    5. ' and' → logprob: -13.377918243408203
    6. ':

' → logprob: -15.877918243408203
    7. '):' → logprob: -16.377918243408203
    8. ':def' → logprob: -16.502918243408203
    9. 'and' → logprob: -16.752918243408203
    10. ',' → logprob: -17.002918243408203

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10878653824329376
    2. ' if' → logprob: -2.4837865829467773
    3. ' c' → logprob: -4.358786582946777
    4. 'if' → logprob: -5.358786582946777
    5. ' char' → logprob: -7.108786582946777
    6. 'char' → logprob: -7.733786582946777
    7. 'c' → logprob: -8.233786582946777
    8. 'ch' → logprob: -8.358786582946777
    9. '   ' → logprob: -9.108786582946777
    10. ' ch' → logprob: -9.983786582946777

Token 185: ' ch' (ID: 549)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.529836893081665
    2. 'if' → logprob: -1.029836893081665
    3. 'ch' (adapté à ' ch') → logprob: -3.654836893081665
    4. 'c' → logprob: -3.779836893081665
    5. '           ' → logprob: -5.904836654663086
    6. 'current' → logprob: -6.404836654663086
    7. ' if' → logprob: -7.029836654663086
    8. ' char' → logprob: -8.404836654663086
    9. 'cur' → logprob: -11.029836654663086
    10. 'curr' → logprob: -11.279836654663086

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10049822181463242
    2. '=' → logprob: -2.3504981994628906
    3. ' ' → logprob: -8.60049819946289
    4. 'ar' → logprob: -9.47549819946289
    5. '=self' → logprob: -11.47549819946289
    6. '   ' → logprob: -11.85049819946289
    7. '  ' → logprob: -12.47549819946289
    8. '       ' → logprob: -13.35049819946289
    9. 'r' → logprob: -13.47549819946289
    10. ' =
' → logprob: -13.47549819946289

Token 187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022838652133942
    2. ' self' → logprob: -1.9102283716201782
    3. '`' → logprob: -14.160228729248047
    4. ' ' → logprob: -14.410228729248047
    5. '=self' → logprob: -14.535228729248047
    6. '(self' → logprob: -14.785228729248047
    7. '	self' → logprob: -15.035228729248047
    8. '
' → logprob: -15.160228729248047
    9. ' 
' → logprob: -15.785228729248047
    10. '[self' → logprob: -15.785228729248047

Token 188: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -1.8193366486229934e-05
    2. '.' → logprob: -11.375018119812012
    3. 'data' → logprob: -12.500018119812012
    4. ' .' → logprob: -12.875018119812012
    5. '
' → logprob: -16.250019073486328
    6. '.current' → logprob: -17.375019073486328
    7. '.
' → logprob: -17.750019073486328
    8. ' data' → logprob: -17.875019073486328
    9. '.char' → logprob: -17.875019073486328
    10. '`.' → logprob: -17.875019073486328

Token 189: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.001460354425944388
    2. 'self' → logprob: -6.626460552215576
    3. '[' → logprob: -9.251460075378418
    4. ' self' → logprob: -10.501460075378418
    5. ' [' → logprob: -12.751460075378418
    6. '           ' → logprob: -13.001460075378418
    7. '[
' → logprob: -13.001460075378418
    8. '[s' → logprob: -13.626460075378418
    9. '=self' → logprob: -14.251460075378418
    10. '   ' → logprob: -14.876460075378418

Token 190: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00020544764993246645
    2. 'pos' → logprob: -8.500205039978027
    3. '.' → logprob: -13.625205039978027
    4. '	pos' → logprob: -15.500205039978027
    5. '.p' → logprob: -15.750205039978027
    6. '_pos' → logprob: -16.000205993652344
    7. ' .' → logprob: -16.625205993652344
    8. '[pos' → logprob: -16.875205993652344
    9. '.po' → logprob: -17.125205993652344
    10. 'Pos' → logprob: -17.250205993652344

Token 191: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003672282909974456
    2. ' ]' → logprob: -6.003672122955322
    3. ']
' → logprob: -6.753672122955322
    4. '           ' → logprob: -11.12867259979248
    5. ']

' → logprob: -12.37867259979248
    6. ' ]
' → logprob: -12.50367259979248
    7. ')' → logprob: -13.50367259979248
    8. '            ' → logprob: -14.25367259979248
    9. ']
' → logprob: -14.25367259979248
    10. '
' → logprob: -14.62867259979248

Token 192: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35977184772491455
    2. 'if' (adapté à ' if') → logprob: -1.3597718477249146
    3. '           ' → logprob: -3.359771728515625
    4. ' ' → logprob: -5.234771728515625
    5. '            ' → logprob: -5.859771728515625
    6. '            
' → logprob: -6.859771728515625
    7. ' 
' → logprob: -7.234771728515625
    8. 'self' → logprob: -8.734771728515625
    9. '    ' → logprob: -8.984771728515625
    10. ' self' → logprob: -9.359771728515625

Token 194: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.16061687469482422
    2. 'ch' → logprob: -1.9106168746948242
    3. ' not' → logprob: -8.285616874694824
    4. ''' → logprob: -10.035616874694824
    5. ' '' → logprob: -10.660616874694824
    6. ' ' → logprob: -10.910616874694824
    7. 'not' → logprob: -11.598116874694824
    8. ''ch' → logprob: -11.723116874694824
    9. '  ' → logprob: -11.848116874694824
    10. '	ch' → logprob: -11.910616874694824

Token 195: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03776165843009949
    2. '==' → logprob: -3.412761688232422
    3. ' !=' → logprob: -6.412761688232422
    4. '.is' → logprob: -7.037761688232422
    5. '[' → logprob: -7.537761688232422
    6. '.' → logprob: -8.412761688232422
    7. ' ' → logprob: -8.412761688232422
    8. 'isdigit' → logprob: -9.162761688232422
    9. ' =='' → logprob: -9.162761688232422
    10. '=='' → logprob: -9.537761688232422

Token 196: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012252388522028923
    2. '"' → logprob: -5.387252330780029
    3. ' '('' → logprob: -5.387252330780029
    4. ''{' → logprob: -7.262252330780029
    5. ''^' → logprob: -7.762252330780029
    6. ''%' → logprob: -8.137252807617188
    7. ' '' → logprob: -8.512252807617188
    8. ' '['' → logprob: -8.512252807617188
    9. ''*' → logprob: -8.637252807617188
    10. ''#' → logprob: -8.637252807617188

Token 197: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4198833703994751
    2. '':
' → logprob: -1.544883370399475
    3. ''' → logprob: -2.1698832511901855
    4. '{' → logprob: -5.6698832511901855
    5. '['' → logprob: -5.6698832511901855
    6. ' ':' → logprob: -6.0448832511901855
    7. ':' → logprob: -6.2948832511901855
    8. '@' → logprob: -6.2948832511901855
    9. ' '' → logprob: -6.5448832511901855
    10. '(':' → logprob: -8.294883728027344

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011688163504004478
    2. ' self' → logprob: -5.511688232421875
    3. 'self' → logprob: -5.761688232421875
    4. '<|end|>' → logprob: -6.886688232421875
    5. ' if' → logprob: -7.261688232421875
    6. ',' → logprob: -7.761688232421875
    7. '                
' → logprob: -7.761688232421875
    8. '                ' → logprob: -8.011688232421875
    9. '           ' → logprob: -8.261688232421875
    10. '#' → logprob: -8.511688232421875

Token 199: ' yield' (ID: 14376)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08858364075422287
    2. ' self' → logprob: -2.8385837078094482
    3. 'if' → logprob: -4.463583469390869
    4. '#' → logprob: -5.713583469390869
    5. '               ' → logprob: -5.963583469390869
    6. '
' → logprob: -6.088583469390869
    7. ' if' → logprob: -6.213583469390869
    8. '           ' → logprob: -6.338583469390869
    9. '                   ' → logprob: -6.713583469390869
    10. ' #' → logprob: -7.963583469390869

Token 200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08155249804258347
    2. 'Literal' → logprob: -3.331552505493164
    3. 'Com' → logprob: -4.831552505493164
    4. 'Compressed' → logprob: -4.956552505493164
    5. 'from' → logprob: -5.331552505493164
    6. 'Token' → logprob: -5.331552505493164
    7. ' self' → logprob: -5.706552505493164
    8. '@' → logprob: -5.956552505493164
    9. '<|end|>' → logprob: -6.206552505493164
    10. '...' → logprob: -6.206552505493164

Token 201: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17442791163921356
    2. '.parse' → logprob: -2.5494279861450195
    3. '.expand' → logprob: -3.2994279861450195
    4. '.handle' → logprob: -5.0494279861450195
    5. '.read' → logprob: -5.1744279861450195
    6. '.data' → logprob: -5.4244279861450195
    7. '.process' → logprob: -5.5494279861450195
    8. 'at' → logprob: -5.6744279861450195
    9. '.get' → logprob: -5.9244279861450195
    10. '.' → logprob: -6.0494279861450195

Token 202: 'consume' (ID: 166897)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.011935919523239136
    2. 'consume' → logprob: -4.886935710906982
    3. 'read' → logprob: -6.011935710906982
    4. 'token' → logprob: -7.636935710906982
    5. 'expand' → logprob: -7.636935710906982
    6. 'handle' → logprob: -8.13693618774414
    7. 'next' → logprob: -8.38693618774414
    8. 'process' → logprob: -8.88693618774414
    9. 'advance' → logprob: -9.51193618774414
    10. 'get' → logprob: -9.76193618774414

Token 203: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.2840454876422882
    2. 'compressed' → logprob: -1.9090454578399658
    3. '_at' → logprob: -2.909045457839966
    4. '()' → logprob: -4.284045696258545
    5. '_marker' → logprob: -4.409045696258545
    6. '_count' → logprob: -5.784045696258545
    7. '_token' → logprob: -5.784045696258545
    8. 'at' → logprob: -6.159045696258545
    9. '_repeat' → logprob: -6.409045696258545
    10. '_command' → logprob: -6.784045696258545

Token 204: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.0002651503309607506
    2. 'press' → logprob: -8.750265121459961
    3. 'p' → logprob: -11.125265121459961
    4. '```' → logprob: -11.125265121459961
    5. 'pression' → logprob: -11.250265121459961
    6. 'mand' → logprob: -11.625265121459961
    7. '_pressed' → logprob: -11.750265121459961
    8. 'Pressed' → logprob: -11.750265121459961
    9. 'pr' → logprob: -12.125265121459961
    10. '@' → logprob: -12.125265121459961

Token 205: '()
' (ID: 1234)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.16909350454807281
    2. 'token' → logprob: -1.9190934896469116
    3. 'Token' → logprob: -5.044093608856201
    4. '()' → logprob: -6.044093608856201
    5. ' token' → logprob: -12.294093132019043
    6. '(' → logprob: -13.544093132019043
    7. '_' → logprob: -14.294093132019043
    8. '-token' → logprob: -14.544093132019043
    9. '_tokens' → logprob: -14.669093132019043
    10. '_TOKEN' → logprob: -14.794093132019043

Token 206: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31850239634513855
    2. '           ' → logprob: -1.443502426147461
    3. '
' → logprob: -3.818502426147461
    4. '                
' → logprob: -4.943502426147461
    5. '            
' → logprob: -5.943502426147461
    6. 'self' → logprob: -6.068502426147461
    7. 'else' → logprob: -7.193502426147461
    8. 'elif' → logprob: -8.068502426147461
    9. ' 
' → logprob: -8.318502426147461
    10. '    
' → logprob: -8.318502426147461

Token 207: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2853476405143738
    2. '           ' → logprob: -1.6603477001190186
    3. 'elif' → logprob: -3.1603477001190186
    4. ' else' → logprob: -4.1603474617004395
    5. ' elif' → logprob: -9.035347938537598
    6. '               ' → logprob: -11.160347938537598
    7. 'self' → logprob: -11.535347938537598
    8. '       ' → logprob: -12.535347938537598
    9. '
' → logprob: -12.660347938537598
    10. '            
' → logprob: -12.910347938537598

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.577415406703949
    2. ':
' → logprob: -0.827415406703949
    3. '               ' → logprob: -6.577415466308594
    4. '           ' → logprob: -9.827415466308594
    5. ' :
' → logprob: -11.202415466308594
    6. ' :' → logprob: -12.202415466308594
    7. 'yield' → logprob: -12.327415466308594
    8. ':

' → logprob: -13.577415466308594
    9. '            ' → logprob: -14.327415466308594
    10. ',' → logprob: -14.452415466308594

Token 209: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6620989441871643
    2. 'yield' → logprob: -0.9120989441871643
    3. ' yield' → logprob: -2.5370988845825195
    4. '           ' → logprob: -5.9120988845825195
    5. '	yield' → logprob: -7.4120988845825195
    6. '   ' → logprob: -9.28709888458252
    7. '                   ' → logprob: -11.53709888458252
    8. '       ' → logprob: -11.66209888458252
    9. 'self' → logprob: -11.91209888458252
    10. '            ' → logprob: -12.41209888458252

Token 210: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.03228570520877838
    2. ' yield' → logprob: -3.782285690307617
    3. 'self' → logprob: -4.782285690307617
    4. '               ' → logprob: -7.907285690307617
    5. ' self' → logprob: -8.907285690307617
    6. '	yield' → logprob: -9.657285690307617
    7. '           ' → logprob: -10.282285690307617
    8. 'y' → logprob: -11.657285690307617
    9. '   ' → logprob: -12.407285690307617
    10. '                   ' → logprob: -13.407285690307617

Token 211: ' self' (ID: 1051)
  Prédit: ' Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Literal' → logprob: -0.3890596032142639
    2. 'Literal' → logprob: -1.1390595436096191
    3. ' self' → logprob: -6.514059543609619
    4. 'self' → logprob: -7.264059543609619
    5. ' literal' → logprob: -13.139060020446777
    6. 'Liter' → logprob: -14.389060020446777
    7. ' Liter' → logprob: -14.889060020446777
    8. 'Lit' → logprob: -15.389060020446777
    9. '_literal' → logprob: -15.639060020446777
    10. 'L' → logprob: -16.13905906677246

Token 212: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.003814330091699958
    2. '.L' → logprob: -5.628814220428467
    3. '.' → logprob: -9.128814697265625
    4. '_literal' → logprob: -10.378814697265625
    5. 'Literal' → logprob: -10.628814697265625
    6. ' .' → logprob: -10.753814697265625
    7. '.data' → logprob: -11.753814697265625
    8. '_L' → logprob: -12.753814697265625
    9. '_LITERAL' → logprob: -12.878814697265625
    10. '_' → logprob: -12.878814697265625

Token 213: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.00013965457037556916
    2. 'yield' → logprob: -9.875139236450195
    3. '_literal' → logprob: -10.375139236450195
    4. 'literal' → logprob: -10.750139236450195
    5. '.consume' → logprob: -11.500139236450195
    6. 'Literal' → logprob: -11.750139236450195
    7. ' consume' → logprob: -11.750139236450195
    8. 'emit' → logprob: -13.000139236450195
    9. 'next' → logprob: -13.625139236450195
    10. 'advance' → logprob: -13.875139236450195

Token 214: '_literal' (ID: 80453)
  Prédit: '_literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literal' → logprob: -0.029756972566246986
    2. 'literal' → logprob: -3.529757022857666
    3. 'Literal' → logprob: -13.154756546020508
    4. ' literal' → logprob: -13.529756546020508
    5. '_' → logprob: -13.779756546020508
    6. '_LITERAL' → logprob: -13.904756546020508
    7. 'iteral' → logprob: -15.154756546020508
    8. '_char' → logprob: -15.529756546020508
    9. '_literals' → logprob: -16.279756546020508
    10. '_l' → logprob: -16.279756546020508

Token 215: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004702338483184576
    2. '()
' → logprob: -7.750470161437988
    3. ' ()' → logprob: -11.000470161437988
    4. '()`' → logprob: -12.125470161437988
    5. '_token' → logprob: -12.375470161437988
    6. '()

' → logprob: -12.625470161437988
    7. '()\' → logprob: -12.875470161437988
    8. '(' → logprob: -13.000470161437988
    9. '()]' → logprob: -13.750470161437988
    10. '`()' → logprob: -14.000470161437988

Token 216: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5723420977592468
    2. '    
' → logprob: -1.9473421573638916
    3. '   ' → logprob: -2.1973421573638916
    4. '<|end|>' → logprob: -2.1973421573638916
    5. ' 
' → logprob: -3.9473421573638916
    6. '        
' → logprob: -4.0723419189453125
    7. '  
' → logprob: -4.4473419189453125
    8. '       ' → logprob: -4.6973419189453125
    9. '<|end|>' → logprob: -6.0723419189453125
    10. '    ' → logprob: -6.4473419189453125

Token 217: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.631517767906189
    2. '
' → logprob: -1.506517767906189
    3. 'None' → logprob: -2.0065178871154785
    4. 'def' → logprob: -2.7565178871154785
    5. '
    
' → logprob: -3.7565178871154785
    6. '<|end|>' → logprob: -5.1315178871154785
    7. '    
' → logprob: -5.5065178871154785
    8. ' None' → logprob: -5.5065178871154785
    9. 'self' → logprob: -5.7565178871154785
    10. ' 
' → logprob: -5.8815178871154785

Token 219: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8582481741905212
    2. ' ' → logprob: -1.358248233795166
    3. 'def' (adapté à ' def') → logprob: -1.483248233795166
    4. ' def' → logprob: -2.858248233795166
    5. ' 
' → logprob: -4.983248233795166
    6. '    ' → logprob: -5.233248233795166
    7. '    
' → logprob: -5.358248233795166
    8. '	def' → logprob: -5.483248233795166
    9. '       ' → logprob: -5.733248233795166
    10. '
' → logprob: -6.108248233795166

Token 221: ' _' (ID: 1175)
  Prédit: '_cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cons' → logprob: -0.1327648162841797
    2. ' _' → logprob: -2.2577648162841797
    3. ' def' → logprob: -4.50776481628418
    4. 'def' → logprob: -5.00776481628418
    5. '_def' → logprob: -6.88276481628418
    6. '_' → logprob: -7.75776481628418
    7. '_consum' → logprob: -8.00776481628418
    8. '_pos' → logprob: -9.75776481628418
    9. '_continue' → logprob: -9.75776481628418
    10. '_com' → logprob: -10.13276481628418

Token 222: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -2.2200749754119897e-06
    2. 'advance' → logprob: -13.375001907348633
    3. ' consume' → logprob: -15.375001907348633
    4. 'peek' → logprob: -15.500001907348633
    5. 'next' → logprob: -16.250001907348633
    6. '.consume' → logprob: -16.875001907348633
    7. '_cons' → logprob: -17.750001907348633
    8. '_next' → logprob: -18.250001907348633
    9. '_' → logprob: -18.500001907348633
    10. 'parse' → logprob: -18.875001907348633

Token 223: '_literal' (ID: 80453)
  Prédit: '_literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literal' → logprob: -0.013929713517427444
    2. '_com' → logprob: -4.388929843902588
    3. 'literal' → logprob: -6.638929843902588
    4. 'compressed' → logprob: -9.63892936706543
    5. '_' → logprob: -10.76392936706543
    6. '_literals' → logprob: -11.88892936706543
    7. 'Literal' → logprob: -12.63892936706543
    8. '_LITERAL' → logprob: -12.88892936706543
    9. 'com' → logprob: -13.38892936706543
    10. '_char' → logprob: -13.76392936706543

Token 224: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001137947037932463
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -13.000113487243652
    4. '()' → logprob: -13.875113487243652
    5. 'self' → logprob: -14.750113487243652
    6. '(
' → logprob: -14.875113487243652
    7. '(s' → logprob: -14.875113487243652
    8. '   ' → logprob: -15.250113487243652
    9. ' ' → logprob: -16.00011444091797
    10. '(Self' → logprob: -16.62511444091797

Token 225: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7014825940132141
    2. ')' → logprob: -0.9514825940132141
    3. 'self' → logprob: -2.2014825344085693
    4. ')(' → logprob: -5.201482772827148
    5. '):' → logprob: -7.451482772827148
    6. '):
' → logprob: -7.576482772827148
    7. ' self' → logprob: -8.326482772827148
    8. '   ' → logprob: -8.701482772827148
    9. '
' → logprob: -9.701482772827148
    10. ')
' → logprob: -9.701482772827148

Token 226: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0020851893350481987
    2. 'self' → logprob: -6.502085208892822
    3. '(' → logprob: -7.752085208892822
    4. ' self' → logprob: -9.627084732055664
    5. '   ' → logprob: -10.377084732055664
    6. '       ' → logprob: -10.752084732055664
    7. '->' → logprob: -11.002084732055664
    8. ' (' → logprob: -11.877084732055664
    9. ' ->' → logprob: -12.377084732055664
    10. 'def' → logprob: -13.752084732055664

Token 227: ' Token' (ID: 17951)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -0.4758847653865814
    2. 'Token' → logprob: -0.9758847951889038
    3. ' Literal' → logprob: -6.725884914398193
    4. ' Token' → logprob: -7.475884914398193
    5. 'Iterator' → logprob: -11.350884437561035
    6. '	Token' → logprob: -12.100884437561035
    7. '   ' → logprob: -12.225884437561035
    8. 'Tokenizer' → logprob: -12.975884437561035
    9. 'token' → logprob: -12.975884437561035
    10. 'str' → logprob: -13.225884437561035

Token 228: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29622960090637207
    2. '       ' → logprob: -2.046229600906372
    3. ':
' → logprob: -2.796229600906372
    4. ':' → logprob: -2.796229600906372
    5. 'self' → logprob: -6.171229362487793
    6. '   ' → logprob: -6.421229362487793
    7. '(' → logprob: -7.421229362487793
    8. '->' → logprob: -8.171229362487793
    9. '():
' → logprob: -8.921229362487793
    10. ' self' → logprob: -9.546229362487793

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012722245417535305
    2. 'ch' → logprob: -4.637722015380859
    3. 'char' → logprob: -6.262722015380859
    4. 'start' → logprob: -7.012722015380859
    5. 'token' → logprob: -9.38772201538086
    6. '   ' → logprob: -10.76272201538086
    7. ' char' → logprob: -11.76272201538086
    8. 'if' → logprob: -11.88772201538086
    9. 'self' → logprob: -12.01272201538086
    10. 'pos' → logprob: -12.26272201538086

Token 230: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.10026048123836517
    2. 'char' → logprob: -2.3502604961395264
    3. 'token' → logprob: -10.350260734558105
    4. 'if' → logprob: -11.850260734558105
    5. 'start' → logprob: -11.850260734558105
    6. '       ' → logprob: -12.350260734558105
    7. 'literal' → logprob: -13.475260734558105
    8. ' ch' → logprob: -14.350260734558105
    9. 'lit' → logprob: -14.975260734558105
    10. '   ' → logprob: -15.350260734558105

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0488508976995945
    2. '=' → logprob: -3.0488510131835938
    3. ' ' → logprob: -8.423851013183594
    4. '       ' → logprob: -11.048851013183594
    5. '=self' → logprob: -11.423851013183594
    6. '   ' → logprob: -11.798851013183594
    7. 'self' → logprob: -13.048851013183594
    8. ' self' → logprob: -13.173851013183594
    9. '  ' → logprob: -13.298851013183594
    10. '           ' → logprob: -13.673851013183594

Token 232: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004623322281986475
    2. ' self' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.629623413085938
    4. '       ' → logprob: -13.879623413085938
    5. ' ' → logprob: -14.879623413085938
    6. '	self' → logprob: -16.004623413085938
    7. '           ' → logprob: -16.504623413085938
    8. '
' → logprob: -16.629623413085938
    9. '  ' → logprob: -17.129623413085938
    10. 'Self' → logprob: -17.129623413085938

Token 233: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -1.0445127372804563e-05
    2. '.' → logprob: -11.87501049041748
    3. 'data' → logprob: -13.25001049041748
    4. ' .' → logprob: -13.37501049041748
    5. '.dat' → logprob: -16.250009536743164
    6. '
' → logprob: -17.875009536743164
    7. ' data' → logprob: -18.125009536743164
    8. '.user' → logprob: -18.625009536743164
    9. 'self' → logprob: -18.875009536743164
    10. '   ' → logprob: -19.375009536743164

Token 234: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0003088871017098427
    2. 'self' → logprob: -8.125308990478516
    3. '[' → logprob: -11.875308990478516
    4. '
' → logprob: -12.875308990478516
    5. ' self' → logprob: -13.250308990478516
    6. '[
' → logprob: -14.250308990478516
    7. '   ' → logprob: -14.875308990478516
    8. ' [' → logprob: -16.000308990478516
    9. '(self' → logprob: -16.250308990478516
    10. '       ' → logprob: -16.500308990478516

Token 235: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -11.500015258789062
    3. 'pos' → logprob: -12.250015258789062
    4. ' .' → logprob: -16.625015258789062
    5. '.user' → logprob: -16.750015258789062
    6. '.data' → logprob: -16.875015258789062
    7. 'Pos' → logprob: -17.375015258789062
    8. '_pos' → logprob: -17.750015258789062
    9. '.position' → logprob: -17.875015258789062
    10. '[pos' → logprob: -17.875015258789062

Token 236: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.012651853263378143
    2. ']' → logprob: -4.3876519203186035
    3. '       ' → logprob: -9.512651443481445
    4. ']
' → logprob: -10.137651443481445
    5. ' ]
' → logprob: -11.387651443481445
    6. ')
' → logprob: -12.262651443481445
    7. 'self' → logprob: -12.512651443481445
    8. ']

' → logprob: -12.762651443481445
    9. '           ' → logprob: -12.762651443481445
    10. '
' → logprob: -13.262651443481445

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010251556523144245
    2. 'self' → logprob: -4.635251522064209
    3. '   ' → logprob: -8.010251998901367
    4. '
' → logprob: -9.510251998901367
    5. ' self' → logprob: -9.510251998901367
    6. '	self' → logprob: -12.010251998901367
    7. '           ' → logprob: -12.760251998901367
    8. '[self' → logprob: -13.260251998901367
    9. '```' → logprob: -13.635251998901367
    10. '        
' → logprob: -13.760251998901367

Token 238: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.412610233994201e-05
    2. '       ' → logprob: -9.500094413757324
    3. ' self' → logprob: -10.875094413757324
    4. '
' → logprob: -15.125094413757324
    5. '	self' → logprob: -18.000093460083008
    6. '        
' → logprob: -18.750093460083008
    7. 'token' → logprob: -18.750093460083008
    8. 'if' (adapté à ' if') → logprob: -19.875093460083008
    9. '   ' → logprob: -20.125093460083008
    10. '           ' → logprob: -20.750093460083008

Token 239: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3486548960208893
    2. ' ch' → logprob: -1.223654866218567
    3. ' not' → logprob: -8.973654747009277
    4. 'not' → logprob: -9.848654747009277
    5. '	ch' → logprob: -10.973654747009277
    6. '(ch' → logprob: -12.473654747009277
    7. ' ' → logprob: -12.723654747009277
    8. 'ord' → logprob: -13.473654747009277
    9. '@' → logprob: -13.848654747009277
    10. ' ' → logprob: -14.286154747009277

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6379434466362
    2. '==' → logprob: -1.0129435062408447
    3. ' !=' → logprob: -2.6379435062408447
    4. '!=' → logprob: -3.6379435062408447
    5. ' not' → logprob: -5.762943267822266
    6. '=='' → logprob: -5.887943267822266
    7. '.is' → logprob: -6.762943267822266
    8. ' in' → logprob: -6.887943267822266
    9. '!='' → logprob: -7.262943267822266
    10. '==
' → logprob: -7.637943267822266

Token 241: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007843759376555681
    2. '"' → logprob: -7.250784397125244
    3. ' '@' → logprob: -9.625783920288086
    4. '@' → logprob: -12.500783920288086
    5. '('@' → logprob: -12.625783920288086
    6. ''user' → logprob: -15.875783920288086
    7. '	' → logprob: -16.250783920288086
    8. '''' → logprob: -16.250783920288086
    9. '`' → logprob: -16.750783920288086
    10. ''at' → logprob: -16.875783920288086

Token 242: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.05013132840394974
    2. ':
' → logprob: -3.425131320953369
    3. ':' → logprob: -5.050131320953369
    4. '':' → logprob: -5.300131320953369
    5. ''' → logprob: -6.050131320953369
    6. ' '' → logprob: -6.425131320953369
    7. ' or' → logprob: -7.550131320953369
    8. '           ' → logprob: -9.050131797790527
    9. '       ' → logprob: -9.800131797790527
    10. '):
' → logprob: -10.050131797790527

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00887809507548809
    2. 'raise' → logprob: -5.133878231048584
    3. 'self' → logprob: -6.883878231048584
    4. ' raise' → logprob: -7.008878231048584
    5. 'return' → logprob: -7.633878231048584
    6. '       ' → logprob: -8.633877754211426
    7. '               ' → logprob: -10.008877754211426
    8. '#' → logprob: -10.258877754211426
    9. '```' → logprob: -10.383877754211426
    10. '            ' → logprob: -10.508877754211426

Token 244: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.005556744057685137
    2. ' raise' → logprob: -5.255556583404541
    3. '       ' → logprob: -9.1305570602417
    4. 'self' → logprob: -9.6305570602417
    5. 'return' → logprob: -9.8805570602417
    6. '           ' → logprob: -10.2555570602417
    7. '
' → logprob: -10.7555570602417
    8. '	raise' → logprob: -10.7555570602417
    9. '#' → logprob: -12.1305570602417
    10. '        
' → logprob: -12.2555570602417

Token 245: ' De' (ID: 1516)
  Prédit: ' De'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' De' → logprob: -0.009839191101491451
    2. 'De' → logprob: -4.634839057922363
    3. ' Value' → logprob: -9.509839057922363
    4. 'Value' → logprob: -12.634839057922363
    5. ' ' → logprob: -12.759839057922363
    6. '_De' → logprob: -13.384839057922363
    7. ' Token' → logprob: -14.509839057922363
    8. ' Runtime' → logprob: -15.759839057922363
    9. 'Decompiler' → logprob: -15.884839057922363
    10. '	' → logprob: -16.00984001159668

Token 246: 'compression' (ID: 157910)
  Prédit: 'compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.0016124583780765533
    2. 'Compression' → logprob: -6.501612663269043
    3. 'compress' → logprob: -9.751612663269043
    4. 'compr' → logprob: -10.251612663269043
    5. 'com' → logprob: -11.876612663269043
    6. 'compressed' → logprob: -11.876612663269043
    7. ' compression' → logprob: -13.751612663269043
    8. 'composition' → logprob: -15.001612663269043
    9. ' Compression' → logprob: -15.376612663269043
    10. 'pression' → logprob: -15.376612663269043

Token 247: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.0484450437361374e-05
    2. 'rror' → logprob: -10.125040054321289
    3. 'Erro' → logprob: -15.625040054321289
    4. 'Token' → logprob: -16.62504005432129
    5. 'Er' → logprob: -16.75004005432129
    6. 'Err' → logprob: -17.75004005432129
    7. ' Error' → logprob: -18.12504005432129
    8. '	Error' → logprob: -18.12504005432129
    9. 'SError' → logprob: -18.25004005432129
    10. 'error' → logprob: -18.37504005432129

Token 248: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005896099028177559
    2. '('' → logprob: -7.500589847564697
    3. '(f' → logprob: -10.625589370727539
    4. '(' → logprob: -12.125589370727539
    5. '("'' → logprob: -12.625589370727539
    6. '("@' → logprob: -13.375589370727539
    7. '()' → logprob: -13.750589370727539
    8. '(
' → logprob: -14.125589370727539
    9. '()
' → logprob: -15.750589370727539
    10. '('"' → logprob: -17.00058937072754

Token 249: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.06784960627555847
    2. 'Invalid' → logprob: -3.442849636077881
    3. 'Literal' → logprob: -3.692849636077881
    4. 'Expected' → logprob: -4.817849636077881
    5. '"' → logprob: -8.192849159240723
    6. ''' → logprob: -8.817849159240723
    7. 'Cannot' → logprob: -10.317849159240723
    8. ' Unexpected' → logprob: -10.317849159240723
    9. 'Un' → logprob: -10.442849159240723
    10. 'Malformed' → logprob: -10.942849159240723

Token 250: ' @' (ID: 759)
  Prédit: ' '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '@' → logprob: -0.3396071791648865
    2. 'literal' → logprob: -2.0896072387695312
    3. '@' → logprob: -2.5896072387695312
    4. ' literal' → logprob: -3.0896072387695312
    5. ''' → logprob: -3.8396072387695312
    6. ' character' → logprob: -4.589607238769531
    7. ' at' → logprob: -5.839607238769531
    8. 'character' → logprob: -6.089607238769531
    9. ' @' → logprob: -6.589607238769531
    10. '@end' → logprob: -6.714607238769531

Token 251: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.23328733444213867
    2. '")' → logprob: -2.6082873344421387
    3. ' while' → logprob: -3.2332873344421387
    4. ' character' → logprob: -3.9832873344421387
    5. '")
' → logprob: -4.108287334442139
    6. ' in' → logprob: -4.108287334442139
    7. 'at' → logprob: -4.108287334442139
    8. 'while' → logprob: -4.983287334442139
    9. ' without' → logprob: -5.233287334442139
    10. 'character' → logprob: -5.608287334442139

Token 252: ' literal' (ID: 41271)
  Prédit: '_literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literal' → logprob: -0.6276198029518127
    2. 'literal' → logprob: -0.8776198029518127
    3. ' literal' → logprob: -3.002619743347168
    4. '_LITERAL' → logprob: -8.627619743347168
    5. '_l' → logprob: -8.877619743347168
    6. 'Literal' → logprob: -9.252619743347168
    7. 'input' → logprob: -9.752619743347168
    8. '_literals' → logprob: -9.877619743347168
    9. ' _' → logprob: -10.002619743347168
    10. '_' → logprob: -10.377619743347168

Token 253: ' consumption' (ID: 23818)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.6870377063751221
    2. '")' → logprob: -0.9370377063751221
    3. ' token' → logprob: -2.687037706375122
    4. 'token' → logprob: -3.687037706375122
    5. ' sequence' → logprob: -5.562037467956543
    6. ' segment' → logprob: -6.812037467956543
    7. 'sequence' → logprob: -7.062037467956543
    8. ' at' → logprob: -7.062037467956543
    9. 'segment' → logprob: -7.312037467956543
    10. ' block' → logprob: -7.437037467956543

Token 254: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.001151174888946116
    2. '")' → logprob: -6.876151084899902
    3. '")

' → logprob: -10.251151084899902
    4. ' ")
' → logprob: -10.376151084899902
    5. ''")
' → logprob: -11.001151084899902
    6. ' at' → logprob: -11.126151084899902
    7. '')
' → logprob: -11.876151084899902
    8. '")
' → logprob: -12.126151084899902
    9. '.")
' → logprob: -12.501151084899902
    10. ' during' → logprob: -13.626151084899902

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02131880261003971
    2. 'self' → logprob: -4.2713189125061035
    3. '
' → logprob: -5.0213189125061035
    4. ' self' → logprob: -8.021318435668945
    5. '        
' → logprob: -9.271318435668945
    6. '   ' → logprob: -9.646318435668945
    7. '
' → logprob: -11.646318435668945
    8. '	self' → logprob: -12.021318435668945
    9. '           ' → logprob: -12.396318435668945
    10. '```' → logprob: -12.396318435668945

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008922168985009193
    2. '       ' → logprob: -4.758922100067139
    3. ' self' → logprob: -8.883922576904297
    4. '
' → logprob: -9.008922576904297
    5. '        
' → logprob: -11.258922576904297
    6. '   ' → logprob: -11.383922576904297
    7. 'if' → logprob: -11.633922576904297
    8. 'token' → logprob: -12.133922576904297
    9. '```' → logprob: -13.133922576904297
    10. 'result' → logprob: -13.508922576904297

Token 257: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -3.523948907968588e-05
    2. '.' → logprob: -10.750035285949707
    3. 'pos' → logprob: -11.875035285949707
    4. ' .' → logprob: -12.250035285949707
    5. '.data' → logprob: -14.125035285949707
    6. '.char' → logprob: -15.125035285949707
    7. '.self' → logprob: -15.375035285949707
    8. '   ' → logprob: -16.12503433227539
    9. '	pos' → logprob: -16.12503433227539
    10. 'self' → logprob: -16.25003433227539

Token 258: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03804366663098335
    2. '+=' → logprob: -3.288043737411499
    3. '    ' → logprob: -13.663043975830078
    4. ' ' → logprob: -14.038043975830078
    5. '   ' → logprob: -15.038043975830078
    6. ']+=' → logprob: -17.788043975830078
    7. '	' → logprob: -18.288043975830078
    8. ' +' → logprob: -18.413043975830078
    9. '  ' → logprob: -18.663043975830078
    10. '=' → logprob: -19.038043975830078

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.375
    4. '
' → logprob: -20.875
    5. '```' → logprob: -21.75
    6. '１' → logprob: -23.875
    7. '۱' → logprob: -23.875
    8. '`' → logprob: -24.375
    9. ' ' → logprob: -24.625
    10. '  ' → logprob: -24.625

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.625
    5. '
' → logprob: -19.625
    6. '۱' → logprob: -22.125
    7. 'len' → logprob: -22.625
    8. '`' → logprob: -22.8125
    9. '

' → logprob: -22.8125
    10. '0' → logprob: -23.1875

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6948870420455933
    2. 'return' → logprob: -0.6948870420455933
    3. ' return' → logprob: -6.444887161254883
    4. '   ' → logprob: -8.944887161254883
    5. '
' → logprob: -11.319887161254883
    6. '	return' → logprob: -12.569887161254883
    7. ' ' → logprob: -14.069887161254883
    8. '           ' → logprob: -14.444887161254883
    9. '        
' → logprob: -14.569887161254883
    10. ':return' → logprob: -14.694887161254883

Token 262: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04944956675171852
    2. '       ' → logprob: -3.0494496822357178
    3. ' return' → logprob: -7.174449443817139
    4. '   ' → logprob: -9.299449920654297
    5. '
' → logprob: -13.174449920654297
    6. '	return' → logprob: -13.299449920654297
    7. '```' → logprob: -15.424449920654297
    8. '           ' → logprob: -15.549449920654297
    9. ':return' → logprob: -15.924449920654297
    10. '        
' → logprob: -16.549449920654297

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.8889261304575484e-06
    2. ' return' → logprob: -12.500003814697266
    3. '       ' → logprob: -16.000003814697266
    4. '```' → logprob: -19.875003814697266
    5. '
' → logprob: -20.500003814697266
    6. '	return' → logprob: -21.125003814697266
    7. '        
' → logprob: -21.500003814697266
    8. '   ' → logprob: -21.625003814697266
    9. ':return' → logprob: -22.625003814697266
    10. '{return' → logprob: -23.125003814697266

Token 264: ' Literal' (ID: 100414)
  Prédit: 'Literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Literal' → logprob: -4.842555426876061e-06
    2. ' Literal' → logprob: -12.250004768371582
    3. 'Liter' → logprob: -17.2500057220459
    4. 'Lit' → logprob: -23.5000057220459
    5. 'literal' → logprob: -24.3750057220459
    6. '_literal' → logprob: -24.8750057220459
    7. ' literal' → logprob: -25.2500057220459
    8. 'L' → logprob: -25.7500057220459
    9. 'Lazy' → logprob: -25.7500057220459
    10. '   ' → logprob: -26.3750057220459

Token 265: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -3.128163257315464e-07
    2. 'To' → logprob: -15.875
    3. 'T' → logprob: -16.625
    4. '	Token' → logprob: -17.75
    5. 'token' → logprob: -18.25
    6. 'Tok' → logprob: -18.5
    7. 'Tokens' → logprob: -19.25
    8. ' Token' → logprob: -19.5
    9. '<Token' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 266: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.011055010370910168
    2. 'ch' → logprob: -4.511054992675781
    3. '(' → logprob: -12.011054992675781
    4. '(
' → logprob: -14.386054992675781
    5. ' ch' → logprob: -15.011054992675781
    6. '[ch' → logprob: -16.51105499267578
    7. '	ch' → logprob: -17.13605499267578
    8. '(c' → logprob: -17.88605499267578
    9. ',ch' → logprob: -17.88605499267578
    10. ' (' → logprob: -17.88605499267578

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -14.75000286102295
    4. ')

' → logprob: -17.625003814697266
    5. '),' → logprob: -19.875003814697266
    6. ')return' → logprob: -19.875003814697266
    7. ')`' → logprob: -20.000003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '）' → logprob: -20.500003814697266
    10. '<|end|>' → logprob: -20.625003814697266

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4330574870109558
    2. 'def' → logprob: -1.0580575466156006
    3. '    
' → logprob: -6.3080573081970215
    4. '<|end|>' → logprob: -6.5580573081970215
    5. ' def' → logprob: -7.6830573081970215
    6. ' 
' → logprob: -8.80805778503418
    7. '
' → logprob: -8.80805778503418
    8. '  
' → logprob: -9.80805778503418
    9. '<|end|>' → logprob: -9.93305778503418
    10. '        
' → logprob: -10.05805778503418

Token 269: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005913979839533567
    2. ' def' → logprob: -8.000591278076172
    3. '   ' → logprob: -8.625591278076172
    4. '
' → logprob: -9.750591278076172
    5. '	def' → logprob: -11.750591278076172
    6. '    
' → logprob: -12.375591278076172
    7. ' 
' → logprob: -13.500591278076172
    8. '  
' → logprob: -13.625591278076172
    9. ' ' → logprob: -14.125591278076172
    10. '<|end|>' → logprob: -14.125591278076172

Token 270: ' _' (ID: 1175)
  Prédit: '_cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cons' → logprob: -0.0036690791603177786
    2. ' _' → logprob: -5.628669261932373
    3. '_consum' → logprob: -9.878668785095215
    4. '_com' → logprob: -12.128668785095215
    5. '_' → logprob: -12.378668785095215
    6. '_continue' → logprob: -12.753668785095215
    7. '_de' → logprob: -13.128668785095215
    8. '_commit' → logprob: -14.628668785095215
    9. ' ' → logprob: -15.628668785095215
    10. '_def' → logprob: -15.878668785095215

Token 271: 'consume' (ID: 166897)
  Prédit: 'consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -3.128163257315464e-07
    2. ' consume' → logprob: -15.875
    3. '.consume' → logprob: -16.0
    4. 'compress' → logprob: -18.375
    5. 'parse' → logprob: -18.5
    6. 'Consume' → logprob: -19.0
    7. '_' → logprob: -19.125
    8. 'peek' → logprob: -19.125
    9. '_cons' → logprob: -19.25
    10. '
' → logprob: -19.5

Token 272: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0005535095697268844
    2. 'compressed' → logprob: -7.500553607940674
    3. 'Compressed' → logprob: -15.250553131103516
    4. '_' → logprob: -15.875553131103516
    5. ' compressed' → logprob: -16.375553131103516
    6. '_comp' → logprob: -16.625553131103516
    7. '@' → logprob: -18.625553131103516
    8. '_con' → logprob: -18.875553131103516
    9. '_de' → logprob: -19.250553131103516
    10. '__' → logprob: -19.625553131103516

Token 273: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.0006186736281961203
    2. 'press' → logprob: -7.5006184577941895
    3. '_pressed' → logprob: -9.750618934631348
    4. 'Pressed' → logprob: -13.125618934631348
    5. '_press' → logprob: -13.375618934631348
    6. 'p' → logprob: -14.000618934631348
    7. '```' → logprob: -14.125618934631348
    8. 'pr' → logprob: -14.250618934631348
    9. ' pressed' → logprob: -14.375618934631348
    10. '_' → logprob: -15.375618934631348

Token 274: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00095267134020105
    2. 'self' → logprob: -7.12595272064209
    3. '(' → logprob: -9.12595272064209
    4. '   ' → logprob: -11.50095272064209
    5. 'token' → logprob: -12.25095272064209
    6. '()' → logprob: -12.50095272064209
    7. 'def' → logprob: -12.62595272064209
    8. ' self' → logprob: -13.00095272064209
    9. ' ' → logprob: -13.12595272064209
    10. ' (' → logprob: -13.25095272064209

Token 275: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007929549552500248
    2. 'self' → logprob: -5.13292932510376
    3. '(self' → logprob: -6.63292932510376
    4. '   ' → logprob: -8.257929801940918
    5. '
' → logprob: -9.007929801940918
    6. '```' → logprob: -9.632929801940918
    7. '       ' → logprob: -9.757929801940918
    8. ' )' → logprob: -9.882929801940918
    9. ')
' → logprob: -10.632929801940918
    10. ' self' → logprob: -10.882929801940918

Token 276: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010616567305987701
    2. '(' → logprob: -9.625105857849121
    3. 'self' → logprob: -10.375105857849121
    4. '   ' → logprob: -12.875105857849121
    5. ' (' → logprob: -13.250105857849121
    6. 'def' → logprob: -14.000105857849121
    7. ' ->' → logprob: -14.125105857849121
    8. ' self' → logprob: -14.500105857849121
    9. '       ' → logprob: -14.625105857849121
    10. ')' → logprob: -14.625105857849121

Token 277: ' Token' (ID: 17951)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.006134499795734882
    2. ' Token' → logprob: -5.131134510040283
    3. 'Compressed' → logprob: -9.006134033203125
    4. '	Token' → logprob: -10.631134033203125
    5. ' ' → logprob: -11.381134033203125
    6. '   ' → logprob: -11.506134033203125
    7. '(Token' → logprob: -11.631134033203125
    8. 'int' → logprob: -12.131134033203125
    9. '  ' → logprob: -12.506134033203125
    10. 'token' → logprob: -12.631134033203125

Token 278: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007902941666543484
    2. '       ' → logprob: -5.007903099060059
    3. 'self' → logprob: -7.632903099060059
    4. '   ' → logprob: -8.382903099060059
    5. ':' → logprob: -8.507903099060059
    6. '(' → logprob: -8.882903099060059
    7. ':
' → logprob: -9.757903099060059
    8. ' self' → logprob: -10.632903099060059
    9. '(
' → logprob: -11.382903099060059
    10. '->' → logprob: -11.507903099060059

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051526423543691635
    2. 'self' → logprob: -3.0515263080596924
    3. 'if' → logprob: -6.4265265464782715
    4. '   ' → logprob: -6.9265265464782715
    5. '
' → logprob: -9.051526069641113
    6. 'assert' → logprob: -9.301526069641113
    7. ' self' → logprob: -9.926526069641113
    8. '	self' → logprob: -11.051526069641113
    9. '           ' → logprob: -11.301526069641113
    10. '        
' → logprob: -11.426526069641113

Token 280: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05682582035660744
    2. 'if' → logprob: -2.931825876235962
    3. '       ' → logprob: -6.681825637817383
    4. 'assert' → logprob: -7.806825637817383
    5. '#' (adapté à ' #') → logprob: -8.306825637817383
    6. ' self' → logprob: -11.056825637817383
    7. ' if' → logprob: -12.681825637817383
    8. 'start' → logprob: -12.806825637817383
    9. '   ' → logprob: -12.931825637817383
    10. '@' → logprob: -13.056825637817383

Token 281: ' Current' (ID: 14536)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05861378088593483
    2. 'if' → logprob: -2.9336137771606445
    3. '#' → logprob: -6.1836137771606445
    4. 'assert' → logprob: -6.5586137771606445
    5. '       ' → logprob: -8.433613777160645
    6. ' self' → logprob: -11.933613777160645
    7. 'start' → logprob: -12.058613777160645
    8. '   ' → logprob: -12.558613777160645
    9. '           ' → logprob: -13.058613777160645
    10. 'import' → logprob: -13.433613777160645

Token 282: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02271340787410736
    2. 'pos' → logprob: -4.2727131843566895
    3. ' self' → logprob: -5.3977131843566895
    4. '       ' → logprob: -6.6477131843566895
    5. '#' → logprob: -7.3977131843566895
    6. '
' → logprob: -7.8977131843566895
    7. '_pos' → logprob: -8.272713661193848
    8. 'token' → logprob: -8.397713661193848
    9. 'if' → logprob: -8.397713661193848
    10. '   ' → logprob: -8.897713661193848

Token 283: ' points' (ID: 5571)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011605566367506981
    2. '+=' → logprob: -4.511605739593506
    3. '       ' → logprob: -7.761605739593506
    4. ' +' → logprob: -10.636605262756348
    5. ' ' → logprob: -10.761605262756348
    6. 'self' → logprob: -10.761605262756348
    7. ' =' → logprob: -11.011605262756348
    8. '+' → logprob: -11.011605262756348
    9. '
' → logprob: -12.261605262756348
    10. '           ' → logprob: -12.636605262756348

Token 284: ' to' (ID: 316)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.23792491853237152
    2. 'at' → logprob: -2.362924814224243
    3. ' to' → logprob: -2.487924814224243
    4. 'to' → logprob: -3.487924814224243
    5. '       ' → logprob: -5.737925052642822
    6. '@' → logprob: -7.487925052642822
    7. ',' → logprob: -10.487924575805664
    8. '@
' → logprob: -10.487924575805664
    9. '=' → logprob: -10.737924575805664
    10. '0' → logprob: -11.237924575805664

Token 285: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08101198822259903
    2. '@' → logprob: -2.581012010574341
    3. ' '@' → logprob: -6.706011772155762
    4. '"' → logprob: -7.206011772155762
    5. '('@' → logprob: -10.331011772155762
    6. '`' → logprob: -10.456011772155762
    7. '@
' → logprob: -10.581011772155762
    8. 'self' → logprob: -10.831011772155762
    9. '@index' → logprob: -11.206011772155762
    10. '@property' → logprob: -12.331011772155762

Token 286: ''
' (ID: 2207)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1464377641677856
    2. ''' → logprob: -1.2714377641677856
    3. '@
' → logprob: -1.8964377641677856
    4. ''
' → logprob: -2.021437644958496
    5. '       ' → logprob: -2.771437644958496
    6. '@' → logprob: -3.396437644958496
    7. ',' → logprob: -4.896437644958496
    8. 'self' → logprob: -5.271437644958496
    9. '#' → logprob: -6.396437644958496
    10. ')' → logprob: -6.521437644958496

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10297755151987076
    2. 'self' → logprob: -2.3529775142669678
    3. '@
' → logprob: -6.852977752685547
    4. '@' → logprob: -6.977977752685547
    5. ' self' → logprob: -7.727977752685547
    6. '
' → logprob: -9.352977752685547
    7. '   ' → logprob: -9.727977752685547
    8. '#' → logprob: -9.727977752685547
    9. '```' → logprob: -9.977977752685547
    10. '        
' → logprob: -10.477977752685547

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013547601411119103
    2. 'if' → logprob: -7.126354694366455
    3. '       ' → logprob: -7.876354694366455
    4. 'assert' → logprob: -9.376355171203613
    5. ' self' → logprob: -9.626355171203613
    6. '@' → logprob: -12.001355171203613
    7. '#' → logprob: -12.626355171203613
    8. 'start' → logprob: -13.001355171203613
    9. '        
' → logprob: -13.376355171203613
    10. 'at' → logprob: -13.626355171203613

Token 289: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0001600347168277949
    2. 'pos' → logprob: -9.000160217285156
    3. 'self' → logprob: -10.625160217285156
    4. '.' → logprob: -11.750160217285156
    5. '.self' → logprob: -12.750160217285156
    6. ' .' → logprob: -15.000160217285156
    7. '	pos' → logprob: -15.250160217285156
    8. '.data' → logprob: -15.375160217285156
    9. '   ' → logprob: -15.375160217285156
    10. '       ' → logprob: -16.000160217285156

Token 290: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326398253440857
    2. ' +=' → logprob: -1.313264012336731
    3. '+' → logprob: -13.313263893127441
    4. ']+=' → logprob: -15.313263893127441
    5. '=' → logprob: -15.813263893127441
    6. ' ' → logprob: -16.563264846801758
    7. '+
' → logprob: -18.063264846801758
    8. '1' → logprob: -18.188264846801758
    9. '```' → logprob: -18.188264846801758
    10. '   ' → logprob: -18.688264846801758

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -18.000009536743164
    4. '```' → logprob: -18.000009536743164
    5. '   ' → logprob: -18.125009536743164
    6. '۱' → logprob: -19.750009536743164
    7. '１' → logprob: -20.000009536743164
    8. '2' → logprob: -20.125009536743164
    9. '`' → logprob: -20.562509536743164
    10. '  ' → logprob: -20.875009536743164

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.625001907348633
    4. '
' → logprob: -19.625001907348633
    5. '```' → logprob: -20.062501907348633
    6. '2' → logprob: -20.500001907348633
    7. '１' → logprob: -20.875001907348633
    8. 'len' → logprob: -20.875001907348633
    9. '۱' → logprob: -21.125001907348633
    10. '0' → logprob: -21.875001907348633

Token 293: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29974162578582764
    2. 'num' → logprob: -1.6747416257858276
    3. 'count' → logprob: -3.674741744995117
    4. 'number' → logprob: -4.174741744995117
    5. 'if' → logprob: -4.424741744995117
    6. ' if' → logprob: -5.424741744995117
    7. 'start' → logprob: -5.424741744995117
    8. ' num' → logprob: -6.049741744995117
    9. 'digits' → logprob: -6.549741744995117
    10. 'digit' → logprob: -6.799741744995117

Token 294: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.48749589920043945
    2. 'if' → logprob: -1.9874958992004395
    3. '       ' → logprob: -2.6124958992004395
    4. 'count' → logprob: -2.7374958992004395
    5. 'number' → logprob: -2.9874958992004395
    6. 'start' → logprob: -3.4874958992004395
    7. '
' → logprob: -3.9874958992004395
    8. 'digits' → logprob: -5.4874958992004395
    9. '#' → logprob: -5.6124958992004395
    10. 'digit' → logprob: -6.6124958992004395

Token 295: ' consume' (ID: 34881)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12485073506832123
    2. 'start' → logprob: -2.3748507499694824
    3. 'num' → logprob: -4.874850749969482
    4. '#' → logprob: -4.874850749969482
    5. 'count' → logprob: -5.749850749969482
    6. 'number' → logprob: -5.874850749969482
    7. ' if' → logprob: -6.624850749969482
    8. 'digit' → logprob: -7.874850749969482
    9. 'If' → logprob: -7.999850749969482
    10. 'Start' → logprob: -8.249850273132324

Token 296: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07472749799489975
    2. '@' → logprob: -2.6997275352478027
    3. '`' → logprob: -6.699727535247803
    4. ' '@' → logprob: -6.699727535247803
    5. 'the' → logprob: -6.949727535247803
    6. '@
' → logprob: -7.199727535247803
    7. '('@' → logprob: -8.699727058410645
    8. '"' → logprob: -8.949727058410645
    9. 'at' → logprob: -9.324727058410645
    10. ''at' → logprob: -9.574727058410645

Token 297: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.202681303024292
    2. ''
' → logprob: -1.702681303024292
    3. '
' → logprob: -7.702681541442871
    4. '')' → logprob: -7.827681541442871
    5. '       ' → logprob: -8.827681541442871
    6. ')' → logprob: -9.577681541442871
    7. '('' → logprob: -10.077681541442871
    8. ''
' → logprob: -10.952681541442871
    9. ''

' → logprob: -11.077681541442871
    10. '"' → logprob: -11.327681541442871

Token 298: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8611176013946533
    2. 'num' → logprob: -0.9861176013946533
    3. 'if' → logprob: -2.1111176013946533
    4. 'start' → logprob: -2.9861176013946533
    5. '       ' → logprob: -3.8611176013946533
    6. 'number' → logprob: -4.736117362976074
    7. ' if' → logprob: -6.861117362976074
    8. 'digit' → logprob: -7.236117362976074
    9. 'digits' → logprob: -7.486117362976074
    10. 'n' → logprob: -8.736117362976074

Token 299: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.908474326133728
    2. 'num' → logprob: -1.158474326133728
    3. 'start' → logprob: -1.908474326133728
    4. 'if' → logprob: -2.0334744453430176
    5. 'number' → logprob: -5.908474445343018
    6. 'digits' → logprob: -7.283474445343018
    7. 'digit' → logprob: -8.53347396850586
    8. 'n' → logprob: -10.15847396850586
    9. ' if' → logprob: -10.78347396850586
    10. 'repeat' → logprob: -11.03347396850586

Token 300: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.5842403769493103
    2. '_start' → logprob: -0.8342403769493103
    3. ' =' → logprob: -5.959240436553955
    4. '=' → logprob: -6.084240436553955
    5. '_digits' → logprob: -6.584240436553955
    6. '_' → logprob: -7.209240436553955
    7. 'start' → logprob: -7.459240436553955
    8. '_chars' → logprob: -7.584240436553955
    9. 'str' → logprob: -9.959239959716797
    10. '_s' → logprob: -10.209239959716797

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20227929949760437
    2. ' =' → logprob: -1.7022793292999268
    3. '=''' → logprob: -7.577279090881348
    4. '=""' → logprob: -8.077279090881348
    5. '=[]' → logprob: -10.452279090881348
    6. ' ' → logprob: -12.452279090881348
    7. '""' → logprob: -12.452279090881348
    8. '<|end|>' → logprob: -13.077279090881348
    9. ':' → logprob: -13.702279090881348
    10. ',' → logprob: -13.952279090881348

Token 302: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.38689103722572327
    2. '""' → logprob: -1.1368910074234009
    3. '"' → logprob: -10.88689136505127
    4. '''
' → logprob: -13.88689136505127
    5. ' ''' → logprob: -15.38689136505127
    6. '[]' → logprob: -16.886890411376953
    7. ''' → logprob: -16.886890411376953
    8. ''',' → logprob: -17.011890411376953
    9. ' ""' → logprob: -17.886890411376953
    10. '''.' → logprob: -18.011890411376953

Token 303: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02924978733062744
    2. '<|end|>' → logprob: -4.154249668121338
    3. ' while' → logprob: -4.654249668121338
    4. '       ' → logprob: -5.654249668121338
    5. '	while' → logprob: -10.154250144958496
    6. 'While' → logprob: -10.404250144958496
    7. '<|end|>' → logprob: -10.404250144958496
    8. ' While' → logprob: -13.279250144958496
    9. '   ' → logprob: -14.029250144958496
    10. ' ' → logprob: -14.529250144958496

Token 304: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.9504606825648807e-05
    2. ' while' → logprob: -11.000019073486328
    3. '       ' → logprob: -12.875019073486328
    4. '	while' → logprob: -16.250019073486328
    5. 'While' → logprob: -17.125019073486328
    6. '<|end|>' → logprob: -19.625019073486328
    7. '        
' → logprob: -20.375019073486328
    8. 'wh' → logprob: -20.750019073486328
    9. '   ' → logprob: -21.625019073486328
    10. '           ' → logprob: -22.125019073486328

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006279678200371563
    2. ' self' → logprob: -7.3756279945373535
    3. '(self' → logprob: -13.625627517700195
    4. '	self' → logprob: -15.500627517700195
    5. '   ' → logprob: -17.125627517700195
    6. ' ' → logprob: -18.375627517700195
    7. 'not' → logprob: -18.500627517700195
    8. '0' → logprob: -19.375627517700195
    9. ' (' → logprob: -19.625627517700195
    10. '
' → logprob: -19.625627517700195

Token 306: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.3870309293270111
    2. 'pos' → logprob: -1.1370309591293335
    3. 'self' → logprob: -8.762030601501465
    4. ' pos' → logprob: -13.262030601501465
    5. '	pos' → logprob: -13.762030601501465
    6. '_pos' → logprob: -15.637030601501465
    7. ',pos' → logprob: -16.01203155517578
    8. '[pos' → logprob: -16.76203155517578
    9. 'Pos' → logprob: -17.51203155517578
    10. '.data' → logprob: -17.63703155517578

Token 307: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06498701870441437
    2. ' <' → logprob: -2.8149869441986084
    3. '<len' → logprob: -5.8149871826171875
    4. '<size' → logprob: -11.064987182617188
    5. '<n' → logprob: -12.314987182617188
    6. '<char' → logprob: -13.064987182617188
    7. '<data' → logprob: -13.439987182617188
    8. '<m' → logprob: -13.939987182617188
    9. '<num' → logprob: -14.064987182617188
    10. '<int' → logprob: -14.064987182617188

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016086915275081992
    2. ' self' → logprob: -8.750161170959473
    3. 'len' → logprob: -13.000161170959473
    4. '<|end|>' → logprob: -17.375160217285156
    5. '	self' → logprob: -18.500160217285156
    6. '       ' → logprob: -18.625160217285156
    7. '(self' → logprob: -18.750160217285156
    8. '=self' → logprob: -19.500160217285156
    9. '[self' → logprob: -19.875160217285156
    10. '
' → logprob: -20.250160217285156

Token 309: '.length' (ID: 3116)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00032521432149223983
    2. 'len' → logprob: -8.500325202941895
    3. ' length' → logprob: -9.375325202941895
    4. '.length' → logprob: -10.250325202941895
    5. 'ength' → logprob: -14.375325202941895
    6. 'leng' → logprob: -14.500325202941895
    7. '_length' → logprob: -15.625325202941895
    8. 'self' → logprob: -15.875325202941895
    9. '	length' → logprob: -16.00032615661621
    10. ':length' → logprob: -17.00032615661621

Token 310: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868759572505951
    2. 'and' → logprob: -1.1368759870529175
    3. '           ' → logprob: -12.761876106262207
    4. '	and' → logprob: -14.011876106262207
    5. ' ' → logprob: -14.761876106262207
    6. '          ' → logprob: -15.011876106262207
    7. '       ' → logprob: -15.636876106262207
    8. '   ' → logprob: -15.886876106262207
    9. '      ' → logprob: -16.76187515258789
    10. '  ' → logprob: -16.76187515258789

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004079112783074379
    2. ' self' → logprob: -5.504079341888428
    3. '           ' → logprob: -15.25407886505127
    4. '(self' → logprob: -15.87907886505127
    5. '   ' → logprob: -16.004079818725586
    6. ' ' → logprob: -16.504079818725586
    7. '       ' → logprob: -16.629079818725586
    8. '	self' → logprob: -17.129079818725586
    9. '0' → logprob: -17.879079818725586
    10. '    ' → logprob: -18.504079818725586

Token 312: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.03086191602051258
    2. 'self' → logprob: -3.5308618545532227
    3. 'data' → logprob: -7.280861854553223
    4. ' self' → logprob: -8.280861854553223
    5. '.self' → logprob: -9.405861854553223
    6. '[self' → logprob: -10.280861854553223
    7. '.' → logprob: -10.905861854553223
    8. '[data' → logprob: -12.030861854553223
    9. ' ' → logprob: -12.030861854553223
    10. '<data' → logprob: -12.155861854553223

Token 313: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -7.588793960167095e-05
    2. 'self' → logprob: -9.500076293945312
    3. '[' → logprob: -14.875076293945312
    4. ' self' → logprob: -15.125076293945312
    5. '[
' → logprob: -15.625076293945312
    6. ' [' → logprob: -15.875076293945312
    7. '```' → logprob: -17.375076293945312
    8. '   ' → logprob: -18.625076293945312
    9. ' ' → logprob: -18.750076293945312
    10. '[this' → logprob: -19.250076293945312

Token 314: '.pos' (ID: 25321)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.4825357496738434
    2. 'self' → logprob: -0.982535719871521
    3. 'pos' → logprob: -5.1075358390808105
    4. '.pos' → logprob: -6.1075358390808105
    5. ' self' → logprob: -9.357535362243652
    6. '[pos' → logprob: -10.232535362243652
    7. 'Pos' → logprob: -12.482535362243652
    8. '[' → logprob: -12.607535362243652
    9. '_pos' → logprob: -12.732535362243652
    10. '	self' → logprob: -12.857535362243652

Token 315: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.02681409753859043
    2. '.' → logprob: -4.026813983917236
    3. 'isdigit' → logprob: -4.776813983917236
    4. ' .' → logprob: -9.026814460754395
    5. ' in' → logprob: -9.901814460754395
    6. ').' → logprob: -11.151814460754395
    7. 'is' → logprob: -12.276814460754395
    8. '].' → logprob: -12.776814460754395
    9. '>=' → logprob: -12.901814460754395
    10. '().' → logprob: -13.151814460754395

Token 316: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.6240566083070007e-06
    2. 'is' → logprob: -13.500001907348633
    3. ' is' → logprob: -15.875001907348633
    4. 'isas' → logprob: -18.000001907348633
    5. 'isal' → logprob: -18.375001907348633
    6. 'isd' → logprob: -19.500001907348633
    7. '```' → logprob: -19.875001907348633
    8. 'digit' → logprob: -20.375001907348633
    9. 'iss' → logprob: -20.875001907348633
    10. '.is' → logprob: -21.500001907348633

Token 317: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005600596312433481
    2. '()' → logprob: -5.505600452423096
    3. '():
' → logprob: -6.505600452423096
    4. ' ():' → logprob: -10.880600929260254
    5. '(' → logprob: -12.755600929260254
    6. ':' → logprob: -14.005600929260254
    7. '()>' → logprob: -14.255600929260254
    8. '():
' → logprob: -14.380600929260254
    9. '()==' → logprob: -14.630600929260254
    10. '():

' → logprob: -14.755600929260254

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04323462396860123
    2. 'count' → logprob: -3.6682345867156982
    3. ' count' → logprob: -4.668234825134277
    4. 'self' → logprob: -5.668234825134277
    5. ' self' → logprob: -6.293234825134277
    6. '               ' → logprob: -7.668234825134277
    7. '   ' → logprob: -8.043234825134277
    8. '       ' → logprob: -8.043234825134277
    9. '[count' → logprob: -8.793234825134277
    10. '            
' → logprob: -8.918234825134277

Token 319: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.001967650605365634
    2. ' count' → logprob: -6.251967430114746
    3. '           ' → logprob: -10.251967430114746
    4. '[count' → logprob: -13.376967430114746
    5. '               ' → logprob: -13.501967430114746
    6. '	count' → logprob: -14.626967430114746
    7. '   ' → logprob: -15.626967430114746
    8. '            ' → logprob: -16.751968383789062
    9. ',count' → logprob: -16.751968383789062
    10. '(count' → logprob: -17.501968383789062

Token 320: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0038013842422515154
    2. 'str' → logprob: -6.003801345825195
    3. '+=' → logprob: -7.253801345825195
    4. ' +=' → logprob: -7.878801345825195
    5. '=' → logprob: -9.628801345825195
    6. 'count' → logprob: -10.128801345825195
    7. '           ' → logprob: -10.753801345825195
    8. '```' → logprob: -10.878801345825195
    9. 'Str' → logprob: -11.128801345825195
    10. '       ' → logprob: -11.378801345825195

Token 321: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04859054833650589
    2. ' +=' → logprob: -3.048590660095215
    3. '+='' → logprob: -13.423590660095215
    4. '+' → logprob: -14.173590660095215
    5. '+="' → logprob: -14.298590660095215
    6. ']+=' → logprob: -15.673590660095215
    7. '.append' → logprob: -16.2985897064209
    8. '+=(' → logprob: -16.4235897064209
    9. '   ' → logprob: -17.0485897064209
    10. '=' → logprob: -17.4235897064209

Token 322: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038038729690015316
    2. ' self' → logprob: -7.875380516052246
    3. '[self' → logprob: -16.37537956237793
    4. '	self' → logprob: -17.00037956237793
    5. '           ' → logprob: -17.62537956237793
    6. '       ' → logprob: -17.87537956237793
    7. ' ' → logprob: -18.25037956237793
    8. '
' → logprob: -18.37537956237793
    9. '   ' → logprob: -18.37537956237793
    10. 'data' → logprob: -18.50037956237793

Token 323: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.001335359294898808
    2. 'data' → logprob: -6.626335144042969
    3. '.' → logprob: -11.751335144042969
    4. '[data' → logprob: -14.376335144042969
    5. ' data' → logprob: -15.501335144042969
    6. '.user' → logprob: -15.626335144042969
    7. ' .' → logprob: -16.25133514404297
    8. '	data' → logprob: -17.00133514404297
    9. '<data' → logprob: -17.00133514404297
    10. '(data' → logprob: -17.12633514404297

Token 324: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.706686690449715e-05
    2. 'self' → logprob: -9.750066757202148
    3. '[' → logprob: -12.250066757202148
    4. ' self' → logprob: -13.125066757202148
    5. '[
' → logprob: -14.125066757202148
    6. '```' → logprob: -14.625066757202148
    7. '	self' → logprob: -15.125066757202148
    8. '<|end|>' → logprob: -15.625066757202148
    9. '(self' → logprob: -16.37506675720215
    10. '$self' → logprob: -16.87506675720215

Token 325: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.05852002277970314
    2. 'pos' → logprob: -3.5585200786590576
    3. '[self' → logprob: -3.8085200786590576
    4. 'self' → logprob: -5.1835198402404785
    5. '[pos' → logprob: -8.433520317077637
    6. '.data' → logprob: -8.808520317077637
    7. 'Pos' → logprob: -8.808520317077637
    8. '_pos' → logprob: -10.933520317077637
    9. ' self' → logprob: -11.433520317077637
    10. '.self' → logprob: -12.558520317077637

Token 326: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7243855595588684
    2. '<|end|>' → logprob: -1.3493854999542236
    3. '           ' → logprob: -1.5993854999542236
    4. 'self' → logprob: -3.9743854999542236
    5. '               ' → logprob: -4.724385738372803
    6. '
' → logprob: -5.099385738372803
    7. '<|end|>' → logprob: -5.099385738372803
    8. ' ' → logprob: -5.474385738372803
    9. ')
' → logprob: -5.974385738372803
    10. '       ' → logprob: -6.724385738372803

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038114727940410376
    2. 'self' → logprob: -5.628811359405518
    3. ' self' → logprob: -9.128811836242676
    4. '   ' → logprob: -9.753811836242676
    5. '       ' → logprob: -10.753811836242676
    6. '               ' → logprob: -11.253811836242676
    7. '		' → logprob: -13.003811836242676
    8. '                   ' → logprob: -13.003811836242676
    9. '	       ' → logprob: -13.503811836242676
    10. '	self' → logprob: -13.878811836242676

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0051030684262514114
    2. ' self' → logprob: -5.75510311126709
    3. '           ' → logprob: -6.25510311126709
    4. '   ' → logprob: -13.63010311126709
    5. '       ' → logprob: -14.38010311126709
    6. '               ' → logprob: -14.38010311126709
    7. '	self' → logprob: -15.38010311126709
    8. ' ' → logprob: -16.255102157592773
    9. '                   ' → logprob: -16.380102157592773
    10. '[self' → logprob: -17.380102157592773

Token 329: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.004085047636181116
    2. 'pos' → logprob: -5.504085063934326
    3. ' pos' → logprob: -12.629084587097168
    4. '	pos' → logprob: -13.504084587097168
    5. '_pos' → logprob: -13.879084587097168
    6. '.' → logprob: -14.004084587097168
    7. 'Pos' → logprob: -16.129085540771484
    8. '[pos' → logprob: -16.629085540771484
    9. '.user' → logprob: -18.754085540771484
    10. ' .' → logprob: -18.754085540771484

Token 330: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029751179739832878
    2. ' +=' → logprob: -3.5297510623931885
    3. '+' → logprob: -14.40475082397461
    4. ']+=' → logprob: -15.90475082397461
    5. '    ' → logprob: -18.02975082397461
    6. '           ' → logprob: -18.27975082397461
    7. '=' → logprob: -18.52975082397461
    8. '   ' → logprob: -18.52975082397461
    9. '+='' → logprob: -19.02975082397461
    10. '            ' → logprob: -19.52975082397461

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '```' → logprob: -18.87548828125
    4. '   ' → logprob: -19.37548828125
    5. ' ' → logprob: -20.12548828125
    6. '１' → logprob: -20.25048828125
    7. '۱' → logprob: -20.25048828125
    8. '<|end|>' → logprob: -20.75048828125
    9. '
' → logprob: -20.87548828125
    10. '0' → logprob: -21.31298828125

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -19.000001907348633
    4. '۱' → logprob: -20.125001907348633
    5. '
' → logprob: -20.875001907348633
    6. '１' → logprob: -20.937501907348633
    7. '   ' → logprob: -21.000001907348633
    8. '0' → logprob: -21.625001907348633
    9. '१' → logprob: -21.937501907348633
    10. '<|end|>' → logprob: -22.000001907348633

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19420795142650604
    2. ' if' → logprob: -1.9442079067230225
    3. 'if' → logprob: -4.444208145141602
    4. ' 
' → logprob: -4.444208145141602
    5. '        
' → logprob: -5.444208145141602
    6. '
' → logprob: -5.694208145141602
    7. '<|end|>' → logprob: -6.944208145141602
    8. '  
' → logprob: -7.569208145141602
    9. '        ' → logprob: -8.319208145141602
    10. ' ' → logprob: -8.569208145141602

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3790309429168701
    2. 'if' → logprob: -1.2540309429168701
    3. ' if' → logprob: -3.50403094291687
    4. '
' → logprob: -10.62903118133545
    5. '        
' → logprob: -11.50403118133545
    6. '```' → logprob: -12.25403118133545
    7. 'count' → logprob: -12.87903118133545
    8. 'assert' → logprob: -14.00403118133545
    9. 'If' → logprob: -14.12903118133545
    10. '   ' → logprob: -14.12903118133545

Token 335: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005434861872345209
    2. '       ' → logprob: -5.505434989929199
    3. ' if' → logprob: -6.630434989929199
    4. 'count' → logprob: -10.2554349899292
    5. 'try' → logprob: -15.1304349899292
    6. '        
' → logprob: -15.1304349899292
    7. '	if' → logprob: -17.005434036254883
    8. 'If' → logprob: -17.005434036254883
    9. 'assert' → logprob: -17.255434036254883
    10. '   ' → logprob: -17.255434036254883

Token 336: ' count' (ID: 3605)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4742853343486786
    2. 'not' → logprob: -0.974285364151001
    3. 'count' → logprob: -8.599285125732422
    4. ' count' → logprob: -10.724285125732422
    5. '	not' → logprob: -14.099285125732422
    6. ' ' → logprob: -14.349285125732422
    7. '   ' → logprob: -14.974285125732422
    8. 'no' → logprob: -15.849285125732422
    9. 'len' → logprob: -16.474285125732422
    10. ' len' → logprob: -17.099285125732422

Token 337: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.500019073486328
    3. 'str' → logprob: -11.750019073486328
    4. 'not' → logprob: -15.375019073486328
    5. '==' → logprob: -15.625019073486328
    6. '```' → logprob: -15.750019073486328
    7. 'Str' → logprob: -16.750019073486328
    8. '=' → logprob: -17.000019073486328
    9. '__' → logprob: -17.250019073486328
    10. '_not' → logprob: -17.750019073486328

Token 338: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759477615356445
    2. '==' → logprob: -0.8259477615356445
    3. '=' → logprob: -12.700947761535645
    4. ' ' → logprob: -13.825947761535645
    5. ')==' → logprob: -13.950947761535645
    6. 'is' → logprob: -14.075947761535645
    7. ')' → logprob: -14.200947761535645
    8. '===' → logprob: -14.325947761535645
    9. ' =' → logprob: -14.575947761535645
    10. ' ===' → logprob: -15.325947761535645

Token 339: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.011668600142002106
    2. ''' → logprob: -4.511668682098389
    3. '""' → logprob: -7.761668682098389
    4. '"":' → logprob: -9.51166820526123
    5. ' '':
' → logprob: -9.63666820526123
    6. '"' → logprob: -10.38666820526123
    7. ' '' → logprob: -10.88666820526123
    8. '   ' → logprob: -13.13666820526123
    9. ' ''' → logprob: -13.63666820526123
    10. '''
' → logprob: -14.13666820526123

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00840050633996725
    2. 'raise' → logprob: -5.1334004402160645
    3. ' raise' → logprob: -6.0084004402160645
    4. '	raise' → logprob: -12.383400917053223
    5. '   ' → logprob: -13.008400917053223
    6. '       ' → logprob: -13.633400917053223
    7. 'Raise' → logprob: -13.633400917053223
    8. '               ' → logprob: -13.758400917053223
    9. '_raise' → logprob: -15.508400917053223
    10. '```' → logprob: -15.633400917053223

Token 341: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0008110555354505777
    2. ' raise' → logprob: -7.2508111000061035
    3. '           ' → logprob: -9.250810623168945
    4. '	raise' → logprob: -12.875810623168945
    5. '               ' → logprob: -13.125810623168945
    6. '   ' → logprob: -15.125810623168945
    7. '       ' → logprob: -16.250810623168945
    8. 'Raise' → logprob: -16.500810623168945
    9. '_raise' → logprob: -17.375810623168945
    10. '                   ' → logprob: -18.000810623168945

Token 342: ' De' (ID: 1516)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -5.676981345459353e-06
    2. ' De' → logprob: -12.125005722045898
    3. 'Value' → logprob: -16.8750057220459
    4. 'Decompiler' → logprob: -17.2500057220459
    5. 'Deque' → logprob: -17.5000057220459
    6. 'de' → logprob: -17.7500057220459
    7. '_De' → logprob: -17.7500057220459
    8. '
' → logprob: -18.3750057220459
    9. '_de' → logprob: -18.5000057220459
    10. '```' → logprob: -19.5000057220459

Token 343: 'compression' (ID: 157910)
  Prédit: 'Compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compression' → logprob: -0.5789793729782104
    2. 'compression' → logprob: -0.8289793729782104
    3. 'Com' → logprob: -6.4539794921875
    4. 'De' → logprob: -7.0789794921875
    5. 'com' → logprob: -8.2039794921875
    6. 'Compressed' → logprob: -9.2039794921875
    7. 'compressed' → logprob: -9.5789794921875
    8. 'compress' → logprob: -9.7039794921875
    9. 'e' → logprob: -9.9539794921875
    10. '_com' → logprob: -11.0789794921875

Token 344: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.842555426876061e-06
    2. 'rror' → logprob: -12.250004768371582
    3. 'error' → logprob: -18.2500057220459
    4. ' Error' → logprob: -18.6250057220459
    5. 'Erro' → logprob: -19.0000057220459
    6. '	Error' → logprob: -19.8750057220459
    7. '_error' → logprob: -20.0000057220459
    8. 'Err' → logprob: -20.5000057220459
    9. '_Error' → logprob: -20.5000057220459
    10. 'SError' → logprob: -20.6250057220459

Token 345: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.226628895296017e-06
    2. '('' → logprob: -12.250007629394531
    3. '(' → logprob: -13.000007629394531
    4. '("'' → logprob: -16.37500762939453
    5. '(
' → logprob: -16.75000762939453
    6. '(f' → logprob: -17.25000762939453
    7. '"' → logprob: -20.12500762939453
    8. '('"' → logprob: -20.87500762939453
    9. '("@' → logprob: -21.12500762939453
    10. '("_' → logprob: -21.25000762939453

Token 346: 'Missing' (ID: 35105)
  Prédit: 'Expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.38007283210754395
    2. 'Missing' → logprob: -1.755072832107544
    3. 'Invalid' → logprob: -2.005072832107544
    4. 'Count' → logprob: -5.130072593688965
    5. '"' → logprob: -7.505072593688965
    6. 'Expect' → logprob: -7.505072593688965
    7. 'No' → logprob: -7.630072593688965
    8. 'Empty' → logprob: -7.880072593688965
    9. 'Number' → logprob: -8.755072593688965
    10. 'Malformed' → logprob: -8.880072593688965

Token 347: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07463357597589493
    2. 'repeat' → logprob: -3.1996335983276367
    3. ' count' → logprob: -4.324633598327637
    4. 'number' → logprob: -4.699633598327637
    5. ' repetition' → logprob: -5.699633598327637
    6. 'compression' → logprob: -5.699633598327637
    7. 're' → logprob: -7.574633598327637
    8. ' number' → logprob: -7.699633598327637
    9. ' repeat' → logprob: -7.699633598327637
    10. 'compressed' → logprob: -7.949633598327637

Token 348: ' number' (ID: 2086)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.10730103403329849
    2. ' for' → logprob: -3.1073009967803955
    3. 'after' → logprob: -3.6073009967803955
    4. ' in' → logprob: -3.7323009967803955
    5. 'for' → logprob: -5.982301235198975
    6. '")' → logprob: -6.107301235198975
    7. ' value' → logprob: -7.732301235198975
    8. 'in' → logprob: -8.232300758361816
    9. ' before' → logprob: -9.232300758361816
    10. 'value' → logprob: -9.232300758361816

Token 349: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.07513736933469772
    2. 'after' → logprob: -2.7001373767852783
    3. '")' → logprob: -5.700137138366699
    4. ' for' → logprob: -6.700137138366699
    5. ' in' → logprob: -7.950137138366699
    6. 'for' → logprob: -9.0751371383667
    7. ' following' → logprob: -9.9501371383667
    8. ')' → logprob: -9.9501371383667
    9. 'in' → logprob: -11.2001371383667
    10. 'following' → logprob: -11.5751371383667

Token 350: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.02702215686440468
    2. ' @' → logprob: -4.277022361755371
    3. ' '@' → logprob: -4.777022361755371
    4. ''' → logprob: -5.527022361755371
    5. '"' → logprob: -8.402022361755371
    6. '@
' → logprob: -9.652022361755371
    7. '@"' → logprob: -10.402022361755371
    8. '@

' → logprob: -11.277022361755371
    9. '`' → logprob: -11.652022361755371
    10. ' at' → logprob: -12.277022361755371

Token 351: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5760179162025452
    2. '")
' → logprob: -0.8260179162025452
    3. '@' → logprob: -10.326018333435059
    4. '")
' → logprob: -11.451018333435059
    5. ' at' → logprob: -11.701018333435059
    6. ''")
' → logprob: -11.826018333435059
    7. '")

' → logprob: -11.951018333435059
    8. ' in' → logprob: -12.201018333435059
    9. '')' → logprob: -12.951018333435059
    10. '.")
' → logprob: -13.576018333435059

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011641497258096933
    2. '        
' → logprob: -7.126163959503174
    3. ' if' → logprob: -8.376164436340332
    4. 'char' → logprob: -10.376164436340332
    5. 'if' → logprob: -10.626164436340332
    6. '
' → logprob: -10.751164436340332
    7. ' char' → logprob: -11.501164436340332
    8. ',' → logprob: -11.626164436340332
    9. '      ' → logprob: -12.001164436340332
    10. '        ' → logprob: -12.376164436340332

Token 353: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.041091520339250565
    2. '       ' → logprob: -3.6660914421081543
    3. ' count' → logprob: -4.291091442108154
    4. 'if' (adapté à ' if') → logprob: -7.541091442108154
    5. ' if' → logprob: -7.916091442108154
    6. 'try' → logprob: -10.041091918945312
    7. '        
' → logprob: -10.791091918945312
    8. 'return' → logprob: -12.041091918945312
    9. ' try' → logprob: -12.166091918945312
    10. 'num' → logprob: -12.291091918945312

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07144369930028915
    2. ' self' → logprob: -3.571443796157837
    3. 'int' → logprob: -4.321443557739258
    4. 'count' → logprob: -4.446443557739258
    5. 'not' → logprob: -4.571443557739258
    6. ' not' → logprob: -5.446443557739258
    7. ' int' → logprob: -7.946443557739258
    8. 'len' → logprob: -8.321443557739258
    9. '   ' → logprob: -8.571443557739258
    10. ' count' → logprob: -8.696443557739258

Token 355: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0013501148205250502
    2. '.data' → logprob: -7.251349925994873
    3. 'pos' → logprob: -7.376349925994873
    4. '.length' → logprob: -12.626350402832031
    5. '.' → logprob: -12.876350402832031
    6. '	pos' → logprob: -12.876350402832031
    7. 'data' → logprob: -13.501350402832031
    8. ' pos' → logprob: -13.751350402832031
    9. '.count' → logprob: -13.876350402832031
    10. '[pos' → logprob: -14.501350402832031

Token 356: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6335794925689697
    2. '>=' → logprob: -0.7585794925689697
    3. '==' → logprob: -7.258579254150391
    4. ' ==' → logprob: -8.25857925415039
    5. '   ' → logprob: -11.88357925415039
    6. '>' → logprob: -13.00857925415039
    7. ')>=' → logprob: -13.50857925415039
    8. '```' → logprob: -13.63357925415039
    9. ' ' → logprob: -13.75857925415039
    10. ']>=' → logprob: -13.88357925415039

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080897197127342
    2. ' self' → logprob: -5.504080772399902
    3. '       ' → logprob: -13.504080772399902
    4. '           ' → logprob: -14.754080772399902
    5. 'len' → logprob: -15.504080772399902
    6. '   ' → logprob: -16.50408172607422
    7. '=self' → logprob: -16.62908172607422
    8. '[self' → logprob: -17.25408172607422
    9. '	self' → logprob: -17.50408172607422
    10. '(self' → logprob: -17.50408172607422

Token 358: '.length' (ID: 3116)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.21028555929660797
    2. '.length' → logprob: -1.8352855443954468
    3. 'self' → logprob: -3.7102856636047363
    4. ' length' → logprob: -5.585285663604736
    5. '_length' → logprob: -6.960285663604736
    6. 'len' → logprob: -7.460285663604736
    7. ' self' → logprob: -9.335285186767578
    8. '.' → logprob: -9.960285186767578
    9. 'ength' → logprob: -9.960285186767578
    10. '       ' → logprob: -10.460285186767578

Token 359: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08424485474824905
    2. ':
' → logprob: -3.084244966506958
    3. 'or' → logprob: -3.834244966506958
    4. '           ' → logprob: -4.959244728088379
    5. ':' → logprob: -5.084244728088379
    6. '       ' → logprob: -9.709244728088379
    7. ',' → logprob: -10.459244728088379
    8. '   ' → logprob: -10.709244728088379
    9. '               ' → logprob: -10.959244728088379
    10. '):
' → logprob: -11.084244728088379

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008219863288104534
    2. 'raise' → logprob: -5.0082197189331055
    3. ' raise' → logprob: -6.6332197189331055
    4. '   ' → logprob: -8.758219718933105
    5. '	raise' → logprob: -11.383219718933105
    6. '       ' → logprob: -11.508219718933105
    7. '               ' → logprob: -13.008219718933105
    8. 'Raise' → logprob: -13.133219718933105
    9. '```' → logprob: -13.633219718933105
    10. ' ' → logprob: -14.133219718933105

Token 361: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.315708190202713
    2. ' raise' → logprob: -1.3157081604003906
    3. '           ' → logprob: -6.065708160400391
    4. '	raise' → logprob: -9.56570816040039
    5. '   ' → logprob: -10.06570816040039
    6. '       ' → logprob: -11.94070816040039
    7. '               ' → logprob: -13.69070816040039
    8. 'Raise' → logprob: -14.06570816040039
    9. '            ' → logprob: -14.69070816040039
    10. '_raise' → logprob: -15.44070816040039

Token 362: ' De' (ID: 1516)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -1.1472419600977446e-06
    2. ' De' → logprob: -13.750000953674316
    3. '_De' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '_de' → logprob: -19.500001907348633
    6. 'de' → logprob: -19.625001907348633
    7. 'Deque' → logprob: -19.750001907348633
    8. 'Decompiler' → logprob: -20.375001907348633
    9. '       ' → logprob: -20.875001907348633
    10. '
' → logprob: -21.500001907348633

Token 363: 'compression' (ID: 157910)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -0.4167206883430481
    2. 'Compression' → logprob: -1.1667206287384033
    3. 'Com' → logprob: -3.7917206287384033
    4. 'compression' → logprob: -5.041720867156982
    5. 'Compressed' → logprob: -8.666720390319824
    6. 'com' → logprob: -9.041720390319824
    7. 'compressed' → logprob: -10.291720390319824
    8. 'Compress' → logprob: -10.791720390319824
    9. 'compress' → logprob: -10.916720390319824
    10. '
' → logprob: -12.666720390319824

Token 364: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.704273118884885e-07
    2. 'rror' → logprob: -14.625000953674316
    3. 'error' → logprob: -16.0
    4. 'Token' → logprob: -18.5
    5. '(Error' → logprob: -19.0
    6. '	Error' → logprob: -19.5
    7. 'ERROR' → logprob: -19.875
    8. 'SError' → logprob: -19.875
    9. 'Erro' → logprob: -20.0
    10. ' Error' → logprob: -20.125

Token 365: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '('' → logprob: -18.0
    4. '(f' → logprob: -19.125
    5. '(
' → logprob: -20.0
    6. '"' → logprob: -21.75
    7. ' ("' → logprob: -22.75
    8. '("'' → logprob: -23.5
    9. '(("' → logprob: -23.75
    10. 'f' → logprob: -23.875

Token 366: 'Missing' (ID: 35105)
  Prédit: 'Missing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Missing' → logprob: -0.23669688403606415
    2. 'Unexpected' → logprob: -1.7366968393325806
    3. 'Expected' → logprob: -3.98669695854187
    4. ' Missing' → logprob: -4.736696720123291
    5. '"' → logprob: -5.861696720123291
    6. 'Incomplete' → logprob: -5.861696720123291
    7. ' Unexpected' → logprob: -6.611696720123291
    8. ' Expected' → logprob: -9.11169719696045
    9. 'Expect' → logprob: -10.48669719696045
    10. 'Malformed' → logprob: -10.48669719696045

Token 367: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.08687912672758102
    2. ' character' → logprob: -2.586879014968872
    3. 'char' → logprob: -5.336879253387451
    4. 'compressed' → logprob: -5.836879253387451
    5. ' compressed' → logprob: -10.086878776550293
    6. 'token' → logprob: -10.336878776550293
    7. 'data' → logprob: -10.586878776550293
    8. 'count' → logprob: -10.711878776550293
    9. 'compression' → logprob: -10.836878776550293
    10. ' char' → logprob: -11.336878776550293

Token 368: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.22213302552700043
    2. 'after' → logprob: -1.7221330404281616
    3. ' to' → logprob: -4.472133159637451
    4. 'to' → logprob: -5.097133159637451
    5. ' for' → logprob: -6.347133159637451
    6. 'for' → logprob: -7.472133159637451
    7. ' following' → logprob: -7.847133159637451
    8. 'following' → logprob: -9.097132682800293
    9. '   ' → logprob: -9.972132682800293
    10. ' ' → logprob: -10.472132682800293

Token 369: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07969886064529419
    2. ' count' → logprob: -2.7046988010406494
    3. 'number' → logprob: -5.2046990394592285
    4. ' number' → logprob: -6.2046990394592285
    5. '@' → logprob: -6.5796990394592285
    6. 'compressed' → logprob: -7.7046990394592285
    7. ' the' → logprob: -9.45469856262207
    8. 'the' → logprob: -9.45469856262207
    9. 'digits' → logprob: -9.57969856262207
    10. ' compressed' → logprob: -10.32969856262207

Token 370: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5001906156539917
    2. '")' → logprob: -1.0001906156539917
    3. ' number' → logprob: -4.250190734863281
    4. 'number' → logprob: -4.500190734863281
    5. '")
' → logprob: -8.875190734863281
    6. ' for' → logprob: -9.750190734863281
    7. 'string' → logprob: -10.125190734863281
    8. '_number' → logprob: -10.750190734863281
    9. ' ")
' → logprob: -10.750190734863281
    10. ' after' → logprob: -10.875190734863281

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32231324911117554
    2. 'ch' → logprob: -1.9473133087158203
    3. '
' → logprob: -2.6973133087158203
    4. 'char' → logprob: -2.8223133087158203
    5. '        
' → logprob: -5.32231330871582
    6. ' ch' → logprob: -7.44731330871582
    7. ' char' → logprob: -7.94731330871582
    8. '    
' → logprob: -10.32231330871582
    9. '```' → logprob: -10.44731330871582
    10. '
' → logprob: -10.57231330871582

Token 372: ' count' (ID: 3605)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.25196316838264465
    2. 'ch' → logprob: -1.5019631385803223
    3. 'c' → logprob: -10.75196361541748
    4. '       ' → logprob: -11.75196361541748
    5. 'count' (adapté à ' count') → logprob: -13.37696361541748
    6. ' char' → logprob: -13.87696361541748
    7. '        
' → logprob: -14.12696361541748
    8. 'character' → logprob: -14.37696361541748
    9. '   ' → logprob: -14.62696361541748
    10. ' ch' → logprob: -15.50196361541748

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005279772914946079
    2. '=' → logprob: -5.255279541015625
    3. '=int' → logprob: -10.005279541015625
    4. ' ' → logprob: -14.755279541015625
    5. '_str' → logprob: -15.755279541015625
    6. 'int' → logprob: -16.505279541015625
    7. '=parse' → logprob: -17.630279541015625
    8. ':int' → logprob: -17.755279541015625
    9. '   ' → logprob: -17.755279541015625
    10. '_' → logprob: -17.880279541015625

Token 374: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '(int' → logprob: -21.750059127807617
    4. '	int' → logprob: -22.625059127807617
    5. '=int' → logprob: -22.750059127807617
    6. '       ' → logprob: -23.000059127807617
    7. '[int' → logprob: -23.250059127807617
    8. '   ' → logprob: -23.500059127807617
    9. '<int' → logprob: -23.625059127807617
    10. ':int' → logprob: -24.250059127807617

Token 375: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -2.2603901015827432e-05
    2. 'count' → logprob: -10.750022888183594
    3. '(' → logprob: -13.750022888183594
    4. '[count' → logprob: -17.375022888183594
    5. '(
' → logprob: -18.250022888183594
    6. '=count' → logprob: -19.375022888183594
    7. ',count' → logprob: -19.625022888183594
    8. ' (' → logprob: -19.625022888183594
    9. '<count' → logprob: -19.625022888183594
    10. ' count' → logprob: -19.875022888183594

Token 376: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.6722720265388489
    2. 'count' → logprob: -1.172271966934204
    3. '(count' → logprob: -1.797271966934204
    4. '[count' → logprob: -4.672272205352783
    5. ')' → logprob: -6.047272205352783
    6. 'str' → logprob: -6.422272205352783
    7. '_count' → logprob: -8.922271728515625
    8. 'Str' → logprob: -9.047271728515625
    9. ' count' → logprob: -9.297271728515625
    10. ')
' → logprob: -9.797271728515625

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011052302084863186
    2. ')
' → logprob: -4.511052131652832
    3. ' )' → logprob: -12.761052131652832
    4. '       ' → logprob: -14.136052131652832
    5. ' )
' → logprob: -14.886052131652832
    6. ')

' → logprob: -15.136052131652832
    7. ')
' → logprob: -15.261052131652832
    8. ',' → logprob: -17.26105308532715
    9. '),' → logprob: -17.51105308532715
    10. '           ' → logprob: -18.01105308532715

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22096550464630127
    2. 'char' → logprob: -2.0959653854370117
    3. 'ch' → logprob: -2.5959653854370117
    4. ' char' → logprob: -8.345965385437012
    5. '        
' → logprob: -9.095965385437012
    6. '	' → logprob: -9.595965385437012
    7. ' ch' → logprob: -9.720965385437012
    8. 'self' → logprob: -10.095965385437012
    9. 'c' → logprob: -10.220965385437012
    10. '	ch' → logprob: -10.345965385437012

Token 379: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.12694889307022095
    2. 'char' → logprob: -2.126948833465576
    3. '       ' → logprob: -11.001949310302734
    4. ' ch' → logprob: -12.876949310302734
    5. 'if' → logprob: -14.376949310302734
    6. ' char' → logprob: -14.751949310302734
    7. '        
' → logprob: -15.376949310302734
    8. '	ch' → logprob: -15.751949310302734
    9. 'c' → logprob: -16.626949310302734
    10. 'self' → logprob: -17.126949310302734

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. '=self' → logprob: -14.349078178405762
    4. ' ' → logprob: -14.349078178405762
    5. '   ' → logprob: -16.599079132080078
    6. '=
' → logprob: -17.099079132080078
    7. 'self' → logprob: -17.599079132080078
    8. '       ' → logprob: -17.849079132080078
    9. '  ' → logprob: -18.099079132080078
    10. ' ' → logprob: -18.224079132080078

Token 381: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00671584764495492
    2. ' self' → logprob: -5.006715774536133
    3. '       ' → logprob: -15.381715774536133
    4. '[self' → logprob: -15.881715774536133
    5. '	self' → logprob: -16.631715774536133
    6. '(self' → logprob: -17.881715774536133
    7. '           ' → logprob: -18.006715774536133
    8. '=self' → logprob: -18.006715774536133
    9. '   ' → logprob: -18.756715774536133
    10. '```' → logprob: -19.006715774536133

Token 382: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0057742539793252945
    2. 'self' → logprob: -5.255774021148682
    3. 'data' → logprob: -8.13077449798584
    4. '[self' → logprob: -8.88077449798584
    5. ' self' → logprob: -9.38077449798584
    6. ' data' → logprob: -11.75577449798584
    7. '.self' → logprob: -12.63077449798584
    8. '   ' → logprob: -12.75577449798584
    9. '       ' → logprob: -13.13077449798584
    10. '.' → logprob: -13.50577449798584

Token 383: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.1160349458805285e-05
    2. 'self' → logprob: -11.625011444091797
    3. '[' → logprob: -13.625011444091797
    4. ' self' → logprob: -14.125011444091797
    5. '[
' → logprob: -16.000011444091797
    6. ' [' → logprob: -16.500011444091797
    7. ' ' → logprob: -17.625011444091797
    8. '   ' → logprob: -18.375011444091797
    9. '```' → logprob: -18.625011444091797
    10. '	self' → logprob: -18.875011444091797

Token 384: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.04630208760499954
    2. 'pos' → logprob: -3.796302080154419
    3. '[self' → logprob: -4.171302318572998
    4. 'self' → logprob: -4.921302318572998
    5. '[pos' → logprob: -10.79630184173584
    6. '.data' → logprob: -11.04630184173584
    7. 'Pos' → logprob: -11.17130184173584
    8. '_pos' → logprob: -11.67130184173584
    9. ' self' → logprob: -11.79630184173584
    10. '.position' → logprob: -14.29630184173584

Token 385: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11010808497667313
    2. ')
' → logprob: -2.8601081371307373
    3. ')' → logprob: -3.8601081371307373
    4. 'self' → logprob: -3.9851081371307373
    5. ']
' → logprob: -5.610107898712158
    6. ']' → logprob: -6.485107898712158
    7. ' self' → logprob: -6.860107898712158
    8. '           ' → logprob: -7.485107898712158
    9. '<|end|>' → logprob: -8.235108375549316
    10. '```' → logprob: -9.610108375549316

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6938173174858093
    2. 'self' → logprob: -0.6938173174858093
    3. ' self' → logprob: -7.443817138671875
    4. '
' → logprob: -10.193817138671875
    5. '   ' → logprob: -10.943817138671875
    6. '	self' → logprob: -11.318817138671875
    7. '        
' → logprob: -12.193817138671875
    8. '```' → logprob: -12.193817138671875
    9. '[self' → logprob: -12.443817138671875
    10. '<|end|>' → logprob: -13.568817138671875

Token 387: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002708465326577425
    2. '       ' → logprob: -6.002708435058594
    3. ' self' → logprob: -8.377708435058594
    4. '
' → logprob: -13.002708435058594
    5. '	self' → logprob: -15.502708435058594
    6. '[self' → logprob: -16.002708435058594
    7. '```' → logprob: -16.127708435058594
    8. '        
' → logprob: -16.627708435058594
    9. '   ' → logprob: -16.627708435058594
    10. '#' → logprob: -18.377708435058594

Token 388: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7741541862487793
    2. ' ch' → logprob: -1.1491541862487793
    3. ' not' → logprob: -1.6491541862487793
    4. 'not' → logprob: -3.5241541862487793
    5. ' ' → logprob: -9.149154663085938
    6. '   ' → logprob: -9.774154663085938
    7. '  ' → logprob: -10.024154663085938
    8. '	ch' → logprob: -10.586654663085938
    9. '(ch' → logprob: -10.774154663085938
    10. ' ' → logprob: -11.524154663085938

Token 389: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8662540316581726
    2. ' ==' → logprob: -0.8662540316581726
    3. ' in' → logprob: -2.2412540912628174
    4. ' not' → logprob: -3.8662540912628174
    5. 'in' → logprob: -4.241253852844238
    6. 'not' → logprob: -5.241253852844238
    7. '=='' → logprob: -5.366253852844238
    8. 'is' → logprob: -5.866253852844238
    9. '.' → logprob: -6.616253852844238
    10. 'isdigit' → logprob: -6.616253852844238

Token 390: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001657565007917583
    2. '"' → logprob: -8.750165939331055
    3. ' '@' → logprob: -12.625165939331055
    4. '('@' → logprob: -13.000165939331055
    5. '@' → logprob: -14.000165939331055
    6. ''#' → logprob: -15.875165939331055
    7. ''\' → logprob: -16.375165939331055
    8. ''at' → logprob: -16.500165939331055
    9. '''' → logprob: -16.875165939331055
    10. ''user' → logprob: -17.125165939331055

Token 391: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.038343142718076706
    2. '           ' → logprob: -3.5383431911468506
    3. ' or' → logprob: -5.7883429527282715
    4. ':' → logprob: -5.9133429527282715
    5. '):
' → logprob: -6.7883429527282715
    6. '':
' → logprob: -7.1633429527282715
    7. '       ' → logprob: -8.66334342956543
    8. '
' → logprob: -9.03834342956543
    9. ''):
' → logprob: -9.16334342956543
    10. ' :
' → logprob: -9.53834342956543

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3410814702510834
    2. 'raise' → logprob: -1.5910815000534058
    3. ' raise' → logprob: -2.466081380844116
    4. '	raise' → logprob: -8.341081619262695
    5. '   ' → logprob: -9.716081619262695
    6. 'Raise' → logprob: -10.341081619262695
    7. '       ' → logprob: -10.966081619262695
    8. '               ' → logprob: -11.716081619262695
    9. '```' → logprob: -12.466081619262695
    10. '_raise' → logprob: -12.591081619262695

Token 393: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.13822928071022034
    2. ' raise' → logprob: -2.1382293701171875
    3. '           ' → logprob: -4.5132293701171875
    4. '       ' → logprob: -8.888229370117188
    5. '   ' → logprob: -9.638229370117188
    6. '	raise' → logprob: -9.763229370117188
    7. 'Raise' → logprob: -12.263229370117188
    8. '               ' → logprob: -12.638229370117188
    9. 'self' → logprob: -13.013229370117188
    10. '_raise' → logprob: -13.513229370117188

Token 394: ' De' (ID: 1516)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -0.00015860427811276168
    2. ' De' → logprob: -8.750158309936523
    3. '_De' → logprob: -16.625158309936523
    4. 'Decompiler' → logprob: -16.875158309936523
    5. 'Deque' → logprob: -17.875158309936523
    6. '_de' → logprob: -18.250158309936523
    7. 'Decrypt' → logprob: -20.000158309936523
    8. 'de' → logprob: -20.375158309936523
    9. '   ' → logprob: -20.875158309936523
    10. '
' → logprob: -21.125158309936523

Token 395: 'compression' (ID: 157910)
  Prédit: 'Compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compression' → logprob: -0.42681190371513367
    2. 'De' → logprob: -1.426811933517456
    3. 'compression' → logprob: -2.551811933517456
    4. 'Com' → logprob: -3.801811933517456
    5. 'Compressed' → logprob: -5.551811695098877
    6. 'com' → logprob: -6.676811695098877
    7. 'Compress' → logprob: -7.176811695098877
    8. 'compressed' → logprob: -7.551811695098877
    9. 'compress' → logprob: -7.676811695098877
    10. '_com' → logprob: -9.301812171936035

Token 396: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.3856492842023727e-06
    2. 'Token' → logprob: -14.500000953674316
    3. 'rror' → logprob: -14.500000953674316
    4. 'error' → logprob: -15.625000953674316
    5. 'De' → logprob: -16.625001907348633
    6. 'SError' → logprob: -17.750001907348633
    7. 'Data' → logprob: -19.000001907348633
    8. '_error' → logprob: -19.375001907348633
    9. '	Error' → logprob: -19.500001907348633
    10. 'Input' → logprob: -19.625001907348633

Token 397: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '"' → logprob: -15.875015258789062
    4. '('' → logprob: -15.875015258789062
    5. '(
' → logprob: -18.250015258789062
    6. '(f' → logprob: -18.875015258789062
    7. '("'' → logprob: -18.875015258789062
    8. '("")' → logprob: -19.625015258789062
    9. '("("' → logprob: -19.875015258789062
    10. '()' → logprob: -20.000015258789062

Token 398: 'De' (ID: 1923)
  Prédit: 'Nested'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Nested' → logprob: -0.6013866662979126
    2. '"' → logprob: -1.2263866662979126
    3. 'Unexpected' → logprob: -2.226386547088623
    4. 'Invalid' → logprob: -3.476386547088623
    5. ' Nested' → logprob: -4.851386547088623
    6. 'Missing' → logprob: -5.101386547088623
    7. 'Double' → logprob: -6.976386547088623
    8. 'Repeated' → logprob: -7.101386547088623
    9. 'Cannot' → logprob: -7.476386547088623
    10. ' Unexpected' → logprob: -7.851386547088623

Token 399: 'compressed' (ID: 91086)
  Prédit: 'compressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.04391377419233322
    2. 'compression' → logprob: -3.1689138412475586
    3. 'compress' → logprob: -7.918913841247559
    4. 'fault' → logprob: -9.293913841247559
    5. 'uplicate' → logprob: -9.543913841247559
    6. 'unexpected' → logprob: -9.668913841247559
    7. 'invalid' → logprob: -10.043913841247559
    8. 'com' → logprob: -10.293913841247559
    9. 'Compressed' → logprob: -10.543913841247559
    10. 'finite' → logprob: -10.668913841247559

Token 400: ' string' (ID: 1621)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.09461893886327744
    2. 'character' → logprob: -3.219619035720825
    3. ' token' → logprob: -3.719619035720825
    4. 'token' → logprob: -4.969618797302246
    5. ' sequence' → logprob: -4.969618797302246
    6. '@' → logprob: -5.969618797302246
    7. ' data' → logprob: -5.969618797302246
    8. 'char' → logprob: -6.094618797302246
    9. 'sequence' → logprob: -6.969618797302246
    10. 'data' → logprob: -7.469618797302246

Token 401: ' cannot' (ID: 6284)
  Prédit: ' cannot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.2342593669891357
    2. 'cannot' → logprob: -1.3592593669891357
    3. ' character' → logprob: -1.7342593669891357
    4. 'character' → logprob: -1.9842593669891357
    5. ' contains' → logprob: -2.6092593669891357
    6. 'contains' → logprob: -3.6092593669891357
    7. ' can't' → logprob: -4.484259605407715
    8. 'char' → logprob: -4.734259605407715
    9. ' ends' → logprob: -5.984259605407715
    10. 'token' → logprob: -6.109259605407715

Token 402: ' contain' (ID: 10232)
  Prédit: ' contain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.17236055433750153
    2. ' have' → logprob: -2.29736065864563
    3. ' end' → logprob: -4.047360420227051
    4. 'contain' → logprob: -4.297360420227051
    5. 'expand' → logprob: -5.297360420227051
    6. ' include' → logprob: -5.422360420227051
    7. ' expand' → logprob: -5.422360420227051
    8. ' start' → logprob: -5.672360420227051
    9. ' use' → logprob: -6.172360420227051
    10. 'have' → logprob: -6.297360420227051

Token 403: ' '@' (ID: 6565)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.506056010723114
    2. 'compressed' → logprob: -1.8810560703277588
    3. 'nested' → logprob: -2.006056070327759
    4. ''' → logprob: -2.756056070327759
    5. 'another' → logprob: -3.381056070327759
    6. '"' → logprob: -5.00605583190918
    7. 'recursive' → logprob: -6.38105583190918
    8. '@"' → logprob: -6.75605583190918
    9. 'an' → logprob: -7.50605583190918
    10. 'a' → logprob: -7.50605583190918

Token 404: ''")
' (ID: 169837)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022158553823828697
    2. ''")
' → logprob: -4.147158622741699
    3. '')' → logprob: -5.647158622741699
    4. ''"' → logprob: -7.147158622741699
    5. '')")
' → logprob: -7.272158622741699
    6. ' in' → logprob: -8.5221586227417
    7. '@' → logprob: -8.6471586227417
    8. '')"' → logprob: -8.6471586227417
    9. ' character' → logprob: -9.1471586227417
    10. '"' → logprob: -9.2721586227417

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09001389145851135
    2. 'self' → logprob: -2.4650139808654785
    3. ' self' → logprob: -7.2150139808654785
    4. '
' → logprob: -8.21501350402832
    5. '```' → logprob: -10.21501350402832
    6. '   ' → logprob: -10.84001350402832
    7. '<|end|>' → logprob: -12.59001350402832
    8. '           ' → logprob: -12.96501350402832
    9. '	self' → logprob: -13.59001350402832
    10. '        
' → logprob: -13.59001350402832

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06225212663412094
    2. '       ' → logprob: -2.8122520446777344
    3. ' self' → logprob: -8.312252044677734
    4. '
' → logprob: -10.812252044677734
    5. '   ' → logprob: -11.062252044677734
    6. '```' → logprob: -13.312252044677734
    7. '	self' → logprob: -14.312252044677734
    8. '        
' → logprob: -15.562252044677734
    9. '[self' → logprob: -15.687252044677734
    10. '           ' → logprob: -15.937252044677734

Token 407: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -7.505351095460355e-05
    2. 'pos' → logprob: -9.500075340270996
    3. ' pos' → logprob: -16.12507438659668
    4. '.char' → logprob: -16.62507438659668
    5. '	pos' → logprob: -18.37507438659668
    6. '.data' → logprob: -19.12507438659668
    7. '_pos' → logprob: -19.62507438659668
    8. '.' → logprob: -20.12507438659668
    9. '[pos' → logprob: -20.62507438659668
    10. ' .' → logprob: -20.75007438659668

Token 408: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014133334159851
    2. ' +=' → logprob: -1.7014133930206299
    3. ']+=' → logprob: -17.951414108276367
    4. '   ' → logprob: -18.451414108276367
    5. '+' → logprob: -18.576414108276367
    6. '    ' → logprob: -20.951414108276367
    7. '	' → logprob: -20.951414108276367
    8. '+='' → logprob: -21.326414108276367
    9. '+="' → logprob: -21.451414108276367
    10. ' ' → logprob: -21.576414108276367

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.750019073486328
    4. '```' → logprob: -19.750019073486328
    5. '
' → logprob: -19.875019073486328
    6. '       ' → logprob: -22.000019073486328
    7. '１' → logprob: -22.812519073486328
    8. '۱' → logprob: -22.812519073486328
    9. ' ' → logprob: -23.062519073486328
    10. '+' → logprob: -23.500019073486328

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -20.5
    4. '１' → logprob: -21.75
    5. '   ' → logprob: -21.75
    6. '
' → logprob: -22.25
    7. '۱' → logprob: -22.5625
    8. '`' → logprob: -23.375
    9. '0' → logprob: -24.125
    10. '' → logprob: -24.3125

Token 411: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38792484998703003
    2. '       ' → logprob: -1.1379249095916748
    3. ' return' → logprob: -6.887924671173096
    4. '
' → logprob: -10.887925148010254
    5. '   ' → logprob: -11.387925148010254
    6. '	return' → logprob: -13.137925148010254
    7. '           ' → logprob: -15.012925148010254
    8. '	' → logprob: -15.137925148010254
    9. '```' → logprob: -15.637925148010254
    10. '        
' → logprob: -15.887925148010254

Token 412: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3872089982032776
    2. '       ' → logprob: -1.1372089385986328
    3. ' return' → logprob: -8.012208938598633
    4. '   ' → logprob: -12.137208938598633
    5. '	return' → logprob: -14.262208938598633
    6. '```' → logprob: -15.887208938598633
    7. '{return' → logprob: -16.137208938598633
    8. '           ' → logprob: -16.387208938598633
    9. '
' → logprob: -16.387208938598633
    10. ':return' → logprob: -17.137208938598633

Token 413: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.153795766294934e-06
    2. ' return' → logprob: -12.500005722045898
    3. '       ' → logprob: -13.000005722045898
    4. '
' → logprob: -15.875005722045898
    5. '   ' → logprob: -18.2500057220459
    6. '	return' → logprob: -18.8750057220459
    7. '        
' → logprob: -19.7500057220459
    8. '```' → logprob: -20.5000057220459
    9. '
' → logprob: -21.8750057220459
    10. '           ' → logprob: -22.0000057220459

Token 414: ' Com' (ID: 1390)
  Prédit: 'Compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Compressed' → logprob: -1.9361264946837764e-07
    2. 'Com' → logprob: -16.25
    3. ' Com' → logprob: -19.5
    4. 'Compress' → logprob: -20.875
    5. 'Compression' → logprob: -22.25
    6. 'Cached' → logprob: -22.375
    7. 'compressed' → logprob: -22.625
    8. '   ' → logprob: -23.875
    9. ' compressed' → logprob: -23.875
    10. 'Composable' → logprob: -24.625

Token 415: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -1.9266199160483666e-05
    2. 'Pressed' → logprob: -11.000019073486328
    3. 'ressed' → logprob: -13.250019073486328
    4. ' pressed' → logprob: -15.375019073486328
    5. 'Compressed' → logprob: -15.375019073486328
    6. 'p' → logprob: -16.250019073486328
    7. '```' → logprob: -16.625019073486328
    8. '_pressed' → logprob: -16.875019073486328
    9. 'press' → logprob: -17.625019073486328
    10. '-' → logprob: -17.750019073486328

Token 416: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: 0.0
    2. 'token' → logprob: -17.875
    3. ' Token' → logprob: -18.0
    4. 'Tokens' → logprob: -18.125
    5. 'oken' → logprob: -18.5
    6. '	Token' → logprob: -18.5
    7. '_token' → logprob: -19.5
    8. '<Token' → logprob: -19.5
    9. 'Tok' → logprob: -19.75
    10. 'To' → logprob: -19.875

Token 417: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.003187459195032716
    2. 'count' → logprob: -5.753187656402588
    3. '(' → logprob: -11.75318717956543
    4. '(
' → logprob: -13.62818717956543
    5. '[count' → logprob: -15.25318717956543
    6. ' count' → logprob: -15.37818717956543
    7. ' (' → logprob: -16.25318717956543
    8. '<count' → logprob: -16.75318717956543
    9. ',count' → logprob: -17.75318717956543
    10. '$count' → logprob: -17.87818717956543

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019691966008394957
    2. ',ch' → logprob: -6.251969337463379
    3. ' ,' → logprob: -10.251969337463379
    4. ',
' → logprob: -12.376969337463379
    5. ',char' → logprob: -14.251969337463379
    6. ',c' → logprob: -15.251969337463379
    7. ',p' → logprob: -17.126968383789062
    8. ',s' → logprob: -17.501968383789062
    9. ',count' → logprob: -17.626968383789062
    10. ',n' → logprob: -17.751968383789062

Token 419: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0007099286303855479
    2. ' ch' → logprob: -7.2507100105285645
    3. '	ch' → logprob: -18.875709533691406
    4. '[ch' → logprob: -20.250709533691406
    5. 'char' → logprob: -20.500709533691406
    6. 'chr' → logprob: -21.375709533691406
    7. ''ch' → logprob: -21.625709533691406
    8. '(ch' → logprob: -21.625709533691406
    9. 'Ch' → logprob: -21.750709533691406
    10. ' ' → logprob: -21.875709533691406

Token 420: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -16.7500057220459
    4. ')

' → logprob: -18.1250057220459
    5. ')return' → logprob: -18.6250057220459
    6. ')`' → logprob: -19.6250057220459
    7. ')#' → logprob: -19.8750057220459
    8. '}' → logprob: -20.1250057220459
    9. ')}' → logprob: -20.2500057220459
    10. '<|end|>' → logprob: -20.2500057220459

Token 421: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' De' (ID: 1516)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -0.0011486716102808714
    2. ' De' → logprob: -7.501148700714111
    3. 'Decoder' → logprob: -8.251148223876953
    4. 'Com' → logprob: -8.626148223876953
    5. 'Inflater' → logprob: -10.251148223876953
    6. 'String' → logprob: -10.251148223876953
    7. 'Decompiler' → logprob: -10.376148223876953
    8. ' decom' → logprob: -11.251148223876953
    9. 'Token' → logprob: -11.751148223876953
    10. 'Tokenizer' → logprob: -12.376148223876953

Token 423: 'compress' (ID: 69636)
  Prédit: 'compress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.004667218774557114
    2. 'compression' → logprob: -6.004667282104492
    3. 'compressed' → logprob: -6.379667282104492
    4. 'com' → logprob: -8.004667282104492
    5. 'comp' → logprob: -9.254667282104492
    6. ' compressor' → logprob: -10.504667282104492
    7. 'composer' → logprob: -11.879667282104492
    8. 'compiler' → logprob: -12.004667282104492
    9. 'fl' → logprob: -12.004667282104492
    10. 'f' → logprob: -12.879667282104492

Token 424: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.006865271367132664
    2. 'er' → logprob: -5.006865501403809
    3. 'pressor' → logprob: -9.881865501403809
    4. '```' → logprob: -10.256865501403809
    5. 'r' → logprob: -10.881865501403809
    6. 'e' → logprob: -11.881865501403809
    7. 'ress' → logprob: -12.256865501403809
    8. '(or' → logprob: -12.256865501403809
    9. '   ' → logprob: -12.631865501403809
    10. 'essor' → logprob: -12.881865501403809

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005268499720841646
    2. ':
' → logprob: -5.255268573760986
    3. '(' → logprob: -11.380268096923828
    4. ':def' → logprob: -11.630268096923828
    5. ' :' → logprob: -12.505268096923828
    6. '):' → logprob: -13.255268096923828
    7. '():' → logprob: -13.255268096923828
    8. ':

' → logprob: -13.505268096923828
    9. '<|end|>' → logprob: -13.630268096923828
    10. '(object' → logprob: -13.755268096923828

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005240809405222535
    2. 'def' → logprob: -8.250524520874023
    3. ' def' → logprob: -8.250524520874023
    4. '   ' → logprob: -14.250524520874023
    5. '```' → logprob: -14.750524520874023
    6. '    
' → logprob: -15.500524520874023
    7. '
' → logprob: -16.125524520874023
    8. '	def' → logprob: -16.375524520874023
    9. 'class' → logprob: -16.625524520874023
    10. ':' → logprob: -17.125524520874023

Token 427: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00046570412814617157
    2. ' def' → logprob: -8.250465393066406
    3. '   ' → logprob: -8.500465393066406
    4. 'class' → logprob: -13.875465393066406
    5. '	def' → logprob: -18.250465393066406
    6. '
' → logprob: -18.750465393066406
    7. '```' → logprob: -18.875465393066406
    8. 'from' → logprob: -19.875465393066406
    9. ' ' → logprob: -20.250465393066406
    10. 'de' → logprob: -20.500465393066406

Token 428: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6859886050224304
    2. ' __' → logprob: -1.1859886646270752
    3. 'init' → logprob: -1.6859886646270752
    4. 'def' → logprob: -5.685988426208496
    5. ' def' → logprob: -6.435988426208496
    6. ' init' → logprob: -8.060988426208496
    7. '_init' → logprob: -8.810988426208496
    8. '```' → logprob: -9.310988426208496
    9. '`' → logprob: -9.560988426208496
    10. 'iter' → logprob: -10.060988426208496

Token 429: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.493430894101039e-05
    2. 'iter' → logprob: -9.500075340270996
    3. ' init' → logprob: -17.25007438659668
    4. '_init' → logprob: -17.75007438659668
    5. '```' → logprob: -19.12507438659668
    6. 'def' → logprob: -20.25007438659668
    7. 'next' → logprob: -20.37507438659668
    8. '   ' → logprob: -20.50007438659668
    9. '`' → logprob: -20.75007438659668
    10. '(init' → logprob: -21.25007438659668

Token 430: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012960565276443958
    2. '__(' → logprob: -4.512960433959961
    3. '(' → logprob: -6.387960433959961
    4. ' (' → logprob: -8.887960433959961
    5. 'self' → logprob: -10.512960433959961
    6. '(
' → logprob: -10.762960433959961
    7. '_(' → logprob: -11.137960433959961
    8. '   ' → logprob: -11.887960433959961
    9. '__(
' → logprob: -12.012960433959961
    10. ')(' → logprob: -12.262960433959961

Token 431: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. '
' → logprob: -12.875008583068848
    3. 'data' → logprob: -13.000008583068848
    4. ')' → logprob: -13.375008583068848
    5. ' self' → logprob: -14.125008583068848
    6. '   ' → logprob: -14.375008583068848
    7. '       ' → logprob: -15.000008583068848
    8. '(self' → logprob: -16.50000762939453
    9. '):
' → logprob: -18.25000762939453
    10. 'def' → logprob: -18.87500762939453

Token 432: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.044211603701114655
    2. ',' → logprob: -3.2942116260528564
    3. '(self' → logprob: -5.169211387634277
    4. '       ' → logprob: -8.669211387634277
    5. ' self' → logprob: -8.794211387634277
    6. '   ' → logprob: -9.294211387634277
    7. ' (' → logprob: -11.169211387634277
    8. '
' → logprob: -11.294211387634277
    9. ',self' → logprob: -11.419211387634277
    10. '):
' → logprob: -12.919211387634277

Token 433: ' compressed' (ID: 58419)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3274996280670166
    2. 'compressed' → logprob: -1.4524996280670166
    3. 'self' → logprob: -3.7024996280670166
    4. ' compressed' → logprob: -4.7024993896484375
    5. ' data' → logprob: -4.8274993896484375
    6. 'tokens' → logprob: -6.5774993896484375
    7. 'token' → logprob: -6.8274993896484375
    8. 'input' → logprob: -7.4524993896484375
    9. ' self' → logprob: -9.077499389648438
    10. 'source' → logprob: -9.202499389648438

Token 434: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30850791931152344
    2. ':str' → logprob: -2.4335079193115234
    3. '_data' → logprob: -2.6835079193115234
    4. '_str' → logprob: -2.6835079193115234
    5. 'str' → logprob: -3.6835079193115234
    6. 'data' → logprob: -4.683507919311523
    7. '_string' → logprob: -5.433507919311523
    8. '_text' → logprob: -6.558507919311523
    9. '):' → logprob: -8.058507919311523
    10. '_:' → logprob: -8.308507919311523

Token 435: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.802049756515771e-05
    2. ' str' → logprob: -9.625067710876465
    3. ')' → logprob: -14.000067710876465
    4. '[str' → logprob: -14.375067710876465
    5. '   ' → logprob: -14.750067710876465
    6. '
' → logprob: -17.37506866455078
    7. '       ' → logprob: -17.87506866455078
    8. ' ' → logprob: -18.12506866455078
    9. '	str' → logprob: -18.25006866455078
    10. '):
' → logprob: -18.25006866455078

Token 436: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015703152865171432
    2. '):
' → logprob: -4.265703201293945
    3. ')' → logprob: -6.515703201293945
    4. ':' → logprob: -10.140703201293945
    5. '   ' → logprob: -11.515703201293945
    6. '):
' → logprob: -11.890703201293945
    7. '       ' → logprob: -13.640703201293945
    8. ' ):' → logprob: -14.140703201293945
    9. ' ' → logprob: -16.765703201293945
    10. '):

' → logprob: -16.765703201293945

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050311703234910965
    2. 'self' → logprob: -3.050311803817749
    3. ' self' → logprob: -6.55031156539917
    4. '   ' → logprob: -8.175312042236328
    5. '	self' → logprob: -12.050312042236328
    6. ' ' → logprob: -13.175312042236328
    7. 'def' → logprob: -13.175312042236328
    8. '	' → logprob: -14.300312042236328
    9. '
' → logprob: -14.800312042236328
    10. '```' → logprob: -15.675312042236328

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.5928495486150496e-05
    2. '       ' → logprob: -11.250016212463379
    3. ' self' → logprob: -12.750016212463379
    4. '
' → logprob: -17.750015258789062
    5. '   ' → logprob: -18.250015258789062
    6. '	self' → logprob: -19.875015258789062
    7. '```' → logprob: -20.875015258789062
    8. 'def' → logprob: -21.375015258789062
    9. '        
' → logprob: -21.500015258789062
    10. '           ' → logprob: -22.500015258789062

Token 439: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.04876619949936867
    2. 'compressed' → logprob: -3.0487661361694336
    3. '.data' → logprob: -9.048766136169434
    4. '.comp' → logprob: -10.423766136169434
    5. ' compressed' → logprob: -11.673766136169434
    6. 'Compressed' → logprob: -11.923766136169434
    7. '._' → logprob: -13.173766136169434
    8. 'data' → logprob: -13.173766136169434
    9. ' .' → logprob: -13.298766136169434
    10. '_com' → logprob: -13.548766136169434

Token 440: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -4.60414821645827e-06
    2. '_pressed' → logprob: -12.375004768371582
    3. ' pressed' → logprob: -16.375003814697266
    4. 'compressed' → logprob: -16.625003814697266
    5. '```' → logprob: -16.625003814697266
    6. '_' → logprob: -17.125003814697266
    7. 'ressed' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.875003814697266
    9. 'press' → logprob: -18.000003814697266
    10. 'p' → logprob: -18.500003814697266

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048762127757072
    2. ' =' → logprob: -4.511048793792725
    3. '=data' → logprob: -15.011048316955566
    4. '=self' → logprob: -15.761048316955566
    5. 'data' → logprob: -15.886048316955566
    6. ')' → logprob: -16.011049270629883
    7. '   ' → logprob: -16.136049270629883
    8. ':' → logprob: -16.511049270629883
    9. '_data' → logprob: -17.011049270629883
    10. '=com' → logprob: -17.386049270629883

Token 442: ' compressed' (ID: 58419)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.001170225441455841
    2. ' compressed' → logprob: -6.7511701583862305
    3. 'com' → logprob: -18.876171112060547
    4. 'compress' → logprob: -20.626171112060547
    5. 'Compressed' → logprob: -20.876171112060547
    6. '	com' → logprob: -21.251171112060547
    7. '(com' → logprob: -22.126171112060547
    8. '   ' → logprob: -22.501171112060547
    9. 'compression' → logprob: -22.751171112060547
    10. 'collapsed' → logprob: -22.876171112060547

Token 443: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4458315074443817
    2. '
' → logprob: -1.070831537246704
    3. '<|end|>' → logprob: -4.820831298828125
    4. 'def' → logprob: -4.945831298828125
    5. '    
' → logprob: -6.695831298828125
    6. '<|end|>' → logprob: -8.445831298828125
    7. '

' → logprob: -8.695831298828125
    8. '       ' → logprob: -9.445831298828125
    9. ' def' → logprob: -9.945831298828125
    10. '        
' → logprob: -10.570831298828125

Token 444: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05815500393509865
    2. '   ' → logprob: -3.183155059814453
    3. '
' → logprob: -4.683155059814453
    4. ' def' → logprob: -5.308155059814453
    5. '<|end|>' → logprob: -7.308155059814453
    6. '    
' → logprob: -9.308155059814453
    7. '```' → logprob: -10.683155059814453
    8. '<|end|>' → logprob: -11.183155059814453
    9. '	def' → logprob: -11.683155059814453
    10. '       ' → logprob: -11.933155059814453

Token 445: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.180258191714529e-06
    2. ' def' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.500008583068848
    4. '
' → logprob: -18.62500762939453
    5. 'de' → logprob: -19.12500762939453
    6. '	def' → logprob: -21.00000762939453
    7. ' ' → logprob: -21.37500762939453
    8. 'from' → logprob: -21.87500762939453
    9. '```' → logprob: -21.87500762939453
    10. '    
' → logprob: -22.25000762939453

Token 446: ' decompress' (ID: 195938)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0009342094417661428
    2. '__' → logprob: -7.75093412399292
    3. ' decompress' → logprob: -7.87593412399292
    4. 'expand' → logprob: -9.375934600830078
    5. '_de' → logprob: -10.375934600830078
    6. 'tokens' → logprob: -12.625934600830078
    7. ' __' → logprob: -13.125934600830078
    8. 'iter' → logprob: -13.750934600830078
    9. 'token' → logprob: -15.500934600830078
    10. 'iterator' → logprob: -15.750934600830078

Token 447: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017804952803999186
    2. '(' → logprob: -6.3767805099487305
    3. 'self' → logprob: -9.87678050994873
    4. '(
' → logprob: -10.62678050994873
    5. ' (' → logprob: -13.75178050994873
    6. '   ' → logprob: -14.12678050994873
    7. '       ' → logprob: -15.12678050994873
    8. 's' → logprob: -15.62678050994873
    9. '()' → logprob: -16.001779556274414
    10. 'def' → logprob: -16.376779556274414

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006674022297374904
    2. 'self' → logprob: -7.375667572021484
    3. '):' → logprob: -10.500667572021484
    4. ')->' → logprob: -11.750667572021484
    5. '):
' → logprob: -13.000667572021484
    6. '   ' → logprob: -13.875667572021484
    7. '(self' → logprob: -14.125667572021484
    8. ' )' → logprob: -14.500667572021484
    9. '       ' → logprob: -15.625667572021484
    10. ' self' → logprob: -15.625667572021484

Token 449: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.04355594515800476
    2. '->' → logprob: -3.168555974960327
    3. ')' → logprob: -7.918555736541748
    4. '   ' → logprob: -9.043556213378906
    5. '       ' → logprob: -10.668556213378906
    6. ':' → logprob: -10.668556213378906
    7. ' ' → logprob: -11.793556213378906
    8. ')->' → logprob: -11.918556213378906
    9. '>' → logprob: -12.418556213378906
    10. 'self' → logprob: -12.543556213378906

Token 450: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004894073354080319
    2. ' str' → logprob: -7.625489234924316
    3. 'Iterator' → logprob: -13.750489234924316
    4. 'List' → logprob: -16.000490188598633
    5. '[str' → logprob: -16.125490188598633
    6. 'iterator' → logprob: -17.250490188598633
    7. '(str' → logprob: -18.000490188598633
    8. 'string' → logprob: -18.125490188598633
    9. '	str' → logprob: -18.250490188598633
    10. ' ' → logprob: -18.375490188598633

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2679368555545807
    2. '       ' → logprob: -2.017936944961548
    3. ':
' → logprob: -2.392936944961548
    4. '(self' → logprob: -4.892936706542969
    5. '   ' → logprob: -6.017936706542969
    6. '):
' → logprob: -8.642936706542969
    7. '(' → logprob: -8.767936706542969
    8. '):' → logprob: -9.017936706542969
    9. 'self' → logprob: -9.142936706542969
    10. '(
' → logprob: -9.642936706542969

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18768134713172913
    2. 'result' → logprob: -1.8126813173294067
    3. ' result' → logprob: -5.062681198120117
    4. 'tokens' → logprob: -7.562681198120117
    5. 'output' → logprob: -7.812681198120117
    6. 'decoded' → logprob: -9.062681198120117
    7. 'de' → logprob: -9.187681198120117
    8. 'return' → logprob: -9.187681198120117
    9. ' decom' → logprob: -9.812681198120117
    10. 'token' → logprob: -9.812681198120117

Token 453: ' tokenizer' (ID: 99665)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0014707031659781933
    2. 'tokens' → logprob: -7.376470565795898
    3. 'output' → logprob: -7.751470565795898
    4. '       ' → logprob: -8.626470565795898
    5. 'de' → logprob: -9.126470565795898
    6. ' result' → logprob: -9.251470565795898
    7. 'token' → logprob: -10.876470565795898
    8. 'return' → logprob: -11.876470565795898
    9. 'results' → logprob: -14.001470565795898
    10. '```' → logprob: -14.501470565795898

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029753385111689568
    2. '=' → logprob: -3.5297534465789795
    3. ' ' → logprob: -13.904753684997559
    4. '       ' → logprob: -14.529753684997559
    5. '   ' → logprob: -14.904753684997559
    6. ' =
' → logprob: -14.904753684997559
    7. ':' → logprob: -15.154753684997559
    8. '        ' → logprob: -15.654753684997559
    9. ' ' → logprob: -16.154752731323242
    10. '=
' → logprob: -16.529752731323242

Token 455: ' Token' (ID: 17951)
  Prédit: 'Tokenizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tokenizer' → logprob: -7.505351095460355e-05
    2. 'Token' → logprob: -9.750075340270996
    3. ' Token' → logprob: -11.000075340270996
    4. '       ' → logprob: -18.37507438659668
    5. 'Iterator' → logprob: -19.25007438659668
    6. '	Token' → logprob: -19.37507438659668
    7. '           ' → logprob: -20.50007438659668
    8. '   ' → logprob: -21.00007438659668
    9. ' tokenizer' → logprob: -22.62507438659668
    10. 'Tok' → logprob: -23.62507438659668

Token 456: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.0001640876434976235
    2. 'Tokenizer' → logprob: -8.750164031982422
    3. 'IZER' → logprob: -13.125164031982422
    4. 'token' → logprob: -13.750164031982422
    5. 'Iterator' → logprob: -14.000164031982422
    6. 'ize' → logprob: -14.875164031982422
    7. 'iter' → logprob: -15.000164031982422
    8. '   ' → logprob: -15.125164031982422
    9. 'oken' → logprob: -15.750164031982422
    10. 'zer' → logprob: -15.875164031982422

Token 457: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'self' → logprob: -18.375001907348633
    4. '(
' → logprob: -19.500001907348633
    5. ' (' → logprob: -21.625001907348633
    6. '(s' → logprob: -21.750001907348633
    7. '       ' → logprob: -22.375001907348633
    8. '```' → logprob: -22.625001907348633
    9. '(this' → logprob: -23.125001907348633
    10. '[self' → logprob: -23.500001907348633

Token 458: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -3.5597102396423e-05
    2. 'compressed' → logprob: -10.375035285949707
    3. '.' → logprob: -13.375035285949707
    4. ' .' → logprob: -13.750035285949707
    5. '.comp' → logprob: -14.375035285949707
    6. ').' → logprob: -14.625035285949707
    7. '.con' → logprob: -15.875035285949707
    8. '   ' → logprob: -16.000036239624023
    9. '	com' → logprob: -16.125036239624023
    10. 'com' → logprob: -16.125036239624023

Token 459: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.10037197172641754
    2. 'ressed' → logprob: -2.350372076034546
    3. '```' → logprob: -10.225372314453125
    4. '(self' → logprob: -10.350372314453125
    5. '[self' → logprob: -11.350372314453125
    6. '.data' → logprob: -11.475372314453125
    7. 'p' → logprob: -11.725372314453125
    8. '>' → logprob: -11.725372314453125
    9. 'ress' → logprob: -12.225372314453125
    10. 'press' → logprob: -12.350372314453125

Token 460: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00865121092647314
    2. ')' → logprob: -4.758651256561279
    3. '       ' → logprob: -10.758650779724121
    4. ')
' → logprob: -11.258650779724121
    5. ').__' → logprob: -13.258650779724121
    6. ')

' → logprob: -15.258650779724121
    7. ' )
' → logprob: -15.383650779724121
    8. '   ' → logprob: -15.508650779724121
    9. ' ' → logprob: -17.508651733398438
    10. '           ' → logprob: -17.633651733398438

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1637260764837265
    2. 'result' → logprob: -1.9137260913848877
    3. ' result' → logprob: -5.788725852966309
    4. 'output' → logprob: -8.538725852966309
    5. 'return' → logprob: -9.413725852966309
    6. 'expanded' → logprob: -9.663725852966309
    7. 'decoded' → logprob: -10.663725852966309
    8. 'for' → logprob: -11.163725852966309
    9. '        
' → logprob: -11.413725852966309
    10. 'res' → logprob: -12.038725852966309

Token 462: ' tokens' (ID: 20290)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001574971480295062
    2. 'return' → logprob: -7.001574993133545
    3. 'de' → logprob: -7.751574993133545
    4. 'output' → logprob: -9.126574516296387
    5. 'expanded' → logprob: -9.501574516296387
    6. '       ' → logprob: -10.876574516296387
    7. ' result' → logprob: -11.126574516296387
    8. 'parts' → logprob: -11.376574516296387
    9. 'decoded' → logprob: -13.376574516296387
    10. 'tokens' (adapté à ' tokens') → logprob: -13.876574516296387

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408583760261536
    2. ' =' → logprob: -0.974085807800293
    3. ':' → logprob: -11.724085807800293
    4. ' ' → logprob: -14.599085807800293
    5. '.' → logprob: -16.09908676147461
    6. '=[]' → logprob: -17.34908676147461
    7. ' :' → logprob: -17.84908676147461
    8. ' =
' → logprob: -17.97408676147461
    9. '=
' → logprob: -18.09908676147461
    10. '	' → logprob: -18.22408676147461

Token 464: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5086719989776611
    2. '[token' → logprob: -1.1336719989776611
    3. '[' → logprob: -3.008671998977661
    4. '[t' → logprob: -4.508671760559082
    5. '[list' → logprob: -4.508671760559082
    6. ' list' → logprob: -5.633671760559082
    7. ' [' → logprob: -7.508671760559082
    8. '''.' → logprob: -8.133671760559082
    9. 'token' → logprob: -8.258671760559082
    10. '[str' → logprob: -8.883671760559082

Token 465: '(token' (ID: 23460)
  Prédit: '(token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(token' → logprob: -0.0010407903464511037
    2. '(iter' → logprob: -7.001040935516357
    3. 'token' → logprob: -9.2510404586792
    4. '(' → logprob: -10.8760404586792
    5. '(iterator' → logprob: -11.2510404586792
    6. 'iter' → logprob: -14.1260404586792
    7. '(tokens' → logprob: -15.8760404586792
    8. 'Tokenizer' → logprob: -15.8760404586792
    9. '(Token' → logprob: -16.126041412353516
    10. '[token' → logprob: -16.251041412353516

Token 466: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.01150859147310257
    2. '(token' → logprob: -4.511508464813232
    3. 'token' → logprob: -7.886508464813232
    4. 'ator' → logprob: -10.01150894165039
    5. 'ize' → logprob: -11.63650894165039
    6. '[token' → logprob: -11.76150894165039
    7. '(tokens' → logprob: -12.13650894165039
    8. ' tokenizer' → logprob: -12.38650894165039
    9. '(' → logprob: -12.63650894165039
    10. 'IZER' → logprob: -12.76150894165039

Token 467: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02641931362450123
    2. ')
' → logprob: -3.6514194011688232
    3. ' )' → logprob: -9.776419639587402
    4. '())' → logprob: -10.401419639587402
    5. ')
' → logprob: -11.151419639587402
    6. ')

' → logprob: -12.026419639587402
    7. ' )
' → logprob: -12.276419639587402
    8. '())
' → logprob: -12.526419639587402
    9. '()' → logprob: -14.151419639587402
    10. ' ' → logprob: -14.151419639587402

Token 468: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19718892872333527
    2. '       ' → logprob: -1.8221889734268188
    3. ' result' → logprob: -4.322188854217529
    4. 'expanded' → logprob: -6.572188854217529
    5. 'output' → logprob: -6.947188854217529
    6. '
' → logprob: -7.072188854217529
    7. 'return' → logprob: -8.322189331054688
    8. ' expanded' → logprob: -8.572189331054688
    9. '        
' → logprob: -8.822189331054688
    10. 'res' → logprob: -9.447189331054688

Token 469: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39355820417404175
    2. 'result' → logprob: -1.1435582637786865
    3. '       ' → logprob: -5.518558025360107
    4. 'expanded' → logprob: -6.018558025360107
    5. ' return' → logprob: -9.018558502197266
    6. ' result' → logprob: -9.893558502197266
    7. 'output' → logprob: -11.268558502197266
    8. 'res' → logprob: -11.518558502197266
    9. 'parts' → logprob: -11.768558502197266
    10. 'decoded' → logprob: -12.393558502197266

Token 470: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.014683913439512253
    2. '"' → logprob: -4.264683723449707
    3. ' ''.' → logprob: -7.764683723449707
    4. ''' → logprob: -9.514683723449707
    5. ' "".' → logprob: -11.389683723449707
    6. '''' → logprob: -11.514683723449707
    7. '   ' → logprob: -15.264683723449707
    8. ''',' → logprob: -15.264683723449707
    9. '''
' → logprob: -15.639683723449707
    10. '""' → logprob: -15.639683723449707

Token 471: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.747814349073451e-05
    2. '''.' → logprob: -11.000017166137695
    3. ' join' → logprob: -15.625017166137695
    4. 'j' → logprob: -15.875017166137695
    5. '.' → logprob: -16.250017166137695
    6. 'jo' → logprob: -16.750017166137695
    7. ''.' → logprob: -16.750017166137695
    8. '.join' → logprob: -16.875017166137695
    9. '```' → logprob: -17.625017166137695
    10. 'concat' → logprob: -17.875017166137695

Token 472: '(token' (ID: 23460)
  Prédit: '(token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(token' → logprob: -0.08329084515571594
    2. 'token' → logprob: -2.5832908153533936
    3. '[token' → logprob: -5.583291053771973
    4. '(t' → logprob: -8.208291053771973
    5. '([' → logprob: -8.583291053771973
    6. '[t' → logprob: -9.583291053771973
    7. 't' → logprob: -9.583291053771973
    8. '(tok' → logprob: -10.583291053771973
    9. '[' → logprob: -12.458291053771973
    10. ' token' → logprob: -13.208291053771973

Token 473: '.expand' (ID: 61449)
  Prédit: 'oken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oken' → logprob: -0.9478895664215088
    2. '.token' → logprob: -1.4478895664215088
    3. 'token' → logprob: -1.6978895664215088
    4. '.' → logprob: -2.947889566421509
    5. '(token' → logprob: -3.197889566421509
    6. 'ken' → logprob: -3.322889566421509
    7. '().' → logprob: -3.572889566421509
    8. '[token' → logprob: -3.822889566421509
    9. '.expand' → logprob: -5.07288932800293
    10. 't' → logprob: -5.82288932800293

Token 474: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2519359588623047
    2. '()' → logprob: -1.5019359588623047
    3. ')' → logprob: -12.876935958862305
    4. '()))' → logprob: -13.501935958862305
    5. ' ())' → logprob: -14.001935958862305
    6. '(' → logprob: -14.501935958862305
    7. '()]' → logprob: -15.251935958862305
    8. '())
' → logprob: -15.251935958862305
    9. '())

' → logprob: -15.501935958862305
    10. '()
' → logprob: -15.626935958862305

Token 475: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020364183001220226
    2. '())' → logprob: -6.2520365715026855
    3. 'for' → logprob: -9.252036094665527
    4. ')' → logprob: -11.502036094665527
    5. '(' → logprob: -14.002036094665527
    6. ' for' → logprob: -14.627036094665527
    7. ' ()' → logprob: -15.252036094665527
    8. '()
' → logprob: -16.252037048339844
    9. '()`' → logprob: -16.252037048339844
    10. '```' → logprob: -17.252037048339844

Token 476: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0064184702932834625
    2. ' token' → logprob: -5.256418704986572
    3. 'tokens' → logprob: -6.756418704986572
    4. ' tokens' → logprob: -11.381418228149414
    5. 'tok' → logprob: -12.256418228149414
    6. 't' → logprob: -12.631418228149414
    7. '	token' → logprob: -14.006418228149414
    8. 'to' → logprob: -15.256418228149414
    9. ' tok' → logprob: -17.381418228149414
    10. ' t' → logprob: -17.756418228149414

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011055245995521545
    2. 'in' → logprob: -4.5110554695129395
    3. 'token' → logprob: -12.136054992675781
    4. ' ' → logprob: -14.636054992675781
    5. 'tokens' → logprob: -14.636054992675781
    6. 's' → logprob: -14.761054992675781
    7. 'okens' → logprob: -15.386054992675781
    8. 'oken' → logprob: -15.886054992675781
    9. 'ins' → logprob: -16.01105499267578
    10. 'n' → logprob: -16.01105499267578

Token 478: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00033546582562848926
    2. ' tokens' → logprob: -8.000335693359375
    3. 'okens' → logprob: -17.250335693359375
    4. '(tokens' → logprob: -18.125335693359375
    5. '.tokens' → logprob: -18.625335693359375
    6. ' ' → logprob: -19.125335693359375
    7. 'token' → logprob: -19.500335693359375
    8. '   ' → logprob: -19.500335693359375
    9. '
' → logprob: -19.875335693359375
    10. 't' → logprob: -20.000335693359375

Token 479: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.625005722045898
    4. '       ' → logprob: -16.1250057220459
    5. '())' → logprob: -16.5000057220459
    6. ')`' → logprob: -17.5000057220459
    7. '))' → logprob: -17.8750057220459
    8. '   ' → logprob: -19.0000057220459
    9. '()' → logprob: -19.1250057220459
    10. ')

' → logprob: -19.3750057220459

Token 480: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: ' Processor' (ID: 82937)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.6394644975662231
    2. 'Com' → logprob: -1.3894644975662231
    3. 'De' → logprob: -1.6394644975662231
    4. 'Compression' → logprob: -4.639464378356934
    5. 'Invalid' → logprob: -5.264464378356934
    6. ' Compressor' → logprob: -6.139464378356934
    7. 'Compressed' → logprob: -6.264464378356934
    8. 'Parser' → logprob: -6.639464378356934
    9. ' De' → logprob: -7.139464378356934
    10. 'Tests' → logprob: -7.514464378356934

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038693982060067356
    2. ':
' → logprob: -7.875386714935303
    3. '(' → logprob: -12.875387191772461
    4. '<|end|>' → logprob: -13.375387191772461
    5. ':

' → logprob: -14.125387191772461
    6. '):' → logprob: -14.375387191772461
    7. '():' → logprob: -14.750387191772461
    8. ' :' → logprob: -15.000387191772461
    9. ':**' → logprob: -15.125387191772461
    10. '(object' → logprob: -16.25038719177246

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020680641755461693
    2. ' def' → logprob: -6.252068042755127
    3. 'def' → logprob: -9.002068519592285
    4. ':' → logprob: -12.127068519592285
    5. 'class' → logprob: -12.502068519592285
    6. '   ' → logprob: -13.252068519592285
    7. ' class' → logprob: -13.627068519592285
    8. '    
' → logprob: -13.752068519592285
    9. '	def' → logprob: -14.377068519592285
    10. ',' → logprob: -14.627068519592285

Token 484: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0789155662059784
    2. 'def' (adapté à ' def') → logprob: -2.578915596008301
    3. '   ' → logprob: -10.5789155960083
    4. 'class' → logprob: -15.3289155960083
    5. 'de' → logprob: -15.8289155960083
    6. '	def' → logprob: -17.578914642333984
    7. ' de' → logprob: -17.953914642333984
    8. ' ' → logprob: -18.828914642333984
    9. '    ' → logprob: -18.953914642333984
    10. ' class' → logprob: -19.078914642333984

Token 485: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3139728605747223
    2. ' def' → logprob: -1.3139728307724
    3. 'def' → logprob: -7.5639729499816895
    4. ' ' → logprob: -9.688972473144531
    5. '__' → logprob: -9.688972473144531
    6. ' init' → logprob: -10.188972473144531
    7. 'init' → logprob: -11.688972473144531
    8. '   ' → logprob: -11.688972473144531
    9. '  ' → logprob: -12.438972473144531
    10. ' ' → logprob: -12.688972473144531

Token 486: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0012086842907592654
    2. 'iter' → logprob: -6.751208782196045
    3. 'def' → logprob: -10.876208305358887
    4. 'it' → logprob: -11.501208305358887
    5. 'int' → logprob: -13.251208305358887
    6. '__' → logprob: -13.251208305358887
    7. '```' → logprob: -13.501208305358887
    8. 'new' → logprob: -13.626208305358887
    9. ' init' → logprob: -14.126208305358887
    10. 'process' → logprob: -14.751208305358887

Token 487: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10370102524757385
    2. '__(' → logprob: -2.603701114654541
    3. '(' → logprob: -4.353701114654541
    4. ' (' → logprob: -4.603701114654541
    5. '__(
' → logprob: -7.103701114654541
    6. '(
' → logprob: -7.478701114654541
    7. 'self' → logprob: -9.603700637817383
    8. '   ' → logprob: -9.978700637817383
    9. '__' → logprob: -10.228700637817383
    10. ' self' → logprob: -10.853700637817383

Token 488: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -12.250008583068848
    3. '
' → logprob: -13.750008583068848
    4. '       ' → logprob: -13.875008583068848
    5. '   ' → logprob: -14.500008583068848
    6. '(self' → logprob: -14.875008583068848
    7. ')' → logprob: -15.000008583068848
    8. '):
' → logprob: -17.00000762939453
    9. 'compressed' → logprob: -17.00000762939453
    10. '	self' → logprob: -17.37500762939453

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004944000858813524
    2. 'self' → logprob: -5.37994384765625
    3. '   ' → logprob: -8.87994384765625
    4. 'compressed' → logprob: -9.50494384765625
    5. ' ,' → logprob: -10.25494384765625
    6. '       ' → logprob: -10.87994384765625
    7. ' self' → logprob: -10.87994384765625
    8. ',self' → logprob: -11.37994384765625
    9. '(self' → logprob: -11.50494384765625
    10. ' compressed' → logprob: -12.25494384765625

Token 490: ' lines' (ID: 8698)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8679478168487549
    2. 'compressed' → logprob: -1.1179478168487549
    3. 'input' → logprob: -2.117947816848755
    4. ' data' → logprob: -2.992947816848755
    5. ' compressed' → logprob: -3.242947816848755
    6. 'text' → logprob: -4.117947578430176
    7. ' input' → logprob: -4.242947578430176
    8. 'de' → logprob: -5.117947578430176
    9. ' text' → logprob: -6.117947578430176
    10. 'string' → logprob: -6.867947578430176

Token 491: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9361264946837764e-07
    2. '):' → logprob: -16.125
    3. '   ' → logprob: -19.125
    4. ' :' → logprob: -19.125
    5. ':list' → logprob: -19.75
    6. '_:' → logprob: -19.875
    7. '):
' → logprob: -20.125
    8. '```' → logprob: -20.625
    9. ')' → logprob: -20.75
    10. ':str' → logprob: -21.25

Token 492: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010759611177491024
    2. ' List' → logprob: -9.250107765197754
    3. 'list' → logprob: -12.000107765197754
    4. 'Iterator' → logprob: -12.625107765197754
    5. '   ' → logprob: -14.250107765197754
    6. 'Iterable' → logprob: -14.375107765197754
    7. '[List' → logprob: -15.125107765197754
    8. '	List' → logprob: -15.250107765197754
    9. ')' → logprob: -16.125106811523438
    10. '       ' → logprob: -16.875106811523438

Token 493: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.7697225252486533e-06
    2. 'str' → logprob: -12.500003814697266
    3. '[' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.750003814697266
    5. ')' → logprob: -18.000003814697266
    6. '[int' → logprob: -19.125003814697266
    7. ':str' → logprob: -19.250003814697266
    8. '[
' → logprob: -20.125003814697266
    9. '	str' → logprob: -20.125003814697266
    10. '=str' → logprob: -20.375003814697266

Token 494: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5246346592903137
    2. ']):
' → logprob: -1.024634599685669
    3. ']' → logprob: -3.399634599685669
    4. '])' → logprob: -4.274634838104248
    5. '):' → logprob: -7.149634838104248
    6. ')' → logprob: -7.274634838104248
    7. '):
' → logprob: -8.52463436126709
    8. '   ' → logprob: -8.77463436126709
    9. ']:' → logprob: -9.89963436126709
    10. '       ' → logprob: -10.27463436126709

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07287407666444778
    2. '   ' → logprob: -2.822874069213867
    3. 'def' → logprob: -4.572874069213867
    4. 'self' → logprob: -8.322874069213867
    5. ' def' → logprob: -8.572874069213867
    6. ' self' → logprob: -10.697874069213867
    7. '
' → logprob: -10.822874069213867
    8. ')' → logprob: -11.947874069213867
    9. '    ' → logprob: -12.072874069213867
    10. '        
' → logprob: -12.197874069213867

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00019853383128065616
    2. ' self' → logprob: -9.000198364257812
    3. '       ' → logprob: -9.500198364257812
    4. '   ' → logprob: -15.500198364257812
    5. '	self' → logprob: -17.125198364257812
    6. '(self' → logprob: -19.875198364257812
    7. '
' → logprob: -20.000198364257812
    8. '[self' → logprob: -20.750198364257812
    9. '      ' → logprob: -21.750198364257812
    10. ' ' → logprob: -21.750198364257812

Token 497: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -7.374227425316349e-05
    2. '.' → logprob: -9.875073432922363
    3. ' .' → logprob: -12.250073432922363
    4. '.data' → logprob: -12.375073432922363
    5. '	lines' → logprob: -12.375073432922363
    6. '.process' → logprob: -13.875073432922363
    7. '.rows' → logprob: -14.125073432922363
    8. '.raw' → logprob: -14.125073432922363
    9. 'lines' → logprob: -14.250073432922363
    10. '.input' → logprob: -14.375073432922363

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868939280509949
    2. ' =' → logprob: -1.1368939876556396
    3. ':' → logprob: -10.886894226074219
    4. '   ' → logprob: -13.261894226074219
    5. '=self' → logprob: -13.886894226074219
    6. '=[]' → logprob: -14.386894226074219
    7. ')' → logprob: -14.886894226074219
    8. '.' → logprob: -16.51189422607422
    9. 'self' → logprob: -16.63689422607422
    10. '       ' → logprob: -16.63689422607422

Token 499: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.048587825149297714
    2. ' lines' → logprob: -3.0485877990722656
    3. '	lines' → logprob: -15.298587799072266
    4. '(lines' → logprob: -15.923587799072266
    5. '[' → logprob: -17.173587799072266
    6. '[]' → logprob: -17.798587799072266
    7. 'line' → logprob: -18.048587799072266
    8. '   ' → logprob: -18.173587799072266
    9. ' [' → logprob: -18.423587799072266
    10. ' ' → logprob: -18.548587799072266

Token 500: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27312371134757996
    2. '   ' → logprob: -1.5231237411499023
    3. 'def' → logprob: -4.273123741149902
    4. '<|end|>' → logprob: -5.523123741149902
    5. ' def' → logprob: -6.773123741149902
    6. '    
' → logprob: -6.898123741149902
    7. '<|end|>' → logprob: -7.773123741149902
    8. '

' → logprob: -8.148123741149902
    9. '	def' → logprob: -9.898123741149902
    10. ' 
' → logprob: -10.898123741149902

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4255582094192505
    2. 'def' → logprob: -1.3005582094192505
    3. '
' → logprob: -3.050558090209961
    4. ' def' → logprob: -3.675558090209961
    5. '    
' → logprob: -7.050558090209961
    6. ' ' → logprob: -8.175558090209961
    7. '	def' → logprob: -9.300558090209961
    8. '<|end|>' → logprob: -9.550558090209961
    9. ' 
' → logprob: -9.675558090209961
    10. '    ' → logprob: -10.800558090209961

Token 502: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.749814019713085e-06
    2. ' def' → logprob: -12.000006675720215
    3. '
' → logprob: -14.875006675720215
    4. '   ' → logprob: -15.875006675720215
    5. 'from' → logprob: -17.12500762939453
    6. 'class' → logprob: -17.75000762939453
    7. 'de' → logprob: -19.37500762939453
    8. '    
' → logprob: -20.37500762939453
    9. '	def' → logprob: -20.62500762939453
    10. 'import' → logprob: -21.00000762939453

Token 503: ' process' (ID: 2273)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4393152892589569
    2. 'process' → logprob: -1.0643153190612793
    3. '__' → logprob: -5.064315319061279
    4. 'run' → logprob: -6.564315319061279
    5. ' decompress' → logprob: -6.564315319061279
    6. ' process' → logprob: -7.689315319061279
    7. '_de' → logprob: -7.939315319061279
    8. 'expand' → logprob: -8.689314842224121
    9. '_process' → logprob: -9.064314842224121
    10. 'get' → logprob: -9.939314842224121

Token 504: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004639219027012587
    2. '(' → logprob: -5.379639148712158
    3. 'self' → logprob: -11.879639625549316
    4. '(
' → logprob: -12.504639625549316
    5. '_line' → logprob: -12.504639625549316
    6. ' (' → logprob: -13.129639625549316
    7. '   ' → logprob: -14.004639625549316
    8. '_' → logprob: -14.879639625549316
    9. '_lines' → logprob: -15.254639625549316
    10. ' ' → logprob: -15.379639625549316

Token 505: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012556035071611404
    2. ',' → logprob: -4.512556076049805
    3. 'self' → logprob: -7.262556076049805
    4. '):' → logprob: -7.387556076049805
    5. '   ' → logprob: -9.262556076049805
    6. ' )' → logprob: -10.637556076049805
    7. ')->' → logprob: -10.762556076049805
    8. '):
' → logprob: -11.137556076049805
    9. '       ' → logprob: -12.012556076049805
    10. '->' → logprob: -12.762556076049805

Token 506: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.4749469459056854
    2. ' ->' → logprob: -0.9749469757080078
    3. '   ' → logprob: -8.099946975708008
    4. ')' → logprob: -8.349946975708008
    5. '       ' → logprob: -9.099946975708008
    6. '(self' → logprob: -9.224946975708008
    7. ')->' → logprob: -10.099946975708008
    8. 'self' → logprob: -10.724946975708008
    9. ' ' → logprob: -11.224946975708008
    10. '-' → logprob: -11.474946975708008

Token 507: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.04884215071797371
    2. ' List' → logprob: -3.048842191696167
    3. 'str' → logprob: -8.548842430114746
    4. ' str' → logprob: -10.548842430114746
    5. 'None' → logprob: -11.173842430114746
    6. '[List' → logprob: -11.423842430114746
    7. 'int' → logprob: -12.423842430114746
    8. 'Iterator' → logprob: -13.298842430114746
    9. '   ' → logprob: -13.798842430114746
    10. '	List' → logprob: -14.298842430114746

Token 508: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'str' → logprob: -16.375
    4. '[int' → logprob: -17.0
    5. '[
' → logprob: -17.125
    6. ' [' → logprob: -17.25
    7. '   ' → logprob: -17.625
    8. '       ' → logprob: -18.125
    9. '(str' → logprob: -19.625
    10. '[s' → logprob: -20.125

Token 509: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5304723978042603
    2. '):
' → logprob: -1.6554723978042603
    3. '       ' → logprob: -2.2804722785949707
    4. ']:' → logprob: -2.5304722785949707
    5. '   ' → logprob: -4.155472278594971
    6. '):' → logprob: -4.655472278594971
    7. ']' → logprob: -4.905472278594971
    8. ':
' → logprob: -6.030472278594971
    9. ':' → logprob: -6.655472278594971
    10. '():
' → logprob: -7.405472278594971

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017584793968126178
    2. 'result' → logprob: -6.376758575439453
    3. ' result' → logprob: -10.751758575439453
    4. 'results' → logprob: -10.876758575439453
    5. 'output' → logprob: -12.126758575439453
    6. '```' → logprob: -12.376758575439453
    7. '
' → logprob: -13.126758575439453
    8. ' lines' → logprob: -14.126758575439453
    9. ' results' → logprob: -14.376758575439453
    10. 'res' → logprob: -14.626758575439453

Token 511: ' output' (ID: 4733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08310854434967041
    2. 'results' → logprob: -2.583108425140381
    3. '       ' → logprob: -5.833108425140381
    4. ' result' → logprob: -7.083108425140381
    5. 'output' (adapté à ' output') → logprob: -7.833108425140381
    6. ' results' → logprob: -10.208108901977539
    7. 'de' → logprob: -12.083108901977539
    8. 'processed' → logprob: -13.708108901977539
    9. 'outputs' → logprob: -15.083108901977539
    10. 'decoded' → logprob: -15.083108901977539

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.203454852104187
    2. ' =' → logprob: -1.703454852104187
    3. '=[]' → logprob: -6.703454971313477
    4. '[]' → logprob: -7.453454971313477
    5. '=[]
' → logprob: -9.578454971313477
    6. '()' → logprob: -9.578454971313477
    7. '   ' → logprob: -9.703454971313477
    8. ':' → logprob: -10.953454971313477
    9. '       ' → logprob: -12.828454971313477
    10. '[:]' → logprob: -13.203454971313477

Token 513: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.061987634748220444
    2. '[]
' → logprob: -2.8119876384735107
    3. ' []' → logprob: -11.06198787689209
    4. ' []
' → logprob: -12.43698787689209
    5. '[]

' → logprob: -15.18698787689209
    6. '[])
' → logprob: -17.811986923217773
    7. '[' → logprob: -17.811986923217773
    8. '[]>' → logprob: -17.936986923217773
    9. '[]}' → logprob: -18.936986923217773
    10. '[])' → logprob: -19.061986923217773

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006796844303607941
    2. ' for' → logprob: -5.631796836853027
    3. 'for' → logprob: -5.756796836853027
    4. '	' → logprob: -11.256796836853027
    5. '   ' → logprob: -11.631796836853027
    6. '	for' → logprob: -12.631796836853027
    7. '
' → logprob: -12.881796836853027
    8. '```' → logprob: -13.881796836853027
    9. '	   ' → logprob: -14.256796836853027
    10. '' → logprob: -15.131796836853027

Token 515: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005237429868429899
    2. '       ' → logprob: -5.255237579345703
    3. ' for' → logprob: -12.630237579345703
    4. '
' → logprob: -15.755237579345703
    5. '   ' → logprob: -15.755237579345703
    6. '```' → logprob: -16.505237579345703
    7. 'try' → logprob: -17.505237579345703
    8. '	for' → logprob: -18.630237579345703
    9. '        
' → logprob: -19.380237579345703
    10. '           ' → logprob: -19.880237579345703

Token 516: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0619756355881691
    2. ' line' → logprob: -2.8119757175445557
    3. '   ' → logprob: -12.436975479125977
    4. '       ' → logprob: -13.686975479125977
    5. 'compressed' → logprob: -13.811975479125977
    6. '	line' → logprob: -14.186975479125977
    7. 'self' → logprob: -15.061975479125977
    8. ' ' → logprob: -15.561975479125977
    9. '           ' → logprob: -15.561975479125977
    10. ' compressed' → logprob: -15.686975479125977

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019288709154352546
    2. 'in' → logprob: -6.251928806304932
    3. '        ' → logprob: -15.75192928314209
    4. '	in' → logprob: -16.876928329467773
    5. 'self' → logprob: -17.626928329467773
    6. '       ' → logprob: -17.751928329467773
    7. ' ' → logprob: -18.376928329467773
    8. '_in' → logprob: -18.376928329467773
    9. 'In' → logprob: -18.751928329467773
    10. ',' → logprob: -19.126928329467773

Token 518: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004621780011802912
    2. ' self' → logprob: -5.379621982574463
    3. '       ' → logprob: -13.629621505737305
    4. '
' → logprob: -16.129621505737305
    5. '(self' → logprob: -16.254621505737305
    6. '           ' → logprob: -16.754621505737305
    7. '	self' → logprob: -17.254621505737305
    8. '[self' → logprob: -17.879621505737305
    9. '        ' → logprob: -18.504621505737305
    10. '   ' → logprob: -18.754621505737305

Token 519: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -8.180258191714529e-06
    2. 'lines' → logprob: -12.625008583068848
    3. ' lines' → logprob: -13.250008583068848
    4. '	lines' → logprob: -13.875008583068848
    5. '.' → logprob: -14.125008583068848
    6. '(lines' → logprob: -14.375008583068848
    7. '       ' → logprob: -15.125008583068848
    8. ' .' → logprob: -15.500008583068848
    9. 'self' → logprob: -15.750008583068848
    10. '.readlines' → logprob: -16.25000762939453

Token 520: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10203643888235092
    2. ':
' → logprob: -2.352036476135254
    3. '           ' → logprob: -6.602036476135254
    4. '):
' → logprob: -8.477036476135254
    5. '       ' → logprob: -9.227036476135254
    6. ',' → logprob: -9.602036476135254
    7. '):' → logprob: -10.602036476135254
    8. '<|end|>' → logprob: -10.852036476135254
    9. '<|end|>' → logprob: -11.227036476135254
    10. ':
' → logprob: -12.102036476135254

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043591417488642037
    2. ' try' → logprob: -8.250435829162598
    3. 'try' → logprob: -8.750435829162598
    4. '
' → logprob: -11.625435829162598
    5. '       ' → logprob: -12.500435829162598
    6. '```' → logprob: -13.250435829162598
    7. '   ' → logprob: -15.000435829162598
    8. '               ' → logprob: -15.125435829162598
    9. '	       ' → logprob: -15.375435829162598
    10. '          ' → logprob: -15.500435829162598

Token 522: ' decom' (ID: 57661)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.21742486953735352
    2. '           ' → logprob: -1.7174248695373535
    3. 'de' → logprob: -4.2174248695373535
    4. ' try' → logprob: -7.4674248695373535
    5. '       ' → logprob: -7.7174248695373535
    6. 'if' → logprob: -10.092424392700195
    7. ' decom' → logprob: -10.467424392700195
    8. '               ' → logprob: -10.717424392700195
    9. '
' → logprob: -11.467424392700195
    10. 'com' → logprob: -11.467424392700195

Token 523: 'pressor' (ID: 88777)
  Prédit: 'pressor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressor' → logprob: -0.016345655545592308
    2. 'pressed' → logprob: -4.266345500946045
    3. 'ressor' → logprob: -6.766345500946045
    4. '       ' → logprob: -8.391345977783203
    5. 'pres' → logprob: -8.641345977783203
    6. 'r' → logprob: -8.891345977783203
    7. 'ressed' → logprob: -9.016345977783203
    8. '           ' → logprob: -10.016345977783203
    9. 'pr' → logprob: -10.141345977783203
    10. 'essor' → logprob: -10.766345977783203

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269436478614807
    2. '=' → logprob: -2.126943588256836
    3. '   ' → logprob: -11.501943588256836
    4. '       ' → logprob: -12.626943588256836
    5. '           ' → logprob: -14.126943588256836
    6. ' ' → logprob: -14.626943588256836
    7. '	' → logprob: -15.501943588256836
    8. '  ' → logprob: -15.626943588256836
    9. '    ' → logprob: -15.876943588256836
    10. '        ' → logprob: -16.001943588256836

Token 525: ' De' (ID: 1516)
  Prédit: 'De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'De' → logprob: -0.01416398212313652
    2. ' De' → logprob: -4.264163970947266
    3. 'Decompiler' → logprob: -15.639163970947266
    4. 'Deque' → logprob: -16.389163970947266
    5. '_De' → logprob: -16.639163970947266
    6. '   ' → logprob: -17.514163970947266
    7. '           ' → logprob: -17.514163970947266
    8. '.De' → logprob: -19.514163970947266
    9. 'Decrypt' → logprob: -19.889163970947266
    10. 'de' → logprob: -20.014163970947266

Token 526: 'compress' (ID: 69636)
  Prédit: 'compress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.02337988093495369
    2. 'pressor' → logprob: -3.7733798027038574
    3. 'compressed' → logprob: -9.898380279541016
    4. 'com' → logprob: -10.773380279541016
    5. ' compressor' → logprob: -10.898380279541016
    6. 'comp' → logprob: -11.023380279541016
    7. 'Com' → logprob: -11.398380279541016
    8. 'om' → logprob: -11.898380279541016
    9. 'press' → logprob: -12.523380279541016
    10. 'compression' → logprob: -13.648380279541016

Token 527: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0005644689663313329
    2. 'pressor' → logprob: -8.000564575195312
    3. 'tor' → logprob: -9.250564575195312
    4. ' or' → logprob: -10.000564575195312
    5. 'essor' → logprob: -10.500564575195312
    6. 'ressor' → logprob: -11.125564575195312
    7. 'er' → logprob: -11.625564575195312
    8. 'r' → logprob: -12.250564575195312
    9. 's' → logprob: -12.500564575195312
    10. '   ' → logprob: -12.625564575195312

Token 528: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005547016044147313
    2. 'line' → logprob: -7.50055456161499
    3. ' line' → logprob: -14.000555038452148
    4. '[line' → logprob: -14.500555038452148
    5. '=line' → logprob: -15.750555038452148
    6. '(' → logprob: -16.12555503845215
    7. '           ' → logprob: -16.50055503845215
    8. '(
' → logprob: -16.75055503845215
    9. '#line' → logprob: -17.37555503845215
    10. '```' → logprob: -17.62555503845215

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0892372652888298
    2. ')
' → logprob: -2.5892372131347656
    3. '           ' → logprob: -4.589237213134766
    4. ')
' → logprob: -9.839237213134766
    5. '               ' → logprob: -10.339237213134766
    6. '       ' → logprob: -10.339237213134766
    7. ')

' → logprob: -12.839237213134766
    8. ').' → logprob: -12.964237213134766
    9. '          ' → logprob: -13.089237213134766
    10. '<|end|>' → logprob: -13.714237213134766

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017737116431817412
    2. 'output' → logprob: -6.626773834228516
    3. 'try' → logprob: -7.876773834228516
    4. 'result' → logprob: -9.876773834228516
    5. '
' → logprob: -11.751773834228516
    6. '       ' → logprob: -13.001773834228516
    7. ' try' → logprob: -13.626773834228516
    8. '               ' → logprob: -13.751773834228516
    9. '            
' → logprob: -14.126773834228516
    10. ' output' → logprob: -14.126773834228516

Token 531: ' decom' (ID: 57661)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.5019453167915344
    2. 'output' → logprob: -1.1269452571868896
    3. '           ' → logprob: -2.7519452571868896
    4. 'de' → logprob: -5.126945495605469
    5. ' try' → logprob: -7.876945495605469
    6. 'result' → logprob: -8.126945495605469
    7. '               ' → logprob: -9.751945495605469
    8. ' output' → logprob: -9.876945495605469
    9. 'expanded' → logprob: -9.876945495605469
    10. '   ' → logprob: -10.751945495605469

Token 532: 'pressed' (ID: 26974)
  Prédit: 'pressor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressor' → logprob: -0.1027408167719841
    2. 'pressed' → logprob: -2.35274076461792
    3. 'om' → logprob: -7.10274076461792
    4. '       ' → logprob: -7.47774076461792
    5. '           ' → logprob: -7.72774076461792
    6. 'press' → logprob: -8.352741241455078
    7. 'ressor' → logprob: -8.977741241455078
    8. 'omp' → logprob: -10.102741241455078
    9. 'r' → logprob: -10.227741241455078
    10. 'pres' → logprob: -10.352741241455078

Token 533: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4057972729206085
    2. ' =' → logprob: -1.2807972431182861
    3. '=' → logprob: -3.530797243118286
    4. '_str' → logprob: -3.780797243118286
    5. '_text' → logprob: -6.155797481536865
    6. '_string' → logprob: -7.030797481536865
    7. '_output' → logprob: -8.155797004699707
    8. '=line' → logprob: -8.530797004699707
    9. 'ed' → logprob: -10.030797004699707
    10. 'line' → logprob: -10.155797004699707

Token 534: ' decom' (ID: 57661)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.003178306156769395
    2. ' decom' → logprob: -5.753178119659424
    3. '           ' → logprob: -15.128178596496582
    4. '	de' → logprob: -16.503177642822266
    5. '   ' → logprob: -16.753177642822266
    6. ' de' → logprob: -16.878177642822266
    7. '               ' → logprob: -17.878177642822266
    8. '       ' → logprob: -17.878177642822266
    9. ' ' → logprob: -18.378177642822266
    10. 'deque' → logprob: -18.628177642822266

Token 535: 'pressor' (ID: 88777)
  Prédit: 'pressor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressor' → logprob: -0.38805484771728516
    2. 'pressed' → logprob: -1.1380548477172852
    3. 'press' → logprob: -7.263054847717285
    4. 'ressed' → logprob: -8.888054847717285
    5. 'pres' → logprob: -9.388054847717285
    6. 'ressor' → logprob: -9.513054847717285
    7. 'om' → logprob: -10.263054847717285
    8. 'essor' → logprob: -10.638054847717285
    9. 'pr' → logprob: -11.013054847717285
    10. 'essed' → logprob: -11.138054847717285

Token 536: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -3.953082341467962e-05
    2. 'de' → logprob: -10.250039100646973
    3. '.' → logprob: -13.125039100646973
    4. ' .' → logprob: -13.750039100646973
    5. '.dequeue' → logprob: -14.625039100646973
    6. '.decrypt' → logprob: -15.250039100646973
    7. ',de' → logprob: -15.625039100646973
    8. '   ' → logprob: -17.50004005432129
    9. '```' → logprob: -17.62504005432129
    10. '.defer' → logprob: -17.87504005432129

Token 537: 'compress' (ID: 69636)
  Prédit: 'compress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.006030111573636532
    2. 'om' → logprob: -5.881030082702637
    3. 'compressed' → logprob: -6.131030082702637
    4. 'comp' → logprob: -7.381030082702637
    5. 'press' → logprob: -8.256030082702637
    6. 'omp' → logprob: -9.131030082702637
    7. 'com' → logprob: -10.631030082702637
    8. 'compr' → logprob: -11.506030082702637
    9. ' compress' → logprob: -12.381030082702637
    10. 'r' → logprob: -12.506030082702637

Token 538: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014630960067734122
    2. '
' → logprob: -7.001462936401367
    3. '()
' → logprob: -8.251462936401367
    4. '()' → logprob: -8.876462936401367
    5. '            
' → logprob: -9.751462936401367
    6. '(output' → logprob: -10.501462936401367
    7. 'output' → logprob: -11.126462936401367
    8. ',' → logprob: -11.501462936401367
    9. '		' → logprob: -11.751462936401367
    10. '               ' → logprob: -11.751462936401367

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4974866644479334e-05
    2. '
' → logprob: -11.500015258789062
    3. 'output' → logprob: -12.500015258789062
    4. '               ' → logprob: -14.625015258789062
    5. '       ' → logprob: -15.250015258789062
    6. '		' → logprob: -16.125015258789062
    7. '   ' → logprob: -16.250015258789062
    8. ' output' → logprob: -16.250015258789062
    9. '            
' → logprob: -16.250015258789062
    10. '```' → logprob: -16.750015258789062

Token 540: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.01297410111874342
    2. '           ' → logprob: -4.387974262237549
    3. 'if' → logprob: -8.38797378540039
    4. ' output' → logprob: -8.76297378540039
    5. 'try' → logprob: -9.51297378540039
    6. '       ' → logprob: -13.13797378540039
    7. '
' → logprob: -14.01297378540039
    8. '            
' → logprob: -14.13797378540039
    9. ' if' → logprob: -14.63797378540039
    10. '               ' → logprob: -15.01297378540039

Token 541: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012439649435691535
    2. '.' → logprob: -9.000123977661133
    3. '.extend' → logprob: -14.500123977661133
    4. '.ap' → logprob: -15.375123977661133
    5. '.app' → logprob: -15.750123977661133
    6. 'append' → logprob: -18.000123977661133
    7. '.add' → logprob: -18.000123977661133
    8. '.Append' → logprob: -18.375123977661133
    9. ' .' → logprob: -18.625123977661133
    10. '.push' → logprob: -20.000123977661133

Token 542: '(de' (ID: 20586)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07890080660581589
    2. '(de' → logprob: -2.5789008140563965
    3. ' decom' → logprob: -11.453900337219238
    4. '	de' → logprob: -14.828900337219238
    5. ' de' → logprob: -18.328901290893555
    6. ',de' → logprob: -18.328901290893555
    7. '```' → logprob: -18.953901290893555
    8. 'deque' → logprob: -19.078901290893555
    9. '(' → logprob: -19.203901290893555
    10. '_de' → logprob: -19.328901290893555

Token 543: 'compressed' (ID: 91086)
  Prédit: 'compressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.002103155944496393
    2. 'com' → logprob: -7.002103328704834
    3. 'comp' → logprob: -7.002103328704834
    4. 'c' → logprob: -10.002102851867676
    5. 'processed' → logprob: -10.252102851867676
    6. '   ' → logprob: -10.502102851867676
    7. 'om' → logprob: -10.627102851867676
    8. 'pressed' → logprob: -10.752102851867676
    9. 'compl' → logprob: -10.877102851867676
    10. '       ' → logprob: -11.127102851867676

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890322804450989
    2. ')
' → logprob: -2.5789031982421875
    3. '       ' → logprob: -11.703903198242188
    4. ')
' → logprob: -12.703903198242188
    5. ')return' → logprob: -14.078903198242188
    6. ')

' → logprob: -14.578903198242188
    7. '
' → logprob: -14.703903198242188
    8. '```' → logprob: -15.953903198242188
    9. ')`' → logprob: -16.203903198242188
    10. ')`
' → logprob: -16.578903198242188

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11915820091962814
    2. '
' → logprob: -2.3691582679748535
    3. 'return' → logprob: -4.1191582679748535
    4. ' return' → logprob: -6.4941582679748535
    5. '   ' → logprob: -7.1191582679748535
    6. '	' → logprob: -9.994157791137695
    7. '	return' → logprob: -10.369157791137695
    8. '
' → logprob: -10.619157791137695
    9. '        
' → logprob: -10.619157791137695
    10. '```' → logprob: -10.619157791137695

Token 546: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03810541331768036
    2. '       ' → logprob: -3.5381054878234863
    3. ' return' → logprob: -5.288105487823486
    4. '   ' → logprob: -5.788105487823486
    5. '
' → logprob: -8.538105010986328
    6. '	return' → logprob: -11.788105010986328
    7. ' ' → logprob: -14.413105010986328
    8. '```' → logprob: -15.538105010986328
    9. '    
' → logprob: -15.663105010986328
    10. '    ' → logprob: -15.913105010986328

Token 547: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0009114635176956654
    2. ' output' → logprob: -7.000911235809326
    3. '	output' → logprob: -18.750911712646484
    4. 'out' → logprob: -19.000911712646484
    5. '   ' → logprob: -20.750911712646484
    6. '(output' → logprob: -21.000911712646484
    7. '$output' → logprob: -21.000911712646484
    8. 'Output' → logprob: -21.125911712646484
    9. ' ' → logprob: -21.500911712646484
    10. ' ' → logprob: -21.625911712646484

Token 548: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0027940645813941956
    2. ' process' → logprob: -6.50279426574707
    3. ' run' → logprob: -7.25279426574707
    4. 'main' → logprob: -8.12779426574707
    5. ' test' → logprob: -8.50279426574707
    6. ' parse' → logprob: -9.87779426574707
    7. 'process' → logprob: -11.62779426574707
    8. ' solve' → logprob: -12.00279426574707
    9. ' read' → logprob: -12.25279426574707
    10. ' decode' → logprob: -12.37779426574707

Token 551: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.7835754988482222e-05
    2. '():
' → logprob: -11.500018119812012
    3. '()' → logprob: -12.250018119812012
    4. ' ():' → logprob: -12.875018119812012
    5. '():
' → logprob: -16.250017166137695
    6. '(' → logprob: -16.625017166137695
    7. '()>' → logprob: -17.500017166137695
    8. '().__' → logprob: -17.875017166137695
    9. '_' → logprob: -17.875017166137695
    10. '():

' → logprob: -18.250017166137695

Token 552: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2666339874267578
    2. ' lines' → logprob: -2.141633987426758
    3. 'import' → logprob: -2.266633987426758
    4. ' if' → logprob: -5.016633987426758
    5. '   ' → logprob: -5.391633987426758
    6. 'if' → logprob: -7.016633987426758
    7. ' input' → logprob: -7.766633987426758
    8. 'lines' → logprob: -8.516633987426758
    9. '	import' → logprob: -9.766633987426758
    10. 'input' → logprob: -10.141633987426758

Token 553: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.14743921160697937
    2. ' import' → logprob: -2.2724392414093018
    3. ' lines' → logprob: -4.272439002990723
    4. 'lines' → logprob: -4.272439002990723
    5. '   ' → logprob: -5.272439002990723
    6. 'input' → logprob: -7.897439002990723
    7. 'n' → logprob: -8.147439002990723
    8. ' input' → logprob: -8.772439002990723
    9. ' n' → logprob: -10.022439002990723
    10. 'inputs' → logprob: -10.147439002990723

Token 554: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12693022191524506
    2. 'sys' → logprob: -2.1269302368164062
    3. '	sys' → logprob: -13.626930236816406
    4. '=sys' → logprob: -14.001930236816406
    5. '(sys' → logprob: -17.376930236816406
    6. 'file' → logprob: -20.001930236816406
    7. '.sys' → logprob: -20.126930236816406
    8. '_sys' → logprob: -20.376930236816406
    9. 'io' → logprob: -20.501930236816406
    10. ' ' → logprob: -20.501930236816406

Token 555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06987573951482773
    2. '    
' → logprob: -3.194875717163086
    3. '
' → logprob: -3.819875717163086
    4. 'input' → logprob: -6.444875717163086
    5. ' lines' → logprob: -7.194875717163086
    6. 'for' → logprob: -7.319875717163086
    7. ' for' → logprob: -7.819875717163086
    8. ' input' → logprob: -8.694875717163086
    9. '   
' → logprob: -8.819875717163086
    10. ' readline' → logprob: -8.944875717163086

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01042074616998434
    2. 'for' → logprob: -5.010420799255371
    3. ' for' → logprob: -5.760420799255371
    4. ' lines' → logprob: -7.885420799255371
    5. '    
' → logprob: -9.385420799255371
    6. '
' → logprob: -10.885420799255371
    7. 'lines' → logprob: -11.010420799255371
    8. 'if' → logprob: -11.260420799255371
    9. ' if' → logprob: -11.260420799255371
    10. 'input' → logprob: -11.385420799255371

Token 557: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0356061458587646
    2. ' lines' → logprob: -1.5356061458587646
    3. 'for' → logprob: -1.5356061458587646
    4. 'lines' (adapté à ' lines') → logprob: -1.7856061458587646
    5. ' for' → logprob: -3.1606061458587646
    6. 'if' → logprob: -6.285606384277344
    7. 'args' → logprob: -7.035606384277344
    8. 'input' → logprob: -7.285606384277344
    9. ' if' → logprob: -7.535606384277344
    10. ' input' → logprob: -8.785606384277344

Token 558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327006220817566
    2. ' =' → logprob: -1.313270092010498
    3. '_' → logprob: -13.06326961517334
    4. ' =
' → logprob: -13.18826961517334
    5. '	' → logprob: -14.31326961517334
    6. '=sys' → logprob: -14.43826961517334
    7. 'for' → logprob: -14.56326961517334
    8. '=[]' → logprob: -14.68826961517334
    9. '=
' → logprob: -14.93826961517334
    10. '＝' → logprob: -15.06326961517334

Token 559: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05736614763736725
    2. 'sys' → logprob: -3.307366132736206
    3. ' [' → logprob: -4.057366371154785
    4. ' sys' → logprob: -6.682366371154785
    5. '[s' → logprob: -7.932366371154785
    6. '[list' → logprob: -8.807366371154785
    7. '[i' → logprob: -10.807366371154785
    8. '(sys' → logprob: -11.432366371154785
    9. '[line' → logprob: -11.682366371154785
    10. '[f' → logprob: -12.057366371154785

Token 560: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.7432603272027336e-06
    2. 'l' → logprob: -13.750001907348633
    3. ' line' → logprob: -14.500001907348633
    4. '(line' → logprob: -17.500001907348633
    5. 'ln' → logprob: -17.875001907348633
    6. 'lin' → logprob: -19.875001907348633
    7. '	line' → logprob: -20.125001907348633
    8. 'row' → logprob: -21.875001907348633
    9. '=line' → logprob: -22.000001907348633
    10. '[line' → logprob: -22.125001907348633

Token 561: '.rstrip' (ID: 161629)
  Prédit: '.rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.004100604448467493
    2. '.strip' → logprob: -5.504100799560547
    3. 'rstrip' → logprob: -11.004100799560547
    4. '.' → logprob: -12.379100799560547
    5. '[:-' → logprob: -13.629100799560547
    6. '.chomp' → logprob: -16.629100799560547
    7. '.readline' → logprob: -17.504100799560547
    8. 'strip' → logprob: -17.879100799560547
    9. ' for' → logprob: -19.004100799560547
    10. 'for' → logprob: -19.129100799560547

Token 562: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0002703953068703413
    2. '()' → logprob: -8.25027084350586
    3. '("\' → logprob: -11.75027084350586
    4. ''\' → logprob: -13.87527084350586
    5. '()\' → logprob: -15.75027084350586
    6. '(' → logprob: -16.75027084350586
    7. '()
' → logprob: -17.25027084350586
    8. '('' → logprob: -18.37527084350586
    9. '='\' → logprob: -18.62527084350586
    10. '\n' → logprob: -19.50027084350586

Token 563: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. '\n' → logprob: -13.750000953674316
    3. 'r' → logprob: -18.875001907348633
    4. 'newline' → logprob: -20.125001907348633
    5. ' n' → logprob: -20.875001907348633
    6. 'ndef' → logprob: -23.000001907348633
    7. '	n' → logprob: -23.500001907348633
    8. 'nw' → logprob: -23.750001907348633
    9. 'ns' → logprob: -23.750001907348633
    10. '
' → logprob: -23.875001907348633

Token 564: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004087778273969889
    2. ')' → logprob: -5.504087924957275
    3. '")' → logprob: -11.879087448120117
    4. '()' → logprob: -14.504087448120117
    5. '\n' → logprob: -15.004087448120117
    6. ' ')' → logprob: -15.004087448120117
    7. '')
' → logprob: -15.379087448120117
    8. ' )' → logprob: -15.379087448120117
    9. ''' → logprob: -15.504087448120117
    10. '   ' → logprob: -15.629087448120117

Token 565: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1631142944097519
    2. 'for' → logprob: -1.913114309310913
    3. '   ' → logprob: -5.913114070892334
    4. '    ' → logprob: -9.288114547729492
    5. '	for' → logprob: -10.038114547729492
    6. '       ' → logprob: -10.913114547729492
    7. ')' → logprob: -11.413114547729492
    8. '
' → logprob: -11.913114547729492
    9. '           ' → logprob: -12.788114547729492
    10. ' ' → logprob: -13.038114547729492

Token 566: ' line' (ID: 2543)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.44834592938423157
    2. ' line' → logprob: -1.6983458995819092
    3. 'sys' → logprob: -2.198345899581909
    4. 'line' → logprob: -2.698345899581909
    5. '=sys' → logprob: -11.698346138000488
    6. ' ' → logprob: -12.073346138000488
    7. '	sys' → logprob: -12.198346138000488
    8. '_' → logprob: -12.948346138000488
    9. '	line' → logprob: -13.573346138000488
    10. ' _' → logprob: -13.948346138000488

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007675960194319487
    2. 'in' → logprob: -4.882676124572754
    3. ' line' → logprob: -10.507676124572754
    4. ' sys' → logprob: -10.882676124572754
    5. 'line' → logprob: -11.007676124572754
    6. 'sys' → logprob: -12.757676124572754
    7. '=sys' → logprob: -13.132676124572754
    8. ' ' → logprob: -14.132676124572754
    9. 'import' → logprob: -14.632676124572754
    10. '	in' → logprob: -15.382676124572754

Token 568: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022564470767975
    2. ' sys' → logprob: -1.9102256298065186
    3. '	sys' → logprob: -14.160225868225098
    4. '=sys' → logprob: -14.535225868225098
    5. '(sys' → logprob: -15.785225868225098
    6. 'stdin' → logprob: -16.91022491455078
    7. '   ' → logprob: -17.03522491455078
    8. ' ' → logprob: -17.66022491455078
    9. '
' → logprob: -18.28522491455078
    10. 'import' → logprob: -19.53522491455078

Token 569: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013131031300872564
    2. 'stdin' → logprob: -9.000131607055664
    3. '.argv' → logprob: -12.250131607055664
    4. '.' → logprob: -12.875131607055664
    5. '.stdout' → logprob: -15.500131607055664
    6. ' stdin' → logprob: -16.125131607055664
    7. '(stdin' → logprob: -16.500131607055664
    8. '.std' → logprob: -17.000131607055664
    9. '   ' → logprob: -18.000131607055664
    10. ' .' → logprob: -18.250131607055664

Token 570: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004050514253322035
    2. ' ]' → logprob: -8.000405311584473
    3. '   ' → logprob: -10.875405311584473
    4. ' if' → logprob: -11.125405311584473
    5. '()]' → logprob: -11.625405311584473
    6. 'if' → logprob: -11.625405311584473
    7. '.readlines' → logprob: -11.625405311584473
    8. '`]' → logprob: -12.875405311584473
    9. ']
' → logprob: -13.000405311584473
    10. ')]' → logprob: -14.000405311584473

Token 571: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078758880496025
    2. ' line' → logprob: -5.5040788650512695
    3. 'len' → logprob: -15.87907886505127
    4. '	line' → logprob: -16.504077911376953
    5. ' ' → logprob: -17.004077911376953
    6. '   ' → logprob: -17.254077911376953
    7. '(line' → logprob: -17.379077911376953
    8. '
' → logprob: -18.629077911376953
    9. '#line' → logprob: -18.754077911376953
    10. '[line' → logprob: -19.129077911376953

Token 572: '.strip' (ID: 40613)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11639315634965897
    2. '.strip' → logprob: -2.2413930892944336
    3. '.rstrip' → logprob: -6.366393089294434
    4. '.' → logprob: -7.366393089294434
    5. '<|end|>' → logprob: -7.366393089294434
    6. '   ' → logprob: -9.241393089294434
    7. '.readline' → logprob: -9.491393089294434
    8. ' !=' → logprob: -9.616393089294434
    9. ' ]' → logprob: -9.741393089294434
    10. ']!=' → logprob: -9.741393089294434

Token 573: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.02988261915743351
    2. '()' → logprob: -3.5298826694488525
    3. '()]
' → logprob: -9.029882431030273
    4. '()!=' → logprob: -11.779882431030273
    5. ']' → logprob: -12.654882431030273
    6. '()>' → logprob: -14.279882431030273
    7. '())' → logprob: -15.404882431030273
    8. '()],' → logprob: -15.404882431030273
    9. '()][' → logprob: -15.654882431030273
    10. ']()' → logprob: -16.404882431030273

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06921342760324478
    2. '
' → logprob: -3.569213390350342
    3. '    
' → logprob: -3.694213390350342
    4. 'for' → logprob: -4.569213390350342
    5. ' for' → logprob: -5.694213390350342
    6. '        
' → logprob: -11.1942138671875
    7. '```' → logprob: -11.1942138671875
    8. '    ' → logprob: -11.3192138671875
    9. '<|end|>' → logprob: -11.4442138671875
    10. '	for' → logprob: -11.5692138671875

Token 575: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.018752409145236015
    2. ' processor' → logprob: -4.268752574920654
    3. '   ' → logprob: -5.518752574920654
    4. 'p' → logprob: -8.143752098083496
    5. 'process' → logprob: -9.143752098083496
    6. ' p' → logprob: -9.893752098083496
    7. '    
' → logprob: -9.893752098083496
    8. '
' → logprob: -10.143752098083496
    9. 'proc' → logprob: -11.518752098083496
    10. '_processor' → logprob: -11.893752098083496

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859202727675438
    2. '=' → logprob: -3.0485920906066895
    3. '.' → logprob: -12.798591613769531
    4. ' ' → logprob: -14.423591613769531
    5. '(process' → logprob: -14.798591613769531
    6. '.process' → logprob: -14.923591613769531
    7. '   ' → logprob: -15.923591613769531
    8. '	' → logprob: -16.04859161376953
    9. '(' → logprob: -16.17359161376953
    10. '  ' → logprob: -16.79859161376953

Token 577: ' Processor' (ID: 82937)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.2014138251543045
    2. ' Processor' → logprob: -1.701413869857788
    3. ' Process' → logprob: -15.076414108276367
    4. ' processor' → logprob: -15.701414108276367
    5. 'Process' → logprob: -16.951414108276367
    6. 'Processing' → logprob: -17.326414108276367
    7. '_processor' → logprob: -18.326414108276367
    8. ' Processing' → logprob: -18.451414108276367
    9. '
' → logprob: -20.701414108276367
    10. 'processor' → logprob: -20.826414108276367

Token 578: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: 0.0
    2. '(line' → logprob: -17.375
    3. '(l' → logprob: -17.875
    4. ' lines' → logprob: -19.375
    5. '(' → logprob: -19.875
    6. '(list' → logprob: -20.0
    7. ' (' → logprob: -20.125
    8. '(
' → logprob: -20.25
    9. '(rows' → logprob: -20.25
    10. 'lines' → logprob: -20.375

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011454503983259201
    2. '   ' → logprob: -4.6364545822143555
    3. ')
' → logprob: -6.3864545822143555
    4. '(' → logprob: -12.761454582214355
    5. ' )' → logprob: -13.636454582214355
    6. '       ' → logprob: -13.636454582214355
    7. '	' → logprob: -14.261454582214355
    8. ').' → logprob: -14.261454582214355
    9. '(lines' → logprob: -14.261454582214355
    10. '[' → logprob: -14.386454582214355

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01292361132800579
    2. 'processor' → logprob: -4.887923717498779
    3. '
' → logprob: -5.762923717498779
    4. ' processor' → logprob: -6.887923717498779
    5. '    
' → logprob: -7.137923717498779
    6. 'result' → logprob: -9.012923240661621
    7. 'for' → logprob: -9.887923240661621
    8. 'output' → logprob: -9.887923240661621
    9. 'print' → logprob: -10.012923240661621
    10. 'process' → logprob: -11.012923240661621

Token 581: ' results' (ID: 4376)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.622288703918457
    2. 'result' → logprob: -1.122288703918457
    3. 'results' (adapté à ' results') → logprob: -2.372288703918457
    4. 'print' → logprob: -3.497288703918457
    5. 'for' → logprob: -4.747288703918457
    6. 'processed' → logprob: -5.872288703918457
    7. ' output' → logprob: -6.997288703918457
    8. ' result' → logprob: -7.747288703918457
    9. 'outputs' → logprob: -7.747288703918457
    10. ' results' → logprob: -7.872288703918457

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31467026472091675
    2. '=' → logprob: -1.3146703243255615
    3. '.' → logprob: -6.939670085906982
    4. '.process' → logprob: -7.814670085906982
    5. '.extend' → logprob: -10.81467056274414
    6. '.=' → logprob: -12.31467056274414
    7. '.append' → logprob: -13.18967056274414
    8. ' =
' → logprob: -13.18967056274414
    9. '=[]' → logprob: -13.81467056274414
    10. '   ' → logprob: -13.93967056274414

Token 583: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.1002068892121315
    2. ' processor' → logprob: -2.3502068519592285
    3. 'process' → logprob: -15.475207328796387
    4. '   ' → logprob: -17.60020637512207
    5. 'Processor' → logprob: -18.47520637512207
    6. '.processor' → logprob: -18.60020637512207
    7. 'processors' → logprob: -19.22520637512207
    8. '_processor' → logprob: -19.47520637512207
    9. '(process' → logprob: -19.72520637512207
    10. ' process' → logprob: -20.22520637512207

Token 584: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.939851037808694e-05
    2. '.' → logprob: -10.500029563903809
    3. 'process' → logprob: -13.250029563903809
    4. ' .' → logprob: -16.375028610229492
    5. '.pro' → logprob: -19.000028610229492
    6. ' process' → logprob: -20.000028610229492
    7. '.perform' → logprob: -20.375028610229492
    8. '.run' → logprob: -20.375028610229492
    9. '.
' → logprob: -21.375028610229492
    10. '	process' → logprob: -21.375028610229492

Token 585: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01519640814512968
    2. 'for' → logprob: -4.265196323394775
    3. '
' → logprob: -7.265196323394775
    4. ' for' → logprob: -8.265196800231934
    5. '    
' → logprob: -10.140196800231934
    6. '	for' → logprob: -10.265196800231934
    7. '<|end|>' → logprob: -14.390196800231934
    8. '```' → logprob: -15.640196800231934
    9. '	
' → logprob: -15.765196800231934
    10. '  
' → logprob: -16.015195846557617

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009144435753114522
    2. 'for' → logprob: -7.000914573669434
    3. ' for' → logprob: -12.750914573669434
    4. '```' → logprob: -16.750913619995117
    5. '	for' → logprob: -17.000913619995117
    6. '
' → logprob: -17.125913619995117
    7. '    
' → logprob: -18.750913619995117
    8. '       ' → logprob: -19.250913619995117
    9. '   ' → logprob: -20.500913619995117
    10. 'import' → logprob: -20.750913619995117

Token 587: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3872798979282379
    2. '   ' → logprob: -1.1372798681259155
    3. ' for' → logprob: -7.887279987335205
    4. '
' → logprob: -10.512279510498047
    5. '	for' → logprob: -12.262279510498047
    6. '    
' → logprob: -14.137279510498047
    7. '```' → logprob: -14.387279510498047
    8. '       ' → logprob: -17.387279510498047
    9. 'print' → logprob: -18.262279510498047
    10. '
' → logprob: -18.387279510498047

Token 588: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13828150928020477
    2. 'res' → logprob: -2.1382815837860107
    3. ' result' → logprob: -4.888281345367432
    4. ' res' → logprob: -5.638281345367432
    5. 'line' → logprob: -8.63828182220459
    6. 'r' → logprob: -11.38828182220459
    7. ' line' → logprob: -11.88828182220459
    8. '   ' → logprob: -15.13828182220459
    9. ' r' → logprob: -15.88828182220459
    10. ' ' → logprob: -18.388280868530273

Token 589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014168446883559227
    2. 'in' → logprob: -4.2641682624816895
    3. 'result' → logprob: -13.139168739318848
    4. ' ' → logprob: -14.014168739318848
    5. '	in' → logprob: -14.139168739318848
    6. '_in' → logprob: -14.764168739318848
    7. ',' → logprob: -15.389168739318848
    8. '   ' → logprob: -15.889168739318848
    9. ' result' → logprob: -15.889168739318848
    10. '  ' → logprob: -16.63916778564453

Token 590: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.004078401252627373
    2. ' results' → logprob: -5.504078388214111
    3. '(results' → logprob: -17.879077911376953
    4. '	results' → logprob: -19.254077911376953
    5. '
' → logprob: -19.504077911376953
    6. 'result' → logprob: -20.754077911376953
    7. 'Results' → logprob: -21.004077911376953
    8. '.results' → logprob: -21.629077911376953
    9. '_results' → logprob: -22.379077911376953
    10. ' ' → logprob: -23.629077911376953

Token 591: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09417756646871567
    2. ':
' → logprob: -2.844177484512329
    3. '       ' → logprob: -3.469177484512329
    4. '():
' → logprob: -9.09417724609375
    5. '<|end|>' → logprob: -9.59417724609375
    6. 'print' → logprob: -9.71917724609375
    7. ',' → logprob: -9.84417724609375
    8. '   ' → logprob: -9.84417724609375
    9. '():' → logprob: -10.09417724609375
    10. '.' → logprob: -10.09417724609375

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04914465546607971
    2. 'print' → logprob: -3.049144744873047
    3. ' print' → logprob: -7.924144744873047
    4. '   ' → logprob: -8.549144744873047
    5. '
' → logprob: -14.049144744873047
    6. '```' → logprob: -15.299144744873047
    7. '           ' → logprob: -15.549144744873047
    8. '	print' → logprob: -15.924144744873047
    9. ' ' → logprob: -17.299144744873047
    10. '      ' → logprob: -17.299144744873047

Token 593: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. ' print' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '```' → logprob: -20.00001335144043
    5. '
' → logprob: -22.12501335144043
    6. '	print' → logprob: -23.50001335144043
    7. 'println' → logprob: -24.75001335144043
    8. '       ' → logprob: -25.50001335144043
    9. '``' → logprob: -25.87501335144043
    10. '`' → logprob: -26.25001335144043

Token 594: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -8.061054359131958e-06
    2. 'result' → logprob: -11.750007629394531
    3. '(' → logprob: -16.12500762939453
    4. '(f' → logprob: -19.62500762939453
    5. ' result' → logprob: -19.75000762939453
    6. '=result' → logprob: -19.75000762939453
    7. '(results' → logprob: -20.50000762939453
    8. '(
' → logprob: -20.62500762939453
    9. '()' → logprob: -20.87500762939453
    10. ' (' → logprob: -21.37500762939453

Token 595: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.000007629394531
    4. '   ' → logprob: -16.62500762939453
    5. '())' → logprob: -16.62500762939453
    6. '<|end|>' → logprob: -17.00000762939453
    7. '()' → logprob: -17.37500762939453
    8. '),' → logprob: -17.75000762939453
    9. '')' → logprob: -17.87500762939453
    10. '```' → logprob: -18.50000762939453

Token 596: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.676981345459353e-06
    2. ' if' → logprob: -12.625005722045898
    3. '```' → logprob: -13.250005722045898
    4. '#' → logprob: -15.000005722045898
    5. 'main' → logprob: -16.5000057220459
    6. '#if' → logprob: -16.6250057220459
    7. '@if' → logprob: -16.8750057220459
    8. 'If' → logprob: -17.6250057220459
    9. '<|end|>' → logprob: -17.7500057220459
    10. '__' → logprob: -18.0000057220459

Token 597: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20317889750003815
    2. '__' → logprob: -1.703178882598877
    3. 'name' → logprob: -7.203178882598877
    4. '_name' → logprob: -7.328178882598877
    5. ' ' → logprob: -8.203179359436035
    6. '_' → logprob: -10.703179359436035
    7. 'Name' → logprob: -10.953179359436035
    8. ' ' → logprob: -11.078179359436035
    9. '___' → logprob: -11.453179359436035
    10. ' ' → logprob: -12.203179359436035

Token 598: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07455822080373764
    2. '==' → logprob: -2.8245582580566406
    3. ' ==' → logprob: -4.449558258056641
    4. '=="' → logprob: -7.574558258056641
    5. ' __' → logprob: -8.94955825805664
    6. '=='' → logprob: -9.07455825805664
    7. '_' → logprob: -10.82455825805664
    8. '=' → logprob: -11.57455825805664
    9. '__.__' → logprob: -11.94955825805664
    10. 'name' → logprob: -12.07455825805664

Token 599: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.868328920158092e-05
    2. '==' → logprob: -10.500028610229492
    3. '__.__' → logprob: -14.250028610229492
    4. ' ==' → logprob: -15.375028610229492
    5. '=="' → logprob: -16.625028610229492
    6. '___' → logprob: -17.750028610229492
    7. '__('' → logprob: -18.000028610229492
    8. '____' → logprob: -18.375028610229492
    9. '__
' → logprob: -18.375028610229492
    10. '=='' → logprob: -18.375028610229492

Token 600: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19288836419582367
    2. '__' → logprob: -1.8178883790969849
    3. ' ==' → logprob: -4.442888259887695
    4. '=="' → logprob: -6.942888259887695
    5. '=='' → logprob: -8.317888259887695
    6. '=' → logprob: -9.567888259887695
    7. '_' → logprob: -12.192888259887695
    8. '===' → logprob: -12.442888259887695
    9. '==
' → logprob: -12.817888259887695
    10. '___' → logprob: -13.692888259887695

Token 601: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133229613304138
    2. ''' → logprob: -1.3133230209350586
    3. ' "__' → logprob: -10.313323020935059
    4. '__' → logprob: -10.813323020935059
    5. ' '__' → logprob: -12.063323020935059
    6. ''"' → logprob: -13.938323020935059
    7. '"user' → logprob: -15.563323020935059
    8. '"_' → logprob: -15.813323020935059
    9. ''_' → logprob: -15.813323020935059
    10. '   ' → logprob: -16.313322067260742

Token 602: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5767483711242676
    2. 'main' → logprob: -0.8267483711242676
    3. '"' → logprob: -7.201748371124268
    4. ''' → logprob: -9.95174789428711
    5. 'name' → logprob: -11.82674789428711
    6. '_main' → logprob: -12.20174789428711
    7. ' main' → logprob: -13.70174789428711
    8. '__":
' → logprob: -15.07674789428711
    9. ' "__' → logprob: -15.20174789428711
    10. '主' → logprob: -15.32674789428711

Token 603: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16029885411262512
    2. '__' → logprob: -1.9102988243103027
    3. '__':
' → logprob: -9.535299301147461
    4. '__:' → logprob: -13.910299301147461
    5. '__["' → logprob: -14.535299301147461
    6. '_' → logprob: -14.660299301147461
    7. '__
' → logprob: -15.160299301147461
    8. '__",' → logprob: -15.785299301147461
    9. '__("' → logprob: -16.28529930114746
    10. '__.' → logprob: -16.66029930114746

Token 604: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00011343709047650918
    2. '__' → logprob: -9.500113487243652
    3. ' main' → logprob: -10.250113487243652
    4. '   ' → logprob: -13.250113487243652
    5. '	main' → logprob: -13.875113487243652
    6. ''' → logprob: -15.875113487243652
    7. '_main' → logprob: -16.375112533569336
    8. ' ' → logprob: -16.625112533569336
    9. '"' → logprob: -16.750112533569336
    10. '(main' → logprob: -16.875112533569336

Token 605: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -20.125
    4. 'ma' → logprob: -21.25
    5. 'mai' → logprob: -21.5
    6. '   ' → logprob: -22.375
    7. 'm' → logprob: -23.375
    8. 'maine' → logprob: -24.375
    9. '(main' → logprob: -24.75
    10. '.main' → logprob: -24.875

Token 606: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 604
Tokens correctement prédits (1ère position, stricte): 285
Tokens correctement prédits (1ère position, avec adaptation): 329
Tokens correctement prédits (top 10): 556
Précision stricte (1ère position): 47.19%
Précision adaptée (1ère position): 54.47%
Précision (top 10): 92.05%
================================================================================
