================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    L = input()
    if L == '0':
        break
    L = int(L)
    savings = 0
    reached = False
    for month in range(1, 13):
        M, N = map(int, input().split())
        savings += (M - N)
        if not reached and savings >= L:
            print(month)
            reached = True
    if not reached:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09994133561849594
    2. 'e' → logprob: -3.3499412536621094
    3. '   ' → logprob: -4.724941253662109
    4. 'I' → logprob: -4.849941253662109
    5. 'o' → logprob: -4.849941253662109
    6. '[i' → logprob: -4.849941253662109
    7. '[' → logprob: -5.349941253662109
    8. 'S' → logprob: -5.849941253662109
    9. 'ist' → logprob: -5.849941253662109
    10. '=' → logprob: -6.099941253662109

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8848142027854919
    2. ' []' → logprob: -1.0098142623901367
    3. 'input' → logprob: -1.8848142623901367
    4. '[]' → logprob: -3.1348142623901367
    5. ' [' → logprob: -4.009814262390137
    6. '[' → logprob: -6.009814262390137
    7. ' int' → logprob: -6.259814262390137
    8. ' list' → logprob: -6.509814262390137
    9. 'int' → logprob: -6.634814262390137
    10. 'list' → logprob: -7.759814262390137

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007101793773472309
    2. '('' → logprob: -5.382102012634277
    3. '("("' → logprob: -6.757102012634277
    4. '()' → logprob: -7.382102012634277
    5. '```' → logprob: -8.132102012634277
    6. ''' → logprob: -8.882102012634277
    7. '("")' → logprob: -9.882102012634277
    8. '`' → logprob: -10.632102012634277
    9. '(
' → logprob: -10.757102012634277
    10. 'parent' → logprob: -11.007102012634277

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3845815062522888
    2. ' ' → logprob: -1.7595815658569336
    3. '   ' → logprob: -3.0095815658569336
    4. '.' → logprob: -3.6345815658569336
    5. 'if' → logprob: -4.134581565856934
    6. '    ' → logprob: -4.384581565856934
    7. '<|end|>' → logprob: -4.634581565856934
    8. '.strip' → logprob: -5.134581565856934
    9. ',' → logprob: -5.259581565856934
    10. '  ' → logprob: -5.509581565856934

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3281190097332001
    2. ' ' → logprob: -1.8281190395355225
    3. '   ' → logprob: -2.8281190395355225
    4. 'if' (adapté à ' if') → logprob: -3.3281190395355225
    5. '    ' → logprob: -4.828118801116943
    6. ' ==' → logprob: -5.328118801116943
    7. '  ' → logprob: -6.203118801116943
    8. '<|end|>' → logprob: -6.328118801116943
    9. '.' → logprob: -6.828118801116943
    10. '==' → logprob: -7.078118801116943

Token 10: ' L' (ID: 451)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3655336797237396
    2. ' L' → logprob: -1.240533709526062
    3. ' ' → logprob: -4.240533828735352
    4. 'not' → logprob: -6.240533828735352
    5. 'L' → logprob: -7.740533828735352
    6. '  ' → logprob: -9.240533828735352
    7. ' len' → logprob: -9.990533828735352
    8. ' ' → logprob: -11.615533828735352
    9. ')' → logprob: -13.990533828735352
    10. '"' → logprob: -13.990533828735352

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06412213295698166
    2. '==' → logprob: -3.064122200012207
    3. '.' → logprob: -4.689122200012207
    4. '.startswith' → logprob: -6.439122200012207
    5. ' .' → logprob: -6.814122200012207
    6. ' !=' → logprob: -6.939122200012207
    7. '.strip' → logprob: -7.314122200012207
    8. ' ' → logprob: -7.689122200012207
    9. ' =' → logprob: -8.189122200012207
    10. '=' → logprob: -8.439122200012207

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6667644381523132
    2. ''' → logprob: -1.666764497756958
    3. '""' → logprob: -1.666764497756958
    4. '''' → logprob: -2.541764497756958
    5. ' "' → logprob: -4.541764259338379
    6. ' ""' → logprob: -4.791764259338379
    7. ' '' → logprob: -5.166764259338379
    8. ' ''' → logprob: -5.666764259338379
    9. '"":' → logprob: -7.291764259338379
    10. ' ' → logprob: -8.291764259338379

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8327666521072388
    2. 'exit' → logprob: -1.4577666521072388
    3. '':' → logprob: -2.082766532897949
    4. '\n' → logprob: -2.957766532897949
    5. '"' → logprob: -3.082766532897949
    6. 'quit' → logprob: -3.207766532897949
    7. ''\' → logprob: -3.707766532897949
    8. '''' → logprob: -4.957766532897949
    9. 'break' → logprob: -5.082766532897949
    10. 'q' → logprob: -5.207766532897949

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0510796494781971
    2. ''' → logprob: -3.176079750061035
    3. '\n' → logprob: -5.301079750061035
    4. ':' → logprob: -6.051079750061035
    5. ' ':' → logprob: -7.801079750061035
    6. '':
' → logprob: -8.926079750061035
    7. ' '' → logprob: -9.926079750061035
    8. '0' → logprob: -10.426079750061035
    9. '':
' → logprob: -10.926079750061035
    10. ' or' → logprob: -11.426079750061035

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012304315343499184
    2. ' break' → logprob: -5.012304306030273
    3. '   ' → logprob: -6.012304306030273
    4. '    ' → logprob: -6.762304306030273
    5. '\n' → logprob: -7.262304306030273
    6. ':' → logprob: -8.387304306030273
    7. ' ' → logprob: -8.762304306030273
    8. '	break' → logprob: -8.762304306030273
    9. '      ' → logprob: -8.887304306030273
    10. '        ' → logprob: -8.887304306030273

Token 16: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42960652709007263
    2. ' break' → logprob: -1.054606556892395
    3. 'break' (adapté à ' break') → logprob: -8.179606437683105
    4. '   ' → logprob: -8.679606437683105
    5. '	break' → logprob: -8.679606437683105
    6. '\n' → logprob: -8.929606437683105
    7. ' ' → logprob: -10.179606437683105
    8. ' ' → logprob: -10.429606437683105
    9. '    ' → logprob: -11.304606437683105
    10. '           ' → logprob: -11.429606437683105

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.121125340461731
    2. ':' → logprob: -1.496125340461731
    3. '\n' → logprob: -1.746125340461731
    4. '  
' → logprob: -2.4961252212524414
    5. '    
' → logprob: -2.9961252212524414
    6. ' ' → logprob: -3.2461252212524414
    7. '
' → logprob: -3.8711252212524414
    8. '\' → logprob: -3.9961252212524414
    9. ' 
' → logprob: -4.121125221252441
    10. '<|end|>' → logprob: -4.621125221252441

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006113886367529631
    2. '    
' → logprob: -5.2561140060424805
    3. '    ' → logprob: -8.50611400604248
    4. 'print' → logprob: -8.75611400604248
    5. ' ' → logprob: -9.13111400604248
    6. '  ' → logprob: -10.00611400604248
    7. '
' → logprob: -10.13111400604248
    8. '```' → logprob: -10.13111400604248
    9. ':' → logprob: -10.25611400604248
    10. '<|end|>' → logprob: -10.38111400604248

Token 19: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594900727272034
    2. ' ' → logprob: -0.8844900727272034
    3. 'print' → logprob: -4.134490013122559
    4. '[' → logprob: -4.259490013122559
    5. ',' → logprob: -4.384490013122559
    6. '    ' → logprob: -4.759490013122559
    7. '    
' → logprob: -4.884490013122559
    8. '<|end|>' → logprob: -4.884490013122559
    9. 'n' → logprob: -5.009490013122559
    10. '.' → logprob: -5.134490013122559

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7152925133705139
    2. '+' → logprob: -1.9652924537658691
    3. '<|end|>' → logprob: -2.215292453765869
    4. ')' → logprob: -2.965292453765869
    5. '.split' → logprob: -3.090292453765869
    6. ' ' → logprob: -3.215292453765869
    7. '=' → logprob: -3.340292453765869
    8. '[' → logprob: -3.590292453765869
    9. '.strip' → logprob: -4.715292453765869
    10. '<|end|>' → logprob: -4.840292453765869

Token 21: ' int' (ID: 677)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6247138381004333
    2. ' L' → logprob: -1.2497138977050781
    3. 'list' → logprob: -2.374713897705078
    4. 'L' → logprob: -2.624713897705078
    5. ' [' → logprob: -5.124713897705078
    6. '[' → logprob: -6.374713897705078
    7. '[int' → logprob: -6.624713897705078
    8. 'int' → logprob: -6.749713897705078
    9. ' int' → logprob: -7.374713897705078
    10. ' ' → logprob: -7.874713897705078

Token 22: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741157293319702
    2. '(L' → logprob: -0.9741157293319702
    3. '('' → logprob: -11.599115371704102
    4. '(input' → logprob: -11.724115371704102
    5. '(
' → logprob: -12.349115371704102
    6. ' (' → logprob: -12.849115371704102
    7. '(line' → logprob: -13.099115371704102
    8. '(`' → logprob: -13.224115371704102
    9. '(

' → logprob: -13.349115371704102
    10. '()' → logprob: -13.724115371704102

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037371189682744443
    2. ' )' → logprob: -8.625373840332031
    3. '+' → logprob: -8.750373840332031
    4. '*' → logprob: -12.000373840332031
    5. '))' → logprob: -12.250373840332031
    6. ' +' → logprob: -12.500373840332031
    7. '**' → logprob: -12.625373840332031
    8. '()' → logprob: -13.000373840332031
    9. ')
' → logprob: -13.125373840332031
    10. '   ' → logprob: -13.125373840332031

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6588380336761475
    2. '<|end|>' → logprob: -1.9088380336761475
    3. ':' → logprob: -2.0338380336761475
    4. ' ' → logprob: -3.0338380336761475
    5. ')' → logprob: -3.1588380336761475
    6. '+' → logprob: -3.2838380336761475
    7. '\n' → logprob: -4.408838272094727
    8. ',' → logprob: -4.533838272094727
    9. '#' → logprob: -5.033838272094727
    10. ' if' → logprob: -5.158838272094727

Token 25: ' savings' (ID: 22381)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09452511370182037
    2. ' if' → logprob: -3.469525098800659
    3. '   ' → logprob: -4.219525337219238
    4. '<|end|>' → logprob: -4.969525337219238
    5. 'if' → logprob: -5.094525337219238
    6. ')' → logprob: -5.219525337219238
    7. ',' → logprob: -5.594525337219238
    8. '[' → logprob: -5.969525337219238
    9. ' 
' → logprob: -6.219525337219238
    10. '    ' → logprob: -6.219525337219238

Token 26: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03994527831673622
    2. '[' → logprob: -4.414945125579834
    3. ' =' → logprob: -4.789945125579834
    4. '+=' → logprob: -4.914945125579834
    5. '.' → logprob: -5.789945125579834
    6. '=' → logprob: -6.289945125579834
    7. '_' → logprob: -6.664945125579834
    8. '+' → logprob: -6.789945125579834
    9. ' ' → logprob: -6.914945125579834
    10. ' -=' → logprob: -7.164945125579834

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38045886158943176
    2. ' ' → logprob: -1.7554588317871094
    3. ' L' → logprob: -2.6304588317871094
    4. ' [' → logprob: -4.255458831787109
    5. ' []' → logprob: -4.380458831787109
    6. '100' → logprob: -4.380458831787109
    7. 'L' → logprob: -4.505458831787109
    8. '[]' → logprob: -4.755458831787109
    9. 's' → logprob: -5.755458831787109
    10. '[' → logprob: -6.255458831787109

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3928124010562897
    2. 'L' → logprob: -2.017812490463257
    3. '100' → logprob: -2.892812490463257
    4. ' L' → logprob: -3.642812490463257
    5. '[]' → logprob: -3.767812490463257
    6. '[L' → logprob: -4.017812252044678
    7. '[' → logprob: -4.267812252044678
    8. 's' → logprob: -4.517812252044678
    9. ' ' → logprob: -4.517812252044678
    10. ' [' → logprob: -5.517812252044678

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' reached' (ID: 15237)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39447274804115295
    2. ' for' → logprob: -1.3944727182388306
    3. 'while' → logprob: -3.01947283744812
    4. ' while' → logprob: -4.394472599029541
    5. '   ' → logprob: -4.769472599029541
    6. 'if' → logprob: -6.394472599029541
    7. 'i' → logprob: -6.519472599029541
    8. ' if' → logprob: -7.394472599029541
    9. 'n' → logprob: -7.644472599029541
    10. ' i' → logprob: -7.769472599029541

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12986865639686584
    2. '=' → logprob: -2.254868745803833
    3. ' ' → logprob: -5.504868507385254
    4. '_' → logprob: -6.004868507385254
    5. '_days' → logprob: -6.129868507385254
    6. 's' → logprob: -6.629868507385254
    7. ',' → logprob: -6.629868507385254
    8. ' +=' → logprob: -6.754868507385254
    9. '_s' → logprob: -7.129868507385254
    10. '+=' → logprob: -7.629868507385254

Token 33: ' False' (ID: 7983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48878058791160583
    2. '0' → logprob: -1.7387806177139282
    3. ' L' → logprob: -2.1137804985046387
    4. ' False' → logprob: -3.2387804985046387
    5. 'False' → logprob: -4.363780498504639
    6. 'L' → logprob: -4.613780498504639
    7. ' [' → logprob: -4.863780498504639
    8. ' []' → logprob: -4.988780498504639
    9. '1' → logprob: -5.613780498504639
    10. ' True' → logprob: -5.988780498504639

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8153305649757385
    2. '\n' → logprob: -1.4403305053710938
    3. '
' → logprob: -2.0653305053710938
    4. '<|end|>' → logprob: -2.1903305053710938
    5. ' 
' → logprob: -4.190330505371094
    6. 'n' → logprob: -4.315330505371094
    7. '    
' → logprob: -4.315330505371094
    8. ' ' → logprob: -4.690330505371094
    9. 'newline' → logprob: -4.940330505371094
    10. '\' → logprob: -5.190330505371094

Token 36: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0668350458145142
    2. ' 
' → logprob: -1.4418350458145142
    3. ' ' → logprob: -1.9418350458145142
    4. ' for' → logprob: -2.3168349266052246
    5. '
' → logprob: -3.0668349266052246
    6. '<|end|>' → logprob: -3.3168349266052246
    7. 'for' (adapté à ' for') → logprob: -3.6918349266052246
    8. '   ' → logprob: -3.9418349266052246
    9. 'n' → logprob: -3.9418349266052246
    10. '\' → logprob: -4.816834926605225

Token 37: ' month' (ID: 2944)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.312725692987442
    2. ' ' → logprob: -1.5627256631851196
    3. ' _' → logprob: -3.437725782394409
    4. ' range' → logprob: -3.812725782394409
    5. '_' → logprob: -5.93772554397583
    6. ' day' → logprob: -6.68772554397583
    7. ' year' → logprob: -8.687726020812988
    8. ' n' → logprob: -8.812726020812988
    9. ' in' → logprob: -9.312726020812988
    10. ' money' → logprob: -9.562726020812988

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008790414780378342
    2. 'in' → logprob: -5.008790493011475
    3. ' ' → logprob: -6.258790493011475
    4. '<|end|>' → logprob: -9.758790016174316
    5. ' ,' → logprob: -10.883790016174316
    6. 's' → logprob: -10.883790016174316
    7. ',' → logprob: -11.258790016174316
    8. '_' → logprob: -11.383790016174316
    9. ' i' → logprob: -12.008790016174316
    10. '	in' → logprob: -12.133790016174316

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02055169641971588
    2. 'range' → logprob: -3.8955516815185547
    3. '	range' → logprob: -12.020551681518555
    4. ' ' → logprob: -13.145551681518555
    5. '[' → logprob: -14.395551681518555
    6. '(range' → logprob: -14.770551681518555
    7. ' xrange' → logprob: -15.395551681518555
    8. '  ' → logprob: -16.145551681518555
    9. ' ' → logprob: -16.270551681518555
    10. '   ' → logprob: -16.520551681518555

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020762672647833824
    2. ' (' → logprob: -6.252076148986816
    3. '(s' → logprob: -9.377076148986816
    4. '(L' → logprob: -10.127076148986816
    5. '(month' → logprob: -11.252076148986816
    6. ' ' → logprob: -13.127076148986816
    7. '(len' → logprob: -13.627076148986816
    8. '(
' → logprob: -13.752076148986816
    9. '<|end|>' → logprob: -14.127076148986816
    10. '(n' → logprob: -14.127076148986816

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1830817013978958
    2. '12' → logprob: -2.18308162689209
    3. 'L' → logprob: -3.05808162689209
    4. ' ' → logprob: -5.93308162689209
    5. ' L' → logprob: -6.18308162689209
    6. '0' → logprob: -7.18308162689209
    7. '(' → logprob: -7.80808162689209
    8. '   ' → logprob: -8.18308162689209
    9. '6' → logprob: -8.43308162689209
    10. '100' → logprob: -8.80808162689209

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015490218065679073
    2. ' ,' → logprob: -6.501549243927002
    3. ' ' → logprob: -11.126548767089844
    4. '1' → logprob: -11.126548767089844
    5. '0' → logprob: -13.001548767089844
    6. ',L' → logprob: -13.001548767089844
    7. '<|end|>' → logprob: -13.001548767089844
    8. ',len' → logprob: -13.626548767089844
    9. '2' → logprob: -13.876548767089844
    10. '6' → logprob: -13.876548767089844

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7707420587539673
    2. ' L' → logprob: -1.5207420587539673
    3. '13' → logprob: -2.0207419395446777
    4. 'L' → logprob: -2.1457419395446777
    5. '12' → logprob: -3.6457419395446777
    6. '61' → logprob: -3.8957419395446777
    7. '101' → logprob: -5.520741939544678
    8. '31' → logprob: -6.020741939544678
    9. '100' → logprob: -6.145741939544678
    10. '11' → logprob: -6.145741939544678

Token 44: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.59816575050354
    2. 'L' → logprob: -0.97316575050354
    3. '61' → logprob: -3.22316575050354
    4. '101' → logprob: -5.348165512084961
    5. '121' → logprob: -5.473165512084961
    6. ' L' → logprob: -5.598165512084961
    7. '25' → logprob: -5.598165512084961
    8. ' ' → logprob: -5.723165512084961
    9. '100' → logprob: -5.848165512084961
    10. '12' → logprob: -6.348165512084961

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001462619286030531
    2. ':' → logprob: -7.126462459564209
    3. '+' → logprob: -8.126462936401367
    4. '):
' → logprob: -8.501462936401367
    5. ')' → logprob: -9.126462936401367
    6. ' ):' → logprob: -10.626462936401367
    7. '   ' → logprob: -11.501462936401367
    8. ',' → logprob: -11.876462936401367
    9. '():' → logprob: -13.001462936401367
    10. ' +' → logprob: -13.501462936401367

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3546706736087799
    2. '<|end|>' → logprob: -1.6046706438064575
    3. '    ' → logprob: -3.229670763015747
    4. ' ' → logprob: -3.354670763015747
    5. '   ' → logprob: -4.104670524597168
    6. '        ' → logprob: -6.354670524597168
    7. ' 
' → logprob: -6.729670524597168
    8. '<|end|>' → logprob: -6.979670524597168
    9. '        
' → logprob: -7.854670524597168
    10. ')' → logprob: -8.229670524597168

Token 47: ' M' (ID: 391)
  Prédit: ' savings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' savings' → logprob: -0.19191984832286835
    2. 's' → logprob: -2.3169198036193848
    3. ' ' → logprob: -3.8169198036193848
    4. ' s' → logprob: -4.066919803619385
    5. ' if' → logprob: -4.441919803619385
    6. '<|end|>' → logprob: -5.316919803619385
    7. '   ' → logprob: -6.066919803619385
    8. '    ' → logprob: -6.316919803619385
    9. '       ' → logprob: -6.441919803619385
    10. ' monthly' → logprob: -6.441919803619385

Token 48: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.344570517539978
    2. 's' → logprob: -2.0945706367492676
    3. '=' → logprob: -2.5945706367492676
    4. '_s' → logprob: -3.3445706367492676
    5. 'onth' → logprob: -5.219570636749268
    6. '   ' → logprob: -5.469570636749268
    7. 'oney' → logprob: -5.594570636749268
    8. ' +=' → logprob: -5.594570636749268
    9. ' savings' → logprob: -5.844570636749268
    10. '=s' → logprob: -5.969570636749268

Token 49: ' N' (ID: 478)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.075775384902954
    2. ' R' → logprob: -1.950775384902954
    3. 'D' → logprob: -2.075775384902954
    4. ' S' → logprob: -2.825775384902954
    5. ' N' → logprob: -3.075775384902954
    6. 'R' → logprob: -3.075775384902954
    7. ' P' → logprob: -3.200775384902954
    8. 'N' → logprob: -3.450775384902954
    9. ' B' → logprob: -3.950775384902954
    10. 'S' → logprob: -4.200775146484375

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2024114578962326
    2. '=' → logprob: -1.702411413192749
    3. ',' → logprob: -6.952411651611328
    4. ' ' → logprob: -11.702411651611328
    5. '=input' → logprob: -11.952411651611328
    6. '<|end|>' → logprob: -12.077411651611328
    7. ')' → logprob: -12.202411651611328
    8. ' ,' → logprob: -12.202411651611328
    9. '=int' → logprob: -12.702411651611328
    10. '<|end|>' → logprob: -13.827411651611328

Token 51: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012222827412188053
    2. ' input' → logprob: -5.012222766876221
    3. 'map' → logprob: -5.637222766876221
    4. ' [' → logprob: -7.137222766876221
    5. ' list' → logprob: -7.137222766876221
    6. ' ' → logprob: -8.887223243713379
    7. 'input' → logprob: -9.637223243713379
    8. '[' → logprob: -10.262223243713379
    9. ' L' → logprob: -10.262223243713379
    10. ' ' → logprob: -11.512223243713379

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.061978891491889954
    2. '(' → logprob: -2.936978816986084
    3. '(lambda' → logprob: -5.811978816986084
    4. '(input' → logprob: -5.936978816986084
    5. '(str' → logprob: -6.686978816986084
    6. '(list' → logprob: -9.686979293823242
    7. '<|end|>' → logprob: -9.686979293823242
    8. '(
' → logprob: -10.811979293823242
    9. '<int' → logprob: -11.561979293823242
    10. '(eval' → logprob: -11.686979293823242

Token 53: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08874782919883728
    2. ',input' → logprob: -3.21374773979187
    3. '(' → logprob: -3.46374773979187
    4. ')' → logprob: -5.088747978210449
    5. '(),' → logprob: -6.088747978210449
    6. ',' → logprob: -6.213747978210449
    7. 'input' → logprob: -6.338747978210449
    8. '()' → logprob: -7.588747978210449
    9. '(L' → logprob: -7.963747978210449
    10. '())' → logprob: -8.83874797821045

Token 54: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03373606130480766
    2. 'input' → logprob: -3.408735990524292
    3. ')' → logprob: -9.783736228942871
    4. ' L' → logprob: -11.158736228942871
    5. ' )' → logprob: -11.908736228942871
    6. '(input' → logprob: -12.283736228942871
    7. 'L' → logprob: -12.908736228942871
    8. ',input' → logprob: -13.158736228942871
    9. '[input' → logprob: -13.533736228942871
    10. '	input' → logprob: -14.158736228942871

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -14.250003814697266
    4. '())' → logprob: -16.375003814697266
    5. ')' → logprob: -17.125003814697266
    6. '()
' → logprob: -18.000003814697266
    7. '(' → logprob: -19.250003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '()[' → logprob: -20.625003814697266
    10. '('').' → logprob: -21.000003814697266

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013774730905424803
    2. 'strip' → logprob: -9.000137329101562
    3. 'rstrip' → logprob: -11.875137329101562
    4. ' split' → logprob: -12.125137329101562
    5. '(split' → logprob: -13.750137329101562
    6. ')' → logprob: -14.250137329101562
    7. 'spl' → logprob: -17.000137329101562
    8. 'plit' → logprob: -17.250137329101562
    9. ' ' → logprob: -17.375137329101562
    10. '.split' → logprob: -17.750137329101562

Token 57: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030023768544197083
    2. '()' → logprob: -3.6550238132476807
    3. '()))' → logprob: -6.280023574829102
    4. ')' → logprob: -6.405023574829102
    5. '(' → logprob: -9.405023574829102
    6. '('' → logprob: -10.280023574829102
    7. '())
' → logprob: -10.405023574829102
    8. '))' → logprob: -11.030023574829102
    9. ' ())' → logprob: -12.155023574829102
    10. '(','' → logprob: -12.655023574829102

Token 58: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25039464235305786
    2. '<|end|>' → logprob: -1.625394582748413
    3. '   ' → logprob: -5.375394821166992
    4. ':' → logprob: -5.375394821166992
    5. '<|end|>' → logprob: -5.375394821166992
    6. ' ' → logprob: -6.000394821166992
    7. '
' → logprob: -6.125394821166992
    8. ' )' → logprob: -7.000394821166992
    9. '#' → logprob: -7.250394821166992
    10. '       ' → logprob: -7.500394821166992

Token 59: ' savings' (ID: 22381)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47455111145973206
    2. 's' → logprob: -1.5995510816574097
    3. ' savings' → logprob: -2.099551200866699
    4. 'if' → logprob: -3.099551200866699
    5. ' ' → logprob: -6.599551200866699
    6. '    ' → logprob: -7.099551200866699
    7. '```' → logprob: -7.099551200866699
    8. '   ' → logprob: -7.349551200866699
    9. '        ' → logprob: -7.349551200866699
    10. ' 
' → logprob: -7.474551200866699

Token 60: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.015034496784210205
    2. '+=' → logprob: -4.2650346755981445
    3. ' =' → logprob: -7.5150346755981445
    4. '+' → logprob: -8.890034675598145
    5. '=' → logprob: -8.890034675598145
    6. ' +' → logprob: -10.515034675598145
    7. '+=(' → logprob: -11.640034675598145
    8. ' -=' → logprob: -12.015034675598145
    9. '    ' → logprob: -13.640034675598145
    10. '<|end|>' → logprob: -13.765034675598145

Token 61: ' (' (ID: 350)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.49481844902038574
    2. 'N' → logprob: -1.6198184490203857
    3. ' M' → logprob: -1.8698184490203857
    4. ' N' → logprob: -3.3698184490203857
    5. '(M' → logprob: -6.369818687438965
    6. ' (' → logprob: -6.869818687438965
    7. '(' → logprob: -8.244818687438965
    8. '(N' → logprob: -8.369818687438965
    9. ' ' → logprob: -8.994818687438965
    10. '100' → logprob: -9.119818687438965

Token 62: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3557072579860687
    2. 'N' → logprob: -1.2307072877883911
    3. ' M' → logprob: -5.230707168579102
    4. ' N' → logprob: -6.605707168579102
    5. '   ' → logprob: -9.230707168579102
    6. '12' → logprob: -9.480707168579102
    7. '100' → logprob: -9.543207168579102
    8. ' ' → logprob: -10.355707168579102
    9. 's' → logprob: -10.480707168579102
    10. '(M' → logprob: -10.480707168579102

Token 63: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.285908043384552
    2. '-' → logprob: -1.4109079837799072
    3. '+' → logprob: -5.910908222198486
    4. ' +' → logprob: -6.910908222198486
    5. '*' → logprob: -7.660908222198486
    6. '-N' → logprob: -8.285907745361328
    7. ' *' → logprob: -9.160907745361328
    8. ' ' → logprob: -9.660907745361328
    9. ')' → logprob: -9.785907745361328
    10. '-M' → logprob: -10.535907745361328

Token 64: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023589245975017548
    2. ' N' → logprob: -3.7735891342163086
    3. ' ' → logprob: -8.648589134216309
    4. ')' → logprob: -9.898589134216309
    5. 'M' → logprob: -10.898589134216309
    6. '100' → logprob: -11.273589134216309
    7. ' (' → logprob: -11.773589134216309
    8. '(' → logprob: -12.023589134216309
    9. '(N' → logprob: -12.023589134216309
    10. '   ' → logprob: -12.211089134216309

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004916008096188307
    2. ')
' → logprob: -5.879916191101074
    3. ' )' → logprob: -6.254916191101074
    4. '>' → logprob: -10.254916191101074
    5. ')*' → logprob: -10.254916191101074
    6. ' )
' → logprob: -10.379916191101074
    7. ')

' → logprob: -11.004916191101074
    8. '*' → logprob: -11.379916191101074
    9. ')>' → logprob: -11.379916191101074
    10. '   ' → logprob: -11.879916191101074

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19143328070640564
    2. '   ' → logprob: -2.6914331912994385
    3. ' if' → logprob: -2.9414331912994385
    4. 'if' → logprob: -3.0664331912994385
    5. '```' → logprob: -5.566433429718018
    6. '
' → logprob: -6.066433429718018
    7. '<|end|>' → logprob: -7.941433429718018
    8. ' ' → logprob: -8.44143295288086
    9. '        
' → logprob: -9.31643295288086
    10. ',' → logprob: -9.94143295288086

Token 67: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6306948065757751
    2. ' if' → logprob: -0.8806948065757751
    3. '       ' → logprob: -3.25569486618042
    4. '   ' → logprob: -4.25569486618042
    5. ' ' → logprob: -8.130694389343262
    6. '```' → logprob: -8.630694389343262
    7. '  ' → logprob: -11.255694389343262
    8. '    ' → logprob: -11.505694389343262
    9. '	if' → logprob: -11.880694389343262
    10. '           ' → logprob: -11.880694389343262

Token 68: ' not' (ID: 625)
  Prédit: ' savings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' savings' → logprob: -0.0023202260490506887
    2. 's' → logprob: -6.127320289611816
    3. ' ' → logprob: -9.752320289611816
    4. ' not' → logprob: -10.627320289611816
    5. ' saving' → logprob: -10.877320289611816
    6. 'Savings' → logprob: -12.502320289611816
    7. 'avings' → logprob: -12.752320289611816
    8. ' (' → logprob: -12.939820289611816
    9. ' reached' → logprob: -13.064820289611816
    10. '(s' → logprob: -13.189820289611816

Token 69: ' reached' (ID: 15237)
  Prédit: ' reached'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reached' → logprob: -0.11323093622922897
    2. 're' → logprob: -2.2382309436798096
    3. 's' → logprob: -7.9882307052612305
    4. 'Reached' → logprob: -10.98823070526123
    5. '(re' → logprob: -11.36323070526123
    6. ' ' → logprob: -11.61323070526123
    7. '   ' → logprob: -12.30073070526123
    8. ' savings' → logprob: -12.30073070526123
    9. ' re' → logprob: -12.98823070526123
    10. 'reach' → logprob: -13.30073070526123

Token 70: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08932077884674072
    2. 'and' → logprob: -2.464320659637451
    3. ' ' → logprob: -8.58932113647461
    4. ' or' → logprob: -9.71432113647461
    5. 're' → logprob: -10.21432113647461
    6. 's' → logprob: -10.21432113647461
    7. '   ' → logprob: -11.21432113647461
    8. ':' → logprob: -11.71432113647461
    9. '  ' → logprob: -12.21432113647461
    10. ' ' → logprob: -12.52682113647461

Token 71: ' savings' (ID: 22381)
  Prédit: ' savings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' savings' → logprob: -0.009873899631202221
    2. 's' → logprob: -4.634873867034912
    3. '   ' → logprob: -10.50987434387207
    4. ' ' → logprob: -10.75987434387207
    5. 'Savings' → logprob: -11.00987434387207
    6. ' saving' → logprob: -11.44737434387207
    7. 'avings' → logprob: -12.07237434387207
    8. '(s' → logprob: -12.63487434387207
    9. ' (' → logprob: -12.75987434387207
    10. ' s' → logprob: -12.88487434387207

Token 72: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03132922202348709
    2. ' >=' → logprob: -3.5313291549682617
    3. '>' → logprob: -6.656329154968262
    4. '/' → logprob: -9.656329154968262
    5. ']>=' → logprob: -9.656329154968262
    6. ')>=' → logprob: -10.531329154968262
    7. ' ' → logprob: -10.781329154968262
    8. ' >' → logprob: -10.781329154968262
    9. '<' → logprob: -11.031329154968262
    10. '%' → logprob: -11.156329154968262

Token 73: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.021711884066462517
    2. ' L' → logprob: -4.271711826324463
    3. '100' → logprob: -5.271711826324463
    4. ' ' → logprob: -7.271711826324463
    5. '   ' → logprob: -8.021712303161621
    6. '300' → logprob: -8.021712303161621
    7. '    ' → logprob: -8.271712303161621
    8. '  ' → logprob: -8.771712303161621
    9. '200' → logprob: -9.146712303161621
    10. '	L' → logprob: -9.146712303161621

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030134931206703186
    2. ':
' → logprob: -3.530134916305542
    3. '       ' → logprob: -8.655135154724121
    4. '   ' → logprob: -9.280135154724121
    5. ' :' → logprob: -9.655135154724121
    6. ' and' → logprob: -11.030135154724121
    7. '           ' → logprob: -11.405135154724121
    8. ',' → logprob: -12.405135154724121
    9. '.' → logprob: -12.655135154724121
    10. ' :
' → logprob: -12.655135154724121

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40767964720726013
    2. '       ' → logprob: -1.2826796770095825
    3. '   ' → logprob: -3.032679557800293
    4. ' print' → logprob: -4.907679557800293
    5. 'print' → logprob: -6.407679557800293
    6. '```' → logprob: -9.532679557800293
    7. '
' → logprob: -9.907679557800293
    8. ':' → logprob: -10.907679557800293
    9. ' ' → logprob: -11.032679557800293
    10. '<|end|>' → logprob: -11.282679557800293

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029678281396627426
    2. ' print' → logprob: -3.6546783447265625
    3. '           ' → logprob: -5.9046783447265625
    4. 'month' → logprob: -7.5296783447265625
    5. ' month' → logprob: -9.404678344726562
    6. '   ' → logprob: -11.279678344726562
    7. '       ' → logprob: -12.154678344726562
    8. '               ' → logprob: -12.779678344726562
    9. '```' → logprob: -13.904678344726562
    10. ' ' → logprob: -14.029678344726562

Token 77: '(month' (ID: 88975)
  Prédit: '(month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(month' → logprob: -0.21745970845222473
    2. '(' → logprob: -1.9674596786499023
    3. '(f' → logprob: -2.9674596786499023
    4. 'month' → logprob: -6.467459678649902
    5. '("' → logprob: -6.592459678649902
    6. '('' → logprob: -6.967459678649902
    7. ' month' → logprob: -9.342459678649902
    8. 'f' → logprob: -9.592459678649902
    9. '(m' → logprob: -9.967459678649902
    10. ' (' → logprob: -10.467459678649902

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11542294174432755
    2. ')
' → logprob: -2.2404229640960693
    3. ' )' → logprob: -6.36542272567749
    4. ',' → logprob: -7.74042272567749
    5. ' )
' → logprob: -7.99042272567749
    6. '+' → logprob: -10.490423202514648
    7. ')
' → logprob: -10.990423202514648
    8. '')' → logprob: -11.740423202514648
    9. ')

' → logprob: -11.990423202514648
    10. ',)' → logprob: -12.240423202514648

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016180409118533134
    2. 're' → logprob: -4.766180515289307
    3. '   ' → logprob: -5.641180515289307
    4. '       ' → logprob: -6.016180515289307
    5. ' reached' → logprob: -6.516180515289307
    6. 'Reached' → logprob: -10.891180038452148
    7. '
' → logprob: -11.141180038452148
    8. '```' → logprob: -11.141180038452148
    9. '            
' → logprob: -11.641180038452148
    10. '        
' → logprob: -12.516180038452148

Token 80: ' reached' (ID: 15237)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.046084340661764145
    2. '   ' → logprob: -4.046084403991699
    3. '           ' → logprob: -4.171084403991699
    4. ' reached' → logprob: -4.671084403991699
    5. '       ' → logprob: -5.921084403991699
    6. 'Reached' → logprob: -10.2960844039917
    7. '            
' → logprob: -11.6710844039917
    8. '```' → logprob: -11.7960844039917
    9. '
' → logprob: -12.2960844039917
    10. '  ' → logprob: -13.1710844039917

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048709094524383545
    2. ' =' → logprob: -3.0487091541290283
    3. '=True' → logprob: -9.04870891571045
    4. 'True' → logprob: -12.79870891571045
    5. '   ' → logprob: -14.17370891571045
    6. ' True' → logprob: -14.79870891571045
    7. 's' → logprob: -15.67370891571045
    8. '=False' → logprob: -17.173709869384766
    9. ' ' → logprob: -17.298709869384766
    10. '    ' → logprob: -17.423709869384766

Token 82: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -17.881715774536133
    4. '=True' → logprob: -18.006715774536133
    5. 'False' → logprob: -20.506715774536133
    6. ' ' → logprob: -20.881715774536133
    7. '   ' → logprob: -21.506715774536133
    8. 'Tr' → logprob: -21.631715774536133
    9. 'true' → logprob: -21.631715774536133
    10. 'T' → logprob: -21.881715774536133

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0336591862142086
    2. 'not' → logprob: -3.4086592197418213
    3. '   ' → logprob: -11.408658981323242
    4. ' no' → logprob: -14.408658981323242
    5. '(not' → logprob: -14.408658981323242
    6. ' ' → logprob: -14.908658981323242
    7. ' ' → logprob: -15.033658981323242
    8. '	not' → logprob: -15.283658981323242
    9. 'n' → logprob: -16.533658981323242
    10. '```' → logprob: -16.908658981323242

Token 87: ' reached' (ID: 15237)
  Prédit: ' reached'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reached' → logprob: -0.004080897197127342
    2. 're' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.754080772399902
    4. ' ' → logprob: -13.879080772399902
    5. '   ' → logprob: -15.629080772399902
    6. '  ' → logprob: -16.50408172607422
    7. 'reach' → logprob: -17.25408172607422
    8. 'Reached' → logprob: -17.25408172607422
    9. 's' → logprob: -17.37908172607422
    10. '	re' → logprob: -17.37908172607422

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061994802206754684
    2. ':
' → logprob: -2.811994791030884
    3. ' :' → logprob: -11.311994552612305
    4. ' :
' → logprob: -11.436994552612305
    5. '   ' → logprob: -13.061994552612305
    6. ':

' → logprob: -13.686994552612305
    7. ':
' → logprob: -14.436994552612305
    8. '():
' → logprob: -16.061994552612305
    9. 'print' → logprob: -16.436994552612305
    10. '==' → logprob: -16.686994552612305

Token 89: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4892526865005493
    2. '   ' → logprob: -0.9892526865005493
    3. ' print' → logprob: -4.23925256729126
    4. '    
' → logprob: -7.98925256729126
    5. '```' → logprob: -8.989253044128418
    6. '  ' → logprob: -10.489253044128418
    7. '``' → logprob: -10.614253044128418
    8. '-' → logprob: -10.739253044128418
    9. '       ' → logprob: -11.114253044128418
    10. '	print' → logprob: -11.114253044128418

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05527162551879883
    2. ' print' → logprob: -2.930271625518799
    3. '   ' → logprob: -7.930271625518799
    4. '```' → logprob: -10.93027114868164
    5. '    ' → logprob: -12.30527114868164
    6. '    
' → logprob: -13.68027114868164
    7. '	print' → logprob: -13.68027114868164
    8. '0' → logprob: -13.93027114868164
    9. ' ' → logprob: -14.18027114868164
    10. '`' → logprob: -14.18027114868164

Token 91: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7492640614509583
    2. '("' → logprob: -0.8742640614509583
    3. '('' → logprob: -2.2492640018463135
    4. '"' → logprob: -6.374264240264893
    5. '(-' → logprob: -6.374264240264893
    6. '()' → logprob: -6.999264240264893
    7. ''' → logprob: -9.374263763427734
    8. ' ("' → logprob: -10.499263763427734
    9. '(`' → logprob: -10.811763763427734
    10. ' (' → logprob: -10.999263763427734

Token 92: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.7753074169158936
    2. '-' → logprob: -1.5253074169158936
    3. 'N' → logprob: -2.7753074169158936
    4. 'S' → logprob: -3.0253074169158936
    5. 's' → logprob: -3.6503074169158936
    6. '"S' → logprob: -4.150307655334473
    7. ''S' → logprob: -4.150307655334473
    8. '"' → logprob: -4.275307655334473
    9. '"No' → logprob: -4.275307655334473
    10. 'failure' → logprob: -4.525307655334473

Token 93: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.1080467781284824e-05
    2. ')' → logprob: -10.500041007995605
    3. '")
' → logprob: -11.875041007995605
    4. ')")' → logprob: -12.000041007995605
    5. '')' → logprob: -15.250041007995605
    6. '")
' → logprob: -17.000041961669922
    7. '")

' → logprob: -17.500041961669922
    8. '"' → logprob: -17.625041961669922
    9. '}")' → logprob: -17.625041961669922
    10. ' ")' → logprob: -17.875041961669922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 41.76%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 81.32%
================================================================================
