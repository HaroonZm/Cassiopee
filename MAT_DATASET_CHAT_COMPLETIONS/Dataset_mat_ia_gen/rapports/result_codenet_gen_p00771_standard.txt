================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def can_place(n, anchors, ropes, h):
    points = [(0,0,h) for _ in range(n)]
    # For each rope, the balloon point must satisfy distance to anchor <= rope length
    for i in range(n):
        x,y,l = anchors[i][0], anchors[i][1], ropes[i]
        dx = x - 0
        dy = y - 0
        # Horizontal dist from origin to anchor
        dist_xy = math.sqrt(dx*dx + dy*dy)
        # At height h, distance from anchor must <= rope length
        # Distance from (x,y,0) to (0,0,h) = sqrt(x² + y² + h²)
        if math.sqrt((x)**2+(y)**2 + h*h) > l + 1e-12:
            return False
    # Now check for rope crossing
    # Each rope is modeled as segment from anchor (x,y,0) to balloon (0,0,h)
    # For no crossing: For any two ropes, the projection to xy plane must not cross
    # because the ropes are straight lines 3D from anchor to balloon above origin
    # We check if the lines cross at heights between 0 and h
    # Due to vertical straightness and common balloon point, no crossing if anchors lines do not cross
    # Projecting anchors to xy plane, and balloon to (0,0)
    # So in 2D, edges are from anchor points to origin.
    # No crossing means segments from anchors to origin do not intersect except at origin
    # This is equivalent to checking if any pair of anchors make segments from anchor to origin intersect
    # except at origin.
    anchor_points = [(a[0],a[1]) for a in anchors]
    for i in range(n):
        for j in range(i+1,n):
            # segments: anchor i to origin and anchor j to origin
            # If they only intersect at origin, that's fine.
            # Otherwise crossing means there is intersection between these two segments other than origin
            ai = anchor_points[i]
            aj = anchor_points[j]
            # If anchors are colinear with origin, check if segments overlap beyond origin:
            # Colinear check:
            cross = ai[0]*aj[1] - ai[1]*aj[0]
            if abs(cross) < 1e-14:
                # colinear
                # Check if anchors are on opposite sides of origin:
                dot = ai[0]*aj[0]+ai[1]*aj[1]
                if dot < 0:
                    # cross at origin only, okay
                    continue
                # Else check distance
                if (ai[0]*ai[0]+ai[1]*ai[1]) < (aj[0]*aj[0]+aj[1]*aj[1]):
                    # segments overlap => crossing
                    return False
                # Else no crossing
            else:
                # Check intersection of segments from anchor to origin except at origin
                # Parametric lines L1: origin + t*(-ai), t in [0,1]
                # L2: origin + s*(-aj), s in [0,1]
                # Find if exists t,s in (0,1) such that L1(t)=L2(s)
                denom = aj[0]*ai[1] - aj[1]*ai[0]
                if abs(denom) < 1e-14:
                    continue
                t = (aj[0]*0 - aj[0]*aj[1]) / denom if denom != 0 else 0
                # Alternative: Check intersection of two segments from two points to origin is handled by cross
                # Here simpler to check if segments intersect other than origin means segments cross
                # For origin and two anchors, if the segments cross, their anchors are in different angles and segments intersect at origin only
                # So no crossing here, continue
                pass
    return True

def main():
    input = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input):
            break
        n = int(input[idx])
        idx += 1
        if n == 0:
            break
        anchors = []
        ropes = []
        for _ in range(n):
            x,y,l = map(int, input[idx].split())
            idx += 1
            anchors.append((x,y))
            ropes.append(l)
        low = 0.0
        high = 300.0
        for _ in range(100):
            mid = (low+high)/2
            if can_place(n, anchors, ropes, mid):
                low = mid
            else:
                high = mid
        print("%.7f"%low)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1105618476867676
    2. '\' → logprob: -1.6105618476867676
    3. 'import' → logprob: -1.8605618476867676
    4. '.' → logprob: -1.8605618476867676
    5. '```' → logprob: -2.6105618476867676
    6. 'def' → logprob: -3.3605618476867676
    7. '
' → logprob: -4.110561847686768
    8. ',' → logprob: -4.610561847686768
    9. '<|end|>' → logprob: -5.360561847686768
    10. '#' → logprob: -5.360561847686768

Token 7: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022814787924289703
    2. ' calculate' → logprob: -4.272814750671387
    3. ' factorial' → logprob: -5.897814750671387
    4. ' space' → logprob: -6.147814750671387
    5. '_' → logprob: -7.022814750671387
    6. ' math' → logprob: -7.647814750671387
    7. ' e' → logprob: -7.897814750671387
    8. ' compute' → logprob: -7.897814750671387
    9. ' my' → logprob: -8.897814750671387
    10. ' calc' → logprob: -9.022814750671387

Token 8: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02091951109468937
    2. ' _' → logprob: -5.020919322967529
    3. ' ' → logprob: -5.395919322967529
    4. '_accept' → logprob: -6.020919322967529
    5. '_space' → logprob: -7.145919322967529
    6. '_c' → logprob: -7.270919322967529
    7. '_access' → logprob: -7.520919322967529
    8. '_execute' → logprob: -7.645919322967529
    9. '_save' → logprob: -7.770919322967529
    10. '_apply' → logprob: -7.895919322967529

Token 9: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05852879211306572
    2. '_space' → logprob: -3.8085289001464844
    3. '(' → logprob: -4.183528900146484
    4. ' _' → logprob: -5.308528900146484
    5. ' ' → logprob: -6.058528900146484
    6. '_tile' → logprob: -6.433528900146484
    7. '_parent' → logprob: -6.933528900146484
    8. '_spaces' → logprob: -6.933528900146484
    9. '_token' → logprob: -7.058528900146484
    10. '_p' → logprob: -7.433528900146484

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008048877120018005
    2. ' ,' → logprob: -5.133049011230469
    3. '):' → logprob: -6.633049011230469
    4. ')' → logprob: -8.008049011230469
    5. '_,' → logprob: -8.008049011230469
    6. '_' → logprob: -9.883049011230469
    7. ' ' → logprob: -11.133049011230469
    8. ' ):' → logprob: -11.383049011230469
    9. '_positions' → logprob: -12.133049011230469
    10. ',_' → logprob: -12.133049011230469

Token 11: ' anchors' (ID: 114642)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6355284452438354
    2. ' m' → logprob: -1.1355284452438354
    3. 'k' → logprob: -2.510528564453125
    4. 'm' → logprob: -3.510528564453125
    5. ' mid' → logprob: -4.385528564453125
    6. ' positions' → logprob: -5.385528564453125
    7. ' r' → logprob: -6.010528564453125
    8. ' arr' → logprob: -6.010528564453125
    9. ' distance' → logprob: -6.385528564453125
    10. ' board' → logprob: -6.510528564453125

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026775453239679337
    2. '):' → logprob: -3.651775360107422
    3. ')' → logprob: -8.651775360107422
    4. ' ,' → logprob: -9.026775360107422
    5. '_,' → logprob: -9.151775360107422
    6. '):
' → logprob: -11.026775360107422
    7. ' ):' → logprob: -11.276775360107422
    8. ':' → logprob: -11.901775360107422
    9. '_positions' → logprob: -11.901775360107422
    10. '):

' → logprob: -12.151775360107422

Token 13: ' ropes' (ID: 110596)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3457067012786865
    2. ' radius' → logprob: -2.2207067012786865
    3. ' distance' → logprob: -2.3457067012786865
    4. ' k' → logprob: -2.5957067012786865
    5. ' mid' → logprob: -2.5957067012786865
    6. ' r' → logprob: -2.5957067012786865
    7. ' length' → logprob: -2.7207067012786865
    8. ' dist' → logprob: -3.3457067012786865
    9. ' x' → logprob: -3.4707067012786865
    10. ' pos' → logprob: -3.5957067012786865

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18382222950458527
    2. ',' → logprob: -1.8088222742080688
    3. ')' → logprob: -5.558822154998779
    4. ' ):' → logprob: -9.058822631835938
    5. ' ,' → logprob: -10.308822631835938
    6. '):
' → logprob: -11.058822631835938
    7. '_' → logprob: -11.558822631835938
    8. ' ' → logprob: -12.558822631835938
    9. '),' → logprob: -12.683822631835938
    10. '_,' → logprob: -12.683822631835938

Token 15: ' h' (ID: 312)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6686989068984985
    2. ' k' → logprob: -2.668698787689209
    3. ' d' → logprob: -2.793698787689209
    4. 'length' → logprob: -3.168698787689209
    5. ' mid' → logprob: -3.418698787689209
    6. ' position' → logprob: -3.793698787689209
    7. ' i' → logprob: -3.793698787689209
    8. ' lengths' → logprob: -3.918698787689209
    9. ' positions' → logprob: -4.043698787689209
    10. ' index' → logprob: -4.168698787689209

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005649678874760866
    2. 'ight' → logprob: -5.505649566650391
    3. ')' → logprob: -7.130649566650391
    4. 'e' → logprob: -8.13064956665039
    5. ',' → logprob: -9.13064956665039
    6. 'eight' → logprob: -9.38064956665039
    7. 'igh' → logprob: -9.63064956665039
    8. 'ght' → logprob: -10.25564956665039
    9. '=' → logprob: -10.25564956665039
    10. '):
' → logprob: -10.38064956665039

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06153252720832825
    2. '):' → logprob: -2.936532497406006
    3. ' :' → logprob: -5.436532497406006
    4. '   ' → logprob: -6.686532497406006
    5. '':' → logprob: -8.186532974243164
    6. ',' → logprob: -8.186532974243164
    7. ',:' → logprob: -9.186532974243164
    8. ':
' → logprob: -9.686532974243164
    9. '):
' → logprob: -9.686532974243164
    10. '":' → logprob: -9.811532974243164

Token 18: ' points' (ID: 5571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34129494428634644
    2. ' :' → logprob: -2.091295003890991
    3. ' for' → logprob: -2.591295003890991
    4. '   ' → logprob: -2.841295003890991
    5. ' ' → logprob: -4.716294765472412
    6. ' :
' → logprob: -4.841294765472412
    7. 'for' → logprob: -5.216294765472412
    8. '    ' → logprob: -5.591294765472412
    9. ':
' → logprob: -5.716294765472412
    10. ' 
' → logprob: -7.466294765472412

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034108434338122606
    2. '=' → logprob: -5.753410816192627
    3. ')' → logprob: -9.128411293029785
    4. '=[]' → logprob: -9.878411293029785
    5. ',' → logprob: -10.878411293029785
    6. ' ' → logprob: -11.628411293029785
    7. '<|end|>' → logprob: -11.753411293029785
    8. '[]' → logprob: -11.878411293029785
    9. '   ' → logprob: -12.128411293029785
    10. '_' → logprob: -12.628411293029785

Token 20: ' [(' (ID: 43900)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2561666965484619
    2. '[]' → logprob: -1.506166696548462
    3. ' [' → logprob: -5.756166458129883
    4. '[' → logprob: -7.506166458129883
    5. ' [(' → logprob: -7.881166458129883
    6. '[(' → logprob: -10.006166458129883
    7. ' ' → logprob: -10.256166458129883
    8. ' set' → logprob: -10.381166458129883
    9. '[]}' → logprob: -12.131166458129883
    10. '[:]' → logprob: -12.256166458129883

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0709952116012573
    2. 'anchors' → logprob: -1.0709952116012573
    3. 'x' → logprob: -1.4459952116012573
    4. 'anchor' → logprob: -3.695995330810547
    5. 'a' → logprob: -4.070995330810547
    6. 'i' → logprob: -4.445995330810547
    7. '(' → logprob: -5.570995330810547
    8. ' anchors' → logprob: -5.570995330810547
    9. '(x' → logprob: -6.070995330810547
    10. 'xi' → logprob: -6.070995330810547

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010700009443098679
    2. ' ,' → logprob: -9.500106811523438
    3. ')]' → logprob: -11.875106811523438
    4. '0' → logprob: -11.875106811523438
    5. ',)' → logprob: -12.500106811523438
    6. ',
' → logprob: -12.625106811523438
    7. ')' → logprob: -12.750106811523438
    8. '+' → logprob: -14.000106811523438
    9. '```' → logprob: -14.062606811523438
    10. ',h' → logprob: -14.062606811523438

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15662795305252075
    2. 'h' → logprob: -2.656627893447876
    3. ' ' → logprob: -3.031627893447876
    4. ' h' → logprob: -4.406628131866455
    5. 'anchors' → logprob: -4.656628131866455
    6. ' anchors' → logprob: -6.156628131866455
    7. 'n' → logprob: -7.406628131866455
    8. '1' → logprob: -7.406628131866455
    9. ' n' → logprob: -7.656628131866455
    10. 'math' → logprob: -8.844127655029297

Token 24: ',h' (ID: 42751)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1928580105304718
    2. ')' → logprob: -2.0678579807281494
    3. '),' → logprob: -3.0678579807281494
    4. '),(' → logprob: -6.8178582191467285
    5. '),
' → logprob: -6.9428582191467285
    6. ' )' → logprob: -8.94285774230957
    7. ',' → logprob: -9.94285774230957
    8. ')
' → logprob: -10.19285774230957
    9. ')])' → logprob: -10.56785774230957
    10. '<|end|>' → logprob: -10.69285774230957

Token 25: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.20218630135059357
    2. ')' → logprob: -2.077186346054077
    3. '),' → logprob: -2.952186346054077
    4. '),(' → logprob: -5.952186107635498
    5. '),
' → logprob: -6.577186107635498
    6. ' )' → logprob: -7.077186107635498
    7. ')
' → logprob: -8.952186584472656
    8. '))' → logprob: -9.202186584472656
    9. ')]
' → logprob: -9.327186584472656
    10. '+' → logprob: -9.327186584472656

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6916478872299194
    2. '),' → logprob: -1.1916478872299194
    3. ')]' → logprob: -1.6916478872299194
    4. ',' → logprob: -4.941648006439209
    5. '),(' → logprob: -6.441648006439209
    6. '),
' → logprob: -7.066648006439209
    7. ' )' → logprob: -7.066648006439209
    8. ']' → logprob: -8.94164752960205
    9. ' ),' → logprob: -8.94164752960205
    10. ',
' → logprob: -9.06664752960205

Token 27: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004436055198311806
    2. '_' → logprob: -5.504436016082764
    3. ' ' → logprob: -8.629436492919922
    4. ' i' → logprob: -9.004436492919922
    5. ' ' → logprob: -11.004436492919922
    6. '_anchor' → logprob: -11.254436492919922
    7. '_i' → logprob: -11.754436492919922
    8. ' in' → logprob: -12.879436492919922
    9. ' anchor' → logprob: -13.129436492919922
    10. 'i' → logprob: -13.254436492919922

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006218147464096546
    2. 'in' → logprob: -5.131217956542969
    3. ' _' → logprob: -8.881217956542969
    4. 'i' → logprob: -10.131217956542969
    5. ' ' → logprob: -10.131217956542969
    6. 'n' → logprob: -10.631217956542969
    7. 'range' → logprob: -11.006217956542969
    8. ' i' → logprob: -12.006217956542969
    9. 'x' → logprob: -12.381217956542969
    10. '_' → logprob: -12.756217956542969

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015667593106627464
    2. ' range' → logprob: -4.26566743850708
    3. 'anchors' → logprob: -6.64066743850708
    4. 'rop' → logprob: -9.515667915344238
    5. 'rope' → logprob: -10.015667915344238
    6. 'ranges' → logprob: -11.265667915344238
    7. 'points' → logprob: -11.828167915344238
    8. 'anch' → logprob: -11.890667915344238
    9. 'rang' → logprob: -12.203167915344238
    10. ' anchors' → logprob: -12.203167915344238

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004094547126442194
    2. '(' → logprob: -5.62909460067749
    3. ' (' → logprob: -8.629094123840332
    4. ' n' → logprob: -8.754094123840332
    5. 'n' → logprob: -8.879094123840332
    6. '(len' → logprob: -11.129094123840332
    7. ')n' → logprob: -13.504094123840332
    8. ' ' → logprob: -14.254094123840332
    9. ')' → logprob: -14.254094123840332
    10. '	n' → logprob: -15.629094123840332

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013047587708570063
    2. ')' → logprob: -9.125130653381348
    3. ']' → logprob: -11.375130653381348
    4. ')]
' → logprob: -13.000130653381348
    5. ')])' → logprob: -13.125130653381348
    6. ' )' → logprob: -13.625130653381348
    7. ')],' → logprob: -14.000130653381348
    8. '')]' → logprob: -14.125130653381348
    9. '])]' → logprob: -14.375130653381348
    10. '))' → logprob: -14.875130653381348

Token 32: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7294784784317017
    2. ')' → logprob: -1.7294784784317017
    3. '   ' → logprob: -1.8544784784317017
    4. ':' → logprob: -2.479478359222412
    5. '<|end|>' → logprob: -4.104478359222412
    6. ' 
' → logprob: -4.479478359222412
    7. ' ' → logprob: -4.479478359222412
    8. '    
' → logprob: -4.604478359222412
    9. '\n' → logprob: -4.729478359222412
    10. '  
' → logprob: -4.979478359222412

Token 33: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.661858320236206
    2. '<|end|>' → logprob: -1.661858320236206
    3. ' 
' → logprob: -2.161858320236206
    4. ' ' → logprob: -3.036858320236206
    5. ':' → logprob: -3.661858320236206
    6. '   ' → logprob: -3.786858320236206
    7. '\n' → logprob: -4.161858558654785
    8. '  
' → logprob: -4.161858558654785
    9. ' for' → logprob: -4.911858558654785
    10. '    
' → logprob: -5.161858558654785

Token 34: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6010046601295471
    2. ' ' → logprob: -1.6010046005249023
    3. 'for' → logprob: -1.8510046005249023
    4. '<|end|>' → logprob: -2.9760046005249023
    5. '    ' → logprob: -4.726004600524902
    6. ')' → logprob: -5.351004600524902
    7. '   ' → logprob: -5.726004600524902
    8. ' #' → logprob: -5.851004600524902
    9. '#' → logprob: -5.976004600524902
    10. '<|end|>' → logprob: -6.351004600524902

Token 35: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013010689057409763
    2. 'i' → logprob: -4.388010501861572
    3. ' _' → logprob: -8.01301097869873
    4. '_' → logprob: -9.63801097869873
    5. ' rope' → logprob: -10.76301097869873
    6. ' ' → logprob: -10.88801097869873
    7. ' p' → logprob: -11.63801097869873
    8. '_i' → logprob: -11.63801097869873
    9. ' idx' → logprob: -11.63801097869873
    10. ' j' → logprob: -12.01301097869873

Token 36: ' rope' (ID: 56427)
  Prédit: ' rope'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rope' → logprob: -0.5946149230003357
    2. ' i' → logprob: -1.0946149826049805
    3. 'i' → logprob: -2.4696149826049805
    4. 'rope' → logprob: -4.5946149826049805
    5. ' point' → logprob: -4.8446149826049805
    6. ' anchor' → logprob: -5.4696149826049805
    7. '_' → logprob: -5.4696149826049805
    8. 'anchor' → logprob: -7.3446149826049805
    9. ' index' → logprob: -8.09461498260498
    10. ')' → logprob: -8.09461498260498

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1032441034913063
    2. ':' → logprob: -3.1032440662384033
    3. '<|end|>' → logprob: -3.2282440662384033
    4. '   ' → logprob: -5.353244304656982
    5. ' ,' → logprob: -5.603244304656982
    6. '<|end|>' → logprob: -6.228244304656982
    7. ')' → logprob: -7.228244304656982
    8. ''s' → logprob: -7.853244304656982
    9. ' ' → logprob: -7.853244304656982
    10. '):' → logprob: -8.353243827819824

Token 38: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32604560256004333
    2. '<|end|>' → logprob: -2.076045513153076
    3. ' ' → logprob: -2.951045513153076
    4. '    ' → logprob: -3.451045513153076
    5. '<|end|>' → logprob: -4.326045513153076
    6. 'for' → logprob: -4.326045513153076
    7. ' if' → logprob: -4.451045513153076
    8. ' to' → logprob: -5.451045513153076
    9. '...' → logprob: -5.951045513153076
    10. ' you' → logprob: -6.326045513153076

Token 39: ' balloon' (ID: 63124)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8587969541549683
    2. ' for' → logprob: -1.1087969541549683
    3. 'for' → logprob: -2.983797073364258
    4. ' y' → logprob: -3.733797073364258
    5. 'x' → logprob: -3.858797073364258
    6. ' if' → logprob: -3.983797073364258
    7. 'y' → logprob: -4.108797073364258
    8. ' x' → logprob: -4.358797073364258
    9. 'length' → logprob: -4.358797073364258
    10. ' is' → logprob: -4.483797073364258

Token 40: ' point' (ID: 2438)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30694565176963806
    2. ' must' → logprob: -2.181945562362671
    3. ' can' → logprob: -3.681945562362671
    4. ' is' → logprob: -3.806945562362671
    5. ''s' → logprob: -3.931945562362671
    6. ' cannot' → logprob: -4.68194580078125
    7. ' should' → logprob: -4.80694580078125
    8. 'must' → logprob: -4.80694580078125
    9. '<|end|>' → logprob: -4.93194580078125
    10. ' has' → logprob: -5.68194580078125

Token 41: ' must' (ID: 2804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16421599686145782
    2. ' =' → logprob: -2.1642160415649414
    3. '=' → logprob: -4.289216041564941
    4. ' is' → logprob: -5.164216041564941
    5. ')' → logprob: -6.289216041564941
    6. ' s' → logprob: -6.414216041564941
    7. ' will' → logprob: -6.539216041564941
    8. ',' → logprob: -6.664216041564941
    9. ' can' → logprob: -6.664216041564941
    10. ' must' → logprob: -6.664216041564941

Token 42: ' satisfy' (ID: 35441)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.24877476692199707
    2. ' lie' → logprob: -1.998774766921997
    3. ' not' → logprob: -2.998774766921997
    4. 'n't' → logprob: -4.123774528503418
    5. 'be' → logprob: -5.498774528503418
    6. 'not' → logprob: -5.623774528503418
    7. ' satisfy' → logprob: -5.748774528503418
    8. 's' → logprob: -6.123774528503418
    9. ' stay' → logprob: -6.123774528503418
    10. ' have' → logprob: -7.248774528503418

Token 43: ' distance' (ID: 9324)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6604642271995544
    2. '<|end|>' → logprob: -1.1604642868041992
    3. 's' → logprob: -2.785464286804199
    4. ' constraints' → logprob: -3.160464286804199
    5. '<|end|>' → logprob: -4.035464286804199
    6. 'the' → logprob: -4.285464286804199
    7. ' its' → logprob: -5.160464286804199
    8. 'constraints' → logprob: -5.535464286804199
    9. ' s' → logprob: -5.785464286804199
    10. ' that' → logprob: -5.785464286804199

Token 44: ' to' (ID: 316)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4350780248641968
    2. '<|end|>' → logprob: -2.0600781440734863
    3. '<=' → logprob: -2.4350781440734863
    4. '(' → logprob: -3.0600781440734863
    5. ' constraints' → logprob: -3.8100781440734863
    6. ' ' → logprob: -4.435078144073486
    7. '_constraint' → logprob: -4.935078144073486
    8. '_' → logprob: -5.185078144073486
    9. ' between' → logprob: -5.185078144073486
    10. 's' → logprob: -5.185078144073486

Token 45: ' anchor' (ID: 31067)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.5641055107116699
    2. ' anchors' → logprob: -1.18910551071167
    3. ' the' → logprob: -3.43910551071167
    4. 'the' → logprob: -3.56410551071167
    5. ' both' → logprob: -4.18910551071167
    6. '<|end|>' → logprob: -4.43910551071167
    7. 'anchor' → logprob: -4.56410551071167
    8. 'both' → logprob: -4.56410551071167
    9. 'points' → logprob: -5.18910551071167
    10. 'previous' → logprob: -5.68910551071167

Token 46: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8203470706939697
    2. 's' → logprob: -1.3203470706939697
    3. '<|end|>' → logprob: -1.6953470706939697
    4. ')' → logprob: -2.6953470706939697
    5. ' ' → logprob: -4.945346832275391
    6. '<=' → logprob: -5.070346832275391
    7. ' s' → logprob: -5.570346832275391
    8. ''s' → logprob: -5.820346832275391
    9. '[' → logprob: -5.945346832275391
    10. ' and' → logprob: -6.070346832275391

Token 47: ' rope' (ID: 56427)
  Prédit: ' ropes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ropes' → logprob: -0.7084288001060486
    2. ' rope' → logprob: -1.0834288597106934
    3. 'rope' → logprob: -2.2084288597106934
    4. 'rop' → logprob: -2.9584288597106934
    5. ' length' → logprob: -6.458428859710693
    6. ' ' → logprob: -6.583428859710693
    7. ' h' → logprob: -6.833428859710693
    8. ' the' → logprob: -7.583428859710693
    9. 'rops' → logprob: -7.958428859710693
    10. ' anchors' → logprob: -8.020928382873535

Token 48: ' length' (ID: 5517)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.514594316482544
    2. '[' → logprob: -1.514594316482544
    3. '_' → logprob: -3.014594316482544
    4. 's' → logprob: -3.264594316482544
    5. ')' → logprob: -3.389594316482544
    6. ' and' → logprob: -4.014594078063965
    7. ']' → logprob: -4.889594078063965
    8. '_points' → logprob: -5.514594078063965
    9. ''s' → logprob: -5.764594078063965
    10. ':' → logprob: -5.889594078063965

Token 49: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20713160932064056
    2. '
' → logprob: -3.0821316242218018
    3. '<|end|>' → logprob: -3.3321316242218018
    4. ')' → logprob: -3.4571316242218018
    5. ' ' → logprob: -4.207131385803223
    6. '   ' → logprob: -4.332131385803223
    7. '\n' → logprob: -4.832131385803223
    8. '.' → logprob: -5.082131385803223
    9. '\' → logprob: -5.207131385803223
    10. ' and' → logprob: -5.582131385803223

Token 50: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04940645396709442
    2. '   ' → logprob: -3.9244065284729004
    3. ':
' → logprob: -5.2994065284729
    4. '.' → logprob: -5.5494065284729
    5. '\n' → logprob: -5.6744065284729
    6. ')' → logprob: -5.7994065284729
    7. '<|end|>' → logprob: -5.9244065284729
    8. '
' → logprob: -6.1744065284729
    9. '\' → logprob: -6.2994065284729
    10. ' ' → logprob: -6.6744065284729

Token 51: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03443898633122444
    2. ':
' → logprob: -4.6594390869140625
    3. '.' → logprob: -4.7844390869140625
    4. ' ' → logprob: -5.6594390869140625
    5. '\n' → logprob: -5.6594390869140625
    6. '<|end|>' → logprob: -5.9094390869140625
    7. ')' → logprob: -6.7844390869140625
    8. '
' → logprob: -7.0344390869140625
    9. '   ' → logprob: -7.1594390869140625
    10. ',' → logprob: -7.2844390869140625

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03655032441020012
    2. ' ' → logprob: -4.411550521850586
    3. ' anchor' → logprob: -4.911550521850586
    4. ' rope' → logprob: -5.411550521850586
    5. ' (' → logprob: -5.536550521850586
    6. ' _' → logprob: -6.036550521850586
    7. ' a' → logprob: -6.536550521850586
    8. 'i' → logprob: -6.786550521850586
    9. ' idx' → logprob: -7.036550521850586
    10. ' j' → logprob: -7.411550521850586

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07814092934131622
    2. ',' → logprob: -2.8281409740448
    3. 'in' → logprob: -4.578140735626221
    4. ' ,' → logprob: -5.453140735626221
    5. ' ' → logprob: -6.578140735626221
    6. '  ' → logprob: -10.328141212463379
    7. ',in' → logprob: -10.953141212463379
    8. '0' → logprob: -12.453141212463379
    9. 's' → logprob: -12.578141212463379
    10. '<|end|>' → logprob: -12.703141212463379

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009163398644886911
    2. 'range' → logprob: -7.000916481018066
    3. ' ' → logprob: -12.500916481018066
    4. '	range' → logprob: -15.125916481018066
    5. '(range' → logprob: -15.375916481018066
    6. ' xrange' → logprob: -15.500916481018066
    7. '  ' → logprob: -15.625916481018066
    8. '   ' → logprob: -15.875916481018066
    9. '```' → logprob: -16.50091552734375
    10. '

' → logprob: -17.62591552734375

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03214718773961067
    2. '(' → logprob: -3.532147169113159
    3. '(len' → logprob: -6.532147407531738
    4. ' (' → logprob: -7.032147407531738
    5. ' ' → logprob: -10.532147407531738
    6. ' n' → logprob: -11.032147407531738
    7. 'n' → logprob: -12.032147407531738
    8. '(s' → logprob: -13.532147407531738
    9. '(length' → logprob: -13.532147407531738
    10. ')' → logprob: -14.032147407531738

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002629281021654606
    2. '):
' → logprob: -6.877629280090332
    3. '-' → logprob: -7.127629280090332
    4. ' ):' → logprob: -7.752629280090332
    5. ')' → logprob: -8.127629280090332
    6. ' -' → logprob: -10.377629280090332
    7. ':' → logprob: -10.877629280090332
    8. '   ' → logprob: -12.127629280090332
    9. ' ' → logprob: -12.877629280090332
    10. '+' → logprob: -13.002629280090332

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3693825900554657
    2. '<|end|>' → logprob: -1.369382619857788
    3. '   ' → logprob: -3.494382619857788
    4. '    ' → logprob: -4.619382381439209
    5. ' for' → logprob: -5.244382381439209
    6. '<|end|>' → logprob: -5.744382381439209
    7. ':' → logprob: -6.494382381439209
    8. '        
' → logprob: -6.869382381439209
    9. ' ' → logprob: -6.994382381439209
    10. ',' → logprob: -7.244382381439209

Token 58: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16384357213974
    2. ' if' → logprob: -2.1638436317443848
    3. 'for' → logprob: -4.413843631744385
    4. ' x' → logprob: -4.538843631744385
    5. '       ' → logprob: -5.038843631744385
    6. '    ' → logprob: -6.288843631744385
    7. '<|end|>' → logprob: -6.663843631744385
    8. 'if' → logprob: -6.913843631744385
    9. '   ' → logprob: -7.038843631744385
    10. ' ' → logprob: -7.413843631744385

Token 59: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02567167580127716
    2. ',y' → logprob: -3.7756717205047607
    3. ' in' → logprob: -7.025671482086182
    4. ' ,' → logprob: -8.27567195892334
    5. ')' → logprob: -8.52567195892334
    6. '_,' → logprob: -8.65067195892334
    7. ',j' → logprob: -8.77567195892334
    8. ',x' → logprob: -8.90067195892334
    9. '=' → logprob: -9.15067195892334
    10. 'y' → logprob: -9.27567195892334

Token 60: ',l' (ID: 45198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39863449335098267
    2. ',' → logprob: -1.523634433746338
    3. '=' → logprob: -2.273634433746338
    4. ')' → logprob: -5.273634433746338
    5. ',x' → logprob: -7.648634433746338
    6. ',i' → logprob: -7.773634433746338
    7. ' ,' → logprob: -7.898634433746338
    8. ',y' → logprob: -8.398634910583496
    9. '),' → logprob: -8.523634910583496
    10. ' in' → logprob: -8.648634910583496

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.324298232793808
    2. ' =' → logprob: -1.3242982625961304
    3. 'ength' → logprob: -4.57429838180542
    4. 'en' → logprob: -8.574297904968262
    5. ',' → logprob: -8.949297904968262
    6. 'engt' → logprob: -9.199297904968262
    7. 'eng' → logprob: -10.199297904968262
    8. 'o' → logprob: -10.574297904968262
    9. '=i' → logprob: -10.699297904968262
    10. 'ENGTH' → logprob: -10.699297904968262

Token 62: ' anchors' (ID: 114642)
  Prédit: ' anchors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' anchors' → logprob: -0.47440198063850403
    2. 'anchors' → logprob: -0.9744019508361816
    3. ' ropes' → logprob: -9.22440242767334
    4. 'anchor' → logprob: -9.34940242767334
    5. 'anch' → logprob: -10.22440242767334
    6. '*' → logprob: -10.97440242767334
    7. ' anchor' → logprob: -10.97440242767334
    8. ' ' → logprob: -11.09940242767334
    9. '   ' → logprob: -11.09940242767334
    10. 'rop' → logprob: -11.34940242767334

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.621933451038785e-05
    2. '[' → logprob: -10.125056266784668
    3. ' [' → logprob: -12.500056266784668
    4. 'i' → logprob: -12.750056266784668
    5. ',i' → logprob: -12.875056266784668
    6. '```' → logprob: -13.875056266784668
    7. ',' → logprob: -14.000056266784668
    8. '[n' → logprob: -14.125056266784668
    9. '
' → logprob: -14.250056266784668
    10. '   ' → logprob: -14.500056266784668

Token 64: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45399585366249084
    2. '[' → logprob: -1.0789958238601685
    3. ')' → logprob: -3.953995943069458
    4. '[i' → logprob: -6.328995704650879
    5. ',' → logprob: -6.578995704650879
    6. '])' → logprob: -6.953995704650879
    7. '][' → logprob: -7.328995704650879
    8. '],' → logprob: -7.703995704650879
    9. ' ]' → logprob: -8.828995704650879
    10. '[]' → logprob: -8.953995704650879

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006252297898754478
    2. ' ' → logprob: -8.000625610351562
    3. ']' → logprob: -8.375625610351562
    4. ':' → logprob: -10.750625610351562
    5. '],' → logprob: -11.750625610351562
    6. '
' → logprob: -12.000625610351562
    7. ':]' → logprob: -12.125625610351562
    8. '2' → logprob: -12.375625610351562
    9. ' :' → logprob: -12.625625610351562
    10. '   ' → logprob: -13.000625610351562

Token 66: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.008407127112150192
    2. ']' → logprob: -4.883407115936279
    3. ',' → logprob: -7.633407115936279
    4. ' ],' → logprob: -8.258407592773438
    5. ' ' → logprob: -11.883407592773438
    6. '),' → logprob: -12.133407592773438
    7. '],'' → logprob: -12.258407592773438
    8. '],
' → logprob: -12.383407592773438
    9. '],[' → logprob: -12.633407592773438
    10. '<|end|>' → logprob: -12.883407592773438

Token 67: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.08901918679475784
    2. ' anchors' → logprob: -2.464019298553467
    3. 'anch' → logprob: -10.339018821716309
    4. 'anchor' → logprob: -10.839018821716309
    5. '<|end|>' → logprob: -12.214018821716309
    6. 'y' → logprob: -12.339018821716309
    7. '   ' → logprob: -12.339018821716309
    8. 'anc' → logprob: -12.714018821716309
    9. ' ' → logprob: -12.839018821716309
    10. '0' → logprob: -13.839018821716309

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03449910506606102
    2. '][' → logprob: -3.659499168395996
    3. 'i' → logprob: -5.409499168395996
    4. '[' → logprob: -5.909499168395996
    5. ',i' → logprob: -7.284499168395996
    6. '1' → logprob: -9.284499168395996
    7. '(i' → logprob: -9.409499168395996
    8. ' i' → logprob: -10.409499168395996
    9. '<|end|>' → logprob: -10.909499168395996
    10. ' ][' → logprob: -11.784499168395996

Token 69: '][' (ID: 2696)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.16675284504890442
    2. '][' → logprob: -2.166752815246582
    3. ']' → logprob: -3.291752815246582
    4. '],[' → logprob: -6.791752815246582
    5. '[' → logprob: -7.916752815246582
    6. ',' → logprob: -9.041752815246582
    7. ']][' → logprob: -10.416752815246582
    8. ' ],' → logprob: -10.541752815246582
    9. '[i' → logprob: -10.541752815246582
    10. '   ' → logprob: -10.666752815246582

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.500005722045898
    3. '],' → logprob: -15.000005722045898
    4. ']' → logprob: -15.125005722045898
    5. '0' → logprob: -15.250005722045898
    6. '   ' → logprob: -15.375005722045898
    7. '```' → logprob: -16.3750057220459
    8. '-' → logprob: -16.6250057220459
    9. ',' → logprob: -16.8125057220459
    10. '2' → logprob: -16.9375057220459

Token 71: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0178778171539307
    2. '),' → logprob: -1.0178778171539307
    3. '],' → logprob: -1.3928778171539307
    4. ')' → logprob: -4.017877578735352
    5. ']' → logprob: -5.267877578735352
    6. '<|end|>' → logprob: -6.517877578735352
    7. ' ,' → logprob: -6.892877578735352
    8. '   ' → logprob: -7.517877578735352
    9. '       ' → logprob: -7.517877578735352
    10. ' ),' → logprob: -8.267877578735352

Token 72: ' ropes' (ID: 110596)
  Prédit: 'rop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rop' → logprob: -0.20283520221710205
    2. ' ropes' → logprob: -1.702835202217102
    3. 'rops' → logprob: -7.2028350830078125
    4. '   ' → logprob: -7.9528350830078125
    5. 'rope' → logprob: -9.702835083007812
    6. 'ros' → logprob: -9.702835083007812
    7. ' ' → logprob: -10.327835083007812
    8. ' rope' → logprob: -11.140335083007812
    9. 'robes' → logprob: -11.140335083007812
    10. '	' → logprob: -11.890335083007812

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012964145571459085
    2. '[' → logprob: -9.125129699707031
    3. ' [' → logprob: -11.750129699707031
    4. ']' → logprob: -12.375129699707031
    5. '][' → logprob: -13.000129699707031
    6. '[j' → logprob: -13.000129699707031
    7. 'i' → logprob: -14.500129699707031
    8. '[s' → logprob: -14.500129699707031
    9. '[I' → logprob: -14.625129699707031
    10. 's' → logprob: -15.000129699707031

Token 74: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012368128227535635
    2. '[i' → logprob: -9.500123977661133
    3. '])' → logprob: -11.250123977661133
    4. ' ]' → logprob: -11.375123977661133
    5. ']
' → logprob: -12.125123977661133
    6. '[' → logprob: -12.125123977661133
    7. '<|end|>' → logprob: -12.500123977661133
    8. ']>' → logprob: -13.250123977661133
    9. ')' → logprob: -13.500123977661133
    10. ']

' → logprob: -13.500123977661133

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0661355257034302
    2. '<|end|>' → logprob: -1.3161355257034302
    3. '
' → logprob: -1.6911355257034302
    4. '   ' → logprob: -1.8161355257034302
    5. ',' → logprob: -4.316135406494141
    6. '<|end|>' → logprob: -4.566135406494141
    7. '  
' → logprob: -5.066135406494141
    8. ')' → logprob: -5.941135406494141
    9. ' ' → logprob: -6.441135406494141
    10. ' if' → logprob: -6.691135406494141

Token 76: ' dx' (ID: 29472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1096022129058838
    2. '   ' → logprob: -1.3596022129058838
    3. '
' → logprob: -1.7346022129058838
    4. ' if' → logprob: -1.7346022129058838
    5. '    
' → logprob: -4.484601974487305
    6. '        
' → logprob: -4.609601974487305
    7. '  
' → logprob: -4.609601974487305
    8. 'if' → logprob: -5.109601974487305
    9. ' 
' → logprob: -5.359601974487305
    10. '<|end|>' → logprob: -5.484601974487305

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030115028843283653
    2. '=' → logprob: -3.5301151275634766
    3. ',' → logprob: -8.030115127563477
    4. '=x' → logprob: -10.905115127563477
    5. ' ' → logprob: -12.655115127563477
    6. '=p' → logprob: -12.905115127563477
    7. '=i' → logprob: -13.030115127563477
    8. ' ,' → logprob: -13.280115127563477
    9. '**' → logprob: -13.405115127563477
    10. '   ' → logprob: -13.780115127563477

Token 78: ' x' (ID: 1215)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.14325740933418274
    2. 'points' → logprob: -2.0182573795318604
    3. 'x' → logprob: -8.393257141113281
    4. 'abs' → logprob: -9.268257141113281
    5. ' abs' → logprob: -9.518257141113281
    6. ' x' → logprob: -9.518257141113281
    7. ' math' → logprob: -9.893257141113281
    8. '	points' → logprob: -10.893257141113281
    9. '(points' → logprob: -10.893257141113281
    10. '0' → logprob: -11.393257141113281

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028374455869197845
    2. '-' → logprob: -6.002837657928467
    3. '-p' → logprob: -8.127837181091309
    4. ' points' → logprob: -10.752837181091309
    5. '-point' → logprob: -11.252837181091309
    6. '**' → logprob: -11.377837181091309
    7. 'points' → logprob: -12.002837181091309
    8. '*' → logprob: -13.002837181091309
    9. ' =' → logprob: -13.377837181091309
    10. ' ' → logprob: -13.377837181091309

Token 80: ' ' (ID: 220)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.42954128980636597
    2. 'points' → logprob: -1.0545413494110107
    3. '0' → logprob: -7.179541110992432
    4. '(points' → logprob: -10.42954158782959
    5. ' ' → logprob: -10.67954158782959
    6. '	points' → logprob: -11.17954158782959
    7. 'point' → logprob: -12.67954158782959
    8. '.points' → logprob: -13.55454158782959
    9. 'oints' → logprob: -13.74204158782959
    10. 'p' → logprob: -14.30454158782959

Token 81: '0' (ID: 15)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.029884587973356247
    2. ' points' → logprob: -3.5298845767974854
    3. '0' → logprob: -9.779884338378906
    4. '(points' → logprob: -9.779884338378906
    5. '	points' → logprob: -11.529884338378906
    6. 'point' → logprob: -12.279884338378906
    7. '.points' → logprob: -13.404884338378906
    8. 'p' → logprob: -14.092384338378906
    9. ' ' → logprob: -14.217384338378906
    10. '```' → logprob: -14.592384338378906

Token 82: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.7133092880249023
    2. ' dy' → logprob: -1.2133092880249023
    3. '<|end|>' → logprob: -2.5883092880249023
    4. '**' → logprob: -3.0883092880249023
    5. 'dx' → logprob: -3.7133092880249023
    6. '0' → logprob: -3.7133092880249023
    7. 'y' → logprob: -4.213309288024902
    8. ' ' → logprob: -4.463309288024902
    9. ',' → logprob: -5.338309288024902
    10. ' dx' → logprob: -5.463309288024902

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0649028941988945
    2. ' -' → logprob: -3.0649027824401855
    3. '=' → logprob: -4.6899027824401855
    4. '<|end|>' → logprob: -5.0649027824401855
    5. ' ' → logprob: -7.6899027824401855
    6. '-' → logprob: -9.314903259277344
    7. '<|end|>' → logprob: -9.689903259277344
    8. ')' → logprob: -10.689903259277344
    9. ',' → logprob: -11.064903259277344
    10. '=user' → logprob: -12.377403259277344

Token 86: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9919924139976501
    2. 'y' → logprob: -1.116992473602295
    3. ' y' → logprob: -1.241992473602295
    4. ' ' → logprob: -4.366992473602295
    5. 'h' → logprob: -9.241991996765137
    6. ' -' → logprob: -9.241991996765137
    7. '-y' → logprob: -9.741991996765137
    8. ' h' → logprob: -9.991991996765137
    9. '-' → logprob: -10.616991996765137
    10. '(y' → logprob: -11.241991996765137

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00031866179779171944
    2. '-' → logprob: -8.12531852722168
    3. ' ' → logprob: -11.12531852722168
    4. '<|end|>' → logprob: -13.50031852722168
    5. ' =' → logprob: -13.75031852722168
    6. ')' → logprob: -13.87531852722168
    7. '**' → logprob: -14.25031852722168
    8. ',' → logprob: -14.50031852722168
    9. '=' → logprob: -14.50031852722168
    10. ' *' → logprob: -14.87531852722168

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01643279753625393
    2. ' ' → logprob: -4.141432762145996
    3. ' points' → logprob: -8.766432762145996
    4. 'points' → logprob: -8.891432762145996
    5. ' h' → logprob: -10.016432762145996
    6. 'h' → logprob: -10.141432762145996
    7. ' y' → logprob: -11.891432762145996
    8. ' -' → logprob: -12.766432762145996
    9. 'y' → logprob: -13.328932762145996
    10. ' math' → logprob: -13.453932762145996

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003868474392220378
    2. 'h' → logprob: -5.878868579864502
    3. ' ' → logprob: -7.503868579864502
    4. 'points' → logprob: -8.003868103027344
    5. ' points' → logprob: -9.628868103027344
    6. ' h' → logprob: -9.753868103027344
    7. 'y' → logprob: -11.003868103027344
    8. 'z' → logprob: -12.128868103027344
    9. '-' → logprob: -12.253868103027344
    10. 'point' → logprob: -12.378868103027344

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44586509466171265
    2. '<|end|>' → logprob: -1.0708651542663574
    3. '<|end|>' → logprob: -5.570865154266357
    4. '       ' → logprob: -5.820865154266357
    5. ',' → logprob: -5.945865154266357
    6. ' 
' → logprob: -6.570865154266357
    7. '   ' → logprob: -6.820865154266357
    8. '  
' → logprob: -6.820865154266357
    9. ' -' → logprob: -6.945865154266357
    10. '    
' → logprob: -7.445865154266357

Token 92: ' #' (ID: 1069)
  Prédit: ' dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dz' → logprob: -0.12913337349891663
    2. '       ' → logprob: -3.504133462905884
    3. 'dz' → logprob: -3.629133462905884
    4. '   ' → logprob: -3.754133462905884
    5. ' abs' → logprob: -4.879133224487305
    6. ' math' → logprob: -5.004133224487305
    7. ' z' → logprob: -5.004133224487305
    8. 'z' → logprob: -5.379133224487305
    9. ' (' → logprob: -5.879133224487305
    10. 'import' → logprob: -6.504133224487305

Token 93: ' Horizontal' (ID: 75428)
  Prédit: ' dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dz' → logprob: -0.11007838696241379
    2. ' if' → logprob: -3.6100783348083496
    3. ' distance' → logprob: -3.8600783348083496
    4. ' dist' → logprob: -4.61007833480835
    5. 'dz' → logprob: -4.61007833480835
    6. ' d' → logprob: -5.11007833480835
    7. 'distance' → logprob: -5.36007833480835
    8. ' math' → logprob: -5.61007833480835
    9. ' z' → logprob: -5.61007833480835
    10. 'if' → logprob: -6.11007833480835

Token 94: ' dist' (ID: 3601)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5358205437660217
    2. 'distance' → logprob: -0.9108205437660217
    3. 'dist' → logprob: -4.910820484161377
    4. ' dist' → logprob: -6.535820484161377
    5. ' distances' → logprob: -6.910820484161377
    6. 'd' → logprob: -6.910820484161377
    7. '_distance' → logprob: -7.785820484161377
    8. '<|end|>' → logprob: -7.785820484161377
    9. ' and' → logprob: -9.160820960998535
    10. ' d' → logprob: -9.410820960998535

Token 95: ' from' (ID: 591)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.39177268743515015
    2. ' =' → logprob: -1.141772747039795
    3. '=' → logprob: -5.516772747039795
    4. '   ' → logprob: -7.516772747039795
    5. '       ' → logprob: -9.641772270202637
    6. '2' → logprob: -9.641772270202637
    7. '**' → logprob: -10.016772270202637
    8. 'ANCE' → logprob: -10.266772270202637
    9. 'an' → logprob: -10.391772270202637
    10. '```' → logprob: -11.016772270202637

Token 96: ' origin' (ID: 12839)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.0656065940856934
    2. ' the' → logprob: -1.5656065940856934
    3. ' points' → logprob: -1.9406065940856934
    4. ' (' → logprob: -2.0656065940856934
    5. ' origin' → logprob: -2.6906065940856934
    6. '0' → logprob: -3.0656065940856934
    7. '(' → logprob: -4.065606594085693
    8. ' ' → logprob: -4.815606594085693
    9. 'the' → logprob: -4.940606594085693
    10. ' point' → logprob: -4.940606594085693

Token 97: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.994666576385498
    2. ' =' → logprob: -1.119666576385498
    3. '       ' → logprob: -1.619666576385498
    4. '=' → logprob: -3.244666576385498
    5. ' to' → logprob: -4.119666576385498
    6. ',' → logprob: -4.869666576385498
    7. 'import' → logprob: -4.994666576385498
    8. '**' → logprob: -5.119666576385498
    9. '```' → logprob: -5.494666576385498
    10. ' ' → logprob: -5.619666576385498

Token 98: ' anchor' (ID: 31067)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2686814069747925
    2. ' anchors' → logprob: -1.5186814069747925
    3. ' math' → logprob: -1.7686814069747925
    4. ' dx' → logprob: -2.893681526184082
    5. 'anchors' → logprob: -3.143681526184082
    6. '(' → logprob: -3.268681526184082
    7. '(x' → logprob: -3.268681526184082
    8. ' points' → logprob: -3.518681526184082
    9. ' the' → logprob: -3.893681526184082
    10. 'dx' → logprob: -4.143681526184082

Token 99: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.16174553334712982
    2. 'dist' (adapté à ' dist') → logprob: -2.036745548248291
    3. 'import' → logprob: -5.536745548248291
    4. ' d' → logprob: -5.536745548248291
    5. ' horiz' → logprob: -6.161745548248291
    6. ' horizontal' → logprob: -6.411745548248291
    7. ' import' → logprob: -6.661745548248291
    8. 'd' → logprob: -6.786745548248291
    9. ' dx' → logprob: -6.786745548248291
    10. ' distance' → logprob: -7.161745548248291

Token 102: '_xy' (ID: 99656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602621078491211
    2. '=' → logprob: -1.910262107849121
    3. ' ' → logprob: -11.160262107849121
    4. '_horizontal' → logprob: -11.785262107849121
    5. '_squared' → logprob: -12.160262107849121
    6. '_h' → logprob: -12.410262107849121
    7. 's' → logprob: -13.660262107849121
    8. 'horizontal' → logprob: -14.410262107849121
    9. '```' → logprob: -14.535262107849121
    10. '_sq' → logprob: -14.660262107849121

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859248176217079
    2. '=' → logprob: -3.0485925674438477
    3. ' ' → logprob: -12.548592567443848
    4. ')' → logprob: -14.798592567443848
    5. '   ' → logprob: -14.798592567443848
    6. '=s' → logprob: -15.298592567443848
    7. ' ' → logprob: -16.17359161376953
    8. '**' → logprob: -16.17359161376953
    9. '<|end|>' → logprob: -16.42359161376953
    10. 's' → logprob: -16.79859161376953

Token 104: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.17284664511680603
    2. 'math' → logprob: -1.9228466749191284
    3. '(math' → logprob: -4.422846794128418
    4. ' (' → logprob: -7.547846794128418
    5. '(dx' → logprob: -12.172846794128418
    6. '(x' → logprob: -13.172846794128418
    7. '(' → logprob: -13.547846794128418
    8. '   ' → logprob: -13.547846794128418
    9. ' dx' → logprob: -13.922846794128418
    10. 'import' → logprob: -14.047846794128418

Token 105: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0032114614732563496
    2. '.h' → logprob: -5.753211498260498
    3. '.' → logprob: -11.12821102142334
    4. '.dist' → logprob: -11.62821102142334
    5. '.Sqrt' → logprob: -11.87821102142334
    6. '.atan' → logprob: -13.25321102142334
    7. '.s' → logprob: -14.25321102142334
    8. 'sqrt' → logprob: -15.12821102142334
    9. '.pow' → logprob: -15.50321102142334
    10. '.floor' → logprob: -16.753211975097656

Token 106: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.014469388872385025
    2. '((' → logprob: -4.264469623565674
    3. '(' → logprob: -8.139469146728516
    4. 'dx' → logprob: -11.389469146728516
    5. ' (' → logprob: -13.764469146728516
    6. '(x' → logprob: -14.264469146728516
    7. ' dx' → logprob: -14.639469146728516
    8. ' ((' → logprob: -15.639469146728516
    9. '```' → logprob: -16.389469146728516
    10. '(
' → logprob: -16.389469146728516

Token 107: '*' (ID: 9)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004749915096908808
    2. '*' → logprob: -5.379749774932861
    3. ' **' → logprob: -9.00475025177002
    4. ' *' → logprob: -12.37975025177002
    5. '*x' → logprob: -13.50475025177002
    6. '2' → logprob: -14.50475025177002
    7. '***' → logprob: -15.37975025177002
    8. '```' → logprob: -15.37975025177002
    9. '*object' → logprob: -16.504749298095703
    10. ')**' → logprob: -17.004749298095703

Token 108: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.3425219549390022e-05
    2. ' dx' → logprob: -11.75001335144043
    3. '2' → logprob: -12.50001335144043
    4. '_dx' → logprob: -14.12501335144043
    5. 'd' → logprob: -15.12501335144043
    6. 'dy' → logprob: -15.25001335144043
    7. '```' → logprob: -16.00001335144043
    8. '

' → logprob: -16.00001335144043
    9. '*' → logprob: -16.50001335144043
    10. '(dx' → logprob: -16.50001335144043

Token 109: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889143377542496
    2. '+' → logprob: -2.5788915157318115
    3. ')' → logprob: -14.45389175415039
    4. ' ' → logprob: -15.20389175415039
    5. ' +
' → logprob: -15.57889175415039
    6. '<|end|>' → logprob: -15.95389175415039
    7. ' +

' → logprob: -16.07889175415039
    8. ')+' → logprob: -16.07889175415039
    9. ' plus' → logprob: -16.20389175415039
    10. ' ' → logprob: -16.32889175415039

Token 110: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.10020861029624939
    2. ' dy' → logprob: -2.3502085208892822
    3. '.dy' → logprob: -13.975208282470703
    4. ')' → logprob: -14.475208282470703
    5. 'd' → logprob: -15.975208282470703
    6. '<|end|>' → logprob: -16.350208282470703
    7. '
' → logprob: -16.475208282470703
    8. ' ' → logprob: -16.475208282470703
    9. '

' → logprob: -16.600208282470703
    10. '   ' → logprob: -16.975208282470703

Token 111: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6231062412261963
    2. '*' → logprob: -0.9981062412261963
    3. '*)' → logprob: -2.3731062412261963
    4. '<|end|>' → logprob: -6.998106002807617
    5. ' )' → logprob: -7.873106002807617
    6. '**' → logprob: -8.123106002807617
    7. '**)' → logprob: -8.998106002807617
    8. '*/)' → logprob: -9.123106002807617
    9. '*x' → logprob: -10.623106002807617
    10. ' *' → logprob: -10.748106002807617

Token 112: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.038764677941799164
    2. '2' → logprob: -3.288764715194702
    3. 'dx' → logprob: -7.288764476776123
    4. ' dy' → logprob: -11.788764953613281
    5. 'dist' → logprob: -12.038764953613281
    6. ' ' → logprob: -12.163764953613281
    7. '

' → logprob: -12.163764953613281
    8. 'd' → logprob: -12.913764953613281
    9. '   ' → logprob: -13.038764953613281
    10. ')' → logprob: -13.163764953613281

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004441035911440849
    2. ' )' → logprob: -5.629441261291504
    3. ')
' → logprob: -7.504441261291504
    4. ' +' → logprob: -9.129441261291504
    5. '   ' → logprob: -10.004441261291504
    6. '+' → logprob: -10.004441261291504
    7. ' -' → logprob: -10.504441261291504
    8. ' )
' → logprob: -11.629441261291504
    9. ')

' → logprob: -11.879441261291504
    10. ')**' → logprob: -12.004441261291504

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028440911322832108
    2. '   ' → logprob: -4.153440952301025
    3. '<|end|>' → logprob: -4.778440952301025
    4. ')' → logprob: -6.403440952301025
    5. ',' → logprob: -7.403440952301025
    6. '
' → logprob: -7.903440952301025
    7. '<|end|>' → logprob: -7.903440952301025
    8. '```' → logprob: -8.028440475463867
    9. '        
' → logprob: -8.278440475463867
    10. '  
' → logprob: -9.528440475463867

Token 115: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5812181830406189
    2. ' if' → logprob: -1.0812182426452637
    3. '   ' → logprob: -2.5812182426452637
    4. 'if' → logprob: -3.7062182426452637
    5. '
' → logprob: -7.456218242645264
    6. '        
' → logprob: -8.331217765808105
    7. '```' → logprob: -8.581217765808105
    8. '<|end|>' → logprob: -9.331217765808105
    9. '  
' → logprob: -9.706217765808105
    10. ',' → logprob: -9.956217765808105

Token 116: ' At' (ID: 3604)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5849165916442871
    2. ' if' → logprob: -0.8349165916442871
    3. 'z' → logprob: -6.334916591644287
    4. '#' → logprob: -6.584916591644287
    5. 'h' → logprob: -6.959916591644287
    6. 'max' → logprob: -6.959916591644287
    7. ' z' → logprob: -7.084916591644287
    8. ' max' → logprob: -7.084916591644287
    9. 'If' → logprob: -7.334916591644287
    10. '```' → logprob: -8.209917068481445

Token 117: ' height' (ID: 4679)
  Prédit: ' least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' least' → logprob: -1.0910354852676392
    2. 'if' → logprob: -2.0910353660583496
    3. ' if' → logprob: -2.2160353660583496
    4. 'least' → logprob: -2.2160353660583496
    5. '#' → logprob: -2.4660353660583496
    6. ' vertical' → logprob: -2.9660353660583496
    7. ' ' → logprob: -3.0910353660583496
    8. 'otal' → logprob: -3.5910353660583496
    9. '   ' → logprob: -4.59103536605835
    10. ' the' → logprob: -4.59103536605835

Token 118: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.13215607404708862
    2. 'h' → logprob: -2.5071561336517334
    3. ',' → logprob: -4.132155895233154
    4. ' difference' → logprob: -5.007155895233154
    5. 'diff' → logprob: -5.132155895233154
    6. 'difference' → logprob: -5.507155895233154
    7. 'distance' → logprob: -6.882155895233154
    8. ')' → logprob: -7.132155895233154
    9. ' diff' → logprob: -7.257155895233154
    10. ' ' → logprob: -7.382155895233154

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037588998675346375
    2. ' ,' → logprob: -4.412589073181152
    3. '   ' → logprob: -4.537589073181152
    4. ' if' → logprob: -4.787589073181152
    5. '
' → logprob: -6.662589073181152
    6. ':' → logprob: -6.787589073181152
    7. '       ' → logprob: -7.412589073181152
    8. '),' → logprob: -7.662589073181152
    9. ')' → logprob: -7.787589073181152
    10. '<|end|>' → logprob: -8.287589073181152

Token 120: ' distance' (ID: 9324)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016786983236670494
    2. 'if' → logprob: -5.141787052154541
    3. '       ' → logprob: -5.516787052154541
    4. ' max' → logprob: -6.266787052154541
    5. ' vertical' → logprob: -6.391787052154541
    6. ' the' → logprob: -6.891787052154541
    7. ' z' → logprob: -7.516787052154541
    8. '   ' → logprob: -7.641787052154541
    9. ' radius' → logprob: -9.141786575317383
    10. 'max' → logprob: -9.391786575317383

Token 121: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24145236611366272
    2. '=' → logprob: -1.7414523363113403
    3. ' between' → logprob: -3.99145245552063
    4. '<|end|>' → logprob: -5.366452217102051
    5. 'from' → logprob: -5.491452217102051
    6. ' to' → logprob: -6.116452217102051
    7. ' in' → logprob: -6.366452217102051
    8. 'between' → logprob: -6.366452217102051
    9. ' from' → logprob: -6.491452217102051
    10. 'to' → logprob: -6.991452217102051

Token 122: ' anchor' (ID: 31067)
  Prédit: ' origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' origin' → logprob: -0.6907508373260498
    2. '(' → logprob: -1.9407508373260498
    3. ' (' → logprob: -2.19075083732605
    4. 'origin' → logprob: -2.81575083732605
    5. ' point' → logprob: -3.06575083732605
    6. ' points' → logprob: -3.44075083732605
    7. ' balloon' → logprob: -3.56575083732605
    8. ' the' → logprob: -3.81575083732605
    9. 'the' → logprob: -4.440751075744629
    10. 'points' → logprob: -4.440751075744629

Token 123: ' must' (ID: 2804)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2123500406742096
    2. ' =' → logprob: -1.9623500108718872
    3. ' is' → logprob: -3.7123501300811768
    4. ' in' → logprob: -4.712349891662598
    5. 'to' → logprob: -5.337349891662598
    6. '=' → logprob: -5.337349891662598
    7. ' should' → logprob: -6.337349891662598
    8. ' along' → logprob: -6.462349891662598
    9. '   ' → logprob: -6.837349891662598
    10. ' must' → logprob: -7.462349891662598

Token 124: ' <=' (ID: 5017)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.12494605034589767
    2. '<=' → logprob: -2.624946117401123
    3. ' not' → logprob: -4.124946117401123
    4. 'be' → logprob: -4.124946117401123
    5. ' <=' → logprob: -4.624946117401123
    6. 'not' → logprob: -6.374946117401123
    7. '<|end|>' → logprob: -7.874946117401123
    8. '=' → logprob: -8.249945640563965
    9. ')<=' → logprob: -8.624945640563965
    10. ')' → logprob: -9.374945640563965

Token 125: ' rope' (ID: 56427)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12706197798252106
    2. ' l' → logprob: -2.1270620822906494
    3. ' ropes' → logprob: -9.62706184387207
    4. '	l' → logprob: -10.75206184387207
    5. ' ' → logprob: -10.87706184387207
    6. 'rope' → logprob: -12.00206184387207
    7. ' math' → logprob: -12.62706184387207
    8. '   ' → logprob: -12.62706184387207
    9. '```' → logprob: -13.18956184387207
    10. 'rop' → logprob: -13.31456184387207

Token 126: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7636405229568481
    2. 'length' → logprob: -0.8886405229568481
    3. '[i' → logprob: -2.3886404037475586
    4. 's' → logprob: -4.013640403747559
    5. 'l' → logprob: -5.388640403747559
    6. ' lengths' → logprob: -5.888640403747559
    7. 'i' → logprob: -7.513640403747559
    8. '-length' → logprob: -7.513640403747559
    9. '[length' → logprob: -7.513640403747559
    10. ' ' → logprob: -7.638640403747559

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005192132201045752
    2. '
' → logprob: -5.505192279815674
    3. '   ' → logprob: -8.255191802978516
    4. '        
' → logprob: -8.255191802978516
    5. '<|end|>' → logprob: -8.505191802978516
    6. ' if' → logprob: -8.755191802978516
    7. ',' → logprob: -9.005191802978516
    8. '  
' → logprob: -10.755191802978516
    9. '<|end|>' → logprob: -10.880191802978516
    10. 'if' → logprob: -11.255191802978516

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026928901206701994
    2. '   ' → logprob: -6.502692699432373
    3. ' if' → logprob: -7.252692699432373
    4. '
' → logprob: -8.627693176269531
    5. '        
' → logprob: -9.002693176269531
    6. '<|end|>' → logprob: -9.752693176269531
    7. ',' → logprob: -10.377693176269531
    8. 'if' → logprob: -10.502693176269531
    9. '```' → logprob: -11.377693176269531
    10. '           ' → logprob: -11.752693176269531

Token 129: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07778874039649963
    2. 'if' → logprob: -2.702788829803467
    3. '       ' → logprob: -5.327788829803467
    4. '
' → logprob: -6.327788829803467
    5. '   ' → logprob: -7.077788829803467
    6. '```' → logprob: -9.577788352966309
    7. 'distance' → logprob: -9.827788352966309
    8. '        
' → logprob: -10.202788352966309
    9. 'dist' → logprob: -10.577788352966309
    10. ' for' → logprob: -10.827788352966309

Token 130: ' Distance' (ID: 53583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43385303020477295
    2. ' if' → logprob: -1.058853030204773
    3. '   ' → logprob: -5.9338531494140625
    4. '       ' → logprob: -6.9338531494140625
    5. 'z' → logprob: -8.558853149414062
    6. '
' → logprob: -8.683853149414062
    7. ' vertical' → logprob: -8.683853149414062
    8. 'vertical' → logprob: -8.808853149414062
    9. 'If' → logprob: -8.808853149414062
    10. 'max' → logprob: -9.558853149414062

Token 131: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32209843397140503
    2. '=' → logprob: -2.07209849357605
    3. '_z' → logprob: -2.82209849357605
    4. '_xy' → logprob: -3.19709849357605
    5. '_xyz' → logprob: -3.57209849357605
    6. '_squared' → logprob: -5.197098255157471
    7. '_' → logprob: -5.322098255157471
    8. 's' → logprob: -6.072098255157471
    9. '_sq' → logprob: -6.197098255157471
    10. '3' → logprob: -6.197098255157471

Token 132: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9757393002510071
    2. 'points' → logprob: -1.2257392406463623
    3. ' points' → logprob: -1.8507392406463623
    4. ' (' → logprob: -2.3507392406463623
    5. '(points' → logprob: -3.8507392406463623
    6. ' origin' → logprob: -4.350739479064941
    7. 'origin' → logprob: -4.725739479064941
    8. ' point' → logprob: -4.975739479064941
    9. 'point' → logprob: -4.975739479064941
    10. 'the' → logprob: -5.475739479064941

Token 133: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02159382402896881
    2. 'points' → logprob: -4.146594047546387
    3. 'x' → logprob: -5.771594047546387
    4. ' points' → logprob: -6.771594047546387
    5. ' ' → logprob: -7.646594047546387
    6. '(' → logprob: -8.396594047546387
    7. 'dx' → logprob: -8.521594047546387
    8. '(points' → logprob: -8.896594047546387
    9. 'dist' → logprob: -10.396594047546387
    10. 'h' → logprob: -10.396594047546387

Token 134: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28229859471321106
    2. ',y' → logprob: -1.4072985649108887
    3. ' ,' → logprob: -7.657298564910889
    4. '0' → logprob: -7.657298564910889
    5. ' -' → logprob: -10.282299041748047
    6. ',h' → logprob: -10.407299041748047
    7. ',(' → logprob: -10.657299041748047
    8. '-' → logprob: -10.907299041748047
    9. '#' → logprob: -11.407299041748047
    10. ',x' → logprob: -11.532299041748047

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04280618578195572
    2. ',h' → logprob: -3.4178061485290527
    3. ',z' → logprob: -5.167806148529053
    4. '0' → logprob: -6.042806148529053
    5. ')' → logprob: -7.792806148529053
    6. ' ,' → logprob: -7.917806148529053
    7. ',(' → logprob: -10.542806625366211
    8. ',x' → logprob: -10.542806625366211
    9. 'h' → logprob: -10.542806625366211
    10. '),' → logprob: -10.792806625366211

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3290290832519531
    2. 'h' → logprob: -1.3290290832519531
    3. 'z' → logprob: -4.204029083251953
    4. 'points' → logprob: -8.329029083251953
    5. ' ' → logprob: -8.579029083251953
    6. ' h' → logprob: -9.079029083251953
    7. ' points' → logprob: -10.079029083251953
    8. 'point' → logprob: -10.204029083251953
    9. ')' → logprob: -10.704029083251953
    10. ' z' → logprob: -11.516529083251953

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0056163654662668705
    2. ' -' → logprob: -6.005616188049316
    3. ' )' → logprob: -6.880616188049316
    4. ' to' → logprob: -6.880616188049316
    5. '-' → logprob: -8.130616188049316
    6. 'to' → logprob: -8.630616188049316
    7. '),' → logprob: -8.880616188049316
    8. ',' → logprob: -9.380616188049316
    9. '+' → logprob: -9.630616188049316
    10. ')-(' → logprob: -9.630616188049316

Token 138: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07048650830984116
    2. 'to' → logprob: -2.695486545562744
    3. ' =' → logprob: -8.820486068725586
    4. '   ' → logprob: -9.570486068725586
    5. '=' → logprob: -9.695486068725586
    6. ')' → logprob: -9.945486068725586
    7. ',' → logprob: -10.195486068725586
    8. ' ' → logprob: -10.320486068725586
    9. '```' → logprob: -10.570486068725586
    10. ' -' → logprob: -11.195486068725586

Token 139: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5853179693222046
    2. ' (' → logprob: -0.8353179693222046
    3. ' points' → logprob: -5.210318088531494
    4. '(points' → logprob: -5.710318088531494
    5. 'points' → logprob: -7.585318088531494
    6. '(x' → logprob: -10.585317611694336
    7. ' point' → logprob: -11.710317611694336
    8. ' the' → logprob: -12.710317611694336
    9. ' ' → logprob: -12.710317611694336
    10. '(point' → logprob: -12.835317611694336

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021052942611277103
    2. 'points' → logprob: -6.377105236053467
    3. ' ' → logprob: -8.252105712890625
    4. ' points' → logprob: -9.252105712890625
    5. '(' → logprob: -11.252105712890625
    6. '(points' → logprob: -11.252105712890625
    7. ')' → logprob: -12.252105712890625
    8. 'x' → logprob: -12.377105712890625
    9. ',' → logprob: -13.064605712890625
    10. '```' → logprob: -13.877105712890625

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012603480368852615
    2. ',h' → logprob: -4.387603282928467
    3. '0' → logprob: -10.887603759765625
    4. ' ,' → logprob: -11.012603759765625
    5. ',height' → logprob: -11.262603759765625
    6. ',x' → logprob: -11.387603759765625
    7. ',y' → logprob: -11.387603759765625
    8. ',n' → logprob: -12.762603759765625
    9. ',d' → logprob: -12.887603759765625
    10. ',
' → logprob: -13.137603759765625

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.750051498413086
    4. ',' → logprob: -16.875051498413086
    5. '<|end|>' → logprob: -17.500051498413086
    6. '
' → logprob: -17.750051498413086
    7. 'x' → logprob: -18.000051498413086
    8. '```' → logprob: -18.187551498413086
    9. '

' → logprob: -18.375051498413086
    10. 'h' → logprob: -19.000051498413086

Token 143: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.00040695868665352464
    2. ',' → logprob: -8.000407218933105
    3. 'h' → logprob: -9.625407218933105
    4. ',
' → logprob: -13.625407218933105
    5. ',height' → logprob: -13.625407218933105
    6. ' ,' → logprob: -14.125407218933105
    7. ',z' → logprob: -14.750407218933105
    8. ',x' → logprob: -15.375407218933105
    9. ',d' → logprob: -15.500407218933105
    10. '
' → logprob: -16.00040626525879

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004198186565190554
    2. '):' → logprob: -5.75419807434082
    3. '):
' → logprob: -8.37919807434082
    4. ' )' → logprob: -8.50419807434082
    5. ')=' → logprob: -8.87919807434082
    6. ')
' → logprob: -9.25419807434082
    7. ')is' → logprob: -9.37919807434082
    8. ' is' → logprob: -9.62919807434082
    9. ')**' → logprob: -9.75419807434082
    10. '):

' → logprob: -9.75419807434082

Token 145: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.463378369808197
    2. ' =' → logprob: -1.9633784294128418
    3. '=' → logprob: -2.838378429412842
    4. ' is' → logprob: -3.213378429412842
    5. ' dist' → logprob: -3.588378429412842
    6. '<|end|>' → logprob: -4.088378429412842
    7. ':' → logprob: -4.213378429412842
    8. 'distance' → logprob: -4.338378429412842
    9. '   ' → logprob: -4.588378429412842
    10. 'dist' → logprob: -4.588378429412842

Token 146: ' sqrt' (ID: 44237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0009398083784617484
    2. ' math' → logprob: -7.000939846038818
    3. '(math' → logprob: -10.75093936920166
    4. 'dist' → logprob: -12.37593936920166
    5. 'sqrt' → logprob: -13.62593936920166
    6. '   ' → logprob: -14.37593936920166
    7. '```' → logprob: -14.75093936920166
    8. 'Math' → logprob: -15.37593936920166
    9. 'cmath' → logprob: -16.500940322875977
    10. 'import' → logprob: -17.000940322875977

Token 147: '(x' (ID: 4061)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2685522139072418
    2. '(dist' → logprob: -1.6435521841049194
    3. '(dx' → logprob: -3.268552303314209
    4. '(' → logprob: -5.893552303314209
    5. 'dist' → logprob: -6.768552303314209
    6. ' ((' → logprob: -9.64355182647705
    7. ' dist' → logprob: -9.89355182647705
    8. ' (' → logprob: -10.26855182647705
    9. '```' → logprob: -10.64355182647705
    10. 'dx' → logprob: -10.64355182647705

Token 148: '²' (ID: 13848)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.0015231950674206018
    2. '**' → logprob: -6.501523017883301
    3. ' *' → logprob: -11.0015230178833
    4. '*i' → logprob: -13.0015230178833
    5. '*y' → logprob: -15.0015230178833
    6. '[i' → logprob: -15.3765230178833
    7. '0' → logprob: -15.7515230178833
    8. '(x' → logprob: -15.7515230178833
    9. '```' → logprob: -15.7515230178833
    10. 'x' → logprob: -15.8765230178833

Token 149: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13193796575069427
    2. '+' → logprob: -2.2569379806518555
    3. '*' → logprob: -4.0069379806518555
    4. '**' → logprob: -7.6319379806518555
    5. ' *' → logprob: -8.881937980651855
    6. '*x' → logprob: -10.006937980651855
    7. '+x' → logprob: -10.756937980651855
    8. '+y' → logprob: -11.006937980651855
    9. ')' → logprob: -11.506937980651855
    10. ' ' → logprob: -11.756937980651855

Token 150: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004227389581501484
    2. ' y' → logprob: -5.629227161407471
    3. '(' → logprob: -8.504227638244629
    4. 'h' → logprob: -8.754227638244629
    5. '(y' → logprob: -9.004227638244629
    6. '0' → logprob: -9.379227638244629
    7. 'z' → logprob: -10.879227638244629
    8. ' (' → logprob: -10.879227638244629
    9. '(h' → logprob: -11.129227638244629
    10. 'dist' → logprob: -13.754227638244629

Token 151: '²' (ID: 13848)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14690054953098297
    2. '**' → logprob: -2.1469006538391113
    3. '²' → logprob: -4.021900653839111
    4. '2' → logprob: -7.271900653839111
    5. '*z' → logprob: -7.521900653839111
    6. '*x' → logprob: -8.271900177001953
    7. '*y' → logprob: -8.396900177001953
    8. '*w' → logprob: -11.396900177001953
    9. '^' → logprob: -11.646900177001953
    10. ' *' → logprob: -11.896900177001953

Token 152: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014535814523697
    2. '+' → logprob: -1.7014535665512085
    3. ')' → logprob: -10.32645320892334
    4. ' ' → logprob: -13.07645320892334
    5. ',' → logprob: -14.20145320892334
    6. ')+' → logprob: -14.45145320892334
    7. '),' → logprob: -14.82645320892334
    8. ' +
' → logprob: -14.95145320892334
    9. '<|end|>' → logprob: -15.13895320892334
    10. ' ' → logprob: -15.20145320892334

Token 153: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11141625046730042
    2. ' h' → logprob: -2.3614163398742676
    3. '(h' → logprob: -4.736416339874268
    4. ' (' → logprob: -6.111416339874268
    5. '(' → logprob: -9.61141586303711
    6. 'z' → logprob: -10.11141586303711
    7. '(z' → logprob: -11.61141586303711
    8. '```' → logprob: -11.73641586303711
    9. ' ' → logprob: -11.86141586303711
    10. ' z' → logprob: -11.98641586303711

Token 154: '²' (ID: 13848)
  Prédit: '*h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*h' → logprob: -0.009196130558848381
    2. '*' → logprob: -5.0091962814331055
    3. '**' → logprob: -6.0091962814331055
    4. ' *' → logprob: -12.134196281433105
    5. '2' → logprob: -12.384196281433105
    6. '*
' → logprob: -12.884196281433105
    7. 'h' → logprob: -13.384196281433105
    8. '*self' → logprob: -13.509196281433105
    9. '*l' → logprob: -13.634196281433105
    10. '*\' → logprob: -14.259196281433105

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013400046154856682
    2. ' )' → logprob: -6.876339912414551
    3. ')**' → logprob: -9.37633991241455
    4. ')
' → logprob: -9.87633991241455
    5. ')>' → logprob: -10.25133991241455
    6. '   ' → logprob: -10.25133991241455
    7. ')<=' → logprob: -10.37633991241455
    8. '))' → logprob: -11.62633991241455
    9. '**' → logprob: -11.87633991241455
    10. '),' → logprob: -12.00133991241455

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011377158807590604
    2. '<|end|>' → logprob: -7.251137733459473
    3. ')' → logprob: -8.751137733459473
    4. '<|end|>' → logprob: -8.876137733459473
    5. ',' → logprob: -9.751137733459473
    6. '        
' → logprob: -11.001137733459473
    7. '   ' → logprob: -11.126137733459473
    8. '
' → logprob: -11.626137733459473
    9. '           ' → logprob: -12.126137733459473
    10. '```' → logprob: -12.501137733459473

Token 157: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3303053677082062
    2. ' if' → logprob: -1.8303053379058838
    3. 'if' (adapté à ' if') → logprob: -2.205305337905884
    4. 'distance' → logprob: -5.205305576324463
    5. 'dist' → logprob: -5.955305576324463
    6. '   ' → logprob: -7.080305576324463
    7. ' distance' → logprob: -7.580305576324463
    8. ' dist' → logprob: -7.955305576324463
    9. 'd' → logprob: -8.080305099487305
    10. '
' → logprob: -8.580305099487305

Token 158: ' math' (ID: 13324)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.11564457416534424
    2. 'dist' → logprob: -2.7406444549560547
    3. ' math' → logprob: -3.2406444549560547
    4. '(dist' → logprob: -6.240644454956055
    5. ' (' → logprob: -6.490644454956055
    6. 'math' → logprob: -6.990644454956055
    7. ' h' → logprob: -7.865644454956055
    8. '(math' → logprob: -8.240644454956055
    9. '(h' → logprob: -8.990644454956055
    10. '(' → logprob: -9.115644454956055

Token 159: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00021319588995538652
    2. '.' → logprob: -8.625213623046875
    3. '.h' → logprob: -11.250213623046875
    4. '.dist' → logprob: -11.875213623046875
    5. '.isnan' → logprob: -12.250213623046875
    6. ' .' → logprob: -12.375213623046875
    7. 'sqrt' → logprob: -13.750213623046875
    8. '.Sqrt' → logprob: -14.125213623046875
    9. '.sin' → logprob: -14.375213623046875
    10. '.ceil' → logprob: -14.750213623046875

Token 160: '((' (ID: 2054)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.8377355933189392
    2. '((' → logprob: -1.212735652923584
    3. '(dist' → logprob: -1.337735652923584
    4. '(x' → logprob: -5.462735652923584
    5. '(' → logprob: -5.837735652923584
    6. 'dist' → logprob: -8.337735176086426
    7. 'dx' → logprob: -10.462735176086426
    8. ' dist' → logprob: -10.962735176086426
    9. ' (' → logprob: -11.337735176086426
    10. ' ((' → logprob: -11.962735176086426

Token 161: 'x' (ID: 87)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8658540844917297
    2. 'x' → logprob: -1.240854024887085
    3. 'dist' → logprob: -1.240854024887085
    4. ' dist' → logprob: -7.990854263305664
    5. ' dx' → logprob: -8.490854263305664
    6. '(x' → logprob: -8.740854263305664
    7. '(dx' → logprob: -8.990854263305664
    8. ' x' → logprob: -9.615854263305664
    9. '(dist' → logprob: -9.740854263305664
    10. '   ' → logprob: -10.990854263305664

Token 162: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.15849685668945312
    2. '*x' → logprob: -2.158496856689453
    3. ')*(' → logprob: -4.533496856689453
    4. '**' → logprob: -4.533496856689453
    5. ')*' → logprob: -5.533496856689453
    6. ')' → logprob: -5.908496856689453
    7. '*' → logprob: -6.033496856689453
    8. '-' → logprob: -8.283496856689453
    9. ' -' → logprob: -9.658496856689453
    10. ' )' → logprob: -9.908496856689453

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.423219696851447e-05
    2. '**' → logprob: -9.875083923339844
    3. ' ' → logprob: -10.750083923339844
    4. '(' → logprob: -12.125083923339844
    5. '(x' → logprob: -12.875083923339844
    6. '```' → logprob: -13.375083923339844
    7. '
' → logprob: -14.750083923339844
    8. '*' → logprob: -15.000083923339844
    9. '()' → logprob: -15.125083923339844
    10. 'x' → logprob: -16.125083923339844

Token 164: '+(' (ID: 31717)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759782195091248
    2. '+' → logprob: -0.8259782195091248
    3. '+(' → logprob: -10.32597827911377
    4. ' +(' → logprob: -12.70097827911377
    5. ')' → logprob: -14.45097827911377
    6. ' ' → logprob: -14.45097827911377
    7. '+
' → logprob: -14.95097827911377
    8. ' +
' → logprob: -14.95097827911377
    9. ' plus' → logprob: -15.57597827911377
    10. ')+' → logprob: -15.70097827911377

Token 165: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000998155795969069
    2. ' y' → logprob: -7.125998020172119
    3. '(y' → logprob: -8.625998497009277
    4. '(' → logprob: -12.000998497009277
    5. '	y' → logprob: -13.625998497009277
    6. '   ' → logprob: -13.625998497009277
    7. ')y' → logprob: -13.750998497009277
    8. '0' → logprob: -14.500998497009277
    9. ' ' → logprob: -14.500998497009277
    10. '    ' → logprob: -14.750998497009277

Token 166: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0002627662615850568
    2. '**' → logprob: -8.750263214111328
    3. ')' → logprob: -9.250263214111328
    4. '[' → logprob: -12.500263214111328
    5. '2' → logprob: -13.250263214111328
    6. '0' → logprob: -13.625263214111328
    7. ' )' → logprob: -14.125263214111328
    8. '**)' → logprob: -15.500263214111328
    9. ' ' → logprob: -15.625263214111328
    10. '```' → logprob: -15.625263214111328

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011152983643114567
    2. '**' → logprob: -9.25011157989502
    3. ' ' → logprob: -11.62511157989502
    4. '+' → logprob: -13.50011157989502
    5. '```' → logprob: -13.75011157989502
    6. '
' → logprob: -13.87511157989502
    7. ')' → logprob: -14.00011157989502
    8. '(' → logprob: -14.87511157989502
    9. '

' → logprob: -15.25011157989502
    10. '*' → logprob: -15.87511157989502

Token 168: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38309958577156067
    2. ' +' → logprob: -1.2580995559692383
    3. '+h' → logprob: -3.3830995559692383
    4. '+(' → logprob: -9.508099555969238
    5. ')' → logprob: -11.008099555969238
    6. ')+' → logprob: -11.883099555969238
    7. '>' → logprob: -12.133099555969238
    8. ')+(' → logprob: -13.008099555969238
    9. '()+' → logprob: -13.633099555969238
    10. '+k' → logprob: -13.883099555969238

Token 169: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6279885768890381
    2. '(h' → logprob: -0.8779885768890381
    3. ' h' → logprob: -3.377988576889038
    4. ' (' → logprob: -4.127988815307617
    5. '   ' → logprob: -8.002988815307617
    6. '(' → logprob: -9.627988815307617
    7. ' ' → logprob: -10.627988815307617
    8. ')' → logprob: -11.502988815307617
    9. '  ' → logprob: -11.627988815307617
    10. '    ' → logprob: -11.752988815307617

Token 170: '*h' (ID: 139295)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04433499649167061
    2. '*' → logprob: -3.294334888458252
    3. '2' → logprob: -5.169334888458252
    4. ')**' → logprob: -8.04433536529541
    5. ')' → logprob: -8.79433536529541
    6. '**)' → logprob: -10.29433536529541
    7. ' **' → logprob: -10.41933536529541
    8. '*(' → logprob: -10.54433536529541
    9. '*h' → logprob: -11.91933536529541
    10. ' ' → logprob: -12.29433536529541

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009007388725876808
    2. ')>' → logprob: -7.125900745391846
    3. ' )' → logprob: -9.375900268554688
    4. '>' → logprob: -11.500900268554688
    5. '>)' → logprob: -14.125900268554688
    6. ' >' → logprob: -15.500900268554688
    7. '   ' → logprob: -16.125900268554688
    8. '）' → logprob: -16.125900268554688
    9. '")' → logprob: -16.750900268554688
    10. ' ' → logprob: -17.250900268554688

Token 172: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12698447704315186
    2. ' >' → logprob: -2.1269845962524414
    3. ')>' → logprob: -10.751984596252441
    4. '">' → logprob: -11.126984596252441
    5. ')' → logprob: -11.751984596252441
    6. '-' → logprob: -12.501984596252441
    7. ' ' → logprob: -13.001984596252441
    8. '()>' → logprob: -13.251984596252441
    9. ' ' → logprob: -14.001984596252441
    10. '   ' → logprob: -14.376984596252441

Token 173: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1428220123052597
    2. ' l' → logprob: -2.017822027206421
    3. ' ' → logprob: -10.267822265625
    4. ' ropes' → logprob: -10.267822265625
    5. 'rop' → logprob: -10.517822265625
    6. '   ' → logprob: -10.767822265625
    7. '	l' → logprob: -11.267822265625
    8. '    ' → logprob: -12.767822265625
    9. 'rope' → logprob: -13.142822265625
    10. '  ' → logprob: -13.142822265625

Token 174: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22886863350868225
    2. ':
' → logprob: -1.6038686037063599
    3. ':return' → logprob: -6.47886848449707
    4. '):' → logprob: -6.97886848449707
    5. '):
' → logprob: -7.22886848449707
    6. '       ' → logprob: -9.22886848449707
    7. '   ' → logprob: -9.47886848449707
    8. '+' → logprob: -10.72886848449707
    9. ' :' → logprob: -11.35386848449707
    10. ')' → logprob: -11.60386848449707

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231375694274902
    2. ' ' → logprob: -0.8981375694274902
    3. '0' → logprob: -11.773138046264648
    4. '   ' → logprob: -12.898138046264648
    5. '  ' → logprob: -13.648138046264648
    6. ' ' → logprob: -14.023138046264648
    7. '-' → logprob: -14.773138046264648
    8. '(' → logprob: -15.398138046264648
    9. '    ' → logprob: -15.398138046264648
    10. 'sys' → logprob: -15.460638046264648

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630738541483879
    2. ' ' → logprob: -3.6513073444366455
    3. '0' → logprob: -12.651307106018066
    4. '   ' → logprob: -13.401307106018066
    5. '-' → logprob: -14.151307106018066
    6. ' ' → logprob: -14.776307106018066
    7. '  ' → logprob: -14.776307106018066
    8. '(' → logprob: -15.276307106018066
    9. '```' → logprob: -16.088808059692383
    10. 'sys' → logprob: -16.276308059692383

Token 177: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.246537173457909e-06
    2. '-' → logprob: -12.375003814697266
    3. '-e' → logprob: -18.500003814697266
    4. ':' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '0' → logprob: -19.625003814697266
    7. '.' → logprob: -20.125003814697266
    8. 'E' → logprob: -20.250003814697266
    9. '.e' → logprob: -21.000003814697266
    10. '1' → logprob: -21.125003814697266

Token 178: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -16.5
    3. '```' → logprob: -16.5
    4. '9' → logprob: -16.75
    5. '6' → logprob: -17.25
    6. '^-' → logprob: -17.875
    7. '7' → logprob: -18.125
    8. '−' → logprob: -18.625
    9. '{-' → logprob: -18.875
    10. '3' → logprob: -19.0

Token 179: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.17352814972400665
    2. '8' → logprob: -2.2985281944274902
    3. '7' → logprob: -3.2985281944274902
    4. '10' → logprob: -4.17352819442749
    5. '12' → logprob: -5.42352819442749
    6. '6' → logprob: -6.17352819442749
    7. '14' → logprob: -10.173527717590332
    8. '-' → logprob: -11.673527717590332
    9. '5' → logprob: -12.173527717590332
    10. '09' → logprob: -12.173527717590332

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028304647654294968
    2. ':
' → logprob: -3.6533045768737793
    3. ':return' → logprob: -6.403304576873779
    4. '):' → logprob: -8.403305053710938
    5. '):
' → logprob: -9.653305053710938
    6. '       ' → logprob: -10.403305053710938
    7. ' :' → logprob: -11.153305053710938
    8. '   ' → logprob: -12.528305053710938
    9. ' :
' → logprob: -12.903305053710938
    10. '<|end|>' → logprob: -13.153305053710938

Token 181: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5887393355369568
    2. '           ' → logprob: -0.8387393355369568
    3. ' return' → logprob: -4.713739395141602
    4. 'return' → logprob: -5.713739395141602
    5. '
' → logprob: -8.213739395141602
    6. '   ' → logprob: -9.088739395141602
    7. '               ' → logprob: -11.088739395141602
    8. '        
' → logprob: -11.213739395141602
    9. '          ' → logprob: -12.088739395141602
    10. '	       ' → logprob: -12.463739395141602

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051399145275354385
    2. ' return' → logprob: -3.0513992309570312
    3. '           ' → logprob: -6.426399230957031
    4. '               ' → logprob: -7.176399230957031
    5. '       ' → logprob: -8.176399230957031
    6. '
' → logprob: -9.426399230957031
    7. '   ' → logprob: -10.176399230957031
    8. '	return' → logprob: -10.676399230957031
    9. ':return' → logprob: -14.051399230957031
    10. ' ' → logprob: -14.676399230957031

Token 183: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -21.25009536743164
    4. 'True' → logprob: -23.00009536743164
    5. '=False' → logprob: -23.25009536743164
    6. 'false' → logprob: -23.75009536743164
    7. 'None' → logprob: -24.50009536743164
    8. '_false' → logprob: -24.50009536743164
    9. '```' → logprob: -25.00009536743164
    10. 'F' → logprob: -25.25009536743164

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04506547376513481
    2. '
' → logprob: -3.795065402984619
    3. ' return' → logprob: -4.920065402984619
    4. '    
' → logprob: -5.045065402984619
    5. 'return' → logprob: -5.170065402984619
    6. '  
' → logprob: -7.045065402984619
    7. '	return' → logprob: -7.420065402984619
    8. '       ' → logprob: -9.295065879821777
    9. '   
' → logprob: -9.295065879821777
    10. '        
' → logprob: -9.295065879821777

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01341455802321434
    2. 'return' → logprob: -4.63841438293457
    3. '
' → logprob: -6.26341438293457
    4. ' return' → logprob: -6.88841438293457
    5. '    
' → logprob: -7.63841438293457
    6. '	return' → logprob: -9.01341438293457
    7. '       ' → logprob: -10.26341438293457
    8. '  
' → logprob: -10.76341438293457
    9. ')' → logprob: -11.01341438293457
    10. '        
' → logprob: -11.63841438293457

Token 186: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03029327280819416
    2. ' return' → logprob: -3.9052932262420654
    3. '   ' → logprob: -4.6552934646606445
    4. '	return' → logprob: -9.405293464660645
    5. '
' → logprob: -9.655293464660645
    6. '    
' → logprob: -10.780293464660645
    7. ' ' → logprob: -12.030293464660645
    8. 'eturn' → logprob: -12.405293464660645
    9. ')return' → logprob: -12.780293464660645
    10. '  
' → logprob: -12.780293464660645

Token 187: ' Now' (ID: 6549)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08397537469863892
    2. 'for' → logprob: -2.833975315093994
    3. ' return' → logprob: -4.083975315093994
    4. '   ' → logprob: -5.958975315093994
    5. ' for' → logprob: -6.333975315093994
    6. '#' → logprob: -7.583975315093994
    7. 'import' → logprob: -11.083975791931152
    8. '
' → logprob: -11.583975791931152
    9. 'from' → logprob: -11.583975791931152
    10. 'if' → logprob: -12.333975791931152

Token 188: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46463286876678467
    2. ' for' → logprob: -1.0896328687667847
    3. 'for' → logprob: -3.839632987976074
    4. ',' → logprob: -4.964632987976074
    5. ' return' → logprob: -5.589632987976074
    6. 'return' → logprob: -6.839632987976074
    7. '#' → logprob: -7.214632987976074
    8. 'import' → logprob: -8.089632987976074
    9. 'def' → logprob: -8.839632987976074
    10. '
' → logprob: -8.839632987976074

Token 189: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.392631858587265
    2. 'for' → logprob: -1.7676318883895874
    3. '   ' → logprob: -3.017631769180298
    4. ' all' → logprob: -3.267631769180298
    5. ' pairs' → logprob: -3.392631769180298
    6. ' if' → logprob: -4.767632007598877
    7. 'pairs' → logprob: -5.017632007598877
    8. 'all' → logprob: -5.642632007598877
    9. ' distances' → logprob: -5.642632007598877
    10. ' pair' → logprob: -6.267632007598877

Token 190: ' rope' (ID: 56427)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5795547962188721
    2. ' i' → logprob: -0.8295547962188721
    3. ' pairs' → logprob: -6.454554557800293
    4. ' all' → logprob: -6.704554557800293
    5. ' for' → logprob: -7.829554557800293
    6. ' range' → logprob: -9.329554557800293
    7. ' ' → logprob: -9.454554557800293
    8. ' j' → logprob: -9.829554557800293
    9. 'for' → logprob: -10.079554557800293
    10. 'pairs' → logprob: -10.329554557800293

Token 191: ' crossing' (ID: 50946)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.6981753706932068
    2. 's' → logprob: -0.9481753706932068
    3. ' length' → logprob: -2.8231754302978516
    4. 'length' → logprob: -2.9481754302978516
    5. 'i' → logprob: -7.198175430297852
    6. '[i' → logprob: -7.573175430297852
    7. ' pairs' → logprob: -7.948175430297852
    8. ' distances' → logprob: -8.198175430297852
    9. ' s' → logprob: -8.323175430297852
    10. ' combinations' → logprob: -8.823175430297852

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16923291981220245
    2. ' for' → logprob: -1.919232964515686
    3. 'for' → logprob: -4.7942328453063965
    4. '<|end|>' → logprob: -8.294233322143555
    5. '    
' → logprob: -8.669233322143555
    6. '
' → logprob: -8.919233322143555
    7. '	for' → logprob: -10.419233322143555
    8. ',' → logprob: -10.544233322143555
    9. '<|end|>' → logprob: -10.919233322143555
    10. 'import' → logprob: -11.669233322143555

Token 193: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40370455384254456
    2. '   ' → logprob: -1.1537045240402222
    3. 'for' → logprob: -4.153704643249512
    4. '
' → logprob: -7.653704643249512
    5. '<|end|>' → logprob: -8.903704643249512
    6. ',' → logprob: -9.153704643249512
    7. '    
' → logprob: -9.403704643249512
    8. ' ' → logprob: -10.528704643249512
    9. ':' → logprob: -10.778704643249512
    10. '	for' → logprob: -11.153704643249512

Token 194: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3884154260158539
    2. 'for' → logprob: -1.1384154558181763
    3. '   ' → logprob: -6.513415336608887
    4. '
' → logprob: -11.763415336608887
    5. '	for' → logprob: -11.763415336608887
    6. '<|end|>' → logprob: -11.763415336608887
    7. 'from' → logprob: -11.888415336608887
    8. 'return' → logprob: -11.888415336608887
    9. 'import' → logprob: -12.638415336608887
    10. 'n' → logprob: -12.888415336608887

Token 195: ' Each' (ID: 11555)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3868895173072815
    2. ' for' → logprob: -1.1368894577026367
    3. 'from' → logprob: -11.636889457702637
    4. 'import' → logprob: -12.761889457702637
    5. '   ' → logprob: -12.886889457702637
    6. ' from' → logprob: -14.011889457702637
    7. 'For' → logprob: -14.011889457702637
    8. '```' → logprob: -14.386889457702637
    9. 'n' → logprob: -14.636889457702637
    10. 'return' → logprob: -14.761889457702637

Token 196: ' rope' (ID: 56427)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1527613401412964
    2. ' for' → logprob: -1.2777613401412964
    3. ' i' → logprob: -1.5277613401412964
    4. 'for' → logprob: -2.402761459350586
    5. ' pair' → logprob: -2.402761459350586
    6. 'pair' → logprob: -5.777761459350586
    7. 'import' → logprob: -6.777761459350586
    8. '   ' → logprob: -6.902761459350586
    9. 'def' → logprob: -7.527761459350586
    10. ',' → logprob: -8.902761459350586

Token 197: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5881715416908264
    2. ' for' → logprob: -2.2131714820861816
    3. 'i' → logprob: -2.4631714820861816
    4. ' connects' → logprob: -2.8381714820861816
    5. 's' → logprob: -3.0881714820861816
    6. ' must' → logprob: -3.8381714820861816
    7. 'def' → logprob: -3.9631714820861816
    8. '   ' → logprob: -4.213171482086182
    9. ' i' → logprob: -4.588171482086182
    10. ' should' → logprob: -4.588171482086182

Token 198: ' modeled' (ID: 113888)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.7013458013534546
    2. '(' → logprob: -2.076345920562744
    3. ' represented' → logprob: -2.201345920562744
    4. '((' → logprob: -2.451345920562744
    5. 'anch' → logprob: -2.451345920562744
    6. ' anchored' → logprob: -2.451345920562744
    7. ' tether' → logprob: -2.951345920562744
    8. 'a' → logprob: -2.951345920562744
    9. 'connected' → logprob: -3.076345920562744
    10. ' (' → logprob: -3.326345920562744

Token 199: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5759854316711426
    2. 'as' → logprob: -0.8259854316711426
    3. '<|end|>' → logprob: -10.700984954833984
    4. 'def' → logprob: -11.825984954833984
    5. 'for' → logprob: -13.200984954833984
    6. 'import' → logprob: -13.200984954833984
    7. ' by' → logprob: -13.200984954833984
    8. 'by' → logprob: -13.575984954833984
    9. '	as' → logprob: -13.575984954833984
    10. ',' → logprob: -13.700984954833984

Token 200: ' segment' (ID: 14806)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0908355563879013
    2. ' a' → logprob: -2.8408355712890625
    3. 'line' → logprob: -3.8408355712890625
    4. ' line' → logprob: -6.2158355712890625
    5. 'segment' → logprob: -6.2158355712890625
    6. ' segment' → logprob: -7.5908355712890625
    7. '(a' → logprob: -7.7158355712890625
    8. '((' → logprob: -7.7158355712890625
    9. '(line' → logprob: -7.8408355712890625
    10. '(' → logprob: -7.9658355712890625

Token 201: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2841264009475708
    2. 'from' → logprob: -1.4091264009475708
    3. ' from' → logprob: -1.7841264009475708
    4. ' between' → logprob: -2.0341262817382812
    5. '(points' → logprob: -2.2841262817382812
    6. '(' → logprob: -3.5341262817382812
    7. 'points' → logprob: -4.659126281738281
    8. ' (' → logprob: -4.909126281738281
    9. '[(' → logprob: -5.034126281738281
    10. ' points' → logprob: -5.159126281738281

Token 202: ' anchor' (ID: 31067)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015076172538101673
    2. ' (' → logprob: -4.265076160430908
    3. 'points' → logprob: -7.390076160430908
    4. ' points' → logprob: -9.140076637268066
    5. 'origin' → logprob: -9.765076637268066
    6. 'anchors' → logprob: -10.015076637268066
    7. '(points' → logprob: -10.390076637268066
    8. ' origin' → logprob: -10.890076637268066
    9. 'anchor' → logprob: -11.765076637268066
    10. ' anchors' → logprob: -11.890076637268066

Token 203: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13200993835926056
    2. ' (' → logprob: -2.882009983062744
    3. 'to' → logprob: -3.132009983062744
    4. '(' → logprob: -4.257009983062744
    5. ' at' → logprob: -5.507009983062744
    6. '[' → logprob: -6.632009983062744
    7. ' =' → logprob: -6.632009983062744
    8. 's' → logprob: -7.257009983062744
    9. '=' → logprob: -7.757009983062744
    10. '=(' → logprob: -8.132009506225586

Token 204: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3156334459781647
    2. 'x' → logprob: -2.315633535385132
    3. '(' → logprob: -2.440633535385132
    4. ' (' → logprob: -3.315633535385132
    5. 'anchors' → logprob: -3.690633535385132
    6. '(x' → logprob: -4.440633296966553
    7. ' ' → logprob: -5.940633296966553
    8. ' x' → logprob: -6.065633296966553
    9. ' anchors' → logprob: -6.065633296966553
    10. ',' → logprob: -6.315633296966553

Token 205: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1818930208683014
    2. ',' → logprob: -1.806892991065979
    3. '0' → logprob: -6.3068928718566895
    4. ' ,' → logprob: -9.181893348693848
    5. ')' → logprob: -9.431893348693848
    6. '[' → logprob: -10.306893348693848
    7. '=' → logprob: -11.306893348693848
    8. ',x' → logprob: -11.431893348693848
    9. '```' → logprob: -11.431893348693848
    10. 'y' → logprob: -11.556893348693848

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004830122925341129
    2. '0' → logprob: -5.629830360412598
    3. ')' → logprob: -7.254830360412598
    4. ' ,' → logprob: -7.754830360412598
    5. '```' → logprob: -11.254830360412598
    6. '+' → logprob: -11.379830360412598
    7. '),' → logprob: -11.442330360412598
    8. '-' → logprob: -11.692330360412598
    9. ',z' → logprob: -12.254830360412598
    10. 'h' → logprob: -12.254830360412598

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019822833128273487
    2. ',' → logprob: -6.87698221206665
    3. ' ' → logprob: -7.00198221206665
    4. ')' → logprob: -11.126982688903809
    5. '
' → logprob: -11.751982688903809
    6. ' ,' → logprob: -12.376982688903809
    7. 'anchors' → logprob: -13.251982688903809
    8. 'anchor' → logprob: -13.314482688903809
    9. '

' → logprob: -13.626982688903809
    10. '```' → logprob: -13.814482688903809

Token 208: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.88418151892256e-05
    2. ' )' → logprob: -10.250059127807617
    3. ')
' → logprob: -11.000059127807617
    4. ' to' → logprob: -12.625059127807617
    5. 'to' → logprob: -13.750059127807617
    6. ')

' → logprob: -14.125059127807617
    7. 'def' → logprob: -14.500059127807617
    8. '),' → logprob: -15.125059127807617
    9. '')' → logprob: -15.625059127807617
    10. '   ' → logprob: -16.500059127807617

Token 209: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.01366388238966465
    2. 'to' → logprob: -4.8886637687683105
    3. ')' → logprob: -5.1386637687683105
    4. '<|end|>' → logprob: -10.138664245605469
    5. ' ' → logprob: -10.263664245605469
    6. '#' → logprob: -10.388664245605469
    7. '   ' → logprob: -10.763664245605469
    8. ' for' → logprob: -11.263664245605469
    9. ' )' → logprob: -11.263664245605469
    10. ',' → logprob: -11.763664245605469

Token 210: ' balloon' (ID: 63124)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14311784505844116
    2. ' (' → logprob: -2.018117904663086
    3. ' point' → logprob: -8.768117904663086
    4. 'points' → logprob: -9.018117904663086
    5. 'point' → logprob: -9.393117904663086
    6. ' points' → logprob: -9.643117904663086
    7. ' ' → logprob: -11.643117904663086
    8. '0' → logprob: -12.143117904663086
    9. '(points' → logprob: -13.768117904663086
    10. '[' → logprob: -15.018117904663086

Token 211: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11753148585557938
    2. ' (' → logprob: -2.6175315380096436
    3. ' at' → logprob: -3.7425315380096436
    4. 'point' → logprob: -4.7425312995910645
    5. ' point' → logprob: -6.1175312995910645
    6. '_point' → logprob: -6.9925312995910645
    7. 's' → logprob: -7.2425312995910645
    8. 'at' → logprob: -7.7425312995910645
    9. 'points' → logprob: -7.8675312995910645
    10. '_points' → logprob: -8.117531776428223

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5188130736351013
    2. '(' → logprob: -1.018813133239746
    3. ' (' → logprob: -3.393813133239746
    4. ' ' → logprob: -4.643813133239746
    5. ',' → logprob: -8.143813133239746
    6. ')' → logprob: -9.143813133239746
    7. '
' → logprob: -10.018813133239746
    8. '   ' → logprob: -10.643813133239746
    9. 'points' → logprob: -10.768813133239746
    10. '(points' → logprob: -11.518813133239746

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.75002384185791
    3. '0' → logprob: -14.25002384185791
    4. '```' → logprob: -14.75002384185791
    5. ',h' → logprob: -15.00002384185791
    6. ')' → logprob: -15.75002384185791
    7. ',
' → logprob: -16.125022888183594
    8. ',height' → logprob: -16.250022888183594
    9. '<|end|>' → logprob: -16.500022888183594
    10. ',float' → logprob: -17.625022888183594

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.954393079970032e-05
    2. 'h' → logprob: -10.625049591064453
    3. ' ' → logprob: -10.625049591064453
    4. ',' → logprob: -14.125049591064453
    5. ' h' → logprob: -16.250049591064453
    6. 'y' → logprob: -16.875049591064453
    7. '<|end|>' → logprob: -16.875049591064453
    8. ',h' → logprob: -17.500049591064453
    9. '```' → logprob: -17.875049591064453
    10. ')' → logprob: -18.000049591064453

Token 215: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.0007486367831006646
    2. ',' → logprob: -7.250748634338379
    3. ' ,' → logprob: -10.875748634338379
    4. 'h' → logprob: -11.500748634338379
    5. '```' → logprob: -13.875748634338379
    6. ',
' → logprob: -14.000748634338379
    7. ',height' → logprob: -14.125748634338379
    8. '

' → logprob: -14.375748634338379
    9. ',n' → logprob: -14.625748634338379
    10. '<h' → logprob: -14.625748634338379

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008340691216289997
    2. ')
' → logprob: -4.883340835571289
    3. ').' → logprob: -8.133340835571289
    4. '   ' → logprob: -8.508340835571289
    5. '):' → logprob: -9.133340835571289
    6. ')

' → logprob: -10.258340835571289
    7. '):
' → logprob: -10.383340835571289
    8. '),' → logprob: -10.883340835571289
    9. ' )' → logprob: -10.883340835571289
    10. '#' → logprob: -12.383340835571289

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002528575947508216
    2. '
' → logprob: -6.752528667449951
    3. '    
' → logprob: -7.627528667449951
    4. ' for' → logprob: -7.752528667449951
    5. '<|end|>' → logprob: -8.752528190612793
    6. 'for' → logprob: -9.377528190612793
    7. '  
' → logprob: -9.877528190612793
    8. ')' → logprob: -10.252528190612793
    9. '<|end|>' → logprob: -10.252528190612793
    10. ',' → logprob: -10.627528190612793

Token 218: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3880884647369385
    2. ' for' → logprob: -1.2630884647369385
    3. 'for' → logprob: -3.2630884647369385
    4. '
' → logprob: -8.26308822631836
    5. '    
' → logprob: -9.38808822631836
    6. '	for' → logprob: -9.63808822631836
    7. '  
' → logprob: -10.26308822631836
    8. ' ' → logprob: -10.38808822631836
    9. 'import' → logprob: -10.88808822631836
    10. '  ' → logprob: -10.88808822631836

Token 219: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3174208104610443
    2. ' for' → logprob: -1.3174208402633667
    3. '   ' → logprob: -5.567420959472656
    4. 'n' → logprob: -9.192420959472656
    5. ' n' → logprob: -9.692420959472656
    6. 'from' → logprob: -10.192420959472656
    7. '#' → logprob: -10.567420959472656
    8. 'return' → logprob: -10.942420959472656
    9. 'For' → logprob: -11.067420959472656
    10. ' m' → logprob: -11.192420959472656

Token 220: ' no' (ID: 860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2811833918094635
    2. ' i' → logprob: -1.4061833620071411
    3. 'j' → logprob: -11.156183242797852
    4. '```' → logprob: -12.281183242797852
    5. ' j' → logprob: -12.531183242797852
    6. ' ' → logprob: -12.906183242797852
    7. '	i' → logprob: -13.531183242797852
    8. '   ' → logprob: -13.531183242797852
    9. 'a' → logprob: -13.656183242797852
    10. '
' → logprob: -14.031183242797852

Token 221: ' crossing' (ID: 50946)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2261602282524109
    2. 'i' → logprob: -1.6011602878570557
    3. ' rope' → logprob: -8.351160049438477
    4. ' ' → logprob: -8.476160049438477
    5. ' pair' → logprob: -9.226160049438477
    6. ' two' → logprob: -10.476160049438477
    7. 'rope' → logprob: -10.601160049438477
    8. '   ' → logprob: -10.601160049438477
    9. ' pairs' → logprob: -10.851160049438477
    10. '    ' → logprob: -11.351160049438477

Token 222: ':' (ID: 25)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8745017051696777
    2. ',' → logprob: -1.3745017051696777
    3. ' in' → logprob: -1.8745017051696777
    4. 'i' → logprob: -2.4995017051696777
    5. ' for' → logprob: -3.6245017051696777
    6. ' pairs' → logprob: -3.8745017051696777
    7. ' ,' → logprob: -4.249501705169678
    8. 'for' → logprob: -4.999501705169678
    9. ':' → logprob: -5.249501705169678
    10. ',i' → logprob: -5.374501705169678

Token 223: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.128402978181839
    2. 'for' → logprob: -2.1284029483795166
    3. '   ' → logprob: -7.003403186798096
    4. ' n' → logprob: -8.128402709960938
    5. 'n' → logprob: -8.628402709960938
    6. 'import' → logprob: -10.378402709960938
    7. '```' → logprob: -11.003402709960938
    8. '    ' → logprob: -12.128402709960938
    9. ' ' → logprob: -12.128402709960938
    10. ' import' → logprob: -12.628402709960938

Token 224: ' any' (ID: 1062)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.044000476598739624
    2. 'i' → logprob: -3.1690003871917725
    3. ' all' → logprob: -7.044000625610352
    4. ' ' → logprob: -10.044000625610352
    5. 'all' → logprob: -10.419000625610352
    6. ' j' → logprob: -10.794000625610352
    7. ' each' → logprob: -11.169000625610352
    8. ' every' → logprob: -12.419000625610352
    9. 'each' → logprob: -12.669000625610352
    10. '   ' → logprob: -13.294000625610352

Token 225: ' two' (ID: 1920)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03156926855444908
    2. 'i' → logprob: -3.531569242477417
    3. ' pair' → logprob: -6.531569480895996
    4. ' ' → logprob: -8.656569480895996
    5. ' two' → logprob: -9.406569480895996
    6. ' pairs' → logprob: -10.031569480895996
    7. 'pair' → logprob: -11.031569480895996
    8. '   ' → logprob: -11.656569480895996
    9. '	i' → logprob: -11.906569480895996
    10. '  ' → logprob: -12.406569480895996

Token 226: ' ropes' (ID: 110596)
  Prédit: ' ropes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ropes' → logprob: -0.02427840419113636
    2. 'i' → logprob: -4.89927864074707
    3. ' i' → logprob: -5.14927864074707
    4. 'rop' → logprob: -5.27427864074707
    5. ' segments' → logprob: -6.77427864074707
    6. ' distinct' → logprob: -7.02427864074707
    7. '   ' → logprob: -7.64927864074707
    8. 'rope' → logprob: -7.64927864074707
    9. ' different' → logprob: -7.77427864074707
    10. ' rope' → logprob: -7.89927864074707

Token 227: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18957053124904633
    2. ',' → logprob: -2.564570426940918
    3. 'i' → logprob: -2.814570426940918
    4. ' ,' → logprob: -3.814570426940918
    5. ',i' → logprob: -4.939570426940918
    6. '   ' → logprob: -5.689570426940918
    7. ' (' → logprob: -6.564570426940918
    8. ' in' → logprob: -7.689570426940918
    9. '(i' → logprob: -7.689570426940918
    10. ' ' → logprob: -7.814570426940918

Token 228: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5829991698265076
    2. 'for' → logprob: -1.0829992294311523
    3. ' i' → logprob: -2.8329992294311523
    4. 'i' → logprob: -3.7079992294311523
    5. '   ' → logprob: -4.707999229431152
    6. ' the' → logprob: -5.707999229431152
    7. ' (' → logprob: -6.457999229431152
    8. ' their' → logprob: -6.457999229431152
    9. 'import' → logprob: -6.957999229431152
    10. 'def' → logprob: -7.457999229431152

Token 229: ' projection' (ID: 41244)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.626941442489624
    2. 'def' → logprob: -2.126941442489624
    3. 'line' → logprob: -2.501941442489624
    4. 'angle' → logprob: -2.751941442489624
    5. ' segments' → logprob: -2.751941442489624
    6. 'distance' → logprob: -2.751941442489624
    7. ' vectors' → logprob: -2.876941442489624
    8. ' angle' → logprob: -3.001941442489624
    9. 'segments' → logprob: -3.126941442489624
    10. 'vectors' → logprob: -3.876941442489624

Token 230: ' to' (ID: 316)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.31802743673324585
    2. ' onto' → logprob: -1.8180274963378906
    3. ' of' → logprob: -2.6930274963378906
    4. 'on' → logprob: -3.8180274963378906
    5. 's' → logprob: -4.568027496337891
    6. ' must' → logprob: -6.443027496337891
    7. '   ' → logprob: -6.568027496337891
    8. ' to' → logprob: -6.943027496337891
    9. ' lengths' → logprob: -7.193027496337891
    10. 'onto' → logprob: -7.193027496337891

Token 231: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.09604304283857346
    2. ' xy' → logprob: -2.846043109893799
    3. 'the' → logprob: -4.096043109893799
    4. ' the' → logprob: -4.721043109893799
    5. 'XY' → logprob: -5.846043109893799
    6. ' plane' → logprob: -5.846043109893799
    7. ' XY' → logprob: -7.096043109893799
    8. ' ' → logprob: -7.971043109893799
    9. 'plane' → logprob: -8.09604263305664
    10. '_xy' → logprob: -8.34604263305664

Token 232: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.9169600605964661
    2. '-plane' → logprob: -1.0419600009918213
    3. ' plane' → logprob: -1.4169600009918213
    4. '_plane' → logprob: -5.2919602394104
    5. 'Plane' → logprob: -11.791959762573242
    6. '   ' → logprob: -11.916959762573242
    7. '```' → logprob: -12.916959762573242
    8. '
' → logprob: -13.791959762573242
    9. 'plan' → logprob: -13.791959762573242
    10. '#' → logprob: -14.166959762573242

Token 233: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.833415687084198
    2. ' should' → logprob: -0.958415687084198
    3. 'should' → logprob: -2.0834157466888428
    4. 'must' → logprob: -3.3334157466888428
    5. '   ' → logprob: -4.833415508270264
    6. ' does' → logprob: -6.208415508270264
    7. ' is' → logprob: -6.708415508270264
    8. 'def' → logprob: -6.833415508270264
    9. 'do' → logprob: -7.333415508270264
    10. ' of' → logprob: -7.333415508270264

Token 234: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.055223122239112854
    2. 'not' → logprob: -3.305223226547241
    3. ' have' → logprob: -4.930222988128662
    4. ' be' → logprob: -5.305222988128662
    5. 'n't' → logprob: -6.180222988128662
    6. 'have' → logprob: -6.555222988128662
    7. ' intersect' → logprob: -7.430222988128662
    8. 'be' → logprob: -8.30522346496582
    9. ' satisfy' → logprob: -9.30522346496582
    10. 'inter' → logprob: -9.30522346496582

Token 235: ' cross' (ID: 8088)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.8509257435798645
    2. ' intersect' → logprob: -1.4759256839752197
    3. 'inter' → logprob: -2.1009256839752197
    4. ' have' → logprob: -2.2259256839752197
    5. 'have' → logprob: -3.2259256839752197
    6. 'over' → logprob: -3.2259256839752197
    7. ' cross' → logprob: -4.225925922393799
    8. 'cross' → logprob: -4.975925922393799
    9. ' share' → logprob: -5.350925922393799
    10. ' be' → logprob: -6.100925922393799

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027255123481154442
    2. '
' → logprob: -4.027255058288574
    3. '    
' → logprob: -5.652255058288574
    4. ' for' → logprob: -6.152255058288574
    5. ',' → logprob: -7.152255058288574
    6. '<|end|>' → logprob: -7.152255058288574
    7. '  
' → logprob: -7.652255058288574
    8. '       ' → logprob: -7.902255058288574
    9. 'for' → logprob: -8.902255058288574
    10. '  ' → logprob: -9.152255058288574

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043829824426211417
    2. '<|end|>' → logprob: -8.625438690185547
    3. ' for' → logprob: -9.500438690185547
    4. '    
' → logprob: -9.625438690185547
    5. '
' → logprob: -10.500438690185547
    6. ',' → logprob: -10.750438690185547
    7. '       ' → logprob: -10.875438690185547
    8. ')' → logprob: -11.500438690185547
    9. '<|end|>' → logprob: -11.750438690185547
    10. 'import' → logprob: -12.250438690185547

Token 238: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20451895892620087
    2. '   ' → logprob: -1.9545189142227173
    3. 'for' → logprob: -3.204519033432007
    4. ' n' → logprob: -6.579518795013428
    5. 'n' → logprob: -7.579518795013428
    6. '
' → logprob: -7.579518795013428
    7. '    
' → logprob: -9.454519271850586
    8. 'import' → logprob: -10.079519271850586
    9. '    ' → logprob: -10.204519271850586
    10. ' 
' → logprob: -10.329519271850586

Token 239: ' because' (ID: 2236)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16486036777496338
    2. 'for' → logprob: -1.9148603677749634
    3. '   ' → logprob: -5.664860248565674
    4. ' m' → logprob: -7.789860248565674
    5. ' n' → logprob: -7.914860248565674
    6. 'n' → logprob: -9.664860725402832
    7. 'import' → logprob: -9.789860725402832
    8. ' from' → logprob: -9.914860725402832
    9. 'from' → logprob: -10.164860725402832
    10. ' def' → logprob: -10.414860725402832

Token 240: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.17957837879657745
    2. 'all' → logprob: -1.929578423500061
    3. 'the' → logprob: -5.0545783042907715
    4. ' the' → logprob: -5.1795783042907715
    5. 'they' → logprob: -6.6795783042907715
    6. 'anchors' → logprob: -6.8045783042907715
    7. ' ropes' → logprob: -7.0545783042907715
    8. ' they' → logprob: -7.0545783042907715
    9. ' both' → logprob: -7.1795783042907715
    10. 'ball' → logprob: -7.8045783042907715

Token 241: ' ropes' (ID: 110596)
  Prédit: ' ropes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ropes' → logprob: -1.2409205436706543
    2. 'anchors' → logprob: -1.6159205436706543
    3. 'rop' → logprob: -1.9909205436706543
    4. 'ball' → logprob: -2.1159205436706543
    5. 'anchor' → logprob: -2.8659205436706543
    6. ' anchors' → logprob: -3.4909205436706543
    7. 'def' → logprob: -3.6159205436706543
    8. ' balloons' → logprob: -3.9909205436706543
    9. 'rope' → logprob: -4.240920543670654
    10. 'anch' → logprob: -4.365920543670654

Token 242: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7338935732841492
    2. ' lie' → logprob: -0.7338935732841492
    3. ' originate' → logprob: -4.733893394470215
    4. ' all' → logprob: -5.108893394470215
    5. 'are' → logprob: -5.733893394470215
    6. ' start' → logprob: -5.858893394470215
    7. '#' → logprob: -6.358893394470215
    8. ' cannot' → logprob: -6.358893394470215
    9. ' only' → logprob: -6.483893394470215
    10. '   ' → logprob: -6.733893394470215

Token 243: ' straight' (ID: 10230)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.135011076927185
    2. 'all' → logprob: -1.260011076927185
    3. ' anchored' → logprob: -2.3850111961364746
    4. 'rad' → logprob: -2.7600111961364746
    5. 'lines' → logprob: -3.3850111961364746
    6. 'anch' → logprob: -3.5100111961364746
    7. 'vertical' → logprob: -3.7600111961364746
    8. ' attached' → logprob: -4.010011196136475
    9. 'straight' → logprob: -4.135011196136475
    10. ' straight' → logprob: -4.135011196136475

Token 244: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014820287935435772
    2. ' for' → logprob: -4.764820098876953
    3. '
' → logprob: -5.639820098876953
    4. '    
' → logprob: -7.014820098876953
    5. 'for' → logprob: -7.639820098876953
    6. 'import' → logprob: -7.764820098876953
    7. '<|end|>' → logprob: -7.889820098876953
    8. '  
' → logprob: -9.139820098876953
    9. ',' → logprob: -9.764820098876953
    10. '<|end|>' → logprob: -10.139820098876953

Token 245: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005987455137073994
    2. ' for' → logprob: -5.380987644195557
    3. '<|end|>' → logprob: -8.005987167358398
    4. ',' → logprob: -8.255987167358398
    5. '
' → logprob: -8.380987167358398
    6. 'import' → logprob: -9.005987167358398
    7. 'for' → logprob: -9.130987167358398
    8. '    
' → logprob: -9.255987167358398
    9. ' and' → logprob: -9.755987167358398
    10. '<|end|>' → logprob: -10.255987167358398

Token 246: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017639413475990295
    2. ' for' → logprob: -5.142639636993408
    3. '       ' → logprob: -5.517639636993408
    4. ',' → logprob: -5.767639636993408
    5. ' in' → logprob: -6.142639636993408
    6. 'for' → logprob: -7.517639636993408
    7. 'import' → logprob: -7.767639636993408
    8. ' and' → logprob: -8.01763916015625
    9. ' ' → logprob: -8.64263916015625
    10. '
' → logprob: -9.14263916015625

Token 247: 'D' (ID: 35)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0377867221832275
    2. '   ' → logprob: -1.2877867221832275
    3. 'def' → logprob: -2.7877867221832275
    4. ',' → logprob: -3.2877867221832275
    5. ' and' → logprob: -3.5377867221832275
    6. 'from' → logprob: -3.6627867221832275
    7. '<|end|>' → logprob: -3.6627867221832275
    8. ')' → logprob: -3.7877867221832275
    9. ' lines' → logprob: -3.7877867221832275
    10. 'D' → logprob: -3.9127867221832275

Token 248: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14046038687229156
    2. ' vectors' → logprob: -3.64046049118042
    3. ' for' → logprob: -3.89046049118042
    4. ' lines' → logprob: -4.14046049118042
    5. 'for' → logprob: -4.26546049118042
    6. '    
' → logprob: -5.14046049118042
    7. 'vectors' → logprob: -5.14046049118042
    8. 'def' → logprob: -5.26546049118042
    9. ',' → logprob: -5.26546049118042
    10. ' plane' → logprob: -5.39046049118042

Token 249: ' anchor' (ID: 31067)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8542402386665344
    2. 'anchor' → logprob: -1.1042401790618896
    3. 'anchors' → logprob: -1.9792401790618896
    4. '(anchor' → logprob: -2.8542401790618896
    5. ' anchor' → logprob: -4.354240417480469
    6. ' anchors' → logprob: -4.354240417480469
    7. ' (' → logprob: -4.854240417480469
    8. '(x' → logprob: -5.479240417480469
    9. 'ball' → logprob: -5.729240417480469
    10. 'the' → logprob: -6.479240417480469

Token 250: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14494118094444275
    2. 'to' → logprob: -3.0199410915374756
    3. 'points' → logprob: -3.7699410915374756
    4. 's' → logprob: -3.8949410915374756
    5. '(' → logprob: -4.144941329956055
    6. ')' → logprob: -4.894941329956055
    7. ' points' → logprob: -5.269941329956055
    8. '   ' → logprob: -5.394941329956055
    9. ' (' → logprob: -5.644941329956055
    10. '[' → logprob: -7.394941329956055

Token 251: ' balloon' (ID: 63124)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21370172500610352
    2. ' (' → logprob: -2.2137017250061035
    3. 'ball' → logprob: -2.8387017250061035
    4. 'origin' → logprob: -4.4637017250061035
    5. ' origin' → logprob: -4.8387017250061035
    6. ' balloon' → logprob: -5.9637017250061035
    7. 'the' → logprob: -7.3387017250061035
    8. 'h' → logprob: -8.338701248168945
    9. ' the' → logprob: -8.463701248168945
    10. ' ' → logprob: -8.463701248168945

Token 252: ' above' (ID: 5151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004573599901050329
    2. ' for' → logprob: -5.504573822021484
    3. 'for' → logprob: -8.754573822021484
    4. '    
' → logprob: -8.879573822021484
    5. '<|end|>' → logprob: -10.129573822021484
    6. '
' → logprob: -10.254573822021484
    7. '  
' → logprob: -10.379573822021484
    8. 'import' → logprob: -10.879573822021484
    9. '       ' → logprob: -11.004573822021484
    10. ',' → logprob: -11.379573822021484

Token 253: ' origin' (ID: 12839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005712865851819515
    2. ' for' → logprob: -5.505712985992432
    3. 'for' → logprob: -7.005712985992432
    4. '    
' → logprob: -8.255712509155273
    5. '
' → logprob: -9.130712509155273
    6. '<|end|>' → logprob: -9.255712509155273
    7. ',' → logprob: -9.380712509155273
    8. '.' → logprob: -10.255712509155273
    9. 'def' → logprob: -10.380712509155273
    10. '<|end|>' → logprob: -11.255712509155273

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007439678534865379
    2. ' for' → logprob: -5.382439613342285
    3. 'for' → logprob: -6.382439613342285
    4. '    
' → logprob: -7.507439613342285
    5. '
' → logprob: -8.257439613342285
    6. '  
' → logprob: -9.507439613342285
    7. '<|end|>' → logprob: -10.007439613342285
    8. 'import' → logprob: -10.132439613342285
    9. ')' → logprob: -10.632439613342285
    10. ',' → logprob: -10.757439613342285

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000739707553293556
    2. ' for' → logprob: -7.625739574432373
    3. '    
' → logprob: -9.250740051269531
    4. '
' → logprob: -9.625740051269531
    5. 'for' → logprob: -10.000740051269531
    6. 'import' → logprob: -11.625740051269531
    7. '<|end|>' → logprob: -11.875740051269531
    8. ',' → logprob: -12.000740051269531
    9. '  
' → logprob: -12.000740051269531
    10. '       ' → logprob: -12.375740051269531

Token 256: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10181070864200592
    2. ' for' → logprob: -2.6018106937408447
    3. 'for' → logprob: -3.8518106937408447
    4. ' n' → logprob: -7.101810932159424
    5. 'n' → logprob: -8.601810455322266
    6. '    
' → logprob: -8.976810455322266
    7. 'import' → logprob: -9.476810455322266
    8. '    ' → logprob: -10.101810455322266
    9. 'anchors' → logprob: -10.351810455322266
    10. ' anchors' → logprob: -10.851810455322266

Token 257: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2851153314113617
    2. 'for' → logprob: -1.785115361213684
    3. '   ' → logprob: -2.9101152420043945
    4. ' n' → logprob: -4.4101152420043945
    5. ' anchors' → logprob: -5.2851152420043945
    6. 'anchors' → logprob: -5.2851152420043945
    7. 'n' → logprob: -6.5351152420043945
    8. ' m' → logprob: -7.4101152420043945
    9. ' points' → logprob: -8.410115242004395
    10. 'points' → logprob: -8.535115242004395

Token 258: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7190448045730591
    2. 'for' → logprob: -0.8440448045730591
    3. 'import' → logprob: -3.4690446853637695
    4. '   ' → logprob: -4.4690446853637695
    5. ' continue' → logprob: -4.5940446853637695
    6. ' import' → logprob: -4.9690446853637695
    7. ' need' → logprob: -5.0940446853637695
    8. 'def' → logprob: -5.3440446853637695
    9. ' can' → logprob: -5.3440446853637695
    10. ' have' → logprob: -6.3440446853637695

Token 259: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6314500570297241
    2. ' for' → logprob: -1.0064500570297241
    3. ' all' → logprob: -3.5064501762390137
    4. '   ' → logprob: -3.6314501762390137
    5. ' pairs' → logprob: -4.506450176239014
    6. 'def' → logprob: -5.006450176239014
    7. 'all' → logprob: -5.006450176239014
    8. 'n' → logprob: -5.381450176239014
    9. ' the' → logprob: -5.756450176239014
    10. 'pairs' → logprob: -6.006450176239014

Token 260: ' the' (ID: 290)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7949402928352356
    2. ' the' → logprob: -1.2949402332305908
    3. ' two' → logprob: -1.9199402332305908
    4. 'def' → logprob: -4.04494047164917
    5. 'the' → logprob: -4.04494047164917
    6. 'n' → logprob: -4.29494047164917
    7. 'i' → logprob: -4.66994047164917
    8. ' i' → logprob: -4.79494047164917
    9. ' ropes' → logprob: -4.79494047164917
    10. 'any' → logprob: -4.91994047164917

Token 261: ' lines' (ID: 8698)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36530911922454834
    2. 'anchors' → logprob: -2.490309238433838
    3. ' projections' → logprob: -3.365309238433838
    4. ' lines' → logprob: -3.490309238433838
    5. ' anchors' → logprob: -3.865309238433838
    6. ' two' → logprob: -3.865309238433838
    7. 'lines' → logprob: -4.115309238433838
    8. ' def' → logprob: -4.490309238433838
    9. 'two' → logprob: -4.740309238433838
    10. ' ropes' → logprob: -4.990309238433838

Token 262: ' cross' (ID: 8088)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.168601632118225
    2. 'inter' → logprob: -1.918601632118225
    3. ' segments' → logprob: -2.5436015129089355
    4. ' intersect' → logprob: -2.5436015129089355
    5. 'i' → logprob: -2.6686015129089355
    6. '[i' → logprob: -3.1686015129089355
    7. 'cross' → logprob: -3.2936015129089355
    8. ' cross' → logprob: -3.4186015129089355
    9. ' from' → logprob: -3.4186015129089355
    10. 'def' → logprob: -3.5436015129089355

Token 263: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07625160366296768
    2. ':' → logprob: -3.20125150680542
    3. ' for' → logprob: -3.95125150680542
    4. '
' → logprob: -5.70125150680542
    5. ' in' → logprob: -5.70125150680542
    6. 'for' → logprob: -6.32625150680542
    7. ',' → logprob: -6.70125150680542
    8. ':
' → logprob: -7.32625150680542
    9. '    
' → logprob: -7.32625150680542
    10. 'def' → logprob: -7.70125150680542

Token 264: ' heights' (ID: 57359)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.20990006625652313
    2. 'any' → logprob: -2.459900140762329
    3. ' a' → logprob: -3.834900140762329
    4. ' z' → logprob: -3.959900140762329
    5. ' some' → logprob: -4.08489990234375
    6. 'a' → logprob: -4.20989990234375
    7. 'z' → logprob: -4.70989990234375
    8. 'some' → logprob: -4.95989990234375
    9. 'all' → logprob: -5.20989990234375
    10. ' all' → logprob: -5.20989990234375

Token 265: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9222581386566162
    2. ':' → logprob: -1.6722581386566162
    3. ' in' → logprob: -2.172258138656616
    4. ' or' → logprob: -2.547258138656616
    5. ' ' → logprob: -2.672258138656616
    6. ',' → logprob: -3.672258138656616
    7. ' :' → logprob: -3.672258138656616
    8. '    ' → logprob: -4.172258377075195
    9. '  ' → logprob: -4.297258377075195
    10. '=' → logprob: -4.422258377075195

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023655613767914474
    2. ' ' → logprob: -8.500236511230469
    3. 'anchors' → logprob: -11.375236511230469
    4. '
' → logprob: -12.625236511230469
    5. 'anchor' → logprob: -12.875236511230469
    6. 'import' → logprob: -13.000236511230469
    7. '[' → logprob: -13.125236511230469
    8. 'def' → logprob: -13.125236511230469
    9. '1' → logprob: -13.125236511230469
    10. '```' → logprob: -13.125236511230469

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.44706009957008e-05
    2. 'anchors' → logprob: -10.25008487701416
    3. ' ' → logprob: -10.50008487701416
    4. '1' → logprob: -11.87508487701416
    5. 'anchor' → logprob: -12.12508487701416
    6. ' anchors' → logprob: -13.12508487701416
    7. '
' → logprob: -13.25008487701416
    8. 'def' → logprob: -14.00008487701416
    9. 'min' → logprob: -14.25008487701416
    10. '[' → logprob: -14.37508487701416

Token 268: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47415462136268616
    2. ' and' → logprob: -0.9741545915603638
    3. ' ' → logprob: -10.349154472351074
    4. ',' → logprob: -11.349154472351074
    5. '   ' → logprob: -11.474154472351074
    6. '+' → logprob: -11.599154472351074
    7. '```' → logprob: -11.974154472351074
    8. '0' → logprob: -13.224154472351074
    9. ')' → logprob: -13.849154472351074
    10. '
' → logprob: -14.349154472351074

Token 269: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0015585471410304308
    2. ' h' → logprob: -6.626558780670166
    3. '1' → logprob: -8.376558303833008
    4. ' ' → logprob: -14.126558303833008
    5. '```' → logprob: -14.376558303833008
    6. '   ' → logprob: -14.501558303833008
    7. '<h' → logprob: -15.751558303833008
    8. '
' → logprob: -16.001558303833008
    9. '	h' → logprob: -16.376558303833008
    10. 'height' → logprob: -17.189058303833008

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025593364611268044
    2. ' for' → logprob: -4.150593280792236
    3. '
' → logprob: -5.400593280792236
    4. 'for' → logprob: -6.025593280792236
    5. '    
' → logprob: -6.150593280792236
    6. 'def' → logprob: -9.275593757629395
    7. '  
' → logprob: -9.400593757629395
    8. '	for' → logprob: -10.275593757629395
    9. 'import' → logprob: -10.275593757629395
    10. ',' → logprob: -10.275593757629395

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022958479821681976
    2. ' for' → logprob: -6.877295970916748
    3. '    
' → logprob: -8.00229549407959
    4. 'for' → logprob: -8.00229549407959
    5. '
' → logprob: -8.50229549407959
    6. 'def' → logprob: -8.75229549407959
    7. '<|end|>' → logprob: -9.50229549407959
    8. 'import' → logprob: -9.87729549407959
    9. '  
' → logprob: -10.62729549407959
    10. ',' → logprob: -10.62729549407959

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04849628731608391
    2. ' for' → logprob: -3.5484962463378906
    3. 'for' → logprob: -4.798496246337891
    4. '
' → logprob: -5.298496246337891
    5. '    
' → logprob: -5.673496246337891
    6. ' 
' → logprob: -7.548496246337891
    7. '  
' → logprob: -7.798496246337891
    8. 'def' → logprob: -8.17349624633789
    9. 'n' → logprob: -8.79849624633789
    10. '   
' → logprob: -8.92349624633789

Token 273: ' Due' (ID: 29584)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10755583643913269
    2. ' for' → logprob: -2.607555866241455
    3. 'for' → logprob: -3.732555866241455
    4. ' n' → logprob: -6.107555866241455
    5. 'n' → logprob: -6.982555866241455
    6. 'def' → logprob: -7.857555866241455
    7. 'import' → logprob: -8.732555389404297
    8. '    
' → logprob: -8.857555389404297
    9. '
' → logprob: -9.482555389404297
    10. 'm' → logprob: -9.732555389404297

Token 274: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.024159369990229607
    2. 'to' → logprob: -4.0241594314575195
    3. '   ' → logprob: -5.8991594314575195
    4. 'def' → logprob: -7.1491594314575195
    5. '=' → logprob: -7.2741594314575195
    6. ':' → logprob: -8.02415943145752
    7. ' =' → logprob: -8.27415943145752
    8. '_to' → logprob: -8.39915943145752
    9. 'import' → logprob: -8.77415943145752
    10. 'for' → logprob: -9.02415943145752

Token 275: ' vertical' (ID: 17679)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3022876977920532
    2. ' the' → logprob: -1.6772876977920532
    3. ' symmetry' → logprob: -4.052287578582764
    4. ' all' → logprob: -4.927287578582764
    5. ' limited' → logprob: -5.427287578582764
    6. ' problem' → logprob: -5.677287578582764
    7. 'def' → logprob: -5.802287578582764
    8. 'all' → logprob: -5.927287578582764
    9. ' geometry' → logprob: -6.052287578582764
    10. '#' → logprob: -6.177287578582764

Token 276: ' straight' (ID: 10230)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.3551459312438965
    2. 'projection' → logprob: -1.6051459312438965
    3. 'lines' → logprob: -1.9801459312438965
    4. ' projection' → logprob: -2.6051459312438965
    5. ' symmetry' → logprob: -2.7301459312438965
    6. 'alignment' → logprob: -3.3551459312438965
    7. 'distance' → logprob: -3.7301459312438965
    8. ' nature' → logprob: -3.7301459312438965
    9. 'spacing' → logprob: -3.7301459312438965
    10. ' spacing' → logprob: -3.9801459312438965

Token 277: 'ness' (ID: 2816)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.058280739933252335
    2. ' lines' → logprob: -3.0582807064056396
    3. 'line' → logprob: -4.683280944824219
    4. ' line' → logprob: -8.308280944824219
    5. 'segments' → logprob: -10.058280944824219
    6. '-line' → logprob: -10.433280944824219
    7. '-lines' → logprob: -10.933280944824219
    8. ' segments' → logprob: -11.058280944824219
    9. '_lines' → logprob: -11.808280944824219
    10. '   ' → logprob: -11.808280944824219

Token 278: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5906116366386414
    2. ':' → logprob: -1.9656116962432861
    3. '   ' → logprob: -1.9656116962432861
    4. '<|end|>' → logprob: -3.090611696243286
    5. '
' → logprob: -3.840611696243286
    6. ' for' → logprob: -3.965611696243286
    7. ',
' → logprob: -3.965611696243286
    8. 'def' → logprob: -4.090611457824707
    9. ':
' → logprob: -4.465611457824707
    10. 'for' → logprob: -4.715611457824707

Token 279: ' common' (ID: 5355)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.5671217441558838
    2. ' symmetry' → logprob: -1.5671217441558838
    3. ' origin' → logprob: -2.567121744155884
    4. 'all' → logprob: -2.567121744155884
    5. 'the' → logprob: -2.817121744155884
    6. ' the' → logprob: -2.942121744155884
    7. ' common' → logprob: -3.317121744155884
    8. ' same' → logprob: -3.442121744155884
    9. ' anchors' → logprob: -3.442121744155884
    10. 'sym' → logprob: -3.692121744155884

Token 280: ' balloon' (ID: 63124)
  Prédit: ' origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' origin' → logprob: -0.5765380859375
    2. 'origin' → logprob: -1.8265380859375
    3. 'point' → logprob: -2.7015380859375
    4. ' endpoint' → logprob: -2.9515380859375
    5. 'anchor' → logprob: -3.0765380859375
    6. ' point' → logprob: -3.4515380859375
    7. 'endpoint' → logprob: -3.7015380859375
    8. ' anchor' → logprob: -4.8265380859375
    9. ' apex' → logprob: -4.9515380859375
    10. ' center' → logprob: -5.0765380859375

Token 281: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6311457753181458
    2. ' point' → logprob: -1.381145715713501
    3. 'line' → logprob: -3.631145715713501
    4. 'anchor' → logprob: -3.631145715713501
    5. ',' → logprob: -3.756145715713501
    6. ' line' → logprob: -3.881145715713501
    7. 'position' → logprob: -4.13114595413208
    8. ' at' → logprob: -4.38114595413208
    9. ' position' → logprob: -4.63114595413208
    10. 'center' → logprob: -5.00614595413208

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25946858525276184
    2. '   ' → logprob: -1.6344685554504395
    3. ' for' → logprob: -4.0094685554504395
    4. ' ,' → logprob: -5.5094685554504395
    5. ':' → logprob: -5.8844685554504395
    6. 'for' → logprob: -5.8844685554504395
    7. 'def' → logprob: -6.6344685554504395
    8. ',
' → logprob: -6.6344685554504395
    9. 'import' → logprob: -6.7594685554504395
    10. ':
' → logprob: -8.384469032287598

Token 283: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4562950134277344
    2. ' return' → logprob: -1.7062950134277344
    3. 'for' → logprob: -2.2062950134277344
    4. 'return' → logprob: -2.9562950134277344
    5. '   ' → logprob: -4.831295013427734
    6. ' continue' → logprob: -4.956295013427734
    7. ' n' → logprob: -5.706295013427734
    8. 'continue' → logprob: -6.706295013427734
    9. '       ' → logprob: -6.956295013427734
    10. 'n' → logprob: -7.206295013427734

Token 284: ' crossing' (ID: 50946)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.2741540670394897
    2. ' crossing' → logprob: -1.3991540670394897
    3. ' two' → logprob: -1.8991540670394897
    4. 'two' → logprob: -2.2741541862487793
    5. '       ' → logprob: -3.6491541862487793
    6. '   ' → logprob: -3.7741541862487793
    7. 'intersection' → logprob: -3.8991541862487793
    8. 'return' → logprob: -4.149154186248779
    9. 'need' → logprob: -4.274154186248779
    10. 'def' → logprob: -4.274154186248779

Token 285: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4926083981990814
    2. '
' → logprob: -1.2426084280014038
    3. '<|end|>' → logprob: -2.4926083087921143
    4. '    
' → logprob: -5.117608547210693
    5. '\n' → logprob: -5.117608547210693
    6. 'return' → logprob: -6.992608547210693
    7. '<|end|>' → logprob: -6.992608547210693
    8. ')' → logprob: -7.367608547210693
    9. '  
' → logprob: -7.492608547210693
    10. ':' → logprob: -7.867608547210693

Token 286: ' anchors' (ID: 114642)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5833916068077087
    2. 'all' → logprob: -0.9583916068077087
    3. 'the' → logprob: -4.2083916664123535
    4. ' the' → logprob: -4.9583916664123535
    5. 'True' → logprob: -5.4583916664123535
    6. 'n' → logprob: -5.5833916664123535
    7. 'h' → logprob: -5.7083916664123535
    8. 'anchors' → logprob: -5.7083916664123535
    9. ' True' → logprob: -5.8333916664123535
    10. 'for' → logprob: -6.0833916664123535

Token 287: ' lines' (ID: 8698)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.1918885707855225
    2. '<|end|>' → logprob: -1.3168885707855225
    3. 'are' → logprob: -1.6918885707855225
    4. '[i' → logprob: -2.0668885707855225
    5. '[' → logprob: -2.5668885707855225
    6. ')' → logprob: -5.066888809204102
    7. ']' → logprob: -5.691888809204102
    8. 'import' → logprob: -5.691888809204102
    9. '_are' → logprob: -5.691888809204102
    10. ',' → logprob: -5.941888809204102

Token 288: ' do' (ID: 621)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.20686720311641693
    2. ' are' → logprob: -1.9568672180175781
    3. ' lie' → logprob: -4.206867218017578
    4. 'do' → logprob: -4.456867218017578
    5. ' col' → logprob: -5.206867218017578
    6. 'col' → logprob: -5.456867218017578
    7. ' do' → logprob: -5.956867218017578
    8. 'from' → logprob: -6.706867218017578
    9. 'co' → logprob: -7.706867218017578
    10. 'lie' → logprob: -7.706867218017578

Token 289: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10023071616888046
    2. ' not' → logprob: -2.3502306938171387
    3. 'n't' → logprob: -10.725231170654297
    4. 'import' → logprob: -14.475231170654297
    5. '```' → logprob: -14.725231170654297
    6. 'for' → logprob: -15.475231170654297
    7. '_not' → logprob: -15.600231170654297
    8. '	not' → logprob: -15.725231170654297
    9. 'n' → logprob: -15.975231170654297
    10. '(not' → logprob: -16.100231170654297

Token 290: ' cross' (ID: 8088)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.08586649596691132
    2. ' intersect' → logprob: -3.5858664512634277
    3. 'cross' → logprob: -3.9608664512634277
    4. 'col' → logprob: -4.085866451263428
    5. 'share' → logprob: -4.710866451263428
    6. ' share' → logprob: -6.210866451263428
    7. 'proper' → logprob: -6.460866451263428
    8. 'co' → logprob: -6.460866451263428
    9. ' col' → logprob: -6.585866451263428
    10. 'over' → logprob: -7.085866451263428

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01894250698387623
    2. ' for' → logprob: -4.393942356109619
    3. 'for' → logprob: -6.268942356109619
    4. '    
' → logprob: -6.518942356109619
    5. '
' → logprob: -7.268942356109619
    6. 'def' → logprob: -7.393942356109619
    7. 'import' → logprob: -7.643942356109619
    8. 'anchors' → logprob: -7.893942356109619
    9. ' anchors' → logprob: -8.268942832946777
    10. ' n' → logprob: -8.518942832946777

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016721095889806747
    2. '<|end|>' → logprob: -4.891721248626709
    3. 'def' → logprob: -6.141721248626709
    4. ' for' → logprob: -6.141721248626709
    5. 'import' → logprob: -6.891721248626709
    6. '    
' → logprob: -6.891721248626709
    7. '
' → logprob: -7.266721248626709
    8. ',' → logprob: -7.891721248626709
    9. '<|end|>' → logprob: -7.891721248626709
    10. 'for' → logprob: -8.26672077178955

Token 293: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025189490988850594
    2. ' for' → logprob: -4.025189399719238
    3. '    
' → logprob: -6.150189399719238
    4. 'for' → logprob: -6.400189399719238
    5. 'def' → logprob: -7.150189399719238
    6. ' anchors' → logprob: -7.150189399719238
    7. 'anchors' → logprob: -7.775189399719238
    8. ' n' → logprob: -7.900189399719238
    9. '
' → logprob: -8.275189399719238
    10. ' def' → logprob: -8.650189399719238

Token 294: ' Project' (ID: 8761)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9457600116729736
    2. 'for' → logprob: -1.0707600116729736
    3. '   ' → logprob: -2.1957600116729736
    4. 'anchors' → logprob: -2.3207600116729736
    5. ' anchors' → logprob: -3.6957600116729736
    6. 'def' → logprob: -4.8207597732543945
    7. 'm' → logprob: -4.9457597732543945
    8. ' m' → logprob: -5.0707597732543945
    9. ' def' → logprob: -5.6957597732543945
    10. 'n' → logprob: -5.6957597732543945

Token 295: 'ing' (ID: 289)
  Prédit: ' anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' anchors' → logprob: -0.7077276706695557
    2. 'anchors' → logprob: -1.3327276706695557
    3. ' the' → logprob: -1.8327276706695557
    4. 'the' → logprob: -4.082727432250977
    5. 'ed' → logprob: -4.207727432250977
    6. ' to' → logprob: -4.332727432250977
    7. 'points' → logprob: -4.832727432250977
    8. ' points' → logprob: -4.957727432250977
    9. ' onto' → logprob: -5.457727432250977
    10. 'to' → logprob: -5.457727432250977

Token 296: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.6026496291160583
    2. ' anchors' → logprob: -1.1026496887207031
    3. ' the' → logprob: -3.227649688720703
    4. 'the' → logprob: -3.727649688720703
    5. 'anchor' → logprob: -4.352649688720703
    6. 'points' → logprob: -4.977649688720703
    7. ' onto' → logprob: -4.977649688720703
    8. ' to' → logprob: -5.102649688720703
    9. 'to' → logprob: -5.227649688720703
    10. 'all' → logprob: -5.352649688720703

Token 297: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1186487674713135
    2. 'points' → logprob: -1.4936487674713135
    3. '_points' → logprob: -1.9936487674713135
    4. ' onto' → logprob: -2.1186487674713135
    5. 'onto' → logprob: -2.4936487674713135
    6. '_xy' → logprob: -3.2436487674713135
    7. ' to' → logprob: -4.243648529052734
    8. '=' → logprob: -4.368648529052734
    9. 'to' → logprob: -4.493648529052734
    10. 'on' → logprob: -4.868648529052734

Token 298: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.049472372978925705
    2. '2' → logprob: -4.299472332000732
    3. 'the' → logprob: -4.424472332000732
    4. ' ' → logprob: -4.799472332000732
    5. ' plane' → logprob: -5.174472332000732
    6. ' the' → logprob: -5.424472332000732
    7. ' xy' → logprob: -5.799472332000732
    8. 'plane' → logprob: -6.799472332000732
    9. 'XY' → logprob: -8.67447280883789
    10. '_xy' → logprob: -9.79947280883789

Token 299: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.014300311915576458
    2. ' plane' → logprob: -4.389300346374512
    3. '-plane' → logprob: -6.514300346374512
    4. '_plane' → logprob: -8.139300346374512
    5. 'planes' → logprob: -11.639300346374512
    6. '```' → logprob: -13.514300346374512
    7. 'plan' → logprob: -13.639300346374512
    8. 'points' → logprob: -13.764300346374512
    9. 'for' → logprob: -14.264300346374512
    10. '   ' → logprob: -14.514300346374512

Token 300: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09873774647712708
    2. ' for' → logprob: -3.8487377166748047
    3. 'anchors' → logprob: -3.8487377166748047
    4. ' anchors' → logprob: -4.473737716674805
    5. '    
' → logprob: -4.598737716674805
    6. '
' → logprob: -4.723737716674805
    7. ' points' → logprob: -4.848737716674805
    8. 'points' → logprob: -5.973737716674805
    9. 'for' → logprob: -6.473737716674805
    10. ':' → logprob: -6.473737716674805

Token 301: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5573344826698303
    2. 'for' → logprob: -1.4323344230651855
    3. ' anchors' → logprob: -3.3073344230651855
    4. 'anchors' → logprob: -3.3073344230651855
    5. ' n' → logprob: -3.6823344230651855
    6. 'n' → logprob: -3.8073344230651855
    7. 'def' → logprob: -3.8073344230651855
    8. ' def' → logprob: -4.0573344230651855
    9. ' m' → logprob: -4.1823344230651855
    10. 'm' → logprob: -5.3073344230651855

Token 302: ' balloon' (ID: 63124)
  Prédit: ' checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checking' → logprob: -1.0638185739517212
    2. 'def' → logprob: -1.5638185739517212
    3. 'for' → logprob: -1.5638185739517212
    4. 'checking' → logprob: -1.5638185739517212
    5. ' for' → logprob: -4.438818454742432
    6. '#' → logprob: -4.563818454742432
    7. 'n' → logprob: -6.563818454742432
    8. 'import' → logprob: -6.813818454742432
    9. 'from' → logprob: -7.188818454742432
    10. ' def' → logprob: -7.688818454742432

Token 303: ' to' (ID: 316)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.715198278427124
    2. ' at' → logprob: -0.965198278427124
    3. ' point' → logprob: -3.215198278427124
    4. 'point' → logprob: -3.215198278427124
    5. 'is' → logprob: -4.090198516845703
    6. ' =' → logprob: -4.840198516845703
    7. 'at' → logprob: -4.840198516845703
    8. ' being' → logprob: -5.965198516845703
    9. ' points' → logprob: -6.340198516845703
    10. '<|end|>' → logprob: -6.340198516845703

Token 304: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4287939965724945
    2. ' (' → logprob: -1.053794026374817
    3. '0' → logprob: -9.803793907165527
    4. ' ' → logprob: -10.928793907165527
    5. ' origin' → logprob: -11.428793907165527
    6. 'origin' → logprob: -12.053793907165527
    7. '[' → logprob: -12.803793907165527
    8. '[(' → logprob: -15.928793907165527
    9. ' [' → logprob: -15.928793907165527
    10. ' the' → logprob: -16.803794860839844

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01605970971286297
    2. ' ' → logprob: -4.141059875488281
    3. '(' → logprob: -10.891059875488281
    4. ' (' → logprob: -12.641059875488281
    5. '```' → logprob: -14.078559875488281
    6. '  ' → logprob: -14.266059875488281
    7. '   ' → logprob: -14.453559875488281
    8. ' ' → logprob: -14.953559875488281
    9. ',' → logprob: -15.016059875488281
    10. '[' → logprob: -15.453559875488281

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. '0' → logprob: -10.250060081481934
    3. ' ,' → logprob: -10.625060081481934
    4. ',
' → logprob: -15.000060081481934
    5. ' ' → logprob: -16.75006103515625
    6. ')' → logprob: -17.37506103515625
    7. '‌,' → logprob: -17.75006103515625
    8. '،' → logprob: -17.87506103515625
    9. '```' → logprob: -18.25006103515625
    10. ',

' → logprob: -18.37506103515625

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '
' → logprob: -18.000335693359375
    4. ',' → logprob: -18.125335693359375
    5. ' ' → logprob: -18.125335693359375
    6. '   ' → logprob: -18.625335693359375
    7. '  ' → logprob: -18.750335693359375
    8. '```' → logprob: -19.625335693359375
    9. ')' → logprob: -19.875335693359375
    10. '

' → logprob: -20.687835693359375

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31104591488838196
    2. '),' → logprob: -1.4360458850860596
    3. ')
' → logprob: -3.6860458850860596
    4. '):
' → logprob: -6.561046123504639
    5. '):

' → logprob: -7.061046123504639
    6. '):' → logprob: -7.311046123504639
    7. '),
' → logprob: -7.311046123504639
    8. '0' → logprob: -8.31104564666748
    9. ')

' → logprob: -8.68604564666748
    10. ',' → logprob: -8.81104564666748

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015784703195095062
    2. '
' → logprob: -4.765784740447998
    3. ' for' → logprob: -5.515784740447998
    4. '    
' → logprob: -6.890784740447998
    5. 'for' → logprob: -7.265784740447998
    6. 'def' → logprob: -8.01578426361084
    7. '  
' → logprob: -8.26578426361084
    8. ',' → logprob: -8.39078426361084
    9. ':' → logprob: -9.14078426361084
    10. 'import' → logprob: -9.51578426361084

Token 310: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26037663221359253
    2. ' for' → logprob: -1.8853766918182373
    3. 'for' → logprob: -3.1353766918182373
    4. ' n' → logprob: -4.385376453399658
    5. 'def' → logprob: -4.760376453399658
    6. ' def' → logprob: -5.760376453399658
    7. 'anchors' → logprob: -5.885376453399658
    8. ' anchors' → logprob: -6.260376453399658
    9. 'n' → logprob: -6.385376453399658
    10. '
' → logprob: -6.635376453399658

Token 311: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0975587368011475
    2. ' for' → logprob: -1.4725587368011475
    3. 'def' → logprob: -1.4725587368011475
    4. '   ' → logprob: -2.2225587368011475
    5. ' def' → logprob: -2.5975587368011475
    6. 'anchors' → logprob: -4.972558975219727
    7. ' n' → logprob: -5.097558975219727
    8. 'n' → logprob: -5.222558975219727
    9. ' m' → logprob: -6.097558975219727
    10. 'm' → logprob: -6.347558975219727

Token 312: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.748878538608551
    2. ' for' → logprob: -0.998878538608551
    3. 'def' → logprob: -2.3738784790039062
    4. ' def' → logprob: -3.7488784790039062
    5. 'anchors' → logprob: -3.7488784790039062
    6. 'n' → logprob: -5.248878479003906
    7. ' anchors' → logprob: -5.248878479003906
    8. '   ' → logprob: -6.248878479003906
    9. ' n' → logprob: -6.623878479003906
    10. 'points' → logprob: -6.748878479003906

Token 313: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9661956429481506
    2. 'for' → logprob: -1.7161955833435059
    3. 'def' → logprob: -2.591195583343506
    4. ' the' → logprob: -2.716195583343506
    5. 'range' → logprob: -2.716195583343506
    6. ' for' → logprob: -3.091195583343506
    7. ' ' → logprob: -3.091195583343506
    8. 'xy' → logprob: -4.091195583343506
    9. ' plane' → logprob: -4.216195583343506
    10. ' anchors' → logprob: -4.216195583343506

Token 314: '2' (ID: 17)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48869597911834717
    2. 'anchors' → logprob: -2.1136960983276367
    3. '2' → logprob: -2.8636960983276367
    4. 'the' → logprob: -2.8636960983276367
    5. 'def' → logprob: -2.9886960983276367
    6. 'for' → logprob: -3.2386960983276367
    7. 'anchor' → logprob: -4.113696098327637
    8. ' range' → logprob: -4.488696098327637
    9. 'xy' → logprob: -5.113696098327637
    10. 'import' → logprob: -5.363696098327637

Token 315: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0794253870844841
    2. 'd' → logprob: -2.57942533493042
    3. 'def' → logprob: -8.454425811767578
    4. '
' → logprob: -8.954425811767578
    5. '#' → logprob: -8.954425811767578
    6. 'dim' → logprob: -11.204425811767578
    7. '-d' → logprob: -11.954425811767578
    8. 'dimensions' → logprob: -11.954425811767578
    9. ' D' → logprob: -12.329425811767578
    10. '   ' → logprob: -12.329425811767578

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7883763909339905
    2. 'def' → logprob: -2.1633763313293457
    3. ':' → logprob: -2.2883763313293457
    4. ' plane' → logprob: -2.6633763313293457
    5. 'anchors' → logprob: -2.6633763313293457
    6. '   ' → logprob: -2.9133763313293457
    7. 'plane' → logprob: -3.7883763313293457
    8. 'for' → logprob: -3.7883763313293457
    9. ' anchors' → logprob: -4.038376331329346
    10. ' for' → logprob: -4.288376331329346

Token 317: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.97633957862854
    2. 'def' → logprob: -1.22633957862854
    3. 'anchors' → logprob: -1.72633957862854
    4. 'points' → logprob: -2.35133957862854
    5. ' for' → logprob: -4.101339340209961
    6. ' def' → logprob: -4.601339340209961
    7. 'n' → logprob: -4.851339340209961
    8. ' points' → logprob: -4.976339340209961
    9. ' anchors' → logprob: -5.226339340209961
    10. 'from' → logprob: -5.476339340209961

Token 318: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2346847951412201
    2. '=' → logprob: -2.234684705734253
    3. ' are' → logprob: -3.109684705734253
    4. 'from' → logprob: -3.234684705734253
    5. 'are' → logprob: -4.734684944152832
    6. ' from' → logprob: -6.109684944152832
    7. '=[' → logprob: -6.484684944152832
    8. '=[]' → logprob: -6.734684944152832
    9. 'end' → logprob: -7.609684944152832
    10. '=(' → logprob: -7.859684944152832

Token 319: ' from' (ID: 591)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.12285676598548889
    2. ' [(' → logprob: -2.997856855392456
    3. 'from' → logprob: -3.247856855392456
    4. '[' → logprob: -5.622856616973877
    5. '[]' → logprob: -5.622856616973877
    6. ' segments' → logprob: -5.622856616973877
    7. ' lines' → logprob: -5.872856616973877
    8. 'segments' → logprob: -5.997856616973877
    9. '(' → logprob: -6.372856616973877
    10. 'lines' → logprob: -6.372856616973877

Token 320: ' anchor' (ID: 31067)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.18274901807308197
    2. '(' → logprob: -2.182749032974243
    3. ' anchors' → logprob: -3.557749032974243
    4. 'anchor' → logprob: -3.932749032974243
    5. ' (' → logprob: -5.932748794555664
    6. '(anchor' → logprob: -6.182748794555664
    7. '(x' → logprob: -7.682748794555664
    8. ' anchor' → logprob: -7.807748794555664
    9. 'anch' → logprob: -7.807748794555664
    10. 'each' → logprob: -9.182748794555664

Token 321: ' points' (ID: 5571)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6703091859817505
    2. '[i' → logprob: -1.2953091859817505
    3. ' points' → logprob: -2.545309066772461
    4. ' point' → logprob: -2.545309066772461
    5. 'points' → logprob: -3.670309066772461
    6. 'to' → logprob: -4.795309066772461
    7. ' (' → logprob: -4.920309066772461
    8. 'point' → logprob: -5.170309066772461
    9. 's' → logprob: -5.795309066772461
    10. ' coordinates' → logprob: -6.670309066772461

Token 322: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11312543600797653
    2. '[i' → logprob: -2.3631253242492676
    3. ' (' → logprob: -4.738125324249268
    4. 'to' → logprob: -5.988125324249268
    5. ' i' → logprob: -7.613125324249268
    6. '(i' → logprob: -8.238125801086426
    7. ' ' → logprob: -8.738125801086426
    8. '[' → logprob: -9.113125801086426
    9. ')' → logprob: -9.113125801086426
    10. 'i' → logprob: -9.488125801086426

Token 323: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4292590320110321
    2. ' (' → logprob: -1.0542590618133545
    3. ' origin' → logprob: -8.429259300231934
    4. '0' → logprob: -9.054259300231934
    5. 'origin' → logprob: -9.054259300231934
    6. ' ' → logprob: -9.554259300231934
    7. '[' → logprob: -10.929259300231934
    8. '(origin' → logprob: -12.054259300231934
    9. 'import' → logprob: -12.429259300231934
    10. ' [' → logprob: -13.054259300231934

Token 324: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047717608511447906
    2. '
' → logprob: -3.297717571258545
    3. '    
' → logprob: -5.422717571258545
    4. 'def' → logprob: -6.547717571258545
    5. '<|end|>' → logprob: -6.672717571258545
    6. ' for' → logprob: -7.172717571258545
    7. '  
' → logprob: -7.547717571258545
    8. '\n' → logprob: -8.547718048095703
    9. 'for' → logprob: -8.672718048095703
    10. ',' → logprob: -8.797718048095703

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01504235528409481
    2. ' for' → logprob: -4.765042304992676
    3. 'for' → logprob: -5.765042304992676
    4. '
' → logprob: -6.765042304992676
    5. 'def' → logprob: -7.015042304992676
    6. '    
' → logprob: -7.765042304992676
    7. '  
' → logprob: -8.640042304992676
    8. 'import' → logprob: -8.640042304992676
    9. '<|end|>' → logprob: -8.640042304992676
    10. ' 
' → logprob: -10.390042304992676

Token 326: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03732604533433914
    2. ' for' → logprob: -4.162325859069824
    3. 'for' → logprob: -4.537325859069824
    4. '
' → logprob: -5.162325859069824
    5. 'def' → logprob: -6.162325859069824
    6. '    
' → logprob: -6.662325859069824
    7. '  
' → logprob: -8.037325859069824
    8. ' 
' → logprob: -8.787325859069824
    9. 'anchors' → logprob: -8.787325859069824
    10. 'n' → logprob: -8.912325859069824

Token 327: ' No' (ID: 3004)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2553239166736603
    2. ' for' → logprob: -2.005323886871338
    3. '   ' → logprob: -3.255323886871338
    4. 'def' → logprob: -3.630323886871338
    5. 'anchors' → logprob: -4.005323886871338
    6. 'n' → logprob: -5.755323886871338
    7. ' anchors' → logprob: -6.630323886871338
    8. ' def' → logprob: -6.880323886871338
    9. ' n' → logprob: -7.130323886871338
    10. 'm' → logprob: -8.130324363708496

Token 328: ' crossing' (ID: 50946)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8158850073814392
    2. ' two' → logprob: -1.190885066986084
    3. ' for' → logprob: -2.440885066986084
    4. 'for' → logprob: -2.815885066986084
    5. ' def' → logprob: -2.940885066986084
    6. ' anchors' → logprob: -4.065885066986084
    7. 'import' → logprob: -4.190885066986084
    8. 'two' → logprob: -4.940885066986084
    9. 'anchors' → logprob: -5.690885066986084
    10. 'anchor' → logprob: -6.315885066986084

Token 329: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0735092163085938
    2. ' for' → logprob: -1.3235092163085938
    3. 'def' → logprob: -1.5735092163085938
    4. 'for' → logprob: -2.9485092163085938
    5. 'import' → logprob: -3.4485092163085938
    6. ':' → logprob: -3.4485092163085938
    7. ' if' → logprob: -3.6985092163085938
    8. ',' → logprob: -4.573509216308594
    9. ' def' → logprob: -5.198509216308594
    10. '       ' → logprob: -5.573509216308594

Token 330: ' segments' (ID: 33749)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.5079857110977173
    2. 'for' → logprob: -1.6329857110977173
    3. ' for' → logprob: -1.7579857110977173
    4. ' True' → logprob: -2.1329855918884277
    5. ' not' → logprob: -2.2579855918884277
    6. 'True' → logprob: -2.8829855918884277
    7. ' no' → logprob: -3.3829855918884277
    8. 'not' → logprob: -3.6329855918884277
    9. 'no' → logprob: -4.132985591888428
    10. 'all' → logprob: -4.132985591888428

Token 331: ' from' (ID: 591)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.6597881317138672
    2. ' do' → logprob: -1.6597881317138672
    3. 'inter' → logprob: -2.159788131713867
    4. 'from' → logprob: -2.409788131713867
    5. 'def' → logprob: -3.159788131713867
    6. ' from' → logprob: -5.034788131713867
    7. '_inter' → logprob: -5.159788131713867
    8. ' that' → logprob: -5.159788131713867
    9. ' (' → logprob: -5.534788131713867
    10. 'for' → logprob: -5.784788131713867

Token 332: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.108347088098526
    2. 'anchor' → logprob: -2.608347177505493
    3. ' anchors' → logprob: -3.733347177505493
    4. '(' → logprob: -5.733346939086914
    5. ' anchor' → logprob: -7.358346939086914
    6. 'each' → logprob: -7.733346939086914
    7. 'anch' → logprob: -7.858346939086914
    8. ' (' → logprob: -8.733346939086914
    9. '(anchor' → logprob: -9.108346939086914
    10. ' each' → logprob: -10.733346939086914

Token 333: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8674352765083313
    2. '[i' → logprob: -1.2424352169036865
    3. 'to' → logprob: -1.2424352169036865
    4. 'i' → logprob: -6.117435455322266
    5. ' i' → logprob: -9.242435455322266
    6. ' do' → logprob: -10.117435455322266
    7. '   ' → logprob: -10.617435455322266
    8. '[]' → logprob: -10.617435455322266
    9. 'do' → logprob: -10.617435455322266
    10. 'points' → logprob: -10.617435455322266

Token 334: ' origin' (ID: 12839)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.46620094776153564
    2. '(' → logprob: -1.2162009477615356
    3. ' origin' → logprob: -2.966200828552246
    4. 'origin' → logprob: -3.716200828552246
    5. ' ' → logprob: -8.341200828552246
    6. '(origin' → logprob: -8.716200828552246
    7. '0' → logprob: -11.216200828552246
    8. 'import' → logprob: -12.091200828552246
    9. '[' → logprob: -12.341200828552246
    10. '_origin' → logprob: -12.841200828552246

Token 335: ' do' (ID: 621)
  Prédit: ' do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' do' → logprob: -0.26828187704086304
    2. 'do' → logprob: -1.6432819366455078
    3. ' must' → logprob: -4.268281936645508
    4. ' don't' → logprob: -5.143281936645508
    5. ' should' → logprob: -5.393281936645508
    6. '   ' → logprob: -5.518281936645508
    7. 'def' → logprob: -5.893281936645508
    8. ' are' → logprob: -6.018281936645508
    9. 'must' → logprob: -6.268281936645508
    10. ' in' → logprob: -6.893281936645508

Token 336: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3132636249065399
    2. 'not' → logprob: -1.3132636547088623
    3. '_not' → logprob: -13.688263893127441
    4. '	not' → logprob: -14.188263893127441
    5. '(not' → logprob: -18.063262939453125
    6. 'n't' → logprob: -18.063262939453125
    7. '   ' → logprob: -19.438262939453125
    8. ':not' → logprob: -19.438262939453125
    9. '```' → logprob: -19.438262939453125
    10. '    ' → logprob: -21.063262939453125

Token 337: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.13035576045513153
    2. ' intersect' → logprob: -2.2553558349609375
    3. 'cross' → logprob: -4.7553558349609375
    4. ' cross' → logprob: -4.8803558349609375
    5. ' overlap' → logprob: -7.7553558349609375
    6. ' share' → logprob: -7.7553558349609375
    7. 'share' → logprob: -8.255355834960938
    8. 'over' → logprob: -10.380355834960938
    9. 'proper' → logprob: -12.005355834960938
    10. ' have' → logprob: -12.255355834960938

Token 338: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2779483497142792
    2. 'def' → logprob: -2.7779483795166016
    3. '.' → logprob: -3.0279483795166016
    4. ',' → logprob: -3.0279483795166016
    5. ' except' → logprob: -3.0279483795166016
    6. ' for' → logprob: -4.527948379516602
    7. 'except' → logprob: -4.902948379516602
    8. ' in' → logprob: -5.902948379516602
    9. 'import' → logprob: -6.527948379516602
    10. '
' → logprob: -6.527948379516602

Token 339: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.07893551141023636
    2. 'at' → logprob: -2.5789356231689453
    3. ' ' → logprob: -10.328935623168945
    4. '	at' → logprob: -12.703935623168945
    5. 'ing' → logprob: -12.828935623168945
    6. '   ' → logprob: -13.078935623168945
    7. '```' → logprob: -13.453935623168945
    8. '  ' → logprob: -13.578935623168945
    9. ' ' → logprob: -15.203935623168945
    10. 'possibly' → logprob: -15.328935623168945

Token 340: ' origin' (ID: 12839)
  Prédit: ' endpoints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.8653033375740051
    2. '(' → logprob: -0.9903033375740051
    3. 'the' → logprob: -2.6153032779693604
    4. ' the' → logprob: -2.8653032779693604
    5. ' (' → logprob: -3.1153032779693604
    6. 'origin' → logprob: -4.4903035163879395
    7. 'end' → logprob: -4.6153035163879395
    8. ' origin' → logprob: -5.9903035163879395
    9. 'their' → logprob: -6.2403035163879395
    10. 'endpoint' → logprob: -6.3653035163879395

Token 341: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16739870607852936
    2. '
' → logprob: -1.9173986911773682
    3. '    
' → logprob: -5.542398929595947
    4. 'def' → logprob: -6.167398929595947
    5. '  
' → logprob: -8.417398452758789
    6. '\n' → logprob: -8.542398452758789
    7. ' for' → logprob: -8.667398452758789
    8. 'import' → logprob: -8.917398452758789
    9. 'for' → logprob: -9.417398452758789
    10. '\' → logprob: -9.542398452758789

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00718109542503953
    2. '
' → logprob: -5.757181167602539
    3. '    
' → logprob: -6.382181167602539
    4. 'def' → logprob: -7.007181167602539
    5. '  
' → logprob: -7.632181167602539
    6. ' for' → logprob: -8.882181167602539
    7. '<|end|>' → logprob: -8.882181167602539
    8. '\n' → logprob: -9.007181167602539
    9. 'import' → logprob: -9.132181167602539
    10. ' ' → logprob: -10.007181167602539

Token 343: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.784946858882904
    2. '   ' → logprob: -0.784946858882904
    3. 'def' → logprob: -3.659946918487549
    4. '\n' → logprob: -4.159946918487549
    5. '    
' → logprob: -4.159946918487549
    6. '  
' → logprob: -4.659946918487549
    7. ' for' → logprob: -4.909946918487549
    8. ' 
' → logprob: -5.159946918487549
    9. 'for' → logprob: -6.534946918487549
    10. '\' → logprob: -6.909946918487549

Token 344: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2869211435317993
    2. ' for' → logprob: -2.2869210243225098
    3. 'for' → logprob: -2.2869210243225098
    4. 'n' → logprob: -4.03692102432251
    5. 'def' → logprob: -4.91192102432251
    6. 'anchors' → logprob: -4.91192102432251
    7. ' n' → logprob: -5.53692102432251
    8. '
' → logprob: -5.78692102432251
    9. ' anchors' → logprob: -6.28692102432251
    10. '    
' → logprob: -6.41192102432251

Token 345: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.268440842628479
    2. ' is' → logprob: -3.1434407234191895
    3. ' can' → logprob: -3.1434407234191895
    4. ' def' → logprob: -3.1434407234191895
    5. ' means' → logprob: -3.6434407234191895
    6. 'import' → logprob: -3.8934407234191895
    7. 'for' → logprob: -4.1434407234191895
    8. 'means' → logprob: -4.5184407234191895
    9. 'can' → logprob: -5.0184407234191895
    10. 'is' → logprob: -5.2684407234191895

Token 346: ' equivalent' (ID: 23458)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9877569079399109
    2. ' equivalent' → logprob: -2.3627569675445557
    3. ' True' → logprob: -2.3627569675445557
    4. ' trivial' → logprob: -2.7377569675445557
    5. ' ensured' → logprob: -2.9877569675445557
    6. ' guaranteed' → logprob: -2.9877569675445557
    7. 'def' → logprob: -3.1127569675445557
    8. ' always' → logprob: -3.2377569675445557
    9. ' triv' → logprob: -3.6127569675445557
    10. ' checked' → logprob: -3.7377569675445557

Token 347: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.055228427052497864
    2. 'to' → logprob: -2.9302284717559814
    3. 'def' → logprob: -8.055228233337402
    4. 'import' → logprob: -10.805228233337402
    5. ' def' → logprob: -12.180228233337402
    6. ',' → logprob: -14.180228233337402
    7. ' ' → logprob: -14.680228233337402
    8. '	to' → logprob: -14.930228233337402
    9. 'if' → logprob: -15.180228233337402
    10. '   ' → logprob: -15.180228233337402

Token 348: ' checking' (ID: 19141)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9166986346244812
    2. 'all' → logprob: -1.166698694229126
    3. ' checking' → logprob: -2.166698694229126
    4. 'True' → logprob: -2.791698694229126
    5. 'checking' → logprob: -2.916698694229126
    6. ' True' → logprob: -3.041698694229126
    7. 'len' → logprob: -5.916698455810547
    8. 'not' → logprob: -6.166698455810547
    9. 'check' → logprob: -6.291698455810547
    10. ' not' → logprob: -7.166698455810547

Token 349: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8174151182174683
    2. 'if' → logprob: -1.9424151182174683
    3. ' for' → logprob: -2.067415237426758
    4. ' all' → logprob: -2.192415237426758
    5. 'for' → logprob: -2.317415237426758
    6. ' that' → logprob: -2.942415237426758
    7. 'all' → logprob: -5.067415237426758
    8. 'that' → logprob: -5.317415237426758
    9. ' whether' → logprob: -5.317415237426758
    10. ' pairs' → logprob: -5.942415237426758

Token 350: ' any' (ID: 1062)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.6444602012634277
    2. 'n' → logprob: -1.7694602012634277
    3. 'any' → logprob: -1.7694602012634277
    4. 'all' → logprob: -1.8944602012634277
    5. ' any' → logprob: -2.1444602012634277
    6. 'the' → logprob: -2.5194602012634277
    7. 'len' → logprob: -3.0194602012634277
    8. ' the' → logprob: -3.7694602012634277
    9. 'for' → logprob: -4.144460201263428
    10. 'points' → logprob: -5.519460201263428

Token 351: ' pair' (ID: 10610)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.8934337496757507
    2. ' pair' → logprob: -1.1434338092803955
    3. 'two' → logprob: -1.5184338092803955
    4. 'pair' → logprob: -3.0184338092803955
    5. ' pairs' → logprob: -6.518433570861816
    6. 'anchor' → logprob: -7.018433570861816
    7. ' anchors' → logprob: -7.643433570861816
    8. 'anchors' → logprob: -7.893433570861816
    9. 'pairs' → logprob: -7.893433570861816
    10. ' anchor' → logprob: -9.143433570861816

Token 352: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10221501439809799
    2. 'of' → logprob: -2.352215051651001
    3. 'def' → logprob: -7.602214813232422
    4. 'import' → logprob: -7.852214813232422
    5. ' ' → logprob: -8.102214813232422
    6. '   ' → logprob: -9.102214813232422
    7. ' intersects' → logprob: -9.102214813232422
    8. 'anchors' → logprob: -9.227214813232422
    9. 'from' → logprob: -9.352214813232422
    10. 's' → logprob: -9.477214813232422

Token 353: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.312359482049942
    2. 'segments' → logprob: -2.312359571456909
    3. ' anchors' → logprob: -2.312359571456909
    4. 'lines' → logprob: -3.937359571456909
    5. ' segments' → logprob: -4.06235933303833
    6. 'anchor' → logprob: -4.93735933303833
    7. 'vectors' → logprob: -5.31235933303833
    8. ' line' → logprob: -5.43735933303833
    9. 'line' → logprob: -5.43735933303833
    10. 'edges' → logprob: -5.68735933303833

Token 354: ' make' (ID: 1520)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.1149420738220215
    2. ' lie' → logprob: -1.6149420738220215
    3. ' are' → logprob: -1.9899420738220215
    4. 'are' → logprob: -2.6149420738220215
    5. 'have' → logprob: -2.6149420738220215
    6. '[' → logprob: -2.8649420738220215
    7. ' has' → logprob: -3.3649420738220215
    8. '[i' → logprob: -4.1149420738220215
    9. ' share' → logprob: -4.2399420738220215
    10. ' points' → logprob: -4.9899420738220215

Token 355: ' segments' (ID: 33749)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7603793144226074
    2. ' lines' → logprob: -1.8853793144226074
    3. 'an' → logprob: -2.2603793144226074
    4. ' a' → logprob: -2.5103793144226074
    5. ' an' → logprob: -2.7603793144226074
    6. 'segments' → logprob: -3.1353793144226074
    7. 'lines' → logprob: -3.6353793144226074
    8. ' segments' → logprob: -3.7603793144226074
    9. 'line' → logprob: -4.760379314422607
    10. ' the' → logprob: -5.135379314422607

Token 356: ' from' (ID: 591)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.08754774928092957
    2. 'that' → logprob: -3.337547779083252
    3. 'from' → logprob: -3.962547779083252
    4. 'inter' → logprob: -4.337547779083252
    5. ' intersect' → logprob: -5.337547779083252
    6. ' from' → logprob: -5.337547779083252
    7. ' with' → logprob: -5.962547779083252
    8. 'with' → logprob: -7.337547779083252
    9. ' col' → logprob: -7.712547779083252
    10. 'def' → logprob: -7.837547779083252

Token 357: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.5177014470100403
    2. 'anchors' → logprob: -1.5177013874053955
    3. '(' → logprob: -2.2677013874053955
    4. 'origin' → logprob: -3.3927013874053955
    5. ' anchors' → logprob: -4.767701625823975
    6. ' origin' → logprob: -4.767701625823975
    7. ' (' → logprob: -4.892701625823975
    8. ' anchor' → logprob: -5.017701625823975
    9. 'the' → logprob: -5.642701625823975
    10. '0' → logprob: -6.017701625823975

Token 358: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10816266387701035
    2. 'to' → logprob: -2.4831626415252686
    3. 's' → logprob: -4.358162879943848
    4. ' points' → logprob: -5.983162879943848
    5. 'points' → logprob: -6.233162879943848
    6. '   ' → logprob: -7.483162879943848
    7. ' ' → logprob: -8.108162879943848
    8. ' and' → logprob: -8.733162879943848
    9. '(' → logprob: -8.983162879943848
    10. ')' → logprob: -9.858162879943848

Token 359: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.714805543422699
    2. ' origin' → logprob: -1.0898056030273438
    3. '(' → logprob: -2.4648056030273438
    4. ' (' → logprob: -2.4648056030273438
    5. '0' → logprob: -6.214805603027344
    6. ' ' → logprob: -6.464805603027344
    7. 'anchor' → logprob: -7.464805603027344
    8. '(origin' → logprob: -8.839805603027344
    9. ' anchor' → logprob: -10.839805603027344
    10. 'ball' → logprob: -11.714805603027344

Token 360: ' intersect' (ID: 64353)
  Prédit: ' intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.8829081058502197
    2. ' that' → logprob: -1.0079081058502197
    3. ' do' → logprob: -2.8829081058502197
    4. ' ' → logprob: -3.2579081058502197
    5. 'inter' → logprob: -3.8829081058502197
    6. 's' → logprob: -3.8829081058502197
    7. 'import' → logprob: -4.007907867431641
    8. 'def' → logprob: -4.382907867431641
    9. ' intersects' → logprob: -4.882907867431641
    10. ')' → logprob: -5.132907867431641

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048416562378406525
    2. ' for' → logprob: -3.9234166145324707
    3. '
' → logprob: -4.548416614532471
    4. ':' → logprob: -5.173416614532471
    5. 'def' → logprob: -5.298416614532471
    6. 'for' → logprob: -5.548416614532471
    7. ',' → logprob: -7.923416614532471
    8. '    
' → logprob: -7.923416614532471
    9. 'import' → logprob: -8.173416137695312
    10. ':
' → logprob: -8.423416137695312

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15400630235671997
    2. ':' → logprob: -2.529006242752075
    3. ',' → logprob: -4.404006481170654
    4. '<|end|>' → logprob: -4.779006481170654
    5. '  
' → logprob: -5.029006481170654
    6. ':
' → logprob: -5.529006481170654
    7. ' for' → logprob: -5.529006481170654
    8. '    
' → logprob: -5.654006481170654
    9. '\' → logprob: -5.654006481170654
    10. '
' → logprob: -6.279006481170654

Token 363: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03978375717997551
    2. '
' → logprob: -3.6647837162017822
    3. ' for' → logprob: -5.539783954620361
    4. '\n' → logprob: -5.914783954620361
    5. 'def' → logprob: -6.039783954620361
    6. 'for' → logprob: -6.414783954620361
    7. '    
' → logprob: -7.164783954620361
    8. '\' → logprob: -7.414783954620361
    9. ':' → logprob: -7.664783954620361
    10. '  
' → logprob: -8.039783477783203

Token 364: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1935032457113266
    2. ' for' → logprob: -2.3185031414031982
    3. 'for' → logprob: -2.6935031414031982
    4. '
' → logprob: -5.068503379821777
    5. '```' → logprob: -7.068503379821777
    6. '    
' → logprob: -7.693503379821777
    7. '  
' → logprob: -7.818503379821777
    8. 'import' → logprob: -7.943503379821777
    9. ' ' → logprob: -8.068503379821777
    10. 'def' → logprob: -8.068503379821777

Token 365: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.28238993883132935
    2. 'at' → logprob: -1.4073898792266846
    3. 'if' → logprob: -8.032389640808105
    4. 'for' → logprob: -8.657389640808105
    5. ' if' → logprob: -8.907389640808105
    6. ' ' → logprob: -9.407389640808105
    7. ' the' → logprob: -9.532389640808105
    8. ' when' → logprob: -9.782389640808105
    9. 'when' → logprob: -9.782389640808105
    10. 'the' → logprob: -10.032389640808105

Token 366: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2371080219745636
    2. 'origin' → logprob: -2.237107992172241
    3. ' (' → logprob: -2.612107992172241
    4. ' origin' → logprob: -4.11210823059082
    5. '0' → logprob: -4.98710823059082
    6. 'the' → logprob: -5.36210823059082
    7. ' the' → logprob: -6.23710823059082
    8. ' ' → logprob: -7.73710823059082
    9. '{' → logprob: -7.86210823059082
    10. '(origin' → logprob: -8.61210823059082

Token 367: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01672719605267048
    2. '
' → logprob: -4.641726970672607
    3. '  
' → logprob: -6.391726970672607
    4. ':' → logprob: -6.516726970672607
    5. '    
' → logprob: -6.516726970672607
    6. ' for' → logprob: -7.516726970672607
    7. '.' → logprob: -8.141727447509766
    8. ',' → logprob: -8.141727447509766
    9. '<|end|>' → logprob: -8.391727447509766
    10. '\n' → logprob: -8.641727447509766

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10951001942157745
    2. '
' → logprob: -2.7345099449157715
    3. '  
' → logprob: -4.2345099449157715
    4. ' for' → logprob: -4.8595099449157715
    5. '    
' → logprob: -4.8595099449157715
    6. 'for' → logprob: -5.9845099449157715
    7. '\n' → logprob: -6.3595099449157715
    8. ' 
' → logprob: -6.4845099449157715
    9. '   
' → logprob: -7.1095099449157715
    10. '<|end|>' → logprob: -7.1095099449157715

Token 369: ' anchor' (ID: 31067)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.154419407248497
    2. ' for' → logprob: -2.529419422149658
    3. 'for' → logprob: -3.279419422149658
    4. '
' → logprob: -4.154419422149658
    5. '    
' → logprob: -5.779419422149658
    6. '  
' → logprob: -6.154419422149658
    7. ' 
' → logprob: -6.654419422149658
    8. '```' → logprob: -6.904419422149658
    9. '\n' → logprob: -7.154419422149658
    10. ' ' → logprob: -7.654419422149658

Token 370: '_points' (ID: 30070)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.060205940157175064
    2. '_points' → logprob: -2.9352059364318848
    3. '_count' → logprob: -6.185205936431885
    4. '_pairs' → logprob: -6.810205936431885
    5. 'points' → logprob: -7.310205936431885
    6. 'es' → logprob: -7.810205936431885
    7. '_angles' → logprob: -8.185206413269043
    8. '_positions' → logprob: -8.560206413269043
    9. '_coords' → logprob: -8.685206413269043
    10. 'count' → logprob: -9.685206413269043

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016064399853348732
    2. '=' → logprob: -4.141064167022705
    3. ')' → logprob: -11.766064643859863
    4. '=[]' → logprob: -12.641064643859863
    5. 's' → logprob: -12.766064643859863
    6. ':' → logprob: -13.141064643859863
    7. '   ' → logprob: -13.391064643859863
    8. ' =[' → logprob: -13.516064643859863
    9. ' ' → logprob: -13.641064643859863
    10. ',' → logprob: -13.641064643859863

Token 372: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6852935552597046
    2. '[(' → logprob: -1.4352935552597046
    3. 'anchors' → logprob: -1.4352935552597046
    4. ' [' → logprob: -4.560293674468994
    5. ' anchors' → logprob: -5.060293674468994
    6. ' [(' → logprob: -6.060293674468994
    7. 'set' → logprob: -8.935293197631836
    8. '[a' → logprob: -9.435293197631836
    9. '[s' → logprob: -9.560293197631836
    10. '[]
' → logprob: -9.810293197631836

Token 373: 'a' (ID: 64)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.06098468229174614
    2. 'x' → logprob: -3.6859846115112305
    3. 'a' → logprob: -4.1859846115112305
    4. 'ax' → logprob: -4.5609846115112305
    5. 'anchor' → logprob: -5.5609846115112305
    6. ' anchors' → logprob: -5.8109846115112305
    7. 'anch' → logprob: -6.8109846115112305
    8. 'anc' → logprob: -8.93598461151123
    9. 'xi' → logprob: -9.43598461151123
    10. 'axes' → logprob: -10.31098461151123

Token 374: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013707150937989354
    2. '[i' → logprob: -6.876370906829834
    3. '][' → logprob: -8.501370429992676
    4. 'x' → logprob: -9.626370429992676
    5. '0' → logprob: -10.376370429992676
    6. 'i' → logprob: -10.501370429992676
    7. 'oints' → logprob: -13.376370429992676
    8. ',' → logprob: -13.876370429992676
    9. '   ' → logprob: -14.126370429992676
    10. '[
' → logprob: -14.251370429992676

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.125001907348633
    5. 'i' → logprob: -17.562501907348633
    6. '[' → logprob: -17.562501907348633
    7. 'x' → logprob: -18.125001907348633
    8. ']' → logprob: -18.875001907348633
    9. '

' → logprob: -18.937501907348633
    10. ',' → logprob: -19.125001907348633

Token 376: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.28924688696861267
    2. ',' → logprob: -1.414246916770935
    3. ',a' → logprob: -4.914247035980225
    4. ' ,' → logprob: -8.164246559143066
    5. '][' → logprob: -8.789246559143066
    6. 'a' → logprob: -9.539246559143066
    7. ' ],' → logprob: -9.789246559143066
    8. '),' → logprob: -9.914246559143066
    9. ',i' → logprob: -10.414246559143066
    10. '[' → logprob: -10.664246559143066

Token 377: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005237075500190258
    2. ' a' → logprob: -5.255237102508545
    3. '   ' → logprob: -13.005236625671387
    4. ' ' → logprob: -14.880236625671387
    5. '	a' → logprob: -15.130236625671387
    6. '    ' → logprob: -15.505236625671387
    7. '  ' → logprob: -15.880236625671387
    8. '       ' → logprob: -17.380237579345703
    9. ')a' → logprob: -17.880237579345703
    10. '     ' → logprob: -18.005237579345703

Token 378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03950842469930649
    2. '1' → logprob: -3.28950834274292
    3. '0' → logprob: -6.66450834274292
    4. '][' → logprob: -9.539508819580078
    5. ' ' → logprob: -10.539508819580078
    6. '],' → logprob: -10.539508819580078
    7. 'i' → logprob: -10.914508819580078
    8. '   ' → logprob: -11.289508819580078
    9. 'a' → logprob: -11.539508819580078
    10. '
' → logprob: -11.789508819580078

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.875000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '0' → logprob: -16.250001907348633
    5. '[' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.062501907348633
    7. '```' → logprob: -17.375001907348633
    8. '-' → logprob: -17.562501907348633
    9. ']' → logprob: -17.562501907348633
    10. '

' → logprob: -17.625001907348633

Token 380: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015979631280060858
    2. ')]' → logprob: -9.500160217285156
    3. ' )' → logprob: -9.625160217285156
    4. '])' → logprob: -11.375160217285156
    5. ')
' → logprob: -13.625160217285156
    6. '   ' → logprob: -13.625160217285156
    7. '),' → logprob: -14.000160217285156
    8. ']' → logprob: -14.125160217285156
    9. ')])' → logprob: -14.125160217285156
    10. '')' → logprob: -14.500160217285156

Token 381: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32153764367103577
    2. ')' → logprob: -1.6965376138687134
    3. ',' → logprob: -2.946537733078003
    4. 'for' → logprob: -3.321537733078003
    5. '   ' → logprob: -6.196537494659424
    6. ' ,' → logprob: -7.821537494659424
    7. ' )' → logprob: -8.571537971496582
    8. ' ' → logprob: -9.321537971496582
    9. '
' → logprob: -9.946537971496582
    10. ',
' → logprob: -10.071537971496582

Token 382: ' a' (ID: 261)
  Prédit: ' anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' anchors' → logprob: -0.7452118992805481
    2. 'anchors' → logprob: -0.8702118992805481
    3. 'a' → logprob: -2.4952118396759033
    4. ' a' → logprob: -3.7452118396759033
    5. 'anchor' → logprob: -8.245211601257324
    6. 'anch' → logprob: -9.745211601257324
    7. ' anchor' → logprob: -9.870211601257324
    8. ' ' → logprob: -12.995211601257324
    9. ' anch' → logprob: -13.182711601257324
    10. 'Anch' → logprob: -13.370211601257324

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12280720472335815
    2. 'in' → logprob: -2.872807264328003
    3. ' a' → logprob: -3.497807264328003
    4. 'a' → logprob: -3.747807264328003
    5. 'anchors' → logprob: -5.747807025909424
    6. ' anchors' → logprob: -6.372807025909424
    7. 'anchor' → logprob: -9.247807502746582
    8. ' _' → logprob: -9.622807502746582
    9. ' ' → logprob: -10.872807502746582
    10. 's' → logprob: -11.122807502746582

Token 384: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.029758475720882416
    2. ' anchors' → logprob: -3.5297584533691406
    3. 'anch' → logprob: -12.77975845336914
    4. 'range' → logprob: -12.90475845336914
    5. 'anchor' → logprob: -13.02975845336914
    6. ' range' → logprob: -15.02975845336914
    7. 'Anch' → logprob: -16.77975845336914
    8. '   ' → logprob: -16.90475845336914
    9. ' ' → logprob: -16.90475845336914
    10. ' anchor' → logprob: -18.40475845336914

Token 385: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037542327772825956
    2. ']
' → logprob: -6.128754138946533
    3. '   ' → logprob: -7.253754138946533
    4. ')]' → logprob: -7.253754138946533
    5. ' ]' → logprob: -9.128754615783691
    6. ')' → logprob: -10.378754615783691
    7. ']

' → logprob: -11.878754615783691
    8. ']
' → logprob: -13.253754615783691
    9. ' ]
' → logprob: -14.003754615783691
    10. '()]' → logprob: -14.128754615783691

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020935388281941414
    2. ' for' → logprob: -4.520935535430908
    3. 'for' → logprob: -4.895935535430908
    4. '
' → logprob: -6.270935535430908
    5. '```' → logprob: -8.27093505859375
    6. '    
' → logprob: -9.52093505859375
    7. '  
' → logprob: -10.27093505859375
    8. 'import' → logprob: -10.89593505859375
    9. 'n' → logprob: -11.02093505859375
    10. ',' → logprob: -11.27093505859375

Token 387: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5162060260772705
    2. 'for' (adapté à ' for') → logprob: -1.0162060260772705
    3. '   ' → logprob: -3.3912060260772705
    4. 'n' → logprob: -5.141205787658691
    5. ' n' → logprob: -6.641205787658691
    6. '
' → logprob: -8.391205787658691
    7. 'def' → logprob: -9.391205787658691
    8. '```' → logprob: -9.766205787658691
    9. 'import' → logprob: -10.391205787658691
    10. '    
' → logprob: -11.391205787658691

Token 388: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005236479919403791
    2. 'i' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.130236625671387
    4. '	i' → logprob: -14.880236625671387
    5. '   ' → logprob: -15.255236625671387
    6. ' j' → logprob: -16.75523567199707
    7. '    ' → logprob: -17.00523567199707
    8. '  ' → logprob: -17.25523567199707
    9. ' ' → logprob: -18.00523567199707
    10. '_i' → logprob: -18.75523567199707

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016087276861071587
    2. 'in' → logprob: -4.141087055206299
    3. ' ' → logprob: -10.391087532043457
    4. ',' → logprob: -12.016087532043457
    5. '   ' → logprob: -12.016087532043457
    6. '+' → logprob: -12.516087532043457
    7. '	in' → logprob: -13.141087532043457
    8. '<|end|>' → logprob: -13.641087532043457
    9. '  ' → logprob: -14.266087532043457
    10. ' ,' → logprob: -14.641087532043457

Token 390: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804149478673935
    2. ' range' → logprob: -3.288041591644287
    3. '   ' → logprob: -18.413042068481445
    4. ' ' → logprob: -18.663042068481445
    5. '	range' → logprob: -20.913042068481445
    6. '  ' → logprob: -21.038042068481445
    7. '(range' → logprob: -21.288042068481445
    8. '    ' → logprob: -21.413042068481445
    9. '```' → logprob: -21.913042068481445
    10. '0' → logprob: -23.413042068481445

Token 391: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005274549592286348
    2. '(len' → logprob: -5.255274772644043
    3. '(' → logprob: -10.380274772644043
    4. ' (' → logprob: -13.005274772644043
    5. ' n' → logprob: -13.130274772644043
    6. '(i' → logprob: -13.380274772644043
    7. 'len' → logprob: -13.505274772644043
    8. '   ' → logprob: -13.755274772644043
    9. 'n' → logprob: -13.755274772644043
    10. ' len' → logprob: -14.880274772644043

Token 392: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023110952228307724
    2. '):' → logprob: -4.148110866546631
    3. '-' → logprob: -5.148110866546631
    4. ' -' → logprob: -6.898110866546631
    5. '   ' → logprob: -8.523111343383789
    6. ' ):
' → logprob: -11.398111343383789
    7. '       ' → logprob: -12.273111343383789
    8. '()):
' → logprob: -12.898111343383789
    9. '  ' → logprob: -13.023111343383789
    10. ')' → logprob: -13.023111343383789

Token 393: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13216662406921387
    2. ' for' → logprob: -2.257166624069214
    3. '       ' → logprob: -4.007166862487793
    4. ' ' → logprob: -7.382166862487793
    5. '	for' → logprob: -9.132166862487793
    6. '<|end|>' → logprob: -9.257166862487793
    7. 'for' → logprob: -9.382166862487793
    8. '```' → logprob: -11.382166862487793
    9. '    ' → logprob: -11.632166862487793
    10. ',' → logprob: -11.757166862487793

Token 394: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38758495450019836
    2. ' for' → logprob: -1.137584924697876
    3. '   ' → logprob: -7.262585163116455
    4. '       ' → logprob: -11.512584686279297
    5. ' ' → logprob: -14.137584686279297
    6. '	for' → logprob: -14.137584686279297
    7. 'import' → logprob: -15.387584686279297
    8. '    ' → logprob: -15.512584686279297
    9. '```' → logprob: -15.887584686279297
    10. '    
' → logprob: -16.012584686279297

Token 395: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7075232267379761
    2. ' j' → logprob: -0.7075232267379761
    3. 'i' → logprob: -4.457523345947266
    4. ' i' → logprob: -5.957523345947266
    5. '   ' → logprob: -10.082523345947266
    6. ' range' → logprob: -10.457523345947266
    7. 'range' → logprob: -10.832523345947266
    8. '_j' → logprob: -13.457523345947266
    9. '	j' → logprob: -13.582523345947266
    10. '    ' → logprob: -13.582523345947266

Token 396: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009701796225272119
    2. 'in' → logprob: -7.625970363616943
    3. ' i' → logprob: -7.875970363616943
    4. ' ' → logprob: -9.750969886779785
    5. '=i' → logprob: -11.125969886779785
    6. ' =' → logprob: -11.875969886779785
    7. '=' → logprob: -12.500969886779785
    8. '   ' → logprob: -12.625969886779785
    9. '    ' → logprob: -12.625969886779785
    10. 'i' → logprob: -12.750969886779785

Token 397: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4057376980781555
    2. ' range' → logprob: -1.1557376384735107
    3. 'i' → logprob: -4.15573787689209
    4. ' i' → logprob: -5.90573787689209
    5. '(i' → logprob: -8.15573787689209
    6. '(range' → logprob: -12.53073787689209
    7. ' ' → logprob: -14.53073787689209
    8. '   ' → logprob: -14.90573787689209
    9. '[i' → logprob: -16.530736923217773
    10. ' (' → logprob: -16.530736923217773

Token 398: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1248021200299263
    2. 'i' → logprob: -2.6248021125793457
    3. ' i' → logprob: -3.1248021125793457
    4. ' (' → logprob: -6.999802112579346
    5. '   ' → logprob: -11.624802589416504
    6. '(' → logprob: -12.499802589416504
    7. ' range' → logprob: -13.124802589416504
    8. ' ' → logprob: -14.624802589416504
    9. 'range' → logprob: -14.999802589416504
    10. '{i' → logprob: -15.249802589416504

Token 399: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04304520785808563
    2. ' +' → logprob: -3.1680452823638916
    3. '+i' → logprob: -10.543045043945312
    4. '1' → logprob: -11.793045043945312
    5. '+
' → logprob: -12.543045043945312
    6. '   ' → logprob: -12.793045043945312
    7. '+j' → logprob: -13.043045043945312
    8. ' ' → logprob: -14.043045043945312
    9. ' +
' → logprob: -14.168045043945312
    10. ')+' → logprob: -15.293045043945312

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'i' → logprob: -17.000009536743164
    4. 'n' → logprob: -17.125009536743164
    5. '   ' → logprob: -18.000009536743164
    6. '2' → logprob: -18.375009536743164
    7. '```' → logprob: -18.500009536743164
    8. '
' → logprob: -18.625009536743164
    9. '0' → logprob: -20.250009536743164
    10. '１' → logprob: -20.750009536743164

Token 401: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026132361963391304
    2. ',n' → logprob: -6.252613067626953
    3. ' ,' → logprob: -8.127613067626953
    4. '+' → logprob: -8.877613067626953
    5. ',i' → logprob: -9.627613067626953
    6. '1' → logprob: -10.127613067626953
    7. '):
' → logprob: -10.377613067626953
    8. ',j' → logprob: -10.877613067626953
    9. '   ' → logprob: -11.002613067626953
    10. '```' → logprob: -11.002613067626953

Token 402: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16024646162986755
    2. '):' → logprob: -1.91024649143219
    3. '):

' → logprob: -11.535246849060059
    4. ':' → logprob: -12.660246849060059
    5. '):
' → logprob: -12.785246849060059
    6. '   ' → logprob: -12.910246849060059
    7. '():
' → logprob: -13.660246849060059
    8. ' ):
' → logprob: -14.160246849060059
    9. '       ' → logprob: -14.535246849060059
    10. ':
' → logprob: -14.660246849060059

Token 403: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043221889063715935
    2. '        
' → logprob: -8.750432014465332
    3. ',' → logprob: -9.750432014465332
    4. '   ' → logprob: -9.875432014465332
    5. ' if' → logprob: -10.125432014465332
    6. '  
' → logprob: -10.750432014465332
    7. '<|end|>' → logprob: -10.750432014465332
    8. '
' → logprob: -11.250432014465332
    9. '           ' → logprob: -11.375432014465332
    10. ':' → logprob: -11.375432014465332

Token 404: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1924523413181305
    2. 'def' → logprob: -2.3174524307250977
    3. 'xi' → logprob: -3.4424524307250977
    4. 'ax' → logprob: -3.8174524307250977
    5. '   ' → logprob: -4.817452430725098
    6. 'a' → logprob: -5.192452430725098
    7. '(x' → logprob: -5.442452430725098
    8. '(ax' → logprob: -6.192452430725098
    9. ' x' → logprob: -7.192452430725098
    10. 'Ax' → logprob: -8.067452430725098

Token 405: ' segments' (ID: 33749)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0430846214294434
    2. 'x' → logprob: -1.2930846214294434
    3. 'xi' → logprob: -1.7930846214294434
    4. 'a' → logprob: -2.2930846214294434
    5. 'ax' → logprob: -2.4180846214294434
    6. '(x' → logprob: -5.668084621429443
    7. 'if' → logprob: -5.793084621429443
    8. 'p' → logprob: -5.918084621429443
    9. 'ai' → logprob: -6.418084621429443
    10. '(ax' → logprob: -6.668084621429443

Token 406: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2283879667520523
    2. 'a' → logprob: -2.4783880710601807
    3. 'p' → logprob: -3.8533880710601807
    4. ' (' → logprob: -4.478387832641602
    5. '=' → logprob: -4.603387832641602
    6. 'from' → logprob: -4.853387832641602
    7. ',' → logprob: -4.853387832641602
    8. '=(' → logprob: -4.853387832641602
    9. '(p' → logprob: -4.978387832641602
    10. ' p' → logprob: -5.478387832641602

Token 407: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.5845657587051392
    2. '(' → logprob: -1.5845657587051392
    3. '(anchor' → logprob: -2.4595656394958496
    4. ' anchor' → logprob: -2.5845656394958496
    5. ' (' → logprob: -2.7095656394958496
    6. '   ' → logprob: -5.95956563949585
    7. 'origin' → logprob: -5.95956563949585
    8. '(origin' → logprob: -6.58456563949585
    9. '0' → logprob: -6.83456563949585
    10. ' origin' → logprob: -7.20956563949585

Token 408: ' i' (ID: 575)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.007071967236697674
    2. '[i' → logprob: -5.1320719718933105
    3. 'points' → logprob: -7.5070719718933105
    4. 's' → logprob: -9.007071495056152
    5. 'i' → logprob: -9.507071495056152
    6. '_i' → logprob: -9.757071495056152
    7. '(i' → logprob: -9.757071495056152
    8. ' points' → logprob: -10.007071495056152
    9. '_POINTS' → logprob: -10.132071495056152
    10. ',' → logprob: -10.382071495056152

Token 409: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7696756720542908
    2. ' ,' → logprob: -1.8946757316589355
    3. ' to' → logprob: -2.0196757316589355
    4. ' =' → logprob: -2.2696757316589355
    5. ' and' → logprob: -2.2696757316589355
    6. '[' → logprob: -3.7696757316589355
    7. 'to' → logprob: -5.2696757316589355
    8. 'a' → logprob: -5.7696757316589355
    9. '=' → logprob: -5.8946757316589355
    10. ')' → logprob: -6.5196757316589355

Token 410: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25258779525756836
    2. ' (' → logprob: -1.5025877952575684
    3. 'origin' → logprob: -8.127588272094727
    4. 'anchor' → logprob: -8.752588272094727
    5. ' origin' → logprob: -9.627588272094727
    6. '0' → logprob: -10.127588272094727
    7. ' ' → logprob: -10.627588272094727
    8. '(origin' → logprob: -10.627588272094727
    9. '(anchor' → logprob: -10.752588272094727
    10. ' anchor' → logprob: -10.752588272094727

Token 411: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0123573541641235
    2. '           ' → logprob: -1.0123573541641235
    3. ' and' → logprob: -1.3873573541641235
    4. ')' → logprob: -4.387357234954834
    5. ',
' → logprob: -5.762357234954834
    6. ' ,' → logprob: -6.137357234954834
    7. '
' → logprob: -6.637357234954834
    8. 'and' → logprob: -7.137357234954834
    9. ' =' → logprob: -7.512357234954834
    10. ' (' → logprob: -7.887357234954834

Token 412: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.5767231583595276
    2. ' anchor' → logprob: -0.8267231583595276
    3. '(anchor' → logprob: -8.326723098754883
    4. ' ' → logprob: -8.826723098754883
    5. ' origin' → logprob: -9.326723098754883
    6. 'origin' → logprob: -9.451723098754883
    7. ' (' → logprob: -9.701723098754883
    8. '(' → logprob: -10.201723098754883
    9. '   ' → logprob: -10.326723098754883
    10. '0' → logprob: -11.076723098754883

Token 413: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.31348949670791626
    2. 'j' → logprob: -1.3134894371032715
    3. '[j' → logprob: -8.81348991394043
    4. ' ' → logprob: -10.68848991394043
    5. '(j' → logprob: -11.56348991394043
    6. '_j' → logprob: -11.68848991394043
    7. ' (' → logprob: -12.31348991394043
    8. '	j' → logprob: -12.31348991394043
    9. '```' → logprob: -12.56348991394043
    10. '[' → logprob: -12.68848991394043

Token 414: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.023109085857868195
    2. 'to' → logprob: -4.148108959197998
    3. '[' → logprob: -6.148108959197998
    4. '           ' → logprob: -6.398108959197998
    5. ')' → logprob: -6.773108959197998
    6. ' and' → logprob: -8.148109436035156
    7. ' (' → logprob: -8.148109436035156
    8. '[i' → logprob: -8.523109436035156
    9. '       ' → logprob: -8.648109436035156
    10. ' ' → logprob: -8.773109436035156

Token 415: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.09981027990579605
    2. ' origin' → logprob: -2.8498103618621826
    3. 'anchor' → logprob: -3.4748103618621826
    4. '(' → logprob: -5.3498101234436035
    5. ' (' → logprob: -7.2248101234436035
    6. ' anchor' → logprob: -7.5998101234436035
    7. ' ' → logprob: -9.474810600280762
    8. '0' → logprob: -9.974810600280762
    9. '(origin' → logprob: -9.974810600280762
    10. '(anchor' → logprob: -11.974810600280762

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0268095675855875
    2. ',' → logprob: -4.6518096923828125
    3. '
' → logprob: -4.7768096923828125
    4. '            
' → logprob: -5.7768096923828125
    5. ':
' → logprob: -7.1518096923828125
    6. '  
' → logprob: -7.4018096923828125
    7. '       ' → logprob: -7.5268096923828125
    8. ':' → logprob: -7.5268096923828125
    9. ' if' → logprob: -7.7768096923828125
    10. ',
' → logprob: -7.9018096923828125

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000817369669675827
    2. '       ' → logprob: -8.25081729888916
    3. ',' → logprob: -8.50081729888916
    4. '            
' → logprob: -9.25081729888916
    5. '```' → logprob: -9.87581729888916
    6. '<|end|>' → logprob: -9.87581729888916
    7. '
' → logprob: -10.25081729888916
    8. '   ' → logprob: -10.50081729888916
    9. ' if' → logprob: -11.00081729888916
    10. '  
' → logprob: -11.62581729888916

Token 418: ' #' (ID: 1069)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.549195408821106
    2. 'x' → logprob: -1.924195408821106
    3. 'a' → logprob: -2.6741952896118164
    4. 'def' → logprob: -2.9241952896118164
    5. '           ' → logprob: -3.2991952896118164
    6. 'p' → logprob: -3.4241952896118164
    7. 'ai' → logprob: -3.9241952896118164
    8. 'pi' → logprob: -4.299195289611816
    9. ' xi' → logprob: -4.549195289611816
    10. 'ax' → logprob: -4.674195289611816

Token 419: ' If' (ID: 1843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7981849312782288
    2. 'xi' → logprob: -1.048184871673584
    3. 'a' → logprob: -2.798184871673584
    4. 'x' → logprob: -3.048184871673584
    5. 'ax' → logprob: -3.173184871673584
    6. 'ai' → logprob: -4.048184871673584
    7. ' def' → logprob: -4.923184871673584
    8. 'p' → logprob: -5.173184871673584
    9. ' xi' → logprob: -5.548184871673584
    10. ' ax' → logprob: -5.673184871673584

Token 420: ' they' (ID: 1023)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.6254904866218567
    2. ' anchor' → logprob: -1.000490427017212
    3. ' segments' → logprob: -3.375490427017212
    4. 'segments' → logprob: -3.875490427017212
    5. '(anchor' → logprob: -4.250490665435791
    6. 'do' → logprob: -4.875490665435791
    7. 'inter' → logprob: -5.375490665435791
    8. 'i' → logprob: -5.625490665435791
    9. ' i' → logprob: -6.125490665435791
    10. 'anchors' → logprob: -6.125490665435791

Token 421: ' only' (ID: 1606)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.9044654965400696
    2. ' are' → logprob: -1.5294654369354248
    3. ' intersect' → logprob: -2.279465436935425
    4. 'are' → logprob: -2.904465436935425
    5. 'import' → logprob: -3.029465436935425
    6. 'def' → logprob: -3.654465436935425
    7. ' do' → logprob: -3.654465436935425
    8. 'do' → logprob: -3.654465436935425
    9. '[' → logprob: -3.779465436935425
    10. ' share' → logprob: -4.654465675354004

Token 422: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.20544302463531494
    2. ' intersect' → logprob: -2.5804429054260254
    3. 'share' → logprob: -2.7054429054260254
    4. ' share' → logprob: -3.2054429054260254
    5. 'meet' → logprob: -6.330442905426025
    6. ' meet' → logprob: -7.955442905426025
    7. ' ' → logprob: -8.455443382263184
    8. 'touch' → logprob: -8.830443382263184
    9. '_inter' → logprob: -10.205443382263184
    10. 'import' → logprob: -11.330443382263184

Token 423: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0004931025905534625
    2. 'at' → logprob: -7.625493049621582
    3. ' ' → logprob: -12.875493049621582
    4. ',' → logprob: -13.625493049621582
    5. ' in' → logprob: -15.125493049621582
    6. '=' → logprob: -15.375493049621582
    7. ' ,' → logprob: -15.625493049621582
    8. '	at' → logprob: -15.625493049621582
    9. ')' → logprob: -16.2504940032959
    10. 'import' → logprob: -16.5004940032959

Token 424: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2014836072921753
    2. ' (' → logprob: -1.7014836072921753
    3. '0' → logprob: -10.451483726501465
    4. 'origin' → logprob: -10.951483726501465
    5. ' ' → logprob: -11.076483726501465
    6. ' origin' → logprob: -11.951483726501465
    7. '(origin' → logprob: -13.576483726501465
    8. '((' → logprob: -15.576483726501465
    9. '[' → logprob: -16.20148277282715
    10. ' the' → logprob: -16.57648277282715

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3177495300769806
    2. ' or' → logprob: -2.192749500274658
    3. ':
' → logprob: -2.567749500274658
    4. ':' → logprob: -3.192749500274658
    5. '           ' → logprob: -3.442749500274658
    6. ' if' → logprob: -6.067749500274658
    7. ' and' → logprob: -6.067749500274658
    8. '               ' → logprob: -6.692749500274658
    9. 'or' → logprob: -6.817749500274658
    10. 'if' → logprob: -6.942749500274658

Token 426: ' that's' (ID: 10954)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.05785072222352028
    2. '               ' → logprob: -3.3078508377075195
    3. 'continue' → logprob: -3.9328508377075195
    4. '	continue' → logprob: -11.55785083770752
    5. '                   ' → logprob: -12.18285083770752
    6. '   ' → logprob: -12.30785083770752
    7. '           ' → logprob: -12.80785083770752
    8. '              ' → logprob: -13.93285083770752
    9. ',' → logprob: -13.93285083770752
    10. '                ' → logprob: -14.43285083770752

Token 427: ' fine' (ID: 8975)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0698519945144653
    2. ' True' → logprob: -1.1948519945144653
    3. ' okay' → logprob: -2.319851875305176
    4. ' fine' → logprob: -2.444851875305176
    5. 'ok' → logprob: -3.194851875305176
    6. ' ok' → logprob: -3.569851875305176
    7. ' acceptable' → logprob: -3.694851875305176
    8. 'okay' → logprob: -3.819851875305176
    9. 'allowed' → logprob: -3.944851875305176
    10. 'fine' → logprob: -3.944851875305176

Token 428: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006840999238193035
    2. ',' → logprob: -5.63184118270874
    3. ' if' → logprob: -6.50684118270874
    4. '.' → logprob: -7.88184118270874
    5. '
' → logprob: -8.006840705871582
    6. ' or' → logprob: -8.131840705871582
    7. '            
' → logprob: -8.881840705871582
    8. ';' → logprob: -9.131840705871582
    9. 'if' → logprob: -9.256840705871582
    10. ':
' → logprob: -9.381840705871582

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010676169040380046
    2. '            
' → logprob: -9.375106811523438
    3. '
' → logprob: -12.250106811523438
    4. '		' → logprob: -12.375106811523438
    5. '       ' → logprob: -12.375106811523438
    6. '               ' → logprob: -13.750106811523438
    7. '  
' → logprob: -13.750106811523438
    8. ',' → logprob: -14.250106811523438
    9. ' if' → logprob: -14.250106811523438
    10. '<|end|>' → logprob: -14.250106811523438

Token 430: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.734154999256134
    2. '           ' → logprob: -1.2341549396514893
    3. ' x' → logprob: -2.1091549396514893
    4. 'x' → logprob: -3.1091549396514893
    5. 'if' → logprob: -3.2341549396514893
    6. '            
' → logprob: -4.609155178070068
    7. ' p' → logprob: -5.859155178070068
    8. 'xi' → logprob: -6.234155178070068
    9. '       ' → logprob: -6.359155178070068
    10. ' 
' → logprob: -6.859155178070068

Token 431: ' Otherwise' (ID: 33987)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.3151237368583679
    2. 'ax' → logprob: -2.6901237964630127
    3. 'pi' → logprob: -3.1901237964630127
    4. 'a' → logprob: -3.5651237964630127
    5. 'def' → logprob: -3.5651237964630127
    6. 'ai' → logprob: -3.8151237964630127
    7. 'if' → logprob: -3.8151237964630127
    8. ' xi' → logprob: -4.065123558044434
    9. 'x' → logprob: -4.315123558044434
    10. ' ax' → logprob: -4.940123558044434

Token 432: ' crossing' (ID: 50946)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2296491116285324
    2. ' if' → logprob: -2.604649066925049
    3. '           ' → logprob: -2.729649066925049
    4. ':
' → logprob: -3.354649066925049
    5. '
' → logprob: -4.104649066925049
    6. 'if' → logprob: -5.479649066925049
    7. ':' → logprob: -5.854649066925049
    8. ' ,' → logprob: -5.854649066925049
    9. ',
' → logprob: -6.604649066925049
    10. '               ' → logprob: -6.604649066925049

Token 433: ' means' (ID: 4748)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9320633411407471
    2. ' if' → logprob: -0.9320633411407471
    3. 'if' → logprob: -3.057063341140747
    4. ' occurs' → logprob: -3.307063341140747
    5. ' =' → logprob: -3.557063341140747
    6. ':' → logprob: -3.682063341140747
    7. ',' → logprob: -4.057063102722168
    8. ':
' → logprob: -4.182063102722168
    9. ' points' → logprob: -5.057063102722168
    10. ' is' → logprob: -5.057063102722168

Token 434: ' there' (ID: 1354)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4910675585269928
    2. 'True' → logprob: -1.6160675287246704
    3. '(anchor' → logprob: -2.99106764793396
    4. 'anchor' → logprob: -3.11606764793396
    5. 'def' → logprob: -3.86606764793396
    6. 'anchors' → logprob: -4.116067409515381
    7. ' anchor' → logprob: -4.491067409515381
    8. ' anchors' → logprob: -4.491067409515381
    9. '(True' → logprob: -5.366067409515381
    10. '
' → logprob: -5.491067409515381

Token 435: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5775154232978821
    2. 'is' → logprob: -0.8275154232978821
    3. ''s' → logprob: -7.577515602111816
    4. ' exists' → logprob: -7.702515602111816
    5. 'exists' → logprob: -7.827515602111816
    6. 'intersection' → logprob: -10.077515602111816
    7. ' intersection' → logprob: -10.577515602111816
    8. ' points' → logprob: -10.827515602111816
    9. ' must' → logprob: -11.077515602111816
    10. ' will' → logprob: -11.202515602111816

Token 436: ' intersection' (ID: 42002)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.040489889681339264
    2. ' a' → logprob: -3.915489912033081
    3. ' intersection' → logprob: -4.415489673614502
    4. ' some' → logprob: -5.665489673614502
    5. 'intersection' → logprob: -6.165489673614502
    6. 'an' → logprob: -7.290489673614502
    7. ' another' → logprob: -7.415489673614502
    8. 'a' → logprob: -7.415489673614502
    9. ' more' → logprob: -9.79049015045166
    10. 'inter' → logprob: -10.79049015045166

Token 437: ' between' (ID: 2870)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.416752427816391
    2. ' if' → logprob: -2.291752338409424
    3. ' point' → logprob: -2.416752338409424
    4. ' not' → logprob: -3.416752338409424
    5. ' !=' → logprob: -4.041752338409424
    6. ' other' → logprob: -4.666752338409424
    7. ' between' → logprob: -4.666752338409424
    8. ' occurs' → logprob: -4.666752338409424
    9. ',' → logprob: -4.791752338409424
    10. ' =' → logprob: -4.916752338409424

Token 438: ' these' (ID: 1879)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6384518146514893
    2. 'the' → logprob: -1.8884518146514893
    3. ' segments' → logprob: -2.0134518146514893
    4. 'segments' → logprob: -2.8884518146514893
    5. ' these' → logprob: -3.7634518146514893
    6. ' line' → logprob: -4.13845157623291
    7. ' anchors' → logprob: -4.26345157623291
    8. 'anchors' → logprob: -4.26345157623291
    9. ' two' → logprob: -4.38845157623291
    10. ' anchor' → logprob: -4.63845157623291

Token 439: ' two' (ID: 1920)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.20438164472579956
    2. ' two' → logprob: -2.4543817043304443
    3. 'segments' → logprob: -2.8293817043304443
    4. ' lines' → logprob: -3.4543817043304443
    5. ' line' → logprob: -6.204381465911865
    6. ' points' → logprob: -6.329381465911865
    7. '_segments' → logprob: -6.579381465911865
    8. 'two' → logprob: -6.704381465911865
    9. ' ' → logprob: -8.079381942749023
    10. '_two' → logprob: -8.454381942749023

Token 440: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.1265164315700531
    2. 'segments' → logprob: -2.501516342163086
    3. ' lines' → logprob: -3.626516342163086
    4. ' line' → logprob: -5.001516342163086
    5. '_segments' → logprob: -6.001516342163086
    6. 'lines' → logprob: -8.001516342163086
    7. 'line' → logprob: -9.001516342163086
    8. '_line' → logprob: -9.376516342163086
    9. 'segment' → logprob: -9.376516342163086
    10. ' ' → logprob: -9.501516342163086

Token 441: ' other' (ID: 1273)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29908180236816406
    2. ' not' → logprob: -2.174081802368164
    3. ' other' → logprob: -2.924081802368164
    4. ' at' → logprob: -3.424081802368164
    5. ' that' → logprob: -4.049081802368164
    6. 'and' → logprob: -4.174081802368164
    7. ',' → logprob: -4.799081802368164
    8. ' !=' → logprob: -5.799081802368164
    9. ' but' → logprob: -5.924081802368164
    10. ' if' → logprob: -5.924081802368164

Token 442: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.38687169551849365
    2. ' than' → logprob: -1.1368716955184937
    3. '_than' → logprob: -14.386871337890625
    4. '
' → logprob: -16.761871337890625
    5. 'thane' → logprob: -17.261871337890625
    6. '-than' → logprob: -17.511871337890625
    7. 'Than' → logprob: -17.761871337890625
    8. ' ' → logprob: -18.011871337890625
    9. 'that' → logprob: -18.136871337890625
    10. '   ' → logprob: -18.761871337890625

Token 443: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.13745136559009552
    2. ' origin' → logprob: -2.137451410293579
    3. '(' → logprob: -5.887451171875
    4. '0' → logprob: -5.887451171875
    5. ' the' → logprob: -6.137451171875
    6. 'the' → logprob: -6.387451171875
    7. ' (' → logprob: -7.637451171875
    8. '(origin' → logprob: -8.012451171875
    9. ' ' → logprob: -9.137451171875
    10. '_origin' → logprob: -9.887451171875

Token 444: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1052059605717659
    2. ':
' → logprob: -3.23020601272583
    3. ' and' → logprob: -3.73020601272583
    4. ':' → logprob: -3.85520601272583
    5. ',' → logprob: -4.98020601272583
    6. ' if' → logprob: -6.60520601272583
    7. '               ' → logprob: -6.98020601272583
    8. ' or' → logprob: -7.10520601272583
    9. ',
' → logprob: -7.48020601272583
    10. '.' → logprob: -7.60520601272583

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006095996126532555
    2. ',' → logprob: -6.006095886230469
    3. ':' → logprob: -6.881095886230469
    4. ' if' → logprob: -7.256095886230469
    5. '       ' → logprob: -7.631095886230469
    6. '            
' → logprob: -8.256095886230469
    7. ':
' → logprob: -8.381095886230469
    8. '   ' → logprob: -8.506095886230469
    9. '<|end|>' → logprob: -9.006095886230469
    10. '               ' → logprob: -9.506095886230469

Token 446: ' ai' (ID: 8440)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5896995663642883
    2. 'x' → logprob: -1.7146995067596436
    3. 'xi' → logprob: -1.7146995067596436
    4. ' x' → logprob: -3.7146995067596436
    5. 'ax' → logprob: -4.339699745178223
    6. 'dx' → logprob: -4.339699745178223
    7. ' xi' → logprob: -4.839699745178223
    8. 'a' → logprob: -5.339699745178223
    9. ' ax' → logprob: -5.589699745178223
    10. '       ' → logprob: -5.589699745178223

Token 447: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.556387186050415
    2. ' =' → logprob: -1.181387186050415
    3. '=' → logprob: -2.181387186050415
    4. '_x' → logprob: -5.181386947631836
    5. ',' → logprob: -6.681386947631836
    6. '=(' → logprob: -10.181386947631836
    7. '0' → logprob: -10.681386947631836
    8. ' ' → logprob: -12.056386947631836
    9. 's' → logprob: -12.306386947631836
    10. '_' → logprob: -12.431386947631836

Token 448: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.006776358000934124
    2. ' anchor' → logprob: -5.006776332855225
    3. '(anchor' → logprob: -10.131776809692383
    4. '(' → logprob: -11.631776809692383
    5. 'anchors' → logprob: -12.131776809692383
    6. ' (' → logprob: -12.881776809692383
    7. 'anch' → logprob: -13.506776809692383
    8. '   ' → logprob: -14.131776809692383
    9. ' ' → logprob: -14.381776809692383
    10. '0' → logprob: -14.694276809692383

Token 449: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0018627146491780877
    2. 'points' → logprob: -7.001862525939941
    3. '[' → logprob: -7.751862525939941
    4. 's' → logprob: -8.001862525939941
    5. 'x' → logprob: -9.876862525939941
    6. 'oints' → logprob: -10.376862525939941
    7. 'i' → logprob: -10.751862525939941
    8. '[i' → logprob: -11.126862525939941
    9. '_POINTS' → logprob: -11.376862525939941
    10. '
' → logprob: -11.626862525939941

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.000004768371582
    4. ' [' → logprob: -15.250004768371582
    5. '][' → logprob: -16.0000057220459
    6. '[j' → logprob: -16.0000057220459
    7. ' i' → logprob: -17.1250057220459
    8. '
' → logprob: -17.3750057220459
    9. '```' → logprob: -17.3750057220459
    10. ')[' → logprob: -17.6250057220459

Token 451: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.014901205897331238
    2. ']' → logprob: -4.514901161193848
    3. '[' → logprob: -5.764901161193848
    4. '][' → logprob: -7.514901161193848
    5. '0' → logprob: -9.764901161193848
    6. ']
' → logprob: -9.764901161193848
    7. ' ]
' → logprob: -10.764901161193848
    8. '
' → logprob: -11.014901161193848
    9. ']

' → logprob: -12.889901161193848
    10. '   ' → logprob: -13.139901161193848

Token 452: '           ' (ID: 352)
  Prédit: ' aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aj' → logprob: -1.356406331062317
    2. '  
' → logprob: -2.1064062118530273
    3. ' x' → logprob: -2.6064062118530273
    4. ',' → logprob: -2.7314062118530273
    5. '           ' → logprob: -2.7314062118530273
    6. '<|end|>' → logprob: -2.9814062118530273
    7. ' uj' → logprob: -2.9814062118530273
    8. ' 
' → logprob: -3.2314062118530273
    9. 'x' → logprob: -3.3564062118530273
    10. '            
' → logprob: -3.4814062118530273

Token 453: ' aj' (ID: 7261)
  Prédit: ' aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aj' → logprob: -0.47426629066467285
    2. 'aj' (adapté à ' aj') → logprob: -0.9742662906646729
    3. 'x' → logprob: -9.849266052246094
    4. ' x' → logprob: -9.974266052246094
    5. ' ' → logprob: -10.099266052246094
    6. '0' → logprob: -11.474266052246094
    7. '
' → logprob: -11.599266052246094
    8. '   ' → logprob: -11.974266052246094
    9. ' 
' → logprob: -12.474266052246094
    10. '  
' → logprob: -12.974266052246094

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34859147667884827
    2. '=' → logprob: -1.2235914468765259
    3. '=(' → logprob: -9.348591804504395
    4. '=
' → logprob: -10.598591804504395
    5. ',' → logprob: -11.223591804504395
    6. '=[' → logprob: -12.098591804504395
    7. ' =
' → logprob: -12.848591804504395
    8. '   ' → logprob: -13.223591804504395
    9. ' =(' → logprob: -13.223591804504395
    10. ')' → logprob: -13.723591804504395

Token 455: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.0036026788875460625
    2. ' anchor' → logprob: -5.628602504730225
    3. '(anchor' → logprob: -13.003602981567383
    4. '.anchor' → logprob: -16.003602981567383
    5. ' ' → logprob: -16.628602981567383
    6. 'anch' → logprob: -16.628602981567383
    7. '  ' → logprob: -17.128602981567383
    8. '   ' → logprob: -17.128602981567383
    9. '-anchor' → logprob: -18.128602981567383
    10. 'anchors' → logprob: -18.378602981567383

Token 456: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00013679367839358747
    2. 'points' → logprob: -9.625136375427246
    3. '[j' → logprob: -9.750136375427246
    4. 's' → logprob: -12.625136375427246
    5. '[' → logprob: -12.875136375427246
    6. '[i' → logprob: -13.500136375427246
    7. 'Points' → logprob: -13.625136375427246
    8. '_POINTS' → logprob: -13.750136375427246
    9. '
' → logprob: -14.625136375427246
    10. 'j' → logprob: -14.625136375427246

Token 457: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004035017918795347
    2. '[' → logprob: -8.75040340423584
    3. 'j' → logprob: -8.75040340423584
    4. '[i' → logprob: -9.50040340423584
    5. ']' → logprob: -12.75040340423584
    6. '[
' → logprob: -12.87540340423584
    7. '```' → logprob: -12.87540340423584
    8. ' j' → logprob: -14.25040340423584
    9. '][' → logprob: -14.37540340423584
    10. ' [' → logprob: -14.37540340423584

Token 458: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16553381085395813
    2. ']' → logprob: -1.9155337810516357
    3. ')
' → logprob: -5.790534019470215
    4. ')' → logprob: -6.665534019470215
    5. ']

' → logprob: -7.915534019470215
    6. '   ' → logprob: -8.540534019470215
    7. ')]' → logprob: -9.290534019470215
    8. '           ' → logprob: -9.540534019470215
    9. ']
' → logprob: -9.915534019470215
    10. '       ' → logprob: -10.040534019470215

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004274988546967506
    2. '            
' → logprob: -5.879274845123291
    3. '
' → logprob: -7.629274845123291
    4. ',' → logprob: -8.50427532196045
    5. ' if' → logprob: -9.00427532196045
    6. '  
' → logprob: -9.12927532196045
    7. ' 
' → logprob: -9.25427532196045
    8. '       ' → logprob: -9.50427532196045
    9. '```' → logprob: -9.50427532196045
    10. '<|end|>' → logprob: -9.50427532196045

Token 460: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03244473412632942
    2. 'den' → logprob: -4.407444953918457
    3. 'dx' → logprob: -4.657444953918457
    4. 'x' → logprob: -5.032444953918457
    5. 'xi' → logprob: -6.407444953918457
    6. ' def' → logprob: -7.032444953918457
    7. '   ' → logprob: -7.657444953918457
    8. 'd' → logprob: -8.032444953918457
    9. '#' (adapté à ' #') → logprob: -9.657444953918457
    10. 'vec' → logprob: -9.657444953918457

Token 461: ' If' (ID: 1843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05104555934667587
    2. 'dx' → logprob: -3.5510456562042236
    3. '#' → logprob: -5.3010454177856445
    4. 'vec' → logprob: -5.4260454177856445
    5. 'den' → logprob: -5.5510454177856445
    6. ' def' → logprob: -5.5510454177856445
    7. 'xi' → logprob: -6.9260454177856445
    8. 'x' → logprob: -7.3010454177856445
    9. 'dir' → logprob: -7.8010454177856445
    10. 'vx' → logprob: -8.051045417785645

Token 462: ' anchors' (ID: 114642)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.8524898290634155
    2. '(' → logprob: -1.7274898290634155
    3. ' (' → logprob: -1.7274898290634155
    4. ' ai' → logprob: -2.227489948272705
    5. '(ai' → logprob: -2.227489948272705
    6. 'abs' → logprob: -7.727489948272705
    7. ' math' → logprob: -7.852489948272705
    8. '((' → logprob: -8.102489471435547
    9. ' abs' → logprob: -8.352489471435547
    10. '0' → logprob: -8.352489471435547

Token 463: ' are' (ID: 553)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3444720208644867
    2. '[i' → logprob: -2.2194719314575195
    3. '[' → logprob: -2.3444719314575195
    4. ' are' → logprob: -2.9694719314575195
    5. ' i' → logprob: -3.7194719314575195
    6. 'are' → logprob: -6.3444719314575195
    7. '==' → logprob: -6.5944719314575195
    8. ' and' → logprob: -6.7194719314575195
    9. ' ==' → logprob: -6.9694719314575195
    10. ' lie' → logprob: -7.2194719314575195

Token 464: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.31063905358314514
    2. '(' → logprob: -2.5606391429901123
    3. ' col' → logprob: -2.5606391429901123
    4. 'on' → logprob: -3.0606391429901123
    5. '0' → logprob: -3.4356391429901123
    6. 'ai' → logprob: -3.8106391429901123
    7. ' on' → logprob: -5.310638904571533
    8. 'aligned' → logprob: -6.435638904571533
    9. '(ai' → logprob: -6.685638904571533
    10. 'co' → logprob: -7.185638904571533

Token 465: 'inear' (ID: 133017)
  Prédit: 'inear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inear' → logprob: -0.001502598519437015
    2. 'linear' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.876502990722656
    4. 'ine' → logprob: -16.001502990722656
    5. '```' → logprob: -17.751502990722656
    6. '[' → logprob: -18.751502990722656
    7. '    ' → logprob: -18.876502990722656
    8. '       ' → logprob: -19.126502990722656
    9. '  ' → logprob: -19.376502990722656
    10. 'inea' → logprob: -19.876502990722656

Token 466: ' with' (ID: 483)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0862819105386734
    2. ' with' → logprob: -2.9612820148468018
    3. 'and' → logprob: -4.211281776428223
    4. ',' → logprob: -4.711281776428223
    5. ':' → logprob: -5.711281776428223
    6. 'with' → logprob: -6.461281776428223
    7. ':
' → logprob: -7.336281776428223
    8. ' (' → logprob: -7.836281776428223
    9. ' or' → logprob: -7.961281776428223
    10. ' ,' → logprob: -8.836281776428223

Token 467: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.7026380300521851
    2. '0' → logprob: -1.327638030052185
    3. '(' → logprob: -1.827638030052185
    4. ' origin' → logprob: -2.7026381492614746
    5. ' (' → logprob: -4.577638149261475
    6. ' ' → logprob: -7.202638149261475
    7. 'the' → logprob: -7.702638149261475
    8. ' the' → logprob: -8.327637672424316
    9. 'orig' → logprob: -11.077637672424316
    10. '
' → logprob: -11.327637672424316

Token 468: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08410787582397461
    2. ',' → logprob: -3.2091078758239746
    3. 'and' → logprob: -4.334107875823975
    4. ' (' → logprob: -4.584107875823975
    5. ':' → logprob: -4.584107875823975
    6. ':
' → logprob: -5.459107875823975
    7. '           ' → logprob: -7.084107875823975
    8. ' or' → logprob: -7.459107875823975
    9. ' but' → logprob: -8.084108352661133
    10. '=' → logprob: -8.709108352661133

Token 469: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.06948983669281
    2. ' continue' → logprob: -1.19448983669281
    3. ' dx' → logprob: -1.94448983669281
    4. 'dx' → logprob: -2.6944899559020996
    5. 'continue' → logprob: -3.1944899559020996
    6. ' (' → logprob: -3.5694899559020996
    7. ' x' → logprob: -3.8194899559020996
    8. 'x' → logprob: -5.1944899559021
    9. ' xi' → logprob: -5.3194899559021
    10. '#' → logprob: -5.3194899559021

Token 470: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30315354466438293
    2. 'if' → logprob: -1.8031535148620605
    3. '           ' → logprob: -3.4281535148620605
    4. ' cross' → logprob: -4.4281535148620605
    5. ' vectors' → logprob: -4.5531535148620605
    6. 'dx' → logprob: -5.3031535148620605
    7. ' ai' → logprob: -5.4281535148620605
    8. ' dx' → logprob: -5.6781535148620605
    9. 'vectors' → logprob: -5.8031535148620605
    10. ' (' → logprob: -5.9281535148620605

Token 471: ' segments' (ID: 33749)
  Prédit: '(ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.39168813824653625
    2. ' (' → logprob: -2.516688108444214
    3. 'ai' → logprob: -2.516688108444214
    4. '(' → logprob: -2.766688108444214
    5. 'min' → logprob: -3.141688108444214
    6. '(min' → logprob: -3.516688108444214
    7. ' min' → logprob: -4.891688346862793
    8. ' ai' → logprob: -5.266688346862793
    9. '(not' → logprob: -6.016688346862793
    10. '((' → logprob: -6.141688346862793

Token 472: ' overlap' (ID: 56631)
  Prédit: ' lie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lie' → logprob: -0.33822566270828247
    2. ' overlap' → logprob: -1.8382256031036377
    3. ' are' → logprob: -2.3382256031036377
    4. 'are' → logprob: -4.463225841522217
    5. '[i' → logprob: -5.588225841522217
    6. 'over' → logprob: -5.963225841522217
    7. '[' → logprob: -6.213225841522217
    8. '   ' → logprob: -7.088225841522217
    9. 'lie' → logprob: -7.088225841522217
    10. ' share' → logprob: -7.088225841522217

Token 473: ' beyond' (ID: 11615)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07148008793592453
    2. ' and' → logprob: -3.5714800357818604
    3. ':' → logprob: -4.3214802742004395
    4. ':
' → logprob: -4.6964802742004395
    5. ' or' → logprob: -5.0714802742004395
    6. ' if' → logprob: -5.5714802742004395
    7. ',' → logprob: -5.6964802742004395
    8. '               ' → logprob: -6.5714802742004395
    9. ' (' → logprob: -7.0714802742004395
    10. 'and' → logprob: -7.1964802742004395

Token 474: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.3936241567134857
    2. ' origin' → logprob: -1.143624186515808
    3. '0' → logprob: -6.143624305725098
    4. '(' → logprob: -6.393624305725098
    5. 'the' → logprob: -6.643624305725098
    6. ' the' → logprob: -6.893624305725098
    7. ' (' → logprob: -8.268624305725098
    8. '(origin' → logprob: -8.643624305725098
    9. 'anchor' → logprob: -9.643624305725098
    10. '[' → logprob: -10.518624305725098

Token 475: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20820890367031097
    2. ':' → logprob: -2.3332087993621826
    3. ':
' → logprob: -2.9582087993621826
    4. ',' → logprob: -4.583209037780762
    5. ' and' → logprob: -4.708209037780762
    6. '               ' → logprob: -5.208209037780762
    7. ' if' → logprob: -5.208209037780762
    8. ' or' → logprob: -5.958209037780762
    9. '       ' → logprob: -6.958209037780762
    10. 'if' → logprob: -7.458209037780762

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005156908184289932
    2. ' if' → logprob: -5.505156993865967
    3. '            
' → logprob: -8.130156517028809
    4. ' continue' → logprob: -8.630156517028809
    5. '               ' → logprob: -9.130156517028809
    6. '```' → logprob: -9.130156517028809
    7. ' 
' → logprob: -9.505156517028809
    8. '   ' → logprob: -9.880156517028809
    9. '       ' → logprob: -10.005156517028809
    10. ',' → logprob: -10.255156517028809

Token 477: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3366922438144684
    2. ' dx' → logprob: -1.711692214012146
    3. 'dx' → logprob: -3.4616923332214355
    4. ' x' → logprob: -3.8366923332214355
    5. ' if' → logprob: -4.4616923332214355
    6. ' vec' → logprob: -4.9616923332214355
    7. ' def' → logprob: -4.9616923332214355
    8. ' ax' → logprob: -5.3366923332214355
    9. 'def' → logprob: -5.5866923332214355
    10. 'x' → logprob: -5.7116923332214355

Token 478: ' Col' (ID: 2445)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2667922973632812
    2. 'dx' → logprob: -1.2667922973632812
    3. ' dx' → logprob: -1.5167922973632812
    4. ' def' → logprob: -3.2667922973632812
    5. 'vec' → logprob: -3.6417922973632812
    6. 'x' → logprob: -3.8917922973632812
    7. 'xi' → logprob: -3.8917922973632812
    8. ' x' → logprob: -4.016792297363281
    9. 'd' → logprob: -4.141792297363281
    10. '   ' → logprob: -4.766792297363281

Token 479: 'inear' (ID: 133017)
  Prédit: 'inear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inear' → logprob: -0.0073689185082912445
    2. 'ine' → logprob: -5.132369041442871
    3. 'linear' → logprob: -6.632369041442871
    4. 'line' → logprob: -9.132369041442871
    5. '   ' → logprob: -11.757369041442871
    6. 'inea' → logprob: -13.507369041442871
    7. '    ' → logprob: -14.007369041442871
    8. 'i' → logprob: -14.257369041442871
    9. '       ' → logprob: -14.507369041442871
    10. '(' → logprob: -15.132369041442871

Token 480: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6372370719909668
    2. ' =' → logprob: -1.8872370719909668
    3. ' and' → logprob: -1.8872370719909668
    4. ':' → logprob: -2.137237071990967
    5. '           ' → logprob: -2.387237071990967
    6. ',' → logprob: -2.762237071990967
    7. ':
' → logprob: -3.137237071990967
    8. 'if' → logprob: -3.512237071990967
    9. ' or' → logprob: -3.637237071990967
    10. 'def' → logprob: -4.387237071990967

Token 481: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5181795954704285
    2. ' dx' → logprob: -1.8931796550750732
    3. ':' → logprob: -2.6431796550750732
    4. 'dx' → logprob: -2.7681796550750732
    5. ' =' → logprob: -3.2681796550750732
    6. 'def' → logprob: -4.268179416656494
    7. 'x' → logprob: -4.893179416656494
    8. ' x' → logprob: -4.893179416656494
    9. ',' → logprob: -5.143179416656494
    10. '       ' → logprob: -5.268179416656494

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6938331127166748
    2. ' dx' → logprob: -0.8188331127166748
    3. 'dx' → logprob: -2.943833112716675
    4. ' x' → logprob: -5.943833351135254
    5. ' ax' → logprob: -6.443833351135254
    6. ' if' → logprob: -7.568833351135254
    7. 'x' → logprob: -7.943833351135254
    8. ' def' → logprob: -8.068833351135254
    9. ' cross' → logprob: -8.068833351135254
    10. 'ax' → logprob: -8.443833351135254

Token 483: ' cross' (ID: 8088)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.2443724870681763
    2. 'def' → logprob: -1.3693724870681763
    3. 'x' → logprob: -2.3693723678588867
    4. ' dx' → logprob: -2.4943723678588867
    5. ' cross' → logprob: -2.4943723678588867
    6. 'cross' (adapté à ' cross') → logprob: -2.6193723678588867
    7. ' x' → logprob: -3.1193723678588867
    8. 'vec' → logprob: -3.8693723678588867
    9. 'ax' → logprob: -4.119372367858887
    10. ' def' → logprob: -4.619372367858887

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3281749486923218
    2. '=' → logprob: -1.9531749486923218
    3. '(ai' → logprob: -2.7031750679016113
    4. '_product' → logprob: -3.2031750679016113
    5. ' product' → logprob: -4.703175067901611
    6. '_ai' → logprob: -5.078175067901611
    7. 'product' → logprob: -5.953175067901611
    8. '_dx' → logprob: -6.203175067901611
    9. '(a' → logprob: -6.328175067901611
    10. '(dx' → logprob: -6.453175067901611

Token 485: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0010135184274986386
    2. ' ai' → logprob: -7.00101375579834
    3. '(ai' → logprob: -9.62601375579834
    4. '   ' → logprob: -10.50101375579834
    5. 'aj' → logprob: -12.50101375579834
    6. '_ai' → logprob: -12.87601375579834
    7. '(' → logprob: -14.50101375579834
    8. '-ai' → logprob: -15.00101375579834
    9. 'ax' → logprob: -15.00101375579834
    10. ' ' → logprob: -15.50101375579834

Token 486: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'x' → logprob: -14.875000953674316
    3. '[
' → logprob: -16.125
    4. '(' → logprob: -16.375
    5. 'a' → logprob: -16.75
    6. ' ' → logprob: -17.75
    7. 'j' → logprob: -17.875
    8. ',' → logprob: -18.125
    9. '#' → logprob: -18.125
    10. '0' → logprob: -18.625

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -14.125001907348633
    3. '[' → logprob: -14.250001907348633
    4. '
' → logprob: -14.375001907348633
    5. '```' → logprob: -18.250001907348633
    6. '

' → logprob: -18.500001907348633
    7. 'None' → logprob: -18.812501907348633
    8. 'i' → logprob: -18.812501907348633
    9. '``' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.062501907348633

Token 488: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0297548845410347
    2. '*' → logprob: -3.529754877090454
    3. '*j' → logprob: -12.654754638671875
    4. ']*' → logprob: -14.779754638671875
    5. '```' → logprob: -15.654754638671875
    6. '*(' → logprob: -15.654754638671875
    7. ' ' → logprob: -15.779754638671875
    8. '*(-' → logprob: -16.529754638671875
    9. ',' → logprob: -16.529754638671875
    10. '*-' → logprob: -17.279754638671875

Token 489: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.2664456789934775e-06
    2. ' aj' → logprob: -14.625000953674316
    3. '-aj' → logprob: -16.125001907348633
    4. 'ajaj' → logprob: -16.375001907348633
    5. 'uj' → logprob: -16.500001907348633
    6. '
' → logprob: -16.500001907348633
    7. 'a' → logprob: -16.625001907348633
    8. 'aja' → logprob: -17.125001907348633
    9. '(' → logprob: -17.250001907348633
    10. 'aju' → logprob: -17.375001907348633

Token 490: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025154968723654747
    2. '1' → logprob: -3.7751550674438477
    3. '-' → logprob: -6.400155067443848
    4. ' -' → logprob: -8.775155067443848
    5. '```' → logprob: -9.525155067443848
    6. 'y' → logprob: -11.650155067443848
    7. '0' → logprob: -13.150155067443848
    8. 's' → logprob: -13.400155067443848
    9. '``' → logprob: -14.025155067443848
    10. 'i' → logprob: -14.275155067443848

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -14.750000953674316
    3. '[' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '

' → logprob: -17.875
    6. '0' → logprob: -17.875
    7. ' ' → logprob: -18.75
    8. '-' → logprob: -19.0
    9. '   ' → logprob: -19.5
    10. ']' → logprob: -19.6875

Token 492: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269323080778122
    2. '-' → logprob: -2.126932382583618
    3. ' ' → logprob: -13.251932144165039
    4. '-ai' → logprob: -13.626932144165039
    5. '-
' → logprob: -14.876932144165039
    6. ' ' → logprob: -15.251932144165039
    7. '```' → logprob: -15.876932144165039
    8. ' -
' → logprob: -16.00193214416504
    9. '   ' → logprob: -16.00193214416504
    10. ',' → logprob: -16.62693214416504

Token 493: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759530067443848
    2. '-' → logprob: -0.8259530067443848
    3. '-
' → logprob: -12.325952529907227
    4. '-cross' → logprob: -12.325952529907227
    5. '-ai' → logprob: -13.325952529907227
    6. ' ' → logprob: -13.825952529907227
    7. ' -
' → logprob: -14.825952529907227
    8. ' ' → logprob: -14.950952529907227
    9. ',' → logprob: -14.950952529907227
    10. '```' → logprob: -15.200952529907227

Token 494: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0006176044698804617
    2. ' ai' → logprob: -7.750617504119873
    3. 'aj' → logprob: -8.625617980957031
    4. '(ai' → logprob: -12.250617980957031
    5. '_ai' → logprob: -13.250617980957031
    6. '   ' → logprob: -14.875617980957031
    7. '.ai' → logprob: -15.750617980957031
    8. 'a' → logprob: -16.12561798095703
    9. '-ai' → logprob: -16.12561798095703
    10. ' ' → logprob: -16.50061798095703

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.228561349213123e-05
    2. '1' → logprob: -9.875052452087402
    3. '0' → logprob: -14.250052452087402
    4. '```' → logprob: -16.750051498413086
    5. '[
' → logprob: -18.375051498413086
    6. '[i' → logprob: -18.625051498413086
    7. '#' → logprob: -19.250051498413086
    8. '``' → logprob: -19.250051498413086
    9. '\[' → logprob: -19.375051498413086
    10. 'i' → logprob: -20.250051498413086

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013277375837787986
    2. '0' → logprob: -6.6263275146484375
    3. '[' → logprob: -14.501327514648438
    4. 'i' → logprob: -15.001327514648438
    5. 'j' → logprob: -15.251327514648438
    6. '
' → logprob: -15.688827514648438
    7. '```' → logprob: -16.813827514648438
    8. ']' → logprob: -16.876327514648438
    9. '१' → logprob: -17.188827514648438
    10. 'aj' → logprob: -17.188827514648438

Token 497: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0011081863194704056
    2. '[' → logprob: -7.126108169555664
    3. ' *' → logprob: -8.251108169555664
    4. 'aj' → logprob: -11.126108169555664
    5. ']*' → logprob: -11.376108169555664
    6. 'ai' → logprob: -12.251108169555664
    7. '0' → logprob: -12.751108169555664
    8. '```' → logprob: -13.376108169555664
    9. '.ai' → logprob: -13.501108169555664
    10. ' ai' → logprob: -13.626108169555664

Token 498: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -2.45848218582978e-06
    2. ' aj' → logprob: -13.37500286102295
    3. '
' → logprob: -15.50000286102295
    4. '0' → logprob: -15.75000286102295
    5. 'oj' → logprob: -15.75000286102295
    6. '   ' → logprob: -16.375001907348633
    7. '-aj' → logprob: -17.125001907348633
    8. 'uj' → logprob: -17.500001907348633
    9. 'a' → logprob: -17.500001907348633
    10. ' ' → logprob: -17.875001907348633

Token 499: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004079112783074379
    2. '[' → logprob: -5.504079341888428
    3. '```' → logprob: -15.75407886505127
    4. '   ' → logprob: -16.129079818725586
    5. '(' → logprob: -16.879079818725586
    6. '۰' → logprob: -17.254079818725586
    7. 'import' → logprob: -17.504079818725586
    8. '
' → logprob: -17.504079818725586
    9. '<|end|>' → logprob: -17.879079818725586
    10. 'def' → logprob: -17.879079818725586

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' ' → logprob: -17.25
    4. '۰' → logprob: -17.5
    5. '
' → logprob: -17.875
    6. '```' → logprob: -18.0625
    7. '   ' → logprob: -18.375
    8. '1' → logprob: -19.0625
    9. '<|end|>' → logprob: -19.5
    10. ']' → logprob: -19.5

Token 501: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5740427374839783
    2. ' ==' → logprob: -1.074042797088623
    3. '==' → logprob: -2.574042797088623
    4. ' if' → logprob: -4.199042797088623
    5. 'if' → logprob: -6.574042797088623
    6. ' !=' → logprob: -7.199042797088623
    7. '   ' → logprob: -7.824042797088623
    8. ' ' → logprob: -8.324042320251465
    9. '!=' → logprob: -8.324042320251465
    10. '       ' → logprob: -8.449042320251465

Token 503: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6241952180862427
    2. '           ' → logprob: -1.1241952180862427
    3. 'if' (adapté à ' if') → logprob: -1.9991952180862427
    4. ' ==' → logprob: -6.124195098876953
    5. '==' → logprob: -6.749195098876953
    6. ' ' → logprob: -8.374195098876953
    7. '   ' → logprob: -8.749195098876953
    8. '       ' → logprob: -9.374195098876953
    9. '=' → logprob: -10.499195098876953
    10. '	if' → logprob: -11.249195098876953

Token 504: ' abs' (ID: 8443)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.15971894562244415
    2. ' abs' → logprob: -2.0347189903259277
    3. 'cross' → logprob: -4.659718990325928
    4. 'abs' → logprob: -4.909718990325928
    5. ' ' → logprob: -10.28471851348877
    6. '0' → logprob: -11.03471851348877
    7. '   ' → logprob: -13.53471851348877
    8. ' ' → logprob: -14.47221851348877
    9. '  ' → logprob: -14.78471851348877
    10. '(abs' → logprob: -14.84721851348877

Token 505: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.696889623621246e-06
    2. 'cross' → logprob: -13.12500286102295
    3. '(' → logprob: -14.37500286102295
    4. '(
' → logprob: -16.750001907348633
    5. ' (' → logprob: -16.875001907348633
    6. ' cross' → logprob: -17.375001907348633
    7. '	c' → logprob: -18.875001907348633
    8. '.cross' → logprob: -19.125001907348633
    9. '_cross' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.750001907348633

Token 506: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.0036450917832553387
    2. 'cross' → logprob: -5.628644943237305
    3. 'oss' → logprob: -10.628644943237305
    4. '_cross' → logprob: -12.753644943237305
    5. '.cross' → logprob: -12.878644943237305
    6. ' cross' → logprob: -12.878644943237305
    7. '[' → logprob: -13.253644943237305
    8. 'ros' → logprob: -13.253644943237305
    9. ')' → logprob: -13.378644943237305
    10. ' ross' → logprob: -13.503644943237305

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032960630487650633
    2. ')>' → logprob: -6.3782958984375
    3. ' )' → logprob: -6.8782958984375
    4. ' >' → logprob: -7.8782958984375
    5. '<|end|>' → logprob: -10.2532958984375
    6. ')<' → logprob: -10.5032958984375
    7. '[' → logprob: -11.0032958984375
    8. ' ' → logprob: -11.1282958984375
    9. ')<=' → logprob: -11.2532958984375
    10. '   ' → logprob: -11.2532958984375

Token 508: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7393736243247986
    2. ' >' → logprob: -0.9893736243247986
    3. ' ==' → logprob: -3.2393736839294434
    4. '>' → logprob: -3.3643736839294434
    5. ' <=' → logprob: -3.4893736839294434
    6. '<' → logprob: -3.6143736839294434
    7. ' ' → logprob: -4.614373683929443
    8. '==' → logprob: -4.989373683929443
    9. '<=' → logprob: -6.364373683929443
    10. ')' → logprob: -8.114373207092285

Token 509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.00007438659668
    4. '0' → logprob: -21.50007438659668
    5. '
' → logprob: -21.50007438659668
    6. '=' → logprob: -22.00007438659668
    7. '  ' → logprob: -22.37507438659668
    8. '```' → logprob: -22.62507438659668
    9. '(' → logprob: -22.87507438659668
    10. '2' → logprob: -23.00007438659668

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.375
    4. '
' → logprob: -20.625
    5. '(' → logprob: -20.75
    6. '0' → logprob: -20.875
    7. '=' → logprob: -21.375
    8. '```' → logprob: -21.5
    9. '+' → logprob: -22.75
    10. '2' → logprob: -22.875

Token 511: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018173592165112495
    2. '-' → logprob: -4.018173694610596
    3. '1' → logprob: -10.893173217773438
    4. '-e' → logprob: -12.893173217773438
    5. '2' → logprob: -14.018173217773438
    6. '```' → logprob: -14.143173217773438
    7. '0' → logprob: -15.143173217773438
    8. '3' → logprob: -15.393173217773438
    9. '           ' → logprob: -16.393173217773438
    10. '.e' → logprob: -16.643173217773438

Token 512: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. '{-' → logprob: -17.25
    4. '9' → logprob: -18.0
    5. '8' → logprob: -18.0
    6. '12' → logprob: -18.0
    7. '6' → logprob: -18.375
    8. ' -' → logprob: -18.75
    9. '(-' → logprob: -19.75
    10. '\-' → logprob: -19.875

Token 513: '14' (ID: 1265)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.11481022089719772
    2. '9' → logprob: -2.6148102283477783
    3. '10' → logprob: -4.364809989929199
    4. '8' → logprob: -4.364809989929199
    5. '14' → logprob: -5.114809989929199
    6. '15' → logprob: -5.614809989929199
    7. '13' → logprob: -8.7398099899292
    8. '7' → logprob: -10.7398099899292
    9. '11' → logprob: -12.6148099899292
    10. '09' → logprob: -12.6773099899292

Token 514: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30030733346939087
    2. ' and' → logprob: -1.675307273864746
    3. ':
' → logprob: -2.675307273864746
    4. 'and' → logprob: -6.050307273864746
    5. '       ' → logprob: -8.675307273864746
    6. ' :' → logprob: -8.925307273864746
    7. '   ' → logprob: -8.925307273864746
    8. '           ' → logprob: -9.050307273864746
    9. ' ' → logprob: -9.550307273864746
    10. ' or' → logprob: -9.925307273864746

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01087284181267023
    2. '           ' → logprob: -5.385872840881348
    3. ':
' → logprob: -6.135872840881348
    4. ':' → logprob: -6.260872840881348
    5. '
' → logprob: -7.135872840881348
    6. '                
' → logprob: -7.760872840881348
    7. ' and' → logprob: -8.010872840881348
    8. ',' → logprob: -8.635872840881348
    9. ' if' → logprob: -9.635872840881348
    10. '   ' → logprob: -10.010872840881348

Token 516: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.09609220176935196
    2. ' #' → logprob: -3.9710922241210938
    3. 'continue' → logprob: -4.346092224121094
    4. '   ' → logprob: -4.846092224121094
    5. 'ai' → logprob: -4.971092224121094
    6. 'd' → logprob: -5.221092224121094
    7. 'vec' → logprob: -5.221092224121094
    8. 'di' → logprob: -5.471092224121094
    9. 'dot' → logprob: -5.471092224121094
    10. ' continue' → logprob: -5.596092224121094

Token 517: ' col' (ID: 996)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10598994046449661
    2. 'dot' → logprob: -2.730989933013916
    3. 'continue' → logprob: -5.230989933013916
    4. 'if' → logprob: -5.355989933013916
    5. 'min' → logprob: -5.605989933013916
    6. 'dp' → logprob: -5.730989933013916
    7. 'di' → logprob: -5.855989933013916
    8. 'len' → logprob: -5.980989933013916
    9. 'norm' → logprob: -6.105989933013916
    10. 'd' → logprob: -6.105989933013916

Token 518: 'inear' (ID: 133017)
  Prédit: 'inear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inear' → logprob: -0.0036371308378875256
    2. 'linear' → logprob: -5.628637313842773
    3. 'ine' → logprob: -10.878637313842773
    4. '               ' → logprob: -12.128637313842773
    5. 'in' → logprob: -12.253637313842773
    6. '           ' → logprob: -12.628637313842773
    7. '   ' → logprob: -12.878637313842773
    8. '                   ' → logprob: -14.253637313842773
    9. '       ' → logprob: -14.253637313842773
    10. 'line' → logprob: -15.003637313842773

Token 519: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8679051995277405
    2. '               ' → logprob: -0.8679051995277405
    3. '
' → logprob: -3.1179051399230957
    4. '                   ' → logprob: -3.8679051399230957
    5. ' if' → logprob: -3.8679051399230957
    6. ' and' → logprob: -3.9929051399230957
    7. ',' → logprob: -3.9929051399230957
    8. ':
' → logprob: -4.367905139923096
    9. '                
' → logprob: -5.367905139923096
    10. '            
' → logprob: -5.492905139923096

Token 520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14948736131191254
    2. ' if' → logprob: -2.399487257003784
    3. ' ai' → logprob: -3.774487257003784
    4. ' continue' → logprob: -5.149487495422363
    5. ' #' → logprob: -5.774487495422363
    6. '           ' → logprob: -5.899487495422363
    7. ' dx' → logprob: -6.399487495422363
    8. ' x' → logprob: -6.649487495422363
    9. ' d' → logprob: -6.899487495422363
    10. ' t' → logprob: -7.149487495422363

Token 521: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5617380738258362
    2. 'di' → logprob: -2.1867380142211914
    3. 'if' → logprob: -2.3117380142211914
    4. 'dot' → logprob: -2.4367380142211914
    5. 'len' → logprob: -3.1867380142211914
    6. 'dist' → logprob: -3.6867380142211914
    7. 'd' → logprob: -4.061738014221191
    8. 'norm' → logprob: -4.686738014221191
    9. 'dp' → logprob: -4.936738014221191
    10. 'prod' → logprob: -4.936738014221191

Token 522: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1598268747329712
    2. 'dist' → logprob: -1.5348268747329712
    3. 'dot' → logprob: -1.9098268747329712
    4. 'di' → logprob: -2.4098267555236816
    5. 'if' → logprob: -2.5348267555236816
    6. 'len' → logprob: -3.2848267555236816
    7. 'd' → logprob: -3.4098267555236816
    8. 'proj' → logprob: -3.4098267555236816
    9. 'dp' → logprob: -4.659826755523682
    10. 'norm' → logprob: -4.784826755523682

Token 523: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3898346424102783
    2. 'if' → logprob: -2.1398346424102783
    3. ' dot' → logprob: -2.1398346424102783
    4. 'dot' → logprob: -2.8898346424102783
    5. ' dist' → logprob: -5.264834403991699
    6. ' d' → logprob: -5.389834403991699
    7. 'dist' → logprob: -5.514834403991699
    8. 'd' → logprob: -5.639834403991699
    9. 'vec' → logprob: -5.639834403991699
    10. 'proj' → logprob: -6.264834403991699

Token 524: ' anchors' (ID: 114642)
  Prédit: '(ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.1557084619998932
    2. 'ai' → logprob: -2.6557085514068604
    3. '(min' → logprob: -3.6557085514068604
    4. 'min' → logprob: -3.9057085514068604
    5. 'max' → logprob: -4.405708312988281
    6. '(max' → logprob: -4.905708312988281
    7. ' (' → logprob: -5.280708312988281
    8. '(' → logprob: -6.530708312988281
    9. '((' → logprob: -7.655708312988281
    10. '(math' → logprob: -8.030708312988281

Token 525: ' are' (ID: 553)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33054327964782715
    2. '[i' → logprob: -1.3305432796478271
    3. '_points' → logprob: -4.455543518066406
    4. 'i' → logprob: -6.330543518066406
    5. ' points' → logprob: -6.580543518066406
    6. ' i' → logprob: -7.330543518066406
    7. ' and' → logprob: -8.205543518066406
    8. ' have' → logprob: -8.330543518066406
    9. 'points' → logprob: -8.330543518066406
    10. ' are' → logprob: -8.330543518066406

Token 526: ' on' (ID: 402)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.4851109981536865
    2. 'on' → logprob: -1.8601109981536865
    3. '(ai' → logprob: -2.7351109981536865
    4. 'not' → logprob: -2.9851109981536865
    5. 'in' → logprob: -3.4851109981536865
    6. '(' → logprob: -3.6101109981536865
    7. '[' → logprob: -3.7351109981536865
    8. '1' → logprob: -4.860111236572266
    9. '0' → logprob: -5.360111236572266
    10. '(i' → logprob: -5.610111236572266

Token 527: ' opposite' (ID: 23821)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.3504529595375061
    2. 'the' → logprob: -1.4754528999328613
    3. 'op' → logprob: -2.7254528999328613
    4. ' same' → logprob: -7.475452899932861
    5. ' opposite' → logprob: -7.850452899932861
    6. ' the' → logprob: -8.47545337677002
    7. 'different' → logprob: -8.47545337677002
    8. '
' → logprob: -10.10045337677002
    9. '   ' → logprob: -12.60045337677002
    10. 'Same' → logprob: -12.85045337677002

Token 528: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.47510114312171936
    2. 's' → logprob: -0.975101113319397
    3. 'side' → logprob: -7.475100994110107
    4. 'dire' → logprob: -8.225101470947266
    5. 'sign' → logprob: -10.100101470947266
    6. 'quadr' → logprob: -10.225101470947266
    7. ' quadr' → logprob: -10.600101470947266
    8. ' side' → logprob: -10.600101470947266
    9. ' signs' → logprob: -10.725101470947266
    10. ' directions' → logprob: -10.850101470947266

Token 529: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6161779165267944
    2. ' or' → logprob: -1.2411779165267944
    3. '               ' → logprob: -2.241178035736084
    4. 'of' → logprob: -3.991178035736084
    5. '           ' → logprob: -4.366178035736084
    6. ' and' → logprob: -4.491178035736084
    7. ':' → logprob: -4.741178035736084
    8. '                   ' → logprob: -5.366178035736084
    9. ' if' → logprob: -5.866178035736084
    10. 'and' → logprob: -6.116178035736084

Token 530: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.40786176919937134
    2. '0' → logprob: -1.2828617095947266
    3. '(' → logprob: -3.4078617095947266
    4. ' origin' → logprob: -3.9078617095947266
    5. 'the' → logprob: -5.657861709594727
    6. ' (' → logprob: -8.032861709594727
    7. ' ' → logprob: -8.157861709594727
    8. ' the' → logprob: -8.157861709594727
    9. '(origin' → logprob: -9.782861709594727
    10. '   ' → logprob: -11.407861709594727

Token 531: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4854092299938202
    2. ' or' → logprob: -2.1104092597961426
    3. '               ' → logprob: -2.3604092597961426
    4. ':' → logprob: -2.3604092597961426
    5. '                   ' → logprob: -3.2354092597961426
    6. ':
' → logprob: -4.110409259796143
    7. '           ' → logprob: -4.985409259796143
    8. 'and' → logprob: -5.235409259796143
    9. ' if' → logprob: -5.860409259796143
    10. ',' → logprob: -6.610409259796143

Token 532: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34579870104789734
    2. '               ' → logprob: -1.3457987308502197
    3. 'if' → logprob: -3.4707987308502197
    4. ' continue' → logprob: -7.220798492431641
    5. 'continue' → logprob: -9.47079849243164
    6. '                   ' → logprob: -9.97079849243164
    7. '```' → logprob: -10.97079849243164
    8. '           ' → logprob: -11.22079849243164
    9. ' ' → logprob: -11.34579849243164
    10. '   ' → logprob: -11.84579849243164

Token 533: ' dot' (ID: 16579)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28145161271095276
    2. 'if' → logprob: -1.4064515829086304
    3. '               ' → logprob: -8.281451225280762
    4. ' dot' → logprob: -11.031451225280762
    5. 'dot' (adapté à ' dot') → logprob: -11.031451225280762
    6. '                   ' → logprob: -12.406451225280762
    7. 'continue' → logprob: -13.156451225280762
    8. ' continue' → logprob: -13.281451225280762
    9. 'd' → logprob: -13.281451225280762
    10. ' ' → logprob: -13.781451225280762

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3495387136936188
    2. '=' → logprob: -1.2245386838912964
    3. '_product' → logprob: -7.599538803100586
    4. ' product' → logprob: -7.974538803100586
    5. 'product' → logprob: -8.599538803100586
    6. 'Product' → logprob: -10.349538803100586
    7. '>' → logprob: -11.474538803100586
    8. ' ' → logprob: -12.099538803100586
    9. '<' → logprob: -12.974538803100586
    10. 'ai' → logprob: -13.099538803100586

Token 535: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.002494802698493004
    2. ' ai' → logprob: -6.002494812011719
    3. '(ai' → logprob: -10.877494812011719
    4. '_ai' → logprob: -15.502494812011719
    5. '.ai' → logprob: -16.87749481201172
    6. '-ai' → logprob: -17.00249481201172
    7. '   ' → logprob: -17.25249481201172
    8. ' ' → logprob: -17.62749481201172
    9. '(' → logprob: -19.00249481201172
    10. '  ' → logprob: -19.12749481201172

Token 536: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -12.75000286102295
    3. ' [' → logprob: -17.375003814697266
    4. '```' → logprob: -18.500003814697266
    5. '.' → logprob: -18.875003814697266
    6. 'x' → logprob: -19.000003814697266
    7. '[
' → logprob: -19.125003814697266
    8. ' ' → logprob: -19.250003814697266
    9. '1' → logprob: -19.250003814697266
    10. '
' → logprob: -19.750003814697266

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '
' → logprob: -20.125
    4. ' ' → logprob: -22.25
    5. '

' → logprob: -23.0
    6. '   ' → logprob: -23.375
    7. '```' → logprob: -23.375
    8. '０' → logprob: -23.75
    9. '۰' → logprob: -23.75
    10. '``' → logprob: -24.25

Token 538: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -6.76628842484206e-05
    2. ' *' → logprob: -9.750067710876465
    3. '**' → logprob: -12.375067710876465
    4. ']*' → logprob: -12.750067710876465
    5. '```' → logprob: -13.750067710876465
    6. '*a' → logprob: -14.750067710876465
    7. '()*' → logprob: -15.875067710876465
    8. '*object' → logprob: -16.25006675720215
    9. ')*' → logprob: -16.75006675720215
    10. '*pi' → logprob: -16.87506675720215

Token 539: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.981667537620524e-06
    2. ' aj' → logprob: -14.125001907348633
    3. 'a' → logprob: -15.250001907348633
    4. '-aj' → logprob: -15.625001907348633
    5. 'ajaj' → logprob: -16.125001907348633
    6. 'ajj' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. 'oj' → logprob: -16.625001907348633
    9. '-' → logprob: -16.875001907348633
    10. 'adj' → logprob: -16.875001907348633

Token 540: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34846362471580505
    2. '0' → logprob: -1.2234636545181274
    3. '```' → logprob: -12.098464012145996
    4. ' ' → logprob: -12.598464012145996
    5. '   ' → logprob: -13.098464012145996
    6. '
' → logprob: -13.848464012145996
    7. '(' → logprob: -13.848464012145996
    8. '=' → logprob: -14.098464012145996
    9. ',' → logprob: -14.348464012145996
    10. '-' → logprob: -14.848464012145996

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '```' → logprob: -17.5
    4. '1' → logprob: -18.5
    5. '   ' → logprob: -19.0
    6. ' ' → logprob: -19.125
    7. '۰' → logprob: -19.125
    8. '
' → logprob: -20.25
    9. '``' → logprob: -20.625
    10. '	' → logprob: -21.0625

Token 542: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931512355804443
    2. ' +' → logprob: -0.6931512355804443
    3. '+
' → logprob: -12.818151473999023
    4. ' +
' → logprob: -14.693151473999023
    5. '+a' → logprob: -15.943151473999023
    6. '()+' → logprob: -16.068151473999023
    7. '```' → logprob: -16.193151473999023
    8. ' plus' → logprob: -16.193151473999023
    9. '<' → logprob: -16.568151473999023
    10. '+self' → logprob: -16.568151473999023

Token 543: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0001239196863025427
    2. ' ai' → logprob: -9.000123977661133
    3. '(ai' → logprob: -15.000123977661133
    4. '.ai' → logprob: -16.000123977661133
    5. '_ai' → logprob: -16.875123977661133
    6. '   ' → logprob: -17.875123977661133
    7. ' ' → logprob: -18.625123977661133
    8. 'a' → logprob: -18.750123977661133
    9. '-ai' → logprob: -19.125123977661133
    10. 'aj' → logprob: -20.000123977661133

Token 544: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03804539144039154
    2. '1' → logprob: -3.2880454063415527
    3. ' ' → logprob: -13.913044929504395
    4. '-' → logprob: -14.288044929504395
    5. '```' → logprob: -14.538044929504395
    6. '(' → logprob: -14.788044929504395
    7. '
' → logprob: -14.788044929504395
    8. '   ' → logprob: -15.288044929504395
    9. '#' → logprob: -15.413044929504395
    10. '[
' → logprob: -15.663044929504395

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001426346570951864
    2. '0' → logprob: -9.375143051147461
    3. 'ai' → logprob: -10.500143051147461
    4. '[' → logprob: -10.750143051147461
    5. ' ' → logprob: -12.625143051147461
    6. 'aj' → logprob: -14.000143051147461
    7. '   ' → logprob: -14.000143051147461
    8. '```' → logprob: -14.000143051147461
    9. '-' → logprob: -14.500143051147461
    10. '...' → logprob: -14.875143051147461

Token 546: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0007395883440040052
    2. ']*' → logprob: -7.625739574432373
    3. '()*' → logprob: -9.000740051269531
    4. ')*' → logprob: -9.500740051269531
    5. ' *' → logprob: -10.875740051269531
    6. '```' → logprob: -11.375740051269531
    7. ']' → logprob: -12.625740051269531
    8. '[' → logprob: -12.750740051269531
    9. '   ' → logprob: -13.000740051269531
    10. ')' → logprob: -13.125740051269531

Token 547: 'aj' (ID: 1255)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0011635536793619394
    2. 'aj' → logprob: -6.876163482666016
    3. ' ai' → logprob: -9.376163482666016
    4. '(ai' → logprob: -10.126163482666016
    5. '.ai' → logprob: -13.376163482666016
    6. 'a' → logprob: -13.626163482666016
    7. '_ai' → logprob: -13.876163482666016
    8. '   ' → logprob: -14.251163482666016
    9. ' ' → logprob: -14.376163482666016
    10. '-ai' → logprob: -14.501163482666016

Token 548: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009764233604073524
    2. '1' → logprob: -4.634764194488525
    3. '```' → logprob: -12.259764671325684
    4. 'def' → logprob: -14.509764671325684
    5. '
' → logprob: -14.759764671325684
    6. '[
' → logprob: -15.134764671325684
    7. '<|end|>' → logprob: -15.259764671325684
    8. '   ' → logprob: -15.384764671325684
    9. '

' → logprob: -15.509764671325684
    10. '#' → logprob: -15.634764671325684

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '[' → logprob: -17.125
    4. '-' → logprob: -17.5
    5. '   ' → logprob: -17.5
    6. '```' → logprob: -17.75
    7. '0' → logprob: -17.875
    8. '#' → logprob: -19.125
    9. '
' → logprob: -19.3125
    10. ']' → logprob: -19.4375

Token 550: ']
' (ID: 1592)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33584678173065186
    2. '
' → logprob: -1.5858467817306519
    3. '<|end|>' → logprob: -3.0858469009399414
    4. ' <=' → logprob: -4.585846900939941
    5. '<' → logprob: -4.585846900939941
    6. '                   ' → logprob: -5.585846900939941
    7. '               ' → logprob: -5.585846900939941
    8. ')' → logprob: -6.835846900939941
    9. '<=' → logprob: -6.835846900939941
    10. ' ' → logprob: -6.835846900939941

Token 551: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12930727005004883
    2. '               ' → logprob: -2.129307270050049
    3. '```' → logprob: -6.879307270050049
    4. ' if' → logprob: -7.879307270050049
    5. ' ==' → logprob: -8.50430679321289
    6. '<|end|>' → logprob: -8.62930679321289
    7. ' <' → logprob: -9.37930679321289
    8. '==' → logprob: -9.37930679321289
    9. ' <=' → logprob: -9.62930679321289
    10. '                   ' → logprob: -9.75430679321289

Token 552: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1976989209651947
    2. 'if' (adapté à ' if') → logprob: -2.1976988315582275
    3. '               ' → logprob: -3.0726988315582275
    4. '           ' → logprob: -3.8226988315582275
    5. ' ' → logprob: -9.947698593139648
    6. '>' → logprob: -10.572698593139648
    7. 'If' → logprob: -10.947698593139648
    8. ' >' → logprob: -10.947698593139648
    9. '            ' → logprob: -11.322698593139648
    10. '   ' → logprob: -12.072698593139648

Token 553: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.38690683245658875
    2. ' dot' → logprob: -1.1369068622589111
    3. '(dot' → logprob: -10.386906623840332
    4. '0' → logprob: -12.511906623840332
    5. ' ' → logprob: -14.136906623840332
    6. '   ' → logprob: -14.636906623840332
    7. '_dot' → logprob: -16.88690757751465
    8. '    ' → logprob: -17.13690757751465
    9. '  ' → logprob: -17.26190757751465
    10. '.dot' → logprob: -17.38690757751465

Token 554: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31335198879241943
    2. ' <' → logprob: -1.3133519887924194
    3. '>' → logprob: -10.06335163116455
    4. '<=' → logprob: -11.31335163116455
    5. ' >' → logprob: -11.43835163116455
    6. ' <=' → logprob: -12.06335163116455
    7. '<|end|>' → logprob: -12.31335163116455
    8. ' ' → logprob: -12.81335163116455
    9. ')' → logprob: -13.31335163116455
    10. '<class' → logprob: -13.93835163116455

Token 555: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011236425780225545
    2. '-' → logprob: -9.500112533569336
    3. ' ' → logprob: -10.250112533569336
    4. ' -' → logprob: -13.250112533569336
    5. '1' → logprob: -15.375112533569336
    6. '=' → logprob: -17.375112533569336
    7. '```' → logprob: -18.000112533569336
    8. ' ' → logprob: -18.500112533569336
    9. '۰' → logprob: -18.500112533569336
    10. '(' → logprob: -18.625112533569336

Token 556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005934843793511391
    2. '-' → logprob: -5.130934715270996
    3. ' ' → logprob: -12.755934715270996
    4. ' -' → logprob: -13.005934715270996
    5. '1' → logprob: -14.505934715270996
    6. '=' → logprob: -14.630934715270996
    7. '```' → logprob: -17.005935668945312
    8. '-s' → logprob: -17.380935668945312
    9. '   ' → logprob: -17.880935668945312
    10. '
' → logprob: -17.880935668945312

Token 557: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3565841615200043
    2. ':
' → logprob: -1.4815841913223267
    3. '               ' → logprob: -2.981584072113037
    4. '                   ' → logprob: -4.106584072113037
    5. '           ' → logprob: -6.106584072113037
    6. ' or' → logprob: -6.481584072113037
    7. ' and' → logprob: -6.981584072113037
    8. '                       ' → logprob: -8.106584548950195
    9. ':return' → logprob: -8.231584548950195
    10. ',' → logprob: -9.731584548950195

Token 558: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00019722258730325848
    2. '               ' → logprob: -8.750197410583496
    3. '                       ' → logprob: -11.125197410583496
    4. '           ' → logprob: -11.375197410583496
    5. ' return' → logprob: -13.000197410583496
    6. '```' → logprob: -13.250197410583496
    7. ' and' → logprob: -13.625197410583496
    8. ':' → logprob: -13.625197410583496
    9. ',' → logprob: -13.625197410583496
    10. ':
' → logprob: -13.875197410583496

Token 559: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41245242953300476
    2. 'return' → logprob: -1.4124524593353271
    3. '                       ' → logprob: -2.912452459335327
    4. '                   ' → logprob: -3.287452459335327
    5. '               ' → logprob: -6.162452220916748
    6. '       ' → logprob: -8.537452697753906
    7. '           ' → logprob: -8.662452697753906
    8. '   ' → logprob: -8.912452697753906
    9. ' continue' → logprob: -10.412452697753906
    10. 'continue' → logprob: -10.537452697753906

Token 560: ' cross' (ID: 8088)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06296505779027939
    2. ' return' → logprob: -2.812965154647827
    3. '                   ' → logprob: -7.562964916229248
    4. '                       ' → logprob: -7.937964916229248
    5. '   ' → logprob: -10.312965393066406
    6. '               ' → logprob: -10.312965393066406
    7. '           ' → logprob: -10.937965393066406
    8. 'continue' → logprob: -11.437965393066406
    9. '       ' → logprob: -11.687965393066406
    10. '
' → logprob: -11.687965393066406

Token 561: ' at' (ID: 540)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6772300004959106
    2. 'return' → logprob: -1.0522300004959106
    3. 'es' → logprob: -2.802229881286621
    4. '               ' → logprob: -2.927229881286621
    5. '                   ' → logprob: -4.177229881286621
    6. '           ' → logprob: -5.052229881286621
    7. 'ing' → logprob: -6.052229881286621
    8. 's' → logprob: -7.177229881286621
    9. '=True' → logprob: -7.427229881286621
    10. ' =' → logprob: -7.552229881286621

Token 562: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.15262028574943542
    2. ' origin' → logprob: -2.152620315551758
    3. '0' → logprob: -3.777620315551758
    4. ' ' → logprob: -7.527620315551758
    5. '(' → logprob: -8.027620315551758
    6. ' the' → logprob: -8.027620315551758
    7. 'the' → logprob: -8.277620315551758
    8. 'more' → logprob: -8.527620315551758
    9. 'point' → logprob: -9.277620315551758
    10. ' (' → logprob: -9.277620315551758

Token 563: ' only' (ID: 1606)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24866552650928497
    2. '                       ' → logprob: -1.9986655712127686
    3. '               ' → logprob: -2.7486655712127686
    4. ':' → logprob: -4.8736653327941895
    5. ':
' → logprob: -5.1236653327941895
    6. ' continue' → logprob: -5.9986653327941895
    7. ',' → logprob: -6.3736653327941895
    8. 'continue' → logprob: -7.1236653327941895
    9. '
' → logprob: -7.4986653327941895
    10. ' and' → logprob: -7.6236653327941895

Token 564: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19738534092903137
    2. '                       ' → logprob: -2.197385311126709
    3. ' continue' → logprob: -3.447385311126709
    4. '               ' → logprob: -3.572385311126709
    5. 'continue' → logprob: -4.947385311126709
    6. ':' → logprob: -7.822385311126709
    7. ',' → logprob: -8.447385787963867
    8. ':
' → logprob: -8.947385787963867
    9. ' continues' → logprob: -9.572385787963867
    10. '           ' → logprob: -9.572385787963867

Token 565: ' okay' (ID: 25435)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.24691975116729736
    2. 'continue' → logprob: -1.7469197511672974
    3. '                   ' → logprob: -3.246919631958008
    4. '                       ' → logprob: -5.496919631958008
    5. '               ' → logprob: -6.746919631958008
    6. ' return' → logprob: -8.996919631958008
    7. '	continue' → logprob: -9.496919631958008
    8. 'return' → logprob: -9.621919631958008
    9. '           ' → logprob: -11.371919631958008
    10. '   ' → logprob: -11.746919631958008

Token 566: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08060560375452042
    2. '               ' → logprob: -2.5806055068969727
    3. 'continue' → logprob: -6.955605506896973
    4. ' continue' → logprob: -7.580605506896973
    5. '                       ' → logprob: -8.580605506896973
    6. '           ' → logprob: -10.330605506896973
    7. ',' → logprob: -11.830605506896973
    8. '				' → logprob: -12.330605506896973
    9. '	continue' → logprob: -12.580605506896973
    10. '	               ' → logprob: -12.705605506896973

Token 567: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5770292282104492
    2. '                   ' → logprob: -0.8270292282104492
    3. ' continue' → logprob: -7.952029228210449
    4. '           ' → logprob: -8.07702922821045
    5. '                       ' → logprob: -8.57702922821045
    6. 'continue' → logprob: -9.20202922821045
    7. '```' → logprob: -9.70202922821045
    8. ' else' → logprob: -11.20202922821045
    9. '			' → logprob: -11.70202922821045
    10. '				' → logprob: -11.70202922821045

Token 568: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4271114468574524
    2. 'continue' (adapté à ' continue') → logprob: -1.4271113872528076
    3. ' continue' → logprob: -2.4271113872528076
    4. '                       ' → logprob: -4.302111625671387
    5. '               ' → logprob: -5.177111625671387
    6. '           ' → logprob: -9.927111625671387
    7. '	continue' → logprob: -10.427111625671387
    8. '       ' → logprob: -11.427111625671387
    9. '```' → logprob: -11.927111625671387
    10. '				' → logprob: -12.052111625671387

Token 569: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011439072113716975
    2. '```' → logprob: -10.250114440917969
    3. '           ' → logprob: -10.625114440917969
    4. '                
' → logprob: -10.750114440917969
    5. '                   ' → logprob: -11.500114440917969
    6. '
' → logprob: -11.625114440917969
    7. 'else' → logprob: -12.125114440917969
    8. 'if' → logprob: -12.625114440917969
    9. ' if' → logprob: -14.125114440917969
    10. 'continue' → logprob: -14.250114440917969

Token 570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011570196511456743
    2. '```' → logprob: -9.375115394592285
    3. '           ' → logprob: -11.375115394592285
    4. '                
' → logprob: -12.125115394592285
    5. '                   ' → logprob: -12.375115394592285
    6. 'else' → logprob: -12.375115394592285
    7. '
' → logprob: -13.250115394592285
    8. ' else' → logprob: -13.500115394592285
    9. 'if' → logprob: -13.875115394592285
    10. ' if' → logprob: -15.125115394592285

Token 571: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020662758499383926
    2. '           ' → logprob: -4.020662784576416
    3. 'else' → logprob: -6.520662784576416
    4. ' else' → logprob: -7.395662784576416
    5. 'if' → logprob: -9.145662307739258
    6. 'return' → logprob: -9.520662307739258
    7. '
' → logprob: -9.770662307739258
    8. '                
' → logprob: -9.770662307739258
    9. '                   ' → logprob: -9.895662307739258
    10. ' if' → logprob: -10.645662307739258

Token 572: ' Else' (ID: 42978)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3068482875823975
    2. 'else' → logprob: -1.6818482875823975
    3. 'length' → logprob: -2.0568482875823975
    4. 'if' → logprob: -2.0568482875823975
    5. 'len' → logprob: -2.4318482875823975
    6. 'dist' → logprob: -2.6818482875823975
    7. 'ai' → logprob: -3.5568482875823975
    8. 'return' → logprob: -3.6818482875823975
    9. 'max' → logprob: -3.8068482875823975
    10. 'min' → logprob: -4.181848526000977

Token 573: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0752142667770386
    2. '                   ' → logprob: -1.5752142667770386
    3. ' #' → logprob: -2.575214385986328
    4. '
' → logprob: -2.700214385986328
    5. 'length' → logprob: -2.825214385986328
    6. 'if' → logprob: -2.950214385986328
    7. ' if' → logprob: -3.075214385986328
    8. '               ' → logprob: -3.450214385986328
    9. 'return' → logprob: -3.825214385986328
    10. ' lengths' → logprob: -3.825214385986328

Token 574: ' distance' (ID: 9324)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4885410964488983
    2. 'if' → logprob: -0.9885411262512207
    3. 'max' → logprob: -6.113541126251221
    4. 'dist' → logprob: -6.113541126251221
    5. 'distance' → logprob: -6.113541126251221
    6. '                   ' → logprob: -6.238541126251221
    7. ' distances' → logprob: -6.238541126251221
    8. 'length' → logprob: -6.988541126251221
    9. '               ' → logprob: -6.988541126251221
    10. ' lengths' → logprob: -7.363541126251221

Token 575: '
' (ID: 198)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.5784578323364258
    2. '_ai' → logprob: -2.078457832336426
    3. 'if' → logprob: -2.453457832336426
    4. ' =' → logprob: -2.453457832336426
    5. '=' → logprob: -2.578457832336426
    6. 's' → logprob: -3.453457832336426
    7. 'i' → logprob: -5.453457832336426
    8. 'from' → logprob: -5.703457832336426
    9. ' if' → logprob: -5.828457832336426
    10. 'a' → logprob: -5.953457832336426

Token 576: '               ' (ID: 506)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.6231656074523926
    2. ' =' → logprob: -1.9981656074523926
    3. '_ai' → logprob: -2.2481656074523926
    4. 'if' → logprob: -2.8731656074523926
    5. '=' → logprob: -2.8731656074523926
    6. '                   ' → logprob: -3.1231656074523926
    7. '               ' → logprob: -3.2481656074523926
    8. '           ' → logprob: -4.873165607452393
    9. 'from' → logprob: -5.748165607452393
    10. '   ' → logprob: -6.248165607452393

Token 577: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0163308382034302
    2. 'ai' → logprob: -1.1413308382034302
    3. 'if' (adapté à ' if') → logprob: -1.6413308382034302
    4. 'd' → logprob: -3.2663307189941406
    5. ' if' → logprob: -3.6413307189941406
    6. ' dist' → logprob: -3.7663307189941406
    7. '   ' → logprob: -4.891330718994141
    8. 'max' → logprob: -5.141330718994141
    9. 'di' → logprob: -5.516330718994141
    10. 'a' → logprob: -5.516330718994141

Token 578: ' (' (ID: 350)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.28841158747673035
    2. ' max' → logprob: -1.7884116172790527
    3. ' min' → logprob: -3.7884116172790527
    4. 'max' → logprob: -3.7884116172790527
    5. ' abs' → logprob: -4.288411617279053
    6. 'math' → logprob: -4.663411617279053
    7. 'min' → logprob: -5.163411617279053
    8. ' (' → logprob: -5.788411617279053
    9. '(math' → logprob: -5.788411617279053
    10. '(max' → logprob: -6.663411617279053

Token 579: 'ai' (ID: 1361)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.37509918212890625
    2. 'ai' → logprob: -2.3750991821289062
    3. '(ai' → logprob: -2.3750991821289062
    4. 'abs' → logprob: -2.7500991821289062
    5. '(math' → logprob: -3.8750991821289062
    6. ' math' → logprob: -3.8750991821289062
    7. 'max' → logprob: -4.375099182128906
    8. '(abs' → logprob: -5.875099182128906
    9. ' abs' → logprob: -6.500099182128906
    10. 'min' → logprob: -6.500099182128906

Token 580: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012905937619507313
    2. '0' → logprob: -7.626290798187256
    3. ')' → logprob: -8.876290321350098
    4. '==' → logprob: -8.876290321350098
    5. ' ' → logprob: -9.126290321350098
    6. ' ==' → logprob: -9.876290321350098
    7. '
' → logprob: -10.001290321350098
    8. '[
' → logprob: -10.251290321350098
    9. '```' → logprob: -10.376290321350098
    10. '<|end|>' → logprob: -10.501290321350098

Token 581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.500003814697266
    4. '
' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '```' → logprob: -16.625003814697266
    7. '1' → logprob: -17.250003814697266
    8. '#' → logprob: -17.500003814697266
    9. '...' → logprob: -17.625003814697266
    10. '

' → logprob: -18.000003814697266

Token 582: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8851239085197449
    2. ')**' → logprob: -1.0101239681243896
    3. '**' → logprob: -1.5101239681243896
    4. '-' → logprob: -7.1351237297058105
    5. ')' → logprob: -7.3851237297058105
    6. ')*' → logprob: -8.010124206542969
    7. '*a' → logprob: -9.010124206542969
    8. ')*(' → logprob: -9.135124206542969
    9. ' -' → logprob: -9.510124206542969
    10. '```' → logprob: -9.635124206542969

Token 583: 'ai' (ID: 1361)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.3505799174308777
    2. 'ai' → logprob: -1.2255799770355225
    3. ' aj' → logprob: -6.975579738616943
    4. ' ai' → logprob: -7.850579738616943
    5. '   ' → logprob: -8.225580215454102
    6. 'a' → logprob: -9.600580215454102
    7. '(ai' → logprob: -9.725580215454102
    8. ' ' → logprob: -9.850580215454102
    9. 'aji' → logprob: -10.225580215454102
    10. '  ' → logprob: -10.350580215454102

Token 584: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4878412187099457
    2. 'ai' → logprob: -0.9878412485122681
    3. '_ai' → logprob: -4.7378411293029785
    4. ' ai' → logprob: -6.6128411293029785
    5. '(ai' → logprob: -7.1128411293029785
    6. '-ai' → logprob: -7.3628411293029785
    7. '+' → logprob: -7.4878411293029785
    8. ')' → logprob: -7.4878411293029785
    9. '.ai' → logprob: -7.7378411293029785
    10. '```' → logprob: -8.862841606140137

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.537180211627856e-05
    2. 'ai' → logprob: -10.125045776367188
    3. '1' → logprob: -12.250045776367188
    4. '_ai' → logprob: -16.125045776367188
    5. '```' → logprob: -16.125045776367188
    6. '-' → logprob: -16.375045776367188
    7. '
' → logprob: -16.875045776367188
    8. '(ai' → logprob: -16.875045776367188
    9. '[' → logprob: -17.250045776367188
    10. ' ' → logprob: -17.500045776367188

Token 586: ']+' (ID: 15344)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35424429178237915
    2. '+' → logprob: -1.2292442321777344
    3. ')+(' → logprob: -6.354244232177734
    4. ' >' → logprob: -6.479244232177734
    5. '>' → logprob: -6.729244232177734
    6. ')' → logprob: -7.104244232177734
    7. ')+' → logprob: -8.354244232177734
    8. ')>' → logprob: -9.354244232177734
    9. '```' → logprob: -9.729244232177734
    10. ' )' → logprob: -10.604244232177734

Token 587: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.771655115589965e-05
    2. ' ai' → logprob: -11.000018119812012
    3. '(ai' → logprob: -14.375018119812012
    4. '   ' → logprob: -16.250017166137695
    5. '.ai' → logprob: -16.250017166137695
    6. '_ai' → logprob: -17.125017166137695
    7. '  ' → logprob: -18.250017166137695
    8. 'a' → logprob: -18.250017166137695
    9. 'au' → logprob: -18.625017166137695
    10. ' ' → logprob: -18.875017166137695

Token 588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016141273081302643
    2. '1' → logprob: -6.501614093780518
    3. '0' → logprob: -9.126614570617676
    4. '```' → logprob: -14.001614570617676
    5. 'import' → logprob: -14.626614570617676
    6. '[
' → logprob: -15.126614570617676
    7. 'def' → logprob: -15.501614570617676
    8. 'python' → logprob: -15.876614570617676
    9. 'y' → logprob: -16.12661361694336
    10. '#' → logprob: -16.25161361694336

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '0' → logprob: -11.500014305114746
    3. '[' → logprob: -12.500014305114746
    4. '```' → logprob: -17.50001335144043
    5. 'i' → logprob: -17.75001335144043
    6. ' ' → logprob: -18.37501335144043
    7. 'ai' → logprob: -18.50001335144043
    8. '(' → logprob: -18.62501335144043
    9. '   ' → logprob: -19.00001335144043
    10. 'yi' → logprob: -19.75001335144043

Token 590: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04512631520628929
    2. '*' → logprob: -3.54512619972229
    3. ']*' → logprob: -5.170126438140869
    4. '0' → logprob: -5.920126438140869
    5. '**' → logprob: -6.045126438140869
    6. '()*' → logprob: -6.920126438140869
    7. ']' → logprob: -7.045126438140869
    8. '```' → logprob: -7.170126438140869
    9. '][' → logprob: -7.795126438140869
    10. ')**' → logprob: -8.795125961303711

Token 591: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.6047699318733066e-05
    2. ' ai' → logprob: -11.750016212463379
    3. '(ai' → logprob: -12.000016212463379
    4. '_ai' → logprob: -14.125016212463379
    5. '   ' → logprob: -14.625016212463379
    6. '.ai' → logprob: -15.375016212463379
    7. 'aj' → logprob: -15.750016212463379
    8. '-ai' → logprob: -16.250015258789062
    9. '
' → logprob: -16.500015258789062
    10. '0' → logprob: -16.625015258789062

Token 592: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6335434317588806
    2. '1' → logprob: -0.7585434317588806
    3. '0' → logprob: -7.133543491363525
    4. '```' → logprob: -10.383543014526367
    5. '#' → logprob: -10.508543014526367
    6. 'import' → logprob: -10.758543014526367
    7. '   ' → logprob: -11.633543014526367
    8. '**' → logprob: -12.133543014526367
    9. 'def' → logprob: -12.508543014526367
    10. '][' → logprob: -12.508543014526367

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '0' → logprob: -17.25
    4. '[' → logprob: -18.125
    5. '   ' → logprob: -18.5625
    6. '```' → logprob: -19.1875
    7. '१' → logprob: -19.8125
    8. '-' → logprob: -19.8125
    9. '１' → logprob: -19.9375
    10. '১' → logprob: -20.75

Token 594: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01938362792134285
    2. ')>' → logprob: -4.894383430480957
    3. ' )' → logprob: -4.894383430480957
    4. ' >' → logprob: -6.144383430480957
    5. '>' → logprob: -6.644383430480957
    6. ')>=' → logprob: -7.769383430480957
    7. '>=' → logprob: -9.144383430480957
    8. ' >=' → logprob: -9.394383430480957
    9. '>)' → logprob: -9.394383430480957
    10. ')<' → logprob: -10.644383430480957

Token 595: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10273070633411407
    2. '>' → logprob: -2.3527307510375977
    3. ' >=' → logprob: -6.602730751037598
    4. ' <' → logprob: -7.352730751037598
    5. '>=' → logprob: -8.102730751037598
    6. ' ' → logprob: -9.102730751037598
    7. '<' → logprob: -9.852730751037598
    8. ' <=' → logprob: -10.977730751037598
    9. '   ' → logprob: -11.727730751037598
    10. ' +' → logprob: -11.977730751037598

Token 596: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007102859206497669
    2. '(ai' → logprob: -5.132102966308594
    3. ' (' → logprob: -6.882102966308594
    4. '=(' → logprob: -10.007102966308594
    5. '(a' → logprob: -10.257102966308594
    6. '(ax' → logprob: -11.132102966308594
    7. '   ' → logprob: -11.257102966308594
    8. '((' → logprob: -11.757102966308594
    9. '(x' → logprob: -12.382102966308594
    10. '(ans' → logprob: -12.507102966308594

Token 597: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0016057939501479268
    2. '(' → logprob: -7.126605987548828
    3. ' aj' → logprob: -7.376605987548828
    4. '   ' → logprob: -9.001605987548828
    5. '  ' → logprob: -11.626605987548828
    6. ' ' → logprob: -11.751605987548828
    7. 'ajj' → logprob: -11.751605987548828
    8. '    ' → logprob: -12.001605987548828
    9. ' (' → logprob: -12.126605987548828
    10. 'ajaj' → logprob: -13.001605987548828

Token 598: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '0' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.0000057220459
    4. '#' → logprob: -17.1250057220459
    5. '.' → logprob: -17.8750057220459
    6. '```' → logprob: -18.1250057220459
    7. '       ' → logprob: -18.5000057220459
    8. ' [' → logprob: -18.5000057220459
    9. '
' → logprob: -18.7500057220459
    10. 'def' → logprob: -19.0000057220459

Token 599: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '```' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '1' → logprob: -18.500001907348633
    6. '
' → logprob: -18.750001907348633
    7. ' ' → logprob: -18.875001907348633
    8. '``' → logprob: -19.375001907348633
    9. '#' → logprob: -19.500001907348633
    10. '۰' → logprob: -19.750001907348633

Token 600: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06256414204835892
    2. '0' → logprob: -2.8125641345977783
    3. '][' → logprob: -7.562564373016357
    4. '```' → logprob: -10.5625638961792
    5. '#' → logprob: -10.6875638961792
    6. 'def' → logprob: -12.1875638961792
    7. '
' → logprob: -12.1875638961792
    8. '   ' → logprob: -12.6875638961792
    9. 'import' → logprob: -12.8125638961792
    10. ''][' → logprob: -12.9375638961792

Token 601: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0003473825636319816
    2. '0' → logprob: -8.000347137451172
    3. '   ' → logprob: -13.000347137451172
    4. 'ajaj' → logprob: -13.500347137451172
    5. 'ajj' → logprob: -13.625347137451172
    6. '
' → logprob: -13.625347137451172
    7. '```' → logprob: -14.000347137451172
    8. 'ai' → logprob: -14.000347137451172
    9. '-aj' → logprob: -14.625347137451172
    10. ' aj' → logprob: -14.625347137451172

Token 602: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029875844484195113
    2. '[' → logprob: -8.125298500061035
    3. '1' → logprob: -13.125298500061035
    4. '```' → logprob: -15.500298500061035
    5. '
' → logprob: -15.625298500061035
    6. '   ' → logprob: -15.750298500061035
    7. '#' → logprob: -16.12529945373535
    8. '(' → logprob: -16.87529945373535
    9. '-' → logprob: -17.37529945373535
    10. ' ' → logprob: -17.81279945373535

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. '1' → logprob: -10.375031471252441
    3. '[' → logprob: -15.750031471252441
    4. '2' → logprob: -16.875032424926758
    5. '
' → logprob: -17.062532424926758
    6. ' ' → logprob: -17.125032424926758
    7. '   ' → logprob: -17.875032424926758
    8. '(' → logprob: -18.687532424926758
    9. '۰' → logprob: -18.687532424926758
    10. '```' → logprob: -18.750032424926758

Token 604: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0138333048671484
    2. ']+' → logprob: -4.513833522796631
    3. ' +' → logprob: -6.263833522796631
    4. '()+' → logprob: -7.138833522796631
    5. ')+' → logprob: -9.513833045959473
    6. ')+(' → logprob: -12.888833045959473
    7. '}+' → logprob: -13.138833045959473
    8. '+
' → logprob: -13.513833045959473
    9. ']' → logprob: -14.513833045959473
    10. '])+' → logprob: -14.638833045959473

Token 605: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -2.6537622034084052e-05
    2. ' aj' → logprob: -10.87502670288086
    3. 'ai' → logprob: -12.50002670288086
    4. '   ' → logprob: -13.37502670288086
    5. 'ajaj' → logprob: -15.37502670288086
    6. '0' → logprob: -15.50002670288086
    7. '
' → logprob: -15.50002670288086
    8. 'a' → logprob: -15.62502670288086
    9. '```' → logprob: -15.62502670288086
    10. '           ' → logprob: -15.75002670288086

Token 606: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14269116520881653
    2. '[' → logprob: -2.017691135406494
    3. 'aj' → logprob: -12.142691612243652
    4. '][' → logprob: -12.767691612243652
    5. '```' → logprob: -13.142691612243652
    6. '0' → logprob: -14.017691612243652
    7. '#' → logprob: -14.142691612243652
    8. '   ' → logprob: -14.267691612243652
    9. '(' → logprob: -14.642691612243652
    10. '
' → logprob: -14.892691612243652

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'aj' → logprob: -14.375000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'ai' → logprob: -16.125001907348633
    5. '0' → logprob: -16.750001907348633
    6. '```' → logprob: -16.875001907348633
    7. 'i' → logprob: -17.000001907348633
    8. '-' → logprob: -17.750001907348633
    9. '
' → logprob: -18.125001907348633
    10. 'ay' → logprob: -18.125001907348633

Token 608: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7086707353591919
    2. '[' → logprob: -1.083670735359192
    3. ']*' → logprob: -1.833670735359192
    4. '()*' → logprob: -5.458670616149902
    5. '1' → logprob: -6.708670616149902
    6. ')*' → logprob: -7.208670616149902
    7. '```' → logprob: -7.208670616149902
    8. '][' → logprob: -7.458670616149902
    9. ']' → logprob: -7.583670616149902
    10. ']+' → logprob: -7.708670616149902

Token 609: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -8.160971628967673e-05
    2. 'ai' → logprob: -9.625082015991211
    3. 'ajj' → logprob: -12.375082015991211
    4. 'ajaj' → logprob: -12.750082015991211
    5. 'aji' → logprob: -13.750082015991211
    6. ' aj' → logprob: -13.750082015991211
    7. '
' → logprob: -13.875082015991211
    8. '   ' → logprob: -14.125082015991211
    9. 'a' → logprob: -14.375082015991211
    10. 'aju' → logprob: -14.500082015991211

Token 610: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054784446954727
    2. '[' → logprob: -3.895547866821289
    3. '```' → logprob: -13.770547866821289
    4. '-' → logprob: -13.895547866821289
    5. '   ' → logprob: -14.020547866821289
    6. '
' → logprob: -14.145547866821289
    7. ']' → logprob: -14.145547866821289
    8. '**' → logprob: -14.520547866821289
    9. '0' → logprob: -14.645547866821289
    10. '#' → logprob: -15.645547866821289

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.5
    3. '[' → logprob: -16.375
    4. '
' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '-' → logprob: -17.375
    7. '```' → logprob: -18.375
    8. ' ' → logprob: -18.625
    9. ']' → logprob: -18.6875
    10. '१' → logprob: -19.1875

Token 612: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17899945378303528
    2. '):' → logprob: -2.303999423980713
    3. '()):
' → logprob: -3.303999423980713
    4. ')' → logprob: -4.053999423980713
    5. ']):
' → logprob: -5.303999423980713
    6. ']):' → logprob: -5.928999423980713
    7. '()' → logprob: -6.678999423980713
    8. '):

' → logprob: -7.803999423980713
    9. '])' → logprob: -9.303999900817871
    10. '())' → logprob: -9.428999900817871

Token 613: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017028623551595956
    2. '                       ' → logprob: -9.250170707702637
    3. '               ' → logprob: -10.125170707702637
    4. ' continue' → logprob: -11.250170707702637
    5. ' return' → logprob: -12.000170707702637
    6. 'continue' → logprob: -12.375170707702637
    7. ',' → logprob: -13.125170707702637
    8. '```' → logprob: -13.250170707702637
    9. 'return' → logprob: -13.375170707702637
    10. '           ' → logprob: -13.375170707702637

Token 614: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14550039172172546
    2. ' continue' → logprob: -2.520500421524048
    3. 'return' → logprob: -3.520500421524048
    4. '                   ' → logprob: -3.895500421524048
    5. ' return' → logprob: -6.020500183105469
    6. '                       ' → logprob: -6.145500183105469
    7. 'print' → logprob: -8.895500183105469
    8. '   ' → logprob: -9.145500183105469
    9. '```' → logprob: -9.645500183105469
    10. '               ' → logprob: -10.020500183105469

Token 615: ' segments' (ID: 33749)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03234155848622322
    2. 'continue' → logprob: -4.157341480255127
    3. ' return' → logprob: -4.282341480255127
    4. '                   ' → logprob: -6.282341480255127
    5. ' continue' → logprob: -7.907341480255127
    6. '               ' → logprob: -10.032341957092285
    7. '           ' → logprob: -10.407341957092285
    8. '                       ' → logprob: -11.157341957092285
    9. '#' → logprob: -11.407341957092285
    10. 'print' → logprob: -11.657341957092285

Token 616: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.08348540961742401
    2. ' continue' → logprob: -3.2084853649139404
    3. 'continue' → logprob: -4.4584856033325195
    4. '                   ' → logprob: -4.9584856033325195
    5. '_overlap' → logprob: -5.5834856033325195
    6. '[' → logprob: -5.8334856033325195
    7. ' and' → logprob: -6.0834856033325195
    8. ' are' → logprob: -6.3334856033325195
    9. ' =' → logprob: -6.9584856033325195
    10. '=' → logprob: -7.3334856033325195

Token 617: ' =>' (ID: 871)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3876585066318512
    2. '                       ' → logprob: -1.3876584768295288
    3. ',' → logprob: -3.5126585960388184
    4. ' and' → logprob: -4.512658596038818
    5. ':' → logprob: -4.637658596038818
    6. ' at' → logprob: -5.137658596038818
    7. ' beyond' → logprob: -5.387658596038818
    8. ':
' → logprob: -5.512658596038818
    9. ' continue' → logprob: -6.387658596038818
    10. '               ' → logprob: -6.512658596038818

Token 618: ' crossing' (ID: 50946)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16059809923171997
    2. ' return' → logprob: -1.9105980396270752
    3. 'True' → logprob: -8.160597801208496
    4. ' True' → logprob: -9.410597801208496
    5. '                   ' → logprob: -12.785597801208496
    6. 'False' → logprob: -13.285597801208496
    7. '           ' → logprob: -14.785597801208496
    8. '   ' → logprob: -14.785597801208496
    9. '               ' → logprob: -15.285597801208496
    10. 'true' → logprob: -15.410597801208496

Token 619: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04583648219704628
    2. '                       ' → logprob: -3.9208364486694336
    3. '               ' → logprob: -4.420836448669434
    4. '           ' → logprob: -5.170836448669434
    5. '
' → logprob: -5.920836448669434
    6. '```' → logprob: -6.295836448669434
    7. '                           ' → logprob: -7.295836448669434
    8. ',' → logprob: -7.920836448669434
    9. ':
' → logprob: -8.295836448669434
    10. ' return' → logprob: -8.420836448669434

Token 620: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03696789592504501
    2. '                       ' → logprob: -3.4119679927825928
    3. '               ' → logprob: -5.911967754364014
    4. '           ' → logprob: -7.911967754364014
    5. '```' → logprob: -9.536968231201172
    6. '                           ' → logprob: -9.911968231201172
    7. ' return' → logprob: -10.411968231201172
    8. 'return' → logprob: -10.786968231201172
    9. ':' → logprob: -10.911968231201172
    10. ':
' → logprob: -11.411968231201172

Token 621: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1870194971561432
    2. '                       ' → logprob: -2.4370195865631104
    3. ' return' → logprob: -3.1870195865631104
    4. '                   ' → logprob: -3.1870195865631104
    5. '               ' → logprob: -7.937019348144531
    6. '                           ' → logprob: -9.687019348144531
    7. '           ' → logprob: -9.937019348144531
    8. '   ' → logprob: -10.062019348144531
    9. '	return' → logprob: -11.312019348144531
    10. '                               ' → logprob: -11.437019348144531

Token 622: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3135327994823456
    2. 'False' → logprob: -1.313532829284668
    3. ' True' → logprob: -8.313532829284668
    4. ' False' → logprob: -10.563532829284668
    5. '=True' → logprob: -21.31353187561035
    6. '(True' → logprob: -21.31353187561035
    7. '
' → logprob: -21.81353187561035
    8. '```' → logprob: -21.93853187561035
    9. 'true' → logprob: -23.18853187561035
    10. '(False' → logprob: -23.43853187561035

Token 623: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11324850469827652
    2. '           ' → logprob: -2.613248586654663
    3. 'return' → logprob: -3.488248586654663
    4. '       ' → logprob: -6.988248348236084
    5. '                   ' → logprob: -7.113248348236084
    6. ' return' → logprob: -7.738248348236084
    7. 'continue' → logprob: -7.988248348236084
    8. '   ' → logprob: -8.488248825073242
    9. '<|end|>' → logprob: -9.238248825073242
    10. '                
' → logprob: -9.738248825073242

Token 624: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5273498296737671
    2. '               ' → logprob: -0.9023498296737671
    3. 'return' → logprob: -6.027349948883057
    4. '                   ' → logprob: -6.902349948883057
    5. '```' → logprob: -8.027349472045898
    6. ' return' → logprob: -8.652349472045898
    7. '       ' → logprob: -9.277349472045898
    8. 'continue' → logprob: -9.402349472045898
    9. '                       ' → logprob: -9.902349472045898
    10. '            
' → logprob: -11.402349472045898

Token 625: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47626835107803345
    2. '           ' → logprob: -1.1012682914733887
    3. 'return' → logprob: -3.3512682914733887
    4. 'else' → logprob: -5.101268291473389
    5. '                   ' → logprob: -6.101268291473389
    6. ' return' → logprob: -6.851268291473389
    7. ' else' → logprob: -7.101268291473389
    8. 'if' → logprob: -8.351268768310547
    9. '       ' → logprob: -8.476268768310547
    10. '```' → logprob: -9.226268768310547

Token 626: ' Else' (ID: 42978)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04370850324630737
    2. 'else' → logprob: -3.293708562850952
    3. 'continue' → logprob: -6.043708324432373
    4. '#' → logprob: -6.793708324432373
    5. '           ' → logprob: -6.793708324432373
    6. ' return' → logprob: -7.668708324432373
    7. '               ' → logprob: -8.293708801269531
    8. ' else' → logprob: -8.918708801269531
    9. '       ' → logprob: -10.043708801269531
    10. 'if' → logprob: -10.043708801269531

Token 627: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.396062970161438
    2. 'return' → logprob: -1.146062970161438
    3. ' continue' → logprob: -5.521062850952148
    4. '                   ' → logprob: -5.771062850952148
    5. ' return' → logprob: -7.021062850952148
    6. '   ' → logprob: -7.646062850952148
    7. '               ' → logprob: -8.396062850952148
    8. '           ' → logprob: -8.521062850952148
    9. '
' → logprob: -8.896062850952148
    10. '                       ' → logprob: -10.896062850952148

Token 628: ' crossing' (ID: 50946)
  Prédit: ' crossing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossing' → logprob: -0.07806573808193207
    2. 'return' → logprob: -3.4530656337738037
    3. ' return' → logprob: -3.5780656337738037
    4. 'cross' → logprob: -5.703065872192383
    5. '           ' → logprob: -5.953065872192383
    6. ' problem' → logprob: -5.953065872192383
    7. ' overlap' → logprob: -6.203065872192383
    8. 'problem' → logprob: -6.828065872192383
    9. '       ' → logprob: -6.953065872192383
    10. 'continue' → logprob: -7.078065872192383

Token 629: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016816290095448494
    2. 'continue' → logprob: -5.391816139221191
    3. 'return' → logprob: -5.391816139221191
    4. '   ' → logprob: -6.391816139221191
    5. '       ' → logprob: -6.391816139221191
    6. ' continue' → logprob: -6.391816139221191
    7. '               ' → logprob: -7.266816139221191
    8. ' return' → logprob: -7.266816139221191
    9. '
' → logprob: -7.391816139221191
    10. '                   ' → logprob: -8.516816139221191

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044634874910116196
    2. '               ' → logprob: -3.5446348190307617
    3. '       ' → logprob: -5.419634819030762
    4. 'continue' → logprob: -5.544634819030762
    5. '   ' → logprob: -5.794634819030762
    6. ' continue' → logprob: -6.419634819030762
    7. '                   ' → logprob: -6.544634819030762
    8. 'return' → logprob: -8.544634819030762
    9. '
' → logprob: -9.794634819030762
    10. ' return' → logprob: -10.544634819030762

Token 631: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37384146451950073
    2. 'return' → logprob: -1.4988415241241455
    3. 'continue' → logprob: -3.4988415241241455
    4. '       ' → logprob: -3.8738415241241455
    5. '               ' → logprob: -4.248841285705566
    6. '   ' → logprob: -4.248841285705566
    7. ' return' → logprob: -5.748841285705566
    8. 'else' (adapté à ' else') → logprob: -5.998841285705566
    9. ' continue' → logprob: -6.623841285705566
    10. '```' → logprob: -7.498841285705566

Token 632: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1633523553609848
    2. '           ' → logprob: -2.4133522510528564
    3. ' if' → logprob: -3.1633522510528564
    4. ' continue' → logprob: -4.6633524894714355
    5. 'if' → logprob: -5.6633524894714355
    6. ' #' → logprob: -6.7883524894714355
    7. ' return' → logprob: -6.9133524894714355
    8. '```' → logprob: -7.0383524894714355
    9. 'continue' → logprob: -7.1633524894714355
    10. '#' → logprob: -7.1633524894714355

Token 633: '               ' (ID: 506)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.143195629119873
    2. '               ' → logprob: -1.268195629119873
    3. '           ' → logprob: -1.643195629119873
    4. ' dx' → logprob: -2.643195629119873
    5. '                   ' → logprob: -3.393195629119873
    6. '#' → logprob: -4.143195629119873
    7. 'd' → logprob: -4.518195629119873
    8. '```' → logprob: -4.893195629119873
    9. 'return' → logprob: -5.143195629119873
    10. 'vec' → logprob: -5.268195629119873

Token 634: ' #' (ID: 1069)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.9354682564735413
    2. 'def' → logprob: -1.0604681968688965
    3. '#' (adapté à ' #') → logprob: -2.0604681968688965
    4. 'd' → logprob: -2.8104681968688965
    5. 'det' → logprob: -3.8104681968688965
    6. 'da' → logprob: -3.8104681968688965
    7. 'ai' → logprob: -4.4354681968688965
    8. 'a' → logprob: -5.1854681968688965
    9. 'vec' → logprob: -5.3104681968688965
    10. 'dir' → logprob: -6.9354681968688965

Token 635: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2600952684879303
    2. 'den' → logprob: -2.5100953578948975
    3. 'd' → logprob: -3.0100953578948975
    4. '#' → logprob: -3.8850953578948975
    5. 'vec' → logprob: -3.8850953578948975
    6. 'ai' → logprob: -4.135095119476318
    7. 'a' → logprob: -4.885095119476318
    8. 'da' → logprob: -4.885095119476318
    9. 'v' → logprob: -5.135095119476318
    10. 'dir' → logprob: -5.385095119476318

Token 636: ' intersection' (ID: 42002)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10462968051433563
    2. 'den' → logprob: -2.7296297550201416
    3. 'ai' → logprob: -4.6046295166015625
    4. 'dx' → logprob: -4.7296295166015625
    5. '           ' → logprob: -5.9796295166015625
    6. 'det' → logprob: -6.1046295166015625
    7. 'dir' → logprob: -6.4796295166015625
    8. '#' → logprob: -6.7296295166015625
    9. 'xi' → logprob: -6.8546295166015625
    10. 'ax' → logprob: -6.9796295166015625

Token 637: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7664802670478821
    2. ' =' → logprob: -1.2664802074432373
    3. '               ' → logprob: -2.7664802074432373
    4. ' if' → logprob: -3.2664802074432373
    5. ':' → logprob: -3.3914802074432373
    6. '=' → logprob: -3.8914802074432373
    7. '                   ' → logprob: -4.016480445861816
    8. 'x' → logprob: -4.391480445861816
    9. ' x' → logprob: -4.516480445861816
    10. ',' → logprob: -5.141480445861816

Token 638: ' segments' (ID: 33749)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.6034047603607178
    2. '(' → logprob: -1.7284047603607178
    3. '(ai' → logprob: -2.4784047603607178
    4. '0' → logprob: -2.8534047603607178
    5. 'segments' → logprob: -2.8534047603607178
    6. 'anchor' → logprob: -3.6034047603607178
    7. ' ai' → logprob: -4.228404998779297
    8. 'lines' → logprob: -5.478404998779297
    9. 'def' → logprob: -5.728404998779297
    10. 'aj' → logprob: -5.978404998779297

Token 639: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6778545379638672
    2. '                   ' → logprob: -2.052854537963867
    3. '               ' → logprob: -2.052854537963867
    4. ' =' → logprob: -2.177854537963867
    5. 'dx' → logprob: -2.302854537963867
    6. 't' → logprob: -2.802854537963867
    7. ' dx' → logprob: -2.927854537963867
    8. '=' → logprob: -3.427854537963867
    9. 'def' → logprob: -3.927854537963867
    10. ' t' → logprob: -4.177854537963867

Token 640: ' anchor' (ID: 31067)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.029704557731747627
    2. '(' → logprob: -3.9047045707702637
    3. '(ai' → logprob: -5.404704570770264
    4. ' ai' → logprob: -6.154704570770264
    5. 'anchor' → logprob: -6.654704570770264
    6. 'origin' → logprob: -7.529704570770264
    7. 'aj' → logprob: -7.654704570770264
    8. ' (' → logprob: -9.529704093933105
    9. '0' → logprob: -10.029704093933105
    10. 'oi' → logprob: -10.904704093933105

Token 641: ' to' (ID: 316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7383220791816711
    2. 'i' → logprob: -1.2383220195770264
    3. ' to' → logprob: -1.6133220195770264
    4. ' (' → logprob: -4.4883222579956055
    5. '[i' → logprob: -5.2383222579956055
    6. '[' → logprob: -5.3633222579956055
    7. 'to' → logprob: -5.3633222579956055
    8. '(' → logprob: -5.9883222579956055
    9. '_points' → logprob: -6.9883222579956055
    10. '(i' → logprob: -7.1133222579956055

Token 642: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.106233835220337
    2. 'origin' → logprob: -1.481233835220337
    3. ' origin' → logprob: -1.481233835220337
    4. ' (' → logprob: -1.606233835220337
    5. '0' → logprob: -4.606233596801758
    6. ' ' → logprob: -5.606233596801758
    7. '(origin' → logprob: -9.356233596801758
    8. 'anchor' → logprob: -10.606233596801758
    9. 'orig' → logprob: -11.106233596801758
    10. '_origin' → logprob: -11.731233596801758

Token 643: ' except' (ID: 6384)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2598530650138855
    2. '           ' → logprob: -2.2598531246185303
    3. 'dx' → logprob: -2.8848531246185303
    4. ' dx' → logprob: -3.7598531246185303
    5. ' =' → logprob: -5.384852886199951
    6. 'import' → logprob: -5.384852886199951
    7. 'ai' → logprob: -5.509852886199951
    8. '#' → logprob: -5.634852886199951
    9. 'x' → logprob: -5.634852886199951
    10. ',' → logprob: -6.009852886199951

Token 644: ' at' (ID: 540)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.30724436044692993
    2. '(' → logprob: -1.9322443008422852
    3. ' origin' → logprob: -2.432244300842285
    4. ' (' → logprob: -4.057244300842285
    5. '0' → logprob: -4.682244300842285
    6. '(origin' → logprob: -6.182244300842285
    7. 'the' → logprob: -6.932244300842285
    8. ' at' → logprob: -7.432244300842285
    9. ' the' → logprob: -7.432244300842285
    10. 'for' → logprob: -8.182244300842285

Token 645: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.05258970707654953
    2. ' origin' → logprob: -3.0525896549224854
    3. '0' → logprob: -6.0525898933410645
    4. '(' → logprob: -6.5525898933410645
    5. ' (' → logprob: -8.677589416503906
    6. '(origin' → logprob: -11.052589416503906
    7. ' ' → logprob: -11.177589416503906
    8. 'orig' → logprob: -12.052589416503906
    9. '_origin' → logprob: -13.052589416503906
    10. '
' → logprob: -13.677589416503906

Token 646: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1696255207061768
    2. '           ' → logprob: -1.2946255207061768
    3. '                   ' → logprob: -2.0446255207061768
    4. ':' → logprob: -2.1696255207061768
    5. ':
' → logprob: -2.2946255207061768
    6. '
' → logprob: -3.7946255207061768
    7. ',' → logprob: -4.044625282287598
    8. ' if' → logprob: -4.544625282287598
    9. ' and' → logprob: -5.794625282287598
    10. '```' → logprob: -5.919625282287598

Token 647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.084202341735363
    2. '           ' → logprob: -2.584202289581299
    3. '                   ' → logprob: -6.834202289581299
    4. 'dx' → logprob: -6.834202289581299
    5. ' dx' → logprob: -6.959202289581299
    6. 'x' → logprob: -8.084202766418457
    7. '   ' → logprob: -8.084202766418457
    8. '```' → logprob: -8.334202766418457
    9. ' x' → logprob: -8.584202766418457
    10. ',' → logprob: -8.959202766418457

Token 648: ' #' (ID: 1069)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.2700449228286743
    2. 'den' → logprob: -1.6450449228286743
    3. 'd' → logprob: -2.0200448036193848
    4. 'a' → logprob: -2.5200448036193848
    5. 'ax' → logprob: -2.8950448036193848
    6. 'dx' → logprob: -3.0200448036193848
    7. 't' → logprob: -3.1450448036193848
    8. 'A' → logprob: -3.5200448036193848
    9. 'def' → logprob: -3.6450448036193848
    10. 'x' → logprob: -4.020044803619385

Token 649: ' Param' (ID: 14796)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.36325985193252563
    2. 'def' → logprob: -1.9882597923278809
    3. 'd' → logprob: -2.988259792327881
    4. 'ai' → logprob: -3.238259792327881
    5. 'dir' → logprob: -4.238259792327881
    6. '#' → logprob: -4.363259792327881
    7. 'dx' → logprob: -4.488259792327881
    8. 'a' → logprob: -4.613259792327881
    9. 'det' → logprob: -5.363259792327881
    10. 'A' → logprob: -5.738259792327881

Token 650: 'etric' (ID: 33622)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5037961006164551
    2. '=' → logprob: -1.003796100616455
    3. 's' → logprob: -5.128796100616455
    4. '=t' → logprob: -5.253796100616455
    5. '   ' → logprob: -5.628796100616455
    6. 't' → logprob: -5.753796100616455
    7. '       ' → logprob: -6.003796100616455
    8. ' t' → logprob: -6.378796100616455
    9. '=s' → logprob: -7.128796100616455
    10. '           ' → logprob: -7.253796100616455

Token 651: ' lines' (ID: 8698)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.8040270805358887
    2. ' form' → logprob: -0.9290270805358887
    3. 't' → logprob: -2.4290270805358887
    4. ' equations' → logprob: -3.3040270805358887
    5. ' forms' → logprob: -4.179027080535889
    6. ' t' → logprob: -5.304027080535889
    7. '_form' → logprob: -5.429027080535889
    8. 'forms' → logprob: -6.179027080535889
    9. ' lines' → logprob: -6.554027080535889
    10. ' line' → logprob: -7.054027080535889

Token 652: ' L' (ID: 451)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8808337450027466
    2. ' =' → logprob: -1.8808337450027466
    3. 'i' → logprob: -2.505833625793457
    4. ' i' → logprob: -2.630833625793457
    5. ' for' → logprob: -3.005833625793457
    6. ':
' → logprob: -3.130833625793457
    7. ' t' → logprob: -3.130833625793457
    8. ',' → logprob: -3.505833625793457
    9. ' ai' → logprob: -4.005833625793457
    10. ' (' → logprob: -4.380833625793457

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33803480863571167
    2. 'i' → logprob: -1.4630348682403564
    3. '_i' → logprob: -3.0880348682403564
    4. ' =' → logprob: -4.838034629821777
    5. 'a' → logprob: -7.588034629821777
    6. ' i' → logprob: -8.088034629821777
    7. '   ' → logprob: -8.838034629821777
    8. '_a' → logprob: -9.088034629821777
    9. 't' → logprob: -9.213034629821777
    10. '=' → logprob: -9.588034629821777

Token 654: ':' (ID: 25)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4556944668292999
    2. ':' → logprob: -2.0806944370269775
    3. ' =' → logprob: -2.0806944370269775
    4. '_i' → logprob: -2.5806944370269775
    5. ' and' → logprob: -4.580694675445557
    6. 'i' → logprob: -4.955694675445557
    7. 'from' → logprob: -5.455694675445557
    8. ':
' → logprob: -5.830694675445557
    9. ' for' → logprob: -5.830694675445557
    10. ' from' → logprob: -6.330694675445557

Token 655: ' origin' (ID: 12839)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3149468898773193
    2. '(' → logprob: -1.8149468898773193
    3. 'ai' → logprob: -1.9399468898773193
    4. ' ai' → logprob: -2.0649468898773193
    5. 'x' → logprob: -2.5649468898773193
    6. 't' → logprob: -3.4399468898773193
    7. '(ai' → logprob: -3.5649468898773193
    8. 'u' → logprob: -3.6899468898773193
    9. '(x' → logprob: -4.064947128295898
    10. '0' → logprob: -4.064947128295898

Token 656: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16601447761058807
    2. '+' → logprob: -2.1660144329071045
    3. '=' → logprob: -3.7910144329071045
    4. ' =' → logprob: -5.416014671325684
    5. ' to' → logprob: -5.916014671325684
    6. ' -' → logprob: -6.791014671325684
    7. 'to' → logprob: -6.916014671325684
    8. '-' → logprob: -7.041014671325684
    9. '->' → logprob: -7.041014671325684
    10. ' ->' → logprob: -7.166014671325684

Token 657: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9021626710891724
    2. 'ai' → logprob: -1.0271626710891724
    3. ' t' → logprob: -1.9021626710891724
    4. ' ai' → logprob: -2.652162551879883
    5. '(' → logprob: -4.902162551879883
    6. '(ai' → logprob: -5.777162551879883
    7. ' (' → logprob: -6.777162551879883
    8. 'ti' → logprob: -7.027162551879883
    9. 's' → logprob: -7.027162551879883
    10. '(t' → logprob: -7.652162551879883

Token 658: '*(-' (ID: 78771)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6875905394554138
    2. '*(-' → logprob: -1.1875905990600586
    3. '*(' → logprob: -1.8125905990600586
    4. ' *' → logprob: -3.6875905990600586
    5. '*-' → logprob: -6.312590599060059
    6. '*i' → logprob: -6.687590599060059
    7. '*((' → logprob: -7.937590599060059
    8. '*a' → logprob: -8.187590599060059
    9. '*np' → logprob: -9.062590599060059
    10. '*u' → logprob: -10.437590599060059

Token 659: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -3.8889261304575484e-06
    2. ' ai' → logprob: -12.750003814697266
    3. '(ai' → logprob: -14.750003814697266
    4. 'aj' → logprob: -15.875003814697266
    5. '_ai' → logprob: -15.875003814697266
    6. 'a' → logprob: -15.875003814697266
    7. '1' → logprob: -16.625003814697266
    8. '   ' → logprob: -17.125003814697266
    9. 'AI' → logprob: -17.250003814697266
    10. '-ai' → logprob: -17.750003814697266

Token 660: '),' (ID: 936)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002815693849697709
    2. '),' → logprob: -6.3778157234191895
    3. ',' → logprob: -7.2528157234191895
    4. ')' → logprob: -8.502815246582031
    5. 'x' → logprob: -8.752815246582031
    6. '),(' → logprob: -10.627815246582031
    7. '0' → logprob: -12.127815246582031
    8. ')
' → logprob: -12.502815246582031
    9. ' ,' → logprob: -13.127815246582031
    10. '),
' → logprob: -13.627815246582031

Token 661: ' t' (ID: 260)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5797789096832275
    2. ' t' → logprob: -1.3297789096832275
    3. '0' → logprob: -2.8297789096832275
    4. ' ' → logprob: -3.0797789096832275
    5. 'L' → logprob: -3.3297789096832275
    6. 't' → logprob: -3.4547789096832275
    7. ' s' → logprob: -7.329778671264648
    8. ' origin' → logprob: -7.704778671264648
    9. '1' → logprob: -7.829778671264648
    10. '   ' → logprob: -7.954778671264648

Token 662: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37074708938598633
    2. ' in' → logprob: -1.8707470893859863
    3. ' =' → logprob: -2.6207470893859863
    4. 'in' → logprob: -2.7457470893859863
    5. '<|end|>' → logprob: -4.745747089385986
    6. ')' → logprob: -5.495747089385986
    7. ',' → logprob: -6.370747089385986
    8. '>' → logprob: -6.620747089385986
    9. ' ' → logprob: -7.870747089385986
    10. 'from' → logprob: -7.995747089385986

Token 663: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.745069499127567e-05
    2. '(' → logprob: -9.37508773803711
    3. ' [' → logprob: -13.00008773803711
    4. '0' → logprob: -14.87508773803711
    5. '[
' → logprob: -17.25008773803711
    6. '{' → logprob: -17.25008773803711
    7. 'range' → logprob: -17.37508773803711
    8. '\[' → logprob: -19.00008773803711
    9. ' (' → logprob: -19.25008773803711
    10. '[...,' → logprob: -20.12508773803711

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '1' → logprob: -12.375004768371582
    3. '[' → logprob: -15.625004768371582
    4. '(' → logprob: -16.125003814697266
    5. ' ' → logprob: -17.625003814697266
    6. ']' → logprob: -18.375003814697266
    7. '```' → logprob: -18.500003814697266
    8. '
' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.750003814697266
    10. '-' → logprob: -20.875003814697266

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ' ,' → logprob: -10.750039100646973
    3. '1' → logprob: -11.125039100646973
    4. '0' → logprob: -13.625039100646973
    5. '.' → logprob: -14.250039100646973
    6. '..' → logprob: -15.125039100646973
    7. '...' → logprob: -15.875039100646973
    8. ',
' → logprob: -16.00004005432129
    9. '```' → logprob: -16.00004005432129
    10. ' ' → logprob: -16.25004005432129

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001963881659321487
    2. '0' → logprob: -8.75019645690918
    3. 'inf' → logprob: -10.87519645690918
    4. 'float' → logprob: -11.75019645690918
    5. ' ' → logprob: -12.75019645690918
    6. 'math' → logprob: -13.37519645690918
    7. '
' → logprob: -13.50019645690918
    8. '+' → logprob: -13.62519645690918
    9. 'in' → logprob: -14.00019645690918
    10. 'ai' → logprob: -14.62519645690918

Token 667: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3886168897151947
    2. ']' → logprob: -1.138616919517517
    3. '],' → logprob: -7.388617038726807
    4. ']:
' → logprob: -7.513617038726807
    5. ']

' → logprob: -8.263616561889648
    6. ']
' → logprob: -8.638616561889648
    7. ']:' → logprob: -10.388616561889648
    8. ')
' → logprob: -10.763616561889648
    9. '];' → logprob: -11.013616561889648
    10. '           ' → logprob: -11.263616561889648

Token 668: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007016098592430353
    2. '           ' → logprob: -5.757016181945801
    3. ',' → logprob: -7.132016181945801
    4. '                   ' → logprob: -7.507016181945801
    5. '```' → logprob: -7.507016181945801
    6. ' and' → logprob: -7.632016181945801
    7. '       ' → logprob: -7.882016181945801
    8. ' if' → logprob: -9.1320161819458
    9. '   ' → logprob: -9.1320161819458
    10. '                ' → logprob: -9.6320161819458

Token 669: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9641951322555542
    2. ' t' → logprob: -1.8391951322555542
    3. ' ai' → logprob: -1.9641951322555542
    4. ' s' → logprob: -2.5891952514648438
    5. 'ai' → logprob: -2.8391952514648438
    6. 't' → logprob: -3.2141952514648438
    7. '```' → logprob: -4.339195251464844
    8. ' dx' → logprob: -4.464195251464844
    9. ' if' → logprob: -4.589195251464844
    10. '                   ' → logprob: -4.589195251464844

Token 670: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2336127907037735
    2. ' L' → logprob: -1.8586127758026123
    3. 't' → logprob: -3.8586127758026123
    4. '               ' → logprob: -4.733613014221191
    5. '           ' → logprob: -5.608613014221191
    6. ' t' → logprob: -5.733613014221191
    7. 'den' → logprob: -6.733613014221191
    8. 'param' → logprob: -6.858613014221191
    9. 'vec' → logprob: -6.858613014221191
    10. 'dx' → logprob: -6.858613014221191

Token 671: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012598066590726376
    2. '2' → logprob: -4.387598037719727
    3. 'ines' → logprob: -9.762598037719727
    4. 'ine' → logprob: -10.512598037719727
    5. 'j' → logprob: -14.012598037719727
    6. 'ambda' → logprob: -14.387598037719727
    7. 'inear' → logprob: -14.512598037719727
    8. '   ' → logprob: -15.012598037719727
    9. '#' → logprob: -15.637598037719727
    10. '[' → logprob: -15.762598037719727

Token 672: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014180023572407663
    2. '=' → logprob: -9.375142097473145
    3. ' :' → logprob: -10.500142097473145
    4. ' =' → logprob: -10.625142097473145
    5. '[' → logprob: -14.000142097473145
    6. 'origin' → logprob: -14.250142097473145
    7. 'def' → logprob: -14.750142097473145
    8. 'import' → logprob: -14.750142097473145
    9. ':
' → logprob: -14.875142097473145
    10. ',' → logprob: -15.375142097473145

Token 673: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.6475386619567871
    2. ' origin' → logprob: -0.7725386619567871
    3. '(' → logprob: -5.147538661956787
    4. ' (' → logprob: -5.647538661956787
    5. '0' → logprob: -5.772538661956787
    6. ' ' → logprob: -7.147538661956787
    7. '-origin' → logprob: -7.397538661956787
    8. 'aj' → logprob: -8.522539138793945
    9. '(origin' → logprob: -8.897539138793945
    10. 'orig' → logprob: -8.897539138793945

Token 674: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03365307301282883
    2. '+' → logprob: -3.4086530208587646
    3. ' -' → logprob: -12.783653259277344
    4. ' plus' → logprob: -13.408653259277344
    5. ' ' → logprob: -14.158653259277344
    6. ' ' → logprob: -14.658653259277344
    7. '-' → logprob: -14.908653259277344
    8. '[' → logprob: -15.283653259277344
    9. ' +
' → logprob: -15.658653259277344
    10. '```' → logprob: -15.908653259277344

Token 675: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05306067317724228
    2. 's' → logprob: -3.30306077003479
    3. ' t' → logprob: -5.428060531616211
    4. 'aj' → logprob: -5.553060531616211
    5. '(' → logprob: -5.803060531616211
    6. '(-' → logprob: -6.428060531616211
    7. 'u' → logprob: -7.303060531616211
    8. ' s' → logprob: -8.053060531616211
    9. 'tj' → logprob: -8.428060531616211
    10. 'tk' → logprob: -8.803060531616211

Token 676: '*(-' (ID: 78771)
  Prédit: '*(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(-' → logprob: -0.009888538159430027
    2. '*' → logprob: -4.759888648986816
    3. '*(' → logprob: -6.759888648986816
    4. ' *' → logprob: -9.259888648986816
    5. '*-' → logprob: -11.884888648986816
    6. '(-' → logprob: -12.009888648986816
    7. '*((' → logprob: -12.634888648986816
    8. '*j' → logprob: -14.134888648986816
    9. '(*' → logprob: -15.259888648986816
    10. '*np' → logprob: -15.259888648986816

Token 677: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -5.061676347395405e-05
    2. ' aj' → logprob: -10.87505054473877
    3. 'aja' → logprob: -12.50005054473877
    4. '
' → logprob: -12.62505054473877
    5. '-aj' → logprob: -12.87505054473877
    6. 'ajj' → logprob: -13.12505054473877
    7. 'oj' → logprob: -13.25005054473877
    8. 'ai' → logprob: -13.50005054473877
    9. 'ajaj' → logprob: -13.50005054473877
    10. 'a' → logprob: -13.50005054473877

Token 678: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.012359659187495708
    2. ')' → logprob: -4.512359619140625
    3. ')
' → logprob: -6.887359619140625
    4. ' ),' → logprob: -10.137359619140625
    5. '[' → logprob: -10.387359619140625
    6. '0' → logprob: -10.762359619140625
    7. ',' → logprob: -11.012359619140625
    8. '           ' → logprob: -11.137359619140625
    9. '),(' → logprob: -11.512359619140625
    10. '),
' → logprob: -11.512359619140625

Token 679: ' s' (ID: 265)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3543091118335724
    2. 't' → logprob: -1.35430908203125
    3. '0' → logprob: -4.10430908203125
    4. ' s' → logprob: -4.47930908203125
    5. ' ' → logprob: -5.47930908203125
    6. '           ' → logprob: -5.60430908203125
    7. 's' → logprob: -5.72930908203125
    8. '               ' → logprob: -7.97930908203125
    9. ' continue' → logprob: -8.97930908203125
    10. '                   ' → logprob: -9.35430908203125

Token 680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07043318450450897
    2. 'in' → logprob: -2.6954331398010254
    3. '[' → logprob: -8.195433616638184
    4. ' =' → logprob: -9.195433616638184
    5. '=' → logprob: -9.445433616638184
    6. ')' → logprob: -10.945433616638184
    7. ',' → logprob: -11.570433616638184
    8. ' ' → logprob: -12.570433616638184
    9. ' [' → logprob: -12.695433616638184
    10. ' not' → logprob: -13.445433616638184

Token 681: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -13.375001907348633
    3. 'range' → logprob: -16.500001907348633
    4. '0' → logprob: -17.750001907348633
    5. '[
' → logprob: -18.875001907348633
    6. '{' → logprob: -18.875001907348633
    7. '(' → logprob: -19.750001907348633
    8. ']' → logprob: -20.750001907348633
    9. ' ' → logprob: -20.875001907348633
    10. ' range' → logprob: -21.500001907348633

Token 682: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.750015258789062
    3. '[' → logprob: -12.125015258789062
    4. '1' → logprob: -13.375015258789062
    5. '```' → logprob: -17.500015258789062
    6. '(' → logprob: -17.750015258789062
    7. ',' → logprob: -17.875015258789062
    8. ']' → logprob: -18.000015258789062
    9. '{' → logprob: -18.250015258789062
    10. ')' → logprob: -18.250015258789062

Token 683: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.160472109913826
    2. ',' → logprob: -1.9104721546173096
    3. '0' → logprob: -9.16047191619873
    4. ']' → logprob: -9.41047191619873
    5. '=' → logprob: -11.03547191619873
    6. '```' → logprob: -11.03547191619873
    7. ' ' → logprob: -11.16047191619873
    8. '-' → logprob: -13.03547191619873
    9. '],' → logprob: -13.03547191619873
    10. '.' → logprob: -13.03547191619873

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '```' → logprob: -15.375001907348633
    4. '0' → logprob: -15.500001907348633
    5. ')' → logprob: -16.250001907348633
    6. '
' → logprob: -16.500001907348633
    7. ']' → logprob: -16.625001907348633
    8. '[' → logprob: -18.250001907348633
    9. 's' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.375001907348633

Token 685: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5297968983650208
    2. ']' → logprob: -0.9047968983650208
    3. ']:
' → logprob: -5.404797077178955
    4. '           ' → logprob: -6.529797077178955
    5. ']:' → logprob: -8.029796600341797
    6. ']
' → logprob: -9.029796600341797
    7. '               ' → logprob: -9.654796600341797
    8. ')' → logprob: -10.279796600341797
    9. ')
' → logprob: -10.404796600341797
    10. ']

' → logprob: -10.529796600341797

Token 686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029696188867092133
    2. '           ' → logprob: -5.877969741821289
    3. '	           ' → logprob: -10.127969741821289
    4. '			' → logprob: -10.377969741821289
    5. '                   ' → logprob: -10.877969741821289
    6. '```' → logprob: -11.127969741821289
    7. '<|end|>' → logprob: -11.502969741821289
    8. ',' → logprob: -12.002969741821289
    9. '       ' → logprob: -12.127969741821289
    10. '		       ' → logprob: -12.252969741821289

Token 687: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21821241080760956
    2. '           ' → logprob: -2.218212366104126
    3. 'dx' → logprob: -2.968212366104126
    4. 'den' → logprob: -3.843212366104126
    5. ' dx' → logprob: -5.843212604522705
    6. 'd' → logprob: -6.093212604522705
    7. 't' → logprob: -6.093212604522705
    8. 'det' → logprob: -6.093212604522705
    9. ' denom' → logprob: -6.718212604522705
    10. 'a' → logprob: -7.093212604522705

Token 688: ' Find' (ID: 9764)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.04774613678455353
    2. 'd' → logprob: -4.047746181488037
    3. 'det' → logprob: -4.172746181488037
    4. 't' → logprob: -5.172746181488037
    5. 'dx' → logprob: -6.422746181488037
    6. 'ai' → logprob: -7.172746181488037
    7. '   ' → logprob: -7.172746181488037
    8. 'a' → logprob: -7.172746181488037
    9. '#' → logprob: -7.297746181488037
    10. 'A' → logprob: -7.297746181488037

Token 689: ' if' (ID: 538)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.6412787437438965
    2. 't' → logprob: -0.7662787437438965
    3. 'det' → logprob: -5.6412787437438965
    4. 'd' → logprob: -6.0162787437438965
    5. 's' → logprob: -7.3912787437438965
    6. 'dx' → logprob: -7.6412787437438965
    7. ' denom' → logprob: -7.8912787437438965
    8. '#' → logprob: -8.141279220581055
    9. ' t' → logprob: -8.891279220581055
    10. 'tx' → logprob: -9.016279220581055

Token 690: ' exists' (ID: 13031)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1387617588043213
    2. '(ai' → logprob: -1.7637617588043213
    3. '(abs' → logprob: -2.2637617588043213
    4. '(' → logprob: -2.3887617588043213
    5. 'cross' → logprob: -2.6387617588043213
    6. ' abs' → logprob: -2.7637617588043213
    7. ' (' → logprob: -3.1387617588043213
    8. ' cross' → logprob: -3.2637617588043213
    9. ' ai' → logprob: -4.013761520385742
    10. 't' → logprob: -4.138761520385742

Token 691: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.28286319971084595
    2. 't' → logprob: -1.4078631401062012
    3. ' (' → logprob: -7.157863140106201
    4. 's' → logprob: -7.907863140106201
    5. ' s' → logprob: -7.907863140106201
    6. '(t' → logprob: -9.15786361694336
    7. '(' → logprob: -10.90786361694336
    8. ' a' → logprob: -10.90786361694336
    9. ' ' → logprob: -11.28286361694336
    10. '(s' → logprob: -11.28286361694336

Token 692: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10132456570863724
    2. ' ,' → logprob: -3.4763245582580566
    3. '<|end|>' → logprob: -3.4763245582580566
    4. ',s' → logprob: -3.6013245582580566
    5. ' and' → logprob: -5.851324558258057
    6. ' s' → logprob: -6.226324558258057
    7. ' >' → logprob: -7.726324558258057
    8. 's' → logprob: -7.976324558258057
    9. ' >=' → logprob: -8.476325035095215
    10. ',j' → logprob: -8.476325035095215

Token 693: ' in' (ID: 306)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.08258456736803055
    2. '<|end|>' → logprob: -3.0825846195220947
    3. ',' → logprob: -5.082584381103516
    4. ':' → logprob: -5.707584381103516
    5. ' with' → logprob: -6.082584381103516
    6. ' and' → logprob: -6.082584381103516
    7. 'such' → logprob: -6.082584381103516
    8. ' in' → logprob: -6.082584381103516
    9. '>=' → logprob: -6.332584381103516
    10. ' >=' → logprob: -6.707584381103516

Token 694: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02405708096921444
    2. ' (' → logprob: -3.899057149887085
    3. '[' → logprob: -6.024056911468506
    4. '0' → logprob: -6.899056911468506
    5. ']' → logprob: -9.649057388305664
    6. ' [' → logprob: -11.899057388305664
    7. '<|end|>' → logprob: -12.899057388305664
    8. ' ' → logprob: -13.024057388305664
    9. 'range' → logprob: -13.274057388305664
    10. ')' → logprob: -13.899057388305664

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '(' → logprob: -14.125008583068848
    4. ')' → logprob: -16.500009536743164
    5. ' (' → logprob: -18.375009536743164
    6. '[' → logprob: -19.250009536743164
    7. '
' → logprob: -19.375009536743164
    8. '   ' → logprob: -19.625009536743164
    9. ']' → logprob: -20.000009536743164
    10. '1' → logprob: -20.250009536743164

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002116462419508025
    2. ' ,' → logprob: -8.625211715698242
    3. '1' → logprob: -10.625211715698242
    4. ',
' → logprob: -12.500211715698242
    5. '   ' → logprob: -13.875211715698242
    6. ' ' → logprob: -14.125211715698242
    7. '
' → logprob: -14.875211715698242
    8. '0' → logprob: -14.875211715698242
    9. '```' → logprob: -15.000211715698242
    10. ',float' → logprob: -15.125211715698242

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.750003814697266
    4. ')' → logprob: -17.375003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '0' → logprob: -19.125003814697266
    7. '
' → logprob: -19.125003814697266
    8. ',' → logprob: -19.625003814697266
    9. '2' → logprob: -19.750003814697266
    10. 'min' → logprob: -20.437503814697266

Token 698: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0385754331946373
    2. '),' → logprob: -4.038575649261475
    3. ',' → logprob: -4.163575649261475
    4. '),(' → logprob: -5.538575649261475
    5. '):' → logprob: -8.413575172424316
    6. '):
' → logprob: -8.913575172424316
    7. ' ,' → logprob: -9.288575172424316
    8. ')
' → logprob: -9.788575172424316
    9. ' )' → logprob: -10.288575172424316
    10. ')[' → logprob: -10.538575172424316

Token 699: ' such' (ID: 2238)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30633243918418884
    2. ' and' → logprob: -2.5563323497772217
    3. ',' → logprob: -2.8063323497772217
    4. ':
' → logprob: -3.3063323497772217
    5. '=' → logprob: -3.5563323497772217
    6. '<|end|>' → logprob: -3.8063323497772217
    7. ' =' → logprob: -4.806332588195801
    8. '           ' → logprob: -5.056332588195801
    9. ')' → logprob: -5.306332588195801
    10. '               ' → logprob: -6.056332588195801

Token 700: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.013400555588304996
    2. ' that' → logprob: -4.513400554656982
    3. 'at' → logprob: -7.638400554656982
    4. 't' → logprob: -7.638400554656982
    5. 'hat' → logprob: -7.638400554656982
    6. '_that' → logprob: -8.13840103149414
    7. '=' → logprob: -8.38840103149414
    8. '           ' → logprob: -9.26340103149414
    9. 'That' → logprob: -9.88840103149414
    10. '               ' → logprob: -9.88840103149414

Token 701: ' L' (ID: 451)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.4030672311782837
    2. '(ai' → logprob: -1.4030672311782837
    3. ' ai' → logprob: -1.6530672311782837
    4. '(-' → logprob: -1.7780672311782837
    5. '-ai' → logprob: -2.903067111968994
    6. ' (' → logprob: -3.153067111968994
    7. '(' → logprob: -4.528067111968994
    8. ' -' → logprob: -4.778067111968994
    9. ' (-' → logprob: -4.778067111968994
    10. '-' → logprob: -4.778067111968994

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017517358355689794
    2. '2' → logprob: -8.750175476074219
    3. '[' → logprob: -11.875175476074219
    4. 's' → logprob: -13.375175476074219
    5. ' ' → logprob: -14.250175476074219
    6. 'i' → logprob: -14.312675476074219
    7. 'ine' → logprob: -14.500175476074219
    8. '(' → logprob: -14.625175476074219
    9. '```' → logprob: -14.687675476074219
    10. '0' → logprob: -14.750175476074219

Token 703: '(t' (ID: 2025)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7796692252159119
    2. 'x' → logprob: -1.4046692848205566
    3. ' x' → logprob: -2.4046692848205566
    4. '<|end|>' → logprob: -2.9046692848205566
    5. '.x' → logprob: -3.1546692848205566
    6. '=' → logprob: -4.279669284820557
    7. '_x' → logprob: -4.404669284820557
    8. ' =' → logprob: -4.779669284820557
    9. 's' → logprob: -4.779669284820557
    10. ' ==' → logprob: -5.029669284820557

Token 704: ')=' (ID: 25987)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03982878103852272
    2. ')' → logprob: -4.414828777313232
    3. '==' → logprob: -4.914828777313232
    4. 'x' → logprob: -4.914828777313232
    5. ')[' → logprob: -5.039828777313232
    6. ')==' → logprob: -5.789828777313232
    7. ' ==' → logprob: -7.039828777313232
    8. '.x' → logprob: -7.414828777313232
    9. '=' → logprob: -8.28982925415039
    10. '0' → logprob: -9.41482925415039

Token 705: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005938636604696512
    2. ' L' → logprob: -5.130938529968262
    3. '(' → logprob: -11.630938529968262
    4. 'origin' → logprob: -14.630938529968262
    5. ' (' → logprob: -15.630938529968262
    6. ' ' → logprob: -15.880938529968262
    7. ' ' → logprob: -16.005939483642578
    8. '	L' → logprob: -16.130939483642578
    9. '(-' → logprob: -17.380939483642578
    10. '<|end|>' → logprob: -17.755939483642578

Token 706: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011728443205356598
    2. '1' → logprob: -6.75117301940918
    3. '(' → logprob: -13.87617301940918
    4. '0' → logprob: -14.87617301940918
    5. 'S' → logprob: -16.00117301940918
    6. '[' → logprob: -16.12617301940918
    7. '(-' → logprob: -16.12617301940918
    8. '   ' → logprob: -16.25117301940918
    9. '(s' → logprob: -16.31367301940918
    10. '(t' → logprob: -16.37617301940918

Token 707: '(s' (ID: 1858)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0991958379745483
    2. ' =' → logprob: -1.4741958379745483
    3. 's' → logprob: -1.7241958379745483
    4. '=' → logprob: -2.349195957183838
    5. ':' → logprob: -2.849195957183838
    6. '(' → logprob: -3.099195957183838
    7. ' (' → logprob: -4.599195957183838
    8. ',' → logprob: -5.099195957183838
    9. ' s' → logprob: -5.099195957183838
    10. ')' → logprob: -5.224195957183838

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24536754190921783
    2. '):' → logprob: -2.3703675270080566
    3. '):
' → logprob: -2.3703675270080566
    4. '[' → logprob: -4.245367527008057
    5. ')
' → logprob: -4.995367527008057
    6. ' and' → logprob: -6.120367527008057
    7. ':' → logprob: -6.120367527008057
    8. '               ' → logprob: -7.245367527008057
    9. '=' → logprob: -7.620367527008057
    10. ':
' → logprob: -7.620367527008057

Token 709: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00584051851183176
    2. '           ' → logprob: -5.755840301513672
    3. '```' → logprob: -6.755840301513672
    4. '                   ' → logprob: -7.380840301513672
    5. ' s' → logprob: -8.755840301513672
    6. ',' → logprob: -9.255840301513672
    7. ' if' → logprob: -9.380840301513672
    8. ' t' → logprob: -9.630840301513672
    9. '                
' → logprob: -9.630840301513672
    10. ' =' → logprob: -10.005840301513672

Token 710: ' denom' (ID: 73604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3856276273727417
    2. '           ' → logprob: -1.8856276273727417
    3. 't' → logprob: -2.2606277465820312
    4. ' t' → logprob: -4.010627746582031
    5. 'den' → logprob: -4.760627746582031
    6. 'dx' → logprob: -4.885627746582031
    7. ' if' → logprob: -5.135627746582031
    8. 'd' → logprob: -5.635627746582031
    9. 'det' → logprob: -5.885627746582031
    10. ' denom' → logprob: -6.135627746582031

Token 711: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282442510128021
    2. '=' → logprob: -2.2378244400024414
    3. ' =
' → logprob: -14.487824440002441
    4. ':' → logprob: -14.862824440002441
    5. '=
' → logprob: -15.112824440002441
    6. '=user' → logprob: -15.987824440002441
    7. ' ' → logprob: -16.362823486328125
    8. ')' → logprob: -16.612823486328125
    9. ' =(' → logprob: -16.612823486328125
    10. '=(' → logprob: -16.862823486328125

Token 712: ' aj' (ID: 7261)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.7672666907310486
    2. '(ai' → logprob: -0.7672666907310486
    3. '(-' → logprob: -3.8922667503356934
    4. 'cross' → logprob: -4.267266750335693
    5. '(' → logprob: -4.392266750335693
    6. 'aj' → logprob: -4.517266750335693
    7. '-ai' → logprob: -4.767266750335693
    8. '-' → logprob: -6.267266750335693
    9. '-(' → logprob: -6.767266750335693
    10. ' ai' → logprob: -7.767266750335693

Token 713: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4987974029500037e-05
    2. '0' → logprob: -11.000024795532227
    3. 'user' → logprob: -12.750024795532227
    4. '1' → logprob: -13.875024795532227
    5. 'x' → logprob: -14.000024795532227
    6. '-' → logprob: -14.750024795532227
    7. '[
' → logprob: -14.875024795532227
    8. '```' → logprob: -14.875024795532227
    9. 'import' → logprob: -15.000024795532227
    10. 'def' → logprob: -15.250024795532227

Token 714: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5240182876586914
    2. '1' → logprob: -0.8990182876586914
    3. '[' → logprob: -7.024018287658691
    4. '-' → logprob: -12.649018287658691
    5. '(' → logprob: -15.586518287658691
    6. '```' → logprob: -15.711518287658691
    7. ' ' → logprob: -16.086517333984375
    8. '
' → logprob: -16.149017333984375
    9. 'x' → logprob: -16.274017333984375
    10. '   ' → logprob: -16.899017333984375

Token 715: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08230002969503403
    2. ' *' → logprob: -2.7072999477386475
    3. '-ai' → logprob: -4.957300186157227
    4. ' -' → logprob: -5.457300186157227
    5. '*(-' → logprob: -7.957300186157227
    6. ' ai' → logprob: -8.207300186157227
    7. '-' → logprob: -8.832300186157227
    8. 'ai' → logprob: -9.707300186157227
    9. '*-' → logprob: -9.832300186157227
    10. '_ai' → logprob: -10.707300186157227

Token 716: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.08854775875806808
    2. '-ai' → logprob: -2.588547706604004
    3. ' ai' → logprob: -4.838547706604004
    4. '(ai' → logprob: -7.088547706604004
    5. '(-' → logprob: -7.838547706604004
    6. ' -' → logprob: -8.213547706604004
    7. '-' → logprob: -9.213547706604004
    8. '.ai' → logprob: -9.963547706604004
    9. '_ai' → logprob: -10.588547706604004
    10. '(' → logprob: -12.213547706604004

Token 717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002481127390637994
    2. '1' → logprob: -6.002480983734131
    3. '-' → logprob: -12.877481460571289
    4. 'y' → logprob: -13.002481460571289
    5. ' -' → logprob: -15.252481460571289
    6. '0' → logprob: -16.00248146057129
    7. '```' → logprob: -16.00248146057129
    8. 's' → logprob: -17.37748146057129
    9. '.y' → logprob: -17.50248146057129
    10. '.' → logprob: -17.62748146057129

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013336940901353955
    2. '[' → logprob: -6.626333713531494
    3. '-' → logprob: -12.751333236694336
    4. '0' → logprob: -13.001333236694336
    5. '```' → logprob: -14.001333236694336
    6. 'y' → logprob: -14.876333236694336
    7. '
' → logprob: -15.126333236694336
    8. '(' → logprob: -15.126333236694336
    9. ''s' → logprob: -16.376333236694336
    10. ']' → logprob: -16.626333236694336

Token 719: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269410252571106
    2. '-' → logprob: -2.126940965652466
    3. '-ai' → logprob: -11.626940727233887
    4. '-aj' → logprob: -13.251940727233887
    5. '-
' → logprob: -14.001940727233887
    6. '   ' → logprob: -15.001940727233887
    7. ' -
' → logprob: -15.751940727233887
    8. '-A' → logprob: -15.876940727233887
    9. ' ' → logprob: -16.251941680908203
    10. '```' → logprob: -16.376941680908203

Token 720: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193890929222107
    2. '-' → logprob: -1.5019389390945435
    3. '-
' → logprob: -12.126938819885254
    4. '-ai' → logprob: -13.751938819885254
    5. ' -
' → logprob: -14.126938819885254
    6. '-user' → logprob: -14.751938819885254
    7. ' ' → logprob: -15.126938819885254
    8. '-aj' → logprob: -15.501938819885254
    9. '    ' → logprob: -15.876938819885254
    10. '```' → logprob: -15.876938819885254

Token 721: ' aj' (ID: 7261)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.002581128152087331
    2. 'aj' → logprob: -6.0025811195373535
    3. ' ai' → logprob: -10.002581596374512
    4. '(ai' → logprob: -11.002581596374512
    5. '_ai' → logprob: -11.127581596374512
    6. '-ai' → logprob: -11.377581596374512
    7. 'aji' → logprob: -12.127581596374512
    8. '   ' → logprob: -12.127581596374512
    9. '.ai' → logprob: -12.377581596374512
    10. ' aj' → logprob: -15.377581596374512

Token 722: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011033779446734115
    2. '1' → logprob: -9.125110626220703
    3. '```' → logprob: -14.750110626220703
    4. '0' → logprob: -15.125110626220703
    5. ':' → logprob: -16.000110626220703
    6. '[
' → logprob: -16.125110626220703
    7. 'Answer' → logprob: -16.625110626220703
    8. '...' → logprob: -17.000110626220703
    9. '-' → logprob: -17.125110626220703
    10. '.' → logprob: -17.250110626220703

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. '0' → logprob: -15.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. '...' → logprob: -17.750001907348633
    7. '-' → logprob: -17.875001907348633
    8. '(' → logprob: -17.875001907348633
    9. ']' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -18.812501907348633

Token 724: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00010616567305987701
    2. ' *' → logprob: -9.500105857849121
    3. '<|end|>' → logprob: -11.750105857849121
    4. '.ai' → logprob: -12.000105857849121
    5. ']*' → logprob: -12.250105857849121
    6. '[' → logprob: -12.375105857849121
    7. 'ai' → logprob: -12.750105857849121
    8. '_ai' → logprob: -13.375105857849121
    9. '**' → logprob: -14.375105857849121
    10. '```' → logprob: -14.500105857849121

Token 725: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.00015347852604463696
    2. ' ai' → logprob: -8.875153541564941
    3. '-ai' → logprob: -11.750153541564941
    4. '_ai' → logprob: -12.625153541564941
    5. '(ai' → logprob: -13.500153541564941
    6. '.ai' → logprob: -14.000153541564941
    7. '0' → logprob: -16.125152587890625
    8. '-' → logprob: -17.000152587890625
    9. ' ' → logprob: -17.500152587890625
    10. 'a' → logprob: -17.875152587890625

Token 726: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16022545099258423
    2. '0' → logprob: -1.9102253913879395
    3. '#' → logprob: -15.535225868225098
    4. 'import' → logprob: -15.535225868225098
    5. 'x' → logprob: -15.785225868225098
    6. '```' → logprob: -15.785225868225098
    7. '=' → logprob: -16.41022491455078
    8. '<|end|>' → logprob: -16.53522491455078
    9. '.' → logprob: -16.91022491455078
    10. '[
' → logprob: -17.03522491455078

Token 727: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. '۰' → logprob: -20.625
    4. 'x' → logprob: -21.0
    5. '```' → logprob: -21.5
    6. '
' → logprob: -22.0
    7. '   ' → logprob: -22.5
    8. '{' → logprob: -22.75
    9. '０' → logprob: -22.875
    10. '#' → logprob: -22.875

Token 728: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5584497451782227
    2. '<|end|>' → logprob: -1.0584497451782227
    3. ']' → logprob: -3.8084497451782227
    4. ')
' → logprob: -3.9334497451782227
    5. '<|end|>' → logprob: -3.9334497451782227
    6. '
' → logprob: -5.183449745178223
    7. ' )' → logprob: -6.308449745178223
    8. '```' → logprob: -6.683449745178223
    9. '                   ' → logprob: -6.933449745178223
    10. '           ' → logprob: -7.433449745178223

Token 729: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8288708925247192
    2. '               ' → logprob: -1.3288708925247192
    3. '```' → logprob: -1.4538708925247192
    4. '       ' → logprob: -3.2038707733154297
    5. '                   ' → logprob: -5.07887077331543
    6. '   ' → logprob: -5.32887077331543
    7. '=' → logprob: -5.70387077331543
    8. ' =' → logprob: -5.95387077331543
    9. ' if' → logprob: -6.45387077331543
    10. ',' → logprob: -6.82887077331543

Token 730: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7537232637405396
    2. '           ' → logprob: -1.8787232637405396
    3. ' if' → logprob: -2.00372314453125
    4. '=' → logprob: -2.25372314453125
    5. '0' → logprob: -3.25372314453125
    6. '                   ' → logprob: -3.37872314453125
    7. ' =' → logprob: -3.62872314453125
    8. 'if' (adapté à ' if') → logprob: -4.75372314453125
    9. '                ' → logprob: -5.00372314453125
    10. '   ' → logprob: -5.50372314453125

Token 731: ' abs' (ID: 8443)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.017264550551772118
    2. ' denom' → logprob: -4.142264366149902
    3. 'abs' → logprob: -7.517264366149902
    4. '0' → logprob: -8.017264366149902
    5. ' abs' → logprob: -8.642264366149902
    6. ' ' → logprob: -10.017264366149902
    7. ' denominator' → logprob: -10.392264366149902
    8. '(' → logprob: -10.767264366149902
    9. '   ' → logprob: -10.767264366149902
    10. ' den' → logprob: -10.892264366149902

Token 732: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. 'den' → logprob: -13.125001907348633
    3. '(
' → logprob: -15.125001907348633
    4. '((' → logprob: -18.750001907348633
    5. 'Den' → logprob: -19.250001907348633
    6. '-den' → logprob: -19.625001907348633
    7. ' denom' → logprob: -20.250001907348633
    8. '(d' → logprob: -20.500001907348633
    9. ' (' → logprob: -21.000001907348633
    10. 'cross' → logprob: -21.250001907348633

Token 733: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. ' denom' → logprob: -16.875
    4. 'cross' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. 'deny' → logprob: -18.5
    7. 'd' → logprob: -19.625
    8. ')' → logprob: -19.625
    9. '   ' → logprob: -20.25
    10. 'Den' → logprob: -20.375

Token 734: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.00011224505578866228
    2. 'o' → logprob: -10.000112533569336
    3. '[' → logprob: -10.625112533569336
    4. '(' → logprob: -11.000112533569336
    5. '0' → logprob: -11.875112533569336
    6. 'um' → logprob: -12.750112533569336
    7. '>' → logprob: -13.000112533569336
    8. '=' → logprob: -13.500112533569336
    9. 'or' → logprob: -13.625112533569336
    10. ')' → logprob: -13.625112533569336

Token 735: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010008938843384385
    2. ')>' → logprob: -7.126000881195068
    3. ' >' → logprob: -9.501001358032227
    4. '>' → logprob: -9.501001358032227
    5. '[' → logprob: -10.376001358032227
    6. ' )' → logprob: -11.751001358032227
    7. ')>=' → logprob: -13.126001358032227
    8. '<|end|>' → logprob: -13.876001358032227
    9. ')<' → logprob: -14.001001358032227
    10. '=' → logprob: -14.501001358032227

Token 736: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2543788552284241
    2. '>' → logprob: -1.5043787956237793
    3. ')' → logprob: -6.754378795623779
    4. '[' → logprob: -7.129378795623779
    5. ' <' → logprob: -8.629379272460938
    6. ')>' → logprob: -9.129379272460938
    7. '```' → logprob: -9.754379272460938
    8. ' >=' → logprob: -10.504379272460938
    9. '<' → logprob: -10.504379272460938
    10. '   ' → logprob: -11.004379272460938

Token 737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -15.375000953674316
    4. '   ' → logprob: -18.625001907348633
    5. '(' → logprob: -20.625001907348633
    6. '>' → logprob: -21.000001907348633
    7. '```' → logprob: -21.000001907348633
    8. '[' → logprob: -22.375001907348633
    9. '=' → logprob: -22.375001907348633
    10. '
' → logprob: -22.625001907348633

Token 738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.500005722045898
    3. '0' → logprob: -13.250005722045898
    4. '>' → logprob: -18.0000057220459
    5. '```' → logprob: -18.0000057220459
    6. '(' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.7500057220459
    8. '
' → logprob: -19.1250057220459
    9. '=' → logprob: -20.1250057220459
    10. '[' → logprob: -20.1250057220459

Token 739: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.612634362885728e-05
    2. 'e' → logprob: -9.500076293945312
    3. '1' → logprob: -14.500076293945312
    4. '12' → logprob: -14.500076293945312
    5. '14' → logprob: -16.625076293945312
    6. '```' → logprob: -16.875076293945312
    7. '-e' → logprob: -18.375076293945312
    8. '[-' → logprob: -18.750076293945312
    9. '   ' → logprob: -19.000076293945312
    10. '**' → logprob: -19.000076293945312

Token 740: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. 'e' → logprob: -19.375
    4. '{-' → logprob: -19.5
    5. '^-' → logprob: -19.875
    6. '12' → logprob: -20.125
    7. '14' → logprob: -20.25
    8. '-
' → logprob: -20.75
    9. '**' → logprob: -21.0
    10. '``' → logprob: -21.125

Token 741: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.001409401185810566
    2. '15' → logprob: -6.751409530639648
    3. '12' → logprob: -8.751409530639648
    4. '16' → logprob: -9.501409530639648
    5. '20' → logprob: -12.626409530639648
    6. '18' → logprob: -13.501409530639648
    7. '30' → logprob: -14.376409530639648
    8. '13' → logprob: -15.126409530639648
    9. '10' → logprob: -15.251409530639648
    10. '24' → logprob: -15.751409530639648

Token 742: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02213558740913868
    2. ':
' → logprob: -3.8971354961395264
    3. ':return' → logprob: -7.3971357345581055
    4. '               ' → logprob: -8.272135734558105
    5. '==' → logprob: -8.647135734558105
    6. '           ' → logprob: -8.897135734558105
    7. '                   ' → logprob: -9.647135734558105
    8. '=' → logprob: -9.647135734558105
    9. ',' → logprob: -9.772135734558105
    10. ' and' → logprob: -10.272135734558105

Token 743: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6300414204597473
    2. ':' → logprob: -1.5050413608551025
    3. '                   ' → logprob: -2.3800413608551025
    4. ' continue' → logprob: -3.0050413608551025
    5. '                               ' → logprob: -4.005041599273682
    6. '                       ' → logprob: -4.380041599273682
    7. 'continue' → logprob: -4.380041599273682
    8. '           ' → logprob: -4.505041599273682
    9. '                           ' → logprob: -4.880041599273682
    10. '<|end|>' → logprob: -5.005041599273682

Token 744: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8031811714172363
    2. '               ' → logprob: -1.3031811714172363
    3. ' continue' → logprob: -1.8031811714172363
    4. 'continue' (adapté à ' continue') → logprob: -2.8031811714172363
    5. '                       ' → logprob: -3.5531811714172363
    6. '           ' → logprob: -4.428181171417236
    7. '                               ' → logprob: -5.803181171417236
    8. ')' → logprob: -5.928181171417236
    9. '       ' → logprob: -6.053181171417236
    10. '                           ' → logprob: -6.303181171417236

Token 745: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.062526173889637
    2. '                   ' → logprob: -3.312526226043701
    3. '           ' → logprob: -4.812526226043701
    4. '       ' → logprob: -5.687526226043701
    5. '			' → logprob: -5.937526226043701
    6. '                       ' → logprob: -5.937526226043701
    7. ':' → logprob: -5.937526226043701
    8. '		' → logprob: -7.312526226043701
    9. '				' → logprob: -7.437526226043701
    10. '```' → logprob: -7.437526226043701

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0716850683093071
    2. '			' → logprob: -2.9466850757598877
    3. '		' → logprob: -5.571684837341309
    4. '           ' → logprob: -5.696684837341309
    5. '		       ' → logprob: -6.071684837341309
    6. '	           ' → logprob: -6.196684837341309
    7. '                   ' → logprob: -7.071684837341309
    8. '       ' → logprob: -7.196684837341309
    9. '				' → logprob: -7.446684837341309
    10. '	               ' → logprob: -7.446684837341309

Token 747: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.1342499554157257
    2. '               ' → logprob: -2.6342499256134033
    3. 's' → logprob: -3.0092499256134033
    4. ' t' → logprob: -5.634250164031982
    5. ' s' → logprob: -7.884250164031982
    6. '           ' → logprob: -8.384249687194824
    7. '```' → logprob: -9.134249687194824
    8. '                   ' → logprob: -9.634249687194824
    9. '       ' → logprob: -10.134249687194824
    10. 'den' → logprob: -10.384249687194824

Token 748: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759465098381042
    2. '=' → logprob: -0.8259465098381042
    3. 's' → logprob: -12.450946807861328
    4. ',' → logprob: -13.700946807861328
    5. ' =(' → logprob: -14.825946807861328
    6. '=int' → logprob: -14.950946807861328
    7. '＝' → logprob: -15.950946807861328
    8. '=(' → logprob: -15.950946807861328
    9. '=}' → logprob: -15.950946807861328
    10. ' ' → logprob: -16.075946807861328

Token 749: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01597830094397068
    2. 'aj' → logprob: -4.3909783363342285
    3. '(-' → logprob: -6.8909783363342285
    4. ' (' → logprob: -7.1409783363342285
    5. '-aj' → logprob: -7.5159783363342285
    6. '-(' → logprob: -8.64097785949707
    7. '(float' → logprob: -8.76597785949707
    8. 'float' → logprob: -8.76597785949707
    9. '(ai' → logprob: -9.01597785949707
    10. '((' → logprob: -9.14097785949707

Token 750: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.3602077066898346
    2. '(' → logprob: -1.3602076768875122
    3. '-aj' → logprob: -3.6102077960968018
    4. '-(' → logprob: -4.985207557678223
    5. '-' → logprob: -5.235207557678223
    6. '(-' → logprob: -5.360207557678223
    7. ' (' → logprob: -7.485207557678223
    8. 'ai' → logprob: -7.985207557678223
    9. '(ai' → logprob: -8.360207557678223
    10. ' aj' → logprob: -8.485207557678223

Token 751: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022368213103618473
    2. '1' → logprob: -8.750224113464355
    3. '0' → logprob: -9.750224113464355
    4. '<|end|>' → logprob: -13.250224113464355
    5. 'user' → logprob: -13.750224113464355
    6. 'import' → logprob: -14.625224113464355
    7. '<|end|>' → logprob: -14.875224113464355
    8. ')' → logprob: -14.875224113464355
    9. ':' → logprob: -15.000224113464355
    10. '.' → logprob: -15.125224113464355

Token 752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001647326396778226
    2. '1' → logprob: -6.501647472381592
    3. '[' → logprob: -8.876646995544434
    4. '-' → logprob: -13.251646995544434
    5. '```' → logprob: -13.376646995544434
    6. '(' → logprob: -14.939146995544434
    7. ' ' → logprob: -15.126646995544434
    8. '...' → logprob: -16.00164794921875
    9. '{' → logprob: -16.37664794921875
    10. '
' → logprob: -16.43914794921875

Token 753: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.874882430769503e-05
    2. ' *' → logprob: -10.750079154968262
    3. ')*' → logprob: -10.875079154968262
    4. '*(-' → logprob: -10.875079154968262
    5. '*-' → logprob: -11.250079154968262
    6. '*(' → logprob: -13.250079154968262
    7. ')' → logprob: -14.375079154968262
    8. ']*' → logprob: -14.625079154968262
    9. '-ai' → logprob: -14.625079154968262
    10. '**' → logprob: -14.750079154968262

Token 754: '0' (ID: 15)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.2516803443431854
    2. '0' → logprob: -2.376680374145508
    3. '(-' → logprob: -2.751680374145508
    4. '-ai' → logprob: -3.626680374145508
    5. '(' → logprob: -4.251680374145508
    6. 'aj' → logprob: -4.376680374145508
    7. '(ai' → logprob: -4.751680374145508
    8. '-' → logprob: -6.126680374145508
    9. '-aj' → logprob: -6.876680374145508
    10. ' ai' → logprob: -9.751680374145508

Token 755: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010636856779456139
    2. '-' → logprob: -4.635636806488037
    3. '*' → logprob: -7.260636806488037
    4. '-ai' → logprob: -9.260637283325195
    5. ')' → logprob: -10.010637283325195
    6. '-aj' → logprob: -11.135637283325195
    7. '[' → logprob: -11.635637283325195
    8. ' ' → logprob: -12.885637283325195
    9. ' *' → logprob: -13.010637283325195
    10. ' +' → logprob: -13.510637283325195

Token 756: ' aj' (ID: 7261)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.008013994432985783
    2. '0' → logprob: -5.00801420211792
    3. '(' → logprob: -7.25801420211792
    4. '-aj' → logprob: -8.258013725280762
    5. ' aj' → logprob: -8.258013725280762
    6. '(-' → logprob: -10.758013725280762
    7. 'adj' → logprob: -11.258013725280762
    8. ' (' → logprob: -12.383013725280762
    9. '   ' → logprob: -12.508013725280762
    10. ' ' → logprob: -12.633013725280762

Token 757: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '1' → logprob: -13.750005722045898
    3. '0' → logprob: -13.875005722045898
    4. 'user' → logprob: -13.875005722045898
    5. '<|end|>' → logprob: -14.250005722045898
    6. '```' → logprob: -15.250005722045898
    7. 'User' → logprob: -15.500005722045898
    8. '[user' → logprob: -16.0000057220459
    9. 'python' → logprob: -16.0000057220459
    10. 'Sorry' → logprob: -16.0000057220459

Token 758: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019102399528492242
    2. '0' → logprob: -8.625190734863281
    3. '[' → logprob: -11.500190734863281
    4. '```' → logprob: -15.562690734863281
    5. 'user' → logprob: -15.625190734863281
    6. '-' → logprob: -15.687690734863281
    7. '(' → logprob: -16.43769073486328
    8. ' ' → logprob: -16.68769073486328
    9. 'y' → logprob: -16.93769073486328
    10. ''s' → logprob: -17.00019073486328

Token 759: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0020834049209952354
    2. '*(-' → logprob: -7.2520833015441895
    3. ')*' → logprob: -7.5020833015441895
    4. ')' → logprob: -8.377083778381348
    5. ' *' → logprob: -8.752083778381348
    6. '*-' → logprob: -8.877083778381348
    7. '[' → logprob: -9.502083778381348
    8. '0' → logprob: -9.627083778381348
    9. ']*' → logprob: -11.127083778381348
    10. '*t' → logprob: -11.127083778381348

Token 760: 'aj' (ID: 1255)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3254072964191437
    2. 'ai' → logprob: -1.3254072666168213
    3. '(' → logprob: -5.4504075050354
    4. '-ai' → logprob: -5.4504075050354
    5. '(-' → logprob: -6.7004075050354
    6. '(ai' → logprob: -6.9504075050354
    7. 'aj' → logprob: -7.8254075050354
    8. ' ai' → logprob: -8.200407028198242
    9. '-' → logprob: -8.325407028198242
    10. '_ai' → logprob: -9.450407028198242

Token 761: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012591355480253696
    2. '1' → logprob: -4.387591361999512
    3. '0' → logprob: -9.637591361999512
    4. '-' → logprob: -11.762591361999512
    5. '```' → logprob: -12.012591361999512
    6. '
' → logprob: -14.262591361999512
    7. '[
' → logprob: -14.637591361999512
    8. ']' → logprob: -15.637591361999512
    9. '.' → logprob: -16.012590408325195
    10. '_points' → logprob: -16.262590408325195

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008470730856060982
    2. '[' → logprob: -5.25847053527832
    3. '0' → logprob: -5.75847053527832
    4. ']' → logprob: -10.63347053527832
    5. ')' → logprob: -11.25847053527832
    6. '])' → logprob: -11.75847053527832
    7. '(' → logprob: -12.19597053527832
    8. 'y' → logprob: -12.32097053527832
    9. '<|end|>' → logprob: -13.00847053527832
    10. ')]' → logprob: -13.32097053527832

Token 763: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24901343882083893
    2. ')/(' → logprob: -2.3740134239196777
    3. ')/' → logprob: -2.8740134239196777
    4. ' -' → logprob: -3.2490134239196777
    5. ' +' → logprob: -3.7490134239196777
    6. ' )' → logprob: -5.249013423919678
    7. '[' → logprob: -6.499013423919678
    8. '+' → logprob: -7.374013423919678
    9. '0' → logprob: -8.374013900756836
    10. ' ' → logprob: -8.624013900756836

Token 764: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8195068836212158
    2. ' /' → logprob: -1.3195068836212158
    3. '/' → logprob: -2.069506883621216
    4. ' *' → logprob: -2.319506883621216
    5. '*(' → logprob: -4.444506645202637
    6. ')/(' → logprob: -4.569506645202637
    7. '/(' → logprob: -4.569506645202637
    8. ')' → logprob: -4.569506645202637
    9. ' -' → logprob: -5.069506645202637
    10. '*(-' → logprob: -5.569506645202637

Token 765: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.43108096718788147
    2. '(' → logprob: -1.056080937385559
    3. ' (' → logprob: -6.9310808181762695
    4. '(ai' → logprob: -7.4310808181762695
    5. ' denom' → logprob: -7.9310808181762695
    6. '(-' → logprob: -7.9310808181762695
    7. '((' → logprob: -10.30608081817627
    8. '-den' → logprob: -11.05608081817627
    9. ' (-' → logprob: -12.43108081817627
    10. '((-' → logprob: -12.55608081817627

Token 766: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.26435011625289917
    2. '(' → logprob: -1.889350175857544
    3. 'ai' → logprob: -3.264350175857544
    4. 'aj' → logprob: -3.889350175857544
    5. '(ai' → logprob: -4.014349937438965
    6. '0' → logprob: -6.639349937438965
    7. ' (' → logprob: -7.514349937438965
    8. ' denom' → logprob: -7.764349937438965
    9. '(-' → logprob: -8.014349937438965
    10. 'False' → logprob: -8.389349937438965

Token 768: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029339978471398354
    2. ' !=' → logprob: -3.7793400287628174
    3. '<|end|>' → logprob: -5.654339790344238
    4. '==' → logprob: -6.654339790344238
    5. '!==' → logprob: -8.029339790344238
    6. ')!=' → logprob: -8.279339790344238
    7. '=' → logprob: -8.404339790344238
    8. '<|end|>' → logprob: -8.654339790344238
    9. ':' → logprob: -9.529339790344238
    10. '!=(' → logprob: -10.279339790344238

Token 769: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. 'den' → logprob: -14.875011444091797
    4. '=' → logprob: -15.000011444091797
    5. '```' → logprob: -16.625011444091797
    6. '(' → logprob: -17.687511444091797
    7. '!=' → logprob: -18.000011444091797
    8. '!' → logprob: -18.687511444091797
    9. '   ' → logprob: -18.875011444091797
    10. 'zero' → logprob: -18.937511444091797

Token 770: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002340089064091444
    2. 'den' → logprob: -6.127340316772461
    3. ' ' → logprob: -9.252340316772461
    4. '```' → logprob: -11.252340316772461
    5. '=' → logprob: -11.377340316772461
    6. '(' → logprob: -11.627340316772461
    7. '1' → logprob: -12.252340316772461
    8. '!' → logprob: -13.002340316772461
    9. ' denom' → logprob: -13.002340316772461
    10. '!=' → logprob: -13.439840316772461

Token 771: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46224310994148254
    2. '0' → logprob: -1.3372430801391602
    3. ' (' → logprob: -2.58724308013916
    4. 'None' → logprob: -3.71224308013916
    5. ' None' → logprob: -5.58724308013916
    6. '(None' → logprob: -6.33724308013916
    7. ' ' → logprob: -7.21224308013916
    8. '(ai' → logprob: -7.58724308013916
    9. '((' → logprob: -8.71224308013916
    10. '(float' → logprob: -8.83724308013916

Token 773: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20268499851226807
    2. 'None' → logprob: -1.702684998512268
    3. '(' → logprob: -7.3276848793029785
    4. ' None' → logprob: -7.9526848793029785
    5. '(None' → logprob: -8.452685356140137
    6. ' ' → logprob: -10.702685356140137
    7. 'float' → logprob: -11.827685356140137
    8. '-' → logprob: -12.827685356140137
    9. ' (' → logprob: -12.952685356140137
    10. 'False' → logprob: -13.202685356140137

Token 774: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 775: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40833231806755066
    2. '```' → logprob: -2.408332347869873
    3. 't' → logprob: -2.783332347869873
    4. ' t' → logprob: -3.158332347869873
    5. ' (' → logprob: -3.158332347869873
    6. '<|end|>' → logprob: -4.408332347869873
    7. '0' → logprob: -4.658332347869873
    8. '-' → logprob: -4.658332347869873
    9. '(' → logprob: -4.908332347869873
    10. '=' → logprob: -4.908332347869873

Token 776: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12782585620880127
    2. 't' → logprob: -2.8778257369995117
    3. '            ' → logprob: -4.377825736999512
    4. '               ' → logprob: -4.502825736999512
    5. '                   ' → logprob: -4.877825736999512
    6. '(' → logprob: -4.877825736999512
    7. ')' → logprob: -5.002825736999512
    8. ' t' → logprob: -5.252825736999512
    9. ' (' → logprob: -5.752825736999512
    10. '       ' → logprob: -6.127825736999512

Token 777: ' Alternative' (ID: 52728)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5065708756446838
    2. '           ' → logprob: -1.381570816040039
    3. '(' → logprob: -3.131570816040039
    4. '((' → logprob: -3.381570816040039
    5. '               ' → logprob: -3.506570816040039
    6. '(t' → logprob: -4.756570816040039
    7. '                   ' → logprob: -5.131570816040039
    8. '(s' → logprob: -5.506570816040039
    9. '(-' → logprob: -5.506570816040039
    10. ' (' → logprob: -6.006570816040039

Token 778: ':' (ID: 25)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07525955885648727
    2. 's' → logprob: -3.4502594470977783
    3. '(-' → logprob: -4.450259685516357
    4. '                   ' → logprob: -5.075259685516357
    5. ' t' → logprob: -5.200259685516357
    6. '           ' → logprob: -5.575259685516357
    7. 'x' → logprob: -6.575259685516357
    8. '               ' → logprob: -6.575259685516357
    9. '-' → logprob: -6.575259685516357
    10. '(s' → logprob: -6.950259685516357

Token 779: ' Check' (ID: 6208)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18522389233112335
    2. '(' → logprob: -2.9352238178253174
    3. ' t' → logprob: -3.6852238178253174
    4. 's' → logprob: -4.0602240562438965
    5. ' (' → logprob: -4.0602240562438965
    6. '(ai' → logprob: -4.4352240562438965
    7. '(t' → logprob: -4.5602240562438965
    8. '(-' → logprob: -4.8102240562438965
    9. '((' → logprob: -5.0602240562438965
    10. '```' → logprob: -5.3102240562438965

Token 780: ' intersection' (ID: 42002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5215335488319397
    2. '((' → logprob: -1.396533489227295
    3. '(ai' → logprob: -2.396533489227295
    4. ' (' → logprob: -3.271533489227295
    5. 't' → logprob: -4.646533489227295
    6. '(t' → logprob: -4.646533489227295
    7. ' ((' → logprob: -5.646533489227295
    8. '(j' → logprob: -6.396533489227295
    9. '(-' → logprob: -6.771533489227295
    10. '(ax' → logprob: -7.021533489227295

Token 781: ' of' (ID: 328)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9736065864562988
    2. '=' → logprob: -1.5986065864562988
    3. ' =' → logprob: -2.223606586456299
    4. 's' → logprob: -2.473606586456299
    5. '           ' → logprob: -2.973606586456299
    6. '(' → logprob: -3.348606586456299
    7. ' t' → logprob: -3.598606586456299
    8. '                   ' → logprob: -3.723606586456299
    9. ' (' → logprob: -3.723606586456299
    10. '               ' → logprob: -3.848606586456299

Token 782: ' two' (ID: 1920)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.5211606621742249
    2. 'segments' → logprob: -2.02116060256958
    3. 'lines' → logprob: -2.39616060256958
    4. '(-' → logprob: -3.02116060256958
    5. '(ai' → logprob: -3.14616060256958
    6. 'vectors' → logprob: -4.02116060256958
    7. 'aj' → logprob: -4.64616060256958
    8. '(' → logprob: -4.64616060256958
    9. ' lines' → logprob: -4.77116060256958
    10. 't' → logprob: -5.14616060256958

Token 783: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4294011890888214
    2. 'lines' → logprob: -1.554401159286499
    3. ' segments' → logprob: -3.679401159286499
    4. 'ai' → logprob: -3.804401159286499
    5. '-lines' → logprob: -4.554401397705078
    6. 'segment' → logprob: -4.679401397705078
    7. ' lines' → logprob: -4.679401397705078
    8. '(' → logprob: -4.804401397705078
    9. 'points' → logprob: -4.929401397705078
    10. '(-' → logprob: -5.179401397705078

Token 784: ' from' (ID: 591)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2696019411087036
    2. 't' → logprob: -1.6446019411087036
    3. '           ' → logprob: -1.7696019411087036
    4. ' t' → logprob: -2.394601821899414
    5. '                   ' → logprob: -3.144601821899414
    6. '               ' → logprob: -3.644601821899414
    7. ' x' → logprob: -3.769601821899414
    8. ')' → logprob: -3.894601821899414
    9. ' =' → logprob: -4.144601821899414
    10. 's' → logprob: -4.144601821899414

Token 785: ' two' (ID: 1920)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.1466026306152344
    2. 'anchor' → logprob: -1.1466026306152344
    3. 'origin' → logprob: -1.2716026306152344
    4. ' ai' → logprob: -4.021602630615234
    5. '(' → logprob: -4.521602630615234
    6. '-ai' → logprob: -4.646602630615234
    7. '(-' → logprob: -4.896602630615234
    8. '(ai' → logprob: -5.021602630615234
    9. 'anchors' → logprob: -5.021602630615234
    10. ' origin' → logprob: -5.146602630615234

Token 786: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.424139142036438
    2. 'anchors' → logprob: -2.0491390228271484
    3. 'vectors' → logprob: -3.0491390228271484
    4. 'point' → logprob: -3.2991390228271484
    5. 'anchor' → logprob: -3.4241390228271484
    6. 'lines' → logprob: -3.5491390228271484
    7. ' points' → logprob: -3.9241390228271484
    8. 'segments' → logprob: -4.299139022827148
    9. 'ai' → logprob: -5.299139022827148
    10. '0' → logprob: -5.674139022827148

Token 787: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1385828256607056
    2. 't' → logprob: -1.8885828256607056
    3. ' =' → logprob: -2.388582706451416
    4. '(' → logprob: -2.763582706451416
    5. '=' → logprob: -3.138582706451416
    6. ' (' → logprob: -3.138582706451416
    7. 'x' → logprob: -3.263582706451416
    8. '                   ' → logprob: -3.513582706451416
    9. ' t' → logprob: -3.513582706451416
    10. 'i' → logprob: -3.638582706451416

Token 788: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.045914601534605026
    2. ' origin' → logprob: -3.295914649963379
    3. 'anchor' → logprob: -6.045914649963379
    4. '(' → logprob: -6.420914649963379
    5. '0' → logprob: -6.420914649963379
    6. '(origin' → logprob: -7.545914649963379
    7. 'the' → logprob: -7.795914649963379
    8. 'ai' → logprob: -8.670914649963379
    9. 'anchors' → logprob: -8.920914649963379
    10. 'orig' → logprob: -9.170914649963379

Token 789: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21402524411678314
    2. ' t' → logprob: -2.8390252590179443
    3. '               ' → logprob: -2.9640252590179443
    4. ' s' → logprob: -2.9640252590179443
    5. 't' → logprob: -4.589025020599365
    6. '                   ' → logprob: -4.839025020599365
    7. 's' → logprob: -4.964025020599365
    8. ' =' → logprob: -6.714025020599365
    9. '       ' → logprob: -7.589025020599365
    10. '   ' → logprob: -7.589025020599365

Token 790: ' handled' (ID: 29594)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.546364426612854
    2. '(' → logprob: -1.671364426612854
    3. 'not' → logprob: -1.796364426612854
    4. 'None' → logprob: -2.2963643074035645
    5. '0' → logprob: -2.4213643074035645
    6. '(ai' → logprob: -2.9213643074035645
    7. 'ai' → logprob: -3.6713643074035645
    8. 'aj' → logprob: -3.9213643074035645
    9. ' (' → logprob: -4.2963643074035645
    10. '((' → logprob: -4.7963643074035645

Token 791: ' by' (ID: 656)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7232020497322083
    2. '           ' → logprob: -2.3482019901275635
    3. '                   ' → logprob: -2.5982019901275635
    4. '0' → logprob: -3.0982019901275635
    5. '               ' → logprob: -3.0982019901275635
    6. '```' → logprob: -3.0982019901275635
    7. '(' → logprob: -3.3482019901275635
    8. '=' → logprob: -3.4732019901275635
    9. ' t' → logprob: -3.8482019901275635
    10. '-' → logprob: -4.098202228546143

Token 792: ' cross' (ID: 8088)
  Prédit: '(ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.7011223435401917
    2. '(' → logprob: -1.4511222839355469
    3. '0' → logprob: -2.701122283935547
    4. 'den' → logprob: -2.826122283935547
    5. '((' → logprob: -3.576122283935547
    6. 'ai' → logprob: -3.701122283935547
    7. ' (' → logprob: -4.326122283935547
    8. 'aj' → logprob: -4.576122283935547
    9. '(-' → logprob: -4.701122283935547
    10. '(
' → logprob: -4.826122283935547

Token 793: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7732590436935425
    2. '<|end|>' → logprob: -1.8982590436935425
    3. ')' → logprob: -3.023259162902832
    4. '(' → logprob: -3.023259162902832
    5. 'product' → logprob: -3.023259162902832
    6. 't' → logprob: -3.398259162902832
    7. '           ' → logprob: -3.523259162902832
    8. '[' → logprob: -4.023259162902832
    9. '=' → logprob: -4.023259162902832
    10. '-' → logprob: -4.398259162902832

Token 794: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3889219760894775
    2. 't' → logprob: -1.7639219760894775
    3. ' t' → logprob: -2.2639219760894775
    4. '```' → logprob: -2.7639219760894775
    5. '0' → logprob: -2.8889219760894775
    6. ')' → logprob: -2.8889219760894775
    7. '            ' → logprob: -3.2639219760894775
    8. '<|end|>' → logprob: -3.5139219760894775
    9. 's' → logprob: -3.7639219760894775
    10. '                   ' → logprob: -3.7639219760894775

Token 796: ' Here' (ID: 7306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1648963689804077
    2. 't' → logprob: -1.4148963689804077
    3. ' t' → logprob: -2.5398964881896973
    4. '```' → logprob: -2.7898964881896973
    5. '0' → logprob: -3.2898964881896973
    6. '                   ' → logprob: -3.5398964881896973
    7. 'i' → logprob: -3.5398964881896973
    8. ')' → logprob: -3.5398964881896973
    9. '=' → logprob: -3.9148964881896973
    10. 'j' → logprob: -3.9148964881896973

Token 797: ' simpler' (ID: 48697)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7669155597686768
    2. 't' → logprob: -1.3919155597686768
    3. '           ' → logprob: -2.6419155597686768
    4. ' t' → logprob: -2.8919155597686768
    5. ' continue' → logprob: -3.1419155597686768
    6. 'continue' → logprob: -3.5169155597686768
    7. 'x' → logprob: -3.8919155597686768
    8. 's' → logprob: -4.516915321350098
    9. 'den' → logprob: -4.641915321350098
    10. 'dx' → logprob: -4.641915321350098

Token 798: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23536425828933716
    2. '               ' → logprob: -2.1103641986846924
    3. 't' → logprob: -4.1103644371032715
    4. 'continue' → logprob: -4.1103644371032715
    5. ' continue' → logprob: -4.3603644371032715
    6. ' t' → logprob: -4.4853644371032715
    7. '                   ' → logprob: -5.2353644371032715
    8. ' s' → logprob: -5.4853644371032715
    9. '       ' → logprob: -5.8603644371032715
    10. 's' → logprob: -6.1103644371032715

Token 799: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4089202284812927
    2. 'check' → logprob: -1.9089202880859375
    3. 'calculate' → logprob: -2.7839202880859375
    4. 'compute' → logprob: -2.9089202880859375
    5. 'use' → logprob: -4.0339202880859375
    6. 't' → logprob: -4.0339202880859375
    7. 'pass' → logprob: -4.9089202880859375
    8. 'skip' → logprob: -4.9089202880859375
    9. 'for' → logprob: -5.0339202880859375
    10. ' continue' → logprob: -6.5339202880859375

Token 800: ' if' (ID: 538)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.2256510257720947
    2. 't' → logprob: -1.6006510257720947
    3. '               ' → logprob: -1.8506510257720947
    4. '                   ' → logprob: -2.4756510257720947
    5. 'den' → logprob: -2.9756510257720947
    6. 'x' → logprob: -2.9756510257720947
    7. 's' → logprob: -3.2256510257720947
    8. '           ' → logprob: -3.6006510257720947
    9. 'continue' → logprob: -4.725650787353516
    10. '#' → logprob: -4.975650787353516

Token 801: ' segments' (ID: 33749)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7068507075309753
    2. '(' → logprob: -1.8318507671356201
    3. 'False' → logprob: -2.45685076713562
    4. 'cross' → logprob: -2.95685076713562
    5. 'abs' → logprob: -2.95685076713562
    6. 'den' → logprob: -3.33185076713562
    7. 't' → logprob: -3.45685076713562
    8. '(ai' → logprob: -3.45685076713562
    9. 'ai' → logprob: -3.95685076713562
    10. 'True' → logprob: -4.081850528717041

Token 802: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.09129579365253448
    2. '[' → logprob: -2.8412957191467285
    3. ' intersect' → logprob: -4.7162957191467285
    4. 'cross' → logprob: -5.4662957191467285
    5. 's' → logprob: -5.7162957191467285
    6. 'do' → logprob: -5.9662957191467285
    7. 'from' → logprob: -6.2162957191467285
    8. '[i' → logprob: -6.2162957191467285
    9. '_inter' → logprob: -7.0912957191467285
    10. ' cross' → logprob: -7.0912957191467285

Token 803: ' other' (ID: 1273)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1485336273908615
    2. '<|end|>' → logprob: -3.273533582687378
    3. '               ' → logprob: -3.648533582687378
    4. '		' → logprob: -4.523533821105957
    5. '       ' → logprob: -4.648533821105957
    6. '                   ' → logprob: -5.023533821105957
    7. '<|end|>' → logprob: -5.148533821105957
    8. ' if' → logprob: -5.273533821105957
    9. '   ' → logprob: -5.398533821105957
    10. ' and' → logprob: -5.523533821105957

Token 804: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.1610693484544754
    2. ' than' → logprob: -1.911069393157959
    3. '_than' → logprob: -8.0360689163208
    4. '               ' → logprob: -8.4110689163208
    5. '```' → logprob: -9.4110689163208
    6. '           ' → logprob: -9.4110689163208
    7. '                   ' → logprob: -10.5360689163208
    8. 'and' → logprob: -11.2860689163208
    9. 'that' → logprob: -11.6610689163208
    10. '>' → logprob: -11.7860689163208

Token 805: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.4970332682132721
    2. ' origin' → logprob: -0.9970332384109497
    3. '0' → logprob: -4.37203311920166
    4. ' at' → logprob: -4.74703311920166
    5. ' than' → logprob: -6.99703311920166
    6. 'at' → logprob: -8.74703311920166
    7. ' ' → logprob: -8.87203311920166
    8. ' the' → logprob: -9.74703311920166
    9. 'than' → logprob: -10.24703311920166
    10. 'the' → logprob: -10.24703311920166

Token 806: ' means' (ID: 4748)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08759864419698715
    2. '               ' → logprob: -2.8375985622406006
    3. '                   ' → logprob: -4.96259880065918
    4. '<|end|>' → logprob: -5.46259880065918
    5. '       ' → logprob: -5.71259880065918
    6. ',' → logprob: -6.08759880065918
    7. ' s' → logprob: -6.71259880065918
    8. '<|end|>' → logprob: -7.08759880065918
    9. ' and' → logprob: -7.21259880065918
    10. '		' → logprob: -7.33759880065918

Token 807: ' segments' (ID: 33749)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.33119240403175354
    2. 'True' → logprob: -1.8311923742294312
    3. 't' → logprob: -3.5811924934387207
    4. ' False' → logprob: -4.206192493438721
    5. 'continue' → logprob: -4.831192493438721
    6. '```' → logprob: -4.831192493438721
    7. '(ai' → logprob: -4.956192493438721
    8. 'return' → logprob: -4.956192493438721
    9. 'abs' → logprob: -5.456192493438721
    10. ' True' → logprob: -5.581192493438721

Token 808: ' cross' (ID: 8088)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.07726804912090302
    2. '[' → logprob: -3.577268123626709
    3. ' intersect' → logprob: -5.077268123626709
    4. 'from' → logprob: -5.327268123626709
    5. 'cross' → logprob: -5.452268123626709
    6. '_inter' → logprob: -5.452268123626709
    7. '           ' → logprob: -5.702268123626709
    8. '```' → logprob: -5.827268123626709
    9. 'do' → logprob: -6.077268123626709
    10. '...' → logprob: -6.202268123626709

Token 809: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21276699006557465
    2. ' and' → logprob: -2.5877668857574463
    3. '               ' → logprob: -3.0877668857574463
    4. '<|end|>' → logprob: -3.8377668857574463
    5. '                   ' → logprob: -5.087767124176025
    6. '   ' → logprob: -5.337767124176025
    7. ':' → logprob: -5.337767124176025
    8. ' if' → logprob: -5.462767124176025
    9. ',' → logprob: -5.462767124176025
    10. '<|end|>' → logprob: -5.587767124176025

Token 810: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045027632266283035
    2. '		' → logprob: -3.920027732849121
    3. '               ' → logprob: -4.420027732849121
    4. '```' → logprob: -5.170027732849121
    5. '                   ' → logprob: -6.295027732849121
    6. '<|end|>' → logprob: -6.795027732849121
    7. '       ' → logprob: -7.545027732849121
    8. '	       ' → logprob: -7.670027732849121
    9. '	' → logprob: -7.920027732849121
    10. '                       ' → logprob: -8.045027732849121

Token 811: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17872661352157593
    2. '               ' → logprob: -2.9287266731262207
    3. '                   ' → logprob: -3.3037266731262207
    4. ' if' → logprob: -4.428726673126221
    5. 'if' → logprob: -4.678726673126221
    6. '```' → logprob: -4.678726673126221
    7. 'continue' → logprob: -4.928726673126221
    8. ' continue' → logprob: -5.053726673126221
    9. '       ' → logprob: -5.428726673126221
    10. '                           ' → logprob: -5.678726673126221

Token 812: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3630855083465576
    2. '           ' → logprob: -1.4880855083465576
    3. ' if' → logprob: -1.6130855083465576
    4. 'if' → logprob: -1.7380855083465576
    5. 'return' → logprob: -2.8630855083465576
    6. 'continue' → logprob: -3.6130855083465576
    7. ' return' → logprob: -4.363085746765137
    8. '                   ' → logprob: -4.488085746765137
    9. ' continue' → logprob: -4.613085746765137
    10. 't' → logprob: -4.988085746765137

Token 813: ' origin' (ID: 12839)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7560458183288574
    2. 'i' → logprob: -1.1310458183288574
    3. 's' → logprob: -2.5060458183288574
    4. ' t' → logprob: -3.2560458183288574
    5. ' s' → logprob: -4.006045818328857
    6. ' i' → logprob: -4.256045818328857
    7. 'ai' → logprob: -4.631045818328857
    8. 'k' → logprob: -4.881045818328857
    9. 'cross' → logprob: -5.131045818328857
    10. ' ai' → logprob: -5.381045818328857

Token 814: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.9151531457901
    2. '[' → logprob: -2.0401530265808105
    3. ',' → logprob: -2.1651530265808105
    4. ' and' → logprob: -2.2901530265808105
    5. ':' → logprob: -2.5401530265808105
    6. ')' → logprob: -2.7901530265808105
    7. '==' → logprob: -3.1651530265808105
    8. '+' → logprob: -3.4151530265808105
    9. ' not' → logprob: -4.0401530265808105
    10. 'points' → logprob: -4.0401530265808105

Token 815: ' two' (ID: 1920)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.34988802671432495
    2. 'anchor' → logprob: -1.8498880863189697
    3. ' ai' → logprob: -2.8498880863189697
    4. 'aj' → logprob: -3.4748880863189697
    5. 'anchors' → logprob: -3.9748880863189697
    6. '(ai' → logprob: -4.599887847900391
    7. '0' → logprob: -5.224887847900391
    8. '(' → logprob: -5.849887847900391
    9. 'origin' → logprob: -6.724887847900391
    10. 'the' → logprob: -6.849887847900391

Token 816: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.32078176736831665
    2. 'anchor' → logprob: -1.9457817077636719
    3. 'points' → logprob: -2.945781707763672
    4. ' anchors' → logprob: -3.445781707763672
    5. 'vectors' → logprob: -4.320781707763672
    6. 'segments' → logprob: -4.320781707763672
    7. 'ai' → logprob: -5.695781707763672
    8. 'anch' → logprob: -5.695781707763672
    9. ' points' → logprob: -5.820781707763672
    10. ' vectors' → logprob: -6.070781707763672

Token 817: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2942391037940979
    2. '<|end|>' → logprob: -2.419239044189453
    3. '               ' → logprob: -3.294239044189453
    4. '                           ' → logprob: -3.669239044189453
    5. '<|end|>' → logprob: -4.419239044189453
    6. '                   ' → logprob: -4.919239044189453
    7. '            ' → logprob: -4.919239044189453
    8. '       ' → logprob: -4.919239044189453
    9. ':' → logprob: -5.169239044189453
    10. ' ' → logprob: -5.419239044189453

Token 818: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1711565256118774
    2. 'if' → logprob: -1.5461565256118774
    3. 't' → logprob: -2.046156406402588
    4. '               ' → logprob: -2.296156406402588
    5. 'dx' → logprob: -2.296156406402588
    6. 'continue' → logprob: -3.046156406402588
    7. ' if' → logprob: -3.921156406402588
    8. 'x' → logprob: -4.171156406402588
    9. '                   ' → logprob: -4.296156406402588
    10. 's' → logprob: -4.421156406402588

Token 819: ' the' (ID: 290)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1400820016860962
    2. 'cross' → logprob: -1.3900820016860962
    3. '(' → logprob: -2.1400818824768066
    4. 'abs' → logprob: -2.3900818824768066
    5. '0' → logprob: -2.5150818824768066
    6. '(ai' → logprob: -2.7650818824768066
    7. 'True' → logprob: -3.7650818824768066
    8. 'ai' → logprob: -4.640081882476807
    9. '((' → logprob: -4.640081882476807
    10. 't' → logprob: -4.890081882476807

Token 820: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6331120729446411
    2. 'cross' → logprob: -1.3831120729446411
    3. 'ai' → logprob: -2.8831119537353516
    4. 't' → logprob: -3.7581119537353516
    5. 'anchors' → logprob: -4.008111953735352
    6. ' segments' → logprob: -4.258111953735352
    7. 'anchor' → logprob: -4.508111953735352
    8. 'abs' → logprob: -4.508111953735352
    9. '#' → logprob: -4.633111953735352
    10. 'lines' → logprob: -4.633111953735352

Token 821: ' cross' (ID: 8088)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.06997289508581161
    2. ' intersect' → logprob: -3.4449729919433594
    3. '[' → logprob: -4.819972991943359
    4. 'from' → logprob: -5.694972991943359
    5. 'cross' → logprob: -5.944972991943359
    6. 'do' → logprob: -6.069972991943359
    7. 'over' → logprob: -6.069972991943359
    8. 'both' → logprob: -6.444972991943359
    9. '           ' → logprob: -6.569972991943359
    10. '       ' → logprob: -6.569972991943359

Token 822: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4036189317703247
    2. ',' → logprob: -1.6536189317703247
    3. '           ' → logprob: -1.7786189317703247
    4. ':' → logprob: -2.153618812561035
    5. '                   ' → logprob: -2.403618812561035
    6. ':
' → logprob: -2.528618812561035
    7. ' and' → logprob: -3.153618812561035
    8. 'and' → logprob: -4.278618812561035
    9. ' at' → logprob: -4.903618812561035
    10. ' only' → logprob: -5.278618812561035

Token 823: ' their' (ID: 1043)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.932100772857666
    2. ' return' → logprob: -1.307100772857666
    3. '                   ' → logprob: -2.307100772857666
    4. 'continue' → logprob: -2.307100772857666
    5. ' continue' → logprob: -2.807100772857666
    6. '               ' → logprob: -3.307100772857666
    7. '           ' → logprob: -4.057100772857666
    8. 't' → logprob: -4.682100772857666
    9. 'if' → logprob: -5.307100772857666
    10. ' if' → logprob: -6.307100772857666

Token 824: ' anchors' (ID: 114642)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.4593363106250763
    2. 'direction' → logprob: -1.709336280822754
    3. 'vectors' → logprob: -2.084336280822754
    4. ' directions' → logprob: -3.709336280822754
    5. 'param' → logprob: -5.084336280822754
    6. ' vectors' → logprob: -5.209336280822754
    7. ' direction' → logprob: -5.334336280822754
    8. 'orientation' → logprob: -5.459336280822754
    9. 'vector' → logprob: -5.834336280822754
    10. 'angles' → logprob: -6.334336280822754

Token 825: ' are' (ID: 553)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0334415435791016
    2. ' are' → logprob: -1.1584415435791016
    3. ' lie' → logprob: -2.2834415435791016
    4. 'are' → logprob: -2.4084415435791016
    5. '```' → logprob: -3.4084415435791016
    6. 'points' → logprob: -4.533441543579102
    7. 'and' → logprob: -4.783441543579102
    8. 'coordinates' → logprob: -5.033441543579102
    9. ' and' → logprob: -5.158441543579102
    10. ' points' → logprob: -5.158441543579102

Token 826: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.14923560619354248
    2. 'in' → logprob: -2.524235725402832
    3. ' on' → logprob: -3.649235725402832
    4. 'not' → logprob: -3.774235725402832
    5. 'ordered' → logprob: -5.649235725402832
    6. ' not' → logprob: -6.274235725402832
    7. ' in' → logprob: -6.649235725402832
    8. 'col' → logprob: -7.149235725402832
    9. 'aligned' → logprob: -8.024235725402832
    10. 'op' → logprob: -8.274235725402832

Token 827: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.4886340796947479
    2. 'op' → logprob: -0.9886341094970703
    3. 'between' → logprob: -4.73863410949707
    4. 'the' → logprob: -6.11363410949707
    5. 'same' → logprob: -6.48863410949707
    6. ' opposite' → logprob: -6.73863410949707
    7. ' different' → logprob: -7.73863410949707
    8. 'counter' → logprob: -8.98863410949707
    9. 'a' → logprob: -10.36363410949707
    10. ' between' → logprob: -10.61363410949707

Token 828: ' angles' (ID: 43448)
  Prédit: 'quadr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quadr' → logprob: -0.1679147481918335
    2. 'half' → logprob: -2.542914867401123
    3. ' quadr' → logprob: -3.417914867401123
    4. 'dire' → logprob: -3.792914867401123
    5. 'hal' → logprob: -5.167914867401123
    6. 's' → logprob: -5.542914867401123
    7. 'segments' → logprob: -5.542914867401123
    8. 'lines' → logprob: -6.417914867401123
    9. 'quarters' → logprob: -6.917914867401123
    10. ' half' → logprob: -6.917914867401123

Token 829: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4481324851512909
    2. '               ' → logprob: -1.3231325149536133
    3. '                   ' → logprob: -3.0731325149536133
    4. '```' → logprob: -5.323132514953613
    5. '                           ' → logprob: -5.448132514953613
    6. '<|end|>' → logprob: -5.573132514953613
    7. ' if' → logprob: -5.698132514953613
    8. ',' → logprob: -5.948132514953613
    9. '                                   ' → logprob: -6.323132514953613
    10. 't' → logprob: -6.323132514953613

Token 830: ' segments' (ID: 33749)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3483625650405884
    2. '0' → logprob: -1.4733625650405884
    3. '                   ' → logprob: -2.598362445831299
    4. 'the' → logprob: -2.598362445831299
    5. 't' → logprob: -2.848362445831299
    6. 'angles' → logprob: -3.348362445831299
    7. ' t' → logprob: -3.598362445831299
    8. ' ' → logprob: -3.598362445831299
    9. '               ' → logprob: -3.848362445831299
    10. ' continue' → logprob: -3.973362445831299

Token 831: ' intersect' (ID: 64353)
  Prédit: ' intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -1.0307475328445435
    2. ' cross' → logprob: -1.7807475328445435
    3. 'inter' → logprob: -1.9057475328445435
    4. 'do' → logprob: -2.780747413635254
    5. ' do' → logprob: -3.155747413635254
    6. 'cross' → logprob: -3.280747413635254
    7. '           ' → logprob: -3.530747413635254
    8. ' continue' → logprob: -3.655747413635254
    9. '               ' → logprob: -4.030747413635254
    10. 'continue' → logprob: -4.405747413635254

Token 832: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8025261759757996
    2. ':' → logprob: -1.5525262355804443
    3. '<|end|>' → logprob: -1.8025262355804443
    4. '               ' → logprob: -3.0525262355804443
    5. '<|end|>' → logprob: -3.1775262355804443
    6. '                   ' → logprob: -3.9275262355804443
    7. ':
' → logprob: -4.052525997161865
    8. '       ' → logprob: -4.927525997161865
    9. ' and' → logprob: -5.302525997161865
    10. '   ' → logprob: -5.302525997161865

Token 833: ' origin' (ID: 12839)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3596016764640808
    2. ' a' → logprob: -1.8596017360687256
    3. 'some' → logprob: -2.4846017360687256
    4. ' some' → logprob: -3.4846017360687256
    5. 't' → logprob: -4.9846014976501465
    6. ' an' → logprob: -5.3596014976501465
    7. 'an' → logprob: -5.6096014976501465
    8. 'point' → logprob: -5.7346014976501465
    9. 'the' → logprob: -5.8596014976501465
    10. '0' → logprob: -6.1096014976501465

Token 834: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09992408752441406
    2. '<|end|>' → logprob: -2.724924087524414
    3. '               ' → logprob: -4.599924087524414
    4. '<|end|>' → logprob: -4.974924087524414
    5. '                   ' → logprob: -5.224924087524414
    6. ',' → logprob: -6.974924087524414
    7. ' and' → logprob: -6.974924087524414
    8. '.' → logprob: -7.224924087524414
    9. ':' → logprob: -7.224924087524414
    10. '       ' → logprob: -7.474924087524414

Token 835: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06769431382417679
    2. '<|end|>' → logprob: -3.3176944255828857
    3. '<|end|>' → logprob: -4.567694187164307
    4. '               ' → logprob: -5.192694187164307
    5. '                   ' → logprob: -6.192694187164307
    6. '   ' → logprob: -6.442694187164307
    7. '       ' → logprob: -6.692694187164307
    8. '		' → logprob: -6.817694187164307
    9. ',' → logprob: -7.442694187164307
    10. '                           ' → logprob: -7.567694187164307

Token 836: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17868833243846893
    2. '               ' → logprob: -2.0536882877349854
    3. '                   ' → logprob: -4.1786885261535645
    4. '<|end|>' → logprob: -5.1786885261535645
    5. '```' → logprob: -5.3036885261535645
    6. '<|end|>' → logprob: -6.5536885261535645
    7. ' if' → logprob: -6.9286885261535645
    8. '                           ' → logprob: -7.0536885261535645
    9. '                       ' → logprob: -7.0536885261535645
    10. '		' → logprob: -7.1786885261535645

Token 837: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7517598867416382
    2. '               ' → logprob: -1.8767598867416382
    3. 'continue' → logprob: -2.0017600059509277
    4. '                   ' → logprob: -2.3767600059509277
    5. ' continue' → logprob: -3.0017600059509277
    6. '```' → logprob: -4.126760005950928
    7. '                           ' → logprob: -4.376760005950928
    8. '<|end|>' → logprob: -4.876760005950928
    9. '                       ' → logprob: -5.001760005950928
    10. 't' → logprob: -5.501760005950928

Token 838: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4339578151702881
    2. '               ' → logprob: -2.308957815170288
    3. 'continue' → logprob: -2.433957815170288
    4. ' continue' → logprob: -2.933957815170288
    5. '                   ' → logprob: -3.808957815170288
    6. '<|end|>' → logprob: -3.933957815170288
    7. ' if' → logprob: -4.308958053588867
    8. '```' → logprob: -4.433958053588867
    9. 'if' → logprob: -4.683958053588867
    10. 'return' → logprob: -5.433958053588867

Token 839: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07871648669242859
    2. ' continue' → logprob: -2.953716516494751
    3. '           ' → logprob: -4.328716278076172
    4. 'pass' → logprob: -5.703716278076172
    5. '                   ' → logprob: -6.078716278076172
    6. '               ' → logprob: -6.328716278076172
    7. 'return' → logprob: -7.078716278076172
    8. 'if' → logprob: -7.328716278076172
    9. '#' → logprob: -7.578716278076172
    10. '                       ' → logprob: -8.328716278076172

Token 840: ' crossing' (ID: 50946)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8405423164367676
    2. 'continue' → logprob: -1.3405423164367676
    3. ' continue' → logprob: -2.4655423164367676
    4. '               ' → logprob: -2.5905423164367676
    5. 'return' → logprob: -3.0905423164367676
    6. '       ' → logprob: -3.9655423164367676
    7. 't' → logprob: -4.090542316436768
    8. 'cross' → logprob: -4.715542316436768
    9. ' crossing' → logprob: -4.840542316436768
    10. ' return' → logprob: -4.840542316436768

Token 841: ' here' (ID: 2105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3436451256275177
    2. '<|end|>' → logprob: -1.3436450958251953
    3. '               ' → logprob: -4.968645095825195
    4. '<|end|>' → logprob: -5.093645095825195
    5. '       ' → logprob: -5.718645095825195
    6. 'continue' → logprob: -5.968645095825195
    7. ' continue' → logprob: -6.093645095825195
    8. '                   ' → logprob: -6.593645095825195
    9. ' continues' → logprob: -6.843645095825195
    10. '   ' → logprob: -7.093645095825195

Token 842: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9638028740882874
    2. ' continue' → logprob: -1.0888028144836426
    3. '           ' → logprob: -1.4638028144836426
    4. '               ' → logprob: -3.3388028144836426
    5. 'pass' → logprob: -5.588802814483643
    6. '                   ' → logprob: -5.963802814483643
    7. '	continue' → logprob: -6.088802814483643
    8. ' pass' → logprob: -6.213802814483643
    9. '   ' → logprob: -6.963802814483643
    10. '       ' → logprob: -7.088802814483643

Token 844: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 845: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3900550603866577
    2. '               ' → logprob: -2.2650551795959473
    3. 'continue' → logprob: -2.3900551795959473
    4. '<|end|>' → logprob: -3.2650551795959473
    5. ' continue' → logprob: -4.015055179595947
    6. '                   ' → logprob: -4.140055179595947
    7. '```' → logprob: -4.265055179595947
    8. '                           ' → logprob: -5.015055179595947
    9. '                       ' → logprob: -5.265055179595947
    10. '       ' → logprob: -5.265055179595947

Token 846: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4320773482322693
    2. ' continue' → logprob: -1.682077407836914
    3. '           ' → logprob: -2.307077407836914
    4. '               ' → logprob: -3.557077407836914
    5. '<|end|>' → logprob: -4.432077407836914
    6. 'pass' (adapté à ' pass') → logprob: -4.682077407836914
    7. '	continue' → logprob: -5.557077407836914
    8. '                   ' → logprob: -5.807077407836914
    9. '       ' → logprob: -6.182077407836914
    10. ' pass' → logprob: -6.432077407836914

Token 847: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 848: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 849: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024873485788702965
    2. 'return' (adapté à ' return') → logprob: -4.14987325668335
    3. '<|end|>' → logprob: -5.39987325668335
    4. '
' → logprob: -5.89987325668335
    5. '	return' → logprob: -7.64987325668335
    6. 'continue' → logprob: -8.274873733520508
    7. '       ' → logprob: -8.399873733520508
    8. ' return' → logprob: -8.524873733520508
    9. '    
' → logprob: -9.024873733520508
    10. '```' → logprob: -10.024873733520508

Token 850: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02324547804892063
    2. ' True' → logprob: -3.7732455730438232
    3. '(True' → logprob: -19.898244857788086
    4. 'False' → logprob: -20.648244857788086
    5. '=True' → logprob: -22.148244857788086
    6. 'true' → logprob: -22.523244857788086
    7. ' ' → logprob: -23.523244857788086
    8. '   ' → logprob: -23.898244857788086
    9. ' ' → logprob: -24.898244857788086
    10. '_true' → logprob: -25.023244857788086

Token 851: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' main' (ID: 2758)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.7590447664260864
    2. ' binary' → logprob: -0.8840447664260864
    3. ' can' → logprob: -3.384044647216797
    4. ' find' → logprob: -4.134044647216797
    5. ' solve' → logprob: -4.384044647216797
    6. ' place' → logprob: -4.509044647216797
    7. ' main' → logprob: -4.634044647216797
    8. 'can' → logprob: -4.759044647216797
    9. 'solve' → logprob: -4.884044647216797
    10. 'ball' → logprob: -6.009044647216797

Token 854: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028463639318943024
    2. '():
' → logprob: -5.8778462409973145
    3. '()' → logprob: -10.877846717834473
    4. ' ():' → logprob: -11.127846717834473
    5. '(' → logprob: -12.377846717834473
    6. '():
' → logprob: -13.002846717834473
    7. '_' → logprob: -14.377846717834473
    8. '():

' → logprob: -14.627846717834473
    9. '()>' → logprob: -16.127845764160156
    10. 'def' → logprob: -16.377845764160156

Token 855: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13911592960357666
    2. '   ' → logprob: -2.389115810394287
    3. ' import' → logprob: -3.389115810394287
    4. 'n' → logprob: -6.014115810394287
    5. ' input' → logprob: -6.639115810394287
    6. 'import' → logprob: -8.139116287231445
    7. ' line' → logprob: -9.264116287231445
    8. '	n' → logprob: -9.639116287231445
    9. '```' → logprob: -9.639116287231445
    10. ' readline' → logprob: -10.764116287231445

Token 856: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10499519109725952
    2. '   ' → logprob: -3.2299952507019043
    3. 'n' → logprob: -3.4799952507019043
    4. ' import' → logprob: -3.7299952507019043
    5. 'import' → logprob: -5.604995250701904
    6. ' input' → logprob: -6.479995250701904
    7. 'input' (adapté à ' input') → logprob: -10.479994773864746
    8. ' t' → logprob: -10.854994773864746
    9. 't' → logprob: -11.104994773864746
    10. ' T' → logprob: -11.604994773864746

Token 857: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14400933682918549
    2. '_line' → logprob: -2.3940093517303467
    3. '_data' → logprob: -3.2690093517303467
    4. '_lines' → logprob: -5.519009113311768
    5. '_str' → logprob: -8.769009590148926
    6. '=' → logprob: -9.019009590148926
    7. '().' → logprob: -9.019009590148926
    8. ' =' → logprob: -9.144009590148926
    9. 'data' → logprob: -9.519009590148926
    10. '_' → logprob: -10.019009590148926

Token 858: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4740819036960602
    2. ' sys' → logprob: -0.9740818738937378
    3. 'input' → logprob: -12.474081993103027
    4. ' input' → logprob: -14.349081993103027
    5. '	sys' → logprob: -15.474081993103027
    6. '=sys' → logprob: -15.724081993103027
    7. 'lambda' → logprob: -16.22408103942871
    8. '(sys' → logprob: -17.47408103942871
    9. ' lambda' → logprob: -17.72408103942871
    10. '```' → logprob: -18.34908103942871

Token 859: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00033665422233752906
    2. '.' → logprob: -8.500336647033691
    3. '.readline' → logprob: -9.375336647033691
    4. '.stdout' → logprob: -10.250336647033691
    5. '.std' → logprob: -12.125336647033691
    6. '.argv' → logprob: -12.375336647033691
    7. '.input' → logprob: -13.750336647033691
    8. ' .' → logprob: -13.875336647033691
    9. 'stdin' → logprob: -14.125336647033691
    10. '.st' → logprob: -16.125337600708008

Token 860: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.050453513860702515
    2. 'read' → logprob: -3.0504534244537354
    3. '_read' → logprob: -6.9254536628723145
    4. ' readline' → logprob: -7.9254536628723145
    5. 'stdin' → logprob: -8.925453186035156
    6. 'buffer' → logprob: -9.550453186035156
    7. '.read' → logprob: -9.675453186035156
    8. ' =' → logprob: -9.800453186035156
    9. 'input' → logprob: -10.925453186035156
    10. '=' → logprob: -10.925453186035156

Token 861: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007774266880005598
    2. '()' → logprob: -4.882774353027344
    3. '()
' → logprob: -8.757774353027344
    4. '()\' → logprob: -12.882774353027344
    5. '
' → logprob: -13.257774353027344
    6. '()

' → logprob: -13.382774353027344
    7. 'line' → logprob: -13.507774353027344
    8. '()).' → logprob: -14.507774353027344
    9. 'split' → logprob: -14.507774353027344
    10. '   ' → logprob: -14.757774353027344

Token 862: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1008981242775917
    2. 'split' → logprob: -2.350898027420044
    3. 'rstrip' → logprob: -7.850898265838623
    4. 'decode' → logprob: -8.225897789001465
    5. 'read' → logprob: -10.350897789001465
    6. 'replace' → logprob: -13.225897789001465
    7. ' split' → logprob: -15.725897789001465
    8. ' strip' → logprob: -15.850897789001465
    9. '()' → logprob: -16.72589874267578
    10. '().' → logprob: -17.10089874267578

Token 863: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.252401739358902
    2. '()' → logprob: -1.5024017095565796
    3. '()
' → logprob: -7.877401828765869
    4. '()\' → logprob: -9.377401351928711
    5. '()

' → logprob: -12.877401351928711
    6. '()`' → logprob: -13.377401351928711
    7. '())' → logprob: -13.627401351928711
    8. '()
' → logprob: -14.127401351928711
    9. '()+' → logprob: -15.002401351928711
    10. '(' → logprob: -15.002401351928711

Token 864: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ' split' → logprob: -13.500001907348633
    3. '(split' → logprob: -17.000001907348633
    4. 'strip' → logprob: -19.250001907348633
    5. 'decode' → logprob: -20.500001907348633
    6. 'spl' → logprob: -21.375001907348633
    7. 'rstrip' → logprob: -21.500001907348633
    8. '```' → logprob: -22.125001907348633
    9. '   ' → logprob: -22.500001907348633
    10. ' ' → logprob: -22.500001907348633

Token 865: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5868522524833679
    2. '('' → logprob: -0.8368522524833679
    3. '(' → logprob: -5.086852073669434
    4. '('\' → logprob: -5.586852073669434
    5. '("("' → logprob: -7.086852073669434
    6. '("' → logprob: -10.711852073669434
    7. 'lines' → logprob: -11.086852073669434
    8. '('.')' → logprob: -11.461852073669434
    9. '()
' → logprob: -11.586852073669434
    10. '("\' → logprob: -11.711852073669434

Token 866: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001475220051361248
    2. '\n' → logprob: -8.875147819519043
    3. 'newline' → logprob: -12.625147819519043
    4. 'lines' → logprob: -12.750147819519043
    5. '
' → logprob: -14.375147819519043
    6. '```' → logprob: -15.250147819519043
    7. ')' → logprob: -15.625147819519043
    8. ''\' → logprob: -15.875147819519043
    9. ' n' → logprob: -16.375146865844727
    10. ')n' → logprob: -17.125146865844727

Token 867: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10297238826751709
    2. '')' → logprob: -2.8529725074768066
    3. '   ' → logprob: -3.9779725074768066
    4. ')
' → logprob: -3.9779725074768066
    5. '')
' → logprob: -5.977972507476807
    6. '")' → logprob: -9.727972030639648
    7. '[' → logprob: -10.852972030639648
    8. '```' → logprob: -10.977972030639648
    9. ')')
' → logprob: -10.977972030639648
    10. 'def' → logprob: -11.102972030639648

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12199842929840088
    2. 'n' → logprob: -2.8719983100891113
    3. ' n' → logprob: -2.8719983100891113
    4. 't' → logprob: -7.496998310089111
    5. ' t' → logprob: -7.621998310089111
    6. 'idx' → logprob: -8.49699878692627
    7. ' idx' → logprob: -8.74699878692627
    8. 'num' → logprob: -9.49699878692627
    9. '```' → logprob: -9.74699878692627
    10. ' for' → logprob: -10.37199878692627

Token 869: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6419546604156494
    2. 'n' → logprob: -0.8919546604156494
    3. ' t' → logprob: -3.3919546604156494
    4. '   ' → logprob: -4.39195442199707
    5. 'T' → logprob: -4.64195442199707
    6. ' n' → logprob: -5.01695442199707
    7. ' T' → logprob: -6.89195442199707
    8. 'idx' (adapté à ' idx') → logprob: -8.64195442199707
    9. 'num' → logprob: -9.01695442199707
    10. 'q' → logprob: -9.64195442199707

Token 870: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232071876525879
    2. ' =' → logprob: -0.8982071876525879
    3. '[' → logprob: -10.77320671081543
    4. ' +=' → logprob: -11.02320671081543
    5. '+=' → logprob: -11.27320671081543
    6. '   ' → logprob: -11.27320671081543
    7. ')' → logprob: -12.02320671081543
    8. '```' → logprob: -12.77320671081543
    9. ' ' → logprob: -13.14820671081543
    10. '<|end|>' → logprob: -13.64820671081543

Token 871: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027057272382080555
    2. '1' → logprob: -6.0027055740356445
    3. ' ' → logprob: -8.377705574035645
    4. '   ' → logprob: -15.877705574035645
    5. '  ' → logprob: -18.12770652770996
    6. 'int' → logprob: -18.25270652770996
    7. '```' → logprob: -18.37770652770996
    8. '2' → logprob: -18.62770652770996
    9. '    ' → logprob: -19.69020652770996
    10. '[' → logprob: -19.81520652770996

Token 872: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005240156780928373
    2. '1' → logprob: -5.255239963531494
    3. ' ' → logprob: -12.005240440368652
    4. '   ' → logprob: -16.005239486694336
    5. '```' → logprob: -16.630239486694336
    6. 'int' → logprob: -16.755239486694336
    7. '2' → logprob: -17.380239486694336
    8. '=' → logprob: -17.755239486694336
    9. '[' → logprob: -19.067739486694336
    10. '  ' → logprob: -19.380239486694336

Token 873: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4332697093486786
    2. 'n' → logprob: -1.058269739151001
    3. ' n' → logprob: -6.058269500732422
    4. '```' → logprob: -7.308269500732422
    5. 't' → logprob: -8.058269500732422
    6. '<|end|>' → logprob: -8.183269500732422
    7. 'def' → logprob: -8.308269500732422
    8. 'while' → logprob: -8.683269500732422
    9. '
' → logprob: -9.183269500732422
    10. '    
' → logprob: -9.308269500732422

Token 874: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1059887632727623
    2. 'n' → logprob: -2.3559887409210205
    3. ' n' → logprob: -5.8559889793396
    4. 't' → logprob: -6.9809889793396
    5. 'while' → logprob: -6.9809889793396
    6. '```' → logprob: -7.7309889793396
    7. ' while' → logprob: -8.355988502502441
    8. 'num' → logprob: -9.105988502502441
    9. 'for' → logprob: -9.355988502502441
    10. ' for' → logprob: -9.980988502502441

Token 875: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07353826612234116
    2. ' t' → logprob: -3.198538303375244
    3. 'T' → logprob: -3.698538303375244
    4. 'n' → logprob: -6.323538303375244
    5. '   ' → logprob: -6.573538303375244
    6. ' T' → logprob: -7.073538303375244
    7. 'while' (adapté à ' while') → logprob: -7.323538303375244
    8. 'q' → logprob: -8.323537826538086
    9. ' while' → logprob: -8.823537826538086
    10. 'num' → logprob: -9.323537826538086

Token 876: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.16023914515972137
    2. 'idx' → logprob: -1.9102391004562378
    3. '   ' → logprob: -12.410239219665527
    4. ' True' → logprob: -12.410239219665527
    5. '(idx' → logprob: -12.660239219665527
    6. '	idx' → logprob: -13.035239219665527
    7. 'True' → logprob: -14.410239219665527
    8. ' len' → logprob: -14.910239219665527
    9. '[idx' → logprob: -15.660239219665527
    10. '_idx' → logprob: -15.785239219665527

Token 877: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09720932692289352
    2. '   ' → logprob: -2.9722092151641846
    3. ':
' → logprob: -3.3472092151641846
    4. '       ' → logprob: -5.222209453582764
    5. '<|end|>' → logprob: -8.222208976745605
    6. '{' → logprob: -9.472208976745605
    7. '):
' → logprob: -9.472208976745605
    8. ' and' → logprob: -9.472208976745605
    9. ',' → logprob: -9.472208976745605
    10. '<|end|>' → logprob: -9.597208976745605

Token 878: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13558709621429443
    2. '       ' → logprob: -2.135587215423584
    3. ' if' → logprob: -4.885587215423584
    4. 'if' → logprob: -6.885587215423584
    5. '```' → logprob: -11.010586738586426
    6. '   ' → logprob: -12.135586738586426
    7. '<|end|>' → logprob: -12.510586738586426
    8. ' try' → logprob: -12.635586738586426
    9. '    ' → logprob: -13.010586738586426
    10. 'try' → logprob: -13.010586738586426

Token 879: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02102176658809185
    2. ' if' → logprob: -4.021021842956543
    3. '   ' → logprob: -6.521021842956543
    4. 'line' → logprob: -7.146021842956543
    5. 'n' → logprob: -7.646021842956543
    6. ' line' → logprob: -9.396021842956543
    7. 'idx' → logprob: -10.396021842956543
    8. 'try' → logprob: -12.146021842956543
    9. ' n' → logprob: -12.146021842956543
    10. 't' → logprob: -13.771021842956543

Token 880: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06197138875722885
    2. ' idx' → logprob: -2.811971426010132
    3. '   ' → logprob: -13.311971664428711
    4. '	idx' → logprob: -13.561971664428711
    5. ' ' → logprob: -14.686971664428711
    6. '_idx' → logprob: -15.811971664428711
    7. ' not' → logprob: -16.18697166442871
    8. '(idx' → logprob: -16.43697166442871
    9. '  ' → logprob: -16.56197166442871
    10. '[idx' → logprob: -17.81197166442871

Token 881: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12699362635612488
    2. ' >=' → logprob: -2.1269936561584473
    3. '==' → logprob: -10.251993179321289
    4. ']>=' → logprob: -10.876993179321289
    5. ')>=' → logprob: -11.751993179321289
    6. ' ==' → logprob: -13.626993179321289
    7. '≥' → logprob: -14.376993179321289
    8. ' ' → logprob: -14.751993179321289
    9. '=' → logprob: -14.876993179321289
    10. '*' → logprob: -15.376993179321289

Token 882: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -14.75
    3. '(len' → logprob: -21.875
    4. '   ' → logprob: -23.125
    5. '=len' → logprob: -23.75
    6. 'input' → logprob: -24.25
    7. '	len' → logprob: -24.25
    8. 'length' → logprob: -24.5
    9. 'int' → logprob: -25.0
    10. ' ' → logprob: -25.0

Token 883: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014196529053151608
    2. 'input' → logprob: -4.264196395874023
    3. ' input' → logprob: -10.389196395874023
    4. '=input' → logprob: -13.389196395874023
    5. '[input' → logprob: -15.139196395874023
    6. ',input' → logprob: -15.514196395874023
    7. '<input' → logprob: -16.014196395874023
    8. '```' → logprob: -16.889196395874023
    9. ' (' → logprob: -17.139196395874023
    10. '_input' → logprob: -17.389196395874023

Token 884: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6114378571510315
    2. '):' → logprob: -1.3614377975463867
    3. ':' → logprob: -2.7364377975463867
    4. ':
' → logprob: -2.8614377975463867
    5. ' or' → logprob: -2.9864377975463867
    6. ')' → logprob: -3.8614377975463867
    7. '       ' → logprob: -5.361437797546387
    8. '   ' → logprob: -6.236437797546387
    9. '           ' → logprob: -8.611437797546387
    10. '():
' → logprob: -8.986437797546387

Token 885: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09053733944892883
    2. '       ' → logprob: -2.4655373096466064
    3. 'break' → logprob: -6.8405375480651855
    4. ' break' → logprob: -8.340537071228027
    5. '   ' → logprob: -8.465537071228027
    6. '```' → logprob: -9.965537071228027
    7. ',' → logprob: -12.340537071228027
    8. '	break' → logprob: -12.715537071228027
    9. '		' → logprob: -12.840537071228027
    10. ' ' → logprob: -12.965537071228027

Token 886: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011704777367413044
    2. 'return' → logprob: -5.261704921722412
    3. ' break' → logprob: -5.261704921722412
    4. '       ' → logprob: -6.761704921722412
    5. '           ' → logprob: -10.011704444885254
    6. '	break' → logprob: -10.136704444885254
    7. ' return' → logprob: -11.261704444885254
    8. '```' → logprob: -12.136704444885254
    9. '   ' → logprob: -13.136704444885254
    10. '               ' → logprob: -14.386704444885254

Token 887: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021929678041487932
    2. '   ' → logprob: -6.502192974090576
    3. 'n' → logprob: -8.877192497253418
    4. '
' → logprob: -8.877192497253418
    5. '```' → logprob: -9.002192497253418
    6. '        
' → logprob: -9.127192497253418
    7. ',' → logprob: -10.252192497253418
    8. '  
' → logprob: -10.502192497253418
    9. '<|end|>' → logprob: -10.627192497253418
    10. '           ' → logprob: -10.877192497253418

Token 888: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2631738781929016
    2. '   ' → logprob: -1.5131738185882568
    3. 'n' → logprob: -4.888174057006836
    4. ' n' → logprob: -6.388174057006836
    5. '```' → logprob: -6.763174057006836
    6. ' line' → logprob: -8.263174057006836
    7. 'line' → logprob: -9.013174057006836
    8. '   ' → logprob: -9.263174057006836
    9. '        
' → logprob: -9.763174057006836
    10. '	   ' → logprob: -9.888174057006836

Token 889: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5493214130401611
    2. 'n' (adapté à ' n') → logprob: -1.0493214130401611
    3. ' line' → logprob: -3.299321413040161
    4. '   ' → logprob: -3.549321413040161
    5. ' n' → logprob: -5.049321174621582
    6. 't' → logprob: -9.174321174621582
    7. '       ' → logprob: -9.674321174621582
    8. 'if' → logprob: -10.049321174621582
    9. 'N' → logprob: -10.174321174621582
    10. 'k' → logprob: -10.299321174621582

Token 890: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327489018440247
    2. ' =' → logprob: -0.7577489018440247
    3. '   ' → logprob: -9.6327486038208
    4. '=int' → logprob: -10.1327486038208
    5. ',' → logprob: -11.3827486038208
    6. ')' → logprob: -11.3827486038208
    7. '=line' → logprob: -11.6327486038208
    8. '       ' → logprob: -13.2577486038208
    9. ' =
' → logprob: -13.7577486038208
    10. ' ' → logprob: -13.7577486038208

Token 891: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861456897109747
    2. ' int' → logprob: -4.758614540100098
    3. '  ' → logprob: -19.633615493774414
    4. ' ' → logprob: -19.758615493774414
    5. '=int' → logprob: -20.133615493774414
    6. '(int' → logprob: -20.258615493774414
    7. '[int' → logprob: -20.758615493774414
    8. '	int' → logprob: -21.508615493774414
    9. '   ' → logprob: -21.508615493774414
    10. '<int' → logprob: -23.008615493774414

Token 892: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004517585039138794
    2. '(' → logprob: -5.754517555236816
    3. 'input' → logprob: -6.629517555236816
    4. ' (' → logprob: -11.629517555236816
    5. ' input' → logprob: -11.754517555236816
    6. '('' → logprob: -14.254517555236816
    7. '(
' → logprob: -15.379517555236816
    8. ')' → logprob: -15.504517555236816
    9. '=input' → logprob: -16.629518508911133
    10. ',input' → logprob: -16.629518508911133

Token 893: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.061054359131958e-06
    2. ')[' → logprob: -12.250007629394531
    3. 'idx' → logprob: -13.375007629394531
    4. ')' → logprob: -13.875007629394531
    5. '   ' → logprob: -15.375007629394531
    6. ' [' → logprob: -15.750007629394531
    7. '[' → logprob: -15.750007629394531
    8. '```' → logprob: -16.12500762939453
    9. '][' → logprob: -17.62500762939453
    10. ' idx' → logprob: -18.12500762939453

Token 894: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06955019384622574
    2. '])
' → logprob: -2.8195502758026123
    3. ']);' → logprob: -4.944550037384033
    4. '].' → logprob: -8.069550514221191
    5. '])+' → logprob: -9.569550514221191
    6. ']' → logprob: -11.069550514221191
    7. ' ])' → logprob: -11.819550514221191
    8. '])-' → logprob: -11.819550514221191
    9. '])
' → logprob: -12.319550514221191
    10. ']+' → logprob: -12.569550514221191

Token 895: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.06441937386989594
    2. ' idx' → logprob: -3.1894192695617676
    3. '[idx' → logprob: -5.189419269561768
    4. 'if' → logprob: -5.564419269561768
    5. '<|end|>' → logprob: -6.189419269561768
    6. '	idx' → logprob: -6.189419269561768
    7. '```' → logprob: -6.189419269561768
    8. '
' → logprob: -6.314419269561768
    9. '\n' → logprob: -6.564419269561768
    10. ' if' → logprob: -6.814419269561768

Token 897: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018175693228840828
    2. ' +=' → logprob: -4.0181756019592285
    3. '+' → logprob: -11.143176078796387
    4. '=' → logprob: -11.643176078796387
    5. ']+=' → logprob: -13.518176078796387
    6. '```' → logprob: -14.143176078796387
    7. '+='' → logprob: -15.643176078796387
    8. '+="' → logprob: -15.768176078796387
    9. '++' → logprob: -16.14317512512207
    10. ')' → logprob: -17.51817512512207

Token 898: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -21.125158309936523
    4. '+' → logprob: -24.500158309936523
    5. '１' → logprob: -24.750158309936523
    6. '=' → logprob: -24.750158309936523
    7. '
' → logprob: -25.000158309936523
    8. '0' → logprob: -25.000158309936523
    9. '   ' → logprob: -25.250158309936523
    10. '۱' → logprob: -25.375158309936523

Token 899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '```' → logprob: -23.125
    4. '
' → logprob: -25.5
    5. '１' → logprob: -25.875
    6. '   ' → logprob: -26.375
    7. '0' → logprob: -26.5
    8. '۱' → logprob: -27.125
    9. '१' → logprob: -27.875
    10. '``' → logprob: -27.875

Token 900: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09146812558174133
    2. ' if' → logprob: -3.091468095779419
    3. 'if' → logprob: -3.216468095779419
    4. '<|end|>' → logprob: -6.466468334197998
    5. '   ' → logprob: -8.84146785736084
    6. '```' → logprob: -9.84146785736084
    7. '	if' → logprob: -10.21646785736084
    8. '        
' → logprob: -10.34146785736084
    9. '           ' → logprob: -11.46646785736084
    10. 'If' → logprob: -11.71646785736084

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3726697564125061
    2. 'if' → logprob: -1.2476696968078613
    3. ' if' → logprob: -3.9976696968078613
    4. '   ' → logprob: -5.372669696807861
    5. '```' → logprob: -7.247669696807861
    6. '<|end|>' → logprob: -9.12267017364502
    7. '        
' → logprob: -10.37267017364502
    8. '	if' → logprob: -10.49767017364502
    9. '           ' → logprob: -10.74767017364502
    10. ' ' → logprob: -12.24767017364502

Token 902: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008298007771372795
    2. 'anchors' → logprob: -4.883297920227051
    3. '       ' → logprob: -8.13329792022705
    4. ' if' → logprob: -8.38329792022705
    5. '```' → logprob: -9.00829792022705
    6. '   ' → logprob: -11.13329792022705
    7. 'rop' → logprob: -11.25829792022705
    8. 'ifs' → logprob: -12.13329792022705
    9. 'anch' → logprob: -12.38329792022705
    10. '``' → logprob: -13.00829792022705

Token 903: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03804183006286621
    2. ' n' → logprob: -3.288041830062866
    3. '0' → logprob: -15.538042068481445
    4. '	n' → logprob: -16.163042068481445
    5. '_n' → logprob: -17.788042068481445
    6. ' ' → logprob: -18.038042068481445
    7. '(n' → logprob: -18.163042068481445
    8. '$n' → logprob: -18.788042068481445
    9. ' not' → logprob: -19.288042068481445
    10. ')n' → logprob: -19.788042068481445

Token 904: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760186314582825
    2. ' ==' → logprob: -0.8260186314582825
    3. '=' → logprob: -10.451018333435059
    4. '<=' → logprob: -10.576018333435059
    5. ')==' → logprob: -11.576018333435059
    6. ' <=' → logprob: -12.576018333435059
    7. '===' → logprob: -12.576018333435059
    8. ']==' → logprob: -12.826018333435059
    9. '()==' → logprob: -12.826018333435059
    10. '==
' → logprob: -14.326018333435059

Token 905: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '=' → logprob: -21.625001907348633
    4. '-' → logprob: -22.750001907348633
    5. '۰' → logprob: -22.875001907348633
    6. '   ' → logprob: -24.000001907348633
    7. '```' → logprob: -24.375001907348633
    8. '  ' → logprob: -25.000001907348633
    9. '０' → logprob: -25.125001907348633
    10. 's' → logprob: -25.250001907348633

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '-' → logprob: -16.875
    4. '=' → logprob: -22.25
    5. '```' → logprob: -22.625
    6. '۰' → logprob: -23.375
    7. 'o' → logprob: -24.125
    8. '
' → logprob: -24.375
    9. '٠' → logprob: -24.5
    10. '   ' → logprob: -24.5

Token 907: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20151576399803162
    2. ':' → logprob: -1.701515793800354
    3. '       ' → logprob: -10.326516151428223
    4. '           ' → logprob: -10.451516151428223
    5. '   ' → logprob: -10.576516151428223
    6. ':return' → logprob: -11.326516151428223
    7. ':
' → logprob: -13.826516151428223
    8. '):
' → logprob: -14.076516151428223
    9. '():
' → logprob: -15.076516151428223
    10. '          ' → logprob: -15.701516151428223

Token 908: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38791486620903015
    2. '       ' → logprob: -1.1379148960113525
    3. '   ' → logprob: -7.762914657592773
    4. 'break' → logprob: -7.762914657592773
    5. ' break' → logprob: -8.887914657592773
    6. '	break' → logprob: -11.012914657592773
    7. '		' → logprob: -11.387914657592773
    8. '```' → logprob: -11.762914657592773
    9. '	       ' → logprob: -12.387914657592773
    10. '               ' → logprob: -12.512914657592773

Token 909: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.008230387233197689
    2. 'return' → logprob: -5.508230209350586
    3. ' break' → logprob: -5.508230209350586
    4. '           ' → logprob: -10.008230209350586
    5. '       ' → logprob: -10.258230209350586
    6. '	break' → logprob: -12.008230209350586
    7. ' return' → logprob: -12.633230209350586
    8. '               ' → logprob: -15.258230209350586
    9. '_break' → logprob: -15.758230209350586
    10. '   ' → logprob: -16.133230209350586

Token 910: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007956892368383706
    2. '   ' → logprob: -7.625795841217041
    3. 'anchors' → logprob: -9.000795364379883
    4. '```' → logprob: -9.125795364379883
    5. '        
' → logprob: -10.625795364379883
    6. 'points' → logprob: -11.500795364379883
    7. '
' → logprob: -11.750795364379883
    8. '           ' → logprob: -12.250795364379883
    9. 'ro' → logprob: -12.625795364379883
    10. '<|end|>' → logprob: -12.875795364379883

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001018398441374302
    2. '   ' → logprob: -8.126018524169922
    3. '<|end|>' → logprob: -8.126018524169922
    4. '```' → logprob: -8.626018524169922
    5. '        
' → logprob: -9.376018524169922
    6. ' ropes' → logprob: -10.376018524169922
    7. ' heights' → logprob: -11.001018524169922
    8. 'ro' → logprob: -11.376018524169922
    9. 'points' → logprob: -11.501018524169922
    10. 'rope' → logprob: -11.626018524169922

Token 912: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' (adapté à ' anchors') → logprob: -0.0004982246900908649
    2. '       ' → logprob: -8.125497817993164
    3. ' anchors' → logprob: -8.875497817993164
    4. 'anch' → logprob: -10.125497817993164
    5. '   ' → logprob: -11.750497817993164
    6. '```' → logprob: -12.000497817993164
    7. 'anchor' → logprob: -12.500497817993164
    8. 'roots' → logprob: -14.000497817993164
    9. '        
' → logprob: -14.375497817993164
    10. '           ' → logprob: -14.375497817993164

Token 913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386892169713974
    2. ' =' → logprob: -1.1368921995162964
    3. '   ' → logprob: -12.011892318725586
    4. ',' → logprob: -12.136892318725586
    5. '=[]' → logprob: -12.386892318725586
    6. '.append' → logprob: -13.511892318725586
    7. '[]' → logprob: -14.636892318725586
    8. '=
' → logprob: -15.011892318725586
    9. '=[]
' → logprob: -15.011892318725586
    10. '<|end|>' → logprob: -15.136892318725586

Token 914: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011796205304563046
    2. '[]
' → logprob: -5.011795997619629
    3. '[' → logprob: -5.511795997619629
    4. ' []' → logprob: -7.261795997619629
    5. '[int' → logprob: -9.136795997619629
    6. '[array' → logprob: -10.011795997619629
    7. '[input' → logprob: -10.636795997619629
    8. '[str' → logprob: -10.761795997619629
    9. '[data' → logprob: -11.261795997619629
    10. '[class' → logprob: -11.261795997619629

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023147180676460266
    2. ' for' → logprob: -4.273147106170654
    3. 'for' → logprob: -5.023147106170654
    4. '<|end|>' → logprob: -6.898147106170654
    5. '```' → logprob: -7.648147106170654
    6. '	for' → logprob: -7.898147106170654
    7. '	' → logprob: -8.773147583007812
    8. '	       ' → logprob: -9.398147583007812
    9. '	   ' → logprob: -9.648147583007812
    10. 'tokens' → logprob: -10.023147583007812

Token 916: ' ropes' (ID: 110596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04672994092106819
    2. ' for' → logprob: -3.1717300415039062
    3. '       ' → logprob: -5.671730041503906
    4. 'rop' → logprob: -8.921730041503906
    5. ' ropes' → logprob: -9.171730041503906
    6. '```' → logprob: -10.171730041503906
    7. '	for' → logprob: -13.671730041503906
    8. 'rope' → logprob: -13.796730041503906
    9. '   ' → logprob: -14.046730041503906
    10. 'while' → logprob: -14.421730041503906

Token 917: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2705916166305542
    2. '.append' → logprob: -1.8955916166305542
    3. ' =' → logprob: -2.7705917358398438
    4. '.extend' → logprob: -4.020591735839844
    5. '.' → logprob: -6.020591735839844
    6. '=[]' → logprob: -6.770591735839844
    7. '+=' → logprob: -7.020591735839844
    8. 'for' → logprob: -7.520591735839844
    9. '   ' → logprob: -7.645591735839844
    10. ' +=' → logprob: -8.020591735839844

Token 918: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0351958274841309
    2. '[input' → logprob: -1.5351958274841309
    3. '[]
' → logprob: -1.7851958274841309
    4. '[list' → logprob: -2.035195827484131
    5. '[' → logprob: -2.785195827484131
    6. '[n' → logprob: -3.785195827484131
    7. ' [' → logprob: -3.910195827484131
    8. ' []' → logprob: -4.785195827484131
    9. 'list' → logprob: -4.910195827484131
    10. '[int' → logprob: -5.285195827484131

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005109118297696114
    2. ' for' → logprob: -5.7551093101501465
    3. 'for' → logprob: -6.3801093101501465
    4. '	for' → logprob: -9.505108833312988
    5. '	' → logprob: -10.255108833312988
    6. '<|end|>' → logprob: -10.380108833312988
    7. '```' → logprob: -10.380108833312988
    8. '   ' → logprob: -10.630108833312988
    9. '	   ' → logprob: -10.755108833312988
    10. '	       ' → logprob: -12.130108833312988

Token 920: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019066141918301582
    2. ' for' → logprob: -4.019066333770752
    3. '       ' → logprob: -7.019066333770752
    4. '	for' → logprob: -11.394065856933594
    5. '   ' → logprob: -11.894065856933594
    6. '```' → logprob: -12.769065856933594
    7. ' ' → logprob: -15.644065856933594
    8. '           ' → logprob: -17.144065856933594
    9. 'while' → logprob: -17.394065856933594
    10. '``' → logprob: -17.519065856933594

Token 921: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015089125372469425
    2. ' _' → logprob: -7.501508712768555
    3. '_i' → logprob: -7.626508712768555
    4. 'i' → logprob: -7.751508712768555
    5. ' i' → logprob: -10.376508712768555
    6. '_in' → logprob: -12.501508712768555
    7. ' in' → logprob: -13.001508712768555
    8. '_range' → logprob: -14.501508712768555
    9. '_=' → logprob: -16.251508712768555
    10. ' ' → logprob: -16.501508712768555

Token 922: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2134130597114563
    2. 'range' → logprob: -2.2134130001068115
    3. '_' → logprob: -3.0884130001068115
    4. ' in' → logprob: -3.3384130001068115
    5. ' range' → logprob: -6.838413238525391
    6. 'i' → logprob: -7.838413238525391
    7. '0' → logprob: -9.58841323852539
    8. 's' → logprob: -9.71341323852539
    9. ' ' → logprob: -10.08841323852539
    10. 'n' → logprob: -10.58841323852539

Token 923: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '_range' → logprob: -19.125036239624023
    4. '_' → logprob: -19.250036239624023
    5. '[' → logprob: -19.750036239624023
    6. '	range' → logprob: -20.000036239624023
    7. '(range' → logprob: -20.125036239624023
    8. 'rang' → logprob: -21.125036239624023
    9. 'r' → logprob: -21.750036239624023
    10. '```' → logprob: -22.250036239624023

Token 924: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13454197347164154
    2. '(n' → logprob: -2.1345419883728027
    3. ' n' → logprob: -4.884541988372803
    4. 'range' → logprob: -11.259541511535645
    5. '_n' → logprob: -12.634541511535645
    6. ' range' → logprob: -13.009541511535645
    7. '	n' → logprob: -13.259541511535645
    8. ' (' → logprob: -13.634541511535645
    9. '(' → logprob: -14.509541511535645
    10. '   ' → logprob: -15.634541511535645

Token 925: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04362452030181885
    2. '):' → logprob: -3.1686244010925293
    3. '       ' → logprob: -8.668624877929688
    4. ':
' → logprob: -8.793624877929688
    5. '():
' → logprob: -8.918624877929688
    6. ':' → logprob: -9.918624877929688
    7. '   ' → logprob: -10.043624877929688
    8. '):
' → logprob: -10.918624877929688
    9. '```' → logprob: -11.168624877929688
    10. '           ' → logprob: -11.543624877929688

Token 926: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25199201703071594
    2. '```' → logprob: -2.2519919872283936
    3. '   ' → logprob: -3.3769919872283936
    4. ' line' → logprob: -3.6269919872283936
    5. '       ' → logprob: -4.126992225646973
    6. 'tokens' → logprob: -4.376992225646973
    7. '	       ' → logprob: -5.251992225646973
    8. ' tokens' → logprob: -5.376992225646973
    9. '<|end|>' → logprob: -5.501992225646973
    10. '	   ' → logprob: -6.001992225646973

Token 927: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6935080885887146
    2. ' x' → logprob: -0.6935080885887146
    3. ' parts' → logprob: -8.31850814819336
    4. ' line' → logprob: -9.44350814819336
    5. 'a' → logprob: -11.19350814819336
    6. 'line' → logprob: -11.56850814819336
    7. 'parts' → logprob: -11.81850814819336
    8. ' a' → logprob: -12.81850814819336
    9. 'xy' → logprob: -13.56850814819336
    10. '	x' → logprob: -13.94350814819336

Token 928: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.16089823842048645
    2. ',' → logprob: -1.910898208618164
    3. ' ,' → logprob: -7.910898208618164
    4. 'y' → logprob: -8.160898208618164
    5. ' y' → logprob: -11.785898208618164
    6. '_,' → logprob: -12.285898208618164
    7. ',Y' → logprob: -12.660898208618164
    8. ',line' → logprob: -13.035898208618164
    9. ',a' → logprob: -14.160898208618164
    10. ',int' → logprob: -14.660898208618164

Token 929: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.4785751402378082
    2. ',' → logprob: -1.3535751104354858
    3. ',w' → logprob: -3.3535752296447754
    4. ',h' → logprob: -3.3535752296447754
    5. ',z' → logprob: -4.478575229644775
    6. '=' → logprob: -4.603575229644775
    7. ',s' → logprob: -4.978575229644775
    8. ',r' → logprob: -5.103575229644775
    9. ',length' → logprob: -5.603575229644775
    10. ',v' → logprob: -5.728575229644775

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026360562071204185
    2. ' =' → logprob: -3.651360511779785
    3. '=line' → logprob: -10.151360511779785
    4. '=int' → logprob: -11.401360511779785
    5. '=input' → logprob: -12.276360511779785
    6. ',' → logprob: -12.401360511779785
    7. ' ' → logprob: -14.901360511779785
    8. '   ' → logprob: -15.026360511779785
    9. ',line' → logprob: -16.2763614654541
    10. '=sys' → logprob: -16.9013614654541

Token 931: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0024970639497041702
    2. ' map' → logprob: -6.00249719619751
    3. 'list' → logprob: -10.752496719360352
    4. 'tuple' → logprob: -17.12749671936035
    5. '(map' → logprob: -17.12749671936035
    6. ' list' → logprob: -17.62749671936035
    7. '	map' → logprob: -17.75249671936035
    8. 'input' → logprob: -19.00249671936035
    9. '.map' → logprob: -20.25249671936035
    10. '[' → logprob: -20.37749671936035

Token 932: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007664239965379238
    2. 'int' → logprob: -4.882664203643799
    3. '[int' → logprob: -10.382664680480957
    4. '(float' → logprob: -11.507664680480957
    5. '<int' → logprob: -12.007664680480957
    6. '=int' → logprob: -12.507664680480957
    7. ' int' → logprob: -13.507664680480957
    8. '(str' → logprob: -13.632664680480957
    9. '(lambda' → logprob: -13.632664680480957
    10. '(' → logprob: -13.757664680480957

Token 933: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.47468069195747375
    2. ',' → logprob: -0.9746806621551514
    3. 'input' → logprob: -7.5996809005737305
    4. '(input' → logprob: -9.22468090057373
    5. ' ,' → logprob: -12.84968090057373
    6. ' input' → logprob: -13.84968090057373
    7. '[input' → logprob: -15.59968090057373
    8. '(),' → logprob: -16.474679946899414
    9. '   ' → logprob: -16.599679946899414
    10. '(' → logprob: -16.599679946899414

Token 934: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011705794604495168
    2. ' input' → logprob: -6.751170635223389
    3. '(input' → logprob: -15.00117015838623
    4. ',input' → logprob: -17.501171112060547
    5. ')' → logprob: -17.626171112060547
    6. '[input' → logprob: -18.501171112060547
    7. '=input' → logprob: -18.876171112060547
    8. 'map' → logprob: -19.126171112060547
    9. '	input' → logprob: -19.501171112060547
    10. '
' → logprob: -19.876171112060547

Token 935: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2664456789934775e-06
    2. 'idx' → logprob: -13.625000953674316
    3. '[' → logprob: -18.000001907348633
    4. '(idx' → logprob: -18.500001907348633
    5. '[
' → logprob: -18.625001907348633
    6. ' idx' → logprob: -19.000001907348633
    7. '	idx' → logprob: -19.125001907348633
    8. '[i' → logprob: -19.625001907348633
    9. '[id' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.500001907348633

Token 936: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06251543015241623
    2. '[idx' → logprob: -2.8125154972076416
    3. ']' → logprob: -8.312515258789062
    4. '.split' → logprob: -8.937515258789062
    5. 'idx' → logprob: -10.187515258789062
    6. '.strip' → logprob: -10.437515258789062
    7. '][' → logprob: -10.562515258789062
    8. ' ].' → logprob: -10.687515258789062
    9. '(idx' → logprob: -11.187515258789062
    10. '   ' → logprob: -12.062515258789062

Token 937: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20144949853420258
    2. 'strip' → logprob: -1.7014495134353638
    3. 'rstrip' → logprob: -10.326449394226074
    4. '(split' → logprob: -13.826449394226074
    5. 'idx' → logprob: -14.076449394226074
    6. '.strip' → logprob: -14.201449394226074
    7. ' split' → logprob: -15.326449394226074
    8. '[idx' → logprob: -15.326449394226074
    9. '(strip' → logprob: -15.701449394226074
    10. '.split' → logprob: -16.07645034790039

Token 938: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008007016032934189
    2. '()' → logprob: -5.008007049560547
    3. '()[' → logprob: -7.633007049560547
    4. '().' → logprob: -7.758007049560547
    5. '(idx' → logprob: -8.508007049560547
    6. '[idx' → logprob: -9.633007049560547
    7. '())
' → logprob: -9.883007049560547
    8. ')' → logprob: -10.508007049560547
    9. '()))' → logprob: -11.508007049560547
    10. '();)' → logprob: -12.258007049560547

Token 939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01730169542133808
    2. 'idx' → logprob: -5.142301559448242
    3. '[idx' → logprob: -5.892301559448242
    4. '       ' → logprob: -6.142301559448242
    5. '<|end|>' → logprob: -6.142301559448242
    6. '<|end|>' → logprob: -7.142301559448242
    7. '               ' → logprob: -7.642301559448242
    8. '	idx' → logprob: -7.767301559448242
    9. '```' → logprob: -8.017301559448242
    10. '   ' → logprob: -8.142301559448242

Token 940: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.018828576430678368
    2. 'anchors' → logprob: -4.143828392028809
    3. ' idx' → logprob: -6.143828392028809
    4. '	idx' → logprob: -8.143828392028809
    5. ' anchors' → logprob: -8.643828392028809
    6. '       ' → logprob: -10.268828392028809
    7. '           ' → logprob: -10.643828392028809
    8. '_idx' → logprob: -10.893828392028809
    9. ' ropes' → logprob: -10.893828392028809
    10. '            
' → logprob: -11.018828392028809

Token 941: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00283210352063179
    2. ' +=' → logprob: -5.877831935882568
    3. '+' → logprob: -11.752832412719727
    4. '```' → logprob: -12.002832412719727
    5. ']+=' → logprob: -12.252832412719727
    6. '++' → logprob: -12.502832412719727
    7. '+='' → logprob: -13.127832412719727
    8. '+="' → logprob: -13.627832412719727
    9. '=' → logprob: -14.002832412719727
    10. '   ' → logprob: -15.377832412719727

Token 942: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.7500057220459
    4. '   ' → logprob: -19.6250057220459
    5. '=' → logprob: -19.7500057220459
    6. '+' → logprob: -19.7500057220459
    7. '<|end|>' → logprob: -19.7500057220459
    8. '۱' → logprob: -21.1250057220459
    9. '
' → logprob: -21.1250057220459
    10. '(' → logprob: -21.1250057220459

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.250001907348633
    4. '+' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '`' → logprob: -21.000001907348633
    7. '=' → logprob: -21.125001907348633
    8. '１' → logprob: -21.125001907348633
    9. '۱' → logprob: -21.437501907348633
    10. '``' → logprob: -22.000001907348633

Token 944: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20698516070842743
    2. '           ' → logprob: -1.7069851160049438
    3. '   ' → logprob: -6.456984996795654
    4. ',' → logprob: -6.956984996795654
    5. ' ropes' → logprob: -7.456984996795654
    6. '<|end|>' → logprob: -7.706984996795654
    7. '        
' → logprob: -8.081985473632812
    8. '		' → logprob: -8.206985473632812
    9. '_ro' → logprob: -8.206985473632812
    10. '	' → logprob: -8.206985473632812

Token 945: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2670309245586395
    2. '           ' → logprob: -1.517030954360962
    3. ' ropes' → logprob: -4.517030715942383
    4. '   ' → logprob: -6.017030715942383
    5. '```' → logprob: -7.642030715942383
    6. '<|end|>' → logprob: -7.642030715942383
    7. '	       ' → logprob: -8.642030715942383
    8. 'anchors' → logprob: -9.267030715942383
    9. 'rop' → logprob: -9.767030715942383
    10. '        
' → logprob: -10.142030715942383

Token 946: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' (adapté à ' anchors') → logprob: -0.16068023443222046
    2. ' anchors' → logprob: -1.9106802940368652
    3. 'rop' → logprob: -8.285679817199707
    4. ' ropes' → logprob: -8.660679817199707
    5. '   ' → logprob: -11.410679817199707
    6. 'anch' → logprob: -11.910679817199707
    7. 'anchor' → logprob: -12.035679817199707
    8. 'x' → logprob: -13.785679817199707
    9. '```' → logprob: -13.910679817199707
    10. 'rope' → logprob: -14.035679817199707

Token 947: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005397276487201452
    2. '.' → logprob: -5.255397319793701
    3. '.app' → logprob: -9.380396842956543
    4. '.ap' → logprob: -10.130396842956543
    5. ').' → logprob: -11.130396842956543
    6. ' .' → logprob: -11.505396842956543
    7. '​.' → logprob: -12.880396842956543
    8. '.extend' → logprob: -13.130396842956543
    9. '.setdefault' → logprob: -13.380396842956543
    10. '.Append' → logprob: -13.755396842956543

Token 948: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03627237677574158
    2. '(' → logprob: -3.5362722873687744
    3. '(x' → logprob: -5.0362725257873535
    4. ' (' → logprob: -12.911272048950195
    5. '[(' → logprob: -15.661272048950195
    6. '(t' → logprob: -17.161272048950195
    7. '   ' → logprob: -17.536272048950195
    8. '```' → logprob: -17.786272048950195
    9. '(tuple' → logprob: -17.786272048950195
    10. '([' → logprob: -18.786272048950195

Token 949: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.250000953674316
    3. '(x' → logprob: -15.875000953674316
    4. ')x' → logprob: -21.0
    5. ',x' → logprob: -22.5
    6. '{x' → logprob: -23.0
    7. '	x' → logprob: -23.75
    8. '"x' → logprob: -24.0
    9. '$x' → logprob: -24.625
    10. ' (' → logprob: -24.625

Token 950: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.474289208650589
    2. ',' → logprob: -0.9742891788482666
    3. ' ,' → logprob: -8.474288940429688
    4. ',
' → logprob: -13.849288940429688
    5. '<|end|>' → logprob: -14.224288940429688
    6. ',Y' → logprob: -14.599288940429688
    7. ',user' → logprob: -14.724288940429688
    8. 'y' → logprob: -15.224288940429688
    9. ',x' → logprob: -15.849288940429688
    10. ' y' → logprob: -16.974288940429688

Token 951: '))
' (ID: 2210)
  Prédit: ',l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.2503355145454407
    2. ',' → logprob: -2.000335454940796
    3. '))' → logprob: -2.500335454940796
    4. '))
' → logprob: -5.625335693359375
    5. ' ,' → logprob: -8.000335693359375
    6. ' ))' → logprob: -9.750335693359375
    7. ',ll' → logprob: -10.875335693359375
    8. 'l' → logprob: -11.125335693359375
    9. '))

' → logprob: -11.625335693359375
    10. ')),' → logprob: -11.625335693359375

Token 952: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.669480562210083
    2. '           ' → logprob: -0.794480562210083
    3. 'rop' → logprob: -3.794480562210083
    4. ' ropes' → logprob: -4.544480323791504
    5. '   ' → logprob: -6.419480323791504
    6. '```' → logprob: -6.919480323791504
    7. '     ' → logprob: -9.544480323791504
    8. '               ' → logprob: -10.044480323791504
    9. '        
' → logprob: -10.544480323791504
    10. 'rope' → logprob: -10.544480323791504

Token 953: ' ropes' (ID: 110596)
  Prédit: 'rop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rop' → logprob: -0.011166313663125038
    2. ' ropes' → logprob: -4.511166095733643
    3. 'rops' → logprob: -9.7611665725708
    4. '   ' → logprob: -11.3861665725708
    5. '           ' → logprob: -11.3861665725708
    6. '       ' → logprob: -11.3861665725708
    7. 'rope' → logprob: -11.3861665725708
    8. ' ' → logprob: -12.7611665725708
    9. '```' → logprob: -13.2611665725708
    10. 'ros' → logprob: -13.5111665725708

Token 954: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005642342148348689
    2. '.' → logprob: -7.500564098358154
    3. '.app' → logprob: -11.750564575195312
    4. '.ap' → logprob: -12.875564575195312
    5. ' .' → logprob: -14.250564575195312
    6. '.push' → logprob: -17.000564575195312
    7. ').' → logprob: -17.125564575195312
    8. '.extend' → logprob: -17.625564575195312
    9. 'append' → logprob: -17.625564575195312
    10. '.Append' → logprob: -18.000564575195312

Token 955: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2519643008708954
    2. 'l' → logprob: -1.5019643306732178
    3. ' l' → logprob: -10.376964569091797
    4. '(' → logprob: -12.876964569091797
    5. ' (' → logprob: -14.626964569091797
    6. '	l' → logprob: -14.876964569091797
    7. '(int' → logprob: -14.876964569091797
    8. '(
' → logprob: -15.251964569091797
    9. 'int' → logprob: -17.251964569091797
    10. '(float' → logprob: -17.251964569091797

Token 956: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.392824874026701e-05
    2. ')
' → logprob: -10.37503433227539
    3. '))' → logprob: -14.12503433227539
    4. ' )' → logprob: -14.12503433227539
    5. '       ' → logprob: -14.62503433227539
    6. '   ' → logprob: -15.62503433227539
    7. '<|end|>' → logprob: -15.62503433227539
    8. ')return' → logprob: -16.25003433227539
    9. '<|end|>' → logprob: -17.00003433227539
    10. '           ' → logprob: -17.50003433227539

Token 957: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37809261679649353
    2. '   ' → logprob: -1.378092646598816
    3. '
' → logprob: -3.1280925273895264
    4. '```' → logprob: -4.6280927658081055
    5. '<|end|>' → logprob: -4.8780927658081055
    6. '        
' → logprob: -7.7530927658081055
    7. 'def' → logprob: -8.253092765808105
    8. '    
' → logprob: -8.503092765808105
    9. '           ' → logprob: -9.128092765808105
    10. '<|end|>' → logprob: -9.753092765808105

Token 958: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.6621285676956177
    2. 'h' → logprob: -2.162128448486328
    3. 'lo' → logprob: -2.412128448486328
    4. ' lo' → logprob: -2.537128448486328
    5. ' low' → logprob: -3.037128448486328
    6. '   ' → logprob: -3.037128448486328
    7. 'left' → logprob: -3.537128448486328
    8. 'l' → logprob: -3.537128448486328
    9. ' h' → logprob: -4.162128448486328
    10. ' left' → logprob: -4.662128448486328

Token 959: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06541935354471207
    2. ',' → logprob: -3.1904194355010986
    3. '=' → logprob: -3.8154194355010986
    4. ' ,' → logprob: -8.94041919708252
    5. ' ' → logprob: -11.94041919708252
    6. '<|end|>' → logprob: -13.69041919708252
    7. ')' → logprob: -14.06541919708252
    8. '  ' → logprob: -14.69041919708252
    9. '```' → logprob: -14.69041919708252
    10. '   ' → logprob: -14.94041919708252

Token 960: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.182190554682165e-05
    2. ' ' → logprob: -9.750061988830566
    3. '1' → logprob: -12.625061988830566
    4. '```' → logprob: -16.75006103515625
    5. '   ' → logprob: -17.87506103515625
    6. '10' → logprob: -17.87506103515625
    7. '2' → logprob: -18.12506103515625
    8. '=' → logprob: -18.75006103515625
    9. 'max' → logprob: -18.87506103515625
    10. '-' → logprob: -19.12506103515625

Token 961: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. '1' → logprob: -10.875021934509277
    3. ' ' → logprob: -13.125021934509277
    4. 'max' → logprob: -15.500021934509277
    5. '-' → logprob: -16.00002098083496
    6. '10' → logprob: -17.06252098083496
    7. '```' → logprob: -17.43752098083496
    8. '   ' → logprob: -17.93752098083496
    9. 'float' → logprob: -18.06252098083496
    10. 'min' → logprob: -18.18752098083496

Token 962: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07983049750328064
    2. ' 
' → logprob: -2.7048304080963135
    3. '
' → logprob: -5.079830646514893
    4. '  
' → logprob: -6.579830646514893
    5. '<|end|>' → logprob: -6.829830646514893
    6. '    
' → logprob: -8.204830169677734
    7. ',' → logprob: -8.829830169677734
    8. '0' → logprob: -8.954830169677734
    9. '```' → logprob: -8.954830169677734
    10. ' ' → logprob: -9.204830169677734

Token 963: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '5' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '
' → logprob: -17.375
    5. '000' → logprob: -17.625
    6. '.' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. ' 
' → logprob: -19.625
    9. '00' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 964: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1265518218278885
    2. ' 
' → logprob: -2.751551866531372
    3. ' high' → logprob: -3.501551866531372
    4. '<|end|>' → logprob: -4.876551628112793
    5. 'high' → logprob: -5.001551628112793
    6. ',' → logprob: -5.251551628112793
    7. '  
' → logprob: -6.751551628112793
    8. '(high' → logprob: -7.001551628112793
    9. '```' → logprob: -7.001551628112793
    10. '#' → logprob: -7.876551628112793

Token 965: '       ' (ID: 309)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.09350955486297607
    2. 'high' → logprob: -2.8435096740722656
    3. '
' → logprob: -4.343509674072266
    4. ' 
' → logprob: -4.343509674072266
    5. ',' → logprob: -6.218509674072266
    6. '```' → logprob: -6.968509674072266
    7. '<|end|>' → logprob: -7.343509674072266
    8. '(high' → logprob: -7.843509674072266
    9. ' ,' → logprob: -8.093509674072266
    10. '_high' → logprob: -8.218509674072266

Token 966: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.2523218095302582
    2. ' high' → logprob: -1.5023218393325806
    3. ' ' → logprob: -8.75232219696045
    4. '100' → logprob: -9.25232219696045
    5. '1' → logprob: -9.50232219696045
    6. '10' → logprob: -10.87732219696045
    7. 'max' → logprob: -11.62732219696045
    8. '200' → logprob: -12.25232219696045
    9. '50' → logprob: -12.50232219696045
    10. '20' → logprob: -12.50232219696045

Token 967: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028083212673664093
    2. '=' → logprob: -5.877808094024658
    3. ' ' → logprob: -13.627808570861816
    4. '<|end|>' → logprob: -14.002808570861816
    5. ' =
' → logprob: -15.377808570861816
    6. ':' → logprob: -15.502808570861816
    7. ' +=' → logprob: -15.502808570861816
    8. '```' → logprob: -15.877808570861816
    9. ')' → logprob: -15.877808570861816
    10. '[' → logprob: -16.5028076171875

Token 968: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6120426058769226
    2. ' ' → logprob: -0.9870426058769226
    3. '100' → logprob: -2.6120426654815674
    4. 'max' → logprob: -5.487042427062988
    5. '10' → logprob: -5.612042427062988
    6. ' max' → logprob: -5.987042427062988
    7. '200' → logprob: -7.612042427062988
    8. '2' → logprob: -7.737042427062988
    9. '500' → logprob: -8.487042427062988
    10. '   ' → logprob: -9.862042427062988

Token 969: '300' (ID: 4095)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14744538068771362
    2. '100' → logprob: -2.0224454402923584
    3. '200' → logprob: -6.397445201873779
    4. 'max' → logprob: -7.147445201873779
    5. '10' → logprob: -7.397445201873779
    6. '2' → logprob: -7.397445201873779
    7. '500' → logprob: -7.522445201873779
    8. ' ' → logprob: -8.147445678710938
    9. '300' → logprob: -9.272445678710938
    10. '400' → logprob: -10.022445678710938

Token 970: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0037149270065128803
    2. '0' → logprob: -5.7537150382995605
    3. '000' → logprob: -7.6287150382995605
    4. '00' → logprob: -10.003714561462402
    5. ' .' → logprob: -12.503714561462402
    6. '   ' → logprob: -14.253714561462402
    7. 'e' → logprob: -14.878714561462402
    8. ' ' → logprob: -15.378714561462402
    9. '_' → logprob: -16.00371551513672
    10. '       ' → logprob: -16.50371551513672

Token 971: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5733374953269958
    2. '6' → logprob: -1.3233375549316406
    3. '9' → logprob: -1.9483375549316406
    4. '3' → logprob: -3.9483375549316406
    5. '5' → logprob: -5.948337554931641
    6. '7' → logprob: -5.948337554931641
    7. '```' → logprob: -7.073337554931641
    8. 'float' → logprob: -7.573337554931641
    9. '10' → logprob: -7.698337554931641
    10. '000' → logprob: -8.19833755493164

Token 972: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22002682089805603
    2. '   ' → logprob: -2.845026731491089
    3. '       ' → logprob: -2.845026731491089
    4. '<|end|>' → logprob: -2.845026731491089
    5. ' while' → logprob: -5.095026969909668
    6. '    
' → logprob: -5.345026969909668
    7. '  
' → logprob: -5.845026969909668
    8. 'while' → logprob: -5.845026969909668
    9. '        
' → logprob: -6.220026969909668
    10. ' 
' → logprob: -7.095026969909668

Token 973: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17873328924179077
    2. ' while' → logprob: -2.1787333488464355
    3. '
' → logprob: -3.5537333488464355
    4. '       ' → logprob: -5.0537333488464355
    5. 'while' → logprob: -5.0537333488464355
    6. '<|end|>' → logprob: -5.9287333488464355
    7. '```' → logprob: -6.3037333488464355
    8. '	while' → logprob: -6.6787333488464355
    9. ' 
' → logprob: -6.8037333488464355
    10. '    
' → logprob: -7.0537333488464355

Token 974: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.460609495639801
    2. 'while' → logprob: -1.0856094360351562
    3. ' for' → logprob: -3.9606094360351562
    4. '       ' → logprob: -4.710609436035156
    5. ' while' → logprob: -5.835609436035156
    6. '   ' → logprob: -8.585609436035156
    7. 'mid' → logprob: -9.460609436035156
    8. '
' → logprob: -9.710609436035156
    9. 'import' → logprob: -10.210609436035156
    10. '        
' → logprob: -10.835609436035156

Token 975: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.014165629632771015
    2. '_' → logprob: -4.26416540145874
    3. ' i' → logprob: -13.764165878295898
    4. '_mid' → logprob: -15.264165878295898
    5. '_iter' → logprob: -15.514165878295898
    6. '_i' → logprob: -15.514165878295898
    7. ' ' → logprob: -16.0141658782959
    8. '_step' → logprob: -16.0141658782959
    9. ' __' → logprob: -16.8891658782959
    10. '_=' → logprob: -17.2641658782959

Token 976: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05045759305357933
    2. '_' → logprob: -3.05045747756958
    3. 'in' → logprob: -6.67545747756958
    4. ' _' → logprob: -7.55045747756958
    5. ' ' → logprob: -10.175457954406738
    6. ' range' → logprob: -11.175457954406738
    7. ' i' → logprob: -11.425457954406738
    8. 'range' → logprob: -11.925457954406738
    9. '_range' → logprob: -12.175457954406738
    10. 'i' → logprob: -12.675457954406738

Token 977: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20154188573360443
    2. ' range' → logprob: -1.7015419006347656
    3. '_' → logprob: -9.076541900634766
    4. '_range' → logprob: -12.076541900634766
    5. '	range' → logprob: -12.076541900634766
    6. ' ' → logprob: -13.576541900634766
    7. '(range' → logprob: -14.326541900634766
    8. '   ' → logprob: -14.826541900634766
    9. '```' → logprob: -15.201541900634766
    10. '  ' → logprob: -15.576541900634766

Token 978: '(' (ID: 7)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03715938702225685
    2. '50' → logprob: -3.5371594429016113
    3. '30' → logprob: -6.287159442901611
    4. '20' → logprob: -6.412159442901611
    5. '60' → logprob: -6.537159442901611
    6. '40' → logprob: -6.662159442901611
    7. '100' → logprob: -8.037158966064453
    8. '45' → logprob: -8.537158966064453
    9. '25' → logprob: -8.912158966064453
    10. '35' → logprob: -9.412158966064453

Token 979: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4103427231311798
    2. '60' → logprob: -1.4103426933288574
    3. '50' → logprob: -2.5353426933288574
    4. '70' → logprob: -4.535342693328857
    5. '80' → logprob: -6.660342693328857
    6. '40' → logprob: -7.160342693328857
    7. ' ' → logprob: -8.035343170166016
    8. '200' → logprob: -9.910343170166016
    9. '   ' → logprob: -10.035343170166016
    10. '75' → logprob: -10.535343170166016

Token 980: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7391372919082642
    2. '):
' → logprob: -0.8641372919082642
    3. ':' → logprob: -2.3641371726989746
    4. '   ' → logprob: -6.114137172698975
    5. '):' → logprob: -6.114137172698975
    6. '
' → logprob: -7.614137172698975
    7. '<|end|>' → logprob: -7.739137172698975
    8. '():
' → logprob: -7.864137172698975
    9. '       ' → logprob: -7.989137172698975
    10. '0' → logprob: -8.614137649536133

Token 981: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01705785281956196
    2. '       ' → logprob: -5.0170578956604
    3. '<|end|>' → logprob: -5.2670578956604
    4. '	       ' → logprob: -5.7670578956604
    5. '<|end|>' → logprob: -7.6420578956604
    6. '   ' → logprob: -7.6420578956604
    7. '```' → logprob: -8.017057418823242
    8. ':' → logprob: -8.767057418823242
    9. '#' → logprob: -9.142057418823242
    10. ',' → logprob: -9.517057418823242

Token 982: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.6640192866325378
    2. ' mid' → logprob: -0.7890192866325378
    3. '           ' → logprob: -3.7890193462371826
    4. ' midpoint' → logprob: -6.2890191078186035
    5. '<|end|>' → logprob: -6.5390191078186035
    6. '	       ' → logprob: -6.7890191078186035
    7. '       ' → logprob: -7.0390191078186035
    8. '_mid' → logprob: -7.2890191078186035
    9. ' mids' → logprob: -7.6640191078186035
    10. 'm' → logprob: -8.164019584655762

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631736546754837
    2. '=' → logprob: -3.6513173580169678
    3. '=(' → logprob: -11.776317596435547
    4. '<|end|>' → logprob: -12.276317596435547
    5. ')' → logprob: -13.401317596435547
    6. ' =(' → logprob: -14.151317596435547
    7. 'space' → logprob: -14.901317596435547
    8. '=int' → logprob: -15.026317596435547
    9. '=((' → logprob: -15.401317596435547
    10. '=float' → logprob: -15.526317596435547

Token 984: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47438520193099976
    2. '(low' → logprob: -0.9743852019309998
    3. '(' → logprob: -9.349385261535645
    4. '(lower' → logprob: -9.349385261535645
    5. '(high' → logprob: -9.474385261535645
    6. '(left' → logprob: -10.724385261535645
    7. ' ' → logprob: -11.849385261535645
    8. '(lo' → logprob: -12.349385261535645
    9. '
' → logprob: -12.599385261535645
    10. '(prev' → logprob: -12.974385261535645

Token 985: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.00033546582562848926
    2. ' low' → logprob: -8.000335693359375
    3. 'high' → logprob: -17.500335693359375
    4. '(low' → logprob: -18.625335693359375
    5. '_low' → logprob: -19.000335693359375
    6. '.low' → logprob: -20.625335693359375
    7. 'Low' → logprob: -21.000335693359375
    8. '-low' → logprob: -22.000335693359375
    9. ' ' → logprob: -22.625335693359375
    10. ')' → logprob: -23.875335693359375

Token 986: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020752996206284
    2. ' +' → logprob: -2.350207567214966
    3. ')' → logprob: -15.725207328796387
    4. ' +
' → logprob: -16.100208282470703
    5. '<|end|>' → logprob: -16.225208282470703
    6. '+
' → logprob: -16.350208282470703
    7. ' plus' → logprob: -16.350208282470703
    8. '+)' → logprob: -16.850208282470703
    9. '＋' → logprob: -17.100208282470703
    10. '+w' → logprob: -17.225208282470703

Token 987: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0001584850688232109
    2. ' high' → logprob: -8.750158309936523
    3. '(high' → logprob: -20.250158309936523
    4. '_high' → logprob: -20.375158309936523
    5. 'High' → logprob: -20.500158309936523
    6. '   ' → logprob: -20.750158309936523
    7. 'hi' → logprob: -21.500158309936523
    8. ' ' → logprob: -21.750158309936523
    9. '.high' → logprob: -22.125158309936523
    10. '高' → logprob: -23.250158309936523

Token 988: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.47417742013931274
    2. ')' → logprob: -0.9741774201393127
    3. ')*' → logprob: -9.474177360534668
    4. ' )' → logprob: -10.724177360534668
    5. ')//' → logprob: -14.224177360534668
    6. ')**' → logprob: -15.099177360534668
    7. ')>>' → logprob: -15.724177360534668
    8. ')/(' → logprob: -15.974177360534668
    9. ')
' → logprob: -16.599178314208984
    10. ' ' → logprob: -16.849178314208984

Token 989: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.00009536743164
    4. '```' → logprob: -18.00009536743164
    5. '  ' → logprob: -20.00009536743164
    6. '>' → logprob: -20.87509536743164
    7. '۲' → logprob: -21.12509536743164
    8. '​' → logprob: -21.37509536743164
    9. '=' → logprob: -21.37509536743164
    10. '.' → logprob: -21.50009536743164

Token 990: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1991530805826187
    2. '       ' → logprob: -2.074153184890747
    3. '<|end|>' → logprob: -3.449153184890747
    4. ' if' → logprob: -4.699152946472168
    5. '
' → logprob: -5.074152946472168
    6. '   ' → logprob: -5.824152946472168
    7. '<|end|>' → logprob: -6.449152946472168
    8. 'if' → logprob: -6.449152946472168
    9. '        
' → logprob: -8.199152946472168
    10. '	       ' → logprob: -8.324152946472168

Token 992: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5793096423149109
    2. ' if' → logprob: -0.8293096423149109
    3. '           ' → logprob: -5.704309463500977
    4. '       ' → logprob: -11.204309463500977
    5. '   ' → logprob: -11.704309463500977
    6. '<|end|>' → logprob: -12.579309463500977
    7. '	if' → logprob: -12.704309463500977
    8. ' ' → logprob: -13.829309463500977
    9. '            
' → logprob: -13.954309463500977
    10. 'If' → logprob: -14.329309463500977

Token 993: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.00671584764495492
    2. ' can' → logprob: -5.006715774536133
    3. 'not' → logprob: -15.256715774536133
    4. ' not' → logprob: -15.881715774536133
    5. '	can' → logprob: -16.506715774536133
    6. '(can' → logprob: -16.631715774536133
    7. '_can' → logprob: -18.256715774536133
    8. '.can' → logprob: -18.756715774536133
    9. '   ' → logprob: -19.631715774536133
    10. ' ' → logprob: -21.006715774536133

Token 994: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. ' _' → logprob: -15.875015258789062
    4. '_continue' → logprob: -16.125015258789062
    5. '_put' → logprob: -16.750015258789062
    6. 'place' → logprob: -16.750015258789062
    7. '_places' → logprob: -17.500015258789062
    8. '_PLACE' → logprob: -17.750015258789062
    9. '_can' → logprob: -18.250015258789062
    10. 'Place' → logprob: -18.250015258789062

Token 995: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.500033378601074
    3. ' (' → logprob: -12.625033378601074
    4. '(len' → logprob: -13.250033378601074
    5. '```' → logprob: -14.625033378601074
    6. '(
' → logprob: -14.750033378601074
    7. 'n' → logprob: -16.25003433227539
    8. ')' → logprob: -16.62503433227539
    9. '((' → logprob: -17.12503433227539
    10. ')(' → logprob: -17.75003433227539

Token 996: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -11.000040054321289
    3. '(' → logprob: -11.750040054321289
    4. ',n' → logprob: -11.750040054321289
    5. '(n' → logprob: -12.125040054321289
    6. ',
' → logprob: -13.625040054321289
    7. 'anchors' → logprob: -14.750040054321289
    8. ',(' → logprob: -15.125040054321289
    9. '`,' → logprob: -15.500040054321289
    10. '           ' → logprob: -16.12504005432129

Token 997: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -3.750436007976532e-05
    2. ' anchors' → logprob: -10.25003719329834
    3. 'anch' → logprob: -13.50003719329834
    4. 'anchor' → logprob: -15.12503719329834
    5. '   ' → logprob: -16.125038146972656
    6. 'anc' → logprob: -16.500038146972656
    7. '
' → logprob: -16.875038146972656
    8. 'ants' → logprob: -17.500038146972656
    9. '```' → logprob: -17.500038146972656
    10. ')' → logprob: -18.000038146972656

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -15.250005722045898
    4. ' ropes' → logprob: -16.5000057220459
    5. 'rop' → logprob: -17.7500057220459
    6. '```' → logprob: -18.0000057220459
    7. '[],' → logprob: -18.3750057220459
    8. '[' → logprob: -19.0000057220459
    9. ',

' → logprob: -19.1875057220459
    10. '   ' → logprob: -19.3125057220459

Token 999: ' ropes' (ID: 110596)
  Prédit: 'rop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rop' → logprob: -0.0003370118502061814
    2. ' ropes' → logprob: -8.125336647033691
    3. 'rops' → logprob: -10.500336647033691
    4. 'rope' → logprob: -12.125336647033691
    5. 'ros' → logprob: -12.875336647033691
    6. '   ' → logprob: -13.750336647033691
    7. ' ' → logprob: -14.625336647033691
    8. ',' → logprob: -14.875336647033691
    9. '```' → logprob: -15.000336647033691
    10. 'strings' → logprob: -15.000336647033691

Token 1000: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.5649528298527e-05
    2. ' ,' → logprob: -10.000075340270996
    3. ',m' → logprob: -10.750075340270996
    4. ',n' → logprob: -12.125075340270996
    5. '(mid' → logprob: -13.250075340270996
    6. '[mid' → logprob: -14.625075340270996
    7. ',
' → logprob: -14.875075340270996
    8. 'mid' → logprob: -16.125076293945312
    9. '           ' → logprob: -16.500076293945312
    10. '```' → logprob: -16.750076293945312

Token 1001: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00020354038861114532
    2. ' mid' → logprob: -8.500203132629395
    3. '(mid' → logprob: -17.62520408630371
    4. '[mid' → logprob: -18.12520408630371
    5. '           ' → logprob: -20.62520408630371
    6. '
' → logprob: -21.25020408630371
    7. '   ' → logprob: -22.25020408630371
    8. '_mid' → logprob: -22.37520408630371
    9. ')' → logprob: -22.50020408630371
    10. 'm' → logprob: -22.75020408630371

Token 1002: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12694616615772247
    2. '):' → logprob: -2.126946210861206
    3. ')' → logprob: -11.876946449279785
    4. '):
' → logprob: -12.376946449279785
    5. ' ):
' → logprob: -12.626946449279785
    6. ':' → logprob: -13.751946449279785
    7. ':
' → logprob: -14.001946449279785
    8. ' ):' → logprob: -14.126946449279785
    9. ')==' → logprob: -15.376946449279785
    10. '):

' → logprob: -15.626946449279785

Token 1003: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0685473307967186
    2. ':
' → logprob: -3.943547248840332
    3. ' high' → logprob: -3.943547248840332
    4. '(high' → logprob: -4.818547248840332
    5. '):
' → logprob: -5.443547248840332
    6. '           ' → logprob: -5.818547248840332
    7. '<|end|>' → logprob: -6.068547248840332
    8. 'high' → logprob: -6.193547248840332
    9. '```' → logprob: -6.443547248840332
    10. '
' → logprob: -6.568547248840332

Token 1004: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.048845671117305756
    2. ' low' → logprob: -3.0488457679748535
    3. '               ' → logprob: -8.548845291137695
    4. 'high' → logprob: -10.298845291137695
    5. '       ' → logprob: -11.798845291137695
    6. '   ' → logprob: -11.798845291137695
    7. '           ' → logprob: -11.923845291137695
    8. '.low' → logprob: -12.923845291137695
    9. '_low' → logprob: -13.298845291137695
    10. '(low' → logprob: -13.423845291137695

Token 1005: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740816056728363
    2. '=' → logprob: -0.9740816354751587
    3. '<|end|>' → logprob: -13.474081993103027
    4. '=line' → logprob: -13.849081993103027
    5. ' =
' → logprob: -14.349081993103027
    6. ' ' → logprob: -14.724081993103027
    7. '=end' → logprob: -14.974081993103027
    8. ')' → logprob: -16.09908103942871
    9. '=cut' → logprob: -16.34908103942871
    10. ',' → logprob: -16.72408103942871

Token 1006: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.01815006136894226
    2. ' mid' → logprob: -4.0181498527526855
    3. '(mid' → logprob: -16.393150329589844
    4. '[mid' → logprob: -17.018150329589844
    5. '_mid' → logprob: -18.393150329589844
    6. 'm' → logprob: -18.643150329589844
    7. '
' → logprob: -19.143150329589844
    8. 'mi' → logprob: -19.768150329589844
    9. ' midpoint' → logprob: -19.768150329589844
    10. '.mid' → logprob: -20.268150329589844

Token 1007: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5484249591827393
    2. 'else' → logprob: -1.4234249591827393
    3. '           ' → logprob: -1.7984249591827393
    4. '
' → logprob: -4.42342472076416
    5. '<|end|>' → logprob: -6.42342472076416
    6. '               ' → logprob: -7.04842472076416
    7. '```' → logprob: -7.67342472076416
    8. '       ' → logprob: -8.29842472076416
    9. '            
' → logprob: -8.67342472076416
    10. ' 
' → logprob: -9.79842472076416

Token 1008: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46620649099349976
    2. 'else' → logprob: -1.0912065505981445
    3. ' else' → logprob: -3.5912065505981445
    4. '       ' → logprob: -5.2162065505981445
    5. '```' → logprob: -5.7162065505981445
    6. 'high' → logprob: -8.591206550598145
    7. '
' → logprob: -8.966206550598145
    8. '   ' → logprob: -9.091206550598145
    9. ' high' → logprob: -10.091206550598145
    10. '(high' → logprob: -10.716206550598145

Token 1009: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1698998063802719
    2. ' else' → logprob: -1.919899821281433
    3. '           ' → logprob: -5.044899940490723
    4. '       ' → logprob: -6.044899940490723
    5. '```' → logprob: -7.169899940490723
    6. '	else' → logprob: -10.919899940490723
    7. '   ' → logprob: -11.794899940490723
    8. '<|end|>' → logprob: -12.169899940490723
    9. '
' → logprob: -12.669899940490723
    10. '#else' → logprob: -13.294899940490723

Token 1010: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39100557565689087
    2. ':
' → logprob: -1.141005516052246
    3. '               ' → logprob: -5.766005516052246
    4. '           ' → logprob: -7.391005516052246
    5. '<|end|>' → logprob: -9.266005516052246
    6. '       ' → logprob: -9.516005516052246
    7. ':

' → logprob: -10.266005516052246
    8. '```' → logprob: -10.391005516052246
    9. '):
' → logprob: -10.766005516052246
    10. '              ' → logprob: -11.016005516052246

Token 1011: '               ' (ID: 506)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.6228629350662231
    2. '               ' → logprob: -1.4978629350662231
    3. '           ' → logprob: -1.6228629350662231
    4. '       ' → logprob: -3.7478628158569336
    5. 'high' → logprob: -4.247862815856934
    6. '
' → logprob: -6.247862815856934
    7. '```' → logprob: -6.372862815856934
    8. '(high' → logprob: -7.997862815856934
    9. '   ' → logprob: -8.122862815856934
    10. '                   ' → logprob: -9.497862815856934

Token 1012: ' high' (ID: 1932)
  Prédit: ' high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.04859315976500511
    2. 'high' (adapté à ' high') → logprob: -3.048593044281006
    3. '               ' → logprob: -12.548593521118164
    4. '_high' → logprob: -14.173593521118164
    5. '           ' → logprob: -14.548593521118164
    6. '(high' → logprob: -14.548593521118164
    7. '.high' → logprob: -15.173593521118164
    8. '
' → logprob: -16.423593521118164
    9. 'High' → logprob: -17.173593521118164
    10. '   ' → logprob: -17.673593521118164

Token 1013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. '=end' → logprob: -15.12692928314209
    4. '=line' → logprob: -15.87692928314209
    5. '=cut' → logprob: -16.376930236816406
    6. ')' → logprob: -17.251930236816406
    7. '=input' → logprob: -17.751930236816406
    8. '＝' → logprob: -18.126930236816406
    9. '=
' → logprob: -18.251930236816406
    10. ' =
' → logprob: -18.376930236816406

Token 1014: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011047935113310814
    2. ' mid' → logprob: -4.511047840118408
    3. '[mid' → logprob: -16.88604736328125
    4. '(mid' → logprob: -17.01104736328125
    5. '_mid' → logprob: -18.01104736328125
    6. 'middle' → logprob: -18.63604736328125
    7. ' midpoint' → logprob: -19.38604736328125
    8. '.mid' → logprob: -20.26104736328125
    9. 'midd' → logprob: -21.13604736328125
    10. ' ' → logprob: -21.26104736328125

Token 1015: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3023674190044403
    2. '<|end|>' → logprob: -1.6773674488067627
    3. '
' → logprob: -3.4273674488067627
    4. '        
' → logprob: -3.9273674488067627
    5. '    
' → logprob: -5.052367210388184
    6. '   ' → logprob: -6.177367210388184
    7. '<|end|>' → logprob: -6.177367210388184
    8. '		
' → logprob: -6.427367210388184
    9. ' return' → logprob: -6.552367210388184
    10. '```' → logprob: -6.552367210388184

Token 1016: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.11125681549310684
    2. '   ' → logprob: -2.9862568378448486
    3. '       ' → logprob: -3.2362568378448486
    4. 'return' → logprob: -4.6112565994262695
    5. ' return' → logprob: -5.9862565994262695
    6. '<|end|>' → logprob: -6.7362565994262695
    7. '``' → logprob: -7.3612565994262695
    8. '
' → logprob: -7.6112565994262695
    9. '	return' → logprob: -8.61125659942627
    10. 'print' → logprob: -8.61125659942627

Token 1017: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002967320033349097
    2. '   ' → logprob: -8.500296592712402
    3. '```' → logprob: -9.500296592712402
    4. ' print' → logprob: -11.250296592712402
    5. '
' → logprob: -12.250296592712402
    6. '       ' → logprob: -15.500296592712402
    7. 'return' → logprob: -16.00029754638672
    8. '``' → logprob: -16.25029754638672
    9. '	print' → logprob: -16.50029754638672
    10. '#print' → logprob: -16.75029754638672

Token 1018: '("%.' (ID: 110073)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0014385659014806151
    2. '("{' → logprob: -7.126438617706299
    3. '(round' → logprob: -7.876438617706299
    4. '(int' → logprob: -9.12643814086914
    5. '("%.' → logprob: -9.25143814086914
    6. '('{' → logprob: -10.87643814086914
    7. '{' → logprob: -11.87643814086914
    8. '(' → logprob: -12.00143814086914
    9. '(format' → logprob: -12.25143814086914
    10. '(low' → logprob: -12.37643814086914

Token 1019: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5769956707954407
    2. '9' → logprob: -1.201995611190796
    3. '10' → logprob: -3.201995611190796
    4. '7' → logprob: -3.201995611190796
    5. '8' → logprob: -3.451995611190796
    6. '12' → logprob: -3.826995611190796
    7. '3' → logprob: -7.326995849609375
    8. '11' → logprob: -7.326995849609375
    9. '4' → logprob: -7.451995849609375
    10. '2' → logprob: -7.576995849609375

Token 1020: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'lf' → logprob: -17.625
    3. 'g' → logprob: -19.125
    4. ' f' → logprob: -20.0
    5. '```' → logprob: -20.0
    6. '	f' → logprob: -21.625
    7. 'e' → logprob: -21.75
    8. ''f' → logprob: -21.875
    9. 's' → logprob: -22.875
    10. 'flo' → logprob: -23.0

Token 1021: '"%' (ID: 77104)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.031737763434648514
    2. '"%' → logprob: -4.156737804412842
    3. '(low' → logprob: -4.406737804412842
    4. '"%(' → logprob: -5.781737804412842
    5. '("%' → logprob: -9.531737327575684
    6. '(' → logprob: -9.656737327575684
    7. '("' → logprob: -9.781737327575684
    8. '(high' → logprob: -10.031737327575684
    9. ' "' → logprob: -10.656737327575684
    10. '%' → logprob: -10.906737327575684

Token 1022: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0001817297888919711
    2. '(low' → logprob: -9.000182151794434
    3. ' low' → logprob: -9.750182151794434
    4. 'Low' → logprob: -20.250181198120117
    5. '.low' → logprob: -21.250181198120117
    6. ')' → logprob: -21.250181198120117
    7. '低' → logprob: -21.500181198120117
    8. '(' → logprob: -21.750181198120117
    9. ' (' → logprob: -22.000181198120117
    10. 'float' → logprob: -22.125181198120117

Token 1023: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ')
' → logprob: -12.875009536743164
    3. '())' → logprob: -13.250009536743164
    4. ' )' → logprob: -13.375009536743164
    5. '<|end|>' → logprob: -14.375009536743164
    6. '```' → logprob: -14.625009536743164
    7. '`)' → logprob: -15.125009536743164
    8. ')`' → logprob: -15.250009536743164
    9. ')#' → logprob: -15.500009536743164
    10. ')}' → logprob: -15.625009536743164

Token 1024: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00041696816333569586
    2. '
' → logprob: -8.50041675567627
    3. ' if' → logprob: -9.37541675567627
    4. '<|end|>' → logprob: -10.00041675567627
    5. '```' → logprob: -10.12541675567627
    6. 'main' → logprob: -10.12541675567627
    7. '#' → logprob: -13.87541675567627
    8. '__' → logprob: -15.37541675567627
    9. '...' → logprob: -15.37541675567627
    10. '        
' → logprob: -15.75041675567627

Token 1025: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05497267097234726
    2. '__' → logprob: -2.9299726486206055
    3. ' ' → logprob: -10.554972648620605
    4. '_' → logprob: -10.554972648620605
    5. ' _' → logprob: -11.804972648620605
    6. '_name' → logprob: -11.929972648620605
    7. ' name' → logprob: -12.054972648620605
    8. '​' → logprob: -12.679972648620605
    9. '```' → logprob: -12.804972648620605
    10. '<|end|>' → logprob: -13.304972648620605

Token 1026: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13647057116031647
    2. '==' → logprob: -2.3864705562591553
    3. ' ==' → logprob: -4.261470794677734
    4. '=="' → logprob: -4.261470794677734
    5. '```' → logprob: -5.761470794677734
    6. '=='' → logprob: -6.386470794677734
    7. '.__' → logprob: -7.261470794677734
    8. '__.__' → logprob: -7.261470794677734
    9. '[' → logprob: -8.011470794677734
    10. 'if' → logprob: -8.886470794677734

Token 1027: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005370667786337435
    2. '==' → logprob: -7.750536918640137
    3. '__.__' → logprob: -9.500536918640137
    4. '=="' → logprob: -11.250536918640137
    5. ' ==' → logprob: -11.625536918640137
    6. '__.' → logprob: -12.250536918640137
    7. '___' → logprob: -13.875536918640137
    8. '=='' → logprob: -14.000536918640137
    9. '__["' → logprob: -14.125536918640137
    10. '__('' → logprob: -14.500536918640137

Token 1028: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2183212786912918
    2. '==' → logprob: -1.9683213233947754
    3. '=="' → logprob: -3.3433213233947754
    4. ' ==' → logprob: -3.9683213233947754
    5. '=='' → logprob: -6.218321323394775
    6. '__.__' → logprob: -9.343320846557617
    7. '```' → logprob: -10.718320846557617
    8. '__["' → logprob: -10.843320846557617
    9. '==="' → logprob: -11.593320846557617
    10. '___' → logprob: -11.843320846557617

Token 1029: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.40760788321495056
    2. '__' → logprob: -1.407607913017273
    3. ''' → logprob: -2.4076077938079834
    4. 'main' → logprob: -13.407608032226562
    5. ' "__' → logprob: -15.907608032226562
    6. ' __' → logprob: -16.282608032226562
    7. '___' → logprob: -16.657608032226562
    8. '"<?' → logprob: -18.407608032226562
    9. '.__' → logprob: -18.407608032226562
    10. '   ' → logprob: -18.532608032226562

Token 1030: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3209855556488037
    2. '"' → logprob: -1.3209855556488037
    3. ''' → logprob: -5.070985794067383
    4. '__' → logprob: -6.945985794067383
    5. 'name' → logprob: -8.320985794067383
    6. '"name' → logprob: -8.695985794067383
    7. ''name' → logprob: -10.945985794067383
    8. ' "__' → logprob: -11.695985794067383
    9. '=="' → logprob: -12.570985794067383
    10. '_main' → logprob: -12.695985794067383

Token 1031: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07105249166488647
    2. '__' → logprob: -2.6960525512695312
    3. '__':
' → logprob: -6.946052551269531
    4. '__.__' → logprob: -10.696052551269531
    5. '__["' → logprob: -10.946052551269531
    6. '.' → logprob: -10.946052551269531
    7. '__:' → logprob: -10.946052551269531
    8. '__.' → logprob: -10.946052551269531
    9. '__
' → logprob: -11.321052551269531
    10. '():
' → logprob: -11.821052551269531

Token 1032: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08362707495689392
    2. 'main' → logprob: -2.5836269855499268
    3. '	main' → logprob: -5.958627223968506
    4. ' main' → logprob: -6.333627223968506
    5. '```' → logprob: -9.083626747131348
    6. '    
' → logprob: -9.333626747131348
    7. '_main' → logprob: -9.708626747131348
    8. '(main' → logprob: -9.833626747131348
    9. '__' → logprob: -10.708626747131348
    10. '   ' → logprob: -11.958626747131348

Token 1033: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.250000953674316
    3. ' main' → logprob: -14.500000953674316
    4. '	main' → logprob: -15.750000953674316
    5. '_main' → logprob: -21.000001907348633
    6. 'import' → logprob: -22.625001907348633
    7. '.main' → logprob: -22.875001907348633
    8. '(main' → logprob: -23.250001907348633
    9. '  ' → logprob: -24.500001907348633
    10. ' ' → logprob: -25.000001907348633

Token 1034: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1032
Tokens correctement prédits (1ère position, stricte): 357
Tokens correctement prédits (1ère position, avec adaptation): 383
Tokens correctement prédits (top 10): 759
Précision stricte (1ère position): 34.59%
Précision adaptée (1ère position): 37.11%
Précision (top 10): 73.55%
================================================================================
