================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

while True:
    N,M,K,L=map(int,input().split())
    if N==0 and M==0 and K==0 and L==0: break
    chars=[]
    name_to_index={}
    for i in range(N):
        s,v=input().split()
        v=int(v)
        chars.append([s,v,i])
        name_to_index[s]=i
    favs=[input().strip() for _ in range(M)]
    fav_set=set(favs)
    chars.sort(key=lambda x:(-x[1],x[0]))
    rank=[0]*N
    for i,(s,v,j) in enumerate(chars):
        rank[j]=i
    def can(x):
        # can we put x fav chars in top K?
        # assign L votes to these x fav chars to move them up if needed
        # the rest fav chars not promoted
        # check if condition holds after allocation
        promoted = sorted(favs)
        # choose top x fav chars to promote in lex order for consistency
        # actually, better to choose the x fav chars with easiest promotion
        # but lex order imposed for tie-breaks
        promoted = sorted(favs)
        # in practice, try all subsets would be too large, so pick top x fav chars by their current rank (easy to promote)
        # Simplify: pick fav chars with lowest rank (highest position), should be easiest to keep in top K
        fav_ranks = [(rank[name_to_index[f]], f) for f in favs]
        fav_ranks.sort()
        selected = [f for _,f in fav_ranks[:x]]
        selected_set=set(selected)
        # For selected fav chars, determine minimal votes needed to be at least at position K-1
        # For each char, minimal vote to surpass the char currently at K-1
        threshold_idx = K-1
        if threshold_idx>=len(chars): threshold_idx=len(chars)-1
        threshold_votes = chars[threshold_idx][1]
        # if tie in votes at K-1 position, must consider lex order as well
        threshold_name = chars[threshold_idx][0]
        # For each selected fav char, calculate votes needed to enter top K:
        needed = []
        for f in selected:
            idx = name_to_index[f]
            cur_vote = chars[rank[idx]][1]
            # to surpass threshold_votes, vote should be > threshold_votes
            # if equal, lex order used: if f < threshold_name, equal votes suffice, else need +1
            if cur_vote > threshold_votes:
                need=0
            elif cur_vote == threshold_votes:
                if f < threshold_name:
                    need=0
                else:
                    need=1
            else:
                need=threshold_votes - cur_vote +1
            needed.append(need)
        total_needed=sum(needed)
        if total_needed > L:
            return False
        # After assigned votes, check if the promoted fav chars can be in top K
        # build final votes list
        final_votes={}
        for s,v,_ in chars:
            final_votes[s]=v
        for f,add in zip(selected,needed):
            final_votes[f]+=add
        # Sort final by votes desc, name asc
        final_sorted = sorted(final_votes.items(),key=lambda x:(-x[1],x[0]))
        # count how many fav chars among top K
        count=0
        topK_names = set([final_sorted[i][0] for i in range(K)])
        for f in favs:
            if f in topK_names:
                count+=1
        return count>=x

    low=0
    high=M
    ans=0
    while low<=high:
        mid=(low+high)//2
        if can(mid):
            ans=mid
            low=mid+1
        else:
            high=mid-1
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005429040757007897
    2. '.' → logprob: -8.375542640686035
    3. '()' → logprob: -8.875542640686035
    4. ' (' → logprob: -9.375542640686035
    5. '('' → logprob: -10.500542640686035
    6. '(
' → logprob: -11.000542640686035
    7. ')' → logprob: -11.625542640686035
    8. '```' → logprob: -12.375542640686035
    9. ''' → logprob: -12.500542640686035
    10. '_' → logprob: -12.625542640686035

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018149138486478478
    2. '[' → logprob: -9.500181198120117
    3. ' .' → logprob: -9.875181198120117
    4. '.
' → logprob: -10.875181198120117
    5. '.readline' → logprob: -11.000181198120117
    6. '```' → logprob: -12.875181198120117
    7. '.[' → logprob: -13.125181198120117
    8. '.setdefault' → logprob: -13.375181198120117
    9. '.get' → logprob: -13.500181198120117
    10. '.

' → logprob: -13.500181198120117

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0904015451669693
    2. '.readline' → logprob: -2.4654016494750977
    3. '.read' → logprob: -6.590401649475098
    4. '.Read' → logprob: -10.840401649475098
    5. '```' → logprob: -10.840401649475098
    6. '.​' → logprob: -11.340401649475098
    7. '.
' → logprob: -12.340401649475098
    8. '[' → logprob: -12.340401649475098
    9. '.readlines' → logprob: -12.465401649475098
    10. '.get' → logprob: -12.840401649475098

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38726258277893066
    2. '()' → logprob: -1.1372625827789307
    3. '().' → logprob: -8.887262344360352
    4. '(
' → logprob: -9.012262344360352
    5. '()
' → logprob: -10.262262344360352
    6. 'def' → logprob: -11.512262344360352
    7. ')' → logprob: -11.637262344360352
    8. '()

' → logprob: -11.887262344360352
    9. '.' → logprob: -12.137262344360352
    10. 'a' → logprob: -12.137262344360352

Token 9: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016061515780165792
    2. ' True' → logprob: -7.126605987548828
    3. '  ' → logprob: -7.626605987548828
    4. ' (' → logprob: -9.126605987548828
    5. '(' → logprob: -9.501605987548828
    6. '"' → logprob: -10.376605987548828
    7. '    ' → logprob: -10.626605987548828
    8. ''' → logprob: -10.751605987548828
    9. ' )' → logprob: -11.501605987548828
    10. ' not' → logprob: -11.751605987548828

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006288164295256138
    2. '():' → logprob: -5.131288051605225
    3. ' :' → logprob: -8.506288528442383
    4. '):' → logprob: -9.881288528442383
    5. ':**' → logprob: -10.131288528442383
    6. '(:' → logprob: -10.631288528442383
    7. ' ():' → logprob: -11.756288528442383
    8. ':
' → logprob: -12.006288528442383
    9. '':'' → logprob: -12.881288528442383
    10. '":"' → logprob: -12.881288528442383

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03290923684835434
    2. '    
' → logprob: -4.532909393310547
    3. '    ' → logprob: -4.907909393310547
    4. ':' → logprob: -5.032909393310547
    5. '(' → logprob: -6.032909393310547
    6. '  
' → logprob: -6.907909393310547
    7. ' ' → logprob: -7.157909393310547
    8. ' :' → logprob: -7.782909393310547
    9. '():' → logprob: -7.782909393310547
    10. '  ' → logprob: -8.157909393310547

Token 12: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09886528551578522
    2. ' line' → logprob: -3.223865270614624
    3. '    ' → logprob: -3.598865270614624
    4. '    
' → logprob: -4.473865509033203
    5. 'line' → logprob: -4.723865509033203
    6. ' ' → logprob: -6.848865509033203
    7. 'user' → logprob: -7.098865509033203
    8. 'data' → logprob: -7.098865509033203
    9. '```' → logprob: -7.223865509033203
    10. 'try' → logprob: -7.848865509033203

Token 13: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20620201528072357
    2. '=' → logprob: -2.3312020301818848
    3. ' ==' → logprob: -2.5812020301818848
    4. '==' → logprob: -5.206202030181885
    5. ' >' → logprob: -5.706202030181885
    6. ' ' → logprob: -6.456202030181885
    7. '>' → logprob: -6.581202030181885
    8. '=int' → logprob: -8.331201553344727
    9. '<|end|>' → logprob: -8.456201553344727
    10. ' :=' → logprob: -8.581201553344727

Token 14: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813735008239746
    2. '=' → logprob: -1.4063735008239746
    3. '=input' → logprob: -8.531373977661133
    4. ',' → logprob: -11.531373977661133
    5. '=int' → logprob: -11.906373977661133
    6. ' ' → logprob: -12.406373977661133
    7. '    ' → logprob: -13.781373977661133
    8. '=line' → logprob: -14.281373977661133
    9. ')' → logprob: -14.406373977661133
    10. '   ' → logprob: -14.531373977661133

Token 15: ',L' (ID: 68006)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932058334350586
    2. ' =' → logprob: -0.6932058334350586
    3. '=input' → logprob: -10.193205833435059
    4. ',' → logprob: -11.193205833435059
    5. ' ' → logprob: -12.568205833435059
    6. '=int' → logprob: -13.818205833435059
    7. ')' → logprob: -14.068205833435059
    8. '    ' → logprob: -14.693205833435059
    9. '=line' → logprob: -14.943205833435059
    10. '=

' → logprob: -15.193205833435059

Token 16: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12703436613082886
    2. ' =' → logprob: -2.1270344257354736
    3. '=input' → logprob: -9.752034187316895
    4. ',' → logprob: -10.252034187316895
    5. '=int' → logprob: -12.377034187316895
    6. ' ' → logprob: -12.877034187316895
    7. '=line' → logprob: -13.752034187316895
    8. '=

' → logprob: -14.252034187316895
    9. '>' → logprob: -14.377034187316895
    10. '    ' → logprob: -14.502034187316895

Token 17: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04868263378739357
    2. ' map' → logprob: -3.048682689666748
    3. 'input' → logprob: -9.67368221282959
    4. 'list' → logprob: -10.54868221282959
    5. ' input' → logprob: -13.42368221282959
    6. '	map' → logprob: -13.42368221282959
    7. '(map' → logprob: -13.67368221282959
    8. ' list' → logprob: -13.67368221282959
    9. ' ' → logprob: -15.29868221282959
    10. 'm' → logprob: -15.29868221282959

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20563890039920807
    2. '(' → logprob: -1.7056388854980469
    3. '(input' → logprob: -6.080638885498047
    4. '(str' → logprob: -6.330638885498047
    5. '(list' → logprob: -9.955638885498047
    6. '(
' → logprob: -10.080638885498047
    7. 'int' → logprob: -10.205638885498047
    8. '(lambda' → logprob: -12.080638885498047
    9. 'input' → logprob: -12.205638885498047
    10. 'list' → logprob: -12.580638885498047

Token 19: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4834768772125244
    2. '(input' → logprob: -1.3584768772125244
    3. ',' → logprob: -2.9834768772125244
    4. 'input' → logprob: -3.3584768772125244
    5. ')' → logprob: -3.4834768772125244
    6. '(sys' → logprob: -5.358476638793945
    7. '(' → logprob: -5.483476638793945
    8. ' input' → logprob: -6.983476638793945
    9. '=input' → logprob: -9.108476638793945
    10. 'sys' → logprob: -9.983476638793945

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014734066091477871
    2. '())' → logprob: -4.264734268188477
    3. '()' → logprob: -8.264734268188477
    4. '()))' → logprob: -8.264734268188477
    5. ')' → logprob: -9.889734268188477
    6. '))' → logprob: -14.014734268188477
    7. '()));' → logprob: -14.014734268188477
    8. ' ())' → logprob: -14.389734268188477
    9. '());' → logprob: -14.639734268188477
    10. '();)' → logprob: -14.764734268188477

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002341992687433958
    2. 'strip' → logprob: -6.752342224121094
    3. 'rstrip' → logprob: -6.752342224121094
    4. ' split' → logprob: -13.002342224121094
    5. 'rs' → logprob: -15.502342224121094
    6. ')' → logprob: -15.502342224121094
    7. '(split' → logprob: -15.752342224121094
    8. '().' → logprob: -16.627342224121094
    9. '```' → logprob: -17.252342224121094
    10. '.split' → logprob: -17.252342224121094

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16166523098945618
    2. '))' → logprob: -1.9116652011871338
    3. '())' → logprob: -6.786665439605713
    4. '()))' → logprob: -8.786664962768555
    5. '()' → logprob: -9.286664962768555
    6. ')
' → logprob: -10.536664962768555
    7. ')))' → logprob: -11.036664962768555
    8. '),' → logprob: -12.161664962768555
    9. '))
' → logprob: -12.286664962768555
    10. '(' → logprob: -12.661664962768555

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5444128513336182
    2. ' if' → logprob: -1.5444128513336182
    3. '<|end|>' → logprob: -2.294412851333618
    4. ' ' → logprob: -3.044412851333618
    5. '\n' → logprob: -3.919412851333618
    6. ' 
' → logprob: -4.669412612915039
    7. '
' → logprob: -5.044412612915039
    8. '  
' → logprob: -5.544412612915039
    9. '    
' → logprob: -5.669412612915039
    10. ')' → logprob: -5.794412612915039

Token 24: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.03457821160554886
    2. ' not' → logprob: -3.909578323364258
    3. 'N' → logprob: -4.284578323364258
    4. ' ' → logprob: -9.409578323364258
    5. 'not' → logprob: -9.534578323364258
    6. ' (' → logprob: -13.784578323364258
    7. '[N' → logprob: -14.034578323364258
    8. ' ' → logprob: -14.159578323364258
    9. '	N' → logprob: -14.909578323364258
    10. '(N' → logprob: -14.909578323364258

Token 26: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763935446739197
    2. ' ==' → logprob: -0.8263935446739197
    3. '<' → logprob: -9.201393127441406
    4. '=' → logprob: -9.326393127441406
    5. ' <' → logprob: -9.701393127441406
    6. '<=' → logprob: -10.076393127441406
    7. ')' → logprob: -10.076393127441406
    8. ' <=' → logprob: -10.326393127441406
    9. ')==' → logprob: -10.451393127441406
    10. ' ' → logprob: -10.951393127441406

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02325037121772766
    2. ' ' → logprob: -3.7732503414154053
    3. '-' → logprob: -13.585750579833984
    4. '   ' → logprob: -14.585750579833984
    5. '  ' → logprob: -15.085750579833984
    6. '۰' → logprob: -15.148250579833984
    7. '```' → logprob: -15.273250579833984
    8. 'M' → logprob: -15.273250579833984
    9. ' M' → logprob: -15.398250579833984
    10. '    ' → logprob: -15.523250579833984

Token 28: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021104883402585983
    2. 'and' → logprob: -4.02110481262207
    3. ':' → logprob: -5.89610481262207
    4. '   ' → logprob: -9.39610481262207
    5. ' ' → logprob: -9.64610481262207
    6. ' or' → logprob: -11.02110481262207
    7. '	and' → logprob: -11.14610481262207
    8. ' :' → logprob: -12.39610481262207
    9. '  ' → logprob: -12.39610481262207
    10. '    ' → logprob: -12.52110481262207

Token 29: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.16023123264312744
    2. 'M' → logprob: -1.9102312326431274
    3. ' ' → logprob: -12.035231590270996
    4. '  ' → logprob: -14.285231590270996
    5. '	M' → logprob: -15.160231590270996
    6. '   ' → logprob: -15.410231590270996
    7. '    ' → logprob: -17.66023063659668
    8. ',M' → logprob: -17.78523063659668
    9. ' ' → logprob: -17.78523063659668
    10. '=M' → logprob: -17.91023063659668

Token 30: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010551994200795889
    2. ' ==' → logprob: -6.8760552406311035
    3. '0' → logprob: -11.751054763793945
    4. '<|end|>' → logprob: -11.876054763793945
    5. '=' → logprob: -12.751054763793945
    6. ' ' → logprob: -13.751054763793945
    7. '===' → logprob: -13.876054763793945
    8. '```' → logprob: -14.251054763793945
    9. ']==' → logprob: -14.376054763793945
    10. ')==' → logprob: -14.876054763793945

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -18.37504005432129
    4. '   ' → logprob: -18.75004005432129
    5. '  ' → logprob: -19.37504005432129
    6. '۰' → logprob: -19.75004005432129
    7. '<|end|>' → logprob: -20.37504005432129
    8. '```' → logprob: -21.06254005432129
    9. '    ' → logprob: -21.12504005432129
    10. '০' → logprob: -21.25004005432129

Token 32: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.055089447647333145
    2. 'and' → logprob: -2.9300894737243652
    3. '<|end|>' → logprob: -9.055088996887207
    4. '<|end|>' → logprob: -9.680088996887207
    5. '	and' → logprob: -10.930088996887207
    6. ' ' → logprob: -12.305088996887207
    7. '   ' → logprob: -12.430088996887207
    8. '    ' → logprob: -14.555088996887207
    9. ':' → logprob: -15.305088996887207
    10. ' и' → logprob: -15.680088996887207

Token 33: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4741508662700653
    2. 'K' → logprob: -0.9741508960723877
    3. ' ' → logprob: -9.849150657653809
    4. '<|end|>' → logprob: -11.099150657653809
    5. '	K' → logprob: -13.349150657653809
    6. '  ' → logprob: -13.349150657653809
    7. '0' → logprob: -13.599150657653809
    8. '   ' → logprob: -14.724150657653809
    9. '>K' → logprob: -15.099150657653809
    10. ' and' → logprob: -15.911650657653809

Token 34: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001404040725901723
    2. ' ==' → logprob: -6.62640380859375
    3. ' and' → logprob: -9.75140380859375
    4. 'and' → logprob: -12.00140380859375
    5. '0' → logprob: -13.00140380859375
    6. ')==' → logprob: -13.50140380859375
    7. '```' → logprob: -13.50140380859375
    8. '=' → logprob: -13.62640380859375
    9. '<|end|>' → logprob: -13.75140380859375
    10. ' ' → logprob: -13.75140380859375

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. '  ' → logprob: -17.62506675720215
    5. ' and' → logprob: -18.00006675720215
    6. 'and' → logprob: -18.12506675720215
    7. '۰' → logprob: -18.25006675720215
    8. '<|end|>' → logprob: -18.25006675720215
    9. '<|end|>' → logprob: -19.25006675720215
    10. '```' → logprob: -19.62506675720215

Token 36: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0052597299218177795
    2. 'and' → logprob: -5.2552595138549805
    3. ' ' → logprob: -10.75525951385498
    4. '	and' → logprob: -13.25525951385498
    5. '<|end|>' → logprob: -14.00525951385498
    6. ' ' → logprob: -14.50525951385498
    7. '```' → logprob: -15.25525951385498
    8. ' a' → logprob: -15.38025951385498
    9. '<|end|>' → logprob: -15.38025951385498
    10. ' и' → logprob: -15.63025951385498

Token 37: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.25012651085853577
    2. 'L' → logprob: -1.6251264810562134
    3. '0' → logprob: -3.875126600265503
    4. ' ' → logprob: -5.625126361846924
    5. '<|end|>' → logprob: -10.500126838684082
    6. '   ' → logprob: -11.500126838684082
    7. '  ' → logprob: -12.250126838684082
    8. '	L' → logprob: -12.750126838684082
    9. '>L' → logprob: -13.375126838684082
    10. '```' → logprob: -13.875126838684082

Token 38: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00712618138641119
    2. ' ==' → logprob: -5.007126331329346
    3. '=' → logprob: -8.257125854492188
    4. '<|end|>' → logprob: -9.257125854492188
    5. '<|end|>' → logprob: -11.382125854492188
    6. ')==' → logprob: -11.382125854492188
    7. '()==' → logprob: -11.507125854492188
    8. ']==' → logprob: -12.007125854492188
    9. '0' → logprob: -12.257125854492188
    10. '==(' → logprob: -12.757125854492188

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.687536239624023
    4. '```' → logprob: -17.062536239624023
    5. '۰' → logprob: -17.125036239624023
    6. '1' → logprob: -17.375036239624023
    7. '<|end|>' → logprob: -17.687536239624023
    8. '  ' → logprob: -17.750036239624023
    9. '০' → logprob: -18.562536239624023
    10. '<|end|>' → logprob: -18.687536239624023

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005894906935282052
    2. ':
' → logprob: -7.500589370727539
    3. '   ' → logprob: -10.500589370727539
    4. ':return' → logprob: -12.125589370727539
    5. ' :' → logprob: -12.875589370727539
    6. '.' → logprob: -15.125589370727539
    7. '       ' → logprob: -15.500589370727539
    8. '	break' → logprob: -15.750589370727539
    9. '):' → logprob: -15.750589370727539
    10. ':
' → logprob: -16.12558937072754

Token 41: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022539799101650715
    2. '   ' → logprob: -6.252254009246826
    3. ' break' → logprob: -8.377253532409668
    4. '	break' → logprob: -9.877253532409668
    5. 'break' → logprob: -11.127253532409668
    6. '\n' → logprob: -11.252253532409668
    7. '	' → logprob: -12.752253532409668
    8. '        
' → logprob: -13.127253532409668
    9. '    
' → logprob: -13.377253532409668
    10. '     ' → logprob: -13.627253532409668

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3737485110759735
    2. '   ' → logprob: -1.498748540878296
    3. '    
' → logprob: -2.873748540878296
    4. '\n' → logprob: -3.998748540878296
    5. '  
' → logprob: -5.248748302459717
    6. '<|end|>' → logprob: -5.873748302459717
    7. ' 
' → logprob: -6.623748302459717
    8. '\r' → logprob: -6.748748302459717
    9. '   
' → logprob: -7.623748302459717
    10. '
' → logprob: -7.748748302459717

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4592965841293335
    2. '
' → logprob: -1.4592965841293335
    3. '    
' → logprob: -2.334296703338623
    4. '\n' → logprob: -4.584296703338623
    5. '  
' → logprob: -4.584296703338623
    6. ' 
' → logprob: -5.084296703338623
    7. 'n' → logprob: -5.959296703338623
    8. '   
' → logprob: -6.334296703338623
    9. ' ' → logprob: -6.459296703338623
    10. '' → logprob: -7.084296703338623

Token 44: ' chars' (ID: 47991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29188722372055054
    2. ' ' → logprob: -2.9168872833251953
    3. ' 
' → logprob: -3.1668872833251953
    4. '[' → logprob: -3.4168872833251953
    5. '    ' → logprob: -3.7918872833251953
    6. '    
' → logprob: -4.166887283325195
    7. 'n' → logprob: -4.541887283325195
    8. 'a' → logprob: -4.541887283325195
    9. 's' → logprob: -4.666887283325195
    10. 'r' → logprob: -5.166887283325195

Token 45: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15732112526893616
    2. ' =' → logprob: -2.2823212146759033
    3. '=[]' → logprob: -3.2823212146759033
    4. '_' → logprob: -6.157320976257324
    5. '[' → logprob: -6.782320976257324
    6. '_count' → logprob: -7.032320976257324
    7. '={}' → logprob: -7.782320976257324
    8. ',' → logprob: -8.157320976257324
    9. '=[' → logprob: -8.282320976257324
    10. '=input' → logprob: -9.532320976257324

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3844245374202728
    2. 'for' → logprob: -1.5094245672225952
    3. '<|end|>' → logprob: -3.2594244480133057
    4. ' for' → logprob: -3.7594244480133057
    5. ' ' → logprob: -4.884424686431885
    6. '[' → logprob: -4.884424686431885
    7. '	for' → logprob: -5.009424686431885
    8. '    ' → logprob: -5.009424686431885
    9. '    
' → logprob: -6.509424686431885
    10. '<|end|>' → logprob: -7.009424686431885

Token 47: ' name' (ID: 1308)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0835953876376152
    2. ' for' → logprob: -2.7085952758789062
    3. '   ' → logprob: -4.708595275878906
    4. '	for' → logprob: -6.583595275878906
    5. ' ' → logprob: -6.708595275878906
    6. '    ' → logprob: -7.083595275878906
    7. '[' → logprob: -7.458595275878906
    8. '\t' → logprob: -8.583595275878906
    9. '<|end|>' → logprob: -10.208595275878906
    10. '  ' → logprob: -10.458595275878906

Token 48: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28691068291664124
    2. '=' → logprob: -1.4119106531143188
    3. '=[]' → logprob: -5.661910533905029
    4. ' =' → logprob: -6.911910533905029
    5. '_' → logprob: -7.786910533905029
    6. '_chars' → logprob: -8.661911010742188
    7. '=s' → logprob: -8.911911010742188
    8. '_length' → logprob: -9.286911010742188
    9. '_list' → logprob: -9.786911010742188
    10. '_s' → logprob: -9.786911010742188

Token 49: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6946447491645813
    2. 'idx' → logprob: -0.9446447491645813
    3. 'id' → logprob: -2.8196446895599365
    4. '_index' → logprob: -4.694644927978516
    5. 'score' → logprob: -4.819644927978516
    6. '_id' → logprob: -5.194644927978516
    7. 'count' → logprob: -5.194644927978516
    8. '_idx' → logprob: -5.444644927978516
    9. 'age' → logprob: -5.944644927978516
    10. 'rank' → logprob: -6.444644927978516

Token 50: '={}
' (ID: 146130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023678312078118324
    2. ' =' → logprob: -4.398678302764893
    3. '={}' → logprob: -5.148678302764893
    4. '[' → logprob: -5.273678302764893
    5. '={' → logprob: -10.02367877960205
    6. '=[]' → logprob: -10.14867877960205
    7. '=[' → logprob: -10.39867877960205
    8. ']' → logprob: -11.14867877960205
    9. '{' → logprob: -11.77367877960205
    10. ')' → logprob: -11.89867877960205

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5419505834579468
    2. ' ' → logprob: -2.2919507026672363
    3. ' 
' → logprob: -2.5419507026672363
    4. 'for' → logprob: -2.9169507026672363
    5. '    
' → logprob: -3.0419507026672363
    6. '    ' → logprob: -3.7919507026672363
    7. ' for' → logprob: -3.7919507026672363
    8. 'i' → logprob: -4.041950702667236
    9. '<|end|>' → logprob: -4.291950702667236
    10. '
' → logprob: -4.791950702667236

Token 52: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09349153190851212
    2. ' for' → logprob: -2.593491554260254
    3. '   ' → logprob: -5.343491554260254
    4. 'i' → logprob: -5.593491554260254
    5. 'n' → logprob: -6.843491554260254
    6. 'c' → logprob: -7.218491554260254
    7. ' ' → logprob: -7.343491554260254
    8. '	for' → logprob: -7.468491554260254
    9. '[' → logprob: -7.593491554260254
    10. ' \' → logprob: -7.968491554260254

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28324806690216064
    2. ' _' → logprob: -1.4082480669021606
    3. 'i' → logprob: -6.783247947692871
    4. '_' → logprob: -7.033247947692871
    5. '_i' → logprob: -10.158247947692871
    6. ' ' → logprob: -10.533247947692871
    7. '	i' → logprob: -11.783247947692871
    8. ' idx' → logprob: -12.533247947692871
    9. '```' → logprob: -14.408247947692871
    10. ' I' → logprob: -14.783247947692871

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11299853026866913
    2. 'in' → logprob: -2.2379984855651855
    3. ' ' → logprob: -9.112998962402344
    4. '	in' → logprob: -10.362998962402344
    5. ',' → logprob: -11.112998962402344
    6. 'range' → logprob: -12.737998962402344
    7. ',in' → logprob: -12.987998962402344
    8. '<|end|>' → logprob: -12.987998962402344
    9. 'In' → logprob: -13.237998962402344
    10. ' ,' → logprob: -13.612998962402344

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022604703903198
    2. ' range' → logprob: -1.9102261066436768
    3. '	range' → logprob: -13.660225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '(range' → logprob: -15.785225868225098
    6. ' xrange' → logprob: -15.910225868225098
    7. '  ' → logprob: -17.035226821899414
    8. 'rang' → logprob: -17.160226821899414
    9. '   ' → logprob: -18.035226821899414
    10. 'r' → logprob: -18.160226821899414

Token 56: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03611934930086136
    2. '(' → logprob: -3.6611194610595703
    3. '(M' → logprob: -4.66111946105957
    4. ' (' → logprob: -8.16111946105957
    5. ' N' → logprob: -11.66111946105957
    6. '(L' → logprob: -11.78611946105957
    7. '(n' → logprob: -12.66111946105957
    8. ' ' → logprob: -13.41111946105957
    9. '(len' → logprob: -13.53611946105957
    10. '(
' → logprob: -13.66111946105957

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013762809976469725
    2. '):
' → logprob: -9.500137329101562
    3. ')' → logprob: -10.875137329101562
    4. ':' → logprob: -10.875137329101562
    5. '+' → logprob: -11.500137329101562
    6. ' ):' → logprob: -11.750137329101562
    7. '   ' → logprob: -12.250137329101562
    8. '():' → logprob: -14.750137329101562
    9. ' ' → logprob: -14.875137329101562
    10. ']:' → logprob: -15.500137329101562

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.744412899017334
    2. '       ' → logprob: -0.744412899017334
    3. ' ' → logprob: -4.119412899017334
    4. '<|end|>' → logprob: -4.119412899017334
    5. ' chars' → logprob: -4.744412899017334
    6. '    ' → logprob: -5.619412899017334
    7. '(chars' → logprob: -6.744412899017334
    8. '<|end|>' → logprob: -7.744412899017334
    9. '  ' → logprob: -7.869412899017334
    10. 'chars' → logprob: -8.244413375854492

Token 59: ' s' (ID: 265)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.06066487729549408
    2. 'name' → logprob: -3.0606648921966553
    3. ' chars' → logprob: -5.185664653778076
    4. ' 
' → logprob: -6.185664653778076
    5. ' ' → logprob: -6.560664653778076
    6. ' s' → logprob: -6.685664653778076
    7. ' names' → logprob: -7.560664653778076
    8. ' n' → logprob: -8.185665130615234
    9. ' line' → logprob: -8.310665130615234
    10. 'n' → logprob: -9.185665130615234

Token 60: ',v' (ID: 30680)
  Prédit: '=input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.25702977180480957
    2. '=' → logprob: -1.5070297718048096
    3. ' =' → logprob: -5.7570295333862305
    4. '=sys' → logprob: -6.3820295333862305
    5. '=str' → logprob: -9.25702953338623
    6. '=name' → logprob: -9.25702953338623
    7. 'name' → logprob: -11.75702953338623
    8. '=in' → logprob: -12.00702953338623
    9. 'tr' → logprob: -12.13202953338623
    10. '=list' → logprob: -12.75702953338623

Token 61: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3909291625022888
    2. '=input' → logprob: -1.1409292221069336
    3. ' =' → logprob: -5.640929222106934
    4. '=list' → logprob: -8.640929222106934
    5. '=sys' → logprob: -8.765929222106934
    6. '=line' → logprob: -9.390929222106934
    7. '=int' → logprob: -10.515929222106934
    8. '=s' → logprob: -10.765929222106934
    9. '=i' → logprob: -12.140929222106934
    10. '=in' → logprob: -12.390929222106934

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023321842309087515
    2. '()' → logprob: -8.37523365020752
    3. '(' → logprob: -14.00023365020752
    4. '=' → logprob: -14.12523365020752
    5. ' ().' → logprob: -15.12523365020752
    6. '.readline' → logprob: -15.87523365020752
    7. '.split' → logprob: -15.87523365020752
    8. ')' → logprob: -16.125232696533203
    9. '()='' → logprob: -16.125232696533203
    10. 'split' → logprob: -16.250232696533203

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20180350542068481
    2. 'strip' → logprob: -1.95180344581604
    3. 'rstrip' → logprob: -3.20180344581604
    4. 'rs' → logprob: -10.201803207397461
    5. ' split' → logprob: -14.951803207397461
    6. 'rst' → logprob: -15.451803207397461
    7. 'spl' → logprob: -16.07680320739746
    8. 'r' → logprob: -16.32680320739746
    9. 'rt' → logprob: -16.70180320739746
    10. '(split' → logprob: -17.07680320739746

Token 64: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010548417922109365
    2. '(' → logprob: -7.126054763793945
    3. '()
' → logprob: -8.751054763793945
    4. ')' → logprob: -11.126054763793945
    5. '('' → logprob: -11.376054763793945
    6. '()\' → logprob: -11.626054763793945
    7. '<|end|>' → logprob: -11.751054763793945
    8. '();' → logprob: -11.751054763793945
    9. '()

' → logprob: -11.876054763793945
    10. ' ()' → logprob: -12.001054763793945

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' v' (ID: 323)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.2186613231897354
    2. ' v' → logprob: -2.343661308288574
    3. 'name' → logprob: -2.468661308288574
    4. 'v' (adapté à ' v') → logprob: -5.343661308288574
    5. ' s' → logprob: -5.718661308288574
    6. ' ' → logprob: -6.093661308288574
    7. '<|end|>' → logprob: -6.343661308288574
    8. ' chars' → logprob: -6.718661308288574
    9. '	name' → logprob: -7.468661308288574
    10. ' 
' → logprob: -7.593661308288574

Token 67: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.023277508094906807
    2. '=' → logprob: -3.773277521133423
    3. '=float' → logprob: -11.148277282714844
    4. ' =' → logprob: -12.148277282714844
    5. '=v' → logprob: -12.398277282714844
    6. 'int' → logprob: -13.148277282714844
    7. ',int' → logprob: -13.898277282714844
    8. ',' → logprob: -14.398277282714844
    9. '=i' → logprob: -14.398277282714844
    10. '=

' → logprob: -14.523277282714844

Token 68: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.47409623861312866
    2. '(' → logprob: -0.9740962386131287
    3. ')' → logprob: -11.599096298217773
    4. '(
' → logprob: -12.849096298217773
    5. ' (' → logprob: -13.849096298217773
    6. ')v' → logprob: -13.974096298217773
    7. ')(' → logprob: -14.224096298217773
    8. '(s' → logprob: -14.349096298217773
    9. '()' → logprob: -14.349096298217773
    10. '(value' → logprob: -14.849096298217773

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010831133840838447
    2. ')
' → logprob: -9.37510871887207
    3. '<|end|>' → logprob: -10.87510871887207
    4. ')
' → logprob: -14.12510871887207
    5. ' )' → logprob: -14.25010871887207
    6. ')v' → logprob: -14.50010871887207
    7. '<|end|>' → logprob: -14.75010871887207
    8. '),' → logprob: -14.87510871887207
    9. ')

' → logprob: -15.25010871887207
    10. ')return' → logprob: -15.37510871887207

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018546009436249733
    2. '<|end|>' → logprob: -4.268546104431152
    3. '
' → logprob: -5.768546104431152
    4. '   ' → logprob: -7.768546104431152
    5. ',' → logprob: -8.018546104431152
    6. '<|end|>' → logprob: -8.893546104431152
    7. '        
' → logprob: -9.268546104431152
    8. ' ' → logprob: -9.518546104431152
    9. ')' → logprob: -9.893546104431152
    10. '    
' → logprob: -11.268546104431152

Token 71: ' chars' (ID: 47991)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.7264702916145325
    2. ' name' → logprob: -0.9764702916145325
    3. '   ' → logprob: -2.7264702320098877
    4. '       ' → logprob: -2.7264702320098877
    5. ' chars' → logprob: -5.226470470428467
    6. 'chars' (adapté à ' chars') → logprob: -6.226470470428467
    7. '	name' → logprob: -7.601470470428467
    8. ' ' → logprob: -7.976470470428467
    9. ' if' → logprob: -8.726469993591309
    10. '    ' → logprob: -9.226469993591309

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0028582511004060507
    2. '.' → logprob: -5.8778581619262695
    3. '.setdefault' → logprob: -10.75285816192627
    4. '.app' → logprob: -11.75285816192627
    5. '.extend' → logprob: -11.87785816192627
    6. '.ap' → logprob: -12.62785816192627
    7. '.insert' → logprob: -13.12785816192627
    8. ').' → logprob: -13.25285816192627
    9. '[' → logprob: -13.25285816192627
    10. ' .' → logprob: -13.50285816192627

Token 73: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005519599071703851
    2. '(' → logprob: -7.750552177429199
    3. '([' → logprob: -9.7505521774292
    4. '(s' → logprob: -9.8755521774292
    5. '(v' → logprob: -11.5005521774292
    6. '({'' → logprob: -14.0005521774292
    7. '(([' → logprob: -15.5005521774292
    8. '(((' → logprob: -16.125551223754883
    9. '(('' → logprob: -16.125551223754883
    10. '({' → logprob: -16.500551223754883

Token 74: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16456301510334015
    2. 'v' → logprob: -1.9145630598068237
    3. ' s' → logprob: -5.789563179016113
    4. '0' → logprob: -7.414563179016113
    5. ' v' → logprob: -7.539563179016113
    6. ' ' → logprob: -10.414563179016113
    7. '   ' → logprob: -10.664563179016113
    8. '-v' → logprob: -10.789563179016113
    9. '1' → logprob: -11.789563179016113
    10. ''s' → logprob: -11.914563179016113

Token 75: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.576073944568634
    2. ',' → logprob: -0.826073944568634
    3. ' ,' → logprob: -8.95107364654541
    4. 'v' → logprob: -12.95107364654541
    5. ',int' → logprob: -13.95107364654541
    6. ' v' → logprob: -15.07607364654541
    7. ',
' → logprob: -15.32607364654541
    8. ',value' → logprob: -15.70107364654541
    9. ',val' → logprob: -15.70107364654541
    10. '，' → logprob: -15.82607364654541

Token 76: ',i' (ID: 25032)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0018747396534308791
    2. ',' → logprob: -6.376874923706055
    3. ')' → logprob: -9.251874923706055
    4. ' ])' → logprob: -9.876874923706055
    5. '])
' → logprob: -11.001874923706055
    6. ']' → logprob: -12.626874923706055
    7. ')])' → logprob: -14.126874923706055
    8. ')]' → logprob: -14.126874923706055
    9. '   ' → logprob: -14.376874923706055
    10. '))' → logprob: -15.001874923706055

Token 77: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00044437398901209235
    2. ')' → logprob: -8.250444412231445
    3. '])
' → logprob: -9.625444412231445
    4. ' ])' → logprob: -10.000444412231445
    5. ',' → logprob: -10.125444412231445
    6. ']' → logprob: -11.250444412231445
    7. '   ' → logprob: -11.625444412231445
    8. ')])' → logprob: -13.125444412231445
    9. '])

' → logprob: -13.500444412231445
    10. ')]' → logprob: -13.625444412231445

Token 78: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' (adapté à ' name') → logprob: -0.6067935824394226
    2. '   ' → logprob: -1.2317936420440674
    3. ' name' → logprob: -1.9817936420440674
    4. ' for' → logprob: -5.481793403625488
    5. '       ' → logprob: -5.731793403625488
    6. '	name' → logprob: -6.106793403625488
    7. '
' → logprob: -6.106793403625488
    8. 'for' → logprob: -6.231793403625488
    9. ' chars' → logprob: -6.356793403625488
    10. ' ' → logprob: -6.606793403625488

Token 80: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.750001907348633
    3. '_t' → logprob: -15.375001907348633
    4. '```' → logprob: -15.375001907348633
    5. '##_' → logprob: -15.500001907348633
    6. 'To' → logprob: -15.750001907348633
    7. ' _' → logprob: -16.125001907348633
    8. 'to' → logprob: -16.625001907348633
    9. '_from' → logprob: -17.000001907348633
    10. '_into' → logprob: -17.375001907348633

Token 81: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.012544969096779823
    2. 'index' → logprob: -4.387545108795166
    3. 's' → logprob: -10.887544631958008
    4. 'name' → logprob: -11.637544631958008
    5. '_' → logprob: -12.762544631958008
    6. '_name' → logprob: -13.262544631958008
    7. ' index' → logprob: -14.762544631958008
    8. '```' → logprob: -14.887544631958008
    9. 'Index' → logprob: -15.012544631958008
    10. '_INDEX' → logprob: -15.262544631958008

Token 82: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0009220616775564849
    2. '[' → logprob: -7.000922203063965
    3. '=' → logprob: -12.875922203063965
    4. 's' → logprob: -13.000922203063965
    5. '=s' → logprob: -13.250922203063965
    6. '[input' → logprob: -14.250922203063965
    7. '[v' → logprob: -14.625922203063965
    8. ' [' → logprob: -14.750922203063965
    9. '[...]' → logprob: -15.000922203063965
    10. '[c' → logprob: -15.250922203063965

Token 83: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6933882236480713
    2. ']=' → logprob: -0.6933882236480713
    3. ' ]' → logprob: -8.818387985229492
    4. '=' → logprob: -9.568387985229492
    5. ']={' → logprob: -11.818387985229492
    6. ']=(' → logprob: -12.193387985229492
    7. '']=' → logprob: -12.693387985229492
    8. '"]=' → logprob: -13.318387985229492
    9. ']
' → logprob: -13.943387985229492
    10. ']='' → logprob: -13.943387985229492

Token 84: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -18.125335693359375
    4. ' ' → logprob: -18.375335693359375
    5. '   ' → logprob: -19.625335693359375
    6. '  ' → logprob: -21.875335693359375
    7. '0' → logprob: -22.250335693359375
    8. '{i' → logprob: -22.375335693359375
    9. 'int' → logprob: -22.500335693359375
    10. '_i' → logprob: -22.625335693359375

Token 85: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3611724376678467
    2. '   ' → logprob: -1.4861724376678467
    3. 'while' → logprob: -1.7361724376678467
    4. '
' → logprob: -2.9861724376678467
    5. '```' → logprob: -3.3611724376678467
    6. 'max' → logprob: -3.4861724376678467
    7. 'for' → logprob: -3.8611724376678467
    8. 'graph' → logprob: -4.111172676086426
    9. ' while' → logprob: -4.111172676086426
    10. '    
' → logprob: -4.236172676086426

Token 86: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2969095706939697
    2. 'while' → logprob: -1.5469095706939697
    3. '   ' → logprob: -2.2969095706939697
    4. '
' → logprob: -2.9219095706939697
    5. '```' → logprob: -3.2969095706939697
    6. ' while' → logprob: -3.4219095706939697
    7. 'chars' → logprob: -3.5469095706939697
    8. '    
' → logprob: -3.5469095706939697
    9. '\n' → logprob: -3.9219095706939697
    10. ' 
' → logprob: -4.296909332275391

Token 87: ' fav' (ID: 11726)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1980324983596802
    2. '    
' → logprob: -2.1980323791503906
    3. ' 
' → logprob: -2.4480323791503906
    4. 'while' → logprob: -2.5730323791503906
    5. '\n' → logprob: -2.5730323791503906
    6. 'dp' → logprob: -2.6980323791503906
    7. ' while' → logprob: -3.3230323791503906
    8. '
' → logprob: -3.5730323791503906
    9. '```' → logprob: -3.6980323791503906
    10. 'for' → logprob: -3.9480323791503906

Token 88: 's' (ID: 82)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.0767202377319336
    2. '_chars' → logprob: -1.0767202377319336
    3. '=' → logprob: -1.5767202377319336
    4. 'chars' → logprob: -3.7017202377319336
    5. '_nums' → logprob: -3.7017202377319336
    6. 's' → logprob: -4.201720237731934
    7. 'or' → logprob: -4.451720237731934
    8. '_char' → logprob: -5.326720237731934
    9. 'ored' → logprob: -5.326720237731934
    10. '_list' → logprob: -5.701720237731934

Token 89: '=[' (ID: 13370)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.12321283668279648
    2. '=' → logprob: -2.4982128143310547
    3. '=[' → logprob: -4.248212814331055
    4. '={}' → logprob: -4.498212814331055
    5. ' =' → logprob: -5.498212814331055
    6. '=set' → logprob: -6.873212814331055
    7. '=list' → logprob: -7.748212814331055
    8. '[]' → logprob: -7.873212814331055
    9. '=[]
' → logprob: -7.873212814331055
    10. '[' → logprob: -8.248212814331055

Token 90: 'input' (ID: 2586)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20224221050739288
    2. 'int' → logprob: -2.702242136001587
    3. 'False' → logprob: -3.077242136001587
    4. '[]' → logprob: -3.327242136001587
    5. 'list' → logprob: -4.452242374420166
    6. ']' → logprob: -4.577242374420166
    7. 'set' → logprob: -5.327242374420166
    8. '-' → logprob: -6.327242374420166
    9. ']int' → logprob: -6.452242374420166
    10. '[int' → logprob: -6.577242374420166

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009294486371800303
    2. '()' → logprob: -7.000929355621338
    3. '()]' → logprob: -11.375929832458496
    4. ' ().' → logprob: -12.250929832458496
    5. '()].' → logprob: -14.375929832458496
    6. '()
' → logprob: -15.250929832458496
    7. '(' → logprob: -15.375929832458496
    8. '()\' → logprob: -15.500929832458496
    9. ' ()' → logprob: -16.00092887878418
    10. '()[' → logprob: -16.75092887878418

Token 92: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06496702134609222
    2. 'rstrip' → logprob: -2.814966917037964
    3. 'split' → logprob: -5.814967155456543
    4. 'read' → logprob: -11.564967155456543
    5. ' strip' → logprob: -13.564967155456543
    6. 'rs' → logprob: -14.564967155456543
    7. 'r' → logprob: -14.689967155456543
    8. 'replace' → logprob: -15.564967155456543
    9. 'str' → logprob: -16.064966201782227
    10. 'rst' → logprob: -16.439966201782227

Token 93: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010748547501862049
    2. '()]' → logprob: -4.635748386383057
    3. '().' → logprob: -7.885748386383057
    4. ' ()' → logprob: -8.135748863220215
    5. ' for' → logprob: -8.760748863220215
    6. ']' → logprob: -9.135748863220215
    7. 'for' → logprob: -10.885748863220215
    8. ']()' → logprob: -11.385748863220215
    9. '（）' → logprob: -12.635748863220215
    10. ' ' → logprob: -12.760748863220215

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11350521445274353
    2. 'for' → logprob: -2.2385051250457764
    3. ']' → logprob: -7.6135053634643555
    4. '	for' → logprob: -9.113505363464355
    5. ' ' → logprob: -10.488505363464355
    6. '()' → logprob: -10.863505363464355
    7. ')' → logprob: -11.113505363464355
    8. ' ]' → logprob: -11.613505363464355
    9. '   ' → logprob: -13.113505363464355
    10. '```' → logprob: -13.863505363464355

Token 95: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005237429868429899
    2. ' _' → logprob: -5.755237579345703
    3. 'range' → logprob: -6.380237579345703
    4. '_' → logprob: -8.005237579345703
    5. ' in' → logprob: -10.880237579345703
    6. ' ' → logprob: -12.130237579345703
    7. '_range' → logprob: -12.755237579345703
    8. '	range' → logprob: -14.630237579345703
    9. '(range' → logprob: -14.755237579345703
    10. ' xrange' → logprob: -15.005237579345703

Token 96: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09567909687757492
    2. 'range' → logprob: -2.4706790447235107
    3. ' in' → logprob: -5.09567928314209
    4. ' range' → logprob: -7.47067928314209
    5. '_' → logprob: -11.09567928314209
    6. 'for' → logprob: -12.97067928314209
    7. '(range' → logprob: -13.09567928314209
    8. 'f' → logprob: -14.34567928314209
    9. ' ' → logprob: -14.72067928314209
    10. 'i' → logprob: -14.97067928314209

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008617172949016094
    2. ' range' → logprob: -4.758617401123047
    3. '(range' → logprob: -13.258617401123047
    4. ' ' → logprob: -15.008617401123047
    5. '   ' → logprob: -15.383617401123047
    6. '	range' → logprob: -15.883617401123047
    7. '[' → logprob: -16.508617401123047
    8. '  ' → logprob: -17.258617401123047
    9. 'chars' → logprob: -17.508617401123047
    10. 'r' → logprob: -17.633617401123047

Token 98: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.22193655371665955
    2. '(K' → logprob: -1.971936583518982
    3. '(L' → logprob: -3.3469364643096924
    4. 'M' → logprob: -3.9719364643096924
    5. 'K' → logprob: -5.4719367027282715
    6. 'L' → logprob: -6.8469367027282715
    7. '(' → logprob: -7.8469367027282715
    8. '(N' → logprob: -9.471936225891113
    9. ' (' → logprob: -10.596936225891113
    10. ' M' → logprob: -11.909436225891113

Token 99: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4878414273262024
    2. ')' → logprob: -1.1128413677215576
    3. ']' → logprob: -2.8628413677215576
    4. '])' → logprob: -8.612841606140137
    5. ' )' → logprob: -10.362841606140137
    6. ')])' → logprob: -10.487841606140137
    7. ' ]' → logprob: -10.862841606140137
    8. '<|end|>' → logprob: -11.612841606140137
    9. '])]' → logprob: -11.612841606140137
    10. '）' → logprob: -11.862841606140137

Token 100: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0827694982290268
    2. 'votes' → logprob: -5.082769393920898
    3. 'scores' → logprob: -5.082769393920898
    4. 'score' → logprob: -5.207769393920898
    5. 'points' → logprob: -5.457769393920898
    6. 'ans' → logprob: -5.457769393920898
    7. 'graph' → logprob: -5.832769393920898
    8. 'DP' → logprob: -5.832769393920898
    9. 'result' → logprob: -5.957769393920898
    10. 'res' → logprob: -5.957769393920898

Token 101: ' fav' (ID: 11726)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09209314733743668
    2. 'score' → logprob: -4.092092990875244
    3. 'votes' → logprob: -4.842092990875244
    4. 'scores' → logprob: -4.967092990875244
    5. 'ans' → logprob: -5.342092990875244
    6. 'points' → logprob: -5.467092990875244
    7. 'result' → logprob: -5.717092990875244
    8. 'rank' → logprob: -5.717092990875244
    9. ' dp' → logprob: -5.967092990875244
    10. 'fav' (adapté à ' fav') → logprob: -6.092092990875244

Token 102: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37943896651268005
    2. '_counts' → logprob: -2.504438877105713
    3. '_idx' → logprob: -2.754438877105713
    4. '_count' → logprob: -3.254438877105713
    5. '_cnt' → logprob: -4.004438877105713
    6. '_scores' → logprob: -4.254438877105713
    7. '_index' → logprob: -4.379438877105713
    8. '_set' → logprob: -4.504438877105713
    9. '_sets' → logprob: -4.754438877105713
    10. '_indices' → logprob: -4.754438877105713

Token 103: '=set' (ID: 166509)
  Prédit: '=set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=set' → logprob: -0.47785940766334534
    2. '=' → logprob: -0.977859377861023
    3. ' =' → logprob: -6.1028594970703125
    4. 's' → logprob: -6.9778594970703125
    5. '={}' → logprob: -8.102859497070312
    6. '=s' → logprob: -8.477859497070312
    7. '={' → logprob: -9.852859497070312
    8. '=f' → logprob: -10.852859497070312
    9. '=[]' → logprob: -12.352859497070312
    10. '=create' → logprob: -12.852859497070312

Token 104: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0008517975220456719
    2. '()' → logprob: -7.500851631164551
    3. '(' → logprob: -8.12585163116455
    4. '([' → logprob: -13.87585163116455
    5. ' (' → logprob: -14.37585163116455
    6. '((' → logprob: -14.75085163116455
    7. 'f' → logprob: -14.87585163116455
    8. '(chars' → logprob: -16.000852584838867
    9. '(F' → logprob: -16.125852584838867
    10. '	f' → logprob: -16.875852584838867

Token 105: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.00122070184443146
    2. 'av' → logprob: -6.751220703125
    3. 'avorite' → logprob: -11.251220703125
    4. 's' → logprob: -11.751220703125
    5. 'fav' → logprob: -11.876220703125
    6. 'avorites' → logprob: -12.001220703125
    7. 'avor' → logprob: -12.001220703125
    8. ')' → logprob: -13.751220703125
    9. 'abs' → logprob: -13.751220703125
    10. '(av' → logprob: -14.126220703125

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.129266067640856e-05
    2. ')
' → logprob: -11.500020980834961
    3. ' )' → logprob: -11.500020980834961
    4. '())' → logprob: -14.875020980834961
    5. '))' → logprob: -15.500020980834961
    6. '<|end|>' → logprob: -16.37502098083496
    7. ')

' → logprob: -16.62502098083496
    8. ' ' → logprob: -16.87502098083496
    9. '),' → logprob: -16.87502098083496
    10. '()' → logprob: -17.00002098083496

Token 107: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.133597269654274
    2. '   ' → logprob: -2.7585973739624023
    3. 'score' → logprob: -4.508597373962402
    4. ' dp' → logprob: -4.633597373962402
    5. 'points' → logprob: -5.133597373962402
    6. 'scores' → logprob: -5.133597373962402
    7. 'result' → logprob: -6.258597373962402
    8. 'ans' → logprob: -6.383597373962402
    9. 'fav' → logprob: -6.508597373962402
    10. 'count' → logprob: -6.508597373962402

Token 108: ' chars' (ID: 47991)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.051134027540683746
    2. 'score' → logprob: -5.05113410949707
    3. 'scores' → logprob: -5.30113410949707
    4. 'fav' → logprob: -5.55113410949707
    5. 'points' → logprob: -5.67613410949707
    6. 'res' → logprob: -5.92613410949707
    7. '   ' → logprob: -6.17613410949707
    8. 'count' → logprob: -6.42613410949707
    9. 'f' → logprob: -6.55113410949707
    10. 'ans' → logprob: -6.55113410949707

Token 109: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.15299825370311737
    2. '()' → logprob: -2.652998208999634
    3. '(reverse' → logprob: -2.652998208999634
    4. '(' → logprob: -7.027998447418213
    5. '(
' → logprob: -9.777997970581055
    6. 'reverse' → logprob: -10.527997970581055
    7. '()
' → logprob: -11.402997970581055
    8. 'key' → logprob: -12.527997970581055
    9. '(lambda' → logprob: -13.777997970581055
    10. '();' → logprob: -14.152997970581055

Token 111: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -8.506661833962426e-05
    2. '=' → logprob: -9.37508487701416
    3. 'lambda' → logprob: -16.500085830688477
    4. '=item' → logprob: -18.375085830688477
    5. '=
' → logprob: -18.750085830688477
    6. '=}' → logprob: -18.750085830688477
    7. '=len' → logprob: -18.875085830688477
    8. '=str' → logprob: -18.875085830688477
    9. ')=' → logprob: -19.125085830688477
    10. '=

' → logprob: -19.250085830688477

Token 112: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6915245652198792
    2. 'x' → logprob: -1.1915245056152344
    3. ' lambda' → logprob: -1.9415245056152344
    4. 'lambda' → logprob: -3.1915245056152344
    5. '=lambda' → logprob: -5.191524505615234
    6. 'c' → logprob: -5.941524505615234
    7. ' c' → logprob: -6.066524505615234
    8. 's' → logprob: -8.816524505615234
    9. ' s' → logprob: -9.941524505615234
    10. ':' → logprob: -10.816524505615234

Token 113: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07945334911346436
    2. ':x' → logprob: -2.579453468322754
    3. ':(' → logprob: -7.704453468322754
    4. ' :' → logprob: -9.204453468322754
    5. 'x' → logprob: -12.079453468322754
    6. ':-' → logprob: -12.829453468322754
    7. ' :(' → logprob: -14.079453468322754
    8. ':int' → logprob: -14.204453468322754
    9. ':
' → logprob: -14.204453468322754
    10. ':[' → logprob: -14.704453468322754

Token 114: '-' (ID: 12)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.6181701421737671
    2. ' -' → logprob: -0.8681701421737671
    3. 'x' → logprob: -3.9931702613830566
    4. '-' → logprob: -4.243170261383057
    5. ' x' → logprob: -5.243170261383057
    6. '(-' → logprob: -6.243170261383057
    7. ' (-' → logprob: -7.993170261383057
    8. '-v' → logprob: -8.743169784545898
    9. '   ' → logprob: -8.993169784545898
    10. '-(' → logprob: -9.368169784545898

Token 115: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029613598599098623
    2. ' x' → logprob: -8.125296592712402
    3. '(x' → logprob: -17.625295639038086
    4. ')x' → logprob: -17.750295639038086
    5. '   ' → logprob: -19.125295639038086
    6. '
' → logprob: -19.250295639038086
    7. ')' → logprob: -19.375295639038086
    8. '	x' → logprob: -19.500295639038086
    9. 'char' → logprob: -20.375295639038086
    10. ' ' → logprob: -20.375295639038086

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.375
    3. '1' → logprob: -16.5
    4. ' [' → logprob: -17.75
    5. '```' → logprob: -18.75
    6. '[-' → logprob: -18.875
    7. '][' → logprob: -19.0
    8. '0' → logprob: -19.0
    9. '
' → logprob: -19.25
    10. '2' → logprob: -19.5

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023292062804102898
    2. '[' → logprob: -3.773292064666748
    3. '
' → logprob: -10.27329158782959
    4. '[
' → logprob: -12.77329158782959
    5. ' ' → logprob: -13.14829158782959
    6. '

' → logprob: -13.27329158782959
    7. ']' → logprob: -13.77329158782959
    8. '][' → logprob: -13.89829158782959
    9. '{' → logprob: -14.14829158782959
    10. '```' → logprob: -14.14829158782959

Token 118: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12029761075973511
    2. ',x' → logprob: -2.24529767036438
    3. '))' → logprob: -4.995297431945801
    4. ' ,' → logprob: -8.2452974319458
    5. ')' → logprob: -9.3702974319458
    6. ',-' → logprob: -10.1202974319458
    7. ']))' → logprob: -10.2452974319458
    8. ' ))' → logprob: -10.3702974319458
    9. ',
' → logprob: -10.6202974319458
    10. '),' → logprob: -10.8702974319458

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2254645675420761
    2. ' x' → logprob: -1.6004645824432373
    3. ' ' → logprob: -10.600464820861816
    4. '   ' → logprob: -12.350464820861816
    5. 'len' → logprob: -12.600464820861816
    6. '-' → logprob: -12.850464820861816
    7. '  ' → logprob: -12.850464820861816
    8. ')' → logprob: -13.225464820861816
    9. 'chr' → logprob: -13.350464820861816
    10. 'chars' → logprob: -13.350464820861816

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6286106983898208e-05
    2. '[
' → logprob: -11.625016212463379
    3. '0' → logprob: -12.125016212463379
    4. '2' → logprob: -14.875016212463379
    5. ')' → logprob: -15.000016212463379
    6. ' [' → logprob: -15.687516212463379
    7. '#' → logprob: -15.750016212463379
    8. '```' → logprob: -15.937516212463379
    9. '))' → logprob: -16.312517166137695
    10. ' ' → logprob: -16.437517166137695

Token 121: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04897848889231682
    2. '0' → logprob: -3.048978567123413
    3. '[' → logprob: -8.048978805541992
    4. '
' → logprob: -10.548978805541992
    5. ' ' → logprob: -10.798978805541992
    6. '-' → logprob: -11.548978805541992
    7. '```' → logprob: -12.861478805541992
    8. '

' → logprob: -12.923978805541992
    9. '1' → logprob: -13.361478805541992
    10. '3' → logprob: -13.486478805541992

Token 122: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005087109748274088
    2. ',' → logprob: -7.875508785247803
    3. ')' → logprob: -9.250508308410645
    4. ' ))' → logprob: -11.250508308410645
    5. '))
' → logprob: -11.500508308410645
    6. ')))' → logprob: -12.625508308410645
    7. '),' → logprob: -14.250508308410645
    8. '()))' → logprob: -14.500508308410645
    9. ',len' → logprob: -14.500508308410645
    10. '[' → logprob: -14.750508308410645

Token 123: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7302885055541992
    2. 'result' → logprob: -2.605288505554199
    3. 'score' → logprob: -2.605288505554199
    4. 'rank' → logprob: -2.605288505554199
    5. '   ' → logprob: -2.980288505554199
    6. 'for' → logprob: -3.730288505554199
    7. 'idx' → logprob: -4.105288505554199
    8. 'selected' → logprob: -4.230288505554199
    9. 'count' → logprob: -4.730288505554199
    10. 'res' → logprob: -4.855288505554199

Token 124: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -1.4619086980819702
    2. 'dp' → logprob: -1.7119086980819702
    3. 'result' → logprob: -2.4619088172912598
    4. 'for' → logprob: -2.8369088172912598
    5. 'res' → logprob: -2.9619088172912598
    6. 'idx' → logprob: -3.4619088172912598
    7. 'score' → logprob: -3.4619088172912598
    8. 'best' → logprob: -3.5869088172912598
    9. 'fav' → logprob: -3.5869088172912598
    10. 'pos' → logprob: -3.8369088172912598

Token 125: '=[' (ID: 13370)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11505144834518433
    2. '=' → logprob: -2.240051507949829
    3. '=[]' → logprob: -6.61505126953125
    4. ' =' → logprob: -7.99005126953125
    5. 'ing' → logprob: -8.74005126953125
    6. '=s' → logprob: -8.99005126953125
    7. '=[' → logprob: -9.99005126953125
    8. 'ings' → logprob: -10.11505126953125
    9. '=[]
' → logprob: -10.11505126953125
    10. '_=' → logprob: -10.24005126953125

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02347210980951786
    2. '-' → logprob: -4.148472309112549
    3. '[' → logprob: -5.148472309112549
    4. 'None' → logprob: -7.898472309112549
    5. '[-' → logprob: -8.02347183227539
    6. '1' → logprob: -8.27347183227539
    7. 'float' → logprob: -9.14847183227539
    8. '[N' → logprob: -9.52347183227539
    9. 'N' → logprob: -9.89847183227539
    10. '100' → logprob: -10.02347183227539

Token 127: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.20745500922203064
    2. ']' → logprob: -1.957455039024353
    3. ']*(' → logprob: -3.0824549198150635
    4. ' for' → logprob: -8.457454681396484
    5. 'for' → logprob: -9.707454681396484
    6. ' ]' → logprob: -12.207454681396484
    7. ']+' → logprob: -12.457454681396484
    8. ',' → logprob: -13.582454681396484
    9. ')]' → logprob: -14.082454681396484
    10. ')*' → logprob: -14.832454681396484

Token 128: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00023321842309087515
    2. '(N' → logprob: -8.75023365020752
    3. 'len' → logprob: -9.87523365020752
    4. '(' → logprob: -10.75023365020752
    5. '100' → logprob: -14.37523365020752
    6. ' N' → logprob: -14.62523365020752
    7. '(len' → logprob: -14.62523365020752
    8. 'n' → logprob: -16.125232696533203
    9. '101' → logprob: -17.375232696533203
    10. 'M' → logprob: -17.875232696533203

Token 129: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5142273902893066
    2. 'for' → logprob: -2.1392273902893066
    3. 'count' → logprob: -2.2642273902893066
    4. 'current' → logprob: -3.5142273902893066
    5. 'idx' → logprob: -3.6392273902893066
    6. 'rank' → logprob: -3.6392273902893066
    7. 'score' → logprob: -4.014227390289307
    8. 'prev' → logprob: -4.014227390289307
    9. 'cnt' → logprob: -4.014227390289307
    10. 'order' → logprob: -4.639227390289307

Token 130: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1546870470046997
    2. 'cur' → logprob: -1.7796870470046997
    3. 'for' → logprob: -2.02968692779541
    4. 'current' → logprob: -2.02968692779541
    5. 'prev' → logprob: -2.40468692779541
    6. 'idx' → logprob: -2.52968692779541
    7. 'cnt' → logprob: -3.40468692779541
    8. 'rank' → logprob: -3.77968692779541
    9. 'count' → logprob: -4.52968692779541
    10. 'last' → logprob: -5.65468692779541

Token 131: ' for' (ID: 395)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.9723672270774841
    2. 'pos' → logprob: -2.097367286682129
    3. 'prev' → logprob: -2.222367286682129
    4. 'current' → logprob: -2.472367286682129
    5. 'rank' → logprob: -2.722367286682129
    6. 'for' (adapté à ' for') → logprob: -3.097367286682129
    7. 'r' → logprob: -3.222367286682129
    8. 'last' → logprob: -3.222367286682129
    9. 'cnt' → logprob: -3.472367286682129
    10. 'idx' → logprob: -3.472367286682129

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08035130053758621
    2. ' i' → logprob: -2.5803513526916504
    3. 'idx' → logprob: -6.70535135269165
    4. ' idx' → logprob: -8.705350875854492
    5. 'pos' → logprob: -10.455350875854492
    6. 'index' → logprob: -11.080350875854492
    7. 'rank' → logprob: -12.205350875854492
    8. ' ' → logprob: -12.455350875854492
    9. 'r' → logprob: -12.830350875854492
    10. ' pos' → logprob: -12.955350875854492

Token 133: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2826721966266632
    2. 'in' → logprob: -1.4076721668243408
    3. ',' → logprob: -6.53267240524292
    4. ' ' → logprob: -11.157671928405762
    5. ',in' → logprob: -11.157671928405762
    6. ' ,' → logprob: -11.407671928405762
    7. ',char' → logprob: -12.032671928405762
    8. 'range' → logprob: -12.282671928405762
    9. ',n' → logprob: -12.407671928405762
    10. '	in' → logprob: -13.282671928405762

Token 134: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05291810631752014
    2. '_,' → logprob: -3.0529181957244873
    3. '_s' → logprob: -5.802917957305908
    4. 'name' → logprob: -7.302917957305908
    5. '_' → logprob: -7.677917957305908
    6. '_name' → logprob: -9.677918434143066
    7. ' s' → logprob: -9.677918434143066
    8. '__,' → logprob: -10.802918434143066
    9. 'c' → logprob: -12.552918434143066
    10. '_)' → logprob: -12.677918434143066

Token 135: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.06207367032766342
    2. ',' → logprob: -2.8120737075805664
    3. ',val' → logprob: -10.062073707580566
    4. ',value' → logprob: -10.562073707580566
    5. ',x' → logprob: -11.187073707580566
    6. ' ,' → logprob: -12.687073707580566
    7. ',num' → logprob: -12.812073707580566
    8. ',_' → logprob: -12.812073707580566
    9. ',j' → logprob: -13.312073707580566
    10. ',n' → logprob: -13.437073707580566

Token 136: ',j' (ID: 22712)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.15897254645824432
    2. ',' → logprob: -2.4089725017547607
    3. ',index' → logprob: -2.9089725017547607
    4. ',j' → logprob: -7.15897274017334
    5. ',n' → logprob: -7.90897274017334
    6. ',x' → logprob: -8.40897274017334
    7. ',pos' → logprob: -8.40897274017334
    8. ',num' → logprob: -8.65897274017334
    9. ',a' → logprob: -8.65897274017334
    10. ',_' → logprob: -9.65897274017334

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' )' → logprob: -12.000014305114746
    3. 'in' → logprob: -12.125014305114746
    4. ')=' → logprob: -13.250014305114746
    5. ' in' → logprob: -15.000014305114746
    6. '）' → logprob: -15.375014305114746
    7. ')
' → logprob: -15.500014305114746
    8. '))' → logprob: -17.25001335144043
    9. ')=>' → logprob: -17.50001335144043
    10. '),' → logprob: -17.87501335144043

Token 138: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3484567105770111
    2. ' in' → logprob: -1.2234567403793335
    3. '
' → logprob: -13.098456382751465
    4. '	in' → logprob: -13.223456382751465
    5. 's' → logprob: -13.473456382751465
    6. 'n' → logprob: -13.598456382751465
    7. 'inth' → logprob: -13.848456382751465
    8. 'inthe' → logprob: -14.098456382751465
    9. ' ' → logprob: -14.973456382751465
    10. '_in' → logprob: -15.098456382751465

Token 139: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.07889000326395035
    2. 'enumer' → logprob: -2.578890085220337
    3. 'en' → logprob: -16.953889846801758
    4. '```' → logprob: -17.078889846801758
    5. '.enumer' → logprob: -17.453889846801758
    6. '(en' → logprob: -17.453889846801758
    7. 'Enumer' → logprob: -18.078889846801758
    8. ' in' → logprob: -18.203889846801758
    9. ' enumer' → logprob: -18.578889846801758
    10. 'in' → logprob: -18.828889846801758

Token 140: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -1.5048530030981055e-06
    2. 'chars' → logprob: -13.500001907348633
    3. ' (' → logprob: -17.625001907348633
    4. ' chars' → logprob: -17.875001907348633
    5. '(' → logprob: -18.875001907348633
    6. '(range' → logprob: -19.000001907348633
    7. '(ch' → logprob: -19.125001907348633
    8. '(sorted' → logprob: -19.250001907348633
    9. '(chr' → logprob: -19.625001907348633
    10. '(char' → logprob: -19.875001907348633

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03931165114045143
    2. ':' → logprob: -3.539311647415161
    3. '):
' → logprob: -4.66431188583374
    4. ',' → logprob: -10.289311408996582
    5. ':
' → logprob: -10.539311408996582
    6. ' ):' → logprob: -10.914311408996582
    7. ')' → logprob: -12.164311408996582
    8. ']:' → logprob: -13.414311408996582
    9. '):
' → logprob: -13.914311408996582
    10. '   ' → logprob: -14.164311408996582

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8560062050819397
    2. ':
' → logprob: -1.481006145477295
    3. 'rank' → logprob: -1.606006145477295
    4. ':' → logprob: -2.106006145477295
    5. ' rank' → logprob: -4.481006145477295
    6. '):
' → logprob: -4.856006145477295
    7. '
' → logprob: -6.356006145477295
    8. 'if' → logprob: -6.731006145477295
    9. '(rank' → logprob: -7.106006145477295
    10. '):' → logprob: -7.481006145477295

Token 143: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.0034291273914277554
    2. 'if' → logprob: -6.003428936004639
    3. ' rank' → logprob: -7.128428936004639
    4. '   ' → logprob: -9.378429412841797
    5. ' if' → logprob: -10.378429412841797
    6. '
' → logprob: -11.003429412841797
    7. 'index' → logprob: -12.503429412841797
    8. '(rank' → logprob: -12.753429412841797
    9. 'idx' → logprob: -13.253429412841797
    10. 'name' → logprob: -13.253429412841797

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10633029788732529
    2. '[' → logprob: -2.731330394744873
    3. '[i' → logprob: -3.356330394744873
    4. '[s' → logprob: -7.481330394744873
    5. '[r' → logprob: -9.231329917907715
    6. '[v' → logprob: -9.481329917907715
    7. '=' → logprob: -10.231329917907715
    8. '[index' → logprob: -11.231329917907715
    9. '[idx' → logprob: -11.481329917907715
    10. '[
' → logprob: -11.731329917907715

Token 145: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.09362993389368057
    2. '=' → logprob: -3.343629837036133
    3. '=i' → logprob: -3.468629837036133
    4. ')=' → logprob: -4.218629837036133
    5. ']' → logprob: -4.843629837036133
    6. ')' → logprob: -8.718629837036133
    7. ' =' → logprob: -9.718629837036133
    8. ']+=' → logprob: -10.218629837036133
    9. ' ]' → logprob: -11.468629837036133
    10. '"]=' → logprob: -11.718629837036133

Token 146: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.869017852295656e-06
    2. ' i' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '
' → logprob: -16.37500762939453
    5. '	i' → logprob: -18.12500762939453
    6. '(i' → logprob: -18.37500762939453
    7. '[i' → logprob: -19.37500762939453
    8. ' ' → logprob: -19.50000762939453
    9. '  ' → logprob: -19.87500762939453
    10. '
' → logprob: -20.25000762939453

Token 147: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0452708005905151
    2. 'for' → logprob: -1.6702708005905151
    3. 'dp' → logprob: -2.2952709197998047
    4. 'if' → logprob: -2.9202709197998047
    5. 'print' → logprob: -3.4202709197998047
    6. 'max' → logprob: -3.6702709197998047
    7. 'while' → logprob: -3.6702709197998047
    8. '#' → logprob: -3.9202709197998047
    9. 'score' → logprob: -4.045270919799805
    10. 'result' → logprob: -4.295270919799805

Token 149: ' def' (ID: 1056)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9184004664421082
    2. 'for' → logprob: -2.043400526046753
    3. 'ans' → logprob: -2.293400526046753
    4. 'result' → logprob: -3.293400526046753
    5. 'answer' → logprob: -3.293400526046753
    6. 'res' → logprob: -3.293400526046753
    7. 'fav' → logprob: -3.293400526046753
    8. 'while' → logprob: -4.168400287628174
    9. 'answers' → logprob: -4.168400287628174
    10. 'best' → logprob: -4.293400287628174

Token 150: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4468308389186859
    2. ' check' → logprob: -2.0718307495117188
    3. ' solve' → logprob: -2.3218307495117188
    4. 'solve' → logprob: -3.6968307495117188
    5. ' is' → logprob: -3.8218307495117188
    6. ' main' → logprob: -4.071830749511719
    7. ' dfs' → logprob: -4.071830749511719
    8. 'can' → logprob: -4.321830749511719
    9. ' valid' → logprob: -5.071830749511719
    10. ' calc' → logprob: -5.071830749511719

Token 151: '(x' (ID: 4061)
  Prédit: '_buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_buy' → logprob: -1.4991886615753174
    2. '_use' → logprob: -2.1241886615753174
    3. '_take' → logprob: -2.3741886615753174
    4. '_choose' → logprob: -2.4991886615753174
    5. '_play' → logprob: -2.6241886615753174
    6. '_select' → logprob: -2.9991886615753174
    7. '_do' → logprob: -3.2491886615753174
    8. '_place' → logprob: -3.3741886615753174
    9. '_continue' → logprob: -3.4991886615753174
    10. '_pro' → logprob: -3.7491886615753174

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031043244525790215
    2. ',' → logprob: -4.28104305267334
    3. '):
' → logprob: -4.28104305267334
    4. ',x' → logprob: -7.28104305267334
    5. ':' → logprob: -8.15604305267334
    6. ',y' → logprob: -8.15604305267334
    7. ')' → logprob: -8.53104305267334
    8. '):
' → logprob: -8.78104305267334
    9. '   ' → logprob: -8.90604305267334
    10. ',p' → logprob: -9.03104305267334

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5128495097160339
    2. '   ' → logprob: -1.5128495693206787
    3. '<|end|>' → logprob: -2.2628495693206787
    4. '    ' → logprob: -3.3878495693206787
    5. 'score' → logprob: -5.0128493309021
    6. 'dp' → logprob: -5.5128493309021
    7. ' if' → logprob: -5.7628493309021
    8. 'count' → logprob: -6.0128493309021
    9. 'max' → logprob: -6.5128493309021
    10. ' score' → logprob: -6.6378493309021

Token 154: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5927926301956177
    2. '   ' → logprob: -1.7177926301956177
    3. ' for' → logprob: -2.092792510986328
    4. ' res' → logprob: -3.342792510986328
    5. ' used' → logprob: -3.342792510986328
    6. 'if' → logprob: -3.467792510986328
    7. ' s' → logprob: -3.467792510986328
    8. ' prev' → logprob: -3.717792510986328
    9. ' x' → logprob: -3.967792510986328
    10. 'score' → logprob: -4.092792510986328

Token 155: ' can' (ID: 665)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.626038670539856
    2. 'selected' → logprob: -1.876038670539856
    3. 'cnt' → logprob: -2.2510385513305664
    4. 'pass' → logprob: -2.8760385513305664
    5. 'dp' → logprob: -3.3760385513305664
    6. 'left' → logprob: -4.376038551330566
    7. 'needed' → logprob: -4.626038551330566
    8. 'fav' → logprob: -4.751038551330566
    9. 'return' → logprob: -5.001038551330566
    10. 'total' → logprob: -5.251038551330566

Token 156: ' we' (ID: 581)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.8170080184936523
    2. ' x' → logprob: -2.1920080184936523
    3. 'pass' → logprob: -2.3170080184936523
    4. 'x' → logprob: -2.5670080184936523
    5. 'buy' → logprob: -2.6920080184936523
    6. ')' → logprob: -3.4420080184936523
    7. '[]' → logprob: -3.5670080184936523
    8. ' pass' → logprob: -3.5670080184936523
    9. 'cnt' → logprob: -3.5670080184936523
    10. '[' → logprob: -3.6920080184936523

Token 157: ' put' (ID: 3006)
  Prédit: ' select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.8118306398391724
    2. ' have' → logprob: -2.061830520629883
    3. ' get' → logprob: -2.686830520629883
    4. ' pick' → logprob: -3.186830520629883
    5. ' choose' → logprob: -3.186830520629883
    6. 'select' → logprob: -3.561830520629883
    7. ' cover' → logprob: -3.686830520629883
    8. ' include' → logprob: -3.811830520629883
    9. ' complete' → logprob: -3.936830520629883
    10. ' use' → logprob: -3.936830520629883

Token 158: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23050321638584137
    2. ' x' → logprob: -1.8555032014846802
    3. 'all' → logprob: -4.480503082275391
    4. ' all' → logprob: -4.605503082275391
    5. 'the' → logprob: -4.980503082275391
    6. ' the' → logprob: -5.605503082275391
    7. 'chars' → logprob: -5.855503082275391
    8. 'a' → logprob: -6.230503082275391
    9. ' chars' → logprob: -6.480503082275391
    10. 'M' → logprob: -6.855503082275391

Token 159: ' fav' (ID: 11726)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02363291010260582
    2. '[' → logprob: -4.273633003234863
    3. 'or' → logprob: -5.523633003234863
    4. 'chars' → logprob: -7.023633003234863
    5. ')' → logprob: -7.273633003234863
    6. '[]' → logprob: -7.398633003234863
    7. '_chars' → logprob: -7.523633003234863
    8. 'ored' → logprob: -7.648633003234863
    9. 'ors' → logprob: -8.273633003234863
    10. 'ort' → logprob: -8.273633003234863

Token 161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1181752160191536
    2. ' ' → logprob: -3.3681752681732178
    3. '<|end|>' → logprob: -3.8681752681732178
    4. ')' → logprob: -4.493175029754639
    5. ' at' → logprob: -4.618175029754639
    6. ' on' → logprob: -4.743175029754639
    7. ' into' → logprob: -4.993175029754639
    8. 'in' → logprob: -5.368175029754639
    9. '[]' → logprob: -5.868175029754639
    10. '```' → logprob: -6.118175029754639

Token 162: ' top' (ID: 2344)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2039086818695068
    2. ' chars' → logprob: -1.3289086818695068
    3. ' the' → logprob: -1.4539086818695068
    4. 'chars' → logprob: -1.8289086818695068
    5. ' range' → logprob: -4.953908920288086
    6. 'fav' → logprob: -5.578908920288086
    7. 'range' → logprob: -5.703908920288086
    8. 'f' → logprob: -5.953908920288086
    9. ' a' → logprob: -6.203908920288086
    10. ' total' → logprob: -6.453908920288086

Token 163: ' K' (ID: 658)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0027915649116039276
    2. ' x' → logprob: -6.127791404724121
    3. 'L' → logprob: -8.502791404724121
    4. '```' → logprob: -9.127791404724121
    5. 'rank' → logprob: -9.377791404724121
    6. 'K' → logprob: -9.752791404724121
    7. 'k' → logprob: -10.377791404724121
    8. '(x' → logprob: -11.127791404724121
    9. '10' → logprob: -11.502791404724121
    10. ' ' → logprob: -11.877791404724121

Token 164: '?
' (ID: 3901)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.06042882055044174
    2. ':' → logprob: -3.6854288578033447
    3. ')' → logprob: -4.435428619384766
    4. '<|end|>' → logprob: -4.810428619384766
    5. '):' → logprob: -4.810428619384766
    6. '   ' → logprob: -6.560428619384766
    7. ')?' → logprob: -6.685428619384766
    8. '?
' → logprob: -7.560428619384766
    9. ''s' → logprob: -7.935428619384766
    10. ':
' → logprob: -8.310428619384766

Token 165: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5046764016151428
    2. '<|end|>' → logprob: -1.254676342010498
    3. '   ' → logprob: -3.129676342010498
    4. ')' → logprob: -4.129676342010498
    5. '):' → logprob: -4.504676342010498
    6. '\n' → logprob: -5.254676342010498
    7. '
' → logprob: -5.504676342010498
    8. '():' → logprob: -5.754676342010498
    9. '<|end|>' → logprob: -5.754676342010498
    10. '?' → logprob: -5.879676342010498

Token 166: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1357221603393555
    2. '   ' → logprob: -2.3857221603393555
    3. '\n' → logprob: -2.7607221603393555
    4. ' if' → logprob: -2.8857221603393555
    5. ' for' → logprob: -3.2607221603393555
    6. '    ' → logprob: -3.5107221603393555
    7. 'count' → logprob: -3.6357221603393555
    8. '
' → logprob: -3.6357221603393555
    9. ' ' → logprob: -3.8857221603393555
    10. ' pass' → logprob: -3.8857221603393555

Token 167: ' assign' (ID: 14975)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.1562230587005615
    2. 'count' → logprob: -1.2812230587005615
    3. 'fav' → logprob: -1.2812230587005615
    4. ' cnt' → logprob: -3.1562230587005615
    5. 'pos' → logprob: -3.7812230587005615
    6. ' count' → logprob: -3.9062230587005615
    7. ' fav' → logprob: -4.031223297119141
    8. 'top' → logprob: -6.156223297119141
    9. 'selected' → logprob: -6.156223297119141
    10. 'c' → logprob: -6.406223297119141

Token 168: ' L' (ID: 451)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.8782644867897034
    2. 'ments' → logprob: -3.1282644271850586
    3. 'cnt' → logprob: -3.1282644271850586
    4. 'x' → logprob: -3.3782644271850586
    5. 'scores' → logprob: -3.5032644271850586
    6. 'tasks' → logprob: -3.6282644271850586
    7. ' x' → logprob: -3.7532644271850586
    8. 'count' → logprob: -3.7532644271850586
    9. ' tasks' → logprob: -3.8782644271850586
    10. '[]' → logprob: -3.8782644271850586

Token 169: ' votes' (ID: 24183)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7220095992088318
    2. 'fav' → logprob: -1.4720096588134766
    3. '<|end|>' → logprob: -2.4720096588134766
    4. ' =' → logprob: -3.5970096588134766
    5. '-' → logprob: -3.5970096588134766
    6. ' favored' → logprob: -3.7220096588134766
    7. '```' → logprob: -4.597009658813477
    8. 'favorite' → logprob: -4.972009658813477
    9. ' chars' → logprob: -4.972009658813477
    10. '+' → logprob: -5.097009658813477

Token 170: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1663360297679901
    2. '<|end|>' → logprob: -2.7913360595703125
    3. '():' → logprob: -3.9163360595703125
    4. '
' → logprob: -4.0413360595703125
    5. ':
' → logprob: -4.4163360595703125
    6. '   ' → logprob: -4.5413360595703125
    7. '<|end|>' → logprob: -4.5413360595703125
    8. '?' → logprob: -5.1663360595703125
    9. ':return' → logprob: -6.4163360595703125
    10. '(' → logprob: -6.5413360595703125

Token 171: ' these' (ID: 1879)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3960825502872467
    2. 'fav' → logprob: -2.146082639694214
    3. ' x' → logprob: -2.896082639694214
    4. ' top' → logprob: -3.521082639694214
    5. ' the' → logprob: -3.771082639694214
    6. 'top' → logprob: -3.896082639694214
    7. ' favorite' → logprob: -3.896082639694214
    8. 'the' → logprob: -4.146082401275635
    9. 'favorite' → logprob: -4.521082401275635
    10. '[x' → logprob: -5.021082401275635

Token 172: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08101276308298111
    2. '(' → logprob: -3.581012725830078
    3. '(x' → logprob: -3.581012725830078
    4. '
' → logprob: -5.581012725830078
    5. '   ' → logprob: -5.706012725830078
    6. ')' → logprob: -6.081012725830078
    7. '<|end|>' → logprob: -6.206012725830078
    8. ':
' → logprob: -6.331012725830078
    9. '(n' → logprob: -6.331012725830078
    10. '():' → logprob: -6.831012725830078

Token 173: ' fav' (ID: 11726)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44103750586509705
    2. ' chars' → logprob: -2.06603741645813
    3. '<|end|>' → logprob: -2.06603741645813
    4. 'chars' → logprob: -3.56603741645813
    5. '_chars' → logprob: -3.56603741645813
    6. ')' → logprob: -3.56603741645813
    7. '<|end|>' → logprob: -5.691037654876709
    8. ' characters' → logprob: -6.191037654876709
    9. '   ' → logprob: -6.316037654876709
    10. '_' → logprob: -6.941037654876709

Token 175: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7837554812431335
    2. '<|end|>' → logprob: -1.0337555408477783
    3. '   ' → logprob: -1.9087555408477783
    4. '
' → logprob: -4.408755302429199
    5. '<|end|>' → logprob: -4.408755302429199
    6. '       ' → logprob: -5.533755302429199
    7. ':
' → logprob: -6.158755302429199
    8. '):' → logprob: -6.158755302429199
    9. ')' → logprob: -6.533755302429199
    10. ',' → logprob: -6.908755302429199

Token 176: ' move' (ID: 5275)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.10850582271814346
    2. 'make' → logprob: -3.7335057258605957
    3. 'increase' → logprob: -3.9835057258605957
    4. 'min' → logprob: -4.233505725860596
    5. ' maximize' → logprob: -4.483505725860596
    6. 'ach' → logprob: -4.858505725860596
    7. 'keep' → logprob: -5.608505725860596
    8. 'raise' → logprob: -6.233505725860596
    9. 'give' → logprob: -6.233505725860596
    10. ' increase' → logprob: -6.483505725860596

Token 177: ' them' (ID: 1373)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43031954765319824
    2. '<|end|>' → logprob: -1.3053195476531982
    3. '
' → logprob: -3.4303195476531982
    4. ':' → logprob: -4.180319786071777
    5. '<|end|>' → logprob: -4.430319786071777
    6. '       ' → logprob: -5.430319786071777
    7. ')' → logprob: -5.805319786071777
    8. ':
' → logprob: -5.930319786071777
    9. 'def' → logprob: -6.430319786071777
    10. ' ' → logprob: -6.930319786071777

Token 180: ' needed' (ID: 6118)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5035873055458069
    2. 'x' → logprob: -1.753587245941162
    3. 'needed' → logprob: -2.003587245941162
    4. ' possible' → logprob: -3.378587245941162
    5. ' x' → logprob: -3.878587245941162
    6. ' needed' → logprob: -3.878587245941162
    7. 'necessary' → logprob: -4.628587245941162
    8. 'they' → logprob: -7.253587245941162
    9. ' necessary' → logprob: -7.378587245941162
    10. '```' → logprob: -8.75358772277832

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8186951279640198
    2. '
' → logprob: -1.443695068359375
    3. '<|end|>' → logprob: -1.693695068359375
    4. ':' → logprob: -2.693695068359375
    5. '    
' → logprob: -3.818695068359375
    6. '    ' → logprob: -4.818695068359375
    7. '<|end|>' → logprob: -4.818695068359375
    8. '       ' → logprob: -4.943695068359375
    9. '\n' → logprob: -5.568695068359375
    10. ')' → logprob: -5.693695068359375

Token 182: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0038208961486816
    2. '<|end|>' → logprob: -1.0038208961486816
    3. '
' → logprob: -1.7538208961486816
    4. '   ' → logprob: -3.8788208961486816
    5. ':
' → logprob: -4.253820896148682
    6. '\n' → logprob: -4.503820896148682
    7. '<|end|>' → logprob: -5.003820896148682
    8. ')' → logprob: -5.003820896148682
    9. ' 
' → logprob: -5.128820896148682
    10. '(' → logprob: -5.503820896148682

Token 183: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' the' (ID: 290)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7816587686538696
    2. '   ' → logprob: -1.7816587686538696
    3. 'pass' → logprob: -2.65665864944458
    4. 'votes' → logprob: -2.78165864944458
    5. ' used' → logprob: -3.15665864944458
    6. ' votes' → logprob: -3.28165864944458
    7. ' left' → logprob: -4.28165864944458
    8. ' return' → logprob: -4.28165864944458
    9. 'return' → logprob: -4.53165864944458
    10. 'fav' → logprob: -4.65665864944458

Token 185: ' rest' (ID: 2867)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' → logprob: -1.3923441171646118
    2. 'rest' → logprob: -1.5173441171646118
    3. 'need' → logprob: -2.5173439979553223
    4. '#' → logprob: -3.1423439979553223
    5. 'used' → logprob: -3.5173439979553223
    6. 'other' → logprob: -3.6423439979553223
    7. 'needed' → logprob: -3.6423439979553223
    8. ' rest' → logprob: -3.7673439979553223
    9. 'best' → logprob: -3.7673439979553223
    10. 'def' → logprob: -3.7673439979553223

Token 186: ' fav' (ID: 11726)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4432757496833801
    2. '=' → logprob: -1.9432756900787354
    3. 'of' → logprob: -2.3182756900787354
    4. ' =' → logprob: -4.1932759284973145
    5. ' are' → logprob: -4.1932759284973145
    6. '<|end|>' → logprob: -4.1932759284973145
    7. '<|end|>' → logprob: -4.4432759284973145
    8. ',' → logprob: -4.5682759284973145
    9. 'x' → logprob: -4.5682759284973145
    10. '   ' → logprob: -5.0682759284973145

Token 187: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.49527475237846375
    2. 's' → logprob: -1.1202747821807861
    3. '_' → logprob: -2.870274782180786
    4. 'chars' → logprob: -6.120274543762207
    5. '_s' → logprob: -6.620274543762207
    6. ')' → logprob: -6.870274543762207
    7. '<|end|>' → logprob: -7.120274543762207
    8. '_count' → logprob: -7.120274543762207
    9. '_votes' → logprob: -8.745274543762207
    10. ' _' → logprob: -8.870274543762207

Token 188: ' not' (ID: 625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' promoted' (ID: 49916)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5448729991912842
    2. 'm' → logprob: -1.5448729991912842
    3. 'assigned' → logprob: -2.669872999191284
    4. 'used' → logprob: -3.919872999191284
    5. 'put' → logprob: -4.294873237609863
    6. 'using' → logprob: -4.544873237609863
    7. 'allowed' → logprob: -4.669873237609863
    8. ' in' → logprob: -4.794873237609863
    9. 'able' → logprob: -5.044873237609863
    10. ' moved' → logprob: -5.294873237609863

Token 190: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2701367735862732
    2. '<|end|>' → logprob: -1.895136833190918
    3. '
' → logprob: -2.895136833190918
    4. ':
' → logprob: -4.645136833190918
    5. '<|end|>' → logprob: -5.520136833190918
    6. ')' → logprob: -5.645136833190918
    7. '):' → logprob: -5.645136833190918
    8. '   ' → logprob: -5.770136833190918
    9. ',' → logprob: -6.520136833190918
    10. '(' → logprob: -6.895136833190918

Token 191: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12423460185527802
    2. '   ' → logprob: -2.749234676361084
    3. '<|end|>' → logprob: -3.374234676361084
    4. '
' → logprob: -5.249234676361084
    5. '):' → logprob: -5.374234676361084
    6. ')' → logprob: -5.749234676361084
    7. ':
' → logprob: -6.749234676361084
    8. '\n' → logprob: -7.249234676361084
    9. '<|end|>' → logprob: -7.249234676361084
    10. '    
' → logprob: -7.374234676361084

Token 192: ' #' (ID: 1069)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -2.2452456951141357
    2. 'votes' → logprob: -2.2452456951141357
    3. 'count' → logprob: -2.3702456951141357
    4. ' count' → logprob: -2.6202456951141357
    5. ' votes' → logprob: -2.7452456951141357
    6. ' top' → logprob: -2.8702456951141357
    7. ' pass' → logprob: -2.9952456951141357
    8. 'cnt' → logprob: -3.2452456951141357
    9. '   ' → logprob: -3.3702456951141357
    10. ' cnt' → logprob: -3.4952456951141357

Token 193: ' check' (ID: 2371)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -1.595107913017273
    2. ' non' → logprob: -1.720107913017273
    3. 'non' → logprob: -2.3451080322265625
    4. ' fav' → logprob: -2.8451080322265625
    5. '   ' → logprob: -3.0951080322265625
    6. ' top' → logprob: -3.2201080322265625
    7. 'pos' → logprob: -3.2201080322265625
    8. 'prom' → logprob: -3.4701080322265625
    9. 'top' → logprob: -3.5951080322265625
    10. 'votes' → logprob: -3.7201080322265625

Token 194: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' condition' (ID: 7060)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40079930424690247
    2. 'sum' → logprob: -2.40079927444458
    3. 'len' → logprob: -2.90079927444458
    4. 'rank' → logprob: -3.27579927444458
    5. ' any' → logprob: -3.77579927444458
    6. 'the' → logprob: -3.77579927444458
    7. ' x' → logprob: -3.90079927444458
    8. 'any' → logprob: -4.02579927444458
    9. 'fav' → logprob: -4.40079927444458
    10. 'all' → logprob: -4.77579927444458

Token 196: ' holds' (ID: 18305)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' after' (ID: 1934)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' allocation' (ID: 45311)
  Prédit: 'promotion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'promotion' → logprob: -0.2919580936431885
    2. 'prom' → logprob: -2.0419580936431885
    3. 'assign' → logprob: -3.0419580936431885
    4. ' promotion' → logprob: -3.4169580936431885
    5. 'assignment' → logprob: -4.041957855224609
    6. 'app' → logprob: -5.166957855224609
    7. 'allocation' → logprob: -5.541957855224609
    8. 'the' → logprob: -6.041957855224609
    9. 'x' → logprob: -6.291957855224609
    10. 'distribution' → logprob: -6.666957855224609

Token 199: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040209028869867325
    2. '
' → logprob: -4.16520881652832
    3. '<|end|>' → logprob: -5.16520881652832
    4. ':
' → logprob: -5.54020881652832
    5. '   ' → logprob: -5.79020881652832
    6. '(' → logprob: -5.91520881652832
    7. '):' → logprob: -6.66520881652832
    8. '\n' → logprob: -6.79020881652832
    9. '():' → logprob: -7.04020881652832
    10. '\' → logprob: -7.04020881652832

Token 200: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6373118758201599
    2. '   ' → logprob: -1.1373119354248047
    3. '<|end|>' → logprob: -2.3873119354248047
    4. '
' → logprob: -3.8873119354248047
    5. '       ' → logprob: -4.637311935424805
    6. '):' → logprob: -4.637311935424805
    7. ')' → logprob: -5.387311935424805
    8. ':
' → logprob: -6.012311935424805
    9. '(' → logprob: -6.137311935424805
    10. '    ' → logprob: -6.512311935424805

Token 201: ' promoted' (ID: 49916)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15474346280097961
    2. '=f' → logprob: -2.6547434329986572
    3. ' =' → logprob: -3.5297434329986572
    4. '=[]' → logprob: -3.6547434329986572
    5. '=[' → logprob: -4.654743671417236
    6. '=set' → logprob: -5.154743671417236
    7. '_f' → logprob: -6.654743671417236
    8. '=len' → logprob: -8.154743194580078
    9. '=[]
' → logprob: -8.279743194580078
    10. '=list' → logprob: -9.029743194580078

Token 203: ' sorted' (ID: 20099)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.0658414363861084
    2. 'f' → logprob: -1.6908414363861084
    3. '[x' → logprob: -1.6908414363861084
    4. 'x' → logprob: -2.5658414363861084
    5. 'chars' → logprob: -3.0658414363861084
    6. '[f' → logprob: -3.1908414363861084
    7. 'sorted' → logprob: -3.3158414363861084
    8. '[]' → logprob: -3.6908414363861084
    9. 'fav' → logprob: -4.3158416748046875
    10. '[' → logprob: -4.5658416748046875

Token 204: '(f' (ID: 1526)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1371418833732605
    2. '([(' → logprob: -2.8871419429779053
    3. '(' → logprob: -3.3871419429779053
    4. '(f' → logprob: -3.8871419429779053
    5. '((' → logprob: -5.637141704559326
    6. '([
' → logprob: -5.762141704559326
    7. 'f' → logprob: -5.762141704559326
    8. '(
' → logprob: -6.262141704559326
    9. '(chars' → logprob: -6.262141704559326
    10. '[' → logprob: -6.637141704559326

Token 205: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.02325829118490219
    2. 'av' → logprob: -4.523258209228516
    3. '[' → logprob: -5.398258209228516
    4. '[(' → logprob: -5.773258209228516
    5. 'chars' → logprob: -5.898258209228516
    6. 'avorites' → logprob: -7.898258209228516
    7. '([' → logprob: -8.648258209228516
    8. '[:' → logprob: -8.773258209228516
    9. '[key' → logprob: -9.023258209228516
    10. '(chars' → logprob: -9.523258209228516

Token 206: ')
' (ID: 446)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.38519683480262756
    2. ',' → logprob: -1.3851968050003052
    3. ',key' → logprob: -2.8851969242095947
    4. 'key' → logprob: -4.635196685791016
    5. ')' → logprob: -6.135196685791016
    6. '(),' → logprob: -7.385196685791016
    7. '()' → logprob: -7.635196685791016
    8. '(key' → logprob: -8.635196685791016
    9. '[' → logprob: -9.010196685791016
    10. '[key' → logprob: -9.385196685791016

Token 207: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' choose' (ID: 5655)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.489850401878357
    2. ' pass' → logprob: -2.1148505210876465
    3. 'for' → logprob: -2.3648505210876465
    4. 'prom' → logprob: -2.3648505210876465
    5. ' for' → logprob: -2.6148505210876465
    6. 'x' → logprob: -2.9898505210876465
    7. 'if' → logprob: -3.2398505210876465
    8. ' x' → logprob: -3.2398505210876465
    9. 'fav' → logprob: -3.4898505210876465
    10. 'count' → logprob: -3.6148505210876465

Token 210: ' top' (ID: 2344)
  Prédit: ' promoted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' promoted' → logprob: -0.502251923084259
    2. 'prom' → logprob: -1.0022518634796143
    3. 'f' → logprob: -5.002252101898193
    4. 'fav' → logprob: -5.252252101898193
    5. 'x' → logprob: -5.627252101898193
    6. 'from' → logprob: -6.252252101898193
    7. 'top' → logprob: -6.752252101898193
    8. '(prom' → logprob: -6.877252101898193
    9. 's' → logprob: -7.002252101898193
    10. ' x' → logprob: -7.127252101898193

Token 211: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00524667976424098
    2. ' x' → logprob: -5.255246639251709
    3. '(x' → logprob: -12.630247116088867
    4. 'K' → logprob: -13.005247116088867
    5. '```' → logprob: -13.630247116088867
    6. '[x' → logprob: -13.755247116088867
    7. 'k' → logprob: -14.005247116088867
    8. '{x' → logprob: -14.505247116088867
    9. '<|end|>' → logprob: -14.505247116088867
    10. '
' → logprob: -15.005247116088867

Token 212: ' fav' (ID: 11726)
  Prédit: ' favored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' favored' → logprob: -1.2888057231903076
    2. '<|end|>' → logprob: -1.2888057231903076
    3. 'fav' → logprob: -1.9138057231903076
    4. 'f' → logprob: -2.0388057231903076
    5. ')' → logprob: -3.0388057231903076
    6. 'prom' → logprob: -4.163805961608887
    7. 'sorted' → logprob: -4.413805961608887
    8. 'favorites' → logprob: -4.663805961608887
    9. ' promoted' → logprob: -4.788805961608887
    10. 'chars' → logprob: -4.788805961608887

Token 213: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.806227445602417
    2. '_chars' → logprob: -1.306227445602417
    3. ')' → logprob: -2.681227445602417
    4. 'chars' → logprob: -2.931227445602417
    5. '_f' → logprob: -3.056227445602417
    6. '_' → logprob: -3.181227445602417
    7. ' chars' → logprob: -3.431227445602417
    8. '<|end|>' → logprob: -4.306227684020996
    9. 'f' → logprob: -5.056227684020996
    10. ' )' → logprob: -5.806227684020996

Token 214: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' promote' (ID: 15232)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.010166482999920845
    2. ' promote' → logprob: -5.135166645050049
    3. ' promoted' → logprob: -5.635166645050049
    4. 'be' → logprob: -8.51016616821289
    5. ' be' → logprob: -9.01016616821289
    6. 'put' → logprob: -9.26016616821289
    7. 'sorted' → logprob: -10.13516616821289
    8. 'sort' → logprob: -10.51016616821289
    9. 'f' → logprob: -11.01016616821289
    10. '_prom' → logprob: -11.01016616821289

Token 216: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' lex' (ID: 37772)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.03804757073521614
    2. ' promoted' → logprob: -4.538047790527344
    3. 'range' → logprob: -4.788047790527344
    4. 'f' → logprob: -4.913047790527344
    5. 'fav' → logprob: -5.288047790527344
    6. ' range' → logprob: -5.788047790527344
    7. 'rank' → logprob: -6.413047790527344
    8. 'the' → logprob: -8.038047790527344
    9. 'sorted' → logprob: -8.288047790527344
    10. '
' → logprob: -9.538047790527344

Token 218: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5412651300430298
    2. 'ic' → logprob: -1.2912651300430298
    3. ' order' → logprob: -2.0412650108337402
    4. 'ographical' → logprob: -5.16626501083374
    5. 'sorted' → logprob: -5.66626501083374
    6. 'ico' → logprob: -6.79126501083374
    7. 'ical' → logprob: -7.29126501083374
    8. 'fav' → logprob: -7.54126501083374
    9. '_order' → logprob: -7.79126501083374
    10. 'sort' → logprob: -7.91626501083374

Token 219: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' consistency' (ID: 45250)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9166378974914551
    2. 'i' → logprob: -1.166637897491455
    3. 'fav' → logprob: -2.166637897491455
    4. ' x' → logprob: -3.291637897491455
    5. 'prom' → logprob: -3.291637897491455
    6. ' i' → logprob: -3.541637897491455
    7. 'promotion' → logprob: -4.416637897491455
    8. 'the' → logprob: -5.166637897491455
    9. 'f' → logprob: -5.291637897491455
    10. '_' → logprob: -5.416637897491455

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0646008253097534
    2. '<|end|>' → logprob: -1.0646008253097534
    3. '
' → logprob: -1.8146008253097534
    4. ',' → logprob: -3.064600944519043
    5. '   ' → logprob: -3.689600944519043
    6. '<|end|>' → logprob: -4.189600944519043
    7. '        
' → logprob: -4.564600944519043
    8. '[:' → logprob: -4.689600944519043
    9. '[' → logprob: -4.814600944519043
    10. '[::-' → logprob: -5.814600944519043

Token 222: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' #' (ID: 1069)
  Prédit: ' promoted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' promoted' → logprob: -0.36452242732048035
    2. 'prom' → logprob: -2.2395224571228027
    3. '[' → logprob: -2.4895224571228027
    4. '[:' → logprob: -3.2395224571228027
    5. 'fav' → logprob: -3.3645224571228027
    6. ' favored' → logprob: -5.489522457122803
    7. ' [' → logprob: -5.489522457122803
    8. '[
' → logprob: -5.989522457122803
    9. ' fav' → logprob: -6.114522457122803
    10. 'f' → logprob: -6.114522457122803

Token 224: ' actually' (ID: 4771)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36665642261505127
    2. 'prom' → logprob: -1.4916564226150513
    3. ' promoted' → logprob: -3.6166563034057617
    4. 'if' → logprob: -4.616656303405762
    5. 'f' → logprob: -4.741656303405762
    6. '   ' → logprob: -5.241656303405762
    7. 'fav' → logprob: -5.241656303405762
    8. 'selected' → logprob: -5.366656303405762
    9. 'for' → logprob: -5.366656303405762
    10. ' if' → logprob: -5.491656303405762

Token 225: ',' (ID: 11)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.7657707929611206
    2. 'fav' → logprob: -1.5157707929611206
    3. ' promoted' → logprob: -1.6407707929611206
    4. 'x' → logprob: -3.39077091217041
    5. ' fav' → logprob: -4.01577091217041
    6. 'f' → logprob: -4.26577091217041
    7. ' favored' → logprob: -4.26577091217041
    8. ' x' → logprob: -4.89077091217041
    9. '#' → logprob: -5.64077091217041
    10. ' sorted' → logprob: -5.76577091217041

Token 226: ' better' (ID: 3432)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.04752575233578682
    2. ' promoted' → logprob: -3.547525644302368
    3. 'x' → logprob: -5.172525882720947
    4. 'fav' → logprob: -5.172525882720947
    5. 'f' → logprob: -6.922525882720947
    6. '#' → logprob: -7.047525882720947
    7. ' x' → logprob: -7.172525882720947
    8. 'pass' → logprob: -7.297525882720947
    9. 'import' → logprob: -7.797525882720947
    10. 'for' → logprob: -7.922525882720947

Token 227: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6816702485084534
    2. 'to' → logprob: -0.9316702485084534
    3. 'prom' → logprob: -2.8066701889038086
    4. 'sort' → logprob: -4.431670188903809
    5. 'sorted' → logprob: -4.931670188903809
    6. '=' → logprob: -5.306670188903809
    7. ' sort' → logprob: -6.056670188903809
    8. ':' → logprob: -6.431670188903809
    9. '_prom' → logprob: -6.431670188903809
    10. 'select' → logprob: -6.556670188903809

Token 228: ' choose' (ID: 5655)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.8189734220504761
    2. 'prom' → logprob: -1.818973422050476
    3. 'fav' → logprob: -1.818973422050476
    4. 'f' → logprob: -2.4439735412597656
    5. ' sorted' → logprob: -2.5689735412597656
    6. 'sort' → logprob: -3.5689735412597656
    7. 'chars' → logprob: -5.068973541259766
    8. ' promote' → logprob: -5.318973541259766
    9. '
' → logprob: -5.693973541259766
    10. ' chars' → logprob: -5.693973541259766

Token 229: ' the' (ID: 290)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.755710244178772
    2. 'fav' → logprob: -1.380710244178772
    3. ' sorted' → logprob: -1.755710244178772
    4. 'f' → logprob: -3.1307101249694824
    5. ' chars' → logprob: -3.5057101249694824
    6. 'chars' → logprob: -4.255710124969482
    7. 'prom' → logprob: -5.380710124969482
    8. ' fav' → logprob: -5.755710124969482
    9. '(sorted' → logprob: -6.630710124969482
    10. ' all' → logprob: -7.005710124969482

Token 230: ' x' (ID: 1215)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.24648933112621307
    2. 'sorted' → logprob: -2.4964892864227295
    3. 'x' → logprob: -2.9964892864227295
    4. 'f' → logprob: -3.9964892864227295
    5. 'top' → logprob: -3.9964892864227295
    6. 'first' → logprob: -4.496489524841309
    7. 'prom' → logprob: -4.871489524841309
    8. 'next' → logprob: -5.121489524841309
    9. 'best' → logprob: -5.246489524841309
    10. ' sorted' → logprob: -5.496489524841309

Token 231: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.3995961546897888
    2. ' favored' → logprob: -1.6495962142944336
    3. ' fav' → logprob: -2.8995962142944336
    4. 'f' → logprob: -4.024596214294434
    5. '_f' → logprob: -4.024596214294434
    6. ' favorite' → logprob: -4.524596214294434
    7. ' tokens' → logprob: -5.774596214294434
    8. ' chars' → logprob: -6.024596214294434
    9. '_tokens' → logprob: -6.149596214294434
    10. ')' → logprob: -6.337096214294434

Token 232: ' chars' (ID: 47991)
  Prédit: ' chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.8159709572792053
    2. 's' → logprob: -1.1909708976745605
    3. 'chars' → logprob: -1.8159708976745605
    4. '_chars' → logprob: -2.4409708976745605
    5. '_set' → logprob: -6.4409708976745605
    6. ' ' → logprob: -7.6909708976745605
    7. '(chars' → logprob: -7.9409708976745605
    8. '_' → logprob: -8.440971374511719
    9. 'f' → logprob: -8.690971374511719
    10. '   ' → logprob: -8.690971374511719

Token 233: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' easiest' (ID: 39356)
  Prédit: ' highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' highest' → logprob: -1.0935602188110352
    2. 'highest' → logprob: -1.0935602188110352
    3. 'lowest' → logprob: -1.3435602188110352
    4. ' lowest' → logprob: -2.843560218811035
    5. 'largest' → logprob: -5.718560218811035
    6. 'higher' → logprob: -6.468560218811035
    7. ' higher' → logprob: -6.593560218811035
    8. ' the' → logprob: -6.968560218811035
    9. 'the' → logprob: -6.968560218811035
    10. ' largest' → logprob: -6.968560218811035

Token 235: ' promotion' (ID: 24304)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.09251868724823
    2. 'to' → logprob: -1.59251868724823
    3. 'promotion' → logprob: -2.2175188064575195
    4. ' promotion' → logprob: -2.4675188064575195
    5. 'rank' → logprob: -2.7175188064575195
    6. 'votes' → logprob: -2.8425188064575195
    7. ' rank' → logprob: -3.4675188064575195
    8. 'prom' → logprob: -4.3425188064575195
    9. 'time' → logprob: -4.3425188064575195
    10. ' improvement' → logprob: -4.4675188064575195

Token 236: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' lex' (ID: 37772)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.31771934032440186
    2. ')' → logprob: -2.1927194595336914
    3. '_order' → logprob: -3.0677194595336914
    4. 'order' → logprob: -3.0677194595336914
    5. '<|end|>' → logprob: -3.8177194595336914
    6. ' )' → logprob: -3.9427194595336914
    7. '_' → logprob: -4.817719459533691
    8. '<|end|>' → logprob: -5.442719459533691
    9. 'ic' → logprob: -6.067719459533691
    10. ' ' → logprob: -6.817719459533691

Token 242: ' imposed' (ID: 54683)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' tie' (ID: 22244)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.4948209524154663
    2. 'simp' → logprob: -1.2448209524154663
    3. ' consistency' → logprob: -3.869821071624756
    4. 'det' → logprob: -3.994821071624756
    5. 'fair' → logprob: -4.369821071624756
    6. 'clar' → logprob: -4.369821071624756
    7. 'now' → logprob: -4.619821071624756
    8. ' determin' → logprob: -4.869821071624756
    9. 'consistent' → logprob: -5.119821071624756
    10. ' now' → logprob: -5.619821071624756

Token 245: '-break' (ID: 62263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4295457899570465
    2. '-break' → logprob: -2.1795458793640137
    3. 'breaker' → logprob: -2.5545458793640137
    4. 'break' → logprob: -2.6795458793640137
    5. '_break' → logprob: -3.1795458793640137
    6. '<|end|>' → logprob: -3.5545458793640137
    7. ' breaker' → logprob: -5.179545879364014
    8. '-breaking' → logprob: -5.304545879364014
    9. '   ' → logprob: -6.554545879364014
    10. 'breaking' → logprob: -6.804545879364014

Token 246: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' promoted' (ID: 49916)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11726286262273788
    2. '[:' → logprob: -2.367262840270996
    3. ' =' → logprob: -4.242262840270996
    4. '=x' → logprob: -6.992262840270996
    5. '.sort' → logprob: -7.992262840270996
    6. '=f' → logprob: -8.617262840270996
    7. '[' → logprob: -8.617262840270996
    8. '<|end|>' → logprob: -8.617262840270996
    9. '=set' → logprob: -9.367262840270996
    10. '[:]' → logprob: -9.367262840270996

Token 251: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4738801121711731
    2. 'f' → logprob: -1.7238800525665283
    3. ' sorted' → logprob: -1.7238800525665283
    4. 'fav' → logprob: -4.348880290985107
    5. ' fav' → logprob: -5.723880290985107
    6. 'prom' → logprob: -6.098880290985107
    7. '(sorted' → logprob: -7.723880290985107
    8. '[f' → logprob: -7.973880290985107
    9. ' promoted' → logprob: -8.22387981414795
    10. ' f' → logprob: -8.59887981414795

Token 252: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.013023513369262218
    2. '([' → logprob: -4.513023376464844
    3. '(p' → logprob: -7.138023376464844
    4. 'f' → logprob: -7.638023376464844
    5. '(list' → logprob: -8.013023376464844
    6. '(prom' → logprob: -8.888023376464844
    7. '((' → logprob: -9.263023376464844
    8. 'prom' → logprob: -9.763023376464844
    9. '(' → logprob: -10.763023376464844
    10. '(set' → logprob: -11.138023376464844

Token 253: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.7431783080101013
    2. 'f' → logprob: -0.8681783080101013
    3. 'fav' → logprob: -2.868178367614746
    4. 'av' → logprob: -3.368178367614746
    5. '(f' → logprob: -4.993178367614746
    6. 'v' → logprob: -5.618178367614746
    7. ')' → logprob: -6.493178367614746
    8. 'avor' → logprob: -8.368178367614746
    9. ' fav' → logprob: -8.618178367614746
    10. 'avorites' → logprob: -8.743178367614746

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005000127712264657
    2. '[:' → logprob: -7.750500202178955
    3. ')
' → logprob: -10.125499725341797
    4. ')[' → logprob: -11.125499725341797
    5. ' )' → logprob: -12.000499725341797
    6. '   ' → logprob: -12.875499725341797
    7. ')#' → logprob: -13.875499725341797
    8. '()' → logprob: -14.125499725341797
    9. ')x' → logprob: -14.625499725341797
    10. '       ' → logprob: -15.125499725341797

Token 255: '       ' (ID: 309)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.335014671087265
    2. '<|end|>' → logprob: -1.4600147008895874
    3. '[' → logprob: -3.585014581680298
    4. '[x' → logprob: -4.460014820098877
    5. '[
' → logprob: -4.835014820098877
    6. '<|end|>' → logprob: -6.210014820098877
    7. ')' → logprob: -7.210014820098877
    8. '[:]' → logprob: -7.585014820098877
    9. '
' → logprob: -8.585014343261719
    10. ',' → logprob: -8.710014343261719

Token 256: ' #' (ID: 1069)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.2861260175704956
    2. '<|end|>' → logprob: -2.161126136779785
    3. '[' → logprob: -4.286126136779785
    4. ' favored' → logprob: -4.411126136779785
    5. ')' → logprob: -4.536126136779785
    6. '<|end|>' → logprob: -4.536126136779785
    7. 'x' → logprob: -4.911126136779785
    8. '[:]' → logprob: -4.911126136779785
    9. 'prom' → logprob: -5.036126136779785
    10. 'fav' → logprob: -5.161126136779785

Token 257: ' in' (ID: 306)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8305472731590271
    2. 'x' → logprob: -1.4555473327636719
    3. '<|end|>' → logprob: -1.5805473327636719
    4. ':' → logprob: -3.080547332763672
    5. ')' → logprob: -3.580547332763672
    6. '<|end|>' → logprob: -4.830547332763672
    7. ' favored' → logprob: -5.080547332763672
    8. ' ' → logprob: -5.330547332763672
    9. ' for' → logprob: -5.705547332763672
    10. ' if' → logprob: -5.830547332763672

Token 258: ' practice' (ID: 8248)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7690535187721252
    2. 'prom' → logprob: -2.1440534591674805
    3. ' promoted' → logprob: -2.1440534591674805
    4. 'range' → logprob: -2.6440534591674805
    5. 'x' → logprob: -3.2690534591674805
    6. 'def' → logprob: -3.5190534591674805
    7. '[:' → logprob: -3.7690534591674805
    8. ' the' → logprob: -4.5190534591674805
    9. ' =' → logprob: -4.5190534591674805
    10. '
' → logprob: -4.6440534591674805

Token 259: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' try' (ID: 2075)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1131186485290527
    2. '<|end|>' → logprob: -1.3631186485290527
    3. 'pass' → logprob: -1.9881186485290527
    4. ' pass' → logprob: -3.2381186485290527
    5. 'for' → logprob: -3.2381186485290527
    6. ' x' → logprob: -3.4881186485290527
    7. ')' → logprob: -3.8631186485290527
    8. '#' → logprob: -3.9881186485290527
    9. '...' → logprob: -4.113118648529053
    10. ' for' → logprob: -4.363118648529053

Token 261: ' all' (ID: 722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12349081039428711
    2. '   ' → logprob: -3.498490810394287
    3. ':
' → logprob: -4.373490810394287
    4. 'prom' → logprob: -4.498490810394287
    5. ' to' → logprob: -4.623490810394287
    6. 'for' → logprob: -4.748490810394287
    7. 'to' → logprob: -4.998490810394287
    8. '<|end|>' → logprob: -5.123490810394287
    9. 'pass' → logprob: -5.248490810394287
    10. 'range' → logprob: -5.748490810394287

Token 262: ' subsets' (ID: 165377)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' would' (ID: 1481)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.21451078355312347
    2. ' not' → logprob: -2.339510679244995
    3. ' continue' → logprob: -3.714510679244995
    4. 'be' → logprob: -4.089510917663574
    5. ' pass' → logprob: -4.839510917663574
    6. '<|end|>' → logprob: -4.839510917663574
    7. 'not' → logprob: -5.089510917663574
    8. 'x' → logprob: -5.339510917663574
    9. 'continue' → logprob: -5.714510917663574
    10. ' x' → logprob: -5.714510917663574

Token 265: ' too' (ID: 3101)
  Prédit: ' too'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.16007289290428162
    2. 'too' → logprob: -2.7850728034973145
    3. 'import' → logprob: -3.5350728034973145
    4. 'com' → logprob: -4.2850728034973145
    5. 'from' → logprob: -4.5350728034973145
    6. '...' → logprob: -5.2850728034973145
    7. 'complex' → logprob: -5.4100728034973145
    8. ' very' → logprob: -5.6600728034973145
    9. '
' → logprob: -5.9100728034973145
    10. ' not' → logprob: -6.0350728034973145

Token 266: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.11929279565811157
    2. ' large' → logprob: -3.244292736053467
    3. 'big' → logprob: -3.994292736053467
    4. 'many' → logprob: -4.369292736053467
    5. 'exp' → logprob: -4.494292736053467
    6. 'complex' → logprob: -4.619292736053467
    7. 'much' → logprob: -4.994292736053467
    8. 'slow' → logprob: -5.244292736053467
    9. 'long' → logprob: -6.119292736053467
    10. 'cost' → logprob: -6.369292736053467

Token 267: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' pick' (ID: 5230)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' top' (ID: 2344)
  Prédit: ' favored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' favored' → logprob: -1.5977903604507446
    2. '<|end|>' → logprob: -1.8477903604507446
    3. ' promoted' → logprob: -1.9727903604507446
    4. 'the' → logprob: -1.9727903604507446
    5. ' the' → logprob: -2.097790241241455
    6. 'prom' → logprob: -2.847790241241455
    7. '[:' → logprob: -3.097790241241455
    8. 'x' → logprob: -3.347790241241455
    9. '<|end|>' → logprob: -4.347790241241455
    10. ' x' → logprob: -4.347790241241455

Token 271: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7116143703460693
    2. ' x' → logprob: -0.7116143703460693
    3. '<|end|>' → logprob: -4.711614608764648
    4. ' favored' → logprob: -5.086614608764648
    5. 'fav' → logprob: -7.211614608764648
    6. '<|end|>' → logprob: -7.586614608764648
    7. '_x' → logprob: -8.211614608764648
    8. '_tokens' → logprob: -8.586614608764648
    9. ' tokens' → logprob: -8.586614608764648
    10. ' K' → logprob: -8.711614608764648

Token 272: ' fav' (ID: 11726)
  Prédit: ' favored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' favored' → logprob: -0.8162673115730286
    2. '_f' → logprob: -1.0662672519683838
    3. '<|end|>' → logprob: -2.816267251968384
    4. 'fav' → logprob: -3.191267251968384
    5. ')' → logprob: -3.441267251968384
    6. '_tokens' → logprob: -3.941267251968384
    7. ' _' → logprob: -4.566267490386963
    8. '<|end|>' → logprob: -4.941267490386963
    9. '_chars' → logprob: -5.066267490386963
    10. '_' → logprob: -5.316267490386963

Token 273: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.040619134902954
    2. ' chars' → logprob: -1.290619134902954
    3. '_chars' → logprob: -1.415619134902954
    4. '_' → logprob: -3.040619134902954
    5. '_set' → logprob: -3.540619134902954
    6. 'chars' → logprob: -4.165618896484375
    7. ')' → logprob: -4.665618896484375
    8. ' _' → logprob: -4.665618896484375
    9. '   ' → logprob: -6.290618896484375
    10. ' ' → logprob: -6.728118896484375

Token 274: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' their' (ID: 1043)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.44600293040275574
    2. ' rank' → logprob: -1.3210029602050781
    3. 'v' → logprob: -3.946002960205078
    4. 'chars' → logprob: -4.071002960205078
    5. 'score' → logprob: -4.571002960205078
    6. ' chars' → logprob: -4.571002960205078
    7. 'votes' → logprob: -4.946002960205078
    8. 'fav' → logprob: -5.571002960205078
    9. 'lambda' → logprob: -5.696002960205078
    10. 'vote' → logprob: -5.821002960205078

Token 276: ' current' (ID: 2208)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.1987074613571167
    2. ' rank' → logprob: -1.8237074613571167
    3. ' current' → logprob: -5.573707580566406
    4. 'votes' → logprob: -5.573707580566406
    5. 'index' → logprob: -5.823707580566406
    6. 'current' → logprob: -6.448707580566406
    7. ' index' → logprob: -6.573707580566406
    8. 'vote' → logprob: -6.823707580566406
    9. 'v' → logprob: -7.073707580566406
    10. 'score' → logprob: -7.198707580566406

Token 277: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0034922081977128983
    2. ' rank' → logprob: -5.75349235534668
    3. '_rank' → logprob: -9.12849235534668
    4. 'score' → logprob: -10.37849235534668
    5. 'index' → logprob: -10.50349235534668
    6. 'votes' → logprob: -10.75349235534668
    7. 'token' → logprob: -10.75349235534668
    8. 'vote' → logprob: -11.00349235534668
    9. '(rank' → logprob: -11.00349235534668
    10. 'ranking' → logprob: -11.00349235534668

Token 278: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: 'easy' (ID: 84936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.263461709022522
    2. ' )' → logprob: -1.513461709022522
    3. 'rank' → logprob: -5.888461589813232
    4. '[:' → logprob: -6.138461589813232
    5. '[::-' → logprob: -7.263461589813232
    6. '[' → logprob: -7.388461589813232
    7. ')
' → logprob: -7.513461589813232
    8. ' )
' → logprob: -7.513461589813232
    9. 'fav' → logprob: -7.513461589813232
    10. ')[' → logprob: -7.638461589813232

Token 280: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04927222058176994
    2. '_chars' → logprob: -5.424272060394287
    3. 's' → logprob: -5.674272060394287
    4. '_f' → logprob: -5.799272060394287
    5. ' )' → logprob: -5.799272060394287
    6. 'chars' → logprob: -5.924272060394287
    7. '))' → logprob: -6.049272060394287
    8. ' to' → logprob: -6.049272060394287
    9. 'fav' → logprob: -6.174272060394287
    10. '_to' → logprob: -6.174272060394287

Token 281: ' promote' (ID: 15232)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.7176512479782104
    2. 'prom' → logprob: -1.0926512479782104
    3. 'pop' → logprob: -2.7176513671875
    4. 'get' → logprob: -3.8426513671875
    5. 'access' → logprob: -3.9676513671875
    6. 'find' → logprob: -4.3426513671875
    7. 'sort' → logprob: -5.0926513671875
    8. 'ob' → logprob: -5.3426513671875
    9. 'index' → logprob: -5.4676513671875
    10. 'pick' → logprob: -5.5926513671875

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020960718393325806
    2. ' )' → logprob: -4.645960807800293
    3. 's' → logprob: -5.645960807800293
    4. '<|end|>' → logprob: -7.020960807800293
    5. ',' → logprob: -7.270960807800293
    6. '   ' → logprob: -7.395960807800293
    7. '[' → logprob: -7.520960807800293
    8. ')x' → logprob: -7.645960807800293
    9. '))' → logprob: -7.770960807800293
    10. '())' → logprob: -7.770960807800293

Token 283: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' #' (ID: 1069)
  Prédit: ' favored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' favored' → logprob: -0.718924880027771
    2. 'fav' → logprob: -1.843924880027771
    3. ' promoted' → logprob: -2.0939249992370605
    4. '_prom' → logprob: -2.9689249992370605
    5. '_f' → logprob: -3.2189249992370605
    6. '<|end|>' → logprob: -3.9689249992370605
    7. 'prom' → logprob: -4.2189249992370605
    8. '[:' → logprob: -4.4689249992370605
    9. ')' → logprob: -4.5939249992370605
    10. '[::-' → logprob: -4.5939249992370605

Token 285: ' Simpl' (ID: 92258)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.9859136939048767
    2. 'prom' → logprob: -1.1109137535095215
    3. ' promoted' → logprob: -2.1109137535095215
    4. ' fav' → logprob: -3.1109137535095215
    5. ' favored' → logprob: -3.3609137535095215
    6. ' top' → logprob: -3.8609137535095215
    7. ' chars' → logprob: -4.1109137535095215
    8. 'f' → logprob: -4.1109137535095215
    9. 'top' → logprob: -4.8609137535095215
    10. ' selected' → logprob: -5.8609137535095215

Token 286: 'ify' (ID: 1985)
  Prédit: 'ified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ified' → logprob: -0.6236569285392761
    2. 'ify' → logprob: -0.9986569285392761
    3. 'e' → logprob: -2.498656988143921
    4. 'ed' → logprob: -5.123656749725342
    5. '<|end|>' → logprob: -5.998656749725342
    6. 'if' → logprob: -6.623656749725342
    7. 'import' → logprob: -7.373656749725342
    8. '...' → logprob: -7.373656749725342
    9. '#' → logprob: -7.748656749725342
    10. 'es' → logprob: -7.998656749725342

Token 287: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' pick' (ID: 5230)
  Prédit: ' favored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' favored' → logprob: -0.7660586833953857
    2. 'fav' → logprob: -1.6410586833953857
    3. ' fav' → logprob: -2.2660586833953857
    4. ' top' → logprob: -2.5160586833953857
    5. ' promoted' → logprob: -3.1410586833953857
    6. ' x' → logprob: -4.141058921813965
    7. 'prom' → logprob: -4.516058921813965
    8. ' selected' → logprob: -4.641058921813965
    9. ' favorite' → logprob: -5.016058921813965
    10. ' candidates' → logprob: -5.141058921813965

Token 289: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.48583105206489563
    2. ' fav' → logprob: -1.9858310222625732
    3. ' the' → logprob: -2.7358310222625732
    4. ' top' → logprob: -2.9858310222625732
    5. 'f' → logprob: -3.8608310222625732
    6. ' sorted' → logprob: -4.110831260681152
    7. 'top' → logprob: -4.360831260681152
    8. 'prom' → logprob: -4.485831260681152
    9. '[x' → logprob: -4.485831260681152
    10. 'x' → logprob: -4.610831260681152

Token 290: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.73486328125
    2. '_chars' → logprob: -0.73486328125
    3. '_set' → logprob: -3.85986328125
    4. '_' → logprob: -4.73486328125
    5. '_f' → logprob: -6.23486328125
    6. '[' → logprob: -6.48486328125
    7. 'chars' → logprob: -6.48486328125
    8. ' =' → logprob: -6.73486328125
    9. '_list' → logprob: -6.73486328125
    10. '_sorted' → logprob: -6.85986328125

Token 291: ' with' (ID: 483)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.14055734872817993
    2. '_by' → logprob: -2.890557289123535
    3. ' by' → logprob: -4.390557289123535
    4. ' =' → logprob: -4.515557289123535
    5. 'by' → logprob: -4.515557289123535
    6. '_sorted' → logprob: -4.515557289123535
    7. '_in' → logprob: -5.265557289123535
    8. '_with' → logprob: -5.265557289123535
    9. '[:]' → logprob: -6.140557289123535
    10. 'with' → logprob: -6.140557289123535

Token 292: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.6691089868545532
    2. ' lowest' → logprob: -1.1691089868545532
    3. 'rank' → logprob: -2.0441088676452637
    4. ' rank' → logprob: -3.1691088676452637
    5. ' smallest' → logprob: -5.919108867645264
    6. 'best' → logprob: -7.294108867645264
    7. 'lower' → logprob: -7.419108867645264
    8. 'highest' → logprob: -8.044109344482422
    9. ' highest' → logprob: -8.544109344482422
    10. 'fav' → logprob: -8.669109344482422

Token 293: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.5236237645149231
    2. 'rank' → logprob: -0.8986237645149231
    3. ' ranks' → logprob: -8.1486234664917
    4. '(rank' → logprob: -8.8986234664917
    5. ' current' → logprob: -10.1486234664917
    6. ' index' → logprob: -11.2736234664917
    7. '_rank' → logprob: -11.5236234664917
    8. 'index' → logprob: -12.6486234664917
    9. ' ' → logprob: -13.3986234664917
    10. 'r' → logprob: -13.5236234664917

Token 294: ' (' (ID: 350)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.08407148718833923
    2. '_f' → logprob: -3.084071397781372
    3. '<|end|>' → logprob: -4.459071636199951
    4. '[' → logprob: -4.834071636199951
    5. ')' → logprob: -5.959071636199951
    6. '][:' → logprob: -6.084071636199951
    7. '_prom' → logprob: -6.459071636199951
    8. '_sorted' → logprob: -6.959071636199951
    9. '_' → logprob: -6.959071636199951
    10. ' if' → logprob: -7.084071636199951

Token 295: 'highest' (ID: 145680)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23525789380073547
    2. 'fav' → logprob: -2.860257863998413
    3. ' )' → logprob: -2.985257863998413
    4. 'key' → logprob: -3.110257863998413
    5. 'rank' → logprob: -3.485257863998413
    6. ' key' → logprob: -5.110258102416992
    7. ' rank' → logprob: -5.985258102416992
    8. 'True' → logprob: -6.360258102416992
    9. 'chars' → logprob: -6.610258102416992
    10. 'lambda' → logprob: -6.735258102416992

Token 296: ' position' (ID: 4010)
  Prédit: ' rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rank' → logprob: -1.4564838409423828
    2. 'rank' → logprob: -1.5814838409423828
    3. 'score' → logprob: -1.5814838409423828
    4. 'scores' → logprob: -2.706483840942383
    5. 'priority' → logprob: -2.831483840942383
    6. ')' → logprob: -2.831483840942383
    7. ' score' → logprob: -2.956483840942383
    8. ' priority' → logprob: -3.081483840942383
    9. ' scores' → logprob: -3.331483840942383
    10. ' index' → logprob: -5.581483840942383

Token 297: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029045434668660164
    2. ' )' → logprob: -3.779045343399048
    3. ' among' → logprob: -6.904045581817627
    4. '),' → logprob: -7.154045581817627
    5. ' in' → logprob: -7.404045581817627
    6. 'in' → logprob: -7.404045581817627
    7. '))' → logprob: -7.654045581817627
    8. 's' → logprob: -7.779045581817627
    9. ')
' → logprob: -8.029045104980469
    10. ',' → logprob: -8.529045104980469

Token 298: ' should' (ID: 1757)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.8576384782791138
    2. ' favored' → logprob: -1.1076384782791138
    3. '<|end|>' → logprob: -2.107638359069824
    4. ' promoted' → logprob: -3.107638359069824
    5. ' fav' → logprob: -4.607638359069824
    6. ')' → logprob: -4.982638359069824
    7. '
' → logprob: -5.107638359069824
    8. '    ' → logprob: -5.482638359069824
    9. 'prom' → logprob: -5.607638359069824
    10. '<|end|>' → logprob: -5.732638359069824

Token 299: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6677571535110474
    2. ' be' → logprob: -0.9177571535110474
    3. 'continue' → logprob: -2.792757034301758
    4. 'x' → logprob: -5.667757034301758
    5. 'prom' → logprob: -5.792757034301758
    6. 'not' → logprob: -5.792757034301758
    7. ' continue' → logprob: -5.917757034301758
    8. ' go' → logprob: -6.292757034301758
    9. 's' → logprob: -6.417757034301758
    10. 'go' → logprob: -6.417757034301758

Token 300: ' easiest' (ID: 39356)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -1.7833306789398193
    2. 'True' → logprob: -2.0333306789398193
    3. ' True' → logprob: -2.2833306789398193
    4. 'chars' → logprob: -2.2833306789398193
    5. 'rank' → logprob: -2.4083306789398193
    6. 'f' → logprob: -2.5333306789398193
    7. 'prom' → logprob: -2.6583306789398193
    8. ' chars' → logprob: -2.7833306789398193
    9. 'sorted' → logprob: -2.9083306789398193
    10. 'x' → logprob: -3.2833306789398193

Token 301: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' keep' (ID: 3357)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.017856307327747345
    2. ' promote' → logprob: -4.517856121063232
    3. 'ach' → logprob: -6.642856121063232
    4. 'rank' → logprob: -6.767856121063232
    5. 'implement' → logprob: -6.767856121063232
    6. 'maint' → logprob: -7.517856121063232
    7. 'advance' → logprob: -7.642856121063232
    8. 'im' → logprob: -7.892856121063232
    9. 'move' → logprob: -8.01785659790039
    10. 'push' → logprob: -8.26785659790039

Token 303: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04788284748792648
    2. ' top' → logprob: -3.6728827953338623
    3. 'range' → logprob: -4.797883033752441
    4. 'rank' → logprob: -4.797883033752441
    5. 'the' → logprob: -5.922883033752441
    6. 'place' → logprob: -7.172883033752441
    7. ' range' → logprob: -8.047883033752441
    8. 'K' → logprob: -8.297883033752441
    9. '```' → logprob: -8.922883033752441
    10. '[top' → logprob: -9.172883033752441

Token 305: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8427591919898987
    2. 'x' → logprob: -1.092759132385254
    3. ' x' → logprob: -2.217759132385254
    4. ' K' → logprob: -2.467759132385254
    5. 'rank' → logprob: -4.592759132385254
    6. '_rank' → logprob: -4.717759132385254
    7. '_chars' → logprob: -5.217759132385254
    8. '   ' → logprob: -5.592759132385254
    9. '_K' → logprob: -6.217759132385254
    10. 'k' → logprob: -6.467759132385254

Token 306: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' (adapté à ' fav') → logprob: -0.4760447144508362
    2. ' favored' → logprob: -2.3510446548461914
    3. 'prom' → logprob: -2.6010446548461914
    4. '<|end|>' → logprob: -2.7260446548461914
    5. ')' → logprob: -3.4760446548461914
    6. 'f' → logprob: -3.6010446548461914
    7. '   ' → logprob: -3.9760446548461914
    8. ' fav' → logprob: -4.101044654846191
    9. ' promoted' → logprob: -5.101044654846191
    10. '
' → logprob: -5.476044654846191

Token 309: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.17003437876701355
    2. '_chars' → logprob: -2.045034408569336
    3. 's' → logprob: -4.420034408569336
    4. '_rank' → logprob: -4.795034408569336
    5. '_indices' → logprob: -6.045034408569336
    6. '_list' → logprob: -6.170034408569336
    7. '_indexes' → logprob: -7.420034408569336
    8. 'r' → logprob: -8.170034408569336
    9. '_positions' → logprob: -8.295034408569336
    10. '_idxs' → logprob: -8.420034408569336

Token 310: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.1283857822418213
    2. 'ank' → logprob: -2.1283857822418213
    3. ' =' → logprob: -7.253385543823242
    4. '=' → logprob: -8.003385543823242
    5. 's' → logprob: -9.003385543823242
    6. 'anked' → logprob: -10.003385543823242
    7. '_rank' → logprob: -10.253385543823242
    8. '_list' → logprob: -10.503385543823242
    9. '=[' → logprob: -10.503385543823242
    10. '=[]
' → logprob: -10.753385543823242

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038088999688625336
    2. ' =' → logprob: -3.6630890369415283
    3. '=[' → logprob: -4.913088798522949
    4. '=[]' → logprob: -5.538088798522949
    5. ']=' → logprob: -8.78808879852295
    6. '=list' → logprob: -9.16308879852295
    7. 'sorted' → logprob: -9.41308879852295
    8. '=[]
' → logprob: -10.66308879852295
    9. '_sorted' → logprob: -11.16308879852295
    10. ']' → logprob: -11.28808879852295

Token 312: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.11445337533950806
    2. 'sorted' → logprob: -2.6144533157348633
    3. '[' → logprob: -3.3644533157348633
    4. '[]
' → logprob: -8.739453315734863
    5. '[s' → logprob: -9.489453315734863
    6. ' sorted' → logprob: -10.239453315734863
    7. '[]' → logprob: -10.239453315734863
    8. ' [(' → logprob: -10.989453315734863
    9. '(sorted' → logprob: -11.739453315734863
    10. '[((' → logprob: -11.864453315734863

Token 313: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.06274966895580292
    2. 'name' → logprob: -2.8127496242523193
    3. 'r' → logprob: -8.312749862670898
    4. 'fav' → logprob: -8.562749862670898
    5. 's' → logprob: -9.062749862670898
    6. 'f' → logprob: -9.812749862670898
    7. 'char' → logprob: -10.312749862670898
    8. ' rank' → logprob: -10.437749862670898
    9. '(rank' → logprob: -10.437749862670898
    10. 'chars' → logprob: -10.562749862670898

Token 314: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.003488166257739067
    2. '[f' → logprob: -6.253488063812256
    3. '[' → logprob: -7.378488063812256
    4. 'name' → logprob: -7.878488063812256
    5. '[s' → logprob: -8.128488540649414
    6. '[n' → logprob: -9.378488540649414
    7. '(name' → logprob: -10.128488540649414
    8. '[c' → logprob: -10.503488540649414
    9. '[
' → logprob: -10.878488540649414
    10. '[i' → logprob: -10.878488540649414

Token 315: '_to' (ID: 5089)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.24694518744945526
    2. '[name' → logprob: -1.9969451427459717
    3. '[f' → logprob: -2.6219451427459717
    4. '[n' → logprob: -5.121945381164551
    5. '[' → logprob: -6.496945381164551
    6. '[c' → logprob: -7.371945381164551
    7. '],' → logprob: -7.871945381164551
    8. '[x' → logprob: -8.12194538116455
    9. 'name' → logprob: -8.37194538116455
    10. ']' → logprob: -8.37194538116455

Token 316: '_index' (ID: 7748)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.616233766078949
    2. 'fav' → logprob: -1.6162338256835938
    3. 'c' → logprob: -1.7412338256835938
    4. 'f' → logprob: -2.9912338256835938
    5. 'name' → logprob: -4.241233825683594
    6. 'x' → logprob: -4.741233825683594
    7. 'index' → logprob: -5.866233825683594
    8. 'i' → logprob: -5.991233825683594
    9. '[s' → logprob: -6.241233825683594
    10. 'set' → logprob: -6.741233825683594

Token 317: '[f' (ID: 52330)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.027866635471582413
    2. '[f' → logprob: -3.7778666019439697
    3. '[c' → logprob: -6.402866840362549
    4. '[name' → logprob: -7.027866840362549
    5. 's' → logprob: -7.527866840362549
    6. '[' → logprob: -8.02786636352539
    7. 'f' → logprob: -8.15286636352539
    8. '(s' → logprob: -8.15286636352539
    9. 'fav' → logprob: -8.65286636352539
    10. 'name' → logprob: -9.15286636352539

Token 318: ']],' (ID: 37171)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.39512118697166443
    2. 's' → logprob: -1.6451212167739868
    3. 'v' → logprob: -2.5201210975646973
    4. 'name' → logprob: -3.8951210975646973
    5. 'f' → logprob: -4.270121097564697
    6. ']]' → logprob: -5.020121097564697
    7. 'fav' → logprob: -5.645121097564697
    8. '])' → logprob: -5.895121097564697
    9. 'x' → logprob: -6.770121097564697
    10. 'n' → logprob: -7.145121097564697

Token 319: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3041631281375885
    2. 'name' → logprob: -1.4291630983352661
    3. ' f' → logprob: -4.804162979125977
    4. ' name' → logprob: -4.929162979125977
    5. 'rank' → logprob: -5.429162979125977
    6. ')' → logprob: -6.429162979125977
    7. ' )' → logprob: -8.554162979125977
    8. 'input' → logprob: -8.554162979125977
    9. ' rank' → logprob: -8.679162979125977
    10. 'fav' → logprob: -9.429162979125977

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0810900554060936
    2. ')]' → logprob: -2.581089973449707
    3. ' )' → logprob: -6.956089973449707
    4. ')])' → logprob: -7.331089973449707
    5. '])' → logprob: -7.956089973449707
    6. '),' → logprob: -9.831089973449707
    7. 'or' → logprob: -10.206089973449707
    8. '))' → logprob: -10.206089973449707
    9. 'orm' → logprob: -10.331089973449707
    10. '[' → logprob: -10.456089973449707

Token 321: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03778129070997238
    2. ' for' → logprob: -3.412781238555908
    3. ',' → logprob: -5.912781238555908
    4. 'for' → logprob: -6.912781238555908
    5. ']' → logprob: -8.662781715393066
    6. ' )' → logprob: -9.287781715393066
    7. '   ' → logprob: -9.662781715393066
    8. ')]' → logprob: -9.662781715393066
    9. ')
' → logprob: -11.662781715393066
    10. '       ' → logprob: -11.912781715393066

Token 322: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4288792312145233
    2. ' f' → logprob: -1.0538792610168457
    3. 'fav' → logprob: -9.678878784179688
    4. '	f' → logprob: -10.553878784179688
    5. 'range' → logprob: -10.678878784179688
    6. ' fav' → logprob: -11.178878784179688
    7. ' range' → logprob: -11.178878784179688
    8. 'name' → logprob: -11.428878784179688
    9. '_f' → logprob: -12.991378784179688
    10. ' ' → logprob: -13.178878784179688

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030228380113840103
    2. 'in' → logprob: -3.53022837638855
    3. 'f' → logprob: -7.905228614807129
    4. 's' → logprob: -9.780228614807129
    5. ' ' → logprob: -10.655228614807129
    6. 'fav' → logprob: -11.405228614807129
    7. ']' → logprob: -12.905228614807129
    8. ' f' → logprob: -13.280228614807129
    9. ' ' → logprob: -13.342728614807129
    10. ')' → logprob: -13.467728614807129

Token 324: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.193266361951828
    2. 'f' → logprob: -1.8182663917541504
    3. ' fav' → logprob: -4.31826639175415
    4. 'range' → logprob: -9.943265914916992
    5. ' range' → logprob: -10.818265914916992
    6. 'favor' → logprob: -11.443265914916992
    7. ' ' → logprob: -12.318265914916992
    8. 'prom' → logprob: -12.568265914916992
    9. '   ' → logprob: -12.693265914916992
    10. 'sorted' → logprob: -12.943265914916992

Token 325: 's' (ID: 82)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.010247779078781605
    2. 's' → logprob: -4.760247707366943
    3. 'f' → logprob: -7.010247707366943
    4. 'set' → logprob: -8.135248184204102
    5. 'fav' → logprob: -8.635248184204102
    6. '_f' → logprob: -9.635248184204102
    7. '_s' → logprob: -10.385248184204102
    8. '_' → logprob: -10.635248184204102
    9. '   ' → logprob: -11.135248184204102
    10. ' fav' → logprob: -11.135248184204102

Token 326: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014784925617277622
    2. ']
' → logprob: -4.264784812927246
    3. ' ]' → logprob: -8.264784812927246
    4. ')]' → logprob: -8.639784812927246
    5. ')' → logprob: -9.514784812927246
    6. '])' → logprob: -9.764784812927246
    7. ']
' → logprob: -10.764784812927246
    8. '   ' → logprob: -11.514784812927246
    9. '       ' → logprob: -11.514784812927246
    10. ' ]
' → logprob: -12.264784812927246

Token 327: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' fav' (ID: 11726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771544337272644
    2. '   ' → logprob: -1.771544337272644
    3. '.sort' → logprob: -1.771544337272644
    4. '<|end|>' → logprob: -1.771544337272644
    5. 'fav' (adapté à ' fav') → logprob: -2.8965444564819336
    6. 'sorted' → logprob: -3.1465444564819336
    7. 'sort' → logprob: -3.2715444564819336
    8. '  
' → logprob: -3.7715444564819336
    9. ']' → logprob: -4.021544456481934
    10. '    
' → logprob: -4.271544456481934

Token 329: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0006674022297374904
    2. 's' → logprob: -8.125667572021484
    3. '_s' → logprob: -8.875667572021484
    4. 'r' → logprob: -9.625667572021484
    5. '_' → logprob: -10.250667572021484
    6. 'Ranks' → logprob: -10.625667572021484
    7. '_f' → logprob: -11.000667572021484
    8. ' _' → logprob: -11.250667572021484
    9. '   ' → logprob: -11.875667572021484
    10. '[' → logprob: -12.000667572021484

Token 330: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.00024251631111837924
    2. 'ank' → logprob: -9.500242233276367
    3. '_' → logprob: -10.000242233276367
    4. 's' → logprob: -10.375242233276367
    5. '=' → logprob: -11.125242233276367
    6. 'r' → logprob: -11.250242233276367
    7. '```' → logprob: -11.875242233276367
    8. '[' → logprob: -12.000242233276367
    9. 'Ranks' → logprob: -12.625242233276367
    10. 'aks' → logprob: -12.750242233276367

Token 331: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -7.64839569455944e-05
    2. '=' → logprob: -9.625076293945312
    3. 'sort' → logprob: -11.750076293945312
    4. '.' → logprob: -13.875076293945312
    5. ' .' → logprob: -14.375076293945312
    6. '=f' → logprob: -15.625076293945312
    7. ' =' → logprob: -15.625076293945312
    8. ').' → logprob: -15.875076293945312
    9. 'sorted' → logprob: -16.125076293945312
    10. '	sort' → logprob: -16.250076293945312

Token 332: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13495203852653503
    2. '(key' → logprob: -2.3849520683288574
    3. '()
' → logprob: -3.3849520683288574
    4. '(reverse' → logprob: -8.3849515914917
    5. 'key' → logprob: -10.8849515914917
    6. '();' → logprob: -11.3849515914917
    7. '()

' → logprob: -12.5099515914917
    8. '(' → logprob: -12.6349515914917
    9. '(lambda' → logprob: -13.8849515914917
    10. '(),' → logprob: -13.8849515914917

Token 333: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' selected' (ID: 6386)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1459418088197708
    2. '   ' → logprob: -3.520941734313965
    3. ' x' → logprob: -3.895941734313965
    4. ' promoted' → logprob: -4.270941734313965
    5. ' if' → logprob: -4.520941734313965
    6. ' selected' → logprob: -4.770941734313965
    7. ')' → logprob: -5.020941734313965
    8. '<|end|>' → logprob: -5.020941734313965
    9. 'selected' (adapté à ' selected') → logprob: -5.270941734313965
    10. '[:' → logprob: -5.395941734313965

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03044486977159977
    2. ' =' → logprob: -4.030445098876953
    3. '=f' → logprob: -4.405445098876953
    4. '=
' → logprob: -12.280445098876953
    5. '=user' → logprob: -14.530445098876953
    6. '=cut' → logprob: -14.655445098876953
    7. '=[]' → logprob: -15.030445098876953
    8. '=[' → logprob: -15.030445098876953
    9. ',f' → logprob: -15.405445098876953
    10. '_f' → logprob: -15.530445098876953

Token 336: ' [' (ID: 723)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.5954761505126953
    2. 'fav' → logprob: -1.5954761505126953
    3. '[' → logprob: -1.9704761505126953
    4. ' [' → logprob: -2.7204761505126953
    5. ' fav' → logprob: -3.5954761505126953
    6. 'set' → logprob: -5.595476150512695
    7. ' set' → logprob: -5.845476150512695
    8. 'f' → logprob: -5.970476150512695
    9. '[p' → logprob: -6.845476150512695
    10. '{' → logprob: -6.970476150512695

Token 337: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.009569436311721802
    2. 'name' → logprob: -5.5095696449279785
    3. ' f' → logprob: -5.6345696449279785
    4. 'x' → logprob: -7.0095696449279785
    5. 'fav' → logprob: -7.5095696449279785
    6. ' name' → logprob: -8.75956916809082
    7. 'p' → logprob: -9.38456916809082
    8. 'fname' → logprob: -9.75956916809082
    9. 'fr' → logprob: -10.38456916809082
    10. 't' → logprob: -10.75956916809082

Token 338: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5459004044532776
    2. 'for' → logprob: -1.2959003448486328
    3. 'or' → logprob: -1.9209003448486328
    4. '	for' → logprob: -8.295900344848633
    5. '   ' → logprob: -8.920900344848633
    6. 'ors' → logprob: -10.420900344848633
    7. ' ' → logprob: -10.545900344848633
    8. 's' → logprob: -10.545900344848633
    9. ']' → logprob: -11.045900344848633
    10. ' or' → logprob: -11.295900344848633

Token 339: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.010122460313141346
    2. 'f' → logprob: -5.135122299194336
    3. ' _,' → logprob: -6.260122299194336
    4. '_' → logprob: -6.510122299194336
    5. 'r' → logprob: -7.760122299194336
    6. 'rank' → logprob: -8.385122299194336
    7. 'x' → logprob: -10.260122299194336
    8. 'i' → logprob: -11.260122299194336
    9. 't' → logprob: -11.385122299194336
    10. '_r' → logprob: -11.510122299194336

Token 340: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0009114635176956654
    2. ' f' → logprob: -7.000911235809326
    3. ' ' → logprob: -19.875911712646484
    4. '   ' → logprob: -20.250911712646484
    5. '	f' → logprob: -20.250911712646484
    6. '_f' → logprob: -21.375911712646484
    7. '
' → logprob: -22.125911712646484
    8. '    ' → logprob: -22.250911712646484
    9. '  ' → logprob: -22.375911712646484
    10. ' ' → logprob: -22.750911712646484

Token 341: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00922471471130848
    2. 'in' → logprob: -4.759224891662598
    3. '[:' → logprob: -7.509224891662598
    4. '][:' → logprob: -9.884224891662598
    5. ' ' → logprob: -12.884224891662598
    6. '   ' → logprob: -13.009224891662598
    7. 's' → logprob: -13.634224891662598
    8. ']' → logprob: -13.759224891662598
    9. 'f' → logprob: -14.009224891662598
    10. '  ' → logprob: -14.384224891662598

Token 342: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.00861669983714819
    2. ' fav' → logprob: -4.758616924285889
    3. 'favor' → logprob: -13.13361644744873
    4. ' favored' → logprob: -17.258617401123047
    5. 'Fav' → logprob: -17.508617401123047
    6. 'f' → logprob: -17.508617401123047
    7. ' favor' → logprob: -18.133617401123047
    8. 'fid' → logprob: -18.258617401123047
    9. 'fam' → logprob: -18.633617401123047
    10. ' favour' → logprob: -18.883617401123047

Token 343: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.5953139066696167
    2. 's' → logprob: -0.8453139066696167
    3. 'r' → logprob: -4.095314025878906
    4. 'rs' → logprob: -7.970314025878906
    5. '[' → logprob: -8.345314025878906
    6. 'fav' → logprob: -8.470314025878906
    7. 'ors' → logprob: -8.970314025878906
    8. 'ks' → logprob: -8.970314025878906
    9. 'ars' → logprob: -9.095314025878906
    10. 'ans' → logprob: -9.095314025878906

Token 344: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.4060414731502533
    2. 'ank' → logprob: -1.1560415029525757
    3. '[' → logprob: -4.906041622161865
    4. '[:' → logprob: -5.281041622161865
    5. 'anked' → logprob: -5.281041622161865
    6. 'ks' → logprob: -7.906041622161865
    7. 'ans' → logprob: -8.156041145324707
    8. 's' → logprob: -9.031041145324707
    9. 'an' → logprob: -9.406041145324707
    10. 'k' → logprob: -9.656041145324707

Token 345: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.014165629632771015
    2. '][:' → logprob: -4.26416540145874
    3. '   ' → logprob: -14.264165878295898
    4. ':x' → logprob: -14.639165878295898
    5. ':' → logprob: -14.889165878295898
    6. ']' → logprob: -15.014165878295898
    7. '[' → logprob: -15.764165878295898
    8. ' if' → logprob: -16.2641658782959
    9. ' [:' → logprob: -16.3891658782959
    10. 'if' → logprob: -17.2641658782959

Token 346: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.250000953674316
    3. '(x' → logprob: -22.375
    4. '"x' → logprob: -22.625
    5. '$x' → logprob: -23.0
    6. '	x' → logprob: -23.0
    7. ')x' → logprob: -23.125
    8. ''x' → logprob: -23.125
    9. '{x' → logprob: -23.625
    10. '```' → logprob: -24.375

Token 347: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025779171846807003
    2. ']]' → logprob: -6.002577781677246
    3. ' ]' → logprob: -9.877577781677246
    4. ')]' → logprob: -10.002577781677246
    5. ']
' → logprob: -13.127577781677246
    6. ']}' → logprob: -13.752577781677246
    7. '}]' → logprob: -14.252577781677246
    8. ' ]]' → logprob: -14.627577781677246
    9. '>]' → logprob: -14.627577781677246
    10. '()]' → logprob: -14.877577781677246

Token 348: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3716878592967987
    2. '<|end|>' → logprob: -1.371687889099121
    3. '    
' → logprob: -3.746687889099121
    4. '
' → logprob: -4.121687889099121
    5. 'votes' → logprob: -5.246687889099121
    6. '       ' → logprob: -5.996687889099121
    7. ' votes' → logprob: -6.246687889099121
    8. '<|end|>' → logprob: -6.371687889099121
    9. ' 
' → logprob: -6.871687889099121
    10. '  
' → logprob: -6.871687889099121

Token 349: ' selected' (ID: 6386)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'votes' → logprob: -1.0027271509170532
    2. '   ' → logprob: -1.1277271509170532
    3. ' votes' → logprob: -2.1277270317077637
    4. '
' → logprob: -4.002727031707764
    5. '       ' → logprob: -4.127727031707764
    6. 'rest' → logprob: -4.252727031707764
    7. '<|end|>' → logprob: -4.252727031707764
    8. ' points' → logprob: -4.502727031707764
    9. ' if' → logprob: -4.502727031707764
    10. '    
' → logprob: -4.627727031707764

Token 350: '_set' (ID: 5451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: '=set' (ID: 166509)
  Prédit: '=set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=set' → logprob: -0.26637089252471924
    2. '=' → logprob: -1.7663708925247192
    3. ' =' → logprob: -2.7663707733154297
    4. '={' → logprob: -13.89137077331543
    5. '(set' → logprob: -14.26637077331543
    6. '={"' → logprob: -15.51637077331543
    7. ' ={' → logprob: -15.51637077331543
    8. '=s' → logprob: -15.64137077331543
    9. '=create' → logprob: -15.64137077331543
    10. 'set' → logprob: -15.76637077331543

Token 352: '(selected' (ID: 41539)
  Prédit: '(selected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(selected' → logprob: -3.4121114822482923e-06
    2. 'selected' → logprob: -13.375003814697266
    3. '([' → logprob: -14.000003814697266
    4. '[selected' → logprob: -15.125003814697266
    5. '()' → logprob: -15.250003814697266
    6. '(' → logprob: -15.250003814697266
    7. '(s' → logprob: -15.625003814697266
    8. '(select' → logprob: -17.375003814697266
    9. '(prom' → logprob: -17.500003814697266
    10. ' (' → logprob: -17.500003814697266

Token 353: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012903552269563079
    2. ')
' → logprob: -6.751290321350098
    3. '<|end|>' → logprob: -9.626290321350098
    4. ' )' → logprob: -10.376290321350098
    5. '       ' → logprob: -11.876290321350098
    6. '   ' → logprob: -12.001290321350098
    7. '<|end|>' → logprob: -12.876290321350098
    8. ')return' → logprob: -13.376290321350098
    9. '
' → logprob: -13.751290321350098
    10. ']' → logprob: -14.001290321350098

Token 354: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4853994846343994
    2. '
' → logprob: -1.8603994846343994
    3. '<|end|>' → logprob: -1.9853994846343994
    4. '       ' → logprob: -3.1103994846343994
    5. '    
' → logprob: -3.7353994846343994
    6. ' rest' → logprob: -5.73539924621582
    7. 'votes' → logprob: -5.73539924621582
    8. 'rest' → logprob: -5.73539924621582
    9. '  
' → logprob: -6.73539924621582
    10. '```' → logprob: -6.86039924621582

Token 355: ' #' (ID: 1069)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -1.53855562210083
    2. 'votes' → logprob: -2.28855562210083
    3. 'prom' → logprob: -2.66355562210083
    4. '#' (adapté à ' #') → logprob: -2.78855562210083
    5. 'top' → logprob: -2.78855562210083
    6. 'others' → logprob: -2.91355562210083
    7. 'scores' → logprob: -3.28855562210083
    8. 'for' → logprob: -3.28855562210083
    9. '   ' → logprob: -3.41355562210083
    10. 'cnt' → logprob: -3.53855562210083

Token 356: ' For' (ID: 2214)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -2.006150245666504
    2. 'for' → logprob: -2.506150245666504
    3. 'votes' → logprob: -2.506150245666504
    4. 'prom' → logprob: -2.631150245666504
    5. '#' → logprob: -2.631150245666504
    6. 'top' → logprob: -2.756150245666504
    7. 'total' → logprob: -2.881150245666504
    8. 'others' → logprob: -3.006150245666504
    9. 'scores' → logprob: -3.756150245666504
    10. ' non' → logprob: -3.756150245666504

Token 357: ' selected' (ID: 6386)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6523535847663879
    2. 'i' → logprob: -2.277353525161743
    3. 'each' → logprob: -2.277353525161743
    4. ' f' → logprob: -2.902353525161743
    5. 'fav' → logprob: -3.402353525161743
    6. 'c' → logprob: -3.777353525161743
    7. 'the' → logprob: -3.902353525161743
    8. 'rest' → logprob: -4.152353763580322
    9. 'p' → logprob: -4.402353763580322
    10. '_f' → logprob: -4.527353763580322

Token 358: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.25763702392578125
    2. 'chars' → logprob: -1.8826370239257812
    3. 'f' → logprob: -3.6326370239257812
    4. '_f' → logprob: -4.382637023925781
    5. ' chars' → logprob: -4.507637023925781
    6. '_chars' → logprob: -4.632637023925781
    7. '_set' → logprob: -5.132637023925781
    8. ' fav' → logprob: -5.882637023925781
    9. 's' → logprob: -6.382637023925781
    10. ',' → logprob: -6.882637023925781

Token 359: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6638779044151306
    2. ' chars' → logprob: -0.9138779044151306
    3. '_chars' → logprob: -2.7888779640197754
    4. 'chars' → logprob: -4.038877964019775
    5. '_set' → logprob: -6.038877964019775
    6. '=' → logprob: -6.913877964019775
    7. '   ' → logprob: -7.038877964019775
    8. 'ored' → logprob: -8.913877487182617
    9. '       ' → logprob: -9.288877487182617
    10. 'set' → logprob: -9.788877487182617

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06613662838935852
    2. '       ' → logprob: -3.066136598587036
    3. '<|end|>' → logprob: -4.691136837005615
    4. ':' → logprob: -5.941136837005615
    5. ',
' → logprob: -6.941136837005615
    6. ' ,' → logprob: -7.066136837005615
    7. '<|end|>' → logprob: -7.566136837005615
    8. ':
' → logprob: -7.691136837005615
    9. ',v' → logprob: -7.941136837005615
    10. ')' → logprob: -8.066136360168457

Token 361: ' determine' (ID: 11433)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9986982345581055
    2. 'votes' → logprob: -1.2486982345581055
    3. 'need' → logprob: -3.2486982345581055
    4. ' for' → logprob: -3.4986982345581055
    5. 'needed' → logprob: -3.6236982345581055
    6. 'extra' → logprob: -3.8736982345581055
    7. 'total' → logprob: -3.9986982345581055
    8. 'remain' → logprob: -4.2486982345581055
    9. ' votes' → logprob: -4.3736982345581055
    10. 'rest' → logprob: -4.3736982345581055

Token 362: ' minimal' (ID: 19957)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.9859200119972229
    2. 'votes' → logprob: -2.235919952392578
    3. 'min' → logprob: -2.735919952392578
    4. 'required' → logprob: -2.860919952392578
    5. 'if' → logprob: -2.860919952392578
    6. 'max' → logprob: -2.985919952392578
    7. 'the' → logprob: -3.110919952392578
    8. 'need' → logprob: -3.110919952392578
    9. 'their' → logprob: -3.235919952392578
    10. 'possible' → logprob: -3.610919952392578

Token 363: ' votes' (ID: 24183)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' → logprob: -0.08925962448120117
    2. ' votes' → logprob: -3.214259624481201
    3. 'vote' → logprob: -4.589259624481201
    4. 'increments' → logprob: -5.464259624481201
    5. 'increment' → logprob: -5.964259624481201
    6. 'extra' → logprob: -5.964259624481201
    7. 'additional' → logprob: -6.089259624481201
    8. 'increase' → logprob: -6.089259624481201
    9. 'cost' → logprob: -6.089259624481201
    10. ' extra' → logprob: -6.214259624481201

Token 364: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.5927526950836182
    2. '_needed' → logprob: -1.8427526950836182
    3. '<|end|>' → logprob: -2.092752695083618
    4. ' needed' → logprob: -2.842752695083618
    5. ' to' → logprob: -3.592752695083618
    6. ')' → logprob: -3.842752695083618
    7. '   ' → logprob: -4.217752456665039
    8. 'to' → logprob: -4.842752456665039
    9. '<|end|>' → logprob: -4.842752456665039
    10. 'for' → logprob: -5.342752456665039

Token 365: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2548951506614685
    2. '<|end|>' → logprob: -2.1298952102661133
    3. 'to' → logprob: -2.6298952102661133
    4. 'for' → logprob: -4.504895210266113
    5. '<|end|>' → logprob: -4.754895210266113
    6. ' for' → logprob: -5.004895210266113
    7. '
' → logprob: -5.879895210266113
    8. '   ' → logprob: -6.379895210266113
    9. 'def' → logprob: -7.129895210266113
    10. 'tokens' → logprob: -7.504895210266113

Token 366: ' be' (ID: 413)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.4241714477539062
    2. 'pass' → logprob: -2.0491714477539062
    3. 'raise' → logprob: -2.0491714477539062
    4. 'o' → logprob: -2.5491714477539062
    5. 'sur' → logprob: -2.7991714477539062
    6. 'reach' → logprob: -2.7991714477539062
    7. 'top' → logprob: -3.0491714477539062
    8. ' surpass' → logprob: -3.4241714477539062
    9. 'increase' → logprob: -3.6741714477539062
    10. 'get' → logprob: -3.9241714477539062

Token 367: ' at' (ID: 540)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.3526960611343384
    2. 'above' → logprob: -1.7276960611343384
    3. 'higher' → logprob: -2.102695941925049
    4. 'in' → logprob: -2.477695941925049
    5. 'at' → logprob: -2.852695941925049
    6. 'placed' → logprob: -2.977695941925049
    7. ' higher' → logprob: -3.602695941925049
    8. ' in' → logprob: -3.852695941925049
    9. '```' → logprob: -3.977695941925049
    10. ' placed' → logprob: -4.102695941925049

Token 368: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.04143686965107918
    2. ' least' → logprob: -3.2914369106292725
    3. 'top' → logprob: -5.916436672210693
    4. 'the' → logprob: -8.166437149047852
    5. 'rank' → logprob: -9.541437149047852
    6. 'i' → logprob: -9.916437149047852
    7. '[top' → logprob: -10.041437149047852
    8. '[i' → logprob: -10.666437149047852
    9. '```' → logprob: -10.791437149047852
    10. ' top' → logprob: -10.791437149047852

Token 369: ' at' (ID: 540)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.7351605296134949
    2. 'chars' → logprob: -1.4851605892181396
    3. 'K' → logprob: -1.6101605892181396
    4. ' chars' → logprob: -3.9851605892181396
    5. ' K' → logprob: -4.1101603507995605
    6. ' rank' → logprob: -4.2351603507995605
    7. 'x' → logprob: -4.7351603507995605
    8. 'L' → logprob: -4.7351603507995605
    9. 'the' → logprob: -5.4851603507995605
    10. 'top' → logprob: -5.6101603507995605

Token 370: ' position' (ID: 4010)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.04973248764872551
    2. 'K' → logprob: -3.7997324466705322
    3. 'chars' → logprob: -4.424732685089111
    4. ' rank' → logprob: -4.924732685089111
    5. 'position' → logprob: -5.674732685089111
    6. ' K' → logprob: -7.299732685089111
    7. 'pos' → logprob: -7.549732685089111
    8. 'the' → logprob: -7.674732685089111
    9. '0' → logprob: -7.924732685089111
    10. 'top' → logprob: -8.674732208251953

Token 371: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5308837890625
    2. 'x' → logprob: -1.4058837890625
    3. ' K' → logprob: -2.7808837890625
    4. '0' → logprob: -3.6558837890625
    5. ' x' → logprob: -3.7808837890625
    6. 'i' → logprob: -3.7808837890625
    7. '=' → logprob: -4.1558837890625
    8. 'k' → logprob: -5.1558837890625
    9. 'rank' → logprob: -5.6558837890625
    10. ' i' → logprob: -6.0308837890625

Token 372: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36183255910873413
    2. ':' → logprob: -2.111832618713379
    3. '       ' → logprob: -2.861832618713379
    4. ' +' → logprob: -3.111832618713379
    5. ' -' → logprob: -3.986832618713379
    6. '   ' → logprob: -4.111832618713379
    7. '-' → logprob: -4.236832618713379
    8. '<|end|>' → logprob: -5.361832618713379
    9. '.' → logprob: -5.736832618713379
    10. '
' → logprob: -6.111832618713379

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030551934614777565
    2. ' ' → logprob: -3.6555519104003906
    3. '0' → logprob: -5.905551910400391
    4. '```' → logprob: -7.280551910400391
    5. '+' → logprob: -8.28055191040039
    6. '   ' → logprob: -8.53055191040039
    7. 'level' → logprob: -9.03055191040039
    8. '       ' → logprob: -10.15555191040039
    9. '    ' → logprob: -10.53055191040039
    10. 'position' → logprob: -10.78055191040039

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45289990305900574
    2. '<|end|>' → logprob: -1.5778999328613281
    3. '   ' → logprob: -2.577899932861328
    4. '
' → logprob: -2.702899932861328
    5. ',' → logprob: -6.202899932861328
    6. ')' → logprob: -6.327899932861328
    7. '<|end|>' → logprob: -6.577899932861328
    8. '        
' → logprob: -6.952899932861328
    9. ':' → logprob: -6.952899932861328
    10. '    
' → logprob: -7.202899932861328

Token 375: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' #' (ID: 1069)
  Prédit: ' votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' votes' → logprob: -1.28801691532135
    2. ' needed' → logprob: -1.91301691532135
    3. 'needed' → logprob: -2.1630167961120605
    4. 'votes' → logprob: -2.1630167961120605
    5. ' for' → logprob: -2.6630167961120605
    6. 'need' → logprob: -3.4130167961120605
    7. ' need' → logprob: -3.4130167961120605
    8. '
' → logprob: -3.9130167961120605
    9. 'for' → logprob: -4.4130167961120605
    10. ' rest' → logprob: -4.6630167961120605

Token 377: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5809037685394287
    2. ' needed' → logprob: -1.8309037685394287
    3. ' max' → logprob: -2.4559037685394287
    4. ' for' → logprob: -2.5809037685394287
    5. ' min' → logprob: -2.5809037685394287
    6. ' votes' → logprob: -2.5809037685394287
    7. ' res' → logprob: -3.0809037685394287
    8. 'needed' → logprob: -3.4559037685394287
    9. 'votes' → logprob: -3.8309037685394287
    10. ' total' → logprob: -4.080904006958008

Token 378: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9505650401115417
    2. 'each' → logprob: -1.9505650997161865
    3. 'i' → logprob: -2.2005650997161865
    4. ' pos' → logprob: -2.7005650997161865
    5. 'other' → logprob: -3.0755650997161865
    6. ' i' → logprob: -3.3255650997161865
    7. ' each' → logprob: -3.4505650997161865
    8. 'f' → logprob: -3.8255650997161865
    9. '_' → logprob: -3.9505650997161865
    10. 'p' → logprob: -4.075564861297607

Token 379: ' char' (ID: 1826)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.9714671969413757
    2. 'f' → logprob: -1.7214672565460205
    3. 'i' → logprob: -2.0964672565460205
    4. 'pos' → logprob: -2.7214672565460205
    5. ' i' → logprob: -3.3464672565460205
    6. ' pos' → logprob: -3.5964672565460205
    7. 'p' → logprob: -3.7214672565460205
    8. ' f' → logprob: -3.7214672565460205
    9. 'c' → logprob: -3.8464672565460205
    10. 'char' → logprob: -4.221467018127441

Token 380: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.047951482236385345
    2. ',' → logprob: -3.6729514598846436
    3. 'in' → logprob: -5.422951698303223
    4. 's' → logprob: -5.547951698303223
    5. ' s' → logprob: -5.922951698303223
    6. '   ' → logprob: -6.172951698303223
    7. ' ,' → logprob: -6.672951698303223
    8. ')' → logprob: -7.297951698303223
    9. '       ' → logprob: -7.422951698303223
    10. ' not' → logprob: -7.797951698303223

Token 381: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4931737184524536
    2. 'pos' → logprob: -1.4931737184524536
    3. '       ' → logprob: -1.9931737184524536
    4. ' pos' → logprob: -2.743173599243164
    5. 'for' → logprob: -3.243173599243164
    6. ' for' → logprob: -3.368173599243164
    7. 'votes' → logprob: -3.493173599243164
    8. 'max' → logprob: -3.868173599243164
    9. 'needed' → logprob: -3.868173599243164
    10. 'need' → logprob: -3.993173599243164

Token 382: ' vote' (ID: 14048)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.43349647521972656
    2. 'votes' → logprob: -1.3084964752197266
    3. '_vote' → logprob: -3.9334964752197266
    4. ' votes' → logprob: -4.058496475219727
    5. '_' → logprob: -4.558496475219727
    6. '_needed' → logprob: -4.683496475219727
    7. 'vote' → logprob: -5.308496475219727
    8. 'v' → logprob: -5.933496475219727
    9. ')' → logprob: -5.933496475219727
    10. 'needed' → logprob: -6.433496475219727

Token 383: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5096293091773987
    2. '_needed' → logprob: -1.259629249572754
    3. 'needed' → logprob: -2.884629249572754
    4. '=' → logprob: -3.634629249572754
    5. '_required' → logprob: -3.884629249572754
    6. ' =' → logprob: -5.384629249572754
    7. ' needed' → logprob: -6.134629249572754
    8. 'need' → logprob: -7.259629249572754
    9. '_need' → logprob: -7.384629249572754
    10. 'required' → logprob: -7.384629249572754

Token 384: ' surpass' (ID: 61253)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9315834641456604
    2. 'be' → logprob: -1.9315834045410156
    3. 'beat' → logprob: -1.9315834045410156
    4. ' surpass' → logprob: -1.9315834045410156
    5. 'reach' → logprob: -3.3065834045410156
    6. ' be' → logprob: -3.9315834045410156
    7. 'move' → logprob: -4.431583404541016
    8. 'sur' → logprob: -4.556583404541016
    9. ' pass' → logprob: -4.681583404541016
    10. 'put' → logprob: -4.931583404541016

Token 385: ' the' (ID: 290)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.12490902096033096
    2. 'rank' → logprob: -3.124908924102783
    3. ' chars' → logprob: -3.499908924102783
    4. '=' → logprob: -4.249908924102783
    5. ')' → logprob: -5.124908924102783
    6. ' rank' → logprob: -5.374908924102783
    7. 'max' → logprob: -6.374908924102783
    8. '   ' → logprob: -6.499908924102783
    9. 'pos' → logprob: -6.749908924102783
    10. ']' → logprob: -6.749908924102783

Token 386: ' char' (ID: 1826)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.4119679629802704
    2. 'rank' → logprob: -1.9119679927825928
    3. ' chars' → logprob: -2.0369679927825928
    4. ' rank' → logprob: -3.9119679927825928
    5. ')' → logprob: -4.286967754364014
    6. ' K' → logprob: -4.911967754364014
    7. 'K' → logprob: -5.036967754364014
    8. '[' → logprob: -6.161967754364014
    9. 'char' → logprob: -6.411967754364014
    10. 'score' → logprob: -6.411967754364014

Token 387: ' currently' (ID: 6821)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46602189540863037
    2. ' at' → logprob: -1.0910218954086304
    3. 'at' → logprob: -4.46602201461792
    4. 'rank' → logprob: -4.71602201461792
    5. '```' → logprob: -5.96602201461792
    6. ' above' → logprob: -6.34102201461792
    7. '[' → logprob: -7.09102201461792
    8. ' ranked' → logprob: -7.34102201461792
    9. 'K' → logprob: -7.46602201461792
    10. ')' → logprob: -7.46602201461792

Token 388: ' at' (ID: 540)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.9684380292892456
    2. 'at' → logprob: -1.0934380292892456
    3. ' at' → logprob: -1.9684380292892456
    4. 's' → logprob: -2.593438148498535
    5. '[K' → logprob: -4.093438148498535
    6. 'K' → logprob: -4.343438148498535
    7. '```' → logprob: -5.093438148498535
    8. 'in' → logprob: -5.593438148498535
    9. ']' → logprob: -5.718438148498535
    10. ')' → logprob: -5.718438148498535

Token 389: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07054150849580765
    2. 'chars' → logprob: -2.8205416202545166
    3. 'rank' → logprob: -5.0705413818359375
    4. ' K' → logprob: -6.3205413818359375
    5. ' chars' → logprob: -8.195541381835938
    6. 'k' → logprob: -9.820541381835938
    7. ' rank' → logprob: -10.695541381835938
    8. '   ' → logprob: -10.695541381835938
    9. '`' → logprob: -10.945541381835938
    10. '(chars' → logprob: -11.570541381835938

Token 390: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017444614320993423
    2. ' -' → logprob: -4.267444610595703
    3. '-token' → logprob: -6.892444610595703
    4. '   ' → logprob: -7.517444610595703
    5. '<|end|>' → logprob: -7.517444610595703
    6. '```' → logprob: -8.517444610595703
    7. '0' → logprob: -8.892444610595703
    8. ' ' → logprob: -9.267444610595703
    9. 'token' → logprob: -9.267444610595703
    10. '-position' → logprob: -9.267444610595703

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.996708104154095e-05
    2. ' ' → logprob: -9.250100135803223
    3. '```' → logprob: -12.750100135803223
    4. '0' → logprob: -15.500100135803223
    5. 'K' → logprob: -15.500100135803223
    6. '   ' → logprob: -15.875100135803223
    7. '`' → logprob: -16.000099182128906
    8. 'k' → logprob: -16.500099182128906
    9. '``' → logprob: -16.875099182128906
    10. ')' → logprob: -17.687599182128906

Token 392: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9762110710144043
    2. '   ' → logprob: -1.2262110710144043
    3. ')' → logprob: -2.2262110710144043
    4. '+' → logprob: -3.3512110710144043
    5. '       ' → logprob: -3.4762110710144043
    6. '<|end|>' → logprob: -3.4762110710144043
    7. '
' → logprob: -3.7262110710144043
    8. ' ' → logprob: -4.601211071014404
    9. ':
' → logprob: -4.726211071014404
    10. ',' → logprob: -4.851211071014404

Token 393: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.993850588798523
    2. '   ' → logprob: -1.993850588798523
    3. ' =' → logprob: -2.8688507080078125
    4. ' chars' → logprob: -3.1188507080078125
    5. 'pos' → logprob: -3.2438507080078125
    6. '
' → logprob: -3.4938507080078125
    7. ')' → logprob: -3.6188507080078125
    8. '.' → logprob: -3.9938507080078125
    9. 'target' → logprob: -3.9938507080078125
    10. ':
' → logprob: -4.1188507080078125

Token 394: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' (adapté à ' threshold') → logprob: -0.42640021443367004
    2. 'target' → logprob: -2.0514001846313477
    3. ' threshold' → logprob: -2.5514001846313477
    4. 'pos' → logprob: -3.4264001846313477
    5. ' target' → logprob: -3.8014001846313477
    6. ' kth' → logprob: -4.426400184631348
    7. '   ' → logprob: -4.551400184631348
    8. 'K' → logprob: -4.926400184631348
    9. 'pivot' → logprob: -5.051400184631348
    10. 'cur' → logprob: -5.051400184631348

Token 395: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48960208892822266
    2. ' =' → logprob: -0.9896020889282227
    3. '_votes' → logprob: -5.114602088928223
    4. '_score' → logprob: -5.364602088928223
    5. '=v' → logprob: -6.364602088928223
    6. '_vote' → logprob: -6.489602088928223
    7. '_char' → logprob: -7.864602088928223
    8. 'score' → logprob: -8.864602088928223
    9. '_pos' → logprob: -9.114602088928223
    10. '_chars' → logprob: -9.739602088928223

Token 396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012529428116977215
    2. ' =' → logprob: -4.387529373168945
    3. '=k' → logprob: -11.637529373168945
    4. '=
' → logprob: -12.762529373168945
    5. 'K' → logprob: -13.512529373168945
    6. 'chars' → logprob: -13.637529373168945
    7. '=max' → logprob: -13.762529373168945
    8. '=len' → logprob: -14.012529373168945
    9. '=min' → logprob: -14.637529373168945
    10. '   ' → logprob: -14.887529373168945

Token 397: ' K' (ID: 658)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.509916365146637
    2. 'K' → logprob: -1.0099163055419922
    3. 'rank' → logprob: -3.384916305541992
    4. ' chars' → logprob: -7.884916305541992
    5. ' K' → logprob: -8.259916305541992
    6. 'k' → logprob: -9.134916305541992
    7. 'char' → logprob: -9.134916305541992
    8. '[K' → logprob: -9.384916305541992
    9. 'characters' → logprob: -9.759916305541992
    10. '0' → logprob: -9.884916305541992

Token 398: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017789494013413787
    2. ' -' → logprob: -6.376779079437256
    3. '[' → logprob: -10.376778602600098
    4. '   ' → logprob: -10.626778602600098
    5. '<|end|>' → logprob: -12.126778602600098
    6. '<|end|>' → logprob: -12.376778602600098
    7. ' ' → logprob: -13.501778602600098
    8. 'if' → logprob: -13.501778602600098
    9. ')' → logprob: -13.626778602600098
    10. '1' → logprob: -13.876778602600098

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -14.937507629394531
    4. '   ' → logprob: -16.75000762939453
    5. '<|end|>' → logprob: -16.81250762939453
    6. '2' → logprob: -17.06250762939453
    7. '0' → logprob: -17.68750762939453
    8. '-' → logprob: -18.00000762939453
    9. '۱' → logprob: -18.18750762939453
    10. '
' → logprob: -18.50000762939453

Token 400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.059203863143921
    2. 'threshold' → logprob: -1.184203863143921
    3. '
' → logprob: -2.059203863143921
    4. '   ' → logprob: -3.309203863143921
    5. 'target' → logprob: -3.559203863143921
    6. 'if' → logprob: -3.684203863143921
    7. ' threshold' → logprob: -4.0592041015625
    8. '+' → logprob: -4.6842041015625
    9. 'votes' → logprob: -5.0592041015625
    10. 'token' → logprob: -5.0592041015625

Token 402: ' if' (ID: 538)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.33324265480041504
    2. 'target' → logprob: -1.958242654800415
    3. 'top' → logprob: -3.333242654800415
    4. 'if' (adapté à ' if') → logprob: -3.708242654800415
    5. 'votes' → logprob: -4.208242416381836
    6. 'max' → logprob: -4.333242416381836
    7. 'min' → logprob: -4.833242416381836
    8. 'th' → logprob: -4.958242416381836
    9. ' threshold' → logprob: -5.333242416381836
    10. 'cur' → logprob: -5.583242416381836

Token 403: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.017535988241434097
    2. ' threshold' → logprob: -4.517536163330078
    3. 'len' → logprob: -6.017536163330078
    4. 'N' → logprob: -6.017536163330078
    5. 'K' → logprob: -7.267536163330078
    6. 'rank' → logprob: -7.392536163330078
    7. 'L' → logprob: -9.017536163330078
    8. 'chars' → logprob: -10.017536163330078
    9. ' len' → logprob: -10.392536163330078
    10. ' N' → logprob: -10.892536163330078

Token 404: '_idx' (ID: 15257)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.445145606994629
    2. '>=' → logprob: -1.445145606994629
    3. ' ==' → logprob: -1.945145606994629
    4. '==' → logprob: -2.070145606994629
    5. ' >=' → logprob: -2.320145606994629
    6. '_idx' → logprob: -2.570145606994629
    7. ' >' → logprob: -2.695145606994629
    8. '-' → logprob: -5.195145606994629
    9. '<=' → logprob: -5.820145606994629
    10. ' <' → logprob: -6.320145606994629

Token 405: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04840361326932907
    2. ' >=' → logprob: -3.29840350151062
    3. '==' → logprob: -5.048403739929199
    4. '<' → logprob: -6.173403739929199
    5. '>' → logprob: -6.798403739929199
    6. ' ==' → logprob: -7.548403739929199
    7. ' <' → logprob: -10.0484037399292
    8. '==-' → logprob: -10.6734037399292
    9. ']>=' → logprob: -10.6734037399292
    10. ' >' → logprob: -11.0484037399292

Token 406: 'len' (ID: 3303)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005435812287032604
    2. 'len' → logprob: -5.255435943603516
    3. ' N' → logprob: -8.630435943603516
    4. '0' → logprob: -11.505435943603516
    5. ' len' → logprob: -11.755435943603516
    6. '   ' → logprob: -12.380435943603516
    7. ' ' → logprob: -14.505435943603516
    8. 'n' → logprob: -14.755435943603516
    9. '
' → logprob: -16.755435943603516
    10. '```' → logprob: -16.880435943603516

Token 407: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -0.12717051804065704
    2. '(rank' → logprob: -2.1271705627441406
    3. 'chars' → logprob: -9.37717056274414
    4. '(char' → logprob: -9.37717056274414
    5. 'rank' → logprob: -10.75217056274414
    6. '(' → logprob: -11.00217056274414
    7. '(ch' → logprob: -11.50217056274414
    8. ' chars' → logprob: -12.00217056274414
    9. '(r' → logprob: -12.25217056274414
    10. '(f' → logprob: -12.37717056274414

Token 408: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015940871089696884
    2. '):
' → logprob: -4.2659406661987305
    3. ')' → logprob: -6.3909406661987305
    4. ':' → logprob: -10.26594066619873
    5. ' or' → logprob: -10.64094066619873
    6. ' ):' → logprob: -10.89094066619873
    7. ')==' → logprob: -12.26594066619873
    8. '   ' → logprob: -12.76594066619873
    9. '):

' → logprob: -12.89094066619873
    10. ']:' → logprob: -13.51594066619873

Token 409: ' threshold' (ID: 24313)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2875562906265259
    2. 'return' → logprob: -2.0375561714172363
    3. '           ' → logprob: -2.5375561714172363
    4. '       ' → logprob: -3.6625561714172363
    5. '
' → logprob: -4.787556171417236
    6. '0' → logprob: -6.162556171417236
    7. ' threshold' → logprob: -6.912556171417236
    8. ':return' → logprob: -7.037556171417236
    9. 'threshold' → logprob: -7.537556171417236
    10. '   ' → logprob: -7.787556171417236

Token 410: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -6.630610641877865e-06
    2. 'Idx' → logprob: -13.750006675720215
    3. 'idx' → logprob: -13.750006675720215
    4. '_IDX' → logprob: -14.125006675720215
    5. 'hold' → logprob: -14.625006675720215
    6. 's' → logprob: -14.625006675720215
    7. '_idxs' → logprob: -15.125006675720215
    8. '[idx' → logprob: -15.125006675720215
    9. '   ' → logprob: -15.250006675720215
    10. '_threshold' → logprob: -15.375006675720215

Token 411: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021295815706253052
    2. ' =' → logprob: -3.8962957859039307
    3. '=len' → logprob: -7.52129602432251
    4. '=
' → logprob: -9.646295547485352
    5. '=N' → logprob: -10.896295547485352
    6. '=int' → logprob: -11.021295547485352
    7. '=True' → logprob: -11.021295547485352
    8. '=-' → logprob: -11.396295547485352
    9. '=size' → logprob: -11.521295547485352
    10. '=False' → logprob: -11.646295547485352

Token 412: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -2.9160102712921798e-05
    2. '(rank' → logprob: -10.625029563903809
    3. 'chars' → logprob: -12.625029563903809
    4. '(' → logprob: -14.500029563903809
    5. '(char' → logprob: -14.750029563903809
    6. '(ch' → logprob: -16.250028610229492
    7. '(r' → logprob: -16.375028610229492
    8. 'rank' → logprob: -16.375028610229492
    9. '(cards' → logprob: -17.125028610229492
    10. '(f' → logprob: -17.375028610229492

Token 413: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.2537691593170166
    2. ')' → logprob: -1.5037691593170166
    3. '-' → logprob: -7.6287689208984375
    4. '   ' → logprob: -8.003768920898438
    5. ' )' → logprob: -8.003768920898438
    6. '[' → logprob: -8.878768920898438
    7. 'chars' → logprob: -9.378768920898438
    8. ')
' → logprob: -9.503768920898438
    9. '       ' → logprob: -9.753768920898438
    10. '_chars' → logprob: -10.003768920898438

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '```' → logprob: -19.375003814697266
    5. '2' → logprob: -19.500003814697266
    6. '１' → logprob: -20.437503814697266
    7. '
' → logprob: -20.562503814697266
    8. '0' → logprob: -21.187503814697266
    9. '3' → logprob: -21.750003814697266
    10. '۱' → logprob: -22.062503814697266

Token 415: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022509338334202766
    2. '       ' → logprob: -4.522509574890137
    3. '   ' → logprob: -5.897509574890137
    4. '    
' → logprob: -6.272509574890137
    5. '        
' → logprob: -6.897509574890137
    6. ' 
' → logprob: -6.897509574890137
    7. ')' → logprob: -7.022509574890137
    8. '
' → logprob: -7.272509574890137
    9. '  
' → logprob: -7.647509574890137
    10. ')
' → logprob: -8.022509574890137

Token 416: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7840448617935181
    2. '<|end|>' → logprob: -1.659044861793518
    3. '   ' → logprob: -2.4090447425842285
    4. '       ' → logprob: -2.6590447425842285
    5. ')' → logprob: -3.6590447425842285
    6. '    
' → logprob: -3.7840447425842285
    7. ' 
' → logprob: -3.9090447425842285
    8. '  
' → logprob: -3.9090447425842285
    9. '\n' → logprob: -4.1590447425842285
    10. 'tokens' → logprob: -4.1590447425842285

Token 417: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' (adapté à ' threshold') → logprob: -0.19048090279102325
    2. ' threshold' → logprob: -2.190480947494507
    3. 'target' → logprob: -3.690480947494507
    4. '   ' → logprob: -4.815480709075928
    5. 'th' → logprob: -5.440480709075928
    6. ' target' → logprob: -5.565480709075928
    7. '
' → logprob: -6.065480709075928
    8. 'votes' → logprob: -6.315480709075928
    9. 'top' → logprob: -6.690480709075928
    10. 'v' → logprob: -6.940480709075928

Token 418: '_votes' (ID: 167389)
  Prédit: '_vote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vote' → logprob: -0.6454043388366699
    2. '_v' → logprob: -1.89540433883667
    3. '_score' → logprob: -2.14540433883667
    4. '_votes' → logprob: -2.27040433883667
    5. '_char' → logprob: -2.89540433883667
    6. ' =' → logprob: -3.89540433883667
    7. '=' → logprob: -4.89540433883667
    8. '=v' → logprob: -4.89540433883667
    9. '_value' → logprob: -5.27040433883667
    10. '_chars' → logprob: -6.02040433883667

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021880913991481066
    2. ' =' → logprob: -6.127188205718994
    3. '=max' → logprob: -13.002187728881836
    4. '=int' → logprob: -15.252187728881836
    5. '=

' → logprob: -16.502187728881836
    6. ',' → logprob: -16.752187728881836
    7. '=cut' → logprob: -16.752187728881836
    8. '=
' → logprob: -17.002187728881836
    9. '=params' → logprob: -17.502187728881836
    10. '=len' → logprob: -17.627187728881836

Token 420: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.0003818140830844641
    2. ' chars' → logprob: -7.875381946563721
    3. 'max' → logprob: -14.000381469726562
    4. '(chars' → logprob: -14.500381469726562
    5. '   ' → logprob: -15.500381469726562
    6. 'char' → logprob: -16.250381469726562
    7. '0' → logprob: -17.750381469726562
    8. '       ' → logprob: -17.875381469726562
    9. '_chars' → logprob: -17.875381469726562
    10. 'characters' → logprob: -18.250381469726562

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.77627644513268e-06
    2. 'threshold' → logprob: -12.000008583068848
    3. '[
' → logprob: -13.750008583068848
    4. '```' → logprob: -15.125008583068848
    5. '][' → logprob: -15.625008583068848
    6. 'th' → logprob: -15.750008583068848
    7. ')[' → logprob: -15.750008583068848
    8. ' [' → logprob: -16.000009536743164
    9. '   ' → logprob: -16.000009536743164
    10. '[K' → logprob: -16.500009536743164

Token 422: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -7.135819760151207e-05
    2. '[' → logprob: -10.12507152557373
    3. ' threshold' → logprob: -11.12507152557373
    4. 'K' → logprob: -11.62507152557373
    5. '][' → logprob: -12.25007152557373
    6. '0' → logprob: -13.62507152557373
    7. 'th' → logprob: -14.50007152557373
    8. '[K' → logprob: -14.75007152557373
    9. ']' → logprob: -15.75007152557373
    10. '
' → logprob: -16.000070571899414

Token 423: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.000698376854415983
    2. 'idx' → logprob: -8.50069808959961
    3. '][' → logprob: -8.62569808959961
    4. '_votes' → logprob: -9.12569808959961
    5. '[' → logprob: -9.62569808959961
    6. '-' → logprob: -10.50069808959961
    7. '_IDX' → logprob: -11.25069808959961
    8. ']' → logprob: -11.50069808959961
    9. '   ' → logprob: -11.62569808959961
    10. '```' → logprob: -11.75069808959961

Token 424: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028093906585127115
    2. '[' → logprob: -5.877809524536133
    3. ' ][' → logprob: -13.127809524536133
    4. ']' → logprob: -13.877809524536133
    5. '1' → logprob: -14.252809524536133
    6. '
' → logprob: -15.252809524536133
    7. '   ' → logprob: -15.377809524536133
    8. '0' → logprob: -16.252809524536133
    9. '"][' → logprob: -16.377809524536133
    10. ''][' → logprob: -16.752809524536133

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.875007629394531
    3. '```' → logprob: -13.625007629394531
    4. ' ' → logprob: -13.750007629394531
    5. '
' → logprob: -13.875007629394531
    6. '   ' → logprob: -14.250007629394531
    7. '][' → logprob: -14.375007629394531
    8. ']' → logprob: -15.500007629394531
    9. '2' → logprob: -16.25000762939453
    10. '    
' → logprob: -16.50000762939453

Token 426: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15341144800186157
    2. ']+' → logprob: -2.778411388397217
    3. '<|end|>' → logprob: -2.903411388397217
    4. '+' → logprob: -3.778411388397217
    5. ' +' → logprob: -7.278411388397217
    6. ']-' → logprob: -7.528411388397217
    7. ' ]' → logprob: -8.153411865234375
    8. '-' → logprob: -8.278411865234375
    9. ']
' → logprob: -8.653411865234375
    10. '<|end|>' → logprob: -8.778411865234375

Token 427: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5147792100906372
    2. '       ' → logprob: -1.3897792100906372
    3. '   ' → logprob: -3.1397790908813477
    4. '+' → logprob: -3.2647790908813477
    5. '    
' → logprob: -4.264779090881348
    6. '        
' → logprob: -4.264779090881348
    7. ' +' → logprob: -4.389779090881348
    8. '  
' → logprob: -5.139779090881348
    9. '<|end|>' → logprob: -5.139779090881348
    10. ' 
' → logprob: -5.639779090881348

Token 428: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4534939229488373
    2. 'votes' → logprob: -1.8284939527511597
    3. '   ' → logprob: -3.57849383354187
    4. '    
' → logprob: -3.70349383354187
    5. ' votes' → logprob: -4.078494071960449
    6. ' 
' → logprob: -4.203494071960449
    7. 'for' → logprob: -4.578494071960449
    8. 'tokens' → logprob: -4.703494071960449
    9. 'if' → logprob: -4.828494071960449
    10. '\n' → logprob: -4.953494071960449

Token 429: ' if' (ID: 538)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -1.1710277795791626
    2. 'need' → logprob: -1.9210277795791626
    3. 'votes' → logprob: -2.171027660369873
    4. ' needed' → logprob: -2.671027660369873
    5. 'if' → logprob: -3.046027660369873
    6. ' votes' → logprob: -3.421027660369873
    7. 'for' → logprob: -3.796027660369873
    8. ' if' → logprob: -3.921027660369873
    9. 'total' → logprob: -4.046027660369873
    10. 'required' → logprob: -4.046027660369873

Token 430: ' tie' (ID: 22244)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.5858523845672607
    2. ' chars' → logprob: -1.7108523845672607
    3. ' threshold' → logprob: -2.3358523845672607
    4. 'threshold' → logprob: -2.9608523845672607
    5. 'rank' → logprob: -3.8358523845672607
    6. 'v' → logprob: -4.08585262298584
    7. 'len' → logprob: -4.33585262298584
    8. ' len' → logprob: -4.58585262298584
    9. ' rank' → logprob: -4.83585262298584
    10. ' all' → logprob: -5.08585262298584

Token 431: ' in' (ID: 306)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_break' → logprob: -1.6256057024002075
    2. '-break' → logprob: -2.000605583190918
    3. 'and' → logprob: -2.125605583190918
    4. ':' → logprob: -2.250605583190918
    5. 'break' → logprob: -2.250605583190918
    6. '   ' → logprob: -2.625605583190918
    7. '==' → logprob: -2.625605583190918
    8. ' and' → logprob: -2.875605583190918
    9. '-breaking' → logprob: -3.750605583190918
    10. 's' → logprob: -3.875605583190918

Token 432: ' votes' (ID: 24183)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' → logprob: -0.4327434301376343
    2. 'threshold' → logprob: -1.0577434301376343
    3. ' votes' → logprob: -6.182743549346924
    4. ' threshold' → logprob: -6.932743549346924
    5. 'vote' → logprob: -7.307743549346924
    6. 'score' → logprob: -9.432743072509766
    7. 'v' → logprob: -9.682743072509766
    8. 'points' → logprob: -10.307743072509766
    9. 'chars' → logprob: -10.432743072509766
    10. '   ' → logprob: -10.557743072509766

Token 433: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5478696823120117
    2. ' and' → logprob: -1.5478696823120117
    3. '>' → logprob: -1.5478696823120117
    4. ' >' → logprob: -2.0478696823120117
    5. '==' → logprob: -2.2978696823120117
    6. 'and' → logprob: -3.0478696823120117
    7. ' ==' → logprob: -3.1728696823120117
    8. '>=' → logprob: -4.422869682312012
    9. ',' → logprob: -4.797869682312012
    10. ' >=' → logprob: -5.047869682312012

Token 434: ' K' (ID: 658)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0005890139145776629
    2. ' threshold' → logprob: -8.250589370727539
    3. 'chars' → logprob: -8.500589370727539
    4. 'K' → logprob: -9.375589370727539
    5. 'position' → logprob: -11.375589370727539
    6. 'the' → logprob: -11.750589370727539
    7. 'votes' → logprob: -12.250589370727539
    8. '=' → logprob: -12.500589370727539
    9. 'th' → logprob: -12.750589370727539
    10. 'index' → logprob: -13.250589370727539

Token 435: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.3822154111694545e-05
    2. ' -' → logprob: -10.875043869018555
    3. '_idx' → logprob: -11.625043869018555
    4. '[-' → logprob: -12.250043869018555
    5. '_' → logprob: -12.625043869018555
    6. '_index' → logprob: -13.250043869018555
    7. 'idx' → logprob: -14.000043869018555
    8. '   ' → logprob: -14.250043869018555
    9. '_-' → logprob: -14.250043869018555
    10. '```' → logprob: -14.500043869018555

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. 'index' → logprob: -10.250070571899414
    3. 'threshold' → logprob: -11.125070571899414
    4. '```' → logprob: -12.000070571899414
    5. '-' → logprob: -12.250070571899414
    6. 'idx' → logprob: -12.625070571899414
    7. ' ' → logprob: -12.875070571899414
    8. 'th' → logprob: -14.375070571899414
    9. 'rank' → logprob: -15.000070571899414
    10. '
' → logprob: -15.250070571899414

Token 437: ' position' (ID: 4010)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7297496199607849
    2. ' and' → logprob: -1.8547496795654297
    3. ':
' → logprob: -2.2297496795654297
    4. '+' → logprob: -2.2297496795654297
    5. '==' → logprob: -3.1047496795654297
    6. ' ==' → logprob: -3.9797496795654297
    7. '>' → logprob: -4.10474967956543
    8. 'and' → logprob: -4.35474967956543
    9. ' +' → logprob: -4.47974967956543
    10. ' >' → logprob: -4.60474967956543

Token 438: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5397214889526367
    2. ' and' → logprob: -1.1647214889526367
    3. ':
' → logprob: -3.5397214889526367
    4. '       ' → logprob: -3.6647214889526367
    5. ',' → logprob: -4.039721488952637
    6. 'and' → logprob: -4.289721488952637
    7. '           ' → logprob: -5.914721488952637
    8. '   ' → logprob: -6.039721488952637
    9. '<|end|>' → logprob: -6.039721488952637
    10. '==' → logprob: -6.289721488952637

Token 439: ' must' (ID: 2804)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -1.4731274843215942
    2. 'threshold' → logprob: -1.7231274843215942
    3. '#' → logprob: -1.9731274843215942
    4. ' need' → logprob: -2.7231273651123047
    5. '   ' → logprob: -3.2231273651123047
    6. ' for' → logprob: -3.3481273651123047
    7. ' we' → logprob: -3.3481273651123047
    8. ' continue' → logprob: -3.5981273651123047
    9. ' pass' → logprob: -3.5981273651123047
    10. 'need' → logprob: -3.5981273651123047

Token 440: ' consider' (ID: 3331)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8804551362991333
    2. ' surpass' → logprob: -2.2554550170898438
    3. 'sur' → logprob: -2.3804550170898438
    4. ' be' → logprob: -2.3804550170898438
    5. '>' → logprob: -2.7554550170898438
    6. 'increase' → logprob: -3.0054550170898438
    7. 'also' → logprob: -3.1304550170898438
    8. 'have' → logprob: -3.8804550170898438
    9. 'strict' → logprob: -4.255455017089844
    10. 'beat' → logprob: -4.505455017089844

Token 441: ' lex' (ID: 37772)
  Prédit: ' chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.5570759773254395
    2. ' that' → logprob: -2.1820759773254395
    3. ' if' → logprob: -2.3070759773254395
    4. 'chars' → logprob: -2.5570759773254395
    5. '+' → logprob: -4.0570759773254395
    6. ' votes' → logprob: -4.1820759773254395
    7. ' the' → logprob: -4.3070759773254395
    8. 'if' → logprob: -4.3070759773254395
    9. 'that' → logprob: -4.4320759773254395
    10. ' threshold' → logprob: -4.6820759773254395

Token 442: ' order' (ID: 2569)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6443559527397156
    2. '       ' → logprob: -0.8943559527397156
    3. '<|end|>' → logprob: -3.6443560123443604
    4. ' 
' → logprob: -4.519355773925781
    5. '   ' → logprob: -5.394355773925781
    6. ' if' → logprob: -5.519355773925781
    7. '        
' → logprob: -5.769355773925781
    8. ' for' → logprob: -6.269355773925781
    9. '.' → logprob: -6.269355773925781
    10. '+' → logprob: -6.519355773925781

Token 444: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.6465480327606201
    2. 'well' → logprob: -0.7715480327606201
    3. 'tie' → logprob: -5.271548271179199
    4. 't' → logprob: -5.521548271179199
    5. ' t' → logprob: -6.021548271179199
    6. ' tie' → logprob: -6.896548271179199
    7. 'chars' → logprob: -7.896548271179199
    8. 'break' → logprob: -8.6465482711792
    9. ' chars' → logprob: -8.6465482711792
    10. '           ' → logprob: -9.0215482711792

Token 445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07226589322090149
    2. '
' → logprob: -2.947265863418579
    3. '<|end|>' → logprob: -4.822266101837158
    4. '   ' → logprob: -5.447266101837158
    5. '        
' → logprob: -7.197266101837158
    6. ',' → logprob: -7.197266101837158
    7. '  
' → logprob: -7.822266101837158
    8. '.' → logprob: -7.947266101837158
    9. ')' → logprob: -7.947266101837158
    10. '    
' → logprob: -8.572265625

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09961205720901489
    2. '<|end|>' → logprob: -2.84961199760437
    3. '   ' → logprob: -4.349612236022949
    4. 'tokens' → logprob: -4.849612236022949
    5. '
' → logprob: -5.599612236022949
    6. ' for' → logprob: -6.099612236022949
    7. ' if' → logprob: -6.849612236022949
    8. 'token' → logprob: -7.224612236022949
    9. ' 
' → logprob: -7.224612236022949
    10. ')' → logprob: -7.224612236022949

Token 447: ' threshold' (ID: 24313)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2835525274276733
    2. 'threshold' (adapté à ' threshold') → logprob: -1.7835525274276733
    3. ' threshold' → logprob: -1.7835525274276733
    4. '       ' → logprob: -2.408552646636963
    5. ' next' → logprob: -2.533552646636963
    6. ' for' → logprob: -2.908552646636963
    7. 'if' → logprob: -4.033552646636963
    8. 'token' → logprob: -4.408552646636963
    9. 'next' → logprob: -4.408552646636963
    10. ' pos' → logprob: -4.533552646636963

Token 448: '_name' (ID: 2483)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.7211926579475403
    2. '_name' → logprob: -0.9711926579475403
    3. '_votes' → logprob: -2.2211925983428955
    4. '_idx' → logprob: -4.346192836761475
    5. '_chars' → logprob: -5.096192836761475
    6. '_pos' → logprob: -5.971192836761475
    7. '_s' → logprob: -6.096192836761475
    8. '_vote' → logprob: -7.346192836761475
    9. '_index' → logprob: -7.721192836761475
    10. ',_' → logprob: -7.721192836761475

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008617408573627472
    2. ' =' → logprob: -4.758617401123047
    3. '=cut' → logprob: -14.758617401123047
    4. '=len' → logprob: -14.883617401123047
    5. ',' → logprob: -15.383617401123047
    6. '=''' → logprob: -15.383617401123047
    7. '=c' → logprob: -15.883617401123047
    8. '=
' → logprob: -15.883617401123047
    9. '=`' → logprob: -16.133617401123047
    10. '=sys' → logprob: -16.133617401123047

Token 450: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.0005533903022296727
    2. ' chars' → logprob: -7.500553607940674
    3. '(chars' → logprob: -14.875553131103516
    4. 'char' → logprob: -18.250553131103516
    5. 'Chars' → logprob: -18.625553131103516
    6. '_chars' → logprob: -19.000553131103516
    7. 'characters' → logprob: -19.500553131103516
    8. '   ' → logprob: -19.500553131103516
    9. ' ' → logprob: -20.500553131103516
    10. 'cols' → logprob: -20.750553131103516

Token 451: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[K' → logprob: -15.875000953674316
    3. 'threshold' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.625
    5. '```' → logprob: -17.0
    6. '[
' → logprob: -17.375
    7. ' [' → logprob: -18.0
    8. '[k' → logprob: -18.5
    9. '[target' → logprob: -18.875
    10. '(th' → logprob: -19.0

Token 452: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -6.034592388459714e-06
    2. ' threshold' → logprob: -12.125005722045898
    3. 'K' → logprob: -15.000005722045898
    4. 'th' → logprob: -16.7500057220459
    5. 'rank' → logprob: -17.2500057220459
    6. '[' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.5000057220459
    8. '0' → logprob: -19.0000057220459
    9. '
' → logprob: -19.1250057220459
    10. ' ' → logprob: -20.1250057220459

Token 453: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.08103189617395401
    2. 'idx' → logprob: -3.2060317993164062
    3. 'threshold' → logprob: -3.4560317993164062
    4. '[' → logprob: -6.331031799316406
    5. '[idx' → logprob: -7.706031799316406
    6. 'th' → logprob: -7.831031799316406
    7. '][' → logprob: -7.831031799316406
    8. 'rank' → logprob: -7.956031799316406
    9. '[K' → logprob: -8.081031799316406
    10. '_votes' → logprob: -8.331031799316406

Token 454: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015221221838146448
    2. '[' → logprob: -6.501522064208984
    3. '0' → logprob: -12.001522064208984
    4. ' ][' → logprob: -12.376522064208984
    5. '   ' → logprob: -12.501522064208984
    6. ']' → logprob: -13.501522064208984
    7. '
' → logprob: -13.751522064208984
    8. '1' → logprob: -14.376522064208984
    9. '"][' → logprob: -14.501522064208984
    10. ''][' → logprob: -14.751522064208984

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.625000953674316
    3. '
' → logprob: -15.875000953674316
    4. '[' → logprob: -16.625
    5. '   ' → logprob: -16.75
    6. '2' → logprob: -16.875
    7. '```' → logprob: -17.5
    8. '۰' → logprob: -17.75
    9. '０' → logprob: -18.75
    10. '	' → logprob: -19.25

Token 456: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005169243086129427
    2. ']
' → logprob: -5.50516939163208
    3. '<|end|>' → logprob: -7.00516939163208
    4. ')' → logprob: -10.005168914794922
    5. ']

' → logprob: -10.630168914794922
    6. '']' → logprob: -10.630168914794922
    7. '       ' → logprob: -10.630168914794922
    8. ' ]' → logprob: -10.755168914794922
    9. '<|end|>' → logprob: -11.505168914794922
    10. '}' → logprob: -12.130168914794922

Token 457: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3801284730434418
    2. '<|end|>' → logprob: -1.7551285028457642
    3. '   ' → logprob: -2.7551283836364746
    4. '       ' → logprob: -3.6301283836364746
    5. ' 
' → logprob: -4.255128383636475
    6. '    
' → logprob: -4.255128383636475
    7. '  
' → logprob: -5.630128383636475
    8. 'tokens' → logprob: -5.630128383636475
    9. ')' → logprob: -5.630128383636475
    10. '\n' → logprob: -6.380128383636475

Token 458: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3467432260513306
    2. '       ' → logprob: -1.7217432260513306
    3. ' for' → logprob: -2.221743106842041
    4. '
' → logprob: -2.346743106842041
    5. ' if' → logprob: -2.721743106842041
    6. 'for' → logprob: -2.846743106842041
    7. 'votes' → logprob: -3.221743106842041
    8. 'def' → logprob: -3.596743106842041
    9. 'if' → logprob: -3.596743106842041
    10. ' votes' → logprob: -4.096743106842041

Token 459: ' For' (ID: 2214)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.3922024965286255
    2. 'for' → logprob: -1.6422024965286255
    3. 'needed' → logprob: -1.7672024965286255
    4. 'votes' → logprob: -3.017202377319336
    5. 'added' → logprob: -3.392202377319336
    6. ' for' → logprob: -3.517202377319336
    7. '#' → logprob: -4.017202377319336
    8. 'required' → logprob: -4.142202377319336
    9. 'extra' → logprob: -4.142202377319336
    10. ' needed' → logprob: -4.142202377319336

Token 460: ' each' (ID: 2454)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1813548058271408
    2. 'c' → logprob: -2.4313547611236572
    3. ' f' → logprob: -3.5563547611236572
    4. 'each' → logprob: -4.556354999542236
    5. 'char' → logprob: -4.681354999542236
    6. ' c' → logprob: -4.806354999542236
    7. 'ch' → logprob: -5.056354999542236
    8. 'p' → logprob: -5.681354999542236
    9. ' each' → logprob: -6.431354999542236
    10. 'i' → logprob: -6.556354999542236

Token 461: ' selected' (ID: 6386)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5536790490150452
    2. ' f' → logprob: -1.5536789894104004
    3. 'c' → logprob: -2.6786789894104004
    4. 'fav' → logprob: -2.6786789894104004
    5. ' c' → logprob: -3.1786789894104004
    6. ' selected' → logprob: -4.6786789894104
    7. 'selected' → logprob: -4.9286789894104
    8. 'char' → logprob: -5.9286789894104
    9. ' fav' → logprob: -5.9286789894104
    10. ' sel' → logprob: -6.0536789894104

Token 462: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.42683616280555725
    2. 'f' → logprob: -1.6768361330032349
    3. '_f' → logprob: -2.5518362522125244
    4. ' f' → logprob: -3.4268362522125244
    5. 'char' → logprob: -3.9268362522125244
    6. ' fav' → logprob: -4.426836013793945
    7. '_' → logprob: -4.676836013793945
    8. ' char' → logprob: -5.551836013793945
    9. '_,' → logprob: -7.301836013793945
    10. ' _' → logprob: -7.301836013793945

Token 463: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.8034610748291016
    2. ' char' → logprob: -0.9284610748291016
    3. '_char' → logprob: -2.3034610748291016
    4. '_' → logprob: -3.6784610748291016
    5. '_chars' → logprob: -4.553461074829102
    6. 'chars' → logprob: -5.553461074829102
    7. 's' → logprob: -5.803461074829102
    8. 'ar' → logprob: -6.178461074829102
    9. ' chars' → logprob: -6.178461074829102
    10. ' f' → logprob: -6.553461074829102

Token 464: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4668664038181305
    2. ',' → logprob: -1.341866374015808
    3. ':
' → logprob: -2.5918664932250977
    4. '<|end|>' → logprob: -4.091866493225098
    5. '<|end|>' → logprob: -4.841866493225098
    6. '       ' → logprob: -5.841866493225098
    7. ',
' → logprob: -6.466866493225098
    8. '   ' → logprob: -6.466866493225098
    9. '
' → logprob: -6.966866493225098
    10. '[' → logprob: -7.216866493225098

Token 465: ' calculate' (ID: 17950)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5573269724845886
    2. ' s' → logprob: -2.5573270320892334
    3. 'idx' → logprob: -3.1823270320892334
    4. ' curr' → logprob: -3.3073270320892334
    5. ' needed' → logprob: -3.4323270320892334
    6. '       ' → logprob: -3.4323270320892334
    7. ' index' → logprob: -3.6823270320892334
    8. ' current' → logprob: -4.307326793670654
    9. ' min' → logprob: -4.557326793670654
    10. ' need' → logprob: -4.682326793670654

Token 466: ' votes' (ID: 24183)
  Prédit: ' needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.9160590171813965
    2. 'needed' → logprob: -0.9160590171813965
    3. 'votes' → logprob: -3.2910590171813965
    4. ' min' → logprob: -3.2910590171813965
    5. 'need' → logprob: -3.4160590171813965
    6. ' minimal' → logprob: -3.4160590171813965
    7. ' votes' → logprob: -3.6660590171813965
    8. 'min' → logprob: -4.7910590171813965
    9. ' need' → logprob: -5.1660590171813965
    10. ' required' → logprob: -5.4160590171813965

Token 467: ' needed' (ID: 6118)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.3012661039829254
    2. 'needed' → logprob: -1.426266074180603
    3. '=' → logprob: -4.676266193389893
    4. '_required' → logprob: -5.801266193389893
    5. ' =' → logprob: -6.051266193389893
    6. ' needed' → logprob: -6.301266193389893
    7. 'required' → logprob: -7.551266193389893
    8. '_to' → logprob: -7.676266193389893
    9. ',' → logprob: -8.176265716552734
    10. 'for' → logprob: -8.301265716552734

Token 468: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8413074016571045
    2. ' to' → logprob: -1.4663074016571045
    3. '=' → logprob: -2.3413074016571045
    4. '   ' → logprob: -2.5913074016571045
    5. '       ' → logprob: -3.5913074016571045
    6. '<|end|>' → logprob: -3.5913074016571045
    7. 'for' → logprob: -3.9663074016571045
    8. ' for' → logprob: -4.591307640075684
    9. 'tokens' → logprob: -4.591307640075684
    10. ' +=' → logprob: -4.716307640075684

Token 469: ' enter' (ID: 5747)
  Prédit: ' surpass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' surpass' → logprob: -0.8589351177215576
    2. ' reach' → logprob: -1.9839351177215576
    3. 'reach' → logprob: -2.3589351177215576
    4. 'increase' → logprob: -2.4839351177215576
    5. ' be' → logprob: -2.8589351177215576
    6. 'be' → logprob: -3.1089351177215576
    7. 'sur' → logprob: -3.2339351177215576
    8. ' increase' → logprob: -3.8589351177215576
    9. 'raise' → logprob: -4.108935356140137
    10. '   ' → logprob: -4.233935356140137

Token 470: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.26661062240600586
    2. 'the' → logprob: -2.391610622406006
    3. 'selected' → logprob: -3.016610622406006
    4. '[top' → logprob: -4.141610622406006
    5. 'range' → logprob: -4.391610622406006
    6. ' the' → logprob: -4.516610622406006
    7. ' top' → logprob: -4.766610622406006
    8. 'threshold' → logprob: -4.891610622406006
    9. 'pos' → logprob: -5.016610622406006
    10. 'their' → logprob: -5.641610622406006

Token 471: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.7278432846069336
    2. 'x' → logprob: -1.7278432846069336
    3. '+' → logprob: -1.9778432846069336
    4. '_' → logprob: -2.1028432846069336
    5. ' K' → logprob: -2.1028432846069336
    6. ' x' → logprob: -2.7278432846069336
    7. ' _' → logprob: -3.7278432846069336
    8. '1' → logprob: -3.7278432846069336
    9. '`' → logprob: -3.9778432846069336
    10. '```' → logprob: -3.9778432846069336

Token 472: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43252134323120117
    2. '       ' → logprob: -1.6825213432312012
    3. '   ' → logprob: -2.307521343231201
    4. ':' → logprob: -3.807521343231201
    5. '  
' → logprob: -4.307521343231201
    6. '    
' → logprob: -4.932521343231201
    7. '\n' → logprob: -5.307521343231201
    8. ':
' → logprob: -5.682521343231201
    9. '        
' → logprob: -6.182521343231201
    10. '   
' → logprob: -6.682521343231201

Token 473: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7467897534370422
    2. '       ' → logprob: -0.7467897534370422
    3. '        
' → logprob: -4.871789932250977
    4. 'votes' → logprob: -5.121789932250977
    5. '  
' → logprob: -5.371789932250977
    6. ' for' → logprob: -5.371789932250977
    7. ' votes' → logprob: -5.496789932250977
    8. '```' → logprob: -5.621789932250977
    9. 'for' → logprob: -5.746789932250977
    10. '<|end|>' → logprob: -6.496789932250977

Token 474: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' (adapté à ' needed') → logprob: -1.4507105350494385
    2. ' needed' → logprob: -1.5757105350494385
    3. '       ' → logprob: -2.0757105350494385
    4. ' for' → logprob: -2.5757105350494385
    5. 'need' → logprob: -2.8257105350494385
    6. ' res' → logprob: -2.8257105350494385
    7. 'result' → logprob: -3.3257105350494385
    8. 'res' → logprob: -3.4507105350494385
    9. 'for' → logprob: -3.5757105350494385
    10. ' votes' → logprob: -3.7007105350494385

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5623596906661987
    2. '=[]' → logprob: -1.5623596906661987
    3. ' =' → logprob: -1.9373596906661987
    4. '_votes' → logprob: -2.8123598098754883
    5. '=[' → logprob: -4.562359809875488
    6. '=[]
' → logprob: -5.937359809875488
    7. 's' → logprob: -7.687359809875488
    8. '_tokens' → logprob: -7.687359809875488
    9. '   ' → logprob: -7.812359809875488
    10. '_' → logprob: -8.062359809875488

Token 476: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1395822912454605
    2. '[' → logprob: -2.639582395553589
    3. '[]
' → logprob: -2.889582395553589
    4. '{}' → logprob: -5.88958215713501
    5. '0' → logprob: -7.88958215713501
    6. '[]

' → logprob: -9.889582633972168
    7. '{}
' → logprob: -10.014582633972168
    8. ' []' → logprob: -11.514582633972168
    9. '[max' → logprob: -11.514582633972168
    10. '{' → logprob: -12.139582633972168

Token 477: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21000799536705017
    2. ' for' → logprob: -1.8350080251693726
    3. '[' → logprob: -4.335008144378662
    4. '<|end|>' → logprob: -4.835008144378662
    5. ' 
' → logprob: -6.335008144378662
    6. '
' → logprob: -6.335008144378662
    7. '       ' → logprob: -7.085008144378662
    8. '   ' → logprob: -7.335008144378662
    9. '  
' → logprob: -7.585008144378662
    10. '[
' → logprob: -7.710008144378662

Token 478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02649826742708683
    2. ' for' → logprob: -3.651498317718506
    3. '       ' → logprob: -8.901497840881348
    4. '   ' → logprob: -10.026497840881348
    5. '```' → logprob: -11.526497840881348
    6. '	for' → logprob: -13.026497840881348
    7. '
' → logprob: -13.026497840881348
    8. 'total' → logprob: -13.901497840881348
    9. '``' → logprob: -14.401497840881348
    10. '        
' → logprob: -15.151497840881348

Token 479: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0033382410183548927
    2. 'name' → logprob: -6.75333833694458
    3. 'c' → logprob: -7.00333833694458
    4. 's' → logprob: -7.50333833694458
    5. 'fav' → logprob: -8.003337860107422
    6. ' f' → logprob: -9.003337860107422
    7. 'selected' → logprob: -9.378337860107422
    8. 'ch' → logprob: -10.003337860107422
    9. 'sel' → logprob: -10.253337860107422
    10. 'char' → logprob: -10.378337860107422

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08758696913719177
    2. 'in' → logprob: -2.7125868797302246
    3. 'name' → logprob: -4.712586879730225
    4. '_name' → logprob: -5.462586879730225
    5. ',' → logprob: -6.712586879730225
    6. '_in' → logprob: -7.587586879730225
    7. '_' → logprob: -7.587586879730225
    8. '_idx' → logprob: -7.837586879730225
    9. 'f' → logprob: -8.212587356567383
    10. '   ' → logprob: -8.587587356567383

Token 481: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.00010807292710524052
    2. ' selected' → logprob: -9.250107765197754
    3. '[selected' → logprob: -11.625107765197754
    4. '   ' → logprob: -13.625107765197754
    5. 'prom' → logprob: -14.625107765197754
    6. '(selected' → logprob: -15.000107765197754
    7. '	selected' → logprob: -15.250107765197754
    8. 'select' → logprob: -15.875107765197754
    9. 'range' → logprob: -16.00010871887207
    10. 'name' → logprob: -16.12510871887207

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6359736919403076
    2. ':
' → logprob: -0.7609736919403076
    3. '):
' → logprob: -7.010973930358887
    4. '):' → logprob: -7.260973930358887
    5. '   ' → logprob: -8.135973930358887
    6. '_name' → logprob: -8.385973930358887
    7. 'name' → logprob: -8.510973930358887
    8. '           ' → logprob: -8.510973930358887
    9. ',' → logprob: -8.635973930358887
    10. '       ' → logprob: -8.760973930358887

Token 483: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47326165437698364
    2. '
' → logprob: -2.598261594772339
    3. '        
' → logprob: -2.723261594772339
    4. '           ' → logprob: -3.223261594772339
    5. '        ' → logprob: -3.598261594772339
    6. ',' → logprob: -3.723261594772339
    7. ' 
' → logprob: -3.848261594772339
    8. '<|end|>' → logprob: -4.098261833190918
    9. ' votes' → logprob: -4.223261833190918
    10. 'v' → logprob: -4.473261833190918

Token 484: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5555276274681091
    2. 'idx' (adapté à ' idx') → logprob: -0.9305276274681091
    3. 'i' → logprob: -4.055527687072754
    4. ' i' → logprob: -5.430527687072754
    5. '           ' → logprob: -5.930527687072754
    6. '   ' → logprob: -7.055527687072754
    7. 'index' → logprob: -7.055527687072754
    8. 'c' → logprob: -7.430527687072754
    9. 'cur' → logprob: -7.555527687072754
    10. ' index' → logprob: -7.680527687072754

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3936179578304291
    2. ' =' → logprob: -1.3936179876327515
    3. '=name' → logprob: -2.643617868423462
    4. '_=' → logprob: -5.768618106842041
    5. 'f' → logprob: -6.768618106842041
    6. '=f' → logprob: -6.893618106842041
    7. '_' → logprob: -8.643617630004883
    8. '_idx' → logprob: -8.893617630004883
    9. '_f' → logprob: -9.143617630004883
    10. 'name' → logprob: -9.268617630004883

Token 486: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.001175820711068809
    2. ' name' → logprob: -6.751175880432129
    3. '   ' → logprob: -12.126175880432129
    4. '	name' → logprob: -16.751174926757812
    5. 'rank' → logprob: -17.126174926757812
    6. '           ' → logprob: -17.376174926757812
    7. ' ' → logprob: -17.626174926757812
    8. '[name' → logprob: -17.751174926757812
    9. '    ' → logprob: -17.876174926757812
    10. '  ' → logprob: -18.501174926757812

Token 487: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. 'To' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. ' _' → logprob: -17.875
    5. '_name' → logprob: -17.875
    6. '=_' → logprob: -17.875
    7. 'to' → logprob: -18.0
    8. '_' → logprob: -18.625
    9. '_t' → logprob: -18.75
    10. '_chars' → logprob: -19.25

Token 488: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5759451985359192
    2. 'index' → logprob: -0.8259451985359192
    3. 'name' → logprob: -13.200944900512695
    4. 'ind' → logprob: -13.450944900512695
    5. 'Index' → logprob: -14.200944900512695
    6. ' index' → logprob: -14.325944900512695
    7. 'nd' → logprob: -14.575944900512695
    8. 'indx' → logprob: -16.450944900512695
    9. 'import' → logprob: -16.575944900512695
    10. 'int' → logprob: -16.575944900512695

Token 489: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.003005392849445343
    2. 'f' → logprob: -5.878005504608154
    3. '(f' → logprob: -8.753005027770996
    4. '[' → logprob: -11.003005027770996
    5. '_f' → logprob: -11.253005027770996
    6. 's' → logprob: -12.628005027770996
    7. '[
' → logprob: -12.878005027770996
    8. '[s' → logprob: -13.628005027770996
    9. '	f' → logprob: -13.878005027770996
    10. '
' → logprob: -14.003005027770996

Token 490: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10065185278654099
    2. ']' → logprob: -2.350651741027832
    3. ']
' → logprob: -8.350651741027832
    4. ')
' → logprob: -9.475651741027832
    5. ']

' → logprob: -9.975651741027832
    6. ')' → logprob: -11.225651741027832
    7. '][' → logprob: -11.350651741027832
    8. ' ]
' → logprob: -11.475651741027832
    9. '];' → logprob: -11.600651741027832
    10. '])
' → logprob: -12.100651741027832

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018802957609295845
    2. '
' → logprob: -5.893803119659424
    3. '       ' → logprob: -6.018803119659424
    4. 'v' → logprob: -6.143803119659424
    5. 'tokens' → logprob: -6.518803119659424
    6. 'votes' → logprob: -6.518803119659424
    7. '   ' → logprob: -6.643803119659424
    8. '```' → logprob: -6.893803119659424
    9. ',v' → logprob: -7.018803119659424
    10. '	       ' → logprob: -7.143803119659424

Token 492: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.42262333631515503
    2. 'curr' → logprob: -1.5476233959197998
    3. 'current' → logprob: -2.1726233959198
    4. 'cv' → logprob: -4.797623157501221
    5. '           ' → logprob: -6.297623157501221
    6. 'c' → logprob: -6.672623157501221
    7. '   ' → logprob: -7.047623157501221
    8. '       ' → logprob: -7.047623157501221
    9. 'diff' → logprob: -7.172623157501221
    10. 'needed' → logprob: -7.422623157501221

Token 493: '_vote' (ID: 142336)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.31420114636421204
    2. '_v' → logprob: -1.5642011165618896
    3. 'v' → logprob: -3.8142011165618896
    4. '_rank' → logprob: -4.564201354980469
    5. '_vote' → logprob: -4.814201354980469
    6. 'votes' → logprob: -5.314201354980469
    7. ' =' → logprob: -5.439201354980469
    8. '=' → logprob: -5.689201354980469
    9. '_chars' → logprob: -6.689201354980469
    10. '_val' → logprob: -6.939201354980469

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05230873078107834
    2. ' =' → logprob: -3.0523087978363037
    3. 's' → logprob: -5.677308559417725
    4. '=s' → logprob: -8.552309036254883
    5. '   ' → logprob: -11.302309036254883
    6. ']=' → logprob: -11.677309036254883
    7. ']' → logprob: -11.677309036254883
    8. ')' → logprob: -11.802309036254883
    9. '=int' → logprob: -11.927309036254883
    10. '>' → logprob: -12.177309036254883

Token 495: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.008619539439678192
    2. ' chars' → logprob: -4.75861930847168
    3. '   ' → logprob: -13.13361930847168
    4. '       ' → logprob: -13.88361930847168
    5. '           ' → logprob: -14.13361930847168
    6. '(chars' → logprob: -14.13361930847168
    7. 'char' → logprob: -15.75861930847168
    8. '
' → logprob: -16.50861930847168
    9. 'v' → logprob: -16.75861930847168
    10. '_chars' → logprob: -16.88361930847168

Token 496: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005249153473414481
    2. 'rank' → logprob: -8.250524520874023
    3. '[idx' → logprob: -8.750524520874023
    4. '[r' → logprob: -10.500524520874023
    5. '[cur' → logprob: -11.125524520874023
    6. '[
' → logprob: -11.125524520874023
    7. '[[' → logprob: -12.000524520874023
    8. '   ' → logprob: -12.000524520874023
    9. '[next' → logprob: -12.500524520874023
    10. '[index' → logprob: -12.750524520874023

Token 497: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.002145027741789818
    2. 'idx' → logprob: -6.252144813537598
    3. '[' → logprob: -9.502144813537598
    4. ' rank' → logprob: -10.002144813537598
    5. 'i' → logprob: -10.502144813537598
    6. 'f' → logprob: -11.127144813537598
    7. '   ' → logprob: -11.377144813537598
    8. '(rank' → logprob: -11.627144813537598
    9. '
' → logprob: -12.252144813537598
    10. '[idx' → logprob: -12.252144813537598

Token 498: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12879596650600433
    2. 'idx' → logprob: -2.128795862197876
    3. '][' → logprob: -7.128796100616455
    4. '[j' → logprob: -7.628796100616455
    5. '[' → logprob: -9.003795623779297
    6. ']' → logprob: -9.003795623779297
    7. 'j' → logprob: -9.753795623779297
    8. ' idx' → logprob: -9.753795623779297
    9. '_idx' → logprob: -10.378795623779297
    10. '   ' → logprob: -10.628795623779297

Token 499: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008613191312178969
    2. ']][' → logprob: -7.250861167907715
    3. ' ][' → logprob: -9.875861167907715
    4. '[' → logprob: -10.250861167907715
    5. '   ' → logprob: -11.375861167907715
    6. '0' → logprob: -11.500861167907715
    7. '1' → logprob: -11.500861167907715
    8. ']' → logprob: -11.875861167907715
    9. ')][' → logprob: -12.500861167907715
    10. '-' → logprob: -12.625861167907715

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. '
' → logprob: -11.875020027160645
    3. '][' → logprob: -12.125020027160645
    4. ' ' → logprob: -12.750020027160645
    5. '   ' → logprob: -13.250020027160645
    6. '[' → logprob: -14.000020027160645
    7. ']' → logprob: -14.500020027160645
    8. '    
' → logprob: -14.875020027160645
    9. '`' → logprob: -15.125020027160645
    10. '
' → logprob: -15.250020027160645

Token 501: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5938531756401062
    2. ']' → logprob: -0.8438531756401062
    3. '           ' → logprob: -4.718852996826172
    4. '
' → logprob: -5.843852996826172
    5. ')' → logprob: -5.968852996826172
    6. ')
' → logprob: -6.343852996826172
    7. '       ' → logprob: -7.718852996826172
    8. '-' → logprob: -8.218852996826172
    9. ' -' → logprob: -8.218852996826172
    10. ',' → logprob: -8.968852996826172

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14115089178085327
    2. '+' → logprob: -2.766150951385498
    3. ' +' → logprob: -3.516150951385498
    4. '<|end|>' → logprob: -3.891150951385498
    5. '       ' → logprob: -4.891150951385498
    6. ',' → logprob: -6.016150951385498
    7. '<|end|>' → logprob: -6.391150951385498
    8. '            
' → logprob: -6.766150951385498
    9. '            ' → logprob: -6.891150951385498
    10. ' 
' → logprob: -7.266150951385498

Token 503: ' #' (ID: 1069)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.1526236534118652
    2. 'if' → logprob: -1.2776236534118652
    3. 'needed' → logprob: -1.6526236534118652
    4. ' if' → logprob: -2.1526236534118652
    5. ' needed' → logprob: -3.9026236534118652
    6. 'req' → logprob: -4.152623653411865
    7. 'diff' → logprob: -4.402623653411865
    8. ' need' → logprob: -4.777623653411865
    9. 'delta' → logprob: -5.027623653411865
    10. 'required' → logprob: -5.152623653411865

Token 504: ' to' (ID: 316)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.4518168568611145
    2. 'if' → logprob: -1.8268167972564697
    3. 'needed' → logprob: -3.0768167972564697
    4. ' if' → logprob: -3.7018167972564697
    5. 'delta' → logprob: -3.8268167972564697
    6. 'diff' → logprob: -3.8268167972564697
    7. ' need' → logprob: -3.9518167972564697
    8. 'req' → logprob: -4.201817035675049
    9. 'add' → logprob: -4.951817035675049
    10. ' needed' → logprob: -5.076817035675049

Token 505: ' surpass' (ID: 61253)
  Prédit: ' surpass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surpass' → logprob: -0.5668860673904419
    2. ' over' → logprob: -2.3168859481811523
    3. ' move' → logprob: -2.8168859481811523
    4. ' be' → logprob: -2.9418859481811523
    5. ' enter' → logprob: -3.4418859481811523
    6. ' pass' → logprob: -3.5668859481811523
    7. 'over' → logprob: -3.5668859481811523
    8. ' beat' → logprob: -3.8168859481811523
    9. 'be' → logprob: -4.066885948181152
    10. 'sur' → logprob: -4.316885948181152

Token 506: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.5505726337432861
    2. ' threshold' → logprob: -0.9255726337432861
    3. 'chars' → logprob: -4.675572395324707
    4. ' the' → logprob: -4.675572395324707
    5. 'the' → logprob: -5.300572395324707
    6. ' chars' → logprob: -6.050572395324707
    7. 'votes' → logprob: -8.175572395324707
    8. '=' → logprob: -8.300572395324707
    9. '   ' → logprob: -9.175572395324707
    10. ' votes' → logprob: -9.800572395324707

Token 507: '_votes' (ID: 167389)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4562036395072937
    2. ' +' → logprob: -1.0812036991119385
    3. '_votes' → logprob: -3.7062036991119385
    4. '_tokens' → logprob: -7.456203460693359
    5. ',' → logprob: -7.956203460693359
    6. '_' → logprob: -8.33120346069336
    7. '_vote' → logprob: -8.45620346069336
    8. ' ' → logprob: -8.83120346069336
    9. ':' → logprob: -9.08120346069336
    10. ' +=' → logprob: -9.20620346069336

Token 508: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18129783868789673
    2. ' +' → logprob: -1.806297779083252
    3. ',' → logprob: -7.306297779083252
    4. ':' → logprob: -7.806297779083252
    5. ' if' → logprob: -8.80629825592041
    6. 'if' → logprob: -9.93129825592041
    7. ' and' → logprob: -10.18129825592041
    8. ' or' → logprob: -10.18129825592041
    9. '+=' → logprob: -10.18129825592041
    10. ' +=' → logprob: -10.30629825592041

Token 509: ' vote' (ID: 14048)
  Prédit: ' needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.6594600081443787
    2. 'needed' → logprob: -1.6594600677490234
    3. ' if' → logprob: -2.0344600677490234
    4. ' need' → logprob: -3.5344600677490234
    5. ' min' → logprob: -3.7844600677490234
    6. ' required' → logprob: -3.9094600677490234
    7. ' diff' → logprob: -4.034460067749023
    8. 'if' → logprob: -4.159460067749023
    9. 'need' → logprob: -4.159460067749023
    10. ' req' → logprob: -4.284460067749023

Token 510: ' should' (ID: 1757)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32439014315605164
    2. '=' → logprob: -1.824390172958374
    3. '_needed' → logprob: -2.574390172958374
    4. ' =' → logprob: -3.574390172958374
    5. 'needed' → logprob: -5.699389934539795
    6. '+' → logprob: -6.324389934539795
    7. '_required' → logprob: -6.699389934539795
    8. '+=' → logprob: -6.824389934539795
    9. '_count' → logprob: -7.199389934539795
    10. '_need' → logprob: -7.574389934539795

Token 511: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2667871117591858
    2. ' be' → logprob: -2.016787052154541
    3. ' =' → logprob: -2.516787052154541
    4. '>' → logprob: -4.141787052154541
    5. ' >' → logprob: -6.516787052154541
    6. '>=' → logprob: -7.391787052154541
    7. 'be' → logprob: -7.516787052154541
    8. '+' → logprob: -8.3917875289917
    9. 's' → logprob: -8.5167875289917
    10. ' ' → logprob: -8.6417875289917

Token 512: ' >' (ID: 1424)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.03806191310286522
    2. ' threshold' → logprob: -3.2880618572235107
    3. '   ' → logprob: -11.66306209564209
    4. 'th' → logprob: -12.16306209564209
    5. '>' → logprob: -12.53806209564209
    6. 'max' → logprob: -13.53806209564209
    7. '           ' → logprob: -14.91306209564209
    8. '>=' → logprob: -15.41306209564209
    9. ' max' → logprob: -15.53806209564209
    10. '=' → logprob: -15.66306209564209

Token 513: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.20141392946243286
    2. ' threshold' → logprob: -1.701413869857788
    3. 'th' → logprob: -14.951414108276367
    4. ' ' → logprob: -16.326414108276367
    5. '   ' → logprob: -16.326414108276367
    6. '_threshold' → logprob: -17.076414108276367
    7. '```' → logprob: -17.451414108276367
    8. '`' → logprob: -18.576414108276367
    9. '.threshold' → logprob: -18.576414108276367
    10. ' ' → logprob: -18.701414108276367

Token 514: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -9.849109119386412e-06
    2. 'votes' → logprob: -12.500009536743164
    3. 'Votes' → logprob: -13.000009536743164
    4. '   ' → logprob: -14.000009536743164
    5. '```' → logprob: -14.125009536743164
    6. '_vote' → logprob: -14.250009536743164
    7. '_threshold' → logprob: -15.125009536743164
    8. '`' → logprob: -15.750009536743164
    9. '_tokens' → logprob: -15.750009536743164
    10. '_rewards' → logprob: -15.750009536743164

Token 515: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9110272526741028
    2. '<|end|>' → logprob: -1.036027193069458
    3. ' +' → logprob: -2.661027193069458
    4. '<|end|>' → logprob: -3.286027193069458
    5. '           ' → logprob: -3.411027193069458
    6. '
' → logprob: -3.661027193069458
    7. ')' → logprob: -3.911027193069458
    8. ' 
' → logprob: -4.536027431488037
    9. ',' → logprob: -4.536027431488037
    10. ' ' → logprob: -4.911027431488037

Token 516: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5449049472808838
    2. ' +' → logprob: -1.6699049472808838
    3. '           ' → logprob: -2.044904947280884
    4. '       ' → logprob: -3.169904947280884
    5. '<|end|>' → logprob: -3.294904947280884
    6. ')' → logprob: -5.669904708862305
    7. '<|end|>' → logprob: -5.794904708862305
    8. ',' → logprob: -6.044904708862305
    9. ' or' → logprob: -6.544904708862305
    10. '            ' → logprob: -6.544904708862305

Token 517: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7349828481674194
    2. 'needed' → logprob: -1.1099828481674194
    3. ' needed' → logprob: -1.9849828481674194
    4. '       ' → logprob: -4.109982967376709
    5. ' if' → logprob: -4.609982967376709
    6. 'tokens' → logprob: -5.484982967376709
    7. 'if' → logprob: -5.984982967376709
    8. '+' → logprob: -5.984982967376709
    9. '_needed' → logprob: -5.984982967376709
    10. ' +' → logprob: -5.984982967376709

Token 518: ' if' (ID: 538)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.3812801837921143
    2. ' if' → logprob: -1.8812801837921143
    3. 'needed' → logprob: -2.2562801837921143
    4. ' need' → logprob: -2.3812801837921143
    5. 'if' → logprob: -2.3812801837921143
    6. ' needed' → logprob: -2.6312801837921143
    7. ' req' → logprob: -3.2562801837921143
    8. ' required' → logprob: -3.3812801837921143
    9. ' diff' → logprob: -3.5062801837921143
    10. '           ' → logprob: -3.5062801837921143

Token 519: ' equal' (ID: 12629)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.032468393445014954
    2. ' cur' → logprob: -3.782468318939209
    3. 'chars' → logprob: -4.907468318939209
    4. ' chars' → logprob: -7.282468318939209
    5. 'f' → logprob: -7.907468318939209
    6. 'threshold' → logprob: -7.907468318939209
    7. ' f' → logprob: -9.157468795776367
    8. ' threshold' → logprob: -9.407468795776367
    9. 'char' → logprob: -10.532468795776367
    10. 'v' → logprob: -10.532468795776367

Token 520: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1852332204580307
    2. ',' → logprob: -2.8102331161499023
    3. ' and' → logprob: -2.8102331161499023
    4. 'and' → logprob: -3.6852331161499023
    5. ' :' → logprob: -4.435233116149902
    6. ' ' → logprob: -6.060233116149902
    7. '==' → logprob: -6.435233116149902
    8. ' ,' → logprob: -6.685233116149902
    9. '_votes' → logprob: -6.935233116149902
    10. '>' → logprob: -7.560233116149902

Token 521: ' lex' (ID: 37772)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.08640722185373306
    2. 'f' → logprob: -3.58640718460083
    3. ' if' → logprob: -3.83640718460083
    4. ' chars' → logprob: -4.33640718460083
    5. 'chars' → logprob: -4.96140718460083
    6. 'if' → logprob: -5.71140718460083
    7. 'cur' → logprob: -6.58640718460083
    8. ' and' → logprob: -6.71140718460083
    9. ' cur' → logprob: -6.83640718460083
    10. ' threshold' → logprob: -6.96140718460083

Token 522: ' order' (ID: 2569)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23999261856079102
    2. ' order' → logprob: -1.614992618560791
    3. 'order' → logprob: -5.239992618560791
    4. ' name' → logprob: -6.489992618560791
    5. ' <=' → logprob: -6.489992618560791
    6. '_order' → logprob: -6.614992618560791
    7. ' >' → logprob: -6.864992618560791
    8. '<' → logprob: -7.364992618560791
    9. ' )' → logprob: -7.364992618560791
    10. '_name' → logprob: -7.614992618560791

Token 523: ' used' (ID: 2061)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.8819751739501953
    2. ' <' → logprob: -2.1319751739501953
    3. ' >' → logprob: -2.1319751739501953
    4. '>' → logprob: -2.5069751739501953
    5. ' ==' → logprob: -2.5069751739501953
    6. '==' → logprob: -2.5069751739501953
    7. ')' → logprob: -3.0069751739501953
    8. '<|end|>' → logprob: -3.2569751739501953
    9. ' should' → logprob: -3.3819751739501953
    10. '=' → logprob: -3.5069751739501953

Token 524: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8003702163696289
    2. ' if' → logprob: -1.925370216369629
    3. '=' → logprob: -2.175370216369629
    4. ' =' → logprob: -2.550370216369629
    5. ' and' → logprob: -3.300370216369629
    6. '==' → logprob: -3.675370216369629
    7. ' for' → logprob: -3.800370216369629
    8. ' to' → logprob: -4.050370216369629
    9. 'if' → logprob: -4.300370216369629
    10. '<|end|>' → logprob: -4.425370216369629

Token 525: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15213681757450104
    2. 'if' → logprob: -2.15213680267334
    3. '           ' → logprob: -3.90213680267334
    4. ' for' → logprob: -6.52713680267334
    5. ' needed' → logprob: -6.77713680267334
    6. 'for' → logprob: -7.90213680267334
    7. '+' → logprob: -8.77713680267334
    8. 'needed' → logprob: -8.90213680267334
    9. '               ' → logprob: -9.02713680267334
    10. ' f' → logprob: -9.27713680267334

Token 526: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1853702962398529
    2. ' f' → logprob: -1.8103703260421753
    3. 'chars' → logprob: -6.185370445251465
    4. 's' → logprob: -6.685370445251465
    5. ' chars' → logprob: -6.935370445251465
    6. 'name' → logprob: -7.310370445251465
    7. ' s' → logprob: -8.060370445251465
    8. ' name' → logprob: -8.435370445251465
    9. 'threshold' → logprob: -10.685370445251465
    10. 'rank' → logprob: -11.185370445251465

Token 527: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3082616627216339
    2. ' >' → logprob: -1.8082616329193115
    3. '<' → logprob: -2.6832616329193115
    4. '>' → logprob: -4.183261871337891
    5. ' ==' → logprob: -4.558261871337891
    6. '[' → logprob: -6.058261871337891
    7. '==' → logprob: -6.433261871337891
    8. ' ' → logprob: -6.933261871337891
    9. ' <=' → logprob: -7.058261871337891
    10. ' f' → logprob: -8.30826187133789

Token 528: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.004078401252627373
    2. ' threshold' → logprob: -5.504078388214111
    3. 'th' → logprob: -17.504077911376953
    4. '   ' → logprob: -19.879077911376953
    5. ' ' → logprob: -20.629077911376953
    6. '_threshold' → logprob: -20.754077911376953
    7. '.threshold' → logprob: -21.004077911376953
    8. 'thr' → logprob: -22.004077911376953
    9. '```' → logprob: -22.004077911376953
    10. 'Threshold' → logprob: -22.879077911376953

Token 529: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.03344108536839485
    2. '_votes' → logprob: -3.5334410667419434
    3. '_chars' → logprob: -6.283441066741943
    4. '_threshold' → logprob: -7.783441066741943
    5. '_idx' → logprob: -8.408441543579102
    6. '_' → logprob: -8.408441543579102
    7. '_set' → logprob: -8.533441543579102
    8. '   ' → logprob: -9.033441543579102
    9. '_tokens' → logprob: -9.158441543579102
    10. '[' → logprob: -9.658441543579102

Token 530: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04936094954609871
    2. ' and' → logprob: -3.799360990524292
    3. ',' → logprob: -4.674360752105713
    4. ' :' → logprob: -4.799360752105713
    5. ':
' → logprob: -5.424360752105713
    6. 'and' → logprob: -6.549360752105713
    7. '           ' → logprob: -7.549360752105713
    8. ' or' → logprob: -7.799360752105713
    9. '):' → logprob: -7.924360752105713
    10. ' ,' → logprob: -8.799361228942871

Token 531: ' equal' (ID: 12629)
  Prédit: ' needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.5716153979301453
    2. 'needed' → logprob: -1.94661545753479
    3. ' votes' → logprob: -2.57161545753479
    4. '            ' → logprob: -2.82161545753479
    5. '           ' → logprob: -3.57161545753479
    6. ' vote' → logprob: -3.82161545753479
    7. 'votes' → logprob: -3.94661545753479
    8. ' f' → logprob: -4.196615219116211
    9. '               ' → logprob: -4.821615219116211
    10. ' continue' → logprob: -4.821615219116211

Token 532: ' votes' (ID: 24183)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.6229759454727173
    2. '_votes' → logprob: -1.7479759454727173
    3. ':
' → logprob: -1.8729759454727173
    4. ':' → logprob: -1.9979759454727173
    5. 'and' → logprob: -2.2479758262634277
    6. ',' → logprob: -2.7479758262634277
    7. '           ' → logprob: -3.8729758262634277
    8. ' then' → logprob: -4.122975826263428
    9. '+' → logprob: -4.122975826263428
    10. ' or' → logprob: -4.497975826263428

Token 533: ' suffice' (ID: 143052)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8863863945007324
    2. '+' → logprob: -1.7613863945007324
    3. ' and' → logprob: -2.0113863945007324
    4. ',' → logprob: -2.2613863945007324
    5. ':' → logprob: -2.6363863945007324
    6. ' >' → logprob: -3.8863863945007324
    7. ' then' → logprob: -4.386386394500732
    8. '>' → logprob: -4.636386394500732
    9. '<|end|>' → logprob: -4.761386394500732
    10. ' ,' → logprob: -5.136386394500732

Token 534: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07315875589847565
    2. ',' → logprob: -3.6981587409973145
    3. ' else' → logprob: -3.8231587409973145
    4. '       ' → logprob: -4.3231587409973145
    5. '               ' → logprob: -6.3231587409973145
    6. 'else' → logprob: -6.5731587409973145
    7. ',
' → logprob: -6.8231587409973145
    8. ' ,' → logprob: -6.9481587409973145
    9. '
' → logprob: -7.0731587409973145
    10. '            
' → logprob: -7.1981587409973145

Token 535: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9105384349822998
    2. ' else' → logprob: -1.1605384349822998
    3. 'else' → logprob: -2.2855384349823
    4. '            ' → logprob: -3.4105384349823
    5. ' vote' → logprob: -3.6605384349823
    6. '\n' → logprob: -3.9105384349823
    7. 'vote' → logprob: -3.9105384349823
    8. '               ' → logprob: -3.9105384349823
    9. '       ' → logprob: -4.410538673400879
    10. ' 
' → logprob: -4.660538673400879

Token 536: ' need' (ID: 1309)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.7768975496292114
    2. ' needed' → logprob: -0.9018975496292114
    3. ' f' → logprob: -3.151897430419922
    4. 'f' → logprob: -4.276897430419922
    5. ' need' → logprob: -4.276897430419922
    6. '1' → logprob: -4.401897430419922
    7. 'need' → logprob: -4.776897430419922
    8. ' continue' → logprob: -5.026897430419922
    9. '           ' → logprob: -5.151897430419922
    10. 'continue' → logprob: -5.401897430419922

Token 537: ' +' (ID: 659)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5372862815856934
    2. 'to' → logprob: -2.0372862815856934
    3. ' votes' → logprob: -2.6622862815856934
    4. 'votes' → logprob: -2.7872862815856934
    5. ' f' → logprob: -3.5372862815856934
    6. ' cur' → logprob: -4.037286281585693
    7. '>' → logprob: -4.037286281585693
    8. 'cur' → logprob: -4.162286281585693
    9. ' vote' → logprob: -4.787286281585693
    10. ' needed' → logprob: -4.912286281585693

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036013787612318993
    2. ' ' → logprob: -5.628601551055908
    3. '=' → logprob: -15.00360107421875
    4. '```' → logprob: -16.25360107421875
    5. '+' → logprob: -16.31610107421875
    6. 's' → logprob: -16.62860107421875
    7. ' one' → logprob: -16.62860107421875
    8. '0' → logprob: -16.62860107421875
    9. '2' → logprob: -16.75360107421875
    10. ' ' → logprob: -16.87860107421875

Token 539: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28158894181251526
    2. '           ' → logprob: -2.1565890312194824
    3. '\n' → logprob: -3.2815890312194824
    4. '               ' → logprob: -4.156589031219482
    5. ' 
' → logprob: -4.656589031219482
    6. '   ' → logprob: -4.656589031219482
    7. '       ' → logprob: -4.906589031219482
    8. '+' → logprob: -4.906589031219482
    9. '  
' → logprob: -5.281589031219482
    10. ')' → logprob: -5.656589031219482

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4712921977043152
    2. '+' → logprob: -2.34629225730896
    3. ' 
' → logprob: -2.59629225730896
    4. '       ' → logprob: -2.97129225730896
    5. '
' → logprob: -3.34629225730896
    6. '   ' → logprob: -3.97129225730896
    7. ' +' → logprob: -4.096292018890381
    8. ')' → logprob: -4.596292018890381
    9. ' else' → logprob: -4.596292018890381
    10. ' ' → logprob: -4.721292018890381

Token 541: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6791080236434937
    2. '           ' → logprob: -2.054108142852783
    3. ' needed' → logprob: -2.054108142852783
    4. 'if' (adapté à ' if') → logprob: -2.429108142852783
    5. 'needed' → logprob: -2.429108142852783
    6. ' 
' → logprob: -4.429108142852783
    7. 'vote' → logprob: -5.429108142852783
    8. ' ' → logprob: -5.554108142852783
    9. '       ' → logprob: -5.804108142852783
    10. 'tokens' → logprob: -5.804108142852783

Token 542: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.02498580515384674
    2. 'f' → logprob: -4.5249857902526855
    3. 'threshold' → logprob: -4.5249857902526855
    4. ' cur' → logprob: -6.3999857902526855
    5. 'chars' → logprob: -7.0249857902526855
    6. ' threshold' → logprob: -8.649986267089844
    7. ' f' → logprob: -9.024986267089844
    8. '(cur' → logprob: -9.774986267089844
    9. '   ' → logprob: -11.024986267089844
    10. 'char' → logprob: -11.399986267089844

Token 543: '_vote' (ID: 142336)
  Prédit: '_vote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vote' → logprob: -0.0802295058965683
    2. '_votes' → logprob: -2.7052295207977295
    3. '_' → logprob: -5.58022928237915
    4. '_v' → logprob: -6.33022928237915
    5. ' _' → logprob: -6.45522928237915
    6. '[' → logprob: -7.20522928237915
    7. '_f' → logprob: -8.330229759216309
    8. '==' → logprob: -8.455229759216309
    9. '```' → logprob: -8.705229759216309
    10. ')' → logprob: -8.830229759216309

Token 544: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32216331362724304
    2. '<=' → logprob: -1.3221633434295654
    3. ' <' → logprob: -5.322163105010986
    4. '==' → logprob: -6.822163105010986
    5. ' ==' → logprob: -6.947163105010986
    6. '<' → logprob: -7.072163105010986
    7. ' >' → logprob: -7.572163105010986
    8. '>' → logprob: -8.072163581848145
    9. ' >=' → logprob: -8.947163581848145
    10. '>=' → logprob: -9.447163581848145

Token 545: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0005530327325686812
    2. ' threshold' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.250553131103516
    4. '   ' → logprob: -19.625553131103516
    5. 'th' → logprob: -19.750553131103516
    6. '  ' → logprob: -21.125553131103516
    7. '.threshold' → logprob: -21.125553131103516
    8. '           ' → logprob: -21.250553131103516
    9. '_threshold' → logprob: -21.250553131103516
    10. '
' → logprob: -21.625553131103516

Token 546: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -1.981667537620524e-06
    2. '_threshold' → logprob: -13.625001907348633
    3. 'votes' → logprob: -15.500001907348633
    4. 'Votes' → logprob: -15.750001907348633
    5. ' _' → logprob: -16.250001907348633
    6. '_rewards' → logprob: -16.375001907348633
    7. '[_' → logprob: -17.250001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_needed' → logprob: -17.875001907348633
    10. '_vote' → logprob: -17.875001907348633

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02757071889936924
    2. ' or' → logprob: -4.527570724487305
    3. '           ' → logprob: -4.902570724487305
    4. ' :' → logprob: -5.527570724487305
    5. ':
' → logprob: -5.902570724487305
    6. '               ' → logprob: -7.527570724487305
    7. '       ' → logprob: -7.777570724487305
    8. '+' → logprob: -7.777570724487305
    9. '):' → logprob: -8.652570724487305
    10. '            ' → logprob: -9.027570724487305

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5069513320922852
    2. '           ' → logprob: -1.1319513320922852
    3. ':' → logprob: -3.881951332092285
    4. ' needed' → logprob: -4.131951332092285
    5. ':
' → logprob: -4.381951332092285
    6. '            ' → logprob: -5.131951332092285
    7. ' :' → logprob: -5.256951332092285
    8. ' :
' → logprob: -5.881951332092285
    9. 'needed' → logprob: -6.006951332092285
    10. ' or' → logprob: -6.506951332092285

Token 549: ' need' (ID: 1309)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.518994152545929
    2. ' needed' → logprob: -1.1439940929412842
    3. '           ' → logprob: -3.143994092941284
    4. '0' → logprob: -3.268994092941284
    5. '               ' → logprob: -6.143994331359863
    6. '
' → logprob: -7.393994331359863
    7. 'need' (adapté à ' need') → logprob: -7.768994331359863
    8. ' ' → logprob: -7.768994331359863
    9. 'continue' → logprob: -8.143994331359863
    10. ' continue' → logprob: -8.393994331359863

Token 550: '=' (ID: 28)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.27968376874923706
    2. '=' → logprob: -1.6546838283538818
    3. ' =' → logprob: -3.654683828353882
    4. '0' → logprob: -4.154683589935303
    5. 'd' → logprob: -5.404683589935303
    6. '.append' → logprob: -5.404683589935303
    7. ' ' → logprob: -7.154683589935303
    8. 'eded' → logprob: -7.654683589935303
    9. '   ' → logprob: -8.654684066772461
    10. 's' → logprob: -8.904684066772461

Token 551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -10.37506103515625
    3. '               ' → logprob: -10.75006103515625
    4. '                   ' → logprob: -12.37506103515625
    5. '           ' → logprob: -12.87506103515625
    6. '   ' → logprob: -14.37506103515625
    7. '```' → logprob: -15.50006103515625
    8. '                 ' → logprob: -16.12506103515625
    9. '                ' → logprob: -16.25006103515625
    10. '              ' → logprob: -16.62506103515625

Token 552: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1758834272623062
    2. ' else' → logprob: -2.3008835315704346
    3. 'else' → logprob: -3.0508835315704346
    4. '       ' → logprob: -5.0508832931518555
    5. 'elif' → logprob: -5.9258832931518555
    6. '
' → logprob: -6.4258832931518555
    7. '<|end|>' → logprob: -6.6758832931518555
    8. ' elif' → logprob: -7.6758832931518555
    9. '               ' → logprob: -7.9258832931518555
    10. '   ' → logprob: -8.050883293151855

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01618698239326477
    2. 'else' → logprob: -4.5161871910095215
    3. ' else' → logprob: -5.6411871910095215
    4. 'elif' → logprob: -6.7661871910095215
    5. '
' → logprob: -9.141186714172363
    6. '       ' → logprob: -9.266186714172363
    7. ' elif' → logprob: -9.391186714172363
    8. '            
' → logprob: -10.266186714172363
    9. '               ' → logprob: -10.516186714172363
    10. '```' → logprob: -10.766186714172363

Token 554: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.9656814336776733
    2. 'else' → logprob: -1.2156814336776733
    3. '           ' → logprob: -1.4656814336776733
    4. ' else' → logprob: -2.590681552886963
    5. ' elif' → logprob: -4.090681552886963
    6. '       ' → logprob: -9.465681076049805
    7. '
' → logprob: -11.090681076049805
    8. '	elif' → logprob: -11.215681076049805
    9. '            
' → logprob: -11.465681076049805
    10. '   ' → logprob: -11.715681076049805

Token 555: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.47453153133392334
    2. 'threshold' → logprob: -1.2245315313339233
    3. ' threshold' → logprob: -2.724531650543213
    4. ' cur' → logprob: -4.099531650543213
    5. 'True' → logprob: -7.724531650543213
    6. 'f' → logprob: -7.974531650543213
    7. ' ' → logprob: -8.724531173706055
    8. ' True' → logprob: -8.849531173706055
    9. ' f' → logprob: -8.974531173706055
    10. 'th' → logprob: -9.412031173706055

Token 556: '_vote' (ID: 142336)
  Prédit: '_vote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vote' → logprob: -9.078839502763003e-05
    2. '_' → logprob: -10.500090599060059
    3. 'ote' → logprob: -10.625090599060059
    4. '_votes' → logprob: -11.000090599060059
    5. 'vote' → logprob: -12.000090599060059
    6. '_v' → logprob: -12.125090599060059
    7. '_need' → logprob: -13.000090599060059
    8. '_note' → logprob: -13.125090599060059
    9. '==' → logprob: -13.375090599060059
    10. '```' → logprob: -14.000090599060059

Token 557: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16987235844135284
    2. ' <' → logprob: -2.794872283935547
    3. ' ==' → logprob: -3.419872283935547
    4. '<=' → logprob: -3.419872283935547
    5. ' >' → logprob: -3.794872283935547
    6. '==' → logprob: -5.544872283935547
    7. '>' → logprob: -6.669872283935547
    8. '<' → logprob: -6.794872283935547
    9. ' >=' → logprob: -7.544872283935547
    10. ' ' → logprob: -9.294872283935547

Token 558: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.006715370807796717
    2. ' threshold' → logprob: -5.006715297698975
    3. '_threshold' → logprob: -17.006715774536133
    4. '   ' → logprob: -18.256715774536133
    5. '0' → logprob: -18.381715774536133
    6. 'th' → logprob: -18.506715774536133
    7. '.threshold' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.881715774536133
    9. '
' → logprob: -19.006715774536133
    10. 'Threshold' → logprob: -20.131715774536133

Token 559: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.00013691288768313825
    2. '_name' → logprob: -9.125137329101562
    3. '_rewards' → logprob: -12.500137329101562
    4. '_threshold' → logprob: -12.625137329101562
    5. '_vote' → logprob: -12.750137329101562
    6. ' _' → logprob: -13.000137329101562
    7. '_' → logprob: -13.250137329101562
    8. '```' → logprob: -13.250137329101562
    9. '   ' → logprob: -13.625137329101562
    10. 'Votes' → logprob: -13.625137329101562

Token 560: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20130252838134766
    2. ':' → logprob: -1.8263025283813477
    3. '+' → logprob: -4.326302528381348
    4. '               ' → logprob: -5.076302528381348
    5. '           ' → logprob: -7.076302528381348
    6. ' +' → logprob: -7.201302528381348
    7. '       ' → logprob: -9.826302528381348
    8. ' and' → logprob: -10.076302528381348
    9. ':
' → logprob: -10.201302528381348
    10. '   ' → logprob: -10.451302528381348

Token 561: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07495380192995071
    2. ' need' → logprob: -2.82495379447937
    3. 'need' → logprob: -4.824954032897949
    4. '0' → logprob: -7.449954032897949
    5. '           ' → logprob: -7.449954032897949
    6. '+' → logprob: -7.574954032897949
    7. '1' → logprob: -7.699954032897949
    8. '```' → logprob: -7.824954032897949
    9. '                ' → logprob: -8.19995403289795
    10. ' =' → logprob: -8.32495403289795

Token 562: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27861908078193665
    2. ' need' → logprob: -1.9036190509796143
    3. 'if' (adapté à ' if') → logprob: -3.0286190509796143
    4. 'need' → logprob: -3.1536190509796143
    5. '               ' → logprob: -6.278619289398193
    6. '                   ' → logprob: -8.153618812561035
    7. '           ' → logprob: -8.403618812561035
    8. '```' → logprob: -8.528618812561035
    9. '   ' → logprob: -9.278618812561035
    10. '0' → logprob: -9.653618812561035

Token 563: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0040785204619169235
    2. ' f' → logprob: -5.504078388214111
    3. '           ' → logprob: -18.504077911376953
    4. '   ' → logprob: -18.879077911376953
    5. '	f' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.504077911376953
    7. '(f' → logprob: -19.754077911376953
    8. '    ' → logprob: -20.129077911376953
    9. '_f' → logprob: -20.504077911376953
    10. '     ' → logprob: -20.629077911376953

Token 564: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.038118377327919006
    2. '<' → logprob: -3.288118362426758
    3. ' <=' → logprob: -9.788118362426758
    4. '[' → logprob: -12.288118362426758
    5. ' ' → logprob: -12.288118362426758
    6. ' <",' → logprob: -12.913118362426758
    7. '<=' → logprob: -13.038118362426758
    8. '<|end|>' → logprob: -13.288118362426758
    9. ' <
' → logprob: -14.038118362426758
    10. ' >' → logprob: -14.538118362426758

Token 565: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.023245595395565033
    2. ' threshold' → logprob: -3.7732455730438232
    3. 'th' → logprob: -16.273244857788086
    4. '_threshold' → logprob: -17.898244857788086
    5. '.threshold' → logprob: -19.398244857788086
    6. '   ' → logprob: -19.523244857788086
    7. ' ' → logprob: -20.148244857788086
    8. '"' → logprob: -20.898244857788086
    9. 'thr' → logprob: -21.398244857788086
    10. 'reshold' → logprob: -21.648244857788086

Token 566: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -2.935296834039036e-06
    2. '_votes' → logprob: -12.87500286102295
    3. '_threshold' → logprob: -16.250003814697266
    4. 'name' → logprob: -16.375003814697266
    5. 'threshold' → logprob: -17.375003814697266
    6. 'Name' → logprob: -17.625003814697266
    7. 'votes' → logprob: -17.625003814697266
    8. '```' → logprob: -18.125003814697266
    9. '_NAME' → logprob: -18.375003814697266
    10. '`' → logprob: -18.375003814697266

Token 567: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01169440895318985
    2. ':' → logprob: -4.511694431304932
    3. '                   ' → logprob: -8.386693954467773
    4. '               ' → logprob: -8.511693954467773
    5. '):
' → logprob: -9.261693954467773
    6. '           ' → logprob: -10.261693954467773
    7. ':
' → logprob: -10.511693954467773
    8. ' :
' → logprob: -10.886693954467773
    9. '                       ' → logprob: -12.136693954467773
    10. '==' → logprob: -12.136693954467773

Token 568: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026786940172314644
    2. ':
' → logprob: -4.276786804199219
    3. '0' → logprob: -5.526786804199219
    4. '               ' → logprob: -6.026786804199219
    5. '   ' → logprob: -6.401786804199219
    6. ':' → logprob: -6.901786804199219
    7. '
' → logprob: -7.401786804199219
    8. ' need' → logprob: -7.651786804199219
    9. '                       ' → logprob: -8.151786804199219
    10. 'need' → logprob: -8.276786804199219

Token 569: ' need' (ID: 1309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09641126543283463
    2. 'need' (adapté à ' need') → logprob: -2.4714112281799316
    3. ' need' → logprob: -5.221411228179932
    4. ' ' → logprob: -6.221411228179932
    5. '   ' → logprob: -10.97141170501709
    6. '                   ' → logprob: -11.09641170501709
    7. '               ' → logprob: -11.97141170501709
    8. '_need' → logprob: -12.59641170501709
    9. '
' → logprob: -12.97141170501709
    10. '```' → logprob: -13.09641170501709

Token 570: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.024604277219623e-05
    2. ' =' → logprob: -10.125040054321289
    3. '0' → logprob: -16.37504005432129
    4. '==' → logprob: -19.50004005432129
    5. '=int' → logprob: -19.62504005432129
    6. '＝' → logprob: -20.37504005432129
    7. '=None' → logprob: -20.50004005432129
    8. '                   ' → logprob: -21.00004005432129
    9. '   ' → logprob: -21.12504005432129
    10. '               ' → logprob: -21.37504005432129

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '   ' → logprob: -18.125
    5. '۰' → logprob: -19.875
    6. '```' → logprob: -19.875
    7. '	' → logprob: -20.75
    8. 's' → logprob: -21.1875
    9. '=' → logprob: -21.5
    10. '-' → logprob: -21.5625

Token 572: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0920754224061966
    2. 'else' → logprob: -2.5920753479003906
    3. ' else' → logprob: -4.342075347900391
    4. '           ' → logprob: -9.59207534790039
    5. '                   ' → logprob: -11.96707534790039
    6. '              ' → logprob: -12.21707534790039
    7. '                ' → logprob: -12.96707534790039
    8. '       ' → logprob: -13.59207534790039
    9. 'elif' → logprob: -13.71707534790039
    10. '             ' → logprob: -13.96707534790039

Token 573: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0411243662238121
    2. 'else' → logprob: -3.2911243438720703
    3. ' else' → logprob: -5.79112434387207
    4. '           ' → logprob: -11.16612434387207
    5. '                   ' → logprob: -12.54112434387207
    6. 'elif' → logprob: -13.29112434387207
    7. '              ' → logprob: -13.66612434387207
    8. '                ' → logprob: -13.91612434387207
    9. '   ' → logprob: -14.54112434387207
    10. '			' → logprob: -14.66612434387207

Token 574: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09326936304569244
    2. ' else' → logprob: -2.8432693481445312
    3. '               ' → logprob: -3.5932693481445312
    4. '           ' → logprob: -5.718269348144531
    5. '	else' → logprob: -11.718269348144531
    6. '                   ' → logprob: -12.343269348144531
    7. 'elif' → logprob: -12.968269348144531
    8. '	           ' → logprob: -13.218269348144531
    9. '              ' → logprob: -13.593269348144531
    10. '			' → logprob: -13.718269348144531

Token 575: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12742169201374054
    2. ':
' → logprob: -2.8774216175079346
    3. ':' → logprob: -3.2524216175079346
    4. '               ' → logprob: -4.627421855926514
    5. '           ' → logprob: -4.877421855926514
    6. '   ' → logprob: -5.627421855926514
    7. '+' → logprob: -6.502421855926514
    8. '                  ' → logprob: -7.127421855926514
    9. '                ' → logprob: -8.502421379089355
    10. '                       ' → logprob: -8.752421379089355

Token 576: '                   ' (ID: 699)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.7099066376686096
    2. '                   ' → logprob: -0.9599066376686096
    3. 'need' → logprob: -2.834906578063965
    4. '   ' → logprob: -2.959906578063965
    5. '               ' → logprob: -4.834906578063965
    6. '           ' → logprob: -6.334906578063965
    7. '    ' → logprob: -6.959906578063965
    8. ' ' → logprob: -6.959906578063965
    9. '                    ' → logprob: -7.084906578063965
    10. '                ' → logprob: -7.584906578063965

Token 577: ' need' (ID: 1309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6644526720046997
    2. ' need' → logprob: -1.1644526720046997
    3. 'need' (adapté à ' need') → logprob: -1.7894526720046997
    4. ' ' → logprob: -5.16445255279541
    5. '                   ' → logprob: -8.41445255279541
    6. '   ' → logprob: -8.78945255279541
    7. '               ' → logprob: -9.53945255279541
    8. '                ' → logprob: -10.78945255279541
    9. '                    ' → logprob: -10.91445255279541
    10. '    ' → logprob: -11.41445255279541

Token 578: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00024192029377445579
    2. ' =' → logprob: -8.375242233276367
    3. '=L' → logprob: -12.500242233276367
    4. '=int' → logprob: -12.625242233276367
    5. '=v' → logprob: -13.500242233276367
    6. '=max' → logprob: -14.250242233276367
    7. '=k' → logprob: -14.750242233276367
    8. '=f' → logprob: -15.000242233276367
    9. '=n' → logprob: -15.375242233276367
    10. '=(' → logprob: -15.500242233276367

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006581080378964543
    2. 'threshold' → logprob: -7.37565803527832
    3. ' ' → logprob: -10.75065803527832
    4. ' threshold' → logprob: -12.37565803527832
    5. '   ' → logprob: -12.75065803527832
    6. '(' → logprob: -14.25065803527832
    7. '(th' → logprob: -14.56315803527832
    8. '+' → logprob: -14.81315803527832
    9. 'abs' → logprob: -15.50065803527832
    10. '```' → logprob: -15.75065803527832

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16799859702587128
    2. '+' → logprob: -2.5429985523223877
    3. ' else' → logprob: -3.1679985523223877
    4. '<|end|>' → logprob: -4.292998790740967
    5. 'else' → logprob: -4.542998790740967
    6. ' +' → logprob: -5.917998790740967
    7. '               ' → logprob: -5.917998790740967
    8. '       ' → logprob: -6.292998790740967
    9. ')' → logprob: -7.792998790740967
    10. '```' → logprob: -7.917998790740967

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013268345966935158
    2. ' else' → logprob: -4.63826847076416
    3. 'else' → logprob: -6.26326847076416
    4. '               ' → logprob: -7.76326847076416
    5. '<|end|>' → logprob: -8.01326847076416
    6. '       ' → logprob: -8.26326847076416
    7. '
' → logprob: -8.76326847076416
    8. '            
' → logprob: -9.26326847076416
    9. '+' → logprob: -9.88826847076416
    10. '            ' → logprob: -10.26326847076416

Token 582: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20183175802230835
    2. 'else' (adapté à ' else') → logprob: -1.9518318176269531
    3. '           ' → logprob: -3.201831817626953
    4. '       ' → logprob: -10.826831817626953
    5. '	else' → logprob: -11.326831817626953
    6. ' elif' → logprob: -11.326831817626953
    7. 'elif' → logprob: -11.326831817626953
    8. '               ' → logprob: -12.451831817626953
    9. '   ' → logprob: -13.076831817626953
    10. '
' → logprob: -14.201831817626953

Token 583: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07371734082698822
    2. ':
' → logprob: -3.1987173557281494
    3. ':' → logprob: -3.5737173557281494
    4. '           ' → logprob: -6.44871711730957
    5. '                   ' → logprob: -8.32371711730957
    6. '+' → logprob: -9.32371711730957
    7. '       ' → logprob: -9.94871711730957
    8. '              ' → logprob: -10.69871711730957
    9. '                       ' → logprob: -10.82371711730957
    10. '   ' → logprob: -10.82371711730957

Token 584: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.885342538356781
    2. ' need' → logprob: -1.6353425979614258
    3. 'need' → logprob: -1.7603425979614258
    4. '               ' → logprob: -2.010342597961426
    5. ' needed' → logprob: -3.635342597961426
    6. 'threshold' → logprob: -3.885342597961426
    7. 'needed' → logprob: -4.260342597961426
    8. '                   ' → logprob: -4.385342597961426
    9. ' threshold' → logprob: -5.010342597961426
    10. '```' → logprob: -6.260342597961426

Token 585: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' (adapté à ' need') → logprob: -0.08985917270183563
    2. ' need' → logprob: -2.7148592472076416
    3. 'threshold' → logprob: -4.3398590087890625
    4. 'needed' → logprob: -5.5898590087890625
    5. ' threshold' → logprob: -5.9648590087890625
    6. ' needed' → logprob: -8.214859008789062
    7. '   ' → logprob: -9.589859008789062
    8. '           ' → logprob: -11.714859008789062
    9. '```' → logprob: -12.339859008789062
    10. ' (' → logprob: -12.589859008789062

Token 586: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03368927165865898
    2. ' =' → logprob: -3.408689260482788
    3. '=(' → logprob: -11.158689498901367
    4. '=max' → logprob: -11.658689498901367
    5. '=int' → logprob: -12.283689498901367
    6. '=L' → logprob: -12.408689498901367
    7. '=
' → logprob: -13.533689498901367
    8. '=

' → logprob: -13.783689498901367
    9. '=_' → logprob: -13.783689498901367
    10. '=cut' → logprob: -14.158689498901367

Token 587: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -8.745069499127567e-05
    2. '(th' → logprob: -10.00008773803711
    3. ' threshold' → logprob: -10.12508773803711
    4. '(' → logprob: -13.87508773803711
    5. 'th' → logprob: -14.50008773803711
    6. '   ' → logprob: -15.00008773803711
    7. ' (' → logprob: -16.25008773803711
    8. '1' → logprob: -18.50008773803711
    9. '           ' → logprob: -19.12508773803711
    10. '(t' → logprob: -19.62508773803711

Token 588: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.0006000961875542998
    2. '+' → logprob: -7.7505998611450195
    3. ' +' → logprob: -10.62559986114502
    4. '_vote' → logprob: -10.87559986114502
    5. 'Votes' → logprob: -10.87559986114502
    6. '_tokens' → logprob: -11.00059986114502
    7. '```' → logprob: -11.25059986114502
    8. '   ' → logprob: -11.50059986114502
    9. 'votes' → logprob: -11.62559986114502
    10. '_' → logprob: -11.62559986114502

Token 589: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06430132687091827
    2. ' +' → logprob: -2.8143012523651123
    3. ' -' → logprob: -6.189301490783691
    4. '-' → logprob: -8.189301490783691
    5. '   ' → logprob: -13.814301490783691
    6. '＋' → logprob: -14.939301490783691
    7. '()+' → logprob: -14.939301490783691
    8. ' ' → logprob: -16.314300537109375
    9. '  ' → logprob: -16.439300537109375
    10. ' plus' → logprob: -16.939300537109375

Token 590: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.000553151941858232
    2. ' cur' → logprob: -7.500553131103516
    3. '[cur' → logprob: -15.875553131103516
    4. '(cur' → logprob: -17.500553131103516
    5. '	cur' → logprob: -17.875553131103516
    6. 'chars' → logprob: -18.125553131103516
    7. '   ' → logprob: -18.625553131103516
    8. '_cur' → logprob: -19.500553131103516
    9. '-cur' → logprob: -19.625553131103516
    10. '
' → logprob: -20.000553131103516

Token 591: '_vote' (ID: 142336)
  Prédit: '_vote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vote' → logprob: -1.5570885807392187e-05
    2. '_v' → logprob: -12.000015258789062
    3. 'vote' → logprob: -12.625015258789062
    4. '_votes' → logprob: -12.875015258789062
    5. 'ote' → logprob: -13.375015258789062
    6. '_' → logprob: -14.250015258789062
    7. 'Vote' → logprob: -14.375015258789062
    8. 'v' → logprob: -15.125015258789062
    9. '_visit' → logprob: -15.875015258789062
    10. '   ' → logprob: -16.500015258789062

Token 592: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478977203369
    2. ' +' → logprob: -0.6931478977203369
    3. '           ' → logprob: -14.943147659301758
    4. '＋' → logprob: -16.318147659301758
    5. ' +
' → logprob: -16.443147659301758
    6. '+
' → logprob: -16.443147659301758
    7. '               ' → logprob: -16.818147659301758
    8. '       ' → logprob: -17.443147659301758
    9. '()+' → logprob: -18.193147659301758
    10. ')+' → logprob: -18.568147659301758

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.625
    5. '
' → logprob: -20.5
    6. '+' → logprob: -21.625
    7. '１' → logprob: -21.75
    8. '۱' → logprob: -22.125
    9. '           ' → logprob: -22.5
    10. '       ' → logprob: -22.8125

Token 594: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026187049224972725
    2. '       ' → logprob: -6.377618789672852
    3. '<|end|>' → logprob: -7.752618789672852
    4. '               ' → logprob: -9.377618789672852
    5. '          ' → logprob: -9.502618789672852
    6. '   ' → logprob: -9.627618789672852
    7. '<|end|>' → logprob: -9.752618789672852
    8. '            ' → logprob: -10.502618789672852
    9. '            
' → logprob: -10.627618789672852
    10. '         ' → logprob: -10.877618789672852

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005624461336992681
    2. '       ' → logprob: -7.87556266784668
    3. '```' → logprob: -10.00056266784668
    4. '<|end|>' → logprob: -10.50056266784668
    5. '               ' → logprob: -10.87556266784668
    6. '   ' → logprob: -11.12556266784668
    7. ',' → logprob: -11.37556266784668
    8. ' for' → logprob: -11.62556266784668
    9. '          ' → logprob: -11.62556266784668
    10. '<|end|>' → logprob: -12.00056266784668

Token 596: ' needed' (ID: 6118)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30172157287597656
    2. '       ' → logprob: -1.4267215728759766
    3. 'needed' (adapté à ' needed') → logprob: -4.426721572875977
    4. ' needed' → logprob: -5.176721572875977
    5. '   ' → logprob: -6.051721572875977
    6. '     ' → logprob: -10.051721572875977
    7. ' if' → logprob: -10.301721572875977
    8. '         ' → logprob: -10.551721572875977
    9. '          ' → logprob: -10.676721572875977
    10. 'if' → logprob: -10.801721572875977

Token 597: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010513884481042624
    2. '.' → logprob: -7.001051425933838
    3. '.extend' → logprob: -10.75105094909668
    4. '=' → logprob: -10.87605094909668
    5. '=[]' → logprob: -10.87605094909668
    6. 'append' → logprob: -11.00105094909668
    7. '+=' → logprob: -11.25105094909668
    8. '.setdefault' → logprob: -11.75105094909668
    9. '[]' → logprob: -11.87605094909668
    10. 's' → logprob: -12.00105094909668

Token 598: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.951771421066951e-05
    2. 'need' → logprob: -10.625029563903809
    3. '((' → logprob: -12.875029563903809
    4. ' (' → logprob: -13.250029563903809
    5. '(ne' → logprob: -14.125029563903809
    6. '(int' → logprob: -16.875028610229492
    7. '(max' → logprob: -18.000028610229492
    8. '(abs' → logprob: -18.875028610229492
    9. '(
' → logprob: -19.000028610229492
    10. '(n' → logprob: -19.625028610229492

Token 599: 'need' (ID: 24630)
  Prédit: 'need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.0005734055885113776
    2. ' need' → logprob: -7.625573635101318
    3. '(' → logprob: -9.50057315826416
    4. ' (' → logprob: -12.62557315826416
    5. 'needed' → logprob: -12.75057315826416
    6. 'max' → logprob: -13.12557315826416
    7. '0' → logprob: -13.50057315826416
    8. ' ' → logprob: -15.12557315826416
    9. ')' → logprob: -15.50057315826416
    10. 'needs' → logprob: -16.125574111938477

Token 600: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.4403141736984253
    2. 'needed' → logprob: -1.6903141736984253
    3. '       ' → logprob: -2.440314292907715
    4. '   ' → logprob: -3.815314292907715
    5. 'sum' → logprob: -3.815314292907715
    6. 'if' → logprob: -4.565314292907715
    7. ' total' → logprob: -4.565314292907715
    8. ' needed' → logprob: -5.065314292907715
    9. 'need' → logprob: -5.440314292907715
    10. ' if' → logprob: -5.815314292907715

Token 603: '_needed' (ID: 148421)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.16437572240829468
    2. '_needed' → logprob: -2.2893757820129395
    3. '=' → logprob: -4.0393757820129395
    4. ' =' → logprob: -4.6643757820129395
    5. '_need' → logprob: -5.0393757820129395
    6. '_vote' → logprob: -5.0393757820129395
    7. ' +=' → logprob: -5.1643757820129395
    8. '_cost' → logprob: -6.5393757820129395
    9. '+=' → logprob: -6.5393757820129395
    10. '_required' → logprob: -7.9143757820129395

Token 604: '=sum' (ID: 174693)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9434995055198669
    2. ' +=' → logprob: -1.1934995651245117
    3. '=sum' → logprob: -1.5684995651245117
    4. '=' → logprob: -2.5684995651245117
    5. ' =' → logprob: -3.8184995651245117
    6. '+' → logprob: -7.818499565124512
    7. 'sum' → logprob: -9.443499565124512
    8. '   ' → logprob: -9.943499565124512
    9. ' +' → logprob: -10.818499565124512
    10. ')' → logprob: -11.443499565124512

Token 605: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. 'needed' → logprob: -15.25
    3. '(required' → logprob: -16.5
    4. ' (' → logprob: -17.25
    5. '([' → logprob: -18.125
    6. '_needed' → logprob: -18.25
    7. '(
' → logprob: -18.75
    8. '((' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. '(total' → logprob: -19.25

Token 606: 'needed' (ID: 57162)
  Prédit: 'needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -5.512236498361744e-07
    2. ' needed' → logprob: -15.125000953674316
    3. 'need' → logprob: -15.250000953674316
    4. '
' → logprob: -17.625
    5. ')' → logprob: -18.0
    6. 'necessary' → logprob: -18.25
    7. 'needs' → logprob: -18.5
    8. '_needed' → logprob: -18.5
    9. '   ' → logprob: -19.25
    10. '(' → logprob: -19.75

Token 607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02094343677163124
    2. '<|end|>' → logprob: -4.145943641662598
    3. '+' → logprob: -6.145943641662598
    4. ')
' → logprob: -6.645943641662598
    5. ' +' → logprob: -7.520943641662598
    6. '       ' → logprob: -8.645943641662598
    7. ')+' → logprob: -8.645943641662598
    8. '<|end|>' → logprob: -8.770943641662598
    9. '
' → logprob: -9.270943641662598
    10. ' )' → logprob: -9.645943641662598

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6376999616622925
    2. ' if' → logprob: -1.5126999616622925
    3. '<|end|>' → logprob: -1.5126999616622925
    4. '   ' → logprob: -4.137700080871582
    5. '	if' → logprob: -5.262700080871582
    6. '
' → logprob: -5.512700080871582
    7. '	' → logprob: -6.512700080871582
    8. 'if' → logprob: -6.512700080871582
    9. '<|end|>' → logprob: -6.637700080871582
    10. ' 
' → logprob: -8.387700080871582

Token 609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07016583532094955
    2. 'return' → logprob: -3.5701658725738525
    3. '   ' → logprob: -3.8201658725738525
    4. ' if' → logprob: -4.070165634155273
    5. ' return' → logprob: -8.320165634155273
    6. '       ' → logprob: -8.320165634155273
    7. '	if' → logprob: -9.195165634155273
    8. '	return' → logprob: -10.820165634155273
    9. '
' → logprob: -14.320165634155273
    10. 'for' → logprob: -15.070165634155273

Token 610: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.25192946195602417
    2. 'total' → logprob: -1.501929521560669
    3. 'L' → logprob: -15.50192928314209
    4. '   ' → logprob: -16.751930236816406
    5. ' ' → logprob: -17.126930236816406
    6. '(total' → logprob: -17.251930236816406
    7. ' L' → logprob: -17.376930236816406
    8. '	total' → logprob: -18.126930236816406
    9. 'Total' → logprob: -19.501930236816406
    10. 'K' → logprob: -19.626930236816406

Token 611: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.0069210343062877655
    2. '<=' → logprob: -5.00692081451416
    3. 'needed' → logprob: -9.63192081451416
    4. ' <=' → logprob: -10.38192081451416
    5. '```' → logprob: -10.88192081451416
    6. '>=' → logprob: -11.25692081451416
    7. '>' → logprob: -11.38192081451416
    8. '<' → logprob: -11.50692081451416
    9. '<x' → logprob: -11.63192081451416
    10. '+' → logprob: -12.13192081451416

Token 612: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5775027275085449
    2. ' <=' → logprob: -0.8275027275085449
    3. ' >' → logprob: -6.952502727508545
    4. '>' → logprob: -7.452502727508545
    5. '==' → logprob: -12.577503204345703
    6. ')<=' → logprob: -12.577503204345703
    7. '>=' → logprob: -12.702503204345703
    8. '<' → logprob: -12.702503204345703
    9. '=' → logprob: -12.827503204345703
    10. ' ' → logprob: -13.577503204345703

Token 613: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0004889304982498288
    2. ' L' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.375489234924316
    4. '	L' → logprob: -16.12548828125
    5. '       ' → logprob: -16.50048828125
    6. 'l' → logprob: -16.75048828125
    7. '
' → logprob: -17.12548828125
    8. '```' → logprob: -17.12548828125
    9. '           ' → logprob: -17.37548828125
    10. '
' → logprob: -17.75048828125

Token 614: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0912071242928505
    2. ':return' → logprob: -2.9662070274353027
    3. ':
' → logprob: -3.3412070274353027
    4. '       ' → logprob: -8.716207504272461
    5. '           ' → logprob: -9.716207504272461
    6. ' return' → logprob: -11.091207504272461
    7. 'return' → logprob: -11.341207504272461
    8. '   ' → logprob: -11.591207504272461
    9. ' or' → logprob: -12.091207504272461
    10. ')return' → logprob: -12.466207504272461

Token 615: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01376840565353632
    2. 'return' → logprob: -5.263768196105957
    3. ' return' → logprob: -5.388768196105957
    4. '           ' → logprob: -5.638768196105957
    5. '
' → logprob: -8.013768196105957
    6. '   ' → logprob: -10.638768196105957
    7. '	return' → logprob: -12.013768196105957
    8. ':return' → logprob: -12.638768196105957
    9. ')return' → logprob: -13.013768196105957
    10. '        
' → logprob: -13.263768196105957

Token 616: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4332251250743866
    2. '       ' → logprob: -1.433225154876709
    3. ' return' → logprob: -2.183225154876709
    4. '           ' → logprob: -8.30822467803955
    5. '   ' → logprob: -9.55822467803955
    6. '	return' → logprob: -10.80822467803955
    7. '
' → logprob: -10.93322467803955
    8. ':return' → logprob: -12.43322467803955
    9. '{return' → logprob: -12.43322467803955
    10. 'False' → logprob: -13.30822467803955

Token 617: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. '(False' → logprob: -17.000123977661133
    4. '   ' → logprob: -19.875123977661133
    5. '=False' → logprob: -22.625123977661133
    6. '.False' → logprob: -23.375123977661133
    7. 'false' → logprob: -23.875123977661133
    8. '_false' → logprob: -24.250123977661133
    9. '```' → logprob: -24.500123977661133
    10. 'True' → logprob: -25.000123977661133

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5940366387367249
    2. '   ' → logprob: -1.71903657913208
    3. '
' → logprob: -1.84403657913208
    4. '<|end|>' → logprob: -2.59403657913208
    5. '    
' → logprob: -4.34403657913208
    6. '	return' → logprob: -5.09403657913208
    7. '  
' → logprob: -5.46903657913208
    8. '        
' → logprob: -5.71903657913208
    9. '	' → logprob: -6.21903657913208
    10. 'return' → logprob: -6.59403657913208

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4970129728317261
    2. '   ' → logprob: -1.497012972831726
    3. '
' → logprob: -2.1220130920410156
    4. '    
' → logprob: -3.3720130920410156
    5. '        
' → logprob: -4.997013092041016
    6. '<|end|>' → logprob: -5.622013092041016
    7. '	return' → logprob: -6.872013092041016
    8. '  
' → logprob: -7.372013092041016
    9. '	
' → logprob: -7.997013092041016
    10. '		
' → logprob: -8.247013092041016

Token 620: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11820667237043381
    2. '    
' → logprob: -3.118206739425659
    3. '
' → logprob: -3.743206739425659
    4. 'return' → logprob: -4.24320650100708
    5. '       ' → logprob: -4.49320650100708
    6. '	return' → logprob: -4.74320650100708
    7. '<|end|>' → logprob: -5.99320650100708
    8. '        
' → logprob: -6.36820650100708
    9. '  
' → logprob: -6.49320650100708
    10. ' return' → logprob: -6.61820650100708

Token 621: ' After' (ID: 6311)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.557695209980011
    2. 'return' → logprob: -2.057695150375366
    3. 'for' → logprob: -2.557695150375366
    4. ' return' → logprob: -3.182695150375366
    5. 'rest' → logprob: -3.432695150375366
    6. ' for' → logprob: -3.432695150375366
    7. 'remaining' → logprob: -3.432695150375366
    8. '#' → logprob: -4.057695388793945
    9. '       ' → logprob: -4.682695388793945
    10. 'non' → logprob: -4.807695388793945

Token 622: ' assigned' (ID: 21482)
  Prédit: 'allocation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocation' → logprob: -0.8102551698684692
    2. 'prom' → logprob: -1.8102551698684692
    3. 'alloc' → logprob: -2.0602550506591797
    4. 'promotion' → logprob: -2.4352550506591797
    5. 'adding' → logprob: -2.8102550506591797
    6. 'app' → logprob: -2.8102550506591797
    7. 'assign' → logprob: -3.5602550506591797
    8. 'votes' → logprob: -5.43525505065918
    9. '#' → logprob: -5.68525505065918
    10. ' allocating' → logprob: -5.68525505065918

Token 623: ' votes' (ID: 24183)
  Prédit: 'votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'votes' → logprob: -0.43055835366249084
    2. ' votes' → logprob: -1.1805583238601685
    3. '_votes' → logprob: -3.805558443069458
    4. ',' → logprob: -5.680558204650879
    5. 'L' → logprob: -5.805558204650879
    6. '
' → logprob: -5.930558204650879
    7. '       ' → logprob: -6.180558204650879
    8. '   ' → logprob: -6.555558204650879
    9. ' L' → logprob: -6.555558204650879
    10. ' the' → logprob: -7.055558204650879

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5622459053993225
    2. '       ' → logprob: -0.9372459053993225
    3. ' to' → logprob: -3.5622458457946777
    4. 'to' → logprob: -5.187245845794678
    5. '   ' → logprob: -5.937245845794678
    6. ' for' → logprob: -8.187246322631836
    7. ',
' → logprob: -8.187246322631836
    8. 'for' → logprob: -8.187246322631836
    9. '
' → logprob: -8.562246322631836
    10. ':
' → logprob: -8.687246322631836

Token 625: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0384225845336914
    2. 'for' → logprob: -1.4134225845336914
    3. 'return' → logprob: -2.1634225845336914
    4. ' #' → logprob: -2.5384225845336914
    5. ' return' → logprob: -2.6634225845336914
    6. ' for' → logprob: -2.6634225845336914
    7. '   ' → logprob: -4.538422584533691
    8. ' new' → logprob: -4.538422584533691
    9. 'new' → logprob: -4.538422584533691
    10. 'remaining' → logprob: -5.038422584533691

Token 626: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7400330305099487
    2. ' if' → logprob: -1.9900330305099487
    3. ' new' → logprob: -2.2400331497192383
    4. '       ' → logprob: -2.2400331497192383
    5. ' all' → logprob: -3.7400331497192383
    6. 'if' → logprob: -4.240033149719238
    7. ' final' → logprob: -4.240033149719238
    8. ' for' → logprob: -4.490033149719238
    9. '#' → logprob: -4.490033149719238
    10. ' positions' → logprob: -4.740033149719238

Token 627: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.967570960521698
    2. 'all' → logprob: -2.2175710201263428
    3. 'True' → logprob: -2.4675710201263428
    4. 'final' → logprob: -2.4675710201263428
    5. 'top' → logprob: -2.8425710201263428
    6. 'prom' → logprob: -3.7175710201263428
    7. 'condition' → logprob: -3.8425710201263428
    8. 'selected' → logprob: -3.8425710201263428
    9. 'rank' → logprob: -3.8425710201263428
    10. 'possible' → logprob: -3.8425710201263428

Token 628: ' promoted' (ID: 49916)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.410580039024353
    2. 'others' → logprob: -2.4105801582336426
    3. 'top' → logprob: -2.4105801582336426
    4. 'remaining' → logprob: -2.5355801582336426
    5. 'final' → logprob: -2.7855801582336426
    6. 'positions' → logprob: -2.9105801582336426
    7. 'new' → logprob: -2.9105801582336426
    8. 'selected' → logprob: -3.0355801582336426
    9. 'other' → logprob: -3.1605801582336426
    10. '#' → logprob: -3.5355801582336426

Token 629: ' fav' (ID: 11726)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.5192938446998596
    2. 'chars' → logprob: -1.1442937850952148
    3. 'set' → logprob: -3.769293785095215
    4. 'fav' → logprob: -3.894293785095215
    5. '_set' → logprob: -4.644293785095215
    6. '_f' → logprob: -5.144293785095215
    7. ' chars' → logprob: -5.394293785095215
    8. 's' → logprob: -5.894293785095215
    9. ' =' → logprob: -6.019293785095215
    10. '   ' → logprob: -6.394293785095215

Token 630: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.6858338713645935
    2. '_chars' → logprob: -0.9358338713645935
    3. ' chars' → logprob: -2.5608339309692383
    4. 's' → logprob: -3.6858339309692383
    5. '_set' → logprob: -7.060833930969238
    6. '_char' → logprob: -8.560833930969238
    7. '   ' → logprob: -8.810833930969238
    8. '_' → logprob: -9.685833930969238
    9. ' ' → logprob: -9.685833930969238
    10. 'char' → logprob: -9.810833930969238

Token 631: ' can' (ID: 665)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5788046717643738
    2. ' can' → logprob: -1.3288047313690186
    3. 'are' → logprob: -3.5788047313690186
    4. ' continue' → logprob: -3.7038047313690186
    5. 'can' → logprob: -3.8288047313690186
    6. ' remain' → logprob: -3.9538047313690186
    7. ' appear' → logprob: -4.2038044929504395
    8. ' have' → logprob: -4.8288044929504395
    9. ' and' → logprob: -4.9538044929504395
    10. 'all' → logprob: -5.2038044929504395

Token 632: ' be' (ID: 413)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.753291666507721
    2. 'be' → logprob: -1.5032916069030762
    3. ' be' → logprob: -2.003291606903076
    4. ' all' → logprob: -2.253291606903076
    5. 'stay' → logprob: -3.753291606903076
    6. 'still' → logprob: -4.253291606903076
    7. ' still' → logprob: -5.003291606903076
    8. 'remain' → logprob: -5.253291606903076
    9. ' stay' → logprob: -5.503291606903076
    10. 'beat' → logprob: -6.378291606903076

Token 633: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7932541370391846
    2. 'placed' → logprob: -1.2932541370391846
    3. 'all' → logprob: -2.0432541370391846
    4. 'at' → logprob: -3.5432541370391846
    5. 'rank' → logprob: -3.5432541370391846
    6. 'gu' → logprob: -4.2932538986206055
    7. 'within' → logprob: -4.4182538986206055
    8. 'ke' → logprob: -4.9182538986206055
    9. 'sorted' → logprob: -5.1682538986206055
    10. ' placed' → logprob: -5.2932538986206055

Token 634: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.003415705170482397
    2. 'the' → logprob: -6.253415584564209
    3. ' top' → logprob: -6.628415584564209
    4. 'positions' → logprob: -9.003416061401367
    5. 'set' → logprob: -11.628416061401367
    6. ' the' → logprob: -12.003416061401367
    7. 'position' → logprob: -12.253416061401367
    8. 'rank' → logprob: -12.753416061401367
    9. 'K' → logprob: -12.878416061401367
    10. 'pos' → logprob: -13.128416061401367

Token 635: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0029580891132354736
    2. ' K' → logprob: -5.877958297729492
    3. 'x' → logprob: -8.877958297729492
    4. '```' → logprob: -12.252958297729492
    5. '
' → logprob: -13.377958297729492
    6. 'k' → logprob: -13.752958297729492
    7. '`' → logprob: -13.877958297729492
    8. ' x' → logprob: -14.002958297729492
    9. ' ' → logprob: -14.127958297729492
    10. ')' → logprob: -14.252958297729492

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07224725931882858
    2. '
' → logprob: -2.822247266769409
    3. '        
' → logprob: -5.19724702835083
    4. '   ' → logprob: -6.07224702835083
    5. ',' → logprob: -7.69724702835083
    6. '  
' → logprob: -7.94724702835083
    7. '    
' → logprob: -8.322247505187988
    8. ',
' → logprob: -8.572247505187988
    9. ':
' → logprob: -8.697247505187988
    10. 'tokens' → logprob: -8.697247505187988

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057346101850271225
    2. '
' → logprob: -3.4323461055755615
    3. '   ' → logprob: -4.557345867156982
    4. '        
' → logprob: -4.807345867156982
    5. '    
' → logprob: -6.557345867156982
    6. '  
' → logprob: -6.682345867156982
    7. '<|end|>' → logprob: -7.682345867156982
    8. '\n' → logprob: -8.18234634399414
    9. ' for' → logprob: -8.43234634399414
    10. ',' → logprob: -8.55734634399414

Token 638: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0580318346619606
    2. '
' → logprob: -3.4330317974090576
    3. '   ' → logprob: -4.433032035827637
    4. '        
' → logprob: -5.808032035827637
    5. ' new' → logprob: -6.558032035827637
    6. ' votes' → logprob: -6.683032035827637
    7. ' rest' → logprob: -6.808032035827637
    8. '    
' → logprob: -6.933032035827637
    9. ' for' → logprob: -7.183032035827637
    10. ' current' → logprob: -7.558032035827637

Token 639: ' build' (ID: 3024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2830938696861267
    2. '       ' → logprob: -2.0330939292907715
    3. ' new' → logprob: -3.1580939292907715
    4. '
' → logprob: -4.1580939292907715
    5. ' rest' → logprob: -4.2830939292907715
    6. 'rest' → logprob: -5.2830939292907715
    7. ' votes' → logprob: -5.4080939292907715
    8. '    
' → logprob: -5.7830939292907715
    9. 'new' → logprob: -5.9080939292907715
    10. 'pos' → logprob: -5.9080939292907715

Token 640: ' final' (ID: 1721)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4403124749660492
    2. ' new' → logprob: -1.4403125047683716
    3. 'votes' → logprob: -2.815312385559082
    4. 'adjust' → logprob: -4.690312385559082
    5. 'counts' → logprob: -4.940312385559082
    6. '   ' → logprob: -5.065312385559082
    7. 'vote' → logprob: -5.065312385559082
    8. 'a' → logprob: -5.440312385559082
    9. 'cur' → logprob: -6.315312385559082
    10. ' votes' → logprob: -6.440312385559082

Token 641: ' votes' (ID: 24183)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.10814008116722107
    2. '_rank' → logprob: -3.233139991760254
    3. '_r' → logprob: -3.858139991760254
    4. '_scores' → logprob: -4.233139991760254
    5. '_chars' → logprob: -4.983139991760254
    6. '_vote' → logprob: -5.108139991760254
    7. 'votes' → logprob: -5.608139991760254
    8. '_score' → logprob: -5.983139991760254
    9. '_positions' → logprob: -6.358139991760254
    10. 'rank' → logprob: -6.358139991760254

Token 642: ' list' (ID: 1562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18528521060943604
    2. ' =' → logprob: -2.0602850914001465
    3. '_votes' → logprob: -4.5602850914001465
    4. '=' → logprob: -5.0602850914001465
    5. 's' → logprob: -5.1852850914001465
    6. ',' → logprob: -5.4352850914001465
    7. '   ' → logprob: -5.9352850914001465
    8. '=[]
' → logprob: -5.9352850914001465
    9. 'votes' → logprob: -6.1852850914001465
    10. '=[]' → logprob: -6.9352850914001465

Token 643: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026970887556672096
    2. 'final' → logprob: -4.651970863342285
    3. 'votes' → logprob: -5.526970863342285
    4. ',' → logprob: -5.651970863342285
    5. '```' → logprob: -6.276970863342285
    6. '
' → logprob: -6.276970863342285
    7. ' final' → logprob: -6.901970863342285
    8. ' votes' → logprob: -7.651970863342285
    9. ' =' → logprob: -7.651970863342285
    10. ':' → logprob: -7.776970863342285

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04427991807460785
    2. 'final' → logprob: -3.6692798137664795
    3. 'votes' → logprob: -5.044280052185059
    4. ',' → logprob: -6.044280052185059
    5. ' final' → logprob: -6.919280052185059
    6. ' votes' → logprob: -6.919280052185059
    7. '```' → logprob: -6.919280052185059
    8. '
' → logprob: -7.044280052185059
    9. ' =' → logprob: -7.169280052185059
    10. 'v' → logprob: -7.544280052185059

Token 645: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -0.46507734060287476
    2. ' final' → logprob: -1.0900774002075195
    3. '       ' → logprob: -3.5900774002075195
    4. 'votes' → logprob: -6.0900774002075195
    5. '   ' → logprob: -6.3400774002075195
    6. ' votes' → logprob: -6.4650774002075195
    7. ' new' → logprob: -6.9650774002075195
    8. 'new' → logprob: -7.8400774002075195
    9. 'updated' → logprob: -8.71507740020752
    10. '```' → logprob: -9.21507740020752

Token 646: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.008468125946819782
    2. '=' → logprob: -5.508468151092529
    3. ' =' → logprob: -5.758468151092529
    4. 's' → logprob: -7.758468151092529
    5. 'votes' → logprob: -8.008467674255371
    6. '_scores' → logprob: -9.008467674255371
    7. '=[' → logprob: -9.008467674255371
    8. '=[]' → logprob: -9.633467674255371
    9. 'Votes' → logprob: -10.258467674255371
    10. '_chars' → logprob: -10.383467674255371

Token 647: '={}
' (ID: 146130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051982954144477844
    2. '=[' → logprob: -3.301982879638672
    3. ' =' → logprob: -4.301982879638672
    4. '=[]' → logprob: -8.301982879638672
    5. ' =[' → logprob: -11.301982879638672
    6. '=[[' → logprob: -11.426982879638672
    7. '=[
' → logprob: -11.801982879638672
    8. '=[]
' → logprob: -11.926982879638672
    9. '   ' → logprob: -11.926982879638672
    10. '=list' → logprob: -12.176982879638672

Token 648: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6289733052253723
    2. '       ' → logprob: -1.1289732456207275
    3. ' for' → logprob: -2.2539732456207275
    4. '
' → logprob: -3.6289732456207275
    5. '   ' → logprob: -5.253973484039307
    6. '<|end|>' → logprob: -5.253973484039307
    7. '	for' → logprob: -8.128973007202148
    8. '```' → logprob: -8.378973007202148
    9. '[' → logprob: -8.753973007202148
    10. '        
' → logprob: -9.003973007202148

Token 649: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00026979928952641785
    2. ' for' → logprob: -9.000269889831543
    3. '   ' → logprob: -9.250269889831543
    4. '       ' → logprob: -10.125269889831543
    5. '
' → logprob: -11.875269889831543
    6. '```' → logprob: -13.125269889831543
    7. '	for' → logprob: -13.750269889831543
    8. '           ' → logprob: -16.000268936157227
    9. '``' → logprob: -18.000268936157227
    10. '    
' → logprob: -18.250268936157227

Token 650: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15622107684612274
    2. 'f' → logprob: -2.2812211513519287
    3. 'i' → logprob: -3.5312211513519287
    4. '_,' → logprob: -5.03122091293335
    5. 'name' → logprob: -5.90622091293335
    6. ' s' → logprob: -6.40622091293335
    7. '(s' → logprob: -7.15622091293335
    8. 'c' → logprob: -7.78122091293335
    9. '_s' → logprob: -8.281221389770508
    10. '(_,' → logprob: -9.031221389770508

Token 651: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.7207988500595093
    2. ' in' → logprob: -0.8457988500595093
    3. ',' → logprob: -2.970798969268799
    4. 'in' → logprob: -3.720798969268799
    5. ',f' → logprob: -4.845798969268799
    6. ',c' → logprob: -8.47079849243164
    7. ' ,' → logprob: -8.47079849243164
    8. ',_' → logprob: -9.09579849243164
    9. ',val' → logprob: -9.09579849243164
    10. ',in' → logprob: -9.72079849243164

Token 652: ',_' (ID: 46431)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1804933100938797
    2. 'in' → logprob: -1.8054933547973633
    3. ',' → logprob: -7.555493354797363
    4. '   ' → logprob: -9.930493354797363
    5. ' ' → logprob: -10.305493354797363
    6. '       ' → logprob: -10.805493354797363
    7. ',in' → logprob: -10.805493354797363
    8. '
' → logprob: -11.305493354797363
    9. 's' → logprob: -11.555493354797363
    10. ')' → logprob: -11.930493354797363

Token 653: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474210649728775
    2. 'in' → logprob: -0.9742106199264526
    3. '   ' → logprob: -9.599210739135742
    4. ',' → logprob: -10.974210739135742
    5. '       ' → logprob: -11.349210739135742
    6. ' ' → logprob: -11.349210739135742
    7. 's' → logprob: -11.724210739135742
    8. '
' → logprob: -12.599210739135742
    9. '  ' → logprob: -13.224210739135742
    10. '    ' → logprob: -13.474210739135742

Token 654: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -4.246537173457909e-06
    2. ' chars' → logprob: -12.375003814697266
    3. '(chars' → logprob: -18.000003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '[' → logprob: -19.750003814697266
    6. 'char' → logprob: -20.875003814697266
    7. '_chars' → logprob: -22.125003814697266
    8. 'Chars' → logprob: -22.375003814697266
    9. ' ' → logprob: -22.875003814697266
    10. '
' → logprob: -23.000003814697266

Token 655: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4540448784828186
    2. '       ' → logprob: -1.4540448188781738
    3. ':' → logprob: -2.079044818878174
    4. '           ' → logprob: -5.579044818878174
    5. '   ' → logprob: -6.579044818878174
    6. '):
' → logprob: -7.454044818878174
    7. '[' → logprob: -8.704045295715332
    8. '):' → logprob: -9.454045295715332
    9. '```' → logprob: -10.079045295715332
    10. ',' → logprob: -10.204045295715332

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24715812504291534
    2. 'final' → logprob: -1.622158169746399
    3. ' final' → logprob: -3.9971580505371094
    4. '       ' → logprob: -6.872158050537109
    5. '
' → logprob: -7.122158050537109
    6. '   ' → logprob: -7.122158050537109
    7. '	final' → logprob: -8.37215805053711
    8. ':
' → logprob: -10.12215805053711
    9. '```' → logprob: -10.24715805053711
    10. ',' → logprob: -10.49715805053711

Token 657: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -0.03818757086992264
    2. ' final' → logprob: -3.2881875038146973
    3. '           ' → logprob: -9.788187980651855
    4. 'if' → logprob: -9.788187980651855
    5. ' if' → logprob: -11.038187980651855
    6. '       ' → logprob: -11.538187980651855
    7. '   ' → logprob: -12.538187980651855
    8. '
' → logprob: -12.913187980651855
    9. '	final' → logprob: -14.288187980651855
    10. '.final' → logprob: -14.538187980651855

Token 658: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -5.824579784530215e-05
    2. 'votes' → logprob: -9.8750581741333
    3. 'Votes' → logprob: -13.2500581741333
    4. '```' → logprob: -13.3750581741333
    5. '
' → logprob: -13.7500581741333
    6. '   ' → logprob: -14.5000581741333
    7. '_vote' → logprob: -14.7500581741333
    8. 'final' → logprob: -14.7500581741333
    9. '=' → logprob: -16.625059127807617
    10. '=_' → logprob: -16.625059127807617

Token 659: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -7.922563963802531e-05
    2. '=' → logprob: -9.625079154968262
    3. '=s' → logprob: -12.375079154968262
    4. '[' → logprob: -12.500079154968262
    5. 's' → logprob: -13.625079154968262
    6. ' =' → logprob: -14.000079154968262
    7. ' [' → logprob: -14.125079154968262
    8. '=[' → logprob: -14.125079154968262
    9. '
' → logprob: -14.750079154968262
    10. '```' → logprob: -15.125079154968262

Token 660: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.07485900819301605
    2. ']' → logprob: -3.3248589038848877
    3. '=v' → logprob: -3.8248589038848877
    4. '=' → logprob: -4.574859142303467
    5. ')=' → logprob: -5.824859142303467
    6. ' =' → logprob: -7.699859142303467
    7. '=s' → logprob: -8.574858665466309
    8. ')' → logprob: -8.824858665466309
    9. ']+=' → logprob: -9.074858665466309
    10. ' ]' → logprob: -10.199858665466309

Token 661: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.981667537620524e-06
    2. ' v' → logprob: -13.250001907348633
    3. 'votes' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '[v' → logprob: -18.000001907348633
    6. '	v' → logprob: -18.375001907348633
    7. 'chars' → logprob: -18.500001907348633
    8. '0' → logprob: -18.750001907348633
    9. '    ' → logprob: -20.250001907348633
    10. 's' → logprob: -20.375001907348633

Token 662: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18940548598766327
    2. '   ' → logprob: -2.6894054412841797
    3. 'for' → logprob: -3.0644054412841797
    4. '       ' → logprob: -3.1894054412841797
    5. '    
' → logprob: -5.31440544128418
    6. 'final' → logprob: -5.81440544128418
    7. '```' → logprob: -5.81440544128418
    8. '        
' → logprob: -6.18940544128418
    9. ' for' → logprob: -6.31440544128418
    10. ')
' → logprob: -7.68940544128418

Token 663: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42826804518699646
    2. '       ' → logprob: -1.5532680749893188
    3. 'for' → logprob: -3.0532679557800293
    4. '   ' → logprob: -3.1782679557800293
    5. '    
' → logprob: -3.6782679557800293
    6. ' for' → logprob: -4.678267955780029
    7. '        
' → logprob: -5.053267955780029
    8. '  
' → logprob: -6.303267955780029
    9. '```' → logprob: -6.553267955780029
    10. '<|end|>' → logprob: -6.553267955780029

Token 664: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00386135489679873
    2. ' for' → logprob: -5.753861427307129
    3. '       ' → logprob: -8.003861427307129
    4. '
' → logprob: -8.503861427307129
    5. '<|end|>' → logprob: -9.503861427307129
    6. '   ' → logprob: -10.128861427307129
    7. '```' → logprob: -11.003861427307129
    8. '	for' → logprob: -11.753861427307129
    9. '    
' → logprob: -13.628861427307129
    10. '        
' → logprob: -13.753861427307129

Token 665: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4070834815502167
    2. 'i' → logprob: -1.157083511352539
    3. ' i' → logprob: -4.657083511352539
    4. ' f' → logprob: -4.907083511352539
    5. 's' → logprob: -5.907083511352539
    6. 'idx' → logprob: -8.282083511352539
    7. ' s' → logprob: -9.532083511352539
    8. ' idx' → logprob: -10.282083511352539
    9. '   ' → logprob: -11.782083511352539
    10. ' ' → logprob: -12.782083511352539

Token 666: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485367000102997
    2. 'in' → logprob: -1.223536729812622
    3. 'selected' → logprob: -10.723536491394043
    4. 'n' → logprob: -10.848536491394043
    5. ' ' → logprob: -11.598536491394043
    6. 's' → logprob: -11.723536491394043
    7. '   ' → logprob: -11.848536491394043
    8. 'i' → logprob: -12.598536491394043
    9. 'f' → logprob: -12.848536491394043
    10. ',' → logprob: -12.973536491394043

Token 667: 'add' (ID: 964)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.05081750452518463
    2. 'n' → logprob: -3.1758174896240234
    3. 'needed' → logprob: -5.550817489624023
    4. 'inc' → logprob: -6.300817489624023
    5. 'delta' → logprob: -7.425817489624023
    6. ' need' → logprob: -7.550817489624023
    7. 'nv' → logprob: -8.550817489624023
    8. 'd' → logprob: -8.800817489624023
    9. 'i' → logprob: -9.425817489624023
    10. 'amount' → logprob: -9.550817489624023

Token 668: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013968157581984997
    2. 'ed' → logprob: -4.763967990875244
    3. '_votes' → logprob: -5.638967990875244
    4. 'd' → logprob: -7.513967990875244
    5. '_amount' → logprob: -8.388968467712402
    6. '_vote' → logprob: -8.513968467712402
    7. 's' → logprob: -8.888968467712402
    8. 'votes' → logprob: -9.013968467712402
    9. 'in' → logprob: -9.013968467712402
    10. '_' → logprob: -9.638968467712402

Token 669: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00015955790877342224
    2. ' zip' → logprob: -8.75015926361084
    3. '(zip' → logprob: -13.75015926361084
    4. 'selected' → logprob: -20.500160217285156
    5. '.zip' → logprob: -21.500160217285156
    6. 'sorted' → logprob: -22.000160217285156
    7. 'z' → logprob: -22.375160217285156
    8. '_zip' → logprob: -22.875160217285156
    9. '   ' → logprob: -23.750160217285156
    10. '
' → logprob: -24.000160217285156

Token 670: '(selected' (ID: 41539)
  Prédit: '(selected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(selected' → logprob: -0.005233882926404476
    2. 'selected' → logprob: -5.2552337646484375
    3. '[selected' → logprob: -17.130233764648438
    4. ' selected' → logprob: -17.255233764648438
    5. '(sorted' → logprob: -18.130233764648438
    6. 'prom' → logprob: -18.380233764648438
    7. '	selected' → logprob: -18.880233764648438
    8. '(prom' → logprob: -19.130233764648438
    9. ':selected' → logprob: -19.380233764648438
    10. '(select' → logprob: -19.630233764648438

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001985852373763919
    2. 'selected' → logprob: -7.001986026763916
    3. '(' → logprob: -7.376986026763916
    4. '(selected' → logprob: -8.251985549926758
    5. ',f' → logprob: -9.626985549926758
    6. 'needed' → logprob: -9.626985549926758
    7. 'f' → logprob: -10.751985549926758
    8. ' ,' → logprob: -11.876985549926758
    9. '[' → logprob: -12.376985549926758
    10. '(f' → logprob: -12.626985549926758

Token 672: 'needed' (ID: 57162)
  Prédit: 'needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -4.787507714354433e-05
    2. ' needed' → logprob: -10.00004768371582
    3. 'need' → logprob: -13.00004768371582
    4. '
' → logprob: -16.37504768371582
    5. '   ' → logprob: -17.37504768371582
    6. 'required' → logprob: -17.50004768371582
    7. '[' → logprob: -18.37504768371582
    8. '_needed' → logprob: -18.37504768371582
    9. 'necessary' → logprob: -18.50004768371582
    10. 'added' → logprob: -18.75004768371582

Token 673: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04964809864759445
    2. '):' → logprob: -3.1746480464935303
    3. ',' → logprob: -5.299648284912109
    4. '):
' → logprob: -7.424648284912109
    5. ')' → logprob: -7.549648284912109
    6. '   ' → logprob: -8.92464828491211
    7. '       ' → logprob: -9.17464828491211
    8. '[' → logprob: -9.79964828491211
    9. '),' → logprob: -10.04964828491211
    10. ' ):
' → logprob: -10.54964828491211

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7896236777305603
    2. 'final' → logprob: -1.414623737335205
    3. ' final' → logprob: -1.789623737335205
    4. '       ' → logprob: -2.539623737335205
    5. ':
' → logprob: -3.539623737335205
    6. '   ' → logprob: -4.164623737335205
    7. '):
' → logprob: -5.164623737335205
    8. ':' → logprob: -5.664623737335205
    9. '	final' → logprob: -7.039623737335205
    10. '
' → logprob: -7.289623737335205

Token 675: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.5814624428749084
    2. 'final' (adapté à ' final') → logprob: -0.8314624428749084
    3. '           ' → logprob: -5.331462383270264
    4. '               ' → logprob: -7.456462383270264
    5. '   ' → logprob: -9.706462860107422
    6. '       ' → logprob: -11.206462860107422
    7. '	final' → logprob: -11.831462860107422
    8. '(final' → logprob: -12.331462860107422
    9. ' ' → logprob: -12.831462860107422
    10. '```' → logprob: -14.081462860107422

Token 676: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -5.512236498361744e-07
    2. 'votes' → logprob: -15.500000953674316
    3. '
' → logprob: -15.875000953674316
    4. '_scores' → logprob: -16.375
    5. '[' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. 'Votes' → logprob: -18.5
    8. '_
' → logprob: -18.75
    9. '

' → logprob: -19.625
    10. 's' → logprob: -19.625

Token 677: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -3.128163257315464e-07
    2. '[s' → logprob: -15.5
    3. '[' → logprob: -17.0
    4. ' [' → logprob: -17.75
    5. 'f' → logprob: -18.375
    6. '(f' → logprob: -18.5
    7. '[[' → logprob: -18.875
    8. '\[' → logprob: -19.5
    9. '
' → logprob: -19.625
    10. '   ' → logprob: -19.75

Token 678: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.012547207996249199
    2. ']' → logprob: -4.387547016143799
    3. ']=' → logprob: -11.262547492980957
    4. ']+' → logprob: -11.262547492980957
    5. '+=' → logprob: -11.387547492980957
    6. ')' → logprob: -15.512547492980957
    7. ' ]' → logprob: -15.637547492980957
    8. '+' → logprob: -17.26254653930664
    9. ' +=' → logprob: -17.38754653930664
    10. '```' → logprob: -17.38754653930664

Token 679: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.842555426876061e-06
    2. ' add' → logprob: -12.250004768371582
    3. '(add' → logprob: -22.5000057220459
    4. '	add' → logprob: -23.1250057220459
    5. 'added' → logprob: -23.2500057220459
    6. '   ' → logprob: -23.2500057220459
    7. '_add' → logprob: -24.6250057220459
    8. '
' → logprob: -24.7500057220459
    9. 'addle' → logprob: -24.7500057220459
    10. 'ad' → logprob: -24.8750057220459

Token 680: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6401360034942627
    2. '<|end|>' → logprob: -1.3901360034942627
    3. '       ' → logprob: -1.5151360034942627
    4. '<|end|>' → logprob: -6.515135765075684
    5. '   ' → logprob: -6.765135765075684
    6. '        
' → logprob: -7.640135765075684
    7. '  
' → logprob: -8.640135765075684
    8. '    
' → logprob: -8.640135765075684
    9. 'return' → logprob: -9.515135765075684
    10. ')' → logprob: -9.640135765075684

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2384537309408188
    2. '
' → logprob: -1.61345374584198
    3. '        
' → logprob: -4.6134538650512695
    4. '    
' → logprob: -6.8634538650512695
    5. '   ' → logprob: -7.2384538650512695
    6. '<|end|>' → logprob: -7.2384538650512695
    7. '  
' → logprob: -8.11345386505127
    8. '```' → logprob: -9.86345386505127
    9. '
' → logprob: -10.23845386505127
    10. ' 
' → logprob: -10.23845386505127

Token 682: ' #' (ID: 1069)
  Prédit: 'others'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'others' → logprob: -1.2444007396697998
    2. 'all' → logprob: -1.3694007396697998
    3. 'final' → logprob: -1.3694007396697998
    4. '   ' → logprob: -2.4944007396698
    5. 'sorted' → logprob: -3.7444007396698
    6. '#' (adapté à ' #') → logprob: -3.8694007396698
    7. 'other' → logprob: -3.9944007396698
    8. 'rest' → logprob: -4.119400978088379
    9. 'rank' → logprob: -5.244400978088379
    10. 'positions' → logprob: -5.244400978088379

Token 683: ' Sort' (ID: 25945)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.03359556570649147
    2. 'others' → logprob: -4.658595561981201
    3. 'all' → logprob: -5.408595561981201
    4. 'sorted' → logprob: -5.533595561981201
    5. '#' → logprob: -5.783595561981201
    6. ' final' → logprob: -6.408595561981201
    7. 'def' → logprob: -6.533595561981201
    8. 'rest' → logprob: -6.533595561981201
    9. 'new' → logprob: -6.533595561981201
    10. 'other' → logprob: -6.783595561981201

Token 684: ' final' (ID: 1721)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.289485901594162
    2. 'final' → logprob: -2.1644859313964844
    3. '_chars' → logprob: -2.6644859313964844
    4. ' chars' → logprob: -3.5394859313964844
    5. ' final' → logprob: -3.7894859313964844
    6. '   ' → logprob: -5.414485931396484
    7. '(chars' → logprob: -5.414485931396484
    8. '_final' → logprob: -6.289485931396484
    9. 'def' → logprob: -6.539485931396484
    10. 'key' → logprob: -7.664485931396484

Token 685: ' by' (ID: 656)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.32877349853515625
    2. '_chars' → logprob: -1.3287734985351562
    3. 'chars' → logprob: -5.328773498535156
    4. 'votes' → logprob: -5.578773498535156
    5. '_list' → logprob: -5.703773498535156
    6. 'list' → logprob: -7.453773498535156
    7. '   ' → logprob: -7.453773498535156
    8. ' =' → logprob: -7.703773498535156
    9. '=' → logprob: -7.828773498535156
    10. '(chars' → logprob: -8.578773498535156

Token 686: ' votes' (ID: 24183)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.007852788083255291
    2. 'key' → logprob: -5.507852554321289
    3. ' lambda' → logprob: -6.007852554321289
    4. '(lambda' → logprob: -6.757852554321289
    5. '(-' → logprob: -9.632852554321289
    6. ' key' → logprob: -10.382852554321289
    7. '=lambda' → logprob: -10.632852554321289
    8. '   ' → logprob: -10.882852554321289
    9. ' (-' → logprob: -12.632852554321289
    10. '[' → logprob: -13.882852554321289

Token 687: ' desc' (ID: 7265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5284184813499451
    2. '=' → logprob: -1.9034185409545898
    3. '   ' → logprob: -2.15341854095459
    4. ',
' → logprob: -3.02841854095459
    5. 'final' → logprob: -3.15341854095459
    6. ' =' → logprob: -4.27841854095459
    7. ',key' → logprob: -4.27841854095459
    8. '=lambda' → logprob: -5.40341854095459
    9. '       ' → logprob: -5.40341854095459
    10. 'sorted' → logprob: -5.77841854095459

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005512165371328592
    2. ',
' → logprob: -5.380512237548828
    3. '   ' → logprob: -8.255512237548828
    4. 'final' → logprob: -8.505512237548828
    5. 'and' → logprob: -9.505512237548828
    6. ' ,' → logprob: -9.755512237548828
    7. 'ending' → logprob: -9.755512237548828
    8. '```' → logprob: -10.255512237548828
    9. ',key' → logprob: -10.380512237548828
    10. '
' → logprob: -10.380512237548828

Token 689: ' name' (ID: 1308)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6467314958572388
    2. 's' → logprob: -1.5217314958572388
    3. 'key' → logprob: -1.7717314958572388
    4. ' lambda' → logprob: -3.396731376647949
    5. ' key' → logprob: -3.896731376647949
    6. ' s' → logprob: -4.271731376647949
    7. '   ' → logprob: -5.521731376647949
    8. 'name' → logprob: -6.021731376647949
    9. '       ' → logprob: -6.146731376647949
    10. 'f' → logprob: -6.521731376647949

Token 690: ' asc' (ID: 23334)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005608661565929651
    2. ')' → logprob: -6.255608558654785
    3. '=' → logprob: -6.380608558654785
    4. ',' → logprob: -7.255608558654785
    5. '=True' → logprob: -8.255608558654785
    6. ' =' → logprob: -8.505608558654785
    7. '),' → logprob: -9.005608558654785
    8. '):
' → logprob: -9.130608558654785
    9. '(lambda' → logprob: -9.630608558654785
    10. 'lambda' → logprob: -9.755608558654785

Token 691: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7381248474121094
    2. '
' → logprob: -1.2381248474121094
    3. 'chars' → logprob: -2.7381248474121094
    4. ',
' → logprob: -2.9881248474121094
    5. ',' → logprob: -3.1131248474121094
    6. 'final' → logprob: -3.2381248474121094
    7. ')
' → logprob: -4.238124847412109
    8. '```' → logprob: -4.863124847412109
    9. '(chars' → logprob: -5.863124847412109
    10. '       ' → logprob: -5.988124847412109

Token 692: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04367964342236519
    2. '
' → logprob: -3.543679714202881
    3. 'final' → logprob: -5.168679714202881
    4. 'chars' → logprob: -5.543679714202881
    5. ')
' → logprob: -6.918679714202881
    6. ',' → logprob: -7.293679714202881
    7. '```' → logprob: -7.293679714202881
    8. '       ' → logprob: -7.418679714202881
    9. ')' → logprob: -8.043679237365723
    10. ',
' → logprob: -8.168679237365723

Token 693: ' final' (ID: 1721)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.6320090889930725
    2. 'final' (adapté à ' final') → logprob: -1.6320090293884277
    3. ' chars' → logprob: -1.6320090293884277
    4. ' final' → logprob: -3.6320090293884277
    5. '       ' → logprob: -3.7570090293884277
    6. '   ' → logprob: -4.132009029388428
    7. '
' → logprob: -4.757009029388428
    8. 'sorted' → logprob: -6.757009029388428
    9. ' sorted' → logprob: -8.257009506225586
    10. '```' → logprob: -8.507009506225586

Token 694: '_sorted' (ID: 104993)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.429975688457489
    2. '=' → logprob: -1.5549757480621338
    3. '_sorted' → logprob: -2.929975748062134
    4. '_chars' → logprob: -3.304975748062134
    5. ' =' → logprob: -3.554975748062134
    6. 'sorted' → logprob: -4.679975509643555
    7. '_list' → logprob: -5.679975509643555
    8. 'votes' → logprob: -6.679975509643555
    9. '   ' → logprob: -7.054975509643555
    10. 'd' → logprob: -7.304975509643555

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031495578587055206
    2. ' =' → logprob: -5.878149509429932
    3. '=lambda' → logprob: -8.25314998626709
    4. '=
' → logprob: -10.37814998626709
    5. '=[]' → logprob: -11.00314998626709
    6. '=list' → logprob: -11.62814998626709
    7. '=[
' → logprob: -12.12814998626709
    8. ']=' → logprob: -12.25314998626709
    9. ')=' → logprob: -12.50314998626709
    10. '=[]
' → logprob: -13.25314998626709

Token 696: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -7.896309739408025e-07
    2. ' sorted' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.0
    4. '(sorted' → logprob: -17.625
    5. '.sorted' → logprob: -23.0
    6. '[' → logprob: -23.125
    7. 'sort' → logprob: -23.375
    8. 'Sorted' → logprob: -23.75
    9. '    
' → logprob: -23.75
    10. '       ' → logprob: -24.0

Token 697: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0012093995464965701
    2. '([(' → logprob: -7.001209259033203
    3. '(((' → logprob: -8.626209259033203
    4. '(' → logprob: -9.876209259033203
    5. '((' → logprob: -10.251209259033203
    6. 'final' → logprob: -10.751209259033203
    7. '(
' → logprob: -11.751209259033203
    8. '([' → logprob: -13.501209259033203
    9. '(char' → logprob: -14.626209259033203
    10. '(chars' → logprob: -15.001209259033203

Token 698: '_votes' (ID: 167389)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.3908519744873047
    2. '(final' → logprob: -1.1408519744873047
    3. '=' → logprob: -6.390851974487305
    4. '[(' → logprob: -7.515851974487305
    5. 'items' → logprob: -7.640851974487305
    6. '[' → logprob: -8.015851974487305
    7. 'chars' → logprob: -8.015851974487305
    8. '([(' → logprob: -8.890851974487305
    9. ' final' → logprob: -9.640851974487305
    10. ')' → logprob: -9.640851974487305

Token 699: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.001937558175995946
    2. 'items' → logprob: -6.251937389373779
    3. '.' → logprob: -12.126937866210938
    4. '().' → logprob: -12.876937866210938
    5. '.values' → logprob: -14.751937866210938
    6. ' items' → logprob: -15.501937866210938
    7. '.Items' → logprob: -15.876937866210938
    8. '.iteritems' → logprob: -17.126937866210938
    9. 'Items' → logprob: -17.376937866210938
    10. ' .' → logprob: -17.376937866210938

Token 700: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.08895790576934814
    2. ',' → logprob: -3.0889577865600586
    3. ',key' → logprob: -3.3389577865600586
    4. 'key' → logprob: -6.088957786560059
    5. '(key' → logprob: -6.338957786560059
    6. '()' → logprob: -10.838957786560059
    7. '   ' → logprob: -10.963957786560059
    8. 'lambda' → logprob: -11.963957786560059
    9. '())' → logprob: -12.338957786560059
    10. ' ,' → logprob: -12.713957786560059

Token 701: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0005593468667939305
    2. ' key' → logprob: -7.500559329986572
    3. 'lambda' → logprob: -12.00055980682373
    4. '   ' → logprob: -15.75055980682373
    5. '(key' → logprob: -17.125558853149414
    6. '	key' → logprob: -18.250558853149414
    7. '       ' → logprob: -19.625558853149414
    8. ' lambda' → logprob: -20.125558853149414
    9. '[key' → logprob: -20.625558853149414
    10. '           ' → logprob: -20.750558853149414

Token 702: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -3.666993507067673e-05
    2. '=' → logprob: -10.250036239624023
    3. 'lambda' → logprob: -13.750036239624023
    4. '=
' → logprob: -16.625036239624023
    5. '(lambda' → logprob: -19.125036239624023
    6. '```' → logprob: -20.875036239624023
    7. '=item' → logprob: -21.125036239624023
    8. '=\' → logprob: -21.500036239624023
    9. ' lambda' → logprob: -21.625036239624023
    10. '=_' → logprob: -21.875036239624023

Token 703: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.019248701632022858
    2. '=lambda' → logprob: -4.0192484855651855
    3. ' lambda' → logprob: -7.3942484855651855
    4. '(lambda' → logprob: -7.6442484855651855
    5. '=' → logprob: -13.394248962402344
    6. 'λ' → logprob: -13.769248962402344
    7. '   ' → logprob: -14.144248962402344
    8. '```' → logprob: -14.269248962402344
    9. '
' → logprob: -15.894248962402344
    10. '_lambda' → logprob: -16.144248962402344

Token 704: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05818323418498039
    2. ':(' → logprob: -3.308183193206787
    3. '=lambda' → logprob: -4.308183193206787
    4. 'lambda' → logprob: -5.058183193206787
    5. '(lambda' → logprob: -9.308183670043945
    6. '=(' → logprob: -11.433183670043945
    7. '=' → logprob: -11.683183670043945
    8. ' :' → logprob: -12.058183670043945
    9. ' lambda' → logprob: -12.808183670043945
    10. ' :(' → logprob: -13.058183670043945

Token 705: '-' (ID: 12)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.12019507586956024
    2. '-x' → logprob: -2.370195150375366
    3. '-' → logprob: -4.120194911956787
    4. ' -' → logprob: -5.745194911956787
    5. '   ' → logprob: -8.870195388793945
    6. ' (-' → logprob: -9.245195388793945
    7. '-p' → logprob: -10.745195388793945
    8. '-(' → logprob: -11.245195388793945
    9. '-q' → logprob: -11.995195388793945
    10. '-s' → logprob: -12.120195388793945

Token 706: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.842555426876061e-06
    2. ' x' → logprob: -12.250004768371582
    3. '(x' → logprob: -19.6250057220459
    4. ')x' → logprob: -21.8750057220459
    5. '	x' → logprob: -22.0000057220459
    6. '[' → logprob: -22.1250057220459
    7. '   ' → logprob: -22.8750057220459
    8. '
' → logprob: -23.1250057220459
    9. '{x' → logprob: -23.2500057220459
    10. '$x' → logprob: -23.8750057220459

Token 707: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.375003814697266
    3. 'x' → logprob: -13.375003814697266
    4. '[
' → logprob: -15.000003814697266
    5. '
' → logprob: -16.250003814697266
    6. '2' → logprob: -16.375003814697266
    7. ' [' → logprob: -16.500003814697266
    8. '0' → logprob: -16.750003814697266
    9. '```' → logprob: -17.125003814697266
    10. ' ' → logprob: -17.375003814697266

Token 708: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47515302896499634
    2. '1' → logprob: -0.9751530289649963
    3. '[' → logprob: -6.850152969360352
    4. ' x' → logprob: -11.475152969360352
    5. '(x' → logprob: -13.100152969360352
    6. '0' → logprob: -13.850152969360352
    7. '(' → logprob: -14.475152969360352
    8. ' ' → logprob: -14.475152969360352
    9. '[x' → logprob: -14.725152969360352
    10. '
' → logprob: -15.350152969360352

Token 709: '],' (ID: 2155)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.10026296228170395
    2. ',' → logprob: -2.3502628803253174
    3. ' ,' → logprob: -9.850262641906738
    4. 'x' → logprob: -13.225262641906738
    5. '[' → logprob: -14.850262641906738
    6. ',
' → logprob: -15.100262641906738
    7. ',f' → logprob: -15.225262641906738
    8. ',s' → logprob: -15.475262641906738
    9. ',len' → logprob: -16.225263595581055
    10. ',n' → logprob: -16.600263595581055

Token 710: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -20.625709533691406
    4. '(x' → logprob: -21.375709533691406
    5. '   ' → logprob: -22.000709533691406
    6. ' ' → logprob: -22.125709533691406
    7. ')x' → logprob: -22.625709533691406
    8. '    ' → logprob: -22.750709533691406
    9. '"x' → logprob: -23.000709533691406
    10. '  ' → logprob: -23.625709533691406

Token 711: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026205103495158255
    2. '0' → logprob: -8.250262260437012
    3. ' ' → logprob: -15.375262260437012
    4. '[
' → logprob: -15.375262260437012
    5. 'x' → logprob: -15.875262260437012
    6. '```' → logprob: -16.875261306762695
    7. '(' → logprob: -17.375261306762695
    8. ' [' → logprob: -17.375261306762695
    9. '
' → logprob: -17.750261306762695
    10. '#' → logprob: -17.750261306762695

Token 712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '[' → logprob: -16.25
    4. 'x' → logprob: -18.125
    5. '
' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. '1' → logprob: -20.25
    8. '```' → logprob: -21.625
    9. '۰' → logprob: -22.0
    10. '	' → logprob: -22.75

Token 713: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -2.4868770196917467e-05
    2. ')' → logprob: -10.875024795532227
    3. '))
' → logprob: -12.750024795532227
    4. '),' → logprob: -13.875024795532227
    5. ' ))' → logprob: -13.875024795532227
    6. ')))' → logprob: -14.375024795532227
    7. '))

' → logprob: -15.250024795532227
    8. '))[' → logprob: -15.875024795532227
    9. '[' → logprob: -17.250024795532227
    10. '));' → logprob: -17.375024795532227

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3020036518573761
    2. '   ' → logprob: -1.9270036220550537
    3. '
' → logprob: -2.8020036220550537
    4. ')' → logprob: -3.3020036220550537
    5. '<|end|>' → logprob: -4.802003860473633
    6. ')
' → logprob: -5.552003860473633
    7. '[' → logprob: -6.427003860473633
    8. '        
' → logprob: -7.052003860473633
    9. '```' → logprob: -7.677003860473633
    10. ' if' → logprob: -7.927003860473633

Token 715: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1171756982803345
    2. '       ' → logprob: -1.4921756982803345
    3. 'for' → logprob: -1.6171756982803345
    4. ' for' → logprob: -2.367175579071045
    5. 'if' → logprob: -2.867175579071045
    6. '
' → logprob: -3.367175579071045
    7. 'return' → logprob: -3.617175579071045
    8. ' if' → logprob: -3.742175579071045
    9. ' return' → logprob: -5.242175579071045
    10. '```' → logprob: -5.742175579071045

Token 716: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7079876065254211
    2. 'count' → logprob: -0.8329876065254211
    3. 'cnt' → logprob: -3.3329875469207764
    4. 'return' → logprob: -4.3329877853393555
    5. 'fav' → logprob: -4.9579877853393555
    6. '   ' → logprob: -5.0829877853393555
    7. 'top' → logprob: -5.0829877853393555
    8. 'prom' → logprob: -6.4579877853393555
    9. 'if' → logprob: -6.8329877853393555
    10. 'selected' → logprob: -7.9579877853393555

Token 717: ' how' (ID: 1495)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.6268739700317383
    2. 'cnt' → logprob: -1.8768739700317383
    3. 'count' → logprob: -2.0018739700317383
    4. 'fav' → logprob: -2.6268739700317383
    5. 'in' → logprob: -2.8768739700317383
    6. 'top' → logprob: -3.6268739700317383
    7. '   ' → logprob: -4.876873970031738
    8. 'pos' → logprob: -5.501873970031738
    9. ' count' → logprob: -6.751873970031738
    10. 'selected' → logprob: -6.751873970031738

Token 718: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.023266678676009178
    2. ' many' → logprob: -3.7732667922973633
    3. '_many' → logprob: -11.148266792297363
    4. 'Many' → logprob: -12.398266792297363
    5. '       ' → logprob: -13.273266792297363
    6. '   ' → logprob: -14.398266792297363
    7. '-many' → logprob: -15.898266792297363
    8. 'len' → logprob: -16.773265838623047
    9. '=' → logprob: -17.148265838623047
    10. '           ' → logprob: -17.273265838623047

Token 719: ' fav' (ID: 11726)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prom' → logprob: -0.9662250876426697
    2. 'in' → logprob: -1.4662251472473145
    3. 'selected' → logprob: -2.3412251472473145
    4. 'count' → logprob: -3.2162251472473145
    5. 'of' → logprob: -3.3412251472473145
    6. ' in' → logprob: -3.4662251472473145
    7. 'fav' → logprob: -3.4662251472473145
    8. 'cnt' → logprob: -3.7162251472473145
    9. '(prom' → logprob: -3.7162251472473145
    10. ' of' → logprob: -3.8412251472473145

Token 720: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7036240100860596
    2. '_chars' → logprob: -1.2036240100860596
    3. '_' → logprob: -2.4536240100860596
    4. '=' → logprob: -3.0786240100860596
    5. '_set' → logprob: -3.3286240100860596
    6. ' =' → logprob: -4.7036237716674805
    7. 'chars' → logprob: -5.2036237716674805
    8. '   ' → logprob: -5.3286237716674805
    9. '_=' → logprob: -5.9536237716674805
    10. '```' → logprob: -6.3286237716674805

Token 721: ' among' (ID: 6200)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2502729594707489
    2. 'in' → logprob: -2.1252729892730713
    3. ' =' → logprob: -2.7502729892730713
    4. '_in' → logprob: -3.7502729892730713
    5. 'fav' → logprob: -5.750272750854492
    6. '_f' → logprob: -5.875272750854492
    7. '```' → logprob: -6.500272750854492
    8. '   ' → logprob: -6.750272750854492
    9. ' in' → logprob: -7.000272750854492
    10. '=f' → logprob: -7.375272750854492

Token 722: ' top' (ID: 2344)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.003185436362400651
    2. ' final' → logprob: -5.753185272216797
    3. 'the' → logprob: -12.503185272216797
    4. 'top' → logprob: -13.003185272216797
    5. '(final' → logprob: -13.503185272216797
    6. '[' → logprob: -16.253185272216797
    7. '
' → logprob: -16.253185272216797
    8. '	final' → logprob: -17.003185272216797
    9. 'first' → logprob: -17.128185272216797
    10. 'range' → logprob: -17.503185272216797

Token 723: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.833878508885391e-05
    2. ' K' → logprob: -10.250038146972656
    3. 'k' → logprob: -13.625038146972656
    4. '```' → logprob: -15.125038146972656
    5. '`' → logprob: -15.250038146972656
    6. '[K' → logprob: -15.500038146972656
    7. '(' → logprob: -15.625038146972656
    8. '   ' → logprob: -15.625038146972656
    9. '[' → logprob: -15.875038146972656
    10. '(K' → logprob: -16.000038146972656

Token 724: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6190844178199768
    2. ')' → logprob: -1.994084358215332
    3. 'count' → logprob: -2.244084358215332
    4. '
' → logprob: -2.869084358215332
    5. '   ' → logprob: -3.119084358215332
    6. ')
' → logprob: -4.494084358215332
    7. 'sum' → logprob: -4.869084358215332
    8. ' =' → logprob: -5.119084358215332
    9. '>' → logprob: -5.369084358215332
    10. '>=' → logprob: -5.369084358215332

Token 725: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.666762113571167
    2. '       ' → logprob: -0.791762113571167
    3. ' count' → logprob: -4.041762351989746
    4. '   ' → logprob: -5.041762351989746
    5. '
' → logprob: -6.041762351989746
    6. 'cnt' → logprob: -6.541762351989746
    7. ')' → logprob: -6.541762351989746
    8. '```' → logprob: -7.416762351989746
    9. '<|end|>' → logprob: -7.541762351989746
    10. '(count' → logprob: -7.541762351989746

Token 726: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.5853484869003296
    2. 'cnt' → logprob: -0.9603484869003296
    3. 'fav' → logprob: -3.710348606109619
    4. ' count' → logprob: -3.710348606109619
    5. ' cnt' → logprob: -4.960348606109619
    6. 'sum' → logprob: -6.460348606109619
    7. '   ' → logprob: -6.960348606109619
    8. 'c' → logprob: -7.085348606109619
    9. ' fav' → logprob: -8.210348129272461
    10. ' c' → logprob: -8.835348129272461

Token 727: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00024251631111837924
    2. ' =' → logprob: -8.375242233276367
    3. '=sum' → logprob: -12.500242233276367
    4. '=count' → logprob: -12.625242233276367
    5. '=int' → logprob: -12.875242233276367
    6. '=
' → logprob: -14.500242233276367
    7. '=[' → logprob: -14.625242233276367
    8. '=list' → logprob: -14.875242233276367
    9. '=f' → logprob: -15.625242233276367
    10. '=len' → logprob: -16.000242233276367

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031840058509260416
    2. 'sum' → logprob: -5.753183841705322
    3. ' sum' → logprob: -12.62818431854248
    4. ' ' → logprob: -13.50318431854248
    5. 'len' → logprob: -13.50318431854248
    6. '```' → logprob: -16.878183364868164
    7. '
' → logprob: -18.128183364868164
    8. '=sum' → logprob: -18.253183364868164
    9. '(sum' → logprob: -18.378183364868164
    10. '   ' → logprob: -18.628183364868164

Token 729: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7008979916572571
    2. ' for' → logprob: -1.7008979320526123
    3. '   ' → logprob: -1.8258979320526123
    4. '
' → logprob: -1.9508979320526123
    5. '	for' → logprob: -4.325898170471191
    6. '       ' → logprob: -6.325898170471191
    7. '<|end|>' → logprob: -6.450898170471191
    8. '    
' → logprob: -7.825898170471191
    9. ' 
' → logprob: -8.575898170471191
    10. '```' → logprob: -8.825898170471191

Token 730: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3624253273010254
    2. 'for' → logprob: -1.3624253273010254
    3. '   ' → logprob: -4.487425327301025
    4. ' 
' → logprob: -4.487425327301025
    5. '
' → logprob: -4.987425327301025
    6. '<|end|>' → logprob: -5.112425327301025
    7. '```' → logprob: -5.862425327301025
    8. '	for' → logprob: -6.237425327301025
    9. '\n' → logprob: -6.362425327301025
    10. '    
' → logprob: -6.862425327301025

Token 731: ' top' (ID: 2344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001786563778296113
    2. ' for' → logprob: -6.501786708831787
    3. '
' → logprob: -8.251786231994629
    4. '   ' → logprob: -11.251786231994629
    5. '	for' → logprob: -11.751786231994629
    6. '       ' → logprob: -13.126786231994629
    7. '```' → logprob: -14.876786231994629
    8. '    
' → logprob: -15.751786231994629
    9. '
' → logprob: -16.876787185668945
    10. ' 
' → logprob: -17.251787185668945

Token 732: 'K' (ID: 42)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16854989528656006
    2. 'K' → logprob: -2.0435500144958496
    3. ' =' → logprob: -4.29355001449585
    4. ' K' → logprob: -6.16855001449585
    5. 'k' → logprob: -6.29355001449585
    6. '_k' → logprob: -6.29355001449585
    7. '_' → logprob: -6.54355001449585
    8. '_K' → logprob: -7.41855001449585
    9. '[' → logprob: -7.66855001449585
    10. '[:' → logprob: -7.79355001449585

Token 733: '_names' (ID: 20154)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07707381993532181
    2. ' =' → logprob: -2.702073812484741
    3. '=len' → logprob: -5.95207405090332
    4. '=count' → logprob: -6.45207405090332
    5. 'final' → logprob: -7.07707405090332
    6. '=[' → logprob: -7.82707405090332
    7. '_items' → logprob: -8.07707405090332
    8. '=set' → logprob: -8.57707405090332
    9. '=[]' → logprob: -8.70207405090332
    10. '   ' → logprob: -8.82707405090332

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6695733070373535
    2. '=set' → logprob: -0.9195733070373535
    3. '=[' → logprob: -2.6695733070373535
    4. '={' → logprob: -4.5445733070373535
    5. ' =' → logprob: -4.6695733070373535
    6. '=list' → logprob: -10.294572830200195
    7. '=[]' → logprob: -10.919572830200195
    8. '=f' → logprob: -11.169572830200195
    9. '=[]
' → logprob: -11.544572830200195
    10. 'set' → logprob: -12.044572830200195

Token 735: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3452657163143158
    2. 'set' → logprob: -1.5952657461166382
    3. '{' → logprob: -2.5952656269073486
    4. '[f' → logprob: -4.595265865325928
    5. ' set' → logprob: -6.345265865325928
    6. ' [' → logprob: -6.595265865325928
    7. '[x' → logprob: -7.095265865325928
    8. '{x' → logprob: -8.47026538848877
    9. '[s' → logprob: -10.34526538848877
    10. ' {' → logprob: -10.59526538848877

Token 736: '([' (ID: 5194)
  Prédit: '(name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(name' → logprob: -0.3019987940788269
    2. '([' → logprob: -1.5519988536834717
    3. '(x' → logprob: -3.4269988536834717
    4. '(n' → logprob: -4.426998615264893
    5. '(f' → logprob: -6.301998615264893
    6. '(item' → logprob: -6.426998615264893
    7. '(s' → logprob: -7.301998615264893
    8. '(fname' → logprob: -8.92699909210205
    9. '[name' → logprob: -10.30199909210205
    10. '(' → logprob: -10.92699909210205

Token 737: 'final' (ID: 17196)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.03195496276021004
    2. 'x' → logprob: -3.7819550037384033
    3. 'final' → logprob: -5.156954765319824
    4. 'n' → logprob: -7.156954765319824
    5. 'p' → logprob: -7.531954765319824
    6. 'f' → logprob: -7.531954765319824
    7. 's' → logprob: -7.781954765319824
    8. 'item' → logprob: -8.531954765319824
    9. 't' → logprob: -8.781954765319824
    10. 'fn' → logprob: -9.031954765319824

Token 738: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.15544581413269043
    2. '[' → logprob: -3.0304458141326904
    3. 'k' → logprob: -3.5304458141326904
    4. 'K' → logprob: -3.7804458141326904
    5. 'sorted' → logprob: -4.2804460525512695
    6. 'name' → logprob: -5.1554460525512695
    7. 'x' → logprob: -5.2804460525512695
    8. 's' → logprob: -5.5304460525512695
    9. 'f' → logprob: -5.7804460525512695
    10. 'p' → logprob: -6.5304460525512695

Token 739: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.951771421066951e-05
    2. '[j' → logprob: -10.875029563903809
    3. 'i' → logprob: -11.875029563903809
    4. '[' → logprob: -13.250029563903809
    5. '[x' → logprob: -14.125029563903809
    6. '[k' → logprob: -14.875029563903809
    7. '(i' → logprob: -15.125029563903809
    8. '[_' → logprob: -15.250029563903809
    9. '[idx' → logprob: -17.000028610229492
    10. '[
' → logprob: -18.000028610229492

Token 740: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005474821198731661
    2. '][' → logprob: -5.255475044250488
    3. '0' → logprob: -8.505475044250488
    4. ' [' → logprob: -10.880475044250488
    5. '
' → logprob: -11.880475044250488
    6. '```' → logprob: -12.630475044250488
    7. '   ' → logprob: -12.880475044250488
    8. '(' → logprob: -13.630475044250488
    9. '1' → logprob: -13.755475044250488
    10. '    
' → logprob: -14.380475044250488

Token 741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519475221633911
    2. '1' → logprob: -1.5019475221633911
    3. '
' → logprob: -12.001947402954102
    4. '```' → logprob: -12.626947402954102
    5. ' ' → logprob: -12.751947402954102
    6. 'i' → logprob: -12.876947402954102
    7. '[' → logprob: -13.126947402954102
    8. '   ' → logprob: -13.876947402954102
    9. '`' → logprob: -16.2519474029541
    10. '
' → logprob: -16.3769474029541

Token 742: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.605780303478241
    2. 'for' → logprob: -0.855780303478241
    3. ']' → logprob: -3.6057803630828857
    4. '   ' → logprob: -6.855780124664307
    5. ')' → logprob: -7.980780124664307
    6. '       ' → logprob: -8.105780601501465
    7. ' ' → logprob: -9.355780601501465
    8. '           ' → logprob: -9.480780601501465
    9. '	for' → logprob: -9.730780601501465
    10. '])' → logprob: -9.730780601501465

Token 743: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3869258165359497
    2. ' for' → logprob: -1.1369258165359497
    3. '   ' → logprob: -10.38692569732666
    4. '	for' → logprob: -11.76192569732666
    5. '       ' → logprob: -12.26192569732666
    6. 'if' → logprob: -12.51192569732666
    7. '           ' → logprob: -13.51192569732666
    8. ')' → logprob: -13.51192569732666
    9. ' if' → logprob: -13.63692569732666
    10. ' ' → logprob: -13.88692569732666

Token 744: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0411611944437027
    2. ' i' → logprob: -3.541161298751831
    3. 'range' → logprob: -5.291161060333252
    4. ' range' → logprob: -5.791161060333252
    5. ' in' → logprob: -6.041161060333252
    6. 'in' → logprob: -7.041161060333252
    7. '
' → logprob: -14.29116153717041
    8. ' ' → logprob: -14.91616153717041
    9. '0' → logprob: -14.91616153717041
    10. 'I' → logprob: -16.666160583496094

Token 745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07901052385568619
    2. 'in' → logprob: -2.579010486602783
    3. 'i' → logprob: -9.204010963439941
    4. ' i' → logprob: -11.204010963439941
    5. 'range' → logprob: -12.829010963439941
    6. ' ' → logprob: -13.704010963439941
    7. '
' → logprob: -13.954010963439941
    8. '0' → logprob: -14.829010963439941
    9. 'for' → logprob: -14.954010963439941
    10. '   ' → logprob: -15.079010963439941

Token 746: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -19.75009536743164
    4. '   ' → logprob: -20.37509536743164
    5. '
' → logprob: -22.62509536743164
    6. '	range' → logprob: -22.75009536743164
    7. ' ' → logprob: -22.87509536743164
    8. '0' → logprob: -24.62509536743164
    9. '`' → logprob: -24.75009536743164
    10. '  ' → logprob: -25.37509536743164

Token 747: '(K' (ID: 28797)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.64839569455944e-05
    2. '(K' → logprob: -10.375076293945312
    3. ' K' → logprob: -10.375076293945312
    4. 'min' → logprob: -11.250076293945312
    5. '   ' → logprob: -14.375076293945312
    6. ' min' → logprob: -15.375076293945312
    7. '
' → logprob: -16.250076293945312
    8. ',K' → logprob: -16.375076293945312
    9. '	K' → logprob: -16.500076293945312
    10. '0' → logprob: -17.000076293945312

Token 748: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.005346890073269606
    2. '])' → logprob: -5.380346775054932
    3. ')' → logprob: -8.38034725189209
    4. '])]' → logprob: -8.75534725189209
    5. ')])
' → logprob: -9.38034725189209
    6. ']])' → logprob: -9.50534725189209
    7. ')]' → logprob: -9.88034725189209
    8. ' if' → logprob: -10.00534725189209
    9. ']))' → logprob: -10.13034725189209
    10. 'if' → logprob: -10.38034725189209

Token 749: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8589140176773071
    2. '<|end|>' → logprob: -1.6089140176773071
    3. '   ' → logprob: -1.7339140176773071
    4. '       ' → logprob: -1.8589140176773071
    5. ' for' → logprob: -3.7339138984680176
    6. ')' → logprob: -5.233913898468018
    7. '  
' → logprob: -6.108913898468018
    8. '```' → logprob: -6.358913898468018
    9. '<|end|>' → logprob: -6.483913898468018
    10. ')
' → logprob: -6.608913898468018

Token 750: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06475162506103516
    2. '       ' → logprob: -3.564751625061035
    3. ' for' → logprob: -3.689751625061035
    4. 'count' → logprob: -4.689751625061035
    5. '
' → logprob: -9.314751625061035
    6. 'return' → logprob: -9.814751625061035
    7. '   ' → logprob: -10.189751625061035
    8. ' count' → logprob: -10.439751625061035
    9. 'if' → logprob: -11.939751625061035
    10. '	for' → logprob: -13.064751625061035

Token 751: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04051370173692703
    2. 'fav' → logprob: -3.290513753890991
    3. 'name' → logprob: -6.790513515472412
    4. ' f' → logprob: -6.915513515472412
    5. ' fav' → logprob: -8.79051399230957
    6. 'c' → logprob: -9.54051399230957
    7. 'fname' → logprob: -9.66551399230957
    8. 'n' → logprob: -10.79051399230957
    9. ' name' → logprob: -11.41551399230957
    10. 'nf' → logprob: -11.54051399230957

Token 752: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005929393693804741
    2. 'in' → logprob: -5.130929470062256
    3. '	in' → logprob: -14.755928993225098
    4. 's' → logprob: -15.505928993225098
    5. 'f' → logprob: -16.255929946899414
    6. '_in' → logprob: -16.880929946899414
    7. ' ' → logprob: -16.880929946899414
    8. '   ' → logprob: -17.880929946899414
    9. 'n' → logprob: -18.255929946899414
    10. ' ' → logprob: -18.380929946899414

Token 753: ' fav' (ID: 11726)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.420274555683136
    2. 'fav' → logprob: -1.1702744960784912
    3. ' fav' → logprob: -3.420274496078491
    4. 'final' → logprob: -9.54527473449707
    5. 'top' → logprob: -10.17027473449707
    6. 'selected' → logprob: -11.17027473449707
    7. ' top' → logprob: -12.04527473449707
    8. '   ' → logprob: -12.67027473449707
    9. ' favored' → logprob: -12.79527473449707
    10. ' f' → logprob: -13.29527473449707

Token 754: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09778331220149994
    2. '_set' → logprob: -2.972783327102661
    3. 'top' → logprob: -3.472783327102661
    4. 'fav' → logprob: -5.097783088684082
    5. 'f' → logprob: -5.597783088684082
    6. ' top' → logprob: -7.472783088684082
    7. '_f' → logprob: -9.472783088684082
    8. 'S' → logprob: -9.972783088684082
    9. ' fav' → logprob: -10.097783088684082
    10. 'Set' → logprob: -10.097783088684082

Token 755: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09368052333593369
    2. ':' → logprob: -2.4686806201934814
    3. '       ' → logprob: -5.718680381774902
    4. '   ' → logprob: -6.968680381774902
    5. '():
' → logprob: -8.843680381774902
    6. '):
' → logprob: -8.843680381774902
    7. '<|end|>' → logprob: -9.968680381774902
    8. ':
' → logprob: -10.718680381774902
    9. ' if' → logprob: -10.718680381774902
    10. '           ' → logprob: -10.968680381774902

Token 756: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006253923289477825
    2. ' if' → logprob: -5.881253719329834
    3. '<|end|>' → logprob: -6.756253719329834
    4. '```' → logprob: -7.131253719329834
    5. '   ' → logprob: -7.381253719329834
    6. '<|end|>' → logprob: -8.131254196166992
    7. '           ' → logprob: -8.381254196166992
    8. 'if' → logprob: -9.131254196166992
    9. '	       ' → logprob: -9.506254196166992
    10. '        
' → logprob: -10.756254196166992

Token 757: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3018507957458496
    2. '       ' → logprob: -1.4268507957458496
    3. 'if' (adapté à ' if') → logprob: -4.17685079574585
    4. '   ' → logprob: -6.42685079574585
    5. '           ' → logprob: -7.17685079574585
    6. '<|end|>' → logprob: -7.30185079574585
    7. '```' → logprob: -7.80185079574585
    8. '    ' → logprob: -8.051851272583008
    9. ' count' → logprob: -8.301851272583008
    10. 'count' → logprob: -8.426851272583008

Token 758: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5759428143501282
    2. ' f' → logprob: -0.8259428143501282
    3. '   ' → logprob: -13.575942993164062
    4. '	f' → logprob: -14.200942993164062
    5. '    ' → logprob: -14.700942993164062
    6. ' ' → logprob: -14.700942993164062
    7. ' ' → logprob: -15.825942993164062
    8. '       ' → logprob: -16.075942993164062
    9. '           ' → logprob: -16.075942993164062
    10. '(f' → logprob: -16.700942993164062

Token 759: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02633095160126686
    2. 'in' → logprob: -3.6513309478759766
    3. ' ' → logprob: -11.026330947875977
    4. ' not' → logprob: -12.776330947875977
    5. '
' → logprob: -13.401330947875977
    6. '   ' → logprob: -13.526330947875977
    7. 'f' → logprob: -13.776330947875977
    8. '[' → logprob: -14.026330947875977
    9. '	in' → logprob: -14.401330947875977
    10. '```' → logprob: -14.651330947875977

Token 760: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00033546582562848926
    2. ' top' → logprob: -8.000335693359375
    3. '
' → logprob: -17.625335693359375
    4. '   ' → logprob: -18.375335693359375
    5. '	top' → logprob: -18.500335693359375
    6. '[top' → logprob: -18.750335693359375
    7. '(top' → logprob: -19.375335693359375
    8. ' ' → logprob: -19.875335693359375
    9. '```' → logprob: -19.875335693359375
    10. 't' → logprob: -20.875335693359375

Token 761: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.246537173457909e-06
    2. ' K' → logprob: -12.500003814697266
    3. 'top' → logprob: -14.750003814697266
    4. '
' → logprob: -17.750003814697266
    5. ' top' → logprob: -17.875003814697266
    6. '```' → logprob: -17.875003814697266
    7. '(top' → logprob: -18.000003814697266
    8. ' ' → logprob: -18.000003814697266
    9. '_K' → logprob: -18.500003814697266
    10. '{' → logprob: -18.750003814697266

Token 762: '_names' (ID: 20154)
  Prédit: '_names'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_names' → logprob: -6.630610641877865e-06
    2. 'names' → logprob: -12.250006675720215
    3. 'K' → logprob: -13.875006675720215
    4. '_set' → logprob: -15.375006675720215
    5. '_NAMES' → logprob: -15.500006675720215
    6. 'Names' → logprob: -15.750006675720215
    7. '_' → logprob: -16.5000057220459
    8. 'N' → logprob: -17.2500057220459
    9. ' names' → logprob: -17.2500057220459
    10. '	names' → logprob: -17.5000057220459

Token 763: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4389475882053375
    2. ':' → logprob: -1.0639475584030151
    3. '           ' → logprob: -5.438947677612305
    4. '               ' → logprob: -5.688947677612305
    5. ' and' → logprob: -6.938947677612305
    6. '):
' → logprob: -7.188947677612305
    7. '       ' → logprob: -8.188947677612305
    8. '):' → logprob: -8.688947677612305
    9. 'and' → logprob: -9.563947677612305
    10. ':return' → logprob: -9.813947677612305

Token 764: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008199920994229615
    2. 'count' → logprob: -7.875820159912109
    3. '           ' → logprob: -8.75082015991211
    4. '	       ' → logprob: -9.87582015991211
    5. ',count' → logprob: -10.12582015991211
    6. ' count' → logprob: -10.25082015991211
    7. '       ' → logprob: -10.50082015991211
    8. '	           ' → logprob: -11.00082015991211
    9. '+' → logprob: -11.12582015991211
    10. '	count' → logprob: -11.25082015991211

Token 765: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.14397032558918
    2. '               ' → logprob: -2.268970251083374
    3. '                   ' → logprob: -4.643970489501953
    4. '       ' → logprob: -4.893970489501953
    5. ' count' → logprob: -4.893970489501953
    6. '   ' → logprob: -5.268970489501953
    7. '           ' → logprob: -7.768970489501953
    8. '
' → logprob: -8.643970489501953
    9. '	count' → logprob: -9.143970489501953
    10. '[count' → logprob: -10.393970489501953

Token 766: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009480224689468741
    2. ' +=' → logprob: -7.250947952270508
    3. ']+=' → logprob: -8.500947952270508
    4. '+' → logprob: -11.000947952270508
    5. '=' → logprob: -12.000947952270508
    6. '   ' → logprob: -12.125947952270508
    7. '```' → logprob: -13.375947952270508
    8. '=count' → logprob: -13.875947952270508
    9. '           ' → logprob: -14.000947952270508
    10. '+='' → logprob: -14.125947952270508

Token 767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'x' → logprob: -19.5
    4. '
' → logprob: -19.75
    5. '```' → logprob: -20.625
    6. '   ' → logprob: -21.5
    7. '<|end|>' → logprob: -21.5
    8. '+' → logprob: -22.375
    9. '１' → logprob: -22.375
    10. '0' → logprob: -22.5

Token 768: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3092974126338959
    2. '       ' → logprob: -1.5592974424362183
    3. '<|end|>' → logprob: -3.0592973232269287
    4. '   ' → logprob: -5.684297561645508
    5. '        
' → logprob: -6.434297561645508
    6. '    
' → logprob: -6.934297561645508
    7. '<|end|>' → logprob: -7.059297561645508
    8. '  
' → logprob: -7.559297561645508
    9. 'return' → logprob: -7.809297561645508
    10. '	return' → logprob: -7.934297561645508

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08645489066839218
    2. '
' → logprob: -3.2114548683166504
    3. '   ' → logprob: -3.4614548683166504
    4. '<|end|>' → logprob: -4.71145486831665
    5. 'return' → logprob: -7.08645486831665
    6. '<|end|>' → logprob: -7.83645486831665
    7. '        
' → logprob: -8.086455345153809
    8. '    
' → logprob: -8.086455345153809
    9. ' return' → logprob: -9.461455345153809
    10. '	return' → logprob: -9.836455345153809

Token 770: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03483637049794197
    2. '   ' → logprob: -3.6598362922668457
    3. 'return' (adapté à ' return') → logprob: -4.909836292266846
    4. '
' → logprob: -7.034836292266846
    5. ' return' → logprob: -8.784836769104004
    6. '<|end|>' → logprob: -9.784836769104004
    7. '	return' → logprob: -11.409836769104004
    8. '```' → logprob: -12.159836769104004
    9. '        
' → logprob: -12.284836769104004
    10. '           ' → logprob: -12.409836769104004

Token 771: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '(count' → logprob: -16.87507438659668
    4. '   ' → logprob: -18.62507438659668
    5. 'x' → logprob: -20.62507438659668
    6. '	count' → logprob: -21.50007438659668
    7. 'True' → logprob: -21.50007438659668
    8. ' ' → logprob: -22.25007438659668
    9. '[count' → logprob: -22.37507438659668
    10. 'counts' → logprob: -22.87507438659668

Token 772: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2523168921470642
    2. ' >=' → logprob: -1.502316951751709
    3. ')>=' → logprob: -8.75231647491455
    4. '==' → logprob: -9.00231647491455
    5. ']>=' → logprob: -9.62731647491455
    6. ' ==' → logprob: -10.37731647491455
    7. '<|end|>' → logprob: -12.75231647491455
    8. '   ' → logprob: -12.87731647491455
    9. '≥' → logprob: -14.12731647491455
    10. '[x' → logprob: -14.12731647491455

Token 773: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. 'K' → logprob: -20.250009536743164
    4. '```' → logprob: -20.875009536743164
    5. '(x' → logprob: -21.125009536743164
    6. '$x' → logprob: -21.750009536743164
    7. '	x' → logprob: -22.500009536743164
    8. '
' → logprob: -22.750009536743164
    9. 'sys' → logprob: -22.750009536743164
    10. '{x' → logprob: -22.875009536743164

Token 774: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8133853673934937
    2. 'low' → logprob: -2.438385486602783
    3. 'left' → logprob: -2.438385486602783
    4. 'l' → logprob: -2.563385486602783
    5. 'max' → logprob: -2.563385486602783
    6. ' for' → logprob: -2.688385486602783
    7. 'ans' → logprob: -3.188385486602783
    8. 'res' → logprob: -3.688385486602783
    9. '   ' → logprob: -3.813385486602783
    10. 'x' → logprob: -4.563385486602783

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23517808318138123
    2. ' 
' → logprob: -2.235177993774414
    3. 'x' → logprob: -3.360177993774414
    4. '_' → logprob: -4.360177993774414
    5. 'n' → logprob: -4.360177993774414
    6. '    
' → logprob: -4.610177993774414
    7. ' ' → logprob: -5.610177993774414
    8. ' x' → logprob: -5.985177993774414
    9. '     
' → logprob: -5.985177993774414
    10. '    ' → logprob: -6.235177993774414

Token 776: ' low' (ID: 4465)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9931215047836304
    2. 'low' (adapté à ' low') → logprob: -0.9931215047836304
    3. 'l' → logprob: -1.7431215047836304
    4. 'lo' → logprob: -2.49312162399292
    5. 'res' → logprob: -6.99312162399292
    6. 'ok' → logprob: -8.493121147155762
    7. 'for' → logprob: -9.368121147155762
    8. 'ans' → logprob: -9.743121147155762
    9. 'answer' → logprob: -9.743121147155762
    10. 'lb' → logprob: -9.993121147155762

Token 777: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04879651963710785
    2. ' =' → logprob: -3.2987964153289795
    3. ',' → logprob: -4.548796653747559
    4. '   ' → logprob: -9.298796653747559
    5. ' ,' → logprob: -11.923796653747559
    6. '=
' → logprob: -12.548796653747559
    7. '<|end|>' → logprob: -13.173796653747559
    8. '=int' → logprob: -13.423796653747559
    9. '```' → logprob: -13.423796653747559
    10. '_=' → logprob: -13.673796653747559

Token 778: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -13.375001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. '۰' → logprob: -19.250001907348633
    7. '=' → logprob: -19.750001907348633
    8. 'max' → logprob: -20.437501907348633
    9. '-' → logprob: -20.750001907348633
    10. '``' → logprob: -21.187501907348633

Token 779: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014818287454545498
    2. 'high' → logprob: -5.51481819152832
    3. ' high' → logprob: -5.76481819152832
    4. ' 
' → logprob: -5.88981819152832
    5. '<|end|>' → logprob: -6.13981819152832
    6. '  
' → logprob: -7.13981819152832
    7. '```' → logprob: -7.63981819152832
    8. '(high' → logprob: -7.76481819152832
    9. '.high' → logprob: -8.76481819152832
    10. '    
' → logprob: -8.76481819152832

Token 780: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1152369976043701
    2. ' high' → logprob: -1.2402369976043701
    3. 'high' → logprob: -1.6152369976043701
    4. '(high' → logprob: -2.61523699760437
    5. '<|end|>' → logprob: -2.86523699760437
    6. ' 
' → logprob: -3.74023699760437
    7. ',' → logprob: -5.365237236022949
    8. '.high' → logprob: -5.365237236022949
    9. '```' → logprob: -5.740237236022949
    10. '  
' → logprob: -5.990237236022949

Token 781: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.004078758880496025
    2. ' high' → logprob: -5.5040788650512695
    3. 'High' → logprob: -16.254077911376953
    4. 'up' → logprob: -17.004077911376953
    5. 'hi' → logprob: -17.004077911376953
    6. '
' → logprob: -17.129077911376953
    7. '```' → logprob: -17.504077911376953
    8. '(high' → logprob: -17.754077911376953
    9. '_high' → logprob: -18.129077911376953
    10. '.high' → logprob: -18.629077911376953

Token 782: '=M' (ID: 125766)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4069533348083496
    2. '=N' → logprob: -1.4069533348083496
    3. '=len' → logprob: -2.6569533348083496
    4. ' =' → logprob: -4.03195333480835
    5. '=M' → logprob: -7.28195333480835
    6. '=int' → logprob: -7.65695333480835
    7. '=max' → logprob: -8.781953811645508
    8. '=n' → logprob: -9.156953811645508
    9. '=num' → logprob: -10.781953811645508
    10. '   ' → logprob: -10.906953811645508

Token 783: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05464290827512741
    2. '   ' → logprob: -3.804642915725708
    3. '<|end|>' → logprob: -4.054642677307129
    4. '    
' → logprob: -5.304642677307129
    5. ' while' → logprob: -5.429642677307129
    6. 'while' → logprob: -6.554642677307129
    7. ' 
' → logprob: -6.679642677307129
    8. '  
' → logprob: -7.304642677307129
    9. '\n' → logprob: -8.679642677307129
    10. '<|end|>' → logprob: -8.804642677307129

Token 785: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12539541721343994
    2. ' while' → logprob: -2.5003952980041504
    3. 'mid' → logprob: -3.3753952980041504
    4. ' mid' → logprob: -6.50039529800415
    5. '
' → logprob: -10.125395774841309
    6. 'ans' (adapté à ' ans') → logprob: -10.375395774841309
    7. ' ans' → logprob: -12.250395774841309
    8. 'result' → logprob: -12.750395774841309
    9. 'res' → logprob: -12.875395774841309
    10. '   ' → logprob: -13.000395774841309

Token 786: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005949064157903194
    2. ' =' → logprob: -5.130949020385742
    3. '=None' → logprob: -12.505949020385742
    4. '=-' → logprob: -12.505949020385742
    5. '=int' → logprob: -12.505949020385742
    6. '=max' → logprob: -13.005949020385742
    7. '=
' → logprob: -13.130949020385742
    8. '   ' → logprob: -14.130949020385742
    9. '=

' → logprob: -14.130949020385742
    10. ',' → logprob: -14.505949020385742

Token 787: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010890735575230792
    2. '-' → logprob: -9.25010871887207
    3. ' ' → logprob: -11.62510871887207
    4. 'M' → logprob: -12.62510871887207
    5. 'low' → logprob: -15.12510871887207
    6. ' -' → logprob: -16.12510871887207
    7. 'max' → logprob: -16.87510871887207
    8. '```' → logprob: -17.62510871887207
    9. '"' → logprob: -17.87510871887207
    10. '1' → logprob: -18.00010871887207

Token 788: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1082948446273804
    2. ' 
' → logprob: -1.2332948446273804
    3. ' while' → logprob: -1.2332948446273804
    4. 'while' → logprob: -3.23329496383667
    5. '   ' → logprob: -3.60829496383667
    6. '    
' → logprob: -4.60829496383667
    7. '<|end|>' → logprob: -5.23329496383667
    8. '  
' → logprob: -6.35829496383667
    9. '```' → logprob: -6.48329496383667
    10. '     
' → logprob: -7.35829496383667

Token 789: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.022194471210241318
    2. ' while' → logprob: -4.0221943855285645
    3. '```' → logprob: -6.3971943855285645
    4. '<|end|>' → logprob: -6.6471943855285645
    5. '   ' → logprob: -7.0221943855285645
    6. '	while' → logprob: -9.022194862365723
    7. '    
' → logprob: -10.772194862365723
    8. 'While' → logprob: -11.397194862365723
    9. '
' → logprob: -12.022194862365723
    10. '  
' → logprob: -12.647194862365723

Token 790: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00033713103039190173
    2. ' while' → logprob: -8.000337600708008
    3. '
' → logprob: -14.250337600708008
    4. 'mid' → logprob: -14.625337600708008
    5. '```' → logprob: -14.875337600708008
    6. '    
' → logprob: -16.250337600708008
    7. '   ' → logprob: -16.875337600708008
    8. 'While' → logprob: -16.875337600708008
    9. '	while' → logprob: -18.000337600708008
    10. ' 
' → logprob: -19.625337600708008

Token 791: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5759531259536743
    2. ' low' → logprob: -0.8259531259536743
    3. '(low' → logprob: -11.200953483581543
    4. ' ' → logprob: -17.075952529907227
    5. 'Low' → logprob: -17.450952529907227
    6. ' ' → logprob: -17.950952529907227
    7. '   ' → logprob: -18.700952529907227
    8. '低' → logprob: -18.825952529907227
    9. '_low' → logprob: -18.950952529907227
    10. '```' → logprob: -19.700952529907227

Token 792: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2687540650367737
    2. ' <=' → logprob: -1.893754005432129
    3. '<' → logprob: -2.643754005432129
    4. ' <' → logprob: -4.268754005432129
    5. '<len' → logprob: -9.893754005432129
    6. ' ' → logprob: -12.018754005432129
    7. '≤' → logprob: -13.393754005432129
    8. '<size' → logprob: -13.768754005432129
    9. '<int' → logprob: -13.893754005432129
    10. '<n' → logprob: -13.893754005432129

Token 793: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -4.5491004129871726e-05
    2. ' high' → logprob: -10.000045776367188
    3. '(high' → logprob: -19.625045776367188
    4. 'High' → logprob: -22.125045776367188
    5. ' ' → logprob: -23.375045776367188
    6. '
' → logprob: -23.500045776367188
    7. '_high' → logprob: -23.625045776367188
    8. '.high' → logprob: -23.750045776367188
    9. 'hi' → logprob: -23.750045776367188
    10. '高' → logprob: -25.000045776367188

Token 794: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13892152905464172
    2. ':
' → logprob: -2.3889214992523193
    3. '<|end|>' → logprob: -3.7639214992523193
    4. '   ' → logprob: -4.888921737670898
    5. '       ' → logprob: -5.513921737670898
    6. '<|end|>' → logprob: -6.263921737670898
    7. ',' → logprob: -7.263921737670898
    8. '.' → logprob: -9.138921737670898
    9. '):
' → logprob: -9.951421737670898
    10. ':

' → logprob: -10.076421737670898

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2619362771511078
    2. '   ' → logprob: -1.8869363069534302
    3. ' mid' → logprob: -3.8869361877441406
    4. '    ' → logprob: -4.011936187744141
    5. '    
' → logprob: -4.136936187744141
    6. '<|end|>' → logprob: -4.261936187744141
    7. 'mid' → logprob: -6.511936187744141
    8. '        
' → logprob: -6.511936187744141
    9. '  
' → logprob: -6.636936187744141
    10. '
' → logprob: -6.886936187744141

Token 796: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.049953874200582504
    2. 'mid' (adapté à ' mid') → logprob: -3.0499539375305176
    3. '   ' → logprob: -6.799953937530518
    4. '       ' → logprob: -8.42495346069336
    5. '[mid' → logprob: -11.54995346069336
    6. '    ' → logprob: -11.92495346069336
    7. '_mid' → logprob: -12.92495346069336
    8. '    
' → logprob: -13.04995346069336
    9. '```' → logprob: -13.54995346069336
    10. ' m' → logprob: -13.67495346069336

Token 797: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20195595920085907
    2. '=(' → logprob: -1.9519559144973755
    3. ' =' → logprob: -3.201956033706665
    4. '=int' → logprob: -8.951955795288086
    5. '=
' → logprob: -10.076955795288086
    6. ' =(' → logprob: -11.451955795288086
    7. '=center' → logprob: -13.576955795288086
    8. '=

' → logprob: -13.701955795288086
    9. '=((' → logprob: -13.826955795288086
    10. '=len' → logprob: -14.201955795288086

Token 798: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0003362966235727072
    2. ' low' → logprob: -8.000336647033691
    3. '(low' → logprob: -14.000336647033691
    4. ' ' → logprob: -21.625335693359375
    5. 'Low' → logprob: -22.375335693359375
    6. '_low' → logprob: -22.375335693359375
    7. '
' → logprob: -23.250335693359375
    8. ' (' → logprob: -23.500335693359375
    9. '.low' → logprob: -23.500335693359375
    10. 'high' → logprob: -24.000335693359375

Token 799: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889155298471451
    2. ' +' → logprob: -2.5788915157318115
    3. '+
' → logprob: -14.32889175415039
    4. '```' → logprob: -14.32889175415039
    5. ' +
' → logprob: -15.32889175415039
    6. '＋' → logprob: -15.82889175415039
    7. ')' → logprob: -16.82889175415039
    8. ')+' → logprob: -17.57889175415039
    9. '+b' → logprob: -17.70389175415039
    10. ' ' → logprob: -18.20389175415039

Token 800: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.03347106650471687
    2. 'low' → logprob: -3.53347110748291
    3. '(high' → logprob: -5.78347110748291
    4. '(low' → logprob: -7.53347110748291
    5. ' high' → logprob: -9.53347110748291
    6. ' (' → logprob: -11.40847110748291
    7. ' low' → logprob: -11.53347110748291
    8. '(' → logprob: -11.90847110748291
    9. '
' → logprob: -14.53347110748291
    10. '```' → logprob: -16.658470153808594

Token 801: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.4074167013168335
    2. ')' → logprob: -1.1574167013168335
    3. ')>>' → logprob: -3.907416820526123
    4. ' )' → logprob: -8.407416343688965
    5. ')
' → logprob: -11.532416343688965
    6. '//' → logprob: -12.782416343688965
    7. ')#' → logprob: -13.282416343688965
    8. '>>' → logprob: -13.532416343688965
    9. ')<<' → logprob: -13.657416343688965
    10. '+' → logprob: -13.782416343688965

Token 802: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.5
    4. '۲' → logprob: -22.25
    5. '   ' → logprob: -22.5
    6. '２' → logprob: -22.625
    7. '=' → logprob: -23.0
    8. '``' → logprob: -23.75
    9. '
' → logprob: -24.0
    10. '٢' → logprob: -24.5

Token 803: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17428401112556458
    2. '<|end|>' → logprob: -2.049283981323242
    3. '       ' → logprob: -3.924283981323242
    4. '        
' → logprob: -5.674283981323242
    5. '<|end|>' → logprob: -6.049283981323242
    6. ' if' → logprob: -6.049283981323242
    7. 'if' → logprob: -6.674283981323242
    8. '
' → logprob: -7.674283981323242
    9. '  
' → logprob: -7.799283981323242
    10. ' 
' → logprob: -8.299283981323242

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2765810787677765
    2. '<|end|>' → logprob: -1.776581048965454
    3. '
' → logprob: -3.026581048965454
    4. ' if' → logprob: -5.026581287384033
    5. '   ' → logprob: -5.276581287384033
    6. '        
' → logprob: -5.401581287384033
    7. '<|end|>' → logprob: -5.526581287384033
    8. '  
' → logprob: -7.026581287384033
    9. '    
' → logprob: -7.526581287384033
    10. 'if' → logprob: -7.776581287384033

Token 805: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6214324831962585
    2. '       ' → logprob: -1.1214325428009033
    3. 'if' (adapté à ' if') → logprob: -1.9964325428009033
    4. '
' → logprob: -6.996432304382324
    5. '	if' → logprob: -8.746432304382324
    6. '   ' → logprob: -9.746432304382324
    7. '<|end|>' → logprob: -10.246432304382324
    8. '        
' → logprob: -11.746432304382324
    9. ' 
' → logprob: -12.371432304382324
    10. '	' → logprob: -12.996432304382324

Token 806: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.10020732134580612
    2. ' can' → logprob: -2.3502073287963867
    3. '(can' → logprob: -14.975207328796387
    4. '	can' → logprob: -15.350207328796387
    5. '   ' → logprob: -15.600207328796387
    6. '_can' → logprob: -18.72520637512207
    7. ' ' → logprob: -19.47520637512207
    8. '.can' → logprob: -19.60020637512207
    9. 'Can' → logprob: -20.85020637512207
    10. ' ' → logprob: -20.97520637512207

Token 807: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -13.875001907348633
    3. '[mid' → logprob: -14.875001907348633
    4. '(' → logprob: -15.500001907348633
    5. '(
' → logprob: -17.750001907348633
    6. '(low' → logprob: -19.000001907348633
    7. '(max' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.125001907348633
    9. ')' → logprob: -20.500001907348633
    10. 'mid' → logprob: -20.625001907348633

Token 808: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011054662987589836
    2. '):' → logprob: -4.511054515838623
    3. ':
' → logprob: -12.761054992675781
    4. '):
' → logprob: -13.886054992675781
    5. ' ):
' → logprob: -13.886054992675781
    6. ':' → logprob: -14.636054992675781
    7. ')' → logprob: -14.886054992675781
    8. '       ' → logprob: -15.011054992675781
    9. ')==' → logprob: -15.136054992675781
    10. '):

' → logprob: -15.261054992675781

Token 809: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6867967247962952
    2. '       ' → logprob: -1.0617966651916504
    3. '           ' → logprob: -2.1867966651916504
    4. ' low' → logprob: -3.8117966651916504
    5. ' 
' → logprob: -5.31179666519165
    6. '        
' → logprob: -5.43679666519165
    7. '```' → logprob: -5.56179666519165
    8. 'low' → logprob: -6.81179666519165
    9. '(low' → logprob: -7.31179666519165
    10. ':
' → logprob: -7.56179666519165

Token 810: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20526157319545746
    2. 'ans' (adapté à ' ans') → logprob: -1.7052615880966187
    3. '       ' → logprob: -5.955261707305908
    4. '   ' → logprob: -7.580261707305908
    5. '	ans' → logprob: -7.705261707305908
    6. '
' → logprob: -8.45526123046875
    7. '           ' → logprob: -10.33026123046875
    8. '(ans' → logprob: -10.95526123046875
    9. '_ans' → logprob: -11.95526123046875
    10. 'answer' → logprob: -12.08026123046875

Token 811: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889000326395035
    2. ' =' → logprob: -2.578890085220337
    3. '=max' → logprob: -15.953889846801758
    4. '=
' → logprob: -16.828889846801758
    5. '＝' → logprob: -17.328889846801758
    6. '=cut' → logprob: -18.078889846801758
    7. '=center' → logprob: -18.453889846801758
    8. '=current' → logprob: -18.953889846801758
    9. '=edge' → logprob: -19.328889846801758
    10. '=end' → logprob: -19.453889846801758

Token 812: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.1472419600977446e-06
    2. ' mid' → logprob: -13.750000953674316
    3. '[mid' → logprob: -21.000001907348633
    4. '(mid' → logprob: -22.000001907348633
    5. '   ' → logprob: -22.125001907348633
    6. '       ' → logprob: -22.500001907348633
    7. '           ' → logprob: -22.750001907348633
    8. '
' → logprob: -24.000001907348633
    9. '_mid' → logprob: -25.250001907348633
    10. '```' → logprob: -25.750001907348633

Token 813: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03889551758766174
    2. '           ' → logprob: -3.288895606994629
    3. '       ' → logprob: -7.538895606994629
    4. '            
' → logprob: -9.163895606994629
    5. '        
' → logprob: -9.288895606994629
    6. '    
' → logprob: -10.288895606994629
    7. '<|end|>' → logprob: -10.663895606994629
    8. ',' → logprob: -11.538895606994629
    9. '
' → logprob: -11.663895606994629
    10. '   ' → logprob: -11.788895606994629

Token 814: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33606454730033875
    2. '           ' → logprob: -1.3360645771026611
    3. '       ' → logprob: -3.961064577102661
    4. '            
' → logprob: -7.211064338684082
    5. '        
' → logprob: -7.211064338684082
    6. '```' → logprob: -7.211064338684082
    7. '<|end|>' → logprob: -7.836064338684082
    8. ' 
' → logprob: -8.961064338684082
    9. '
' → logprob: -9.211064338684082
    10. '(low' → logprob: -9.211064338684082

Token 815: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.0011714138090610504
    2. ' low' → logprob: -6.751171588897705
    3. '           ' → logprob: -14.251171112060547
    4. '   ' → logprob: -15.376171112060547
    5. '(low' → logprob: -16.251171112060547
    6. '       ' → logprob: -16.626171112060547
    7. '
' → logprob: -16.751171112060547
    8. '.low' → logprob: -17.251171112060547
    9. '_low' → logprob: -18.501171112060547
    10. 'Low' → logprob: -19.126171112060547

Token 816: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009122979827225208
    2. ' =' → logprob: -7.000912189483643
    3. '=
' → logprob: -14.6259126663208
    4. '+=' → logprob: -16.250911712646484
    5. '=max' → logprob: -17.000911712646484
    6. '=cut' → logprob: -18.000911712646484
    7. '=line' → logprob: -18.000911712646484
    8. '=int' → logprob: -18.125911712646484
    9. '=

' → logprob: -18.250911712646484
    10. '＝' → logprob: -18.375911712646484

Token 817: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0001234428636962548
    2. ' mid' → logprob: -9.000123023986816
    3. '(mid' → logprob: -17.875123977661133
    4. '[mid' → logprob: -18.125123977661133
    5. '_mid' → logprob: -19.625123977661133
    6. '   ' → logprob: -20.375123977661133
    7. 'middle' → logprob: -21.500123977661133
    8. 'm' → logprob: -22.375123977661133
    9. '
' → logprob: -22.375123977661133
    10. '.mid' → logprob: -22.750123977661133

Token 818: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019289902411401272
    2. ' +' → logprob: -6.251928806304932
    3. '```' → logprob: -16.501928329467773
    4. '1' → logprob: -16.626928329467773
    5. '+
' → logprob: -16.751928329467773
    6. ' plus' → logprob: -16.876928329467773
    7. 'plus' → logprob: -17.751928329467773
    8. '+(' → logprob: -17.876928329467773
    9. '＋' → logprob: -18.001928329467773
    10. '+k' → logprob: -18.876928329467773

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -21.375
    5. '``' → logprob: -22.25
    6. '
' → logprob: -22.5
    7. '۱' → logprob: -23.0
    8. '１' → logprob: -23.125
    9. '           ' → logprob: -24.0
    10. '`' → logprob: -24.25

Token 820: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006749955005943775
    2. '
' → logprob: -5.131750106811523
    3. 'else' → logprob: -7.506750106811523
    4. ' else' → logprob: -8.631750106811523
    5. '<|end|>' → logprob: -9.756750106811523
    6. '   ' → logprob: -10.881750106811523
    7. '```' → logprob: -11.881750106811523
    8. '           ' → logprob: -13.256750106811523
    9. '        
' → logprob: -13.506750106811523
    10. '    
' → logprob: -13.881750106811523

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08203528821468353
    2. 'else' → logprob: -2.5820353031158447
    3. '```' → logprob: -6.582035064697266
    4. ' else' → logprob: -6.832035064697266
    5. '   ' → logprob: -7.582035064697266
    6. 'high' → logprob: -9.082035064697266
    7. '``' → logprob: -11.082035064697266
    8. ' high' → logprob: -11.707035064697266
    9. '           ' → logprob: -11.832035064697266
    10. '	' → logprob: -12.332035064697266

Token 822: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0016084164381027222
    2. ' else' → logprob: -7.126608371734619
    3. '       ' → logprob: -7.251608371734619
    4. '   ' → logprob: -9.876608848571777
    5. '```' → logprob: -10.126608848571777
    6. '	else' → logprob: -13.751608848571777
    7. 'high' → logprob: -14.376608848571777
    8. '``' → logprob: -15.001608848571777
    9. 'elif' → logprob: -15.001608848571777
    10. '#else' → logprob: -15.126608848571777

Token 823: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3416734039783478
    2. ':' → logprob: -1.3416733741760254
    3. '           ' → logprob: -4.341673374176025
    4. ' high' → logprob: -5.216673374176025
    5. '(high' → logprob: -5.466673374176025
    6. 'high' → logprob: -6.591673374176025
    7. '```' → logprob: -7.091673374176025
    8. '<|end|>' → logprob: -7.216673374176025
    9. '       ' → logprob: -7.716673374176025
    10. '.high' → logprob: -8.216673851013184

Token 824: '           ' (ID: 352)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.1717921793460846
    2. '       ' → logprob: -2.6717922687530518
    3. '           ' → logprob: -2.6717922687530518
    4. '   ' → logprob: -4.796792030334473
    5. ' high' → logprob: -4.921792030334473
    6. '
' → logprob: -5.921792030334473
    7. '(high' → logprob: -7.171792030334473
    8. '```' → logprob: -8.171792030334473
    9. '_high' → logprob: -9.671792030334473
    10. '               ' → logprob: -9.796792030334473

Token 825: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.0004317420825827867
    2. ' high' → logprob: -7.750431537628174
    3. '
' → logprob: -14.250432014465332
    4. '   ' → logprob: -15.625432014465332
    5. '           ' → logprob: -16.000431060791016
    6. '(high' → logprob: -16.625431060791016
    7. '.high' → logprob: -17.125431060791016
    8. '_high' → logprob: -17.375431060791016
    9. '/high' → logprob: -17.875431060791016
    10. '       ' → logprob: -18.000431060791016

Token 826: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7432603272027336e-06
    2. '=-' → logprob: -14.125001907348633
    3. ' =' → logprob: -14.500001907348633
    4. '-=' → logprob: -15.500001907348633
    5. '=end' → logprob: -16.250001907348633
    6. '=line' → logprob: -17.000001907348633
    7. '=head' → logprob: -17.125001907348633
    8. '=cut' → logprob: -17.250001907348633
    9. '=max' → logprob: -17.875001907348633
    10. '=
' → logprob: -18.125001907348633

Token 827: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.8624639324116288e-06
    2. ' mid' → logprob: -13.250001907348633
    3. '[mid' → logprob: -17.250001907348633
    4. '(mid' → logprob: -17.750001907348633
    5. 'low' → logprob: -18.875001907348633
    6. '_mid' → logprob: -20.375001907348633
    7. 'high' → logprob: -20.500001907348633
    8. '.mid' → logprob: -22.250001907348633
    9. '-mid' → logprob: -22.625001907348633
    10. 'middle' → logprob: -23.250001907348633

Token 828: '-' (ID: 12)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00016110755677800626
    2. '[mid' → logprob: -9.375161170959473
    3. ' mid' → logprob: -10.250161170959473
    4. '-mid' → logprob: -10.625161170959473
    5. '_mid' → logprob: -11.375161170959473
    6. '(mid' → logprob: -12.750161170959473
    7. '.mid' → logprob: -14.500161170959473
    8. 'm' → logprob: -15.000161170959473
    9. '=' → logprob: -15.250161170959473
    10. '-' → logprob: -15.250161170959473

Token 829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -17.750001907348633
    4. '```' → logprob: -18.250001907348633
    5. '=' → logprob: -19.000001907348633
    6. '۱' → logprob: -19.750001907348633
    7. '0' → logprob: -20.375001907348633
    8. '2' → logprob: -20.750001907348633
    9. '１' → logprob: -21.500001907348633
    10. '   ' → logprob: -21.625001907348633

Token 830: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006088292226195335
    2. '
' → logprob: -5.1310882568359375
    3. '```' → logprob: -9.506088256835938
    4. ' print' → logprob: -10.256088256835938
    5. '   ' → logprob: -10.381088256835938
    6. '    
' → logprob: -11.256088256835938
    7. '  
' → logprob: -13.506088256835938
    8. '
' → logprob: -13.506088256835938
    9. '<|end|>' → logprob: -14.131088256835938
    10. '``' → logprob: -14.256088256835938

Token 831: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.933173426659778e-05
    2. '
' → logprob: -10.250069618225098
    3. '   ' → logprob: -10.500069618225098
    4. ' print' → logprob: -12.250069618225098
    5. '```' → logprob: -13.500069618225098
    6. '    
' → logprob: -16.00006866455078
    7. '	print' → logprob: -17.12506866455078
    8. '(print' → logprob: -17.50006866455078
    9. '#print' → logprob: -17.62506866455078
    10. '
' → logprob: -18.37506866455078

Token 832: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.438573680294212e-06
    2. '```' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.375005722045898
    4. '
' → logprob: -17.0000057220459
    5. '``' → logprob: -19.1250057220459
    6. '   ' → logprob: -19.2500057220459
    7. '	print' → logprob: -20.5000057220459
    8. '#print' → logprob: -20.5000057220459
    9. '`' → logprob: -20.7500057220459
    10. '    
' → logprob: -20.8750057220459

Token 833: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -14.875
    3. '(answer' → logprob: -18.5
    4. '	ans' → logprob: -19.5
    5. '(f' → logprob: -20.875
    6. '(' → logprob: -21.75
    7. ' (' → logprob: -21.875
    8. 'Ans' → logprob: -22.25
    9. '(abs' → logprob: -22.5
    10. ' ans' → logprob: -22.625

Token 834: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. '())' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.875006675720215
    4. '()' → logprob: -13.875006675720215
    5. '))' → logprob: -15.125006675720215
    6. ')
' → logprob: -15.750006675720215
    7. ')`' → logprob: -15.750006675720215
    8. '`)' → logprob: -17.50000762939453
    9. ')}' → logprob: -18.00000762939453
    10. '})' → logprob: -18.75000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 832
Tokens correctement prédits (1ère position, stricte): 284
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 584
Précision stricte (1ère position): 34.13%
Précision adaptée (1ère position): 37.62%
Précision (top 10): 70.19%
================================================================================
