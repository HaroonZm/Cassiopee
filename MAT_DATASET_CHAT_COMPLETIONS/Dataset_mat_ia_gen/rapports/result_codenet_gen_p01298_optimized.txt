================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    N, L = map(int, line.split())
    if N == 0 and L == 0:
        break
    schedules = [tuple(map(int, sys.stdin.readline().split())) for _ in range(N)]
    # We want to find minimal pump speed P so that tank never empties
    # Tank capacity = L, initially full
    # Water consumption is piecewise constant, no overlap between schedules
    # Between schedules consumption is zero
    # Define function to check if given pump speed is sufficient
    # The tank volume changes by (P - consumption) * duration in each period
    # We track minimum tank volume during the day; it must never go below 0
    
    def can(pump):
        volume = L
        min_volume = L
        prev_t = 0
        for s, t, u in schedules:
            # no consumption between prev_t and s
            # volume increases at rate pump for s - prev_t time
            volume = min(L, volume + (s - prev_t) * pump)
            # consumption period
            volume += (t - s) * (pump - u)
            if volume < 0:
                return False
            prev_t = t
        # after last schedule to end of day
        volume = min(L, volume + (86400 - prev_t) * pump)
        return volume >= 0
    
    left, right = 0.0, 1e7
    for _ in range(100):
        mid = (left + right) / 2
        if can(mid):
            right = mid
        else:
            left = mid
    print("%.6f" % right)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002278838539496064
    2. '  ' → logprob: -6.252278804779053
    3. ' i' → logprob: -8.127279281616211
    4. '```' → logprob: -12.127279281616211
    5. ' ```' → logprob: -12.127279281616211
    6. 'i' → logprob: -12.502279281616211
    7. '_' → logprob: -12.627279281616211
    8. ' ▁' → logprob: -12.627279281616211
    9. ' space' → logprob: -12.752279281616211
    10. ' ' → logprob: -12.877279281616211

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04682071506977081
    2. 'in' → logprob: -3.171820640563965
    3. '[' → logprob: -6.546820640563965
    4. ':' → logprob: -6.671820640563965
    5. ' ' → logprob: -8.296820640563965
    6. '<|end|>' → logprob: -9.421820640563965
    7. '```' → logprob: -9.421820640563965
    8. 'import' → logprob: -9.546820640563965
    9. ' :' → logprob: -9.671820640563965
    10. '.' → logprob: -9.796820640563965

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05505616217851639
    2. 'sys' → logprob: -2.930056095123291
    3. '=sys' → logprob: -9.55505657196045
    4. '(sys' → logprob: -10.43005657196045
    5. '	sys' → logprob: -10.43005657196045
    6. ' iter' → logprob: -11.05505657196045
    7. ' ' → logprob: -11.55505657196045
    8. '```' → logprob: -12.05505657196045
    9. 's' → logprob: -12.68005657196045
    10. ' open' → logprob: -13.55505657196045

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008871365338563919
    2. '.readline' → logprob: -4.758871555328369
    3. '.stdin' → logprob: -9.258871078491211
    4. '.argv' → logprob: -10.133871078491211
    5. '.stdout' → logprob: -10.508871078491211
    6. ' .' → logprob: -10.758871078491211
    7. '.readlines' → logprob: -11.258871078491211
    8. '```' → logprob: -12.133871078491211
    9. '.setdefault' → logprob: -12.383871078491211
    10. '.`' → logprob: -12.508871078491211

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.865583706414327e-05
    2. ':
' → logprob: -10.62509822845459
    3. ' :' → logprob: -11.12509822845459
    4. '):' → logprob: -11.25009822845459
    5. ':**' → logprob: -11.25009822845459
    6. '[:]' → logprob: -11.62509822845459
    7. '>:' → logprob: -11.75009822845459
    8. '':' → logprob: -12.37509822845459
    9. '():' → logprob: -13.37509822845459
    10. '':'' → logprob: -13.37509822845459

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003718127030879259
    2. ' print' → logprob: -6.12871789932251
    3. '    
' → logprob: -6.75371789932251
    4. 'print' → logprob: -8.628718376159668
    5. '    ' → logprob: -9.628718376159668
    6. ' if' → logprob: -10.128718376159668
    7. ' readline' → logprob: -11.003718376159668
    8. '```' → logprob: -11.628718376159668
    9. ' ' → logprob: -11.878718376159668
    10. ' line' → logprob: -12.128718376159668

Token 10: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3255872130393982
    2. 'print' → logprob: -1.325587272644043
    3. ' print' → logprob: -4.450587272644043
    4. '    ' → logprob: -8.700587272644043
    5. 'pass' → logprob: -8.825587272644043
    6. '       ' → logprob: -9.200587272644043
    7. ' pass' → logprob: -9.575587272644043
    8. ' if' → logprob: -10.075587272644043
    9. 'if' → logprob: -11.325587272644043
    10. '```' → logprob: -11.825587272644043

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1510622203350067
    2. '=' → logprob: -2.151062250137329
    3. '   ' → logprob: -4.40106201171875
    4. ' ' → logprob: -5.15106201171875
    5. '.' → logprob: -6.15106201171875
    6. '    ' → logprob: -6.90106201171875
    7. '  ' → logprob: -7.40106201171875
    8. ' +=' → logprob: -7.65106201171875
    9. ' ==' → logprob: -8.52606201171875
    10. ',' → logprob: -8.90106201171875

Token 12: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4025418758392334
    2. 'line' → logprob: -1.4025418758392334
    3. '<|end|>' → logprob: -1.7775418758392334
    4. ' line' → logprob: -2.4025418758392334
    5. ' =' → logprob: -2.5275418758392334
    6. '=' → logprob: -2.9025418758392334
    7. '=line' → logprob: -3.0275418758392334
    8. ')' → logprob: -4.4025421142578125
    9. '  ' → logprob: -4.9025421142578125
    10. 's' → logprob: -5.0275421142578125

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135537803173065
    2. '=' → logprob: -1.313553810119629
    3. ',' → logprob: -8.188553810119629
    4. ' ' → logprob: -12.188553810119629
    5. ')' → logprob: -12.438553810119629
    6. ' ,' → logprob: -13.938553810119629
    7. '=line' → logprob: -13.938553810119629
    8. '=input' → logprob: -14.688553810119629
    9. '=int' → logprob: -14.938553810119629
    10. '```' → logprob: -15.438553810119629

Token 14: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3313753008842468
    2. ' map' → logprob: -1.3313753604888916
    3. 'line' → logprob: -4.4563751220703125
    4. 'map' → logprob: -5.0813751220703125
    5. ' [' → logprob: -9.956375122070312
    6. ' ' → logprob: -10.206375122070312
    7. '[line' → logprob: -10.956375122070312
    8. ' list' → logprob: -11.831375122070312
    9. '[' → logprob: -11.956375122070312
    10. '(line' → logprob: -12.331375122070312

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.34617874026298523
    2. '(' → logprob: -1.4711787700653076
    3. '(str' → logprob: -2.9711787700653076
    4. '(lambda' → logprob: -4.4711785316467285
    5. 'str' → logprob: -9.721179008483887
    6. '(
' → logprob: -9.846179008483887
    7. 'int' → logprob: -9.846179008483887
    8. '[int' → logprob: -10.971179008483887
    9. '<int' → logprob: -11.096179008483887
    10. 'lambda' → logprob: -11.096179008483887

Token 16: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.037546172738075256
    2. ')' → logprob: -3.662546157836914
    3. ',' → logprob: -5.037546157836914
    4. ',line' → logprob: -5.912546157836914
    5. '(' → logprob: -6.537546157836914
    6. ' line' → logprob: -8.162546157836914
    7. 'line' → logprob: -9.662546157836914
    8. '[line' → logprob: -10.162546157836914
    9. '#line' → logprob: -10.162546157836914
    10. '=line' → logprob: -10.537546157836914

Token 17: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4741072654724121
    2. 'line' → logprob: -0.9741072654724121
    3. ')' → logprob: -11.59910774230957
    4. '(line' → logprob: -11.59910774230957
    5. '   ' → logprob: -12.47410774230957
    6. '	line' → logprob: -12.97410774230957
    7. '[line' → logprob: -13.34910774230957
    8. '=line' → logprob: -13.97410774230957
    9. ' ' → logprob: -14.22410774230957
    10. ' readline' → logprob: -14.59910774230957

Token 18: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.36119651794433594
    2. '.split' → logprob: -1.361196517944336
    3. '.readline' → logprob: -3.361196517944336
    4. '.' → logprob: -4.986196517944336
    5. '.rstrip' → logprob: -5.486196517944336
    6. ')' → logprob: -7.486196517944336
    7. '().' → logprob: -7.861196517944336
    8. ' .' → logprob: -9.111196517944336
    9. '.read' → logprob: -10.861196517944336
    10. '.readlines' → logprob: -11.111196517944336

Token 19: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.71999591588974
    2. '())' → logprob: -0.84499591588974
    3. ')' → logprob: -3.0949959754943848
    4. '()' → logprob: -3.9699959754943848
    5. '(' → logprob: -4.469995975494385
    6. '()))' → logprob: -5.844995975494385
    7. '(','' → logprob: -6.094995975494385
    8. '))' → logprob: -6.219995975494385
    9. '')' → logprob: -8.219995498657227
    10. '(',' → logprob: -8.344995498657227

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6716275811195374
    2. '<|end|>' → logprob: -1.7966275215148926
    3. '
' → logprob: -2.2966275215148926
    4. ':' → logprob: -2.4216275215148926
    5. '    
' → logprob: -3.6716275215148926
    6. '\n' → logprob: -3.6716275215148926
    7. ' ' → logprob: -3.7966275215148926
    8. ' if' → logprob: -4.296627521514893
    9. '```' → logprob: -4.921627521514893
    10. ')' → logprob: -4.921627521514893

Token 21: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.180307388305664
    2. ' ' → logprob: -1.430307388305664
    3. ' if' → logprob: -2.180307388305664
    4. '    ' → logprob: -3.430307388305664
    5. 'a' → logprob: -3.555307388305664
    6. 'r' → logprob: -3.555307388305664
    7. 'if' (adapté à ' if') → logprob: -3.805307388305664
    8. '[' → logprob: -3.805307388305664
    9. ':' → logprob: -4.055307388305664
    10. 's' → logprob: -4.055307388305664

Token 22: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.00736382557079196
    2. ' ' → logprob: -5.257363796234131
    3. 'N' → logprob: -6.632363796234131
    4. ' L' → logprob: -7.507363796234131
    5. ' not' → logprob: -8.382364273071289
    6. ' ' → logprob: -11.132364273071289
    7. '  ' → logprob: -12.757364273071289
    8. ' (' → logprob: -13.007364273071289
    9. ' len' → logprob: -13.257364273071289
    10. '   ' → logprob: -13.507364273071289

Token 23: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21945706009864807
    2. '>' → logprob: -2.0944571495056152
    3. ' ==' → logprob: -3.7194571495056152
    4. ' <=' → logprob: -4.219457149505615
    5. ' <' → logprob: -4.594457149505615
    6. ' >=' → logprob: -4.719457149505615
    7. '==' → logprob: -4.969457149505615
    8. ' ' → logprob: -5.594457149505615
    9. '<' → logprob: -6.469457149505615
    10. '>=' → logprob: -7.219457149505615

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484457731246948
    2. '0' → logprob: -1.2234457731246948
    3. '  ' → logprob: -14.973445892333984
    4. '   ' → logprob: -15.348445892333984
    5. ' ' → logprob: -16.035945892333984
    6. '1' → logprob: -16.223445892333984
    7. '=' → logprob: -16.285945892333984
    8. '    ' → logprob: -16.410945892333984
    9. ' N' → logprob: -16.848445892333984
    10. ' L' → logprob: -17.160945892333984

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324605919420719
    2. ' ' → logprob: -3.7732460498809814
    3. '  ' → logprob: -15.523245811462402
    4. '   ' → logprob: -16.27324676513672
    5. '-' → logprob: -16.71074676513672
    6. '```' → logprob: -16.77324676513672
    7. '1' → logprob: -16.96074676513672
    8. '    ' → logprob: -17.27324676513672
    9. ' L' → logprob: -18.14824676513672
    10. ' and' → logprob: -18.14824676513672

Token 26: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0224896389991045
    2. ' and' → logprob: -4.022489547729492
    3. ':
' → logprob: -5.897489547729492
    4. '   ' → logprob: -6.647489547729492
    5. ' :' → logprob: -9.147489547729492
    6. '    ' → logprob: -9.522489547729492
    7. 'and' → logprob: -10.397489547729492
    8. ' or' → logprob: -10.772489547729492
    9. '       ' → logprob: -11.272489547729492
    10. ' ' → logprob: -11.272489547729492

Token 27: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.06197183206677437
    2. 'L' → logprob: -2.81197190284729
    3. ' ' → logprob: -12.436971664428711
    4. ' ' → logprob: -16.18697166442871
    5. '   ' → logprob: -16.81197166442871
    6. '    ' → logprob: -16.93697166442871
    7. '	L' → logprob: -17.06197166442871
    8. '  ' → logprob: -17.93697166442871
    9. '<|end|>' → logprob: -18.18697166442871
    10. '```' → logprob: -19.18697166442871

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014208638109266758
    2. '==' → logprob: -4.264208793640137
    3. ' ' → logprob: -10.889208793640137
    4. ' <=' → logprob: -11.514208793640137
    5. '<|end|>' → logprob: -12.014208793640137
    6. '=' → logprob: -12.764208793640137
    7. ':' → logprob: -13.014208793640137
    8. ' =' → logprob: -13.514208793640137
    9. '  ' → logprob: -13.764208793640137
    10. '0' → logprob: -14.014208793640137

Token 29: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602250337600708
    2. ' ' → logprob: -1.9102250337600708
    3. '  ' → logprob: -14.785224914550781
    4. '   ' → logprob: -15.410224914550781
    5. ' ' → logprob: -16.66022491455078
    6. '۰' → logprob: -17.16022491455078
    7. '    ' → logprob: -18.28522491455078
    8. '<|end|>' → logprob: -18.47272491455078
    9. '```' → logprob: -18.72272491455078
    10. '<|end|>' → logprob: -18.91022491455078

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '  ' → logprob: -15.626703262329102
    4. '۰' → logprob: -16.3767032623291
    5. '   ' → logprob: -16.6892032623291
    6. ' ' → logprob: -17.1267032623291
    7. '-' → logprob: -17.2517032623291
    8. ' -' → logprob: -17.6892032623291
    9. '<|end|>' → logprob: -17.6892032623291
    10. '```' → logprob: -17.9392032623291

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007507836911827326
    2. '       ' → logprob: -5.007507801055908
    3. ':
' → logprob: -7.257507801055908
    4. '   ' → logprob: -9.507508277893066
    5. ' :' → logprob: -12.632508277893066
    6. ':return' → logprob: -12.757508277893066
    7. '    ' → logprob: -13.382508277893066
    8. '      ' → logprob: -14.007508277893066
    9. '.' → logprob: -14.132508277893066
    10. '	break' → logprob: -14.507508277893066

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007665063603781164
    2. ':' → logprob: -7.250766277313232
    3. '   ' → logprob: -10.25076675415039
    4. '\n' → logprob: -12.37576675415039
    5. ':
' → logprob: -12.37576675415039
    6. ' break' → logprob: -13.25076675415039
    7. '     ' → logprob: -13.37576675415039
    8. '	' → logprob: -13.50076675415039
    9. '	break' → logprob: -13.50076675415039
    10. '      ' → logprob: -13.50076675415039

Token 33: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.021773703396320343
    2. '       ' → logprob: -4.271773815155029
    3. 'break' (adapté à ' break') → logprob: -5.521773815155029
    4. '   ' → logprob: -5.646773815155029
    5. '	break' → logprob: -10.021773338317871
    6. '    ' → logprob: -12.646773338317871
    7. '```' → logprob: -13.021773338317871
    8. '_break' → logprob: -13.771773338317871
    9. ' ' → logprob: -14.646773338317871
    10. '\n' → logprob: -15.021773338317871

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010814822278916836
    2. '    
' → logprob: -4.885814666748047
    3. '<|end|>' → logprob: -6.635814666748047
    4. '
' → logprob: -7.510814666748047
    5. '       ' → logprob: -7.760814666748047
    6. '\n' → logprob: -8.635814666748047
    7. '    ' → logprob: -8.760814666748047
    8. ')' → logprob: -8.760814666748047
    9. '```' → logprob: -9.635814666748047
    10. 'print' → logprob: -9.635814666748047

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022672630846500397
    2. '    
' → logprob: -4.147672653198242
    3. '<|end|>' → logprob: -6.022672653198242
    4. '```' → logprob: -6.147672653198242
    5. '
' → logprob: -7.522672653198242
    6. '\n' → logprob: -8.397672653198242
    7. '  
' → logprob: -8.647672653198242
    8. 'print' → logprob: -8.772672653198242
    9. '       ' → logprob: -9.022672653198242
    10. '    ' → logprob: -9.147672653198242

Token 36: ' schedules' (ID: 50216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02863486297428608
    2. '    ' → logprob: -4.028635025024414
    3. 'result' → logprob: -6.278635025024414
    4. '    
' → logprob: -6.653635025024414
    5. ' for' → logprob: -6.653635025024414
    6. '```' → logprob: -7.028635025024414
    7. ' ' → logprob: -7.153635025024414
    8. 'for' → logprob: -7.278635025024414
    9. ' result' → logprob: -7.528635025024414
    10. 'print' → logprob: -7.653635025024414

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0039013654459267855
    2. '=' → logprob: -5.753901481628418
    3. '[' → logprob: -8.003901481628418
    4. '.append' → logprob: -9.253901481628418
    5. '.' → logprob: -9.628901481628418
    6. ' ' → logprob: -9.628901481628418
    7. '[:]' → logprob: -9.753901481628418
    8. '_' → logprob: -10.253901481628418
    9. '=[]' → logprob: -10.878901481628418
    10. '[]' → logprob: -11.628901481628418

Token 38: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.050084955990314484
    2. ' []' → logprob: -3.0500850677490234
    3. '[' → logprob: -6.550085067749023
    4. ' [' → logprob: -10.800085067749023
    5. '[]
' → logprob: -10.800085067749023
    6. '{}' → logprob: -11.300085067749023
    7. '[]

' → logprob: -13.050085067749023
    8. '[]}' → logprob: -13.175085067749023
    9. 'list' → logprob: -13.425085067749023
    10. '[][]' → logprob: -13.800085067749023

Token 39: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14847762882709503
    2. '[]' → logprob: -2.648477554321289
    3. 'tuple' → logprob: -3.023477554321289
    4. ']' → logprob: -4.898477554321289
    5. '(list' → logprob: -6.148477554321289
    6. ' list' → logprob: -6.273477554321289
    7. '()]' → logprob: -6.398477554321289
    8. '[list' → logprob: -6.523477554321289
    9. '[' → logprob: -6.773477554321289
    10. 'map' → logprob: -7.398477554321289

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0025119276251643896
    2. 'map' → logprob: -6.377511978149414
    3. '(int' → logprob: -7.627511978149414
    4. '(' → logprob: -8.252511978149414
    5. '()' → logprob: -10.752511978149414
    6. '(sys' → logprob: -11.252511978149414
    7. ' map' → logprob: -11.877511978149414
    8. 'int' → logprob: -12.002511978149414
    9. '(line' → logprob: -12.002511978149414
    10. '	map' → logprob: -13.502511978149414

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007398230955004692
    2. 'int' → logprob: -7.500740051269531
    3. ',int' → logprob: -9.500740051269531
    4. '<int' → logprob: -9.625740051269531
    5. '[int' → logprob: -11.375740051269531
    6. ']int' → logprob: -11.375740051269531
    7. ')' → logprob: -11.875740051269531
    8. '=int' → logprob: -12.125740051269531
    9. '(' → logprob: -12.250740051269531
    10. '<|end|>' → logprob: -13.625740051269531

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08576136082410812
    2. ',line' → logprob: -2.960761308670044
    3. '(line' → logprob: -3.585761308670044
    4. '(' → logprob: -6.460761547088623
    5. ',input' → logprob: -7.835761547088623
    6. ' ,' → logprob: -8.460761070251465
    7. ')' → logprob: -8.585761070251465
    8. '(),' → logprob: -9.460761070251465
    9. '(sys' → logprob: -10.335761070251465
    10. 'input' → logprob: -10.335761070251465

Token 43: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0666722059249878
    2. 'input' → logprob: -1.3166722059249878
    3. 'line' → logprob: -1.5666722059249878
    4. ' line' → logprob: -1.8166722059249878
    5. ' sys' → logprob: -4.316672325134277
    6. 'sys' → logprob: -5.941672325134277
    7. '))' → logprob: -8.566672325134277
    8. ')' → logprob: -8.691672325134277
    9. '(line' → logprob: -10.691672325134277
    10. '[line' → logprob: -11.066672325134277

Token 44: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.618001053633634e-05
    2. '.readline' → logprob: -11.000025749206543
    3. '.' → logprob: -12.125025749206543
    4. '.stdout' → logprob: -13.250025749206543
    5. 'stdin' → logprob: -14.000025749206543
    6. '.argv' → logprob: -14.250025749206543
    7. '(stdin' → logprob: -14.750025749206543
    8. '.std' → logprob: -15.375025749206543
    9. ' stdin' → logprob: -16.87502670288086
    10. '.stderr' → logprob: -17.12502670288086

Token 45: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.0
    3. '.next' → logprob: -18.125
    4. '.readlines' → logprob: -18.375
    5. ')' → logprob: -18.5
    6. '().' → logprob: -18.875
    7. '[line' → logprob: -19.25
    8. '.stdin' → logprob: -19.625
    9. 'line' → logprob: -20.25
    10. ')))' → logprob: -20.375

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.690834273584187e-05
    2. '()' → logprob: -10.75003719329834
    3. '())' → logprob: -12.25003719329834
    4. '.readline' → logprob: -12.50003719329834
    5. '()))' → logprob: -12.75003719329834
    6. ')' → logprob: -13.25003719329834
    7. ' ().' → logprob: -14.62503719329834
    8. '(' → logprob: -14.87503719329834
    9. '()
' → logprob: -15.50003719329834
    10. '.' → logprob: -16.125036239624023

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023416792973876
    2. 'strip' → logprob: -3.773416757583618
    3. 'rstrip' → logprob: -8.773416519165039
    4. ' split' → logprob: -11.148416519165039
    5. '(split' → logprob: -14.023416519165039
    6. ' strip' → logprob: -14.523416519165039
    7. ')' → logprob: -15.148416519165039
    8. 'spl' → logprob: -15.398416519165039
    9. ' ' → logprob: -15.773416519165039
    10. '.split' → logprob: -16.89841651916504

Token 48: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006326909177005291
    2. '))' → logprob: -5.256326675415039
    3. '())' → logprob: -7.631326675415039
    4. '()' → logprob: -7.631326675415039
    5. '()))
' → logprob: -9.756326675415039
    6. '(' → logprob: -10.256326675415039
    7. '())))' → logprob: -11.256326675415039
    8. '()),' → logprob: -12.506326675415039
    9. ')' → logprob: -13.006326675415039
    10. '()))

' → logprob: -13.381326675415039

Token 49: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4899032413959503
    2. ' for' → logprob: -1.489903211593628
    3. '   ' → logprob: -2.364903211593628
    4. ')]' → logprob: -3.239903211593628
    5. ']' → logprob: -4.239903450012207
    6. 'for' → logprob: -4.739903450012207
    7. '()' → logprob: -6.489903450012207
    8. ',' → logprob: -6.739903450012207
    9. '),' → logprob: -7.364903450012207
    10. '       ' → logprob: -7.364903450012207

Token 50: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20580783486366272
    2. '_' → logprob: -1.9558078050613403
    3. ' _' → logprob: -3.20580792427063
    4. 'range' → logprob: -5.830807685852051
    5. ' ' → logprob: -7.080807685852051
    6. '_range' → logprob: -8.83080768585205
    7. ' xrange' → logprob: -9.83080768585205
    8. ' i' → logprob: -10.45580768585205
    9. '	range' → logprob: -11.08080768585205
    10. '(range' → logprob: -12.20580768585205

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10720314830541611
    2. 'in' → logprob: -2.982203245162964
    3. 'range' → logprob: -3.232203245162964
    4. ' range' → logprob: -4.482203006744385
    5. ' ' → logprob: -9.357203483581543
    6. '(range' → logprob: -10.732203483581543
    7. 's' → logprob: -10.982203483581543
    8. '  ' → logprob: -11.107203483581543
    9. '_' → logprob: -11.357203483581543
    10. '	range' → logprob: -11.482203483581543

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048602137714624405
    2. ' range' → logprob: -3.0486021041870117
    3. ' ' → logprob: -12.048602104187012
    4. '(range' → logprob: -12.673602104187012
    5. '	range' → logprob: -13.048602104187012
    6. '  ' → logprob: -14.048602104187012
    7. '   ' → logprob: -14.173602104187012
    8. ')' → logprob: -14.423602104187012
    9. '[' → logprob: -14.548602104187012
    10. 'rang' → logprob: -15.548602104187012

Token 53: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007700824644416571
    2. '(' → logprob: -7.250770092010498
    3. '(L' → logprob: -10.00076961517334
    4. ' (' → logprob: -11.62576961517334
    5. 'N' → logprob: -12.87576961517334
    6. '(n' → logprob: -13.37576961517334
    7. '(
' → logprob: -14.50076961517334
    8. '(s' → logprob: -15.50076961517334
    9. ')' → logprob: -15.50076961517334
    10. ' N' → logprob: -15.62576961517334

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0036235929001122713
    2. ')' → logprob: -5.7536234855651855
    3. ']' → logprob: -7.7536234855651855
    4. '   ' → logprob: -12.378623962402344
    5. ' )' → logprob: -12.753623962402344
    6. ')])' → logprob: -13.003623962402344
    7. '))' → logprob: -13.378623962402344
    8. ')],' → logprob: -13.753623962402344
    9. ')]
' → logprob: -14.003623962402344
    10. ')}' → logprob: -14.253623962402344

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009837902151048183
    2. '
' → logprob: -5.509838104248047
    3. '    
' → logprob: -6.134838104248047
    4. '```' → logprob: -6.634838104248047
    5. 's' → logprob: -7.009838104248047
    6. '<|end|>' → logprob: -7.259838104248047
    7. ' schedules' → logprob: -8.259838104248047
    8. '[' → logprob: -9.509838104248047
    9. ')' → logprob: -10.009838104248047
    10. '#' → logprob: -10.509838104248047

Token 56: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7246255278587341
    2. '   ' → logprob: -0.8496255278587341
    3. ' schedules' → logprob: -3.099625587463379
    4. '    
' → logprob: -3.724625587463379
    5. '```' → logprob: -5.599625587463379
    6. '    ' → logprob: -6.099625587463379
    7. ' 
' → logprob: -6.599625587463379
    8. ' ' → logprob: -6.724625587463379
    9. '
' → logprob: -6.974625587463379
    10. '  ' → logprob: -7.349625587463379

Token 57: ' We' (ID: 1416)
  Prédit: ' schedules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' schedules' → logprob: -0.05288916826248169
    2. 's' → logprob: -3.177889108657837
    3. ' sorted' → logprob: -5.802889347076416
    4. '   ' → logprob: -7.240389347076416
    5. '```' → logprob: -7.240389347076416
    6. ' #' → logprob: -7.302889347076416
    7. 'sorted' → logprob: -7.490389347076416
    8. '#' → logprob: -7.802889347076416
    9. ' for' → logprob: -7.990389347076416
    10. ' s' → logprob: -8.240388870239258

Token 58: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5506762862205505
    2. ' can' → logprob: -2.0506763458251953
    3. ' want' → logprob: -2.3006763458251953
    4. 'need' → logprob: -2.8006763458251953
    5. ''ll' → logprob: -3.8006763458251953
    6. ' should' → logprob: -3.9256763458251953
    7. '   ' → logprob: -4.050676345825195
    8. 're' → logprob: -4.300676345825195
    9. ''re' → logprob: -4.925676345825195
    10. 'can' → logprob: -5.300676345825195

Token 59: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14366638660430908
    2. 'to' → logprob: -2.0186662673950195
    3. '   ' → logprob: -8.01866626739502
    4. ' schedules' → logprob: -8.26866626739502
    5. 's' → logprob: -8.64366626739502
    6. 't' → logprob: -9.64366626739502
    7. '    ' → logprob: -10.14366626739502
    8. ' a' → logprob: -10.64366626739502
    9. '<|end|>' → logprob: -10.89366626739502
    10. ' the' → logprob: -11.01866626739502

Token 60: ' find' (ID: 1646)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.9552097916603088
    2. 'sort' → logprob: -1.080209732055664
    3. ' find' → logprob: -2.205209732055664
    4. 'find' → logprob: -2.580209732055664
    5. 'maximize' → logprob: -3.580209732055664
    6. ' schedules' → logprob: -3.955209732055664
    7. ' schedule' → logprob: -4.830209732055664
    8. 's' → logprob: -4.955209732055664
    9. 'schedule' → logprob: -4.955209732055664
    10. 'select' → logprob: -5.705209732055664

Token 61: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.41779136657714844
    2. 'the' → logprob: -1.4177913665771484
    3. ' a' → logprob: -3.0427913665771484
    4. ' an' → logprob: -3.7927913665771484
    5. 'a' → logprob: -4.292791366577148
    6. ' schedules' → logprob: -4.792791366577148
    7. '<|end|>' → logprob: -6.167791366577148
    8. ' all' → logprob: -6.667791366577148
    9. 'max' → logprob: -7.167791366577148
    10. 'all' → logprob: -7.417791366577148

Token 62: ' pump' (ID: 17128)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.713122844696045
    2. ' cost' → logprob: -1.963122844696045
    3. ' number' → logprob: -2.713122844696045
    4. 'cost' → logprob: -2.838122844696045
    5. ' total' → logprob: -3.088122844696045
    6. ' time' → logprob: -3.213122844696045
    7. ' ' → logprob: -3.338122844696045
    8. ' spanning' → logprob: -3.463122844696045
    9. ' _' → logprob: -3.588122844696045
    10. ' a' → logprob: -3.838122844696045

Token 63: ' speed' (ID: 7733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04708413779735565
    2. '_count' → logprob: -4.297084331512451
    3. '_time' → logprob: -5.547084331512451
    4. '_start' → logprob: -5.672084331512451
    5. '_interval' → logprob: -6.047084331512451
    6. '_times' → logprob: -6.047084331512451
    7. 'ed' → logprob: -6.047084331512451
    8. 'ing' → logprob: -6.047084331512451
    9. '_usage' → logprob: -6.172084331512451
    10. '_' → logprob: -6.672084331512451

Token 64: ' P' (ID: 398)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05911605805158615
    2. '<|end|>' → logprob: -3.8091161251068115
    3. ' s' → logprob: -5.184115886688232
    4. ':' → logprob: -5.434115886688232
    5. '=' → logprob: -5.934115886688232
    6. ' =' → logprob: -6.059115886688232
    7. '(s' → logprob: -6.059115886688232
    8. '(' → logprob: -6.059115886688232
    9. ',' → logprob: -6.184115886688232
    10. ' ,' → logprob: -6.184115886688232

Token 65: ' so' (ID: 813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3994361162185669
    2. ' such' → logprob: -2.1494359970092773
    3. ' =' → logprob: -2.3994359970092773
    4. '=' → logprob: -2.7744359970092773
    5. ' that' → logprob: -3.7744359970092773
    6. '<|end|>' → logprob: -4.524435997009277
    7. ',' → logprob: -5.024435997009277
    8. ':' → logprob: -5.649435997009277
    9. ' for' → logprob: -6.024435997009277
    10. '.' → logprob: -6.149435997009277

Token 66: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.10050846636295319
    2. 'that' → logprob: -2.350508451461792
    3. '   ' → logprob: -8.475508689880371
    4. '<|end|>' → logprob: -10.725508689880371
    5. ' the' → logprob: -11.225508689880371
    6. ' ' → logprob: -11.350508689880371
    7. '_that' → logprob: -11.350508689880371
    8. '	that' → logprob: -11.850508689880371
    9. 'def' → logprob: -12.475508689880371
    10. ' all' → logprob: -12.850508689880371

Token 67: ' tank' (ID: 16109)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3352232277393341
    2. 'all' → logprob: -1.7102231979370117
    3. ' the' → logprob: -3.0852231979370117
    4. 'the' → logprob: -4.085223197937012
    5. ' we' → logprob: -4.335223197937012
    6. ' schedules' → logprob: -5.085223197937012
    7. 'we' → logprob: -5.460223197937012
    8. ' for' → logprob: -6.085223197937012
    9. ' there' → logprob: -6.210223197937012
    10. ' sum' → logprob: -6.585223197937012

Token 68: ' never' (ID: 3779)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.23547956347465515
    2. ' is' → logprob: -2.4854795932769775
    3. ' fills' → logprob: -3.9854795932769775
    4. 's' → logprob: -4.235479354858398
    5. ' capacity' → logprob: -4.235479354858398
    6. '_capacity' → logprob: -4.485479354858398
    7. ' ' → logprob: -5.110479354858398
    8. 'capacity' → logprob: -5.235479354858398
    9. '```' → logprob: -5.485479354858398
    10. '_fill' → logprob: -5.485479354858398

Token 69: ' empt' (ID: 97407)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -1.6297674179077148
    2. 'empt' → logprob: -1.8797674179077148
    3. 'over' → logprob: -2.504767417907715
    4. ' is' → logprob: -2.754767417907715
    5. 'runs' → logprob: -2.754767417907715
    6. '```' → logprob: -3.004767417907715
    7. ' fills' → logprob: -3.129767417907715
    8. ' becomes' → logprob: -3.379767417907715
    9. 'is' → logprob: -3.379767417907715
    10. ' under' → logprob: -3.629767417907715

Token 70: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0015228374395519495
    2. 's' → logprob: -8.3765230178833
    3. 'y' → logprob: -8.3765230178833
    4. 'ishes' → logprob: -8.6265230178833
    5. '```' → logprob: -8.8765230178833
    6. 'ieds' → logprob: -9.1265230178833
    7. 'ied' → logprob: -9.2515230178833
    8. 'i' → logprob: -9.3765230178833
    9. 'ieves' → logprob: -9.6265230178833
    10. 'is' → logprob: -9.7515230178833

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18529927730560303
    2. ' ' → logprob: -2.6852993965148926
    3. '<|end|>' → logprob: -3.1852993965148926
    4. ':' → logprob: -4.560299396514893
    5. '    
' → logprob: -4.935299396514893
    6. ',' → logprob: -5.060299396514893
    7. '    ' → logprob: -5.060299396514893
    8. '  ' → logprob: -5.185299396514893
    9. '.' → logprob: -5.185299396514893
    10. 'def' → logprob: -5.685299396514893

Token 73: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7576552033424377
    2. '<|end|>' → logprob: -1.632655143737793
    3. '\' → logprob: -2.632655143737793
    4. '\n' → logprob: -2.757655143737793
    5. ':' → logprob: -3.132655143737793
    6. 'def' → logprob: -3.257655143737793
    7. '```' → logprob: -3.757655143737793
    8. ' 
' → logprob: -3.882655143737793
    9. '#' (adapté à ' #') → logprob: -4.757655143737793
    10. '.' → logprob: -5.007655143737793

Token 74: ' Tank' (ID: 46198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' capacity' (ID: 12241)
  Prédit: '_capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.16963845491409302
    2. '_level' → logprob: -2.4196383953094482
    3. '_volume' → logprob: -3.6696383953094482
    4. ' =' → logprob: -4.294638633728027
    5. '_levels' → logprob: -5.294638633728027
    6. '=' → logprob: -5.419638633728027
    7. '_' → logprob: -5.419638633728027
    8. 'capacity' → logprob: -5.544638633728027
    9. '_content' → logprob: -6.419638633728027
    10. 'level' → logprob: -6.669638633728027

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15527966618537903
    2. '=' → logprob: -2.1552796363830566
    3. ',' → logprob: -3.9052796363830566
    4. ' is' → logprob: -5.530279636383057
    5. ' ' → logprob: -6.905279636383057
    6. 'C' → logprob: -7.280279636383057
    7. ' C' → logprob: -7.530279636383057
    8. ' ,' → logprob: -8.030280113220215
    9. ' T' → logprob: -8.405280113220215
    10. ':' → logprob: -8.780280113220215

Token 77: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.08962400257587433
    2. 'L' → logprob: -2.5896239280700684
    3. ' ' → logprob: -4.714623928070068
    4. '100' → logprob: -7.214623928070068
    5. ' max' → logprob: -7.964623928070068
    6. ' ' → logprob: -9.089624404907227
    7. '0' → logprob: -9.589624404907227
    8. '  ' → logprob: -9.839624404907227
    9. 'max' → logprob: -9.839624404907227
    10. '    ' → logprob: -9.964624404907227

Token 78: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1811312586069107
    2. '<|end|>' → logprob: -2.181131362915039
    3. '<|end|>' → logprob: -4.556131362915039
    4. ' 
' → logprob: -4.806131362915039
    5. '    
' → logprob: -5.056131362915039
    6. '\n' → logprob: -5.556131362915039
    7. ' ' → logprob: -5.806131362915039
    8. '' → logprob: -5.931131362915039
    9. 'def' → logprob: -6.306131362915039
    10. '#' → logprob: -6.306131362915039

Token 79: ' initially' (ID: 25998)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6883676648139954
    2. ' tank' → logprob: -2.4383676052093506
    3. ' initial' → logprob: -2.6883676052093506
    4. 'current' → logprob: -2.9383676052093506
    5. ' pump' → logprob: -3.3133676052093506
    6. ' capacity' → logprob: -3.5633676052093506
    7. 'tank' → logprob: -3.8133676052093506
    8. 'pump' → logprob: -4.06336784362793
    9. ' flow' → logprob: -4.56336784362793
    10. ' volume' → logprob: -4.56336784362793

Token 80: ' full' (ID: 3149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2269492149353027
    2. 'tank' → logprob: -1.6019492149353027
    3. ' L' → logprob: -1.8519492149353027
    4. 'L' → logprob: -1.8519492149353027
    5. ' tank' → logprob: -3.1019492149353027
    6. 'capacity' → logprob: -3.3519492149353027
    7. ' ' → logprob: -3.4769492149353027
    8. 'current' → logprob: -3.8519492149353027
    9. ' current' → logprob: -4.226949214935303
    10. 'pump' → logprob: -4.601949214935303

Token 81: '
' (ID: 198)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7837234735488892
    2. 'left' → logprob: -2.0337233543395996
    3. 'def' → logprob: -2.5337233543395996
    4. '   ' → logprob: -2.7837233543395996
    5. ' low' → logprob: -3.1587233543395996
    6. ' left' → logprob: -3.4087233543395996
    7. 'pump' → logprob: -3.4087233543395996
    8. '
' → logprob: -3.6587233543395996
    9. 'dp' → logprob: -4.2837233543396
    10. ' lo' → logprob: -4.2837233543396

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7264465093612671
    2. '   ' → logprob: -1.226446509361267
    3. '    
' → logprob: -2.1014466285705566
    4. ' 
' → logprob: -3.2264466285705566
    5. '<|end|>' → logprob: -5.101446628570557
    6. '\n' → logprob: -5.226446628570557
    7. '   
' → logprob: -5.351446628570557
    8. '  
' → logprob: -5.351446628570557
    9. 'def' → logprob: -5.601446628570557
    10. '     
' → logprob: -5.601446628570557

Token 83: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3689807653427124
    2. 'low' → logprob: -1.7439807653427124
    3. 'pump' → logprob: -2.243980884552002
    4. 'def' → logprob: -2.493980884552002
    5. 'dp' → logprob: -3.118980884552002
    6. 'left' → logprob: -3.243980884552002
    7. '    
' → logprob: -3.243980884552002
    8. 'current' → logprob: -3.243980884552002
    9. '   ' → logprob: -3.493980884552002
    10. ' pump' → logprob: -3.618980884552002

Token 84: ' Water' (ID: 12303)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.29982316493988037
    2. 'left' → logprob: -2.29982328414917
    3. 'lo' → logprob: -3.29982328414917
    4. 'def' → logprob: -3.42482328414917
    5. ' lo' → logprob: -3.67482328414917
    6. ' low' → logprob: -3.79982328414917
    7. 'pump' → logprob: -4.54982328414917
    8. ' left' → logprob: -5.29982328414917
    9. 'min' → logprob: -5.54982328414917
    10. 'dp' → logprob: -6.17482328414917

Token 85: ' consumption' (ID: 23818)
  Prédit: ' flows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flows' → logprob: -1.626765251159668
    2. ' flowing' → logprob: -2.001765251159668
    3. '=' → logprob: -2.126765251159668
    4. ' consumption' → logprob: -2.501765251159668
    5. 'flows' → logprob: -3.126765251159668
    6. ' =' → logprob: -3.126765251159668
    7. ' flow' → logprob: -3.251765251159668
    8. '_levels' → logprob: -3.501765251159668
    9. ' is' → logprob: -3.626765251159668
    10. 'in' → logprob: -3.751765251159668

Token 86: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5566916465759277
    2. '=' → logprob: -1.0566916465759277
    3. 'rate' → logprob: -3.5566916465759277
    4. '_rate' → logprob: -4.431691646575928
    5. ' rate' → logprob: -4.681691646575928
    6. ' rates' → logprob: -4.681691646575928
    7. ' is' → logprob: -5.306691646575928
    8. 'rates' → logprob: -5.431691646575928
    9. ' ' → logprob: -6.056691646575928
    10. ' per' → logprob: -6.181691646575928

Token 87: ' piece' (ID: 9047)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1965970993041992
    2. ' schedules' → logprob: -1.8215970993041992
    3. '1' → logprob: -2.071597099304199
    4. '0' → logprob: -2.196597099304199
    5. ' L' → logprob: -3.071597099304199
    6. 's' → logprob: -3.321597099304199
    7. ' the' → logprob: -3.821597099304199
    8. ' s' → logprob: -4.196597099304199
    9. ' cumulative' → logprob: -4.321597099304199
    10. ' a' → logprob: -4.446597099304199

Token 88: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.04285392910242081
    2. '-wise' → logprob: -3.667853832244873
    3. '-' → logprob: -4.167853832244873
    4. 'w' → logprob: -7.792853832244873
    5. ' -' → logprob: -8.292854309082031
    6. ' wise' → logprob: -8.667854309082031
    7. '   ' → logprob: -10.417854309082031
    8. 'wis' → logprob: -10.792854309082031
    9. ' ' → logprob: -11.792854309082031
    10. '    ' → logprob: -12.042854309082031

Token 89: ' constant' (ID: 9594)
  Prédit: 'wise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.1734745353460312
    2. 'linear' → logprob: -2.4234745502471924
    3. ' linear' → logprob: -3.7984745502471924
    4. '-wise' → logprob: -4.048474311828613
    5. '-' → logprob: -4.548474311828613
    6. 'def' → logprob: -4.798474311828613
    7. '-linear' → logprob: -5.798474311828613
    8. 'w' → logprob: -6.298474311828613
    9. ' wise' → logprob: -6.673474311828613
    10. ' constant' → logprob: -7.485974311828613

Token 90: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2602875232696533
    2. ',' → logprob: -1.5102875232696533
    3. '.' → logprob: -1.8852875232696533
    4. '<|end|>' → logprob: -2.6352875232696533
    5. ':' → logprob: -2.8852875232696533
    6. ' ' → logprob: -3.0102875232696533
    7. '#' → logprob: -3.6352875232696533
    8. ' ,' → logprob: -3.8852875232696533
    9. '   ' → logprob: -4.010287284851074
    10. 'def' → logprob: -4.510287284851074

Token 91: ' no' (ID: 860)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.46908751130104065
    2. ' with' → logprob: -2.469087600708008
    3. ' and' → logprob: -2.719087600708008
    4. ' starting' → logprob: -3.219087600708008
    5. ' but' → logprob: -3.344087600708008
    6. ' ' → logprob: -3.969087600708008
    7. ' intervals' → logprob: -4.094087600708008
    8. '   ' → logprob: -4.219087600708008
    9. ',' → logprob: -4.219087600708008
    10. '    ' → logprob: -5.094087600708008

Token 92: ' overlap' (ID: 56631)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' more' → logprob: -1.4404233694076538
    2. 't' → logprob: -1.5654233694076538
    3. ' overflow' → logprob: -1.8154233694076538
    4. 'w' → logprob: -2.4404234886169434
    5. ' consumption' → logprob: -3.3154234886169434
    6. 'overflow' → logprob: -3.4404234886169434
    7. 'd' → logprob: -3.6904234886169434
    8. 'more' → logprob: -3.6904234886169434
    9. 's' → logprob: -4.315423488616943
    10. '<|end|>' → logprob: -4.440423488616943

Token 93: ' between' (ID: 2870)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20640365779399872
    2. '<|end|>' → logprob: -3.0814037322998047
    3. '#' → logprob: -3.7064037322998047
    4. 'def' → logprob: -3.8314037322998047
    5. ',' → logprob: -4.206403732299805
    6. ':' → logprob: -4.206403732299805
    7. '.' → logprob: -4.706403732299805
    8. '   ' → logprob: -4.956403732299805
    9. '\n' → logprob: -4.956403732299805
    10. '

' → logprob: -5.456403732299805

Token 94: ' schedules' (ID: 50216)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5068269968032837
    2. ' intervals' → logprob: -1.1318269968032837
    3. 's' → logprob: -4.381826877593994
    4. ' consumption' → logprob: -4.381826877593994
    5. 'tasks' → logprob: -4.631826877593994
    6. ' schedules' → logprob: -4.881826877593994
    7. 'time' → logprob: -5.256826877593994
    8. 'events' → logprob: -5.631826877593994
    9. ' the' → logprob: -5.756826877593994
    10. 'the' → logprob: -6.131826877593994

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11290674656629562
    2. '<|end|>' → logprob: -3.3629066944122314
    3. '   ' → logprob: -3.8629066944122314
    4. 'def' → logprob: -4.6129069328308105
    5. '    
' → logprob: -4.7379069328308105
    6. '\n' → logprob: -4.8629069328308105
    7. '

' → logprob: -5.2379069328308105
    8. '#' → logprob: -5.4879069328308105
    9. '  
' → logprob: -5.8629069328308105
    10. ' 
' → logprob: -6.6129069328308105

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2962580621242523
    2. '   ' → logprob: -1.5462580919265747
    3. 'def' → logprob: -4.296257972717285
    4. '    
' → logprob: -4.796257972717285
    5. '#' → logprob: -5.671257972717285
    6. '\n' → logprob: -5.671257972717285
    7. 'P' → logprob: -6.421257972717285
    8. ' 
' → logprob: -6.546257972717285
    9. '<|end|>' → logprob: -6.796257972717285
    10. '\' → logprob: -7.171257972717285

Token 97: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.96010822057724
    2. 'low' → logprob: -1.4601082801818848
    3. '
' → logprob: -1.8351082801818848
    4. 'left' → logprob: -2.2101082801818848
    5. ' low' → logprob: -3.8351082801818848
    6. ' left' → logprob: -3.9601082801818848
    7. ' lo' → logprob: -4.210108280181885
    8. '   ' → logprob: -4.210108280181885
    9. '#' (adapté à ' #') → logprob: -5.210108280181885
    10. 'import' → logprob: -5.210108280181885

Token 98: ' Between' (ID: 43355)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.9943681359291077
    2. 'def' → logprob: -1.369368076324463
    3. 'left' → logprob: -1.619368076324463
    4. ' lo' → logprob: -2.744368076324463
    5. ' left' → logprob: -3.119368076324463
    6. ' low' → logprob: -3.244368076324463
    7. 'lo' → logprob: -4.244368076324463
    8. '   ' → logprob: -5.619368076324463
    9. 'import' → logprob: -5.744368076324463
    10. ' def' → logprob: -6.244368076324463

Token 99: ' schedules' (ID: 50216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2379336655139923
    2. ' schedules' → logprob: -2.11293363571167
    3. ' intervals' → logprob: -3.86293363571167
    4. 'interval' → logprob: -4.36293363571167
    5. 'the' → logprob: -4.36293363571167
    6. 'schedule' → logprob: -4.73793363571167
    7. ' the' → logprob: -4.86293363571167
    8. 'times' → logprob: -5.11293363571167
    9. '0' → logprob: -6.11293363571167
    10. 'events' → logprob: -6.61293363571167

Token 100: ' consumption' (ID: 23818)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0664592757821083
    2. ' ,' → logprob: -2.8164591789245605
    3. '<|end|>' → logprob: -6.8164591789245605
    4. ' the' → logprob: -6.9414591789245605
    5. ' ' → logprob: -7.1914591789245605
    6. ' and' → logprob: -8.191459655761719
    7. ':' → logprob: -8.941459655761719
    8. '.' → logprob: -8.941459655761719
    9. ',
' → logprob: -9.066459655761719
    10. '#' → logprob: -9.066459655761719

Token 101: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.316444456577301
    2. ',' → logprob: -2.3164443969726562
    3. '=' → logprob: -2.8164443969726562
    4. ' =' → logprob: -3.1914443969726562
    5. ' ' → logprob: -3.9414443969726562
    6. 's' → logprob: -4.191444396972656
    7. ' ,' → logprob: -4.566444396972656
    8. 'is' → logprob: -5.691444396972656
    9. ' occurs' → logprob: -5.691444396972656
    10. ' remains' → logprob: -6.066444396972656

Token 102: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05206488072872162
    2. ' ' → logprob: -3.052064895629883
    3. ' zero' → logprob: -5.802064895629883
    4. 'zero' → logprob: -7.927064895629883
    5. '   ' → logprob: -10.302064895629883
    6. 'always' → logprob: -11.802064895629883
    7. ' always' → logprob: -11.864564895629883
    8. '  ' → logprob: -12.052064895629883
    9. '```' → logprob: -12.114564895629883
    10. ' constant' → logprob: -12.489564895629883

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21378597617149353
    2. '   ' → logprob: -1.838786005973816
    3. 'def' → logprob: -4.3387861251831055
    4. '    
' → logprob: -4.4637861251831055
    5. '

' → logprob: -6.5887861251831055
    6. '\n' → logprob: -6.7137861251831055
    7. 'import' → logprob: -7.0887861251831055
    8. '<|end|>' → logprob: -7.2137861251831055
    9. '#' → logprob: -7.4637861251831055
    10. '  
' → logprob: -7.5887861251831055

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38078728318214417
    2. '
' → logprob: -1.2557872533798218
    3. 'def' → logprob: -4.255787372589111
    4. '    
' → logprob: -4.505787372589111
    5. '

' → logprob: -6.630787372589111
    6. 'import' → logprob: -7.380787372589111
    7. '  
' → logprob: -7.505787372589111
    8. 'from' → logprob: -7.755787372589111
    9. '    ' → logprob: -8.130786895751953
    10. '\n' → logprob: -8.255786895751953

Token 105: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5877469182014465
    2. '   ' → logprob: -1.0877468585968018
    3. 'def' → logprob: -2.7127468585968018
    4. '    
' → logprob: -4.212747097015381
    5. ' 
' → logprob: -5.587747097015381
    6. '#' (adapté à ' #') → logprob: -5.712747097015381
    7. 'import' → logprob: -6.087747097015381
    8. ' def' → logprob: -6.087747097015381
    9. '\n' → logprob: -6.212747097015381
    10. '  
' → logprob: -6.462747097015381

Token 106: ' Define' (ID: 38966)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5758160352706909
    2. 'def' → logprob: -1.575816035270691
    3. 'left' → logprob: -1.700816035270691
    4. 'lo' → logprob: -4.2008161544799805
    5. ' lo' → logprob: -4.4508161544799805
    6. ' low' → logprob: -4.7008161544799805
    7. ' left' → logprob: -4.9508161544799805
    8. 'import' → logprob: -6.5758161544799805
    9. '   ' → logprob: -6.9508161544799805
    10. '
' → logprob: -7.7008161544799805

Token 107: ' function' (ID: 1114)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0553054809570312
    2. ' a' → logprob: -1.3053054809570312
    3. 'def' → logprob: -1.3053054809570312
    4. ' low' → logprob: -3.5553054809570312
    5. ' consumption' → logprob: -3.5553054809570312
    6. 'low' → logprob: -4.930305480957031
    7. ' max' → logprob: -5.055305480957031
    8. ' P' → logprob: -5.305305480957031
    9. ' function' → logprob: -6.055305480957031
    10. ' min' → logprob: -6.055305480957031

Token 108: ' to' (ID: 316)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4530767500400543
    2. 'def' → logprob: -1.078076720237732
    3. '<|end|>' → logprob: -4.5780768394470215
    4. 's' → logprob: -4.9530768394470215
    5. ' ' → logprob: -6.4530768394470215
    6. ' calculate' → logprob: -7.4530768394470215
    7. ' s' → logprob: -7.7030768394470215
    8. ' to' → logprob: -7.8280768394470215
    9. ' f' → logprob: -7.8280768394470215
    10. '(' → logprob: -7.9530768394470215

Token 109: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4027397334575653
    2. ' check' → logprob: -1.2777397632598877
    3. 'def' → logprob: -3.2777397632598877
    4. 'test' → logprob: -5.527739524841309
    5. 'simulate' → logprob: -6.027739524841309
    6. ' test' → logprob: -6.152739524841309
    7. 'calculate' → logprob: -6.152739524841309
    8. 'find' → logprob: -7.027739524841309
    9. 'validate' → logprob: -7.152739524841309
    10. 'evaluate' → logprob: -7.277739524841309

Token 110: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12278064340353012
    2. ' def' → logprob: -2.3727805614471436
    3. 'def' → logprob: -4.247780799865723
    4. ' whether' → logprob: -5.997780799865723
    5. ' for' → logprob: -7.372780799865723
    6. ' ' → logprob: -7.497780799865723
    7. '    ' → logprob: -7.497780799865723
    8. '   ' → logprob: -7.622780799865723
    9. 'if' → logprob: -7.622780799865723
    10. ' a' → logprob: -7.872780799865723

Token 111: ' given' (ID: 4335)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.9463151097297668
    2. ' a' → logprob: -1.696315050125122
    3. ' given' → logprob: -1.946315050125122
    4. 'P' → logprob: -2.446315050125122
    5. ' pump' → logprob: -2.571315050125122
    6. 'pump' → logprob: -3.821315050125122
    7. 'tank' → logprob: -4.071315288543701
    8. ' possible' → logprob: -4.071315288543701
    9. ' tank' → logprob: -4.571315288543701
    10. ' the' → logprob: -4.571315288543701

Token 112: ' pump' (ID: 17128)
  Prédit: ' pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -0.2194874882698059
    2. ' P' → logprob: -1.7194874286651611
    3. 'pump' → logprob: -4.71948766708374
    4. 'P' → logprob: -5.21948766708374
    5. ' speed' → logprob: -6.84448766708374
    6. '_' → logprob: -7.71948766708374
    7. ' a' → logprob: -7.96948766708374
    8. ' ' → logprob: -7.96948766708374
    9. ' pum' → logprob: -8.094487190246582
    10. ' p' → logprob: -8.719487190246582

Token 113: ' speed' (ID: 7733)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.26094144582748413
    2. ' speed' → logprob: -1.635941505432129
    3. 'speed' → logprob: -3.635941505432129
    4. '_' → logprob: -5.010941505432129
    5. '_rate' → logprob: -8.135941505432129
    6. ' _' → logprob: -8.260941505432129
    7. '	speed' → logprob: -8.385941505432129
    8. ' ' → logprob: -8.510941505432129
    9. '   ' → logprob: -8.760941505432129
    10. '_velocity' → logprob: -9.510941505432129

Token 114: ' is' (ID: 382)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.10905391722917557
    2. 'P' → logprob: -2.35905385017395
    3. ' is' → logprob: -5.109054088592529
    4. ' ' → logprob: -6.734054088592529
    5. ' p' → logprob: -7.609054088592529
    6. 'p' → logprob: -8.359053611755371
    7. ',' → logprob: -8.859053611755371
    8. '(' → logprob: -9.359053611755371
    9. ' can' → logprob: -9.484053611755371
    10. '   ' → logprob: -9.484053611755371

Token 115: ' sufficient' (ID: 21920)
  Prédit: ' enough'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enough' → logprob: -1.0975761413574219
    2. ' sufficient' → logprob: -1.3475761413574219
    3. ' feasible' → logprob: -1.7225761413574219
    4. 'en' → logprob: -2.097576141357422
    5. 's' → logprob: -2.472576141357422
    6. ' valid' → logprob: -5.222576141357422
    7. ' possible' → logprob: -5.472576141357422
    8. 'fe' → logprob: -5.722576141357422
    9. 'possible' → logprob: -5.847576141357422
    10. '_en' → logprob: -6.847576141357422

Token 116: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.268485426902771
    2. '   ' → logprob: -1.893485426902771
    3. '
' → logprob: -2.6434855461120605
    4. '    
' → logprob: -4.5184855461120605
    5. ' def' → logprob: -6.7684855461120605
    6. '\' → logprob: -7.3934855461120605
    7. '\n' → logprob: -8.518485069274902
    8. '```' → logprob: -8.518485069274902
    9. '

' → logprob: -8.643485069274902
    10. ' 
' → logprob: -9.143485069274902

Token 117: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06085547059774399
    2. '
' → logprob: -2.9358553886413574
    3. '   ' → logprob: -5.685855388641357
    4. '    
' → logprob: -6.310855388641357
    5. ' def' → logprob: -7.935855388641357
    6. '

' → logprob: -9.060855865478516
    7. ' 
' → logprob: -9.560855865478516
    8. '\' → logprob: -10.185855865478516
    9. '  
' → logprob: -10.310855865478516
    10. '```' → logprob: -10.310855865478516

Token 118: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3893814980983734
    2. '
' → logprob: -1.1393815279006958
    3. '    
' → logprob: -6.889381408691406
    4. ' def' → logprob: -7.514381408691406
    5. '

' → logprob: -7.764381408691406
    6. '   ' → logprob: -8.514381408691406
    7. ' 
' → logprob: -9.389381408691406
    8. '\' → logprob: -9.639381408691406
    9. 'ndef' → logprob: -10.014381408691406
    10. '
' → logprob: -10.389381408691406

Token 119: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018977604806423187
    2. '   ' → logprob: -4.643977642059326
    3. ' def' → logprob: -5.143977642059326
    4. '
' → logprob: -5.893977642059326
    5. '    
' → logprob: -7.518977642059326
    6. ' 
' → logprob: -11.143977165222168
    7. '

' → logprob: -12.018977165222168
    8. '	def' → logprob: -12.518977165222168
    9. 'indent' → logprob: -12.643977165222168
    10. '    ' → logprob: -12.893977165222168

Token 120: ' tank' (ID: 16109)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10230346769094467
    2. ' def' → logprob: -2.3523035049438477
    3. ' next' → logprob: -7.977303504943848
    4. ' ' → logprob: -8.477303504943848
    5. '   ' → logprob: -8.477303504943848
    6. ')' → logprob: -8.727303504943848
    7. '
' → logprob: -9.352303504943848
    8. 'n' → logprob: -9.414803504943848
    9. 's' → logprob: -9.414803504943848
    10. 'ndef' → logprob: -9.477303504943848

Token 121: ' volume' (ID: 10945)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.365699291229248
    2. ' is' → logprob: -1.615699291229248
    3. ' never' → logprob: -1.990699291229248
    4. ' def' → logprob: -2.740699291229248
    5. ' level' → logprob: -2.865699291229248
    6. ' cannot' → logprob: -3.365699291229248
    7. ' can' → logprob: -3.365699291229248
    8. 'level' → logprob: -3.490699291229248
    9. '   ' → logprob: -3.615699291229248
    10. ' will' → logprob: -3.740699291229248

Token 122: ' changes' (ID: 6629)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2919888496398926
    2. '=' → logprob: -1.4169888496398926
    3. ' =' → logprob: -1.6669888496398926
    4. 'def' → logprob: -2.9169888496398926
    5. '   ' → logprob: -3.2919888496398926
    6. ' starts' → logprob: -3.5419888496398926
    7. ' remains' → logprob: -3.9169888496398926
    8. ' def' → logprob: -4.166988849639893
    9. ' decreases' → logprob: -4.166988849639893
    10. ' can' → logprob: -4.291988849639893

Token 123: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28853827714920044
    2. ' =' → logprob: -2.4135382175445557
    3. '   ' → logprob: -2.9135382175445557
    4. ' def' → logprob: -3.2885382175445557
    5. '=' → logprob: -3.9135382175445557
    6. ' by' → logprob: -4.538538455963135
    7. '_' → logprob: -4.913538455963135
    8. ' ' → logprob: -5.413538455963135
    9. '    ' → logprob: -5.413538455963135
    10. ' with' → logprob: -5.663538455963135

Token 124: ' (' (ID: 350)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.634727954864502
    2. ' pump' → logprob: -2.259727954864502
    3. ' lambda' → logprob: -2.509727954864502
    4. ' a' → logprob: -2.759727954864502
    5. ' pumping' → logprob: -2.884727954864502
    6. ' P' → logprob: -2.884727954864502
    7. 'pump' → logprob: -3.259727954864502
    8. ' delta' → logprob: -3.509727954864502
    9. ' +' → logprob: -3.509727954864502
    10. ' -' → logprob: -3.634727954864502

Token 125: 'P' (ID: 47)
  Prédit: ' pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pump' → logprob: -1.0817060470581055
    2. 'pump' → logprob: -1.2067060470581055
    3. 'P' → logprob: -2.0817060470581055
    4. ' P' → logprob: -2.3317060470581055
    5. ' infl' → logprob: -2.8317060470581055
    6. 'p' → logprob: -3.9567060470581055
    7. ')' → logprob: -4.4567060470581055
    8. ' (' → logprob: -4.5817060470581055
    9. ' p' → logprob: -5.4567060470581055
    10. '(p' → logprob: -5.8317060470581055

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1642257124185562
    2. '-' → logprob: -1.914225697517395
    3. ' *' → logprob: -6.5392255783081055
    4. '*' → logprob: -6.6642255783081055
    5. ')' → logprob: -7.6642255783081055
    6. ' ' → logprob: -8.164225578308105
    7. '-P' → logprob: -8.164225578308105
    8. ' )' → logprob: -9.039225578308105
    9. '-L' → logprob: -10.289225578308105
    10. '-)' → logprob: -11.039225578308105

Token 127: ' consumption' (ID: 23818)
  Prédit: ' consumption'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consumption' → logprob: -0.8114526867866516
    2. 'cons' → logprob: -1.3114526271820068
    3. 'c' → logprob: -2.186452627182007
    4. ' c' → logprob: -2.811452627182007
    5. ' rate' → logprob: -3.311452627182007
    6. 'rate' → logprob: -3.561452627182007
    7. 'w' → logprob: -4.436452865600586
    8. ')' → logprob: -5.061452865600586
    9. ' cons' → logprob: -5.186452865600586
    10. ' w' → logprob: -5.561452865600586

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004673156887292862
    2. ')*' → logprob: -6.254673004150391
    3. '_rate' → logprob: -6.504673004150391
    4. ' )' → logprob: -7.004673004150391
    5. '[' → logprob: -9.37967300415039
    6. 'rate' → logprob: -9.37967300415039
    7. '[i' → logprob: -9.75467300415039
    8. 's' → logprob: -10.12967300415039
    9. ' rate' → logprob: -10.25467300415039
    10. '[t' → logprob: -12.12967300415039

Token 129: ' *' (ID: 425)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.196563720703125
    2. ')' → logprob: -2.321563720703125
    3. ' def' → logprob: -3.321563720703125
    4. ' ' → logprob: -4.946563720703125
    5. ' at' → logprob: -5.071563720703125
    6. ' over' → logprob: -5.446563720703125
    7. '<|end|>' → logprob: -5.446563720703125
    8. '   ' → logprob: -5.696563720703125
    9. '.' → logprob: -5.946563720703125
    10. ':' → logprob: -6.071563720703125

Token 130: ' duration' (ID: 13599)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.5547322034835815
    2. ' duration' → logprob: -1.5547322034835815
    3. 'time' → logprob: -2.304732322692871
    4. ' time' → logprob: -3.054732322692871
    5. 'dt' → logprob: -3.679732322692871
    6. 'interval' → logprob: -4.179732322692871
    7. 't' → logprob: -5.054732322692871
    8. ' dt' → logprob: -5.054732322692871
    9. ' interval' → logprob: -5.179732322692871
    10. ' t' → logprob: -5.429732322692871

Token 131: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026905197650194168
    2. '
' → logprob: -3.9019052982330322
    3. ' def' → logprob: -5.276905059814453
    4. '    
' → logprob: -7.651905059814453
    5. '   ' → logprob: -8.276905059814453
    6. '

' → logprob: -9.151905059814453
    7. '<|end|>' → logprob: -9.401905059814453
    8. ':def' → logprob: -9.526905059814453
    9. ' 
' → logprob: -10.026905059814453
    10. ':' → logprob: -10.401905059814453

Token 132: ' each' (ID: 2454)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.0096180438995361
    2. 'each' → logprob: -1.5096180438995361
    3. 'interval' → logprob: -1.6346180438995361
    4. ' each' → logprob: -1.8846180438995361
    5. 'time' → logprob: -4.384617805480957
    6. 'the' → logprob: -4.509617805480957
    7. ' interval' → logprob: -4.634617805480957
    8. ' time' → logprob: -5.134617805480957
    9. ' the' → logprob: -5.259617805480957
    10. 'seconds' → logprob: -5.759617805480957

Token 133: ' period' (ID: 5265)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.8935175538063049
    2. 'interval' → logprob: -1.0185174942016602
    3. ' segment' → logprob: -2.14351749420166
    4. 'segment' → logprob: -2.64351749420166
    5. ' schedule' → logprob: -3.89351749420166
    6. 'schedule' → logprob: -4.26851749420166
    7. ' period' → logprob: -5.64351749420166
    8. 'period' → logprob: -6.64351749420166
    9. ' time' → logprob: -7.51851749420166
    10. 'time' → logprob: -7.64351749420166

Token 134: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03220132365822792
    2. '   ' → logprob: -4.032201290130615
    3. '
' → logprob: -4.532201290130615
    4. '    
' → logprob: -6.782201290130615
    5. ' def' → logprob: -7.282201290130615
    6. '<|end|>' → logprob: -7.657201290130615
    7. '

' → logprob: -9.032201766967773
    8. ')' → logprob: -9.157201766967773
    9. '\' → logprob: -9.407201766967773
    10. ':' → logprob: -9.532201766967773

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07953482866287231
    2. 'def' → logprob: -2.7045347690582275
    3. '
' → logprob: -5.579535007476807
    4. '<|end|>' → logprob: -6.204535007476807
    5. '    
' → logprob: -6.954535007476807
    6. ')' → logprob: -6.954535007476807
    7. ' def' → logprob: -7.329535007476807
    8. '    ' → logprob: -7.954535007476807
    9. ':' → logprob: -9.079534530639648
    10. ',' → logprob: -9.204534530639648

Token 136: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08051694929599762
    2. '   ' → logprob: -2.955517053604126
    3. '
' → logprob: -4.205516815185547
    4. '    
' → logprob: -4.830516815185547
    5. ' def' → logprob: -6.580516815185547
    6. '<|end|>' → logprob: -7.955516815185547
    7. ' 
' → logprob: -9.080516815185547
    8. '  
' → logprob: -9.080516815185547
    9. '   
' → logprob: -9.705516815185547
    10. '    ' → logprob: -9.705516815185547

Token 137: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03569728136062622
    2. '   ' → logprob: -3.5356972217559814
    3. ' def' → logprob: -6.2856974601745605
    4. '    
' → logprob: -6.4106974601745605
    5. 'low' → logprob: -6.6606974601745605
    6. 'left' → logprob: -7.7856974601745605
    7. '
' → logprob: -8.660696983337402
    8. ' low' → logprob: -9.660696983337402
    9. ' left' → logprob: -10.035696983337402
    10. 'lo' → logprob: -10.160696983337402

Token 138: ' track' (ID: 5290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10440118610858917
    2. '   ' → logprob: -3.104401111602783
    3. '#' → logprob: -4.979401111602783
    4. ' def' → logprob: -5.229401111602783
    5. 'continue' → logprob: -5.479401111602783
    6. ' continue' → logprob: -5.604401111602783
    7. ' will' → logprob: -5.729401111602783
    8. ' need' → logprob: -5.729401111602783
    9. ''ll' → logprob: -5.854401111602783
    10. 'import' → logprob: -5.979401111602783

Token 139: ' minimum' (ID: 11085)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.010902762413025
    2. 'tank' → logprob: -1.135902762413025
    3. ' tank' → logprob: -1.760902762413025
    4. 'current' → logprob: -2.3859028816223145
    5. ' volume' → logprob: -4.2609028816223145
    6. ' the' → logprob: -4.7609028816223145
    7. 'volume' → logprob: -5.0109028816223145
    8. '   ' → logprob: -5.1359028816223145
    9. ' ' → logprob: -6.1359028816223145
    10. 'curr' → logprob: -6.3859028816223145

Token 140: ' tank' (ID: 16109)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.4486417770385742
    2. 'volume' → logprob: -2.323641777038574
    3. 'tank' → logprob: -2.323641777038574
    4. '_t' → logprob: -2.948641777038574
    5. '_level' → logprob: -3.573641777038574
    6. 'level' → logprob: -3.573641777038574
    7. ' volume' → logprob: -3.948641777038574
    8. '_water' → logprob: -4.823641777038574
    9. 'def' → logprob: -5.198641777038574
    10. '_' → logprob: -5.448641777038574

Token 141: ' volume' (ID: 10945)
  Prédit: '_volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.9079200029373169
    2. 'volume' → logprob: -1.407920002937317
    3. 'level' → logprob: -1.657920002937317
    4. '_level' → logprob: -2.9079198837280273
    5. ' volume' → logprob: -2.9079198837280273
    6. ' level' → logprob: -3.0329198837280273
    7. '   ' → logprob: -6.782919883728027
    8. '_content' → logprob: -8.157919883728027
    9. 'content' → logprob: -8.407919883728027
    10. ' ' → logprob: -8.407919883728027

Token 142: ' during' (ID: 3354)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27218949794769287
    2. '   ' → logprob: -1.6471894979476929
    3. '
' → logprob: -4.397189617156982
    4. ':' → logprob: -4.522189617156982
    5. ' def' → logprob: -4.647189617156982
    6. '    
' → logprob: -6.022189617156982
    7. ')' → logprob: -6.647189617156982
    8. '_' → logprob: -7.147189617156982
    9. ',' → logprob: -7.147189617156982
    10. '

' → logprob: -7.272189617156982

Token 143: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5533397197723389
    2. 'the' → logprob: -0.9283397197723389
    3. ' simulation' → logprob: -4.553339958190918
    4. ' all' → logprob: -5.053339958190918
    5. 'simulation' → logprob: -5.053339958190918
    6. 'all' → logprob: -5.928339958190918
    7. ' consumption' → logprob: -7.303339958190918
    8. ' a' → logprob: -7.928339958190918
    9. ' operation' → logprob: -8.053339958190918
    10. 's' → logprob: -8.303339958190918

Token 144: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.40295398235321045
    2. 'day' → logprob: -1.2779539823532104
    3. 'period' → logprob: -4.1529541015625
    4. 'simulation' → logprob: -5.0279541015625
    5. 'process' → logprob: -5.2779541015625
    6. 'interval' → logprob: -5.5279541015625
    7. ' simulation' → logprob: -5.7779541015625
    8. ' process' → logprob: -6.2779541015625
    9. 'cycle' → logprob: -6.4029541015625
    10. ' cycle' → logprob: -6.5279541015625

Token 145: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32905274629592896
    2. 'def' → logprob: -1.5790526866912842
    3. '    
' → logprob: -2.704052686691284
    4. '
' → logprob: -5.579052925109863
    5. ' def' → logprob: -6.829052925109863
    6. '    ' → logprob: -7.079052925109863
    7. '<|end|>' → logprob: -7.079052925109863
    8. '     
' → logprob: -8.829052925109863
    9. ' 
' → logprob: -9.079052925109863
    10. '<|end|>' → logprob: -9.579052925109863

Token 146: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33360445499420166
    2. 'def' → logprob: -1.5836044549942017
    3. ' def' → logprob: -3.083604335784912
    4. '    
' → logprob: -4.458604335784912
    5. ' low' → logprob: -5.083604335784912
    6. '    ' → logprob: -6.458604335784912
    7. ' 
' → logprob: -6.458604335784912
    8. ' left' → logprob: -6.458604335784912
    9. 'low' → logprob: -6.458604335784912
    10. '
' → logprob: -6.583604335784912

Token 147: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.4546840190887451
    2. ' should' → logprob: -2.079684019088745
    3. ' cannot' → logprob: -2.079684019088745
    4. '   ' → logprob: -2.329684019088745
    5. ' is' → logprob: -2.829684019088745
    6. ' >=' → logprob: -2.954684019088745
    7. ' <=' → logprob: -3.329684019088745
    8. 'must' → logprob: -3.454684019088745
    9. '=' → logprob: -3.579684019088745
    10. '#' → logprob: -3.704684019088745

Token 148: ' never' (ID: 3779)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1775318831205368
    2. ' >=' → logprob: -3.3025319576263428
    3. ' remain' → logprob: -3.4275319576263428
    4. 'remain' → logprob: -3.5525319576263428
    5. 'not' → logprob: -4.177531719207764
    6. ' not' → logprob: -4.302531719207764
    7. ' be' → logprob: -4.302531719207764
    8. '   ' → logprob: -4.427531719207764
    9. ' never' → logprob: -5.677531719207764
    10. ')>=' → logprob: -6.552531719207764

Token 149: ' go' (ID: 810)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8584257960319519
    2. 'drop' → logprob: -0.8584257960319519
    3. ' drop' → logprob: -3.4834258556365967
    4. 'go' → logprob: -3.4834258556365967
    5. ' go' → logprob: -3.6084258556365967
    6. 'fall' → logprob: -3.7334258556365967
    7. ' become' → logprob: -3.8584258556365967
    8. ' be' → logprob: -4.483425617218018
    9. ' fall' → logprob: -4.983425617218018
    10. '<' → logprob: -7.858425617218018

Token 150: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.17434579133987427
    2. ' below' → logprob: -1.9243457317352295
    3. 'negative' → logprob: -4.424345970153809
    4. '<' → logprob: -6.299345970153809
    5. ' negative' → logprob: -8.799345970153809
    6. ' <' → logprob: -10.299345970153809
    7. 'less' → logprob: -12.299345970153809
    8. 'Below' → logprob: -12.299345970153809
    9. '<b' → logprob: -13.049345970153809
    10. '<=' → logprob: -13.174345970153809

Token 151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007724810391664505
    2. 'zero' → logprob: -5.382724761962891
    3. ' zero' → logprob: -6.507724761962891
    4. ' ' → logprob: -6.507724761962891
    5. '   ' → logprob: -9.25772476196289
    6. '```' → logprob: -11.00772476196289
    7. ' ' → logprob: -14.38272476196289
    8. '``' → logprob: -14.82022476196289
    9. '  ' → logprob: -15.00772476196289
    10. '000' → logprob: -15.19522476196289

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002477796748280525
    2. 'zero' → logprob: -6.127477645874023
    3. ' ' → logprob: -8.627477645874023
    4. ' zero' → logprob: -9.252477645874023
    5. '```' → logprob: -11.502477645874023
    6. '   ' → logprob: -12.127477645874023
    7. '000' → logprob: -14.877477645874023
    8. '``' → logprob: -15.377477645874023
    9. '
' → logprob: -15.564977645874023
    10. '_zero' → logprob: -15.877477645874023

Token 153: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03154142573475838
    2. 'def' → logprob: -3.656541347503662
    3. '
' → logprob: -6.031541347503662
    4. '    
' → logprob: -6.156541347503662
    5. '<|end|>' → logprob: -7.906541347503662
    6. ')' → logprob: -9.90654182434082
    7. ' def' → logprob: -10.03154182434082
    8. '    ' → logprob: -10.28154182434082
    9. ',' → logprob: -10.53154182434082
    10. '  
' → logprob: -10.65654182434082

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15514922142028809
    2. 'def' → logprob: -2.030149221420288
    3. '    
' → logprob: -4.780149459838867
    4. '
' → logprob: -6.155149459838867
    5. ' def' → logprob: -6.780149459838867
    6. '    ' → logprob: -8.155149459838867
    7. ' 
' → logprob: -8.905149459838867
    8. 'import' → logprob: -9.530149459838867
    9. '     
' → logprob: -10.280149459838867
    10. '```' → logprob: -10.530149459838867

Token 155: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0020577155519276857
    2. '   ' → logprob: -6.6270575523376465
    3. 'low' → logprob: -7.6270575523376465
    4. 'left' → logprob: -9.502058029174805
    5. '    
' → logprob: -9.752058029174805
    6. ' def' → logprob: -10.002058029174805
    7. 'lo' → logprob: -10.252058029174805
    8. '
' → logprob: -11.627058029174805
    9. 'import' → logprob: -12.627058029174805
    10. '#' → logprob: -13.127058029174805

Token 156: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3205329179763794
    2. 'can' → logprob: -1.9455329179763794
    3. ' is' → logprob: -2.44553279876709
    4. ' check' → logprob: -4.32053279876709
    5. 'is' → logprob: -4.57053279876709
    6. ' feasible' → logprob: -4.82053279876709
    7. 'check' → logprob: -4.94553279876709
    8. 'en' → logprob: -5.57053279876709
    9. ' sufficient' → logprob: -6.94553279876709
    10. ' enough' → logprob: -7.82053279876709

Token 157: '(p' (ID: 2407)
  Prédit: '_supply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_supply' → logprob: -1.1025797128677368
    2. '_' → logprob: -1.9775797128677368
    3. '_p' → logprob: -1.9775797128677368
    4. '_fill' → logprob: -2.3525795936584473
    5. '_pro' → logprob: -2.4775795936584473
    6. '_feed' → logprob: -2.6025795936584473
    7. '_s' → logprob: -3.4775795936584473
    8. '_run' → logprob: -3.6025795936584473
    9. '_use' → logprob: -3.6025795936584473
    10. '_keep' → logprob: -4.352579593658447

Token 158: 'ump' (ID: 2643)
  Prédit: 'ump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ump' → logprob: -0.06608697772026062
    2. '):' → logprob: -3.441087007522583
    3. '):
' → logprob: -4.191086769104004
    4. ')' → logprob: -4.566086769104004
    5. '):

' → logprob: -5.566086769104004
    6. 'um' → logprob: -7.441086769104004
    7. '   ' → logprob: -7.941086769104004
    8. 'oss' → logprob: -8.066086769104004
    9. 'umps' → logprob: -8.566086769104004
    10. ' )' → logprob: -8.566086769104004

Token 159: '):
' (ID: 1883)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.07214178889989853
    2. '):' → logprob: -2.6971418857574463
    3. 'speed' → logprob: -6.822141647338867
    4. '):
' → logprob: -7.447141647338867
    5. ' ):' → logprob: -8.072141647338867
    6. '_SPEED' → logprob: -10.322141647338867
    7. 'peed' → logprob: -10.322141647338867
    8. '_' → logprob: -10.572141647338867
    9. '   ' → logprob: -10.822141647338867
    10. ':' → logprob: -10.822141647338867

Token 160: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.744822084903717
    2. '       ' → logprob: -0.744822084903717
    3. '   ' → logprob: -3.8698220252990723
    4. '):' → logprob: -4.244822025299072
    5. '(' → logprob: -4.369822025299072
    6. '(p' → logprob: -7.744822025299072
    7. '():' → logprob: -7.869822025299072
    8. '    ' → logprob: -8.49482250213623
    9. ':
' → logprob: -8.61982250213623
    10. '(n' → logprob: -8.61982250213623

Token 161: ' volume' (ID: 10945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6109658479690552
    2. '   ' → logprob: -1.8609658479690552
    3. 'volume' (adapté à ' volume') → logprob: -1.9859658479690552
    4. 'tank' → logprob: -3.1109657287597656
    5. ' volume' → logprob: -3.3609657287597656
    6. 'current' → logprob: -3.9859657287597656
    7. ' tank' → logprob: -4.110965728759766
    8. 'water' → logprob: -4.985965728759766
    9. 'curr' → logprob: -5.110965728759766
    10. 'level' → logprob: -5.610965728759766

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016187800094485283
    2. '=' → logprob: -4.14118766784668
    3. '   ' → logprob: -8.89118766784668
    4. ',' → logprob: -11.76618766784668
    5. ' ' → logprob: -12.76618766784668
    6. '    ' → logprob: -13.01618766784668
    7. ')' → logprob: -13.64118766784668
    8. '  ' → logprob: -14.39118766784668
    9. '       ' → logprob: -14.76618766784668
    10. '        ' → logprob: -15.39118766784668

Token 163: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01823153719305992
    2. ' L' → logprob: -4.018231391906738
    3. '   ' → logprob: -9.893231391906738
    4. '       ' → logprob: -11.018231391906738
    5. '           ' → logprob: -12.018231391906738
    6. '    ' → logprob: -12.893231391906738
    7. '        ' → logprob: -13.768231391906738
    8. ' ' → logprob: -13.893231391906738
    9. '=L' → logprob: -14.018231391906738
    10. '	L' → logprob: -14.393231391906738

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19134695827960968
    2. '<|end|>' → logprob: -1.8163470029830933
    3. '    
' → logprob: -5.066347122192383
    4. '  
' → logprob: -6.316347122192383
    5. '<|end|>' → logprob: -6.816347122192383
    6. '   ' → logprob: -7.816347122192383
    7. ' 
' → logprob: -8.066347122192383
    8. '*' → logprob: -8.066347122192383
    9. '
' → logprob: -8.066347122192383
    10. ' *' → logprob: -8.066347122192383

Token 165: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6058120727539062
    2. '    
' → logprob: -1.1058120727539062
    3. '   ' → logprob: -2.6058120727539062
    4. '    ' → logprob: -4.605812072753906
    5. '<|end|>' → logprob: -4.605812072753906
    6. ' 
' → logprob: -4.980812072753906
    7. '  
' → logprob: -5.355812072753906
    8. '        
' → logprob: -5.730812072753906
    9. '\n' → logprob: -5.730812072753906
    10. '   
' → logprob: -6.105812072753906

Token 166: ' min' (ID: 1349)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.3873682022094727
    2. 'prev' → logprob: -1.5123682022094727
    3. 'time' → logprob: -1.6373682022094727
    4. 'current' → logprob: -2.0123682022094727
    5. 'events' → logprob: -2.2623682022094727
    6. 'for' → logprob: -3.5123682022094727
    7. 'times' → logprob: -3.6373682022094727
    8. 'timeline' → logprob: -4.762368202209473
    9. 'curr' → logprob: -4.887368202209473
    10. 'cons' → logprob: -5.762368202209473

Token 167: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -0.0012559457682073116
    2. 'volume' → logprob: -6.751255989074707
    3. '_' → logprob: -10.126255989074707
    4. '_vol' → logprob: -10.376255989074707
    5. 'Volume' → logprob: -12.001255989074707
    6. ' volume' → logprob: -12.751255989074707
    7. '(volume' → logprob: -13.501255989074707
    8. '_val' → logprob: -13.751255989074707
    9. '_VOLUME' → logprob: -14.251255989074707
    10. 'vol' → logprob: -14.251255989074707

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759451985359192
    2. '=' → logprob: -0.8259451985359192
    3. ',' → logprob: -12.575944900512695
    4. ' ' → logprob: -13.950944900512695
    5. '=min' → logprob: -14.575944900512695
    6. '   ' → logprob: -15.075944900512695
    7. ')' → logprob: -15.200944900512695
    8. '  ' → logprob: -16.450944900512695
    9. '    ' → logprob: -16.700944900512695
    10. ' ,' → logprob: -16.950944900512695

Token 169: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13239941000938416
    2. 'volume' → logprob: -2.382399320602417
    3. ' L' → logprob: -3.882399320602417
    4. ' volume' → logprob: -4.507399559020996
    5. '	L' → logprob: -10.632399559020996
    6. '   ' → logprob: -11.632399559020996
    7. 'vol' → logprob: -12.632399559020996
    8. '0' → logprob: -12.757399559020996
    9. 'float' → logprob: -13.257399559020996
    10. 'min' → logprob: -13.507399559020996

Token 170: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7756297588348389
    2. '<|end|>' → logprob: -0.7756297588348389
    3. '    
' → logprob: -3.775629758834839
    4. '\n' → logprob: -4.275629997253418
    5. '   ' → logprob: -4.275629997253418
    6. '       ' → logprob: -4.775629997253418
    7. '  
' → logprob: -5.150629997253418
    8. '<|end|>' → logprob: -5.275629997253418
    9. '        
' → logprob: -5.900629997253418
    10. ' 
' → logprob: -6.150629997253418

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1339549422264099
    2. '
' → logprob: -3.0089550018310547
    3. '        
' → logprob: -3.6339550018310547
    4. '    
' → logprob: -3.8839550018310547
    5. '   ' → logprob: -4.258955001831055
    6. '<|end|>' → logprob: -4.883955001831055
    7. '  
' → logprob: -5.883955001831055
    8. ' for' → logprob: -7.133955001831055
    9. '\n' → logprob: -7.508955001831055
    10. ' 
' → logprob: -7.633955001831055

Token 172: ' prev' (ID: 10258)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.7196272611618042
    2. 'for' → logprob: -1.8446272611618042
    3. 'last' → logprob: -1.9696272611618042
    4. 'prev' (adapté à ' prev') → logprob: -1.9696272611618042
    5. 'time' → logprob: -2.2196273803710938
    6. 'times' → logprob: -2.3446273803710938
    7. '   ' → logprob: -2.7196273803710938
    8. 'events' → logprob: -3.3446273803710938
    9. 'cons' → logprob: -4.094627380371094
    10. 'curr' → logprob: -4.344627380371094

Token 173: '_t' (ID: 838)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.2622559368610382
    2. '_time' → logprob: -1.5122559070587158
    3. 'time' → logprob: -5.762256145477295
    4. ' =' → logprob: -5.762256145477295
    5. 'end' → logprob: -6.137256145477295
    6. '=' → logprob: -7.012256145477295
    7. 't' → logprob: -8.137255668640137
    8. '_' → logprob: -8.512255668640137
    9. '_t' → logprob: -8.762255668640137
    10. '   ' → logprob: -9.887255668640137

Token 174: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.013832134194672108
    2. '=' → logprob: -4.388832092285156
    3. ' =' → logprob: -6.638832092285156
    4. ',' → logprob: -12.638832092285156
    5. 'i' → logprob: -13.263832092285156
    6. 'ype' → logprob: -13.763832092285156
    7. '=end' → logprob: -14.013832092285156
    8. 'imes' → logprob: -14.263832092285156
    9. 'me' → logprob: -14.263832092285156
    10. 'im' → logprob: -14.388832092285156

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.845798710244708e-05
    2. ' ' → logprob: -10.250038146972656
    3. '   ' → logprob: -14.500038146972656
    4. '(' → logprob: -14.812538146972656
    5. '[' → logprob: -15.000038146972656
    6. '-' → logprob: -15.250038146972656
    7. '00' → logprob: -15.562538146972656
    8. '1' → logprob: -15.875038146972656
    9. ')' → logprob: -16.250038146972656
    10. '000' → logprob: -16.375038146972656

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -12.00001049041748
    3. '-' → logprob: -13.62501049041748
    4. '864' → logprob: -14.18751049041748
    5. '24' → logprob: -14.87501049041748
    6. '480' → logprob: -15.25001049041748
    7. '(' → logprob: -15.37501049041748
    8. '00' → logprob: -15.37501049041748
    9. '1' → logprob: -15.68751049041748
    10. '[' → logprob: -15.75001049041748

Token 177: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30042025446891785
    2. '<|end|>' → logprob: -2.0504202842712402
    3. '
' → logprob: -3.1754202842712402
    4. '    
' → logprob: -3.3004202842712402
    5. '       ' → logprob: -4.55042028427124
    6. '  
' → logprob: -4.55042028427124
    7. '\n' → logprob: -5.05042028427124
    8. ' for' → logprob: -5.17542028427124
    9. ' 
' → logprob: -5.67542028427124
    10. '<|end|>' → logprob: -5.80042028427124

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.054583314806222916
    2. '   ' → logprob: -3.5545833110809326
    3. ' for' → logprob: -4.304583549499512
    4. '       ' → logprob: -4.554583549499512
    5. 'cons' → logprob: -8.054583549499512
    6. '	for' → logprob: -9.929583549499512
    7. 'current' → logprob: -10.929583549499512
    8. ' consumption' → logprob: -11.054583549499512
    9. 'events' → logprob: -11.179583549499512
    10. '    
' → logprob: -11.429583549499512

Token 180: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12678959965705872
    2. ' start' → logprob: -2.5017895698547363
    3. 's' → logprob: -4.251789569854736
    4. '(start' → logprob: -4.876789569854736
    5. 'cons' → logprob: -5.626789569854736
    6. '(s' → logprob: -5.751789569854736
    7. ' (' → logprob: -6.126789569854736
    8. ' s' → logprob: -6.876789569854736
    9. '(i' → logprob: -7.001789569854736
    10. '(cons' → logprob: -7.001789569854736

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6351457834243774
    2. 't' → logprob: -0.7601457834243774
    3. ',e' → logprob: -7.260145664215088
    4. ',t' → logprob: -7.635145664215088
    5. '_t' → logprob: -8.385146141052246
    6. 'i' → logprob: -9.010146141052246
    7. 'time' → logprob: -9.135146141052246
    8. '_time' → logprob: -9.135146141052246
    9. 'e' → logprob: -9.260146141052246
    10. 'peed' → logprob: -9.260146141052246

Token 182: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05760902538895607
    2. 'c' → logprob: -3.0576090812683105
    3. 'd' → logprob: -4.8076090812683105
    4. ' e' → logprob: -7.5576090812683105
    5. 't' → logprob: -9.432608604431152
    6. ' c' → logprob: -9.682608604431152
    7. 'cons' → logprob: -10.182608604431152
    8. 'f' → logprob: -10.307608604431152
    9. 'duration' → logprob: -11.057608604431152
    10. ' d' → logprob: -11.557608604431152

Token 183: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48426464200019836
    2. ',' → logprob: -0.984264612197876
    3. 'in' → logprob: -4.609264850616455
    4. ' ,' → logprob: -9.109264373779297
    5. 's' → logprob: -10.609264373779297
    6. ' ' → logprob: -11.359264373779297
    7. '   ' → logprob: -12.109264373779297
    8. ',s' → logprob: -12.609264373779297
    9. ',in' → logprob: -12.859264373779297
    10. ')' → logprob: -12.984264373779297

Token 184: ' u' (ID: 337)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.049246225506067276
    2. 'rate' → logprob: -4.049246311187744
    3. ' c' → logprob: -4.174246311187744
    4. 'cons' → logprob: -5.174246311187744
    5. 'w' → logprob: -5.674246311187744
    6. 'd' → logprob: -5.674246311187744
    7. 'r' → logprob: -6.424246311187744
    8. ' rate' → logprob: -7.799246311187744
    9. 'p' → logprob: -9.549245834350586
    10. ' d' → logprob: -9.674245834350586

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009184789843857288
    2. 'in' → logprob: -5.134184837341309
    3. ',' → logprob: -5.759184837341309
    4. ' ' → logprob: -10.134184837341309
    5. ')' → logprob: -10.759184837341309
    6. 'd' → logprob: -12.134184837341309
    7. 'n' → logprob: -12.509184837341309
    8. 's' → logprob: -12.759184837341309
    9. 'u' → logprob: -12.884184837341309
    10. 't' → logprob: -13.009184837341309

Token 186: ' schedules' (ID: 50216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009258725331164896
    2. ' schedules' → logprob: -7.0009260177612305
    3. 'chedules' → logprob: -12.12592601776123
    4. 'schedule' → logprob: -12.50092601776123
    5. '[' → logprob: -13.62592601776123
    6. 'sorted' → logprob: -14.25092601776123
    7. '[s' → logprob: -14.50092601776123
    8. '[(' → logprob: -14.75092601776123
    9. 'sche' → logprob: -15.12592601776123
    10. '   ' → logprob: -15.25092601776123

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016096011968329549
    2. ':
' → logprob: -6.501609802246094
    3. '):' → logprob: -9.251609802246094
    4. ' :' → logprob: -12.376609802246094
    5. ',' → logprob: -13.126609802246094
    6. ':
' → logprob: -13.626609802246094
    7. '):
' → logprob: -13.626609802246094
    8. ']:' → logprob: -14.251609802246094
    9. '   ' → logprob: -14.876609802246094
    10. '=' → logprob: -15.001609802246094

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.896047830581665
    2. '       ' → logprob: -1.021047830581665
    3. ':' → logprob: -1.646047830581665
    4. ',' → logprob: -4.271047592163086
    5. '<|end|>' → logprob: -4.646047592163086
    6. ':
' → logprob: -5.271047592163086
    7. '        
' → logprob: -6.396047592163086
    8. '<|end|>' → logprob: -6.646047592163086
    9. '        ' → logprob: -7.271047592163086
    10. '            
' → logprob: -7.271047592163086

Token 189: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9903271794319153
    2. 'duration' → logprob: -0.9903271794319153
    3. '           ' → logprob: -2.1153271198272705
    4. 'delta' → logprob: -2.8653271198272705
    5. 'if' → logprob: -3.7403271198272705
    6. 'dt' → logprob: -4.11532735824585
    7. ' duration' → logprob: -4.74032735824585
    8. ' if' → logprob: -4.99032735824585
    9. 'volume' → logprob: -5.24032735824585
    10. 'interval' → logprob: -5.49032735824585

Token 190: ' no' (ID: 860)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.09931798279285431
    2. 'if' → logprob: -3.724318027496338
    3. '           ' → logprob: -4.099318027496338
    4. 'interval' → logprob: -4.349318027496338
    5. 'delta' → logprob: -4.599318027496338
    6. '       ' → logprob: -5.099318027496338
    7. '#' → logprob: -5.099318027496338
    8. 'volume' → logprob: -5.224318027496338
    9. 'dt' → logprob: -5.474318027496338
    10. 'dur' → logprob: -5.724318027496338

Token 191: ' consumption' (ID: 23818)
  Prédit: ' consumption'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consumption' → logprob: -0.7560004591941833
    2. ' change' → logprob: -1.5060005187988281
    3. ' water' → logprob: -2.756000518798828
    4. 'change' → logprob: -2.881000518798828
    5. '   ' → logprob: -3.756000518798828
    6. ' if' → logprob: -3.881000518798828
    7. 'cons' → logprob: -4.131000518798828
    8. '       ' → logprob: -4.256000518798828
    9. ' need' → logprob: -4.631000518798828
    10. 'n' → logprob: -4.631000518798828

Token 192: ' between' (ID: 2870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5282211899757385
    2. ' between' → logprob: -2.0282211303710938
    3. ' if' → logprob: -2.7782211303710938
    4. ',' → logprob: -3.1532211303710938
    5. '       ' → logprob: -3.2782211303710938
    6. ' for' → logprob: -3.4032211303710938
    7. ' =' → logprob: -3.6532211303710938
    8. '=' → logprob: -4.028221130371094
    9. ' until' → logprob: -4.278221130371094
    10. ' at' → logprob: -4.778221130371094

Token 193: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0002610974188428372
    2. ' prev' → logprob: -8.375261306762695
    3. '           ' → logprob: -10.750261306762695
    4. '(prev' → logprob: -12.125261306762695
    5. '
' → logprob: -12.750261306762695
    6. '	prev' → logprob: -15.250261306762695
    7. '            
' → logprob: -15.875261306762695
    8. '
' → logprob: -16.375261306762695
    9. '```' → logprob: -16.875261306762695
    10. '_prev' → logprob: -17.125261306762695

Token 194: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.250001907348633
    3. '_s' → logprob: -14.250001907348633
    4. 't' → logprob: -15.000001907348633
    5. '\' → logprob: -15.750001907348633
    6. '_time' → logprob: -16.625001907348633
    7. ' _' → logprob: -17.500001907348633
    8. ',' → logprob: -17.500001907348633
    9. 's' → logprob: -18.000001907348633
    10. ' ' → logprob: -18.125001907348633

Token 195: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03820501267910004
    2. 'and' → logprob: -3.2882049083709717
    3. ' ' → logprob: -9.41320514678955
    4. ',' → logprob: -10.03820514678955
    5. '   ' → logprob: -11.41320514678955
    6. ' if' → logprob: -12.41320514678955
    7. 'if' → logprob: -12.78820514678955
    8. ')' → logprob: -12.91320514678955
    9. 's' → logprob: -13.16320514678955
    10. '    ' → logprob: -13.41320514678955

Token 196: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004630076698958874
    2. ' s' → logprob: -5.379630088806152
    3. '   ' → logprob: -13.379630088806152
    4. '_s' → logprob: -13.379630088806152
    5. ' ' → logprob: -13.629630088806152
    6. 'u' → logprob: -14.129630088806152
    7. 't' → logprob: -14.254630088806152
    8. '           ' → logprob: -14.254630088806152
    9. ''s' → logprob: -14.379630088806152
    10. '`s' → logprob: -15.129630088806152

Token 197: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25791916251182556
    2. '       ' → logprob: -2.0079190731048584
    3. '        
' → logprob: -3.3829190731048584
    4. '
' → logprob: -3.8829190731048584
    5. ',' → logprob: -4.1329193115234375
    6. ' if' → logprob: -4.3829193115234375
    7. '            
' → logprob: -5.8829193115234375
    8. '<|end|>' → logprob: -5.8829193115234375
    9. 'if' → logprob: -7.3829193115234375
    10. '	       ' → logprob: -7.6329193115234375

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13263380527496338
    2. '       ' → logprob: -2.507633686065674
    3. ',' → logprob: -3.882633686065674
    4. '        
' → logprob: -4.382633686065674
    5. '            
' → logprob: -5.882633686065674
    6. '
' → logprob: -5.882633686065674
    7. '<|end|>' → logprob: -6.632633686065674
    8. ' if' → logprob: -7.632633686065674
    9. '    
' → logprob: -8.007634162902832
    10. '               ' → logprob: -8.257634162902832

Token 199: ' #' (ID: 1069)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.517866313457489
    2. '           ' → logprob: -1.3928663730621338
    3. 'if' → logprob: -2.142866373062134
    4. '       ' → logprob: -3.642866373062134
    5. ' volume' → logprob: -5.267866134643555
    6. ' if' → logprob: -6.017866134643555
    7. 'delta' → logprob: -6.392866134643555
    8. 'duration' → logprob: -6.767866134643555
    9. 'interval' → logprob: -7.642866134643555
    10. '   ' → logprob: -8.142866134643555

Token 200: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.577909529209137
    2. 'if' → logprob: -0.952909529209137
    3. 'duration' → logprob: -3.702909469604492
    4. 'delta' → logprob: -4.827909469604492
    5. '           ' → logprob: -5.202909469604492
    6. 'interval' → logprob: -5.577909469604492
    7. '       ' → logprob: -5.952909469604492
    8. '   ' → logprob: -5.952909469604492
    9. 'pump' → logprob: -6.577909469604492
    10. '#' → logprob: -7.202909469604492

Token 201: ' increases' (ID: 21073)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1287292093038559
    2. ' +=' → logprob: -2.5037291049957275
    3. '=' → logprob: -3.2537291049957275
    4. ' =' → logprob: -8.253728866577148
    5. '   ' → logprob: -10.253728866577148
    6. '+=(' → logprob: -10.503728866577148
    7. '-=' → logprob: -11.503728866577148
    8. '	' → logprob: -11.503728866577148
    9. '```' → logprob: -11.753728866577148
    10. ']+=' → logprob: -12.003728866577148

Token 202: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43110793828964233
    2. '+=' → logprob: -1.806107997894287
    3. 'by' → logprob: -2.056107997894287
    4. ' by' → logprob: -4.181107997894287
    5. '           ' → logprob: -4.181107997894287
    6. ' +=' → logprob: -4.931107997894287
    7. ' =' → logprob: -5.056107997894287
    8. '   ' → logprob: -5.181107997894287
    9. '       ' → logprob: -5.556107997894287
    10. '               ' → logprob: -6.681107997894287

Token 203: ' rate' (ID: 6251)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.018492888659238815
    2. ' pump' → logprob: -4.518492698669434
    3. 'min' → logprob: -5.518492698669434
    4. '(p' → logprob: -6.393492698669434
    5. ' (' → logprob: -8.018492698669434
    6. 'rate' → logprob: -8.393492698669434
    7. 'volume' → logprob: -8.518492698669434
    8. 'p' → logprob: -8.768492698669434
    9. ' min' → logprob: -9.143492698669434
    10. '   ' → logprob: -9.143492698669434

Token 204: ' pump' (ID: 17128)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.023885054513812065
    2. ' pump' → logprob: -4.523885250091553
    3. '(p' → logprob: -5.023885250091553
    4. '           ' → logprob: -5.648885250091553
    5. '+' → logprob: -6.898885250091553
    6. '       ' → logprob: -7.773885250091553
    7. ' (' → logprob: -8.273884773254395
    8. 'p' → logprob: -8.273884773254395
    9. ' +' → logprob: -8.648884773254395
    10. '               ' → logprob: -9.023884773254395

Token 205: ' for' (ID: 395)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05507568642497063
    2. '*' → logprob: -3.3050756454467773
    3. '*(' → logprob: -4.305075645446777
    4. '           ' → logprob: -6.680075645446777
    5. ')' → logprob: -7.180075645446777
    6. '       ' → logprob: -7.805075645446777
    7. '   ' → logprob: -8.180075645446777
    8. ',' → logprob: -8.680075645446777
    9. ' ' → logprob: -8.930075645446777
    10. '               ' → logprob: -9.805075645446777

Token 206: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6207955479621887
    2. 's' → logprob: -0.8707955479621887
    3. ' (' → logprob: -3.495795488357544
    4. '(s' → logprob: -4.370795726776123
    5. '(' → logprob: -7.495795726776123
    6. ' ' → logprob: -9.245795249938965
    7. '(t' → logprob: -9.745795249938965
    8. 't' → logprob: -10.245795249938965
    9. '   ' → logprob: -10.495795249938965
    10. ' t' → logprob: -10.495795249938965

Token 207: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12704864144325256
    2. '-' → logprob: -2.1270487308502197
    3. '-prev' → logprob: -9.75204849243164
    4. ' ' → logprob: -10.00204849243164
    5. '   ' → logprob: -11.87704849243164
    6. '  ' → logprob: -13.37704849243164
    7. ' ' → logprob: -13.37704849243164
    8. '-t' → logprob: -13.75204849243164
    9. '           ' → logprob: -13.87704849243164
    10. 'prev' → logprob: -14.00204849243164

Token 208: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5231915712356567
    2. ' prev' → logprob: -0.8981915712356567
    3. '(prev' → logprob: -10.523191452026367
    4. '	prev' → logprob: -11.523191452026367
    5. ' ' → logprob: -12.023191452026367
    6. '-prev' → logprob: -12.148191452026367
    7. '_prev' → logprob: -12.398191452026367
    8. 's' → logprob: -12.773191452026367
    9. ' s' → logprob: -12.773191452026367
    10. '    ' → logprob: -13.273191452026367

Token 209: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.3464544432936236e-05
    2. 't' → logprob: -10.125043869018555
    3. '_' → logprob: -13.250043869018555
    4. '_s' → logprob: -14.250043869018555
    5. 's' → logprob: -16.000043869018555
    6. ')' → logprob: -16.125043869018555
    7. '\' → logprob: -16.375043869018555
    8. '   ' → logprob: -16.500043869018555
    9. '__' → logprob: -16.625043869018555
    10. '	t' → logprob: -17.250043869018555

Token 210: ' time' (ID: 1058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44898080825805664
    2. '           ' → logprob: -1.9489808082580566
    3. '   ' → logprob: -2.1989808082580566
    4. ' *' → logprob: -3.1989808082580566
    5. '       ' → logprob: -3.5739808082580566
    6. ')*' → logprob: -4.448980808258057
    7. ')
' → logprob: -5.323980808258057
    8. ')*(' → logprob: -5.823980808258057
    9. ' )' → logprob: -5.948980808258057
    10. '
' → logprob: -6.073980808258057

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03010462410748005
    2. '       ' → logprob: -3.780104637145996
    3. ',' → logprob: -5.780104637145996
    4. '        
' → logprob: -6.780104637145996
    5. '            
' → logprob: -7.030104637145996
    6. '
' → logprob: -7.530104637145996
    7. 'volume' → logprob: -8.155104637145996
    8. ' if' → logprob: -8.905104637145996
    9. ' volume' → logprob: -9.030104637145996
    10. '    
' → logprob: -9.405104637145996

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0040987045504152775
    2. '       ' → logprob: -5.629098892211914
    3. ',' → logprob: -8.504098892211914
    4. 'volume' → logprob: -9.504098892211914
    5. '            
' → logprob: -9.629098892211914
    6. '        
' → logprob: -10.254098892211914
    7. '
' → logprob: -10.879098892211914
    8. '               ' → logprob: -11.129098892211914
    9. ' volume' → logprob: -11.254098892211914
    10. '	       ' → logprob: -11.754098892211914

Token 213: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' (adapté à ' volume') → logprob: -0.6198267936706543
    2. '           ' → logprob: -1.2448267936706543
    3. ' volume' → logprob: -1.8698267936706543
    4. '       ' → logprob: -4.369826793670654
    5. 'delta' → logprob: -5.744826793670654
    6. 'duration' → logprob: -7.119826793670654
    7. '
' → logprob: -7.619826793670654
    8. '   ' → logprob: -7.869826793670654
    9. 'interval' → logprob: -8.119827270507812
    10. 'vol' → logprob: -8.244827270507812

Token 214: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006265062838792801
    2. ' +=' → logprob: -5.131265163421631
    3. '=' → logprob: -8.381264686584473
    4. '+=(' → logprob: -9.381264686584473
    5. '   ' → logprob: -10.756264686584473
    6. '+' → logprob: -14.131264686584473
    7. ']+=' → logprob: -15.131264686584473
    8. '	' → logprob: -15.756264686584473
    9. '  ' → logprob: -16.00626564025879
    10. '    ' → logprob: -16.13126564025879

Token 215: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20140962302684784
    2. 'volume' → logprob: -1.8264095783233643
    3. ' min' → logprob: -4.076409816741943
    4. ' volume' → logprob: -5.451409816741943
    5. 'max' → logprob: -9.326409339904785
    6. '   ' → logprob: -11.076409339904785
    7. '(min' → logprob: -11.201409339904785
    8. '(volume' → logprob: -11.576409339904785
    9. '	min' → logprob: -11.826409339904785
    10. ' ' → logprob: -12.076409339904785

Token 216: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.3869902789592743
    2. '(volume' → logprob: -1.1369903087615967
    3. '(' → logprob: -9.386990547180176
    4. 'L' → logprob: -11.261990547180176
    5. 'volume' → logprob: -12.011990547180176
    6. '(l' → logprob: -12.511990547180176
    7. '(vol' → logprob: -13.011990547180176
    8. '(length' → logprob: -13.511990547180176
    9. '(V' → logprob: -13.886990547180176
    10. ' volume' → logprob: -13.886990547180176

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001898767426609993
    2. ' +' → logprob: -7.001898765563965
    3. '+' → logprob: -7.376898765563965
    4. ' ,' → logprob: -8.751898765563965
    5. 'volume' → logprob: -9.126898765563965
    6. '   ' → logprob: -10.251898765563965
    7. '(volume' → logprob: -10.376898765563965
    8. '+,' → logprob: -12.126898765563965
    9. ',
' → logprob: -12.376898765563965
    10. ')' → logprob: -12.501898765563965

Token 218: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.0040801819413900375
    2. ' volume' → logprob: -5.504080295562744
    3. '   ' → logprob: -14.629079818725586
    4. '       ' → logprob: -14.754079818725586
    5. '           ' → logprob: -15.379079818725586
    6. '         ' → logprob: -15.379079818725586
    7. '(volume' → logprob: -15.879079818725586
    8. ' ' → logprob: -16.504079818725586
    9. '  ' → logprob: -16.629079818725586
    10. '     ' → logprob: -16.629079818725586

Token 219: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194624066352844
    2. '+' → logprob: -1.501946210861206
    3. '   ' → logprob: -11.626946449279785
    4. ')' → logprob: -12.501946449279785
    5. ' ' → logprob: -13.501946449279785
    6. '+(' → logprob: -13.626946449279785
    7. ' plus' → logprob: -15.001946449279785
    8. ' ' → logprob: -15.376946449279785
    9. ' +(' → logprob: -15.501946449279785
    10. '  ' → logprob: -16.00194549560547

Token 220: ' (' (ID: 350)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.022704778239130974
    2. '(p' → logprob: -4.147704601287842
    3. ' pump' → logprob: -5.022704601287842
    4. ' (' → logprob: -10.022705078125
    5. 'p' → logprob: -12.022705078125
    6. '(' → logprob: -12.772705078125
    7. '   ' → logprob: -12.897705078125
    8. '(P' → logprob: -13.397705078125
    9. 'Pump' → logprob: -13.522705078125
    10. '(s' → logprob: -14.022705078125

Token 221: 's' (ID: 82)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.11556451767683029
    2. 's' → logprob: -2.2405645847320557
    3. ' pump' → logprob: -5.990564346313477
    4. ' s' → logprob: -9.615564346313477
    5. 'p' → logprob: -10.115564346313477
    6. '   ' → logprob: -10.240564346313477
    7. 'Pump' → logprob: -11.428064346313477
    8. ')' → logprob: -11.615564346313477
    9. '(s' → logprob: -11.803064346313477
    10. 'pom' → logprob: -12.053064346313477

Token 222: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0339781828224659
    2. '-' → logprob: -3.408978223800659
    3. '-prev' → logprob: -8.033978462219238
    4. ' ' → logprob: -12.783978462219238
    5. '   ' → logprob: -13.158978462219238
    6. 'prev' → logprob: -13.408978462219238
    7. '_prev' → logprob: -14.908978462219238
    8. ')' → logprob: -14.908978462219238
    9. '  ' → logprob: -15.283978462219238
    10. '(prev' → logprob: -15.533978462219238

Token 223: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0015036711702123284
    2. ' prev' → logprob: -6.5015034675598145
    3. '	prev' → logprob: -14.251503944396973
    4. '_prev' → logprob: -15.376503944396973
    5. '   ' → logprob: -15.626503944396973
    6. '(prev' → logprob: -16.376502990722656
    7. '.prev' → logprob: -17.251502990722656
    8. '           ' → logprob: -17.251502990722656
    9. '
' → logprob: -17.751502990722656
    10. ')' → logprob: -17.751502990722656

Token 224: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.696889623621246e-06
    2. 't' → logprob: -13.00000286102295
    3. ')' → logprob: -15.25000286102295
    4. '_' → logprob: -16.250001907348633
    5. ' _' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'prev' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.125001907348633
    9. '__' → logprob: -19.125001907348633
    10. '\' → logprob: -19.250001907348633

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011572468793019652
    2. ')*' → logprob: -6.876157283782959
    3. ' )' → logprob: -9.0011568069458
    4. '   ' → logprob: -14.1261568069458
    5. '*' → logprob: -15.1261568069458
    6. '*)' → logprob: -16.001157760620117
    7. ' ' → logprob: -17.251157760620117
    8. ')
' → logprob: -17.251157760620117
    9. '  ' → logprob: -17.501157760620117
    10. ')*(' → logprob: -18.126157760620117

Token 226: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4648515284061432
    2. ')' → logprob: -1.4648514986038208
    3. '*' → logprob: -2.0898516178131104
    4. ')*' → logprob: -4.339851379394531
    5. '   ' → logprob: -5.839851379394531
    6. ' ' → logprob: -7.589851379394531
    7. ' )' → logprob: -8.464851379394531
    8. '*p' → logprob: -8.464851379394531
    9. '  ' → logprob: -10.589851379394531
    10. ',' → logprob: -11.339851379394531

Token 227: ' pump' (ID: 17128)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.00023250321100931615
    2. ' pump' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.750232696533203
    4. 'p' → logprob: -14.500232696533203
    5. 'ump' → logprob: -17.000232696533203
    6. ' ' → logprob: -17.500232696533203
    7. '  ' → logprob: -17.625232696533203
    8. '    ' → logprob: -17.750232696533203
    9. 'Pump' → logprob: -17.750232696533203
    10. '           ' → logprob: -17.875232696533203

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38788726925849915
    2. ')
' → logprob: -1.1378872394561768
    3. '           ' → logprob: -7.637887477874756
    4. ')
' → logprob: -8.012887001037598
    5. '       ' → logprob: -8.887887001037598
    6. '   ' → logprob: -10.137887001037598
    7. ')

' → logprob: -12.012887001037598
    8. ' )' → logprob: -12.137887001037598
    9. ' )
' → logprob: -12.262887001037598
    10. ')\' → logprob: -12.512887001037598

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3637499213218689
    2. '       ' → logprob: -1.2387499809265137
    3. '
' → logprob: -4.613749980926514
    4. 'prev' → logprob: -5.363749980926514
    5. '   ' → logprob: -8.363749504089355
    6. ',' → logprob: -9.613749504089355
    7. '        
' → logprob: -9.863749504089355
    8. '
' → logprob: -9.863749504089355
    9. ' prev' → logprob: -10.363749504089355
    10. '_prev' → logprob: -10.613749504089355

Token 230: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4870121479034424
    2. 'if' → logprob: -1.7370121479034424
    3. 'prev' → logprob: -2.3620121479034424
    4. '           ' → logprob: -3.1120121479034424
    5. 'volume' → logprob: -3.3620121479034424
    6. '
' → logprob: -3.7370121479034424
    7. ' if' → logprob: -4.987011909484863
    8. '        
' → logprob: -7.237011909484863
    9. ' volume' → logprob: -7.362011909484863
    10. 'duration' → logprob: -7.487011909484863

Token 231: ' consumption' (ID: 23818)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.5153762102127075
    2. 'volume' → logprob: -1.7653762102127075
    3. 'delta' → logprob: -2.515376091003418
    4. 'cons' → logprob: -2.890376091003418
    5. 'consume' → logprob: -3.265376091003418
    6. '#' → logprob: -3.890376091003418
    7. '       ' → logprob: -5.015376091003418
    8. 'change' → logprob: -5.140376091003418
    9. 'dur' → logprob: -5.390376091003418
    10. '           ' → logprob: -5.765376091003418

Token 232: ' period' (ID: 5265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9293147325515747
    2. '_duration' → logprob: -2.304314613342285
    3. '_volume' → logprob: -2.429314613342285
    4. 'volume' → logprob: -2.429314613342285
    5. 'duration' → logprob: -2.679314613342285
    6. ' =' → logprob: -3.554314613342285
    7. '_rate' → logprob: -3.679314613342285
    8. ' during' → logprob: -3.804314613342285
    9. '_interval' → logprob: -3.929314613342285
    10. 'during' → logprob: -4.054314613342285

Token 233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4013214707374573
    2. '           ' → logprob: -1.2763214111328125
    3. 'volume' → logprob: -3.4013214111328125
    4. 'duration' → logprob: -5.0263214111328125
    5. ' volume' → logprob: -5.4013214111328125
    6. '=' → logprob: -6.1513214111328125
    7. ' =' → logprob: -6.1513214111328125
    8. '   ' → logprob: -6.7763214111328125
    9. ' duration' → logprob: -7.7763214111328125
    10. 'length' → logprob: -7.7763214111328125

Token 234: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9044776558876038
    2. 'volume' → logprob: -1.404477596282959
    3. 'duration' → logprob: -1.904477596282959
    4. '           ' → logprob: -2.154477596282959
    5. ' volume' → logprob: -3.029477596282959
    6. ' duration' → logprob: -4.029477596282959
    7. 'delta' → logprob: -5.029477596282959
    8. ' delta' → logprob: -6.279477596282959
    9. 'length' → logprob: -6.404477596282959
    10. ' consumption' → logprob: -6.529477596282959

Token 235: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' (adapté à ' volume') → logprob: -0.34846940636634827
    2. 'duration' → logprob: -1.4734693765640259
    3. 'delta' → logprob: -2.9734694957733154
    4. '           ' → logprob: -5.598469257354736
    5. 'vol' → logprob: -5.973469257354736
    6. 'cons' → logprob: -6.598469257354736
    7. 'change' → logprob: -6.723469257354736
    8. '       ' → logprob: -6.973469257354736
    9. 'dt' → logprob: -7.098469257354736
    10. 'd' → logprob: -7.348469257354736

Token 236: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.16125676035881042
    2. '=' → logprob: -2.286256790161133
    3. ' -=' → logprob: -3.161256790161133
    4. '+=' → logprob: -5.536256790161133
    5. '   ' → logprob: -7.661256790161133
    6. '-' → logprob: -8.286256790161133
    7. ' +=' → logprob: -8.911256790161133
    8. ' =' → logprob: -9.286256790161133
    9. '	' → logprob: -12.161256790161133
    10. ' ' → logprob: -12.286256790161133

Token 237: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.08882593363523483
    2. '(u' → logprob: -3.3388259410858154
    3. '(p' → logprob: -3.4638259410858154
    4. ' (' → logprob: -4.213825702667236
    5. '(s' → logprob: -6.338825702667236
    6. '(P' → logprob: -7.588825702667236
    7. '(T' → logprob: -7.713825702667236
    8. '((' → logprob: -8.338826179504395
    9. '(' → logprob: -9.213826179504395
    10. '   ' → logprob: -9.588826179504395

Token 238: 't' (ID: 83)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.06931343674659729
    2. 't' → logprob: -3.5693135261535645
    3. 'p' → logprob: -4.4443135261535645
    4. '-p' → logprob: -4.6943135261535645
    5. '(t' → logprob: -5.4443135261535645
    6. '(p' → logprob: -5.4443135261535645
    7. '-' → logprob: -5.9443135261535645
    8. 'u' → logprob: -6.0693135261535645
    9. ' pump' → logprob: -6.4443135261535645
    10. '-u' → logprob: -7.3193135261535645

Token 239: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04432108998298645
    2. '-' → logprob: -3.169321060180664
    3. ')' → logprob: -7.794321060180664
    4. ' *' → logprob: -8.169321060180664
    5. ',' → logprob: -8.794321060180664
    6. ' ' → logprob: -8.794321060180664
    7. '*' → logprob: -9.044321060180664
    8. '-u' → logprob: -9.419321060180664
    9. '   ' → logprob: -9.794321060180664
    10. '-p' → logprob: -11.419321060180664

Token 240: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015124812489375472
    2. ' s' → logprob: -6.50151252746582
    3. 'prev' → logprob: -11.75151252746582
    4. ' ' → logprob: -14.12651252746582
    5. '   ' → logprob: -14.62651252746582
    6. ')' → logprob: -14.87651252746582
    7. 'u' → logprob: -15.87651252746582
    8. '	s' → logprob: -16.12651252746582
    9. ' prev' → logprob: -16.25151252746582
    10. '_s' → logprob: -16.37651252746582

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002569289645180106
    2. ')*' → logprob: -8.875256538391113
    3. ' )' → logprob: -9.125256538391113
    4. ')*(' → logprob: -12.750256538391113
    5. '*' → logprob: -13.000256538391113
    6. '   ' → logprob: -13.375256538391113
    7. '*)' → logprob: -14.000256538391113
    8. ' *' → logprob: -15.750256538391113
    9. ' ' → logprob: -16.37525749206543
    10. '）' → logprob: -16.50025749206543

Token 242: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22721070051193237
    2. '*' → logprob: -1.7272107601165771
    3. '*(-' → logprob: -3.852210760116577
    4. ')' → logprob: -6.227210521697998
    5. '*(' → logprob: -6.602210521697998
    6. ')*' → logprob: -8.102210998535156
    7. '*-' → logprob: -8.352210998535156
    8. '   ' → logprob: -8.352210998535156
    9. ' ' → logprob: -10.102210998535156
    10. ' (-' → logprob: -11.352210998535156

Token 243: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03347740322351456
    2. '(u' → logprob: -3.908477306365967
    3. '(-' → logprob: -4.658477306365967
    4. ' (' → logprob: -6.158477306365967
    5. '(' → logprob: -7.158477306365967
    6. '(P' → logprob: -7.783477306365967
    7. '((' → logprob: -10.783477783203125
    8. '(-(' → logprob: -11.033477783203125
    9. 'pump' → logprob: -11.908477783203125
    10. ' (-' → logprob: -12.033477783203125

Token 244: 'pump' (ID: 184204)
  Prédit: 'pump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.00979292206466198
    2. 'p' → logprob: -5.384792804718018
    3. '(p' → logprob: -6.009792804718018
    4. ' pump' → logprob: -6.134792804718018
    5. '-p' → logprob: -7.759792804718018
    6. 'Pump' → logprob: -10.384793281555176
    7. '(-' → logprob: -10.884793281555176
    8. '-' → logprob: -11.634793281555176
    9. ' (' → logprob: -11.759793281555176
    10. 'P' → logprob: -12.259793281555176

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03833465278148651
    2. '-' → logprob: -3.288334608078003
    3. '-u' → logprob: -8.163334846496582
    4. ' ' → logprob: -11.788334846496582
    5. ')' → logprob: -15.038334846496582
    6. '   ' → logprob: -15.913334846496582
    7. ' u' → logprob: -16.538333892822266
    8. 'u' → logprob: -16.663333892822266
    9. ' ' → logprob: -17.038333892822266
    10. '  ' → logprob: -17.288333892822266

Token 246: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0004319804720580578
    2. ' u' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.250432014465332
    4. ' ' → logprob: -15.625432014465332
    5. ')' → logprob: -16.250431060791016
    6. '           ' → logprob: -16.500431060791016
    7. '	u' → logprob: -16.500431060791016
    8. '       ' → logprob: -16.875431060791016
    9. 'user' → logprob: -17.875431060791016
    10. '[u' → logprob: -18.000431060791016

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004083266947418451
    2. ')
' → logprob: -5.504083156585693
    3. ')
' → logprob: -13.004083633422852
    4. ')

' → logprob: -13.254083633422852
    5. ' )' → logprob: -14.629083633422852
    6. '       ' → logprob: -16.12908363342285
    7. '))' → logprob: -16.37908363342285
    8. '   ' → logprob: -16.62908363342285
    9. ')#' → logprob: -17.50408363342285
    10. '<|end|>' → logprob: -17.50408363342285

Token 248: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43922683596611023
    2. '           ' → logprob: -1.0642268657684326
    3. '
' → logprob: -4.6892266273498535
    4. ',' → logprob: -7.9392266273498535
    5. '   ' → logprob: -7.9392266273498535
    6. ' if' → logprob: -8.314227104187012
    7. '<|end|>' → logprob: -9.064227104187012
    8. '```' → logprob: -9.689227104187012
    9. '        
' → logprob: -10.439227104187012
    10. '
' → logprob: -10.564227104187012

Token 249: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24897514283657074
    2. ' if' → logprob: -1.998975157737732
    3. '           ' → logprob: -2.8739750385284424
    4. 'if' (adapté à ' if') → logprob: -3.7489750385284424
    5. ' min' → logprob: -5.7489752769470215
    6. 'min' → logprob: -6.6239752769470215
    7. '   ' → logprob: -8.248974800109863
    8. '
' → logprob: -9.498974800109863
    9. '_min' → logprob: -11.623974800109863
    10. ' ' → logprob: -11.623974800109863

Token 250: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.14270904660224915
    2. ' volume' → logprob: -2.0177090167999268
    3. '(volume' → logprob: -10.392708778381348
    4. 'Volume' → logprob: -14.142708778381348
    5. 'min' → logprob: -14.642708778381348
    6. '   ' → logprob: -15.017708778381348
    7. '  ' → logprob: -15.142708778381348
    8. '.volume' → logprob: -15.392708778381348
    9. '_volume' → logprob: -15.767708778381348
    10. '(' → logprob: -15.767708778381348

Token 251: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759525299072266
    2. '<' → logprob: -0.8259525299072266
    3. '<m' → logprob: -12.200952529907227
    4. ' ' → logprob: -12.575952529907227
    5. '   ' → logprob: -14.450952529907227
    6. '<n' → logprob: -14.575952529907227
    7. '<p' → logprob: -15.075952529907227
    8. '<int' → logprob: -15.200952529907227
    9. '<v' → logprob: -15.200952529907227
    10. '<s' → logprob: -15.325952529907227

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43028169870376587
    2. 'min' → logprob: -1.055281639099121
    3. ' min' → logprob: -6.680281639099121
    4. ' ' → logprob: -8.055281639099121
    5. '	min' → logprob: -12.805281639099121
    6. 'minimum' → logprob: -14.305281639099121
    7. '(min' → logprob: -14.430281639099121
    8. '   ' → logprob: -14.430281639099121
    9. '
' → logprob: -14.680281639099121
    10. '=min' → logprob: -15.242781639099121

Token 253: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6327802538871765
    2. '0' → logprob: -0.7577802538871765
    3. ' min' → logprob: -8.757780075073242
    4. ' ' → logprob: -10.882780075073242
    5. '	min' → logprob: -13.132780075073242
    6. 'minimum' → logprob: -14.257780075073242
    7. '(min' → logprob: -14.507780075073242
    8. '   ' → logprob: -14.882780075073242
    9. '
' → logprob: -15.257780075073242
    10. '=min' → logprob: -15.632780075073242

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029000381007790565
    2. ':
' → logprob: -3.6540002822875977
    3. '       ' → logprob: -6.529000282287598
    4. '           ' → logprob: -6.904000282287598
    5. ':return' → logprob: -8.779000282287598
    6. ' or' → logprob: -10.404000282287598
    7. ' :' → logprob: -10.779000282287598
    8. '               ' → logprob: -11.529000282287598
    9. ' :
' → logprob: -12.404000282287598
    10. '):' → logprob: -13.029000282287598

Token 255: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02214701659977436
    2. ' return' → logprob: -4.272147178649902
    3. 'return' → logprob: -4.897147178649902
    4. '       ' → logprob: -8.147147178649902
    5. '               ' → logprob: -8.647147178649902
    6. '   ' → logprob: -11.147147178649902
    7. '          ' → logprob: -13.022147178649902
    8. '	return' → logprob: -14.772147178649902
    9. ' ' → logprob: -15.022147178649902
    10. '         ' → logprob: -15.147147178649902

Token 256: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017733341082930565
    2. '           ' → logprob: -4.517733573913574
    3. ' return' → logprob: -5.017733573913574
    4. '               ' → logprob: -10.392733573913574
    5. '   ' → logprob: -11.767733573913574
    6. '       ' → logprob: -12.517733573913574
    7. '	return' → logprob: -13.642733573913574
    8. '                   ' → logprob: -15.017733573913574
    9. '
' → logprob: -16.267732620239258
    10. ' ' → logprob: -17.017732620239258

Token 257: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '(False' → logprob: -21.000001907348633
    6. '=False' → logprob: -22.625001907348633
    7. 'false' → logprob: -22.875001907348633
    8. '0' → logprob: -23.375001907348633
    9. 'None' → logprob: -24.125001907348633
    10. '  ' → logprob: -24.500001907348633

Token 258: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07355930656194687
    2. '
' → logprob: -2.823559284210205
    3. '       ' → logprob: -5.323559284210205
    4. '        
' → logprob: -5.823559284210205
    5. '    
' → logprob: -6.073559284210205
    6. '            
' → logprob: -7.448559284210205
    7. '   ' → logprob: -8.073559761047363
    8. '  
' → logprob: -9.198559761047363
    9. ',' → logprob: -9.448559761047363
    10. '
' → logprob: -9.698559761047363

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004468772385735065
    2. '       ' → logprob: -7.750446796417236
    3. '
' → logprob: -12.125447273254395
    4. '               ' → logprob: -12.375447273254395
    5. ',' → logprob: -13.125447273254395
    6. '   ' → logprob: -13.375447273254395
    7. '          ' → logprob: -14.000447273254395
    8. '
' → logprob: -15.250447273254395
    9. '```' → logprob: -15.250447273254395
    10. '        ' → logprob: -15.375447273254395

Token 260: ' prev' (ID: 10258)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045776840299367905
    2. 'min' → logprob: -3.670776844024658
    3. '           ' → logprob: -4.045776844024658
    4. ' min' → logprob: -6.795776844024658
    5. '   ' → logprob: -8.5457763671875
    6. 'prev' (adapté à ' prev') → logprob: -8.9207763671875
    7. 'if' → logprob: -9.2957763671875
    8. '_min' → logprob: -9.6707763671875
    9. '
' → logprob: -9.9207763671875
    10. ' if' → logprob: -10.1707763671875

Token 261: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.625003814697266
    3. ' _' → logprob: -13.750003814697266
    4. '=_' → logprob: -14.500003814697266
    5. '\' → logprob: -15.500003814697266
    6. 't' → logprob: -15.875003814697266
    7. '=' → logprob: -16.125003814697266
    8. '_s' → logprob: -16.375003814697266
    9. ')_' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.500003814697266

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193077325820923
    2. ' =' → logprob: -1.5019307136535645
    3. '=s' → logprob: -13.626931190490723
    4. ' ' → logprob: -15.376931190490723
    5. '＝' → logprob: -15.876931190490723
    6. ',' → logprob: -17.376930236816406
    7. '=}' → logprob: -17.751930236816406
    8. '_=' → logprob: -17.876930236816406
    9. '=t' → logprob: -18.001930236816406
    10. '<|end|>' → logprob: -18.001930236816406

Token 263: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033546582562848926
    2. ' t' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '	t' → logprob: -20.000335693359375
    5. '`t' → logprob: -20.375335693359375
    6. 'T' → logprob: -21.375335693359375
    7. '
' → logprob: -21.375335693359375
    8. ' ' → logprob: -21.625335693359375
    9. '﻿' → logprob: -22.375335693359375
    10. '_t' → logprob: -22.625335693359375

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010809509083628654
    2. '
' → logprob: -4.635809421539307
    3. '        
' → logprob: -8.135809898376465
    4. '<|end|>' → logprob: -8.260809898376465
    5. '   ' → logprob: -8.635809898376465
    6. ' return' → logprob: -9.135809898376465
    7. '    
' → logprob: -9.385809898376465
    8. 'return' → logprob: -9.635809898376465
    9. '           ' → logprob: -11.135809898376465
    10. ',' → logprob: -11.260809898376465

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07546363770961761
    2. '   ' → logprob: -3.0754635334014893
    3. '
' → logprob: -4.200463771820068
    4. '        
' → logprob: -5.825463771820068
    5. ' return' → logprob: -5.825463771820068
    6. 'return' → logprob: -5.825463771820068
    7. '    
' → logprob: -6.325463771820068
    8. '```' → logprob: -8.07546329498291
    9. '  
' → logprob: -8.45046329498291
    10. '   
' → logprob: -9.95046329498291

Token 266: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.027583017945289612
    2. '   ' → logprob: -3.902583122253418
    3. '       ' → logprob: -5.902583122253418
    4. ' return' → logprob: -6.027583122253418
    5. 'volume' → logprob: -6.402583122253418
    6. '#' (adapté à ' #') → logprob: -9.902583122253418
    7. 'if' → logprob: -10.027583122253418
    8. '```' → logprob: -10.152583122253418
    9. '
' → logprob: -10.527583122253418
    10. 'while' → logprob: -11.402583122253418

Token 267: ' after' (ID: 1934)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7145561575889587
    2. 'volume' → logprob: -0.8395561575889587
    3. 'return' → logprob: -2.5895562171936035
    4. '   ' → logprob: -5.8395562171936035
    5. 'duration' → logprob: -8.839555740356445
    6. ' volume' → logprob: -8.964555740356445
    7. 'After' → logprob: -9.464555740356445
    8. ' #' → logprob: -9.589555740356445
    9. 'if' → logprob: -9.839555740356445
    10. 'interval' → logprob: -9.964555740356445

Token 268: ' last' (ID: 2174)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0009707756689749658
    2. ' prev' → logprob: -7.250970840454102
    3. '24' → logprob: -9.000970840454102
    4. 's' → logprob: -9.500970840454102
    5. '   ' → logprob: -10.750970840454102
    6. ' ' → logprob: -11.000970840454102
    7. '#' → logprob: -12.250970840454102
    8. 't' → logprob: -12.625970840454102
    9. '  ' → logprob: -13.000970840454102
    10. 'for' → logprob: -13.500970840454102

Token 269: ' schedule' (ID: 12262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8068801164627075
    2. '_t' → logprob: -1.8068801164627075
    3. 'prev' → logprob: -1.8068801164627075
    4. 'schedule' → logprob: -2.681879997253418
    5. 'period' → logprob: -3.056879997253418
    6. 'time' → logprob: -3.181879997253418
    7. ' schedule' → logprob: -4.181879997253418
    8. 's' → logprob: -4.556879997253418
    9. ' time' → logprob: -4.806879997253418
    10. 'interval' → logprob: -5.181879997253418

Token 270: ' to' (ID: 316)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.00320123927667737
    2. ' volume' → logprob: -6.003201007843018
    3. '   ' → logprob: -7.253201007843018
    4. '       ' → logprob: -12.128201484680176
    5. 'return' → logprob: -12.378201484680176
    6. 'duration' → logprob: -13.128201484680176
    7. '
' → logprob: -13.378201484680176
    8. '```' → logprob: -13.503201484680176
    9. '#' → logprob: -13.878201484680176
    10. '(volume' → logprob: -14.503201484680176

Token 271: ' end' (ID: 1268)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '24' → logprob: -0.7716553807258606
    2. '144' → logprob: -1.2716553211212158
    3. 'L' → logprob: -1.6466553211212158
    4. ' ' → logprob: -3.396655321121216
    5. '240' → logprob: -4.521655559539795
    6. ' L' → logprob: -5.271655559539795
    7. '864' → logprob: -5.271655559539795
    8. '100' → logprob: -5.521655559539795
    9. '0' → logprob: -5.771655559539795
    10. '   ' → logprob: -7.271655559539795

Token 272: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.38354384899139404
    2. '24' → logprob: -2.1335439682006836
    3. '   ' → logprob: -2.3835439682006836
    4. ' of' → logprob: -2.6335439682006836
    5. '=' → logprob: -4.758543968200684
    6. 'time' → logprob: -5.008543968200684
    7. '       ' → logprob: -5.008543968200684
    8. '60' → logprob: -5.508543968200684
    9. '360' → logprob: -5.633543968200684
    10. '
' → logprob: -7.008543968200684

Token 273: ' day' (ID: 2163)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.24930937588214874
    2. '24' → logprob: -1.7493094205856323
    3. '100' → logprob: -3.8743093013763428
    4. 'day' → logprob: -4.749309539794922
    5. '144' → logprob: -4.999309539794922
    6. '864' → logprob: -5.499309539794922
    7. '   ' → logprob: -6.249309539794922
    8. ' L' → logprob: -6.624309539794922
    9. ' ' → logprob: -6.624309539794922
    10. 'line' → logprob: -7.874309539794922

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10791826248168945
    2. '   ' → logprob: -3.3579182624816895
    3. 'volume' → logprob: -3.3579182624816895
    4. ' volume' → logprob: -3.7329182624816895
    5. ',' → logprob: -5.6079182624816895
    6. '
' → logprob: -6.4829182624816895
    7. '24' → logprob: -7.3579182624816895
    8. '    
' → logprob: -7.9829182624816895
    9. '=' → logprob: -7.9829182624816895
    10. '        
' → logprob: -8.107917785644531

Token 275: '       ' (ID: 309)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.569101870059967
    2. '       ' → logprob: -1.1941018104553223
    3. '   ' → logprob: -2.6941018104553223
    4. ' volume' → logprob: -2.8191018104553223
    5. '24' → logprob: -6.194101810455322
    6. '240' → logprob: -8.56910228729248
    7. '    ' → logprob: -8.81910228729248
    8. ',' → logprob: -8.81910228729248
    9. 'return' → logprob: -9.06910228729248
    10. '```' → logprob: -9.31910228729248

Token 276: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' (adapté à ' volume') → logprob: -0.10197671502828598
    2. '24' → logprob: -3.1019766330718994
    3. ' volume' → logprob: -3.2269766330718994
    4. '864' → logprob: -5.8519768714904785
    5. '240' → logprob: -5.9769768714904785
    6. '144' → logprob: -6.1019768714904785
    7. ' ' → logprob: -6.9769768714904785
    8. '288' → logprob: -7.1019768714904785
    9. '       ' → logprob: -7.6019768714904785
    10. '   ' → logprob: -7.6019768714904785

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815919391810894
    2. ' =' → logprob: -4.01815938949585
    3. '+=' → logprob: -11.643158912658691
    4. ' +=' → logprob: -14.518158912658691
    5. '   ' → logprob: -17.018159866333008
    6. '＝' → logprob: -18.018159866333008
    7. '=min' → logprob: -18.268159866333008
    8. ' ' → logprob: -18.768159866333008
    9. '	' → logprob: -18.893159866333008
    10. '=}' → logprob: -19.143159866333008

Token 278: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00020401719666551799
    2. ' min' → logprob: -8.500204086303711
    3. 'L' → logprob: -15.000204086303711
    4. 'max' → logprob: -15.875204086303711
    5. '	min' → logprob: -18.37520408630371
    6. ' L' → logprob: -19.62520408630371
    7. '(min' → logprob: -19.62520408630371
    8. '=min' → logprob: -19.87520408630371
    9. '   ' → logprob: -20.00020408630371
    10. 'minimum' → logprob: -20.62520408630371

Token 279: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0001261845463886857
    2. '(' → logprob: -9.000125885009766
    3. 'L' → logprob: -13.125125885009766
    4. '(
' → logprob: -14.375125885009766
    5. ' (' → logprob: -16.375125885009766
    6. '```' → logprob: -18.875125885009766
    7. '   ' → logprob: -19.000125885009766
    8. '	L' → logprob: -19.250125885009766
    9. ',L' → logprob: -19.500125885009766
    10. ' L' → logprob: -19.625125885009766

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. '(volume' → logprob: -10.6250581741333
    3. 'volume' → logprob: -11.0000581741333
    4. 'L' → logprob: -11.2500581741333
    5. ' ,' → logprob: -13.2500581741333
    6. ',L' → logprob: -13.8750581741333
    7. '(' → logprob: -13.8750581741333
    8. '(L' → logprob: -15.3750581741333
    9. ' volume' → logprob: -16.250059127807617
    10. 'Volume' → logprob: -16.500059127807617

Token 281: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.006066375412046909
    2. ' volume' → logprob: -5.13106632232666
    3. 'L' → logprob: -9.75606632232666
    4. '         ' → logprob: -10.38106632232666
    5. '   ' → logprob: -11.38106632232666
    6. ' ' → logprob: -11.88106632232666
    7. '  ' → logprob: -12.13106632232666
    8. '     ' → logprob: -12.38106632232666
    9. '       ' → logprob: -12.50606632232666
    10. ' L' → logprob: -12.75606632232666

Token 282: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061998505145311356
    2. '+' → logprob: -2.8119986057281494
    3. ')' → logprob: -10.56199836730957
    4. ',' → logprob: -13.43699836730957
    5. ' ' → logprob: -13.43699836730957
    6. '   ' → logprob: -14.68699836730957
    7. '<|end|>' → logprob: -15.06199836730957
    8. ')+' → logprob: -15.31199836730957
    9. '),' → logprob: -15.93699836730957
    10. 'import' → logprob: -15.93699836730957

Token 283: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020806141197681427
    2. ' (' → logprob: -3.895806074142456
    3. '((' → logprob: -9.520806312561035
    4. ' ' → logprob: -9.645806312561035
    5. '   ' → logprob: -10.020806312561035
    6. '24' → logprob: -10.520806312561035
    7. '(p' → logprob: -11.520806312561035
    8. '240' → logprob: -11.895806312561035
    9. '144' → logprob: -12.395806312561035
    10. '       ' → logprob: -12.395806312561035

Token 284: '864' (ID: 37438)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.649682343006134
    2. '144' → logprob: -1.2746822834014893
    3. '(' → logprob: -1.6496822834014893
    4. '864' → logprob: -5.774682521820068
    5. '240' → logprob: -6.399682521820068
    6. '100' → logprob: -8.02468204498291
    7. '(L' → logprob: -8.52468204498291
    8. '288' → logprob: -9.02468204498291
    9. ' ' → logprob: -9.14968204498291
    10. '10' → logprob: -9.27468204498291

Token 285: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.875000953674316
    3. '0' → logprob: -16.0
    4. '   ' → logprob: -16.375
    5. '000' → logprob: -16.875
    6. ' -' → logprob: -17.75
    7. ' ' → logprob: -18.25
    8. ')' → logprob: -18.375
    9. '```' → logprob: -20.375
    10. '  ' → logprob: -21.75

Token 286: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018226856365799904
    2. '-' → logprob: -4.018226623535156
    3. ' ' → logprob: -9.518226623535156
    4. ')' → logprob: -13.268226623535156
    5. ' ' → logprob: -14.018226623535156
    6. '  ' → logprob: -15.018226623535156
    7. '-prev' → logprob: -15.268226623535156
    8. '   ' → logprob: -15.893226623535156
    9. ',' → logprob: -16.018226623535156
    10. '<|end|>' → logprob: -16.768226623535156

Token 287: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -9.627176768844947e-05
    2. ' prev' → logprob: -9.250096321105957
    3. '	prev' → logprob: -16.62509536743164
    4. '   ' → logprob: -18.75009536743164
    5. '(prev' → logprob: -18.87509536743164
    6. '.prev' → logprob: -20.25009536743164
    7. '_prev' → logprob: -20.87509536743164
    8. 'previous' → logprob: -21.75009536743164
    9. ' ' → logprob: -22.12509536743164
    10. '
' → logprob: -22.62509536743164

Token 288: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.0126840758603066e-05
    2. 't' → logprob: -10.125040054321289
    3. '	t' → logprob: -19.62504005432129
    4. '_' → logprob: -20.25004005432129
    5. 's' → logprob: -20.75004005432129
    6. 'т' → logprob: -21.25004005432129
    7. '\' → logprob: -21.37504005432129
    8. '   ' → logprob: -21.37504005432129
    9. '[' → logprob: -21.62504005432129
    10. '-t' → logprob: -21.81254005432129

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002123614540323615
    2. ' )' → logprob: -8.500212669372559
    3. ')*' → logprob: -11.750212669372559
    4. '   ' → logprob: -14.250212669372559
    5. '*' → logprob: -15.750212669372559
    6. ' ' → logprob: -16.750211715698242
    7. ' *' → logprob: -17.875211715698242
    8. '	' → logprob: -18.000211715698242
    9. ')
' → logprob: -18.250211715698242
    10. '}' → logprob: -18.500211715698242

Token 290: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20207186043262482
    2. '*' → logprob: -1.7020719051361084
    3. ')' → logprob: -7.452071666717529
    4. ' ' → logprob: -10.077072143554688
    5. '   ' → logprob: -11.077072143554688
    6. ')*' → logprob: -11.327072143554688
    7. '*p' → logprob: -12.077072143554688
    8. ' ' → logprob: -13.577072143554688
    9. ' )' → logprob: -14.202072143554688
    10. '  ' → logprob: -15.202072143554688

Token 291: ' pump' (ID: 17128)
  Prédit: 'pump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pump' → logprob: -0.02975071594119072
    2. ' pump' → logprob: -3.5297508239746094
    3. 'p' → logprob: -15.77975082397461
    4. 'Pump' → logprob: -16.40475082397461
    5. ' pum' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '   ' → logprob: -17.77975082397461
    8. '	p' → logprob: -18.77975082397461
    9. '
' → logprob: -19.02975082397461
    10. '    ' → logprob: -19.27975082397461

Token 292: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06221986934542656
    2. ')' → logprob: -2.8122198581695557
    3. '       ' → logprob: -8.562219619750977
    4. '   ' → logprob: -9.812219619750977
    5. ')
' → logprob: -12.187219619750977
    6. ' )
' → logprob: -14.437219619750977
    7. ')

' → logprob: -14.937219619750977
    8. ')return' → logprob: -16.312219619750977
    9. ' )' → logprob: -17.437219619750977
    10. ')`
' → logprob: -17.562219619750977

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25246545672416687
    2. '   ' → logprob: -1.5024654865264893
    3. 'return' → logprob: -7.87746524810791
    4. ' return' → logprob: -8.87746524810791
    5. '
' → logprob: -11.12746524810791
    6. '	return' → logprob: -14.12746524810791
    7. '    
' → logprob: -14.25246524810791
    8. '           ' → logprob: -14.75246524810791
    9. '        
' → logprob: -15.62746524810791
    10. '<|end|>' → logprob: -16.002466201782227

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06305572390556335
    2. ' return' → logprob: -3.8130557537078857
    3. '   ' → logprob: -3.9380557537078857
    4. '       ' → logprob: -3.9380557537078857
    5. '
' → logprob: -10.313055992126465
    6. 'if' → logprob: -11.313055992126465
    7. '	return' → logprob: -12.313055992126465
    8. '  ' → logprob: -13.313055992126465
    9. ' if' → logprob: -13.688055992126465
    10. ' ' → logprob: -13.813055992126465

Token 295: ' volume' (ID: 10945)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7024044394493103
    2. 'volume' → logprob: -0.7024044394493103
    3. ' volume' → logprob: -5.327404499053955
    4. ' True' → logprob: -5.452404499053955
    5. '(volume' → logprob: -11.202404022216797
    6. ' ' → logprob: -11.327404022216797
    7. 'False' → logprob: -11.327404022216797
    8. '(True' → logprob: -11.827404022216797
    9. 'vol' → logprob: -12.077404022216797
    10. 'pump' → logprob: -12.577404022216797

Token 296: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.007828776724636555
    2. '>=' → logprob: -5.007828712463379
    3. ' >' → logprob: -6.882828712463379
    4. '>' → logprob: -9.632828712463379
    5. ' ' → logprob: -11.882828712463379
    6. ' <' → logprob: -12.132828712463379
    7. ' ≥' → logprob: -12.882828712463379
    8. '   ' → logprob: -13.382828712463379
    9. ' ==' → logprob: -13.507828712463379
    10. ' !=' → logprob: -13.882828712463379

Token 297: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -17.062524795532227
    4. '   ' → logprob: -17.125024795532227
    5. '00' → logprob: -17.937524795532227
    6. '  ' → logprob: -18.062524795532227
    7. '۰' → logprob: -18.500024795532227
    8. ' ' → logprob: -19.000024795532227
    9. '000' → logprob: -19.125024795532227
    10. 'min' → logprob: -19.437524795532227

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.62501335144043
    4. 'min' → logprob: -17.62501335144043
    5. 'zero' → logprob: -17.62501335144043
    6. '۰' → logprob: -17.68751335144043
    7. '00' → logprob: -17.93751335144043
    8. '1' → logprob: -18.12501335144043
    9. '000' → logprob: -18.31251335144043
    10. '   ' → logprob: -18.37501335144043

Token 299: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.502727746963501
    2. '    
' → logprob: -1.627727746963501
    3. '   ' → logprob: -1.752727746963501
    4. '<|end|>' → logprob: -3.877727746963501
    5. '  
' → logprob: -6.627727508544922
    6. '

' → logprob: -7.127727508544922
    7. '   
' → logprob: -7.752727508544922
    8. '\n' → logprob: -7.752727508544922
    9. '<|end|>' → logprob: -8.252727508544922
    10. ' 
' → logprob: -8.502727508544922

Token 300: '   ' (ID: 271)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.05135929584503174
    2. '   ' → logprob: -3.801359176635742
    3. 'left' → logprob: -4.176359176635742
    4. 'lo' → logprob: -5.176359176635742
    5. ' low' → logprob: -5.176359176635742
    6. ' lo' → logprob: -7.676359176635742
    7. 'pump' → logprob: -8.301359176635742
    8. ' left' → logprob: -8.926359176635742
    9. '    
' → logprob: -9.551359176635742
    10. 'l' → logprob: -9.676359176635742

Token 301: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.11668066680431366
    2. 'left' (adapté à ' left') → logprob: -2.36668062210083
    3. 'lo' → logprob: -4.11668062210083
    4. 'l' → logprob: -11.116681098937988
    5. '   ' → logprob: -12.116681098937988
    6. '#' → logprob: -12.366681098937988
    7. 'lb' → logprob: -12.741681098937988
    8. 'ok' → logprob: -12.866681098937988
    9. ' low' → logprob: -13.116681098937988
    10. 'hi' → logprob: -13.241681098937988

Token 302: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12652431428432465
    2. '=' → logprob: -2.3765242099761963
    3. ',' → logprob: -3.7515242099761963
    4. ' ' → logprob: -6.501524448394775
    5. '<|end|>' → logprob: -7.501524448394775
    6. ' ,' → logprob: -7.876524448394775
    7. '  ' → logprob: -11.501523971557617
    8. '    ' → logprob: -11.501523971557617
    9. '   ' → logprob: -12.001523971557617
    10. 'space' → logprob: -12.126523971557617

Token 303: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.061970487236976624
    2. 'right' → logprob: -2.8119704723358154
    3. ' ' → logprob: -13.811970710754395
    4. '=' → logprob: -13.936970710754395
    5. '	right' → logprob: -15.311970710754395
    6. '   ' → logprob: -15.436970710754395
    7. '  ' → logprob: -16.311969757080078
    8. ' =' → logprob: -16.436969757080078
    9. ',right' → logprob: -16.436969757080078
    10. '[right' → logprob: -16.561969757080078

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054445445537567
    2. '=' → logprob: -3.8955445289611816
    3. ' ' → logprob: -13.020544052124023
    4. '   ' → logprob: -15.645544052124023
    5. '    ' → logprob: -16.145544052124023
    6. ',' → logprob: -16.395544052124023
    7. ' =)' → logprob: -17.895544052124023
    8. '<|end|>' → logprob: -18.270544052124023
    9. ' =
' → logprob: -18.770544052124023
    10. '  ' → logprob: -18.895544052124023

Token 305: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003241414960939437
    2. ' ' → logprob: -8.125324249267578
    3. 'max' → logprob: -11.125324249267578
    4. '1' → logprob: -11.375324249267578
    5. '   ' → logprob: -14.000324249267578
    6. 'min' → logprob: -15.375324249267578
    7. '100' → logprob: -15.500324249267578
    8. ' max' → logprob: -15.812824249267578
    9. '  ' → logprob: -16.000324249267578
    10. '10' → logprob: -16.562824249267578

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000506326905451715
    2. 'max' → logprob: -7.625506401062012
    3. '1' → logprob: -11.500506401062012
    4. ' ' → logprob: -12.625506401062012
    5. '10' → logprob: -13.250506401062012
    6. '100' → logprob: -13.750506401062012
    7. 'min' → logprob: -13.750506401062012
    8. '000' → logprob: -16.000505447387695
    9. '(max' → logprob: -16.063005447387695
    10. '(' → logprob: -16.188005447387695

Token 307: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01009154412895441
    2. ' ,' → logprob: -4.635091781616211
    3. '   ' → logprob: -8.635091781616211
    4. ' =' → logprob: -10.135091781616211
    5. '    ' → logprob: -10.760091781616211
    6. ' ' → logprob: -11.010091781616211
    7. '100' → logprob: -11.510091781616211
    8. '=' → logprob: -11.510091781616211
    9. '1' → logprob: -11.760091781616211
    10. ',
' → logprob: -12.010091781616211

Token 308: '0' (ID: 15)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.21978849172592163
    2. '6' → logprob: -2.8447885513305664
    3. '8' → logprob: -2.8447885513305664
    4. '9' → logprob: -2.9697885513305664
    5. '5' → logprob: -4.344788551330566
    6. '10' → logprob: -4.594788551330566
    7. '1' → logprob: -5.844788551330566
    8. ' ' → logprob: -6.219788551330566
    9. '+' → logprob: -7.844788551330566
    10. '12' → logprob: -7.969788551330566

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029855666682124138
    2. ' ,' → logprob: -3.529855728149414
    3. ',
' → logprob: -10.029855728149414
    4. ' ' → logprob: -10.279855728149414
    5. ' ,
' → logprob: -11.904855728149414
    6. ' 
' → logprob: -12.279855728149414
    7. '1' → logprob: -12.654855728149414
    8. '
' → logprob: -12.779855728149414
    9. '.' → logprob: -13.154855728149414
    10. '   ' → logprob: -14.154855728149414

Token 310: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5524551868438721
    2. '100' → logprob: -1.552455186843872
    3. '1' → logprob: -1.927455186843872
    4. '10' → logprob: -2.927455186843872
    5. ' max' → logprob: -4.927454948425293
    6. 'float' → logprob: -5.427454948425293
    7. ' ' → logprob: -6.427454948425293
    8. 'L' → logprob: -9.052454948425293
    9. '200' → logprob: -9.427454948425293
    10. 'sum' → logprob: -9.552454948425293

Token 311: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6843507885932922
    2. 'max' → logprob: -1.3093507289886475
    3. '1' → logprob: -1.6843507289886475
    4. '10' → logprob: -3.3093507289886475
    5. 'float' → logprob: -5.934350967407227
    6. '200' → logprob: -8.184350967407227
    7. ' max' → logprob: -8.684350967407227
    8. '500' → logprob: -9.059350967407227
    9. 'L' → logprob: -10.059350967407227
    10. 'sum' → logprob: -10.309350967407227

Token 312: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6059456467628479
    2. '000' → logprob: -0.8559456467628479
    3. '0' → logprob: -3.605945587158203
    4. '00' → logprob: -6.230945587158203
    5. '1' → logprob: -9.230945587158203
    6. '.' → logprob: -9.730945587158203
    7. '2' → logprob: -9.730945587158203
    8. '_' → logprob: -10.355945587158203
    9. '+' → logprob: -10.480945587158203
    10. 'E' → logprob: -10.480945587158203

Token 313: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1446187496185303
    2. '7' → logprob: -1.2696187496185303
    3. '6' → logprob: -1.3946187496185303
    4. '5' → logprob: -2.2696187496185303
    5. '8' → logprob: -3.7696187496185303
    6. '10' → logprob: -4.144618988037109
    7. '4' → logprob: -4.894618988037109
    8. '3' → logprob: -6.769618988037109
    9. '+' → logprob: -7.019618988037109
    10. '12' → logprob: -7.394618988037109

Token 314: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9988135099411011
    2. '
' → logprob: -1.123813509941101
    3. '   ' → logprob: -1.248813509941101
    4. 'while' → logprob: -4.498813629150391
    5. '  
' → logprob: -5.873813629150391
    6. ' while' → logprob: -6.623813629150391
    7. ' 
' → logprob: -6.748813629150391
    8. '   
' → logprob: -6.748813629150391
    9. '     
' → logprob: -7.373813629150391
    10. '\n' → logprob: -7.873813629150391

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12245521694421768
    2. '
' → logprob: -3.12245512008667
    3. ' while' → logprob: -3.62245512008667
    4. 'while' → logprob: -3.74745512008667
    5. '    
' → logprob: -3.99745512008667
    6. '	while' → logprob: -6.99745512008667
    7. '<|end|>' → logprob: -7.24745512008667
    8. '  
' → logprob: -8.122455596923828
    9. ' 
' → logprob: -8.997455596923828
    10. '   
' → logprob: -9.747455596923828

Token 316: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6247237324714661
    2. 'while' → logprob: -1.9997236728668213
    3. ' while' → logprob: -2.1247236728668213
    4. ' for' → logprob: -2.1247236728668213
    5. 'for' (adapté à ' for') → logprob: -2.4997236728668213
    6. '    
' → logprob: -5.3747239112854
    7. '
' → logprob: -5.9997239112854
    8. ' 
' → logprob: -7.4997239112854
    9. '    ' → logprob: -8.124723434448242
    10. '     
' → logprob: -9.499723434448242

Token 317: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0027362818364053965
    2. '_' → logprob: -6.2527360916137695
    3. ' i' → logprob: -7.1277360916137695
    4. ' ' → logprob: -12.62773609161377
    5. 'i' → logprob: -14.37773609161377
    6. ' __' → logprob: -15.12773609161377
    7. '_i' → logprob: -15.25273609161377
    8. ' _
' → logprob: -15.37773609161377
    9. ' step' → logprob: -16.752737045288086
    10. '__' → logprob: -16.752737045288086

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005250345566309988
    2. 'in' → logprob: -7.625524997711182
    3. ' ' → logprob: -10.62552547454834
    4. 'n' → logprob: -11.87552547454834
    5. 'range' → logprob: -12.87552547454834
    6. '  ' → logprob: -13.87552547454834
    7. '<|end|>' → logprob: -14.12552547454834
    8. '_' → logprob: -14.37552547454834
    9. '    ' → logprob: -15.87552547454834
    10. 'int' → logprob: -16.125524520874023

Token 319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616461418569088
    2. ' range' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.88361644744873
    4. '10' → logprob: -15.00861644744873
    5. '(range' → logprob: -15.13361644744873
    6. '   ' → logprob: -15.50861644744873
    7. '	range' → logprob: -15.75861644744873
    8. 'int' → logprob: -15.75861644744873
    9. 'sys' → logprob: -16.508617401123047
    10. '```' → logprob: -16.633617401123047

Token 320: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -8.750160217285156
    3. ' (' → logprob: -13.625160217285156
    4. '50' → logprob: -15.375160217285156
    5. '(
' → logprob: -15.500160217285156
    6. '100' → logprob: -15.750160217285156
    7. '40' → logprob: -15.875160217285156
    8. '20' → logprob: -16.500160217285156
    9. '60' → logprob: -16.875160217285156
    10. '30' → logprob: -17.750160217285156

Token 321: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.015132197178900242
    2. '50' → logprob: -5.515132427215576
    3. '60' → logprob: -5.515132427215576
    4. ' ' → logprob: -5.640132427215576
    5. '80' → logprob: -6.765132427215576
    6. '200' → logprob: -6.890132427215576
    7. '70' → logprob: -7.140132427215576
    8. '150' → logprob: -8.890131950378418
    9. '90' → logprob: -9.765131950378418
    10. '64' → logprob: -9.890131950378418

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04341886565089226
    2. '):' → logprob: -3.1684188842773438
    3. '   ' → logprob: -8.043418884277344
    4. ':
' → logprob: -10.543418884277344
    5. '):
' → logprob: -10.918418884277344
    6. ':' → logprob: -10.918418884277344
    7. ' ):
' → logprob: -11.293418884277344
    8. '0' → logprob: -11.418418884277344
    9. ')' → logprob: -12.668418884277344
    10. '):

' → logprob: -13.668418884277344

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009488075040280819
    2. '<|end|>' → logprob: -5.009488105773926
    3. '   ' → logprob: -6.259488105773926
    4. '<|end|>' → logprob: -8.384488105773926
    5. ' mid' → logprob: -8.884488105773926
    6. '        
' → logprob: -9.259488105773926
    7. '	   ' → logprob: -9.884488105773926
    8. '    
' → logprob: -9.884488105773926
    9. 'mid' → logprob: -10.384488105773926
    10. ' midpoint' → logprob: -10.634488105773926

Token 324: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.35920605063438416
    2. 'mid' (adapté à ' mid') → logprob: -1.2342060804367065
    3. '       ' → logprob: -4.859206199645996
    4. '   ' → logprob: -5.859206199645996
    5. 'm' → logprob: -10.109206199645996
    6. 'middle' → logprob: -11.234206199645996
    7. ' middle' → logprob: -11.859206199645996
    8. '_mid' → logprob: -11.859206199645996
    9. '    ' → logprob: -12.359206199645996
    10. ' midpoint' → logprob: -12.484206199645996

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20184791088104248
    2. '=' → logprob: -1.7018479108810425
    3. '<|end|>' → logprob: -7.826848030090332
    4. ')' → logprob: -11.576848030090332
    5. '<|end|>' → logprob: -11.826848030090332
    6. '_' → logprob: -12.201848030090332
    7. ' ' → logprob: -12.701848030090332
    8. 'space' → logprob: -13.076848030090332
    9. ',' → logprob: -13.701848030090332
    10. '.' → logprob: -14.076848030090332

Token 326: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.25511547923088074
    2. ' (' → logprob: -1.5051155090332031
    3. '(right' → logprob: -5.755115509033203
    4. '(mid' → logprob: -11.630115509033203
    5. ' ' → logprob: -13.880115509033203
    6. '   ' → logprob: -14.005115509033203
    7. '[left' → logprob: -14.005115509033203
    8. '
' → logprob: -14.505115509033203
    9. '(lhs' → logprob: -14.505115509033203
    10. '(last' → logprob: -14.755115509033203

Token 327: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.001170460251159966
    2. ' left' → logprob: -6.751170635223389
    3. 'right' → logprob: -15.12617015838623
    4. '	left' → logprob: -17.001171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '(left' → logprob: -18.751171112060547
    7. '[left' → logprob: -19.251171112060547
    8. '_left' → logprob: -20.376171112060547
    9. ' ' → logprob: -20.626171112060547
    10. '.left' → logprob: -21.126171112060547

Token 328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132616877555847
    2. ' +' → logprob: -1.3132617473602295
    3. '＋' → logprob: -18.813261032104492
    4. ' +
' → logprob: -19.563261032104492
    5. '+
' → logprob: -19.563261032104492
    6. '+r' → logprob: -19.813261032104492
    7. ' ' → logprob: -19.813261032104492
    8. ' plus' → logprob: -20.063261032104492
    9. '+b' → logprob: -20.188261032104492
    10. ' ' → logprob: -20.438261032104492

Token 329: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005234121344983578
    2. ' right' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.505233764648438
    4. '	right' → logprob: -16.630233764648438
    5. ' ' → logprob: -17.130233764648438
    6. '
' → logprob: -19.005233764648438
    7. '[right' → logprob: -19.005233764648438
    8. 'Right' → logprob: -19.755233764648438
    9. 'r' → logprob: -19.755233764648438
    10. '  ' → logprob: -20.130233764648438

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. ')/' → logprob: -10.125057220458984
    3. ' )' → logprob: -11.000057220458984
    4. '   ' → logprob: -17.750057220458984
    5. '）' → logprob: -19.875057220458984
    6. ' ' → logprob: -20.750057220458984
    7. ')*' → logprob: -21.625057220458984
    8. ' ' → logprob: -21.750057220458984
    9. ']' → logprob: -22.250057220458984
    10. '0' → logprob: -22.250057220458984

Token 331: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.061972279101610184
    2. ' /' → logprob: -2.8119723796844482
    3. '*' → logprob: -13.061972618103027
    4. ' ' → logprob: -13.686972618103027
    5. '   ' → logprob: -14.561972618103027
    6. '```' → logprob: -15.311972618103027
    7. ')/' → logprob: -15.561972618103027
    8. ' *' → logprob: -15.561972618103027
    9. ')' → logprob: -15.686972618103027
    10. ' ' → logprob: -16.43697166442871

Token 332: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026264708139933646
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.625262260437012
    4. '```' → logprob: -16.750263214111328
    5. '  ' → logprob: -17.375263214111328
    6. '    ' → logprob: -19.250263214111328
    7. '۲' → logprob: -19.437763214111328
    8. '２' → logprob: -19.750263214111328
    9. '=' → logprob: -19.937763214111328
    10. '     ' → logprob: -20.000263214111328

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.37502384185791
    4. '```' → logprob: -15.75002384185791
    5. '  ' → logprob: -16.312522888183594
    6. '۲' → logprob: -17.562522888183594
    7. '    ' → logprob: -17.625022888183594
    8. 'two' → logprob: -17.625022888183594
    9. '     ' → logprob: -17.750022888183594
    10. '=' → logprob: -17.750022888183594

Token 334: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019307518377900124
    2. '<|end|>' → logprob: -4.519307613372803
    3. '
' → logprob: -5.769307613372803
    4. '  
' → logprob: -6.019307613372803
    5. '    
' → logprob: -6.769307613372803
    6. '       ' → logprob: -7.769307613372803
    7. '        
' → logprob: -8.644307136535645
    8. 'if' → logprob: -8.769307136535645
    9. '<|end|>' → logprob: -9.019307136535645
    10. '' → logprob: -9.144307136535645

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3407340347766876
    2. ' if' → logprob: -1.9657340049743652
    3. '   ' → logprob: -2.5907340049743652
    4. '
' → logprob: -3.4657340049743652
    5. '<|end|>' → logprob: -3.7157340049743652
    6. 'if' → logprob: -5.090734004974365
    7. '    
' → logprob: -5.965734004974365
    8. '        
' → logprob: -6.090734004974365
    9. '  
' → logprob: -6.215734004974365
    10. ' 
' → logprob: -6.465734004974365

Token 336: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5951043963432312
    2. ' if' → logprob: -0.8451043963432312
    3. '       ' → logprob: -3.970104455947876
    4. '	if' → logprob: -10.220104217529297
    5. '
' → logprob: -10.345104217529297
    6. '   ' → logprob: -10.345104217529297
    7. '<|end|>' → logprob: -12.345104217529297
    8. 'If' → logprob: -12.970104217529297
    9. ' ' → logprob: -14.095104217529297
    10. '	   ' → logprob: -14.845104217529297

Token 337: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.25193315744400024
    2. 'can' → logprob: -1.5019330978393555
    3. '	can' → logprob: -13.501933097839355
    4. ' not' → logprob: -13.626933097839355
    5. '(can' → logprob: -14.251933097839355
    6. ' ' → logprob: -14.501933097839355
    7. '   ' → logprob: -15.626933097839355
    8. '_can' → logprob: -16.751934051513672
    9. 'not' → logprob: -17.126934051513672
    10. ' ' → logprob: -18.126934051513672

Token 338: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -13.37500286102295
    3. '[mid' → logprob: -14.37500286102295
    4. '(m' → logprob: -14.62500286102295
    5. ')' → logprob: -16.500003814697266
    6. '(min' → logprob: -16.875003814697266
    7. '(mi' → logprob: -17.375003814697266
    8. '(' → logprob: -17.500003814697266
    9. '(
' → logprob: -18.000003814697266
    10. 'mid' → logprob: -18.250003814697266

Token 339: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07963071018457413
    2. '):' → logprob: -2.5796306133270264
    3. ' ):
' → logprob: -7.3296308517456055
    4. ' ):' → logprob: -9.454630851745605
    5. '):
' → logprob: -12.579630851745605
    6. ':' → logprob: -14.079630851745605
    7. '   ' → logprob: -14.204630851745605
    8. ')' → logprob: -14.329630851745605
    9. ':
' → logprob: -14.704630851745605
    10. '       ' → logprob: -14.954630851745605

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5074307322502136
    2. ' right' → logprob: -1.5074307918548584
    3. '
' → logprob: -2.2574307918548584
    4. 'right' → logprob: -2.7574307918548584
    5. ' left' → logprob: -5.382430553436279
    6. '       ' → logprob: -7.007430553436279
    7. '            
' → logprob: -7.382430553436279
    8. '[right' → logprob: -7.382430553436279
    9. 'left' → logprob: -7.757430553436279
    10. ' 
' → logprob: -8.382431030273438

Token 341: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.5762344598770142
    2. ' right' → logprob: -0.8262344598770142
    3. '       ' → logprob: -8.951234817504883
    4. '   ' → logprob: -9.326234817504883
    5. '	right' → logprob: -10.201234817504883
    6. '
' → logprob: -10.701234817504883
    7. '           ' → logprob: -12.076234817504883
    8. 'left' → logprob: -12.951234817504883
    9. '[right' → logprob: -13.451234817504883
    10. '.right' → logprob: -13.451234817504883

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. '<|end|>' → logprob: -16.561967849731445
    4. ',' → logprob: -16.811967849731445
    5. '＝' → logprob: -17.311967849731445
    6. ' ' → logprob: -17.686967849731445
    7. '=cut' → logprob: -17.811967849731445
    8. ')' → logprob: -18.061967849731445
    9. '=end' → logprob: -18.186967849731445
    10. '=line' → logprob: -18.811967849731445

Token 343: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.061967797577381134
    2. ' mid' → logprob: -2.8119678497314453
    3. '(mid' → logprob: -16.811967849731445
    4. '[mid' → logprob: -17.686967849731445
    5. '_mid' → logprob: -18.561967849731445
    6. '   ' → logprob: -20.311967849731445
    7. 'middle' → logprob: -20.311967849731445
    8. 'm' → logprob: -20.561967849731445
    9. '.mid' → logprob: -20.686967849731445
    10. ' midpoint' → logprob: -21.061967849731445

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02640189416706562
    2. ' else' → logprob: -4.151401996612549
    3. 'else' → logprob: -4.651401996612549
    4. '
' → logprob: -7.276401996612549
    5. '<|end|>' → logprob: -10.40140151977539
    6. '   ' → logprob: -10.52640151977539
    7. '    
' → logprob: -12.15140151977539
    8. '  
' → logprob: -12.77640151977539
    9. ' 
' → logprob: -12.90140151977539
    10. '	else' → logprob: -13.40140151977539

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014277390204370022
    2. 'else' → logprob: -4.889277458190918
    3. ' else' → logprob: -5.014277458190918
    4. '   ' → logprob: -12.639277458190918
    5. '```' → logprob: -13.514277458190918
    6. '	else' → logprob: -14.264277458190918
    7. '<|end|>' → logprob: -14.889277458190918
    8. '	' → logprob: -15.639277458190918
    9. '      ' → logprob: -15.639277458190918
    10. '           ' → logprob: -16.0142765045166

Token 346: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6383219361305237
    2. 'else' (adapté à ' else') → logprob: -1.138321876525879
    3. '       ' → logprob: -1.888321876525879
    4. '   ' → logprob: -9.388321876525879
    5. '	else' → logprob: -9.888321876525879
    6. '	' → logprob: -13.513321876525879
    7. '    ' → logprob: -13.638321876525879
    8. '
' → logprob: -14.138321876525879
    9. '      ' → logprob: -14.263321876525879
    10. '     ' → logprob: -14.513321876525879

Token 347: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019581448286771774
    2. 'left' → logprob: -4.644581317901611
    3. ':
' → logprob: -5.894581317901611
    4. ':' → logprob: -6.019581317901611
    5. ' left' → logprob: -6.019581317901611
    6. '       ' → logprob: -7.394581317901611
    7. ':left' → logprob: -7.519581317901611
    8. '[left' → logprob: -8.01958179473877
    9. '   ' → logprob: -8.26958179473877
    10. '	       ' → logprob: -9.14458179473877

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002469158498570323
    2. '       ' → logprob: -9.25024700164795
    3. '   ' → logprob: -9.62524700164795
    4. '	       ' → logprob: -9.87524700164795
    5. 'left' → logprob: -10.75024700164795
    6. '		' → logprob: -12.12524700164795
    7. '               ' → logprob: -13.50024700164795
    8. ' left' → logprob: -13.75024700164795
    9. '	   ' → logprob: -14.00024700164795
    10. '		   ' → logprob: -14.25024700164795

Token 349: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.002080312930047512
    2. ' left' → logprob: -6.25208044052124
    3. '       ' → logprob: -9.877079963684082
    4. '           ' → logprob: -10.127079963684082
    5. '	left' → logprob: -10.127079963684082
    6. '   ' → logprob: -11.002079963684082
    7. '[left' → logprob: -12.877079963684082
    8. '(left' → logprob: -15.002079963684082
    9. ',left' → logprob: -15.127079963684082
    10. ':left' → logprob: -15.252079963684082

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ' +=' → logprob: -15.75192928314209
    4. '+=' → logprob: -18.001930236816406
    5. ' ' → logprob: -18.376930236816406
    6. '    ' → logprob: -18.751930236816406
    7. '＝' → logprob: -18.751930236816406
    8. ')' → logprob: -19.251930236816406
    9. '            ' → logprob: -19.251930236816406
    10. '.=' → logprob: -19.626930236816406

Token 351: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.10020678490400314
    2. ' mid' → logprob: -2.3502068519592285
    3. '(mid' → logprob: -16.47520637512207
    4. '[mid' → logprob: -16.85020637512207
    5. '_mid' → logprob: -17.97520637512207
    6. ' midpoint' → logprob: -18.60020637512207
    7. '.mid' → logprob: -19.47520637512207
    8. 'middle' → logprob: -20.47520637512207
    9. '           ' → logprob: -20.72520637512207
    10. ' ' → logprob: -20.97520637512207

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014814173802733421
    2. 'print' → logprob: -4.514814376831055
    3. '    
' → logprob: -6.014814376831055
    4. '
' → logprob: -6.764814376831055
    5. ' print' → logprob: -9.139814376831055
    6. '        
' → logprob: -10.889814376831055
    7. '  
' → logprob: -11.514814376831055
    8. 'else' → logprob: -11.514814376831055
    9. '   
' → logprob: -12.264814376831055
    10. '       ' → logprob: -12.889814376831055

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31392529606819153
    2. 'print' → logprob: -1.3139252662658691
    3. '```' → logprob: -7.813925266265869
    4. ' print' → logprob: -8.813925743103027
    5. '    
' → logprob: -9.438925743103027
    6. '
' → logprob: -10.563925743103027
    7. '        
' → logprob: -13.938925743103027
    8. '       ' → logprob: -14.188925743103027
    9. 'import' → logprob: -14.188925743103027
    10. '``' → logprob: -14.688925743103027

Token 354: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07591885328292847
    2. '
' → logprob: -3.3259189128875732
    3. '   ' → logprob: -3.3259189128875732
    4. ' print' → logprob: -7.450918674468994
    5. '    
' → logprob: -7.575918674468994
    6. '```' → logprob: -9.450919151306152
    7. '
' → logprob: -10.075919151306152
    8. 'import' → logprob: -12.450919151306152
    9. '  
' → logprob: -12.950919151306152
    10. '        
' → logprob: -13.575919151306152

Token 355: '("%.' (ID: 110073)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0027909690979868174
    2. '("{' → logprob: -6.252790927886963
    3. '(right' → logprob: -8.002791404724121
    4. '("%.' → logprob: -8.377791404724121
    5. '(round' → logprob: -9.127791404724121
    6. '('{' → logprob: -9.377791404724121
    7. '(int' → logprob: -10.127791404724121
    8. 'f' → logprob: -10.502791404724121
    9. '(format' → logprob: -11.002791404724121
    10. '(' → logprob: -12.502791404724121

Token 356: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8537428975105286
    2. '6' → logprob: -1.1037428379058838
    3. '7' → logprob: -1.7287428379058838
    4. '10' → logprob: -3.228742837905884
    5. '8' → logprob: -3.853742837905884
    6. '12' → logprob: -6.603743076324463
    7. '3' → logprob: -6.728743076324463
    8. '5' → logprob: -7.228743076324463
    9. '4' → logprob: -8.228742599487305
    10. '2' → logprob: -8.228742599487305

Token 357: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'lf' → logprob: -19.5
    3. 'g' → logprob: -20.0
    4. 'e' → logprob: -21.25
    5. '%' → logprob: -22.875
    6. '```' → logprob: -23.0
    7. '	f' → logprob: -23.5
    8. ' f' → logprob: -24.0
    9. 'ff' → logprob: -24.375
    10. '
' → logprob: -24.75

Token 358: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -8.697387966094539e-05
    2. '"%(' → logprob: -9.750086784362793
    3. '"%' → logprob: -10.625086784362793
    4. '%"' → logprob: -13.000086784362793
    5. '(' → logprob: -14.500086784362793
    6. '"(' → logprob: -14.625086784362793
    7. '("' → logprob: -15.625086784362793
    8. '(right' → logprob: -15.875086784362793
    9. '("%' → logprob: -15.875086784362793
    10. '()"' → logprob: -16.12508773803711

Token 359: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12950679659843445
    2. ',' → logprob: -2.754506826400757
    3. ' %' → logprob: -2.879506826400757
    4. ')' → logprob: -7.379506587982178
    5. ',right' → logprob: -7.754506587982178
    6. '%,' → logprob: -8.379507064819336
    7. '%"' → logprob: -9.379507064819336
    8. '(right' → logprob: -9.379507064819336
    9. '"' → logprob: -9.504507064819336
    10. '%(' → logprob: -9.879507064819336

Token 360: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0009153862483799458
    2. ' right' → logprob: -7.00091552734375
    3. '(right' → logprob: -12.50091552734375
    4. 'left' → logprob: -16.25091552734375
    5. '[right' → logprob: -19.25091552734375
    6. '	right' → logprob: -20.12591552734375
    7. '   ' → logprob: -20.62591552734375
    8. ')' → logprob: -20.87591552734375
    9. '右' → logprob: -21.12591552734375
    10. ',right' → logprob: -21.87591552734375

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. '   ' → logprob: -13.125008583068848
    3. ' )' → logprob: -13.250008583068848
    4. ')
' → logprob: -13.750008583068848
    5. '())' → logprob: -13.750008583068848
    6. '))' → logprob: -13.750008583068848
    7. '<|end|>' → logprob: -14.500008583068848
    8. ')}' → logprob: -15.375008583068848
    9. ')`' → logprob: -15.375008583068848
    10. '')' → logprob: -15.625008583068848


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 36.21%
Précision adaptée (1ère position): 39.28%
Précision (top 10): 78.83%
================================================================================
