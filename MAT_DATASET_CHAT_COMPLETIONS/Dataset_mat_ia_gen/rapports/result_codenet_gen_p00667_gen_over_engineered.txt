================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
from abc import ABC, abstractmethod
from typing import List, Dict

MOD = 100000007

class InputReader:
    def __init__(self, stream):
        self.stream = stream

    def read_lines(self):
        for line in self.stream:
            line = line.strip()
            if line == '#':
                break
            yield line

class CharacterMapping(ABC):
    @abstractmethod
    def get_char_count(self, digit: str) -> int:
        pass

class KanaMapping(CharacterMapping):
    _mapping = {
        '1': 5,  # あいうえお
        '2': 5,  # かきくけこ
        '3': 5,  # さしすせそ
        '4': 5,  # たちつてと
        '5': 5,  # なにぬねの
        '6': 5,  # はひふへほ
        '7': 5,  # まみむめも
        '8': 3,  # やゆよ
        '9': 5,  # らりるれろ
        '0': 3,  # わをん
    }

    def get_char_count(self, digit: str) -> int:
        return self._mapping.get(digit, 0)

class PressGroup:
    def __init__(self, digit: str, length: int, char_mapping: CharacterMapping):
        self.digit = digit
        self.length = length
        self.char_mapping = char_mapping
        self.char_count = char_mapping.get_char_count(digit)

    def number_of_interpretations(self) -> int:
        # Number of ways to split 'length' presses into characters considering looping of char_count letters
        # This equals the number of ways to partition the presses modulo char_count to characters
        # Let n = length, c = char_count
        # number of ways = number of sequences of positive integers k_i where sum k_i = n and each character corresponds to k_i presses with k_i % c != 0 except for the last one which cycles.
        # Actually, we have to count ways to split length into multiples of presses that represent chars:
        # Each character corresponds to 1 to 'char_count' presses.
        # So ways to split length into sequence with parts between 1 and char_count, order matters.
        # This is a classic integer composition problem with bounded part size.

        # We'll use DP:
        # dp[i]: number of ways to decompose i presses.
        # dp[0] = 1 (empty)
        # for i in 1..length:
        #   dp[i] = sum_{k=1 to min(i, char_count)} dp[i-k]

        dp = [0] * (self.length + 1)
        dp[0] = 1
        c = self.char_count
        for i in range(1, self.length + 1):
            start = max(0, i - c)
            # sum dp[j] for j in [i-c, i-1]
            # Use sliding window for optimization

            # For efficiency on large length, do prefix sums
            # But since length can be large (up to 100000),
            # we must optimize carefully.

        # Implement sliding window sum using prefix sums
        prefix = [0] * (self.length + 1)
        prefix[0] = dp[0]
        for i in range(1, self.length + 1):
            left = i - c
            if left < 0:
                left = 0
            dp[i] = (prefix[i-1] - prefix[left-1] if left > 0 else prefix[i-1]) % MOD
            prefix[i] = (prefix[i-1] + dp[i]) % MOD
        return dp[self.length]

class InterpretationModel(ABC):
    @abstractmethod
    def parse_input(self, input_str: str) -> List[PressGroup]:
        pass

    @abstractmethod
    def count_interpretations(self, press_groups: List[PressGroup]) -> int:
        pass

class PressGroupInterpreter(InterpretationModel):
    def __init__(self, char_mapping: CharacterMapping):
        self.char_mapping = char_mapping

    def parse_input(self, input_str: str) -> List[PressGroup]:
        if not input_str:
            return []
        groups = []
        prev = input_str[0]
        count = 1
        for ch in input_str[1:]:
            if ch == prev:
                count += 1
            else:
                groups.append(PressGroup(prev, count, self.char_mapping))
                prev = ch
                count = 1
        groups.append(PressGroup(prev, count, self.char_mapping))
        return groups

    def count_interpretations(self, press_groups: List[PressGroup]) -> int:
        # Because interpretation splits only depend on single press groups (that's where forced commits can happen),
        # the total number of interpretations is product of number of ways each group can be interpreted.
        # convert under modulo
        result = 1
        for group in press_groups:
            ways = group.number_of_interpretations()
            result = (result * ways) % MOD
        return result

class Application:
    def __init__(self, reader: InputReader, interpreter: InterpretationModel):
        self.reader = reader
        self.interpreter = interpreter

    def run(self):
        outputs = []
        for line in self.reader.read_lines():
            groups = self.interpreter.parse_input(line)
            count = self.interpreter.count_interpretations(groups)
            outputs.append(count)
        return outputs

def main():
    sys.setrecursionlimit(10**7)
    input_reader = InputReader(sys.stdin)
    char_map = KanaMapping()
    interpreter = PressGroupInterpreter(char_map)
    app = Application(input_reader, interpreter)
    results = app.run()
    for r in results:
        print(r)

if __name__ == "__main__":
    threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.869144082069397
    2. '\n' → logprob: -1.369144082069397
    3. '

' → logprob: -2.2441439628601074
    4. '.' → logprob: -2.3691439628601074
    5. '\' → logprob: -2.9941439628601074
    6. '```' → logprob: -3.6191439628601074
    7. 'import' → logprob: -4.119143962860107
    8. '.Thread' → logprob: -4.994143962860107
    9. ',' → logprob: -5.369143962860107
    10. '#' → logprob: -5.494143962860107

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8452882170677185
    2. '\n' → logprob: -1.3452882766723633
    3. '

' → logprob: -2.0952882766723633
    4. '.' → logprob: -2.9702882766723633
    5. 'import' → logprob: -3.3452882766723633
    6. '\' → logprob: -3.5952882766723633
    7. '```' → logprob: -3.8452882766723633
    8. 'def' → logprob: -3.9702882766723633
    9. '.Thread' → logprob: -4.470288276672363
    10. ',' → logprob: -5.470288276672363

Token 7: ' abc' (ID: 75094)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.00403898349031806
    2. ' socket' → logprob: -6.3790388107299805
    3. 'queue' → logprob: -6.8790388107299805
    4. ' concurrent' → logprob: -7.7540388107299805
    5. ' collections' → logprob: -7.7540388107299805
    6. ' time' → logprob: -8.50403881072998
    7. ' os' → logprob: -10.00403881072998
    8. ' io' → logprob: -10.12903881072998
    9. ' Py' → logprob: -10.62903881072998
    10. ' subprocess' → logprob: -10.75403881072998

Token 8: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5781833529472351
    2. ' import' → logprob: -0.9531833529472351
    3. 'import' → logprob: -3.07818341255188
    4. ' .' → logprob: -5.203183174133301
    5. '.import' → logprob: -7.078183174133301
    6. ' ' → logprob: -7.953183174133301
    7. '	import' → logprob: -7.953183174133301
    8. '.abstract' → logprob: -8.5781831741333
    9. '```' → logprob: -9.5781831741333
    10. '<|end|>' → logprob: -10.0781831741333

Token 9: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.016392920166254044
    2. 'ABC' → logprob: -4.141392707824707
    3. ' A' → logprob: -8.141392707824707
    4. ' ' → logprob: -10.641392707824707
    5. ' ' → logprob: -11.391392707824707
    6. ' abstract' → logprob: -11.516392707824707
    7. 'abstract' → logprob: -11.766392707824707
    8. 'A' → logprob: -12.641392707824707
    9. 'abc' → logprob: -13.016392707824707
    10. '  ' → logprob: -13.391392707824707

Token 10: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02421196736395359
    2. 'import' → logprob: -4.024211883544922
    3. ',' → logprob: -6.274211883544922
    4. '.I' → logprob: -7.399211883544922
    5. '.
' → logprob: -7.524211883544922
    6. '<|end|>' → logprob: -7.649211883544922
    7. '```' → logprob: -7.649211883544922
    8. '.import' → logprob: -8.024211883544922
    9. ' import' → logprob: -8.024211883544922
    10. '' → logprob: -8.399211883544922

Token 11: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.061967797577381134
    2. ' abstract' → logprob: -2.8119678497314453
    3. ' ABC' → logprob: -16.686967849731445
    4. '.abstract' → logprob: -16.686967849731445
    5. 'Abstract' → logprob: -17.186967849731445
    6. 'abc' → logprob: -18.061967849731445
    7. 'ABC' → logprob: -18.186967849731445
    8. 'abs' → logprob: -18.811967849731445
    9. ' ' → logprob: -18.936967849731445
    10. ' abstr' → logprob: -19.061967849731445

Token 12: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0004384174826554954
    2. 'classmethod' → logprob: -8.000438690185547
    3. 'class' → logprob: -9.875438690185547
    4. 'base' → logprob: -11.500438690185547
    5. 'methods' → logprob: -11.500438690185547
    6. '<|end|>' → logprob: -11.500438690185547
    7. 'meth' → logprob: -12.375438690185547
    8. '_method' → logprob: -12.375438690185547
    9. 'staticmethod' → logprob: -12.500438690185547
    10. 'm' → logprob: -13.250438690185547

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.603139340877533
    2. '

' → logprob: -1.3531394004821777
    3. 'class' → logprob: -1.7281394004821777
    4. '```' → logprob: -4.728139400482178
    5. '' → logprob: -5.728139400482178
    6. '<|end|>' → logprob: -6.728139400482178
    7. '
' → logprob: -6.853139400482178
    8. ' class' → logprob: -7.478139400482178
    9. '\n' → logprob: -7.478139400482178
    10. 'import' → logprob: -7.603139400482178

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3412095308303833
    2. '
' → logprob: -1.5912095308303833
    3. 'class' → logprob: -2.5912094116210938
    4. '```' → logprob: -5.216209411621094
    5. '' → logprob: -6.216209411621094
    6. '
' → logprob: -7.341209411621094
    7. '\n' → logprob: -7.716209411621094
    8. 'import' → logprob: -7.966209411621094
    9. '


' → logprob: -8.091209411621094
    10. ' class' → logprob: -8.091209411621094

Token 15: ' typing' (ID: 34152)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.11190775781869888
    2. ' collections' → logprob: -2.986907720565796
    3. ' concurrent' → logprob: -4.236907958984375
    4. ' typing' → logprob: -4.361907958984375
    5. ' io' → logprob: -4.861907958984375
    6. ' time' → logprob: -4.986907958984375
    7. 'queue' → logprob: -4.986907958984375
    8. 'collections' → logprob: -6.236907958984375
    9. ' pathlib' → logprob: -7.361907958984375
    10. ' os' → logprob: -7.486907958984375

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16233007609844208
    2. 'import' → logprob: -1.9123300313949585
    3. '.' → logprob: -6.412330150604248
    4. '<|end|>' → logprob: -8.66232967376709
    5. ' ' → logprob: -9.28732967376709
    6. '	import' → logprob: -9.91232967376709
    7. '.import' → logprob: -10.53732967376709
    8. '_import' → logprob: -11.16232967376709
    9. ' as' → logprob: -11.41232967376709
    10. '```' → logprob: -11.41232967376709

Token 17: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.038285449147224426
    2. ' List' → logprob: -3.913285493850708
    3. ' Callable' → logprob: -5.163285255432129
    4. 'Any' → logprob: -5.288285255432129
    5. ' Union' → logprob: -5.913285255432129
    6. ' Protocol' → logprob: -6.288285255432129
    7. ' Optional' → logprob: -6.413285255432129
    8. ' ABC' → logprob: -8.913285255432129
    9. ' Iterable' → logprob: -9.038285255432129
    10. ' ' → logprob: -9.663285255432129

Token 18: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07078375667333603
    2. '
' → logprob: -3.070783853530884
    3. 'class' → logprob: -4.070783615112305
    4. '```' → logprob: -5.570783615112305
    5. '\n' → logprob: -7.695783615112305
    6. 'import' → logprob: -8.445783615112305
    7. '


' → logprob: -8.695783615112305
    8. '``' → logprob: -9.820783615112305
    9. '
' → logprob: -9.820783615112305
    10. ' class' → logprob: -10.320783615112305

Token 19: ' Dict' (ID: 55179)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.8491212725639343
    2. ' Any' → logprob: -1.724121332168579
    3. 'Any' → logprob: -2.349121332168579
    4. ' Union' → logprob: -2.349121332168579
    5. ' Callable' → logprob: -2.474121332168579
    6. 'Optional' → logprob: -2.599121332168579
    7. ' Dict' → logprob: -4.34912109375
    8. 'Union' → logprob: -4.72412109375
    9. ' Tuple' → logprob: -4.97412109375
    10. 'Callable' → logprob: -4.97412109375

Token 20: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04990046098828316
    2. '
' → logprob: -3.174900531768799
    3. 'class' → logprob: -5.174900531768799
    4. '```' → logprob: -7.799900531768799
    5. '


' → logprob: -7.924900531768799
    6. 'import' → logprob: -8.54990005493164
    7. '\n' → logprob: -9.17490005493164
    8. ' class' → logprob: -10.29990005493164
    9. '
' → logprob: -10.67490005493164
    10. '



' → logprob: -10.79990005493164

Token 21: 'MOD' (ID: 52135)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25239506363868713
    2. '
' → logprob: -1.8773950338363647
    3. 'c' → logprob: -2.7523951530456543
    4. '

' → logprob: -5.377395153045654
    5. '#' → logprob: -7.627395153045654
    6. ' class' → logprob: -8.752394676208496
    7. '' → logprob: -8.877394676208496
    8. 'clas' → logprob: -8.877394676208496
    9. '
' → logprob: -9.002394676208496
    10. 'C' → logprob: -9.377394676208496

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011716204695403576
    2. ' =' → logprob: -4.886716365814209
    3. '=' → logprob: -6.386716365814209
    4. ' _' → logprob: -6.386716365814209
    5. 'ULO' → logprob: -8.26171588897705
    6. 'ULE' → logprob: -8.63671588897705
    7. ' ' → logprob: -9.63671588897705
    8. 'UL' → logprob: -9.76171588897705
    9. '_SPACE' → logprob: -10.51171588897705
    10. '_EOL' → logprob: -10.88671588897705

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009834477677941322
    2. '10' → logprob: -4.759834289550781
    3. '100' → logprob: -6.759834289550781
    4. '32' → logprob: -10.634834289550781
    5. '1' → logprob: -10.884834289550781
    6. '0' → logprob: -12.759834289550781
    7. '20' → logprob: -13.009834289550781
    8. '2' → logprob: -13.384834289550781
    9. 'int' → logprob: -13.884834289550781
    10. '102' → logprob: -14.009834289550781

Token 24: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07890642434358597
    2. '100' → logprob: -2.578906536102295
    3. '1' → logprob: -11.453906059265137
    4. ' ' → logprob: -12.203906059265137
    5. 'int' → logprob: -14.703906059265137
    6. '998' → logprob: -14.953906059265137
    7. '```' → logprob: -16.453907012939453
    8. '2' → logprob: -16.453907012939453
    9. '(' → logprob: -16.703907012939453
    10. '123' → logprob: -16.953907012939453

Token 25: '000' (ID: 1302)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1773251295089722
    2. '\n' → logprob: -1.4273251295089722
    3. '%' → logprob: -2.0523252487182617
    4. '000' → logprob: -2.1773252487182617
    5. '00' → logprob: -2.9273252487182617
    6. '0' → logprob: -3.3023252487182617
    7. '```' → logprob: -3.6773252487182617
    8. '10' → logprob: -4.052325248718262
    9. '**' → logprob: -4.427325248718262
    10. '*' → logprob: -4.552325248718262

Token 26: '007' (ID: 19378)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0009087218204513192
    2. '0' → logprob: -7.750908851623535
    3. '7' → logprob: -8.875908851623535
    4. '+' → logprob: -8.875908851623535
    5. '007' → logprob: -9.250908851623535
    6. '00' → logprob: -9.875908851623535
    7. '19' → logprob: -10.875908851623535
    8. '07' → logprob: -11.125908851623535
    9. '```' → logprob: -12.500908851623535
    10. ' ' → logprob: -12.500908851623535

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13674509525299072
    2. '

' → logprob: -2.261744976043701
    3. '' → logprob: -4.761744976043701
    4. ' 

' → logprob: -5.886744976043701
    5. 'class' → logprob: -6.011744976043701
    6. '
' → logprob: -6.386744976043701
    7. '\n' → logprob: -6.511744976043701
    8. '#' → logprob: -6.636744976043701
    9. '\' → logprob: -6.636744976043701
    10. ' 
' → logprob: -6.761744976043701

Token 28: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39103156328201294
    2. '

' → logprob: -1.7660315036773682
    3. 'class' → logprob: -1.8910315036773682
    4. '
' → logprob: -6.641031742095947
    5. ' class' → logprob: -8.641031265258789
    6. '


' → logprob: -9.141031265258789
    7. '' → logprob: -10.141031265258789
    8. '```' → logprob: -11.141031265258789
    9. '
    
' → logprob: -11.266031265258789
    10. '#' → logprob: -11.641031265258789

Token 29: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009007589891552925
    2. ' My' → logprob: -5.259007453918457
    3. ' Solution' → logprob: -7.134007453918457
    4. ' Basic' → logprob: -7.509007453918457
    5. ' )' → logprob: -8.009007453918457
    6. ' Solver' → logprob: -8.009007453918457
    7. ' ' → logprob: -8.759007453918457
    8. ' Space' → logprob: -8.759007453918457
    9. ' Abstract' → logprob: -9.259007453918457
    10. ' Dynamic' → logprob: -9.384007453918457

Token 30: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.9399626851081848
    2. 'Processor' → logprob: -1.18996262550354
    3. 'Reader' → logprob: -1.31496262550354
    4. 'Parser' → logprob: -4.064962863922119
    5. 'Provider' → logprob: -4.939962863922119
    6. 'Data' → logprob: -5.064962863922119
    7. 'Buffer' → logprob: -6.189962863922119
    8. 'Manager' → logprob: -6.439962863922119
    9. ':' → logprob: -8.439962387084961
    10. 'Output' → logprob: -8.689962387084961

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34924402832984924
    2. '(' → logprob: -1.2242439985275269
    3. ' :' → logprob: -7.599244117736816
    4. '(Abstract' → logprob: -8.974244117736816
    5. '():' → logprob: -9.224244117736816
    6. '(object' → logprob: -10.599244117736816
    7. ':
' → logprob: -11.724244117736816
    8. '(thread' → logprob: -12.224244117736816
    9. ' (' → logprob: -12.349244117736816
    10. '(Thread' → logprob: -12.474244117736816

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6152481436729431
    2. '<|end|>' → logprob: -0.9902481436729431
    3. '    
' → logprob: -2.865248203277588
    4. '  ' → logprob: -4.865248203277588
    5. '<|end|>' → logprob: -4.865248203277588
    6. ' def' → logprob: -5.115248203277588
    7. '    ' → logprob: -5.865248203277588
    8. ' ' → logprob: -6.365248203277588
    9. ':' → logprob: -6.615248203277588
    10. 'def' → logprob: -6.990248203277588

Token 33: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07301260530948639
    2. 'def' (adapté à ' def') → logprob: -2.698012590408325
    3. '   ' → logprob: -5.823012828826904
    4. '	def' → logprob: -10.323012351989746
    5. ' __' → logprob: -10.823012351989746
    6. ' ' → logprob: -10.823012351989746
    7. ':def' → logprob: -12.198012351989746
    8. '    ' → logprob: -12.573012351989746
    9. '__' → logprob: -12.698012351989746
    10. ' ...' → logprob: -12.823012351989746

Token 34: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2167285829782486
    2. 'itialize' → logprob: -2.341728687286377
    3. 'ialize' → logprob: -3.591728687286377
    4. 'put' → logprob: -3.966728687286377
    5. 't' → logprob: -4.341728687286377
    6. '__' → logprob: -4.591728687286377
    7. 'ine' → logprob: -4.966728687286377
    8. '_init' → logprob: -5.091728687286377
    9. 'init' → logprob: -5.091728687286377
    10. 'italize' → logprob: -6.341728687286377

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.375
    3. 'next' → logprob: -16.375
    4. 'iter' → logprob: -17.25
    5. 'call' → logprob: -17.875
    6. 'in' → logprob: -18.5
    7. 'nit' → logprob: -18.625
    8. 'new' → logprob: -19.875
    9. 'read' → logprob: -19.875
    10. 'int' → logprob: -20.25

Token 36: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.015456555411219597
    2. '__' → logprob: -4.640456676483154
    3. '(' → logprob: -5.390456676483154
    4. '(self' → logprob: -7.765456676483154
    5. '__(
' → logprob: -8.140456199645996
    6. '__('' → logprob: -8.765456199645996
    7. '__((' → logprob: -8.890456199645996
    8. '__(*' → logprob: -9.890456199645996
    9. '_(' → logprob: -10.890456199645996
    10. '__("' → logprob: -11.390456199645996

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2822425961494446
    2. ' self' → logprob: -1.4072425365447998
    3. ')' → logprob: -7.282242774963379
    4. ' ' → logprob: -8.157242774963379
    5. ' )' → logprob: -9.157242774963379
    6. '	self' → logprob: -12.657242774963379
    7. 's' → logprob: -12.907242774963379
    8. ' ' → logprob: -13.532242774963379
    9. '   ' → logprob: -14.407242774963379
    10. '(self' → logprob: -14.657242774963379

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13481014966964722
    2. ' ,' → logprob: -2.134810209274292
    3. ' )' → logprob: -5.634809970855713
    4. ')' → logprob: -5.759809970855713
    5. ' ' → logprob: -7.759809970855713
    6. '<|end|>' → logprob: -8.634810447692871
    7. '(' → logprob: -9.009810447692871
    8. ',input' → logprob: -9.634810447692871
    9. '):' → logprob: -9.759810447692871
    10. 'self' → logprob: -9.759810447692871

Token 39: ' stream' (ID: 6855)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27208036184310913
    2. ' self' → logprob: -1.522080421447754
    3. 'input' → logprob: -5.022080421447754
    4. ' input' → logprob: -5.897080421447754
    5. 'file' → logprob: -5.897080421447754
    6. 'source' → logprob: -6.272080421447754
    7. ' file' → logprob: -6.397080421447754
    8. ')' → logprob: -6.647080421447754
    9. 'f' → logprob: -7.022080421447754
    10. 'data' → logprob: -7.897080421447754

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00856552179902792
    2. ':' → logprob: -5.258565425872803
    3. '=None' → logprob: -6.758565425872803
    4. ' ):' → logprob: -7.008565425872803
    5. ')' → logprob: -7.883565425872803
    6. '):
' → logprob: -8.008565902709961
    7. '=sys' → logprob: -8.133565902709961
    8. '=' → logprob: -8.383565902709961
    9. ',' → logprob: -10.883565902709961
    10. ' :' → logprob: -13.008565902709961

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039289999403990805
    2. 'self' → logprob: -8.12539291381836
    3. ' self' → logprob: -9.62539291381836
    4. '        ' → logprob: -12.00039291381836
    5. '      ' → logprob: -12.12539291381836
    6. '   ' → logprob: -12.37539291381836
    7. '<|end|>' → logprob: -12.37539291381836
    8. '     ' → logprob: -13.25039291381836
    9. ' ' → logprob: -13.75039291381836
    10. ' ' → logprob: -13.87539291381836

Token 42: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6933542490005493
    2. 'self' (adapté à ' self') → logprob: -0.6933542490005493
    3. '       ' → logprob: -8.568354606628418
    4. '   ' → logprob: -12.068354606628418
    5. 'stream' → logprob: -13.193354606628418
    6. 's' → logprob: -13.318354606628418
    7. '        ' → logprob: -13.443354606628418
    8. '	self' → logprob: -13.568354606628418
    9. ' stream' → logprob: -13.818354606628418
    10. ' ' → logprob: -14.193354606628418

Token 43: '.stream' (ID: 22760)
  Prédit: '.stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stream' → logprob: -0.0535711906850338
    2. '.' → logprob: -3.0535712242126465
    3. ' .' → logprob: -6.3035712242126465
    4. '.readline' → logprob: -6.3035712242126465
    5. 'stream' → logprob: -7.9285712242126465
    6. '._' → logprob: -8.303570747375488
    7. ' stream' → logprob: -8.553570747375488
    8. '.buffer' → logprob: -8.553570747375488
    9. '.read' → logprob: -9.178570747375488
    10. '.reader' → logprob: -10.053570747375488

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11490161716938019
    2. ' =' → logprob: -2.239901542663574
    3. '.readline' → logprob: -6.864901542663574
    4. '.' → logprob: -6.989901542663574
    5. '.read' → logprob: -9.489901542663574
    6. ' ' → logprob: -10.739901542663574
    7. '.=' → logprob: -12.489901542663574
    8. '   ' → logprob: -13.239901542663574
    9. '_read' → logprob: -13.864901542663574
    10. '_reader' → logprob: -13.989901542663574

Token 45: ' stream' (ID: 6855)
  Prédit: ' stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stream' → logprob: -0.5759789347648621
    2. 'stream' → logprob: -0.8259789347648621
    3. '	stream' → logprob: -10.325979232788086
    4. '(stream' → logprob: -13.200979232788086
    5. ' ' → logprob: -13.200979232788086
    6. ' sys' → logprob: -14.325979232788086
    7. 'sys' → logprob: -14.450979232788086
    8. '.stream' → logprob: -15.200979232788086
    9. 'self' → logprob: -15.700979232788086
    10. '   ' → logprob: -15.700979232788086

Token 46: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4700165390968323
    2. '
' → logprob: -1.5950164794921875
    3. '<|end|>' → logprob: -3.2200164794921875
    4. ' ' → logprob: -3.3450164794921875
    5. '       ' → logprob: -3.4700164794921875
    6. '.readline' → logprob: -4.2200164794921875
    7. '    
' → logprob: -4.5950164794921875
    8. ' 
' → logprob: -5.0950164794921875
    9. ' def' → logprob: -5.2200164794921875
    10. 'def' → logprob: -5.2200164794921875

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4742152988910675
    2. '
' → logprob: -1.0992152690887451
    3. '       ' → logprob: -3.974215269088745
    4. 'def' → logprob: -4.474215507507324
    5. '    
' → logprob: -4.599215507507324
    6. '<|end|>' → logprob: -6.224215507507324
    7. ' def' → logprob: -7.349215507507324
    8. '<|end|>' → logprob: -7.974215507507324
    9. '

' → logprob: -8.724215507507324
    10. '        
' → logprob: -8.849215507507324

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003582133911550045
    2. ' def' → logprob: -6.128582000732422
    3. '
' → logprob: -6.753582000732422
    4. '   ' → logprob: -8.503582000732422
    5. '

' → logprob: -11.503582000732422
    6. '.readline' → logprob: -12.253582000732422
    7. '    
' → logprob: -12.878582000732422
    8. 'self' → logprob: -13.253582000732422
    9. '	def' → logprob: -13.378582000732422
    10. '       ' → logprob: -14.503582000732422

Token 49: ' read' (ID: 1729)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.36633482575416565
    2. 'read' → logprob: -1.4913347959518433
    3. ' read' → logprob: -2.741334915161133
    4. '.readline' → logprob: -4.116334915161133
    5. '_read' → logprob: -7.866334915161133
    6. '.read' → logprob: -8.616334915161133
    7. ' reads' → logprob: -8.741334915161133
    8. '	read' → logprob: -9.866334915161133
    9. '.readlines' → logprob: -9.991334915161133
    10. ' next' → logprob: -10.991334915161133

Token 50: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.010333560407161713
    2. 'line' → logprob: -4.76033353805542
    3. 'Line' → logprob: -7.01033353805542
    4. '()' → logprob: -7.51033353805542
    5. '_' → logprob: -8.760334014892578
    6. '_token' → logprob: -10.010334014892578
    7. 'ln' → logprob: -10.635334014892578
    8. '_LINE' → logprob: -11.760334014892578
    9. '(' → logprob: -11.885334014892578
    10. 'l' → logprob: -12.385334014892578

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4758383333683014
    2. '(' → logprob: -0.975838303565979
    3. ' (' → logprob: -6.4758381843566895
    4. '(
' → logprob: -9.600838661193848
    5. '(n' → logprob: -9.975838661193848
    6. '(count' → logprob: -10.975838661193848
    7. '(s' → logprob: -11.350838661193848
    8. '(num' → logprob: -11.350838661193848
    9. 'self' → logprob: -11.600838661193848
    10. '()' → logprob: -11.600838661193848

Token 52: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004430001601576805
    2. '):' → logprob: -5.504429817199707
    3. ' ,' → logprob: -8.254429817199707
    4. ')' → logprob: -9.629429817199707
    5. ' ):' → logprob: -11.379429817199707
    6. ',n' → logprob: -12.004429817199707
    7. 'self' → logprob: -13.254429817199707
    8. '   ' → logprob: -13.754429817199707
    9. '):
' → logprob: -13.754429817199707
    10. ' )' → logprob: -14.004429817199707

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3999093472957611
    2. '()' → logprob: -1.1499093770980835
    3. '[]' → logprob: -5.274909496307373
    4. ' ()' → logprob: -6.399909496307373
    5. 'return' → logprob: -6.899909496307373
    6. '():' → logprob: -7.024909496307373
    7. ' return' → logprob: -7.149909496307373
    8. '(' → logprob: -7.149909496307373
    9. '   ' → logprob: -7.274909496307373
    10. ' []' → logprob: -7.649909496307373

Token 54: ' for' (ID: 395)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.44036927819252014
    2. '       ' → logprob: -2.1903693675994873
    3. 'return' → logprob: -2.1903693675994873
    4. ' self' → logprob: -2.8153693675994873
    5. ' for' → logprob: -3.4403693675994873
    6. 'self' → logprob: -4.315369129180908
    7. ' []' → logprob: -4.940369129180908
    8. ' lines' → logprob: -5.190369129180908
    9. ' [' → logprob: -5.565369129180908
    10. 'for' (adapté à ' for') → logprob: -6.065369129180908

Token 55: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0016356664709746838
    2. 'line' → logprob: -6.876635551452637
    3. '	line' → logprob: -7.876635551452637
    4. ' ' → logprob: -8.751635551452637
    5. ' _' → logprob: -11.376635551452637
    6. ' ' → logprob: -11.376635551452637
    7. ' l' → logprob: -11.376635551452637
    8. ' self' → logprob: -12.126635551452637
    9. '_line' → logprob: -12.251635551452637
    10. '_' → logprob: -12.751635551452637

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001007919549010694
    2. 'in' → logprob: -7.376008033752441
    3. ' ' → logprob: -8.001008033752441
    4. '_' → logprob: -11.876008033752441
    5. '_in' → logprob: -12.126008033752441
    6. 's' → logprob: -12.251008033752441
    7. '	in' → logprob: -12.251008033752441
    8. ' ' → logprob: -12.501008033752441
    9. '    ' → logprob: -12.626008033752441
    10. '  ' → logprob: -12.626008033752441

Token 57: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12697157263755798
    2. 'self' → logprob: -2.126971483230591
    3. ' ' → logprob: -10.876971244812012
    4. ' iter' → logprob: -11.126971244812012
    5. '	self' → logprob: -12.501971244812012
    6. 'iter' → logprob: -12.751971244812012
    7. ' sys' → logprob: -14.376971244812012
    8. 's' → logprob: -14.626971244812012
    9. ' ' → logprob: -15.001971244812012
    10. '   ' → logprob: -15.001971244812012

Token 58: '.stream' (ID: 22760)
  Prédit: '.stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stream' → logprob: -0.0005763856461271644
    2. '.' → logprob: -7.500576496124268
    3. '.lines' → logprob: -12.37557601928711
    4. ' .' → logprob: -12.75057601928711
    5. '.stdin' → logprob: -13.00057601928711
    6. '.stack' → logprob: -13.00057601928711
    7. '.readline' → logprob: -13.12557601928711
    8. 'stream' → logprob: -13.37557601928711
    9. '	stream' → logprob: -13.50057601928711
    10. '.streaming' → logprob: -13.75057601928711

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06448464840650558
    2. '.readline' → logprob: -2.8144845962524414
    3. ':
' → logprob: -7.064484596252441
    4. '.' → logprob: -7.689484596252441
    5. ' readline' → logprob: -7.814484596252441
    6. ' :' → logprob: -8.314484596252441
    7. '.readlines' → logprob: -8.689484596252441
    8. '):' → logprob: -9.064484596252441
    9. '.rstrip' → logprob: -9.564484596252441
    10. '<|end|>' → logprob: -9.814484596252441

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1999257504940033
    2. ' yield' → logprob: -1.8249257802963257
    3. 'yield' → logprob: -4.074925899505615
    4. '        ' → logprob: -6.699925899505615
    5. '            ' → logprob: -6.699925899505615
    6. '	yield' → logprob: -8.199925422668457
    7. 'Yield' → logprob: -8.949925422668457
    8. '            
' → logprob: -10.449925422668457
    9. '          ' → logprob: -10.574925422668457
    10. '       ' → logprob: -11.199925422668457

Token 61: ' line' (ID: 2543)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.05118216201663017
    2. 'yield' → logprob: -3.051182270050049
    3. '           ' → logprob: -6.301182270050049
    4. '	yield' → logprob: -7.551182270050049
    5. '               ' → logprob: -8.42618179321289
    6. 'Yield' → logprob: -12.30118179321289
    7. '            ' → logprob: -12.42618179321289
    8. ' return' → logprob: -13.67618179321289
    9. ' if' → logprob: -13.67618179321289
    10. '
' → logprob: -14.92618179321289

Token 62: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.043523985892534256
    2. '.rstrip' → logprob: -3.7935240268707275
    3. '.' → logprob: -4.543523788452148
    4. '=' → logprob: -4.918523788452148
    5. 'strip' → logprob: -7.043523788452148
    6. ' =' → logprob: -7.168523788452148
    7. 'rstrip' → logprob: -8.168523788452148
    8. '_strip' → logprob: -9.543523788452148
    9. '.readline' → logprob: -10.293523788452148
    10. ' .' → logprob: -10.793523788452148

Token 63: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14269034564495087
    2. 'line' → logprob: -2.017690420150757
    3. '	line' → logprob: -11.767690658569336
    4. '=line' → logprob: -12.392690658569336
    5. ' ' → logprob: -13.767690658569336
    6. '(line' → logprob: -14.392690658569336
    7. '#line' → logprob: -14.892690658569336
    8. 'ine' → logprob: -15.267690658569336
    9. 'li' → logprob: -15.642690658569336
    10. '[line' → logprob: -15.892690658569336

Token 64: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.01899082027375698
    2. '.rstrip' → logprob: -4.018990993499756
    3. '.' → logprob: -7.143990993499756
    4. 'strip' → logprob: -10.018990516662598
    5. 'rstrip' → logprob: -12.518990516662598
    6. ' .' → logprob: -13.393990516662598
    7. ' strip' → logprob: -14.268990516662598
    8. '.readline' → logprob: -14.893990516662598
    9. '_strip' → logprob: -15.768990516662598
    10. '.split' → logprob: -17.143991470336914

Token 65: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -11.250030517578125
    3. '()
' → logprob: -11.750030517578125
    4. '()`' → logprob: -13.375030517578125
    5. '()\' → logprob: -13.375030517578125
    6. ' ()' → logprob: -13.625030517578125
    7. '())' → logprob: -13.625030517578125
    8. '()

' → logprob: -13.750030517578125
    9. '().' → logprob: -14.125030517578125
    10. '()"' → logprob: -14.750030517578125

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4331527054309845
    2. 'yield' → logprob: -1.933152675628662
    3. ' if' → logprob: -2.058152675628662
    4. 'if' → logprob: -2.683152675628662
    5. ' yield' → logprob: -5.183152675628662
    6. '            
' → logprob: -6.183152675628662
    7. '            ' → logprob: -6.933152675628662
    8. '<|end|>' → logprob: -7.058152675628662
    9. '	yield' → logprob: -7.808152675628662
    10. '
' → logprob: -8.68315315246582

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6368733048439026
    2. 'if' (adapté à ' if') → logprob: -0.8868733048439026
    3. 'yield' → logprob: -3.261873245239258
    4. ' yield' → logprob: -3.886873245239258
    5. '           ' → logprob: -8.261873245239258
    6. '            ' → logprob: -10.886873245239258
    7. '	yield' → logprob: -11.886873245239258
    8. '```' → logprob: -12.761873245239258
    9. '            
' → logprob: -14.761873245239258
    10. 'Yield' → logprob: -15.261873245239258

Token 68: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3141079246997833
    2. ' line' → logprob: -1.314107894897461
    3. 'not' → logprob: -7.689107894897461
    4. 'line' → logprob: -8.439107894897461
    5. ' ' → logprob: -9.314107894897461
    6. ' len' → logprob: -9.939107894897461
    7. '(line' → logprob: -11.939107894897461
    8. '	line' → logprob: -12.064107894897461
    9. '#line' → logprob: -12.314107894897461
    10. ' no' → logprob: -12.314107894897461

Token 69: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.358516126871109
    2. ' ==' → logprob: -1.7335160970687866
    3. '==' → logprob: -2.108516216278076
    4. ' !=' → logprob: -6.983516216278076
    5. '<|end|>' → logprob: -7.108516216278076
    6. '.startswith' → logprob: -7.733516216278076
    7. '<|end|>' → logprob: -8.233515739440918
    8. '!=' → logprob: -8.983515739440918
    9. ' and' → logprob: -9.358515739440918
    10. '=' → logprob: -9.483515739440918

Token 70: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.22321225702762604
    2. '""' → logprob: -2.723212242126465
    3. ' '' → logprob: -3.223212242126465
    4. '"":' → logprob: -3.223212242126465
    5. ''' → logprob: -3.348212242126465
    6. ' ''' → logprob: -4.723212242126465
    7. '"' → logprob: -5.098212242126465
    8. ' '':
' → logprob: -6.223212242126465
    9. ' "' → logprob: -6.473212242126465
    10. ' ""' → logprob: -7.098212242126465

Token 71: '':
' (ID: 7669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3265186548233032
    2. '':' → logprob: -1.4515186548233032
    3. ''' → logprob: -4.201518535614014
    4. '':
' → logprob: -5.076518535614014
    5. 'END' → logprob: -5.326518535614014
    6. ''#' → logprob: -5.826518535614014
    7. 'EOF' → logprob: -6.326518535614014
    8. ':' → logprob: -6.326518535614014
    9. ' '' → logprob: -6.701518535614014
    10. 'end' → logprob: -7.076518535614014

Token 72: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007280287798494101
    2. ' break' → logprob: -5.257280349731445
    3. '           ' → logprob: -6.632280349731445
    4. 'break' → logprob: -7.882280349731445
    5. '<|end|>' → logprob: -9.382280349731445
    6. '                
' → logprob: -9.757280349731445
    7. '	break' → logprob: -10.132280349731445
    8. '              ' → logprob: -10.257280349731445
    9. '<|end|>' → logprob: -11.132280349731445
    10. '   ' → logprob: -11.132280349731445

Token 73: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5829704403877258
    2. 'break' (adapté à ' break') → logprob: -0.8329704403877258
    3. '               ' → logprob: -5.83297061920166
    4. 'return' → logprob: -6.08297061920166
    5. '           ' → logprob: -6.83297061920166
    6. ' return' → logprob: -7.58297061920166
    7. '	break' → logprob: -8.83297061920166
    8. '                   ' → logprob: -11.08297061920166
    9. '```' → logprob: -11.33297061920166
    10. '
' → logprob: -11.58297061920166

Token 74: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04646062105894089
    2. 'yield' → logprob: -3.4214606285095215
    3. ' yield' → logprob: -5.1714606285095215
    4. '
' → logprob: -5.2964606285095215
    5. '            
' → logprob: -6.6714606285095215
    6. '	yield' → logprob: -8.171460151672363
    7. '```' → logprob: -9.046460151672363
    8. '<|end|>' → logprob: -9.046460151672363
    9. '       ' → logprob: -9.671460151672363
    10. 'Yield' → logprob: -10.796460151672363

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007364063989371061
    2. 'yield' → logprob: -5.132364273071289
    3. ' yield' → logprob: -7.382364273071289
    4. '
' → logprob: -7.882364273071289
    5. '            
' → logprob: -8.257364273071289
    6. '	yield' → logprob: -9.882364273071289
    7. '       ' → logprob: -9.882364273071289
    8. '```' → logprob: -10.757364273071289
    9. '<|end|>' → logprob: -10.757364273071289
    10. 'Yield' → logprob: -12.007364273071289

Token 76: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5374670028686523
    2. 'yield' (adapté à ' yield') → logprob: -1.5374670028686523
    3. ' yield' → logprob: -1.6624670028686523
    4. '       ' → logprob: -4.662467002868652
    5. '	yield' → logprob: -6.537467002868652
    6. '            
' → logprob: -9.287467002868652
    7. '```' → logprob: -9.412467002868652
    8. 'Yield' → logprob: -9.912467002868652
    9. '   ' → logprob: -11.412467002868652
    10. '
' → logprob: -11.412467002868652

Token 77: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6327286958694458
    2. 'line' → logprob: -0.7577286958694458
    3. '[line' → logprob: -10.007728576660156
    4. '(line' → logprob: -10.632728576660156
    5. ' ' → logprob: -10.632728576660156
    6. 'list' → logprob: -10.882728576660156
    7. '	line' → logprob: -11.882728576660156
    8. ' list' → logprob: -12.257728576660156
    9. '#line' → logprob: -13.632728576660156
    10. '=line' → logprob: -14.382728576660156

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10729536414146423
    2. '<|end|>' → logprob: -3.232295274734497
    3. '

' → logprob: -3.982295274734497
    4. '   ' → logprob: -4.107295513153076
    5. 'class' → logprob: -4.482295513153076
    6. '    
' → logprob: -4.982295513153076
    7. '<|end|>' → logprob: -6.107295513153076
    8. '\n' → logprob: -6.857295513153076
    9. '```' → logprob: -7.107295513153076
    10. '#' → logprob: -7.232295513153076

Token 79: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3211127519607544
    2. 'class' → logprob: -1.3211127519607544
    3. '

' → logprob: -5.321112632751465
    4. '   ' → logprob: -6.446112632751465
    5. '    
' → logprob: -7.446112632751465
    6. '<|end|>' → logprob: -8.821112632751465
    7. 'def' → logprob: -9.071112632751465
    8. ' class' → logprob: -9.321112632751465
    9. ' 
' → logprob: -9.946112632751465
    10. '    

' → logprob: -10.071112632751465

Token 80: ' Character' (ID: 27668)
  Prédit: ' Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -0.8098136186599731
    2. ' Solution' → logprob: -1.0598136186599731
    3. ' Processor' → logprob: -3.4348134994506836
    4. 'Solution' → logprob: -3.5598134994506836
    5. 'Solver' → logprob: -3.8098134994506836
    6. ' Graph' → logprob: -4.184813499450684
    7. ' Problem' → logprob: -4.309813499450684
    8. 'Processor' → logprob: -4.684813499450684
    9. ' Parser' → logprob: -4.809813499450684
    10. ' Base' → logprob: -4.809813499450684

Token 81: 'Mapping' (ID: 8146)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4079793393611908
    2. 'Reader' → logprob: -2.6579792499542236
    3. 'Recognizer' → logprob: -2.9079792499542236
    4. 'Matcher' → logprob: -3.2829792499542236
    5. 'Processor' → logprob: -3.4079792499542236
    6. 'Parser' → logprob: -3.5329792499542236
    7. 'Counter' → logprob: -4.032979488372803
    8. 'Handler' → logprob: -4.157979488372803
    9. 'Count' → logprob: -4.407979488372803
    10. 'Filter' → logprob: -5.032979488372803

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012602187693119049
    2. ':' → logprob: -4.38760232925415
    3. '(Abstract' → logprob: -9.387601852416992
    4. ':
' → logprob: -13.012601852416992
    5. '():' → logprob: -13.387601852416992
    6. '(
' → logprob: -13.512601852416992
    7. 'Mapping' → logprob: -14.762601852416992
    8. 's' → logprob: -15.137601852416992
    9. '(I' → logprob: -15.137601852416992
    10. '):' → logprob: -15.387601852416992

Token 83: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.020834047347307205
    2. ' ABC' → logprob: -3.895833969116211
    3. ')' → logprob: -9.770833969116211
    4. '):' → logprob: -10.145833969116211
    5. '):
' → logprob: -10.270833969116211
    6. ' ' → logprob: -10.270833969116211
    7. 'A' → logprob: -10.645833969116211
    8. 'AB' → logprob: -10.645833969116211
    9. 'abc' → logprob: -11.270833969116211
    10. 'Dict' → logprob: -11.770833969116211

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001458331593312323
    2. ')' → logprob: -6.626458168029785
    3. ':' → logprob: -9.751458168029785
    4. ' ):' → logprob: -10.126458168029785
    5. '):
' → logprob: -10.501458168029785
    6. ',' → logprob: -12.876458168029785
    7. '):

' → logprob: -13.251458168029785
    8. '):
' → logprob: -14.001458168029785
    9. ' ' → logprob: -15.001458168029785
    10. ' )' → logprob: -15.501458168029785

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5833232998847961
    2. ':' → logprob: -0.8333232998847961
    3. '<|end|>' → logprob: -6.0833234786987305
    4. ' :' → logprob: -6.8333234786987305
    5. '    
' → logprob: -6.9583234786987305
    6. '    ' → logprob: -7.2083234786987305
    7. '
' → logprob: -7.9583234786987305
    8. ':
' → logprob: -7.9583234786987305
    9. '  ' → logprob: -8.08332347869873
    10. ' ' → logprob: -8.33332347869873

Token 86: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0499269925057888
    2. '    
' → logprob: -3.799926996231079
    3. ' 
' → logprob: -4.5499267578125
    4. '    ' → logprob: -5.1749267578125
    5. ' ' → logprob: -5.6749267578125
    6. '
' → logprob: -5.7999267578125
    7. ' def' → logprob: -6.1749267578125
    8. '  ' → logprob: -7.5499267578125
    9. '   
' → logprob: -8.5499267578125
    10. '     
' → logprob: -8.5499267578125

Token 87: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -8.900034299585968e-05
    2. 'ab' → logprob: -10.125088691711426
    3. 'abs' → logprob: -10.625088691711426
    4. 'staticmethod' → logprob: -11.125088691711426
    5. 'abc' → logprob: -12.000088691711426
    6. 'classmethod' → logprob: -13.500088691711426
    7. 'stract' → logprob: -14.250088691711426
    8. ' abstract' → logprob: -14.625088691711426
    9. 'property' → logprob: -15.000088691711426
    10. 'b' → logprob: -15.000088691711426

Token 88: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -7.672236824873835e-05
    2. '_method' → logprob: -9.625076293945312
    3. 'meth' → logprob: -11.875076293945312
    4. 'Method' → logprob: -13.625076293945312
    5. 'classmethod' → logprob: -13.875076293945312
    6. 'ethod' → logprob: -14.000076293945312
    7. 'def' → logprob: -15.875076293945312
    8. '-method' → logprob: -16.000076293945312
    9. 'methods' → logprob: -16.250076293945312
    10. '	method' → logprob: -16.375076293945312

Token 89: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19585256278514862
    2. '
' → logprob: -1.820852518081665
    3. '   ' → logprob: -4.570852756500244
    4. ' def' → logprob: -5.195852756500244
    5. '    
' → logprob: -10.195852279663086
    6. '	def' → logprob: -10.695852279663086
    7. '<|end|>' → logprob: -12.320852279663086
    8. '  ' → logprob: -12.570852279663086
    9. '\' → logprob: -12.820852279663086
    10. ' 
' → logprob: -13.070852279663086

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06305169314146042
    2. 'def' → logprob: -2.813051700592041
    3. ' def' → logprob: -7.313051700592041
    4. '    
' → logprob: -8.688051223754883
    5. '   ' → logprob: -9.563051223754883
    6. '
' → logprob: -10.063051223754883
    7. 'method' → logprob: -10.313051223754883
    8. '\' → logprob: -10.813051223754883
    9. '	def' → logprob: -11.063051223754883
    10. '  
' → logprob: -11.438051223754883

Token 91: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07008470594882965
    2. ' def' → logprob: -2.695084810256958
    3. '
' → logprob: -9.445084571838379
    4. '   ' → logprob: -10.320084571838379
    5. 'classmethod' → logprob: -11.820084571838379
    6. 'int' → logprob: -12.320084571838379
    7. 'staticmethod' → logprob: -12.320084571838379
    8. 'method' → logprob: -12.570084571838379
    9. '```' → logprob: -12.570084571838379
    10. '  ' → logprob: -13.195084571838379

Token 92: ' get' (ID: 717)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2476629912853241
    2. ' transform' → logprob: -2.8726630210876465
    3. ' convert' → logprob: -3.3726630210876465
    4. ' apply' → logprob: -3.4976630210876465
    5. ' def' → logprob: -3.6226630210876465
    6. ' decode' → logprob: -3.6226630210876465
    7. ' get' → logprob: -3.7476630210876465
    8. ' process' → logprob: -4.2476630210876465
    9. ' translate' → logprob: -6.1226630210876465
    10. ' char' → logprob: -6.9976630210876465

Token 93: '_char' (ID: 23398)
  Prédit: '_mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.12277420610189438
    2. '_char' → logprob: -3.247774124145508
    3. '_character' → logprob: -3.497774124145508
    4. '_m' → logprob: -3.747774124145508
    5. '_map' → logprob: -4.497774124145508
    6. '_chars' → logprob: -5.872774124145508
    7. '_code' → logprob: -6.122774124145508
    8. '_' → logprob: -6.497774124145508
    9. '_value' → logprob: -6.747774124145508
    10. '_key' → logprob: -7.872774124145508

Token 94: '_count' (ID: 7536)
  Prédit: 'acter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acter' → logprob: -0.2787601053714752
    2. '_mapping' → logprob: -2.2787601947784424
    3. 'acters' → logprob: -3.0287601947784424
    4. 's' → logprob: -3.5287601947784424
    5. '_map' → logprob: -3.6537601947784424
    6. '(self' → logprob: -3.7787601947784424
    7. '_count' → logprob: -5.903759956359863
    8. '_list' → logprob: -6.528759956359863
    9. '_counts' → logprob: -6.528759956359863
    10. '_frequency' → logprob: -6.778759956359863

Token 95: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013157175853848457
    2. '(' → logprob: -4.513157367706299
    3. 's' → logprob: -6.513157367706299
    4. '(s' → logprob: -7.513157367706299
    5. 'self' → logprob: -9.63815689086914
    6. '(
' → logprob: -12.38815689086914
    7. ' (' → logprob: -12.76315689086914
    8. ')' → logprob: -14.38815689086914
    9. '   ' → logprob: -14.51315689086914
    10. '()' → logprob: -14.76315689086914

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1973908394575119
    2. '):' → logprob: -1.8223907947540283
    3. ')' → logprob: -4.322391033172607
    4. ' ,' → logprob: -5.697391033172607
    5. 'self' → logprob: -8.19739055633545
    6. ' ):' → logprob: -8.32239055633545
    7. '):
' → logprob: -9.69739055633545
    8. ' )' → logprob: -9.69739055633545
    9. ',self' → logprob: -10.57239055633545
    10. ',s' → logprob: -10.69739055633545

Token 97: ' digit' (ID: 19181)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5835176110267639
    2. 'self' → logprob: -1.2085175514221191
    3. ' s' → logprob: -2.458517551422119
    4. 's' → logprob: -4.333517551422119
    5. ' char' → logprob: -4.333517551422119
    6. ')' → logprob: -5.208517551422119
    7. 'char' → logprob: -5.208517551422119
    8. ' text' → logprob: -5.708517551422119
    9. 'text' → logprob: -5.833517551422119
    10. ' input' → logprob: -5.958517551422119

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0697503387928009
    2. 's' → logprob: -2.8197503089904785
    3. '):' → logprob: -5.1947503089904785
    4. ':str' → logprob: -6.5697503089904785
    5. ')' → logprob: -7.8197503089904785
    6. ',' → logprob: -8.944750785827637
    7. ' :' → logprob: -10.319750785827637
    8. ':int' → logprob: -10.444750785827637
    9. 'sequence' → logprob: -10.444750785827637
    10. '_str' → logprob: -10.444750785827637

Token 99: ' str' (ID: 989)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5917607545852661
    2. 'str' → logprob: -1.2167607545852661
    3. ' str' → logprob: -2.0917606353759766
    4. ' int' → logprob: -3.7167606353759766
    5. ')' → logprob: -6.091760635375977
    6. 's' → logprob: -9.091760635375977
    7. '   ' → logprob: -9.216760635375977
    8. ' ' → logprob: -10.341760635375977
    9. '):
' → logprob: -10.591760635375977
    10. ' )' → logprob: -10.591760635375977

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03883244842290878
    2. '):' → logprob: -3.288832426071167
    3. ',' → logprob: -7.663832664489746
    4. ')->' → logprob: -8.663832664489746
    5. ' )' → logprob: -9.663832664489746
    6. ':' → logprob: -10.288832664489746
    7. '   ' → logprob: -10.538832664489746
    8. '):
' → logprob: -11.038832664489746
    9. ' ):' → logprob: -13.038832664489746
    10. ' ' → logprob: -13.788832664489746

Token 101: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -1.0410569906234741
    2. ')' → logprob: -1.1660569906234741
    3. ' ->' → logprob: -1.1660569906234741
    4. ':' → logprob: -3.7910571098327637
    5. ')->' → logprob: -7.041057109832764
    6. ',' → logprob: -9.791056632995605
    7. ' ' → logprob: -10.041056632995605
    8. '   ' → logprob: -10.041056632995605
    9. '):' → logprob: -10.166056632995605
    10. ' )' → logprob: -10.291056632995605

Token 102: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0804469883441925
    2. ' int' → logprob: -2.70544695854187
    3. 'List' → logprob: -4.705447196960449
    4. ' List' → logprob: -6.705447196960449
    5. '[int' → logprob: -9.70544719696045
    6. 'Dict' → logprob: -9.83044719696045
    7. ' ' → logprob: -10.33044719696045
    8. '   ' → logprob: -11.70544719696045
    9. '	int' → logprob: -11.95544719696045
    10. 'str' → logprob: -12.33044719696045

Token 103: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.15235058963298798
    2. 'pass' (adapté à ' pass') → logprob: -2.402350664138794
    3. '<|end|>' → logprob: -3.152350664138794
    4. '       ' → logprob: -5.652350425720215
    5. '   ' → logprob: -6.777350425720215
    6. ' ' → logprob: -6.777350425720215
    7. '
' → logprob: -7.152350425720215
    8. '...' → logprob: -7.527350425720215
    9. '	pass' → logprob: -8.027350425720215
    10. '  ' → logprob: -8.277350425720215

Token 106: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4492054879665375
    2. '

' → logprob: -1.1992055177688599
    3. 'class' → logprob: -2.8242053985595703
    4. '<|end|>' → logprob: -7.57420539855957
    5. '


' → logprob: -8.44920539855957
    6. '
    
' → logprob: -8.94920539855957
    7. '   ' → logprob: -9.69920539855957
    8. '    
' → logprob: -10.07420539855957
    9. ' class' → logprob: -10.82420539855957
    10. ' 
' → logprob: -11.19920539855957

Token 107: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.18617001175880432
    2. '
' → logprob: -1.811169981956482
    3. '

' → logprob: -5.0611701011657715
    4. '  
' → logprob: -11.436169624328613
    5. ' class' → logprob: -11.436169624328613
    6. '<|end|>' → logprob: -11.686169624328613
    7. '    
' → logprob: -11.936169624328613
    8. '
' → logprob: -12.686169624328613
    9. '
    
' → logprob: -12.686169624328613
    10. '   ' → logprob: -12.686169624328613

Token 108: ' Kana' (ID: 88230)
  Prédit: ' Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.6595155596733093
    2. ' Phone' → logprob: -2.159515619277954
    3. ' Seven' → logprob: -2.284515619277954
    4. ' Numeric' → logprob: -3.034515619277954
    5. ' Simple' → logprob: -3.534515619277954
    6. ' Default' → logprob: -3.909515619277954
    7. ' Telephone' → logprob: -4.034515380859375
    8. ' Standard' → logprob: -4.159515380859375
    9. 'Digit' → logprob: -4.534515380859375
    10. ' Basic' → logprob: -4.659515380859375

Token 109: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -0.0021422896534204483
    2. 'Character' → logprob: -6.502142429351807
    3. 'Map' → logprob: -8.627141952514648
    4. 'Mapper' → logprob: -8.752141952514648
    5. 'mapping' → logprob: -8.877141952514648
    6. 'Mappings' → logprob: -10.127141952514648
    7. 'Converter' → logprob: -10.127141952514648
    8. 'Conversion' → logprob: -11.127141952514648
    9. 'Counting' → logprob: -11.502141952514648
    10. ' mapping' → logprob: -11.502141952514648

Token 110: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.10435693711042404
    2. '(' → logprob: -2.3543570041656494
    3. ':' → logprob: -5.60435676574707
    4. '(Abstract' → logprob: -8.60435676574707
    5. '(Char' → logprob: -9.22935676574707
    6. '(K' → logprob: -9.35435676574707
    7. '():' → logprob: -10.60435676574707
    8. '<Character' → logprob: -10.85435676574707
    9. ' :' → logprob: -10.97935676574707
    10. '):' → logprob: -11.47935676574707

Token 111: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -9.245724504580721e-05
    2. 'mapping' → logprob: -10.125092506408691
    3. '_mapping' → logprob: -10.125092506408691
    4. '_MAPPING' → logprob: -12.000092506408691
    5. 'Mappings' → logprob: -13.250092506408691
    6. ' Mapping' → logprob: -13.375092506408691
    7. ' mapping' → logprob: -13.625092506408691
    8. '<|end|>' → logprob: -13.750092506408691
    9. '.Mapping' → logprob: -15.625092506408691
    10. '\Mapping' → logprob: -16.750091552734375

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003242607053834945
    2. ':' → logprob: -8.500324249267578
    3. '):
' → logprob: -9.375324249267578
    4. ')' → logprob: -11.000324249267578
    5. ' ):' → logprob: -11.000324249267578
    6. '):

' → logprob: -14.250324249267578
    7. '):
' → logprob: -14.625324249267578
    8. ',' → logprob: -14.750324249267578
    9. '():' → logprob: -14.875324249267578
    10. '   ' → logprob: -16.125324249267578

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013217770494520664
    2. ' def' → logprob: -4.388217926025391
    3. '    ' → logprob: -7.888217926025391
    4. 'def' → logprob: -8.76321792602539
    5. '    
' → logprob: -9.63821792602539
    6. ' ' → logprob: -10.26321792602539
    7. '
' → logprob: -11.13821792602539
    8. '  ' → logprob: -11.38821792602539
    9. '	def' → logprob: -11.63821792602539
    10. ' indentation' → logprob: -11.76321792602539

Token 114: ' _' (ID: 1175)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.24166247248649597
    2. 'def' → logprob: -1.6166625022888184
    3. ' mapping' → logprob: -5.866662502288818
    4. '   ' → logprob: -6.366662502288818
    5. 'mapping' → logprob: -6.366662502288818
    6. ' _' → logprob: -6.616662502288818
    7. ' kana' → logprob: -6.866662502288818
    8. ' mappings' → logprob: -6.991662502288818
    9. '_mapping' → logprob: -7.241662502288818
    10. 'kana' → logprob: -7.366662502288818

Token 115: 'mapping' (ID: 86365)
  Prédit: 'mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.49078813195228577
    2. 'char' → logprob: -2.115788221359253
    3. 'digit' → logprob: -2.490788221359253
    4. 'map' → logprob: -2.615788221359253
    5. 'kana' → logprob: -2.615788221359253
    6. 'm' → logprob: -4.115787982940674
    7. 'digits' → logprob: -5.740787982940674
    8. 'counts' → logprob: -5.990787982940674
    9. '_map' → logprob: -6.115787982940674
    10. '_mapping' → logprob: -6.240787982940674

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004241281654685736
    2. '=' → logprob: -5.504241466522217
    3. ':' → logprob: -8.754240989685059
    4. ' ' → logprob: -13.129240989685059
    5. ' :' → logprob: -13.129240989685059
    6. 's' → logprob: -14.879240989685059
    7. '   ' → logprob: -15.754240989685059
    8. '={'' → logprob: -16.379241943359375
    9. '[' → logprob: -16.504241943359375
    10. '_' → logprob: -16.504241943359375

Token 117: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.589611828327179
    2. ' {' → logprob: -1.5896117687225342
    3. '{
' → logprob: -1.8396117687225342
    4. ' {
' → logprob: -2.714611768722534
    5. '{'' → logprob: -4.839612007141113
    6. ' {'' → logprob: -5.089612007141113
    7. '{"' → logprob: -6.464612007141113
    8. ' {"' → logprob: -8.214612007141113
    9. '[' → logprob: -8.714612007141113
    10. '   ' → logprob: -9.089612007141113

Token 118: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17218033969402313
    2. '       ' → logprob: -2.422180414199829
    3. ' '' → logprob: -3.172180414199829
    4. '   ' → logprob: -3.672180414199829
    5. '"' → logprob: -6.42218017578125
    6. '1' → logprob: -8.54718017578125
    7. ' ' → logprob: -9.29718017578125
    8. '0' → logprob: -10.04718017578125
    9. ''A' → logprob: -10.04718017578125
    10. '	' → logprob: -11.04718017578125

Token 119: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0038980606477707624
    2. '"' → logprob: -5.8788981437683105
    3. ' '' → logprob: -7.2538981437683105
    4. '   ' → logprob: -8.253897666931152
    5. '       ' → logprob: -9.878897666931152
    6. '1' → logprob: -10.628897666931152
    7. ''a' → logprob: -10.878897666931152
    8. ''A' → logprob: -11.378897666931152
    9. '           ' → logprob: -12.628897666931152
    10. ' ' → logprob: -13.128897666931152

Token 120: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24806983768939972
    2. '1' → logprob: -1.8730698823928833
    3. '2' → logprob: -2.8730697631835938
    4. '0' → logprob: -4.998069763183594
    5. '"' → logprob: -6.748069763183594
    6. ''a' → logprob: -7.373069763183594
    7. ' '' → logprob: -7.623069763183594
    8. 'a' → logprob: -9.248069763183594
    9. ''A' → logprob: -9.498069763183594
    10. ' ' → logprob: -10.123069763183594

Token 121: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003202312160283327
    2. ''' → logprob: -6.128202438354492
    3. ':' → logprob: -7.253202438354492
    4. '2' → logprob: -9.628202438354492
    5. '0' → logprob: -9.753202438354492
    6. '1' → logprob: -10.003202438354492
    7. '7' → logprob: -10.503202438354492
    8. '3' → logprob: -10.878202438354492
    9. '':'' → logprob: -10.878202438354492
    10. '":' → logprob: -11.003202438354492

Token 122: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.21390436589717865
    2. '1' → logprob: -2.33890438079834
    3. '0' → logprob: -3.33890438079834
    4. '3' → logprob: -4.08890438079834
    5. ' ' → logprob: -4.21390438079834
    6. '2' → logprob: -4.46390438079834
    7. '4' → logprob: -4.83890438079834
    8. ''' → logprob: -5.96390438079834
    9. '10' → logprob: -6.33890438079834
    10. '   ' → logprob: -6.58890438079834

Token 123: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.024842791259288788
    2. '0' → logprob: -4.774842739105225
    3. '1' → logprob: -5.399842739105225
    4. '2' → logprob: -5.649842739105225
    5. ''' → logprob: -6.149842739105225
    6. '3' → logprob: -6.149842739105225
    7. '4' → logprob: -6.774842739105225
    8. '"' → logprob: -7.024842739105225
    9. '6' → logprob: -8.587343215942383
    10. '   ' → logprob: -8.587343215942383

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05500776320695877
    2. ',
' → logprob: -2.9300076961517334
    3. ','' → logprob: -10.055007934570312
    4. '       ' → logprob: -10.180007934570312
    5. '   ' → logprob: -11.055007934570312
    6. ',
' → logprob: -11.805007934570312
    7. ' ,' → logprob: -12.055007934570312
    8. ',

' → logprob: -12.055007934570312
    9. ''' → logprob: -13.430007934570312
    10. ',\
' → logprob: -13.555007934570312

Token 125: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5001206994056702
    2. ' '' → logprob: -1.3751206398010254
    3. ''' → logprob: -2.0001206398010254
    4. ' ' → logprob: -5.875120639801025
    5. '2' → logprob: -6.750120639801025
    6. '   ' → logprob: -7.125120639801025
    7. ''s' → logprob: -9.625121116638184
    8. '  ' → logprob: -9.875121116638184
    9. '      ' → logprob: -9.875121116638184
    10. '<|end|>' → logprob: -9.875121116638184

Token 126: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015803283313289285
    2. ' '' → logprob: -6.876580238342285
    3. '2' → logprob: -8.251580238342285
    4. '       ' → logprob: -8.751580238342285
    5. ' ' → logprob: -9.751580238342285
    6. '   ' → logprob: -10.501580238342285
    7. ''a' → logprob: -11.876580238342285
    8. '"' → logprob: -12.251580238342285
    9. '}' → logprob: -12.501580238342285
    10. '  ' → logprob: -12.876580238342285

Token 127: ' あ' (ID: 126318)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.597054123878479
    2. '3' → logprob: -2.3470540046691895
    3. '2' → logprob: -2.4720540046691895
    4. '6' → logprob: -2.9720540046691895
    5. '4' → logprob: -3.3470540046691895
    6. ''a' → logprob: -3.4720540046691895
    7. '1' → logprob: -3.8470540046691895
    8. '5' → logprob: -3.8470540046691895
    9. ' '' → logprob: -3.9720540046691895
    10. '0' → logprob: -4.0970540046691895

Token 128: 'いう' (ID: 50198)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3343478441238403
    2. ',' → logprob: -1.9593478441238403
    3. ' '' → logprob: -2.334347724914551
    4. ' ' → logprob: -2.459347724914551
    5. '<|end|>' → logprob: -2.459347724914551
    6. '       ' → logprob: -2.584347724914551
    7. ''s' → logprob: -3.334347724914551
    8. '   ' → logprob: -3.459347724914551
    9. '('' → logprob: -3.584347724914551
    10. 'り' → logprob: -3.709347724914551

Token 129: 'え' (ID: 18606)
  Prédit: 'え'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.0001254693343071267
    2. 'う' → logprob: -9.875125885009766
    3. 'e' → logprob: -11.125125885009766
    4. ' ' → logprob: -11.375125885009766
    5. 'か' → logprob: -12.000125885009766
    6. 'ぇ' → logprob: -12.125125885009766
    7. 'ろ' → logprob: -12.500125885009766
    8. ',' → logprob: -12.625125885009766
    9. 'いう' → logprob: -13.000125885009766
    10. 'べ' → logprob: -13.000125885009766

Token 130: 'お' (ID: 8930)
  Prédit: 'お'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'お' → logprob: -0.006106182467192411
    2. 'o' → logprob: -5.131106376647949
    3. ' お' → logprob: -9.25610637664795
    4. '
' → logprob: -11.50610637664795
    5. 'a' → logprob: -11.50610637664795
    6. '6' → logprob: -11.63110637664795
    7. '12' → logprob: -11.88110637664795
    8. 'え' → logprob: -12.00610637664795
    9. ',' → logprob: -12.13110637664795
    10. '1' → logprob: -12.25610637664795

Token 131: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25596949458122253
    2. ',
' → logprob: -1.505969524383545
    3. '       ' → logprob: -5.755969524383545
    4. '   ' → logprob: -7.755969524383545
    5. ''' → logprob: -8.380969047546387
    6. ',
' → logprob: -10.505969047546387
    7. ' ,' → logprob: -10.505969047546387
    8. '1' → logprob: -10.630969047546387
    9. '}' → logprob: -10.755969047546387
    10. ','' → logprob: -11.505969047546387

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3806937038898468
    2. ''' → logprob: -1.2556936740875244
    3. ' '' → logprob: -3.8806936740875244
    4. '2' → logprob: -5.0056939125061035
    5. '   ' → logprob: -6.1306939125061035
    6. ' ' → logprob: -6.3806939125061035
    7. '      ' → logprob: -9.505693435668945
    8. '  ' → logprob: -9.630693435668945
    9. '     ' → logprob: -10.005693435668945
    10. '4' → logprob: -10.005693435668945

Token 133: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.019945161417126656
    2. ' '' → logprob: -4.14494514465332
    3. '       ' → logprob: -6.14494514465332
    4. '2' → logprob: -6.51994514465332
    5. ' ' → logprob: -8.89494514465332
    6. '   ' → logprob: -9.64494514465332
    7. '"' → logprob: -10.14494514465332
    8. '    ' → logprob: -11.51994514465332
    9. '      ' → logprob: -11.76994514465332
    10. '  ' → logprob: -12.14494514465332

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002931702882051468
    2. ''' → logprob: -6.127931594848633
    3. ' ' → logprob: -7.627931594848633
    4. ' '' → logprob: -9.002931594848633
    5. '3' → logprob: -9.877931594848633
    6. '4' → logprob: -11.002931594848633
    7. ''s' → logprob: -11.127931594848633
    8. '"' → logprob: -11.752931594848633
    9. '1' → logprob: -12.190431594848633
    10. '0' → logprob: -12.502931594848633

Token 135: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.026623396202921867
    2. ':' → logprob: -3.651623487472534
    3. ''' → logprob: -8.401623725891113
    4. ' ':' → logprob: -9.776623725891113
    5. '":' → logprob: -11.651623725891113
    6. '<|end|>' → logprob: -12.401623725891113
    7. '5' → logprob: -12.526623725891113
    8. '7' → logprob: -12.651623725891113
    9. '3' → logprob: -12.651623725891113
    10. '6' → logprob: -12.776623725891113

Token 136: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3967345058917999
    2. '7' → logprob: -1.6467344760894775
    3. '4' → logprob: -2.7717344760894775
    4. '5' → logprob: -3.5217344760894775
    5. '10' → logprob: -4.021734714508057
    6. '6' → logprob: -4.146734714508057
    7. '9' → logprob: -6.521734714508057
    8. '20' → logprob: -6.646734714508057
    9. '25' → logprob: -7.021734714508057
    10. '12' → logprob: -7.146734714508057

Token 137: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8305851221084595
    2. '7' → logprob: -1.8305851221084595
    3. '10' → logprob: -1.9555851221084595
    4. '4' → logprob: -2.33058500289917
    5. ' ' → logprob: -2.70558500289917
    6. '6' → logprob: -2.83058500289917
    7. '9' → logprob: -4.95558500289917
    8. '14' → logprob: -5.45558500289917
    9. '15' → logprob: -5.58058500289917
    10. '12' → logprob: -5.58058500289917

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022964231902733445
    2. ',
' → logprob: -8.625229835510254
    3. ' ,' → logprob: -10.500229835510254
    4. ':' → logprob: -11.250229835510254
    5. '<|end|>' → logprob: -11.875229835510254
    6. '   ' → logprob: -13.500229835510254
    7. ',

' → logprob: -14.625229835510254
    8. '}' → logprob: -15.750229835510254
    9. ',\
' → logprob: -16.000228881835938
    10. '<|end|>' → logprob: -16.625228881835938

Token 139: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3068183958530426
    2. ' '' → logprob: -2.1818184852600098
    3. '       ' → logprob: -2.4318184852600098
    4. ''' → logprob: -4.43181848526001
    5. '   ' → logprob: -4.55681848526001
    6. '4' → logprob: -4.93181848526001
    7. '#' → logprob: -5.05681848526001
    8. '6' → logprob: -5.30681848526001
    9. ' #' → logprob: -5.30681848526001
    10. '3' → logprob: -5.43181848526001

Token 140: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36339184641838074
    2. ' #' → logprob: -1.7383918762207031
    3. ''' → logprob: -2.363391876220703
    4. ' ' → logprob: -3.988391876220703
    5. '       ' → logprob: -5.488391876220703
    6. '3' → logprob: -6.238391876220703
    7. '5' → logprob: -6.238391876220703
    8. '6' → logprob: -6.488391876220703
    9. '   ' → logprob: -6.613391876220703
    10. '4' → logprob: -6.613391876220703

Token 141: ' ' (ID: 220)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -8.458980300929397e-05
    2. 'かな' → logprob: -10.12508487701416
    3. 'た' → logprob: -10.87508487701416
    4. ' ' → logprob: -11.50008487701416
    5. 'abc' → logprob: -11.62508487701416
    6. 'さ' → logprob: -13.62508487701416
    7. 'き' → logprob: -13.75008487701416
    8. 'あ' → logprob: -13.75008487701416
    9. 'アイ' → logprob: -14.25008487701416
    10. 'abcdef' → logprob: -14.75008487701416

Token 142: 'か' (ID: 7128)
  Prédit: 'か'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -2.248469718324486e-05
    2. 'abc' → logprob: -11.875022888183594
    3. 'た' → logprob: -12.250022888183594
    4. 'き' → logprob: -12.500022888183594
    5. 'かな' → logprob: -12.500022888183594
    6. 'ka' → logprob: -15.000022888183594
    7. 'あ' → logprob: -15.000022888183594
    8. ' ' → logprob: -15.125022888183594
    9. 'abcdef' → logprob: -15.125022888183594
    10. '
' → logprob: -15.125022888183594

Token 143: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.0014654617989435792
    2. ' ' → logprob: -6.751465320587158
    3. 'ぎ' → logprob: -9.251465797424316
    4. 'きを' → logprob: -9.376465797424316
    5. 'い' → logprob: -10.751465797424316
    6. '   ' → logprob: -11.376465797424316
    7. 'ら' → logprob: -11.501465797424316
    8. 'え' → logprob: -11.626465797424316
    9. ' ki' → logprob: -11.751465797424316
    10. 'ち' → logprob: -11.876465797424316

Token 144: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.00047214110963977873
    2. ' ' → logprob: -9.250472068786621
    3. '5' → logprob: -9.625472068786621
    4. '   ' → logprob: -9.875472068786621
    5. 'す' → logprob: -9.875472068786621
    6. '  ' → logprob: -10.250472068786621
    7. '```' → logprob: -10.250472068786621
    8. 'つ' → logprob: -10.750472068786621
    9. '<|end|>' → logprob: -11.250472068786621
    10. 'き' → logprob: -11.750472068786621

Token 145: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.0010616290383040905
    2. 'え' → logprob: -7.37606143951416
    3. '   ' → logprob: -9.25106143951416
    4. ' ' → logprob: -9.50106143951416
    5. 'e' → logprob: -9.75106143951416
    6. '```' → logprob: -10.25106143951416
    7. '<|end|>' → logprob: -10.37606143951416
    8. 'れ' → logprob: -10.50106143951416
    9. 'く' → logprob: -10.62606143951416
    10. 'げ' → logprob: -10.75106143951416

Token 146: 'こ' (ID: 8468)
  Prédit: 'こ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'こ' → logprob: -0.609536349773407
    2. ' ' → logprob: -0.859536349773407
    3. '5' → logprob: -4.109536170959473
    4. '   ' → logprob: -5.734536170959473
    5. '15' → logprob: -6.359536170959473
    6. '```' → logprob: -6.609536170959473
    7. ''' → logprob: -6.984536170959473
    8. '1' → logprob: -7.109536170959473
    9. '2' → logprob: -7.359536170959473
    10. '3' → logprob: -7.484536170959473

Token 147: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3754419684410095
    2. ',
' → logprob: -1.8754420280456543
    3. '       ' → logprob: -2.3754420280456543
    4. '   ' → logprob: -3.3754420280456543
    5. '}' → logprob: -3.5004420280456543
    6. ''' → logprob: -6.750442028045654
    7. ' }' → logprob: -8.000441551208496
    8. ' ,' → logprob: -8.250441551208496
    9. '',' → logprob: -9.000441551208496
    10. ','' → logprob: -9.500441551208496

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08260706812143326
    2. ''' → logprob: -2.7076070308685303
    3. '   ' → logprob: -4.832607269287109
    4. ' '' → logprob: -5.457607269287109
    5. '}' → logprob: -8.70760726928711
    6. ' ' → logprob: -9.58260726928711
    7. '      ' → logprob: -10.45760726928711
    8. '     ' → logprob: -10.83260726928711
    9. '  ' → logprob: -11.08260726928711
    10. ',' → logprob: -11.20760726928711

Token 149: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0034915003925561905
    2. ' '' → logprob: -6.253491401672363
    3. '       ' → logprob: -6.628491401672363
    4. '   ' → logprob: -9.003491401672363
    5. '3' → logprob: -9.628491401672363
    6. ' ' → logprob: -10.253491401672363
    7. '"' → logprob: -12.628491401672363
    8. '  ' → logprob: -13.128491401672363
    9. '}' → logprob: -13.253491401672363
    10. '           ' → logprob: -13.378491401672363

Token 150: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0028569400310516357
    2. ''' → logprob: -5.877856731414795
    3. ' ' → logprob: -10.252857208251953
    4. ' '' → logprob: -11.127857208251953
    5. ''s' → logprob: -14.377857208251953
    6. '   ' → logprob: -15.252857208251953
    7. '['' → logprob: -16.065357208251953
    8. '')' → logprob: -16.190357208251953
    9. '4' → logprob: -16.252857208251953
    10. '３' → logprob: -16.252857208251953

Token 151: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22588883340358734
    2. ':' → logprob: -1.6008888483047485
    3. ''' → logprob: -7.975888729095459
    4. ' ':' → logprob: -10.225889205932617
    5. ' :' → logprob: -10.350889205932617
    6. '5' → logprob: -10.975889205932617
    7. '7' → logprob: -11.975889205932617
    8. '6' → logprob: -12.100889205932617
    9. '":' → logprob: -12.100889205932617
    10. '):' → logprob: -12.350889205932617

Token 152: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2846735119819641
    2. ' ' → logprob: -1.4096734523773193
    3. '7' → logprob: -5.784673690795898
    4. '6' → logprob: -8.659673690795898
    5. '4' → logprob: -9.472173690795898
    6. '15' → logprob: -10.472173690795898
    7. '3' → logprob: -10.534673690795898
    8. '  ' → logprob: -10.534673690795898
    9. '10' → logprob: -10.784673690795898
    10. '   ' → logprob: -10.847173690795898

Token 153: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0029609426856040955
    2. '7' → logprob: -6.252961158752441
    3. ' ' → logprob: -7.627961158752441
    4. '4' → logprob: -8.815461158752441
    5. '6' → logprob: -8.877961158752441
    6. '15' → logprob: -10.002961158752441
    7. '10' → logprob: -10.440461158752441
    8. '3' → logprob: -10.565461158752441
    9. '``' → logprob: -10.815461158752441
    10. '"' → logprob: -11.377961158752441

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000596043246332556
    2. ' ,' → logprob: -8.500596046447754
    3. ',
' → logprob: -8.750596046447754
    4. '<|end|>' → logprob: -8.875596046447754
    5. '   ' → logprob: -10.000596046447754
    6. ':' → logprob: -10.125596046447754
    7. ' ' → logprob: -12.750596046447754
    8. '}' → logprob: -13.375596046447754
    9. '       ' → logprob: -13.625596046447754
    10. '<|end|>' → logprob: -13.750596046447754

Token 155: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0692206546664238
    2. '#' → logprob: -3.694220542907715
    3. '       ' → logprob: -4.194220542907715
    4. ' '' → logprob: -4.819220542907715
    5. ''' → logprob: -5.319220542907715
    6. ' #' → logprob: -5.569220542907715
    7. '<|end|>' → logprob: -5.819220542907715
    8. '   ' → logprob: -6.194220542907715
    9. '4' → logprob: -6.569220542907715
    10. '5' → logprob: -7.194220542907715

Token 156: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5377371907234192
    2. '#' → logprob: -1.7877371311187744
    3. '5' → logprob: -1.9127371311187744
    4. ''' → logprob: -3.1627371311187744
    5. '4' → logprob: -3.7877371311187744
    6. ' #' → logprob: -4.4127373695373535
    7. ' '' → logprob: -5.0377373695373535
    8. '   ' → logprob: -5.4127373695373535
    9. '       ' → logprob: -5.7877373695373535
    10. '3' → logprob: -5.9127373695373535

Token 157: ' ' (ID: 220)
  Prédit: 'さ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'さ' → logprob: -0.4206387400627136
    2. ' ' → logprob: -1.1706387996673584
    3. ''' → logprob: -4.045638561248779
    4. '4' → logprob: -5.295638561248779
    5. 'た' → logprob: -5.295638561248779
    6. 'き' → logprob: -6.170638561248779
    7. 'し' → logprob: -6.795638561248779
    8. 'く' → logprob: -7.420638561248779
    9. 'サ' → logprob: -7.920638561248779
    10. '7' → logprob: -8.170639038085938

Token 158: 'さ' (ID: 7500)
  Prédit: 'さ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'さ' → logprob: -0.003859339514747262
    2. ' ' → logprob: -6.253859519958496
    3. 'た' → logprob: -7.003859519958496
    4. ''' → logprob: -7.503859519958496
    5. 's' → logprob: -9.253859519958496
    6. 'し' → logprob: -9.378859519958496
    7. 'き' → logprob: -10.003859519958496
    8. '
' → logprob: -10.378859519958496
    9. '```' → logprob: -10.628859519958496
    10. 'く' → logprob: -10.753859519958496

Token 159: 'し' (ID: 3829)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -1.7210766077041626
    2. 'し' → logprob: -1.8460766077041626
    3. ' ' → logprob: -1.8460766077041626
    4. '4' → logprob: -1.9710766077041626
    5. 'え' → logprob: -2.096076488494873
    6. 'いう' → logprob: -2.971076488494873
    7. 'き' → logprob: -3.221076488494873
    8. '   ' → logprob: -3.971076488494873
    9. 'り' → logprob: -4.096076488494873
    10. 'く' → logprob: -4.346076488494873

Token 160: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.019819194450974464
    2. 'せ' → logprob: -4.019819259643555
    3. 'すす' → logprob: -6.644819259643555
    4. 'ず' → logprob: -8.394819259643555
    5. ' ' → logprob: -9.644819259643555
    6. 'そ' → logprob: -10.144819259643555
    7. 'く' → logprob: -11.394819259643555
    8. 'su' → logprob: -11.644819259643555
    9. 'つ' → logprob: -12.269819259643555
    10. 'け' → logprob: -12.394819259643555

Token 161: 'せ' (ID: 19280)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.18098871409893036
    2. 'け' → logprob: -2.1809887886047363
    3. 'れ' → logprob: -3.3059887886047363
    4. 'せ' → logprob: -4.805988788604736
    5. 'て' → logprob: -5.430988788604736
    6. 'く' → logprob: -6.555988788604736
    7. ' ' → logprob: -6.805988788604736
    8. 'e' → logprob: -8.805988311767578
    9. 'き' → logprob: -9.305988311767578
    10. '```' → logprob: -9.930988311767578

Token 162: 'そ' (ID: 11275)
  Prédit: 'そ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'そ' → logprob: -0.04254620894789696
    2. 'す' → logprob: -3.292546272277832
    3. 'せ' → logprob: -5.542546272277832
    4. ' ' → logprob: -8.667546272277832
    5. 'え' → logprob: -9.042546272277832
    6. 'ん' → logprob: -9.542546272277832
    7. 'so' → logprob: -10.042546272277832
    8. 'お' → logprob: -10.417546272277832
    9. '4' → logprob: -10.542546272277832
    10. 'き' → logprob: -11.167546272277832

Token 163: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7342382073402405
    2. '   ' → logprob: -1.1092381477355957
    3. '}' → logprob: -2.2342381477355957
    4. '       ' → logprob: -2.6092381477355957
    5. ',
' → logprob: -4.984238147735596
    6. ''' → logprob: -6.484238147735596
    7. ' }' → logprob: -7.859238147735596
    8. ' ,' → logprob: -8.359238624572754
    9. '',' → logprob: -8.984238624572754
    10. ' ' → logprob: -9.234238624572754

Token 164: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5620032548904419
    2. '       ' → logprob: -1.562003254890442
    3. '   ' → logprob: -1.562003254890442
    4. ' '' → logprob: -4.812003135681152
    5. '4' → logprob: -6.437003135681152
    6. ' ' → logprob: -7.562003135681152
    7. '}' → logprob: -9.062003135681152
    8. '  ' → logprob: -9.937003135681152
    9. ',' → logprob: -11.312003135681152
    10. '      ' → logprob: -11.562003135681152

Token 165: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.010591920465230942
    2. '       ' → logprob: -5.135591983795166
    3. ' '' → logprob: -5.885591983795166
    4. '   ' → logprob: -6.385591983795166
    5. ' ' → logprob: -9.010591506958008
    6. '4' → logprob: -10.260591506958008
    7. '  ' → logprob: -11.635591506958008
    8. '}' → logprob: -12.260591506958008
    9. '"' → logprob: -12.510591506958008
    10. '     ' → logprob: -12.885591506958008

Token 166: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.908022285439074e-05
    2. ''' → logprob: -10.125059127807617
    3. ' ' → logprob: -11.000059127807617
    4. '1' → logprob: -14.687559127807617
    5. '3' → logprob: -15.312559127807617
    6. ''s' → logprob: -15.437559127807617
    7. ' '' → logprob: -15.562559127807617
    8. '5' → logprob: -15.625059127807617
    9. '```' → logprob: -16.062559127807617
    10. '7' → logprob: -16.250059127807617

Token 167: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3140118420124054
    2. ':' → logprob: -1.314011812210083
    3. ''' → logprob: -8.064011573791504
    4. ' :' → logprob: -8.314011573791504
    5. ' ':' → logprob: -9.064011573791504
    6. '   ' → logprob: -10.439011573791504
    7. '5' → logprob: -12.189011573791504
    8. '0' → logprob: -12.314011573791504
    9. '":' → logprob: -12.564011573791504
    10. '7' → logprob: -12.564011573791504

Token 168: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.57830810546875
    2. '5' → logprob: -0.82830810546875
    3. '4' → logprob: -6.20330810546875
    4. '6' → logprob: -8.70330810546875
    5. '7' → logprob: -10.20330810546875
    6. '3' → logprob: -10.51580810546875
    7. '   ' → logprob: -10.57830810546875
    8. '0' → logprob: -10.82830810546875
    9. '  ' → logprob: -11.14080810546875
    10. '10' → logprob: -11.32830810546875

Token 169: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0037644514814019203
    2. '4' → logprob: -6.128764629364014
    3. ' ' → logprob: -6.628764629364014
    4. '6' → logprob: -9.378764152526855
    5. '7' → logprob: -10.691264152526855
    6. '3' → logprob: -10.753764152526855
    7. '2' → logprob: -10.878764152526855
    8. '   ' → logprob: -11.066264152526855
    9. '1' → logprob: -11.566264152526855
    10. '0' → logprob: -11.691264152526855

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005257497541606426
    2. ',
' → logprob: -7.875525951385498
    3. ' ,' → logprob: -9.75052547454834
    4. '   ' → logprob: -9.75052547454834
    5. '<|end|>' → logprob: -11.00052547454834
    6. '}' → logprob: -11.75052547454834
    7. '       ' → logprob: -13.62552547454834
    8. ',

' → logprob: -13.87552547454834
    9. '<|end|>' → logprob: -14.50052547454834
    10. ' ' → logprob: -14.75052547454834

Token 171: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8059881925582886
    2. ' ' → logprob: -0.9309881925582886
    3. '#' → logprob: -2.555988311767578
    4. '   ' → logprob: -3.180988311767578
    5. ''' → logprob: -4.180988311767578
    6. ' '' → logprob: -4.555988311767578
    7. '}' → logprob: -4.930988311767578
    8. ' #' → logprob: -5.430988311767578
    9. '<|end|>' → logprob: -6.930988311767578
    10. '  ' → logprob: -7.805988311767578

Token 172: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27814963459968567
    2. '#' → logprob: -1.5281496047973633
    3. '5' → logprob: -4.903149604797363
    4. ''' → logprob: -5.653149604797363
    5. ' #' → logprob: -5.653149604797363
    6. '   ' → logprob: -6.028149604797363
    7. '7' → logprob: -6.153149604797363
    8. '4' → logprob: -6.278149604797363
    9. '9' → logprob: -6.403149604797363
    10. '6' → logprob: -7.153149604797363

Token 173: ' ' (ID: 220)
  Prédit: 'た'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -0.0012305884156376123
    2. ' ' → logprob: -7.001230716705322
    3. 'な' → logprob: -8.501230239868164
    4. ''' → logprob: -9.626230239868164
    5. 'ただ' → logprob: -11.001230239868164
    6. 'ち' → logprob: -12.001230239868164
    7. '
' → logprob: -12.626230239868164
    8. 'ざ' → logprob: -13.001230239868164
    9. '"' → logprob: -13.126230239868164
    10. 'なた' → logprob: -13.376230239868164

Token 174: 'た' (ID: 5598)
  Prédit: 'た'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -0.00023119196703191847
    2. 'ち' → logprob: -9.37523078918457
    3. 'な' → logprob: -9.50023078918457
    4. ''' → logprob: -11.00023078918457
    5. ' ' → logprob: -11.50023078918457
    6. 'て' → logprob: -11.62523078918457
    7. 'ただ' → logprob: -11.87523078918457
    8. 'タ' → logprob: -12.75023078918457
    9. 'せ' → logprob: -13.00023078918457
    10. 'し' → logprob: -13.00023078918457

Token 175: 'ち' (ID: 15376)
  Prédit: 'ち'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ち' → logprob: -0.18217462301254272
    2. '<|end|>' → logprob: -2.8071746826171875
    3. 'いう' → logprob: -3.5571746826171875
    4. 'つ' → logprob: -3.8071746826171875
    5. 'とう' → logprob: -4.4321746826171875
    6. 'い' → logprob: -4.9321746826171875
    7. 'え' → logprob: -5.0571746826171875
    8. 'た' → logprob: -5.5571746826171875
    9. 'う' → logprob: -5.6821746826171875
    10. 'ぶ' → logprob: -6.0571746826171875

Token 176: 'つ' (ID: 18290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: 'て' (ID: 5711)
  Prédit: 'て'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -9.579495235811919e-05
    2. 'た' → logprob: -9.87509536743164
    3. 'つ' → logprob: -11.25009536743164
    4. ' ' → logprob: -11.87509536743164
    5. 'ね' → logprob: -12.12509536743164
    6. 'と' → logprob: -12.25009536743164
    7. '```' → logprob: -12.62509536743164
    8. 'せ' → logprob: -13.25009536743164
    9. '   ' → logprob: -13.37509536743164
    10. 'te' → logprob: -13.37509536743164

Token 178: 'と' (ID: 5330)
  Prédit: 'と'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'と' → logprob: -0.024030081927776337
    2. 'よ' → logprob: -4.2740302085876465
    3. '5' → logprob: -4.8990302085876465
    4. ' ' → logprob: -7.3990302085876465
    5. 'こ' → logprob: -7.7740302085876465
    6. 'ん' → logprob: -8.024029731750488
    7. 'お' → logprob: -8.524029731750488
    8. 'そ' → logprob: -8.649029731750488
    9. 'な' → logprob: -9.149029731750488
    10. ' と' → logprob: -9.649029731750488

Token 179: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7051028609275818
    2. '}' → logprob: -1.5801029205322266
    3. ',
' → logprob: -1.7051029205322266
    4. '   ' → logprob: -2.4551029205322266
    5. '       ' → logprob: -3.4551029205322266
    6. ''' → logprob: -8.455102920532227
    7. ' }' → logprob: -9.080102920532227
    8. '',' → logprob: -9.080102920532227
    9. ' ,' → logprob: -9.205102920532227
    10. ','' → logprob: -9.955102920532227

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08765760064125061
    2. '   ' → logprob: -2.7126576900482178
    3. ''' → logprob: -4.087657451629639
    4. ' '' → logprob: -7.712657451629639
    5. '}' → logprob: -8.587657928466797
    6. ' ' → logprob: -9.337657928466797
    7. '  ' → logprob: -10.962657928466797
    8. '	' → logprob: -11.212657928466797
    9. '      ' → logprob: -11.712657928466797
    10. '     ' → logprob: -11.962657928466797

Token 181: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.1565963476896286
    2. '       ' → logprob: -2.2815964221954346
    3. '   ' → logprob: -3.6565964221954346
    4. ' '' → logprob: -4.2815961837768555
    5. '}' → logprob: -6.0315961837768555
    6. ' ' → logprob: -7.7815961837768555
    7. '5' → logprob: -9.156596183776855
    8. '  ' → logprob: -9.656596183776855
    9. ''}' → logprob: -10.156596183776855
    10. '"' → logprob: -10.281596183776855

Token 182: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0011945136357098818
    2. ''' → logprob: -6.876194477081299
    3. ' ' → logprob: -9.251194953918457
    4. '4' → logprob: -9.751194953918457
    5. '   ' → logprob: -13.001194953918457
    6. '6' → logprob: -13.126194953918457
    7. ' '' → logprob: -13.251194953918457
    8. '  ' → logprob: -15.001194953918457
    9. '7' → logprob: -15.501194953918457
    10. ''s' → logprob: -15.626194953918457

Token 183: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014276685193181038
    2. ':' → logprob: -4.514276504516602
    3. ''' → logprob: -6.264276504516602
    4. ' ':' → logprob: -6.889276504516602
    5. ' :' → logprob: -9.514276504516602
    6. '5' → logprob: -9.514276504516602
    7. '6' → logprob: -10.014276504516602
    8. '7' → logprob: -10.889276504516602
    9. '   ' → logprob: -11.014276504516602
    10. '0' → logprob: -11.514276504516602

Token 184: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20609377324581146
    2. ' ' → logprob: -1.9560937881469727
    3. '7' → logprob: -3.2060937881469727
    4. '6' → logprob: -6.081093788146973
    5. '4' → logprob: -6.706093788146973
    6. '10' → logprob: -8.393593788146973
    7. '   ' → logprob: -8.956093788146973
    8. '  ' → logprob: -9.081093788146973
    9. '3' → logprob: -10.018593788146973
    10. '1' → logprob: -10.081093788146973

Token 185: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.07388431578874588
    2. ' ' → logprob: -2.6988842487335205
    3. '7' → logprob: -6.1988844871521
    4. '10' → logprob: -7.0738844871521
    5. '6' → logprob: -7.1988844871521
    6. '4' → logprob: -8.886384010314941
    7. '1' → logprob: -9.948884010314941
    8. '3' → logprob: -10.761384010314941
    9. '  ' → logprob: -11.011384010314941
    10. '0' → logprob: -11.198884010314941

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04824300855398178
    2. ',
' → logprob: -3.1732430458068848
    3. '}' → logprob: -5.423243045806885
    4. '   ' → logprob: -7.298243045806885
    5. '
' → logprob: -10.298242568969727
    6. ' }' → logprob: -10.673242568969727
    7. ' ,' → logprob: -10.798242568969727
    8. ' ' → logprob: -11.048242568969727
    9. '<|end|>' → logprob: -11.548242568969727
    10. ',
' → logprob: -11.798242568969727

Token 187: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5710643529891968
    2. '#' → logprob: -1.8210643529891968
    3. '   ' → logprob: -1.9460643529891968
    4. '       ' → logprob: -2.4460644721984863
    5. '}' → logprob: -4.321064472198486
    6. ' #' → logprob: -4.446064472198486
    7. ''' → logprob: -5.071064472198486
    8. '6' → logprob: -6.196064472198486
    9. '1' → logprob: -6.446064472198486
    10. ' '' → logprob: -6.571064472198486

Token 188: ' #' (ID: 1069)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08560772985219955
    2. '#' → logprob: -3.4606077671051025
    3. ' ' → logprob: -3.9606077671051025
    4. '       ' → logprob: -4.710607528686523
    5. ''' → logprob: -4.835607528686523
    6. '   ' → logprob: -5.210607528686523
    7. ' #' → logprob: -6.085607528686523
    8. '4' → logprob: -6.210607528686523
    9. '9' → logprob: -6.585607528686523
    10. '6' → logprob: -6.710607528686523

Token 189: ' な' (ID: 184926)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.0021487155463546515
    2. ' な' → logprob: -6.252148628234863
    3. 'なが' → logprob: -9.252148628234863
    4. 'なた' → logprob: -9.627148628234863
    5. 'は' → logprob: -10.752148628234863
    6. 'なお' → logprob: -12.002148628234863
    7. 'なの' → logprob: -12.252148628234863
    8. ''' → logprob: -12.377148628234863
    9. ' ' → logprob: -13.002148628234863
    10. '   ' → logprob: -13.002148628234863

Token 190: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.3829619586467743
    2. 'い' → logprob: -2.1329619884490967
    3. 'な' → logprob: -2.1329619884490967
    4. 'いう' → logprob: -3.8829619884490967
    5. 'ん' → logprob: -4.632961750030518
    6. 'ち' → logprob: -4.757961750030518
    7. 'か' → logprob: -4.882961750030518
    8. 'み' → logprob: -5.132961750030518
    9. 'り' → logprob: -5.257961750030518
    10. 'き' → logprob: -5.507961750030518

Token 191: '�' (ID: 605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe3\x81' → logprob: -0.8021791577339172
    2. 'に' → logprob: -1.0521790981292725
    3. 'き' → logprob: -2.5521790981292725
    4. 'ん' → logprob: -3.3021790981292725
    5. 'ま' → logprob: -3.5521790981292725
    6. 'み' → logprob: -4.302179336547852
    7. 'な' → logprob: -4.427179336547852
    8. 'ふ' → logprob: -4.677179336547852
    9. 'く' → logprob: -4.927179336547852
    10. 'ね' → logprob: -5.427179336547852

Token 192: '�' (ID: 105)
  Prédit: 'ま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ま' → logprob: -0.7138823866844177
    2. 'お' → logprob: -2.0888824462890625
    3. 'こ' → logprob: -2.4638824462890625
    4. '5' → logprob: -2.9638824462890625
    5. 'き' → logprob: -2.9638824462890625
    6. 'な' → logprob: -3.3388824462890625
    7. '```' → logprob: -3.4638824462890625
    8. 'ん' → logprob: -4.2138824462890625
    9. 'く' → logprob: -4.4638824462890625
    10. ' ' → logprob: -4.9638824462890625

Token 193: 'ね' (ID: 28144)
  Prédit: 'ま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ま' → logprob: -0.06208319589495659
    2. 'く' → logprob: -3.3120832443237305
    3. 'す' → logprob: -5.6870832443237305
    4. 'な' → logprob: -5.8120832443237305
    5. 'き' → logprob: -6.0620832443237305
    6. '\xe3\x81' → logprob: -6.1870832443237305
    7. '5' → logprob: -6.4370832443237305
    8. 'に' → logprob: -6.9370832443237305
    9. 'ます' → logprob: -7.0620832443237305
    10. ' ' → logprob: -7.1870832443237305

Token 194: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe3\x81' → logprob: -0.041494738310575485
    2. 'な' → logprob: -4.416494846343994
    3. '   ' → logprob: -4.541494846343994
    4. ' ' → logprob: -5.416494846343994
    5. '5' → logprob: -6.166494846343994
    6. '6' → logprob: -6.791494846343994
    7. 'ん' → logprob: -6.916494846343994
    8. 'ね' → logprob: -7.166494846343994
    9. '7' → logprob: -7.291494846343994
    10. '  ' → logprob: -7.291494846343994

Token 195: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: '       ' (ID: 309)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6822226047515869
    2. '<|end|>' → logprob: -0.8072226047515869
    3. ' ' → logprob: -3.807222604751587
    4. '   ' → logprob: -5.557222366333008
    5. '  ' → logprob: -5.682222366333008
    6. '5' → logprob: -5.682222366333008
    7. '7' → logprob: -5.807222366333008
    8. '0' → logprob: -5.807222366333008
    9. '9' → logprob: -6.307222366333008
    10. '<|end|>' → logprob: -6.682222366333008

Token 197: ' '' (ID: 461)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4073593318462372
    2. ' ' → logprob: -2.0323593616485596
    3. '5' → logprob: -2.1573593616485596
    4. '7' → logprob: -3.6573593616485596
    5. ''' (adapté à ' '') → logprob: -3.7823593616485596
    6. '4' → logprob: -4.9073591232299805
    7. '   ' → logprob: -5.0323591232299805
    8. '0' → logprob: -5.1573591232299805
    9. '<|end|>' → logprob: -5.2823591232299805
    10. ' '' → logprob: -5.7823591232299805

Token 198: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.027814462780952454
    2. ''' → logprob: -4.1528143882751465
    3. '5' → logprob: -5.2778143882751465
    4. ' ' → logprob: -5.2778143882751465
    5. ''s' → logprob: -7.2778143882751465
    6. ' '' → logprob: -8.027814865112305
    7. '7' → logprob: -8.152814865112305
    8. '   ' → logprob: -9.902814865112305
    9. ''t' → logprob: -10.027814865112305
    10. ''m' → logprob: -10.777814865112305

Token 199: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43598684668540955
    2. '':' → logprob: -1.060986876487732
    3. '5' → logprob: -5.1859869956970215
    4. ' :' → logprob: -7.6859869956970215
    5. ''' → logprob: -8.185986518859863
    6. '   ' → logprob: -8.685986518859863
    7. ' ' → logprob: -8.935986518859863
    8. '7' → logprob: -9.060986518859863
    9. '6' → logprob: -9.435986518859863
    10. '0' → logprob: -9.685986518859863

Token 200: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.051635339856147766
    2. ' ' → logprob: -3.176635265350342
    3. '6' → logprob: -4.926635265350342
    4. '7' → logprob: -7.426635265350342
    5. '4' → logprob: -7.926635265350342
    6. '1' → logprob: -8.6766357421875
    7. '10' → logprob: -9.4891357421875
    8. '0' → logprob: -10.3016357421875
    9. '3' → logprob: -10.5516357421875
    10. '```' → logprob: -11.2391357421875

Token 201: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004719784017652273
    2. ' ' → logprob: -5.7547197341918945
    3. '6' → logprob: -7.1297197341918945
    4. '4' → logprob: -8.567219734191895
    5. '10' → logprob: -8.567219734191895
    6. '7' → logprob: -8.942219734191895
    7. '1' → logprob: -9.317219734191895
    8. '3' → logprob: -10.442219734191895
    9. '0' → logprob: -10.629719734191895
    10. '2' → logprob: -11.004719734191895

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008350008283741772
    2. ' ,' → logprob: -7.625834941864014
    3. ',
' → logprob: -8.125835418701172
    4. '   ' → logprob: -10.750835418701172
    5. ':' → logprob: -11.250835418701172
    6. '<|end|>' → logprob: -11.750835418701172
    7. '}' → logprob: -13.250835418701172
    8. ',
' → logprob: -13.375835418701172
    9. ',

' → logprob: -13.875835418701172
    10. ' ' → logprob: -14.250835418701172

Token 203: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06131783872842789
    2. '6' → logprob: -4.1863179206848145
    3. '7' → logprob: -4.4363179206848145
    4. '5' → logprob: -4.6863179206848145
    5. '<|end|>' → logprob: -4.6863179206848145
    6. '4' → logprob: -5.5613179206848145
    7. '10' → logprob: -5.8113179206848145
    8. '9' → logprob: -6.1863179206848145
    9. ' '' → logprob: -6.5613179206848145
    10. '   ' → logprob: -7.4363179206848145

Token 204: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6494678258895874
    2. '5' → logprob: -1.3994678258895874
    3. '6' → logprob: -2.649467945098877
    4. '4' → logprob: -3.024467945098877
    5. '7' → logprob: -3.274467945098877
    6. '#' → logprob: -4.149467945098877
    7. ' '' → logprob: -4.149467945098877
    8. ''' → logprob: -4.649467945098877
    9. '   ' → logprob: -5.024467945098877
    10. '9' → logprob: -5.399467945098877

Token 205: ' は' (ID: 121587)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.004281396511942148
    2. ' は' → logprob: -6.504281520843506
    3. 'た' → logprob: -6.754281520843506
    4. '6' → logprob: -7.504281520843506
    5. 'ま' → logprob: -7.629281520843506
    6. 'ふ' → logprob: -9.004281044006348
    7. '7' → logprob: -9.379281044006348
    8. '5' → logprob: -9.504281044006348
    9. 'ら' → logprob: -10.129281044006348
    10. ' ' → logprob: -10.379281044006348

Token 206: 'ひ' (ID: 60922)
  Prédit: 'ば'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ば' → logprob: -0.5383217930793762
    2. 'は' → logprob: -1.2883217334747314
    3. 'ひ' → logprob: -2.0383217334747314
    4. 'ぱ' → logprob: -5.9133219718933105
    5. ' ' → logprob: -6.7883219718933105
    6. 'ふ' → logprob: -7.0383219718933105
    7. '   ' → logprob: -7.2883219718933105
    8. '\xe3\x82' → logprob: -7.4133219718933105
    9. 'び' → logprob: -7.4133219718933105
    10. 'はい' → logprob: -7.7883219718933105

Token 207: 'ふ' (ID: 82904)
  Prédit: 'ふ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ふ' → logprob: -0.0026775605510920286
    2. 'は' → logprob: -6.0026774406433105
    3. 'へ' → logprob: -9.252677917480469
    4. ' ' → logprob: -10.127677917480469
    5. 'ひ' → logprob: -10.877677917480469
    6. 'ぷ' → logprob: -11.627677917480469
    7. '   ' → logprob: -12.502677917480469
    8. 'ば' → logprob: -12.502677917480469
    9. '��' → logprob: -12.877677917480469
    10. '　' → logprob: -13.002677917480469

Token 208: 'へ' (ID: 40026)
  Prédit: 'へ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'へ' → logprob: -0.20753155648708344
    2. 'え' → logprob: -1.8325315713882446
    3. ' ' → logprob: -4.707531452178955
    4. '5' → logprob: -5.332531452178955
    5. 'ね' → logprob: -5.957531452178955
    6. '7' → logprob: -6.332531452178955
    7. '6' → logprob: -7.207531452178955
    8. '   ' → logprob: -7.332531452178955
    9. 'も' → logprob: -7.332531452178955
    10. 'ヘ' → logprob: -7.832531452178955

Token 209: 'ほ' (ID: 45165)
  Prédit: 'ほ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ほ' → logprob: -0.33262500166893005
    2. '5' → logprob: -1.9576250314712524
    3. 'ふ' → logprob: -2.332624912261963
    4. 'も' → logprob: -4.332624912261963
    5. '
' → logprob: -5.207624912261963
    6. 'へ' → logprob: -5.332624912261963
    7. ' ' → logprob: -5.332624912261963
    8. '7' → logprob: -5.832624912261963
    9. '6' → logprob: -5.957624912261963
    10. 'は' → logprob: -6.332624912261963

Token 210: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7376399636268616
    2. '   ' → logprob: -1.2376399040222168
    3. '       ' → logprob: -1.8626399040222168
    4. ',
' → logprob: -2.737639904022217
    5. '}' → logprob: -5.737639904022217
    6. ''' → logprob: -5.737639904022217
    7. '6' → logprob: -6.862639904022217
    8. ' ' → logprob: -7.237639904022217
    9. '7' → logprob: -7.487639904022217
    10. '',' → logprob: -7.487639904022217

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7136114835739136
    2. '7' → logprob: -1.5886114835739136
    3. ''' → logprob: -1.9636114835739136
    4. '   ' → logprob: -2.338611602783203
    5. ' ' → logprob: -3.338611602783203
    6. ' '' → logprob: -3.838611602783203
    7. '}' → logprob: -5.713611602783203
    8. '6' → logprob: -6.213611602783203
    9. ' }' → logprob: -6.213611602783203
    10. ')' → logprob: -7.213611602783203

Token 212: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.6605352759361267
    2. '7' → logprob: -0.7855352759361267
    3. ' '' → logprob: -3.7855353355407715
    4. ' ' → logprob: -5.7855353355407715
    5. '       ' → logprob: -6.7855353355407715
    6. '   ' → logprob: -7.9105353355407715
    7. '     ' → logprob: -10.035534858703613
    8. '    ' → logprob: -10.160534858703613
    9. '6' → logprob: -10.410534858703613
    10. '}' → logprob: -10.785534858703613

Token 213: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0062311794608831406
    2. '6' → logprob: -5.756231307983398
    3. ' ' → logprob: -5.881231307983398
    4. ''' → logprob: -8.631231307983398
    5. '5' → logprob: -10.256231307983398
    6. ' '' → logprob: -10.631231307983398
    7. ''s' → logprob: -12.193731307983398
    8. '   ' → logprob: -12.443731307983398
    9. '4' → logprob: -13.443731307983398
    10. '1' → logprob: -13.568731307983398

Token 214: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0006915858830325305
    2. ':' → logprob: -7.6256914138793945
    3. ''' → logprob: -9.000691413879395
    4. ' ':' → logprob: -9.500691413879395
    5. '   ' → logprob: -13.000691413879395
    6. '":' → logprob: -14.125691413879395
    7. ' :' → logprob: -15.000691413879395
    8. '```' → logprob: -15.125691413879395
    9. '':'' → logprob: -15.375691413879395
    10. ''):' → logprob: -15.375691413879395

Token 215: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4241345524787903
    2. '7' → logprob: -1.1741344928741455
    3. '4' → logprob: -3.9241344928741455
    4. '5' → logprob: -4.174134731292725
    5. '14' → logprob: -7.674134731292725
    6. '6' → logprob: -8.174134254455566
    7. '10' → logprob: -8.674134254455566
    8. '   ' → logprob: -9.111634254455566
    9. '3' → logprob: -9.674134254455566
    10. '  ' → logprob: -9.861634254455566

Token 216: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02835957519710064
    2. '5' → logprob: -4.403359413146973
    3. '14' → logprob: -4.403359413146973
    4. '6' → logprob: -6.528359413146973
    5. '4' → logprob: -7.278359413146973
    6. '3' → logprob: -7.278359413146973
    7. '10' → logprob: -9.465859413146973
    8. ' ' → logprob: -9.528359413146973
    9. '"' → logprob: -9.840859413146973
    10. '\' → logprob: -10.340859413146973

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027469811029732227
    2. ',
' → logprob: -6.377747058868408
    3. ' ,' → logprob: -7.002747058868408
    4. '<|end|>' → logprob: -9.62774658203125
    5. '   ' → logprob: -9.87774658203125
    6. ' ,
' → logprob: -12.12774658203125
    7. '}' → logprob: -12.87774658203125
    8. ',

' → logprob: -13.00274658203125
    9. ' ' → logprob: -13.12774658203125
    10. '<|end|>' → logprob: -13.87774658203125

Token 218: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07081074267625809
    2. ' #' → logprob: -3.1958107948303223
    3. '#' → logprob: -3.6958107948303223
    4. '   ' → logprob: -6.695810794830322
    5. '  ' → logprob: -7.320810794830322
    6. '<|end|>' → logprob: -7.445810794830322
    7. '       ' → logprob: -10.570810317993164
    8. ''' → logprob: -11.320810317993164
    9. ' '' → logprob: -11.695810317993164
    10. '
' → logprob: -11.695810317993164

Token 219: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19444920122623444
    2. '#' → logprob: -1.9444491863250732
    3. ' #' → logprob: -3.4444491863250732
    4. '   ' → logprob: -6.819449424743652
    5. '  ' → logprob: -7.444449424743652
    6. '<|end|>' → logprob: -11.944449424743652
    7. '#
' → logprob: -12.069449424743652
    8. '	' → logprob: -12.194449424743652
    9. ''' → logprob: -12.444449424743652
    10. '}' → logprob: -12.694449424743652

Token 220: ' ' (ID: 220)
  Prédit: 'た'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -0.22751182317733765
    2. ' ' → logprob: -2.8525118827819824
    3. 'は' → logprob: -2.9775118827819824
    4. 'な' → logprob: -3.3525118827819824
    5. 'ま' → logprob: -3.8525118827819824
    6. 'ば' → logprob: -5.227511882781982
    7. '\xe3\x82' → logprob: -5.352511882781982
    8. 'ぱ' → logprob: -5.477511882781982
    9. 'あ' → logprob: -5.727511882781982
    10. 'が' → logprob: -5.852511882781982

Token 221: 'ま' (ID: 5042)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.7946398854255676
    2. 'は' → logprob: -1.4196398258209229
    3. 'た' → logprob: -1.6696398258209229
    4. 'ま' → logprob: -2.419639825820923
    5. 'ば' → logprob: -4.169640064239502
    6. ''' → logprob: -5.794640064239502
    7. 'ざ' → logprob: -6.294640064239502
    8. 'あ' → logprob: -6.419640064239502
    9. 'が' → logprob: -6.669640064239502
    10. 'ぱ' → logprob: -6.919640064239502

Token 222: 'み' (ID: 17897)
  Prédit: 'ん'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ん' → logprob: -1.6190409660339355
    2. 'み' → logprob: -1.6190409660339355
    3. '<|end|>' → logprob: -1.7440409660339355
    4. 'え' → logprob: -2.6190409660339355
    5. 'あ' → logprob: -2.8690409660339355
    6. ' ' → logprob: -3.2440409660339355
    7. 'ず' → logprob: -3.4940409660339355
    8. '   ' → logprob: -3.8690409660339355
    9. 'つ' → logprob: -4.1190409660339355
    10. ',' → logprob: -4.3690409660339355

Token 223: 'む' (ID: 44286)
  Prédit: 'み'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'み' → logprob: -1.242449402809143
    2. 'え' → logprob: -1.742449402809143
    3. '<|end|>' → logprob: -1.742449402809143
    4. 'つ' → logprob: -2.2424492835998535
    5. 'ず' → logprob: -3.1174492835998535
    6. ' ' → logprob: -3.2424492835998535
    7. 'ち' → logprob: -3.4924492835998535
    8. 'い' → logprob: -3.9924492835998535
    9. ',' → logprob: -4.7424492835998535
    10. 'う' → logprob: -4.7424492835998535

Token 224: 'め' (ID: 17693)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6833899021148682
    2. '7' → logprob: -1.6833899021148682
    3. 'つ' → logprob: -2.433389902114868
    4. 'え' → logprob: -2.683389902114868
    5. ' ' → logprob: -3.183389902114868
    6. 'す' → logprob: -3.808389902114868
    7. 'う' → logprob: -4.183389663696289
    8. ',' → logprob: -4.433389663696289
    9. 'ろ' → logprob: -4.558389663696289
    10. '   ' → logprob: -4.933389663696289

Token 225: 'も' (ID: 8446)
  Prédit: 'も'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'も' → logprob: -0.7139251232147217
    2. ' ' → logprob: -1.9639251232147217
    3. '5' → logprob: -2.2139251232147217
    4. 'め' → logprob: -2.7139251232147217
    5. 'え' → logprob: -3.0889251232147217
    6. 'む' → logprob: -3.3389251232147217
    7. 'ろ' → logprob: -3.5889251232147217
    8. '7' → logprob: -3.7139251232147217
    9. 'お' → logprob: -3.8389251232147217
    10. 'ま' → logprob: -4.713925361633301

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7004039883613586
    2. ''' → logprob: -1.5754039287567139
    3. ',' → logprob: -2.075403928756714
    4. ',
' → logprob: -2.575403928756714
    5. '   ' → logprob: -3.075403928756714
    6. '7' → logprob: -4.325404167175293
    7. '<|end|>' → logprob: -5.075404167175293
    8. '
' → logprob: -5.200404167175293
    9. ' 
' → logprob: -5.450404167175293
    10. '}' → logprob: -5.450404167175293

Token 227: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18235960602760315
    2. '       ' → logprob: -1.9323595762252808
    3. ' '' → logprob: -4.18235969543457
    4. '   ' → logprob: -5.30735969543457
    5. '8' → logprob: -6.80735969543457
    6. ' ' → logprob: -8.30735969543457
    7. '           ' → logprob: -8.93235969543457
    8. '    ' → logprob: -10.18235969543457
    9. '     ' → logprob: -10.43235969543457
    10. '        ' → logprob: -10.68235969543457

Token 228: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.007968460209667683
    2. ' '' → logprob: -4.882968425750732
    3. '       ' → logprob: -8.50796890258789
    4. '8' → logprob: -9.88296890258789
    5. ' ' → logprob: -9.88296890258789
    6. '   ' → logprob: -10.00796890258789
    7. '`' → logprob: -12.50796890258789
    8. '"' → logprob: -12.63296890258789
    9. '           ' → logprob: -14.25796890258789
    10. '     ' → logprob: -14.25796890258789

Token 229: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.005330163054168224
    2. ''' → logprob: -5.5053300857543945
    3. '7' → logprob: -6.7553300857543945
    4. ' ' → logprob: -10.130330085754395
    5. ' '' → logprob: -10.255330085754395
    6. ''s' → logprob: -12.505330085754395
    7. '８' → logprob: -12.505330085754395
    8. '9' → logprob: -14.380330085754395
    9. '   ' → logprob: -14.942830085754395
    10. '"' → logprob: -15.067830085754395

Token 230: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3141557276248932
    2. ':' → logprob: -1.3141556978225708
    3. ''' → logprob: -7.189155578613281
    4. ' :' → logprob: -9.439155578613281
    5. ' ':' → logprob: -10.314155578613281
    6. '":' → logprob: -11.814155578613281
    7. '   ' → logprob: -12.439155578613281
    8. '':'' → logprob: -12.439155578613281
    9. '```' → logprob: -13.439155578613281
    10. ''s' → logprob: -13.564155578613281

Token 231: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07962499558925629
    2. '5' → logprob: -2.579624891281128
    3. '6' → logprob: -7.954625129699707
    4. '7' → logprob: -9.079625129699707
    5. '9' → logprob: -9.079625129699707
    6. '8' → logprob: -9.079625129699707
    7. '10' → logprob: -10.829625129699707
    8. '4' → logprob: -11.704625129699707
    9. '1' → logprob: -12.642125129699707
    10. '   ' → logprob: -13.892125129699707

Token 232: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02137271873652935
    2. '7' → logprob: -4.2713727951049805
    3. ' ' → logprob: -5.0213727951049805
    4. '6' → logprob: -7.8963727951049805
    5. '4' → logprob: -9.08387279510498
    6. '1' → logprob: -11.02137279510498
    7. '0' → logprob: -11.45887279510498
    8. '3' → logprob: -11.64637279510498
    9. '8' → logprob: -11.70887279510498
    10. '  ' → logprob: -12.14637279510498

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014717034064233303
    2. ' ,' → logprob: -4.639717102050781
    3. '   ' → logprob: -6.389717102050781
    4. ',
' → logprob: -6.514717102050781
    5. '<|end|>' → logprob: -7.139717102050781
    6. '}' → logprob: -7.639717102050781
    7. ' ' → logprob: -9.264717102050781
    8. '       ' → logprob: -9.264717102050781
    9. ':' → logprob: -9.264717102050781
    10. ' }' → logprob: -9.889717102050781

Token 234: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.48000743985176086
    2. '       ' → logprob: -1.9800074100494385
    3. ''' → logprob: -2.1050074100494385
    4. ' ' → logprob: -2.4800074100494385
    5. '}' → logprob: -4.480007648468018
    6. '   ' → logprob: -4.605007648468018
    7. ' }' → logprob: -4.980007648468018
    8. '<|end|>' → logprob: -6.105007648468018
    9. ''s' → logprob: -6.355007648468018
    10. '  ' → logprob: -6.605007648468018

Token 235: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.681514322757721
    2. ' '' → logprob: -1.0565142631530762
    3. ' ' → logprob: -2.931514263153076
    4. '   ' → logprob: -3.181514263153076
    5. '       ' → logprob: -3.931514263153076
    6. '}' → logprob: -4.306514263153076
    7. '<|end|>' → logprob: -4.806514263153076
    8. '  ' → logprob: -6.181514263153076
    9. '#' → logprob: -6.306514263153076
    10. ''s' → logprob: -6.431514263153076

Token 236: ' �' (ID: 9203)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'や' → logprob: -3.333223139634356e-05
    2. ' \xe3\x82' → logprob: -11.125033378601074
    3. 'ゆ' → logprob: -11.875033378601074
    4. 'ゃ' → logprob: -12.875033378601074
    5. ''' → logprob: -13.125033378601074
    6. 'な' → logprob: -13.250033378601074
    7. 'よ' → logprob: -13.500033378601074
    8. 'た' → logprob: -13.875033378601074
    9. '"' → logprob: -13.875033378601074
    10. 'は' → logprob: -14.125033378601074

Token 237: '�' (ID: 226)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'や' → logprob: -0.0011002069804817438
    2. 'ゃ' → logprob: -7.126100063323975
    3. 'た' → logprob: -9.626100540161133
    4. 'ん' → logprob: -10.001100540161133
    5. 'よ' → logprob: -10.126100540161133
    6. 'ゆ' → logprob: -10.251100540161133
    7. 'わ' → logprob: -10.376100540161133
    8. 'は' → logprob: -10.501100540161133
    9. 'ヤ' → logprob: -10.751100540161133
    10. ' \xe3\x82' → logprob: -11.376100540161133

Token 238: 'ゆ' (ID: 90678)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'や' → logprob: -0.0005537479883059859
    2. 'ゃ' → logprob: -8.125554084777832
    3. 'た' → logprob: -9.875554084777832
    4. 'は' → logprob: -10.000554084777832
    5. 'ゆ' → logprob: -10.125554084777832
    6. 'ヤ' → logprob: -10.375554084777832
    7. 'ん' → logprob: -10.625554084777832
    8. 'よ' → logprob: -10.875554084777832
    9. ' \xe3\x82' → logprob: -11.000554084777832
    10. 'わ' → logprob: -11.375554084777832

Token 239: 'よ' (ID: 15161)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'や' → logprob: -1.8697258234024048
    2. 'ん' → logprob: -1.9947258234024048
    3. 'ろ' → logprob: -2.1197257041931152
    4. 'え' → logprob: -2.4947257041931152
    5. '9' → logprob: -2.7447257041931152
    6. 'ゆ' → logprob: -2.8697257041931152
    7. 'う' → logprob: -3.2447257041931152
    8. 'み' → logprob: -3.4947257041931152
    9. 'か' → logprob: -3.4947257041931152
    10. ' \xe3\x82' → logprob: -3.4947257041931152

Token 240: '
' (ID: 198)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15727803111076355
    2. '}' → logprob: -2.657278060913086
    3. '   ' → logprob: -4.157278060913086
    4. '       ' → logprob: -4.407278060913086
    5. ',' → logprob: -4.782278060913086
    6. '',' → logprob: -4.782278060913086
    7. ' '' → logprob: -5.032278060913086
    8. '9' → logprob: -5.407278060913086
    9. ' ' → logprob: -5.532278060913086
    10. ',
' → logprob: -5.657278060913086

Token 241: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22038395702838898
    2. ' '' → logprob: -2.095383882522583
    3. ' ' → logprob: -2.970383882522583
    4. '9' → logprob: -4.095384120941162
    5. ''s' → logprob: -6.470384120941162
    6. ')' → logprob: -7.220384120941162
    7. '　' → logprob: -7.595384120941162
    8. '   ' → logprob: -7.720384120941162
    9. 'u' → logprob: -7.845384120941162
    10. ''\' → logprob: -7.845384120941162

Token 242: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.08357883989810944
    2. ' '' → logprob: -2.5835788249969482
    3. ' ' → logprob: -6.208579063415527
    4. '9' → logprob: -6.333579063415527
    5. '}' → logprob: -8.083579063415527
    6. '       ' → logprob: -9.333579063415527
    7. '   ' → logprob: -9.458579063415527
    8. ' }' → logprob: -9.833579063415527
    9. '           ' → logprob: -10.208579063415527
    10. ''s' → logprob: -10.333579063415527

Token 243: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001899511698866263
    2. '0' → logprob: -9.375189781188965
    3. ''' → logprob: -10.000189781188965
    4. '９' → logprob: -10.250189781188965
    5. ' ' → logprob: -11.562689781188965
    6. '#' → logprob: -13.437689781188965
    7. ' '' → logprob: -13.500189781188965
    8. '8' → logprob: -13.562689781188965
    9. '90' → logprob: -13.625189781188965
    10. '2' → logprob: -13.812689781188965

Token 244: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14609014987945557
    2. ':' → logprob: -2.021090030670166
    3. ''' → logprob: -6.396090030670166
    4. ' :' → logprob: -6.646090030670166
    5. ' ':' → logprob: -8.146090507507324
    6. '":' → logprob: -10.021090507507324
    7. '7' → logprob: -10.896090507507324
    8. ' ' → logprob: -11.146090507507324
    9. '   ' → logprob: -11.146090507507324
    10. '5' → logprob: -11.646090507507324

Token 245: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5360624194145203
    2. ' ' → logprob: -1.411062479019165
    3. '5' → logprob: -2.286062479019165
    4. '1' → logprob: -3.536062479019165
    5. '6' → logprob: -4.036062240600586
    6. '3' → logprob: -4.786062240600586
    7. '0' → logprob: -5.661062240600586
    8. '2' → logprob: -5.911062240600586
    9. '10' → logprob: -5.911062240600586
    10. '   ' → logprob: -6.161062240600586

Token 246: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.08039243519306183
    2. '5' → logprob: -2.830392360687256
    3. '3' → logprob: -4.830392360687256
    4. '2' → logprob: -5.080392360687256
    5. '6' → logprob: -6.080392360687256
    6. '1' → logprob: -6.705392360687256
    7. '7' → logprob: -9.017892837524414
    8. '0' → logprob: -9.642892837524414
    9. ' ' → logprob: -9.642892837524414
    10. '"' → logprob: -9.705392837524414

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06701283156871796
    2. '}' → logprob: -3.0670127868652344
    3. ',
' → logprob: -4.317012786865234
    4. '   ' → logprob: -5.442012786865234
    5. ' }' → logprob: -8.067012786865234
    6. '<|end|>' → logprob: -9.192012786865234
    7. ' ,' → logprob: -9.442012786865234
    8. '       ' → logprob: -9.942012786865234
    9. ' ' → logprob: -11.442012786865234
    10. ')' → logprob: -12.192012786865234

Token 248: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1854102611541748
    2. '   ' → logprob: -1.4354102611541748
    3. '}' → logprob: -1.5604102611541748
    4. ' '' → logprob: -2.185410261154175
    5. ' }' → logprob: -2.685410261154175
    6. ' ' → logprob: -3.310410261154175
    7. ''' → logprob: -4.060410499572754
    8. '#' → logprob: -5.810410499572754
    9. '  ' → logprob: -6.685410499572754
    10. ''s' → logprob: -6.935410499572754

Token 249: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7737858891487122
    2. '}' → logprob: -1.2737858295440674
    3. '#' → logprob: -1.5237858295440674
    4. '   ' → logprob: -3.7737858295440674
    5. ' #' → logprob: -4.7737860679626465
    6. ' '' → logprob: -5.8987860679626465
    7. 'class' → logprob: -6.5237860679626465
    8. ''' → logprob: -6.7737860679626465
    9. '       ' → logprob: -6.8987860679626465
    10. ' }' → logprob: -6.8987860679626465

Token 250: ' ' (ID: 220)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'や' → logprob: -0.0028495676815509796
    2. 'た' → logprob: -6.252849578857422
    3. 'ら' → logprob: -7.252849578857422
    4. 'ん' → logprob: -9.752849578857422
    5. ' \xe3\x82' → logprob: -10.127849578857422
    6. 'ゃ' → logprob: -10.377849578857422
    7. 'ゆ' → logprob: -11.127849578857422
    8. 'よ' → logprob: -11.502849578857422
    9. 'ま' → logprob: -11.627849578857422
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -11.627849578857422

Token 251: 'ら' (ID: 8870)
  Prédit: 'や'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'や' → logprob: -0.3815149664878845
    2. 'た' → logprob: -2.0065150260925293
    3. 'ら' → logprob: -2.3815150260925293
    4. 'ん' → logprob: -3.2565150260925293
    5. 'わ' → logprob: -4.506515026092529
    6. 'る' → logprob: -4.631515026092529
    7. 'ゆ' → logprob: -5.256515026092529
    8. 'ゃ' → logprob: -5.756515026092529
    9. 'あ' → logprob: -5.881515026092529
    10. '\xe3\x82' → logprob: -6.131515026092529

Token 252: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.43180811405181885
    2. 'い' → logprob: -1.4318081140518188
    3. 'いう' → logprob: -3.5568079948425293
    4. '```' → logprob: -3.6818079948425293
    5. 'ん' → logprob: -4.181807994842529
    6. 'ゆ' → logprob: -4.931807994842529
    7. ''' → logprob: -5.306807994842529
    8. 'あ' → logprob: -5.431807994842529
    9. '   ' → logprob: -5.931807994842529
    10. 'く' → logprob: -5.931807994842529

Token 253: 'る' (ID: 6996)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -1.34921133518219
    2. ' ' → logprob: -1.97421133518219
    3. 'ん' → logprob: -2.0992112159729004
    4. 'え' → logprob: -2.3492112159729004
    5. 'ろ' → logprob: -2.8492112159729004
    6. 'く' → logprob: -2.9742112159729004
    7. 'る' → logprob: -2.9742112159729004
    8. 'き' → logprob: -3.0992112159729004
    9. 'ゆ' → logprob: -3.0992112159729004
    10. ',' → logprob: -3.8492112159729004

Token 254: 'れ' (ID: 9472)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.6030387878417969
    2. ',' → logprob: -2.478038787841797
    3. ' ' → logprob: -2.728038787841797
    4. 'る' → logprob: -2.853038787841797
    5. 'ろ' → logprob: -2.853038787841797
    6. 'お' → logprob: -2.853038787841797
    7. ''' → logprob: -3.603038787841797
    8. '、' → logprob: -3.603038787841797
    9. 'く' → logprob: -4.353038787841797
    10. 'れ' → logprob: -4.978038787841797

Token 255: 'ろ' (ID: 29236)
  Prédit: 'お'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'お' → logprob: -0.011528274044394493
    2. 'え' → logprob: -5.886528491973877
    3. 'ん' → logprob: -6.136528491973877
    4. 'ろ' → logprob: -6.386528491973877
    5. 'そ' → logprob: -6.886528491973877
    6. 'る' → logprob: -7.011528491973877
    7. 'を' → logprob: -7.136528491973877
    8. 'れ' → logprob: -7.886528491973877
    9. 'て' → logprob: -8.636528015136719
    10. ' ' → logprob: -8.636528015136719

Token 256: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.06363822519779205
    2. '   ' → logprob: -3.313638210296631
    3. ''' → logprob: -4.688638210296631
    4. '       ' → logprob: -5.188638210296631
    5. ''}' → logprob: -5.188638210296631
    6. ',
' → logprob: -5.938638210296631
    7. ' }' → logprob: -7.063638210296631
    8. '',' → logprob: -7.438638210296631
    9. ',' → logprob: -7.938638210296631
    10. '',
' → logprob: -8.563638687133789

Token 257: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09034056216478348
    2. ' '' → logprob: -3.2153406143188477
    3. '}' → logprob: -3.9653406143188477
    4. '       ' → logprob: -4.090340614318848
    5. '   ' → logprob: -5.090340614318848
    6. ' }' → logprob: -6.340340614318848
    7. ')' → logprob: -6.715340614318848
    8. ' ' → logprob: -7.840340614318848
    9. '0' → logprob: -8.215340614318848
    10. ''}' → logprob: -8.590340614318848

Token 258: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.007791990414261818
    2. ' '' → logprob: -5.382791996002197
    3. '}' → logprob: -6.507791996002197
    4. ''*' → logprob: -6.882791996002197
    5. ')' → logprob: -8.257791519165039
    6. '}
' → logprob: -9.132791519165039
    7. '')' → logprob: -9.507791519165039
    8. '       ' → logprob: -10.257791519165039
    9. '0' → logprob: -10.507791519165039
    10. '}

' → logprob: -10.882791519165039

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031401283922605217
    2. '*' → logprob: -8.625313758850098
    3. ''' → logprob: -9.500313758850098
    4. ''*' → logprob: -11.000313758850098
    5. ' ' → logprob: -11.250313758850098
    6. '#' → logprob: -11.625313758850098
    7. '10' → logprob: -12.500313758850098
    8. '':' → logprob: -12.750313758850098
    9. '```' → logprob: -13.312813758850098
    10. '')' → logprob: -13.625313758850098

Token 260: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0011639113072305918
    2. ':' → logprob: -7.376163959503174
    3. ''' → logprob: -7.626163959503174
    4. ' ':' → logprob: -10.251163482666016
    5. '":' → logprob: -12.126163482666016
    6. ''):' → logprob: -12.376163482666016
    7. ''>' → logprob: -14.251163482666016
    8. '')' → logprob: -14.376163482666016
    9. '’:' → logprob: -14.626163482666016
    10. '```' → logprob: -14.626163482666016

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049089040607213974
    2. ' ' → logprob: -3.174088954925537
    3. '0' → logprob: -5.924088954925537
    4. '2' → logprob: -6.299088954925537
    5. '   ' → logprob: -7.549088954925537
    6. '4' → logprob: -8.174089431762695
    7. '5' → logprob: -8.549089431762695
    8. '"' → logprob: -9.611589431762695
    9. '    ' → logprob: -9.611589431762695
    10. '  ' → logprob: -9.674089431762695

Token 262: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10655289143323898
    2. '2' → logprob: -2.981552839279175
    3. '0' → logprob: -3.481552839279175
    4. '4' → logprob: -4.356553077697754
    5. '5' → logprob: -5.481553077697754
    6. '
' → logprob: -7.356553077697754
    7. '3' → logprob: -7.794053077697754
    8. '6' → logprob: -8.106553077697754
    9. '7' → logprob: -8.356553077697754
    10. '"' → logprob: -8.856553077697754

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5603471398353577
    2. '}' → logprob: -1.310347080230713
    3. '   ' → logprob: -2.560347080230713
    4. ' }' → logprob: -3.060347080230713
    5. ',
' → logprob: -3.560347080230713
    6. ' ,' → logprob: -5.310347080230713
    7. ':' → logprob: -7.310347080230713
    8. '<|end|>' → logprob: -8.310347557067871
    9. '       ' → logprob: -8.560347557067871
    10. '
' → logprob: -8.810347557067871

Token 264: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8719891905784607
    2. ' ' → logprob: -1.1219892501831055
    3. '}' → logprob: -1.6219892501831055
    4. '       ' → logprob: -3.3719892501831055
    5. '#' → logprob: -4.3719892501831055
    6. ' #' → logprob: -5.4969892501831055
    7. ' }' → logprob: -5.4969892501831055
    8. '  ' → logprob: -6.1219892501831055
    9. '	' → logprob: -7.7469892501831055
    10. '    ' → logprob: -8.121989250183105

Token 265: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.090455412864685
    2. '}' → logprob: -1.215455412864685
    3. ' #' → logprob: -1.965455412864685
    4. '   ' → logprob: -2.2154555320739746
    5. '#' → logprob: -2.5904555320739746
    6. '       ' → logprob: -4.090455532073975
    7. ''' → logprob: -5.215455532073975
    8. ' }' → logprob: -5.215455532073975
    9. '}
' → logprob: -5.465455532073975
    10. '0' → logprob: -5.715455532073975

Token 266: ' �' (ID: 9203)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.0011409306898713112
    2. 'あ' → logprob: -7.62614107131958
    3. ' \xe3\x82' → logprob: -7.75114107131958
    4. '\xe3\x82' → logprob: -8.876140594482422
    5. 'や' → logprob: -10.626140594482422
    6. '　' → logprob: -11.626140594482422
    7. ''' → logprob: -11.876140594482422
    8. 'ぁ' → logprob: -12.001140594482422
    9. 'ん' → logprob: -12.126140594482422
    10. 'た' → logprob: -12.251140594482422

Token 267: '�' (ID: 237)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.1009107306599617
    2. 'あ' → logprob: -2.4759106636047363
    3. 'ん' → logprob: -4.725910663604736
    4. 'ー' → logprob: -6.850910663604736
    5. '\xe3\x82' → logprob: -7.600910663604736
    6. 'ぁ' → logprob: -7.975910663604736
    7. '```' → logprob: -8.475911140441895
    8. 'た' → logprob: -8.725911140441895
    9. ' \xe3\x82' → logprob: -8.975911140441895
    10. 'を' → logprob: -9.850911140441895

Token 268: 'を' (ID: 7277)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.12270672619342804
    2. 'あ' → logprob: -2.872706651687622
    3. ' \xe3\x82' → logprob: -4.122706890106201
    4. 'ん' → logprob: -4.622706890106201
    5. 'ー' → logprob: -5.122706890106201
    6. '\xe3\x82' → logprob: -5.122706890106201
    7. 'ろ' → logprob: -5.247706890106201
    8. 'を' → logprob: -5.247706890106201
    9. 'お' → logprob: -5.997706890106201
    10. 'た' → logprob: -6.497706890106201

Token 269: 'ん' (ID: 6676)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5265918374061584
    2. '}' → logprob: -1.1515917778015137
    3. ''}' → logprob: -3.7765917778015137
    4. ' }' → logprob: -4.026591777801514
    5. '}
' → logprob: -4.651591777801514
    6. '   ' → logprob: -4.901591777801514
    7. ''
' → logprob: -5.026591777801514
    8. '',' → logprob: -5.026591777801514
    9. ',
' → logprob: -5.276591777801514
    10. '',
' → logprob: -5.526591777801514

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3985710144042969
    2. '}' → logprob: -1.1485710144042969
    3. '       ' → logprob: -5.398571014404297
    4. ''' → logprob: -5.648571014404297
    5. ''}' → logprob: -6.398571014404297
    6. ' }' → logprob: -7.148571014404297
    7. ',
' → logprob: -8.023571014404297
    8. '}
' → logprob: -8.273571014404297
    9. '',' → logprob: -8.523571014404297
    10. '
' → logprob: -8.898571014404297

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1018277108669281
    2. '}' → logprob: -2.351827621459961
    3. ' }' → logprob: -6.726827621459961
    4. '       ' → logprob: -7.851827621459961
    5. '}
' → logprob: -11.351827621459961
    6. ''' → logprob: -11.601827621459961
    7. ' ' → logprob: -12.976827621459961
    8. '
' → logprob: -13.101827621459961
    9. '}

' → logprob: -13.226827621459961
    10. ' }
' → logprob: -13.601827621459961

Token 272: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3211820125579834
    2. '   ' → logprob: -1.3211820125579834
    3. '}

' (adapté à ' }

') → logprob: -4.9461822509765625
    4. ' }' → logprob: -7.9461822509765625
    5. '}
' → logprob: -8.321182250976562
    6. '       ' → logprob: -9.196182250976562
    7. ' ' → logprob: -10.196182250976562
    8. ' }

' → logprob: -11.071182250976562
    9. ''' → logprob: -11.446182250976562
    10. '	' → logprob: -12.821182250976562

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019979889038950205
    2. ')' → logprob: -7.001997947692871
    3. 'def' → logprob: -7.001997947692871
    4. ' def' → logprob: -9.251997947692871
    5. '    
' → logprob: -11.126997947692871
    6. ' ' → logprob: -11.501997947692871
    7. '       ' → logprob: -11.751997947692871
    8. '	def' → logprob: -11.751997947692871
    9. '[' → logprob: -11.876997947692871
    10. '
' → logprob: -12.126997947692871

Token 274: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.976922744186595e-05
    2. ' def' → logprob: -10.250040054321289
    3. '   ' → logprob: -12.375040054321289
    4. ')' → logprob: -16.00004005432129
    5. 'de' → logprob: -17.25004005432129
    6. '	def' → logprob: -17.62504005432129
    7. '
' → logprob: -17.87504005432129
    8. '@' → logprob: -18.37504005432129
    9. ' ' → logprob: -18.50004005432129
    10. '    
' → logprob: -19.37504005432129

Token 275: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.38687458634376526
    2. 'get' → logprob: -1.1368745565414429
    3. '_get' → logprob: -13.261874198913574
    4. ' ' → logprob: -14.261874198913574
    5. 'def' → logprob: -14.761874198913574
    6. '	get' → logprob: -15.011874198913574
    7. '.get' → logprob: -15.636874198913574
    8. ' def' → logprob: -16.51187515258789
    9. ' ' → logprob: -16.76187515258789
    10. '  ' → logprob: -17.13687515258789

Token 276: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00016337241686414927
    2. '_' → logprob: -8.750163078308105
    3. ' _' → logprob: -12.250163078308105
    4. '_
' → logprob: -17.125164031982422
    5. ' ' → logprob: -18.000164031982422
    6. '_CHAR' → logprob: -18.000164031982422
    7. 'char' → logprob: -18.250164031982422
    8. '_chars' → logprob: -18.500164031982422
    9. '```' → logprob: -18.750164031982422
    10. '_character' → logprob: -18.875164031982422

Token 277: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0087516784551553e-05
    2. ' _' → logprob: -11.87501049041748
    3. '_counts' → logprob: -12.87501049041748
    4. '_' → logprob: -15.62501049041748
    5. '_cont' → logprob: -17.000009536743164
    6. '_c' → logprob: -17.125009536743164
    7. '_counter' → logprob: -17.875009536743164
    8. '```' → logprob: -18.125009536743164
    9. '_get' → logprob: -18.250009536743164
    10. '_to' → logprob: -18.250009536743164

Token 278: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.062419455498456955
    2. '(' → logprob: -2.8124194145202637
    3. ' (' → logprob: -7.812419414520264
    4. '(
' → logprob: -10.187419891357422
    5. '(s' → logprob: -12.187419891357422
    6. 'self' → logprob: -13.062419891357422
    7. '(d' → logprob: -14.187419891357422
    8. ' self' → logprob: -14.687419891357422
    9. ' ' → logprob: -15.437419891357422
    10. '(

' → logprob: -15.437419891357422

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009829754009842873
    2. 'self' → logprob: -5.384829521179199
    3. ',d' → logprob: -5.509829521179199
    4. ' ,' → logprob: -7.509829521179199
    5. '(self' → logprob: -7.634829521179199
    6. ',self' → logprob: -9.7598295211792
    7. '(d' → logprob: -10.6348295211792
    8. ' self' → logprob: -12.0098295211792
    9. '[self' → logprob: -12.0098295211792
    10. ')' → logprob: -12.1348295211792

Token 280: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.6344864964485168
    2. ' digit' → logprob: -0.7594864964485168
    3. 'self' → logprob: -6.509486675262451
    4. ' self' → logprob: -7.884486675262451
    5. 'd' → logprob: -11.759486198425293
    6. '   ' → logprob: -12.884486198425293
    7. ' ' → logprob: -13.134486198425293
    8. '       ' → logprob: -13.509486198425293
    9. '-digit' → logprob: -13.509486198425293
    10. '_digit' → logprob: -14.259486198425293

Token 281: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35301709175109863
    2. ':' → logprob: -1.3530170917510986
    3. ')' → logprob: -3.6030170917510986
    4. '):
' → logprob: -4.6030168533325195
    5. '   ' → logprob: -7.2280168533325195
    6. ':str' → logprob: -7.8530168533325195
    7. ' ):' → logprob: -8.60301685333252
    8. '[' → logprob: -8.85301685333252
    9. ' :' → logprob: -9.97801685333252
    10. '```' → logprob: -10.35301685333252

Token 282: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.08833596110343933
    2. 'str' → logprob: -3.3383359909057617
    3. ' self' → logprob: -3.8383359909057617
    4. 'self' → logprob: -3.9633359909057617
    5. ')' → logprob: -5.213335990905762
    6. ' '' → logprob: -6.213335990905762
    7. ''' → logprob: -7.838335990905762
    8. ':str' → logprob: -8.463335990905762
    9. ' )' → logprob: -8.713335990905762
    10. ''s' → logprob: -9.088335990905762

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01419841032475233
    2. '):' → logprob: -4.264198303222656
    3. '):
' → logprob: -10.639198303222656
    4. ' )' → logprob: -11.889198303222656
    5. ')->' → logprob: -12.889198303222656
    6. '   ' → logprob: -14.514198303222656
    7. ' ):' → logprob: -14.639198303222656
    8. '):
' → logprob: -15.014198303222656
    9. ':' → logprob: -15.264198303222656
    10. '):

' → logprob: -17.764198303222656

Token 284: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02362336404621601
    2. '):' → logprob: -3.898623466491699
    3. ')' → logprob: -6.023623466491699
    4. '):
' → logprob: -8.2736234664917
    5. ' ->' → logprob: -8.8986234664917
    6. ':
' → logprob: -9.2736234664917
    7. '->' → logprob: -9.7736234664917
    8. '():' → logprob: -10.3986234664917
    9. ')->' → logprob: -10.3986234664917
    10. '   ' → logprob: -10.6486234664917

Token 285: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.314546674489975
    2. ' int' → logprob: -1.3145467042922974
    3. 'self' → logprob: -7.564546585083008
    4. ' self' → logprob: -7.564546585083008
    5. ' return' → logprob: -8.814546585083008
    6. 'return' → logprob: -9.314546585083008
    7. '   ' → logprob: -12.814546585083008
    8. ':int' → logprob: -13.189546585083008
    9. ' ' → logprob: -13.814546585083008
    10. '       ' → logprob: -14.314546585083008

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007731672842055559
    2. ':
' → logprob: -5.0077314376831055
    3. '       ' → logprob: -7.3827314376831055
    4. '):' → logprob: -8.507731437683105
    5. '):
' → logprob: -9.382731437683105
    6. '():
' → logprob: -10.382731437683105
    7. ':return' → logprob: -10.382731437683105
    8. '():' → logprob: -10.882731437683105
    9. '   ' → logprob: -11.257731437683105
    10. ' :' → logprob: -11.757731437683105

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.452426608419046e-05
    2. ' return' → logprob: -10.87503433227539
    3. 'return' → logprob: -11.25003433227539
    4. '   ' → logprob: -14.37503433227539
    5. '      ' → logprob: -14.62503433227539
    6. ':' → logprob: -15.25003433227539
    7. '     ' → logprob: -15.62503433227539
    8. '    ' → logprob: -15.75003433227539
    9. ')' → logprob: -16.00003433227539
    10. '        
' → logprob: -16.12503433227539

Token 288: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5767847299575806
    2. '       ' → logprob: -1.0767847299575806
    3. ' return' → logprob: -2.326784610748291
    4. '	return' → logprob: -15.82678508758545
    5. ':return' → logprob: -17.201784133911133
    6. '   ' → logprob: -17.826784133911133
    7. '      ' → logprob: -17.951784133911133
    8. '```' → logprob: -18.326784133911133
    9. '     ' → logprob: -18.826784133911133
    10. 'eturn' → logprob: -18.826784133911133

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012526127509772778
    2. ' self' → logprob: -4.387526035308838
    3. 'Kana' → logprob: -11.137526512145996
    4. ' Kana' → logprob: -13.387526512145996
    5. '	self' → logprob: -15.762526512145996
    6. '(self' → logprob: -16.63752555847168
    7. 'Self' → logprob: -16.63752555847168
    8. 'Kan' → logprob: -17.38752555847168
    9. '```' → logprob: -17.63752555847168
    10. 'K' → logprob: -17.88752555847168

Token 290: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.625000953674316
    3. ' .' → logprob: -17.125
    4. '.__' → logprob: -17.25
    5. '_mapping' → logprob: -18.0
    6. ']._' → logprob: -18.125
    7. ')._' → logprob: -18.375
    8. '.\' → logprob: -19.75
    9. '.mapping' → logprob: -20.0
    10. '."_' → logprob: -20.125

Token 291: 'mapping' (ID: 86365)
  Prédit: 'mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -4.656383680412546e-05
    2. '_mapping' → logprob: -10.000046730041504
    3. '.mapping' → logprob: -14.000046730041504
    4. 'Mapping' → logprob: -16.375045776367188
    5. '(mapping' → logprob: -17.625045776367188
    6. '```' → logprob: -17.875045776367188
    7. ' mapping' → logprob: -17.875045776367188
    8. 'apping' → logprob: -18.000045776367188
    9. 'map' → logprob: -18.875045776367188
    10. '_MAPPING' → logprob: -19.125045776367188

Token 292: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00193149340339005
    2. '[d' → logprob: -6.251931667327881
    3. '.' → logprob: -13.126931190490723
    4. ' .' → logprob: -14.626931190490723
    5. 'get' → logprob: -15.626931190490723
    6. '[get' → logprob: -15.751931190490723
    7. '.d' → logprob: -16.62693214416504
    8. '[' → logprob: -17.87693214416504
    9. '[g' → logprob: -18.00193214416504
    10. '.ge' → logprob: -18.75193214416504

Token 293: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'digit' → logprob: -15.87501335144043
    4. ' (' → logprob: -19.12501335144043
    5. ' digit' → logprob: -19.75001335144043
    6. '(token' → logprob: -19.87501335144043
    7. 'd' → logprob: -21.37501335144043
    8. '(
' → logprob: -21.50001335144043
    9. '(key' → logprob: -22.50001335144043
    10. '(D' → logprob: -22.50001335144043

Token 294: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -3.128163257315464e-07
    2. 'digit' → logprob: -15.25
    3. 'ight' → logprob: -17.875
    4. 'igt' → logprob: -18.5
    5. 'igital' → logprob: -18.625
    6. 'igi' → logprob: -18.875
    7. '_digit' → logprob: -19.0
    8. 'i' → logprob: -19.125
    9. 'igits' → logprob: -19.25
    10. 'ig' → logprob: -19.625

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6166903151315637e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ')' → logprob: -13.625016212463379
    4. 'digit' → logprob: -13.625016212463379
    5. ',d' → logprob: -14.125016212463379
    6. '0' → logprob: -17.625015258789062
    7. '   ' → logprob: -18.500015258789062
    8. ' digit' → logprob: -18.750015258789062
    9. '(d' → logprob: -20.000015258789062
    10. '       ' → logprob: -20.125015258789062

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.125109672546387
    3. '1' → logprob: -13.875109672546387
    4. ')' → logprob: -16.937610626220703
    5. '   ' → logprob: -16.937610626220703
    6. '۰' → logprob: -17.500110626220703
    7. '```' → logprob: -17.750110626220703
    8. ' ' → logprob: -18.437610626220703
    9. '
' → logprob: -18.625110626220703
    10. '       ' → logprob: -18.875110626220703

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -11.000020027160645
    3. '1' → logprob: -12.750020027160645
    4. ')' → logprob: -16.562519073486328
    5. '   ' → logprob: -17.062519073486328
    6. '۰' → logprob: -17.875019073486328
    7. '```' → logprob: -18.375019073486328
    8. '０' → logprob: -18.750019073486328
    9. '  ' → logprob: -19.000019073486328
    10. '3' → logprob: -19.250019073486328

Token 298: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.546478935983032e-05
    2. '<|end|>' → logprob: -11.125025749206543
    3. ' )' → logprob: -12.125025749206543
    4. ')
' → logprob: -12.500025749206543
    5. ')return' → logprob: -14.250025749206543
    6. '   ' → logprob: -15.125025749206543
    7. '       ' → logprob: -15.500025749206543
    8. ')+' → logprob: -16.500024795532227
    9. '())' → logprob: -16.750024795532227
    10. '}' → logprob: -16.875024795532227

Token 299: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' Press' (ID: 13463)
  Prédit: 'Rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rom' → logprob: -0.7540355324745178
    2. 'Roman' → logprob: -2.004035472869873
    3. 'Kan' → logprob: -2.004035472869873
    4. 'Latin' → logprob: -3.004035472869873
    5. 'Kana' → logprob: -3.379035472869873
    6. 'Digit' → logprob: -3.629035472869873
    7. 'Alpha' → logprob: -3.754035472869873
    8. 'H' → logprob: -3.754035472869873
    9. 'Roma' → logprob: -3.754035472869873
    10. 'Alphabet' → logprob: -4.129035472869873

Token 301: 'Group' (ID: 2748)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.07871098071336746
    2. 'Counter' → logprob: -3.3287110328674316
    3. 'Sequence' → logprob: -3.9537110328674316
    4. 'Counts' → logprob: -4.953711032867432
    5. 'es' → logprob: -5.828711032867432
    6. 'Counting' → logprob: -5.953711032867432
    7. 'Mapping' → logprob: -6.203711032867432
    8. 'Combination' → logprob: -6.453711032867432
    9. 'ed' → logprob: -7.453711032867432
    10. 'Simulator' → logprob: -7.453711032867432

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006208666134625673
    2. ':
' → logprob: -5.131208896636963
    3. '(' → logprob: -8.881208419799805
    4. 's' → logprob: -9.631208419799805
    5. '):' → logprob: -11.006208419799805
    6. 'Handler' → logprob: -11.256208419799805
    7. '():' → logprob: -12.381208419799805
    8. '(object' → logprob: -12.381208419799805
    9. 'Processor' → logprob: -12.631208419799805
    10. 'Count' → logprob: -12.756208419799805

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007276826072484255
    2. ' def' → logprob: -7.750727653503418
    3. 'def' → logprob: -8.125727653503418
    4. '	def' → logprob: -13.875727653503418
    5. 'class' → logprob: -16.000728607177734
    6. '   ' → logprob: -17.250728607177734
    7. ':def' → logprob: -18.125728607177734
    8. ')' → logprob: -18.500728607177734
    9. ':' → logprob: -18.500728607177734
    10. '(' → logprob: -19.000728607177734

Token 304: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06250748038291931
    2. ' def' → logprob: -2.812507390975952
    3. '   ' → logprob: -7.562507629394531
    4. '	def' → logprob: -11.312507629394531
    5. 'class' → logprob: -12.187507629394531
    6. '__' → logprob: -13.812507629394531
    7. ' ' → logprob: -14.062507629394531
    8. ' __' → logprob: -14.562507629394531
    9. ':def' → logprob: -16.31250762939453
    10. 'de' → logprob: -16.43750762939453

Token 305: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6972690224647522
    2. ' __' → logprob: -1.4472689628601074
    3. '__' → logprob: -1.6972689628601074
    4. 'def' → logprob: -2.5722689628601074
    5. 'init' → logprob: -5.447268962860107
    6. '   ' → logprob: -6.447268962860107
    7. 'int' → logprob: -7.947268962860107
    8. '  ' → logprob: -8.322269439697266
    9. '_init' → logprob: -8.697269439697266
    10. ' ' → logprob: -8.947269439697266

Token 306: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.375
    3. 'int' → logprob: -19.625
    4. 'slots' → logprob: -20.5
    5. 'def' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. 'inite' → logprob: -21.25
    8. '
' → logprob: -21.25
    9. '   ' → logprob: -21.375
    10. '_init' → logprob: -21.375

Token 307: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04140586778521538
    2. '__(' → logprob: -3.5414059162139893
    3. ' (' → logprob: -4.79140567779541
    4. '(' → logprob: -5.79140567779541
    5. 'self' → logprob: -9.54140567779541
    6. ',' → logprob: -9.91640567779541
    7. '__' → logprob: -10.16640567779541
    8. '<|end|>' → logprob: -11.04140567779541
    9. '__(
' → logprob: -11.16640567779541
    10. '   ' → logprob: -11.91640567779541

Token 308: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.451116051815916e-05
    2. '):
' → logprob: -11.500024795532227
    3. ' self' → logprob: -11.625024795532227
    4. ')' → logprob: -12.875024795532227
    5. '       ' → logprob: -13.750024795532227
    6. '
' → logprob: -14.375024795532227
    7. '(self' → logprob: -14.875024795532227
    8. '   ' → logprob: -15.125024795532227
    9. ',' → logprob: -15.625024795532227
    10. '0' → logprob: -15.750024795532227

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04687178507447243
    2. '):' → logprob: -3.9218719005584717
    3. 'self' → logprob: -4.421871662139893
    4. '):
' → logprob: -4.421871662139893
    5. '       ' → logprob: -7.171871662139893
    6. ' ,' → logprob: -7.671871662139893
    7. '   ' → logprob: -8.04687213897705
    8. ' self' → logprob: -8.29687213897705
    9. ',self' → logprob: -10.67187213897705
    10. ' ):' → logprob: -11.35937213897705

Token 310: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.009568016044795513
    2. ' digit' → logprob: -4.884568214416504
    3. 'char' → logprob: -6.509568214416504
    4. 'press' → logprob: -8.634568214416504
    5. 'digits' → logprob: -8.884568214416504
    6. 'key' → logprob: -10.384568214416504
    7. 'count' → logprob: -10.509568214416504
    8. 'chars' → logprob: -10.509568214416504
    9. 'start' → logprob: -11.259568214416504
    10. ' presses' → logprob: -11.509568214416504

Token 311: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028240328654646873
    2. ':' → logprob: -3.653240442276001
    3. ':str' → logprob: -6.278240203857422
    4. ' ,' → logprob: -9.903240203857422
    5. '   ' → logprob: -12.028240203857422
    6. ' :' → logprob: -13.528240203857422
    7. '):
' → logprob: -13.778240203857422
    8. '       ' → logprob: -14.153240203857422
    9. '):' → logprob: -14.778240203857422
    10. ':int' → logprob: -14.903240203857422

Token 312: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2254590541124344
    2. ' str' → logprob: -1.600459098815918
    3. ',' → logprob: -10.725459098815918
    4. ')' → logprob: -11.475459098815918
    5. ':str' → logprob: -12.350459098815918
    6. 'int' → logprob: -12.725459098815918
    7. 's' → logprob: -13.600459098815918
    8. '	str' → logprob: -13.975459098815918
    9. ',str' → logprob: -14.100459098815918
    10. '   ' → logprob: -14.225459098815918

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ' ,' → logprob: -9.75006103515625
    3. '):
' → logprob: -13.37506103515625
    4. '   ' → logprob: -15.75006103515625
    5. ',count' → logprob: -15.87506103515625
    6. '):' → logprob: -16.00006103515625
    7. ',
' → logprob: -16.00006103515625
    8. ',n' → logprob: -16.12506103515625
    9. '       ' → logprob: -17.25006103515625
    10. ',int' → logprob: -17.37506103515625

Token 314: ' length' (ID: 5517)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07588891685009003
    2. 'press' → logprob: -3.3258888721466064
    3. ' count' → logprob: -3.3258888721466064
    4. ' presses' → logprob: -7.4508891105651855
    5. ' press' → logprob: -7.8258891105651855
    6. 'length' → logprob: -8.825888633728027
    7. 'pressed' → logprob: -10.700888633728027
    8. ' length' → logprob: -10.950888633728027
    9. 'times' → logprob: -11.075888633728027
    10. '   ' → logprob: -12.825888633728027

Token 315: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14794570207595825
    2. '):
' → logprob: -2.0229456424713135
    3. ':' → logprob: -5.522945880889893
    4. '=' → logprob: -6.897945880889893
    5. ':int' → logprob: -9.147945404052734
    6. '   ' → logprob: -9.772945404052734
    7. ' ):' → logprob: -10.147945404052734
    8. '):
' → logprob: -10.897945404052734
    9. ',' → logprob: -10.897945404052734
    10. ' ):
' → logprob: -12.772945404052734

Token 316: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.49726343154907227
    2. '0' → logprob: -1.4972634315490723
    3. '1' → logprob: -1.9972634315490723
    4. ' int' → logprob: -4.622263431549072
    5. '):' → logprob: -4.622263431549072
    6. '):
' → logprob: -5.122263431549072
    7. ' ' → logprob: -5.372263431549072
    8. ':int' → logprob: -6.622263431549072
    9. ')' → logprob: -7.747263431549072
    10. '   ' → logprob: -9.872262954711914

Token 317: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1006522849202156
    2. '):
' → logprob: -2.3506522178649902
    3. ',' → logprob: -7.85065221786499
    4. ':' → logprob: -10.975652694702148
    5. '):
' → logprob: -10.975652694702148
    6. '   ' → logprob: -11.850652694702148
    7. ')' → logprob: -12.100652694702148
    8. ' ):' → logprob: -12.225652694702148
    9. '       ' → logprob: -13.600652694702148
    10. '=' → logprob: -14.225652694702148

Token 318: ' char' (ID: 1826)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6671662330627441
    2. 'mapping' → logprob: -1.1671662330627441
    3. 'char' → logprob: -2.792166233062744
    4. 'start' → logprob: -3.417166233062744
    5. 'index' → logprob: -3.792166233062744
    6. ' count' → logprob: -4.292166233062744
    7. 'max' → logprob: -4.792166233062744
    8. 'position' → logprob: -5.167166233062744
    9. ' mapping' → logprob: -5.417166233062744
    10. 'next' → logprob: -5.417166233062744

Token 319: '_mapping' (ID: 64323)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.012806398794054985
    2. 'count' → logprob: -4.637806415557861
    3. 'acters' → logprob: -6.887806415557861
    4. '_counts' → logprob: -7.262806415557861
    5. 'acter' → logprob: -7.387806415557861
    6. ')' → logprob: -8.262805938720703
    7. 's' → logprob: -9.012805938720703
    8. 'ount' → logprob: -9.512805938720703
    9. '_index' → logprob: -9.887805938720703
    10. ' count' → logprob: -10.387805938720703

Token 320: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5127570033073425
    2. ':' → logprob: -1.3877570629119873
    3. '):
' → logprob: -1.8877570629119873
    4. ' ):' → logprob: -9.637757301330566
    5. ' ):
' → logprob: -11.012757301330566
    6. '):
' → logprob: -11.262757301330566
    7. ')' → logprob: -12.137757301330566
    8. '):

' → logprob: -12.637757301330566
    9. '=None' → logprob: -13.262757301330566
    10. ' :' → logprob: -13.387757301330566

Token 321: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.0013613052433356643
    2. ' Character' → logprob: -6.75136137008667
    3. 'Kana' → logprob: -8.626360893249512
    4. ' Kana' → logprob: -12.001360893249512
    5. '<Character' → logprob: -13.001360893249512
    6. 'Char' → logprob: -13.501360893249512
    7. 'Characteristic' → logprob: -14.626360893249512
    8. ' ' → logprob: -14.876360893249512
    9. '(Character' → logprob: -15.251360893249512
    10. 'Charset' → logprob: -15.876360893249512

Token 322: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -8.2994620242971e-06
    2. '_mapping' → logprob: -12.625008583068848
    3. 'mapping' → logprob: -12.750008583068848
    4. ' mapping' → logprob: -13.875008583068848
    5. '_MAPPING' → logprob: -15.125008583068848
    6. '):
' → logprob: -15.250008583068848
    7. ')' → logprob: -15.875008583068848
    8. ' Mapping' → logprob: -16.00000762939453
    9. '.Mapping' → logprob: -16.25000762939453
    10. ':' → logprob: -16.25000762939453

Token 323: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16037268936634064
    2. '):
' → logprob: -1.9103727340698242
    3. ',' → logprob: -9.160372734069824
    4. '):
' → logprob: -10.660372734069824
    5. ')' → logprob: -11.035372734069824
    6. '   ' → logprob: -13.410372734069824
    7. ' ):' → logprob: -13.785372734069824
    8. ':' → logprob: -14.660372734069824
    9. '):

' → logprob: -14.785372734069824
    10. ' ):
' → logprob: -15.285372734069824

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013761838199570775
    2. 'self' → logprob: -6.876376152038574
    3. ' self' → logprob: -8.001376152038574
    4. '   ' → logprob: -12.001376152038574
    5. '      ' → logprob: -14.376376152038574
    6. '	self' → logprob: -14.501376152038574
    7. ',' → logprob: -15.126376152038574
    8. 'def' → logprob: -15.376376152038574
    9. '     ' → logprob: -15.501376152038574
    10. ' ' → logprob: -16.37637710571289

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017444390105083585
    2. '       ' → logprob: -6.876744270324707
    3. ' self' → logprob: -7.251744270324707
    4. 'super' → logprob: -13.626744270324707
    5. '   ' → logprob: -14.251744270324707
    6. 'digit' → logprob: -14.876744270324707
    7. '	self' → logprob: -16.001745223999023
    8. ' ' → logprob: -16.876745223999023
    9. '     ' → logprob: -17.501745223999023
    10. '      ' → logprob: -17.876745223999023

Token 326: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00046081675100140274
    2. '.' → logprob: -8.000460624694824
    3. 'digit' → logprob: -9.000460624694824
    4. ' .' → logprob: -14.000460624694824
    5. ' digit' → logprob: -14.875460624694824
    6. '.digital' → logprob: -15.000460624694824
    7. '	d' → logprob: -15.625460624694824
    8. '_digit' → logprob: -16.25046157836914
    9. '.press' → logprob: -16.50046157836914
    10. '.digest' → logprob: -16.75046157836914

Token 327: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -2.2007883671903983e-05
    2. '   ' → logprob: -11.875021934509277
    3. 'digit' → logprob: -12.625021934509277
    4. 'igital' → logprob: -12.750021934509277
    5. '       ' → logprob: -13.625021934509277
    6. 'ig' → logprob: -13.875021934509277
    7. 'igits' → logprob: -14.000021934509277
    8. '=' → logprob: -14.375021934509277
    9. 'igi' → logprob: -14.500021934509277
    10. '```' → logprob: -14.750021934509277

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934946179389954
    2. ' =' → logprob: -0.6934946179389954
    3. '=d' → logprob: -8.56849479675293
    4. ' ' → logprob: -9.06849479675293
    5. ',' → logprob: -10.19349479675293
    6. '  ' → logprob: -13.69349479675293
    7. ',d' → logprob: -14.06849479675293
    8. ' ,' → logprob: -14.56849479675293
    9. ')' → logprob: -14.81849479675293
    10. '<|end|>' → logprob: -15.06849479675293

Token 329: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.10020904988050461
    2. 'digit' → logprob: -2.3502089977264404
    3. '_digit' → logprob: -13.22520923614502
    4. 'd' → logprob: -15.47520923614502
    5. '-digit' → logprob: -16.600208282470703
    6. ' ' → logprob: -16.600208282470703
    7. 'Digit' → logprob: -16.850208282470703
    8. ' ' → logprob: -17.600208282470703
    9. ' digital' → logprob: -17.725208282470703
    10. 'igit' → logprob: -17.725208282470703

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030185774085111916
    2. '<|end|>' → logprob: -8.5003023147583
    3. ',' → logprob: -10.1253023147583
    4. '
' → logprob: -10.3753023147583
    5. 'self' → logprob: -11.5003023147583
    6. '   ' → logprob: -12.3753023147583
    7. '<|end|>' → logprob: -12.5003023147583
    8. '      ' → logprob: -13.0003023147583
    9. ' ' → logprob: -13.3753023147583
    10. '        
' → logprob: -13.5003023147583

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001853315974585712
    2. 'self' → logprob: -6.3768534660339355
    3. ' self' → logprob: -8.876852989196777
    4. ',' → logprob: -12.001852989196777
    5. '   ' → logprob: -13.126852989196777
    6. '<|end|>' → logprob: -13.626852989196777
    7. '
' → logprob: -13.876852989196777
    8. '      ' → logprob: -15.126852989196777
    9. ' ' → logprob: -15.751852989196777
    10. '        
' → logprob: -15.876852989196777

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008019198663532734
    2. 'length' → logprob: -5.508018970489502
    3. ' self' → logprob: -5.633018970489502
    4. '       ' → logprob: -8.25801944732666
    5. ' length' → logprob: -9.25801944732666
    6. '   ' → logprob: -15.63301944732666
    7. '	self' → logprob: -16.008018493652344
    8. 'len' → logprob: -16.633018493652344
    9. '_length' → logprob: -16.758018493652344
    10. 'Length' → logprob: -16.883018493652344

Token 333: '.length' (ID: 3116)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.11764168739318848
    2. ' length' → logprob: -2.4926416873931885
    3. '_length' → logprob: -3.6176416873931885
    4. ' =' → logprob: -8.11764144897461
    5. 'ength' → logprob: -8.24264144897461
    6. '.length' → logprob: -8.36764144897461
    7. 'len' → logprob: -8.49264144897461
    8. '=' → logprob: -8.86764144897461
    9. '_len' → logprob: -9.36764144897461
    10. 'pressed' → logprob: -10.74264144897461

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142202079296112
    2. '=' → logprob: -1.7014219760894775
    3. ' ' → logprob: -11.701421737670898
    4. ' +=' → logprob: -15.201421737670898
    5. ',' → logprob: -15.576421737670898
    6. ' ,' → logprob: -17.7014217376709
    7. ' =
' → logprob: -18.5764217376709
    8. '   ' → logprob: -19.0764217376709
    9. '=int' → logprob: -19.4514217376709
    10. '_' → logprob: -19.5764217376709

Token 335: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.07889088988304138
    2. 'length' → logprob: -2.578890800476074
    3. '(length' → logprob: -14.953890800476074
    4. ' lenght' → logprob: -15.828890800476074
    5. ' ' → logprob: -15.953890800476074
    6. 'leng' → logprob: -16.07889175415039
    7. '	length' → logprob: -16.32889175415039
    8. 'ength' → logprob: -16.32889175415039
    9. '[length' → logprob: -16.32889175415039
    10. ' len' → logprob: -16.95389175415039

Token 336: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.468279752880335e-05
    2. '
' → logprob: -10.375064849853516
    3. '<|end|>' → logprob: -10.625064849853516
    4. '   ' → logprob: -12.750064849853516
    5. 'self' → logprob: -13.750064849853516
    6. ',' → logprob: -13.750064849853516
    7. '        
' → logprob: -14.000064849853516
    8. ' ' → logprob: -14.000064849853516
    9. '      ' → logprob: -14.500064849853516
    10. ' self' → logprob: -14.750064849853516

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8670179997570813e-05
    2. 'self' → logprob: -11.500019073486328
    3. ' self' → logprob: -12.000019073486328
    4. '   ' → logprob: -14.125019073486328
    5. '
' → logprob: -14.250019073486328
    6. ',' → logprob: -14.750019073486328
    7. '<|end|>' → logprob: -15.625019073486328
    8. '        
' → logprob: -15.750019073486328
    9. '	' → logprob: -16.250019073486328
    10. '	self' → logprob: -16.500019073486328

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013627357548102736
    2. '       ' → logprob: -7.1263628005981445
    3. ' self' → logprob: -7.5013628005981445
    4. 'char' → logprob: -12.126362800598145
    5. '	self' → logprob: -15.376362800598145
    6. '   ' → logprob: -16.001361846923828
    7. '
' → logprob: -17.876361846923828
    8. '        
' → logprob: -18.001361846923828
    9. ' ' → logprob: -18.501361846923828
    10. '(self' → logprob: -18.626361846923828

Token 339: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.5606213808059692
    2. 'char' → logprob: -0.9356213808059692
    3. '_char' → logprob: -3.4356212615966797
    4. ' char' → logprob: -6.06062126159668
    5. '.' → logprob: -7.06062126159668
    6. ' =' → logprob: -8.31062126159668
    7. 'def' → logprob: -8.31062126159668
    8. ',' → logprob: -8.68562126159668
    9. '=' → logprob: -8.81062126159668
    10. '   ' → logprob: -9.31062126159668

Token 340: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.00028410006780177355
    2. '_count' → logprob: -8.625284194946289
    3. 'mapping' → logprob: -9.375284194946289
    4. 's' → logprob: -11.750284194946289
    5. '_counts' → logprob: -12.750284194946289
    6. '_' → logprob: -12.875284194946289
    7. 'count' → logprob: -13.250284194946289
    8. ' _' → logprob: -13.625284194946289
    9. '_map' → logprob: -13.750284194946289
    10. '_m' → logprob: -14.625284194946289

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078893661499
    2. '=' → logprob: -0.974078893661499
    3. ' ' → logprob: -13.599079132080078
    4. 'char' → logprob: -15.474079132080078
    5. '.' → logprob: -16.474079132080078
    6. '   ' → logprob: -16.724079132080078
    7. '  ' → logprob: -16.974079132080078
    8. '.get' → logprob: -17.099079132080078
    9. '=get' → logprob: -17.474079132080078
    10. ',' → logprob: -17.724079132080078

Token 342: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.10020699352025986
    2. ' char' → logprob: -2.3502070903778076
    3. '_char' → logprob: -15.725207328796387
    4. '(char' → logprob: -16.35020637512207
    5. 'character' → logprob: -16.97520637512207
    6. '<char' → logprob: -17.22520637512207
    7. '	char' → logprob: -17.35020637512207
    8. ' ' → logprob: -18.72520637512207
    9. ' character' → logprob: -18.72520637512207
    10. ',char' → logprob: -18.85020637512207

Token 343: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.0005723327049054205
    2. 'mapping' → logprob: -7.500572204589844
    3. 'Mapping' → logprob: -10.875572204589844
    4. '_MAPPING' → logprob: -16.000572204589844
    5. ' mapping' → logprob: -16.250572204589844
    6. '.mapping' → logprob: -16.750572204589844
    7. '_' → logprob: -16.875572204589844
    8. '_map' → logprob: -17.250572204589844
    9. '   ' → logprob: -18.625572204589844
    10. '_m' → logprob: -18.875572204589844

Token 344: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4512788951396942
    2. '   ' → logprob: -1.0762789249420166
    3. '       ' → logprob: -4.2012786865234375
    4. '

' → logprob: -5.7012786865234375
    5. '    
' → logprob: -6.2012786865234375
    6. 'def' → logprob: -6.7012786865234375
    7. '        
' → logprob: -8.201278686523438
    8. '<|end|>' → logprob: -8.201278686523438
    9. ' def' → logprob: -9.826278686523438
    10. '
    
' → logprob: -9.951278686523438

Token 345: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02024976536631584
    2. '
' → logprob: -4.145249843597412
    3. 'def' → logprob: -5.895249843597412
    4. '<|end|>' → logprob: -7.395249843597412
    5. '       ' → logprob: -7.895249843597412
    6. ' def' → logprob: -8.270249366760254
    7. '    
' → logprob: -9.020249366760254
    8. '

' → logprob: -9.895249366760254
    9. '<|end|>' → logprob: -11.520249366760254
    10. '        
' → logprob: -11.520249366760254

Token 346: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14187079668045044
    2. 'self' (adapté à ' self') → logprob: -2.6418707370758057
    3. '   ' → logprob: -3.2668707370758057
    4. '
' → logprob: -4.141870975494385
    5. '       ' → logprob: -5.266870975494385
    6. ' def' → logprob: -6.641870975494385
    7. '

' → logprob: -8.391870498657227
    8. ' self' → logprob: -8.516870498657227
    9. '    
' → logprob: -10.141870498657227
    10. '        
' → logprob: -10.891870498657227

Token 347: '.char' (ID: 18508)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.6075531244277954
    2. '.char' → logprob: -1.2325531244277954
    3. '.max' → logprob: -3.107553005218506
    4. '.mod' → logprob: -3.732553005218506
    5. '.total' → logprob: -4.482553005218506
    6. '.num' → logprob: -4.607553005218506
    7. '.' → logprob: -4.732553005218506
    8. '.value' → logprob: -4.857553005218506
    9. '_char' → logprob: -4.857553005218506
    10. '.characters' → logprob: -5.107553005218506

Token 348: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0008554781670682132
    2. '_counts' → logprob: -8.000855445861816
    3. 'count' → logprob: -8.500855445861816
    4. 's' → logprob: -9.000855445861816
    5. '_set' → logprob: -9.625855445861816
    6. '_index' → logprob: -10.000855445861816
    7. 'acters' → logprob: -10.500855445861816
    8. '_options' → logprob: -10.875855445861816
    9. 'set' → logprob: -11.375855445861816
    10. 'Count' → logprob: -12.250855445861816

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06202403083443642
    2. '=' → logprob: -2.8120241165161133
    3. ' ' → logprob: -10.437024116516113
    4. 's' → logprob: -11.562024116516113
    5. '   ' → logprob: -12.062024116516113
    6. ':' → logprob: -12.562024116516113
    7. '<|end|>' → logprob: -12.812024116516113
    8. '  ' → logprob: -13.312024116516113
    9. ')' → logprob: -13.687024116516113
    10. ',' → logprob: -14.437024116516113

Token 350: ' char' (ID: 1826)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21691983938217163
    2. 'self' → logprob: -1.8419198989868164
    3. ' char' → logprob: -3.5919198989868164
    4. 'char' → logprob: -4.716919898986816
    5. ' ' → logprob: -12.841919898986816
    6. ' ' → logprob: -14.841919898986816
    7. '   ' → logprob: -15.216919898986816
    8. '0' → logprob: -15.341919898986816
    9. '	self' → logprob: -15.341919898986816
    10. ' len' → logprob: -15.341919898986816

Token 351: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -6.360996485454962e-05
    2. '_count' → logprob: -10.1250638961792
    3. 'mapping' → logprob: -11.0000638961792
    4. 'Mapping' → logprob: -12.5000638961792
    5. '_MAPPING' → logprob: -14.1250638961792
    6. 'apping' → logprob: -14.2500638961792
    7. '_' → logprob: -14.8750638961792
    8. '_m' → logprob: -15.0000638961792
    9. '_map' → logprob: -15.1250638961792
    10. '_length' → logprob: -15.8750638961792

Token 352: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.538490950129926e-05
    2. 'get' → logprob: -10.250055313110352
    3. '.' → logprob: -10.875055313110352
    4. ' .' → logprob: -14.875055313110352
    5. '_get' → logprob: -15.000055313110352
    6. '
' → logprob: -16.37505531311035
    7. '   ' → logprob: -16.50005531311035
    8. '<|end|>' → logprob: -16.87505531311035
    9. '.
' → logprob: -17.62505531311035
    10. '._' → logprob: -18.12505531311035

Token 353: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.0325924449716695e-05
    2. 'char' → logprob: -11.50001049041748
    3. '<char' → logprob: -16.750009536743164
    4. 'Char' → logprob: -17.375009536743164
    5. '_' → logprob: -17.625009536743164
    6. '```' → logprob: -17.625009536743164
    7. '_chars' → logprob: -18.250009536743164
    8. '_CHAR' → logprob: -18.375009536743164
    9. '_count' → logprob: -18.750009536743164
    10. '_c' → logprob: -19.375009536743164

Token 354: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.981667537620524e-06
    2. 'count' → logprob: -13.375001907348633
    3. 'ount' → logprob: -14.750001907348633
    4. '_cont' → logprob: -17.875001907348633
    5. 'unt' → logprob: -18.375001907348633
    6. ' count' → logprob: -18.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'Count' → logprob: -19.000001907348633
    9. '_COUNT' → logprob: -19.000001907348633
    10. 's' → logprob: -19.750001907348633

Token 355: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00861729308962822
    2. '(' → logprob: -4.758617401123047
    3. 'digit' → logprob: -13.633617401123047
    4. '(self' → logprob: -14.758617401123047
    5. '(
' → logprob: -15.008617401123047
    6. ' (' → logprob: -15.008617401123047
    7. '(token' → logprob: -15.133617401123047
    8. '((' → logprob: -15.883617401123047
    9. '()' → logprob: -17.133617401123047
    10. ' ' → logprob: -17.883617401123047

Token 356: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.004222639836370945
    2. 'git' → logprob: -5.504222869873047
    3. 'digit' → logprob: -9.129222869873047
    4. 'igt' → logprob: -11.504222869873047
    5. 'it' → logprob: -11.879222869873047
    6. 'ight' → logprob: -12.129222869873047
    7. 'ig' → logprob: -13.004222869873047
    8. '```' → logprob: -13.129222869873047
    9. 'g' → logprob: -13.379222869873047
    10. '>' → logprob: -13.629222869873047

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.383526149671525e-05
    2. ' )' → logprob: -10.375053405761719
    3. ')
' → logprob: -11.250053405761719
    4. ')*' → logprob: -12.625053405761719
    5. ' ' → logprob: -13.375053405761719
    6. '   ' → logprob: -13.500053405761719
    7. '<|end|>' → logprob: -13.625053405761719
    8. '       ' → logprob: -14.250053405761719
    9. '```' → logprob: -15.250053405761719
    10. ')

' → logprob: -15.625053405761719

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13034969568252563
    2. 'def' → logprob: -2.130349636077881
    3. ' def' → logprob: -6.255349636077881
    4. '<|end|>' → logprob: -7.255349636077881
    5. ')' → logprob: -8.005350112915039
    6. '       ' → logprob: -8.130350112915039
    7. '
' → logprob: -10.380350112915039
    8. '	def' → logprob: -10.630350112915039
    9. '<|end|>' → logprob: -10.880350112915039
    10. '```' → logprob: -11.130350112915039

Token 359: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015241486253216863
    2. ' def' → logprob: -6.876523971557617
    3. '   ' → logprob: -7.626523971557617
    4. ')' → logprob: -13.626523971557617
    5. '       ' → logprob: -13.626523971557617
    6. '	def' → logprob: -14.376523971557617
    7. ' ' → logprob: -14.501523971557617
    8. 'de' → logprob: -15.501523971557617
    9. '@property' → logprob: -16.376523971557617
    10. 'class' → logprob: -16.751523971557617

Token 360: ' number' (ID: 2086)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9586606621742249
    2. 'get' → logprob: -1.33366060256958
    3. 'possible' → logprob: -1.58366060256958
    4. ' possible' → logprob: -2.45866060256958
    5. 'max' → logprob: -3.95866060256958
    6. 'count' → logprob: -4.33366060256958
    7. ' max' → logprob: -4.83366060256958
    8. 'calculate' → logprob: -5.33366060256958
    9. 'valid' → logprob: -5.83366060256958
    10. ' count' → logprob: -5.95866060256958

Token 361: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0025823204778134823
    2. 's' → logprob: -6.877582550048828
    3. ' =' → logprob: -7.377582550048828
    4. 'of' → logprob: -8.127582550048828
    5. '_' → logprob: -8.252582550048828
    6. 'Of' → logprob: -9.127582550048828
    7. '_sequences' → logprob: -9.377582550048828
    8. '=' → logprob: -10.252582550048828
    9. '_options' → logprob: -10.377582550048828
    10. '_pressed' → logprob: -10.752582550048828

Token 362: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6148013472557068
    2. '_com' → logprob: -1.7398014068603516
    3. '_options' → logprob: -2.3648014068603516
    4. '_choices' → logprob: -2.4898014068603516
    5. '_pos' → logprob: -2.9898014068603516
    6. '_sequences' → logprob: -3.9898014068603516
    7. '_vari' → logprob: -4.489801406860352
    8. '_possible' → logprob: -4.614801406860352
    9. '_char' → logprob: -5.364801406860352
    10. '_dec' → logprob: -5.489801406860352

Token 363: 'pret' (ID: 12540)
  Prédit: 'pret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -0.00017791526624932885
    2. 'vals' → logprob: -10.125178337097168
    3. 'pre' → logprob: -10.250178337097168
    4. 'actions' → logprob: -10.500178337097168
    5. 'esting' → logprob: -10.500178337097168
    6. 'nal' → logprob: -11.000178337097168
    7. 'rupt' → logprob: -12.000178337097168
    8. 'Pret' → logprob: -12.125178337097168
    9. 'preter' → logprob: -12.250178337097168
    10. 'mediate' → logprob: -12.875178337097168

Token 364: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.0206720617134124e-05
    2. 's' → logprob: -12.37501049041748
    3. 'ation' → logprob: -13.00001049041748
    4. '_' → logprob: -14.25001049041748
    5. 'a' → logprob: -14.25001049041748
    6. 'ed' → logprob: -14.50001049041748
    7. '_at' → logprob: -15.00001049041748
    8. '

' → logprob: -15.25001049041748
    9. '```' → logprob: -15.37501049041748
    10. 'lations' → logprob: -15.62501049041748

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013603554107248783
    2. '(' → logprob: -6.6263604164123535
    3. ' (' → logprob: -10.751359939575195
    4. '(s' → logprob: -11.376359939575195
    5. '(sel' → logprob: -14.626359939575195
    6. '(se' → logprob: -15.001359939575195
    7. 'self' → logprob: -15.251359939575195
    8. 's' → logprob: -15.751359939575195
    9. '()' → logprob: -16.001359939575195
    10. '   ' → logprob: -16.251359939575195

Token 366: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.035948242992162704
    2. ')' → logprob: -3.7859482765197754
    3. '):
' → logprob: -5.410948276519775
    4. 'self' → logprob: -5.410948276519775
    5. '):' → logprob: -6.160948276519775
    6. '   ' → logprob: -7.535948276519775
    7. ')(' → logprob: -8.035947799682617
    8. '(' → logprob: -8.410947799682617
    9. '
' → logprob: -9.285947799682617
    10. '       ' → logprob: -9.535947799682617

Token 367: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036448531318455935
    2. '(' → logprob: -5.628644943237305
    3. ' (' → logprob: -10.753644943237305
    4. '(s' → logprob: -11.003644943237305
    5. '():' → logprob: -13.628644943237305
    6. 's' → logprob: -13.628644943237305
    7. 'self' → logprob: -14.003644943237305
    8. ':' → logprob: -14.128644943237305
    9. '   ' → logprob: -14.253644943237305
    10. '_' → logprob: -15.003644943237305

Token 368: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001835706876590848
    2. ' int' → logprob: -6.376835823059082
    3. '(int' → logprob: -9.001835823059082
    4. '   ' → logprob: -12.876835823059082
    5. ' ' → logprob: -13.376835823059082
    6. '[int' → logprob: -13.376835823059082
    7. ' (' → logprob: -14.001835823059082
    8. '(' → logprob: -14.251835823059082
    9. '()' → logprob: -14.376835823059082
    10. ':int' → logprob: -14.626835823059082

Token 369: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011538875289261341
    2. '(' → logprob: -4.511538982391357
    3. ':' → logprob: -7.761538982391357
    4. '   ' → logprob: -11.1365385055542
    5. '       ' → logprob: -11.1365385055542
    6. '(
' → logprob: -11.8865385055542
    7. ' (' → logprob: -11.8865385055542
    8. '(s' → logprob: -12.2615385055542
    9. 'self' → logprob: -12.3865385055542
    10. '():' → logprob: -12.6365385055542

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048469724133610725
    2. '```' → logprob: -6.004847049713135
    3. 'result' → logprob: -7.379847049713135
    4. 'if' → logprob: -8.004846572875977
    5. 'count' → logprob: -8.504846572875977
    6. 'n' → logprob: -8.629846572875977
    7. '
' → logprob: -8.879846572875977
    8. ' if' → logprob: -9.129846572875977
    9. '   ' → logprob: -9.254846572875977
    10. '(' → logprob: -9.504846572875977

Token 371: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2861782312393188
    2. 'count' → logprob: -1.2861782312393188
    3. 'result' → logprob: -1.9111782312393188
    4. '       ' → logprob: -2.1611781120300293
    5. 'res' → logprob: -2.7861781120300293
    6. 'mod' → logprob: -3.1611781120300293
    7. 'max' → logprob: -3.5361781120300293
    8. ' if' → logprob: -3.6611781120300293
    9. 'total' → logprob: -5.661178112030029
    10. ' count' → logprob: -5.786178112030029

Token 372: ' Number' (ID: 9184)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20196238160133362
    2. 'max' → logprob: -2.701962471008301
    3. 'count' → logprob: -3.326962471008301
    4. '       ' → logprob: -4.076962471008301
    5. 'total' → logprob: -4.076962471008301
    6. 'mod' → logprob: -4.451962471008301
    7. 'result' → logprob: -4.576962471008301
    8. 'def' → logprob: -4.951962471008301
    9. ' if' → logprob: -5.576962471008301
    10. '   ' → logprob: -5.951962471008301

Token 373: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8336402773857117
    2. 'of' → logprob: -1.3336403369903564
    3. '       ' → logprob: -1.8336403369903564
    4. ' =' → logprob: -2.3336403369903564
    5. '_of' → logprob: -4.208640098571777
    6. 'self' → logprob: -5.333640098571777
    7. ' of' → logprob: -5.333640098571777
    8. 'tokens' → logprob: -5.333640098571777
    9. '_tokens' → logprob: -6.458640098571777
    10. 'if' → logprob: -6.458640098571777

Token 374: ' ways' (ID: 6984)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -0.2914717197418213
    2. 'ways' → logprob: -2.2914717197418213
    3. 'possible' → logprob: -2.7914717197418213
    4. ' interpretations' → logprob: -2.9164717197418213
    5. 'interpre' → logprob: -4.166471481323242
    6. 'self' → logprob: -4.416471481323242
    7. 'options' → logprob: -6.416471481323242
    8. 'press' → logprob: -6.416471481323242
    9. ' ways' → logprob: -6.666471481323242
    10. 'poss' → logprob: -7.416471481323242

Token 375: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28177693486213684
    2. ' =' → logprob: -1.4067769050598145
    3. '       ' → logprob: -7.6567769050598145
    4. 'to' → logprob: -9.656777381896973
    5. ' to' → logprob: -10.156777381896973
    6. '   ' → logprob: -11.156777381896973
    7. '_to' → logprob: -12.031777381896973
    8. 'return' → logprob: -12.281777381896973
    9. 'for' → logprob: -12.781777381896973
    10. ',' → logprob: -13.031777381896973

Token 376: ' split' (ID: 12648)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -0.08336181193590164
    2. 'choose' → logprob: -3.833361864089966
    3. '(' → logprob: -4.208361625671387
    4. 'decode' → logprob: -4.583361625671387
    5. 'calculate' → logprob: -4.958361625671387
    6. 'combine' → logprob: -5.208361625671387
    7. 'compute' → logprob: -5.583361625671387
    8. ' interpret' → logprob: -5.833361625671387
    9. 'select' → logprob: -6.333361625671387
    10. '(self' → logprob: -6.583361625671387

Token 377: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6480278968811035
    2. '       ' → logprob: -1.3980278968811035
    3. '=' → logprob: -2.1480278968811035
    4. 'self' → logprob: -2.8980278968811035
    5. 'result' → logprob: -3.3980278968811035
    6. '(self' → logprob: -5.3980278968811035
    7. 'ways' → logprob: -5.7730278968811035
    8. 'return' → logprob: -6.1480278968811035
    9. '   ' → logprob: -6.6480278968811035
    10. ' self' → logprob: -6.7730278968811035

Token 378: 'length' (ID: 7914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011633152607828379
    2. ''' → logprob: -8.001163482666016
    3. '       ' → logprob: -8.376163482666016
    4. ' self' → logprob: -8.376163482666016
    5. 'the' → logprob: -8.751163482666016
    6. 's' → logprob: -9.501163482666016
    7. '(self' → logprob: -10.876163482666016
    8. '   ' → logprob: -11.251163482666016
    9. ''s' → logprob: -11.251163482666016
    10. '
' → logprob: -11.251163482666016

Token 379: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21505439281463623
    2. ' '' → logprob: -2.340054512023926
    3. ')' → logprob: -3.090054512023926
    4. ' //' → logprob: -3.965054512023926
    5. ' into' → logprob: -4.215054512023926
    6. '       ' → logprob: -6.090054512023926
    7. '')' → logprob: -6.215054512023926
    8. ' )' → logprob: -6.340054512023926
    9. '+' → logprob: -6.465054512023926
    10. '   ' → logprob: -6.590054512023926

Token 380: ' presses' (ID: 102313)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46569904685020447
    2. '=' → logprob: -1.4656990766525269
    3. ' into' → logprob: -2.2156989574432373
    4. 'into' → logprob: -4.840699195861816
    5. ')' → logprob: -5.465699195861816
    6. ' if' → logprob: -5.965699195861816
    7. '       ' → logprob: -5.965699195861816
    8. 'self' → logprob: -6.340699195861816
    9. ' ' → logprob: -6.590699195861816
    10. '_into' → logprob: -6.715699195861816

Token 381: ' into' (ID: 1511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16052661836147308
    2. '=' → logprob: -1.9105266332626343
    3. '       ' → logprob: -10.035526275634766
    4. ',' → logprob: -10.035526275634766
    5. ')' → logprob: -10.160526275634766
    6. ' ' → logprob: -10.285526275634766
    7. ' if' → logprob: -10.535526275634766
    8. 's' → logprob: -11.535526275634766
    9. ' //' → logprob: -11.535526275634766
    10. '=self' → logprob: -11.535526275634766

Token 382: ' characters' (ID: 9862)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03314359858632088
    2. ' self' → logprob: -4.408143520355225
    3. '1' → logprob: -5.033143520355225
    4. '(self' → logprob: -5.533143520355225
    5. 'groups' → logprob: -5.783143520355225
    6. '[self' → logprob: -6.658143520355225
    7. '[' → logprob: -6.658143520355225
    8. '(' → logprob: -7.033143520355225
    9. 'valid' → logprob: -7.658143520355225
    10. ' groups' → logprob: -7.908143520355225

Token 383: ' considering' (ID: 17227)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050163306295871735
    2. '=' → logprob: -3.0501632690429688
    3. '       ' → logprob: -8.425163269042969
    4. 's' → logprob: -8.550163269042969
    5. ',' → logprob: -8.800163269042969
    6. 'mod' → logprob: -8.800163269042969
    7. ':' → logprob: -8.800163269042969
    8. '```' → logprob: -9.300163269042969
    9. ' is' → logprob: -9.425163269042969
    10. '_mod' → logprob: -9.550163269042969

Token 384: ' looping' (ID: 140710)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05507669597864151
    2. ' self' → logprob: -2.9300765991210938
    3. '(self' → logprob: -9.805076599121094
    4. '       ' → logprob: -10.555076599121094
    5. 'max' → logprob: -10.680076599121094
    6. '
' → logprob: -10.930076599121094
    7. 'the' → logprob: -11.555076599121094
    8. ' the' → logprob: -11.680076599121094
    9. '	self' → logprob: -11.680076599121094
    10. '   ' → logprob: -12.055076599121094

Token 385: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09650610387325287
    2. '=' → logprob: -2.721506118774414
    3. ':' → logprob: -5.596506118774414
    4. '_count' → logprob: -5.846506118774414
    5. '       ' → logprob: -6.096506118774414
    6. 'count' → logprob: -6.221506118774414
    7. '(' → logprob: -6.596506118774414
    8. '   ' → logprob: -6.721506118774414
    9. '(self' → logprob: -6.721506118774414
    10. ' over' → logprob: -6.846506118774414

Token 386: ' char' (ID: 1826)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10230562835931778
    2. ' self' → logprob: -2.3523056507110596
    3. ' the' → logprob: -6.6023054122924805
    4. 'the' → logprob: -7.8523054122924805
    5. '(self' → logprob: -9.35230541229248
    6. ' presses' → logprob: -9.60230541229248
    7. '[self' → logprob: -10.47730541229248
    8. 'press' → logprob: -10.72730541229248
    9. 'char' → logprob: -10.85230541229248
    10. 'pressed' → logprob: -11.22730541229248

Token 387: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3821236193180084
    2. 's' → logprob: -1.382123589515686
    3. 'acters' → logprob: -3.1321237087249756
    4. 'set' → logprob: -4.3821234703063965
    5. 'count' → logprob: -5.7571234703063965
    6. 'sets' → logprob: -6.1321234703063965
    7. '_counts' → logprob: -6.1321234703063965
    8. '_set' → logprob: -6.5071234703063965
    9. '   ' → logprob: -8.007123947143555
    10. 'acter' → logprob: -8.007123947143555

Token 388: ' letters' (ID: 18151)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32860007882118225
    2. '=' → logprob: -1.8286000490188599
    3. ' if' → logprob: -3.5786001682281494
    4. '       ' → logprob: -3.9536001682281494
    5. ' %' → logprob: -3.9536001682281494
    6. 'return' → logprob: -4.45359992980957
    7. ':' → logprob: -5.20359992980957
    8. '%' → logprob: -5.20359992980957
    9. ',' → logprob: -5.45359992980957
    10. ' return' → logprob: -5.57859992980957

Token 389: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2562991678714752
    2. ':' → logprob: -2.0062992572784424
    3. '*' → logprob: -4.381299018859863
    4. '**' → logprob: -4.631299018859863
    5. ' =' → logprob: -4.756299018859863
    6. '        
' → logprob: -4.881299018859863
    7. ',' → logprob: -5.006299018859863
    8. '=' → logprob: -5.006299018859863
    9. '
' → logprob: -5.131299018859863
    10. '```' → logprob: -5.256299018859863

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037568334490060806
    2. 'count' → logprob: -4.78756856918335
    3. '```' → logprob: -4.78756856918335
    4. 'mod' → logprob: -5.16256856918335
    5. ' if' → logprob: -5.91256856918335
    6. ' mod' → logprob: -6.91256856918335
    7. ' =' → logprob: -7.03756856918335
    8. 'result' → logprob: -7.03756856918335
    9. 'times' → logprob: -7.28756856918335
    10. '(' → logprob: -7.66256856918335

Token 391: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1923847198486328
    2. '       ' → logprob: -1.3173847198486328
    3. 'return' → logprob: -2.692384719848633
    4. 'total' → logprob: -2.817384719848633
    5. 'if' → logprob: -2.942384719848633
    6. 'max' → logprob: -3.192384719848633
    7. 'result' → logprob: -3.192384719848633
    8. 'mod' → logprob: -3.692384719848633
    9. 'cycles' → logprob: -3.692384719848633
    10. 'ways' → logprob: -4.192384719848633

Token 392: ' This' (ID: 1328)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8373878598213196
    2. '       ' → logprob: -2.462387800216675
    3. 'if' → logprob: -2.462387800216675
    4. 'result' → logprob: -2.587387800216675
    5. 'count' → logprob: -2.837387800216675
    6. 'total' → logprob: -3.462387800216675
    7. 'dp' → logprob: -3.462387800216675
    8. 'cycles' → logprob: -3.712387800216675
    9. 'mod' → logprob: -3.837387800216675
    10. 'full' → logprob: -4.212388038635254

Token 393: ' equals' (ID: 29702)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7122739553451538
    2. ':' → logprob: -1.8372739553451538
    3. ' =' → logprob: -2.3372740745544434
    4. 'def' → logprob: -2.5872740745544434
    5. 'is' → logprob: -3.2122740745544434
    6. '=' → logprob: -3.7122740745544434
    7. 'return' → logprob: -4.337274074554443
    8. '```' → logprob: -4.462274074554443
    9. ' can' → logprob: -4.837274074554443
    10. ' def' → logprob: -5.087274074554443

Token 394: ' the' (ID: 290)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7915393710136414
    2. '(self' → logprob: -1.5415394306182861
    3. 'self' → logprob: -1.7915394306182861
    4. '(pow' → logprob: -2.041539430618286
    5. ' pow' → logprob: -3.666539430618286
    6. ' (' → logprob: -5.416539192199707
    7. ' self' → logprob: -5.791539192199707
    8. '(' → logprob: -6.291539192199707
    9. '1' → logprob: -7.291539192199707
    10. '((' → logprob: -7.791539192199707

Token 395: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6117017865180969
    2. '(self' → logprob: -1.4867017269134521
    3. 'pow' → logprob: -1.8617017269134521
    4. '1' → logprob: -4.111701965332031
    5. 'length' → logprob: -4.486701965332031
    6. '(pow' → logprob: -4.486701965332031
    7. '((' → logprob: -4.736701965332031
    8. '(' → logprob: -4.861701965332031
    9. ' (' → logprob: -5.361701965332031
    10. ' pow' → logprob: -5.486701965332031

Token 396: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4249608516693115
    2. ' of' → logprob: -1.9249608516693115
    3. '**' → logprob: -1.9249608516693115
    4. '_of' → logprob: -4.049961090087891
    5. 'pow' → logprob: -4.174961090087891
    6. ' **' → logprob: -4.799961090087891
    7. '(self' → logprob: -5.299961090087891
    8. 'self' → logprob: -5.549961090087891
    9. ' self' → logprob: -6.674961090087891
    10. ' pow' → logprob: -7.049961090087891

Token 397: ' ways' (ID: 6984)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3543325364589691
    2. 'self' → logprob: -1.9793325662612915
    3. 'pow' → logprob: -2.854332447052002
    4. '(pow' → logprob: -3.604332447052002
    5. '((' → logprob: -4.104332447052002
    6. '(length' → logprob: -4.104332447052002
    7. ' (' → logprob: -4.229332447052002
    8. '(' → logprob: -4.229332447052002
    9. '1' → logprob: -5.354332447052002
    10. ' self' → logprob: -6.229332447052002

Token 398: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5961230397224426
    2. '(self' → logprob: -1.5961229801177979
    3. 'to' → logprob: -2.221122980117798
    4. '(' → logprob: -3.096122980117798
    5. '<|end|>' → logprob: -3.471122980117798
    6. '       ' → logprob: -4.221123218536377
    7. ' (' → logprob: -4.346123218536377
    8. 'self' → logprob: -4.471123218536377
    9. ' *' → logprob: -5.221123218536377
    10. ' self' → logprob: -5.721123218536377

Token 399: ' partition' (ID: 31512)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7061407566070557
    2. 'self' → logprob: -1.9561407566070557
    3. 'pow' → logprob: -2.2061407566070557
    4. '(length' → logprob: -2.2061407566070557
    5. 'length' → logprob: -2.8311407566070557
    6. ' (' → logprob: -3.0811407566070557
    7. ' self' → logprob: -4.581140518188477
    8. 'calculate' → logprob: -5.331140518188477
    9. '(' → logprob: -5.706140518188477
    10. ' pow' → logprob: -5.831140518188477

Token 400: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06937582045793533
    2. ' self' → logprob: -2.81937575340271
    3. 'the' → logprob: -5.569375991821289
    4. ' the' → logprob: -6.194375991821289
    5. '(self' → logprob: -6.569375991821289
    6. '[self' → logprob: -10.194375991821289
    7. '       ' → logprob: -10.444375991821289
    8. '	self' → logprob: -10.569375991821289
    9. 'length' → logprob: -12.319375991821289
    10. '```' → logprob: -12.569375991821289

Token 401: ' presses' (ID: 102313)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013602360850200057
    2. ' self' → logprob: -6.7513604164123535
    3. 'length' → logprob: -9.126359939575195
    4. '       ' → logprob: -10.001359939575195
    5. '(self' → logprob: -10.376359939575195
    6. '   ' → logprob: -14.126359939575195
    7. 'press' → logprob: -14.376359939575195
    8. ' length' → logprob: -14.876359939575195
    9. '[self' → logprob: -15.001359939575195
    10. '```' → logprob: -15.001359939575195

Token 402: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.803134799003601
    2. ' modulo' → logprob: -1.928134799003601
    3. ' into' → logprob: -2.0531349182128906
    4. ' =' → logprob: -2.3031349182128906
    5. '   ' → logprob: -2.5531349182128906
    6. ',' → logprob: -2.8031349182128906
    7. '<|end|>' → logprob: -2.8031349182128906
    8. '=' → logprob: -3.4281349182128906
    9. ' //' → logprob: -3.5531349182128906
    10. '```' → logprob: -3.9281349182128906

Token 403: ' char' (ID: 1826)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.1270177662372589
    2. ' MOD' → logprob: -2.1270177364349365
    3. 'self' → logprob: -10.002017974853516
    4. ' self' → logprob: -10.127017974853516
    5. '_MOD' → logprob: -13.877017974853516
    6. ' ' → logprob: -13.877017974853516
    7. '`' → logprob: -14.627017974853516
    8. '.MOD' → logprob: -14.752017974853516
    9. '```' → logprob: -14.877017974853516
    10. ' ' → logprob: -15.377017974853516

Token 404: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5332478142227046e-05
    2. '_mapping' → logprob: -11.625015258789062
    3. ' _' → logprob: -13.375015258789062
    4. '_' → logprob: -13.500015258789062
    5. 'count' → logprob: -14.000015258789062
    6. '\' → logprob: -14.125015258789062
    7. '_counts' → logprob: -15.125015258789062
    8. '_map' → logprob: -15.250015258789062
    9. '_COUNT' → logprob: -15.875015258789062
    10. 'ount' → logprob: -15.875015258789062

Token 405: ' to' (ID: 316)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.6240788698196411
    2. '<|end|>' → logprob: -1.7490788698196411
    3. '**' → logprob: -2.3740787506103516
    4. ' =' → logprob: -2.3740787506103516
    5. ' if' → logprob: -2.3740787506103516
    6. ' ' → logprob: -3.1240787506103516
    7. '%' → logprob: -3.1240787506103516
    8. '=' → logprob: -3.3740787506103516
    9. '```' → logprob: -3.4990787506103516
    10. ',' → logprob: -3.7490787506103516

Token 406: ' characters' (ID: 9862)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8932918906211853
    2. ' self' → logprob: -1.76829195022583
    3. ' get' → logprob: -2.14329195022583
    4. 'calculate' → logprob: -2.64329195022583
    5. 'get' → logprob: -3.14329195022583
    6. ' compute' → logprob: -3.64329195022583
    7. 'count' → logprob: -3.76829195022583
    8. ' calculate' → logprob: -4.01829195022583
    9. ' MOD' → logprob: -4.14329195022583
    10. ' obtain' → logprob: -4.14329195022583

Token 407: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6985766887664795
    2. '       ' → logprob: -1.3235766887664795
    3. 'import' → logprob: -3.1985766887664795
    4. '   ' → logprob: -3.6985766887664795
    5. '```' → logprob: -3.9485766887664795
    6. '<|end|>' → logprob: -3.9485766887664795
    7. '=' → logprob: -4.073576927185059
    8. '
' → logprob: -4.198576927185059
    9. 'return' → logprob: -4.198576927185059
    10. ' %' → logprob: -4.573576927185059

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14863617718219757
    2. ' if' → logprob: -3.5236361026763916
    3. '```' → logprob: -3.7736361026763916
    4. 'return' → logprob: -4.398636341094971
    5. ' =' → logprob: -4.398636341094971
    6. '(' → logprob: -5.023636341094971
    7. '()' → logprob: -5.148636341094971
    8. 'result' → logprob: -5.148636341094971
    9. '   ' → logprob: -5.148636341094971
    10. ' return' → logprob: -5.523636341094971

Token 409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3886789083480835
    2. 'if' → logprob: -1.6386789083480835
    3. 'max' → logprob: -1.7636789083480835
    4. ' if' → logprob: -2.013679027557373
    5. 'return' → logprob: -2.263679027557373
    6. 'count' → logprob: -3.138679027557373
    7. ' max' → logprob: -3.638679027557373
    8. ' return' → logprob: -4.263679027557373
    9. 'ways' → logprob: -4.513679027557373
    10. 'result' → logprob: -4.763679027557373

Token 410: ' Let' (ID: 9024)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.30341637134552
    2. '       ' → logprob: -1.55341637134552
    3. ' if' → logprob: -1.80341637134552
    4. ' max' → logprob: -1.92841637134552
    5. 'if' → logprob: -2.3034162521362305
    6. 'result' → logprob: -3.8034162521362305
    7. 'count' → logprob: -3.9284162521362305
    8. ' result' → logprob: -4.6784162521362305
    9. ' count' → logprob: -5.1784162521362305
    10. 'def' → logprob: -5.1784162521362305

Token 411: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5531593561172485
    2. ' max' → logprob: -2.053159236907959
    3. ' presses' → logprob: -2.428159236907959
    4. ' k' → logprob: -2.553159236907959
    5. 'n' → logprob: -3.303159236907959
    6. ' result' → logprob: -4.303159236907959
    7. 'k' → logprob: -4.553159236907959
    8. 'max' → logprob: -4.678159236907959
    9. ' total' → logprob: -4.678159236907959
    10. ' cycle' → logprob: -5.428159236907959

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036510784178972244
    2. '=' → logprob: -3.411510705947876
    3. '       ' → logprob: -6.036510944366455
    4. '   ' → logprob: -8.661510467529297
    5. ',' → logprob: -9.911510467529297
    6. '        ' → logprob: -10.661510467529297
    7. '=int' → logprob: -10.661510467529297
    8. 'press' → logprob: -10.786510467529297
    9. 'p' → logprob: -11.036510467529297
    10. '      ' → logprob: -11.161510467529297

Token 413: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032058770302683115
    2. ' self' → logprob: -5.7532057762146
    3. 'elf' → logprob: -11.003206253051758
    4. '       ' → logprob: -13.003206253051758
    5. '(self' → logprob: -13.003206253051758
    6. 'length' → logprob: -13.128206253051758
    7. 's' → logprob: -14.003206253051758
    8. '```' → logprob: -14.253206253051758
    9. 'lf' → logprob: -14.628206253051758
    10. 'f' → logprob: -14.628206253051758

Token 414: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21940328180789948
    2. ',' → logprob: -2.3444032669067383
    3. ' =' → logprob: -3.5944032669067383
    4. ' ' → logprob: -4.094403266906738
    5. '<|end|>' → logprob: -4.219403266906738
    6. ' %' → logprob: -4.469403266906738
    7. 'def' → logprob: -4.844403266906738
    8. ' ,' → logprob: -5.594403266906738
    9. '       ' → logprob: -6.094403266906738
    10. ',
' → logprob: -6.344403266906738

Token 415: ' c' (ID: 274)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8239280581474304
    2. 'c' → logprob: -1.8239281177520752
    3. 'm' → logprob: -2.448928117752075
    4. ' k' → logprob: -2.448928117752075
    5. ' c' → logprob: -3.198928117752075
    6. 'char' → logprob: -3.323928117752075
    7. 'def' → logprob: -3.573928117752075
    8. ' char' → logprob: -3.948928117752075
    9. ' m' → logprob: -4.198927879333496
    10. '   ' → logprob: -4.448927879333496

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742116630077362
    2. '=' → logprob: -0.9742116928100586
    3. 'ount' → logprob: -9.099211692810059
    4. '   ' → logprob: -11.974211692810059
    5. '=self' → logprob: -12.224211692810059
    6. ' ' → logprob: -12.599211692810059
    7. '=int' → logprob: -12.599211692810059
    8. ',' → logprob: -13.849211692810059
    9. '       ' → logprob: -13.974211692810059
    10. '=
' → logprob: -13.974211692810059

Token 417: ' char' (ID: 1826)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03365572914481163
    2. ' self' → logprob: -3.4086556434631348
    3. '       ' → logprob: -12.658656120300293
    4. 'elf' → logprob: -12.783656120300293
    5. '(self' → logprob: -13.658656120300293
    6. ' ' → logprob: -14.783656120300293
    7. '   ' → logprob: -14.908656120300293
    8. '	self' → logprob: -14.908656120300293
    9. 'char' → logprob: -15.033656120300293
    10. ' ' → logprob: -15.283656120300293

Token 418: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1398757123970427e-05
    2. 'count' → logprob: -11.500011444091797
    3. 'ount' → logprob: -15.000011444091797
    4. 'self' → logprob: -15.500011444091797
    5. '       ' → logprob: -16.125011444091797
    6. 'Count' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.500011444091797
    8. '\' → logprob: -16.500011444091797
    9. '_' → logprob: -16.750011444091797
    10. '_counts' → logprob: -17.250011444091797

Token 419: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46857568621635437
    2. '
' → logprob: -1.0935757160186768
    3. ',' → logprob: -4.343575477600098
    4. ' if' → logprob: -5.093575477600098
    5. '\n' → logprob: -5.968575477600098
    6. '<|end|>' → logprob: -5.968575477600098
    7. '<|end|>' → logprob: -5.968575477600098
    8. '        
' → logprob: -6.218575477600098
    9. 'if' → logprob: -6.718575477600098
    10. 'n' → logprob: -6.718575477600098

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013866664376109838
    2. 'n' → logprob: -8.251386642456055
    3. ' if' → logprob: -8.376386642456055
    4. '
' → logprob: -8.626386642456055
    5. '   ' → logprob: -9.126386642456055
    6. ' n' → logprob: -9.251386642456055
    7. ',' → logprob: -9.376386642456055
    8. '#' → logprob: -9.751386642456055
    9. '        
' → logprob: -9.751386642456055
    10. ')' → logprob: -10.251386642456055

Token 421: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01142903883010149
    2. 'n' → logprob: -5.5114288330078125
    3. ' if' → logprob: -5.5114288330078125
    4. ' n' → logprob: -6.7614288330078125
    5. 'if' → logprob: -7.5114288330078125
    6. '
' → logprob: -7.5114288330078125
    7. '   ' → logprob: -8.636428833007812
    8. '```' → logprob: -9.011428833007812
    9. '        
' → logprob: -9.136428833007812
    10. '\n' → logprob: -9.386428833007812

Token 422: ' number' (ID: 2086)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0056812763214111
    2. '       ' → logprob: -1.5056812763214111
    3. 'if' → logprob: -2.630681276321411
    4. ' if' → logprob: -2.755681276321411
    5. 'max' → logprob: -2.755681276321411
    6. ' c' → logprob: -2.880681276321411
    7. 'n' → logprob: -3.130681276321411
    8. 'dp' → logprob: -3.880681276321411
    9. ' max' → logprob: -4.005681037902832
    10. 'return' → logprob: -4.130681037902832

Token 423: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.06058265268802643
    2. ' =' → logprob: -2.9355826377868652
    3. '=' → logprob: -5.685582637786865
    4. '   ' → logprob: -7.060582637786865
    5. '_' → logprob: -7.810582637786865
    6. 'Of' → logprob: -8.435583114624023
    7. '_tokens' → logprob: -8.810583114624023
    8. 'of' → logprob: -8.935583114624023
    9. ' of' → logprob: -9.435583114624023
    10. '       ' → logprob: -9.435583114624023

Token 424: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6158860921859741
    2. 'interpret' → logprob: -1.9908860921859741
    3. 'self' → logprob: -2.6158862113952637
    4. '(self' → logprob: -3.1158862113952637
    5. '(' → logprob: -3.2408862113952637
    6. '_inter' → logprob: -3.3658862113952637
    7. ' ways' → logprob: -3.7408862113952637
    8. 'possible' → logprob: -3.8658862113952637
    9. ' interpretations' → logprob: -4.115886211395264
    10. 'return' → logprob: -4.740886211395264

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.552480936050415
    2. '=' → logprob: -0.927480936050415
    3. '       ' → logprob: -3.927480936050415
    4. '   ' → logprob: -5.302480697631836
    5. 'import' → logprob: -6.552480697631836
    6. 'def' → logprob: -7.052480697631836
    7. ' is' → logprob: -7.802480697631836
    8. ':' → logprob: -8.177480697631836
    9. ' ' → logprob: -8.677480697631836
    10. 'return' → logprob: -8.802480697631836

Token 426: ' number' (ID: 2086)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48366227746009827
    2. 'self' → logprob: -1.6086622476577759
    3. ' (' → logprob: -2.3586623668670654
    4. '1' → logprob: -3.4836623668670654
    5. '((' → logprob: -3.9836623668670654
    6. ' self' → logprob: -4.108662128448486
    7. '(' → logprob: -5.108662128448486
    8. '(n' → logprob: -5.233662128448486
    9. 'pow' → logprob: -5.608662128448486
    10. '(pow' → logprob: -6.108662128448486

Token 427: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4798271358013153
    2. '_of' → logprob: -2.1048271656036377
    3. 'pow' → logprob: -2.1048271656036377
    4. '(pow' → logprob: -2.8548271656036377
    5. '       ' → logprob: -3.1048271656036377
    6. 'self' → logprob: -4.729826927185059
    7. ' (' → logprob: -5.229826927185059
    8. '(' → logprob: -5.729826927185059
    9. '   ' → logprob: -5.729826927185059
    10. ' pow' → logprob: -5.854826927185059

Token 428: ' sequences' (ID: 45665)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5210191011428833
    2. 'self' → logprob: -1.7710191011428833
    3. 'ways' → logprob: -1.7710191011428833
    4. '(n' → logprob: -2.6460189819335938
    5. ' ways' → logprob: -2.7710189819335938
    6. ' (' → logprob: -2.7710189819335938
    7. '(' → logprob: -2.8960189819335938
    8. '((' → logprob: -3.1460189819335938
    9. '(length' → logprob: -3.2710189819335938
    10. 'n' → logprob: -4.146018981933594

Token 429: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1258685141801834
    2. '       ' → logprob: -4.125868320465088
    3. ' of' → logprob: -4.500868320465088
    4. '(self' → logprob: -4.500868320465088
    5. 'def' → logprob: -4.500868320465088
    6. '<|end|>' → logprob: -4.625868320465088
    7. '=' → logprob: -5.000868320465088
    8. 'import' → logprob: -5.000868320465088
    9. '(' → logprob: -5.125868320465088
    10. '<|end|>' → logprob: -5.375868320465088

Token 430: ' positive' (ID: 8841)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.21160486340522766
    2. ' length' → logprob: -2.3366048336029053
    3. 'press' → logprob: -3.7116048336029053
    4. ' presses' → logprob: -3.8366048336029053
    5. 'n' → logprob: -4.336605072021484
    6. ' n' → logprob: -4.586605072021484
    7. '(length' → logprob: -5.086605072021484
    8. '1' → logprob: -5.461605072021484
    9. 'digits' → logprob: -5.711605072021484
    10. 'self' → logprob: -5.711605072021484

Token 431: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.21448710560798645
    2. 'inte' → logprob: -1.839487075805664
    3. 'int' → logprob: -4.589487075805664
    4. 'length' → logprob: -4.839487075805664
    5. ' length' → logprob: -5.964487075805664
    6. 'integer' → logprob: -5.964487075805664
    7. 'tokens' → logprob: -5.964487075805664
    8. ' tokens' → logprob: -6.214487075805664
    9. ' integer' → logprob: -6.464487075805664
    10. 'ints' → logprob: -6.464487075805664

Token 432: ' k' (ID: 372)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.853935182094574
    2. ' that' → logprob: -1.6039352416992188
    3. ' =' → logprob: -2.2289352416992188
    4. ' self' → logprob: -2.3539352416992188
    5. 'self' → logprob: -2.7289352416992188
    6. ' (' → logprob: -3.6039352416992188
    7. ' whose' → logprob: -4.853935241699219
    8. 'that' → logprob: -4.853935241699219
    9. '=' → logprob: -4.978935241699219
    10. '(length' → logprob: -5.103935241699219

Token 433: '_i' (ID: 10853)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.2502579391002655
    2. ' <=' → logprob: -2.625257968902588
    3. '_i' → logprob: -3.000257968902588
    4. '<=' → logprob: -3.250257968902588
    5. ' that' → logprob: -4.000257968902588
    6. 'such' → logprob: -4.875257968902588
    7. '>=' → logprob: -5.000257968902588
    8. ' >=' → logprob: -5.375257968902588
    9. ' whose' → logprob: -5.375257968902588
    10. 's' → logprob: -5.625257968902588

Token 434: ' where' (ID: 1919)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.15288417041301727
    2. 's' → logprob: -2.2778842449188232
    3. ' whose' → logprob: -4.027884006500244
    4. 'such' → logprob: -4.652884006500244
    5. ' that' → logprob: -5.152884006500244
    6. ' summ' → logprob: -5.902884006500244
    7. ' s' → logprob: -6.777884006500244
    8. ',' → logprob: -7.027884006500244
    9. 'that' → logprob: -8.527884483337402
    10. 'whose' → logprob: -8.527884483337402

Token 435: ' sum' (ID: 4215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1696733683347702
    2. ' k' → logprob: -2.919673442840576
    3. '(k' → logprob: -3.294673442840576
    4. 'sum' → logprob: -3.294673442840576
    5. ' (' → logprob: -4.794673442840576
    6. ' sum' → logprob: -5.044673442840576
    7. '(sum' → logprob: -5.419673442840576
    8. 'each' → logprob: -6.044673442840576
    9. '
' → logprob: -6.669673442840576
    10. '(' → logprob: -6.794673442840576

Token 436: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2419685423374176
    2. 'k' → logprob: -2.2419686317443848
    3. ' =' → logprob: -2.9919686317443848
    4. '=k' → logprob: -3.3669686317443848
    5. '(k' → logprob: -4.866968631744385
    6. ' of' → logprob: -5.616968631744385
    7. ' k' → logprob: -5.741968631744385
    8. '_k' → logprob: -5.866968631744385
    9. 'of' → logprob: -6.241968631744385
    10. ' ==' → logprob: -6.991968631744385

Token 437: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.46543586254119873
    2. '_' → logprob: -1.2154358625411987
    3. '=' → logprob: -2.8404359817504883
    4. ' =' → logprob: -5.090435981750488
    5. ' _' → logprob: -5.340435981750488
    6. '_=' → logprob: -6.340435981750488
    7. '==' → logprob: -6.590435981750488
    8. 's' → logprob: -7.340435981750488
    9. '=i' → logprob: -7.590435981750488
    10. ' ==' → logprob: -7.715435981750488

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9870115518569946
    2. ' =' → logprob: -1.3620115518569946
    3. ' <=' → logprob: -1.4870115518569946
    4. ' ==' → logprob: -2.237011432647705
    5. '<=' → logprob: -3.987011432647705
    6. '==' → logprob: -4.112011432647705
    7. ' >=' → logprob: -6.237011432647705
    8. ' ' → logprob: -7.487011432647705
    9. '>=' → logprob: -8.237011909484863
    10. ' ≤' → logprob: -8.487011909484863

Token 439: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014254826121032238
    2. ' self' → logprob: -4.264255046844482
    3. 'length' → logprob: -9.514254570007324
    4. '       ' → logprob: -11.389254570007324
    5. ' length' → logprob: -13.389254570007324
    6. 'n' → logprob: -13.514254570007324
    7. '```' → logprob: -13.764254570007324
    8. '(self' → logprob: -14.264254570007324
    9. '   ' → logprob: -14.889254570007324
    10. '`' → logprob: -15.389254570007324

Token 440: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7310940027236938
    2. ',' → logprob: -1.1060940027236938
    3. '       ' → logprob: -2.2310938835144043
    4. '
' → logprob: -3.8560938835144043
    5. '   ' → logprob: -4.606093883514404
    6. ' ,' → logprob: -4.731093883514404
    7. ' that' → logprob: -4.981093883514404
    8. 'import' → logprob: -5.356093883514404
    9. ' with' → logprob: -5.606093883514404
    10. 'and' → logprob: -5.731093883514404

Token 441: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6133458018302917
    2. 'each' → logprob: -1.1133458614349365
    3. 'all' → logprob: -2.9883458614349365
    4. ' all' → logprob: -3.3633458614349365
    5. ' each' → logprob: -3.4883458614349365
    6. ' k' → logprob: -4.863345623016357
    7. '0' → logprob: -6.238345623016357
    8. 'max' → logprob: -6.613345623016357
    9. 'every' → logprob: -6.988345623016357
    10. ' ' → logprob: -7.238345623016357

Token 442: ' character' (ID: 5855)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001063655479811132
    2. ' k' → logprob: -6.876063823699951
    3. '1' → logprob: -11.626063346862793
    4. 'i' → logprob: -11.876063346862793
    5. ' ' → logprob: -12.251063346862793
    6. '0' → logprob: -13.126063346862793
    7. '<=' → logprob: -13.126063346862793
    8. ' <=' → logprob: -13.376063346862793
    9. '```' → logprob: -13.751063346862793
    10. ' ' → logprob: -14.376063346862793

Token 443: ' corresponds' (ID: 66938)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'press' → logprob: -1.3260458707809448
    2. ' can' → logprob: -1.8260458707809448
    3. 'count' → logprob: -1.8260458707809448
    4. '_press' → logprob: -2.4510459899902344
    5. 'can' → logprob: -2.7010459899902344
    6. ''s' → logprob: -2.9510459899902344
    7. ' press' → logprob: -3.3260459899902344
    8. ' is' → logprob: -3.5760459899902344
    9. 'pressed' → logprob: -3.8260459899902344
    10. '<=' → logprob: -4.326045989990234

Token 444: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11430463939905167
    2. 'to' → logprob: -2.239304542541504
    3. '_to' → logprob: -7.114304542541504
    4. '<|end|>' → logprob: -8.614304542541504
    5. '_token' → logprob: -8.864304542541504
    6. 's' → logprob: -9.114304542541504
    7. '_tokens' → logprob: -9.614304542541504
    8. '<|end|>' → logprob: -10.364304542541504
    9. 'token' → logprob: -10.614304542541504
    10. 'tokens' → logprob: -11.364304542541504

Token 445: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7009751796722412
    2. 'a' → logprob: -2.075975179672241
    3. '1' → logprob: -2.700975179672241
    4. ' a' → logprob: -3.200975179672241
    5. 'self' → logprob: -3.200975179672241
    6. 'some' → logprob: -3.200975179672241
    7. 'at' → logprob: -3.450975179672241
    8. ' k' → logprob: -3.575975179672241
    9. 'one' → logprob: -3.575975179672241
    10. ' one' → logprob: -3.950975179672241

Token 446: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00043913270928896964
    2. '_' → logprob: -7.750439167022705
    3. 'i' → logprob: -12.875438690185547
    4. ' _' → logprob: -13.250438690185547
    5. '[i' → logprob: -14.125438690185547
    6. '_e' → logprob: -14.375438690185547
    7. '_a' → logprob: -15.125438690185547
    8. '_ix' → logprob: -15.125438690185547
    9. '_{' → logprob: -15.375438690185547
    10. '_tokens' → logprob: -15.500438690185547

Token 447: ' presses' (ID: 102313)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2957313060760498
    2. ',' → logprob: -2.04573130607605
    3. ' s' → logprob: -2.42073130607605
    4. ' presses' → logprob: -2.42073130607605
    5. '   ' → logprob: -3.04573130607605
    6. ' and' → logprob: -3.04573130607605
    7. ' ' → logprob: -3.04573130607605
    8. ' tokens' → logprob: -3.17073130607605
    9. ' ,' → logprob: -3.42073130607605
    10. '```' → logprob: -3.79573130607605

Token 448: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22453704476356506
    2. ',' → logprob: -2.4745371341705322
    3. '
' → logprob: -3.3495371341705322
    4. ' =' → logprob: -4.349536895751953
    5. '   ' → logprob: -4.474536895751953
    6. '.' → logprob: -4.974536895751953
    7. ' if' → logprob: -4.974536895751953
    8. ' and' → logprob: -5.099536895751953
    9. 'import' → logprob: -5.349536895751953
    10. 'def' → logprob: -5.974536895751953

Token 449: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4087411165237427
    2. '1' → logprob: -1.1587411165237427
    3. ' ' → logprob: -4.783740997314453
    4. '0' → logprob: -5.658740997314453
    5. ' k' → logprob: -5.908740997314453
    6. 'each' → logprob: -6.033740997314453
    7. '(' → logprob: -7.033740997314453
    8. 'length' → logprob: -7.033740997314453
    9. '(k' → logprob: -7.158740997314453
    10. 'value' → logprob: -7.783740997314453

Token 450: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04949222132563591
    2. ' <=' → logprob: -3.299492120742798
    3. '<=' → logprob: -5.174492359161377
    4. '%' → logprob: -6.674492359161377
    5. ' ' → logprob: -6.674492359161377
    6. ' %' → logprob: -7.049492359161377
    7. 'i' → logprob: -7.799492359161377
    8. '=' → logprob: -8.049491882324219
    9. '_' → logprob: -8.174491882324219
    10. ' =' → logprob: -8.174491882324219

Token 451: ' %' (ID: 1851)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20200194418430328
    2. '<=' → logprob: -1.702001929283142
    3. ' %' → logprob: -8.952001571655273
    4. ' >=' → logprob: -9.077001571655273
    5. '>=' → logprob: -9.202001571655273
    6. ' ≤' → logprob: -9.827001571655273
    7. '%' → logprob: -9.952001571655273
    8. '```' → logprob: -9.952001571655273
    9. '=' → logprob: -10.077001571655273
    10. ' =' → logprob: -11.077001571655273

Token 452: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07025761902332306
    2. ' self' → logprob: -2.6952576637268066
    3. 'c' → logprob: -8.320257186889648
    4. ' c' → logprob: -11.195257186889648
    5. ' ' → logprob: -11.195257186889648
    6. '(self' → logprob: -11.570257186889648
    7. '0' → logprob: -11.820257186889648
    8. '=self' → logprob: -12.445257186889648
    9. 'char' → logprob: -12.445257186889648
    10. '=' → logprob: -12.695257186889648

Token 453: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5411515831947327
    2. '==' → logprob: -1.291151523590088
    3. ' !=' → logprob: -2.041151523590088
    4. '!=' → logprob: -4.416151523590088
    5. '=' → logprob: -7.541151523590088
    6. '```' → logprob: -9.041152000427246
    7. ' =' → logprob: -9.291152000427246
    8. ' in' → logprob: -9.666152000427246
    9. ' ' → logprob: -9.666152000427246
    10. ')' → logprob: -9.916152000427246

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00407923199236393
    2. ' ' → logprob: -5.504079341888428
    3. '=' → logprob: -14.87907886505127
    4. '```' → logprob: -15.75407886505127
    5. '
' → logprob: -16.629079818725586
    6. ' ' → logprob: -17.441579818725586
    7. '  ' → logprob: -17.691579818725586
    8. 'self' → logprob: -17.754079818725586
    9. '  ' → logprob: -17.816579818725586
    10. 's' → logprob: -18.004079818725586

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. 'self' → logprob: -14.750805854797363
    4. '```' → logprob: -15.000805854797363
    5. '
' → logprob: -16.625804901123047
    6. ' ' → logprob: -16.813304901123047
    7. ' ' → logprob: -16.875804901123047
    8. '=' → logprob: -17.063304901123047
    9. 'c' → logprob: -17.563304901123047
    10. '`' → logprob: -17.625804901123047

Token 456: ' except' (ID: 6384)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6777194738388062
    2. ':' → logprob: -1.8027194738388062
    3. '<|end|>' → logprob: -2.1777195930480957
    4. ',' → logprob: -3.1777195930480957
    5. '\n' → logprob: -3.6777195930480957
    6. '.' → logprob: -3.6777195930480957
    7. '

' → logprob: -3.8027195930480957
    8. '   ' → logprob: -4.302719593048096
    9. ')' → logprob: -4.552719593048096
    10. '<|end|>' → logprob: -4.552719593048096

Token 457: ' for' (ID: 395)
  Prédit: ' possibly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibly' → logprob: -0.29382333159446716
    2. 'possibly' → logprob: -2.0438232421875
    3. 'for' → logprob: -3.1688232421875
    4. ' for' → logprob: -3.2938232421875
    5. ' when' → logprob: -3.9188232421875
    6. 'when' → logprob: -4.4188232421875
    7. ' that' → logprob: -5.9188232421875
    8. ' the' → logprob: -6.2938232421875
    9. 'that' → logprob: -6.5438232421875
    10. 'maybe' → logprob: -6.5438232421875

Token 458: ' the' (ID: 290)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7603983879089355
    2. 'k' → logprob: -0.8853983879089355
    3. ' the' → logprob: -2.7603983879089355
    4. 'the' → logprob: -4.0103983879089355
    5. '0' → logprob: -5.0103983879089355
    6. ' ' → logprob: -5.3853983879089355
    7. ' one' → logprob: -5.6353983879089355
    8. 'c' → logprob: -5.6353983879089355
    9. ' c' → logprob: -5.7603983879089355
    10. ' when' → logprob: -6.0103983879089355

Token 459: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.2115105241537094
    2. 'last' → logprob: -1.8365105390548706
    3. ' first' → logprob: -4.33651065826416
    4. 'first' → logprob: -5.46151065826416
    5. 'case' → logprob: -5.46151065826416
    6. ' case' → logprob: -5.71151065826416
    7. ' k' → logprob: -6.46151065826416
    8. 'k' → logprob: -7.08651065826416
    9. ' final' → logprob: -7.46151065826416
    10. '0' → logprob: -7.83651065826416

Token 460: ' one' (ID: 1001)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3180420398712158
    2. '
' → logprob: -1.4430420398712158
    3. '   ' → logprob: -2.193042039871216
    4. ')' → logprob: -2.443042039871216
    5. '<|end|>' → logprob: -2.693042039871216
    6. '       ' → logprob: -3.193042039871216
    7. '.' → logprob: -3.818042039871216
    8. ' ' → logprob: -3.943042039871216
    9. ',' → logprob: -4.068041801452637
    10. '=' → logprob: -4.818041801452637

Token 461: ' which' (ID: 1118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0774792432785034
    2. '       ' → logprob: -1.5774792432785034
    3. '<|end|>' → logprob: -2.327479362487793
    4. ':' → logprob: -2.827479362487793
    5. '   ' → logprob: -2.952479362487793
    6. ',' → logprob: -3.452479362487793
    7. '.' → logprob: -3.702479362487793
    8. 'def' → logprob: -3.952479362487793
    9. '()' → logprob: -4.077479362487793
    10. '()
' → logprob: -4.202479362487793

Token 462: ' cycles' (ID: 41478)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.25121238827705383
    2. ' may' → logprob: -2.7512123584747314
    3. 'can' → logprob: -3.5012123584747314
    4. '%' → logprob: -3.6262123584747314
    5. ' is' → logprob: -4.1262125968933105
    6. ' %' → logprob: -4.1262125968933105
    7. '=' → logprob: -4.1262125968933105
    8. ' could' → logprob: -4.5012125968933105
    9. ' =' → logprob: -4.6262125968933105
    10. ' ==' → logprob: -4.7512125968933105

Token 463: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48269468545913696
    2. '}' → logprob: -1.8576946258544922
    3. ':' → logprob: -3.357694625854492
    4. '   ' → logprob: -3.357694625854492
    5. '<|end|>' → logprob: -3.982694625854492
    6. '+' → logprob: -4.107694625854492
    7. '```' → logprob: -4.107694625854492
    8. '
' → logprob: -4.482694625854492
    9. '       ' → logprob: -4.607694625854492
    10. ' }' → logprob: -4.607694625854492

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19262951612472534
    2. '   ' → logprob: -3.06762957572937
    3. ')' → logprob: -3.56762957572937
    4. ' %' → logprob: -3.81762957572937
    5. ' ' → logprob: -4.192629337310791
    6. '```' → logprob: -4.317629337310791
    7. '%' → logprob: -4.942629337310791
    8. 'def' → logprob: -5.067629337310791
    9. '<|end|>' → logprob: -5.192629337310791
    10. 'return' → logprob: -5.692629337310791

Token 465: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25746950507164
    2. ' if' → logprob: -1.8824695348739624
    3. 'if' → logprob: -3.757469415664673
    4. '
' → logprob: -4.882469654083252
    5. 'max' → logprob: -5.257469654083252
    6. ')' → logprob: -5.382469654083252
    7. '   ' → logprob: -5.507469654083252
    8. '```' → logprob: -5.507469654083252
    9. '#' (adapté à ' #') → logprob: -5.757469654083252
    10. '        
' → logprob: -5.882469654083252

Token 466: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3797602355480194
    2. ' if' → logprob: -2.254760265350342
    3. 'max' → logprob: -2.879760265350342
    4. 'return' → logprob: -3.504760265350342
    5. 'if' → logprob: -3.629760265350342
    6. 'n' → logprob: -3.754760265350342
    7. ' max' → logprob: -3.879760265350342
    8. ' return' → logprob: -4.504760265350342
    9. ' n' → logprob: -5.004760265350342
    10. ' c' → logprob: -5.254760265350342

Token 467: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8373032212257385
    2. ' return' → logprob: -1.2123031616210938
    3. 'return' → logprob: -1.4623031616210938
    4. ' n' → logprob: -4.837303161621094
    5. ' if' → logprob: -5.212303161621094
    6. 'mod' → logprob: -5.837303161621094
    7. '#' → logprob: -5.962303161621094
    8. ' mod' → logprob: -5.962303161621094
    9. 'def' → logprob: -6.212303161621094
    10. 'n' → logprob: -6.212303161621094

Token 468: ' we' (ID: 581)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7962056994438171
    2. '       ' → logprob: -1.921205759048462
    3. ' n' → logprob: -2.171205759048462
    4. ' return' → logprob: -3.046205759048462
    5. ' self' → logprob: -3.421205759048462
    6. ' ways' → logprob: -3.671205759048462
    7. 'return' → logprob: -3.921205759048462
    8. ' if' → logprob: -4.046205520629883
    9. ' result' → logprob: -4.046205520629883
    10. ' max' → logprob: -4.046205520629883

Token 469: ' have' (ID: 679)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0611836910247803
    2. 'def' → logprob: -1.4361836910247803
    3. 'can' → logprob: -1.9361836910247803
    4. '       ' → logprob: -2.8111836910247803
    5. '   ' → logprob: -3.6861836910247803
    6. ' should' → logprob: -3.6861836910247803
    7. 'should' → logprob: -3.8111836910247803
    8. 'return' → logprob: -3.8111836910247803
    9. 'need' → logprob: -3.8111836910247803
    10. ' need' → logprob: -3.9361836910247803

Token 470: ' to' (ID: 316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8795165419578552
    2. ' self' → logprob: -1.3795166015625
    3. ' (' → logprob: -2.0045166015625
    4. '(self' → logprob: -2.0045166015625
    5. '(' → logprob: -4.1295166015625
    6. '   ' → logprob: -4.3795166015625
    7. '       ' → logprob: -4.7545166015625
    8. 'n' → logprob: -5.3795166015625
    9. '1' → logprob: -5.5045166015625
    10. ' min' → logprob: -6.0045166015625

Token 471: ' count' (ID: 3605)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.29348427057266235
    2. 'handle' → logprob: -2.0434842109680176
    3. 'count' → logprob: -2.9184842109680176
    4. 'return' → logprob: -3.1684842109680176
    5. 'calculate' → logprob: -4.793484210968018
    6. 'implement' → logprob: -5.168484210968018
    7. 'mod' → logprob: -5.293484210968018
    8. 'compute' → logprob: -6.043484210968018
    9. ' handle' → logprob: -6.418484210968018
    10. ' consider' → logprob: -6.918484210968018

Token 472: ' ways' (ID: 6984)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.506980299949646
    2. '1' → logprob: -1.756980299949646
    3. 'min' → logprob: -1.756980299949646
    4. 'self' → logprob: -2.3819804191589355
    5. '((' → logprob: -2.6319804191589355
    6. 'pow' → logprob: -2.8819804191589355
    7. ' min' → logprob: -3.0069804191589355
    8. ' (' → logprob: -3.1319804191589355
    9. ' ' → logprob: -3.3819804191589355
    10. '(self' → logprob: -3.5069804191589355

Token 473: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34062305092811584
    2. ' =' → logprob: -2.090623140335083
    3. '=' → logprob: -2.590623140335083
    4. ' to' → logprob: -3.215623140335083
    5. ':' → logprob: -4.340622901916504
    6. '   ' → logprob: -4.715622901916504
    7. 'def' → logprob: -4.840622901916504
    8. '
' → logprob: -5.715622901916504
    9. '(' → logprob: -6.465622901916504
    10. 'to' → logprob: -6.465622901916504

Token 474: ' split' (ID: 12648)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6859573721885681
    2. 'dp' → logprob: -2.560957431793213
    3. 'divide' → logprob: -2.935957431793213
    4. '0' → logprob: -3.185957431793213
    5. 'self' → logprob: -3.185957431793213
    6. 'split' → logprob: -3.310957431793213
    7. 'calculate' → logprob: -3.810957431793213
    8. 'press' → logprob: -3.935957431793213
    9. 'decode' → logprob: -4.060957431793213
    10. 'compute' → logprob: -4.060957431793213

Token 475: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27077123522758484
    2. ' into' → logprob: -2.6457712650299072
    3. '(self' → logprob: -3.3957712650299072
    4. ' self' → logprob: -3.3957712650299072
    5. 'the' → logprob: -3.8957712650299072
    6. ' the' → logprob: -4.145771026611328
    7. 'into' → logprob: -4.270771026611328
    8. '   ' → logprob: -4.270771026611328
    9. '       ' → logprob: -5.270771026611328
    10. '```' → logprob: -5.645771026611328

Token 476: ' into' (ID: 1511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2183946371078491
    2. '=' → logprob: -2.0933947563171387
    3. ' into' → logprob: -2.2183947563171387
    4. '   ' → logprob: -2.8433947563171387
    5. ' ' → logprob: -2.9683947563171387
    6. ':' → logprob: -2.9683947563171387
    7. '_' → logprob: -3.2183947563171387
    8. ',' → logprob: -3.4683947563171387
    9. '+' → logprob: -3.5933947563171387
    10. ' =' → logprob: -3.8433947563171387

Token 477: ' multiples' (ID: 70720)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8233489990234375
    2. 'self' → logprob: -1.8233489990234375
    3. 'parts' → logprob: -2.3233489990234375
    4. 'segments' → logprob: -2.3233489990234375
    5. '1' → logprob: -2.4483489990234375
    6. 'groups' → logprob: -2.5733489990234375
    7. ' parts' → logprob: -3.0733489990234375
    8. 'press' → logprob: -3.6983489990234375
    9. ' [' → logprob: -3.9483489990234375
    10. ' groups' → logprob: -4.0733489990234375

Token 478: ' of' (ID: 328)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8355754613876343
    2. '+' → logprob: -1.8355754613876343
    3. 'import' → logprob: -2.210575580596924
    4. '       ' → logprob: -2.210575580596924
    5. '   ' → logprob: -2.710575580596924
    6. ' of' → logprob: -4.335575580596924
    7. ')' → logprob: -4.585575580596924
    8. '=' → logprob: -4.710575580596924
    9. '    ' → logprob: -4.710575580596924
    10. ' *' → logprob: -4.835575580596924

Token 479: ' presses' (ID: 102313)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1538318395614624
    2. ' self' → logprob: -2.778831958770752
    3. '1' → logprob: -3.278831958770752
    4. 'char' → logprob: -3.403831958770752
    5. ' char' → logprob: -5.653831958770752
    6. 'the' → logprob: -6.278831958770752
    7. ' ' → logprob: -6.528831958770752
    8. ' the' → logprob: -6.653831958770752
    9. 'c' → logprob: -7.278831958770752
    10. '[self' → logprob: -9.153831481933594

Token 480: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6611322164535522
    2. ' ' → logprob: -1.9111322164535522
    3. '       ' → logprob: -2.411132335662842
    4. '   ' → logprob: -2.661132335662842
    5. ' +' → logprob: -2.786132335662842
    6. ' =' → logprob: -2.911132335662842
    7. 'def' → logprob: -2.911132335662842
    8. 's' → logprob: -3.411132335662842
    9. ' if' → logprob: -3.536132335662842
    10. ')' → logprob: -3.536132335662842

Token 481: ' represent' (ID: 5188)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6675205826759338
    2. 'are' → logprob: -1.917520523071289
    3. '<=' → logprob: -2.542520523071289
    4. 'represent' → logprob: -2.792520523071289
    5. ' correspond' → logprob: -3.667520523071289
    6. ' can' → logprob: -3.917520523071289
    7. ' represent' → logprob: -3.917520523071289
    8. ' sum' → logprob: -4.042520523071289
    9. 'do' → logprob: -4.042520523071289
    10. ' map' → logprob: -4.167520523071289

Token 482: ' chars' (ID: 47991)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.098210096359253
    2. 'the' → logprob: -2.223210096359253
    3. '1' → logprob: -2.348210096359253
    4. ' one' → logprob: -2.348210096359253
    5. ' self' → logprob: -2.348210096359253
    6. 'one' → logprob: -2.848210096359253
    7. ' the' → logprob: -3.098210096359253
    8. 'a' → logprob: -3.223210096359253
    9. ' a' → logprob: -3.598210096359253
    10. ' ' → logprob: -3.598210096359253

Token 483: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5872908234596252
    2. ' %' → logprob: -2.2122907638549805
    3. '   ' → logprob: -2.3372907638549805
    4. 'def' → logprob: -3.0872907638549805
    5. ' =' → logprob: -3.4622907638549805
    6. '
' → logprob: -3.5872907638549805
    7. ' if' → logprob: -3.5872907638549805
    8. '(self' → logprob: -4.4622907638549805
    9. 'return' → logprob: -4.5872907638549805
    10. '%' → logprob: -4.5872907638549805

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058152977377176285
    2. ')' → logprob: -4.30815315246582
    3. ' ' → logprob: -4.30815315246582
    4. '   ' → logprob: -5.30815315246582
    5. '    ' → logprob: -5.68315315246582
    6. '        ' → logprob: -5.93315315246582
    7. 'n' → logprob: -6.05815315246582
    8. '1' → logprob: -6.05815315246582
    9. ' 
' → logprob: -6.05815315246582
    10. ' if' → logprob: -6.55815315246582

Token 485: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7310994267463684
    2. ' if' → logprob: -1.2310993671417236
    3. 'result' → logprob: -3.6060993671417236
    4. 'if' → logprob: -3.6060993671417236
    5. ' result' → logprob: -3.6060993671417236
    6. 'n' → logprob: -3.8560993671417236
    7. ' n' → logprob: -3.9810993671417236
    8. ' max' → logprob: -4.106099605560303
    9. ' c' → logprob: -4.356099605560303
    10. ' ways' → logprob: -4.481099605560303

Token 486: ' Each' (ID: 11555)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2852733135223389
    2. 'c' → logprob: -1.5352733135223389
    3. ' c' → logprob: -1.5352733135223389
    4. '       ' → logprob: -2.160273313522339
    5. 'n' → logprob: -3.035273313522339
    6. ' max' → logprob: -3.410273313522339
    7. 'max' → logprob: -3.535273313522339
    8. 'if' → logprob: -3.785273313522339
    9. '   ' → logprob: -4.160273551940918
    10. '```' → logprob: -5.035273551940918

Token 487: ' character' (ID: 5855)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5814107060432434
    2. 'press' → logprob: -2.3314106464385986
    3. ' press' → logprob: -2.7064106464385986
    4. ' =' → logprob: -3.0814106464385986
    5. 'pressed' → logprob: -3.3314106464385986
    6. '=' → logprob: -3.4564106464385986
    7. '   ' → logprob: -3.8314106464385986
    8. '_' → logprob: -4.206410884857178
    9. '_press' → logprob: -4.206410884857178
    10. 'def' → logprob: -4.456410884857178

Token 488: ' corresponds' (ID: 66938)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.851742684841156
    2. ' =' → logprob: -1.3517427444458008
    3. 'press' → logprob: -2.476742744445801
    4. '=' → logprob: -3.476742744445801
    5. 'pressed' → logprob: -3.726742744445801
    6. 'can' → logprob: -3.726742744445801
    7. ' is' → logprob: -3.726742744445801
    8. '_count' → logprob: -4.226742744445801
    9. ''s' → logprob: -4.351742744445801
    10. ' pressed' → logprob: -4.476742744445801

Token 489: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04447183012962341
    2. 'to' → logprob: -3.2944717407226562
    3. '       ' → logprob: -5.169471740722656
    4. ' =' → logprob: -7.919471740722656
    5. '=' → logprob: -9.044471740722656
    6. '   ' → logprob: -9.419471740722656
    7. '_to' → logprob: -9.919471740722656
    8. '```' → logprob: -10.919471740722656
    9. ' only' → logprob: -11.169471740722656
    10. '        ' → logprob: -11.419471740722656

Token 490: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6225398182868958
    2. '1' → logprob: -1.622539758682251
    3. ' self' → logprob: -2.747539758682251
    4. ' ' → logprob: -3.122539758682251
    5. ' a' → logprob: -3.372539758682251
    6. 'a' → logprob: -3.497539758682251
    7. 'k' → logprob: -3.997539758682251
    8. ' presses' → logprob: -4.37253999710083
    9. ' at' → logprob: -4.62253999710083
    10. ' any' → logprob: -5.37253999710083

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36639168858528137
    2. 'self' → logprob: -1.366391658782959
    3. '(' → logprob: -4.366391658782959
    4. '(self' → logprob: -4.741391658782959
    5. 'a' → logprob: -5.366391658782959
    6. '((' → logprob: -5.491391658782959
    7. 'at' → logprob: -5.491391658782959
    8. 'k' → logprob: -5.866391658782959
    9. ' ' → logprob: -5.991391658782959
    10. ' self' → logprob: -6.491391658782959

Token 492: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25922438502311707
    2. '+' → logprob: -2.2592244148254395
    3. ')' → logprob: -2.3842244148254395
    4. ' ' → logprob: -5.1342244148254395
    5. ' *' → logprob: -5.6342244148254395
    6. '<|end|>' → logprob: -5.6342244148254395
    7. ' )' → logprob: -6.3842244148254395
    8. '    ' → logprob: -6.3842244148254395
    9. '   ' → logprob: -6.5092244148254395
    10. '  ' → logprob: -6.6342244148254395

Token 493: ' '' (ID: 461)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004669476300477982
    2. ' self' → logprob: -5.379669666290283
    3. '       ' → logprob: -10.879669189453125
    4. '   ' → logprob: -11.879669189453125
    5. '```' → logprob: -12.004669189453125
    6. '(self' → logprob: -12.379669189453125
    7. ' ' → logprob: -12.504669189453125
    8. 'char' → logprob: -13.254669189453125
    9. '[self' → logprob: -13.379669189453125
    10. '`' → logprob: -13.504669189453125

Token 494: 'char' (ID: 3257)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008813306922093034
    2. ' self' → logprob: -7.125881195068359
    3. '       ' → logprob: -9.75088119506836
    4. '(self' → logprob: -12.00088119506836
    5. '   ' → logprob: -12.75088119506836
    6. '```' → logprob: -12.87588119506836
    7. 'char' → logprob: -13.12588119506836
    8. '	self' → logprob: -14.25088119506836
    9. '`' → logprob: -14.25088119506836
    10. ' ' → logprob: -14.50088119506836

Token 495: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3544423381972592e-05
    2. '       ' → logprob: -11.75001335144043
    3. '_' → logprob: -13.12501335144043
    4. '   ' → logprob: -13.62501335144043
    5. ' _' → logprob: -13.75001335144043
    6. '_counts' → logprob: -15.00001335144043
    7. 'count' → logprob: -15.12501335144043
    8. 'self' → logprob: -16.25001335144043
    9. ' count' → logprob: -16.25001335144043
    10. '\' → logprob: -16.37501335144043

Token 496: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017123052384704351
    2. ')' → logprob: -7.626712322235107
    3. ''
' → logprob: -8.50171184539795
    4. ')'' → logprob: -9.00171184539795
    5. '')' → logprob: -9.25171184539795
    6. 'token' → logprob: -9.37671184539795
    7. '_tokens' → logprob: -9.50171184539795
    8. ''.' → logprob: -9.50171184539795
    9. '`' → logprob: -9.62671184539795
    10. '```' → logprob: -9.87671184539795

Token 497: ' presses' (ID: 102313)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6934765577316284
    2. ' +' → logprob: -2.068476676940918
    3. '
' → logprob: -2.443476676940918
    4. '.' → logprob: -2.818476676940918
    5. '_' → logprob: -2.943476676940918
    6. '   ' → logprob: -2.943476676940918
    7. ')' → logprob: -2.943476676940918
    8. '+' → logprob: -2.943476676940918
    9. ',' → logprob: -3.193476676940918
    10. ' ' → logprob: -3.318476676940918

Token 498: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23349188268184662
    2. '
' → logprob: -2.483491897583008
    3. '   ' → logprob: -3.358491897583008
    4. 'def' → logprob: -3.608491897583008
    5. ',' → logprob: -3.983491897583008
    6. ':' → logprob: -5.108491897583008
    7. ' if' → logprob: -5.483491897583008
    8. '        
' → logprob: -5.608491897583008
    9. '
' → logprob: -6.108491897583008
    10. '.' → logprob: -6.108491897583008

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08771734684705734
    2. '   ' → logprob: -3.337717294692993
    3. '\n' → logprob: -4.337717533111572
    4. '
' → logprob: -5.087717533111572
    5. '<|end|>' → logprob: -5.337717533111572
    6. ' ' → logprob: -5.587717533111572
    7. '        
' → logprob: -5.837717533111572
    8. '  
' → logprob: -6.087717533111572
    9. ' 
' → logprob: -6.212717533111572
    10. '\' → logprob: -6.337717533111572

Token 500: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6898240447044373
    2. '       ' → logprob: -1.064824104309082
    3. ' dp' → logprob: -2.189824104309082
    4. ' if' → logprob: -4.814824104309082
    5. 'if' → logprob: -5.064824104309082
    6. 'n' → logprob: -5.189824104309082
    7. 'max' → logprob: -5.189824104309082
    8. 'ways' → logprob: -5.439824104309082
    9. 'result' → logprob: -6.439824104309082
    10. ' max' → logprob: -6.564824104309082

Token 501: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28781774640083313
    2. ' dp' → logprob: -2.2878177165985107
    3. '       ' → logprob: -2.4128177165985107
    4. ' if' → logprob: -4.16281795501709
    5. 'def' → logprob: -4.78781795501709
    6. 'max' → logprob: -5.03781795501709
    7. 'if' → logprob: -5.03781795501709
    8. ' max' → logprob: -5.16281795501709
    9. 'result' → logprob: -5.66281795501709
    10. 'n' → logprob: -6.28781795501709

Token 502: ' ways' (ID: 6984)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7310073971748352
    2. ' dp' → logprob: -1.1060073375701904
    3. '       ' → logprob: -2.2310073375701904
    4. ' ways' → logprob: -3.4810073375701904
    5. 'result' → logprob: -4.6060075759887695
    6. ' if' → logprob: -4.7310075759887695
    7. 'def' → logprob: -4.9810075759887695
    8. 'if' → logprob: -5.3560075759887695
    9. 'ways' → logprob: -5.3560075759887695
    10. ' result' → logprob: -5.6060075759887695

Token 503: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38886716961860657
    2. '=' → logprob: -1.1388671398162842
    3. 'def' → logprob: -6.638867378234863
    4. 'import' → logprob: -8.263867378234863
    5. '   ' → logprob: -8.513867378234863
    6. 'return' → logprob: -10.763867378234863
    7. '_count' → logprob: -10.763867378234863
    8. 's' → logprob: -10.888867378234863
    9. 'from' → logprob: -10.888867378234863
    10. ',' → logprob: -10.888867378234863

Token 504: ' split' (ID: 12648)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24008169770240784
    2. 'sum' → logprob: -2.865081787109375
    3. 'self' → logprob: -3.490081787109375
    4. ' count' → logprob: -3.490081787109375
    5. '1' → logprob: -4.240081787109375
    6. '0' → logprob: -4.365081787109375
    7. ' sum' → logprob: -4.490081787109375
    8. 'split' → logprob: -4.740081787109375
    9. 'length' → logprob: -4.865081787109375
    10. '(' → logprob: -5.490081787109375

Token 505: ' length' (ID: 5517)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0009089708328247
    2. '(self' → logprob: -1.3759089708328247
    3. '=' → logprob: -1.8759089708328247
    4. 'self' → logprob: -2.000908851623535
    5. '       ' → logprob: -3.375908851623535
    6. '   ' → logprob: -4.500908851623535
    7. ' self' → logprob: -5.000908851623535
    8. 'length' → logprob: -5.000908851623535
    9. '(n' → logprob: -5.125908851623535
    10. 'def' → logprob: -5.375908851623535

Token 506: ' into' (ID: 1511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46622714400291443
    2. '=' → logprob: -1.0912271738052368
    3. '       ' → logprob: -4.216227054595947
    4. '   ' → logprob: -5.091227054595947
    5. ' into' → logprob: -5.466227054595947
    6. '(self' → logprob: -6.341227054595947
    7. 'import' → logprob: -6.591227054595947
    8. ',' → logprob: -6.591227054595947
    9. 'def' → logprob: -6.841227054595947
    10. ' is' → logprob: -6.966227054595947

Token 507: ' sequence' (ID: 16281)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3927401304244995
    2. 'parts' → logprob: -2.267740249633789
    3. 's' → logprob: -2.892740249633789
    4. 'numbers' → logprob: -3.392740249633789
    5. ' parts' → logprob: -4.142740249633789
    6. 'self' → logprob: -4.142740249633789
    7. 'inte' → logprob: -4.267740249633789
    8. 'a' → logprob: -4.642740249633789
    9. 'segments' → logprob: -4.767740249633789
    10. 'sum' → logprob: -5.017740249633789

Token 508: ' with' (ID: 483)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5547339916229248
    2. ' =' → logprob: -1.6797339916229248
    3. 'of' → logprob: -2.429733991622925
    4. 'from' → logprob: -2.804733991622925
    5. '       ' → logprob: -3.679733991622925
    6. ' from' → logprob: -4.429734230041504
    7. 's' → logprob: -4.804734230041504
    8. '[' → logprob: -5.054734230041504
    9. '=' → logprob: -5.054734230041504
    10. 'tokens' → logprob: -5.304734230041504

Token 509: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.49131280183792114
    2. 'elements' → logprob: -1.7413127422332764
    3. 'each' → logprob: -1.7413127422332764
    4. 'pieces' → logprob: -4.2413129806518555
    5. 'press' → logprob: -5.3663129806518555
    6. 'length' → logprob: -5.6163129806518555
    7. 'k' → logprob: -5.9913129806518555
    8. 'terms' → logprob: -6.2413129806518555
    9. '1' → logprob: -6.4913129806518555
    10. 'items' → logprob: -6.7413129806518555

Token 510: ' between' (ID: 2870)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6462408304214478
    2. ' in' → logprob: -1.8962408304214478
    3. 'in' → logprob: -2.146240711212158
    4. '<=' → logprob: -3.271240711212158
    5. ' of' → logprob: -3.396240711212158
    6. ' ranging' → logprob: -3.396240711212158
    7. ' from' → logprob: -3.646240711212158
    8. 'of' → logprob: -3.896240711212158
    9. '=' → logprob: -4.396240711212158
    10. ' <=' → logprob: -4.896240711212158

Token 511: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -16.000123977661133
    4. '`' → logprob: -16.125123977661133
    5. '   ' → logprob: -18.000123977661133
    6. '[' → logprob: -18.500123977661133
    7. 'from' → logprob: -20.875123977661133
    8. '
' → logprob: -21.000123977661133
    9. '``' → logprob: -21.375123977661133
    10. '(' → logprob: -21.375123977661133

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '`' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '[' → logprob: -20.500001907348633
    7. '' → logprob: -21.375001907348633
    8. '(' → logprob: -22.000001907348633
    9. 'from' → logprob: -22.625001907348633
    10. '[
' → logprob: -22.750001907348633

Token 513: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.576756477355957
    2. ' and' → logprob: -0.826756477355957
    3. ',' → logprob: -7.326756477355957
    4. '   ' → logprob: -10.076756477355957
    5. '```' → logprob: -10.076756477355957
    6. ' ,' → logprob: -10.451756477355957
    7. 'to' → logprob: -11.451756477355957
    8. ' to' → logprob: -11.826756477355957
    9. ' ' → logprob: -11.826756477355957
    10. '    ' → logprob: -11.951756477355957

Token 514: ' char' (ID: 1826)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002244938863441348
    2. ' self' → logprob: -6.12724494934082
    3. 'char' → logprob: -9.75224494934082
    4. '`' → logprob: -14.12724494934082
    5. '```' → logprob: -14.50224494934082
    6. ' char' → logprob: -15.75224494934082
    7. '   ' → logprob: -16.37724494934082
    8. '	self' → logprob: -16.62724494934082
    9. '
' → logprob: -17.50224494934082
    10. ' ' → logprob: -17.75224494934082

Token 515: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0022491037379950285
    2. '_mapping' → logprob: -6.127249240875244
    3. 'count' → logprob: -10.877248764038086
    4. '_group' → logprob: -11.752248764038086
    5. 'acters' → logprob: -12.002248764038086
    6. '\' → logprob: -12.377248764038086
    7. 'self' → logprob: -12.377248764038086
    8. '(self' → logprob: -12.377248764038086
    9. '_counts' → logprob: -12.627248764038086
    10. 'ount' → logprob: -12.627248764038086

Token 516: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9140159487724304
    2. ':' → logprob: -1.2890160083770752
    3. '
' → logprob: -2.039016008377075
    4. ',' → logprob: -2.664016008377075
    5. 'def' → logprob: -3.539016008377075
    6. ':
' → logprob: -4.539015769958496
    7. ' =' → logprob: -4.664015769958496
    8. '   ' → logprob: -4.664015769958496
    9. '=' → logprob: -4.789015769958496
    10. 's' → logprob: -4.914015769958496

Token 517: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.565110445022583
    2. '    ' → logprob: -1.815110445022583
    3. ' self' → logprob: -1.815110445022583
    4. ' def' → logprob: -1.815110445022583
    5. 'def' → logprob: -2.440110445022583
    6. '   ' → logprob: -2.565110445022583
    7. 'self' → logprob: -3.065110445022583
    8. ' dp' → logprob: -3.940110445022583
    9. ' ' → logprob: -4.815110206604004
    10. 'dp' → logprob: -4.940110206604004

Token 518: ' matters' (ID: 19854)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04984908550977707
    2. ')' → logprob: -4.424849033355713
    3. ',' → logprob: -5.049849033355713
    4. '=True' → logprob: -5.299849033355713
    5. ' =' → logprob: -5.424849033355713
    6. ':' → logprob: -5.799849033355713
    7. 'import' → logprob: -5.924849033355713
    8. '<|end|>' → logprob: -6.174849033355713
    9. '<|end|>' → logprob: -6.174849033355713
    10. 'ed' → logprob: -6.299849033355713

Token 519: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6608193516731262
    2. '       ' → logprob: -0.9108193516731262
    3. ',' → logprob: -4.0358195304870605
    4. ':' → logprob: -4.4108195304870605
    5. '   ' → logprob: -4.4108195304870605
    6. '
' → logprob: -4.4108195304870605
    7. 'def' → logprob: -4.5358195304870605
    8. '\n' → logprob: -5.7858195304870605
    9. '        
' → logprob: -6.1608195304870605
    10. '

' → logprob: -6.2858195304870605

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05248485505580902
    2. '
' → logprob: -3.8024847507476807
    3. 'dp' → logprob: -4.05248498916626
    4. '   ' → logprob: -5.05248498916626
    5. '        
' → logprob: -6.67748498916626
    6. 'def' → logprob: -6.92748498916626
    7. ' dp' → logprob: -7.42748498916626
    8. '_dp' → logprob: -7.55248498916626
    9. 'DP' → logprob: -8.177484512329102
    10. '\' → logprob: -8.302484512329102

Token 521: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03408452868461609
    2. '\' → logprob: -4.034084320068359
    3. '   ' → logprob: -4.784084320068359
    4. '\n' → logprob: -5.409084320068359
    5. '        
' → logprob: -7.659084320068359
    6. '```' → logprob: -7.784084320068359
    7. ')' → logprob: -8.03408432006836
    8. 'return' → logprob: -8.15908432006836
    9. '    ' → logprob: -8.65908432006836
    10. ' \' → logprob: -8.90908432006836

Token 522: ' This' (ID: 1328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5702430009841919
    2. '       ' → logprob: -1.195243000984192
    3. ' dp' → logprob: -2.4452428817749023
    4. 'def' → logprob: -3.4452428817749023
    5. '   ' → logprob: -5.570242881774902
    6. 'n' → logprob: -6.445242881774902
    7. ' if' → logprob: -6.445242881774902
    8. ' n' → logprob: -6.445242881774902
    9. 'return' → logprob: -6.945242881774902
    10. '\' → logprob: -7.070242881774902

Token 523: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3366091549396515
    2. ' def' → logprob: -2.086609125137329
    3. '   ' → logprob: -2.461609125137329
    4. ' is' → logprob: -3.711609125137329
    5. ' =' → logprob: -4.086609363555908
    6. 'import' → logprob: -4.836609363555908
    7. ':' → logprob: -5.336609363555908
    8. '_' → logprob: -5.711609363555908
    9. ' can' → logprob: -6.086609363555908
    10. '  ' → logprob: -6.086609363555908

Token 524: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4800077974796295
    2. 'self' → logprob: -1.6050077676773071
    3. ' (' → logprob: -3.2300078868865967
    4. ' sum' → logprob: -3.7300078868865967
    5. ' pow' → logprob: -4.355007648468018
    6. ' dp' → logprob: -4.355007648468018
    7. '1' → logprob: -4.480007648468018
    8. 'dp' → logprob: -4.480007648468018
    9. '(self' → logprob: -4.605007648468018
    10. ' ' → logprob: -4.855007648468018

Token 525: ' classic' (ID: 13686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2284950017929077
    2. 'dp' → logprob: -1.3534950017929077
    3. ' dynamic' → logprob: -1.7284950017929077
    4. ' classic' → logprob: -2.8534951210021973
    5. ' dp' → logprob: -3.1034951210021973
    6. 'DP' → logprob: -3.2284951210021973
    7. 'dynamic' → logprob: -3.2284951210021973
    8. ' def' → logprob: -4.103495121002197
    9. 'count' → logprob: -4.353495121002197
    10. ' standard' → logprob: -4.853495121002197

Token 526: ' integer' (ID: 16336)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.26837286353111267
    2. 'dynamic' → logprob: -2.5183727741241455
    3. 'dp' → logprob: -2.5183727741241455
    4. 'def' → logprob: -3.0183727741241455
    5. ' problem' → logprob: -4.393373012542725
    6. ' dp' → logprob: -5.643373012542725
    7. 'count' → logprob: -6.268373012542725
    8. ' integer' → logprob: -6.643373012542725
    9. ' def' → logprob: -6.893373012542725
    10. 'com' → logprob: -7.018373012542725

Token 527: ' composition' (ID: 27524)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.4979555010795593
    2. ' partition' → logprob: -1.122955560684204
    3. '_partition' → logprob: -2.747955560684204
    4. 'composition' → logprob: -6.747955322265625
    5. ' composition' → logprob: -6.872955322265625
    6. '_' → logprob: -7.872955322265625
    7. '_break' → logprob: -9.372955322265625
    8. ' _' → logprob: -9.997955322265625
    9. ' break' → logprob: -10.497955322265625
    10. 'break' → logprob: -10.497955322265625

Token 528: ' problem' (ID: 4792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.076615571975708
    2. '       ' → logprob: -1.326615571975708
    3. 'def' → logprob: -1.326615571975708
    4. ' of' → logprob: -3.701615571975708
    5. ':' → logprob: -3.826615571975708
    6. '
' → logprob: -3.951615571975708
    7. ',' → logprob: -4.451615333557129
    8. '.' → logprob: -5.201615333557129
    9. '\' → logprob: -5.326615333557129
    10. ' def' → logprob: -5.451615333557129

Token 529: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6075431108474731
    2. '   ' → logprob: -0.8575431108474731
    3. ' with' → logprob: -4.357542991638184
    4. ',' → logprob: -5.357542991638184
    5. ':' → logprob: -6.107542991638184
    6. '.' → logprob: -6.482542991638184
    7. ' (' → logprob: -6.482542991638184
    8. ' +' → logprob: -6.857542991638184
    9. ')' → logprob: -7.107542991638184
    10. ' if' → logprob: -7.607542991638184

Token 530: ' bounded' (ID: 136812)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.39109185338020325
    2. 'length' → logprob: -1.5160918235778809
    3. 'maximum' → logprob: -3.516091823577881
    4. 'max' → logprob: -3.641091823577881
    5. ' parts' → logprob: -4.391091823577881
    6. 'dp' → logprob: -5.266091823577881
    7. 'dynamic' → logprob: -5.391091823577881
    8. 'self' → logprob: -5.766091823577881
    9. 'allowed' → logprob: -5.766091823577881
    10. 'bounds' → logprob: -6.016091823577881

Token 531: ' part' (ID: 997)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.041750188916921616
    2. ' parts' → logprob: -3.541750192642212
    3. 'part' → logprob: -4.666749954223633
    4. '_parts' → logprob: -7.041749954223633
    5. '_part' → logprob: -7.541749954223633
    6. ' part' → logprob: -7.916749954223633
    7. '(parts' → logprob: -8.541749954223633
    8. 'length' → logprob: -8.666749954223633
    9. 'steps' → logprob: -9.166749954223633
    10. 'pieces' → logprob: -9.666749954223633

Token 532: ' size' (ID: 2349)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.3895125091075897
    2. 's' → logprob: -1.639512538909912
    3. 'size' → logprob: -2.514512538909912
    4. ' size' → logprob: -3.764512538909912
    5. '   ' → logprob: -4.889512538909912
    6. ' sizes' → logprob: -5.139512538909912
    7. 'sizes' → logprob: -5.514512538909912
    8. ' =' → logprob: -6.514512538909912
    9. '=' → logprob: -6.889512538909912
    10. '       ' → logprob: -7.139512538909912

Token 533: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06689620763063431
    2. '   ' → logprob: -2.9418962001800537
    3. ',' → logprob: -5.566896438598633
    4. ':' → logprob: -6.316896438598633
    5. '        
' → logprob: -6.691896438598633
    6. '
' → logprob: -6.816896438598633
    7. ' ' → logprob: -7.316896438598633
    8. 'def' → logprob: -7.691896438598633
    9. '.' → logprob: -7.816896438598633
    10. '\' → logprob: -7.941896438598633

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017224593088030815
    2. '   ' → logprob: -4.7672247886657715
    3. '
' → logprob: -4.8922247886657715
    4. 'def' → logprob: -7.1422247886657715
    5. '    
' → logprob: -9.142224311828613
    6. '        
' → logprob: -9.642224311828613
    7. 'dp' → logprob: -10.517224311828613
    8. '```' → logprob: -11.017224311828613
    9. '  
' → logprob: -11.267224311828613
    10. ' 
' → logprob: -12.267224311828613

Token 535: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00797733012586832
    2. 'if' → logprob: -5.132977485656738
    3. '       ' → logprob: -6.882977485656738
    4. '   ' → logprob: -7.507977485656738
    5. 'def' → logprob: -8.507977485656738
    6. 'ways' → logprob: -8.882977485656738
    7. ' dp' → logprob: -9.382977485656738
    8. 'max' → logprob: -10.757977485656738
    9. ' if' → logprob: -12.007977485656738
    10. 'from' → logprob: -12.132977485656738

Token 536: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02148473635315895
    2. '       ' → logprob: -4.521484851837158
    3. 'if' → logprob: -5.146484851837158
    4. 'def' → logprob: -6.146484851837158
    5. ' dp' → logprob: -7.021484851837158
    6. 'max' → logprob: -7.021484851837158
    7. 'ways' → logprob: -7.896484851837158
    8. '   ' → logprob: -9.021484375
    9. ' if' → logprob: -9.396484375
    10. ' ways' → logprob: -10.896484375

Token 537: ' use' (ID: 1199)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32249537110328674
    2. ' dp' → logprob: -1.5724953413009644
    3. 'def' → logprob: -2.822495460510254
    4. '_dp' → logprob: -5.947495460510254
    5. '       ' → logprob: -6.447495460510254
    6. '   ' → logprob: -6.822495460510254
    7. ' def' → logprob: -6.947495460510254
    8. ' ways' → logprob: -6.947495460510254
    9. 'ways' → logprob: -7.947495460510254
    10. 'n' → logprob: -8.697495460510254

Token 538: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10624315589666367
    2. 'self' → logprob: -2.606243133544922
    3. ' dp' → logprob: -4.481243133544922
    4. 'dynamic' → logprob: -5.481243133544922
    5. ' self' → logprob: -5.981243133544922
    6. '1' → logprob: -6.106243133544922
    7. '(dp' → logprob: -6.106243133544922
    8. ' dynamic' → logprob: -6.481243133544922
    9. 'min' → logprob: -7.731243133544922
    10. 'pow' → logprob: -7.856243133544922

Token 539: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34569627046585083
    2. ' dp' → logprob: -1.845696210861206
    3. '       ' → logprob: -2.220696210861206
    4. '(dp' → logprob: -4.970696449279785
    5. '_dp' → logprob: -5.720696449279785
    6. ' =' → logprob: -5.720696449279785
    7. 'def' → logprob: -5.845696449279785
    8. ':' → logprob: -6.095696449279785
    9. '
' → logprob: -6.095696449279785
    10. '   ' → logprob: -6.345696449279785

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017722569406032562
    2. 'dp' → logprob: -4.5177226066589355
    3. ' dp' → logprob: -5.0177226066589355
    4. 'n' → logprob: -11.517722129821777
    5. ' n' → logprob: -12.142722129821777
    6. '_dp' → logprob: -12.142722129821777
    7. '
' → logprob: -12.892722129821777
    8. '```' → logprob: -13.142722129821777
    9. '   ' → logprob: -13.517722129821777
    10. '	dp' → logprob: -13.517722129821777

Token 541: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02476801909506321
    2. '       ' → logprob: -4.024767875671387
    3. ' dp' → logprob: -5.024767875671387
    4. ' ways' → logprob: -11.649767875671387
    5. '   ' → logprob: -11.899767875671387
    6. 'ways' → logprob: -12.149767875671387
    7. '	dp' → logprob: -13.774767875671387
    8. 'n' → logprob: -14.399767875671387
    9. '_dp' → logprob: -15.524767875671387
    10. 'def' → logprob: -15.899767875671387

Token 542: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.033287737518548965
    2. ' dp' → logprob: -3.533287763595581
    3. '       ' → logprob: -5.658287525177002
    4. 'n' → logprob: -11.15828800201416
    5. ' ways' → logprob: -11.15828800201416
    6. 'def' → logprob: -12.65828800201416
    7. 'ways' → logprob: -12.65828800201416
    8. ' n' → logprob: -13.15828800201416
    9. '   ' → logprob: -13.65828800201416
    10. '```' → logprob: -13.78328800201416

Token 543: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003638796042650938
    2. '=' → logprob: -5.628638744354248
    3. '[' → logprob: -11.378639221191406
    4. '_' → logprob: -11.378639221191406
    5. '=[' → logprob: -11.753639221191406
    6. ' ' → logprob: -13.003639221191406
    7. ' =[' → logprob: -13.503639221191406
    8. '   ' → logprob: -13.628639221191406
    9. 's' → logprob: -14.378639221191406
    10. '```' → logprob: -14.503639221191406

Token 544: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04999186843633652
    2. '[i' → logprob: -3.6749918460845947
    3. ']=' → logprob: -4.424992084503174
    4. ' ]' → logprob: -5.299992084503174
    5. ' =' → logprob: -5.674992084503174
    6. '[' → logprob: -6.549992084503174
    7. '=' → logprob: -7.799992084503174
    8. '       ' → logprob: -8.049991607666016
    9. '   ' → logprob: -8.174991607666016
    10. '][' → logprob: -8.424991607666016

Token 545: ' number' (ID: 2086)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38480255007743835
    2. '[' → logprob: -1.3848025798797607
    3. ' =' → logprob: -3.2598025798797607
    4. ' i' → logprob: -4.259802341461182
    5. '=' → logprob: -5.759802341461182
    6. '0' → logprob: -5.759802341461182
    7. ' ' → logprob: -5.759802341461182
    8. '[i' → logprob: -6.009802341461182
    9. ' int' → logprob: -6.759802341461182
    10. '[int' → logprob: -7.009802341461182

Token 546: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33153387904167175
    2. '[' → logprob: -1.9565339088439941
    3. 'of' → logprob: -3.081533908843994
    4. ' =' → logprob: -3.831533908843994
    5. ' of' → logprob: -3.831533908843994
    6. '_tokens' → logprob: -4.081533908843994
    7. '_of' → logprob: -4.331533908843994
    8. '_' → logprob: -4.831533908843994
    9. ')' → logprob: -5.706533908843994
    10. '[i' → logprob: -6.456533908843994

Token 547: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.023354606702923775
    2. ' ways' → logprob: -3.7733545303344727
    3. '[i' → logprob: -10.398354530334473
    4. 'i' → logprob: -11.023354530334473
    5. ' i' → logprob: -11.148354530334473
    6. ' ' → logprob: -11.273354530334473
    7. '```' → logprob: -11.523354530334473
    8. '[' → logprob: -12.023354530334473
    9. '   ' → logprob: -12.398354530334473
    10. 'possible' → logprob: -12.523354530334473

Token 548: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8918095827102661
    2. ' =' → logprob: -1.2668095827102661
    3. '[i' → logprob: -1.7668095827102661
    4. ' to' → logprob: -2.7668094635009766
    5. '[' → logprob: -3.1418094635009766
    6. '=' → logprob: -3.8918094635009766
    7. 'to' → logprob: -5.766809463500977
    8. ')' → logprob: -6.766809463500977
    9. '   ' → logprob: -6.766809463500977
    10. '
' → logprob: -7.516809463500977

Token 549: ' de' (ID: 334)
  Prédit: 'compose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compose' → logprob: -1.0684672594070435
    2. 'split' → logprob: -1.3184672594070435
    3. 'form' → logprob: -2.068467140197754
    4. 'write' → logprob: -2.443467140197754
    5. 'reach' → logprob: -2.568467140197754
    6. 'arr' → logprob: -3.193467140197754
    7. 'ach' → logprob: -4.568467140197754
    8. 'decode' → logprob: -4.693467140197754
    9. 'partition' → logprob: -4.818467140197754
    10. 'build' → logprob: -5.568467140197754

Token 550: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22561107575893402
    2. 'fine' → logprob: -1.7256110906600952
    3. 'code' → logprob: -4.100611209869385
    4. 'compose' → logprob: -5.225611209869385
    5. 'fi' → logprob: -7.225611209869385
    6. 'c' → logprob: -7.475611209869385
    7. 'p' → logprob: -7.725611209869385
    8. 'finite' → logprob: -10.225610733032227
    9. 'fin' → logprob: -10.350610733032227
    10. '#' → logprob: -10.725610733032227

Token 551: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.48290345072746277
    2. '[i' → logprob: -1.1079034805297852
    3. ' to' → logprob: -3.607903480529785
    4. 'i' → logprob: -4.732903480529785
    5. ' the' → logprob: -4.982903480529785
    6. '(i' → logprob: -6.732903480529785
    7. ' =' → logprob: -6.857903480529785
    8. '       ' → logprob: -6.857903480529785
    9. 'dp' → logprob: -6.982903480529785
    10. ' dp' → logprob: -7.232903480529785

Token 552: ' presses' (ID: 102313)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.061226487159729
    2. '[i' → logprob: -1.311226487159729
    3. ' =' → logprob: -1.936226487159729
    4. ' +' → logprob: -2.5612263679504395
    5. '       ' → logprob: -2.6862263679504395
    6. '=' → logprob: -3.0612263679504395
    7. ')' → logprob: -5.1862263679504395
    8. 's' → logprob: -5.3112263679504395
    9. ']' → logprob: -5.5612263679504395
    10. '[' → logprob: -5.5612263679504395

Token 553: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17114132642745972
    2. '
' → logprob: -2.1711413860321045
    3. ' =' → logprob: -3.9211413860321045
    4. '[' → logprob: -4.796141147613525
    5. '=' → logprob: -5.546141147613525
    6. '[i' → logprob: -5.546141147613525
    7. '   ' → logprob: -6.171141147613525
    8. '        
' → logprob: -7.046141147613525
    9. ',' → logprob: -7.171141147613525
    10. '```' → logprob: -7.296141147613525

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006340435356833041
    2. '   ' → logprob: -8.62563419342041
    3. '\n' → logprob: -8.75063419342041
    4. '        
' → logprob: -10.00063419342041
    5. '
' → logprob: -10.25063419342041
    6. 'dp' → logprob: -10.25063419342041
    7. '\' → logprob: -10.62563419342041
    8. '	' → logprob: -10.75063419342041
    9. ',' → logprob: -10.75063419342041
    10. 'n' → logprob: -11.25063419342041

Token 555: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012618540786206722
    2. '\n' → logprob: -4.887618541717529
    3. '
' → logprob: -5.887618541717529
    4. 'dp' → logprob: -6.637618541717529
    5. '   ' → logprob: -8.137618064880371
    6. ' dp' → logprob: -8.637618064880371
    7. '\' → logprob: -8.762618064880371
    8. '        
' → logprob: -9.137618064880371
    9. '```' → logprob: -9.762618064880371
    10. 'n' → logprob: -10.887618064880371

Token 556: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07717403024435043
    2. 'dp' → logprob: -3.077173948287964
    3. ' dp' → logprob: -3.577173948287964
    4. '   ' → logprob: -9.702174186706543
    5. '```' → logprob: -9.827174186706543
    6. '\n' → logprob: -10.452174186706543
    7. '
' → logprob: -10.452174186706543
    8. '	dp' → logprob: -11.327174186706543
    9. '_dp' → logprob: -11.577174186706543
    10. '        ' → logprob: -11.952174186706543

Token 557: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013850470073521137
    2. '=' → logprob: -4.388850688934326
    3. '[' → logprob: -7.013850688934326
    4. '=[' → logprob: -8.013850212097168
    5. ' =[' → logprob: -9.388850212097168
    6. ' ' → logprob: -12.138850212097168
    7. '```' → logprob: -12.263850212097168
    8. '_' → logprob: -12.388850212097168
    9. ' [' → logprob: -12.513850212097168
    10. '   ' → logprob: -13.263850212097168

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11782858520746231
    2. 'self' → logprob: -2.742828607559204
    3. '=' → logprob: -4.117828369140625
    4. 'i' → logprob: -4.242828369140625
    5. ' =' → logprob: -4.992828369140625
    6. ']' → logprob: -5.367828369140625
    7. '       ' → logprob: -6.867828369140625
    8. '   ' → logprob: -6.992828369140625
    9. 'length' → logprob: -6.992828369140625
    10. ' ' → logprob: -7.742828369140625

Token 559: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013109555002301931
    2. ']=' → logprob: -7.0013108253479
    3. ' ]' → logprob: -8.001311302185059
    4. '       ' → logprob: -10.251311302185059
    5. '[' → logprob: -11.376311302185059
    6. '   ' → logprob: -11.501311302185059
    7. ' =' → logprob: -12.751311302185059
    8. '=' → logprob: -13.001311302185059
    9. ']={' → logprob: -14.251311302185059
    10. ']+=' → logprob: -15.376311302185059

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. '   ' → logprob: -16.636871337890625
    4. '[' → logprob: -16.636871337890625
    5. ')' → logprob: -17.261871337890625
    6. ':' → logprob: -17.261871337890625
    7. '0' → logprob: -17.511871337890625
    8. '=
' → logprob: -17.511871337890625
    9. '1' → logprob: -17.761871337890625
    10. ',' → logprob: -18.011871337890625

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.500001907348633
    4. '{' → logprob: -18.625001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '۱' → logprob: -18.750001907348633
    7. '[' → logprob: -19.125001907348633
    8. '0' → logprob: -19.500001907348633
    9. '`' → logprob: -20.312501907348633
    10. '১' → logprob: -20.687501907348633

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '{' → logprob: -18.125
    4. '```' → logprob: -19.25
    5. '[' → logprob: -19.375
    6. '   ' → logprob: -20.0625
    7. '۱' → logprob: -20.25
    8. '0' → logprob: -20.5
    9. '১' → logprob: -20.8125
    10. '१' → logprob: -20.9375

Token 563: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1810321807861328
    2. '       ' → logprob: -1.8060321807861328
    3. '
' → logprob: -7.556032180786133
    4. '```' → logprob: -7.556032180786133
    5. '        
' → logprob: -9.806032180786133
    6. ',' → logprob: -10.056032180786133
    7. ',
' → logprob: -10.306032180786133
    8. '\n' → logprob: -10.431032180786133
    9. '   ' → logprob: -10.556032180786133
    10. '  
' → logprob: -11.556032180786133

Token 564: 'empty' (ID: 6857)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04967010021209717
    2. '1' → logprob: -3.5496702194213867
    3. ')
' → logprob: -4.049670219421387
    4. '       ' → logprob: -6.924670219421387
    5. '0' → logprob: -7.424670219421387
    6. 'def' → logprob: -8.299670219421387
    7. '
' → logprob: -9.049670219421387
    8. ' ' → logprob: -9.049670219421387
    9. ' )' → logprob: -9.924670219421387
    10. '   ' → logprob: -9.924670219421387

Token 565: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0653934478759766
    2. ')' → logprob: -1.1903934478759766
    3. ')
' → logprob: -1.9403934478759766
    4. '       ' → logprob: -2.0653934478759766
    5. '   ' → logprob: -3.9403934478759766
    6. '\n' → logprob: -4.190393447875977
    7. ' line' → logprob: -4.315393447875977
    8. '```' → logprob: -4.565393447875977
    9. 'dp' → logprob: -4.940393447875977
    10. '        
' → logprob: -6.190393447875977

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00497603602707386
    2. '
' → logprob: -5.379976272583008
    3. '```' → logprob: -8.504976272583008
    4. '\n' → logprob: -9.504976272583008
    5. '        
' → logprob: -10.754976272583008
    6. '   ' → logprob: -11.004976272583008
    7. '	' → logprob: -11.379976272583008
    8. '
' → logprob: -12.254976272583008
    9. '\' → logprob: -12.379976272583008
    10. ',' → logprob: -12.379976272583008

Token 567: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011273467913269997
    2. '
' → logprob: -4.511273384094238
    3. '```' → logprob: -9.511273384094238
    4. 'dp' → logprob: -9.761273384094238
    5. '   ' → logprob: -9.886273384094238
    6. '\n' → logprob: -11.011273384094238
    7. '        
' → logprob: -11.886273384094238
    8. '	' → logprob: -12.386273384094238
    9. '
' → logprob: -12.636273384094238
    10. 'n' → logprob: -13.386273384094238

Token 568: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46443548798561096
    2. '       ' → logprob: -1.4644354581832886
    3. ' dp' → logprob: -1.9644354581832886
    4. '```' → logprob: -10.839435577392578
    5. '_dp' → logprob: -10.839435577392578
    6. '   ' → logprob: -11.964435577392578
    7. '	dp' → logprob: -12.089435577392578
    8. 'def' → logprob: -12.214435577392578
    9. ' for' → logprob: -12.589435577392578
    10. '
' → logprob: -13.089435577392578

Token 569: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132845163345337
    2. 'i' → logprob: -1.3132845163345337
    3. '	i' → logprob: -11.063284873962402
    4. '   ' → logprob: -12.563284873962402
    5. '(i' → logprob: -13.813284873962402
    6. ' ' → logprob: -14.063284873962402
    7. '```' → logprob: -14.938284873962402
    8. '_i' → logprob: -15.313284873962402
    9. ' ' → logprob: -15.313284873962402
    10. '`' → logprob: -15.438284873962402

Token 570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03678280860185623
    2. 'in' → logprob: -3.411782741546631
    3. '=' → logprob: -6.536782741546631
    4. ' =' → logprob: -7.161782741546631
    5. '   ' → logprob: -7.536782741546631
    6. ' +=' → logprob: -8.911783218383789
    7. '1' → logprob: -9.911783218383789
    8. '+=' → logprob: -10.286783218383789
    9. 'from' → logprob: -10.661783218383789
    10. '       ' → logprob: -10.661783218383789

Token 571: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0160544291138649
    2. ' range' → logprob: -4.141054630279541
    3. '1' → logprob: -11.516054153442383
    4. '   ' → logprob: -12.391054153442383
    5. ' ' → logprob: -12.766054153442383
    6. '(range' → logprob: -14.516054153442383
    7. '  ' → logprob: -14.891054153442383
    8. '`' → logprob: -15.141054153442383
    9. 'in' → logprob: -15.266054153442383
    10. '    ' → logprob: -15.391054153442383

Token 572: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.464347173576243e-05
    2. ' range' → logprob: -10.37503433227539
    3. '1' → logprob: -12.62503433227539
    4. '   ' → logprob: -17.12503433227539
    5. '(range' → logprob: -17.62503433227539
    6. '[' → logprob: -17.87503433227539
    7. '`' → logprob: -18.50003433227539
    8. ' ' → logprob: -19.12503433227539
    9. '```' → logprob: -19.12503433227539
    10. '	range' → logprob: -20.12503433227539

Token 573: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9544515013694763
    2. '   ' → logprob: -1.329451560974121
    3. '       ' → logprob: -2.579451560974121
    4. 'to' → logprob: -2.704451560974121
    5. ':' → logprob: -2.829451560974121
    6. ',' → logprob: -2.829451560974121
    7. ' in' → logprob: -4.079451560974121
    8. ' ' → logprob: -4.204451560974121
    9. '..' → logprob: -4.204451560974121
    10. '
' → logprob: -4.454451560974121

Token 574: 'length' (ID: 7914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3652999699115753
    2. 'length' → logprob: -1.490299940109253
    3. ' self' → logprob: -3.115299940109253
    4. ' length' → logprob: -3.740299940109253
    5. 'i' → logprob: -4.740300178527832
    6. ' i' → logprob: -6.240300178527832
    7. '   ' → logprob: -6.615300178527832
    8. 'len' → logprob: -8.740300178527832
    9. 'n' → logprob: -8.865300178527832
    10. '       ' → logprob: -9.615300178527832

Token 575: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39173623919487
    2. ':' → logprob: -1.3917362689971924
    3. '       ' → logprob: -2.6417362689971924
    4. '+' → logprob: -6.516736030578613
    5. '           ' → logprob: -6.891736030578613
    6. '):
' → logprob: -7.766736030578613
    7. '=' → logprob: -7.766736030578613
    8. ',' → logprob: -8.016736030578613
    9. '
' → logprob: -8.641736030578613
    10. '   ' → logprob: -8.891736030578613

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008060562540777028
    2. '           ' → logprob: -7.250805854797363
    3. '        ' → logprob: -10.750805854797363
    4. '   ' → logprob: -10.750805854797363
    5. '	' → logprob: -11.500805854797363
    6. '```' → logprob: -11.500805854797363
    7. '               ' → logprob: -12.125805854797363
    8. '        
' → logprob: -12.500805854797363
    9. ' for' → logprob: -12.500805854797363
    10. '	   ' → logprob: -13.250805854797363

Token 577: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037204305408522487
    2. '           ' → logprob: -8.000371932983398
    3. '   ' → logprob: -11.625371932983398
    4. '        ' → logprob: -11.875371932983398
    5. 'dp' → logprob: -12.250371932983398
    6. ' for' → logprob: -12.500371932983398
    7. ' dp' → logprob: -12.875371932983398
    8. '```' → logprob: -13.375371932983398
    9. ',' → logprob: -13.750371932983398
    10. '	' → logprob: -13.875371932983398

Token 578: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013437025249004364
    2. '   ' → logprob: -5.638436794281006
    3. '\n' → logprob: -6.013436794281006
    4. ' dp' → logprob: -6.138436794281006
    5. '           ' → logprob: -6.513436794281006
    6. '        ' → logprob: -7.013436794281006
    7. 'dp' → logprob: -7.513436794281006
    8. '    ' → logprob: -8.013437271118164
    9. '```' → logprob: -8.013437271118164
    10. '\t' → logprob: -8.013437271118164

Token 579: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.1827062368392944
    2. '       ' → logprob: -1.9327062368392944
    3. ' range' → logprob: -2.057706356048584
    4. ' for' → logprob: -2.182706356048584
    5. 'range' → logprob: -2.307706356048584
    6. 'for' → logprob: -2.682706356048584
    7. ' dp' → logprob: -3.057706356048584
    8. '   ' → logprob: -3.557706356048584
    9. 'i' → logprob: -3.682706356048584
    10. ' i' → logprob: -4.682706356048584

Token 580: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006136707379482687
    2. '[' → logprob: -7.625613689422607
    3. ' =' → logprob: -9.75061321258545
    4. '```' → logprob: -10.75061321258545
    5. ' [' → logprob: -10.87561321258545
    6. '=[' → logprob: -12.00061321258545
    7. '=' → logprob: -12.62561321258545
    8. '   ' → logprob: -12.62561321258545
    9. '[j' → logprob: -12.87561321258545
    10. '[I' → logprob: -13.00061321258545

Token 581: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23456816375255585
    2. '[i' → logprob: -2.7345681190490723
    3. '[' → logprob: -2.9845681190490723
    4. '=' → logprob: -3.4845681190490723
    5. ']=' → logprob: -3.7345681190490723
    6. '       ' → logprob: -4.109568119049072
    7. ']+=' → logprob: -4.984568119049072
    8. '   ' → logprob: -5.109568119049072
    9. ' =' → logprob: -5.484568119049072
    10. '+=' → logprob: -6.484568119049072

Token 582: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23841127753257751
    2. '+=' → logprob: -2.3634111881256104
    3. '=' → logprob: -2.4884111881256104
    4. ' =' → logprob: -3.3634111881256104
    5. '       ' → logprob: -8.613410949707031
    6. '   ' → logprob: -9.488410949707031
    7. ']+=' → logprob: -9.988410949707031
    8. '```' → logprob: -11.613410949707031
    9. '[' → logprob: -11.863410949707031
    10. '
' → logprob: -12.363410949707031

Token 583: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.24243611097335815
    2. '0' → logprob: -2.117436170578003
    3. 'dp' → logprob: -3.117436170578003
    4. ' sum' → logprob: -3.117436170578003
    5. ' dp' → logprob: -6.492435932159424
    6. '(' → logprob: -6.492435932159424
    7. '(dp' → logprob: -6.742435932159424
    8. '(sum' → logprob: -6.992435932159424
    9. ' (' → logprob: -6.992435932159424
    10. ' ' → logprob: -8.367436408996582

Token 584: '_{' (ID: 22305)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8567972779273987
    2. '(dp' → logprob: -0.9817972779273987
    3. 'dp' → logprob: -2.106797218322754
    4. '(' → logprob: -3.731797218322754
    5. ' (' → logprob: -3.731797218322754
    6. '[' → logprob: -4.231797218322754
    7. '   ' → logprob: -5.356797218322754
    8. '[i' → logprob: -6.481797218322754
    9. ' ' → logprob: -6.606797218322754
    10. '       ' → logprob: -6.731797218322754

Token 585: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20170821249485016
    2. 'max' → logprob: -2.2017083168029785
    3. 'k' → logprob: -2.8267083168029785
    4. 'i' → logprob: -4.4517083168029785
    5. '   ' → logprob: -7.3267083168029785
    6. ' j' → logprob: -8.70170783996582
    7. ' max' → logprob: -9.45170783996582
    8. '1' → logprob: -10.32670783996582
    9. 'w' → logprob: -10.45170783996582
    10. 's' → logprob: -10.57670783996582

Token 586: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019214792177081108
    2. ' =' → logprob: -4.269214630126953
    3. '=i' → logprob: -6.269214630126953
    4. '=k' → logprob: -6.644214630126953
    5. '1' → logprob: -7.644214630126953
    6. 'i' → logprob: -7.894214630126953
    7. ' i' → logprob: -8.144214630126953
    8. 'k' → logprob: -8.644214630126953
    9. '   ' → logprob: -8.769214630126953
    10. ' ' → logprob: -9.644214630126953

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.390208899974823
    2. 'max' → logprob: -1.1402089595794678
    3. 'i' → logprob: -6.390208721160889
    4. 'k' → logprob: -6.640208721160889
    5. ' max' → logprob: -8.765209197998047
    6. 'min' → logprob: -9.640209197998047
    7. '(max' → logprob: -10.390209197998047
    8. '   ' → logprob: -10.515209197998047
    9. ' ' → logprob: -11.265209197998047
    10. '```' → logprob: -11.515209197998047

Token 588: ' to' (ID: 316)
  Prédit: '}^{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}^{' → logprob: -0.012611252255737782
    2. '}' → logprob: -4.387611389160156
    3. ' }' → logprob: -10.262611389160156
    4. '}{' → logprob: -10.387611389160156
    5. ',k' → logprob: -10.762611389160156
    6. 'k' → logprob: -12.012611389160156
    7. ',' → logprob: -12.637611389160156
    8. ' to' → logprob: -13.012611389160156
    9. 'to' → logprob: -13.637611389160156
    10. ';k' → logprob: -15.012611389160156

Token 589: ' min' (ID: 1349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15416797995567322
    2. 'min' → logprob: -2.029167890548706
    3. ' min' → logprob: -5.154168128967285
    4. ' self' → logprob: -5.279168128967285
    5. 'char' → logprob: -7.654168128967285
    6. 'max' → logprob: -10.154168128967285
    7. '   ' → logprob: -10.904168128967285
    8. '{' → logprob: -11.779168128967285
    9. ' ' → logprob: -13.154168128967285
    10. '(self' → logprob: -13.279168128967285

Token 590: '(i' (ID: 3649)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022059908136725426
    2. '(i' → logprob: -3.897059917449951
    3. '(k' → logprob: -6.897059917449951
    4. 'self' → logprob: -8.647059440612793
    5. '(' → logprob: -9.022059440612793
    6. '(char' → logprob: -9.522059440612793
    7. '(length' → logprob: -9.772059440612793
    8. ' (' → logprob: -10.772059440612793
    9. '   ' → logprob: -10.897059440612793
    10. 'k' → logprob: -11.647059440612793

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07932110130786896
    2. ',k' → logprob: -2.9543211460113525
    3. 'k' → logprob: -4.704320907592773
    4. ' ,' → logprob: -5.329320907592773
    5. ',char' → logprob: -5.579320907592773
    6. '(k' → logprob: -6.454320907592773
    7. '   ' → logprob: -7.204320907592773
    8. '(self' → logprob: -7.204320907592773
    9. ')' → logprob: -7.454320907592773
    10. 'char' → logprob: -8.079320907592773

Token 592: ' char' (ID: 1826)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017580024432390928
    2. ' self' → logprob: -6.376758098602295
    3. '       ' → logprob: -9.876757621765137
    4. '   ' → logprob: -13.376757621765137
    5. '(self' → logprob: -13.626757621765137
    6. '           ' → logprob: -14.876757621765137
    7. '	self' → logprob: -15.001757621765137
    8. '{' → logprob: -15.501757621765137
    9. '```' → logprob: -15.751757621765137
    10. ' ' → logprob: -16.001758575439453

Token 593: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.469590491382405e-05
    2. '_mapping' → logprob: -10.00007438659668
    3. 'count' → logprob: -10.87507438659668
    4. '   ' → logprob: -13.00007438659668
    5. '       ' → logprob: -13.50007438659668
    6. '\' → logprob: -13.62507438659668
    7. '_counts' → logprob: -13.75007438659668
    8. '	count' → logprob: -14.12507438659668
    9. '_map' → logprob: -14.12507438659668
    10. ')' → logprob: -14.37507438659668

Token 594: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0003634713648352772
    2. ')}
' → logprob: -8.12536334991455
    3. '       ' → logprob: -10.87536334991455
    4. ' )' → logprob: -11.25036334991455
    5. ']}' → logprob: -11.62536334991455
    6. ')' → logprob: -11.87536334991455
    7. '   ' → logprob: -12.37536334991455
    8. '}' → logprob: -12.62536334991455
    9. ')}
' → logprob: -13.00036334991455
    10. ')}}' → logprob: -13.12536334991455

Token 595: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4675798714160919
    2. 'dp' → logprob: -1.3425798416137695
    3. '(dp' → logprob: -2.4675798416137695
    4. ' (' → logprob: -4.0925798416137695
    5. '(' → logprob: -5.2175798416137695
    6. '+' → logprob: -5.7175798416137695
    7. ' +' → logprob: -6.9675798416137695
    8. '   ' → logprob: -8.59257984161377
    9. '	dp' → logprob: -8.96757984161377
    10. '(self' → logprob: -9.09257984161377

Token 596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -11.000027656555176
    3. 'i' → logprob: -11.875027656555176
    4. '   ' → logprob: -14.000027656555176
    5. '[
' → logprob: -14.000027656555176
    6. '{i' → logprob: -14.250027656555176
    7. '```' → logprob: -14.625027656555176
    8. ' [' → logprob: -14.750027656555176
    9. '[j' → logprob: -15.125027656555176
    10. '\[' → logprob: -16.000028610229492

Token 597: '-k' (ID: 10897)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026866555213928223
    2. '-' → logprob: -3.7768664360046387
    3. ' -' → logprob: -5.901866436004639
    4. '-i' → logprob: -7.276866436004639
    5. '[-' → logprob: -9.276866912841797
    6. '-k' → logprob: -10.151866912841797
    7. '[' → logprob: -10.526866912841797
    8. 'i' → logprob: -11.526866912841797
    9. '[k' → logprob: -12.151866912841797
    10. '   ' → logprob: -12.276866912841797

Token 598: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003724006237462163
    2. ']
' → logprob: -9.125371932983398
    3. ' ]' → logprob: -9.125371932983398
    4. '       ' → logprob: -9.375371932983398
    5. '   ' → logprob: -10.625371932983398
    6. '])' → logprob: -11.500371932983398
    7. ']
' → logprob: -11.625371932983398
    8. ']

' → logprob: -12.250371932983398
    9. '[i' → logprob: -12.375371932983398
    10. ')' → logprob: -12.625371932983398

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02306411974132061
    2. '
' → logprob: -3.898064136505127
    3. '\n' → logprob: -6.773064136505127
    4. '   ' → logprob: -7.148064136505127
    5. '```' → logprob: -8.523063659667969
    6. '        
' → logprob: -9.023063659667969
    7. '\' → logprob: -9.898063659667969
    8. 'def' → logprob: -10.148063659667969
    9. 'dp' → logprob: -10.273063659667969
    10. '    
' → logprob: -10.273063659667969

Token 600: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020402255468070507
    2. 'dp' (adapté à ' dp') → logprob: -6.252040386199951
    3. ' dp' → logprob: -9.252039909362793
    4. '
' → logprob: -11.877039909362793
    5. 'def' → logprob: -12.377039909362793
    6. '   ' → logprob: -13.002039909362793
    7. '```' → logprob: -14.002039909362793
    8. '        
' → logprob: -14.502039909362793
    9. '	dp' → logprob: -15.002039909362793
    10. '           ' → logprob: -16.00204086303711

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740893542766571
    2. ' =' → logprob: -0.9740893840789795
    3. '=[' → logprob: -11.724089622497559
    4. '[' → logprob: -12.474089622497559
    5. ']' → logprob: -16.099088668823242
    6. ' =[' → logprob: -16.224088668823242
    7. '```' → logprob: -16.349088668823242
    8. '＝' → logprob: -16.724088668823242
    9. ' ' → logprob: -16.849088668823242
    10. '   ' → logprob: -17.099088668823242

Token 602: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009126556105911732
    2. ' [' → logprob: -7.000912666320801
    3. '{' → logprob: -15.3759126663208
    4. '[int' → logprob: -15.3759126663208
    5. '   ' → logprob: -15.7509126663208
    6. '[class' → logprob: -15.8759126663208
    7. '[length' → logprob: -15.8759126663208
    8. '[self' → logprob: -16.375911712646484
    9. '[name' → logprob: -17.625911712646484
    10. '[new' → logprob: -17.625911712646484

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1428309977054596
    2. '1' → logprob: -2.0178310871124268
    3. '[' → logprob: -9.267830848693848
    4. '(' → logprob: -10.767830848693848
    5. ' ' → logprob: -11.392830848693848
    6. 'length' → logprob: -11.517830848693848
    7. '{' → logprob: -11.767830848693848
    8. 'self' → logprob: -12.517830848693848
    9. '[length' → logprob: -13.267830848693848
    10. '```' → logprob: -13.892830848693848

Token 604: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02982131391763687
    2. ',' → logprob: -4.154821395874023
    3. ']*' → logprob: -5.279821395874023
    4. ' for' → logprob: -5.654821395874023
    5. ']*(' → logprob: -5.654821395874023
    6. 'for' → logprob: -7.779821395874023
    7. '(length' → logprob: -8.154821395874023
    8. ']+' → logprob: -8.279821395874023
    9. ' ]' → logprob: -8.279821395874023
    10. ' *' → logprob: -8.529821395874023

Token 605: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.39521610736846924
    2. ' *' → logprob: -1.7702161073684692
    3. '*' → logprob: -2.2702159881591797
    4. ']' → logprob: -3.3952159881591797
    5. ']*(' → logprob: -4.39521598815918
    6. ',' → logprob: -5.52021598815918
    7. ')' → logprob: -7.02021598815918
    8. 'for' → logprob: -7.52021598815918
    9. ' for' → logprob: -7.64521598815918
    10. '(' → logprob: -8.52021598815918

Token 606: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '(this' → logprob: -17.125001907348633
    5. '[self' → logprob: -17.125001907348633
    6. '((' → logprob: -17.375001907348633
    7. '(' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.375001907348633
    9. '(s' → logprob: -19.375001907348633
    10. '(se' → logprob: -19.625001907348633

Token 607: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4378848391061183e-05
    2. '(self' → logprob: -11.875014305114746
    3. ' self' → logprob: -12.500014305114746
    4. '       ' → logprob: -13.000014305114746
    5. '   ' → logprob: -13.750014305114746
    6. '           ' → logprob: -15.375014305114746
    7. '[self' → logprob: -16.625015258789062
    8. '=self' → logprob: -17.500015258789062
    9. '	self' → logprob: -18.250015258789062
    10. '     ' → logprob: -18.750015258789062

Token 608: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0011865380220115185
    2. 'length' → logprob: -6.751186370849609
    3. '.' → logprob: -12.37618637084961
    4. '.size' → logprob: -12.62618637084961
    5. ' .' → logprob: -13.37618637084961
    6. '   ' → logprob: -13.50118637084961
    7. '.len' → logprob: -13.75118637084961
    8. ' length' → logprob: -14.00118637084961
    9. ',length' → logprob: -14.62618637084961
    10. '(length' → logprob: -14.75118637084961

Token 609: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0619698166847229
    2. ' +' → logprob: -2.811969757080078
    3. '+
' → logprob: -13.436969757080078
    4. ' +
' → logprob: -15.311969757080078
    5. '1' → logprob: -16.061969757080078
    6. '[' → logprob: -16.561969757080078
    7. '   ' → logprob: -17.061969757080078
    8. '0' → logprob: -17.311969757080078
    9. '()+' → logprob: -17.311969757080078
    10. ')+' → logprob: -17.436969757080078

Token 610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.375
    4. '１' → logprob: -20.625
    5. '```' → logprob: -20.625
    6. '2' → logprob: -20.875
    7. '+' → logprob: -21.0
    8. '{' → logprob: -21.125
    9. '  ' → logprob: -21.75
    10. '۱' → logprob: -22.0

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '{' → logprob: -19.25
    4. '   ' → logprob: -19.5
    5. '１' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. '۱' → logprob: -20.375
    8. '2' → logprob: -21.0
    9. '+' → logprob: -21.4375
    10. '(' → logprob: -21.5

Token 612: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0791107565164566
    2. ')' → logprob: -2.579110860824585
    3. ')
' → logprob: -8.454111099243164
    4. '
' → logprob: -13.204111099243164
    5. ']
' → logprob: -13.329111099243164
    6. 'dp' → logprob: -13.829111099243164
    7. '       ' → logprob: -14.454111099243164
    8. ' )
' → logprob: -14.454111099243164
    9. ']' → logprob: -14.579111099243164
    10. ')

' → logprob: -14.704111099243164

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7845935225486755
    2. ' dp' → logprob: -1.2845935821533203
    3. 'dp' → logprob: -1.4095935821533203
    4. '	dp' → logprob: -3.9095935821533203
    5. '   ' → logprob: -6.28459358215332
    6. '(dp' → logprob: -8.15959358215332
    7. '[' → logprob: -8.53459358215332
    8. '<|end|>' → logprob: -9.40959358215332
    9. '_dp' → logprob: -9.65959358215332
    10. '```' → logprob: -10.03459358215332

Token 614: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.010942290537059307
    2. '       ' → logprob: -5.010942459106445
    3. ' dp' → logprob: -5.635942459106445
    4. '	dp' → logprob: -7.385942459106445
    5. '(dp' → logprob: -11.260942459106445
    6. '   ' → logprob: -11.760942459106445
    7. '[' → logprob: -12.510942459106445
    8. '_dp' → logprob: -13.010942459106445
    9. '```' → logprob: -13.510942459106445
    10. '	' → logprob: -14.260942459106445

Token 615: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '[
' → logprob: -15.250000953674316
    3. '```' → logprob: -15.625000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '0' → logprob: -16.0
    6. 'dp' → logprob: -16.875
    7. '=' → logprob: -17.5
    8. '][' → logprob: -17.5
    9. ' ' → logprob: -17.875
    10. '\[' → logprob: -18.125

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.50000286102295
    3. '[' → logprob: -14.87500286102295
    4. ' ' → logprob: -15.12500286102295
    5. '```' → logprob: -15.75000286102295
    6. ')' → logprob: -15.87500286102295
    7. 'dp' → logprob: -15.87500286102295
    8. ']' → logprob: -16.250001907348633
    9. '000' → logprob: -17.250001907348633
    10. '=' → logprob: -17.750001907348633

Token 617: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40030768513679504
    2. ']' → logprob: -1.1503076553344727
    3. ']=' → logprob: -4.525307655334473
    4. ' =' → logprob: -6.025307655334473
    5. ')' → logprob: -9.650307655334473
    6. ' ]' → logprob: -11.275307655334473
    7. '[' → logprob: -11.400307655334473
    8. ')=' → logprob: -12.025307655334473
    9. ']+=' → logprob: -14.275307655334473
    10. '']=' → logprob: -14.400307655334473

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007099286303855479
    2. ' =' → logprob: -7.2507100105285645
    3. '＝' → logprob: -19.125709533691406
    4. '=}' → logprob: -19.625709533691406
    5. '.=' → logprob: -20.125709533691406
    6. '=
' → logprob: -20.875709533691406
    7. '_=' → logprob: -21.375709533691406
    8. '[' → logprob: -21.625709533691406
    9. '=True' → logprob: -21.750709533691406
    10. ']=' → logprob: -21.875709533691406

Token 619: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -22.75
    4. '   ' → logprob: -23.0
    5. '۱' → logprob: -23.125
    6. '' → logprob: -23.75
    7. '１' → logprob: -23.875
    8. '0' → logprob: -24.125
    9. '`' → logprob: -24.375
    10. '{' → logprob: -24.625

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -21.125
    4. '۱' → logprob: -21.375
    5. '' → logprob: -22.25
    6. '১' → logprob: -22.625
    7. '१' → logprob: -23.0
    8. '`' → logprob: -23.0
    9. '{' → logprob: -23.125
    10. '0' → logprob: -23.5

Token 621: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05157136917114258
    2. '   ' → logprob: -3.8015713691711426
    3. '<|end|>' → logprob: -4.301571369171143
    4. ' for' → logprob: -5.051571369171143
    5. '	for' → logprob: -6.801571369171143
    6. '```' → logprob: -7.301571369171143
    7. '    ' → logprob: -7.426571369171143
    8. 'for' → logprob: -7.551571369171143
    9. '    
' → logprob: -7.801571369171143
    10. '	' → logprob: -7.926571369171143

Token 623: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7177887558937073
    2. 'for' → logprob: -0.7177887558937073
    3. '       ' → logprob: -3.7177886962890625
    4. '   ' → logprob: -10.592788696289062
    5. '	for' → logprob: -10.592788696289062
    6. '```' → logprob: -13.592788696289062
    7. ' ' → logprob: -13.967788696289062
    8. '	' → logprob: -15.842788696289062
    9. '1' → logprob: -16.092788696289062
    10. '  ' → logprob: -17.342788696289062

Token 624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15709476172924042
    2. ' =' → logprob: -2.782094717025757
    3. 'for' → logprob: -3.157094717025757
    4. '       ' → logprob: -3.407094717025757
    5. '   ' → logprob: -5.407094955444336
    6. 'ount' → logprob: -6.407094955444336
    7. ' for' → logprob: -7.532094955444336
    8. 'har' → logprob: -8.157094955444336
    9. 'urrent' → logprob: -8.282094955444336
    10. '     ' → logprob: -9.657094955444336

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009148012613877654
    2. ' self' → logprob: -7.000914573669434
    3. '       ' → logprob: -12.750914573669434
    4. '   ' → logprob: -14.750914573669434
    5. '	self' → logprob: -17.37591552734375
    6. '           ' → logprob: -18.12591552734375
    7. '(self' → logprob: -18.12591552734375
    8. 'elf' → logprob: -18.62591552734375
    9. '[self' → logprob: -18.87591552734375
    10. ' ' → logprob: -19.12591552734375

Token 626: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.006719640456140041
    2. 'char' → logprob: -5.006719589233398
    3. '_char' → logprob: -12.631719589233398
    4. 'ar' → logprob: -14.881719589233398
    5. '	char' → logprob: -15.381719589233398
    6. '.' → logprob: -15.881719589233398
    7. '<char' → logprob: -16.3817195892334
    8. ' char' → logprob: -16.7567195892334
    9. '._' → logprob: -16.8817195892334
    10. ' .' → logprob: -17.2567195892334

Token 627: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.4849443838757e-06
    2. 'count' → logprob: -12.375004768371582
    3. '_' → logprob: -17.250003814697266
    4. '\' → logprob: -17.500003814697266
    5. 'ount' → logprob: -17.625003814697266
    6. '_c' → logprob: -17.625003814697266
    7. ' _' → logprob: -17.750003814697266
    8. ' count' → logprob: -18.125003814697266
    9. '_counts' → logprob: -18.250003814697266
    10. '   ' → logprob: -19.250003814697266

Token 628: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5484176874160767
    2. '
' → logprob: -1.0484176874160767
    3. '<|end|>' → logprob: -3.173417568206787
    4. ' for' → logprob: -4.923417568206787
    5. '<|end|>' → logprob: -5.173417568206787
    6. ' 
' → logprob: -5.173417568206787
    7. '        
' → logprob: -5.923417568206787
    8. '   ' → logprob: -6.298417568206787
    9. ')' → logprob: -6.548417568206787
    10. '  
' → logprob: -6.673417568206787

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01388668641448021
    2. ' for' → logprob: -4.513886451721191
    3. '   ' → logprob: -7.013886451721191
    4. '	for' → logprob: -7.263886451721191
    5. 'for' → logprob: -8.013886451721191
    6. '	' → logprob: -8.263886451721191
    7. ' 
' → logprob: -9.013886451721191
    8. '        
' → logprob: -9.388886451721191
    9. '
' → logprob: -9.638886451721191
    10. ' ' → logprob: -10.013886451721191

Token 630: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11912485957145691
    2. ' for' → logprob: -2.3691248893737793
    3. 'for' (adapté à ' for') → logprob: -4.119124889373779
    4. '   ' → logprob: -6.744124889373779
    5. '	for' → logprob: -7.869124889373779
    6. '	' → logprob: -7.994124889373779
    7. '        
' → logprob: -9.369124412536621
    8. ' 
' → logprob: -9.369124412536621
    9. '        ' → logprob: -9.369124412536621
    10. ' ' → logprob: -9.494124412536621

Token 631: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001178916310891509
    2. ' i' → logprob: -6.751178741455078
    3. '   ' → logprob: -11.751178741455078
    4. '	i' → logprob: -14.751178741455078
    5. ' ' → logprob: -15.376178741455078
    6. '       ' → logprob: -16.501178741455078
    7. '  ' → logprob: -17.626178741455078
    8. '    ' → logprob: -17.876178741455078
    9. '```' → logprob: -17.876178741455078
    10. '_i' → logprob: -18.001178741455078

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009767776355147362
    2. 'in' → logprob: -4.634768009185791
    3. '	in' → logprob: -12.134767532348633
    4. '1' → logprob: -13.259767532348633
    5. 'import' → logprob: -13.384767532348633
    6. ' ' → logprob: -13.634767532348633
    7. ' i' → logprob: -14.259767532348633
    8. ',' → logprob: -15.509767532348633
    9. '   ' → logprob: -15.509767532348633
    10. 'range' → logprob: -15.759767532348633

Token 633: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029755927622318268
    2. ' range' → logprob: -3.5297558307647705
    3. '1' → logprob: -12.529755592346191
    4. ' ' → logprob: -13.529755592346191
    5. '   ' → logprob: -14.654755592346191
    6. '  ' → logprob: -17.154756546020508
    7. '	range' → logprob: -18.029756546020508
    8. '    ' → logprob: -19.154756546020508
    9. '(range' → logprob: -19.404756546020508
    10. '[' → logprob: -20.404756546020508

Token 634: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.625003814697266
    4. ' (' → logprob: -20.750003814697266
    5. '(self' → logprob: -21.625003814697266
    6. ' ' → logprob: -21.875003814697266
    7. '(
' → logprob: -22.625003814697266
    8. '[' → logprob: -23.125003814697266
    9. 'self' → logprob: -24.125003814697266
    10. '(i' → logprob: -24.500003814697266

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 'self' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '(' → logprob: -18.125001907348633
    6. '       ' → logprob: -20.500001907348633
    7. ')' → logprob: -21.250001907348633
    8. '```' → logprob: -21.250001907348633
    9. '１' → logprob: -21.250001907348633
    10. '{' → logprob: -21.625001907348633

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005063214339315891
    2. ' ,' → logprob: -5.630063056945801
    3. '   ' → logprob: -7.755063056945801
    4. '       ' → logprob: -8.1300630569458
    5. '(self' → logprob: -8.6300630569458
    6. ',self' → logprob: -8.7550630569458
    7. '           ' → logprob: -9.2550630569458
    8. ' (' → logprob: -9.7550630569458
    9. 'self' → logprob: -9.8800630569458
    10. ' self' → logprob: -10.2550630569458

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003202550346031785
    2. ' self' → logprob: -5.753202438354492
    3. 'i' → logprob: -11.128202438354492
    4. '   ' → logprob: -12.128202438354492
    5. 'length' → logprob: -13.003202438354492
    6. 'len' → logprob: -13.753202438354492
    7. '       ' → logprob: -14.878202438354492
    8. '(self' → logprob: -15.253202438354492
    9. '	self' → logprob: -15.628202438354492
    10. '```' → logprob: -15.878202438354492

Token 638: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0009136092266999185
    2. 'length' → logprob: -7.000913619995117
    3. '	length' → logprob: -14.000913619995117
    4. ' length' → logprob: -14.500913619995117
    5. 'ength' → logprob: -15.375913619995117
    6. '_length' → logprob: -15.750913619995117
    7. ',length' → logprob: -16.125913619995117
    8. '   ' → logprob: -16.125913619995117
    9. '.' → logprob: -16.375913619995117
    10. ':length' → logprob: -16.875913619995117

Token 639: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889672368764877
    2. ' +' → logprob: -2.5788967609405518
    3. '   ' → logprob: -12.328896522521973
    4. '       ' → logprob: -13.703896522521973
    5. '):
' → logprob: -14.578896522521973
    6. '+
' → logprob: -15.578896522521973
    7. '+i' → logprob: -15.578896522521973
    8. ')' → logprob: -15.828896522521973
    9. '()+' → logprob: -15.828896522521973
    10. ')+' → logprob: -16.20389747619629

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. ')' → logprob: -19.750003814697266
    5. '```' → logprob: -19.750003814697266
    6. '
' → logprob: -20.750003814697266
    7. 'i' → logprob: -21.250003814697266
    8. '       ' → logprob: -21.750003814697266
    9. '           ' → logprob: -22.625003814697266
    10. '  ' → logprob: -22.750003814697266

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.625001907348633
    4. 'i' → logprob: -21.500001907348633
    5. '```' → logprob: -21.500001907348633
    6. '
' → logprob: -21.625001907348633
    7. '+' → logprob: -22.250001907348633
    8. '2' → logprob: -23.000001907348633
    9. '１' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.250001907348633

Token 642: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5567502975463867
    2. '):
' → logprob: -0.9317502975463867
    3. ':' → logprob: -3.4317502975463867
    4. '       ' → logprob: -8.181750297546387
    5. ':
' → logprob: -8.306750297546387
    6. '):
' → logprob: -8.806750297546387
    7. ')' → logprob: -10.556750297546387
    8. ',' → logprob: -11.181750297546387
    9. '   ' → logprob: -11.556750297546387
    10. ']:' → logprob: -12.431750297546387

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01695377007126808
    2. '       ' → logprob: -4.391953945159912
    3. '	       ' → logprob: -5.766953945159912
    4. '```' → logprob: -7.891953945159912
    5. '        ' → logprob: -8.016953468322754
    6. ' for' → logprob: -9.016953468322754
    7. '   ' → logprob: -9.766953468322754
    8. ' ' → logprob: -10.016953468322754
    9. ' ' → logprob: -10.016953468322754
    10. '<|end|>' → logprob: -10.141953468322754

Token 644: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12508702278137207
    2. 'dp' → logprob: -2.875087022781372
    3. ' for' → logprob: -3.125087022781372
    4. 'j' → logprob: -4.125086784362793
    5. '           ' → logprob: -7.875086784362793
    6. ' dp' → logprob: -8.000086784362793
    7. 's' → logprob: -8.500086784362793
    8. ' j' → logprob: -9.500086784362793
    9. '   ' → logprob: -10.250086784362793
    10. 'total' → logprob: -11.000086784362793

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16170386970043182
    2. ' =' → logprob: -1.9117038249969482
    3. ' in' → logprob: -7.786704063415527
    4. ')' → logprob: -8.411704063415527
    5. 'for' → logprob: -8.786704063415527
    6. '   ' → logprob: -9.036704063415527
    7. '           ' → logprob: -9.536704063415527
    8. 'in' → logprob: -9.536704063415527
    9. '-' → logprob: -9.661704063415527
    10. '```' → logprob: -9.786704063415527

Token 646: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00013393278641160578
    2. ' max' → logprob: -9.000133514404297
    3. 'i' → logprob: -11.500133514404297
    4. '   ' → logprob: -15.625133514404297
    5. '	max' → logprob: -16.000133514404297
    6. ' ' → logprob: -16.875133514404297
    7. ' i' → logprob: -17.500133514404297
    8. '1' → logprob: -18.375133514404297
    9. '(max' → logprob: -18.500133514404297
    10. '  ' → logprob: -20.375133514404297

Token 647: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023917861108202487
    2. '(i' → logprob: -8.500239372253418
    3. '0' → logprob: -10.250239372253418
    4. ' (' → logprob: -15.500239372253418
    5. 'i' → logprob: -17.0002384185791
    6. '(
' → logprob: -17.1252384185791
    7. '   ' → logprob: -18.7502384185791
    8. '```' → logprob: -19.2502384185791
    9. '[' → logprob: -20.1252384185791
    10. '=' → logprob: -20.6252384185791

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003843173326458782
    2. 'i' → logprob: -8.250384330749512
    3. '(' → logprob: -9.250384330749512
    4. ' ' → logprob: -11.125384330749512
    5. '(i' → logprob: -11.500384330749512
    6. '   ' → logprob: -14.000384330749512
    7. ' i' → logprob: -14.625384330749512
    8. '1' → logprob: -16.250383377075195
    9. '  ' → logprob: -16.812883377075195
    10. '```' → logprob: -16.812883377075195

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08414547145366669
    2. '(i' → logprob: -3.4591455459594727
    3. ',i' → logprob: -3.7091455459594727
    4. '[i' → logprob: -4.459145545959473
    5. '           ' → logprob: -5.209145545959473
    6. 'i' → logprob: -5.209145545959473
    7. '       ' → logprob: -7.709145545959473
    8. '   ' → logprob: -7.709145545959473
    9. ' ,' → logprob: -7.959145545959473
    10. ' i' → logprob: -8.209145545959473

Token 650: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001884015218820423
    2. ' i' → logprob: -8.750188827514648
    3. '           ' → logprob: -10.625188827514648
    4. '               ' → logprob: -12.625188827514648
    5. '	i' → logprob: -14.125188827514648
    6. '   ' → logprob: -14.500188827514648
    7. '       ' → logprob: -15.125188827514648
    8. '             ' → logprob: -15.625188827514648
    9. '                   ' → logprob: -15.875188827514648
    10. '              ' → logprob: -16.25018882751465

Token 651: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03447365388274193
    2. ' -' → logprob: -3.4094736576080322
    3. '-i' → logprob: -7.159473419189453
    4. '   ' → logprob: -10.909473419189453
    5. '-k' → logprob: -12.034473419189453
    6. '-indent' → logprob: -12.159473419189453
    7. '-tabs' → logprob: -12.909473419189453
    8. '-token' → logprob: -13.409473419189453
    9. '       ' → logprob: -13.409473419189453
    10. ' ' → logprob: -13.784473419189453

Token 652: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010163593105971813
    2. ' c' → logprob: -9.375102043151855
    3. 'self' → logprob: -11.250102043151855
    4. '   ' → logprob: -13.125102043151855
    5. '       ' → logprob: -14.625102043151855
    6. 'min' → logprob: -14.750102043151855
    7. '           ' → logprob: -15.375102043151855
    8. '	c' → logprob: -15.750102043151855
    9. 'char' → logprob: -16.12510108947754
    10. ' ' → logprob: -16.25010108947754

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1447787582874298
    2. ')
' → logprob: -2.0197787284851074
    3. '           ' → logprob: -6.269778728485107
    4. '       ' → logprob: -9.394779205322266
    5. ')
' → logprob: -10.519779205322266
    6. '-' → logprob: -10.644779205322266
    7. '   ' → logprob: -11.144779205322266
    8. ' )' → logprob: -11.894779205322266
    9. ']' → logprob: -12.019779205322266
    10. ');' → logprob: -12.019779205322266

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021212305000517517
    2. '       ' → logprob: -9.500211715698242
    3. ' for' → logprob: -10.125211715698242
    4. '
' → logprob: -10.500211715698242
    5. '	       ' → logprob: -10.750211715698242
    6. '		' → logprob: -11.750211715698242
    7. 'for' → logprob: -12.000211715698242
    8. '          ' → logprob: -12.375211715698242
    9. '<|end|>' → logprob: -12.375211715698242
    10. '   ' → logprob: -12.750211715698242

Token 655: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6590095162391663
    2. 'dp' → logprob: -1.0340094566345215
    3. 'for' → logprob: -2.1590094566345215
    4. ' for' → logprob: -4.7840094566345215
    5. ' dp' → logprob: -6.2840094566345215
    6. '       ' → logprob: -6.9090094566345215
    7. '```' → logprob: -8.90900993347168
    8. '   ' → logprob: -9.03400993347168
    9. 'end' → logprob: -10.53400993347168
    10. 'sum' → logprob: -10.65900993347168

Token 656: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11081130802631378
    2. 'for' → logprob: -2.360811233520508
    3. '           ' → logprob: -4.985811233520508
    4. ' for' → logprob: -6.235811233520508
    5. ' dp' → logprob: -6.735811233520508
    6. 'j' → logprob: -8.110811233520508
    7. 's' → logprob: -9.235811233520508
    8. '       ' → logprob: -9.610811233520508
    9. '   ' → logprob: -10.485811233520508
    10. '```' → logprob: -10.985811233520508

Token 657: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25250333547592163
    2. '(dp' → logprob: -1.7525033950805664
    3. '_dp' → logprob: -3.5025033950805664
    4. '           ' → logprob: -5.127503395080566
    5. '+=' → logprob: -5.377503395080566
    6. '=' → logprob: -6.127503395080566
    7. ' +=' → logprob: -6.252503395080566
    8. ' dp' → logprob: -6.502503395080566
    9. '	dp' → logprob: -6.627503395080566
    10. 'for' → logprob: -7.127503395080566

Token 658: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007968813297338784
    2. '[start' → logprob: -7.375796794891357
    3. '[j' → logprob: -9.125797271728516
    4. '[' → logprob: -10.000797271728516
    5. '[
' → logprob: -13.500797271728516
    6. 'i' → logprob: -13.500797271728516
    7. '[end' → logprob: -13.625797271728516
    8. ' [' → logprob: -13.875797271728516
    9. 'dp' → logprob: -14.000797271728516
    10. '[idx' → logprob: -14.000797271728516

Token 659: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4292701780796051
    2. '[start' → logprob: -1.5542701482772827
    3. '[j' → logprob: -2.9292702674865723
    4. '+' → logprob: -3.0542702674865723
    5. '[i' → logprob: -4.054270267486572
    6. '-' → logprob: -5.804270267486572
    7. ']+=' → logprob: -5.929270267486572
    8. '           ' → logprob: -5.929270267486572
    9. '
' → logprob: -6.304270267486572
    10. '=start' → logprob: -6.929270267486572

Token 660: ' for' (ID: 395)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.63304603099823
    2. ' +=' → logprob: -1.25804603099823
    3. '[j' → logprob: -2.1330461502075195
    4. '=' → logprob: -3.3830461502075195
    5. '[i' → logprob: -4.5080461502075195
    6. '[start' → logprob: -4.6330461502075195
    7. ' =' → logprob: -5.2580461502075195
    8. '
' → logprob: -6.6330461502075195
    9. '[' → logprob: -6.6330461502075195
    10. ']+=' → logprob: -6.8830461502075195

Token 661: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003710646415129304
    2. ' j' → logprob: -5.628710746765137
    3. 'start' → logprob: -9.253710746765137
    4. '   ' → logprob: -12.378710746765137
    5. ' start' → logprob: -12.628710746765137
    6. '	j' → logprob: -13.003710746765137
    7. '[j' → logprob: -13.628710746765137
    8. '_j' → logprob: -14.003710746765137
    9. '    ' → logprob: -14.503710746765137
    10. 'i' → logprob: -14.503710746765137

Token 662: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10531003773212433
    2. ' in' → logprob: -2.6053099632263184
    3. '=i' → logprob: -4.730309963226318
    4. 'in' → logprob: -4.855309963226318
    5. '=j' → logprob: -4.855309963226318
    6. 'j' → logprob: -7.980309963226318
    7. ' =' → logprob: -8.355310440063477
    8. ' j' → logprob: -8.605310440063477
    9. '=start' → logprob: -8.605310440063477
    10. '```' → logprob: -8.605310440063477

Token 663: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006031917873769999
    2. ' range' → logprob: -7.500603199005127
    3. '   ' → logprob: -10.375602722167969
    4. '(range' → logprob: -11.875602722167969
    5. 'start' → logprob: -12.500602722167969
    6. '
' → logprob: -12.875602722167969
    7. '	range' → logprob: -13.625602722167969
    8. '[start' → logprob: -14.000602722167969
    9. 'i' → logprob: -14.375602722167969
    10. '`' → logprob: -14.375602722167969

Token 664: 'i' (ID: 72)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.012657147832214832
    2. 'i' → logprob: -4.387657165527344
    3. ' start' → logprob: -9.012657165527344
    4. '(start' → logprob: -11.387657165527344
    5. ' i' → logprob: -12.137657165527344
    6. '(i' → logprob: -12.137657165527344
    7. '   ' → logprob: -13.762657165527344
    8. '[start' → logprob: -14.512657165527344
    9. 'max' → logprob: -15.262657165527344
    10. ' ' → logprob: -15.387657165527344

Token 665: '-c' (ID: 3452)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07951698452234268
    2. ' -' → logprob: -2.579516887664795
    3. '-start' → logprob: -7.579516887664795
    4. '-k' → logprob: -9.704517364501953
    5. '-c' → logprob: -11.579517364501953
    6. '-step' → logprob: -11.704517364501953
    7. '-j' → logprob: -11.704517364501953
    8. '-
' → logprob: -12.079517364501953
    9. '-i' → logprob: -12.454517364501953
    10. '   ' → logprob: -13.204517364501953

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43653085827827454
    2. ',i' → logprob: -1.0615308284759521
    3. ' ,' → logprob: -5.311531066894531
    4. ':i' → logprob: -6.061531066894531
    5. ',j' → logprob: -8.561531066894531
    6. ',
' → logprob: -9.311531066894531
    7. '+' → logprob: -9.686531066894531
    8. '
' → logprob: -9.811531066894531
    9. 'i' → logprob: -10.686531066894531
    10. '   ' → logprob: -11.186531066894531

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008136780234053731
    2. ' i' → logprob: -7.1258134841918945
    3. 'j' → logprob: -12.250813484191895
    4. '   ' → logprob: -13.125813484191895
    5. '           ' → logprob: -13.375813484191895
    6. '	i' → logprob: -15.250813484191895
    7. '       ' → logprob: -15.375813484191895
    8. '               ' → logprob: -15.750813484191895
    9. '                   ' → logprob: -16.00081443786621
    10. ' j' → logprob: -17.62581443786621

Token 668: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019080886617302895
    2. ' -' → logprob: -4.019081115722656
    3. ']' → logprob: -8.019081115722656
    4. ',' → logprob: -8.519081115722656
    5. ')' → logprob: -8.894081115722656
    6. '
' → logprob: -9.644081115722656
    7. '])' → logprob: -10.894081115722656
    8. '   ' → logprob: -11.019081115722656
    9. 'i' → logprob: -11.019081115722656
    10. '```' → logprob: -11.019081115722656

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -13.125005722045898
    3. '```' → logprob: -14.000005722045898
    4. ' ' → logprob: -14.125005722045898
    5. '       ' → logprob: -14.250005722045898
    6. '           ' → logprob: -14.375005722045898
    7. '
' → logprob: -16.1250057220459
    8. 'j' → logprob: -16.2500057220459
    9. ')' → logprob: -16.2500057220459
    10. '`' → logprob: -16.5625057220459

Token 670: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26799678802490234
    2. '+' → logprob: -1.8929967880249023
    3. ']
' → logprob: -3.1429967880249023
    4. '           ' → logprob: -4.017996788024902
    5. ' +' → logprob: -4.267996788024902
    6. ']+' → logprob: -6.392996788024902
    7. '+i' → logprob: -6.642996788024902
    8. '])' → logprob: -6.642996788024902
    9. ']:
' → logprob: -6.892996788024902
    10. ' ]' → logprob: -7.267996788024902

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031682176049798727
    2. ' for' → logprob: -6.878168106079102
    3. 'dp' → logprob: -7.253168106079102
    4. '       ' → logprob: -7.628168106079102
    5. 'for' → logprob: -8.753168106079102
    6. '```' → logprob: -8.878168106079102
    7. ' dp' → logprob: -8.878168106079102
    8. '	       ' → logprob: -9.003168106079102
    9. '   ' → logprob: -9.378168106079102
    10. '		' → logprob: -9.628168106079102

Token 672: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09306073933839798
    2. 'for' → logprob: -3.3430607318878174
    3. ' dp' → logprob: -3.7180607318878174
    4. '           ' → logprob: -3.9680607318878174
    5. ' for' → logprob: -4.7180609703063965
    6. '   ' → logprob: -6.9680609703063965
    7. 'j' → logprob: -8.718060493469238
    8. '```' → logprob: -9.718060493469238
    9. '	dp' → logprob: -9.718060493469238
    10. '       ' → logprob: -10.593060493469238

Token 673: ' Use' (ID: 7649)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.780841052532196
    2. '           ' → logprob: -0.905841052532196
    3. ' dp' → logprob: -2.530841112136841
    4. ' for' → logprob: -3.405841112136841
    5. 'for' → logprob: -3.780841112136841
    6. '   ' → logprob: -6.905840873718262
    7. '       ' → logprob: -8.155840873718262
    8. '	dp' → logprob: -8.405840873718262
    9. '```' → logprob: -9.405840873718262
    10. 'j' → logprob: -9.655840873718262

Token 674: ' sliding' (ID: 53853)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2522587180137634
    2. 'prefix' → logprob: -1.8772587776184082
    3. ' dp' → logprob: -3.377258777618408
    4. ' prefix' → logprob: -4.877258777618408
    5. '(dp' → logprob: -5.127258777618408
    6. 'acc' → logprob: -5.377258777618408
    7. '_dp' → logprob: -5.752258777618408
    8. '_prefix' → logprob: -6.252258777618408
    9. '   ' → logprob: -6.377258777618408
    10. 'sum' → logprob: -6.502258777618408

Token 675: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.0012971388641744852
    2. '_window' → logprob: -7.0012969970703125
    3. ' window' → logprob: -7.8762969970703125
    4. 'windows' → logprob: -13.001296997070312
    5. 'win' → logprob: -13.501296997070312
    6. '
' → logprob: -14.251296997070312
    7. 'sum' → logprob: -14.501296997070312
    8. '-window' → logprob: -14.751296997070312
    9. 'w' → logprob: -15.251296997070312
    10. '   ' → logprob: -16.501296997070312

Token 676: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2218987941741943
    2. 'sum' → logprob: -1.3468987941741943
    3. '_sum' → logprob: -1.5968987941741943
    4. '=' → logprob: -2.2218987941741943
    5. ' dp' → logprob: -3.7218987941741943
    6. ' =' → logprob: -3.8468987941741943
    7. '+=' → logprob: -3.9718987941741943
    8. '           ' → logprob: -4.096899032592773
    9. ' +=' → logprob: -4.096899032592773
    10. ' sum' → logprob: -4.346899032592773

Token 677: ' optimization' (ID: 34658)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.712523877620697
    2. ' dp' → logprob: -2.462523937225342
    3. 'sum' → logprob: -2.587523937225342
    4. 'j' → logprob: -2.712523937225342
    5. 'acc' → logprob: -3.087523937225342
    6. ' j' → logprob: -3.337523937225342
    7. 'efficient' → logprob: -3.587523937225342
    8. ' efficiency' → logprob: -3.837523937225342
    9. ' sum' → logprob: -3.837523937225342
    10. '   ' → logprob: -3.837523937225342

Token 678: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004419913049787283
    2. 'sum' → logprob: -7.129419803619385
    3. '
' → logprob: -7.379419803619385
    4. 'dp' → logprob: -7.754419803619385
    5. 'window' → logprob: -8.129420280456543
    6. '       ' → logprob: -8.129420280456543
    7. 'total' → logprob: -8.379420280456543
    8. '   ' → logprob: -8.504420280456543
    9. '+' → logprob: -8.629420280456543
    10. 'acc' → logprob: -8.879420280456543

Token 679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030979802832007408
    2. 'dp' → logprob: -4.780979633331299
    3. ' dp' → logprob: -5.280979633331299
    4. '    ' → logprob: -5.780979633331299
    5. '   ' → logprob: -6.030979633331299
    6. '       ' → logprob: -6.155979633331299
    7. '
' → logprob: -6.155979633331299
    8. '	       ' → logprob: -6.780979633331299
    9. '            ' → logprob: -6.780979633331299
    10. '```' → logprob: -7.155979633331299

Token 680: ' #' (ID: 1069)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.6159899234771729
    2. 'dp' → logprob: -0.9909899234771729
    3. 'if' → logprob: -3.115989923477173
    4. '           ' → logprob: -3.865989923477173
    5. ' window' → logprob: -4.740989685058594
    6. 's' → logprob: -5.365989685058594
    7. 'total' → logprob: -5.740989685058594
    8. ' dp' → logprob: -6.240989685058594
    9. '   ' → logprob: -6.740989685058594
    10. ' if' → logprob: -6.990989685058594

Token 681: ' For' (ID: 2214)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.14405454695224762
    2. 'dp' → logprob: -2.894054651260376
    3. ' window' → logprob: -3.394054651260376
    4. 'if' → logprob: -3.894054651260376
    5. '           ' → logprob: -4.269054412841797
    6. 'total' → logprob: -5.769054412841797
    7. 's' → logprob: -6.019054412841797
    8. ' if' → logprob: -7.144054412841797
    9. 'sum' → logprob: -7.144054412841797
    10. 'curr' → logprob: -7.519054412841797

Token 682: ' efficiency' (ID: 17456)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.051270511001348495
    2. ' j' → logprob: -3.6762704849243164
    3. 'i' → logprob: -3.8012704849243164
    4. 'k' → logprob: -6.926270484924316
    5. ' i' → logprob: -7.051270484924316
    6. 'dp' → logprob: -9.051270484924316
    7. '_j' → logprob: -9.551270484924316
    8. 'window' → logprob: -10.551270484924316
    9. ' ' → logprob: -10.551270484924316
    10. ' k' → logprob: -10.676270484924316

Token 683: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4644870460033417
    2. 'window' → logprob: -1.839487075805664
    3. ' window' → logprob: -2.339487075805664
    4. 'dp' → logprob: -3.339487075805664
    5. ' dp' → logprob: -3.714487075805664
    6. 'sum' → logprob: -4.214487075805664
    7. 'total' → logprob: -4.464487075805664
    8. '=' → logprob: -5.214487075805664
    9. ',' → logprob: -5.714487075805664
    10. ' total' → logprob: -5.964487075805664

Token 684: ' large' (ID: 4410)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6768163442611694
    2. 'j' → logprob: -1.1768163442611694
    3. ' j' → logprob: -2.551816463470459
    4. ' i' → logprob: -2.926816463470459
    5. 'k' → logprob: -3.426816463470459
    6. ' k' → logprob: -5.301816463470459
    7. '_' → logprob: -6.426816463470459
    8. ' ' → logprob: -6.676816463470459
    9. '   ' → logprob: -6.801816463470459
    10. 'range' → logprob: -6.926816463470459

Token 685: ' length' (ID: 5517)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.014196515083313
    2. ' i' → logprob: -1.889196515083313
    3. 'range' → logprob: -2.2641963958740234
    4. '   ' → logprob: -2.5141963958740234
    5. 'ranges' → logprob: -2.7641963958740234
    6. ' ranges' → logprob: -3.2641963958740234
    7. ' range' → logprob: -3.3891963958740234
    8. 'inputs' → logprob: -3.7641963958740234
    9. ' windows' → logprob: -3.8891963958740234
    10. 'c' → logprob: -4.389196395874023

Token 686: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02918877638876438
    2. ',' → logprob: -4.154188632965088
    3. '            ' → logprob: -6.154188632965088
    4. '
' → logprob: -6.279188632965088
    5. '   ' → logprob: -7.029188632965088
    6. 'window' → logprob: -7.154188632965088
    7. ' window' → logprob: -7.279188632965088
    8. '       ' → logprob: -7.404188632965088
    9. ' dp' → logprob: -7.404188632965088
    10. 'sum' → logprob: -7.529188632965088

Token 687: ' do' (ID: 621)
  Prédit: ' window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.26125773787498474
    2. 'window' → logprob: -1.5112577676773071
    3. ' s' → logprob: -6.261257648468018
    4. '           ' → logprob: -6.761257648468018
    5. ' if' → logprob: -6.761257648468018
    6. ' total' → logprob: -6.886257648468018
    7. 's' → logprob: -7.386257648468018
    8. 'total' → logprob: -7.386257648468018
    9. '_window' → logprob: -7.761257648468018
    10. 'if' → logprob: -7.886257648468018

Token 688: ' prefix' (ID: 18633)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -1.5973248481750488
    2. '_window' → logprob: -1.5973248481750488
    3. 'prefix' → logprob: -1.9723248481750488
    4. '           ' → logprob: -1.9723248481750488
    5. '   ' → logprob: -2.847324848175049
    6. '_prefix' → logprob: -3.597324848175049
    7. ' window' → logprob: -3.722324848175049
    8. 's' → logprob: -4.097324848175049
    9. 'dp' → logprob: -4.222324848175049
    10. 'c' → logprob: -4.222324848175049

Token 689: ' sums' (ID: 73121)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3967854380607605
    2. 'sum' → logprob: -1.6467854976654053
    3. '_s' → logprob: -2.1467854976654053
    4. '_' → logprob: -4.646785259246826
    5. 's' → logprob: -5.396785259246826
    6. ' sums' → logprob: -5.646785259246826
    7. '_dp' → logprob: -8.896785736083984
    8. 'dp' → logprob: -9.271785736083984
    9. ' =' → logprob: -10.021785736083984
    10. '=' → logprob: -10.646785736083984

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025885042268782854
    2. '
' → logprob: -7.627588272094727
    3. ' =' → logprob: -7.627588272094727
    4. '=' → logprob: -7.877588272094727
    5. ',' → logprob: -8.252588272094727
    6. '<|end|>' → logprob: -8.252588272094727
    7. '<|end|>' → logprob: -8.377588272094727
    8. '       ' → logprob: -9.002588272094727
    9. '		' → logprob: -10.002588272094727
    10. '	       ' → logprob: -10.252588272094727

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019561098888516426
    2. '+' → logprob: -7.376955986022949
    3. '       ' → logprob: -8.62695598602295
    4. '   ' → logprob: -8.75195598602295
    5. ' +' → logprob: -9.12695598602295
    6. '		' → logprob: -9.12695598602295
    7. '[' → logprob: -9.12695598602295
    8. '```' → logprob: -9.12695598602295
    9. '            
' → logprob: -9.62695598602295
    10. ',' → logprob: -9.75195598602295

Token 692: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01334362756460905
    2. 'prefix' → logprob: -4.638343811035156
    3. '       ' → logprob: -7.263343811035156
    4. '+' → logprob: -7.388343811035156
    5. 'dp' → logprob: -7.388343811035156
    6. '   ' → logprob: -8.388343811035156
    7. 'if' → logprob: -8.763343811035156
    8. 'prev' → logprob: -9.013343811035156
    9. '<|end|>' → logprob: -9.263343811035156
    10. '            
' → logprob: -9.513343811035156

Token 693: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017628874629735947
    2. 'prefix' → logprob: -5.0176286697387695
    3. '+' → logprob: -5.6426286697387695
    4. ' prefix' → logprob: -6.7676286697387695
    5. ' dp' → logprob: -6.8926286697387695
    6. 'dp' → logprob: -7.0176286697387695
    7. ' if' → logprob: -7.0176286697387695
    8. '   ' → logprob: -7.8926286697387695
    9. ' +' → logprob: -7.8926286697387695
    10. ' ' → logprob: -7.8926286697387695

Token 694: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3700509071350098
    2. ' for' → logprob: -2.1200509071350098
    3. ' if' → logprob: -2.1200509071350098
    4. ' continue' → logprob: -2.4950509071350098
    5. 'continue' → logprob: -2.4950509071350098
    6. 'prefix' → logprob: -2.4950509071350098
    7. ' break' → logprob: -3.2450509071350098
    8. 'if' → logprob: -3.2450509071350098
    9. 'for' → logprob: -3.4950509071350098
    10. ' prefix' → logprob: -3.4950509071350098

Token 695: ' length' (ID: 5517)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6285138726234436
    2. 'i' → logprob: -1.1285138130187988
    3. ' c' → logprob: -3.003513813018799
    4. 'start' → logprob: -3.878513813018799
    5. ' i' → logprob: -4.253513813018799
    6. '           ' → logprob: -4.253513813018799
    7. 'self' → logprob: -4.628513813018799
    8. 'the' → logprob: -4.753513813018799
    9. 'len' → logprob: -5.503513813018799
    10. 'char' → logprob: -5.628513813018799

Token 696: ' can' (ID: 665)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1416409015655518
    2. '=' → logprob: -1.8916409015655518
    3. '<=' → logprob: -2.1416409015655518
    4. '           ' → logprob: -2.3916409015655518
    5. ' <=' → logprob: -2.5166409015655518
    6. ' -' → logprob: -2.5166409015655518
    7. ' =' → logprob: -3.5166409015655518
    8. 'dp' → logprob: -3.5166409015655518
    9. '>=' → logprob: -4.516640663146973
    10. '==' → logprob: -4.516640663146973

Token 697: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.24786555767059326
    2. 'be' → logprob: -1.6228655576705933
    3. '<=' → logprob: -4.997865676879883
    4. 'i' → logprob: -5.622865676879883
    5. '           ' → logprob: -5.872865676879883
    6. ' i' → logprob: -6.622865676879883
    7. ' <=' → logprob: -6.622865676879883
    8. '=' → logprob: -6.872865676879883
    9. '1' → logprob: -7.247865676879883
    10. '>' → logprob: -7.372865676879883

Token 698: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.021769152954220772
    2. ' large' → logprob: -4.771769046783447
    3. 'very' → logprob: -5.021769046783447
    4. 'up' → logprob: -5.271769046783447
    5. 'big' → logprob: -7.646769046783447
    6. ' up' → logprob: -9.021769523620605
    7. 'small' → logprob: -9.021769523620605
    8. 'long' → logprob: -9.271769523620605
    9. ' very' → logprob: -9.396769523620605
    10. 'quite' → logprob: -9.396769523620605

Token 699: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17059367895126343
    2. ',' → logprob: -2.045593738555908
    3. ':' → logprob: -4.420593738555908
    4. ' and' → logprob: -6.295593738555908
    5. '       ' → logprob: -6.670593738555908
    6. ' +' → logprob: -6.670593738555908
    7. '+' → logprob: -6.795593738555908
    8. '...' → logprob: -7.045593738555908
    9. ',
' → logprob: -7.295593738555908
    10. '   ' → logprob: -7.420593738555908

Token 700: 'up' (ID: 817)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4029291272163391
    2. '0' → logprob: -1.7779290676116943
    3. '           ' → logprob: -2.6529290676116943
    4. '1' → logprob: -3.6529290676116943
    5. ')' → logprob: -3.7779290676116943
    6. '),' → logprob: -4.777929306030273
    7. '
' → logprob: -5.277929306030273
    8. '...' → logprob: -5.277929306030273
    9. ' i' → logprob: -5.527929306030273
    10. 'max' → logprob: -5.652929306030273

Token 701: ' to' (ID: 316)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07849675416946411
    2. 'i' → logprob: -4.453496932983398
    3. 'ntil' → logprob: -4.453496932983398
    4. '0' → logprob: -5.078496932983398
    5. 'pto' → logprob: -5.078496932983398
    6. '```' → logprob: -5.203496932983398
    7. '       ' → logprob: -5.203496932983398
    8. 'to' → logprob: -5.328496932983398
    9. '           ' → logprob: -5.328496932983398
    10. '   ' → logprob: -5.828496932983398

Token 702: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17311517894268036
    2. 'c' → logprob: -2.4231152534484863
    3. 'self' → logprob: -3.5481152534484863
    4. ' i' → logprob: -4.673115253448486
    5. '10' → logprob: -5.048115253448486
    6. ' c' → logprob: -5.548115253448486
    7. 'MOD' → logprob: -5.548115253448486
    8. ' self' → logprob: -6.048115253448486
    9. '   ' → logprob: -6.423115253448486
    10. '1' → logprob: -6.423115253448486

Token 703: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9091457724571228
    2. '100' → logprob: -1.2841458320617676
    3. 'self' → logprob: -1.4091458320617676
    4. 'i' → logprob: -3.7841458320617676
    5. 'c' → logprob: -3.9091458320617676
    6. '1' → logprob: -4.034145832061768
    7. '0' → logprob: -5.909145832061768
    8. 'MOD' → logprob: -6.159145832061768
    9. '...' → logprob: -6.784145832061768
    10. '999' → logprob: -6.909145832061768

Token 704: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5214366912841797
    2. '000' → logprob: -1.7714366912841797
    3. '+' → logprob: -2.5214366912841797
    4. '
' → logprob: -2.6464366912841797
    5. '):
' → logprob: -3.2714366912841797
    6. ')' → logprob: -4.64643669128418
    7. '           ' → logprob: -4.64643669128418
    8. '       ' → logprob: -4.89643669128418
    9. '):' → logprob: -5.14643669128418
    10. '),' → logprob: -6.14643669128418

Token 705: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18647286295890808
    2. '):
' → logprob: -2.6864728927612305
    3. '           ' → logprob: -3.1864728927612305
    4. ',' → logprob: -3.6864728927612305
    5. ')' → logprob: -4.5614728927612305
    6. '):' → logprob: -5.3114728927612305
    7. '),
' → logprob: -5.4364728927612305
    8. '+' → logprob: -6.0614728927612305
    9. '
' → logprob: -6.0614728927612305
    10. '],' → logprob: -6.3114728927612305

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016937461914494634
    2. '            ' → logprob: -8.126693725585938
    3. '       ' → logprob: -8.501693725585938
    4. 'prefix' → logprob: -8.751693725585938
    5. '```' → logprob: -9.251693725585938
    6. 'dp' → logprob: -9.376693725585938
    7. '	       ' → logprob: -9.626693725585938
    8. 'import' → logprob: -9.626693725585938
    9. '+' → logprob: -9.876693725585938
    10. '   ' → logprob: -10.001693725585938

Token 707: ' #' (ID: 1069)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.3072910010814667
    2. '           ' → logprob: -2.057291030883789
    3. 'prefix' → logprob: -2.557291030883789
    4. ' window' → logprob: -4.057291030883789
    5. ' continue' → logprob: -5.057291030883789
    6. ' break' → logprob: -5.057291030883789
    7. ' if' → logprob: -5.057291030883789
    8. ' prev' → logprob: -6.057291030883789
    9. '            ' → logprob: -6.057291030883789
    10. ' pref' → logprob: -6.307291030883789

Token 708: ' we' (ID: 581)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -1.149577021598816
    2. 'prefix' → logprob: -1.399577021598816
    3. '           ' → logprob: -1.524577021598816
    4. ' if' → logprob: -3.0245771408081055
    5. ' dp' → logprob: -3.1495771408081055
    6. '#' → logprob: -4.0245771408081055
    7. 'dp' → logprob: -4.1495771408081055
    8. ' for' → logprob: -4.2745771408081055
    9. ' #' → logprob: -4.5245771408081055
    10. ' continue' → logprob: -4.6495771408081055

Token 709: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3420152962207794
    2. ' continue' → logprob: -2.467015266418457
    3. ' can' → logprob: -2.592015266418457
    4. 'continue' → logprob: -3.467015266418457
    5. ' have' → logprob: -3.717015266418457
    6. ' =' → logprob: -4.342015266418457
    7. '=' → logprob: -5.217015266418457
    8. '[' → logprob: -5.217015266418457
    9. ' will' → logprob: -5.342015266418457
    10. '            ' → logprob: -5.592015266418457

Token 710: ' optimize' (ID: 40398)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.1022343635559082
    2. 'maint' → logprob: -1.3522343635559082
    3. 'use' → logprob: -1.7272343635559082
    4. 'continue' → logprob: -2.977234363555908
    5. 'implement' → logprob: -3.102234363555908
    6. ' implement' → logprob: -3.477234363555908
    7. ' maintain' → logprob: -3.852234363555908
    8. 'avoid' → logprob: -4.477234363555908
    9. 'calculate' → logprob: -4.727234363555908
    10. 'compute' → logprob: -4.852234363555908

Token 711: ' carefully' (ID: 18455)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3276219666004181
    2. ' dp' → logprob: -2.3276219367980957
    3. 'dp' → logprob: -3.0776219367980957
    4. 'prefix' → logprob: -3.8276219367980957
    5. ' prefix' → logprob: -3.9526219367980957
    6. '
' → logprob: -4.327621936798096
    7. '            ' → logprob: -4.452621936798096
    8. ' if' → logprob: -4.702621936798096
    9. '    ' → logprob: -4.702621936798096
    10. ' =' → logprob: -5.077621936798096

Token 712: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0085215512663126
    2. 'prefix' → logprob: -5.508521556854248
    3. ' prefix' → logprob: -7.258521556854248
    4. '   ' → logprob: -7.758521556854248
    5. '
' → logprob: -7.758521556854248
    6. '+' → logprob: -7.883521556854248
    7. ' dp' → logprob: -7.883521556854248
    8. 'dp' → logprob: -8.13352108001709
    9. '       ' → logprob: -8.25852108001709
    10. '```' → logprob: -8.88352108001709

Token 713: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014542824355885386
    2. '       ' → logprob: -7.2514543533325195
    3. 'prefix' → logprob: -7.8764543533325195
    4. '   ' → logprob: -9.50145435333252
    5. '```' → logprob: -9.87645435333252
    6. '+' → logprob: -10.25145435333252
    7. '	       ' → logprob: -10.25145435333252
    8. '		' → logprob: -10.62645435333252
    9. 'dp' → logprob: -10.87645435333252
    10. '
' → logprob: -11.00145435333252

Token 714: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11677921563386917
    2. 'prefix' → logprob: -2.616779327392578
    3. ' prefix' → logprob: -3.491779327392578
    4. '       ' → logprob: -6.116779327392578
    5. '   ' → logprob: -6.491779327392578
    6. '
' → logprob: -7.491779327392578
    7. 'cum' → logprob: -7.491779327392578
    8. 'dp' → logprob: -8.366779327392578
    9. 'sum' → logprob: -8.366779327392578
    10. ' if' → logprob: -8.491779327392578

Token 715: ' Implement' (ID: 32889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17924751341342926
    2. ' prefix' → logprob: -2.1792476177215576
    3. 'prefix' → logprob: -3.5542476177215576
    4. '   ' → logprob: -5.0542473793029785
    5. '       ' → logprob: -5.9292473793029785
    6. '
' → logprob: -6.1792473793029785
    7. '    ' → logprob: -6.8042473793029785
    8. ' if' → logprob: -6.8042473793029785
    9. ' dp' → logprob: -6.9292473793029785
    10. ' ' → logprob: -6.9292473793029785

Token 716: ' sliding' (ID: 53853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39527472853660583
    2. 'prefix' → logprob: -1.5202747583389282
    3. ' prefix' → logprob: -2.3952746391296387
    4. '   ' → logprob: -5.020274639129639
    5. '       ' → logprob: -5.520274639129639
    6. 'pref' → logprob: -6.395274639129639
    7. ' pref' → logprob: -7.270274639129639
    8. 'dp' → logprob: -7.270274639129639
    9. 'psum' → logprob: -7.270274639129639
    10. 'cum' → logprob: -8.020275115966797

Token 717: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.12254653871059418
    2. '_window' → logprob: -2.747546434402466
    3. '       ' → logprob: -3.997546434402466
    4. '   ' → logprob: -4.247546672821045
    5. ' window' → logprob: -4.247546672821045
    6. 'sum' → logprob: -6.997546672821045
    7. 'w' → logprob: -7.247546672821045
    8. '
' → logprob: -7.372546672821045
    9. '           ' → logprob: -8.372546195983887
    10. 'windows' → logprob: -8.372546195983887

Token 718: ' sum' (ID: 4215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028773857280611992
    2. '       ' → logprob: -3.778773784637451
    3. '
' → logprob: -6.403773784637451
    4. '   ' → logprob: -7.028773784637451
    5. 'prefix' → logprob: -7.028773784637451
    6. '+' → logprob: -7.403773784637451
    7. 'sum' → logprob: -8.02877426147461
    8. ',' → logprob: -8.65377426147461
    9. ' +' → logprob: -9.15377426147461
    10. ' prefix' → logprob: -9.27877426147461

Token 719: ' using' (ID: 2360)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00728880800306797
    2. '       ' → logprob: -5.257288932800293
    3. 'sum' → logprob: -7.382288932800293
    4. 'prefix' → logprob: -7.382288932800293
    5. '
' → logprob: -8.632288932800293
    6. '   ' → logprob: -8.757288932800293
    7. 'window' → logprob: -9.132288932800293
    8. ',' → logprob: -10.257288932800293
    9. ' prefix' → logprob: -10.257288932800293
    10. '```' → logprob: -10.507288932800293

Token 720: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.13071377575397491
    2. 'window' → logprob: -2.255713701248169
    3. 'curr' → logprob: -5.380713939666748
    4. ' prefix' → logprob: -5.380713939666748
    5. 'acc' → logprob: -5.880713939666748
    6. 'dp' → logprob: -6.380713939666748
    7. ' window' → logprob: -6.880713939666748
    8. '   ' → logprob: -7.005713939666748
    9. 'c' → logprob: -8.50571346282959
    10. 'psum' → logprob: -8.50571346282959

Token 721: ' sums' (ID: 73121)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0324920415878296
    2. '_sum' → logprob: -1.1574920415878296
    3. 'sum' → logprob: -1.6574920415878296
    4. '       ' → logprob: -2.407492160797119
    5. ' =' → logprob: -3.657492160797119
    6. 's' → logprob: -4.532492160797119
    7. ' sums' → logprob: -5.032492160797119
    8. '   ' → logprob: -6.407492160797119
    9. '_' → logprob: -6.657492160797119
    10. 'dp' → logprob: -7.157492160797119

Token 722: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08234449476003647
    2. '       ' → logprob: -2.8323445320129395
    3. '
' → logprob: -4.7073445320129395
    4. 'prefix' → logprob: -5.0823445320129395
    5. '   ' → logprob: -5.7073445320129395
    6. ' prefix' → logprob: -7.5823445320129395
    7. '```' → logprob: -8.957344055175781
    8. '\' → logprob: -9.082344055175781
    9. '_prefix' → logprob: -9.207344055175781
    10. '        
' → logprob: -9.457344055175781

Token 723: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04991554096341133
    2. '       ' → logprob: -3.2999155521392822
    3. '
' → logprob: -5.549915313720703
    4. '   ' → logprob: -5.674915313720703
    5. 'prefix' → logprob: -5.799915313720703
    6. '\' → logprob: -8.299915313720703
    7. '```' → logprob: -8.549915313720703
    8. ' prefix' → logprob: -8.549915313720703
    9. 'dp' → logprob: -9.424915313720703
    10. ',' → logprob: -9.674915313720703

Token 724: ' prefix' (ID: 18633)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19561967253684998
    2. '       ' → logprob: -1.8206197023391724
    3. 'prefix' (adapté à ' prefix') → logprob: -4.945619583129883
    4. '   ' → logprob: -5.945619583129883
    5. '
' → logprob: -6.070619583129883
    6. ' prefix' → logprob: -6.445619583129883
    7. '        ' → logprob: -7.820619583129883
    8. '    ' → logprob: -8.195619583129883
    9. '        
' → logprob: -8.695619583129883
    10. ' ' → logprob: -9.070619583129883

Token 725: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6278528571128845
    2. '=' → logprob: -0.8778528571128845
    3. '_sum' → logprob: -3.1278529167175293
    4. 'sum' → logprob: -5.502852916717529
    5. '_s' → logprob: -6.252852916717529
    6. 's' → logprob: -8.377852439880371
    7. '_' → logprob: -8.377852439880371
    8. '[' → logprob: -9.127852439880371
    9. '=[' → logprob: -9.627852439880371
    10. ' sums' → logprob: -10.252852439880371

Token 726: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008085522567853332
    2. ' [' → logprob: -7.1258087158203125
    3. '0' → logprob: -12.500808715820312
    4. '   ' → logprob: -15.375808715820312
    5. ' ' → logprob: -16.625808715820312
    6. '       ' → logprob: -17.500808715820312
    7. '[i' → logprob: -18.375808715820312
    8. 'dp' → logprob: -18.375808715820312
    9. '[p' → logprob: -18.500808715820312
    10. '[len' → logprob: -18.500808715820312

Token 727: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. 'dp' → logprob: -10.875027656555176
    3. '1' → logprob: -12.625027656555176
    4. '(' → logprob: -12.625027656555176
    5. 'self' → logprob: -13.875027656555176
    6. ' ' → logprob: -14.250027656555176
    7. '[' → logprob: -15.875027656555176
    8. 'None' → logprob: -16.375028610229492
    9. '   ' → logprob: -16.500028610229492
    10. '(dp' → logprob: -16.500028610229492

Token 728: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047761932015419006
    2. '(' → logprob: -4.422761917114258
    3. ']*(' → logprob: -4.422761917114258
    4. '*(' → logprob: -4.922761917114258
    5. ' *' → logprob: -5.797761917114258
    6. '(i' → logprob: -6.297761917114258
    7. ' (' → logprob: -6.547761917114258
    8. 'for' → logprob: -6.547761917114258
    9. ']+' → logprob: -6.547761917114258
    10. '0' → logprob: -6.672761917114258

Token 729: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.39334097504615784
    2. ' *' → logprob: -1.8933409452438354
    3. '*' → logprob: -2.393341064453125
    4. '(' → logprob: -2.643341064453125
    5. ' (' → logprob: -5.518341064453125
    6. ']' → logprob: -6.893341064453125
    7. '(len' → logprob: -6.893341064453125
    8. '(self' → logprob: -7.018341064453125
    9. '=' → logprob: -7.018341064453125
    10. '
' → logprob: -7.143341064453125

Token 730: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04861631989479065
    2. '(len' → logprob: -3.048616409301758
    3. '((' → logprob: -11.298616409301758
    4. ' (' → logprob: -11.923616409301758
    5. '(length' → logprob: -12.673616409301758
    6. '       ' → logprob: -13.173616409301758
    7. '(' → logprob: -13.423616409301758
    8. '(this' → logprob: -13.548616409301758
    9. '           ' → logprob: -14.798616409301758
    10. '   ' → logprob: -15.048616409301758

Token 731: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026323288679122925
    2. 'len' → logprob: -3.6513233184814453
    3. '   ' → logprob: -12.026323318481445
    4. ' self' → logprob: -12.151323318481445
    5. '           ' → logprob: -12.651323318481445
    6. '(self' → logprob: -12.776323318481445
    7. '       ' → logprob: -12.776323318481445
    8. '(len' → logprob: -14.026323318481445
    9. 'length' → logprob: -14.901323318481445
    10. '[self' → logprob: -15.151323318481445

Token 732: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.026329679414629936
    2. 'length' → logprob: -3.651329755783081
    3. '_length' → logprob: -11.40132999420166
    4. '	length' → logprob: -12.40132999420166
    5. ' length' → logprob: -13.02632999420166
    6. ',length' → logprob: -13.15132999420166
    7. ':length' → logprob: -13.27632999420166
    8. '(length' → logprob: -13.27632999420166
    9. 'len' → logprob: -13.40132999420166
    10. '[length' → logprob: -13.77632999420166

Token 733: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026302389800548553
    2. ' +' → logprob: -3.6513023376464844
    3. '+
' → logprob: -13.901302337646484
    4. '＋' → logprob: -15.401302337646484
    5. '       ' → logprob: -15.651302337646484
    6. '   ' → logprob: -16.026302337646484
    7. ' +
' → logprob: -16.276302337646484
    8. '
' → logprob: -16.401302337646484
    9. '()+' → logprob: -16.651302337646484
    10. '{' → logprob: -17.276302337646484

Token 734: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048637207597494125
    2. '2' → logprob: -3.0486371517181396
    3. ' ' → logprob: -10.173637390136719
    4. '   ' → logprob: -12.423637390136719
    5. '
' → logprob: -13.236137390136719
    6. '```' → logprob: -13.611137390136719
    7. '  ' → logprob: -14.923637390136719
    8. '11' → logprob: -14.986137390136719
    9. '12' → logprob: -15.298637390136719
    10. '10' → logprob: -15.298637390136719

Token 735: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028809530194848776
    2. '2' → logprob: -5.877881050109863
    3. ' ' → logprob: -10.002881050109863
    4. '   ' → logprob: -10.877881050109863
    5. '
' → logprob: -13.565381050109863
    6. '```' → logprob: -13.877881050109863
    7. '       ' → logprob: -14.002881050109863
    8. '{' → logprob: -14.127881050109863
    9. '  ' → logprob: -14.377881050109863
    10. '+' → logprob: -14.440381050109863

Token 736: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039906904101371765
    2. ')
' → logprob: -3.2899069786071777
    3. '       ' → logprob: -7.039906978607178
    4. '<|end|>' → logprob: -7.664906978607178
    5. '           ' → logprob: -9.53990650177002
    6. ']' → logprob: -9.53990650177002
    7. '
' → logprob: -9.66490650177002
    8. ' )' → logprob: -9.66490650177002
    9. ',' → logprob: -10.03990650177002
    10. '<|end|>' → logprob: -10.16490650177002

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14420771598815918
    2. '           ' → logprob: -3.144207715988159
    3. 'prefix' → logprob: -3.269207715988159
    4. '   ' → logprob: -3.519207715988159
    5. '	for' → logprob: -5.519207954406738
    6. '	       ' → logprob: -6.019207954406738
    7. ' prefix' → logprob: -6.019207954406738
    8. '	   ' → logprob: -6.019207954406738
    9. '```' → logprob: -6.144207954406738
    10. '<|end|>' → logprob: -6.269207954406738

Token 738: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.1469031274318695
    2. 'for' → logprob: -2.5219030380249023
    3. '           ' → logprob: -3.2719030380249023
    4. '       ' → logprob: -4.396903038024902
    5. ' for' → logprob: -6.021903038024902
    6. ' prefix' → logprob: -6.146903038024902
    7. '   ' → logprob: -6.646903038024902
    8. '	for' → logprob: -9.771903038024902
    9. '```' → logprob: -10.271903038024902
    10. '[' → logprob: -10.896903038024902

Token 739: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010303078452125192
    2. '=' → logprob: -7.001030445098877
    3. ' =' → logprob: -10.751029968261719
    4. 'prefix' → logprob: -11.001029968261719
    5. '```' → logprob: -11.126029968261719
    6. 'def' → logprob: -11.376029968261719
    7. '[
' → logprob: -11.501029968261719
    8. ' [' → logprob: -12.126029968261719
    9. '
' → logprob: -12.126029968261719
    10. '0' → logprob: -12.251029968261719

Token 740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.746380237629637e-05
    2. '[' → logprob: -10.250097274780273
    3. ' ' → logprob: -10.750097274780273
    4. '=' → logprob: -11.125097274780273
    5. '   ' → logprob: -12.125097274780273
    6. '
' → logprob: -12.250097274780273
    7. '1' → logprob: -12.625097274780273
    8. ']' → logprob: -13.062597274780273
    9. ' =' → logprob: -14.062597274780273
    10. 'def' → logprob: -14.187597274780273

Token 741: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9696261882781982
    2. ']' → logprob: -1.0946261882781982
    3. ']=' → logprob: -1.3446261882781982
    4. ' =' → logprob: -4.469626426696777
    5. ']+=' → logprob: -4.469626426696777
    6. ' ]' → logprob: -6.844626426696777
    7. '+=' → logprob: -7.094626426696777
    8. '+' → logprob: -8.094626426696777
    9. ' +=' → logprob: -9.094626426696777
    10. '[' → logprob: -9.094626426696777

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00044008632539771497
    2. ' =' → logprob: -7.7504401206970215
    3. '=
' → logprob: -11.625439643859863
    4. '=

' → logprob: -15.750439643859863
    5. '+=' → logprob: -16.12544059753418
    6. '=int' → logprob: -16.25044059753418
    7. '=True' → logprob: -16.62544059753418
    8. ']=' → logprob: -17.25044059753418
    9. '=}' → logprob: -17.50044059753418
    10. ')=' → logprob: -17.62544059753418

Token 743: ' dp' (ID: 21546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001933277933858335
    2. 'dp' → logprob: -6.2519330978393555
    3. ' ' → logprob: -12.751933097839355
    4. '0' → logprob: -14.126933097839355
    5. ' dp' → logprob: -15.001933097839355
    6. '   ' → logprob: -15.001933097839355
    7. '       ' → logprob: -15.626933097839355
    8. '	dp' → logprob: -16.876934051513672
    9. '(dp' → logprob: -17.001934051513672
    10. '```' → logprob: -17.626934051513672

Token 744: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.463036435074173e-05
    2. '0' → logprob: -10.750024795532227
    3. '       ' → logprob: -14.125024795532227
    4. ' [' → logprob: -14.750024795532227
    5. '```' → logprob: -15.125024795532227
    6. '[
' → logprob: -15.125024795532227
    7. 'prefix' → logprob: -15.125024795532227
    8. '\[' → logprob: -15.375024795532227
    9. 'def' → logprob: -15.750024795532227
    10. '[i' → logprob: -15.750024795532227

Token 745: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '[' → logprob: -17.25
    4. '   ' → logprob: -18.25
    5. '000' → logprob: -18.75
    6. '۰' → logprob: -18.875
    7. '00' → logprob: -19.625
    8. ' ' → logprob: -19.75
    9. '  ' → logprob: -20.1875
    10. '  ' → logprob: -20.3125

Token 746: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13183128833770752
    2. '+' → logprob: -2.756831169128418
    3. ']' → logprob: -3.756831169128418
    4. ')
' → logprob: -3.881831169128418
    5. '
' → logprob: -4.756831169128418
    6. ' +' → logprob: -5.256831169128418
    7. '+
' → logprob: -7.506831169128418
    8. '       ' → logprob: -7.631831169128418
    9. ']
' → logprob: -8.381831169128418
    10. ' 
' → logprob: -8.881831169128418

Token 747: '       ' (ID: 309)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.7651767134666443
    2. ' for' → logprob: -1.390176773071289
    3. '       ' → logprob: -1.765176773071289
    4. '```' → logprob: -3.515176773071289
    5. '           ' → logprob: -4.015176773071289
    6. '<|end|>' → logprob: -4.265176773071289
    7. '	       ' → logprob: -4.515176773071289
    8. 'for' → logprob: -4.765176773071289
    9. '   ' → logprob: -4.765176773071289
    10. '	' → logprob: -5.140176773071289

Token 748: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7325068116188049
    2. '           ' → logprob: -1.3575067520141602
    3. ' for' → logprob: -1.4825067520141602
    4. 'for' (adapté à ' for') → logprob: -3.85750675201416
    5. '	for' → logprob: -4.98250675201416
    6. '   ' → logprob: -5.60750675201416
    7. '	       ' → logprob: -6.85750675201416
    8. '        ' → logprob: -7.48250675201416
    9. '    ' → logprob: -8.10750675201416
    10. ' ' → logprob: -8.48250675201416

Token 749: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06867021322250366
    2. ' i' → logprob: -2.8186702728271484
    3. 'j' → logprob: -5.193670272827148
    4. ' j' → logprob: -6.818670272827148
    5. '   ' → logprob: -10.818670272827148
    6. 'idx' → logprob: -12.443670272827148
    7. ' ' → logprob: -12.818670272827148
    8. '       ' → logprob: -12.943670272827148
    9. '	i' → logprob: -13.318670272827148
    10. ' idx' → logprob: -13.443670272827148

Token 750: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010938993655145168
    2. 'in' → logprob: -4.635939121246338
    3. ' ' → logprob: -8.63593864440918
    4. ',' → logprob: -9.01093864440918
    5. '=' → logprob: -9.01093864440918
    6. ' =' → logprob: -9.13593864440918
    7. '	in' → logprob: -9.13593864440918
    8. '        ' → logprob: -9.51093864440918
    9. '1' → logprob: -9.51093864440918
    10. '(' → logprob: -9.63593864440918

Token 751: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05588316172361374
    2. ' ' → logprob: -3.9308831691741943
    3. ' range' → logprob: -4.055882930755615
    4. 'range' → logprob: -4.055882930755615
    5. '0' → logprob: -10.430883407592773
    6. '   ' → logprob: -10.805883407592773
    7. ' i' → logprob: -11.930883407592773
    8. ' in' → logprob: -12.180883407592773
    9. 'i' → logprob: -12.555883407592773
    10. '(range' → logprob: -12.680883407592773

Token 752: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933460831642151
    2. '1' → logprob: -0.6933460831642151
    3. '   ' → logprob: -9.44334602355957
    4. ' ' → logprob: -9.94334602355957
    5. '       ' → logprob: -10.06834602355957
    6. '           ' → logprob: -12.06834602355957
    7. 'range' → logprob: -12.31834602355957
    8. ' (' → logprob: -12.69334602355957
    9. '
' → logprob: -13.19334602355957
    10. ',' → logprob: -13.19334602355957

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.875016212463379
    3. '0' → logprob: -12.750016212463379
    4. 'i' → logprob: -12.750016212463379
    5. '   ' → logprob: -13.750016212463379
    6. 'self' → logprob: -13.875016212463379
    7. '2' → logprob: -15.687516212463379
    8. '
' → logprob: -15.812516212463379
    9. 'len' → logprob: -15.875016212463379
    10. '       ' → logprob: -15.937516212463379

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021764314733445644
    2. ' ,' → logprob: -6.627176284790039
    3. ',i' → logprob: -7.752176284790039
    4. ',
' → logprob: -9.627176284790039
    5. ')' → logprob: -9.752176284790039
    6. '       ' → logprob: -9.877176284790039
    7. '           ' → logprob: -10.002176284790039
    8. ',len' → logprob: -10.502176284790039
    9. '```' → logprob: -11.002176284790039
    10. ',self' → logprob: -11.002176284790039

Token 755: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03408176451921463
    2. 'i' → logprob: -3.6590816974639893
    3. ' self' → logprob: -4.909081935882568
    4. ' i' → logprob: -8.15908145904541
    5. 'len' → logprob: -10.15908145904541
    6. '           ' → logprob: -11.53408145904541
    7. '(self' → logprob: -11.65908145904541
    8. '   ' → logprob: -11.90908145904541
    9. '	self' → logprob: -11.90908145904541
    10. '[self' → logprob: -12.65908145904541

Token 756: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0002871993638109416
    2. '+' → logprob: -8.500287055969238
    3. 'length' → logprob: -9.750287055969238
    4. ' +' → logprob: -11.125287055969238
    5. ' length' → logprob: -12.750287055969238
    6. '_length' → logprob: -13.000287055969238
    7. ' .' → logprob: -13.625287055969238
    8. '[length' → logprob: -14.000287055969238
    9. '   ' → logprob: -14.250287055969238
    10. ':length' → logprob: -14.375287055969238

Token 757: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31341952085494995
    2. ' +' → logprob: -1.3134195804595947
    3. ')' → logprob: -10.438419342041016
    4. '1' → logprob: -10.563419342041016
    5. '   ' → logprob: -10.688419342041016
    6. '       ' → logprob: -10.813419342041016
    7. '```' → logprob: -11.188419342041016
    8. '()+' → logprob: -11.938419342041016
    9. '           ' → logprob: -12.063419342041016
    10. '+i' → logprob: -12.188419342041016

Token 758: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017479876056313515
    2. 'i' → logprob: -4.14247989654541
    3. ' ' → logprob: -6.89247989654541
    4. 'self' → logprob: -8.26747989654541
    5. '+' → logprob: -10.01747989654541
    6. '(i' → logprob: -10.39247989654541
    7. ' i' → logprob: -10.51747989654541
    8. ')' → logprob: -11.14247989654541
    9. '```' → logprob: -11.14247989654541
    10. '(self' → logprob: -11.14247989654541

Token 759: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030681451316922903
    2. 'i' → logprob: -6.378067970275879
    3. 'self' → logprob: -7.128067970275879
    4. '+' → logprob: -7.628067970275879
    5. 'length' → logprob: -10.378067970275879
    6. ' ' → logprob: -10.878067970275879
    7. '```' → logprob: -11.878067970275879
    8. '(self' → logprob: -12.503067970275879
    9. ')' → logprob: -12.878067970275879
    10. '(i' → logprob: -13.003067970275879

Token 760: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42254653573036194
    2. ':
' → logprob: -1.5475465059280396
    3. '):
' → logprob: -2.422546625137329
    4. '           ' → logprob: -3.547546625137329
    5. '       ' → logprob: -5.29754638671875
    6. ',' → logprob: -5.29754638671875
    7. '):' → logprob: -5.79754638671875
    8. '<|end|>' → logprob: -8.04754638671875
    9. '<|end|>' → logprob: -8.79754638671875
    10. '```' → logprob: -9.04754638671875

Token 761: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008554781670682132
    2. '	       ' → logprob: -8.125855445861816
    3. '```' → logprob: -8.500855445861816
    4. ' prefix' → logprob: -8.625855445861816
    5. '               ' → logprob: -9.500855445861816
    6. '       ' → logprob: -10.625855445861816
    7. '(prefix' → logprob: -11.000855445861816
    8. 'prefix' → logprob: -11.250855445861816
    9. '<|end|>' → logprob: -11.250855445861816
    10. '            ' → logprob: -12.625855445861816

Token 762: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14795443415641785
    2. ' dp' → logprob: -2.3979544639587402
    3. 'dp' → logprob: -3.6479544639587402
    4. 'prefix' → logprob: -4.39795446395874
    5. '       ' → logprob: -5.27295446395874
    6. ' prefix' → logprob: -6.39795446395874
    7. '	dp' → logprob: -7.77295446395874
    8. '```' → logprob: -7.77295446395874
    9. '               ' → logprob: -8.272953987121582
    10. '   ' → logprob: -8.272953987121582

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05408969148993492
    2. ' =' → logprob: -3.1790897846221924
    3. 'prefix' → logprob: -5.304089546203613
    4. ']' → logprob: -6.054089546203613
    5. '   ' → logprob: -7.429089546203613
    6. '_prefix' → logprob: -7.554089546203613
    7. ']=' → logprob: -7.804089546203613
    8. '-' → logprob: -8.054089546203613
    9. '```' → logprob: -8.054089546203613
    10. ',' → logprob: -8.429089546203613

Token 764: ' i' (ID: 575)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13621480762958527
    2. 'i' → logprob: -2.1362147331237793
    3. 'prefix' → logprob: -4.886214733123779
    4. ' max' → logprob: -6.511214733123779
    5. ' i' → logprob: -8.886215209960938
    6. '   ' → logprob: -10.511215209960938
    7. ' prefix' → logprob: -10.761215209960938
    8. '	max' → logprob: -11.511215209960938
    9. '	i' → logprob: -13.136215209960938
    10. '(max' → logprob: -13.261215209960938

Token 765: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02993202768266201
    2. ' -' → logprob: -3.5299320220947266
    3. '   ' → logprob: -9.029932022094727
    4. '       ' → logprob: -11.029932022094727
    5. '<|end|>' → logprob: -11.904932022094727
    6. '```' → logprob: -12.404932022094727
    7. '-prefix' → logprob: -12.404932022094727
    8. '[' → logprob: -12.779932022094727
    9. ',' → logprob: -12.779932022094727
    10. '           ' → logprob: -12.904932022094727

Token 766: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04882228374481201
    2. 'min' → logprob: -3.0488224029541016
    3. 'self' → logprob: -9.173822402954102
    4. '1' → logprob: -9.673822402954102
    5. ' c' → logprob: -10.548822402954102
    6. ' min' → logprob: -11.173822402954102
    7. 'max' → logprob: -11.798822402954102
    8. 'char' → logprob: -11.923822402954102
    9. '           ' → logprob: -12.048822402954102
    10. '       ' → logprob: -12.673822402954102

Token 767: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14920879900455475
    2. '           ' → logprob: -2.8992087841033936
    3. 'if' → logprob: -3.0242087841033936
    4. '
' → logprob: -3.3992087841033936
    5. '   ' → logprob: -8.024209022521973
    6. '+' → logprob: -8.774209022521973
    7. '	if' → logprob: -8.899209022521973
    8. '            
' → logprob: -9.024209022521973
    9. '<|end|>' → logprob: -9.149209022521973
    10. '       ' → logprob: -9.149209022521973

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18356004357337952
    2. ' if' → logprob: -1.8085600137710571
    3. 'if' → logprob: -6.058559894561768
    4. ' =' → logprob: -8.058560371398926
    5. '<|end|>' → logprob: -8.058560371398926
    6. '
' → logprob: -8.433560371398926
    7. '=' → logprob: -8.808560371398926
    8. '       ' → logprob: -9.058560371398926
    9. '```' → logprob: -9.308560371398926
    10. '   ' → logprob: -10.308560371398926

Token 769: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7166184186935425
    2. 'if' (adapté à ' if') → logprob: -0.9666184186935425
    3. ' if' → logprob: -2.591618537902832
    4. 'left' → logprob: -2.966618537902832
    5. 'prefix' → logprob: -5.966618537902832
    6. 'dp' → logprob: -6.841618537902832
    7. ' left' → logprob: -7.466618537902832
    8. 'right' → logprob: -7.841618537902832
    9. ' prefix' → logprob: -9.466618537902832
    10. 'sum' → logprob: -10.216618537902832

Token 770: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018333015963435173
    2. ' left' → logprob: -4.0183329582214355
    3. '           ' → logprob: -8.643333435058594
    4. '	left' → logprob: -12.893333435058594
    5. '               ' → logprob: -13.518333435058594
    6. '0' → logprob: -13.518333435058594
    7. '   ' → logprob: -14.518333435058594
    8. '            ' → logprob: -14.643333435058594
    9. '(left' → logprob: -15.143333435058594
    10. '       ' → logprob: -16.768333435058594

Token 771: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03875172138214111
    2. ' <' → logprob: -3.6637516021728516
    3. '>=' → logprob: -4.413751602172852
    4. ' >=' → logprob: -8.663751602172852
    5. '<=' → logprob: -11.288751602172852
    6. '<
' → logprob: -11.413751602172852
    7. '>' → logprob: -11.413751602172852
    8. '[' → logprob: -11.788751602172852
    9. '   ' → logprob: -12.288751602172852
    10. '
' → logprob: -12.413751602172852

Token 772: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.250016212463379
    3. '=' → logprob: -12.625016212463379
    4. '```' → logprob: -15.625016212463379
    5. '1' → logprob: -16.750017166137695
    6. '۰' → logprob: -18.250017166137695
    7. '０' → logprob: -18.500017166137695
    8. '
' → logprob: -18.750017166137695
    9. '   ' → logprob: -18.750017166137695
    10. '           ' → logprob: -19.250017166137695

Token 773: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. '=' → logprob: -11.375015258789062
    3. ' ' → logprob: -12.625015258789062
    4. '1' → logprob: -15.000015258789062
    5. '```' → logprob: -16.500015258789062
    6. '۰' → logprob: -17.875015258789062
    7. '０' → logprob: -18.500015258789062
    8. '   ' → logprob: -18.625015258789062
    9. '[' → logprob: -18.750015258789062
    10. '00' → logprob: -18.875015258789062

Token 774: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2196887880563736
    2. ':' → logprob: -1.8446887731552124
    3. '               ' → logprob: -3.344688892364502
    4. ':left' → logprob: -5.844688892364502
    5. 'left' → logprob: -8.094688415527344
    6. '[left' → logprob: -8.469688415527344
    7. '):
' → logprob: -8.844688415527344
    8. '           ' → logprob: -9.219688415527344
    9. ' or' → logprob: -10.094688415527344
    10. '       ' → logprob: -10.469688415527344

Token 775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18539386987686157
    2. ':
' → logprob: -2.435393810272217
    3. ':' → logprob: -2.560393810272217
    4. '):
' → logprob: -6.560393810272217
    5. '<|end|>' → logprob: -6.935393810272217
    6. ',' → logprob: -7.435393810272217
    7. ':left' → logprob: -8.435394287109375
    8. ' or' → logprob: -8.685394287109375
    9. '           ' → logprob: -8.810394287109375
    10. ' and' → logprob: -8.935394287109375

Token 776: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.036046795547008514
    2. '               ' → logprob: -3.6610467433929443
    3. 'prefix' → logprob: -4.786046981811523
    4. 'dp' → logprob: -7.286046981811523
    5. ' left' → logprob: -8.161046981811523
    6. '           ' → logprob: -8.786046981811523
    7. '	left' → logprob: -9.161046981811523
    8. '   ' → logprob: -9.661046981811523
    9. 'sum' → logprob: -11.536046981811523
    10. '                   ' → logprob: -11.911046981811523

Token 777: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03373606130480766
    2. ' =' → logprob: -3.408735990524292
    3. ']=' → logprob: -10.783736228942871
    4. '+' → logprob: -11.658736228942871
    5. '0' → logprob: -11.783736228942871
    6. '+=' → logprob: -11.908736228942871
    7. '[' → logprob: -11.908736228942871
    8. ']' → logprob: -11.908736228942871
    9. ')' → logprob: -12.033736228942871
    10. ' +=' → logprob: -12.283736228942871

Token 778: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '۰' → logprob: -18.625001907348633
    5. '```' → logprob: -19.125001907348633
    6. '=' → logprob: -19.750001907348633
    7. '０' → logprob: -20.250001907348633
    8. '           ' → logprob: -20.500001907348633
    9. '000' → logprob: -21.000001907348633
    10. '               ' → logprob: -21.125001907348633

Token 779: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.875
    4. '۰' → logprob: -18.5
    5. '０' → logprob: -19.375
    6. '000' → logprob: -19.5
    7. '```' → logprob: -19.75
    8. '           ' → logprob: -20.375
    9. '00' → logprob: -20.625
    10. '               ' → logprob: -20.875

Token 780: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018881839932873845
    2. '
' → logprob: -6.626888275146484
    3. '       ' → logprob: -8.376888275146484
    4. '```' → logprob: -9.501888275146484
    5. '<|end|>' → logprob: -9.626888275146484
    6. '	       ' → logprob: -10.251888275146484
    7. ',' → logprob: -10.501888275146484
    8. '		' → logprob: -10.751888275146484
    9. '            
' → logprob: -10.751888275146484
    10. '   ' → logprob: -10.876888275146484

Token 781: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013928539119660854
    2. '```' → logprob: -7.126392841339111
    3. '       ' → logprob: -7.751392841339111
    4. 'prefix' → logprob: -9.25139331817627
    5. '   ' → logprob: -10.62639331817627
    6. '
' → logprob: -12.00139331817627
    7. '            
' → logprob: -12.50139331817627
    8. '               ' → logprob: -12.75139331817627
    9. '<|end|>' → logprob: -12.75139331817627
    10. '		' → logprob: -12.87639331817627

Token 782: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05231596902012825
    2. 'dp' (adapté à ' dp') → logprob: -3.0523159503936768
    3. ' dp' → logprob: -5.927316188812256
    4. 'prefix' → logprob: -7.177316188812256
    5. '```' → logprob: -8.927315711975098
    6. '       ' → logprob: -9.427315711975098
    7. '	dp' → logprob: -10.177315711975098
    8. '   ' → logprob: -10.802315711975098
    9. ' prefix' → logprob: -12.052315711975098
    10. '(dp' → logprob: -12.302315711975098

Token 783: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017517358355689794
    2. '[' → logprob: -8.750175476074219
    3. '```' → logprob: -12.125175476074219
    4. '[I' → logprob: -12.375175476074219
    5. 'dp' → logprob: -12.625175476074219
    6. '\[' → logprob: -13.750175476074219
    7. '[
' → logprob: -14.375175476074219
    8. ']' → logprob: -14.750175476074219
    9. 'i' → logprob: -15.250175476074219
    10. '=' → logprob: -15.250175476074219

Token 784: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743879735469818
    2. ' =' → logprob: -0.9743880033493042
    3. ']' → logprob: -8.349388122558594
    4. ' +=' → logprob: -9.724388122558594
    5. '+=' → logprob: -11.599388122558594
    6. ']=' → logprob: -12.474388122558594
    7. ']+=' → logprob: -14.349388122558594
    8. ')' → logprob: -14.724388122558594
    9. ' ' → logprob: -15.099388122558594
    10. ' ]' → logprob: -15.849388122558594

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029811009764671326
    2. ' =' → logprob: -3.529810905456543
    3. '+=' → logprob: -10.029810905456543
    4. ' +=' → logprob: -11.029810905456543
    5. '=(' → logprob: -16.52981185913086
    6. '%=' → logprob: -16.90481185913086
    7. '=sum' → logprob: -17.15481185913086
    8. '=int' → logprob: -17.90481185913086
    9. '＝' → logprob: -18.15481185913086
    10. ',' → logprob: -18.65481185913086

Token 786: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.025326186791062355
    2. 'prefix' → logprob: -4.275326251983643
    3. ' (' → logprob: -4.525326251983643
    4. ' prefix' → logprob: -8.400325775146484
    5. '           ' → logprob: -11.900325775146484
    6. '   ' → logprob: -12.025325775146484
    7. '
' → logprob: -12.150325775146484
    8. '(
' → logprob: -12.275325775146484
    9. '(pref' → logprob: -12.400325775146484
    10. '(p' → logprob: -13.025325775146484

Token 787: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.006841826252639294
    2. '(prefix' → logprob: -5.006841659545898
    3. ' prefix' → logprob: -9.006841659545898
    4. ' (' → logprob: -13.256841659545898
    5. '   ' → logprob: -14.256841659545898
    6. 'suffix' → logprob: -15.381841659545898
    7. '(p' → logprob: -15.506841659545898
    8. 'dp' → logprob: -15.631841659545898
    9. '(' → logprob: -15.881841659545898
    10. '           ' → logprob: -16.5068416595459

Token 788: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.273621405242011e-05
    2. 'i' → logprob: -10.500032424926758
    3. '[' → logprob: -12.250032424926758
    4. '```' → logprob: -16.250032424926758
    5. '[I' → logprob: -16.750032424926758
    6. '[left' → logprob: -17.000032424926758
    7. '[
' → logprob: -17.875032424926758
    8. ' i' → logprob: -18.000032424926758
    9. '   ' → logprob: -18.125032424926758
    10. '[max' → logprob: -18.375032424926758

Token 789: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006308287265710533
    2. ' -' → logprob: -7.375630855560303
    3. '1' → logprob: -13.250630378723145
    4. '[-' → logprob: -13.875630378723145
    5. '[' → logprob: -14.500630378723145
    6. '[i' → logprob: -14.625630378723145
    7. '   ' → logprob: -15.000630378723145
    8. '```' → logprob: -15.000630378723145
    9. ' ' → logprob: -17.12563133239746
    10. '−' → logprob: -17.25063133239746

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -15.125001907348633
    4. '   ' → logprob: -16.500001907348633
    5. ']' → logprob: -16.687501907348633
    6. 'i' → logprob: -17.937501907348633
    7. ')' → logprob: -18.437501907348633
    8. '`' → logprob: -18.687501907348633
    9. '[' → logprob: -18.750001907348633
    10. 'from' → logprob: -19.000001907348633

Token 791: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012670567259192467
    2. '-' → logprob: -4.387670516967773
    3. ']' → logprob: -8.887670516967773
    4. ']-' → logprob: -11.137670516967773
    5. ' ' → logprob: -13.262670516967773
    6. ' -
' → logprob: -13.262670516967773
    7. ')' → logprob: -13.512670516967773
    8. '-
' → logprob: -13.762670516967773
    9. '```' → logprob: -14.262670516967773
    10. '])' → logprob: -15.012670516967773

Token 792: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03806111589074135
    2. '-' → logprob: -3.2880611419677734
    3. '-
' → logprob: -12.038061141967773
    4. ' -
' → logprob: -12.913061141967773
    5. ')' → logprob: -13.288061141967773
    6. '-prefix' → logprob: -13.413061141967773
    7. '        ' → logprob: -13.538061141967773
    8. '-p' → logprob: -13.538061141967773
    9. ' ' → logprob: -13.663061141967773
    10. '```' → logprob: -13.913061141967773

Token 793: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.014545880258083344
    2. '(prefix' → logprob: -4.264545917510986
    3. ' prefix' → logprob: -7.889545917510986
    4. ' (' → logprob: -12.014545440673828
    5. '(' → logprob: -13.514545440673828
    6. '           ' → logprob: -16.514545440673828
    7. '   ' → logprob: -16.889545440673828
    8. 'pre' → logprob: -17.639545440673828
    9. '_prefix' → logprob: -18.014545440673828
    10. 'PREFIX' → logprob: -18.514545440673828

Token 794: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -1.981667537620524e-06
    2. 'left' → logprob: -13.250001907348633
    3. '[max' → logprob: -15.875001907348633
    4. '[' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '[
' → logprob: -18.375001907348633
    7. '```' → logprob: -19.375001907348633
    8. '(left' → logprob: -19.750001907348633
    9. '	left' → logprob: -20.500001907348633
    10. '[right' → logprob: -20.625001907348633

Token 795: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1460610032081604
    2. ']' → logprob: -2.0210609436035156
    3. '+' → logprob: -6.646060943603516
    4. ']+' → logprob: -6.896060943603516
    5. '-' → logprob: -7.896060943603516
    6. ']%' → logprob: -8.021060943603516
    7. '   ' → logprob: -8.396060943603516
    8. '```' → logprob: -10.146060943603516
    9. ')' → logprob: -11.146060943603516
    10. ' +' → logprob: -11.271060943603516

Token 796: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009457575506530702
    2. 'i' → logprob: -7.250945568084717
    3. '```' → logprob: -8.750946044921875
    4. '   ' → logprob: -11.000946044921875
    5. ']' → logprob: -11.125946044921875
    6. '-' → logprob: -11.625946044921875
    7. '2' → logprob: -11.750946044921875
    8. ')' → logprob: -12.125946044921875
    9. ' ' → logprob: -12.625946044921875
    10. '
' → logprob: -12.875946044921875

Token 797: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09778384864330292
    2. ']' → logprob: -2.5977838039398193
    3. '+' → logprob: -4.722784042358398
    4. ' if' → logprob: -5.097784042358398
    5. 'if' → logprob: -6.097784042358398
    6. ')' → logprob: -7.222784042358398
    7. ' +' → logprob: -7.472784042358398
    8. ']+' → logprob: -9.972784042358398
    9. '])*' → logprob: -10.472784042358398
    10. ')]' → logprob: -10.972784042358398

Token 798: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1512860506772995
    2. '+' → logprob: -2.5262861251831055
    3. ' +' → logprob: -3.0262861251831055
    4. ' if' → logprob: -4.9012861251831055
    5. 'if' → logprob: -6.1512861251831055
    6. ']' → logprob: -6.6512861251831055
    7. ')%' → logprob: -7.5262861251831055
    8. '])' → logprob: -7.9012861251831055
    9. ' )' → logprob: -9.276286125183105
    10. '```' → logprob: -10.776286125183105

Token 799: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004085643216967583
    2. ' left' → logprob: -5.504085540771484
    3. '(left' → logprob: -12.129085540771484
    4. '	left' → logprob: -13.629085540771484
    5. '[left' → logprob: -14.754085540771484
    6. ' lef' → logprob: -16.629085540771484
    7. ':left' → logprob: -16.754085540771484
    8. ',left' → logprob: -17.879085540771484
    9. '_left' → logprob: -18.254085540771484
    10. 'i' → logprob: -18.254085540771484

Token 800: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.06964749842882156
    2. '-' → logprob: -3.6946475505828857
    3. ' >=' → logprob: -4.194647312164307
    4. '>-' → logprob: -4.444647312164307
    5. '>' → logprob: -4.819647312164307
    6. '!=' → logprob: -5.944647312164307
    7. '!=-' → logprob: -6.194647312164307
    8. '+' → logprob: -6.319647312164307
    9. ' !=' → logprob: -7.944647312164307
    10. ' -' → logprob: -7.944647312164307

Token 801: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. '=' → logprob: -11.000028610229492
    3. ' ' → logprob: -11.375028610229492
    4. '1' → logprob: -15.250028610229492
    5. '```' → logprob: -18.125028610229492
    6. '-' → logprob: -18.375028610229492
    7. '   ' → logprob: -19.000028610229492
    8. '>' → logprob: -19.000028610229492
    9. '<|end|>' → logprob: -19.375028610229492
    10. '[' → logprob: -19.750028610229492

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024215869780164212
    2. '=' → logprob: -8.375242233276367
    3. ' ' → logprob: -12.000242233276367
    4. '-' → logprob: -12.250242233276367
    5. '```' → logprob: -15.750242233276367
    6. '1' → logprob: -16.000242233276367
    7. '
' → logprob: -16.375242233276367
    8. '۰' → logprob: -17.250242233276367
    9. ' -' → logprob: -17.312742233276367
    10. '   ' → logprob: -17.437742233276367

Token 803: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.038069721311330795
    2. 'else' → logprob: -3.288069725036621
    3. '+' → logprob: -11.288069725036621
    4. '```' → logprob: -12.163069725036621
    5. ')' → logprob: -12.413069725036621
    6. '           ' → logprob: -12.788069725036621
    7. '            ' → logprob: -13.538069725036621
    8. ' +' → logprob: -13.538069725036621
    9. '          ' → logprob: -15.413069725036621
    10. '        ' → logprob: -15.538069725036621

Token 804: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.47408005595207214
    2. 'prefix' → logprob: -0.9740800857543945
    3. '(prefix' → logprob: -12.724080085754395
    4. ' ' → logprob: -17.224079132080078
    5. '_prefix' → logprob: -17.599079132080078
    6. '           ' → logprob: -18.099079132080078
    7. '0' → logprob: -18.349079132080078
    8. 'refix' → logprob: -18.974079132080078
    9. ' (' → logprob: -19.224079132080078
    10. '            ' → logprob: -19.349079132080078

Token 805: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. ' [' → logprob: -13.62500286102295
    3. '[' → logprob: -13.87500286102295
    4. '   ' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.125001907348633
    6. '[
' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '           ' → logprob: -18.500001907348633
    9. ' i' → logprob: -18.500001907348633
    10. '	' → logprob: -18.625001907348633

Token 806: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003932576219085604
    2. ' -' → logprob: -7.875393390655518
    3. '1' → logprob: -11.62539291381836
    4. '[' → logprob: -13.50039291381836
    5. ' ' → logprob: -14.12539291381836
    6. '   ' → logprob: -14.37539291381836
    7. ']' → logprob: -14.37539291381836
    8. 'i' → logprob: -15.12539291381836
    9. '−' → logprob: -15.50039291381836
    10. '0' → logprob: -16.00039291381836

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -12.000008583068848
    3. 'i' → logprob: -14.125008583068848
    4. '```' → logprob: -14.812508583068848
    5. '2' → logprob: -15.187508583068848
    6. '   ' → logprob: -15.625008583068848
    7. '' → logprob: -16.187509536743164
    8. '۱' → logprob: -16.625009536743164
    9. '
' → logprob: -16.812509536743164
    10. '１' → logprob: -16.937509536743164

Token 808: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025466508232057095
    2. ' )' → logprob: -6.002546787261963
    3. '+' → logprob: -10.627546310424805
    4. ')%' → logprob: -10.877546310424805
    5. '])' → logprob: -11.877546310424805
    6. ']' → logprob: -12.502546310424805
    7. '))' → logprob: -13.002546310424805
    8. ')
' → logprob: -13.252546310424805
    9. ' ' → logprob: -13.377546310424805
    10. ' +' → logprob: -13.877546310424805

Token 809: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.28727424144744873
    2. '%' → logprob: -1.5372742414474487
    3. ')' → logprob: -4.037274360656738
    4. ' +' → logprob: -4.787274360656738
    5. '
' → logprob: -5.662274360656738
    6. '           ' → logprob: -5.787274360656738
    7. ')%' → logprob: -6.787274360656738
    8. '+' → logprob: -8.037274360656738
    9. ' ' → logprob: -8.787274360656738
    10. '       ' → logprob: -9.162274360656738

Token 810: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.8624639324116288e-06
    2. ' MOD' → logprob: -13.250001907348633
    3. '_MOD' → logprob: -20.375001907348633
    4. '.MOD' → logprob: -23.000001907348633
    5. '`' → logprob: -24.875001907348633
    6. 'MO' → logprob: -25.000001907348633
    7. 'MD' → logprob: -25.250001907348633
    8. '```' → logprob: -25.375001907348633
    9. 'MODULE' → logprob: -25.500001907348633
    10. 'M' → logprob: -25.500001907348633

Token 811: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.715107798576355
    2. '           ' → logprob: -0.715107798576355
    3. '   ' → logprob: -5.0901079177856445
    4. '       ' → logprob: -5.2151079177856445
    5. '  
' → logprob: -6.3401079177856445
    6. '<|end|>' → logprob: -6.3401079177856445
    7. '    
' → logprob: -6.5901079177856445
    8. '        
' → logprob: -6.7151079177856445
    9. '```' → logprob: -6.9651079177856445
    10. '            
' → logprob: -7.3401079177856445

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034067943692207336
    2. '       ' → logprob: -3.5340678691864014
    3. '   ' → logprob: -5.6590681076049805
    4. '
' → logprob: -7.9090681076049805
    5. '```' → logprob: -8.03406810760498
    6. '<|end|>' → logprob: -10.78406810760498
    7. '        
' → logprob: -11.15906810760498
    8. 'prefix' → logprob: -11.15906810760498
    9. ',' → logprob: -11.28406810760498
    10. '          ' → logprob: -11.40906810760498

Token 813: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8050369620323181
    2. 'prefix' (adapté à ' prefix') → logprob: -1.180037021636963
    3. '           ' → logprob: -1.430037021636963
    4. '   ' → logprob: -6.055037021636963
    5. ' prefix' → logprob: -6.180037021636963
    6. '```' → logprob: -6.680037021636963
    7. '
' → logprob: -7.680037021636963
    8. '``' → logprob: -10.180036544799805
    9. '        
' → logprob: -10.430036544799805
    10. '​' → logprob: -10.555036544799805

Token 814: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.000001907348633
    3. '[I' → logprob: -15.125001907348633
    4. '=' → logprob: -15.250001907348633
    5. '=i' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.750001907348633
    7. ' =' → logprob: -17.250001907348633
    8. '[
' → logprob: -17.750001907348633
    9. '=[' → logprob: -17.875001907348633
    10. 'i' → logprob: -18.000001907348633

Token 815: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3951611816883087
    2. ']' → logprob: -1.2701611518859863
    3. ']=' → logprob: -3.1451611518859863
    4. ' =' → logprob: -6.020161151885986
    5. ']+=' → logprob: -9.270161628723145
    6. '=
' → logprob: -10.770161628723145
    7. ' ]' → logprob: -11.145161628723145
    8. '+=' → logprob: -12.020161628723145
    9. ')' → logprob: -12.520161628723145
    10. ')=' → logprob: -12.645161628723145

Token 816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023294975981116295
    2. ' =' → logprob: -3.7732949256896973
    3. '+=' → logprob: -10.273295402526855
    4. ' +=' → logprob: -12.148295402526855
    5. ']=' → logprob: -13.273295402526855
    6. '[' → logprob: -13.398295402526855
    7. ']' → logprob: -13.773295402526855
    8. '=[' → logprob: -13.898295402526855
    9. '   ' → logprob: -14.023295402526855
    10. ')' → logprob: -14.398295402526855

Token 817: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00013321757433004677
    2. ' (' → logprob: -9.500133514404297
    3. '(prefix' → logprob: -10.000133514404297
    4. '(' → logprob: -11.500133514404297
    5. '(pid' → logprob: -14.000133514404297
    6. '   ' → logprob: -14.875133514404297
    7. '(p' → logprob: -15.000133514404297
    8. '(df' → logprob: -15.375133514404297
    9. '(dc' → logprob: -15.875133514404297
    10. '(dx' → logprob: -16.625133514404297

Token 818: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.020976481959223747
    2. '(prefix' → logprob: -3.8959765434265137
    3. 'dp' → logprob: -8.020976066589355
    4. ' prefix' → logprob: -9.395976066589355
    5. '(dp' → logprob: -10.770976066589355
    6. '(p' → logprob: -14.895976066589355
    7. ' (' → logprob: -15.020976066589355
    8. 'p' → logprob: -15.145976066589355
    9. 'PREFIX' → logprob: -15.395976066589355
    10. '_prefix' → logprob: -15.520976066589355

Token 819: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -13.000004768371582
    3. 'prefix' → logprob: -13.750004768371582
    4. '```' → logprob: -14.625004768371582
    5. '[' → logprob: -15.500004768371582
    6. '(i' → logprob: -16.000003814697266
    7. '`' → logprob: -16.125003814697266
    8. '   ' → logprob: -17.000003814697266
    9. ']' → logprob: -18.000003814697266
    10. '[j' → logprob: -18.125003814697266

Token 820: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001394161517964676
    2. '[i' → logprob: -9.500139236450195
    3. ' -' → logprob: -10.000139236450195
    4. ']' → logprob: -11.125139236450195
    5. '[' → logprob: -13.750139236450195
    6. 'i' → logprob: -13.875139236450195
    7. '-
' → logprob: -14.250139236450195
    8. '(i' → logprob: -15.000139236450195
    9. '1' → logprob: -15.375139236450195
    10. '   ' → logprob: -15.375139236450195

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -11.375020980834961
    3. 'prefix' → logprob: -12.250020980834961
    4. '```' → logprob: -13.750020980834961
    5. ']' → logprob: -14.750020980834961
    6. '   ' → logprob: -14.875020980834961
    7. ')' → logprob: -15.125020980834961
    8. 'i' → logprob: -15.250020980834961
    9. '<|end|>' → logprob: -15.437520980834961
    10. '0' → logprob: -15.687520980834961

Token 822: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931489706039429
    2. ' +' → logprob: -0.6931489706039429
    3. '+
' → logprob: -14.693148612976074
    4. ' ' → logprob: -14.943148612976074
    5. ')' → logprob: -15.068148612976074
    6. '
' → logprob: -15.193148612976074
    7. '+d' → logprob: -15.693148612976074
    8. ' +
' → logprob: -16.31814956665039
    9. 'dp' → logprob: -16.94314956665039
    10. ')+' → logprob: -17.19314956665039

Token 823: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16041117906570435
    2. ' +' → logprob: -1.9104111194610596
    3. 'dp' → logprob: -9.41041088104248
    4. ')' → logprob: -10.66041088104248
    5. '+
' → logprob: -10.66041088104248
    6. '<|end|>' → logprob: -10.66041088104248
    7. '
' → logprob: -11.91041088104248
    8. ' dp' → logprob: -12.16041088104248
    9. '(dp' → logprob: -12.53541088104248
    10. '_dp' → logprob: -12.78541088104248

Token 824: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -18.125335693359375
    4. '(dp' → logprob: -19.625335693359375
    5. 'd' → logprob: -20.875335693359375
    6. '```' → logprob: -21.250335693359375
    7. '_dp' → logprob: -22.000335693359375
    8. '
' → logprob: -22.375335693359375
    9. 'dc' → logprob: -22.625335693359375
    10. ' ' → logprob: -22.625335693359375

Token 825: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -17.0
    4. 'i' → logprob: -17.875
    5. '[
' → logprob: -18.375
    6. ')' → logprob: -19.0
    7. ' [' → logprob: -19.0
    8. ']' → logprob: -19.375
    9. '[I' → logprob: -19.5
    10. ')[' → logprob: -19.75

Token 826: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014528519241139293
    2. '])' → logprob: -7.001452922821045
    3. '[i' → logprob: -7.876452922821045
    4. ']' → logprob: -9.251452445983887
    5. ')%' → logprob: -10.001452445983887
    6. ' )' → logprob: -11.876452445983887
    7. '   ' → logprob: -12.126452445983887
    8. '       ' → logprob: -12.876452445983887
    9. '）' → logprob: -13.251452445983887
    10. '`)' → logprob: -14.001452445983887

Token 827: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03907999023795128
    2. ' %' → logprob: -3.2890799045562744
    3. ')' → logprob: -7.5390801429748535
    4. ')%' → logprob: -8.414079666137695
    5. '       ' → logprob: -9.039079666137695
    6. '%i' → logprob: -10.039079666137695
    7. ']%' → logprob: -10.414079666137695
    8. ']' → logprob: -10.789079666137695
    9. '<|end|>' → logprob: -11.414079666137695
    10. '           ' → logprob: -11.414079666137695

Token 828: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '_MOD' → logprob: -18.000017166137695
    4. '```' → logprob: -20.250017166137695
    5. '.MOD' → logprob: -21.625017166137695
    6. '`' → logprob: -22.375017166137695
    7. '100' → logprob: -22.875017166137695
    8. 'mod' → logprob: -23.500017166137695
    9. 'Mod' → logprob: -23.750017166137695
    10. 'MO' → logprob: -23.750017166137695

Token 829: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021104535087943077
    2. '<|end|>' → logprob: -3.896104574203491
    3. '```' → logprob: -8.27110481262207
    4. 'return' → logprob: -9.14610481262207
    5. '	return' → logprob: -10.02110481262207
    6. ' return' → logprob: -10.02110481262207
    7. '	' → logprob: -10.14610481262207
    8. '<|end|>' → logprob: -10.64610481262207
    9. '
' → logprob: -11.39610481262207
    10. '   ' → logprob: -11.52110481262207

Token 831: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007747290190309286
    2. 'return' (adapté à ' return') → logprob: -4.882747173309326
    3. ' return' → logprob: -9.382747650146484
    4. '```' → logprob: -11.132747650146484
    5. '	' → logprob: -11.257747650146484
    6. '
' → logprob: -11.257747650146484
    7. '   ' → logprob: -12.257747650146484
    8. '	return' → logprob: -12.382747650146484
    9. '        
' → logprob: -13.007747650146484
    10. '           ' → logprob: -13.132747650146484

Token 832: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889155298471451
    2. ' dp' → logprob: -2.5788915157318115
    3. '	dp' → logprob: -13.82889175415039
    4. '(dp' → logprob: -14.07889175415039
    5. '_dp' → logprob: -16.57889175415039
    6. '   ' → logprob: -18.70389175415039
    7. '.dp' → logprob: -19.45389175415039
    8. '       ' → logprob: -19.45389175415039
    9. '```' → logprob: -19.95389175415039
    10. ' ' → logprob: -20.20389175415039

Token 833: '[self' (ID: 33734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16244277358055115
    2. '[self' → logprob: -2.037442684173584
    3. '<|end|>' → logprob: -4.912442684173584
    4. '[len' → logprob: -5.037442684173584
    5. '[length' → logprob: -5.787442684173584
    6. '[-' → logprob: -6.662442684173584
    7. '```' → logprob: -8.037443161010742
    8. '[i' → logprob: -8.662443161010742
    9. '<|end|>' → logprob: -8.787443161010742
    10. '[end' → logprob: -8.912443161010742

Token 834: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -5.9153885558771435e-06
    2. 'length' → logprob: -12.125005722045898
    3. '.l' → logprob: -15.500005722045898
    4. 'ength' → logprob: -16.2500057220459
    5. '.len' → logprob: -16.7500057220459
    6. '.' → logprob: -17.2500057220459
    7. ':length' → logprob: -18.5000057220459
    8. '.size' → logprob: -18.7500057220459
    9. ',length' → logprob: -18.8750057220459
    10. '	length' → logprob: -19.2500057220459

Token 835: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.2842308680992573e-05
    2. ' ]' → logprob: -10.875022888183594
    3. ']
' → logprob: -13.000022888183594
    4. ']%' → logprob: -14.250022888183594
    5. '}' → logprob: -15.500022888183594
    6. '<|end|>' → logprob: -15.750022888183594
    7. '[' → logprob: -15.875022888183594
    8. ')' → logprob: -16.000022888183594
    9. '-' → logprob: -17.125022888183594
    10. '   ' → logprob: -17.375022888183594

Token 836: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' Interpretation' (ID: 163569)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.7444957494735718
    2. 'Message' → logprob: -1.4944957494735718
    3. 'Decoder' → logprob: -1.7444957494735718
    4. 'Input' → logprob: -3.7444958686828613
    5. 'Press' → logprob: -3.8694958686828613
    6. 'Solver' → logprob: -4.119495868682861
    7. 'Text' → logprob: -4.869495868682861
    8. 'Interpreter' → logprob: -5.244495868682861
    9. 'Phone' → logprob: -5.369495868682861
    10. 'Translator' → logprob: -5.494495868682861

Token 838: 'Model' (ID: 2239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20702944695949554
    2. 'Builder' → logprob: -2.457029342651367
    3. 'Calculator' → logprob: -3.582029342651367
    4. 'Splitter' → logprob: -4.207029342651367
    5. 'Parser' → logprob: -4.832029342651367
    6. '(' → logprob: -4.957029342651367
    7. 'Handler' → logprob: -5.082029342651367
    8. 'Manager' → logprob: -5.082029342651367
    9. 'Counter' → logprob: -5.332029342651367
    10. 'Processor' → logprob: -5.707029342651367

Token 839: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02384839579463005
    2. '(' → logprob: -3.773848295211792
    3. ':
' → logprob: -8.398848533630371
    4. '(Character' → logprob: -9.023848533630371
    5. '(K' → logprob: -9.148848533630371
    6. '(Abstract' → logprob: -9.273848533630371
    7. '<|end|>' → logprob: -10.898848533630371
    8. '):' → logprob: -11.648848533630371
    9. ',' → logprob: -12.898848533630371
    10. '{' → logprob: -13.148848533630371

Token 840: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0012879748828709126
    2. 'Character' → logprob: -6.876287937164307
    3. 'List' → logprob: -9.501288414001465
    4. '):
' → logprob: -10.126288414001465
    5. '):' → logprob: -10.251288414001465
    6. 'object' → logprob: -10.376288414001465
    7. ')' → logprob: -10.626288414001465
    8. ' ABC' → logprob: -10.876288414001465
    9. 'Abstract' → logprob: -11.376288414001465
    10. 'thread' → logprob: -12.751288414001465

Token 841: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37520453333854675
    2. ':' → logprob: -1.3752045631408691
    3. '):
' → logprob: -2.875204563140869
    4. ':
' → logprob: -6.500204563140869
    5. '<|end|>' → logprob: -7.250204563140869
    6. '(' → logprob: -8.000204086303711
    7. ')' → logprob: -8.125204086303711
    8. ',' → logprob: -8.125204086303711
    9. '```' → logprob: -9.500204086303711
    10. '[' → logprob: -9.750204086303711

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003333968110382557
    2. '
' → logprob: -6.753334045410156
    3. ':' → logprob: -7.003334045410156
    4. ':
' → logprob: -7.878334045410156
    5. '):
' → logprob: -8.128334045410156
    6. 'class' → logprob: -8.503334045410156
    7. '```' → logprob: -8.878334045410156
    8. '<|end|>' → logprob: -9.878334045410156
    9. '  ' → logprob: -10.128334045410156
    10. ' ' → logprob: -10.878334045410156

Token 843: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2207598239183426
    2. ' def' → logprob: -1.9707598686218262
    3. 'def' → logprob: -3.720759868621826
    4. 'class' → logprob: -4.220759868621826
    5. '@' (adapté à ' @') → logprob: -5.095759868621826
    6. ' @' → logprob: -5.220759868621826
    7. '	def' → logprob: -6.595759868621826
    8. 'abstract' → logprob: -6.595759868621826
    9. '
' → logprob: -6.720759868621826
    10. ' _' → logprob: -7.345759868621826

Token 844: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.9361264946837764e-07
    2. ' abstract' → logprob: -16.625
    3. 'staticmethod' → logprob: -17.75
    4. 'property' → logprob: -17.875
    5. 'abc' → logprob: -18.75
    6. '.abstract' → logprob: -20.625
    7. 'classmethod' → logprob: -21.5
    8. 'ab' → logprob: -22.875
    9. 'abs' → logprob: -23.125
    10. '```' → logprob: -23.875

Token 845: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.006308546755462885
    2. '_method' → logprob: -5.381308555603027
    3. 'def' → logprob: -6.756308555603027
    4. 'classmethod' → logprob: -8.006308555603027
    5. 'staticmethod' → logprob: -10.256308555603027
    6. '_token' → logprob: -10.256308555603027
    7. '   ' → logprob: -10.631308555603027
    8. 'class' → logprob: -11.006308555603027
    9. ' method' → logprob: -11.256308555603027
    10. '
' → logprob: -11.506308555603027

Token 846: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30425670742988586
    2. '
' → logprob: -1.4292566776275635
    3. ' def' → logprob: -4.429256916046143
    4. '   ' → logprob: -5.179256916046143
    5. 'method' → logprob: -6.304256916046143
    6. '    
' → logprob: -6.804256916046143
    7. '<|end|>' → logprob: -7.179256916046143
    8. '_method' → logprob: -7.929256916046143
    9. 'classmethod' → logprob: -8.179256439208984
    10. '	def' → logprob: -8.929256439208984

Token 847: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4334375262260437
    2. 'def' → logprob: -1.0584375858306885
    3. '   ' → logprob: -5.808437347412109
    4. 'method' → logprob: -7.183437347412109
    5. '    
' → logprob: -8.05843734741211
    6. ' def' → logprob: -8.43343734741211
    7. '```' → logprob: -8.43343734741211
    8. 'classmethod' → logprob: -9.93343734741211
    9. '_method' → logprob: -10.55843734741211
    10. '	def' → logprob: -10.68343734741211

Token 848: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2529095411300659
    2. 'abstract' → logprob: -1.502909541130066
    3. 'staticmethod' → logprob: -7.7529096603393555
    4. 'property' → logprob: -8.502909660339355
    5. 'classmethod' → logprob: -8.502909660339355
    6. 'abc' → logprob: -9.502909660339355
    7. 'method' → logprob: -10.252909660339355
    8. ' def' → logprob: -10.877909660339355
    9. 'define' → logprob: -11.752909660339355
    10. 'get' → logprob: -13.377909660339355

Token 849: ' parse' (ID: 8420)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -0.41064217686653137
    2. 'number' → logprob: -1.785642147064209
    3. 'get' → logprob: -2.910642147064209
    4. 'calculate' → logprob: -3.535642147064209
    5. ' number' → logprob: -3.660642147064209
    6. 'count' → logprob: -4.410642147064209
    7. 'decode' → logprob: -4.410642147064209
    8. ' interpret' → logprob: -4.535642147064209
    9. ' get' → logprob: -5.285642147064209
    10. 'possible' → logprob: -5.660642147064209

Token 850: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11500544100999832
    2. '(' → logprob: -2.4900054931640625
    3. '_input' → logprob: -4.1150054931640625
    4. '_sequence' → logprob: -5.7400054931640625
    5. '_' → logprob: -6.3650054931640625
    6. '_tokens' → logprob: -7.2400054931640625
    7. '_press' → logprob: -7.7400054931640625
    8. '_line' → logprob: -7.9900054931640625
    9. '_sequences' → logprob: -8.115005493164062
    10. '_code' → logprob: -8.365005493164062

Token 851: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005358617752790451
    2. '(' → logprob: -5.630358695983887
    3. '_line' → logprob: -6.380358695983887
    4. '_lines' → logprob: -11.255358695983887
    5. '(
' → logprob: -11.880358695983887
    6. '(line' → logprob: -12.130358695983887
    7. '(s' → logprob: -12.255358695983887
    8. '_text' → logprob: -12.380358695983887
    9. '_token' → logprob: -12.380358695983887
    10. 'self' → logprob: -12.630358695983887

Token 852: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3046002984046936
    2. ',' → logprob: -1.5546002388000488
    3. ')' → logprob: -3.929600238800049
    4. 'self' → logprob: -4.054600238800049
    5. '):
' → logprob: -4.804600238800049
    6. '_line' → logprob: -5.804600238800049
    7. '(self' → logprob: -6.554600238800049
    8. '   ' → logprob: -7.929600238800049
    9. '_lines' → logprob: -8.804600715637207
    10. 's' → logprob: -9.179600715637207

Token 853: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01854519359767437
    2. 'lines' → logprob: -4.018545150756836
    3. ' self' → logprob: -8.893545150756836
    4. 'line' → logprob: -8.893545150756836
    5. 'input' → logprob: -9.768545150756836
    6. 'stream' → logprob: -10.768545150756836
    7. ' lines' → logprob: -11.143545150756836
    8. 'text' → logprob: -11.393545150756836
    9. ')' → logprob: -12.393545150756836
    10. 'raw' → logprob: -12.643545150756836

Token 854: '_str' (ID: 6182)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.10171949863433838
    2. '):' → logprob: -3.101719379425049
    3. '   ' → logprob: -4.226719379425049
    4. '):
' → logprob: -4.476719379425049
    5. '_reader' → logprob: -5.101719379425049
    6. '_string' → logprob: -5.851719379425049
    7. '_str' → logprob: -5.976719379425049
    8. ':' → logprob: -6.101719379425049
    9. '_line' → logprob: -6.226719379425049
    10. '_tokens' → logprob: -6.601719379425049

Token 855: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2637838125228882
    2. '):
' → logprob: -2.0137839317321777
    3. ':' → logprob: -2.7637839317321777
    4. ')' → logprob: -3.3887839317321777
    5. '   ' → logprob: -7.388783931732178
    6. ':str' → logprob: -8.26378345489502
    7. '):
' → logprob: -8.76378345489502
    8. '       ' → logprob: -9.13878345489502
    9. '[' → logprob: -9.76378345489502
    10. '```' → logprob: -10.01378345489502

Token 856: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07948913425207138
    2. ' str' → logprob: -2.579489231109619
    3. ')' → logprob: -7.454489231109619
    4. 'List' → logprob: -11.454488754272461
    5. '[str' → logprob: -12.704488754272461
    6. ':str' → logprob: -12.954488754272461
    7. '):
' → logprob: -13.829488754272461
    8. '),' → logprob: -14.454488754272461
    9. '	str' → logprob: -14.704488754272461
    10. '```' → logprob: -14.829488754272461

Token 857: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. '   ' → logprob: -11.375022888183594
    3. '):' → logprob: -11.875022888183594
    4. ' )' → logprob: -13.375022888183594
    5. ')->' → logprob: -13.750022888183594
    6. '`)' → logprob: -14.125022888183594
    7. '):
' → logprob: -14.750022888183594
    8. '       ' → logprob: -15.250022888183594
    9. '')' → logprob: -16.750022888183594
    10. '")' → logprob: -16.875022888183594

Token 858: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.301323801279068
    2. ' ->' → logprob: -1.9263237714767456
    3. ':' → logprob: -2.801323890686035
    4. ')->' → logprob: -3.676323890686035
    5. ')' → logprob: -3.801323890686035
    6. '   ' → logprob: -5.301323890686035
    7. '       ' → logprob: -8.051323890686035
    8. ':
' → logprob: -8.176323890686035
    9. ',' → logprob: -9.301323890686035
    10. '()->' → logprob: -9.551323890686035

Token 859: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005164555623196065
    2. ' List' → logprob: -7.750516414642334
    3. 'int' → logprob: -10.125516891479492
    4. '[List' → logprob: -11.000516891479492
    5. 'Press' → logprob: -11.625516891479492
    6. '	List' → logprob: -11.625516891479492
    7. 'list' → logprob: -12.500516891479492
    8. 'None' → logprob: -13.125516891479492
    9. '   ' → logprob: -13.625516891479492
    10. 'str' → logprob: -13.625516891479492

Token 860: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.013893619179725647
    2. '[' → logprob: -4.5138936042785645
    3. '[List' → logprob: -6.3888936042785645
    4. '[int' → logprob: -6.7638936042785645
    5. '[
' → logprob: -13.013894081115723
    6. '[]' → logprob: -13.513894081115723
    7. 'str' → logprob: -14.513894081115723
    8. '<|end|>' → logprob: -14.513894081115723
    9. '[...]' → logprob: -14.638894081115723
    10. '[String' → logprob: -15.013894081115723

Token 861: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -0.0013289296766743064
    2. 'int' → logprob: -7.126328945159912
    3. 'str' → logprob: -7.626328945159912
    4. 'List' → logprob: -11.376328468322754
    5. '[int' → logprob: -11.501328468322754
    6. ''' → logprob: -12.126328468322754
    7. '[str' → logprob: -13.501328468322754
    8. ' Press' → logprob: -13.751328468322754
    9. '[' → logprob: -14.001328468322754
    10. 'Print' → logprob: -14.126328468322754

Token 862: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.0020121450070291758
    2. 'Groups' → logprob: -7.002012252807617
    3. ']' → logprob: -7.127012252807617
    4. 'es' → logprob: -9.502012252807617
    5. 'Sequence' → logprob: -9.752012252807617
    6. 's' → logprob: -10.377012252807617
    7. ' Group' → logprob: -10.502012252807617
    8. ')' → logprob: -10.877012252807617
    9. '_group' → logprob: -10.877012252807617
    10. '_Group' → logprob: -11.002012252807617

Token 863: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5838737487792969
    2. ')' → logprob: -1.4588737487792969
    3. ']:' → logprob: -2.208873748779297
    4. ']' → logprob: -2.708873748779297
    5. '])' → logprob: -4.083873748779297
    6. ']):' → logprob: -4.833873748779297
    7. '   ' → logprob: -5.833873748779297
    8. '):
' → logprob: -5.833873748779297
    9. ':' → logprob: -8.083873748779297
    10. ']):
' → logprob: -8.208873748779297

Token 864: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06326611340045929
    2. 'def' → logprob: -3.5632660388946533
    3. ')' → logprob: -4.188266277313232
    4. '       ' → logprob: -5.063266277313232
    5. '```' → logprob: -5.188266277313232
    6. ' def' → logprob: -5.688266277313232
    7. '
' → logprob: -6.813266277313232
    8. ':' → logprob: -7.938266277313232
    9. '):
' → logprob: -7.938266277313232
    10. '(self' → logprob: -8.813265800476074

Token 865: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064506810158491135
    2. '   ' → logprob: -5.631450653076172
    3. 'def' → logprob: -6.006450653076172
    4. 'pass' (adapté à ' pass') → logprob: -8.506450653076172
    5. ' pass' → logprob: -9.381450653076172
    6. '```' → logprob: -9.631450653076172
    7. '    ' → logprob: -11.131450653076172
    8. ' def' → logprob: -12.381450653076172
    9. 'return' → logprob: -12.506450653076172
    10. '      ' → logprob: -13.131450653076172

Token 866: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11478237807750702
    2. 'class' → logprob: -2.4897823333740234
    3. '   ' → logprob: -3.7397823333740234
    4. '<|end|>' → logprob: -6.739782333374023
    5. '```' → logprob: -8.364782333374023
    6. '

' → logprob: -8.364782333374023
    7. '    
' → logprob: -10.739782333374023
    8. ' class' → logprob: -10.864782333374023
    9. ' 
' → logprob: -11.489782333374023
    10. '<|end|>' → logprob: -11.489782333374023

Token 867: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.625001907348633
    4. ' class' → logprob: -16.000001907348633
    5. '
' → logprob: -16.750001907348633
    6. '<class' → logprob: -16.875001907348633
    7. 'def' → logprob: -17.750001907348633
    8. '#' → logprob: -18.125001907348633
    9. 'Here' → logprob: -18.250001907348633
    10. 'import' → logprob: -18.375001907348633

Token 868: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011217819526791573
    2. 'def' → logprob: -4.5112175941467285
    3. '@' (adapté à ' @') → logprob: -9.261218070983887
    4. 'abstract' → logprob: -9.636218070983887
    5. '   ' → logprob: -11.761218070983887
    6. ' def' → logprob: -14.261218070983887
    7. '
' → logprob: -14.636218070983887
    8. '```' → logprob: -15.386218070983887
    9. 'from' → logprob: -15.511218070983887
    10. '@property' → logprob: -16.51121711730957

Token 869: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.3199920178740285e-05
    2. 'staticmethod' → logprob: -10.875022888183594
    3. 'property' → logprob: -12.625022888183594
    4. 'abc' → logprob: -14.625022888183594
    5. 'classmethod' → logprob: -15.250022888183594
    6. ' abstract' → logprob: -15.875022888183594
    7. 'override' → logprob: -18.000022888183594
    8. 'implementation' → logprob: -18.000022888183594
    9. 'code' → logprob: -19.875022888183594
    10. 'implement' → logprob: -21.125022888183594

Token 870: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.2621549665927887
    2. 'def' → logprob: -1.5121549367904663
    3. '
' → logprob: -5.512155055999756
    4. ' def' → logprob: -5.762155055999756
    5. '_method' → logprob: -6.512155055999756
    6. '   ' → logprob: -6.887155055999756
    7. '<|end|>' → logprob: -9.012154579162598
    8. ' method' → logprob: -9.137154579162598
    9. '    
' → logprob: -10.137154579162598
    10. 'classmethod' → logprob: -10.262154579162598

Token 871: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09011432528495789
    2. 'def' → logprob: -2.4651143550872803
    3. '   ' → logprob: -7.090114116668701
    4. ' def' → logprob: -8.46511459350586
    5. '<|end|>' → logprob: -10.09011459350586
    6. '
' → logprob: -10.46511459350586
    7. '    
' → logprob: -10.71511459350586
    8. '<|end|>' → logprob: -11.21511459350586
    9. '	def' → logprob: -11.96511459350586
    10. '\' → logprob: -12.34011459350586

Token 872: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14441026747226715
    2. '
' → logprob: -2.6444103717803955
    3. '   ' → logprob: -2.7694103717803955
    4. ' def' → logprob: -8.144410133361816
    5. '	def' → logprob: -8.519410133361816
    6. '    
' → logprob: -9.769410133361816
    7. '```' → logprob: -9.894410133361816
    8. '
' → logprob: -10.644410133361816
    9. '<|end|>' → logprob: -11.144410133361816
    10. '  ' → logprob: -11.269410133361816

Token 873: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.36574100604048e-06
    2. ' def' → logprob: -13.000004768371582
    3. '
' → logprob: -13.125004768371582
    4. 'from' → logprob: -17.875003814697266
    5. '	def' → logprob: -19.000003814697266
    6. 'de' → logprob: -19.125003814697266
    7. '   ' → logprob: -19.375003814697266
    8. '_def' → logprob: -19.625003814697266
    9. 'staticmethod' → logprob: -20.000003814697266
    10. 'code' → logprob: -20.250003814697266

Token 874: ' count' (ID: 3605)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -0.11538323014974594
    2. 'calculate' → logprob: -3.3653831481933594
    3. 'compute' → logprob: -3.4903831481933594
    4. 'number' → logprob: -3.9903831481933594
    5. 'count' → logprob: -4.990383148193359
    6. 'get' → logprob: -4.990383148193359
    7. 'decode' → logprob: -5.615383148193359
    8. ' interpret' → logprob: -5.865383148193359
    9. 'process' → logprob: -6.615383148193359
    10. 'generate' → logprob: -6.740383148193359

Token 875: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5430667996406555
    2. '_inter' → logprob: -1.2930667400360107
    3. '_tokens' → logprob: -2.1680667400360107
    4. '_possible' → logprob: -4.16806697845459
    5. '_codes' → logprob: -5.54306697845459
    6. '_token' → logprob: -6.79306697845459
    7. '(' → logprob: -6.79306697845459
    8. '_all' → logprob: -7.41806697845459
    9. '_sequences' → logprob: -7.41806697845459
    10. '_s' → logprob: -7.41806697845459

Token 876: 'pret' (ID: 12540)
  Prédit: 'pret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -8.41866585687967e-06
    2. 'pre' → logprob: -12.625008583068848
    3. '```' → logprob: -12.625008583068848
    4. 'Pret' → logprob: -14.125008583068848
    5. '``' → logprob: -15.250008583068848
    6. 'preter' → logprob: -15.750008583068848
    7. 'pr' → logprob: -15.875008583068848
    8. 'p' → logprob: -16.00000762939453
    9. 'ret' → logprob: -16.12500762939453
    10. '   ' → logprob: -17.00000762939453

Token 877: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00029875844484195113
    2. 'et' → logprob: -8.500298500061035
    3. 't' → logprob: -9.875298500061035
    4. 'ation' → logprob: -10.625298500061035
    5. 'at' → logprob: -11.875298500061035
    6. 'er' → logprob: -13.000298500061035
    7. '   ' → logprob: -13.375298500061035
    8. '```' → logprob: -13.375298500061035
    9. '_' → logprob: -13.625298500061035
    10. 'def' → logprob: -14.000298500061035

Token 878: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001961224712431431
    2. '(' → logprob: -6.2519612312316895
    3. 'self' → logprob: -11.376960754394531
    4. '   ' → logprob: -12.001960754394531
    5. 's' → logprob: -12.126960754394531
    6. '```' → logprob: -12.126960754394531
    7. '_' → logprob: -13.376960754394531
    8. ' (' → logprob: -14.626960754394531
    9. '       ' → logprob: -14.626960754394531
    10. '_for' → logprob: -15.126960754394531

Token 879: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23987030982971191
    2. 'self' → logprob: -2.614870309829712
    3. '(self' → logprob: -2.614870309829712
    4. ',' → logprob: -2.864870309829712
    5. '   ' → logprob: -5.114870071411133
    6. '):' → logprob: -6.114870071411133
    7. '       ' → logprob: -8.114870071411133
    8. '):
' → logprob: -8.239870071411133
    9. ')_' → logprob: -8.364870071411133
    10. ')(' → logprob: -8.489870071411133

Token 880: ' press' (ID: 4989)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.25194093585014343
    2. 'self' → logprob: -1.6269409656524658
    3. 'groups' → logprob: -3.751940965652466
    4. ' self' → logprob: -6.876940727233887
    5. ' press' → logprob: -7.376940727233887
    6. 'input' → logprob: -7.876940727233887
    7. 'pressed' → logprob: -8.626940727233887
    8. ' presses' → logprob: -8.751940727233887
    9. '   ' → logprob: -8.876940727233887
    10. ' groups' → logprob: -9.126940727233887

Token 881: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.2700456380844116
    2. 's' → logprob: -1.7700456380844116
    3. 'ed' → logprob: -2.770045757293701
    4. '_sequences' → logprob: -6.645045757293701
    5. '_sequence' → logprob: -7.020045757293701
    6. 'es' → logprob: -7.395045757293701
    7. 'groups' → logprob: -7.395045757293701
    8. 'Groups' → logprob: -9.770045280456543
    9. '_group' → logprob: -10.020045280456543
    10. '   ' → logprob: -10.145045280456543

Token 882: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07345331460237503
    2. ':' → logprob: -2.698453426361084
    3. '   ' → logprob: -5.948453426361084
    4. '):' → logprob: -7.448453426361084
    5. 'self' → logprob: -8.698452949523926
    6. ',' → logprob: -10.698452949523926
    7. '       ' → logprob: -10.698452949523926
    8. '):
' → logprob: -10.948452949523926
    9. '(self' → logprob: -11.073452949523926
    10. '`)' → logprob: -11.448452949523926

Token 883: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004339321982115507
    2. ' List' → logprob: -5.504339218139648
    3. ')' → logprob: -8.254339218139648
    4. '[List' → logprob: -15.004339218139648
    5. '   ' → logprob: -15.754339218139648
    6. '	List' → logprob: -16.50433921813965
    7. ' )' → logprob: -17.12933921813965
    8. '(List' → logprob: -17.37933921813965
    9. '_list' → logprob: -18.37933921813965
    10. '```' → logprob: -18.50433921813965

Token 884: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010270876373397186
    2. ')' → logprob: -9.500102996826172
    3. '[
' → logprob: -11.000102996826172
    4. '['' → logprob: -12.750102996826172
    5. '```' → logprob: -13.000102996826172
    6. '   ' → logprob: -13.875102996826172
    7. ']' → logprob: -14.125102996826172
    8. '[...,' → logprob: -14.500102996826172
    9. '<|end|>' → logprob: -14.625102996826172
    10. '[int' → logprob: -15.000102996826172

Token 885: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -5.512236498361744e-07
    2. ' Press' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.5
    4. 'press' → logprob: -17.625
    5. ')' → logprob: -17.75
    6. 'Pass' → logprob: -17.875
    7. '[' → logprob: -18.0
    8. 'Pressed' → logprob: -18.25
    9. 'Pressure' → logprob: -18.625
    10. 'Print' → logprob: -19.25

Token 886: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.0067234220914542675
    2. 'Groups' → logprob: -5.006723403930664
    3. '<Group' → logprob: -13.256723403930664
    4. '_groups' → logprob: -13.381723403930664
    5. '_GROUP' → logprob: -13.756723403930664
    6. '_group' → logprob: -13.756723403930664
    7. '	Group' → logprob: -13.881723403930664
    8. 'roups' → logprob: -14.256723403930664
    9. 'roup' → logprob: -15.256723403930664
    10. '_Group' → logprob: -15.506723403930664

Token 887: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005096645909361541
    2. '])' → logprob: -7.625509738922119
    3. ' )' → logprob: -11.375509262084961
    4. '   ' → logprob: -11.875509262084961
    5. '`)' → logprob: -14.125509262084961
    6. '       ' → logprob: -14.625509262084961
    7. ' ])' → logprob: -15.000509262084961
    8. ']' → logprob: -15.125509262084961
    9. ')])' → logprob: -15.125509262084961
    10. '）' → logprob: -15.375509262084961

Token 888: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3755510449409485
    2. ' ->' → logprob: -2.0005509853363037
    3. '(self' → logprob: -2.1255509853363037
    4. '->' → logprob: -3.0005509853363037
    5. '   ' → logprob: -5.500551223754883
    6. ')->' → logprob: -6.250551223754883
    7. 'def' → logprob: -7.000551223754883
    8. '(' → logprob: -7.375551223754883
    9. ' def' → logprob: -7.375551223754883
    10. '       ' → logprob: -8.750551223754883

Token 889: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164102263748646
    2. ' int' → logprob: -4.264163970947266
    3. '	int' → logprob: -15.889163970947266
    4. '   ' → logprob: -15.889163970947266
    5. '[int' → logprob: -16.014163970947266
    6. '(int' → logprob: -16.264163970947266
    7. ':int' → logprob: -16.389163970947266
    8. '=int' → logprob: -17.889163970947266
    9. '<int' → logprob: -18.639163970947266
    10. ']int' → logprob: -19.389163970947266

Token 890: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8790814876556396
    2. '       ' → logprob: -1.5040814876556396
    3. '   ' → logprob: -1.5040814876556396
    4. '(self' → logprob: -2.2540814876556396
    5. 'self' → logprob: -3.8790814876556396
    6. ':' → logprob: -5.004081726074219
    7. '
' → logprob: -6.754081726074219
    8. '):
' → logprob: -6.879081726074219
    9. '```' → logprob: -6.879081726074219
    10. ',' → logprob: -7.129081726074219

Token 891: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026949994266033173
    2. '<|end|>' → logprob: -4.651949882507324
    3. '    
' → logprob: -5.026949882507324
    4. '
' → logprob: -5.026949882507324
    5. '```' → logprob: -6.026949882507324
    6. ' 
' → logprob: -8.276949882507324
    7. '    ' → logprob: -8.526949882507324
    8. '       ' → logprob: -9.026949882507324
    9. '[' → logprob: -9.026949882507324
    10. '<|end|>' → logprob: -9.151949882507324

Token 892: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7450293898582458
    2. '   ' → logprob: -1.2450294494628906
    3. '       ' → logprob: -1.4950294494628906
    4. 'pass' (adapté à ' pass') → logprob: -4.370029449462891
    5. '    ' → logprob: -8.24502944946289
    6. '	pass' → logprob: -9.62002944946289
    7. '
' → logprob: -10.37002944946289
    8. '```' → logprob: -10.62002944946289
    9. '     ' → logprob: -10.74502944946289
    10. '  ' → logprob: -10.99502944946289

Token 893: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004089796915650368
    2. '
' → logprob: -5.504089832305908
    3. '

' → logprob: -12.12908935546875
    4. ' class' → logprob: -12.50408935546875
    5. '```' → logprob: -14.25408935546875
    6. '<class' → logprob: -14.87908935546875
    7. 'import' → logprob: -15.25408935546875
    8. '
' → logprob: -15.50408935546875
    9. '  
' → logprob: -15.75408935546875
    10. '<|end|>' → logprob: -15.75408935546875

Token 894: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.50000286102295
    3. '<class' → logprob: -14.37500286102295
    4. ' class' → logprob: -14.50000286102295
    5. '"class' → logprob: -15.75000286102295
    6. '
' → logprob: -15.87500286102295
    7. '<|end|>' → logprob: -16.250003814697266
    8. 'import' → logprob: -16.250003814697266
    9. 'The' → logprob: -17.500003814697266
    10. 'Here' → logprob: -17.625003814697266

Token 895: ' Press' (ID: 13463)
  Prédit: 'Kana'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Kana' → logprob: -0.07733248174190521
    2. ' Kana' → logprob: -3.4523324966430664
    3. 'Simple' → logprob: -4.577332496643066
    4. 'Standard' → logprob: -5.202332496643066
    5. 'Japanese' → logprob: -5.577332496643066
    6. 'Default' → logprob: -5.577332496643066
    7. 'Basic' → logprob: -5.827332496643066
    8. 'Numeric' → logprob: -6.202332496643066
    9. 'Classic' → logprob: -6.827332496643066
    10. ' kana' → logprob: -6.827332496643066

Token 896: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.33273354172706604
    2. 'Sequence' → logprob: -2.332733631134033
    3. 'Groups' → logprob: -2.332733631134033
    4. 'Interpret' → logprob: -3.207733631134033
    5. 'Grouping' → logprob: -3.707733631134033
    6. 'Model' → logprob: -4.332733631134033
    7. 'Interpreter' → logprob: -5.082733631134033
    8. 'Split' → logprob: -6.832733631134033
    9. 'Sequences' → logprob: -7.582733631134033
    10. 'Based' → logprob: -7.582733631134033

Token 897: 'Interpreter' (ID: 87527)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.7737283110618591
    2. 'Interpreter' → logprob: -1.773728370666504
    3. 'Sequence' → logprob: -2.023728370666504
    4. 'Parser' → logprob: -2.273728370666504
    5. 'Splitter' → logprob: -2.898728370666504
    6. 'Interpret' → logprob: -3.023728370666504
    7. 's' → logprob: -5.023728370666504
    8. 'List' → logprob: -5.148728370666504
    9. '(' → logprob: -5.148728370666504
    10. 'Based' → logprob: -6.273728370666504

Token 898: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015100834891200066
    2. ':' → logprob: -4.390100955963135
    3. '(Abstract' → logprob: -6.140100955963135
    4. '(Character' → logprob: -8.265100479125977
    5. '(K' → logprob: -9.515100479125977
    6. '():' → logprob: -10.265100479125977
    7. ':
' → logprob: -10.640100479125977
    8. '(I' → logprob: -11.390100479125977
    9. 'Press' → logprob: -11.765100479125977
    10. 'K' → logprob: -12.640100479125977

Token 899: 'Interpret' (ID: 175703)
  Prédit: 'Interpret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interpret' → logprob: -0.2531662881374359
    2. 'ABC' → logprob: -1.5031663179397583
    3. 'Character' → logprob: -7.503166198730469
    4. ' Interpretation' → logprob: -8.253166198730469
    5. 'Abstract' → logprob: -8.378166198730469
    6. ' ABC' → logprob: -10.128166198730469
    7. '(' → logprob: -10.253166198730469
    8. 'interpret' → logprob: -10.253166198730469
    9. 'Explanation' → logprob: -11.003166198730469
    10. ')' → logprob: -11.128166198730469

Token 900: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0020154789090156555
    2. 'er' → logprob: -6.252015590667725
    3. 'et' → logprob: -10.502015113830566
    4. 'eter' → logprob: -11.377015113830566
    5. 'ter' → logprob: -11.752015113830566
    6. 'method' → logprob: -11.752015113830566
    7. 't' → logprob: -11.877015113830566
    8. 'model' → logprob: -12.127015113830566
    9. 'preter' → logprob: -12.252015113830566
    10. 'group' → logprob: -13.002015113830566

Token 901: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.0017171852523460984
    2. 'er' → logprob: -6.6267170906066895
    3. '):
' → logprob: -8.126717567443848
    4. ')' → logprob: -10.126717567443848
    5. '	Model' → logprob: -11.376717567443848
    6. 'Interpreter' → logprob: -12.001717567443848
    7. '):' → logprob: -12.126717567443848
    8. '(Model' → logprob: -12.501717567443848
    9. '<Model' → logprob: -12.501717567443848
    10. ' Model' → logprob: -12.626717567443848

Token 902: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4743514358997345
    2. '):' → logprob: -0.9743514060974121
    3. ':' → logprob: -9.09935188293457
    4. '):
' → logprob: -9.72435188293457
    5. '   ' → logprob: -10.09935188293457
    6. ':
' → logprob: -11.09935188293457
    7. '<|end|>' → logprob: -11.84935188293457
    8. '()):
' → logprob: -12.34935188293457
    9. '():
' → logprob: -12.47435188293457
    10. '):

' → logprob: -12.47435188293457

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03699156641960144
    2. ':' → logprob: -3.411991596221924
    3. ':
' → logprob: -5.786991596221924
    4. 'def' → logprob: -9.411991119384766
    5. '```' → logprob: -9.411991119384766
    6. '):
' → logprob: -9.786991119384766
    7. '
' → logprob: -10.911991119384766
    8. 'class' → logprob: -11.411991119384766
    9. ' def' → logprob: -11.661991119384766
    10. '):' → logprob: -12.286991119384766

Token 904: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3833164572715759
    2. '   ' → logprob: -1.2583165168762207
    3. ' def' → logprob: -3.3833165168762207
    4. 'class' → logprob: -8.258316040039062
    5. '	def' → logprob: -10.008316040039062
    6. '
' → logprob: -11.258316040039062
    7. ' ' → logprob: -12.633316040039062
    8. '```' → logprob: -12.633316040039062
    9. 'indent' → logprob: -12.883316040039062
    10. '  ' → logprob: -13.383316040039062

Token 905: ' __' (ID: 2516)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.029896045103669167
    2. 'parse' → logprob: -3.5298960208892822
    3. 'def' → logprob: -9.654895782470703
    4. ' def' → logprob: -9.779895782470703
    5. ' __' → logprob: -11.904895782470703
    6. '(parse' → logprob: -12.154895782470703
    7. '   ' → logprob: -12.779895782470703
    8. '__' → logprob: -12.904895782470703
    9. '```' → logprob: -13.279895782470703
    10. '	parse' → logprob: -13.529895782470703

Token 906: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -17.625
    3. ' init' → logprob: -18.0
    4. '_init' → logprob: -18.25
    5. 'int' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. 'name' → logprob: -20.875
    8. 'inite' → logprob: -21.25
    9. 'iter' → logprob: -21.375
    10. 'it' → logprob: -21.625

Token 907: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016570331528782845
    2. '(self' → logprob: -4.141570568084717
    3. '__(
' → logprob: -7.891570568084717
    4. '__' → logprob: -9.516570091247559
    5. '(' → logprob: -10.266570091247559
    6. '_(' → logprob: -11.266570091247559
    7. 'self' → logprob: -11.766570091247559
    8. ' (' → logprob: -11.891570091247559
    9. '<>(' → logprob: -12.141570091247559
    10. '__((' → logprob: -12.141570091247559

Token 908: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012892624363303185
    2. ')' → logprob: -9.125128746032715
    3. ' self' → logprob: -11.125128746032715
    4. '(self' → logprob: -13.250128746032715
    5. '   ' → logprob: -13.750128746032715
    6. '):
' → logprob: -14.000128746032715
    7. ')(' → logprob: -14.250128746032715
    8. 'char' → logprob: -15.375128746032715
    9. '):' → logprob: -15.875128746032715
    10. ' ' → logprob: -16.25012969970703

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4409007430076599
    2. '__(' → logprob: -1.5659008026123047
    3. '(self' → logprob: -2.3159008026123047
    4. 'self' → logprob: -3.0659008026123047
    5. '):
' → logprob: -6.565900802612305
    6. '   ' → logprob: -7.940900802612305
    7. '__,' → logprob: -8.940900802612305
    8. ' (' → logprob: -9.190900802612305
    9. '
' → logprob: -9.565900802612305
    10. ')(' → logprob: -9.815900802612305

Token 910: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.0005268189124763012
    2. 'character' → logprob: -8.500526428222656
    3. 'self' → logprob: -8.750526428222656
    4. ' char' → logprob: -8.750526428222656
    5. '_char' → logprob: -13.000526428222656
    6. 'mapping' → logprob: -13.625526428222656
    7. 'Char' → logprob: -14.000526428222656
    8. '   ' → logprob: -14.250526428222656
    9. ' character' → logprob: -14.625526428222656
    10. 'Character' → logprob: -15.125526428222656

Token 911: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.0051295082084834576
    2. 'mapping' → logprob: -5.505129337310791
    3. 'acter' → logprob: -6.880129337310791
    4. 'acters' → logprob: -11.38012981414795
    5. 'act' → logprob: -12.50512981414795
    6. 'Mapping' → logprob: -13.00512981414795
    7. '_map' → logprob: -13.50512981414795
    8. 'map' → logprob: -13.88012981414795
    9. '_MAPPING' → logprob: -13.88012981414795
    10. ' mapping' → logprob: -14.50512981414795

Token 912: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3295782208442688
    2. '):' → logprob: -1.329578161239624
    3. '):
' → logprob: -4.829578399658203
    4. '=' → logprob: -4.829578399658203
    5. '=None' → logprob: -9.454578399658203
    6. ')' → logprob: -9.954578399658203
    7. '):
' → logprob: -11.204578399658203
    8. ' =' → logprob: -11.204578399658203
    9. ',' → logprob: -11.329578399658203
    10. '(K' → logprob: -11.579578399658203

Token 913: ' Character' (ID: 27668)
  Prédit: 'Kana'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kana' → logprob: -0.2164536416530609
    2. 'Character' → logprob: -1.7164536714553833
    3. ' Kana' → logprob: -4.216453552246094
    4. ' Character' → logprob: -9.591453552246094
    5. 'Char' → logprob: -10.091453552246094
    6. 'Kan' → logprob: -10.716453552246094
    7. ')' → logprob: -10.966453552246094
    8. '<Character' → logprob: -11.841453552246094
    9. ' kana' → logprob: -11.966453552246094
    10. 'character' → logprob: -13.216453552246094

Token 914: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -7.350386295001954e-05
    2. '_mapping' → logprob: -9.875073432922363
    3. ')' → logprob: -12.000073432922363
    4. ' Mapping' → logprob: -12.000073432922363
    5. '_MAPPING' → logprob: -12.875073432922363
    6. 'mapping' → logprob: -13.250073432922363
    7. '=' → logprob: -13.625073432922363
    8. ':' → logprob: -13.875073432922363
    9. '):' → logprob: -14.375073432922363
    10. '   ' → logprob: -14.375073432922363

Token 915: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25215885043144226
    2. '):
' → logprob: -1.5021588802337646
    3. '   ' → logprob: -9.127159118652344
    4. '):
' → logprob: -9.877159118652344
    5. '       ' → logprob: -10.252159118652344
    6. ')' → logprob: -10.627159118652344
    7. ',' → logprob: -11.752159118652344
    8. ':' → logprob: -13.627159118652344
    9. ' ' → logprob: -15.377159118652344
    10. '):

' → logprob: -15.502159118652344

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036627871450036764
    2. 'self' → logprob: -5.628662586212158
    3. ' self' → logprob: -10.253663063049316
    4. '   ' → logprob: -10.628663063049316
    5. ',' → logprob: -13.378663063049316
    6. '```' → logprob: -14.878663063049316
    7. ':' → logprob: -15.253663063049316
    8. '	self' → logprob: -15.378663063049316
    9. '	' → logprob: -15.503663063049316
    10. '(self' → logprob: -15.628663063049316

Token 917: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012547792866826057
    2. '       ' → logprob: -4.512547969818115
    3. ' self' → logprob: -6.512547969818115
    4. '   ' → logprob: -11.262547492980957
    5. '	self' → logprob: -13.887547492980957
    6. 'super' → logprob: -16.387548446655273
    7. 'def' → logprob: -16.637548446655273
    8. '           ' → logprob: -17.387548446655273
    9. ' ' → logprob: -17.637548446655273
    10. '
' → logprob: -17.887548446655273

Token 918: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -7.696077227592468e-05
    2. '._' → logprob: -9.875077247619629
    3. 'char' → logprob: -11.375077247619629
    4. '.' → logprob: -12.250077247619629
    5. '.character' → logprob: -12.375077247619629
    6. '_char' → logprob: -12.750077247619629
    7. ' .' → logprob: -14.125077247619629
    8. '.Char' → logprob: -14.625077247619629
    9. '.charset' → logprob: -15.750077247619629
    10. '	char' → logprob: -16.000076293945312

Token 919: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -9.043078898685053e-05
    2. 'mapping' → logprob: -9.375090599060059
    3. '_count' → logprob: -12.500090599060059
    4. 'Mapping' → logprob: -14.375090599060059
    5. '   ' → logprob: -15.250090599060059
    6. '=_' → logprob: -15.500090599060059
    7. '_MAPPING' → logprob: -15.875090599060059
    8. 'count' → logprob: -15.875090599060059
    9. '_map' → logprob: -16.500089645385742
    10. '_' → logprob: -16.750089645385742

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14273199439048767
    2. ' =' → logprob: -2.0177319049835205
    3. '   ' → logprob: -10.267731666564941
    4. ')' → logprob: -11.017731666564941
    5. 'import' → logprob: -13.767731666564941
    6. ':' → logprob: -13.892731666564941
    7. '       ' → logprob: -14.017731666564941
    8. '.' → logprob: -14.017731666564941
    9. ',' → logprob: -14.892731666564941
    10. ' ' → logprob: -15.517731666564941

Token 921: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -2.935296834039036e-06
    2. ' char' → logprob: -12.75000286102295
    3. '(char' → logprob: -20.250003814697266
    4. '	char' → logprob: -20.500003814697266
    5. '_char' → logprob: -21.500003814697266
    6. 'Char' → logprob: -22.125003814697266
    7. '<char' → logprob: -22.250003814697266
    8. 'character' → logprob: -22.750003814697266
    9. '.char' → logprob: -23.250003814697266
    10. 'cha' → logprob: -23.625003814697266

Token 922: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.0004309076175559312
    2. 'mapping' → logprob: -7.750431060791016
    3. 'Mapping' → logprob: -15.625431060791016
    4. '_MAPPING' → logprob: -16.750431060791016
    5. ' mapping' → logprob: -17.000431060791016
    6. 'apping' → logprob: -18.875431060791016
    7. '_map' → logprob: -19.375431060791016
    8. '_' → logprob: -19.625431060791016
    9. '.mapping' → logprob: -20.000431060791016
    10. '_m' → logprob: -20.375431060791016

Token 923: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2650011479854584
    2. '
' → logprob: -1.5150011777877808
    3. '<|end|>' → logprob: -5.26500129699707
    4. '    
' → logprob: -5.51500129699707
    5. '<|end|>' → logprob: -6.51500129699707
    6. 'def' → logprob: -6.64000129699707
    7. '

' → logprob: -8.39000129699707
    8. '  
' → logprob: -8.76500129699707
    9. '       ' → logprob: -9.64000129699707
    10. ',' → logprob: -9.64000129699707

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008656646125018597
    2. 'def' → logprob: -4.7586565017700195
    3. ' def' → logprob: -10.38365650177002
    4. '```' → logprob: -12.13365650177002
    5. '
' → logprob: -12.50865650177002
    6. '	def' → logprob: -13.88365650177002
    7. '    
' → logprob: -14.25865650177002
    8. '       ' → logprob: -14.88365650177002
    9. '        
' → logprob: -17.508657455444336
    10. '<|end|>' → logprob: -17.633657455444336

Token 925: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.676292231422849e-05
    2. ' def' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.625017166137695
    4. '```' → logprob: -21.625017166137695
    5. '
' → logprob: -21.750017166137695
    6. '	def' → logprob: -22.500017166137695
    7. 'class' → logprob: -23.125017166137695
    8. 'de' → logprob: -23.875017166137695
    9. 'Def' → logprob: -24.375017166137695
    10. 'import' → logprob: -24.625017166137695

Token 926: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -2.2127087504486553e-05
    2. ' parse' → logprob: -10.750021934509277
    3. 'def' → logprob: -14.375021934509277
    4. '_parse' → logprob: -18.875022888183594
    5. '   ' → logprob: -20.000022888183594
    6. '	parse' → logprob: -20.375022888183594
    7. '(parse' → logprob: -21.000022888183594
    8. '.parse' → logprob: -21.125022888183594
    9. 'parser' → logprob: -22.250022888183594
    10. '
' → logprob: -22.250022888183594

Token 927: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. '_inputs' → logprob: -14.500000953674316
    3. '_line' → logprob: -15.500000953674316
    4. '_in' → logprob: -16.250001907348633
    5. '_' → logprob: -16.625001907348633
    6. '_string' → logprob: -18.250001907348633
    7. '_text' → logprob: -18.625001907348633
    8. '(self' → logprob: -18.750001907348633
    9. '_press' → logprob: -18.875001907348633
    10. '_output' → logprob: -19.000001907348633

Token 928: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.625015258789062
    4. '(s' → logprob: -17.750015258789062
    5. 'self' → logprob: -18.250015258789062
    6. '(
' → logprob: -19.125015258789062
    7. '   ' → logprob: -19.625015258789062
    8. '       ' → logprob: -20.000015258789062
    9. '(Self' → logprob: -20.000015258789062
    10. '(sel' → logprob: -20.250015258789062

Token 929: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017982252757064998
    2. ',' → logprob: -9.1251802444458
    3. '(' → logprob: -10.6251802444458
    4. ' (' → logprob: -10.7501802444458
    5. ')(' → logprob: -11.5001802444458
    6. 'self' → logprob: -12.0001802444458
    7. ')' → logprob: -13.3751802444458
    8. '_(' → logprob: -13.3751802444458
    9. '_str' → logprob: -13.7501802444458
    10. '_string' → logprob: -14.1251802444458

Token 930: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00034416402922943234
    2. ' self' → logprob: -8.000344276428223
    3. 'input' → logprob: -11.750344276428223
    4. '   ' → logprob: -14.875344276428223
    5. '       ' → logprob: -15.125344276428223
    6. '
' → logprob: -16.500343322753906
    7. '(self' → logprob: -16.875343322753906
    8. ' input' → logprob: -18.125343322753906
    9. 'def' → logprob: -19.000343322753906
    10. 's' → logprob: -19.125343322753906

Token 931: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.002176073845475912
    2. '(self' → logprob: -6.752176284790039
    3. '_(' → logprob: -7.752176284790039
    4. 'str' → logprob: -8.127176284790039
    5. ')' → logprob: -9.002176284790039
    6. '_string' → logprob: -10.002176284790039
    7. 'self' → logprob: -10.502176284790039
    8. ')(' → logprob: -10.627176284790039
    9. 'string' → logprob: -11.252176284790039
    10. '_' → logprob: -11.502176284790039

Token 932: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03584013879299164
    2. ',' → logprob: -4.410840034484863
    3. '       ' → logprob: -4.535840034484863
    4. 'self' → logprob: -4.785840034484863
    5. ')' → logprob: -6.410840034484863
    6. ')(' → logprob: -6.410840034484863
    7. '   ' → logprob: -8.660840034484863
    8. ' self' → logprob: -8.910840034484863
    9. '```' → logprob: -8.910840034484863
    10. '):
' → logprob: -9.035840034484863

Token 933: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2016029804944992
    2. 'str' → logprob: -1.7016029357910156
    3. 'List' → logprob: -8.826602935791016
    4. ')' → logprob: -10.826602935791016
    5. ' List' → logprob: -11.826602935791016
    6. '[str' → logprob: -12.201602935791016
    7. ' ' → logprob: -13.451602935791016
    8. 'list' → logprob: -13.826602935791016
    9. '(str' → logprob: -13.951602935791016
    10. ''' → logprob: -13.951602935791016

Token 934: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011471256148070097
    2. '):
' → logprob: -7.626147270202637
    3. '):' → logprob: -7.876147270202637
    4. '       ' → logprob: -8.751147270202637
    5. 'self' → logprob: -9.626147270202637
    6. '(self' → logprob: -10.501147270202637
    7. '   ' → logprob: -11.251147270202637
    8. ' )' → logprob: -11.876147270202637
    9. ':' → logprob: -12.876147270202637
    10. '):
' → logprob: -13.376147270202637

Token 935: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24707655608654022
    2. ':' → logprob: -1.6220765113830566
    3. '       ' → logprob: -4.997076511383057
    4. ':
' → logprob: -5.247076511383057
    5. '):' → logprob: -5.747076511383057
    6. '):
' → logprob: -6.247076511383057
    7. ' ->' → logprob: -6.997076511383057
    8. ',' → logprob: -7.497076511383057
    9. ')' → logprob: -7.497076511383057
    10. '->' → logprob: -7.622076511383057

Token 936: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006624662317335606
    2. '[]' → logprob: -5.631624698638916
    3. '[List' → logprob: -5.881624698638916
    4. ' List' → logprob: -8.631624221801758
    5. ' []' → logprob: -10.506624221801758
    6. 'list' → logprob: -11.256624221801758
    7. '[str' → logprob: -12.381624221801758
    8. '[' → logprob: -12.881624221801758
    9. '_list' → logprob: -13.881624221801758
    10. '[])' → logprob: -14.256624221801758

Token 937: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003567959647625685
    2. '[str' → logprob: -8.125356674194336
    3. '[List' → logprob: -10.000356674194336
    4. '[
' → logprob: -11.875356674194336
    5. ':' → logprob: -12.375356674194336
    6. '[int' → logprob: -12.750356674194336
    7. '```' → logprob: -15.000356674194336
    8. '[(' → logprob: -15.375356674194336
    9. '[]' → logprob: -15.750356674194336
    10. '()' → logprob: -16.500356674194336

Token 938: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -0.0001025895617203787
    2. 'str' → logprob: -9.250102996826172
    3. '(' → logprob: -13.500102996826172
    4. 'tuple' → logprob: -13.625102996826172
    5. '(str' → logprob: -13.750102996826172
    6. ' Press' → logprob: -13.875102996826172
    7. 'int' → logprob: -14.125102996826172
    8. 'Print' → logprob: -15.875102996826172
    9. ')' → logprob: -15.875102996826172
    10. '[str' → logprob: -16.125102996826172

Token 939: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.011130002327263355
    2. 'Groups' → logprob: -4.511129856109619
    3. '_groups' → logprob: -10.511130332946777
    4. '_group' → logprob: -10.761130332946777
    5. '_GROUP' → logprob: -10.886130332946777
    6. '<Group' → logprob: -12.261130332946777
    7. 'groups' → logprob: -13.011130332946777
    8. 'roups' → logprob: -13.386130332946777
    9. '_Group' → logprob: -13.386130332946777
    10. '	Group' → logprob: -13.511130332946777

Token 940: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01801707223057747
    2. '):
' → logprob: -5.018017292022705
    3. '       ' → logprob: -5.143017292022705
    4. '):' → logprob: -6.393017292022705
    5. ':' → logprob: -6.518017292022705
    6. ':
' → logprob: -6.893017292022705
    7. '   ' → logprob: -7.768017292022705
    8. '():
' → logprob: -8.143016815185547
    9. 'self' → logprob: -8.268016815185547
    10. '():' → logprob: -9.518016815185547

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010556964843999594
    2. 'tokens' → logprob: -9.625105857849121
    3. ' tokens' → logprob: -11.500105857849121
    4. '```' → logprob: -11.750105857849121
    5. 'result' → logprob: -12.000105857849121
    6. ' lines' → logprob: -12.500105857849121
    7. 'groups' → logprob: -13.375105857849121
    8. 'pressed' → logprob: -13.375105857849121
    9. ' groups' → logprob: -13.375105857849121
    10. '   ' → logprob: -13.500105857849121

Token 942: ' if' (ID: 538)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.037657082080841064
    2. 'press' → logprob: -3.7876570224761963
    3. 'result' → logprob: -4.537657260894775
    4. 'if' (adapté à ' if') → logprob: -6.037657260894775
    5. 'res' → logprob: -7.412657260894775
    6. ' groups' → logprob: -7.537657260894775
    7. '   ' → logprob: -10.287656784057617
    8. ' if' → logprob: -10.912656784057617
    9. 'pressed' → logprob: -11.537656784057617
    10. ' res' → logprob: -11.787656784057617

Token 943: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5231552124023438
    2. 'not' → logprob: -0.8981552124023438
    3. 'len' → logprob: -10.648155212402344
    4. 'input' → logprob: -12.648155212402344
    5. ' len' → logprob: -13.023155212402344
    6. '   ' → logprob: -14.648155212402344
    7. '	not' → logprob: -14.773155212402344
    8. 'n't' → logprob: -14.898155212402344
    9. 'n' → logprob: -14.898155212402344
    10. ' ' → logprob: -15.023155212402344

Token 944: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. '(input' → logprob: -18.251502990722656
    4. '	input' → logprob: -18.751502990722656
    5. '<input' → logprob: -18.751502990722656
    6. 'import' → logprob: -19.501502990722656
    7. '
' → logprob: -19.751502990722656
    8. 'Input' → logprob: -20.501502990722656
    9. 'len' → logprob: -20.751502990722656
    10. 'self' → logprob: -21.001502990722656

Token 945: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.3795937522663735e-05
    2. 'str' → logprob: -10.75002384185791
    3. '_' → logprob: -13.37502384185791
    4. 's' → logprob: -15.62502384185791
    5. 'Str' → logprob: -16.125022888183594
    6. '_len' → logprob: -16.500022888183594
    7. '_s' → logprob: -16.500022888183594
    8. '_chars' → logprob: -16.875022888183594
    9. '_
' → logprob: -17.625022888183594
    10. '_STR' → logprob: -18.000022888183594

Token 946: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6963837146759033
    2. ':
' → logprob: -0.6963837146759033
    3. '.strip' → logprob: -5.821383476257324
    4. ':return' → logprob: -8.946383476257324
    5. '   ' → logprob: -9.821383476257324
    6. ' or' → logprob: -10.196383476257324
    7. ':
' → logprob: -11.196383476257324
    8. '       ' → logprob: -11.946383476257324
    9. '.' → logprob: -12.071383476257324
    10. 'strip' → logprob: -12.196383476257324

Token 947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07018928974866867
    2. ':
' → logprob: -3.1951892375946045
    3. ':' → logprob: -4.195189476013184
    4. '       ' → logprob: -4.695189476013184
    5. 'return' → logprob: -6.320189476013184
    6. ' return' → logprob: -8.320189476013184
    7. ':return' → logprob: -8.695189476013184
    8. ',' → logprob: -9.070189476013184
    9. ' or' → logprob: -9.070189476013184
    10. '   ' → logprob: -10.320189476013184

Token 948: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007251793285831809
    2. ' return' → logprob: -7.250725269317627
    3. '           ' → logprob: -11.250724792480469
    4. '       ' → logprob: -13.375724792480469
    5. '[]' → logprob: -14.750724792480469
    6. '	return' → logprob: -15.250724792480469
    7. '   ' → logprob: -16.87572479248047
    8. '[]
' → logprob: -17.12572479248047
    9. '
' → logprob: -17.75072479248047
    10. '               ' → logprob: -18.12572479248047

Token 949: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0004909569397568703
    2. ' []' → logprob: -7.750491142272949
    3. '[]
' → logprob: -9.75049114227295
    4. '[]

' → logprob: -13.25049114227295
    5. ' []
' → logprob: -15.62549114227295
    6. '[' → logprob: -16.750490188598633
    7. '[])' → logprob: -17.875490188598633
    8. ' []

' → logprob: -18.750490188598633
    9. 'None' → logprob: -19.125490188598633
    10. '[]}' → logprob: -19.250490188598633

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1729482263326645
    2. '
' → logprob: -2.172948122024536
    3. 'groups' → logprob: -3.922948122024536
    4. 'result' → logprob: -4.047948360443115
    5. '        
' → logprob: -5.547948360443115
    6. ' groups' → logprob: -6.422948360443115
    7. 'res' → logprob: -6.922948360443115
    8. 'results' → logprob: -8.047947883605957
    9. 'press' → logprob: -8.547947883605957
    10. ' result' → logprob: -8.672947883605957

Token 951: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.03315639868378639
    2. 'result' → logprob: -3.533156394958496
    3. 'press' → logprob: -5.908156394958496
    4. 'res' → logprob: -7.533156394958496
    5. '       ' → logprob: -9.533156394958496
    6. ' groups' → logprob: -10.408156394958496
    7. '   ' → logprob: -10.658156394958496
    8. 'results' → logprob: -11.158156394958496
    9. 'pressed' → logprob: -12.658156394958496
    10. ' result' → logprob: -13.033156394958496

Token 952: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003684401512145996
    2. '=' → logprob: -5.6286845207214355
    3. '=[]' → logprob: -10.003684043884277
    4. ',' → logprob: -10.378684043884277
    5. '=[]
' → logprob: -12.753684043884277
    6. '.append' → logprob: -13.128684043884277
    7. ':' → logprob: -13.753684043884277
    8. '[' → logprob: -14.628684043884277
    9. '   ' → logprob: -14.753684043884277
    10. '[]' → logprob: -15.003684043884277

Token 953: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04861926659941673
    2. '[]' → logprob: -3.048619270324707
    3. ' []
' → logprob: -10.548619270324707
    4. '[]

' → logprob: -12.298619270324707
    5. ' []' → logprob: -13.923619270324707
    6. '[
' → logprob: -16.17361831665039
    7. '[' → logprob: -16.54861831665039
    8. '[])
' → logprob: -17.79861831665039
    9. '[(' → logprob: -18.92361831665039
    10. '[]"' → logprob: -19.67361831665039

Token 954: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006409581750631332
    2. 'current' → logprob: -5.256409645080566
    3. ' current' → logprob: -7.006409645080566
    4. 'i' → logprob: -8.881409645080566
    5. 'prev' → logprob: -9.881409645080566
    6. ' i' → logprob: -10.756409645080566
    7. '```' → logprob: -11.006409645080566
    8. '   ' → logprob: -11.506409645080566
    9. 'index' → logprob: -11.506409645080566
    10. ' prev' → logprob: -12.006409645080566

Token 955: ' prev' (ID: 10258)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07068091630935669
    2. 'count' → logprob: -3.320680856704712
    3. 'prev' (adapté à ' prev') → logprob: -3.820680856704712
    4. 'i' → logprob: -5.820681095123291
    5. '       ' → logprob: -5.820681095123291
    6. ' current' → logprob: -6.320681095123291
    7. 'start' → logprob: -6.320681095123291
    8. 'curr' → logprob: -8.195680618286133
    9. 'last' → logprob: -8.445680618286133
    10. ' prev' → logprob: -9.570680618286133

Token 956: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0025915890000760555
    2. '_digit' → logprob: -6.502591609954834
    3. ' =' → logprob: -7.252591609954834
    4. 'char' → logprob: -8.752591133117676
    5. '=' → logprob: -9.002591133117676
    6. '_ch' → logprob: -9.627591133117676
    7. '_c' → logprob: -10.877591133117676
    8. 'ch' → logprob: -12.127591133117676
    9. 'Char' → logprob: -12.377591133117676
    10. 'digit' → logprob: -13.127591133117676

Token 957: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0021393168717622757
    2. 'None' → logprob: -6.627139091491699
    3. ' input' → logprob: -7.377139091491699
    4. '''' → logprob: -8.8771390914917
    5. ' None' → logprob: -10.5021390914917
    6. '''
' → logprob: -11.1271390914917
    7. ''' → logprob: -12.8771390914917
    8. ' ''
' → logprob: -14.0021390914917
    9. '(input' → logprob: -14.6271390914917
    10. '""' → logprob: -14.8771390914917

Token 958: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.023396190255880356
    2. 'str' → logprob: -3.7733962535858154
    3. '_char' → logprob: -9.648396492004395
    4. 'char' → logprob: -10.273396492004395
    5. 'string' → logprob: -11.398396492004395
    6. 'Str' → logprob: -11.648396492004395
    7. '   ' → logprob: -12.148396492004395
    8. ' =' → logprob: -12.273396492004395
    9. '_string' → logprob: -12.273396492004395
    10. 's' → logprob: -12.523396492004395

Token 959: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.375000953674316
    3. '
' → logprob: -15.500000953674316
    4. 's' → logprob: -16.250001907348633
    5. '0' → logprob: -16.375001907348633
    6. '       ' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.750001907348633
    9. 'def' → logprob: -16.750001907348633
    10. 'import' → logprob: -17.750001907348633

Token 960: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -15.187507629394531
    4. '```' → logprob: -15.500007629394531
    5. '
' → logprob: -16.06250762939453
    6. '۰' → logprob: -16.75000762939453
    7. '[' → logprob: -16.93750762939453
    8. '-' → logprob: -17.06250762939453
    9. '00' → logprob: -17.31250762939453
    10. '       ' → logprob: -17.43750762939453

Token 961: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.734752893447876
    2. ',' → logprob: -1.109752893447876
    3. 'prev' → logprob: -3.109752893447876
    4. ')
' → logprob: -3.234752893447876
    5. '
' → logprob: -3.859752893447876
    6. ')' → logprob: -3.984752893447876
    7. ']
' → logprob: -4.484752655029297
    8. ']' → logprob: -4.859752655029297
    9. 'import' → logprob: -4.859752655029297
    10. '   ' → logprob: -5.109752655029297

Token 962: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3801608085632324
    2. ' count' → logprob: -2.0051608085632324
    3. '       ' → logprob: -2.3801608085632324
    4. ' length' → logprob: -2.7551608085632324
    5. 'length' → logprob: -4.255160808563232
    6. ',' → logprob: -5.880160808563232
    7. ' current' → logprob: -6.005160808563232
    8. 'current' → logprob: -6.130160808563232
    9. 'cnt' → logprob: -6.380160808563232
    10. ' cnt' → logprob: -8.00516128540039

Token 963: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0003754999197553843
    2. ' count' → logprob: -8.000375747680664
    3. 'length' → logprob: -10.500375747680664
    4. 'cnt' → logprob: -11.500375747680664
    5. '       ' → logprob: -13.375375747680664
    6. 'current' → logprob: -15.125375747680664
    7. '   ' → logprob: -15.500375747680664
    8. ' length' → logprob: -15.500375747680664
    9. 'counter' → logprob: -17.500375747680664
    10. '```' → logprob: -17.750375747680664

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.936968803405762
    4. 's' → logprob: -15.436968803405762
    5. '   ' → logprob: -16.561967849731445
    6. '1' → logprob: -17.061967849731445
    7. '```' → logprob: -17.686967849731445
    8. '_=' → logprob: -17.811967849731445
    9. '＝' → logprob: -18.811967849731445
    10. '<|end|>' → logprob: -19.061967849731445

Token 965: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -17.25
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -21.375
    6. '' → logprob: -22.0
    7. '１' → logprob: -22.625
    8. '`' → logprob: -22.625
    9. '  ' → logprob: -23.0625
    10. '۱' → logprob: -23.9375

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '0' → logprob: -16.5
    4. '```' → logprob: -19.75
    5. '   ' → logprob: -20.625
    6. '１' → logprob: -22.0
    7. '`' → logprob: -22.75
    8. '' → logprob: -22.75
    9. '۱' → logprob: -22.75
    10. '2' → logprob: -23.3125

Token 967: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30686312913894653
    2. '       ' → logprob: -1.8068630695343018
    3. '
' → logprob: -2.8068630695343018
    4. 'for' → logprob: -3.6818630695343018
    5. '	for' → logprob: -4.931863307952881
    6. '<|end|>' → logprob: -5.556863307952881
    7. '```' → logprob: -7.056863307952881
    8. '	' → logprob: -7.306863307952881
    9. '   ' → logprob: -7.931863307952881
    10. '        
' → logprob: -7.931863307952881

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.422382652759552
    2. ' for' → logprob: -1.1723825931549072
    3. 'for' → logprob: -4.047382831573486
    4. '
' → logprob: -4.422382831573486
    5. '        
' → logprob: -6.672382831573486
    6. '	for' → logprob: -6.672382831573486
    7. '```' → logprob: -7.297382831573486
    8. '	' → logprob: -7.422382831573486
    9. '   ' → logprob: -8.047382354736328
    10. ' 
' → logprob: -8.297382354736328

Token 969: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5759616494178772
    2. ' for' → logprob: -0.8259616494178772
    3. '
' → logprob: -11.07596206665039
    4. '       ' → logprob: -12.70096206665039
    5. '	for' → logprob: -12.95096206665039
    6. '```' → logprob: -13.82596206665039
    7. '   ' → logprob: -15.95096206665039
    8. 'i' → logprob: -16.95096206665039
    9. ' 
' → logprob: -17.20096206665039
    10. ' i' → logprob: -17.32596206665039

Token 970: ' ch' (ID: 549)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8087723851203918
    2. 'ch' → logprob: -0.8087723851203918
    3. 'c' → logprob: -2.308772325515747
    4. ' i' → logprob: -5.058772563934326
    5. ' ch' → logprob: -6.308772563934326
    6. 'char' → logprob: -6.808772563934326
    7. ' c' → logprob: -7.558772563934326
    8. 'idx' → logprob: -12.058772087097168
    9. ' char' → logprob: -13.308772087097168
    10. ' idx' → logprob: -14.433772087097168

Token 971: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004156041424721479
    2. 'in' → logprob: -5.504156112670898
    3. ' ' → logprob: -9.629156112670898
    4. '  ' → logprob: -12.379156112670898
    5. 'i' → logprob: -12.504156112670898
    6. ' i' → logprob: -13.629156112670898
    7. '   ' → logprob: -14.004156112670898
    8. '	in' → logprob: -14.254156112670898
    9. 's' → logprob: -15.004156112670898
    10. ',' → logprob: -15.754156112670898

Token 972: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804171830415726
    2. ' input' → logprob: -3.288041830062866
    3. '(input' → logprob: -16.288042068481445
    4. '	input' → logprob: -17.038042068481445
    5. 'import' → logprob: -17.413042068481445
    6. '=input' → logprob: -18.288042068481445
    7. ' ' → logprob: -18.413042068481445
    8. '<input' → logprob: -18.538042068481445
    9. '   ' → logprob: -18.788042068481445
    10. '_input' → logprob: -18.913042068481445

Token 973: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00014287306112237275
    2. 'str' → logprob: -8.875143051147461
    3. 'Str' → logprob: -12.875143051147461
    4. '```' → logprob: -15.750143051147461
    5. '[' → logprob: -16.25014305114746
    6. '_string' → logprob: -16.87514305114746
    7. ')' → logprob: -17.25014305114746
    8. '_s' → logprob: -17.87514305114746
    9. '   ' → logprob: -18.00014305114746
    10. 'string' → logprob: -18.00014305114746

Token 974: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.25
    3. '   ' → logprob: -17.75
    4. ' [' → logprob: -18.25
    5. '       ' → logprob: -18.5
    6. 'if' → logprob: -19.25
    7. '1' → logprob: -19.25
    8. 'in' → logprob: -19.75
    9. ' in' → logprob: -20.0
    10. 's' → logprob: -20.0

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011615309631451964
    2. '[' → logprob: -6.876161575317383
    3. ' ' → logprob: -9.376161575317383
    4. '   ' → logprob: -11.001161575317383
    5. '(' → logprob: -11.251161575317383
    6. '```' → logprob: -11.751161575317383
    7. 'import' → logprob: -13.376161575317383
    8. 'from' → logprob: -14.126161575317383
    9. 'range' → logprob: -14.251161575317383
    10. '2' → logprob: -14.251161575317383

Token 976: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04383094608783722
    2. ':
' → logprob: -3.1688308715820312
    3. ' in' → logprob: -7.293830871582031
    4. '):
' → logprob: -10.168830871582031
    5. ',' → logprob: -10.418830871582031
    6. 'in' → logprob: -10.793830871582031
    7. ':
' → logprob: -11.168830871582031
    8. '   ' → logprob: -11.543830871582031
    9. ' :' → logprob: -11.668830871582031
    10. '():
' → logprob: -11.793830871582031

Token 977: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20181149244308472
    2. ':' → logprob: -1.7018115520477295
    3. '):
' → logprob: -8.326811790466309
    4. ':
' → logprob: -9.451811790466309
    5. '       ' → logprob: -10.701811790466309
    6. '   ' → logprob: -10.826811790466309
    7. '():
' → logprob: -11.451811790466309
    8. '):' → logprob: -11.701811790466309
    9. '           ' → logprob: -12.076811790466309
    10. ']:
' → logprob: -13.326811790466309

Token 978: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024763107649050653
    2. ' if' → logprob: -9.250247955322266
    3. '<|end|>' → logprob: -9.750247955322266
    4. '       ' → logprob: -10.750247955322266
    5. '	       ' → logprob: -11.000247955322266
    6. ',' → logprob: -11.125247955322266
    7. '<|end|>' → logprob: -11.750247955322266
    8. '          ' → logprob: -12.000247955322266
    9. '         ' → logprob: -12.500247955322266
    10. '            ' → logprob: -12.625247955322266

Token 979: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08030278235673904
    2. 'if' (adapté à ' if') → logprob: -2.5803027153015137
    3. '           ' → logprob: -6.580302715301514
    4. '```' → logprob: -11.705303192138672
    5. 'If' → logprob: -12.330303192138672
    6. '	if' → logprob: -12.705303192138672
    7. '               ' → logprob: -12.955303192138672
    8. '	       ' → logprob: -13.705303192138672
    9. '<|end|>' → logprob: -13.830303192138672
    10. ' ' → logprob: -14.455303192138672

Token 980: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.04859009385108948
    2. ' ch' → logprob: -3.0485901832580566
    3. '	ch' → logprob: -13.048589706420898
    4. ' ' → logprob: -15.798589706420898
    5. '(ch' → logprob: -15.798589706420898
    6. '_ch' → logprob: -16.4235897064209
    7. '   ' → logprob: -16.6735897064209
    8. '[ch' → logprob: -16.7985897064209
    9. 'Ch' → logprob: -16.9235897064209
    10. '    ' → logprob: -18.0485897064209

Token 981: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197015196084976
    2. '==' → logprob: -2.8119702339172363
    3. ' !=' → logprob: -13.311969757080078
    4. '!=' → logprob: -14.936969757080078
    5. ' ' → logprob: -15.561969757080078
    6. '=' → logprob: -15.936969757080078
    7. ')==' → logprob: -16.311969757080078
    8. ']==' → logprob: -17.061969757080078
    9. ' ' → logprob: -17.186969757080078
    10. '==
' → logprob: -17.311969757080078

Token 982: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -9.639096970204264e-05
    2. ' prev' → logprob: -9.250096321105957
    3. '	prev' → logprob: -15.500096321105957
    4. '(prev' → logprob: -18.750097274780273
    5. ' ' → logprob: -19.000097274780273
    6. '.prev' → logprob: -19.125097274780273
    7. 'pre' → logprob: -19.375097274780273
    8. 'previous' → logprob: -19.750097274780273
    9. '   ' → logprob: -19.750097274780273
    10. '_prev' → logprob: -20.375097274780273

Token 983: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23638853430747986
    2. ':' → logprob: -1.6113885641098022
    3. '               ' → logprob: -5.611388683319092
    4. 'and' → logprob: -6.111388683319092
    5. '):
' → logprob: -6.486388683319092
    6. ' and' → logprob: -6.861388683319092
    7. '<|end|>' → logprob: -7.486388683319092
    8. '           ' → logprob: -7.611388683319092
    9. '.' → logprob: -8.486388206481934
    10. ')' → logprob: -8.611388206481934

Token 984: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055976271629333496
    2. ' and' → logprob: -4.180976390838623
    3. ':
' → logprob: -4.555976390838623
    4. 'count' → logprob: -4.555976390838623
    5. 'and' → logprob: -5.430976390838623
    6. '```' → logprob: -5.555976390838623
    7. '[count' → logprob: -5.930976390838623
    8. ' count' → logprob: -6.430976390838623
    9. '           ' → logprob: -6.805976390838623
    10. ':' → logprob: -7.430976390838623

Token 985: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0052406336180865765
    2. ' count' → logprob: -5.255240440368652
    3. '               ' → logprob: -12.005240440368652
    4. '                   ' → logprob: -15.380240440368652
    5. '	count' → logprob: -15.380240440368652
    6. '           ' → logprob: -16.13024139404297
    7. '[count' → logprob: -16.38024139404297
    8. '(count' → logprob: -16.88024139404297
    9. '.count' → logprob: -16.88024139404297
    10. '   ' → logprob: -17.13024139404297

Token 986: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25193464756011963
    2. ' +=' → logprob: -1.5019346475601196
    3. ']+=' → logprob: -12.751935005187988
    4. '=' → logprob: -13.626935005187988
    5. '+' → logprob: -13.751935005187988
    6. '+='' → logprob: -15.876935005187988
    7. '+="' → logprob: -16.251934051513672
    8. '<|end|>' → logprob: -17.626934051513672
    9. '[' → logprob: -18.001934051513672
    10. '+=(' → logprob: -18.126934051513672

Token 987: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -21.250001907348633
    4. '<|end|>' → logprob: -23.000001907348633
    5. '۱' → logprob: -24.250001907348633
    6. '   ' → logprob: -24.375001907348633
    7. '１' → logprob: -24.375001907348633
    8. '0' → logprob: -24.750001907348633
    9. '१' → logprob: -25.375001907348633
    10. '`' → logprob: -25.625001907348633

Token 988: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '<|end|>' → logprob: -22.5
    4. '```' → logprob: -23.0
    5. '۱' → logprob: -23.5
    6. '१' → logprob: -24.0
    7. '１' → logprob: -24.25
    8. '১' → logprob: -24.625
    9. '   ' → logprob: -25.625
    10. '١' → logprob: -26.0625

Token 989: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.941850526549388e-06
    2. 'else' → logprob: -13.125007629394531
    3. '               ' → logprob: -13.500007629394531
    4. '
' → logprob: -13.875007629394531
    5. '       ' → logprob: -13.875007629394531
    6. '	       ' → logprob: -14.375007629394531
    7. '		' → logprob: -14.625007629394531
    8. '<|end|>' → logprob: -15.000007629394531
    9. '```' → logprob: -15.375007629394531
    10. ' else' → logprob: -16.12500762939453

Token 990: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.153795766294934e-06
    2. 'else' → logprob: -12.750005722045898
    3. '		' → logprob: -14.000005722045898
    4. '       ' → logprob: -14.000005722045898
    5. '	       ' → logprob: -14.250005722045898
    6. '```' → logprob: -15.000005722045898
    7. '               ' → logprob: -15.375005722045898
    8. ' else' → logprob: -16.5000057220459
    9. 'elif' → logprob: -16.6250057220459
    10. ',' → logprob: -16.6250057220459

Token 991: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14676479995250702
    2. '           ' → logprob: -2.5217647552490234
    3. ' else' → logprob: -2.8967647552490234
    4. '       ' → logprob: -7.146764755249023
    5. 'elif' → logprob: -8.771764755249023
    6. '	else' → logprob: -11.396764755249023
    7. '               ' → logprob: -11.521764755249023
    8. ' elif' → logprob: -11.646764755249023
    9. '   ' → logprob: -12.396764755249023
    10. '```' → logprob: -12.646764755249023

Token 992: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2821173667907715
    2. ':' → logprob: -1.4071173667907715
    3. '               ' → logprob: -7.1571173667907715
    4. '):
' → logprob: -9.15711784362793
    5. '           ' → logprob: -10.90711784362793
    6. ',' → logprob: -10.90711784362793
    7. '       ' → logprob: -11.53211784362793
    8. '<|end|>' → logprob: -11.53211784362793
    9. ':

' → logprob: -11.90711784362793
    10. ' :
' → logprob: -12.78211784362793

Token 993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13310474157333374
    2. '       ' → logprob: -2.3831048011779785
    3. 'groups' → logprob: -3.8831048011779785
    4. '           ' → logprob: -4.7581048011779785
    5. '```' → logprob: -6.7581048011779785
    6. ' groups' → logprob: -7.2581048011779785
    7. '(groups' → logprob: -8.38310432434082
    8. ':
' → logprob: -8.63310432434082
    9. '#' → logprob: -9.00810432434082
    10. '   ' → logprob: -9.13310432434082

Token 994: ' groups' (ID: 8896)
  Prédit: ' groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groups' → logprob: -0.2018471509218216
    2. 'groups' (adapté à ' groups') → logprob: -1.7018471956253052
    3. 'g' → logprob: -8.576847076416016
    4. '(groups' → logprob: -9.701847076416016
    5. '```' → logprob: -10.201847076416016
    6. '               ' → logprob: -10.451847076416016
    7. 'group' → logprob: -10.576847076416016
    8. '
' → logprob: -10.701847076416016
    9. '.groups' → logprob: -10.701847076416016
    10. ' groupes' → logprob: -11.451847076416016

Token 995: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -10.750021934509277
    3. '.app' → logprob: -15.875021934509277
    4. '.ap' → logprob: -16.37502098083496
    5. 'append' → logprob: -17.25002098083496
    6. '.Append' → logprob: -18.87502098083496
    7. '.extend' → logprob: -20.00002098083496
    8. '_append' → logprob: -21.37502098083496
    9. '​.' → logprob: -21.87502098083496
    10. ' .' → logprob: -22.12502098083496

Token 996: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -15.875000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(P' → logprob: -16.125
    5. 'Press' → logprob: -17.0
    6. '((' → logprob: -17.125
    7. '(Print' → logprob: -19.25
    8. ' Press' → logprob: -20.375
    9. '       ' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 997: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -2.339278580620885e-06
    2. ' Press' → logprob: -13.000001907348633
    3. 'Pressed' → logprob: -17.375001907348633
    4. 'Pressure' → logprob: -19.500001907348633
    5. '               ' → logprob: -19.625001907348633
    6. '           ' → logprob: -20.000001907348633
    7. 'Push' → logprob: -20.375001907348633
    8. 'Print' → logprob: -20.875001907348633
    9. 'Pass' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.125001907348633

Token 998: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -3.128163257315464e-07
    2. 'Groups' → logprob: -16.0
    3. 'group' → logprob: -16.125
    4. 'G' → logprob: -17.5
    5. '       ' → logprob: -18.375
    6. '_group' → logprob: -18.375
    7. 'g' → logprob: -19.75
    8. '	Group' → logprob: -20.0
    9. '<Group' → logprob: -20.125
    10. '           ' → logprob: -20.75

Token 999: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0009573166607879102
    2. 'prev' → logprob: -7.000957489013672
    3. '(' → logprob: -10.250957489013672
    4. '(
' → logprob: -11.750957489013672
    5. '(previous' → logprob: -13.125957489013672
    6. '	prev' → logprob: -15.500957489013672
    7. ' prev' → logprob: -16.375957489013672
    8. '(pre' → logprob: -16.375957489013672
    9. '```' → logprob: -17.125957489013672
    10. '(
' → logprob: -17.250957489013672

Token 1000: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021855637896806002
    2. ',count' → logprob: -8.500218391418457
    3. ' ,' → logprob: -11.125218391418457
    4. ',
' → logprob: -16.000219345092773
    5. '‌,' → logprob: -17.000219345092773
    6. ',num' → logprob: -17.375219345092773
    7. ',length' → logprob: -17.375219345092773
    8. '',' → logprob: -17.750219345092773
    9. ',int' → logprob: -18.500219345092773
    10. ',c' → logprob: -18.625219345092773

Token 1001: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.704273118884885e-07
    2. ' count' → logprob: -14.250000953674316
    3. '           ' → logprob: -21.0
    4. '               ' → logprob: -21.125
    5. '
' → logprob: -22.375
    6. '[count' → logprob: -22.75
    7. '   ' → logprob: -22.75
    8. '(count' → logprob: -23.125
    9. '	count' → logprob: -23.625
    10. '       ' → logprob: -23.75

Token 1002: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006922103464603424
    2. '))' → logprob: -5.006922245025635
    3. ')' → logprob: -8.631921768188477
    4. ',
' → logprob: -11.631921768188477
    5. '       ' → logprob: -12.506921768188477
    6. '))
' → logprob: -12.756921768188477
    7. '```' → logprob: -12.881921768188477
    8. '),' → logprob: -13.131921768188477
    9. '));' → logprob: -13.256921768188477
    10. '   ' → logprob: -13.881921768188477

Token 1003: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007106438861228526
    2. ' self' → logprob: -7.250710487365723
    3. '
' → logprob: -15.125710487365723
    4. '           ' → logprob: -15.250710487365723
    5. '(self' → logprob: -16.37571144104004
    6. '	self' → logprob: -17.12571144104004
    7. '               ' → logprob: -17.25071144104004
    8. '       ' → logprob: -18.12571144104004
    9. '                   ' → logprob: -18.50071144104004
    10. '[self' → logprob: -18.62571144104004

Token 1004: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.001932205050252378
    2. 'char' → logprob: -6.251932144165039
    3. '.' → logprob: -13.251932144165039
    4. '.character' → logprob: -13.501932144165039
    5. '	char' → logprob: -15.626932144165039
    6. '.charset' → logprob: -15.751932144165039
    7. '<char' → logprob: -17.00193214416504
    8. ',char' → logprob: -17.37693214416504
    9. '_char' → logprob: -17.75193214416504
    10. '.ch' → logprob: -18.25193214416504

Token 1005: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -6.921253225300461e-05
    2. 'mapping' → logprob: -9.625069618225098
    3. 'Mapping' → logprob: -12.875069618225098
    4. '_count' → logprob: -15.750069618225098
    5. '_MAPPING' → logprob: -16.37506866455078
    6. '_group' → logprob: -16.50006866455078
    7. '_m' → logprob: -16.62506866455078
    8. ' mapping' → logprob: -16.87506866455078
    9. '
' → logprob: -17.12506866455078
    10. '.mapping' → logprob: -17.25006866455078

Token 1006: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576439619064331
    2. ')
' → logprob: -0.826439619064331
    3. '))
' → logprob: -7.95143985748291
    4. '))' → logprob: -8.95143985748291
    5. ')
' → logprob: -11.20143985748291
    6. '       ' → logprob: -12.95143985748291
    7. ')

' → logprob: -13.70143985748291
    8. ')`
' → logprob: -14.95143985748291
    9. ')`' → logprob: -15.70143985748291
    10. ')\
' → logprob: -15.95143985748291

Token 1007: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026367725804448128
    2. '       ' → logprob: -6.002636909484863
    3. 'count' → logprob: -10.002636909484863
    4. '```' → logprob: -10.002636909484863
    5. '
' → logprob: -11.002636909484863
    6. '<|end|>' → logprob: -11.252636909484863
    7. 'prev' → logprob: -11.377636909484863
    8. '           ' → logprob: -11.752636909484863
    9. '                
' → logprob: -12.377636909484863
    10. '{
' → logprob: -12.877636909484863

Token 1008: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -2.248469718324486e-05
    2. ' prev' → logprob: -10.750022888183594
    3. '           ' → logprob: -15.125022888183594
    4. 'count' → logprob: -15.125022888183594
    5. '               ' → logprob: -15.375022888183594
    6. '	prev' → logprob: -15.625022888183594
    7. '
' → logprob: -17.875022888183594
    8. '       ' → logprob: -18.125022888183594
    9. '                
' → logprob: -18.500022888183594
    10. '.prev' → logprob: -19.500022888183594

Token 1009: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. ',' → logprob: -14.451414108276367
    4. '=
' → logprob: -16.701414108276367
    5. '＝' → logprob: -17.576414108276367
    6. '<|end|>' → logprob: -17.951414108276367
    7. ' =
' → logprob: -18.451414108276367
    8. ')' → logprob: -18.951414108276367
    9. ' ' → logprob: -18.951414108276367
    10. '=

' → logprob: -19.326414108276367

Token 1010: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.128163257315464e-07
    2. ' ch' → logprob: -15.5
    3. '	ch' → logprob: -20.625
    4. '[ch' → logprob: -21.125
    5. '(ch' → logprob: -22.0
    6. ''ch' → logprob: -22.75
    7. '_ch' → logprob: -23.625
    8. 'c' → logprob: -25.125
    9. ',ch' → logprob: -25.125
    10. '   ' → logprob: -25.75

Token 1011: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000712670327629894
    2. 'count' → logprob: -7.375712871551514
    3. '```' → logprob: -10.500712394714355
    4. '[count' → logprob: -11.000712394714355
    5. '           ' → logprob: -11.375712394714355
    6. '       ' → logprob: -11.750712394714355
    7. ',count' → logprob: -12.250712394714355
    8. '<|end|>' → logprob: -12.375712394714355
    9. ',' → logprob: -12.500712394714355
    10. '                   ' → logprob: -13.125712394714355

Token 1012: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0046698302030563354
    2. 'count' → logprob: -5.379669666290283
    3. '```' → logprob: -10.754670143127441
    4. '           ' → logprob: -11.504670143127441
    5. '       ' → logprob: -12.004670143127441
    6. ' count' → logprob: -12.629670143127441
    7. '              ' → logprob: -13.129670143127441
    8. '[count' → logprob: -13.504670143127441
    9. '``' → logprob: -13.879670143127441
    10. '                   ' → logprob: -13.879670143127441

Token 1013: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -6.2729995988775045e-06
    2. ' count' → logprob: -12.000006675720215
    3. '1' → logprob: -16.5000057220459
    4. '0' → logprob: -21.5000057220459
    5. '
' → logprob: -22.1250057220459
    6. ' ' → logprob: -22.5000057220459
    7. '           ' → logprob: -22.8750057220459
    8. '                   ' → logprob: -22.8750057220459
    9. '```' → logprob: -23.0000057220459
    10. '               ' → logprob: -23.1250057220459

Token 1014: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=
' → logprob: -18.501171112060547
    4. '＝' → logprob: -19.626171112060547
    5. '1' → logprob: -20.126171112060547
    6. '+=' → logprob: -20.126171112060547
    7. '.=' → logprob: -20.626171112060547
    8. '=

' → logprob: -21.126171112060547
    9. '_=' → logprob: -22.126171112060547
    10. ' ' → logprob: -22.501171112060547

Token 1015: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -21.25
    4. '```' → logprob: -21.625
    5. '   ' → logprob: -21.875
    6. '۱' → logprob: -24.0
    7. '१' → logprob: -24.625
    8. '１' → logprob: -25.0
    9. '2' → logprob: -25.0
    10. '<|end|>' → logprob: -25.25

Token 1016: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -20.25
    4. '0' → logprob: -21.125
    5. '   ' → logprob: -21.75
    6. '2' → logprob: -23.125
    7. '۱' → logprob: -23.125
    8. '<|end|>' → logprob: -23.25
    9. '१' → logprob: -23.625
    10. '' → logprob: -24.0

Token 1017: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.636475493200123e-05
    2. '
' → logprob: -9.625076293945312
    3. '```' → logprob: -11.625076293945312
    4. '   ' → logprob: -14.500076293945312
    5. '        
' → logprob: -15.875076293945312
    6. '      ' → logprob: -16.250076293945312
    7. 'After' → logprob: -16.375076293945312
    8. '``' → logprob: -16.750076293945312
    9. 'def' → logprob: -16.750076293945312
    10. '           ' → logprob: -16.875076293945312

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020866614067927003
    2. '```' → logprob: -9.250208854675293
    3. '
' → logprob: -9.375208854675293
    4. 'groups' → logprob: -11.000208854675293
    5. '   ' → logprob: -12.750208854675293
    6. 'def' → logprob: -12.875208854675293
    7. '``' → logprob: -13.750208854675293
    8. ' groups' → logprob: -14.625208854675293
    9. '           ' → logprob: -14.875208854675293
    10. '#' → logprob: -15.000208854675293

Token 1019: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.4771420955657959
    2. '       ' → logprob: -0.9771420955657959
    3. '
' → logprob: -6.477142333984375
    4. ' groups' → logprob: -6.727142333984375
    5. '```' → logprob: -9.102142333984375
    6. '#' → logprob: -9.977142333984375
    7. ')' → logprob: -9.977142333984375
    8. 'g' → logprob: -10.602142333984375
    9. '.groups' → logprob: -10.727142333984375
    10. '(groups' → logprob: -10.852142333984375

Token 1020: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011727249948307872
    2. '.' → logprob: -6.7511725425720215
    3. '.app' → logprob: -13.50117301940918
    4. '.Append' → logprob: -14.50117301940918
    5. 'append' → logprob: -14.50117301940918
    6. '.ap' → logprob: -16.25117301940918
    7. '_append' → logprob: -17.50117301940918
    8. '.extend' → logprob: -18.00117301940918
    9. '.add' → logprob: -18.12617301940918
    10. '​.' → logprob: -18.12617301940918

Token 1021: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(P' → logprob: -16.875
    3. 'Press' → logprob: -17.625
    4. '(
' → logprob: -18.75
    5. ' (' → logprob: -19.125
    6. '(Print' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. '((' → logprob: -20.625
    9. '(Note' → logprob: -21.875
    10. '(Process' → logprob: -22.0

Token 1022: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -3.128163257315464e-07
    2. ' Press' → logprob: -15.125
    3. 'Print' → logprob: -20.0
    4. '(' → logprob: -20.375
    5. 'Push' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. 'Pass' → logprob: -20.875
    8. 'Pressure' → logprob: -22.0
    9. 'press' → logprob: -22.5
    10. 'Pressed' → logprob: -22.625

Token 1023: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: 0.0
    2. 'Groups' → logprob: -18.75
    3. '(' → logprob: -21.125
    4. '(prev' → logprob: -22.25
    5. '_group' → logprob: -22.625
    6. 'group' → logprob: -22.75
    7. ' Group' → logprob: -22.875
    8. '(Group' → logprob: -24.0
    9. '_Group' → logprob: -24.0
    10. 'G' → logprob: -24.125

Token 1024: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -2.176947600673884e-05
    2. 'prev' → logprob: -10.750021934509277
    3. '(' → logprob: -15.125021934509277
    4. '(
' → logprob: -17.25002098083496
    5. '(previous' → logprob: -17.62502098083496
    6. '	prev' → logprob: -18.00002098083496
    7. '```' → logprob: -19.37502098083496
    8. ' prev' → logprob: -19.87502098083496
    9. '.prev' → logprob: -20.25002098083496
    10. '_prev' → logprob: -21.12502098083496

Token 1025: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000332485738908872
    2. '(prev' → logprob: -8.125332832336426
    3. ',count' → logprob: -10.750332832336426
    4. 'prev' → logprob: -12.000332832336426
    5. ' ,' → logprob: -12.000332832336426
    6. ',
' → logprob: -13.875332832336426
    7. '       ' → logprob: -14.250332832336426
    8. '(' → logprob: -15.500332832336426
    9. '           ' → logprob: -15.625332832336426
    10. '(count' → logprob: -15.750332832336426

Token 1026: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.842555426876061e-06
    2. ' count' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.8750057220459
    4. '       ' → logprob: -22.7500057220459
    5. '(count' → logprob: -22.8750057220459
    6. '	count' → logprob: -23.6250057220459
    7. ' ' → logprob: -23.6250057220459
    8. '
' → logprob: -24.2500057220459
    9. '.count' → logprob: -24.2500057220459
    10. '
' → logprob: -24.3750057220459

Token 1027: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ')' → logprob: -14.625004768371582
    4. ',
' → logprob: -15.000004768371582
    5. '       ' → logprob: -15.125004768371582
    6. '```' → logprob: -17.375003814697266
    7. '           ' → logprob: -17.500003814697266
    8. ',input' → logprob: -18.000003814697266
    9. '
' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -18.625003814697266

Token 1028: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.52919222577475e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -16.37507438659668
    4. ')' → logprob: -17.12507438659668
    5. '	self' → logprob: -17.12507438659668
    6. '[self' → logprob: -17.25007438659668
    7. '(self' → logprob: -17.87507438659668
    8. '
' → logprob: -18.00007438659668
    9. '   ' → logprob: -18.75007438659668
    10. '```' → logprob: -18.87507438659668

Token 1029: '.char' (ID: 18508)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.258261501789093
    2. 'char' → logprob: -1.5082614421844482
    3. '.char' → logprob: -5.133261680603027
    4. 'self' → logprob: -7.883261680603027
    5. ' char' → logprob: -11.508261680603027
    6. 'input' → logprob: -12.008261680603027
    7. ',char' → logprob: -12.633261680603027
    8. 'Char' → logprob: -13.133261680603027
    9. '```' → logprob: -13.258261680603027
    10. '._' → logprob: -13.258261680603027

Token 1030: '_mapping' (ID: 64323)
  Prédit: '_mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -0.0049469661898911
    2. '_count' → logprob: -5.879947185516357
    3. 'Mapping' → logprob: -6.629947185516357
    4. 'mapping' → logprob: -7.379947185516357
    5. 'count' → logprob: -9.7549467086792
    6. ')' → logprob: -10.0049467086792
    7. '_groups' → logprob: -10.5049467086792
    8. '   ' → logprob: -10.8799467086792
    9. '```' → logprob: -11.8799467086792
    10. '[' → logprob: -12.3799467086792

Token 1031: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25994962453842163
    2. '))' → logprob: -1.5099496841430664
    3. '))
' → logprob: -5.259949684143066
    4. ')
' → logprob: -5.884949684143066
    5. ',' → logprob: -12.009949684143066
    6. '       ' → logprob: -13.259949684143066
    7. '))
' → logprob: -14.259949684143066
    8. ')
' → logprob: -14.259949684143066
    9. ')`' → logprob: -14.509949684143066
    10. '))

' → logprob: -14.884949684143066

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.930552313453518e-05
    2. '
' → logprob: -10.875049591064453
    3. 'return' → logprob: -11.250049591064453
    4. ' return' → logprob: -12.000049591064453
    5. '	' → logprob: -12.375049591064453
    6. '	return' → logprob: -12.625049591064453
    7. '   ' → logprob: -13.250049591064453
    8. '```' → logprob: -14.625049591064453
    9. '           ' → logprob: -14.875049591064453
    10. '<|end|>' → logprob: -15.250049591064453

Token 1033: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4054003655910492
    2. '       ' → logprob: -1.1554003953933716
    3. ' return' → logprob: -4.155400276184082
    4. '
' → logprob: -6.030400276184082
    5. '	return' → logprob: -8.280400276184082
    6. '   ' → logprob: -11.405400276184082
    7. '	' → logprob: -12.030400276184082
    8. ':return' → logprob: -14.030400276184082
    9. '
' → logprob: -14.280400276184082
    10. '```' → logprob: -14.405400276184082

Token 1034: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.006715370807796717
    2. ' groups' → logprob: -5.006715297698975
    3. '.groups' → logprob: -17.756715774536133
    4. '(groups' → logprob: -18.006715774536133
    5. 'group' → logprob: -18.256715774536133
    6. 'roups' → logprob: -18.756715774536133
    7. '   ' → logprob: -19.631715774536133
    8. ' groupes' → logprob: -21.631715774536133
    9. '_groups' → logprob: -21.756715774536133
    10. 'g' → logprob: -21.756715774536133

Token 1035: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06318453699350357
    2. '   ' → logprob: -2.8131844997406006
    3. '<|end|>' → logprob: -7.18818473815918
    4. '```' → logprob: -8.43818473815918
    5. 'def' → logprob: -9.06318473815918
    6. '    
' → logprob: -9.93818473815918
    7. '<|end|>' → logprob: -10.31318473815918
    8. '

' → logprob: -10.56318473815918
    9. '  
' → logprob: -12.68818473815918
    10. ' def' → logprob: -12.93818473815918

Token 1036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030543615575879812
    2. '```' → logprob: -6.378054141998291
    3. 'def' → logprob: -6.753054141998291
    4. '
' → logprob: -8.62805461883545
    5. ' def' → logprob: -12.87805461883545
    6. '	def' → logprob: -14.25305461883545
    7. '<|end|>' → logprob: -14.62805461883545
    8. '    
' → logprob: -15.00305461883545
    9. '  ' → logprob: -15.37805461883545
    10. '``' → logprob: -16.253053665161133

Token 1037: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015140273608267307
    2. '   ' → logprob: -6.501513957977295
    3. ' def' → logprob: -11.626514434814453
    4. '
' → logprob: -12.876514434814453
    5. '	def' → logprob: -15.376514434814453
    6. '```' → logprob: -17.626514434814453
    7. '  ' → logprob: -18.251514434814453
    8. ' ' → logprob: -19.251514434814453
    9. '    
' → logprob: -20.126514434814453
    10. '@' → logprob: -20.626514434814453

Token 1038: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00031699295504949987
    2. 'def' → logprob: -8.750316619873047
    3. ' count' → logprob: -8.750316619873047
    4. ' def' → logprob: -17.125316619873047
    5. '
' → logprob: -17.500316619873047
    6. 'calculate' → logprob: -19.375316619873047
    7. '.count' → logprob: -19.375316619873047
    8. '   ' → logprob: -19.500316619873047
    9. 'code' → logprob: -19.875316619873047
    10. '	count' → logprob: -20.125316619873047

Token 1039: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00038348292582668364
    2. '_' → logprob: -7.875383377075195
    3. ' _' → logprob: -14.000383377075195
    4. '_under' → logprob: -14.875383377075195
    5. '_pres' → logprob: -15.250383377075195
    6. '_in' → logprob: -15.250383377075195
    7. '_interrupt' → logprob: -15.500383377075195
    8. '_iterations' → logprob: -15.500383377075195
    9. '_INTER' → logprob: -16.000383377075195
    10. '(' → logprob: -16.250383377075195

Token 1040: 'pret' (ID: 12540)
  Prédit: 'pret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -1.7432603272027336e-06
    2. 'pre' → logprob: -14.125001907348633
    3. '```' → logprob: -15.000001907348633
    4. 'preter' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'Pret' → logprob: -16.375001907348633
    8. '``' → logprob: -16.750001907348633
    9. 'interpret' → logprob: -17.375001907348633
    10. 'p' → logprob: -17.500001907348633

Token 1041: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.001973838312551379
    2. 'et' → logprob: -6.876973628997803
    3. 't' → logprob: -7.126973628997803
    4. '_' → logprob: -10.751974105834961
    5. '   ' → logprob: -10.876974105834961
    6. 'pret' → logprob: -11.126974105834961
    7. 'er' → logprob: -11.126974105834961
    8. '```' → logprob: -11.376974105834961
    9. 'def' → logprob: -11.501974105834961
    10. '       ' → logprob: -11.751974105834961

Token 1042: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002181987656513229
    2. '(' → logprob: -8.500218391418457
    3. 'self' → logprob: -11.750218391418457
    4. '   ' → logprob: -12.750218391418457
    5. '(
' → logprob: -13.375218391418457
    6. '       ' → logprob: -13.750218391418457
    7. ' (' → logprob: -14.375218391418457
    8. '
' → logprob: -15.500218391418457
    9. '[self' → logprob: -16.00021743774414
    10. '[' → logprob: -16.37521743774414

Token 1043: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020652047533076257
    2. '(' → logprob: -9.00020694732666
    3. ')' → logprob: -10.00020694732666
    4. 'self' → logprob: -10.37520694732666
    5. '   ' → logprob: -13.25020694732666
    6. ')(' → logprob: -13.62520694732666
    7. '(
' → logprob: -14.00020694732666
    8. '	self' → logprob: -14.50020694732666
    9. '[self' → logprob: -14.62520694732666
    10. ',' → logprob: -14.87520694732666

Token 1044: ' press' (ID: 4989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011282655410468578
    2. ' self' → logprob: -4.511282444000244
    3. 'press' → logprob: -8.511282920837402
    4. '       ' → logprob: -11.136282920837402
    5. '   ' → logprob: -11.261282920837402
    6. ' press' → logprob: -12.261282920837402
    7. '(self' → logprob: -13.761282920837402
    8. '	self' → logprob: -16.136281967163086
    9. '    ' → logprob: -17.011281967163086
    10. '
' → logprob: -17.011281967163086

Token 1045: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.75001049041748
    3. '_group' → logprob: -12.87501049041748
    4. ')_' → logprob: -13.25001049041748
    5. 'groups' → logprob: -14.00001049041748
    6. '_
' → logprob: -14.75001049041748
    7. '   ' → logprob: -15.00001049041748
    8. 's' → logprob: -15.00001049041748
    9. '_counts' → logprob: -15.25001049041748
    10. '       ' → logprob: -15.87501049041748

Token 1046: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08515295386314392
    2. ')' → logprob: -2.7101528644561768
    3. 'self' → logprob: -4.835153102874756
    4. '   ' → logprob: -5.710153102874756
    5. '       ' → logprob: -6.710153102874756
    6. '[self' → logprob: -7.335153102874756
    7. '```' → logprob: -7.835153102874756
    8. ' self' → logprob: -7.835153102874756
    9. '[' → logprob: -7.960153102874756
    10. ',' → logprob: -8.335152626037598

Token 1047: ' List' (ID: 2655)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7067950963973999
    2. 'List' → logprob: -0.9567950963973999
    3. ' self' → logprob: -2.5817952156066895
    4. ' List' → logprob: -3.0817952156066895
    5. '[List' → logprob: -7.9567952156066895
    6. '[' → logprob: -8.206794738769531
    7. ' list' → logprob: -8.831794738769531
    8. '[self' → logprob: -9.331794738769531
    9. ')' → logprob: -9.456794738769531
    10. 'list' → logprob: -9.581794738769531

Token 1048: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012332366895861924
    2. ')' → logprob: -9.500123023986816
    3. '[List' → logprob: -11.125123023986816
    4. '   ' → logprob: -11.375123023986816
    5. '[int' → logprob: -11.500123023986816
    6. '       ' → logprob: -11.625123023986816
    7. '[self' → logprob: -13.875123023986816
    8. '```' → logprob: -14.625123023986816
    9. ' [' → logprob: -15.000123023986816
    10. ')[' → logprob: -15.500123023986816

Token 1049: 'Press' (ID: 7572)
  Prédit: 'Press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: 0.0
    2. ' Press' → logprob: -17.0
    3. '   ' → logprob: -18.25
    4. 'press' → logprob: -19.5
    5. 'Pass' → logprob: -19.875
    6. 'int' → logprob: -19.875
    7. '[' → logprob: -20.5
    8. 'Print' → logprob: -20.75
    9. '       ' → logprob: -21.125
    10. ')' → logprob: -21.5

Token 1050: 'Group' (ID: 2748)
  Prédit: 'Groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Groups' → logprob: -0.07079441845417023
    2. '_groups' → logprob: -3.0707943439483643
    3. 'Group' → logprob: -3.8207943439483643
    4. '_group' → logprob: -11.570794105529785
    5. ' Groups' → logprob: -11.820794105529785
    6. '_GROUP' → logprob: -12.070794105529785
    7. '_' → logprob: -12.195794105529785
    8. 'groups' → logprob: -12.320794105529785
    9. ')' → logprob: -12.820794105529785
    10. 'roups' → logprob: -13.070794105529785

Token 1051: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. '   ' → logprob: -12.375005722045898
    3. '       ' → logprob: -14.000005722045898
    4. ' )' → logprob: -14.125005722045898
    5. '):
' → logprob: -15.875005722045898
    6. 'self' → logprob: -16.1250057220459
    7. '):' → logprob: -16.5000057220459
    8. ':' → logprob: -17.3750057220459
    9. ')->' → logprob: -17.7500057220459
    10. '`)' → logprob: -19.1250057220459

Token 1052: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6791041493415833
    2. ':' → logprob: -1.0541040897369385
    3. '       ' → logprob: -2.5541040897369385
    4. ':
' → logprob: -3.8041040897369385
    5. '   ' → logprob: -4.054104328155518
    6. '->' → logprob: -4.679104328155518
    7. 'self' → logprob: -5.054104328155518
    8. '(' → logprob: -6.429104328155518
    9. ',' → logprob: -6.429104328155518
    10. ' ->' → logprob: -6.429104328155518

Token 1053: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '[int' → logprob: -17.628177642822266
    4. '(int' → logprob: -18.128177642822266
    5. '   ' → logprob: -20.003177642822266
    6. '	int' → logprob: -20.378177642822266
    7. ':int' → logprob: -21.128177642822266
    8. ' ' → logprob: -21.503177642822266
    9. '```' → logprob: -21.503177642822266
    10. '  ' → logprob: -23.378177642822266

Token 1054: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3301090598106384
    2. '(self' → logprob: -1.3301091194152832
    3. '[' → logprob: -5.080109119415283
    4. '```' → logprob: -6.205109119415283
    5. 'self' → logprob: -6.330109119415283
    6. '[self' → logprob: -7.080109119415283
    7. '<|end|>' → logprob: -7.080109119415283
    8. ',' → logprob: -7.330109119415283
    9. ':' → logprob: -7.330109119415283
    10. '(' → logprob: -7.455109119415283

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006777655798941851
    2. '   ' → logprob: -7.500677585601807
    3. '```' → logprob: -9.875678062438965
    4. 'return' → logprob: -11.375678062438965
    5. 'result' → logprob: -11.375678062438965
    6. '        
' → logprob: -11.500678062438965
    7. '
' → logprob: -12.000678062438965
    8. '    ' → logprob: -12.125678062438965
    9. '<|end|>' → logprob: -12.500678062438965
    10. '	' → logprob: -12.500678062438965

Token 1056: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20412401854991913
    2. 'result' → logprob: -1.7041239738464355
    3. 'total' → logprob: -6.2041239738464355
    4. 'count' → logprob: -8.079124450683594
    5. 'res' → logprob: -8.454124450683594
    6. ' result' → logprob: -9.204124450683594
    7. '   ' → logprob: -10.954124450683594
    8. '```' → logprob: -11.204124450683594
    9. 'return' → logprob: -11.704124450683594
    10. ' total' → logprob: -12.204124450683594

Token 1057: ' Because' (ID: 13602)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011196012608706951
    2. '       ' → logprob: -4.761196136474609
    3. 'total' → logprob: -6.011196136474609
    4. 'res' → logprob: -9.26119613647461
    5. 'count' → logprob: -10.51119613647461
    6. ' result' → logprob: -12.88619613647461
    7. '   ' → logprob: -14.26119613647461
    8. '```' → logprob: -14.26119613647461
    9. 'answer' → logprob: -15.01119613647461
    10. 'ans' → logprob: -15.38619613647461

Token 1058: ' interpretation' (ID: 39300)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14591194689273834
    2. ' result' → logprob: -2.270911931991577
    3. '       ' → logprob: -4.270912170410156
    4. 'res' → logprob: -5.020912170410156
    5. 'total' → logprob: -5.395912170410156
    6. ' res' → logprob: -5.770912170410156
    7. '1' → logprob: -6.645912170410156
    8. '
' → logprob: -7.395912170410156
    9. ' total' → logprob: -7.395912170410156
    10. '   ' → logprob: -7.520912170410156

Token 1059: ' splits' (ID: 76848)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17867687344551086
    2. '       ' → logprob: -2.0536768436431885
    3. ' =' → logprob: -4.428677082061768
    4. 'result' → logprob: -4.803677082061768
    5. ':' → logprob: -5.303677082061768
    6. 'starts' → logprob: -6.053677082061768
    7. 'is' → logprob: -6.303677082061768
    8. 'count' → logprob: -7.303677082061768
    9. 'def' → logprob: -7.303677082061768
    10. '   ' → logprob: -7.553677082061768

Token 1060: ' only' (ID: 1606)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5656983256340027
    2. '       ' → logprob: -1.6906983852386475
    3. '=' → logprob: -2.3156983852386475
    4. ' =' → logprob: -2.6906983852386475
    5. 'total' → logprob: -3.1906983852386475
    6. 'ways' → logprob: -3.6906983852386475
    7. 'count' → logprob: -5.065698146820068
    8. '#' → logprob: -5.690698146820068
    9. 'res' → logprob: -6.815698146820068
    10. ':' → logprob: -7.065698146820068

Token 1061: ' depend' (ID: 9630)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.294249415397644
    2. 'press' → logprob: -1.294249415397644
    3. 'at' → logprob: -1.919249415397644
    4. 'over' → logprob: -2.5442495346069336
    5. 'on' → logprob: -2.6692495346069336
    6. 'by' → logprob: -3.4192495346069336
    7. 'the' → logprob: -3.6692495346069336
    8. 'groups' → logprob: -3.6692495346069336
    9. 'into' → logprob: -4.044249534606934
    10. 'each' → logprob: -4.294249534606934

Token 1062: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0350937657058239
    2. ' on' → logprob: -3.5350937843322754
    3. '       ' → logprob: -5.285093784332275
    4. '=' → logprob: -8.785093307495117
    5. '   ' → logprob: -10.910093307495117
    6. '```' → logprob: -10.910093307495117
    7. '_on' → logprob: -11.035093307495117
    8. 'only' → logprob: -11.910093307495117
    9. 'upon' → logprob: -11.910093307495117
    10. '+' → logprob: -12.410093307495117

Token 1063: ' single' (ID: 4590)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5303227305412292
    2. 'press' → logprob: -1.405322790145874
    3. '#' → logprob: -2.780322790145874
    4. 'groups' → logprob: -3.530322790145874
    5. 'each' → logprob: -3.780322790145874
    6. ' the' → logprob: -3.780322790145874
    7. 'individual' → logprob: -5.030322551727295
    8. 'group' → logprob: -5.030322551727295
    9. 'self' → logprob: -5.280322551727295
    10. 'length' → logprob: -5.530322551727295

Token 1064: ' press' (ID: 4989)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.9387621879577637
    2. 'group' → logprob: -1.1887621879577637
    3. 'groups' → logprob: -1.9387621879577637
    4. ' group' → logprob: -2.4387621879577637
    5. ' groups' → logprob: -3.8137621879577637
    6. 'digit' → logprob: -3.9387621879577637
    7. '   ' → logprob: -4.938762187957764
    8. ' press' → logprob: -5.188762187957764
    9. '```' → logprob: -5.688762187957764
    10. ' digit' → logprob: -6.313762187957764

Token 1065: ' groups' (ID: 8896)
  Prédit: '_groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.411325454711914
    2. '       ' → logprob: -1.536325454711914
    3. 'groups' → logprob: -1.536325454711914
    4. ' groups' → logprob: -1.786325454711914
    5. 's' → logprob: -2.411325454711914
    6. '   ' → logprob: -3.661325454711914
    7. 'ed' → logprob: -4.536325454711914
    8. 'es' → logprob: -4.661325454711914
    9. 'd' → logprob: -5.286325454711914
    10. 'group' → logprob: -5.661325454711914

Token 1066: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2328607141971588
    2. 'result' → logprob: -1.8578606843948364
    3. ' result' → logprob: -3.357860803604126
    4. 'total' → logprob: -4.732860565185547
    5. '```' → logprob: -5.607860565185547
    6. ' total' → logprob: -5.982860565185547
    7. ',' → logprob: -7.357860565185547
    8. 'count' → logprob: -7.982860565185547
    9. '   ' → logprob: -8.357860565185547
    10. '        
' → logprob: -8.982860565185547

Token 1067: 'that's' (ID: 133153)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0001059770584106
    2. '),' → logprob: -1.7501059770584106
    3. ')' → logprob: -2.250105857849121
    4. ' and' → logprob: -2.875105857849121
    5. 'for' → logprob: -3.000105857849121
    6. 'and' → logprob: -3.000105857849121
    7. 'self' → logprob: -3.375105857849121
    8. '
' → logprob: -3.500105857849121
    9. '#' → logprob: -3.750105857849121
    10. '):
' → logprob: -3.875105857849121

Token 1068: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6152697801589966
    2. 'the' → logprob: -2.365269660949707
    3. '#' → logprob: -2.490269660949707
    4. ')' → logprob: -2.990269660949707
    5. 'correct' → logprob: -3.240269660949707
    6. '   ' → logprob: -3.365269660949707
    7. 'part' → logprob: -3.990269660949707
    8. 'sum' → logprob: -4.115269660949707
    9. 'continued' → logprob: -4.115269660949707
    10. 'return' → logprob: -4.240269660949707

Token 1069: ' forced' (ID: 19387)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0258898735046387
    2. ' the' → logprob: -1.5258898735046387
    3. 'self' → logprob: -1.6508898735046387
    4. 'return' → logprob: -3.2758898735046387
    5. 'digit' → logprob: -3.2758898735046387
    6. ')' → logprob: -3.7758898735046387
    7. 'len' → logprob: -3.7758898735046387
    8. 'each' → logprob: -4.025889873504639
    9. ' self' → logprob: -4.150889873504639
    10. 'dp' → logprob: -4.525889873504639

Token 1070: ' commits' (ID: 102863)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.10145770758390427
    2. 'line' → logprob: -4.351457595825195
    3. 'continu' → logprob: -4.476457595825195
    4. 'spl' → logprob: -4.601457595825195
    5. 'spaces' → logprob: -4.851457595825195
    6. '       ' → logprob: -4.851457595825195
    7. '   ' → logprob: -5.226457595825195
    8. 'split' → logprob: -5.226457595825195
    9. '_break' → logprob: -5.351457595825195
    10. 'se' → logprob: -5.476457595825195

Token 1071: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32450786232948303
    2. ')' → logprob: -2.32450795173645
    3. '),' → logprob: -2.94950795173645
    4. ' to' → logprob: -3.19950795173645
    5. ' and' → logprob: -3.82450795173645
    6. '=' → logprob: -4.574507713317871
    7. ',' → logprob: -5.324507713317871
    8. '+' → logprob: -5.324507713317871
    9. '   ' → logprob: -5.324507713317871
    10. ' for' → logprob: -5.449507713317871

Token 1072: ' happen' (ID: 5659)
  Prédit: 'occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occur' → logprob: -0.7235346436500549
    2. 'h' → logprob: -1.5985345840454102
    3. 'be' → logprob: -1.5985345840454102
    4. ' happen' → logprob: -3.34853458404541
    5. 'appear' → logprob: -3.59853458404541
    6. '       ' → logprob: -3.59853458404541
    7. 'come' → logprob: -4.22353458404541
    8. ' be' → logprob: -6.22353458404541
    9. '   ' → logprob: -7.22353458404541
    10. 'depend' → logprob: -7.47353458404541

Token 1073: '),
' (ID: 2313)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.092935711145401
    2. '),' → logprob: -3.717935800552368
    3. '):' → logprob: -3.967935800552368
    4. ')' → logprob: -4.342935562133789
    5. ',' → logprob: -4.342935562133789
    6. ':' → logprob: -4.592935562133789
    7. '):
' → logprob: -5.217935562133789
    8. ' and' → logprob: -7.092935562133789
    9. ' for' → logprob: -7.467935562133789
    10. '   ' → logprob: -7.717935562133789

Token 1074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.780830830801278e-05
    2. 'return' → logprob: -9.50008773803711
    3. 'result' → logprob: -11.75008773803711
    4. ' return' → logprob: -13.37508773803711
    5. '   ' → logprob: -14.00008773803711
    6. '```' → logprob: -14.12508773803711
    7. '           ' → logprob: -14.37508773803711
    8. 'count' → logprob: -15.50008773803711
    9. 'total' → logprob: -15.75008773803711
    10. '	' → logprob: -16.00008773803711

Token 1075: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025035928934812546
    2. 'result' → logprob: -3.900035858154297
    3. 'total' → logprob: -6.150035858154297
    4. ' result' → logprob: -6.775035858154297
    5. ' total' → logprob: -7.775035858154297
    6. '#' (adapté à ' #') → logprob: -7.775035858154297
    7. '   ' → logprob: -8.400035858154297
    8. 'return' → logprob: -9.650035858154297
    9. 'count' → logprob: -11.025035858154297
    10. '           ' → logprob: -11.650035858154297

Token 1076: ' the' (ID: 290)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0235140323638916
    2. '       ' → logprob: -4.0235137939453125
    3. 'total' → logprob: -5.2735137939453125
    4. 'res' → logprob: -8.523513793945312
    5. ' result' → logprob: -11.273513793945312
    6. 'count' → logprob: -11.773513793945312
    7. '   ' → logprob: -12.898513793945312
    8. 'answer' → logprob: -14.398513793945312
    9. '#' → logprob: -14.523513793945312
    10. 'ans' → logprob: -14.898513793945312

Token 1077: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005898934323340654
    2. 'res' → logprob: -6.005898952484131
    3. 'total' → logprob: -6.005898952484131
    4. ' result' → logprob: -7.130898952484131
    5. 'answer' → logprob: -9.630898475646973
    6. '       ' → logprob: -10.380898475646973
    7. 'count' → logprob: -10.630898475646973
    8. 'return' → logprob: -11.630898475646973
    9. ' total' → logprob: -11.630898475646973
    10. '   ' → logprob: -11.880898475646973

Token 1078: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6189383268356323
    2. ' =' → logprob: -0.8689383268356323
    3. 'result' → logprob: -3.243938446044922
    4. '_result' → logprob: -6.368938446044922
    5. ' result' → logprob: -7.243938446044922
    6. 'count' → logprob: -8.993938446044922
    7. 'ways' → logprob: -9.243938446044922
    8. '   ' → logprob: -9.368938446044922
    9. '_count' → logprob: -9.493938446044922
    10. '       ' → logprob: -9.743938446044922

Token 1079: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7182743549346924
    2. 'of' → logprob: -0.8432743549346924
    3. '       ' → logprob: -3.3432743549346924
    4. '=' → logprob: -3.7182743549346924
    5. '_of' → logprob: -4.718274116516113
    6. ' =' → logprob: -5.093274116516113
    7. '   ' → logprob: -6.093274116516113
    8. 'def' → logprob: -6.218274116516113
    9. '_' → logprob: -7.093274116516113
    10. ')' → logprob: -7.218274116516113

Token 1080: ' interpretations' (ID: 105408)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -1.0290056467056274
    2. ' ways' → logprob: -1.2790056467056274
    3. 'ways' → logprob: -1.2790056467056274
    4. 'result' → logprob: -3.154005527496338
    5. '1' → logprob: -4.404005527496338
    6. '   ' → logprob: -5.029005527496338
    7. ' interpretations' → logprob: -5.279005527496338
    8. '=' → logprob: -5.904005527496338
    9. ' =' → logprob: -6.154005527496338
    10. '#' → logprob: -6.654005527496338

Token 1081: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14329954981803894
    2. ' =' → logprob: -2.0182995796203613
    3. '       ' → logprob: -7.518299579620361
    4. '   ' → logprob: -10.268299102783203
    5. '```' → logprob: -11.643299102783203
    6. '*=' → logprob: -11.768299102783203
    7. 'result' → logprob: -12.018299102783203
    8. ',' → logprob: -12.018299102783203
    9. ' *=' → logprob: -12.268299102783203
    10. ')' → logprob: -12.643299102783203

Token 1082: ' product' (ID: 1888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '       ' → logprob: -11.50001335144043
    3. '(' → logprob: -13.25001335144043
    4. ' ' → logprob: -14.00001335144043
    5. '   ' → logprob: -14.62501335144043
    6. '```' → logprob: -16.00001335144043
    7. 'MOD' → logprob: -19.62501335144043
    8. 'mod' → logprob: -19.87501335144043
    9. ' (' → logprob: -20.12501335144043
    10. 'def' → logprob: -20.12501335144043

Token 1083: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0107957124710083
    2. '=' → logprob: -1.2607957124710083
    3. '       ' → logprob: -1.8857957124710083
    4. '_' → logprob: -2.3857955932617188
    5. '(
' → logprob: -3.5107955932617188
    6. '   ' → logprob: -3.8857955932617188
    7. 'of' → logprob: -4.385795593261719
    8. ' of' → logprob: -4.385795593261719
    9. ' =' → logprob: -5.010795593261719
    10. ')' → logprob: -5.260795593261719

Token 1084: ' number' (ID: 2086)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.7221105098724365
    2. 'dp' → logprob: -1.8471105098724365
    3. '(' → logprob: -2.7221105098724365
    4. '```' → logprob: -2.7221105098724365
    5. ' dp' → logprob: -3.3471105098724365
    6. ' press' → logprob: -3.4721105098724365
    7. 'p' → logprob: -3.9721105098724365
    8. '1' → logprob: -4.347110748291016
    9. '   ' → logprob: -4.347110748291016
    10. 'self' → logprob: -4.597110748291016

Token 1085: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7283269762992859
    2. 'of' → logprob: -1.4783270359039307
    3. '_of' → logprob: -1.6033270359039307
    4. '_tokens' → logprob: -3.1033270359039307
    5. ' of' → logprob: -3.9783270359039307
    6. '_
' → logprob: -4.728326797485352
    7. '_inter' → logprob: -5.478326797485352
    8. '   ' → logprob: -6.478326797485352
    9. '_elements' → logprob: -6.478326797485352
    10. '_groups' → logprob: -6.978326797485352

Token 1086: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.005925600882619619
    2. 'interpret' → logprob: -5.38092565536499
    3. ' ways' → logprob: -7.00592565536499
    4. 'possible' → logprob: -8.255925178527832
    5. 'interpre' → logprob: -10.130925178527832
    6. '_inter' → logprob: -10.755925178527832
    7. 'way' → logprob: -10.880925178527832
    8. '```' → logprob: -11.130925178527832
    9. '_' → logprob: -11.255925178527832
    10. 'poss' → logprob: -12.380925178527832

Token 1087: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2101573795080185
    2. ' to' → logprob: -1.8351573944091797
    3. 'to' → logprob: -3.8351573944091797
    4. '(' → logprob: -5.46015739440918
    5. '_to' → logprob: -7.21015739440918
    6. ')' → logprob: -7.33515739440918
    7. 'for' → logprob: -7.46015739440918
    8. ' for' → logprob: -7.46015739440918
    9. '*' → logprob: -7.71015739440918
    10. '   ' → logprob: -7.96015739440918

Token 1088: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5589812994003296
    2. 'press' → logprob: -0.9339812994003296
    3. ' group' → logprob: -4.183981418609619
    4. 'pg' → logprob: -4.683981418609619
    5. ' press' → logprob: -4.683981418609619
    6. ' pg' → logprob: -7.183981418609619
    7. '_press' → logprob: -7.808981418609619
    8. '   ' → logprob: -9.808980941772461
    9. 'Press' → logprob: -9.933980941772461
    10. 'pressed' → logprob: -10.308980941772461

Token 1089: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5351214408874512
    2. ' to' → logprob: -1.2851214408874512
    3. 'to' → logprob: -2.660121440887451
    4. '```' → logprob: -3.785121440887451
    5. '_to' → logprob: -4.285121440887451
    6. ' of' → logprob: -4.910121440887451
    7. 'of' → logprob: -5.035121440887451
    8. '.' → logprob: -5.535121440887451
    9. ',' → logprob: -5.910121440887451
    10. 'def' → logprob: -6.660121440887451

Token 1090: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.19308465719223022
    2. ' be' → logprob: -1.943084716796875
    3. 'interpret' → logprob: -3.693084716796875
    4. 'multiply' → logprob: -5.818084716796875
    5. '```' → logprob: -6.443084716796875
    6. '   ' → logprob: -7.318084716796875
    7. 'split' → logprob: -7.818084716796875
    8. 'have' → logprob: -8.193084716796875
    9. 'calculate' → logprob: -8.568084716796875
    10. 'inter' → logprob: -8.818084716796875

Token 1091: ' interpreted' (ID: 66123)
  Prédit: 'interpre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interpre' → logprob: -0.028520971536636353
    2. 'computed' → logprob: -4.0285210609436035
    3. 'cal' → logprob: -5.7785210609436035
    4. 'split' → logprob: -5.9035210609436035
    5. 'parsed' → logprob: -6.2785210609436035
    6. 'decoded' → logprob: -6.6535210609436035
    7. '```' → logprob: -7.2785210609436035
    8. ' interpreted' → logprob: -8.153520584106445
    9. 'evalu' → logprob: -9.278520584106445
    10. ' multiplied' → logprob: -10.153520584106445

Token 1092: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2553001642227173
    2. 'result' → logprob: -1.5053001642227173
    3. 'total' → logprob: -6.005300045013428
    4. 'res' → logprob: -7.505300045013428
    5. '
' → logprob: -8.880300521850586
    6. ' result' → logprob: -9.630300521850586
    7. '```' → logprob: -9.755300521850586
    8. 'count' → logprob: -10.130300521850586
    9. 'answer' → logprob: -11.755300521850586
    10. '        
' → logprob: -11.755300521850586

Token 1093: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014904608018696308
    2. 'result' → logprob: -4.264904499053955
    3. '
' → logprob: -7.514904499053955
    4. 'res' → logprob: -9.389904975891113
    5. 'total' → logprob: -9.639904975891113
    6. '```' → logprob: -10.889904975891113
    7. '   ' → logprob: -11.264904975891113
    8. ' result' → logprob: -12.264904975891113
    9. 'return' → logprob: -12.889904975891113
    10. '        
' → logprob: -13.139904975891113

Token 1094: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20344339311122894
    2. 'result' → logprob: -1.7034434080123901
    3. 'total' → logprob: -7.07844352722168
    4. 'res' → logprob: -7.07844352722168
    5. '
' → logprob: -8.82844352722168
    6. ' result' → logprob: -9.57844352722168
    7. '```' → logprob: -9.70344352722168
    8. '   ' → logprob: -11.20344352722168
    9. 'return' → logprob: -11.32844352722168
    10. 'count' → logprob: -11.45344352722168

Token 1095: ' convert' (ID: 8452)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47686898708343506
    2. 'result' → logprob: -0.9768689870834351
    3. 'total' → logprob: -6.226869106292725
    4. 'res' → logprob: -7.351869106292725
    5. ' result' → logprob: -9.601868629455566
    6. '
' → logprob: -9.851868629455566
    7. '   ' → logprob: -10.726868629455566
    8. '```' → logprob: -11.351868629455566
    9. 'answer' → logprob: -11.976868629455566
    10. '        
' → logprob: -12.851868629455566

Token 1096: ' under' (ID: 1641)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7448225617408752
    2. '       ' → logprob: -1.4948225021362305
    3. 'import' → logprob: -1.8698225021362305
    4. '   ' → logprob: -2.8698225021362305
    5. 'from' → logprob: -3.7448225021362305
    6. '1' → logprob: -4.2448225021362305
    7. '=' → logprob: -4.9948225021362305
    8. 'res' → logprob: -5.1198225021362305
    9. 'product' → logprob: -5.1198225021362305
    10. ' =' → logprob: -5.2448225021362305

Token 1097: ' modulo' (ID: 112372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46987995505332947
    2. 'MOD' → logprob: -1.5948799848556519
    3. '       ' → logprob: -2.2198798656463623
    4. '   ' → logprob: -4.469880104064941
    5. 'result' → logprob: -4.719880104064941
    6. '100' → logprob: -4.969880104064941
    7. '```' → logprob: -5.094880104064941
    8. ')' → logprob: -5.094880104064941
    9. ' MOD' → logprob: -5.594880104064941
    10. 'def' → logprob: -5.844880104064941

Token 1098: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08606919646263123
    2. '       ' → logprob: -3.086069107055664
    3. '
' → logprob: -4.211069107055664
    4. 'total' → logprob: -4.836069107055664
    5. 'res' → logprob: -5.086069107055664
    6. ' result' → logprob: -5.086069107055664
    7. '```' → logprob: -7.461069107055664
    8. 'ans' → logprob: -8.086069107055664
    9. 'answer' → logprob: -8.336069107055664
    10. ' total' → logprob: -9.461069107055664

Token 1099: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4760288596153259
    2. '       ' → logprob: -0.9760288596153259
    3. 'res' → logprob: -6.976028919219971
    4. '
' → logprob: -7.351028919219971
    5. 'total' → logprob: -8.601028442382812
    6. ' result' → logprob: -9.476028442382812
    7. '```' → logprob: -9.601028442382812
    8. 'answer' → logprob: -10.851028442382812
    9. 'ans' → logprob: -11.851028442382812
    10. '   ' → logprob: -11.976028442382812

Token 1100: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20547698438167572
    2. '       ' → logprob: -1.705476999282837
    3. 'res' → logprob: -5.830476760864258
    4. 'total' → logprob: -7.580476760864258
    5. ' result' → logprob: -7.955476760864258
    6. '```' → logprob: -8.830476760864258
    7. 'ans' → logprob: -9.955476760864258
    8. 'answer' → logprob: -10.705476760864258
    9. '   ' → logprob: -10.830476760864258
    10. '	result' → logprob: -12.330476760864258

Token 1101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07899477332830429
    2. '=' → logprob: -2.5789947509765625
    3. ' *=' → logprob: -9.328994750976562
    4. ' ' → logprob: -12.828994750976562
    5. '```' → logprob: -13.078994750976562
    6. ' <<=' → logprob: -13.203994750976562
    7. ' ^=' → logprob: -13.328994750976562
    8. '*=' → logprob: -13.578994750976562
    9. '	' → logprob: -14.078994750976562
    10. ')' → logprob: -14.078994750976562

Token 1102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.000011444091797
    4. '       ' → logprob: -16.250011444091797
    5. '```' → logprob: -17.750011444091797
    6. '۱' → logprob: -20.000011444091797
    7. '`' → logprob: -20.375011444091797
    8. '	' → logprob: -20.875011444091797
    9. '  ' → logprob: -21.375011444091797
    10. '１' → logprob: -21.875011444091797

Token 1103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -18.0
    5. '`' → logprob: -20.125
    6. 'def' → logprob: -20.875
    7. 'result' → logprob: -21.0
    8. 'import' → logprob: -21.0
    9. 'pow' → logprob: -21.125
    10. '۱' → logprob: -21.25

Token 1104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3306375741958618
    2. '
' → logprob: -1.4556375741958618
    3. '<|end|>' → logprob: -3.8306374549865723
    4. ' for' → logprob: -5.205637454986572
    5. 'for' → logprob: -5.455637454986572
    6. '%' → logprob: -5.955637454986572
    7. '   ' → logprob: -6.080637454986572
    8. '	' → logprob: -6.080637454986572
    9. '```' → logprob: -6.330637454986572
    10. '        
' → logprob: -6.455637454986572

Token 1105: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35639363527297974
    2. '       ' → logprob: -2.231393575668335
    3. ' for' → logprob: -2.231393575668335
    4. 'for' → logprob: -2.481393575668335
    5. '   ' → logprob: -7.106393814086914
    6. '	for' → logprob: -8.981393814086914
    7. ' 
' → logprob: -9.356393814086914
    8. '
' → logprob: -9.356393814086914
    9. '        
' → logprob: -9.731393814086914
    10. '```' → logprob: -9.856393814086914

Token 1106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07905524969100952
    2. ' for' → logprob: -2.5790553092956543
    3. '
' → logprob: -8.954054832458496
    4. '       ' → logprob: -11.579054832458496
    5. '```' → logprob: -11.704054832458496
    6. ' 
' → logprob: -11.829054832458496
    7. '	for' → logprob: -12.329054832458496
    8. '   ' → logprob: -12.579054832458496
    9. '    
' → logprob: -13.704054832458496
    10. '        
' → logprob: -14.579054832458496

Token 1107: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5781835913658142
    2. 'pg' → logprob: -0.8281835913658142
    3. ' group' → logprob: -6.328183650970459
    4. ' pg' → logprob: -7.828183650970459
    5. 'g' → logprob: -9.9531831741333
    6. 'grp' → logprob: -11.5781831741333
    7. 'press' → logprob: -14.2031831741333
    8. ' g' → logprob: -15.8281831741333
    9. '(pg' → logprob: -17.078184127807617
    10. ' grp' → logprob: -17.328184127807617

Token 1108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009282346814870834
    2. 'in' → logprob: -5.509282112121582
    3. ',' → logprob: -6.009282112121582
    4. '.' → logprob: -6.634282112121582
    5. '   ' → logprob: -7.384282112121582
    6. '       ' → logprob: -8.509282112121582
    7. '  ' → logprob: -9.259282112121582
    8. ':' → logprob: -9.509282112121582
    9. '    ' → logprob: -9.759282112121582
    10. ' ' → logprob: -9.884282112121582

Token 1109: ' press' (ID: 4989)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.029841894283890724
    2. ' press' → logprob: -3.529841899871826
    3. 'group' → logprob: -9.779841423034668
    4. '   ' → logprob: -10.529841423034668
    5. ' group' → logprob: -12.779841423034668
    6. 'Press' → logprob: -13.779841423034668
    7. ' ' → logprob: -13.904841423034668
    8. 'pressed' → logprob: -14.154841423034668
    9. '       ' → logprob: -14.779841423034668
    10. 'groups' → logprob: -14.904841423034668

Token 1110: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.003986862022429705
    2. '_group' → logprob: -5.753986835479736
    3. 's' → logprob: -7.378986835479736
    4. '_' → logprob: -9.253987312316895
    5. 'group' → logprob: -9.878987312316895
    6. 'groups' → logprob: -11.753987312316895
    7. 'roups' → logprob: -11.878987312316895
    8. '.groups' → logprob: -12.378987312316895
    9. '._' → logprob: -12.628987312316895
    10. ')' → logprob: -12.878987312316895

Token 1111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12384045869112015
    2. '           ' → logprob: -3.248840570449829
    3. '       ' → logprob: -3.623840570449829
    4. ',' → logprob: -3.623840570449829
    5. ':
' → logprob: -3.998840570449829
    6. '=' → logprob: -5.99884033203125
    7. '{' → logprob: -7.37384033203125
    8. '[' → logprob: -7.62384033203125
    9. '<|end|>' → logprob: -7.74884033203125
    10. '<|end|>' → logprob: -8.12384033203125

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00868690200150013
    2. '       ' → logprob: -5.5086870193481445
    3. 'result' → logprob: -5.5086870193481445
    4. '```' → logprob: -8.008687019348145
    5. ' result' → logprob: -9.133687019348145
    6. '
' → logprob: -11.008687019348145
    7. '(result' → logprob: -11.383687019348145
    8. '{
' → logprob: -11.508687019348145
    9. '               ' → logprob: -11.633687019348145
    10. '[' → logprob: -11.883687019348145

Token 1113: ' ways' (ID: 6984)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0063621969893574715
    2. ' result' → logprob: -5.131361961364746
    3. '           ' → logprob: -7.756361961364746
    4. '```' → logprob: -13.631361961364746
    5. 'res' → logprob: -14.006361961364746
    6. '   ' → logprob: -14.381361961364746
    7. '	result' → logprob: -14.381361961364746
    8. '_result' → logprob: -14.506361961364746
    9. 'num' → logprob: -14.756361961364746
    10. '       ' → logprob: -15.256361961364746

Token 1114: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.12977539002895355
    2. ' =' → logprob: -3.129775285720825
    3. '*=' → logprob: -3.254775285720825
    4. '=' → logprob: -3.254775285720825
    5. '   ' → logprob: -7.754775524139404
    6. '```' → logprob: -9.129775047302246
    7. '*' → logprob: -10.004775047302246
    8. ' <<=' → logprob: -10.129775047302246
    9. ' ' → logprob: -10.504775047302246
    10. '  ' → logprob: -10.629775047302246

Token 1115: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.06196802109479904
    2. ' group' → logprob: -2.8119680881500244
    3. '(group' → logprob: -14.811967849731445
    4. '.group' → logprob: -19.061967849731445
    5. '           ' → logprob: -19.186967849731445
    6. '	group' → logprob: -19.186967849731445
    7. '"group' → logprob: -20.311967849731445
    8. '(' → logprob: -22.186967849731445
    9. '_group' → logprob: -22.436967849731445
    10. ' (' → logprob: -22.811967849731445

Token 1116: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -2.8802491215174086e-05
    2. 'number' → logprob: -11.125028610229492
    3. '.' → logprob: -11.250028610229492
    4. ' .' → logprob: -15.000028610229492
    5. '[number' → logprob: -16.375028610229492
    6. '.
' → logprob: -16.625028610229492
    7. '_number' → logprob: -16.750028610229492
    8. '	number' → logprob: -16.875028610229492
    9. '.num' → logprob: -17.000028610229492
    10. ' number' → logprob: -17.250028610229492

Token 1117: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. 'of' → logprob: -16.0
    3. '_' → logprob: -16.625
    4. '```' → logprob: -17.125
    5. '\' → logprob: -18.625
    6. '_o' → logprob: -19.0
    7. '_OF' → logprob: -19.0
    8. ' of' → logprob: -19.5
    9. ' _' → logprob: -19.5
    10. 'Of' → logprob: -19.875

Token 1118: '_inter' (ID: 16818)
  Prédit: 'interpret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interpret' → logprob: -0.36501097679138184
    2. 'inter' → logprob: -1.3650109767913818
    3. 'interpre' → logprob: -3.115010976791382
    4. '_inter' → logprob: -5.115011215209961
    5. 'inte' → logprob: -10.740011215209961
    6. 'int' → logprob: -10.865011215209961
    7. 'interp' → logprob: -12.365011215209961
    8. ' interpretations' → logprob: -12.990011215209961
    9. '```' → logprob: -14.490011215209961
    10. '
' → logprob: -15.240011215209961

Token 1119: 'pret' (ID: 12540)
  Prédit: 'pret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -3.607391408877447e-05
    2. 'pr' → logprob: -11.625036239624023
    3. 'ations' → logprob: -11.875036239624023
    4. 't' → logprob: -12.000036239624023
    5. 'p' → logprob: -12.750036239624023
    6. 'ret' → logprob: -12.750036239624023
    7. 'pre' → logprob: -13.375036239624023
    8. 'pet' → logprob: -13.625036239624023
    9. 'lations' → logprob: -14.000036239624023
    10. '```' → logprob: -14.000036239624023

Token 1120: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.004117104224860668
    2. 't' → logprob: -5.504117012023926
    3. 'et' → logprob: -10.629117012023926
    4. 's' → logprob: -12.379117012023926
    5. 'at' → logprob: -12.629117012023926
    6. '   ' → logprob: -13.004117012023926
    7. '       ' → logprob: -13.379117012023926
    8. '```' → logprob: -13.754117012023926
    9. 'lations' → logprob: -15.254117012023926
    10. '#' → logprob: -15.629117012023926

Token 1121: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04259670525789261
    2. '%' → logprob: -4.042596817016602
    3. ' %' → logprob: -4.167596817016602
    4. '       ' → logprob: -5.792596817016602
    5. '
' → logprob: -6.042596817016602
    6. ')' → logprob: -6.792596817016602
    7. '```' → logprob: -8.042596817016602
    8. '<|end|>' → logprob: -8.042596817016602
    9. '%
' → logprob: -8.292596817016602
    10. '*' → logprob: -9.042596817016602

Token 1122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004749218467622995
    2. '```' → logprob: -5.879749298095703
    3. '
' → logprob: -6.629749298095703
    4. 'result' → logprob: -8.629749298095703
    5. '*' → logprob: -9.254749298095703
    6. '<|end|>' → logprob: -9.379749298095703
    7. '       ' → logprob: -9.754749298095703
    8. '%' → logprob: -10.379749298095703
    9. '``' → logprob: -10.379749298095703
    10. ' result' → logprob: -10.754749298095703

Token 1123: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.023656655102968216
    2. '           ' → logprob: -3.7736566066741943
    3. ' result' → logprob: -8.023656845092773
    4. '
' → logprob: -9.648656845092773
    5. '```' → logprob: -11.648656845092773
    6. '       ' → logprob: -12.523656845092773
    7. '               ' → logprob: -12.773656845092773
    8. '_result' → logprob: -14.148656845092773
    9. '(result' → logprob: -14.273656845092773
    10. '``' → logprob: -14.398656845092773

Token 1124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013352927751839161
    2. ' =' → logprob: -4.388352870941162
    3. '*=' → logprob: -7.138352870941162
    4. ' *=' → logprob: -10.13835334777832
    5. '%=' → logprob: -12.38835334777832
    6. '*' → logprob: -12.76335334777832
    7. '   ' → logprob: -13.88835334777832
    8. '```' → logprob: -14.26335334777832
    9. '	' → logprob: -14.63835334777832
    10. ')' → logprob: -16.38835334777832

Token 1125: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.04859565943479538
    2. ' (' → logprob: -3.048595666885376
    3. '(' → logprob: -12.173595428466797
    4. 'result' → logprob: -13.298595428466797
    5. ' result' → logprob: -14.423595428466797
    6. '(res' → logprob: -14.548595428466797
    7. '[result' → logprob: -15.798595428466797
    8. '```' → logprob: -16.548595428466797
    9. ',result' → logprob: -17.173595428466797
    10. '=result' → logprob: -17.173595428466797

Token 1126: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.512236498361744e-07
    2. ' result' → logprob: -15.000000953674316
    3. '(result' → logprob: -16.0
    4. '           ' → logprob: -22.875
    5. '	result' → logprob: -22.875
    6. '$result' → logprob: -24.375
    7. 'res' → logprob: -24.375
    8. '_result' → logprob: -24.625
    9. '.result' → logprob: -24.75
    10. '   ' → logprob: -25.625

Token 1127: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004078758880496025
    2. '*' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.25407886505127
    4. ')' → logprob: -17.754077911376953
    5. '*object' → logprob: -17.879077911376953
    6. ' **' → logprob: -18.754077911376953
    7. '**' → logprob: -18.754077911376953
    8. ' ' → logprob: -19.004077911376953
    9. '```' → logprob: -19.004077911376953
    10. 'result' → logprob: -19.254077911376953

Token 1128: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.7610454708337784e-05
    2. ' ways' → logprob: -10.500027656555176
    3. 'way' → logprob: -17.00002670288086
    4. '```' → logprob: -19.62502670288086
    5. 'WAYS' → logprob: -19.87502670288086
    6. '   ' → logprob: -20.50002670288086
    7. '(' → logprob: -20.75002670288086
    8. '       ' → logprob: -21.75002670288086
    9. 'Ways' → logprob: -21.75002670288086
    10. 'words' → logprob: -21.87502670288086

Token 1129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00201333686709404
    2. ')%' → logprob: -6.252013206481934
    3. ' )' → logprob: -9.877013206481934
    4. '%' → logprob: -10.502013206481934
    5. ' %' → logprob: -12.252013206481934
    6. '%)' → logprob: -15.002013206481934
    7. '           ' → logprob: -15.252013206481934
    8. '       ' → logprob: -15.627013206481934
    9. '```' → logprob: -15.752013206481934
    10. ' ' → logprob: -16.62701416015625

Token 1130: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07006814330816269
    2. ' %' → logprob: -2.695068120956421
    3. ')%' → logprob: -9.320068359375
    4. ')' → logprob: -10.445068359375
    5. ' %=' → logprob: -12.320068359375
    6. '```' → logprob: -12.820068359375
    7. '%n' → logprob: -13.945068359375
    8. '<|end|>' → logprob: -14.195068359375
    9. '%s' → logprob: -14.320068359375
    10. ']%' → logprob: -14.445068359375

Token 1131: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -21.3750057220459
    4. '.MOD' → logprob: -22.7500057220459
    5. '100' → logprob: -23.3750057220459
    6. 'MO' → logprob: -23.7500057220459
    7. '```' → logprob: -24.3750057220459
    8. 'M' → logprob: -25.0000057220459
    9. 'MD' → logprob: -25.2500057220459
    10. '(M' → logprob: -25.7500057220459

Token 1132: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025512888096272945
    2. 'return' → logprob: -6.502551078796387
    3. '
' → logprob: -7.127551078796387
    4. ' return' → logprob: -8.502551078796387
    5. '<|end|>' → logprob: -11.127551078796387
    6. '        
' → logprob: -11.377551078796387
    7. '```' → logprob: -12.252551078796387
    8. '   ' → logprob: -12.877551078796387
    9. '	' → logprob: -13.377551078796387
    10. '	return' → logprob: -13.627551078796387

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008290913887321949
    2. 'return' → logprob: -5.258290767669678
    3. '
' → logprob: -6.133290767669678
    4. ' return' → logprob: -7.758290767669678
    5. '	' → logprob: -8.258291244506836
    6. '   ' → logprob: -9.258291244506836
    7. '	return' → logprob: -9.508291244506836
    8. '        
' → logprob: -11.383291244506836
    9. '```' → logprob: -11.633291244506836
    10. '    
' → logprob: -13.258291244506836

Token 1134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13699960708618164
    2. '       ' → logprob: -2.1369996070861816
    3. ' return' → logprob: -4.886999607086182
    4. '	return' → logprob: -6.636999607086182
    5. '	' → logprob: -7.011999607086182
    6. '   ' → logprob: -9.011999130249023
    7. '
' → logprob: -9.136999130249023
    8. '        
' → logprob: -11.011999130249023
    9. '		
' → logprob: -12.636999130249023
    10. ':return' → logprob: -12.636999130249023

Token 1135: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.014163628220558167
    2. ' result' → logprob: -4.264163494110107
    3. '1' → logprob: -16.889163970947266
    4. '(result' → logprob: -17.014163970947266
    5. '	result' → logprob: -19.014163970947266
    6. '
' → logprob: -19.639163970947266
    7. ' ' → logprob: -19.764163970947266
    8. '_result' → logprob: -20.264163970947266
    9. '   ' → logprob: -20.889163970947266
    10. '0' → logprob: -21.139163970947266

Token 1136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004283892456442118
    2. 'if' → logprob: -5.504283905029297
    3. 'import' → logprob: -8.629283905029297
    4. 'class' → logprob: -11.254283905029297
    5. '```' → logprob: -11.879283905029297
    6. '#' → logprob: -12.379283905029297
    7. 'input' → logprob: -13.629283905029297
    8. 'for' → logprob: -13.754283905029297
    9. ' def' → logprob: -16.254283905029297
    10. ' if' → logprob: -17.754283905029297

Token 1138: ' Application' (ID: 12493)
  Prédit: ' Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Main' → logprob: -0.638289213180542
    2. ' Solution' → logprob: -2.013289213180542
    3. 'Main' → logprob: -2.388289213180542
    4. ' Kana' → logprob: -3.263289213180542
    5. ' Roman' → logprob: -3.638289213180542
    6. 'Solution' → logprob: -3.763289213180542
    7. ' Test' → logprob: -4.013289451599121
    8. ' English' → logprob: -4.138289451599121
    9. 'Roman' → logprob: -4.763289451599121
    10. ' Morse' → logprob: -4.763289451599121

Token 1139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029295608401298523
    2. ':
' → logprob: -5.8779296875
    3. '():' → logprob: -9.3779296875
    4. '(' → logprob: -11.0029296875
    5. '):' → logprob: -11.3779296875
    6. '(QWidget' → logprob: -12.7529296875
    7. '>:' → logprob: -13.5029296875
    8. '():
' → logprob: -13.6279296875
    9. '```' → logprob: -13.7529296875
    10. '<|end|>' → logprob: -14.1279296875

Token 1140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002370329457335174
    2. ' def' → logprob: -8.750237464904785
    3. 'def' → logprob: -9.500237464904785
    4. '	def' → logprob: -13.250237464904785
    5. '    
' → logprob: -14.250237464904785
    6. 'class' → logprob: -15.125237464904785
    7. 'import' → logprob: -16.25023651123047
    8. '
' → logprob: -16.25023651123047
    9. '<|end|>' → logprob: -16.25023651123047
    10. '  ' → logprob: -16.62523651123047

Token 1141: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25216126441955566
    2. 'def' (adapté à ' def') → logprob: -1.5021612644195557
    3. '   ' → logprob: -8.377161026000977
    4. '```' → logprob: -13.252161026000977
    5. '	def' → logprob: -15.377161026000977
    6. 'class' → logprob: -16.752161026000977
    7. 'import' → logprob: -17.127161026000977
    8. 'de' → logprob: -18.127161026000977
    9. '``' → logprob: -19.002161026000977
    10. ' ' → logprob: -19.127161026000977

Token 1142: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.7351222038269043
    2. ' __' → logprob: -0.9851222038269043
    3. '__' → logprob: -1.9851222038269043
    4. 'def' → logprob: -4.860122203826904
    5. '_init' → logprob: -6.860122203826904
    6. ' init' → logprob: -7.860122203826904
    7. ' def' → logprob: -8.235122680664062
    8. '_' → logprob: -8.360122680664062
    9. '___' → logprob: -10.235122680664062
    10. ' _' → logprob: -10.235122680664062

Token 1143: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00075602374272421
    2. '__' → logprob: -7.500755786895752
    3. '```' → logprob: -9.25075626373291
    4. ' init' → logprob: -9.62575626373291
    5. '_init' → logprob: -11.12575626373291
    6. ' __' → logprob: -11.62575626373291
    7. 'def' → logprob: -11.75075626373291
    8. 'class' → logprob: -12.62575626373291
    9. 'int' → logprob: -13.00075626373291
    10. '   ' → logprob: -13.75075626373291

Token 1144: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010890735575230792
    2. '__(
' → logprob: -9.75010871887207
    3. '__' → logprob: -10.12510871887207
    4. '(self' → logprob: -12.37510871887207
    5. '__((' → logprob: -12.37510871887207
    6. '__("' → logprob: -14.37510871887207
    7. '<>(' → logprob: -14.62510871887207
    8. '__('' → logprob: -14.75010871887207
    9. '__(*' → logprob: -15.87510871887207
    10. '__[' → logprob: -16.12510871887207

Token 1145: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -14.000001907348633
    3. ')' → logprob: -14.500001907348633
    4. '
' → logprob: -16.500001907348633
    5. '):
' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '       ' → logprob: -17.500001907348633
    8. 'sel' → logprob: -17.875001907348633
    9. '```' → logprob: -18.500001907348633
    10. '(self' → logprob: -18.750001907348633

Token 1146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06691372394561768
    2. 'self' → logprob: -3.316913604736328
    3. '(self' → logprob: -3.816913604736328
    4. '):
' → logprob: -5.566913604736328
    5. '   ' → logprob: -6.316913604736328
    6. '):' → logprob: -8.191913604736328
    7. '       ' → logprob: -9.066913604736328
    8. ' self' → logprob: -9.191913604736328
    9. '__(' → logprob: -9.316913604736328
    10. ')' → logprob: -9.441913604736328

Token 1147: ' reader' (ID: 10958)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.02364664152264595
    2. 'input' → logprob: -4.148646831512451
    3. 'mapping' → logprob: -5.523646831512451
    4. 'character' → logprob: -6.273646831512451
    5. 'self' → logprob: -7.023646831512451
    6. '):
' → logprob: -8.398646354675293
    7. 'reader' → logprob: -8.398646354675293
    8. ')' → logprob: -8.773646354675293
    9. ' char' → logprob: -9.398646354675293
    10. 'stream' → logprob: -10.023646354675293

Token 1148: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8084909915924072
    2. ',' → logprob: -1.0584909915924072
    3. '):' → logprob: -1.6834909915924072
    4. ':' → logprob: -4.558490753173828
    5. '=sys' → logprob: -5.558490753173828
    6. '   ' → logprob: -6.183490753173828
    7. '=None' → logprob: -6.183490753173828
    8. '       ' → logprob: -6.433490753173828
    9. '):
' → logprob: -7.433490753173828
    10. '=' → logprob: -8.058490753173828

Token 1149: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0002217748697148636
    2. ' Input' → logprob: -8.500222206115723
    3. 'sys' → logprob: -11.000222206115723
    4. ' sys' → logprob: -14.250222206115723
    5. 'input' → logprob: -14.750222206115723
    6. '_input' → logprob: -15.625222206115723
    7. '	Input' → logprob: -16.125221252441406
    8. ' input' → logprob: -17.000221252441406
    9. '_Input' → logprob: -17.625221252441406
    10. 'System' → logprob: -17.750221252441406

Token 1150: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -2.816093228830141e-06
    2. 'Stream' → logprob: -12.87500286102295
    3. '_reader' → logprob: -16.750001907348633
    4. 'Writer' → logprob: -17.000001907348633
    5. ')' → logprob: -17.250001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'stream' → logprob: -18.500001907348633
    8. 'Handler' → logprob: -18.500001907348633
    9. 'reader' → logprob: -18.750001907348633
    10. ' Reader' → logprob: -18.750001907348633

Token 1151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01287841983139515
    2. '):
' → logprob: -4.51287841796875
    3. '):' → logprob: -6.63787841796875
    4. '       ' → logprob: -7.76287841796875
    5. '   ' → logprob: -10.01287841796875
    6. ' ,' → logprob: -10.26287841796875
    7. '):
' → logprob: -11.63787841796875
    8. ',
' → logprob: -13.51287841796875
    9. ',input' → logprob: -13.51287841796875
    10. ',self' → logprob: -14.76287841796875

Token 1152: ' interpreter' (ID: 87890)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.1916283667087555
    2. 'inter' → logprob: -2.4416284561157227
    3. 'mapping' → logprob: -2.5666284561157227
    4. ' char' → logprob: -5.816628456115723
    5. '   ' → logprob: -6.066628456115723
    6. 'writer' → logprob: -6.566628456115723
    7. 'character' → logprob: -7.066628456115723
    8. 'mapper' → logprob: -7.066628456115723
    9. 'model' → logprob: -7.441628456115723
    10. 'output' → logprob: -7.691628456115723

Token 1153: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32885870337486267
    2. '):
' → logprob: -1.703858733177185
    3. '):' → logprob: -2.9538586139678955
    4. ':' → logprob: -3.2038586139678955
    5. '   ' → logprob: -5.453858852386475
    6. '=None' → logprob: -8.328858375549316
    7. ',K' → logprob: -8.453858375549316
    8. '):
' → logprob: -8.453858375549316
    9. '       ' → logprob: -8.578858375549316
    10. ' ,' → logprob: -8.953858375549316

Token 1154: ' Interpretation' (ID: 163569)
  Prédit: 'Press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Press' → logprob: -8.2994620242971e-06
    2. ' Press' → logprob: -12.000008583068848
    3. 'Interpret' → logprob: -13.875008583068848
    4. '   ' → logprob: -14.375008583068848
    5. ')' → logprob: -16.00000762939453
    6. 'Push' → logprob: -16.25000762939453
    7. '```' → logprob: -16.37500762939453
    8. 'Pressed' → logprob: -16.75000762939453
    9. 'Print' → logprob: -16.87500762939453
    10. ' ' → logprob: -17.37500762939453

Token 1155: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.0004071971052326262
    2. '):
' → logprob: -8.750407218933105
    3. ',' → logprob: -9.250407218933105
    4. '):' → logprob: -9.500407218933105
    5. ')' → logprob: -10.625407218933105
    6. 'Interpreter' → logprob: -10.875407218933105
    7. '   ' → logprob: -11.500407218933105
    8. 'er' → logprob: -12.375407218933105
    9. '```' → logprob: -12.875407218933105
    10. ')
' → logprob: -13.000407218933105

Token 1156: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007271402515470982
    2. '):' → logprob: -5.5072712898254395
    3. '       ' → logprob: -6.0072712898254395
    4. '   ' → logprob: -7.8822712898254395
    5. ',' → logprob: -8.007271766662598
    6. '):
' → logprob: -11.507271766662598
    7. ' ):
' → logprob: -13.007271766662598
    8. ')' → logprob: -13.632271766662598
    9. ''):
' → logprob: -14.507271766662598
    10. ' ' → logprob: -14.507271766662598

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061243134550750256
    2. 'self' → logprob: -5.256124496459961
    3. 'def' → logprob: -7.381124496459961
    4. '   ' → logprob: -8.506124496459961
    5. ' self' → logprob: -9.881124496459961
    6. '	self' → logprob: -12.131124496459961
    7. '```' → logprob: -12.756124496459961
    8. '	' → logprob: -13.256124496459961
    9. ' def' → logprob: -14.131124496459961
    10. '(self' → logprob: -14.756124496459961

Token 1158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03807225078344345
    2. '       ' → logprob: -3.288072347640991
    3. ' self' → logprob: -10.41307258605957
    4. '   ' → logprob: -15.16307258605957
    5. '	self' → logprob: -15.41307258605957
    6. '```' → logprob: -15.66307258605957
    7. '(self' → logprob: -16.78807258605957
    8. 'def' → logprob: -17.28807258605957
    9. '	' → logprob: -18.16307258605957
    10. '﻿' → logprob: -18.53807258605957

Token 1159: '.reader' (ID: 75858)
  Prédit: '.reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reader' → logprob: -0.001063771080225706
    2. '.' → logprob: -7.001063823699951
    3. '.input' → logprob: -9.876063346862793
    4. 'reader' → logprob: -10.126063346862793
    5. '   ' → logprob: -10.626063346862793
    6. '       ' → logprob: -11.126063346862793
    7. ' .' → logprob: -11.876063346862793
    8. '.read' → logprob: -12.751063346862793
    9. '	reader' → logprob: -13.251063346862793
    10. '.user' → logprob: -13.376063346862793

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1274208426475525
    2. ' =' → logprob: -2.1274209022521973
    3. '   ' → logprob: -8.002420425415039
    4. '.read' → logprob: -9.502420425415039
    5. '       ' → logprob: -10.127420425415039
    6. '.readline' → logprob: -11.627420425415039
    7. '_reader' → logprob: -11.752420425415039
    8. '=self' → logprob: -12.127420425415039
    9. '.reader' → logprob: -12.502420425415039
    10. '.' → logprob: -12.877420425415039

Token 1161: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.029752686619758606
    2. ' reader' → logprob: -3.529752731323242
    3. '(reader' → logprob: -13.779752731323242
    4. '	reader' → logprob: -14.404752731323242
    5. '.reader' → logprob: -15.404752731323242
    6. '       ' → logprob: -15.529752731323242
    7. 'read' → logprob: -15.904752731323242
    8. 'Reader' → logprob: -16.529752731323242
    9. '_reader' → logprob: -16.654752731323242
    10. 'writer' → logprob: -17.279752731323242

Token 1162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011212840909138322
    2. '   ' → logprob: -7.001121520996094
    3. 'self' → logprob: -8.626121520996094
    4. 'def' → logprob: -10.501121520996094
    5. ' self' → logprob: -13.626121520996094
    6. '
' → logprob: -14.126121520996094
    7. ',' → logprob: -15.126121520996094
    8. '      ' → logprob: -15.626121520996094
    9. '```' → logprob: -15.626121520996094
    10. '           ' → logprob: -16.001121520996094

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000839046377222985
    2. 'self' → logprob: -7.3758392333984375
    3. '   ' → logprob: -8.500839233398438
    4. 'def' → logprob: -12.375839233398438
    5. ' self' → logprob: -12.750839233398438
    6. '```' → logprob: -13.875839233398438
    7. '	self' → logprob: -15.250839233398438
    8. '
' → logprob: -15.375839233398438
    9. '           ' → logprob: -15.500839233398438
    10. '      ' → logprob: -15.750839233398438

Token 1164: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005285576917231083
    2. '       ' → logprob: -5.255285739898682
    3. ' self' → logprob: -10.005285263061523
    4. '   ' → logprob: -12.005285263061523
    5. 'def' → logprob: -14.755285263061523
    6. '	self' → logprob: -17.380285263061523
    7. '
' → logprob: -17.880285263061523
    8. '     ' → logprob: -18.005285263061523
    9. '      ' → logprob: -18.380285263061523
    10. '           ' → logprob: -18.630285263061523

Token 1165: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0036491299979388714
    2. 'inter' → logprob: -5.6286492347717285
    3. '_inter' → logprob: -10.50364875793457
    4. '.' → logprob: -11.75364875793457
    5. '.input' → logprob: -12.62864875793457
    6. '.executor' → logprob: -12.87864875793457
    7. '   ' → logprob: -13.00364875793457
    8. ' .' → logprob: -13.37864875793457
    9. '._' → logprob: -14.37864875793457
    10. 'interpre' → logprob: -14.62864875793457

Token 1166: 'preter' (ID: 48963)
  Prédit: 'preter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.000926826149225235
    2. '```' → logprob: -7.625926971435547
    3. '   ' → logprob: -8.375926971435547
    4. 'pr' → logprob: -10.125926971435547
    5. 'pret' → logprob: -10.250926971435547
    6. 'p' → logprob: -10.750926971435547
    7. '       ' → logprob: -10.875926971435547
    8. '	' → logprob: -11.000926971435547
    9. '  ' → logprob: -11.250926971435547
    10. '``' → logprob: -11.500926971435547

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3782753050327301
    2. ' =' → logprob: -1.2532752752304077
    3. '.parse' → logprob: -4.253275394439697
    4. '.' → logprob: -5.753275394439697
    5. '.read' → logprob: -5.753275394439697
    6. 'def' → logprob: -6.003275394439697
    7. '   ' → logprob: -6.128275394439697
    8. ',' → logprob: -6.753275394439697
    9. 'import' → logprob: -7.128275394439697
    10. '=parse' → logprob: -7.503275394439697

Token 1168: ' interpreter' (ID: 87890)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.011059491895139217
    2. ' interpreter' → logprob: -4.511059284210205
    3. '(inter' → logprob: -12.636059761047363
    4. 'interpret' → logprob: -12.636059761047363
    5. 'interpre' → logprob: -12.886059761047363
    6. '_inter' → logprob: -14.761059761047363
    7. 'interp' → logprob: -15.011059761047363
    8. ' interviewer' → logprob: -15.136059761047363
    9. 'reader' → logprob: -15.261059761047363
    10. '   ' → logprob: -15.386059761047363

Token 1169: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023226479243021458
    2. '
' → logprob: -8.750232696533203
    3. 'def' → logprob: -9.875232696533203
    4. '    
' → logprob: -10.875232696533203
    5. '<|end|>' → logprob: -13.750232696533203
    6. '```' → logprob: -14.000232696533203
    7. ' def' → logprob: -14.375232696533203
    8. '        
' → logprob: -15.000232696533203
    9. '	def' → logprob: -15.125232696533203
    10. ' ' → logprob: -16.250232696533203

Token 1170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10025767236948013
    2. 'def' → logprob: -2.350257635116577
    3. ' def' → logprob: -10.225257873535156
    4. '
' → logprob: -11.225257873535156
    5. '	def' → logprob: -13.975257873535156
    6. '```' → logprob: -15.100257873535156
    7. '    
' → logprob: -15.225257873535156
    8. '<|end|>' → logprob: -17.350257873535156
    9. ' ' → logprob: -17.975257873535156
    10. '  ' → logprob: -18.225257873535156

Token 1171: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '	def' → logprob: -21.750001907348633
    5. '
' → logprob: -22.375001907348633
    6. ' ' → logprob: -24.500001907348633
    7. 'async' → logprob: -25.500001907348633
    8. '    
' → logprob: -25.875001907348633
    9. 'de' → logprob: -26.125001907348633
    10. '```' → logprob: -26.250001907348633

Token 1172: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.001978118671104312
    2. ' run' → logprob: -6.251977920532227
    3. '_run' → logprob: -10.001977920532227
    4. 'start' → logprob: -13.876977920532227
    5. 'process' → logprob: -14.001977920532227
    6. 'def' → logprob: -14.626977920532227
    7. '   ' → logprob: -14.751977920532227
    8. '	run' → logprob: -14.876977920532227
    9. 'main' → logprob: -15.001977920532227
    10. '.run' → logprob: -15.001977920532227

Token 1173: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002682496269699186
    2. '(' → logprob: -8.25026798248291
    3. 'self' → logprob: -12.37526798248291
    4. '(
' → logprob: -13.25026798248291
    5. ' (' → logprob: -14.87526798248291
    6. '   ' → logprob: -15.25026798248291
    7. '       ' → logprob: -15.75026798248291
    8. '(sel' → logprob: -15.87526798248291
    9. '()' → logprob: -16.500268936157227
    10. '(s' → logprob: -17.000268936157227

Token 1174: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03100419230759144
    2. '):
' → logprob: -3.7810041904449463
    3. 'self' → logprob: -5.531004428863525
    4. '   ' → logprob: -6.531004428863525
    5. '       ' → logprob: -7.031004428863525
    6. '):' → logprob: -7.656004428863525
    7. ')(' → logprob: -8.281003952026367
    8. ')' → logprob: -8.531003952026367
    9. '():
' → logprob: -8.906003952026367
    10. 'def' → logprob: -9.031003952026367

Token 1175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.77022064034827e-05
    2. 'for' → logprob: -10.250097274780273
    3. '   ' → logprob: -10.750097274780273
    4. ' for' → logprob: -10.750097274780273
    5. '```' → logprob: -11.125097274780273
    6. '
' → logprob: -13.250097274780273
    7. 'import' → logprob: -13.625097274780273
    8. '           ' → logprob: -14.375097274780273
    9. '	   ' → logprob: -15.375097274780273
    10. '        
' → logprob: -15.750097274780273

Token 1176: ' outputs' (ID: 32725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009336566552519798
    2. '       ' → logprob: -5.009336471557617
    3. ' for' → logprob: -6.009336471557617
    4. 'while' → logprob: -8.759336471557617
    5. 'import' → logprob: -13.384336471557617
    6. 'lines' → logprob: -13.634336471557617
    7. '   ' → logprob: -13.759336471557617
    8. '```' → logprob: -14.259336471557617
    9. ' while' → logprob: -14.884336471557617
    10. ' lines' → logprob: -15.259336471557617

Token 1177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014688615687191486
    2. '=' → logprob: -4.264688491821289
    3. '=[]
' → logprob: -8.389688491821289
    4. '   ' → logprob: -8.764688491821289
    5. '=[]' → logprob: -9.139688491821289
    6. ' ' → logprob: -11.764688491821289
    7. ':' → logprob: -11.889688491821289
    8. '[]' → logprob: -11.889688491821289
    9. '()' → logprob: -12.389688491821289
    10. '_' → logprob: -13.889688491821289

Token 1178: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4740802049636841
    2. '[]
' → logprob: -0.9740802049636841
    3. '[]

' → logprob: -12.974080085754395
    4. ' []
' → logprob: -14.474080085754395
    5. ' []' → logprob: -14.974080085754395
    6. '[' → logprob: -17.84908103942871
    7. '[]"' → logprob: -18.84908103942871
    8. '[])
' → logprob: -19.84908103942871
    9. '[])' → logprob: -19.84908103942871
    10. '[
' → logprob: -20.09908103942871

Token 1179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028410006780177355
    2. 'for' → logprob: -8.875284194946289
    3. ' for' → logprob: -9.500284194946289
    4. '```' → logprob: -10.375284194946289
    5. '	' → logprob: -11.000284194946289
    6. '
' → logprob: -11.375284194946289
    7. '        
' → logprob: -12.750284194946289
    8. '`' → logprob: -13.500284194946289
    9. '   ' → logprob: -13.750284194946289
    10. '           ' → logprob: -13.750284194946289

Token 1180: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006782424170523882
    2. '       ' → logprob: -7.500678062438965
    3. ' for' → logprob: -9.000678062438965
    4. 'while' → logprob: -13.250678062438965
    5. '```' → logprob: -16.12567901611328
    6. '   ' → logprob: -17.12567901611328
    7. 'lines' → logprob: -17.25067901611328
    8. '
' → logprob: -18.62567901611328
    9. '	for' → logprob: -19.12567901611328
    10. 'line' → logprob: -19.62567901611328

Token 1181: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002634395845234394
    2. ' line' → logprob: -6.002634525299072
    3. 'input' → logprob: -8.752634048461914
    4. ' input' → logprob: -15.002634048461914
    5. '       ' → logprob: -16.002634048461914
    6. '(line' → logprob: -16.502634048461914
    7. '```' → logprob: -16.877634048461914
    8. '_line' → logprob: -17.002634048461914
    9. '           ' → logprob: -17.002634048461914
    10. '	line' → logprob: -17.502634048461914

Token 1182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00038074489566497505
    2. 'in' → logprob: -7.875380516052246
    3. '        ' → logprob: -15.625380516052246
    4. 'import' → logprob: -16.250381469726562
    5. '	in' → logprob: -16.750381469726562
    6. ' =' → logprob: -17.250381469726562
    7. ' ' → logprob: -17.250381469726562
    8. '       ' → logprob: -17.500381469726562
    9. '    ' → logprob: -17.625381469726562
    10. 'line' → logprob: -18.000381469726562

Token 1183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015062900492921472
    2. ' self' → logprob: -6.501506328582764
    3. 'sys' → logprob: -12.501505851745605
    4. '(self' → logprob: -16.001506805419922
    5. ' sys' → logprob: -17.001506805419922
    6. '   ' → logprob: -18.251506805419922
    7. '	self' → logprob: -18.626506805419922
    8. '`' → logprob: -19.751506805419922
    9. '```' → logprob: -20.001506805419922
    10. '=self' → logprob: -20.126506805419922

Token 1184: '.reader' (ID: 75858)
  Prédit: '.reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reader' → logprob: -0.0004927450208924711
    2. 'reader' → logprob: -7.625492572784424
    3. '	reader' → logprob: -12.750493049621582
    4. '.readline' → logprob: -14.875493049621582
    5. 's' → logprob: -15.625493049621582
    6. 'in' → logprob: -15.750493049621582
    7. '(reader' → logprob: -15.875493049621582
    8. '.' → logprob: -15.875493049621582
    9. 'n' → logprob: -16.375492095947266
    10. '_reader' → logprob: -16.375492095947266

Token 1185: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6795715689659119
    2. '.readlines' → logprob: -0.9295715689659119
    3. ':' → logprob: -2.6795716285705566
    4. '.read' → logprob: -4.304571628570557
    5. ':
' → logprob: -4.429571628570557
    6. '_lines' → logprob: -6.804571628570557
    7. 'read' → logprob: -6.929571628570557
    8. ' in' → logprob: -7.429571628570557
    9. '.' → logprob: -7.554571628570557
    10. '   ' → logprob: -7.804571628570557

Token 1186: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.030074194073677063
    2. '_line' → logprob: -3.530074119567871
    3. '():
' → logprob: -9.155074119567871
    4. 'lines' → logprob: -9.655074119567871
    5. '_' → logprob: -9.780074119567871
    6. '()' → logprob: -9.905074119567871
    7. 'line' → logprob: -10.655074119567871
    8. '()
' → logprob: -11.905074119567871
    9. '():' → logprob: -12.030074119567871
    10. '```' → logprob: -12.780074119567871

Token 1187: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5437031984329224
    2. ':' → logprob: -1.0437031984329224
    3. '():
' → logprob: -2.793703079223633
    4. '           ' → logprob: -5.793703079223633
    5. ':
' → logprob: -5.918703079223633
    6. '()' → logprob: -9.418703079223633
    7. '       ' → logprob: -9.543703079223633
    8. '):' → logprob: -10.293703079223633
    9. '():
' → logprob: -10.668703079223633
    10. '=' → logprob: -11.043703079223633

Token 1188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. '       ' → logprob: -11.000033378601074
    3. '```' → logprob: -12.250033378601074
    4. ',' → logprob: -13.000033378601074
    5. '<|end|>' → logprob: -13.125033378601074
    6. '	       ' → logprob: -13.625033378601074
    7. '            
' → logprob: -13.750033378601074
    8. '          ' → logprob: -14.000033378601074
    9. '<|end|>' → logprob: -14.250033378601074
    10. '               ' → logprob: -14.500033378601074

Token 1189: ' groups' (ID: 8896)
  Prédit: 'press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.03814350441098213
    2. '           ' → logprob: -3.2881433963775635
    3. 'pressed' → logprob: -9.788143157958984
    4. ' press' → logprob: -10.788143157958984
    5. '               ' → logprob: -11.038143157958984
    6. '       ' → logprob: -13.163143157958984
    7. 'groups' (adapté à ' groups') → logprob: -13.288143157958984
    8. '   ' → logprob: -13.538143157958984
    9. 'pressure' → logprob: -13.788143157958984
    10. '```' → logprob: -13.913143157958984

Token 1190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163863845169544
    2. '=' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.639163970947266
    4. '       ' → logprob: -17.014163970947266
    5. '＝' → logprob: -17.264163970947266
    6. '	' → logprob: -17.514163970947266
    7. '           ' → logprob: -17.764163970947266
    8. ':' → logprob: -17.764163970947266
    9. '        ' → logprob: -17.889163970947266
    10. '    ' → logprob: -17.889163970947266

Token 1191: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.500553131103516
    4. '(self' → logprob: -18.375553131103516
    5. '[self' → logprob: -19.375553131103516
    6. '	self' → logprob: -20.000553131103516
    7. '=self' → logprob: -20.625553131103516
    8. 'Self' → logprob: -21.125553131103516
    9. '               ' → logprob: -21.500553131103516
    10. '$self' → logprob: -22.000553131103516

Token 1192: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0004315036640036851
    2. 'inter' → logprob: -7.750431537628174
    3. ' .' → logprob: -15.500431060791016
    4. 'interpre' → logprob: -15.500431060791016
    5. '.' → logprob: -15.750431060791016
    6. 'interpret' → logprob: -15.875431060791016
    7. '_inter' → logprob: -17.375431060791016
    8. '(inter' → logprob: -17.500431060791016
    9. '
' → logprob: -18.000431060791016
    10. '   ' → logprob: -18.000431060791016

Token 1193: 'preter' (ID: 48963)
  Prédit: 'preter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.10852015018463135
    2. 'reter' → logprob: -2.483520030975342
    3. 'pret' → logprob: -4.233520030975342
    4. 'ter' → logprob: -6.233520030975342
    5. 'ret' → logprob: -6.233520030975342
    6. 'r' → logprob: -8.1085205078125
    7. 'prete' → logprob: -8.2335205078125
    8. 'p' → logprob: -8.6085205078125
    9. 'pre' → logprob: -9.6085205078125
    10. 'pr' → logprob: -10.3585205078125

Token 1194: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.0921942703134846e-05
    2. 'parse' → logprob: -12.00001049041748
    3. '.' → logprob: -12.37501049041748
    4. '=parse' → logprob: -15.50001049041748
    5. ' .' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.875011444091797
    7. '_parse' → logprob: -17.000011444091797
    8. '.Parse' → logprob: -18.125011444091797
    9. '	parse' → logprob: -18.125011444091797
    10. '.process' → logprob: -18.250011444091797

Token 1195: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.3458322731312364e-06
    2. 'input' → logprob: -12.250007629394531
    3. 'groups' → logprob: -14.250007629394531
    4. '_groups' → logprob: -14.375007629394531
    5. 'Input' → logprob: -15.000007629394531
    6. '_output' → logprob: -15.625007629394531
    7. '(input' → logprob: -15.625007629394531
    8. '
' → logprob: -16.00000762939453
    9. '```' → logprob: -16.00000762939453
    10. '_inputs' → logprob: -16.87500762939453

Token 1196: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. '(lines' → logprob: -16.750001907348633
    4. '[line' → logprob: -16.875001907348633
    5. '(
' → logprob: -17.250001907348633
    6. '=line' → logprob: -18.000001907348633
    7. '(Line' → logprob: -18.000001907348633
    8. ' (' → logprob: -19.125001907348633
    9. ',line' → logprob: -19.875001907348633
    10. '(input' → logprob: -20.000001907348633

Token 1197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1279023438692093
    2. '           ' → logprob: -2.1279022693634033
    3. ')
' → logprob: -7.752902507781982
    4. '<|end|>' → logprob: -7.877902507781982
    5. '<|end|>' → logprob: -9.752902030944824
    6. ',' → logprob: -10.002902030944824
    7. '),' → logprob: -12.002902030944824
    8. '       ' → logprob: -12.127902030944824
    9. ');' → logprob: -12.127902030944824
    10. ').' → logprob: -12.127902030944824

Token 1198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006551315891556442
    2. 'result' → logprob: -7.375655174255371
    3. 'output' → logprob: -11.250655174255371
    4. ' result' → logprob: -11.750655174255371
    5. '       ' → logprob: -12.875655174255371
    6. 'count' → logprob: -13.625655174255371
    7. 'answer' → logprob: -13.625655174255371
    8. 'outputs' → logprob: -13.875655174255371
    9. 'results' → logprob: -14.125655174255371
    10. '```' → logprob: -15.500655174255371

Token 1199: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.011494329199194908
    2. 'result' → logprob: -4.511494159698486
    3. '           ' → logprob: -8.636494636535645
    4. 'answer' → logprob: -9.636494636535645
    5. 'counts' → logprob: -9.761494636535645
    6. 'cnt' → logprob: -9.886494636535645
    7. 'outputs' → logprob: -10.636494636535645
    8. 'res' → logprob: -10.636494636535645
    9. 'total' → logprob: -11.261494636535645
    10. ' count' → logprob: -11.636494636535645

Token 1200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018241722136735916
    2. '=' → logprob: -4.018241882324219
    3. '_' → logprob: -10.018241882324219
    4. '   ' → logprob: -10.268241882324219
    5. 's' → logprob: -12.643241882324219
    6. '           ' → logprob: -12.893241882324219
    7. '       ' → logprob: -13.268241882324219
    8. 'ed' → logprob: -13.643241882324219
    9. '_inter' → logprob: -13.893241882324219
    10. ' ' → logprob: -14.143241882324219

Token 1201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245712742209435
    2. ' self' → logprob: -3.7732458114624023
    3. '           ' → logprob: -15.648245811462402
    4. '(self' → logprob: -16.023244857788086
    5. '	self' → logprob: -18.148244857788086
    6. '=self' → logprob: -21.648244857788086
    7. '[self' → logprob: -21.773244857788086
    8. '```' → logprob: -21.773244857788086
    9. '               ' → logprob: -22.398244857788086
    10. '_self' → logprob: -22.523244857788086

Token 1202: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -1.0206720617134124e-05
    2. 'inter' → logprob: -11.75001049041748
    3. '_inter' → logprob: -13.50001049041748
    4. '.count' → logprob: -14.50001049041748
    5. '.' → logprob: -16.625009536743164
    6. 'interpret' → logprob: -16.750009536743164
    7. ' .' → logprob: -17.375009536743164
    8. '(inter' → logprob: -17.500009536743164
    9. '_.' → logprob: -17.625009536743164
    10. '   ' → logprob: -17.875009536743164

Token 1203: 'preter' (ID: 48963)
  Prédit: 'pret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -0.0017821642104536295
    2. 'ret' → logprob: -6.501781940460205
    3. 't' → logprob: -10.001782417297363
    4. 'preter' → logprob: -10.001782417297363
    5. 'er' → logprob: -10.376782417297363
    6. 'pre' → logprob: -10.501782417297363
    7. 'et' → logprob: -10.626782417297363
    8. 'pr' → logprob: -10.751782417297363
    9. 'ations' → logprob: -11.251782417297363
    10. 'interpret' → logprob: -11.751782417297363

Token 1204: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.07998842746019363
    2. 'count' → logprob: -2.579988479614258
    3. '_count' → logprob: -6.954988479614258
    4. ' count' → logprob: -10.079988479614258
    5. '.' → logprob: -10.204988479614258
    6. '   ' → logprob: -10.329988479614258
    7. '._' → logprob: -11.204988479614258
    8. '       ' → logprob: -12.204988479614258
    9. '	count' → logprob: -12.329988479614258
    10. ' .' → logprob: -12.704988479614258

Token 1205: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.375000953674316
    3. 'interpret' → logprob: -16.0
    4. '\' → logprob: -16.125
    5. '
' → logprob: -16.75
    6. '_in' → logprob: -16.875
    7. '   ' → logprob: -17.25
    8. '_
' → logprob: -17.25
    9. ' _' → logprob: -17.5
    10. '```' → logprob: -17.5

Token 1206: 'pret' (ID: 12540)
  Prédit: 'pret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pret' → logprob: -0.001322146039456129
    2. 'er' → logprob: -7.376322269439697
    3. 'ter' → logprob: -7.501322269439697
    4. 'ret' → logprob: -9.751321792602539
    5. 'interpret' → logprob: -10.376321792602539
    6. ' interpretations' → logprob: -11.001321792602539
    7. '```' → logprob: -11.126321792602539
    8. 'pre' → logprob: -11.751321792602539
    9. '   ' → logprob: -12.751321792602539
    10. 'per' → logprob: -13.626321792602539

Token 1207: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -5.836499985889532e-05
    2. 't' → logprob: -10.3750581741333
    3. '       ' → logprob: -11.7500581741333
    4. 'et' → logprob: -12.5000581741333
    5. '   ' → logprob: -12.8750581741333
    6. 'er' → logprob: -12.8750581741333
    7. '_' → logprob: -13.0000581741333
    8. 'lations' → logprob: -13.6250581741333
    9. 'itations' → logprob: -13.7500581741333
    10. '```' → logprob: -13.8750581741333

Token 1208: '(groups' (ID: 137765)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09547411650419235
    2. '(outputs' → logprob: -3.2204740047454834
    3. '(line' → logprob: -3.4704740047454834
    4. '(count' → logprob: -5.0954742431640625
    5. '(' → logprob: -5.3454742431640625
    6. '(lines' → logprob: -5.7204742431640625
    7. '(output' → logprob: -6.4704742431640625
    8. '<|end|>' → logprob: -6.9704742431640625
    9. ' (' → logprob: -7.4704742431640625
    10. '<|end|>' → logprob: -8.220474243164062

Token 1209: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021048028022050858
    2. ')' → logprob: -3.896048069000244
    3. ')
' → logprob: -7.646048069000244
    4. '
' → logprob: -11.271047592163086
    5. '<|end|>' → logprob: -13.021047592163086
    6. '```' → logprob: -13.271047592163086
    7. '<|end|>' → logprob: -13.646047592163086
    8. '          ' → logprob: -13.646047592163086
    9. ',' → logprob: -13.771047592163086
    10. '               ' → logprob: -14.021047592163086

Token 1210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.080963092041202e-06
    2. '
' → logprob: -13.000004768371582
    3. '```' → logprob: -13.750004768371582
    4. 'output' → logprob: -14.000004768371582
    5. 'outputs' → logprob: -14.625004768371582
    6. '       ' → logprob: -15.875004768371582
    7. '<|end|>' → logprob: -16.8750057220459
    8. '            
' → logprob: -17.2500057220459
    9. '		' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.5000057220459

Token 1211: ' outputs' (ID: 32725)
  Prédit: 'outputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outputs' (adapté à ' outputs') → logprob: -0.0015386694576591253
    2. '           ' → logprob: -6.5015387535095215
    3. ' outputs' → logprob: -10.626538276672363
    4. 'print' → logprob: -12.251538276672363
    5. 'output' → logprob: -12.876538276672363
    6. '.outputs' → logprob: -13.001538276672363
    7. '(outputs' → logprob: -13.501538276672363
    8. '```' → logprob: -14.501538276672363
    9. '
' → logprob: -15.001538276672363
    10. '       ' → logprob: -15.251538276672363

Token 1212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008157044649124146
    2. '.' → logprob: -7.1258158683776855
    3. '.app' → logprob: -12.375815391540527
    4. 'append' → logprob: -12.375815391540527
    5. '.extend' → logprob: -13.750815391540527
    6. '_append' → logprob: -14.500815391540527
    7. ' .' → logprob: -15.000815391540527
    8. '.Append' → logprob: -15.250815391540527
    9. '.ap' → logprob: -15.375815391540527
    10. '.setdefault' → logprob: -15.875815391540527

Token 1213: '(count' (ID: 25892)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01422955933958292
    2. '(count' → logprob: -4.264229774475098
    3. '(f' → logprob: -10.139229774475098
    4. 'str' → logprob: -11.264229774475098
    5. '(' → logprob: -11.389229774475098
    6. 'count' → logprob: -13.264229774475098
    7. '((' → logprob: -14.389229774475098
    8. '(c' → logprob: -17.63922882080078
    9. '(self' → logprob: -17.88922882080078
    10. ' str' → logprob: -18.01422882080078

Token 1214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048063285648822784
    2. ')
' → logprob: -3.173063278198242
    3. '       ' → logprob: -5.923063278198242
    4. '           ' → logprob: -6.298063278198242
    5. '
' → logprob: -7.673063278198242
    6. '<|end|>' → logprob: -11.173063278198242
    7. ')
' → logprob: -11.923063278198242
    8. '   ' → logprob: -12.048063278198242
    9. '),' → logprob: -12.173063278198242
    10. '```' → logprob: -12.298063278198242

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0802980586886406
    2. '
' → logprob: -2.5802979469299316
    3. '        
' → logprob: -7.580297946929932
    4. '```' → logprob: -8.08029842376709
    5. 'return' → logprob: -8.70529842376709
    6. '   ' → logprob: -9.33029842376709
    7. '
' → logprob: -9.45529842376709
    8. '	' → logprob: -9.95529842376709
    9. '`
' → logprob: -9.95529842376709
    10. '    
' → logprob: -10.08029842376709

Token 1216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13742642104625702
    2. '       ' → logprob: -2.1374263763427734
    3. 'for' → logprob: -4.637426376342773
    4. '
' → logprob: -7.762426376342773
    5. ' return' → logprob: -8.512426376342773
    6. '   ' → logprob: -9.512426376342773
    7. 'print' → logprob: -10.262426376342773
    8. ' for' → logprob: -11.137426376342773
    9. '	return' → logprob: -12.262426376342773
    10. '	' → logprob: -12.762426376342773

Token 1217: ' outputs' (ID: 32725)
  Prédit: 'outputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outputs' → logprob: -0.018150413408875465
    2. ' outputs' → logprob: -4.018150329589844
    3. 'output' → logprob: -15.143150329589844
    4. '(outputs' → logprob: -15.768150329589844
    5. '.outputs' → logprob: -16.768150329589844
    6. '   ' → logprob: -18.393150329589844
    7. '
' → logprob: -18.643150329589844
    8. 'Outputs' → logprob: -19.143150329589844
    9. '_outputs' → logprob: -19.768150329589844
    10. ' output' → logprob: -20.018150329589844

Token 1218: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3844670355319977
    2. '<|end|>' → logprob: -1.3844670057296753
    3. 'def' → logprob: -3.134467124938965
    4. '
' → logprob: -4.259467124938965
    5. '```' → logprob: -5.259467124938965
    6. '#' → logprob: -6.259467124938965
    7. 'import' → logprob: -6.384467124938965
    8. '   ' → logprob: -7.259467124938965
    9. ' if' → logprob: -7.884467124938965
    10. '<|end|>' → logprob: -8.259467124938965

Token 1219: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08686678856611252
    2. 'def' → logprob: -2.711866855621338
    3. '```' → logprob: -4.211866855621338
    4. 'import' → logprob: -7.211866855621338
    5. '<|end|>' → logprob: -7.211866855621338
    6. ' if' → logprob: -7.961866855621338
    7. '#' → logprob: -9.46186637878418
    8. '
' → logprob: -10.71186637878418
    9. 'for' → logprob: -10.96186637878418
    10. '   ' → logprob: -12.33686637878418

Token 1220: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00019889144459739327
    2. 'main' → logprob: -9.125199317932129
    3. '_main' → logprob: -9.875199317932129
    4. ' run' → logprob: -11.000199317932129
    5. ' def' → logprob: -11.375199317932129
    6. ' _' → logprob: -13.125199317932129
    7. ' __' → logprob: -13.375199317932129
    8. ' solve' → logprob: -13.500199317932129
    9. '```' → logprob: -13.500199317932129
    10. '_' → logprob: -13.750199317932129

Token 1221: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001946725882589817
    2. '():
' → logprob: -6.251946926116943
    3. '()' → logprob: -11.126946449279785
    4. ' ():' → logprob: -13.251946449279785
    5. '():
' → logprob: -13.626946449279785
    6. '(' → logprob: -15.626946449279785
    7. ':' → logprob: -15.751946449279785
    8. '():

' → logprob: -16.3769474029541
    9. '_' → logprob: -16.5019474029541
    10. '()>' → logprob: -17.0019474029541

Token 1222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08553879708051682
    2. 'import' → logprob: -2.585538864135742
    3. 'reader' → logprob: -5.835538864135742
    4. ' reader' → logprob: -6.460538864135742
    5. ' import' → logprob: -6.835538864135742
    6. '	import' → logprob: -7.960538864135742
    7. '```' → logprob: -8.335538864135742
    8. '	reader' → logprob: -8.585538864135742
    9. '_reader' → logprob: -9.460538864135742
    10. 'stream' → logprob: -9.710538864135742

Token 1223: ' sys' (ID: 12228)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.1311802715063095
    2. 'import' → logprob: -2.3811802864074707
    3. '   ' → logprob: -3.5061802864074707
    4. 'input' → logprob: -9.006179809570312
    5. ' reader' → logprob: -9.131179809570312
    6. 'stream' → logprob: -9.131179809570312
    7. 'def' → logprob: -9.881179809570312
    8. 'thread' → logprob: -11.006179809570312
    9. '```' → logprob: -11.131179809570312
    10. 'sys' (adapté à ' sys') → logprob: -11.381179809570312

Token 1224: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005045656580477953
    2. '.stdout' → logprob: -5.5050458908081055
    3. '.argv' → logprob: -7.2550458908081055
    4. '.' → logprob: -8.505045890808105
    5. '.exit' → logprob: -9.880045890808105
    6. '.stderr' → logprob: -13.005045890808105
    7. '.std' → logprob: -13.505045890808105
    8. ' .' → logprob: -13.880045890808105
    9. 'stdin' → logprob: -14.505045890808105
    10. '.setdefault' → logprob: -15.005045890808105

Token 1225: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -6.2729995988775045e-06
    2. '_rec' → logprob: -12.625006675720215
    3. 'limit' → logprob: -13.750006675720215
    4. 'trace' → logprob: -14.250006675720215
    5. 'thread' → logprob: -14.750006675720215
    6. '```' → logprob: -15.500006675720215
    7. ' recursion' → logprob: -16.0000057220459
    8. 'Rec' → logprob: -16.5000057220459
    9. 'size' → logprob: -16.7500057220459
    10. 'stack' → logprob: -17.0000057220459

Token 1226: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005944972508586943
    2. 'urs' → logprob: -8.500594139099121
    3. 'ur' → logprob: -8.625594139099121
    4. 'limit' → logprob: -8.875594139099121
    5. '_limit' → logprob: -9.875594139099121
    6. 'ursive' → logprob: -11.250594139099121
    7. 'urf' → logprob: -13.000594139099121
    8. 'urse' → logprob: -13.750594139099121
    9. 't' → logprob: -13.875594139099121
    10. 'ursor' → logprob: -14.125594139099121

Token 1227: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.320199877838604e-07
    2. '_limit' → logprob: -15.75
    3. ' limit' → logprob: -16.0
    4. 'depth' → logprob: -16.0
    5. 'lim' → logprob: -18.5
    6. '(limit' → logprob: -18.625
    7. 'limits' → logprob: -20.375
    8. '.limit' → logprob: -20.875
    9. '-limit' → logprob: -20.875
    10. 'threshold' → logprob: -20.875

Token 1228: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '(
' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.0
    4. '100' → logprob: -16.75
    5. '((' → logprob: -16.875
    6. '=' → logprob: -18.125
    7. '(int' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. '10' → logprob: -20.0
    10. '  ' → logprob: -20.0

Token 1229: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0055695404298603535
    2. '100' → logprob: -5.2555694580078125
    3. '1' → logprob: -8.005569458007812
    4. '200' → logprob: -13.630569458007812
    5. 'int' → logprob: -14.755569458007812
    6. '500' → logprob: -15.880569458007812
    7. 'pow' → logprob: -15.880569458007812
    8. '300' → logprob: -16.255569458007812
    9. '１０' → logprob: -16.505569458007812
    10. '150' → logprob: -16.755569458007812

Token 1230: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0069971545599401
    2. '**' → logprob: -5.006997108459473
    3. '6' → logprob: -8.256997108459473
    4. '8' → logprob: -11.006997108459473
    5. '07' → logprob: -12.131997108459473
    6. '000' → logprob: -16.00699806213379
    7. '```' → logprob: -16.63199806213379
    8. '9' → logprob: -17.13199806213379
    9. ' **' → logprob: -18.75699806213379
    10. '007' → logprob: -19.25699806213379

Token 1231: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0026848025154322386
    2. '9' → logprob: -6.002684593200684
    3. '8' → logprob: -8.502684593200684
    4. '6' → logprob: -12.002684593200684
    5. '```' → logprob: -19.377685546875
    6. '``' → logprob: -20.627685546875
    7. '
' → logprob: -20.877685546875
    8. '10' → logprob: -21.127685546875
    9. '(' → logprob: -21.877685546875
    10. '   ' → logprob: -22.127685546875

Token 1232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033415714278817177
    2. ')
' → logprob: -5.7533416748046875
    3. '   ' → logprob: -8.753341674804688
    4. ' )' → logprob: -13.128341674804688
    5. ')
' → logprob: -13.253341674804688
    6. '
' → logprob: -13.378341674804688
    7. ' ' → logprob: -15.878341674804688
    8. '),' → logprob: -16.628341674804688
    9. '))' → logprob: -16.878341674804688
    10. '```' → logprob: -16.878341674804688

Token 1233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002385045401751995
    2. '```' → logprob: -6.377385139465332
    3. 'input' → logprob: -8.377385139465332
    4. 'thread' → logprob: -8.627385139465332
    5. 'reader' → logprob: -9.127385139465332
    6. ' threading' → logprob: -9.752385139465332
    7. 'import' → logprob: -10.127385139465332
    8. '    
' → logprob: -11.002385139465332
    9. 'def' → logprob: -11.127385139465332
    10. '
' → logprob: -11.377385139465332

Token 1234: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.4255468547344208
    2. 'reader' → logprob: -1.4255468845367432
    3. 'thread' → logprob: -2.300546884536743
    4. 'import' → logprob: -5.675546646118164
    5. 'mapping' → logprob: -6.800546646118164
    6. 'char' → logprob: -7.425546646118164
    7. 'stream' → logprob: -7.925546646118164
    8. 'def' → logprob: -8.550546646118164
    9. 'for' → logprob: -9.550546646118164
    10. 'stdin' → logprob: -9.550546646118164

Token 1235: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.5156031250953674
    2. '_stream' → logprob: -1.0156030654907227
    3. '_data' → logprob: -4.015603065490723
    4. '_str' → logprob: -4.640603065490723
    5. '_lines' → logprob: -4.890603065490723
    6. '_' → logprob: -5.890603065490723
    7. '_line' → logprob: -6.390603065490723
    8. ' =' → logprob: -7.390603065490723
    9. '=' → logprob: -9.015603065490723
    10. '_string' → logprob: -9.640603065490723

Token 1236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10196679830551147
    2. '=' → logprob: -2.3519668579101562
    3. '=sys' → logprob: -6.351966857910156
    4. '(sys' → logprob: -11.601966857910156
    5. '   ' → logprob: -12.351966857910156
    6. 'sys' → logprob: -14.226966857910156
    7. '(' → logprob: -15.101966857910156
    8. ' ' → logprob: -15.351966857910156
    9. ' sys' → logprob: -15.851966857910156
    10. '  ' → logprob: -15.976966857910156

Token 1237: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.8624639324116288e-06
    2. ' Input' → logprob: -13.250001907348633
    3. 'sys' → logprob: -19.000001907348633
    4. 'input' → logprob: -19.000001907348633
    5. '	Input' → logprob: -20.750001907348633
    6. '_input' → logprob: -21.375001907348633
    7. '_Input' → logprob: -22.250001907348633
    8. '<Input' → logprob: -22.625001907348633
    9. 'In' → logprob: -23.000001907348633
    10. '   ' → logprob: -23.500001907348633

Token 1238: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'Stream' → logprob: -17.75
    3. '(sys' → logprob: -19.25
    4. 'Readers' → logprob: -19.625
    5. 'reader' → logprob: -20.75
    6. 'Writer' → logprob: -21.375
    7. '_reader' → logprob: -21.75
    8. '(' → logprob: -21.875
    9. 'sys' → logprob: -22.125
    10. '=sys' → logprob: -22.375

Token 1239: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20141500234603882
    2. 'sys' → logprob: -1.7014150619506836
    3. ' sys' → logprob: -13.576415061950684
    4. '	sys' → logprob: -15.826415061950684
    5. '   ' → logprob: -16.201414108276367
    6. '```' → logprob: -16.326414108276367
    7. '=sys' → logprob: -16.576414108276367
    8. '(' → logprob: -18.451414108276367
    9. '((' → logprob: -18.701414108276367
    10. 'import' → logprob: -19.076414108276367

Token 1240: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.7835754988482222e-05
    2. '.' → logprob: -11.250018119812012
    3. 'stdin' → logprob: -12.875018119812012
    4. '.stdout' → logprob: -13.375018119812012
    5. '.std' → logprob: -15.375018119812012
    6. '.__' → logprob: -15.625018119812012
    7. '.argv' → logprob: -16.500017166137695
    8. '.stderr' → logprob: -17.250017166137695
    9. '(stdin' → logprob: -17.875017166137695
    10. ' .' → logprob: -18.000017166137695

Token 1241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002072357019642368
    2. ')
' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.00020694732666
    4. ' )' → logprob: -13.62520694732666
    5. ')
' → logprob: -16.625207901000977
    6. '),' → logprob: -17.000207901000977
    7. '))' → logprob: -17.250207901000977
    8. '
' → logprob: -18.500207901000977
    9. '  ' → logprob: -18.500207901000977
    10. ' ' → logprob: -18.750207901000977

Token 1242: '   ' (ID: 271)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.8035817742347717
    2. 'char' → logprob: -1.178581714630127
    3. '   ' → logprob: -1.428581714630127
    4. 'kana' → logprob: -6.303581714630127
    5. ' char' → logprob: -6.928581714630127
    6. '```' → logprob: -7.178581714630127
    7. 'kan' → logprob: -7.803581714630127
    8. 'character' → logprob: -8.928582191467285
    9. '
' → logprob: -8.928582191467285
    10. ' ' → logprob: -9.053582191467285

Token 1243: ' char' (ID: 1826)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.20106612145900726
    2. 'kana' → logprob: -1.8260661363601685
    3. 'char' (adapté à ' char') → logprob: -4.201066017150879
    4. 'kan' → logprob: -5.701066017150879
    5. 'app' → logprob: -6.701066017150879
    6. '   ' → logprob: -8.576066017150879
    7. ' kana' → logprob: -8.576066017150879
    8. 'application' → logprob: -8.576066017150879
    9. 'mapping' → logprob: -8.826066017150879
    10. 'kat' → logprob: -8.951066017150879

Token 1244: '_map' (ID: 11824)
  Prédit: '_mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -4.127333340875339e-06
    2. 'mapping' → logprob: -12.625003814697266
    3. 'Mapping' → logprob: -15.125003814697266
    4. '_map' → logprob: -15.375003814697266
    5. '_mapper' → logprob: -16.125003814697266
    6. '_MAPPING' → logprob: -16.750003814697266
    7. '_reader' → logprob: -16.875003814697266
    8. '_' → logprob: -17.375003814697266
    9. '_m' → logprob: -17.500003814697266
    10. '   ' → logprob: -18.250003814697266

Token 1245: ' =' (ID: 314)
  Prédit: 'ping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ping' → logprob: -5.514650183613412e-05
    2. '=' → logprob: -10.250055313110352
    3. 'ing' → logprob: -11.625055313110352
    4. ' =' → logprob: -11.750055313110352
    5. 'pping' → logprob: -13.000055313110352
    6. 'per' → logprob: -15.125055313110352
    7. '   ' → logprob: -15.500055313110352
    8. 'apping' → logprob: -16.00005531311035
    9. 'ging' → logprob: -17.12505531311035
    10. '_ping' → logprob: -18.00005531311035

Token 1246: ' Kana' (ID: 88230)
  Prédit: 'Kana'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kana' → logprob: -2.339278580620885e-06
    2. ' Kana' → logprob: -13.000001907348633
    3. 'K' → logprob: -17.125001907348633
    4. 'kana' → logprob: -17.750001907348633
    5. 'Kan' → logprob: -19.250001907348633
    6. ' kana' → logprob: -20.000001907348633
    7. 'Kala' → logprob: -20.000001907348633
    8. '
' → logprob: -22.000001907348633
    9. '   ' → logprob: -22.125001907348633
    10. '```' → logprob: -22.250001907348633

Token 1247: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -3.7697225252486533e-06
    2. '_MAPPING' → logprob: -13.500003814697266
    3. '_mapping' → logprob: -13.750003814697266
    4. 'mapping' → logprob: -13.875003814697266
    5. 'Mappings' → logprob: -15.125003814697266
    6. ' Mapping' → logprob: -18.000003814697266
    7. '.Mapping' → logprob: -18.000003814697266
    8. '\Mapping' → logprob: -18.250003814697266
    9. '.mapping' → logprob: -19.000003814697266
    10. '
' → logprob: -19.375003814697266

Token 1248: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3873210847377777
    2. 'inter' → logprob: -1.1373211145401
    3. ' interpreter' → logprob: -8.387321472167969
    4. '
' → logprob: -9.262321472167969
    5. '(inter' → logprob: -9.637321472167969
    6. '_inter' → logprob: -10.387321472167969
    7. '    
' → logprob: -12.262321472167969
    8. 'interp' → logprob: -12.387321472167969
    9. 'interpre' → logprob: -12.387321472167969
    10. '.inter' → logprob: -12.762321472167969

Token 1249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3510492146015167
    2. 'inter' → logprob: -1.2260491847991943
    3. ' interpreter' → logprob: -5.976049423217773
    4. 'interpre' → logprob: -10.976049423217773
    5. 'interpret' → logprob: -11.601049423217773
    6. '```' → logprob: -11.726049423217773
    7. ' ' → logprob: -12.101049423217773
    8. '
' → logprob: -12.351049423217773
    9. '(inter' → logprob: -12.726049423217773
    10. '    
' → logprob: -12.976049423217773

Token 1250: ' interpreter' (ID: 87890)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -4.723352049040841e-06
    2. 'press' → logprob: -12.875004768371582
    3. 'interpre' → logprob: -14.000004768371582
    4. 'app' → logprob: -14.375004768371582
    5. 'interpret' → logprob: -15.250004768371582
    6. ' interpreter' → logprob: -15.250004768371582
    7. 'interp' → logprob: -15.750004768371582
    8. '   ' → logprob: -16.750003814697266
    9. '
' → logprob: -18.375003814697266
    10. '(inter' → logprob: -18.375003814697266

Token 1251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ' ' → logprob: -17.22520637512207
    4. '＝' → logprob: -18.10020637512207
    5. '=create' → logprob: -18.35020637512207
    6. '	' → logprob: -18.47520637512207
    7. ' =
' → logprob: -18.60020637512207
    8. '<|end|>' → logprob: -18.85020637512207
    9. ')' → logprob: -18.97520637512207
    10. '   ' → logprob: -19.22520637512207

Token 1252: ' Press' (ID: 13463)
  Prédit: 'Press'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Press' → logprob: -9.615255839889869e-05
    2. ' Press' → logprob: -9.250096321105957
    3. 'Pass' → logprob: -18.37509536743164
    4. 'Pressed' → logprob: -18.75009536743164
    5. 'Push' → logprob: -19.00009536743164
    6. 'Pressure' → logprob: -19.75009536743164
    7. 'Print' → logprob: -20.25009536743164
    8. 'Pres' → logprob: -20.25009536743164
    9. '   ' → logprob: -20.50009536743164
    10. ' ' → logprob: -22.50009536743164

Token 1253: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: 0.0
    2. '   ' → logprob: -18.0
    3. 'group' → logprob: -18.625
    4. '_group' → logprob: -18.625
    5. 'Interpreter' → logprob: -19.125
    6. 'Groups' → logprob: -19.25
    7. ' Group' → logprob: -19.375
    8. '_Group' → logprob: -19.5
    9. '	Group' → logprob: -19.75
    10. '<Group' → logprob: -20.625

Token 1254: 'Interpreter' (ID: 87527)
  Prédit: 'Interpreter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interpreter' → logprob: -2.935296834039036e-06
    2. 'Interpret' → logprob: -13.25000286102295
    3. 'Press' → logprob: -14.37500286102295
    4. 'Interactor' → logprob: -14.75000286102295
    5. '(' → logprob: -16.375003814697266
    6. '(P' → logprob: -18.875003814697266
    7. ' interpreter' → logprob: -18.875003814697266
    8. 'Inter' → logprob: -19.375003814697266
    9. 'Translator' → logprob: -19.750003814697266
    10. 'Interceptor' → logprob: -19.875003814697266

Token 1255: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.10840699821710587
    2. 'char' → logprob: -2.6084070205688477
    3. '(input' → logprob: -3.7334070205688477
    4. '   ' → logprob: -5.358407020568848
    5. '(app' → logprob: -9.108407020568848
    6. 'Application' → logprob: -9.483407020568848
    7. 'input' → logprob: -9.733407020568848
    8. '(' → logprob: -9.983407020568848
    9. '(Application' → logprob: -9.983407020568848
    10. '(
' → logprob: -10.858407020568848

Token 1256: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0015193840954452753
    2. '_mapping' → logprob: -6.501519203186035
    3. 'map' → logprob: -11.626519203186035
    4. 'mapping' → logprob: -11.751519203186035
    5. 'apping' → logprob: -17.12652015686035
    6. '_mapper' → logprob: -17.37652015686035
    7. 'emap' → logprob: -17.50152015686035
    8. '=' → logprob: -18.00152015686035
    9. 'Map' → logprob: -18.00152015686035
    10. '_m' → logprob: -18.12652015686035

Token 1257: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2822084426879883
    2. ')' → logprob: -1.4072084426879883
    3. ')
' → logprob: -6.907208442687988
    4. '()' → logprob: -11.782208442687988
    5. '<|end|>' → logprob: -11.782208442687988
    6. '    
' → logprob: -11.907208442687988
    7. '
' → logprob: -12.032208442687988
    8. ',' → logprob: -12.032208442687988
    9. '(input' → logprob: -12.532208442687988
    10. '(' → logprob: -12.532208442687988

Token 1258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16486653685569763
    2. 'app' → logprob: -1.91486656665802
    3. ' app' → logprob: -5.4148664474487305
    4. 'application' → logprob: -9.16486644744873
    5. '	app' → logprob: -10.03986644744873
    6. '
' → logprob: -10.78986644744873
    7. ' application' → logprob: -11.66486644744873
    8. '    
' → logprob: -13.28986644744873
    9. '```' → logprob: -13.53986644744873
    10. '(app' → logprob: -15.03986644744873

Token 1259: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -4.127333340875339e-06
    2. ' app' → logprob: -12.625003814697266
    3. 'application' → logprob: -14.375003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '	app' → logprob: -21.000003814697266
    6. 'App' → logprob: -21.250003814697266
    7. '
' → logprob: -21.375003814697266
    8. '    
' → logprob: -21.750003814697266
    9. '```' → logprob: -21.875003814697266
    10. 'import' → logprob: -22.000003814697266

Token 1260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8430161476135254
    2. '.' → logprob: -1.2180161476135254
    3. '.run' → logprob: -1.3430161476135254
    4. '=' → logprob: -4.843016147613525
    5. '   ' → logprob: -5.968016147613525
    6. '.app' → logprob: -6.968016147613525
    7. '.inter' → logprob: -7.718016147613525
    8. ' .' → logprob: -8.218015670776367
    9. '.=' → logprob: -8.218015670776367
    10. ' ' → logprob: -9.843015670776367

Token 1261: ' Application' (ID: 12493)
  Prédit: 'Application'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -0.029755238443613052
    2. ' Application' → logprob: -3.5297553539276123
    3. '	Application' → logprob: -12.904755592346191
    4. 'App' → logprob: -13.154755592346191
    5. '<Application' → logprob: -16.154754638671875
    6. '   ' → logprob: -16.404754638671875
    7. ' application' → logprob: -17.154754638671875
    8. '(Application' → logprob: -18.029754638671875
    9. '.Application' → logprob: -18.154754638671875
    10. ' ' → logprob: -18.779754638671875

Token 1262: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010786171071231365
    2. '   ' → logprob: -5.135786056518555
    3. 'input' → logprob: -5.385786056518555
    4. '(reader' → logprob: -9.010786056518555
    5. '(' → logprob: -9.885786056518555
    6. '(app' → logprob: -10.385786056518555
    7. '(inter' → logprob: -11.135786056518555
    8. '(
' → logprob: -11.260786056518555
    9. 'reader' → logprob: -11.635786056518555
    10. 'app' → logprob: -11.760786056518555

Token 1263: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -3.8889261304575484e-06
    2. '_writer' → logprob: -13.000003814697266
    3. 'Reader' → logprob: -14.375003814697266
    4. ',' → logprob: -14.625003814697266
    5. 'reader' → logprob: -15.625003814697266
    6. '   ' → logprob: -15.750003814697266
    7. ')_' → logprob: -16.375003814697266
    8. ',_' → logprob: -16.625003814697266
    9. '(reader' → logprob: -17.125003814697266
    10. '.Reader' → logprob: -17.625003814697266

Token 1264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. '   ' → logprob: -9.875070571899414
    3. ',
' → logprob: -11.000070571899414
    4. ' ,' → logprob: -13.375070571899414
    5. '       ' → logprob: -15.250070571899414
    6. '(inter' → logprob: -15.750070571899414
    7. ')' → logprob: -16.000070571899414
    8. 'inter' → logprob: -16.875070571899414
    9. '<|end|>' → logprob: -18.000070571899414
    10. '‌,' → logprob: -18.125070571899414

Token 1265: ' interpreter' (ID: 87890)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.00026169343618676066
    2. ' interpreter' → logprob: -8.250261306762695
    3. 'interpre' → logprob: -15.500261306762695
    4. 'interpret' → logprob: -16.125261306762695
    5. 'Interpreter' → logprob: -18.125261306762695
    6. '(inter' → logprob: -18.500261306762695
    7. '   ' → logprob: -19.625261306762695
    8. 'interp' → logprob: -20.375261306762695
    9. '
' → logprob: -21.375261306762695
    10. '_inter' → logprob: -22.125261306762695

Token 1266: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08854208141565323
    2. ')' → logprob: -2.9635419845581055
    3. ')
' → logprob: -3.4635419845581055
    4. ',' → logprob: -7.9635419845581055
    5. '
' → logprob: -7.9635419845581055
    6. 'app' → logprob: -8.213541984558105
    7. '(app' → logprob: -8.713541984558105
    8. '(' → logprob: -8.963541984558105
    9. '    
' → logprob: -9.338541984558105
    10. '()
' → logprob: -9.588541984558105

Token 1267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6946964859962463
    2. 'app' → logprob: -0.6946964859962463
    3. '
' → logprob: -6.819696426391602
    4. ' app' → logprob: -8.444696426391602
    5. '```' → logprob: -9.069696426391602
    6. '    
' → logprob: -9.944696426391602
    7. '	app' → logprob: -9.944696426391602
    8. 'for' → logprob: -11.069696426391602
    9. '(app' → logprob: -12.569696426391602
    10. '@app' → logprob: -13.069696426391602

Token 1268: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.5781764388084412
    2. 'outputs' → logprob: -1.078176498413086
    3. 'for' → logprob: -2.328176498413086
    4. 'output' → logprob: -7.203176498413086
    5. 'result' → logprob: -8.078176498413086
    6. ' for' → logprob: -8.828176498413086
    7. ' results' → logprob: -9.203176498413086
    8. '   ' → logprob: -9.953176498413086
    9. ' outputs' → logprob: -10.703176498413086
    10. 'res' → logprob: -11.578176498413086

Token 1269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6079471111297607
    2. '.' → logprob: -1.7329471111297607
    3. ' =' → logprob: -1.7329471111297607
    4. '.append' → logprob: -2.3579471111297607
    5. '.extend' → logprob: -5.23294734954834
    6. '   ' → logprob: -7.10794734954834
    7. ')' → logprob: -8.23294734954834
    8. '.=' → logprob: -8.73294734954834
    9. '=[]' → logprob: -8.98294734954834
    10. 's' → logprob: -9.73294734954834

Token 1270: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.2014141082763672
    2. ' app' → logprob: -1.7014141082763672
    3. '(app' → logprob: -14.826414108276367
    4. '   ' → logprob: -14.951414108276367
    5. '	app' → logprob: -15.576414108276367
    6. '.app' → logprob: -19.076414108276367
    7. ' ' → logprob: -20.076414108276367
    8. '$app' → logprob: -20.326414108276367
    9. ''app' → logprob: -20.451414108276367
    10. '_app' → logprob: -20.826414108276367

Token 1271: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0001005630983854644
    2. '.' → logprob: -9.250100135803223
    3. ' .' → logprob: -12.875100135803223
    4. '   ' → logprob: -14.625100135803223
    5. 'run' → logprob: -14.875100135803223
    6. '.results' → logprob: -15.000100135803223
    7. '.
' → logprob: -15.500100135803223
    8. '\.' → logprob: -15.875100135803223
    9. '._' → logprob: -16.25010108947754
    10. '```' → logprob: -17.00010108947754

Token 1272: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0656791552901268
    2. '
' → logprob: -2.8156790733337402
    3. 'for' → logprob: -5.69067907333374
    4. ' for' → logprob: -8.190679550170898
    5. '    
' → logprob: -10.940679550170898
    6. '()
' → logprob: -11.315679550170898
    7. '	for' → logprob: -12.065679550170898
    8. '<|end|>' → logprob: -12.815679550170898
    9. '```' → logprob: -12.815679550170898
    10. ':
' → logprob: -13.315679550170898

Token 1273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062214937061071396
    2. 'for' → logprob: -2.8122148513793945
    3. ' for' → logprob: -9.062214851379395
    4. '```' → logprob: -9.062214851379395
    5. '	for' → logprob: -11.437214851379395
    6. '
' → logprob: -12.937214851379395
    7. '       ' → logprob: -14.062214851379395
    8. '``' → logprob: -14.187214851379395
    9. '    
' → logprob: -15.312214851379395
    10. 'import' → logprob: -15.937214851379395

Token 1274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.739826181321405e-05
    2. '   ' → logprob: -10.00004768371582
    3. ' for' → logprob: -13.50004768371582
    4. '```' → logprob: -14.87504768371582
    5. '
' → logprob: -16.37504768371582
    6. '	for' → logprob: -16.50004768371582
    7. 'import' → logprob: -17.37504768371582
    8. 'print' → logprob: -18.75004768371582
    9. '``' → logprob: -20.00004768371582
    10. '       ' → logprob: -20.00004768371582

Token 1275: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11103802919387817
    2. 'result' → logprob: -2.3610379695892334
    3. ' res' → logprob: -4.8610382080078125
    4. 'count' → logprob: -5.8610382080078125
    5. 'r' → logprob: -9.361038208007812
    6. ' result' → logprob: -9.361038208007812
    7. ' count' → logprob: -11.611038208007812
    8. '   ' → logprob: -14.361038208007812
    9. ' r' → logprob: -14.361038208007812
    10. '
' → logprob: -16.986038208007812

Token 1276: ' in' (ID: 306)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.38718628883361816
    2. ' in' → logprob: -1.1371862888336182
    3. 'in' → logprob: -8.887186050415039
    4. ' es' → logprob: -9.137186050415039
    5. 'e' → logprob: -10.137186050415039
    6. 'esu' → logprob: -11.137186050415039
    7. ' ' → logprob: -12.012186050415039
    8. 'i' → logprob: -13.137186050415039
    9. 'esize' → logprob: -13.512186050415039
    10. ' i' → logprob: -13.637186050415039

Token 1277: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00020389800192788243
    2. ' results' → logprob: -8.500204086303711
    3. '(results' → logprob: -14.750204086303711
    4. 'print' → logprob: -17.62520408630371
    5. '	results' → logprob: -17.62520408630371
    6. 'range' → logprob: -18.75020408630371
    7. 'result' → logprob: -20.62520408630371
    8. '.results' → logprob: -21.12520408630371
    9. '_results' → logprob: -21.12520408630371
    10. 'Results' → logprob: -21.12520408630371

Token 1278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08023478835821152
    2. ':
' → logprob: -2.5802347660064697
    3. 'print' → logprob: -6.830235004425049
    4. '   ' → logprob: -8.70523452758789
    5. ' print' → logprob: -10.20523452758789
    6. '       ' → logprob: -10.45523452758789
    7. ',' → logprob: -11.95523452758789
    8. '.print' → logprob: -12.08023452758789
    9. '):' → logprob: -12.45523452758789
    10. '):
' → logprob: -12.83023452758789

Token 1279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012671363074332476
    2. 'print' → logprob: -6.751266956329346
    3. ' print' → logprob: -9.626267433166504
    4. '```' → logprob: -10.626267433166504
    5. '   ' → logprob: -12.376267433166504
    6. '           ' → logprob: -13.626267433166504
    7. '	print' → logprob: -14.626267433166504
    8. '`' → logprob: -15.376267433166504
    9. '<|end|>' → logprob: -16.251266479492188
    10. '``' → logprob: -16.376266479492188

Token 1280: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -14.750000953674316
    4. '```' → logprob: -19.250001907348633
    5. 'println' → logprob: -21.500001907348633
    6. '	print' → logprob: -22.250001907348633
    7. 'import' → logprob: -24.000001907348633
    8. '
' → logprob: -24.000001907348633
    9. 'printf' → logprob: -24.125001907348633
    10. '_print' → logprob: -24.625001907348633

Token 1281: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.837811088189483e-05
    2. 'r' → logprob: -9.625068664550781
    3. '(' → logprob: -13.125068664550781
    4. '()' → logprob: -15.500068664550781
    5. ' r' → logprob: -17.12506866455078
    6. '(
' → logprob: -18.62506866455078
    7. ' (' → logprob: -19.50006866455078
    8. '	r' → logprob: -19.62506866455078
    9. '((' → logprob: -20.12506866455078
    10. '_r' → logprob: -20.62506866455078

Token 1282: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '())' → logprob: -14.500000953674316
    3. '()' → logprob: -15.250000953674316
    4. ')
' → logprob: -15.375000953674316
    5. '   ' → logprob: -15.500000953674316
    6. ' )' → logprob: -15.875000953674316
    7. ')`' → logprob: -17.125001907348633
    8. '')' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.250001907348633
    10. '}' → logprob: -18.375001907348633

Token 1283: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023488728038500994
    2. '```' → logprob: -8.500234603881836
    3. ' if' → logprob: -10.625234603881836
    4. '<|end|>' → logprob: -12.500234603881836
    5. '#' → logprob: -13.250234603881836
    6. '
' → logprob: -14.625234603881836
    7. 'main' → logprob: -14.625234603881836
    8. '``' → logprob: -15.375234603881836
    9. '#if' → logprob: -16.375234603881836
    10. '	if' → logprob: -16.500234603881836

Token 1284: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07897373288869858
    2. '__' → logprob: -2.5789737701416016
    3. '___' → logprob: -10.453973770141602
    4. 'name' → logprob: -10.453973770141602
    5. '_name' → logprob: -11.078973770141602
    6. ''' → logprob: -12.703973770141602
    7. '_' → logprob: -13.453973770141602
    8. ' ' → logprob: -13.703973770141602
    9. '____' → logprob: -13.703973770141602
    10. 'Name' → logprob: -13.828973770141602

Token 1285: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010310438461601734
    2. '==' → logprob: -4.635310649871826
    3. ' ==' → logprob: -8.010310173034668
    4. '__.__' → logprob: -9.760310173034668
    5. '.__' → logprob: -10.385310173034668
    6. '[' → logprob: -10.385310173034668
    7. '___' → logprob: -11.385310173034668
    8. '=="' → logprob: -11.385310173034668
    9. '__[' → logprob: -11.510310173034668
    10. '=='' → logprob: -11.760310173034668

Token 1286: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.1008713702030946e-06
    2. '__.__' → logprob: -13.625001907348633
    3. '==' → logprob: -14.375001907348633
    4. '__.' → logprob: -16.500001907348633
    5. '__
' → logprob: -16.625001907348633
    6. '____' → logprob: -17.375001907348633
    7. '___' → logprob: -17.625001907348633
    8. ' ==' → logprob: -17.875001907348633
    9. '__('' → logprob: -17.875001907348633
    10. '__,' → logprob: -18.750001907348633

Token 1287: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5120097994804382
    2. '==' → logprob: -1.012009859085083
    3. ' ==' → logprob: -3.387009859085083
    4. '=="' → logprob: -6.387009620666504
    5. '=='' → logprob: -6.387009620666504
    6. '=' → logprob: -11.137009620666504
    7. '==
' → logprob: -11.387009620666504
    8. '===' → logprob: -12.262009620666504
    9. '```' → logprob: -12.637009620666504
    10. '_' → logprob: -13.262009620666504

Token 1288: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3868882656097412
    2. ''' → logprob: -1.1368882656097412
    3. '__' → logprob: -11.63688850402832
    4. ' "__' → logprob: -12.13688850402832
    5. ' '__' → logprob: -14.01188850402832
    6. '"user' → logprob: -14.88688850402832
    7. '"name' → logprob: -15.26188850402832
    8. '('__' → logprob: -15.38688850402832
    9. ''"' → logprob: -15.51188850402832
    10. ''name' → logprob: -15.63688850402832

Token 1289: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6258407235145569
    2. 'main' → logprob: -0.8758407235145569
    3. '"' → logprob: -3.250840663909912
    4. ''' → logprob: -4.625840663909912
    5. 'name' → logprob: -9.50084114074707
    6. '__":
' → logprob: -11.25084114074707
    7. ' "__' → logprob: -11.75084114074707
    8. ''name' → logprob: -12.00084114074707
    9. '_main' → logprob: -12.25084114074707
    10. '```' → logprob: -12.25084114074707

Token 1290: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6948751211166382
    2. '__":
' → logprob: -0.6948751211166382
    3. '__':
' → logprob: -6.694875240325928
    4. '__.' → logprob: -8.69487476348877
    5. '__.__' → logprob: -9.06987476348877
    6. '__
' → logprob: -9.44487476348877
    7. '__["' → logprob: -9.69487476348877
    8. '__
' → logprob: -10.06987476348877
    9. '.' → logprob: -11.94487476348877
    10. '"' → logprob: -12.44487476348877

Token 1291: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018910689279437065
    2. '__' → logprob: -4.018910884857178
    3. '   ' → logprob: -7.893910884857178
    4. '_main' → logprob: -8.89391040802002
    5. ' main' → logprob: -9.26891040802002
    6. '"' → logprob: -10.64391040802002
    7. '(main' → logprob: -10.64391040802002
    8. '	main' → logprob: -10.64391040802002
    9. '__":
' → logprob: -10.89391040802002
    10. 'run' → logprob: -11.26891040802002

Token 1292: ' threading' (ID: 72047)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. 'thread' → logprob: -15.25
    3. ' main' → logprob: -17.25
    4. '	main' → logprob: -19.0
    5. '   ' → logprob: -21.5
    6. '(main' → logprob: -24.0
    7. '_main' → logprob: -24.5
    8. '.main' → logprob: -24.5
    9. '```' → logprob: -24.5
    10. 'import' → logprob: -25.0

Token 1293: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.039001233875751495
    2. '.' → logprob: -3.289001226425171
    3. '.start' → logprob: -7.03900146484375
    4. '.Threading' → logprob: -10.41400146484375
    5. '.stack' → logprob: -11.53900146484375
    6. ' .' → logprob: -11.66400146484375
    7. '.thread' → logprob: -11.78900146484375
    8. '.Popen' → logprob: -12.41400146484375
    9. '.Stack' → logprob: -12.66400146484375
    10. '.run' → logprob: -12.78900146484375

Token 1294: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0008665603818371892
    2. 'target' → logprob: -7.750866413116455
    3. '(' → logprob: -7.875866413116455
    4. '().' → logprob: -10.250866889953613
    5. '(
' → logprob: -11.375866889953613
    6. '(start' → logprob: -12.875866889953613
    7. ' target' → logprob: -13.000866889953613
    8. '[target' → logprob: -14.375866889953613
    9. '.target' → logprob: -14.625866889953613
    10. '.start' → logprob: -14.625866889953613

Token 1295: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048884835094213486
    2. '=' → logprob: -3.048884868621826
    3. '(main' → logprob: -8.298884391784668
    4. ' main' → logprob: -10.048884391784668
    5. '	main' → logprob: -12.423884391784668
    6. ')' → logprob: -14.423884391784668
    7. '_main' → logprob: -15.173884391784668
    8. 'amain' → logprob: -15.923884391784668
    9. ')=' → logprob: -16.423885345458984
    10. '.main' → logprob: -16.423885345458984

Token 1296: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.875
    4. '(main' → logprob: -22.75
    5. 'Main' → logprob: -23.75
    6. 'mainwindow' → logprob: -25.0
    7. '.main' → logprob: -25.625
    8. '_main' → logprob: -25.625
    9. '
' → logprob: -26.75
    10. 'print' → logprob: -27.625

Token 1297: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00024739265791140497
    2. '()).' → logprob: -8.87524700164795
    3. '().' → logprob: -9.37524700164795
    4. ')' → logprob: -11.37524700164795
    5. '   ' → logprob: -12.12524700164795
    6. '()' → logprob: -13.37524700164795
    7. '.start' → logprob: -13.50024700164795
    8. '>().' → logprob: -14.62524700164795
    9. ',' → logprob: -14.75024700164795
    10. '```' → logprob: -14.75024700164795

Token 1298: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.128163257315464e-07
    2. 'run' → logprob: -15.375
    3. ' start' → logprob: -16.5
    4. '(start' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. '.start' → logprob: -19.75
    7. ':start' → logprob: -19.75
    8. '	start' → logprob: -20.25
    9. ')' → logprob: -21.25
    10. '=start' → logprob: -22.0

Token 1299: '()' (ID: 416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4887387454509735
    2. '<|end|>' → logprob: -1.113738775253296
    3. '       ' → logprob: -3.488738775253296
    4. '            ' → logprob: -5.113738536834717
    5. '        ' → logprob: -5.488738536834717
    6. '   ' → logprob: -5.738738536834717
    7. ')' → logprob: -5.863738536834717
    8. '               ' → logprob: -5.988738536834717
    9. '...' → logprob: -6.363738536834717
    10. '          ' → logprob: -6.488738536834717


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1297
Tokens correctement prédits (1ère position, stricte): 503
Tokens correctement prédits (1ère position, avec adaptation): 557
Tokens correctement prédits (top 10): 1029
Précision stricte (1ère position): 38.78%
Précision adaptée (1ère position): 42.95%
Précision (top 10): 79.34%
================================================================================
