================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M, L = map(int, input().split())
classes = []
for _ in range(M):
    d, a, k, t = map(int, input().split())
    mask = 0
    for i in range(k):
        mask |= 1 << (d * N + (a - 1 + i))
    classes.append((mask, t))

from collections import defaultdict

dp = defaultdict(int)
dp[0] = 0
for mask, t in classes:
    for used, val in list(dp.items()):
        if (used & mask) == 0:
            dp[used | mask] = max(dp.get(used | mask, 0), val + t)

results = [0]*(L+1)
for used, val in dp.items():
    cnt = bin(used).count('1')
    # Number of classes selected = number of distinct intervals = count of (used bits)/class bits not directly countable here
    # Instead, we track selecting classes cumulatively by the dp process but we don't know count by bits
    # Alternative : store dp with count keys
    pass

# To handle limit L on number of classes, redo dp with class count dimension

dp = [defaultdict(int) for _ in range(L+1)]
dp[0][0] = 0
for mask, t in classes:
    for l in range(L-1, -1, -1):
        for used, val in list(dp[l].items()):
            if (used & mask) == 0:
                dp[l+1][used | mask] = max(dp[l+1].get(used | mask, 0), val + t)

print(max([max(d.values()) if d else 0 for d in dp]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07718385010957718
    2. ',' → logprob: -3.077183961868286
    3. ' =' → logprob: -3.577183961868286
    4. ')' → logprob: -10.077183723449707
    5. '```' → logprob: -10.077183723449707
    6. ';' → logprob: -10.327183723449707
    7. '[' → logprob: -10.577183723449707
    8. '.' → logprob: -11.077183723449707
    9. ''' → logprob: -11.202183723449707
    10. ' ' → logprob: -11.327183723449707

Token 4: ' L' (ID: 451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.491113543510437
    2. ' =' → logprob: -0.991113543510437
    3. ',' → logprob: -4.116113662719727
    4. ')' → logprob: -8.366113662719727
    5. ';' → logprob: -8.866113662719727
    6. ' ' → logprob: -9.616113662719727
    7. '.' → logprob: -10.116113662719727
    8. ' ,' → logprob: -10.241113662719727
    9. '=int' → logprob: -11.741113662719727
    10. '#' → logprob: -12.116113662719727

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02828320302069187
    2. ' =' → logprob: -3.90328311920166
    3. ',' → logprob: -4.90328311920166
    4. ';' → logprob: -9.40328311920166
    5. '[' → logprob: -9.65328311920166
    6. ')' → logprob: -10.02828311920166
    7. '```' → logprob: -10.02828311920166
    8. ' ' → logprob: -11.77828311920166
    9. '(' → logprob: -11.90328311920166
    10. '.' → logprob: -12.02828311920166

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4853366017341614
    2. '0' → logprob: -1.8603365421295166
    3. ' map' → logprob: -1.9853365421295166
    4. 'map' → logprob: -2.8603365421295166
    5. '10' → logprob: -3.8603365421295166
    6. 'input' → logprob: -5.110336780548096
    7. ' input' → logprob: -5.485336780548096
    8. ' [' → logprob: -7.360336780548096
    9. ' list' → logprob: -7.735336780548096
    10. '100' → logprob: -8.235336303710938

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020596191752701998
    2. '(lambda' → logprob: -6.627059459686279
    3. '```' → logprob: -8.252059936523438
    4. '<|end|>' → logprob: -9.127059936523438
    5. '(int' → logprob: -9.377059936523438
    6. '(user' → logprob: -9.627059936523438
    7. ')' → logprob: -10.127059936523438
    8. '(
' → logprob: -10.752059936523438
    9. ' (' → logprob: -11.127059936523438
    10. '`' → logprob: -11.377059936523438

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32658255100250244
    2. '(input' → logprob: -2.076582431793213
    3. ')' → logprob: -2.951582431793213
    4. '(user' → logprob: -3.576582431793213
    5. '<|end|>' → logprob: -4.076582431793213
    6. '(token' → logprob: -5.076582431793213
    7. '```' → logprob: -5.701582431793213
    8. '<|end|>' → logprob: -5.701582431793213
    9. '(range' → logprob: -5.951582431793213
    10. '(int' → logprob: -6.326582431793213

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891060411930084
    2. ' input' → logprob: -2.5789105892181396
    3. ')' → logprob: -11.328910827636719
    4. '(input' → logprob: -11.703910827636719
    5. ',input' → logprob: -15.078910827636719
    6. '=input' → logprob: -16.70391082763672
    7. '```' → logprob: -16.82891082763672
    8. ' )' → logprob: -17.07891082763672
    9. '<input' → logprob: -17.07891082763672
    10. '[input' → logprob: -18.07891082763672

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4650006592273712
    2. '())' → logprob: -1.0900006294250488
    3. '(' → logprob: -4.340000629425049
    4. ')' → logprob: -4.715000629425049
    5. '().' → logprob: -4.965000629425049
    6. '(()' → logprob: -5.965000629425049
    7. '('' → logprob: -7.215000629425049
    8. '();)' → logprob: -7.340000629425049
    9. '`()' → logprob: -7.590000629425049
    10. '());' → logprob: -7.715000629425049

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004429435357451439
    2. 'strip' → logprob: -7.750442981719971
    3. 'rstrip' → logprob: -11.500442504882812
    4. ' split' → logprob: -13.375442504882812
    5. ')' → logprob: -15.250442504882812
    6. '(split' → logprob: -15.375442504882812
    7. 'spl' → logprob: -16.250442504882812
    8. '```' → logprob: -17.750442504882812
    9. 'replace' → logprob: -17.875442504882812
    10. 'startswith' → logprob: -17.875442504882812

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21646949648857117
    2. '())' → logprob: -1.7164695262908936
    3. '))' → logprob: -4.5914692878723145
    4. '()' → logprob: -5.8414692878723145
    5. '()))' → logprob: -6.9664692878723145
    6. '(' → logprob: -7.7164692878723145
    7. '('' → logprob: -8.591469764709473
    8. '`)' → logprob: -9.091469764709473
    9. '```' → logprob: -10.341469764709473
    10. '(','' → logprob: -10.466469764709473

Token 13: 'classes' (ID: 17233)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8060895800590515
    2. 'for' → logprob: -1.6810896396636963
    3. 'a' → logprob: -2.1810896396636963
    4. '
' → logprob: -3.3060896396636963
    5. 'x' → logprob: -3.5560896396636963
    6. '#' → logprob: -3.5560896396636963
    7. '```' → logprob: -3.9310896396636963
    8. '`' → logprob: -4.056089401245117
    9. 'if' → logprob: -4.181089401245117
    10. ')' → logprob: -4.431089401245117

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5909467339515686
    2. '.' → logprob: -0.8409467339515686
    3. '_' → logprob: -4.965946674346924
    4. '['' → logprob: -6.840946674346924
    5. 's' → logprob: -6.965946674346924
    6. '[:]' → logprob: -7.340946674346924
    7. '[]' → logprob: -7.590946674346924
    8. ')' → logprob: -7.715946674346924
    9. '[
' → logprob: -7.840946674346924
    10. '=' → logprob: -7.840946674346924

Token 15: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.13404950499534607
    2. '[]' → logprob: -2.259049415588379
    3. ' [' → logprob: -4.634049415588379
    4. '[' → logprob: -5.009049415588379
    5. ' [[]' → logprob: -5.884049415588379
    6. ' {}' → logprob: -7.009049415588379
    7. 'set' → logprob: -8.259049415588379
    8. ' set' → logprob: -8.384049415588379
    9. '{}' → logprob: -8.884049415588379
    10. ' defaultdict' → logprob: -9.134049415588379

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8908587662735954e-05
    2. ' for' → logprob: -11.000019073486328
    3. '```' → logprob: -13.125019073486328
    4. '`' → logprob: -17.250019073486328
    5. '``' → logprob: -17.750019073486328
    6. '	for' → logprob: -17.875019073486328
    7. '\n' → logprob: -18.000019073486328
    8. '
' → logprob: -19.125019073486328
    9. '   ' → logprob: -19.250019073486328
    10. '\' → logprob: -19.250019073486328

Token 17: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.052749402821063995
    2. ' i' → logprob: -3.1777493953704834
    3. ' _' → logprob: -4.8027496337890625
    4. '_' → logprob: -6.6777496337890625
    5. '  ' → logprob: -8.802749633789062
    6. 'i' → logprob: -10.802749633789062
    7. ' ‌' → logprob: -10.802749633789062
    8. ' ▁' → logprob: -10.927749633789062
    9. ' ' → logprob: -11.802749633789062
    10. ' )' → logprob: -12.052749633789062

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11393462866544724
    2. 'in' → logprob: -2.2389345169067383
    3. ' ' → logprob: -7.363934516906738
    4. 'i' → logprob: -8.488934516906738
    5. 'class' → logprob: -9.238934516906738
    6. 'n' → logprob: -9.738934516906738
    7. ' i' → logprob: -9.988934516906738
    8. 'range' → logprob: -11.113934516906738
    9. '_' → logprob: -11.363934516906738
    10. ' _' → logprob: -11.863934516906738

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889143377542496
    2. ' range' → logprob: -2.5788915157318115
    3. '(range' → logprob: -14.20389175415039
    4. 'Range' → logprob: -15.07889175415039
    5. '_range' → logprob: -15.07889175415039
    6. '	range' → logprob: -16.07889175415039
    7. '.range' → logprob: -17.07889175415039
    8. 'ranges' → logprob: -17.07889175415039
    9. ')' → logprob: -17.20389175415039
    10. 'rang' → logprob: -17.32889175415039

Token 20: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03419317677617073
    2. ' (' → logprob: -3.409193277359009
    3. '(N' → logprob: -8.15919303894043
    4. '(range' → logprob: -8.78419303894043
    5. ' range' → logprob: -10.03419303894043
    6. '(n' → logprob: -10.78419303894043
    7. '(int' → logprob: -11.15919303894043
    8. ' ' → logprob: -11.78419303894043
    9. ' N' → logprob: -12.40919303894043
    10. '(len' → logprob: -12.53419303894043

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023735121358186007
    2. ')' → logprob: -6.252373695373535
    3. ' ):' → logprob: -8.252373695373535
    4. ':' → logprob: -9.002373695373535
    5. '):
' → logprob: -9.877373695373535
    6. ' )' → logprob: -12.877373695373535
    7. ',' → logprob: -13.127373695373535
    8. '+' → logprob: -13.752373695373535
    9. ''):' → logprob: -14.502373695373535
    10. '"):' → logprob: -14.752373695373535

Token 22: '   ' (ID: 271)
  Prédit: ' classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' classes' → logprob: -0.1645735204219818
    2. '   ' → logprob: -1.9145735502243042
    3. 'classes' → logprob: -5.914573669433594
    4. ' class' → logprob: -7.039573669433594
    5. '(classes' → logprob: -8.039573669433594
    6. '_classes' → logprob: -9.289573669433594
    7. ' input' → logprob: -9.914573669433594
    8. '    ' → logprob: -9.914573669433594
    9. ' clases' → logprob: -10.039573669433594
    10. 'class' → logprob: -10.164573669433594

Token 23: ' d' (ID: 272)
  Prédit: ' classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' classes' → logprob: -0.06819786131381989
    2. 'classes' → logprob: -2.8181979656219482
    3. ' class' → logprob: -5.568197727203369
    4. 'class' → logprob: -6.568197727203369
    5. '   ' → logprob: -8.193198204040527
    6. ' line' → logprob: -8.568198204040527
    7. ' lines' → logprob: -9.193198204040527
    8. ' data' → logprob: -9.318198204040527
    9. ' input' → logprob: -10.568198204040527
    10. 'data' → logprob: -10.568198204040527

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.319208025932312
    2. ' =' → logprob: -1.569208025932312
    3. '_classes' → logprob: -1.694208025932312
    4. 'ay' → logprob: -2.4442081451416016
    5. ' ' → logprob: -2.8192081451416016
    6. 'ata' → logprob: -3.8192081451416016
    7. '_' → logprob: -4.069208145141602
    8. ' ,' → logprob: -4.069208145141602
    9. '=' → logprob: -4.069208145141602
    10. 'a' → logprob: -4.194208145141602

Token 25: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6109716892242432
    2. 'l' → logprob: -1.7359716892242432
    3. ' s' → logprob: -2.110971689224243
    4. 'c' → logprob: -2.360971689224243
    5. ' l' → logprob: -2.735971689224243
    6. 'w' → logprob: -2.860971689224243
    7. 'a' → logprob: -3.235971689224243
    8. 'p' → logprob: -3.235971689224243
    9. 't' → logprob: -3.360971689224243
    10. ' w' → logprob: -3.360971689224243

Token 26: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7986315488815308
    2. ' =' → logprob: -1.0486315488815308
    3. ',' → logprob: -1.6736315488815308
    4. ' ' → logprob: -6.04863166809082
    5. 'rray' → logprob: -6.42363166809082
    6. ',b' → logprob: -6.54863166809082
    7. 'r' → logprob: -6.54863166809082
    8. 'b' → logprob: -6.67363166809082
    9. 's' → logprob: -7.17363166809082
    10. 'rr' → logprob: -7.29863166809082

Token 27: ' k' (ID: 372)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12866370379924774
    2. 'l' → logprob: -3.3786637783050537
    3. 'c' → logprob: -3.5036637783050537
    4. ' b' → logprob: -3.8786637783050537
    5. 'p' → logprob: -4.753663539886475
    6. 's' → logprob: -4.878663539886475
    7. 't' → logprob: -5.003663539886475
    8. ' l' → logprob: -5.628663539886475
    9. 'v' → logprob: -6.378663539886475
    10. '_' → logprob: -6.753663539886475

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117844462394714
    2. '=' → logprob: -1.4061784744262695
    3. 'ey' → logprob: -11.53117847442627
    4. ' ' → logprob: -12.28117847442627
    5. ',' → logprob: -12.65617847442627
    6. '   ' → logprob: -12.90617847442627
    7. 'ind' → logprob: -13.15617847442627
    8. '  ' → logprob: -13.40617847442627
    9. 'e' → logprob: -14.40617847442627
    10. '=int' → logprob: -14.65617847442627

Token 29: ' t' (ID: 260)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0292158126831055
    2. 's' → logprob: -1.7792158126831055
    3. ' =' → logprob: -1.9042158126831055
    4. 'c' → logprob: -2.1542158126831055
    5. '=' → logprob: -2.7792158126831055
    6. 't' → logprob: -3.5292158126831055
    7. 'l' → logprob: -3.7792158126831055
    8. 'p' → logprob: -4.1542158126831055
    9. '_' → logprob: -4.1542158126831055
    10. 'v' → logprob: -4.2792158126831055

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742165207862854
    2. '=' → logprob: -0.9742165207862854
    3. ',' → logprob: -10.09921646118164
    4. 'okens' → logprob: -10.72421646118164
    5. 'imes' → logprob: -10.97421646118164
    6. 'ime' → logprob: -11.09921646118164
    7. ' ' → logprob: -11.47421646118164
    8. 'ype' → logprob: -12.22421646118164
    9. 'oken' → logprob: -12.34921646118164
    10. '   ' → logprob: -12.84921646118164

Token 31: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4287238121032715
    2. 'map' → logprob: -1.0537238121032715
    3. 'input' → logprob: -11.80372428894043
    4. '	map' → logprob: -12.17872428894043
    5. ' input' → logprob: -12.67872428894043
    6. ' ' → logprob: -12.92872428894043
    7. '(map' → logprob: -13.17872428894043
    8. '[' → logprob: -14.42872428894043
    9. '   ' → logprob: -14.42872428894043
    10. 'm' → logprob: -14.92872428894043

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021052942611277103
    2. '(' → logprob: -6.252105236053467
    3. '(str' → logprob: -9.752105712890625
    4. '(input' → logprob: -10.252105712890625
    5. '<int' → logprob: -10.502105712890625
    6. '(lambda' → logprob: -11.252105712890625
    7. 'int' → logprob: -11.627105712890625
    8. '[int' → logprob: -11.752105712890625
    9. '<|end|>' → logprob: -11.752105712890625
    10. '(
' → logprob: -12.502105712890625

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03806731849908829
    2. ',input' → logprob: -3.28806734085083
    3. '(input' → logprob: -11.913066864013672
    4. '(),' → logprob: -12.038066864013672
    5. '(' → logprob: -12.038066864013672
    6. ',int' → logprob: -12.913066864013672
    7. ' ,' → logprob: -13.288066864013672
    8. 'input' → logprob: -13.538066864013672
    9. ')' → logprob: -13.913066864013672
    10. '`,' → logprob: -15.288066864013672

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740793704986572
    2. 'input' → logprob: -0.9740793704986572
    3. ')' → logprob: -14.224079132080078
    4. ' ' → logprob: -14.599079132080078
    5. '(input' → logprob: -15.099079132080078
    6. ',input' → logprob: -15.599079132080078
    7. '_input' → logprob: -15.724079132080078
    8. '=input' → logprob: -15.849079132080078
    9. '[input' → logprob: -15.974079132080078
    10. '	input' → logprob: -16.099079132080078

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.24310302757658e-05
    2. '()' → logprob: -9.875072479248047
    3. ')' → logprob: -11.375072479248047
    4. '())' → logprob: -11.625072479248047
    5. ' ().' → logprob: -15.625072479248047
    6. '().__' → logprob: -16.375072479248047
    7. '(' → logprob: -16.625072479248047
    8. '()-' → logprob: -17.375072479248047
    9. '()
' → logprob: -17.500072479248047
    10. '();)' → logprob: -17.500072479248047

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.875
    3. '(split' → logprob: -16.375
    4. 'spl' → logprob: -16.375
    5. ')' → logprob: -17.0
    6. 'strip' → logprob: -17.25
    7. 'rstrip' → logprob: -19.25
    8. 'plit' → logprob: -19.375
    9. 's' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 37: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029959288076497614
    2. '))' → logprob: -8.750299453735352
    3. '()' → logprob: -9.125299453735352
    4. '())' → logprob: -10.500299453735352
    5. ')
' → logprob: -13.250299453735352
    6. '`)' → logprob: -14.000299453735352
    7. ')`' → logprob: -14.250299453735352
    8. '(' → logprob: -14.875299453735352
    9. ')))' → logprob: -15.500299453735352
    10. '')' → logprob: -15.500299453735352

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027202118188142776
    2. ')' → logprob: -4.152202129364014
    3. 'classes' → logprob: -5.027202129364014
    4. 'for' → logprob: -7.277202129364014
    5. '[' → logprob: -7.277202129364014
    6. 'if' → logprob: -7.652202129364014
    7. '```' → logprob: -7.652202129364014
    8. '       ' → logprob: -8.027201652526855
    9. ' classes' → logprob: -8.402201652526855
    10. 'c' → logprob: -8.652201652526855

Token 39: ' mask' (ID: 10910)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5110669136047363
    2. 'classes' → logprob: -1.1360669136047363
    3. ')' → logprob: -2.7610669136047363
    4. ' classes' → logprob: -4.886066913604736
    5. 'if' → logprob: -5.886066913604736
    6. '[' → logprob: -6.886066913604736
    7. '(classes' → logprob: -6.886066913604736
    8. 'class' → logprob: -7.261066913604736
    9. ' if' → logprob: -7.511066913604736
    10. 'd' → logprob: -8.011066436767578

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3077296018600464
    2. 's' → logprob: -1.6827296018600464
    3. '=' → logprob: -2.932729721069336
    4. '_' → logprob: -4.182729721069336
    5. ' |=' → logprob: -5.432729721069336
    6. ')' → logprob: -6.557729721069336
    7. ' ' → logprob: -6.932729721069336
    8. ' &=' → logprob: -7.057729721069336
    9. ' &' → logprob: -7.432729721069336
    10. '[' → logprob: -7.682729721069336

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6479759216308594
    2. '(' → logprob: -0.7729759216308594
    3. '1' → logprob: -5.022975921630859
    4. '((' → logprob: -5.772975921630859
    5. ' (' → logprob: -6.022975921630859
    6. ' ' → logprob: -6.647975921630859
    7. '(a' → logprob: -7.147975921630859
    8. 'a' → logprob: -7.272975921630859
    9. '(k' → logprob: -9.02297592163086
    10. 'd' → logprob: -9.64797592163086

Token 42: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5074732303619385
    2. '0' → logprob: -1.0074732303619385
    3. '1' → logprob: -3.7574732303619385
    4. '((' → logprob: -4.757472991943359
    5. 'a' → logprob: -7.882472991943359
    6. 'd' → logprob: -9.00747299194336
    7. '(a' → logprob: -9.13247299194336
    8. '[' → logprob: -9.75747299194336
    9. '(k' → logprob: -10.00747299194336
    10. 'k' → logprob: -10.00747299194336

Token 43: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1279665231704712
    2. 'x' → logprob: -1.3779665231704712
    3. 'for' → logprob: -1.7529665231704712
    4. '<|end|>' → logprob: -1.8779665231704712
    5. ' ' → logprob: -2.8779664039611816
    6. '   ' → logprob: -5.002966403961182
    7. '<|end|>' → logprob: -5.127966403961182
    8. 'b' → logprob: -5.127966403961182
    9. 'n' → logprob: -5.877966403961182
    10. ')' → logprob: -5.877966403961182

Token 44: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8113669753074646
    2. ' for' → logprob: -0.9363669753074646
    3. '<|end|>' → logprob: -2.6863670349121094
    4. ' ' → logprob: -3.4363670349121094
    5. 'x' → logprob: -3.8113670349121094
    6. '   ' → logprob: -4.061367034912109
    7. ' 
' → logprob: -5.436367034912109
    8. ',' → logprob: -6.186367034912109
    9. ';' → logprob: -6.311367034912109
    10. ')' → logprob: -6.436367034912109

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761305093765259
    2. 'for' (adapté à ' for') → logprob: -0.8261305093765259
    3. '   ' → logprob: -9.076130867004395
    4. 'f' → logprob: -10.951130867004395
    5. '	for' → logprob: -11.326130867004395
    6. '    ' → logprob: -11.576130867004395
    7. 'd' → logprob: -11.701130867004395
    8. ' f' → logprob: -12.076130867004395
    9. ' mask' → logprob: -12.576130867004395
    10. ' ' → logprob: -12.701130867004395

Token 46: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.19714714586734772
    2. ' i' → logprob: -2.4471471309661865
    3. '_' → logprob: -2.5721471309661865
    4. 'i' → logprob: -5.072147369384766
    5. ' j' → logprob: -5.447147369384766
    6. ' __' → logprob: -5.947147369384766
    7. 'j' → logprob: -6.697147369384766
    8. 'a' → logprob: -7.822147369384766
    9. ' ' → logprob: -7.822147369384766
    10. '__' → logprob: -8.572147369384766

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0066665890626609325
    2. 'in' → logprob: -5.131666660308838
    3. ' ' → logprob: -7.756666660308838
    4. '<|end|>' → logprob: -8.50666618347168
    5. ' i' → logprob: -10.38166618347168
    6. 'range' → logprob: -10.50666618347168
    7. '_' → logprob: -11.38166618347168
    8. ' ,' → logprob: -12.13166618347168
    9. 's' → logprob: -12.63166618347168
    10. ' ' → logprob: -12.75666618347168

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007614674977958202
    2. 'range' → logprob: -4.882614612579346
    3. ' ran' → logprob: -12.757615089416504
    4. ' ' → logprob: -13.757615089416504
    5. ' r' → logprob: -13.757615089416504
    6. '	range' → logprob: -14.132615089416504
    7. ' xrange' → logprob: -14.257615089416504
    8. ' ra' → logprob: -14.382615089416504
    9. 'r' → logprob: -15.007615089416504
    10. '(range' → logprob: -15.382615089416504

Token 49: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.020885655656456947
    2. '(L' → logprob: -4.645885467529297
    3. '(' → logprob: -4.770885467529297
    4. '(a' → logprob: -6.270885467529297
    5. '(N' → logprob: -8.145885467529297
    6. '(t' → logprob: -8.645885467529297
    7. '(d' → logprob: -9.520885467529297
    8. '(K' → logprob: -10.020885467529297
    9. '(n' → logprob: -10.520885467529297
    10. '(M' → logprob: -10.645885467529297

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028652694076299667
    2. ' ):' → logprob: -3.6536526679992676
    3. '):
' → logprob: -7.028652667999268
    4. ')' → logprob: -7.153652667999268
    5. '   ' → logprob: -7.903652667999268
    6. ' )' → logprob: -8.903653144836426
    7. ' ' → logprob: -9.778653144836426
    8. '+' → logprob: -10.278653144836426
    9. ' ):
' → logprob: -10.278653144836426
    10. ':' → logprob: -11.153653144836426

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1965395212173462
    2. '    ' → logprob: -1.4465395212173462
    3. ' ' → logprob: -1.5715395212173462
    4. ' mask' → logprob: -2.5715394020080566
    5. '<|end|>' → logprob: -3.0715394020080566
    6. ' 
' → logprob: -3.4465394020080566
    7. '       ' → logprob: -3.5715394020080566
    8. '	mask' → logprob: -4.071539402008057
    9. ' s' → logprob: -5.071539402008057
    10. 'mask' → logprob: -5.196539402008057

Token 52: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.010054723359644413
    2. 'mask' (adapté à ' mask') → logprob: -5.135054588317871
    3. ' s' → logprob: -7.260054588317871
    4. ' i' → logprob: -7.510054588317871
    5. ' 
' → logprob: -7.760054588317871
    6. ' ' → logprob: -7.885054588317871
    7. ' d' → logprob: -7.885054588317871
    8. ' m' → logprob: -8.010054588317871
    9. ' n' → logprob: -8.385054588317871
    10. ' ' → logprob: -8.385054588317871

Token 53: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.2521247863769531
    2. ' |=' → logprob: -1.5021247863769531
    3. ' <<=' → logprob: -9.127124786376953
    4. ' |' → logprob: -10.377124786376953
    5. '1' → logprob: -10.502124786376953
    6. ' ' → logprob: -11.377124786376953
    7. '<<' → logprob: -12.252124786376953
    8. ' =' → logprob: -12.627124786376953
    9. '=' → logprob: -12.752124786376953
    10. ' ' → logprob: -13.127124786376953

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31529682874679565
    2. '(' → logprob: -2.1902968883514404
    3. ' ' → logprob: -2.1902968883514404
    4. ' (' → logprob: -3.0652968883514404
    5. '   ' → logprob: -12.94029712677002
    6. '2' → logprob: -13.12779712677002
    7. '```' → logprob: -13.37779712677002
    8. '(int' → logprob: -13.69029712677002
    9. ' ' → logprob: -13.69029712677002
    10. '(
' → logprob: -13.81529712677002

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20159003138542175
    2. '(' → logprob: -1.7015900611877441
    3. ' (' → logprob: -9.201589584350586
    4. ' ' → logprob: -9.576589584350586
    5. '   ' → logprob: -13.201589584350586
    6. '(int' → logprob: -13.826589584350586
    7. '```' → logprob: -13.826589584350586
    8. 'int' → logprob: -14.826589584350586
    9. '2' → logprob: -14.951589584350586
    10. '[' → logprob: -15.201589584350586

Token 56: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.054338227957487106
    2. ' <<' → logprob: -3.429338216781616
    3. '<' → logprob: -3.929338216781616
    4. '0' → logprob: -8.054338455200195
    5. '>' → logprob: -8.929338455200195
    6. '<<<' → logprob: -9.304338455200195
    7. '000' → logprob: -9.929338455200195
    8. '&lt' → logprob: -10.054338455200195
    9. '<<(' → logprob: -10.429338455200195
    10. ' <<=' → logprob: -10.554338455200195

Token 57: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3567490875720978
    2. '(a' → logprob: -2.2317490577697754
    3. '(i' → logprob: -2.9817490577697754
    4. 'i' → logprob: -3.3567490577697754
    5. 'int' → logprob: -3.3567490577697754
    6. 't' → logprob: -3.9817490577697754
    7. ' (' → logprob: -4.231749057769775
    8. '(t' → logprob: -4.481749057769775
    9. '(int' → logprob: -4.606749057769775
    10. '(input' → logprob: -5.481749057769775

Token 58: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07601862400770187
    2. 'int' → logprob: -3.5760185718536377
    3. 'd' → logprob: -4.201018810272217
    4. 't' → logprob: -4.326018810272217
    5. ' a' → logprob: -4.576018810272217
    6. 'input' → logprob: -6.201018810272217
    7. ' int' → logprob: -6.451018810272217
    8. '(a' → logprob: -7.201018810272217
    9. 'i' → logprob: -7.326018810272217
    10. ' t' → logprob: -7.826018810272217

Token 59: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5652244687080383
    2. '-' → logprob: -0.9402244687080383
    3. '+i' → logprob: -3.9402244091033936
    4. '[i' → logprob: -5.315224647521973
    5. 'i' → logprob: -5.565224647521973
    6. ' +' → logprob: -5.690224647521973
    7. ' i' → logprob: -6.065224647521973
    8. '+' → logprob: -6.065224647521973
    9. ' ' → logprob: -6.065224647521973
    10. ' *' → logprob: -7.440224647521973

Token 60: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7110217213630676
    2. 'L' → logprob: -1.7110216617584229
    3. '7' → logprob: -2.961021661758423
    4. '100' → logprob: -3.086021661758423
    5. ' ' → logprob: -3.336021661758423
    6. '10' → logprob: -3.336021661758423
    7. ' i' → logprob: -3.836021661758423
    8. '20' → logprob: -4.086021900177002
    9. '0' → logprob: -4.336021900177002
    10. '31' → logprob: -4.711021900177002

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6678102612495422
    2. ' +' → logprob: -1.5428102016448975
    3. '+i' → logprob: -1.7928102016448975
    4. ' -' → logprob: -2.9178102016448975
    5. '-' → logprob: -3.0428102016448975
    6. '+a' → logprob: -6.292810440063477
    7. ' ' → logprob: -6.542810440063477
    8. '-i' → logprob: -7.667810440063477
    9. '+j' → logprob: -8.042810440063477
    10. '   ' → logprob: -8.542810440063477

Token 62: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026162808761000633
    2. 'i' → logprob: -4.526162624359131
    3. ' a' → logprob: -4.901162624359131
    4. 't' → logprob: -5.901162624359131
    5. 'int' → logprob: -6.276162624359131
    6. '(a' → logprob: -6.901162624359131
    7. 'L' → logprob: -7.651162624359131
    8. '(i' → logprob: -7.901162624359131
    9. ' i' → logprob: -8.151163101196289
    10. ' (' → logprob: -8.776163101196289

Token 63: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08206329494714737
    2. 't' → logprob: -2.5820631980895996
    3. 'i' → logprob: -6.3320631980896
    4. 'int' → logprob: -7.5820631980896
    5. ' a' → logprob: -8.332063674926758
    6. 'input' → logprob: -8.457063674926758
    7. '   ' → logprob: -9.207063674926758
    8. 'L' → logprob: -9.457063674926758
    9. '(t' → logprob: -9.582063674926758
    10. '(a' → logprob: -9.957063674926758

Token 64: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0840543508529663
    2. ' +' → logprob: -1.2090543508529663
    3. '-' → logprob: -1.8340543508529663
    4. '+' → logprob: -2.209054470062256
    5. '+i' → logprob: -2.459054470062256
    6. ' *' → logprob: -5.834054470062256
    7. ' ' → logprob: -6.209054470062256
    8. '*' → logprob: -6.334054470062256
    9. '*i' → logprob: -8.209053993225098
    10. 'i' → logprob: -8.334053993225098

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008572661899961531
    2. ' ' → logprob: -7.250857353210449
    3. 'i' → logprob: -9.12585735321045
    4. ' i' → logprob: -11.62585735321045
    5. '2' → logprob: -11.75085735321045
    6. '   ' → logprob: -12.25085735321045
    7. 'k' → logprob: -13.12585735321045
    8. '-' → logprob: -13.43835735321045
    9. '(' → logprob: -13.50085735321045
    10. '0' → logprob: -14.25085735321045

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002820736262947321
    2. ' ' → logprob: -8.500282287597656
    3. 'i' → logprob: -10.250282287597656
    4. '2' → logprob: -10.750282287597656
    5. 'k' → logprob: -12.687782287597656
    6. '   ' → logprob: -12.750282287597656
    7. '3' → logprob: -13.875282287597656
    8. ' i' → logprob: -14.125282287597656
    9. '(' → logprob: -14.187782287597656
    10. '-' → logprob: -14.250282287597656

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20499522984027863
    2. '+' → logprob: -2.3299951553344727
    3. ')' → logprob: -2.7049951553344727
    4. '))' → logprob: -4.079995155334473
    5. '+i' → logprob: -6.579995155334473
    6. ' ' → logprob: -7.204995155334473
    7. ' )' → logprob: -7.454995155334473
    8. ' -' → logprob: -7.579995155334473
    9. ' ))' → logprob: -7.954995155334473
    10. ')))' → logprob: -8.329995155334473

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04864118620753288
    2. ' i' → logprob: -3.0486412048339844
    3. ' ' → logprob: -10.673641204833984
    4. ')' → logprob: -11.798641204833984
    5. '_i' → logprob: -12.423641204833984
    6. ')i' → logprob: -12.673641204833984
    7. ' (' → logprob: -13.048641204833984
    8. '   ' → logprob: -13.173641204833984
    9. ' t' → logprob: -13.173641204833984
    10. 'k' → logprob: -13.173641204833984

Token 69: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03709379956126213
    2. ')' → logprob: -3.4120938777923584
    3. ' ))' → logprob: -5.912093639373779
    4. ')))' → logprob: -7.787093639373779
    5. ' )' → logprob: -8.412094116210938
    6. '))
' → logprob: -9.662094116210938
    7. ' ' → logprob: -11.412094116210938
    8. '))

' → logprob: -12.287094116210938
    9. ')
' → logprob: -12.787094116210938
    10. ')%' → logprob: -12.787094116210938

Token 70: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059175945818424225
    2. '<|end|>' → logprob: -3.434175968170166
    3. '   ' → logprob: -4.559175968170166
    4. ')
' → logprob: -5.309175968170166
    5. '
' → logprob: -5.809175968170166
    6. '\n' → logprob: -6.434175968170166
    7. 'newline' → logprob: -6.809175968170166
    8. '```' → logprob: -7.309175968170166
    9. '<|end|>' → logprob: -7.434175968170166
    10. '    
' → logprob: -7.684175968170166

Token 71: ' classes' (ID: 9778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053422700613737106
    2. '   ' → logprob: -3.428422689437866
    3. 'classes' (adapté à ' classes') → logprob: -4.803422927856445
    4. ' classes' → logprob: -5.553422927856445
    5. '\n' → logprob: -6.178422927856445
    6. '<|end|>' → logprob: -6.553422927856445
    7. 'newline' → logprob: -6.553422927856445
    8. ')
' → logprob: -7.178422927856445
    9. '```' → logprob: -7.553422927856445
    10. '(classes' → logprob: -8.303422927856445

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08914066851139069
    2. '.' → logprob: -2.4641406536102295
    3. '.app' → logprob: -9.339140892028809
    4. '.push' → logprob: -10.714140892028809
    5. '.ap' → logprob: -10.964140892028809
    6. '<|end|>' → logprob: -11.214140892028809
    7. '​.' → logprob: -11.214140892028809
    8. '.py' → logprob: -11.464140892028809
    9. ' .' → logprob: -11.839140892028809
    10. '.setdefault' → logprob: -11.964140892028809

Token 73: '((' (ID: 2054)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.005316531751304865
    2. '(' → logprob: -5.255316734313965
    3. '((' → logprob: -9.505316734313965
    4. '(m' → logprob: -12.380316734313965
    5. ' (' → logprob: -13.255316734313965
    6. 'mask' → logprob: -14.005316734313965
    7. '(
' → logprob: -14.755316734313965
    8. '(bit' → logprob: -15.755316734313965
    9. '(max' → logprob: -16.25531578063965
    10. '(len' → logprob: -16.38031578063965

Token 74: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.040307849645614624
    2. ' mask' → logprob: -3.7903077602386475
    3. 'd' → logprob: -4.540307998657227
    4. 't' → logprob: -5.165307998657227
    5. ' d' → logprob: -9.040307998657227
    6. ' t' → logprob: -9.415307998657227
    7. '(mask' → logprob: -9.415307998657227
    8. 'k' → logprob: -9.540307998657227
    9. 'N' → logprob: -10.290307998657227
    10. 'L' → logprob: -10.290307998657227

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00834080670028925
    2. ')' → logprob: -4.883340835571289
    3. '))' → logprob: -7.758340835571289
    4. ',)' → logprob: -8.508340835571289
    5. ',
' → logprob: -9.883340835571289
    6. ' ,' → logprob: -10.758340835571289
    7. ',t' → logprob: -11.383340835571289
    8. ' )' → logprob: -12.508340835571289
    9. '),' → logprob: -12.633340835571289
    10. ',

' → logprob: -13.133340835571289

Token 76: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2824016213417053
    2. ' t' → logprob: -1.4074015617370605
    3. '   ' → logprob: -8.157402038574219
    4. ' ' → logprob: -8.157402038574219
    5. 'L' → logprob: -8.657402038574219
    6. ' L' → logprob: -8.782402038574219
    7. '1' → logprob: -10.094902038574219
    8. ' ' → logprob: -10.469902038574219
    9. '(t' → logprob: -10.594902038574219
    10. ')' → logprob: -10.719902038574219

Token 77: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08938750624656677
    2. ')' → logprob: -2.4643874168395996
    3. ',' → logprob: -7.8393874168396
    4. ' ))' → logprob: -10.714387893676758
    5. '))
' → logprob: -11.714387893676758
    6. ' )' → logprob: -11.964387893676758
    7. '),' → logprob: -12.089387893676758
    8. ')))' → logprob: -12.214387893676758
    9. '+' → logprob: -13.214387893676758
    10. ')
' → logprob: -13.964387893676758

Token 78: 'from' (ID: 2845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006089358124881983
    2. 'DP' → logprob: -6.381089210510254
    3. 'time' → logprob: -7.131089210510254
    4. 'classes' → logprob: -7.506089210510254
    5. ' dp' → logprob: -8.006089210510254
    6. 'answer' → logprob: -8.381089210510254
    7. 'dist' → logprob: -8.506089210510254
    8. 'from' → logprob: -8.631089210510254
    9. '#' → logprob: -8.756089210510254
    10. 'visited' → logprob: -9.006089210510254

Token 79: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7871428728103638
    2. ' itertools' → logprob: -1.0371428728103638
    3. 'collections' → logprob: -1.7871428728103638
    4. ' heap' → logprob: -4.787142753601074
    5. 'heap' → logprob: -5.287142753601074
    6. ' math' → logprob: -5.662142753601074
    7. 'it' → logprob: -6.412142753601074
    8. ' functools' → logprob: -6.662142753601074
    9. '_' → logprob: -7.037142753601074
    10. ' sys' → logprob: -7.287142753601074

Token 80: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.38694292306900024
    2. 'import' → logprob: -1.1369428634643555
    3. ' ' → logprob: -10.386942863464355
    4. ' ' → logprob: -11.886942863464355
    5. '_import' → logprob: -12.386942863464355
    6. 'from' → logprob: -12.511942863464355
    7. ' defaultdict' → logprob: -12.886942863464355
    8. '<|end|>' → logprob: -12.886942863464355
    9. '	import' → logprob: -13.011942863464355
    10. ' a' → logprob: -13.136942863464355

Token 81: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5770379304885864
    2. 'deque' → logprob: -0.8270379304885864
    3. ' defaultdict' → logprob: -6.827037811279297
    4. 'de' → logprob: -12.202037811279297
    5. 'default' → logprob: -12.327037811279297
    6. 'collections' → logprob: -13.202037811279297
    7. ' collections' → logprob: -14.827037811279297
    8. 'queue' → logprob: -14.952037811279297
    9. ' queue' → logprob: -14.952037811279297
    10. 'heap' → logprob: -15.077037811279297

Token 82: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018316633999347687
    2. ' dp' → logprob: -4.018316745758057
    3. 'DP' → logprob: -9.893316268920898
    4. 'dist' → logprob: -10.143316268920898
    5. 'time' → logprob: -10.893316268920898
    6. ' DP' → logprob: -11.768316268920898
    7. 'cost' → logprob: -12.143316268920898
    8. 'd' → logprob: -12.393316268920898
    9. 'INF' → logprob: -12.393316268920898
    10. 'graph' → logprob: -12.643316268920898

Token 83: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.44312788406387e-05
    2. 'time' → logprob: -11.625054359436035
    3. ' dp' → logprob: -11.625054359436035
    4. 'DP' → logprob: -11.625054359436035
    5. 'INF' → logprob: -12.375054359436035
    6. 'dist' → logprob: -12.500054359436035
    7. 'ans' → logprob: -12.625054359436035
    8. '#' → logprob: -13.000054359436035
    9. 'cost' → logprob: -13.000054359436035
    10. 'memo' → logprob: -13.250054359436035

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019313741941004992
    2. '=' → logprob: -6.251931190490723
    3. ' ' → logprob: -13.501931190490723
    4. '[' → logprob: -13.626931190490723
    5. ')' → logprob: -17.00193214416504
    6. '[]' → logprob: -17.37693214416504
    7. '1' → logprob: -17.62693214416504
    8. ' =[' → logprob: -17.62693214416504
    9. '=[]' → logprob: -18.00193214416504
    10. ']' → logprob: -18.00193214416504

Token 85: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0011814195895567536
    2. ' defaultdict' → logprob: -6.876181602478027
    3. '{' → logprob: -9.626181602478027
    4. '[' → logprob: -9.751181602478027
    5. '(default' → logprob: -12.001181602478027
    6. ' default' → logprob: -12.376181602478027
    7. '"default' → logprob: -12.626181602478027
    8. ' [' → logprob: -12.876181602478027
    9. '.default' → logprob: -13.376181602478027
    10. ''default' → logprob: -13.376181602478027

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4742089509963989
    2. '(lambda' → logprob: -0.9742089509963989
    3. 'int' → logprob: -10.09920883178711
    4. '[int' → logprob: -10.34920883178711
    5. '(' → logprob: -10.84920883178711
    6. 'lambda' → logprob: -11.34920883178711
    7. '<int' → logprob: -11.47420883178711
    8. '(bool' → logprob: -11.84920883178711
    9. '```' → logprob: -12.84920883178711
    10. ' (' → logprob: -13.59920883178711

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020830852736253291
    2. ')
' → logprob: -8.750207901000977
    3. ',' → logprob: -11.000207901000977
    4. ' )' → logprob: -11.625207901000977
    5. ')

' → logprob: -12.375207901000977
    6. '))' → logprob: -12.500207901000977
    7. '{' → logprob: -12.625207901000977
    8. ')
' → logprob: -12.875207901000977
    9. ')`' → logprob: -13.000207901000977
    10. ',)' → logprob: -13.125207901000977

Token 88: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005859112832695246
    2. 'for' → logprob: -5.255858898162842
    3. '0' → logprob: -8.255859375
    4. ' for' → logprob: -8.630859375
    5. ' dp' → logprob: -8.880859375
    6. '[' → logprob: -12.005859375
    7. '(dp' → logprob: -12.255859375
    8. ')' → logprob: -12.255859375
    9. '```' → logprob: -12.505859375
    10. ']' → logprob: -12.630859375

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011038987431675196
    2. '[(' → logprob: -6.87610387802124
    3. ' =' → logprob: -10.251104354858398
    4. '0' → logprob: -11.626104354858398
    5. ' [' → logprob: -11.876104354858398
    6. '\[' → logprob: -12.376104354858398
    7. '.clear' → logprob: -12.751104354858398
    8. ' ' → logprob: -13.001104354858398
    9. '[-' → logprob: -13.251104354858398
    10. '[{' → logprob: -13.626104354858398

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. '(' → logprob: -11.375024795532227
    3. ' ' → logprob: -11.750024795532227
    4. '000' → logprob: -14.000024795532227
    5. ')' → logprob: -14.187524795532227
    6. '1' → logprob: -14.625024795532227
    7. '00' → logprob: -14.750024795532227
    8. '```' → logprob: -14.937524795532227
    9. '[' → logprob: -15.125024795532227
    10. '-' → logprob: -15.562524795532227

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002226093056378886
    2. ' ]' → logprob: -8.875222206115723
    3. ']=' → logprob: -9.500222206115723
    4. ')]' → logprob: -12.000222206115723
    5. ')' → logprob: -14.375222206115723
    6. '`]' → logprob: -15.000222206115723
    7. ',' → logprob: -16.12522315979004
    8. '()]' → logprob: -16.25022315979004
    9. ']+=' → logprob: -16.25022315979004
    10. '0' → logprob: -16.37522315979004

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198953464627266
    2. '=' → logprob: -2.8119895458221436
    3. ' +=' → logprob: -12.311989784240723
    4. ',' → logprob: -12.686989784240723
    5. ' ' → logprob: -12.811989784240723
    6. '0' → logprob: -12.936989784240723
    7. '[' → logprob: -13.686989784240723
    8. ' |=' → logprob: -13.811989784240723
    9. '=True' → logprob: -13.936989784240723
    10. ']' → logprob: -14.061989784240723

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003936152206733823
    2. '1' → logprob: -8.250393867492676
    3. ' ' → logprob: -9.125393867492676
    4. '100' → logprob: -11.250393867492676
    5. 'float' → logprob: -12.250393867492676
    6. '10' → logprob: -13.250393867492676
    7. '-' → logprob: -14.000393867492676
    8. '24' → logprob: -15.187893867492676
    9. '864' → logprob: -15.250393867492676
    10. 'True' → logprob: -15.500393867492676

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005306334351189435
    2. '1' → logprob: -7.62553071975708
    3. '100' → logprob: -10.375530242919922
    4. '10' → logprob: -12.750530242919922
    5. '-' → logprob: -13.750530242919922
    6. '24' → logprob: -14.000530242919922
    7. '864' → logprob: -14.000530242919922
    8. ' ' → logprob: -14.250530242919922
    9. 'float' → logprob: -14.250530242919922
    10. 'T' → logprob: -14.563030242919922

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6393446326255798
    2. 'for' → logprob: -1.1393446922302246
    3. ' for' → logprob: -2.1393446922302246
    4. '\n' → logprob: -4.014344692230225
    5. '<|end|>' → logprob: -5.014344692230225
    6. ' 
' → logprob: -5.139344692230225
    7. '' → logprob: -6.389344692230225
    8. '
' → logprob: -7.889344692230225
    9. '  
' → logprob: -7.889344692230225
    10. '0' → logprob: -8.389344215393066

Token 96: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02986723557114601
    2. ' for' → logprob: -3.529867172241211
    3. ')' → logprob: -9.654867172241211
    4. '
' → logprob: -11.779867172241211
    5. ',' → logprob: -12.029867172241211
    6. 'max' → logprob: -12.279867172241211
    7. '+' → logprob: -12.654867172241211
    8. ' 
' → logprob: -12.779867172241211
    9. '0' → logprob: -12.904867172241211
    10. '```' → logprob: -12.904867172241211

Token 97: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.061180151998996735
    2. 'mask' → logprob: -3.1861801147460938
    3. ' cls' → logprob: -4.561180114746094
    4. ' class' → logprob: -6.311180114746094
    5. ' c' → logprob: -6.436180114746094
    6. ' m' → logprob: -6.811180114746094
    7. ' _' → logprob: -7.436180114746094
    8. ' (' → logprob: -7.686180114746094
    9. 'cls' → logprob: -7.811180114746094
    10. '(mask' → logprob: -7.936180114746094

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13213245570659637
    2. ' in' → logprob: -2.1321325302124023
    3. ' ,' → logprob: -5.507132530212402
    4. 'in' → logprob: -7.632132530212402
    5. '2' → logprob: -8.632132530212402
    6. '_mask' → logprob: -9.007132530212402
    7. '_,' → logprob: -9.257132530212402
    8. 'mask' → logprob: -10.007132530212402
    9. '_subset' → logprob: -10.007132530212402
    10. '_in' → logprob: -10.507132530212402

Token 99: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22729530930519104
    2. 'time' → logprob: -2.102295398712158
    3. ' t' → logprob: -2.727295398712158
    4. ' time' → logprob: -4.602295398712158
    5. 'cost' → logprob: -5.352295398712158
    6. ' cost' → logprob: -7.352295398712158
    7. 'duration' → logprob: -8.727294921875
    8. ' ' → logprob: -10.227294921875
    9. '   ' → logprob: -10.602294921875
    10. ' duration' → logprob: -10.852294921875

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011789841577410698
    2. 'in' → logprob: -4.511789798736572
    3. ',' → logprob: -7.261789798736572
    4. 's' → logprob: -11.51179027557373
    5. ')' → logprob: -11.63679027557373
    6. 'time' → logprob: -12.26179027557373
    7. 'ime' → logprob: -12.51179027557373
    8. ' ' → logprob: -13.26179027557373
    9. 'n' → logprob: -13.76179027557373
    10. 'inue' → logprob: -13.88679027557373

Token 101: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.11284296959638596
    2. ' classes' → logprob: -2.2378430366516113
    3. '(classes' → logprob: -10.987842559814453
    4. ' ' → logprob: -13.612842559814453
    5. 'class' → logprob: -13.612842559814453
    6. '   ' → logprob: -14.737842559814453
    7. ' clases' → logprob: -15.112842559814453
    8. '.classes' → logprob: -15.987842559814453
    9. 'sorted' → logprob: -16.487842559814453
    10. '```' → logprob: -16.737842559814453

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.4272752852994017e-05
    2. ':
' → logprob: -11.25002384185791
    3. ' :' → logprob: -11.87502384185791
    4. '):' → logprob: -13.00002384185791
    5. ',' → logprob: -13.75002384185791
    6. ':**' → logprob: -14.87502384185791
    7. '<|end|>' → logprob: -15.87502384185791
    8. '=' → logprob: -16.250024795532227
    9. ':

' → logprob: -16.750024795532227
    10. ' in' → logprob: -17.500024795532227

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19233380258083344
    2. '<|end|>' → logprob: -2.942333698272705
    3. ' for' → logprob: -3.067333698272705
    4. ' new' → logprob: -3.192333698272705
    5. '
' → logprob: -4.192333698272705
    6. ' ' → logprob: -5.692333698272705
    7. '    
' → logprob: -5.817333698272705
    8. '<|end|>' → logprob: -6.192333698272705
    9. '```' → logprob: -6.442333698272705
    10. ' next' → logprob: -6.692333698272705

Token 104: ' for' (ID: 395)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5844966173171997
    2. 'new' → logprob: -0.8344966173171997
    3. 'for' (adapté à ' for') → logprob: -6.20949649810791
    4. 'dp' → logprob: -6.45949649810791
    5. 'next' → logprob: -6.95949649810791
    6. 'temp' → logprob: -6.95949649810791
    7. ' for' → logprob: -7.08449649810791
    8. ' nd' → logprob: -7.20949649810791
    9. 'nd' → logprob: -7.83449649810791
    10. ' next' → logprob: -8.08449649810791

Token 105: ' used' (ID: 2061)
  Prédit: ' state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' state' → logprob: -1.8150521516799927
    2. 'cur' → logprob: -1.9400521516799927
    3. 'state' → logprob: -2.315052032470703
    4. ' current' → logprob: -2.315052032470703
    5. ' cur' → logprob: -2.440052032470703
    6. ' existing' → logprob: -2.690052032470703
    7. 'curr' → logprob: -2.690052032470703
    8. 'old' → logprob: -3.065052032470703
    9. 'current' → logprob: -3.315052032470703
    10. 'existing' → logprob: -3.690052032470703

Token 106: ',' (ID: 11)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.08983640372753143
    2. ' in' → logprob: -2.839836359024048
    3. ',' → logprob: -4.589836597442627
    4. 'mask' → logprob: -4.964836597442627
    5. 'in' → logprob: -5.214836597442627
    6. '_masks' → logprob: -5.714836597442627
    7. '_' → logprob: -7.214836597442627
    8. '_MASK' → logprob: -8.839836120605469
    9. 's' → logprob: -8.964836120605469
    10. ',_' → logprob: -9.089836120605469

Token 107: ' val' (ID: 1459)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.4307703673839569
    2. 'time' → logprob: -1.3057703971862793
    3. ' val' → logprob: -3.4307703971862793
    4. 'val' → logprob: -3.9307703971862793
    5. ' value' → logprob: -4.555770397186279
    6. ' cost' → logprob: -5.430770397186279
    7. 'value' → logprob: -5.680770397186279
    8. 'cost' → logprob: -5.680770397186279
    9. ' total' → logprob: -6.680770397186279
    10. ' v' → logprob: -7.305770397186279

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10037974268198013
    2. 'in' → logprob: -2.350379705429077
    3. ',' → logprob: -9.100379943847656
    4. ' ' → logprob: -9.975379943847656
    5. 'ed' → logprob: -12.975379943847656
    6. 'ine' → logprob: -13.475379943847656
    7. 'n' → logprob: -13.600379943847656
    8. 'e' → logprob: -13.975379943847656
    9. '  ' → logprob: -13.975379943847656
    10. '
' → logprob: -13.975379943847656

Token 109: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18712696433067322
    2. ' list' → logprob: -1.8121269941329956
    3. 'dp' → logprob: -4.937127113342285
    4. ' dp' → logprob: -8.687127113342285
    5. '[list' → logprob: -12.437127113342285
    6. 'sorted' → logprob: -13.437127113342285
    7. 'li' → logprob: -13.937127113342285
    8. '(list' → logprob: -14.062127113342285
    9. 'dict' → logprob: -14.187127113342285
    10. ' ' → logprob: -14.437127113342285

Token 110: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -12.000011444091797
    3. 'dp' → logprob: -12.250011444091797
    4. '(d' → logprob: -17.000011444091797
    5. '_dp' → logprob: -17.500011444091797
    6. ' dp' → logprob: -17.625011444091797
    7. '	dp' → logprob: -18.000011444091797
    8. '(dt' → logprob: -18.250011444091797
    9. '()' → logprob: -18.250011444091797
    10. '(
' → logprob: -18.625011444091797

Token 111: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0002406090497970581
    2. '.' → logprob: -9.250240325927734
    3. 'items' → logprob: -9.750240325927734
    4. '.iteritems' → logprob: -10.375240325927734
    5. '().' → logprob: -10.625240325927734
    6. '):' → logprob: -10.750240325927734
    7. ').' → logprob: -13.250240325927734
    8. '.Items' → logprob: -13.375240325927734
    9. ' items' → logprob: -13.500240325927734
    10. ' .' → logprob: -13.500240325927734

Token 112: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003333968110382557
    2. '):' → logprob: -5.878334045410156
    3. '():' → logprob: -7.753334045410156
    4. '()):
' → logprob: -9.628334045410156
    5. ')' → logprob: -11.128334045410156
    6. '())' → logprob: -11.128334045410156
    7. '(' → logprob: -12.878334045410156
    8. '());' → logprob: -14.878334045410156
    9. '[]):' → logprob: -15.378334045410156
    10. '()`' → logprob: -15.378334045410156

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011756856925785542
    2. '
' → logprob: -5.261756896972656
    3. ' if' → logprob: -6.011756896972656
    4. '   ' → logprob: -6.136756896972656
    5. '        
' → logprob: -8.011756896972656
    6. ':
' → logprob: -8.261756896972656
    7. '    
' → logprob: -8.511756896972656
    8. 'if' → logprob: -8.636756896972656
    9. ' ' → logprob: -8.761756896972656
    10. ':' → logprob: -8.761756896972656

Token 114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5264891982078552
    2. ' if' → logprob: -1.7764892578125
    3. '           ' → logprob: -2.1514892578125
    4. '
' → logprob: -2.1514892578125
    5. '```' → logprob: -6.4014892578125
    6. '       ' → logprob: -6.7764892578125
    7. ' used' → logprob: -6.7764892578125
    8. '   ' → logprob: -6.7764892578125
    9. 'used' → logprob: -7.1514892578125
    10. '
' → logprob: -7.5264892578125

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47395336627960205
    2. 'used' → logprob: -1.348953366279602
    3. ' used' → logprob: -2.4739532470703125
    4. ' (' → logprob: -3.4739532470703125
    5. ' not' → logprob: -6.8489532470703125
    6. '(mask' → logprob: -6.9739532470703125
    7. '(not' → logprob: -7.5989532470703125
    8. 'not' → logprob: -9.098953247070312
    9. ' mask' → logprob: -10.223953247070312
    10. 'mask' → logprob: -10.723953247070312

Token 116: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.002587192924693227
    2. ' used' → logprob: -6.00258731842041
    3. 'mask' → logprob: -9.12758731842041
    4. ' mask' → logprob: -13.87758731842041
    5. '(mask' → logprob: -14.12758731842041
    6. '(' → logprob: -14.25258731842041
    7. '.used' → logprob: -15.75258731842041
    8. '-used' → logprob: -16.252586364746094
    9. ' ' → logprob: -16.377586364746094
    10. '_used' → logprob: -16.752586364746094

Token 117: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12696747481822968
    2. ' &' → logprob: -2.126967430114746
    3. '&
' → logprob: -10.501967430114746
    4. ' &
' → logprob: -12.251967430114746
    5. '&amp' → logprob: -12.501967430114746
    6. '&m' → logprob: -13.751967430114746
    7. '＆' → logprob: -15.001967430114746
    8. '|' → logprob: -15.126967430114746
    9. '&nbsp' → logprob: -15.126967430114746
    10. '&A' → logprob: -15.626967430114746

Token 118: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.523162841796875
    2. 'mask' → logprob: -0.898162841796875
    3. '	mask' → logprob: -11.148162841796875
    4. ' ' → logprob: -11.273162841796875
    5. '(mask' → logprob: -11.898162841796875
    6. ')' → logprob: -13.523162841796875
    7. '_mask' → logprob: -13.773162841796875
    8. 'm' → logprob: -13.898162841796875
    9. '   ' → logprob: -14.710662841796875
    10. ' ' → logprob: -15.335662841796875

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013645237777382135
    2. ')==' → logprob: -6.626364707946777
    3. ' )' → logprob: -10.501364707946777
    4. '==' → logprob: -11.501364707946777
    5. '）' → logprob: -14.376364707946777
    6. ' ==' → logprob: -15.626364707946777
    7. '0' → logprob: -16.25136375427246
    8. ')=' → logprob: -16.75136375427246
    9. ')
' → logprob: -17.25136375427246
    10. ')

' → logprob: -17.37636375427246

Token 120: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016763772815465927
    2. ' ==' → logprob: -4.141763687133789
    3. ')==' → logprob: -8.016763687133789
    4. ')' → logprob: -8.141763687133789
    5. '=' → logprob: -9.766763687133789
    6. ':' → logprob: -11.016763687133789
    7. ']==' → logprob: -11.391763687133789
    8. '==
' → logprob: -11.391763687133789
    9. '===' → logprob: -12.016763687133789
    10. '()==' → logprob: -13.391763687133789

Token 121: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.51104736328125
    4. '۰' → logprob: -19.26104736328125
    5. '  ' → logprob: -19.38604736328125
    6. '０' → logprob: -20.13604736328125
    7. '00' → logprob: -20.51104736328125
    8. '   ' → logprob: -20.51104736328125
    9. '	' → logprob: -20.63604736328125
    10. '```' → logprob: -20.63604736328125

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -18.87500762939453
    4. '０' → logprob: -19.75000762939453
    5. '০' → logprob: -20.25000762939453
    6. '000' → logprob: -20.37500762939453
    7. '00' → logprob: -20.37500762939453
    8. '०' → logprob: -20.50000762939453
    9. '٠' → logprob: -20.87500762939453
    10. '  ' → logprob: -21.25000762939453

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023287750780582428
    2. ':
' → logprob: -3.773287773132324
    3. ':

' → logprob: -11.648287773132324
    4. '           ' → logprob: -11.898287773132324
    5. '):' → logprob: -12.148287773132324
    6. ' :' → logprob: -12.273287773132324
    7. ' and' → logprob: -12.398287773132324
    8. ':
' → logprob: -12.398287773132324
    9. '       ' → logprob: -12.648287773132324
    10. '):
' → logprob: -13.023287773132324

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11182759702205658
    2. 'dp' → logprob: -2.3618276119232178
    3. ' dp' → logprob: -4.486827373504639
    4. ':' → logprob: -9.361827850341797
    5. '       ' → logprob: -9.861827850341797
    6. '(dp' → logprob: -10.486827850341797
    7. '
' → logprob: -10.611827850341797
    8. '	dp' → logprob: -10.861827850341797
    9. ':
' → logprob: -11.236827850341797
    10. '```' → logprob: -11.236827850341797

Token 125: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.37272945046424866
    2. 'dp' (adapté à ' dp') → logprob: -1.3727294206619263
    3. '           ' → logprob: -2.872729539871216
    4. '               ' → logprob: -6.872729301452637
    5. '   ' → logprob: -9.747729301452637
    6. '	dp' → logprob: -9.747729301452637
    7. ' new' → logprob: -11.497729301452637
    8. '       ' → logprob: -11.747729301452637
    9. '(dp' → logprob: -12.497729301452637
    10. ' ' → logprob: -12.872729301452637

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. 'used' → logprob: -14.375001907348633
    3. '[u' → logprob: -14.500001907348633
    4. ' [' → logprob: -14.625001907348633
    5. '```' → logprob: -15.375001907348633
    6. '[new' → logprob: -15.625001907348633
    7. '   ' → logprob: -15.875001907348633
    8. '[(' → logprob: -16.125001907348633
    9. '[user' → logprob: -16.875001907348633
    10. '[
' → logprob: -17.375001907348633

Token 127: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -4.060365608893335e-05
    2. ' used' → logprob: -10.125041007995605
    3. '(' → logprob: -16.00004005432129
    4. '   ' → logprob: -16.00004005432129
    5. '[' → logprob: -16.37504005432129
    6. '_used' → logprob: -16.37504005432129
    7. '```' → logprob: -17.75004005432129
    8. '-used' → logprob: -17.75004005432129
    9. '.used' → logprob: -17.75004005432129
    10. 'us' → logprob: -18.37504005432129

Token 128: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.474211186170578
    2. ' |' → logprob: -0.9742112159729004
    3. ']' → logprob: -9.349210739135742
    4. ' ' → logprob: -10.599210739135742
    5. '[' → logprob: -10.974210739135742
    6. ' |=' → logprob: -13.474210739135742
    7. '│' → logprob: -14.349210739135742
    8. '|`
' → logprob: -14.599210739135742
    9. ')' → logprob: -15.099210739135742
    10. '|
' → logprob: -15.224210739135742

Token 129: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.005234594456851482
    2. ' mask' → logprob: -5.255234718322754
    3. '(mask' → logprob: -14.505234718322754
    4. '	mask' → logprob: -15.380234718322754
    5. '_mask' → logprob: -16.755233764648438
    6. ' ' → logprob: -18.755233764648438
    7. 'm' → logprob: -19.380233764648438
    8. 'masked' → logprob: -19.755233764648438
    9. 'Mask' → logprob: -20.255233764648438
    10. '-mask' → logprob: -20.380233764648438

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.629921436891891e-05
    2. ']=' → logprob: -10.87502670288086
    3. ' ]' → logprob: -11.87502670288086
    4. ']+=' → logprob: -15.50002670288086
    5. ')' → logprob: -15.75002670288086
    6. ']
' → logprob: -16.87502670288086
    7. '=' → logprob: -17.37502670288086
    8. '])' → logprob: -17.62502670288086
    9. ')]' → logprob: -17.75002670288086
    10. '']' → logprob: -18.25002670288086

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07907617092132568
    2. ' =' → logprob: -2.5790762901306152
    3. '=max' → logprob: -8.954075813293457
    4. 'max' → logprob: -9.829075813293457
    5. ' max' → logprob: -13.079075813293457
    6. ')' → logprob: -15.454075813293457
    7. ']' → logprob: -15.579075813293457
    8. '>=' → logprob: -15.704075813293457
    9. ']=' → logprob: -15.829075813293457
    10. '+=' → logprob: -16.329076766967773

Token 132: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004703999496996403
    2. 'val' → logprob: -5.504703998565674
    3. ' max' → logprob: -7.379703998565674
    4. 'min' → logprob: -14.254704475402832
    5. ' val' → logprob: -14.629704475402832
    6. 'dp' → logprob: -14.879704475402832
    7. 'v' → logprob: -16.754703521728516
    8. '	max' → logprob: -17.004703521728516
    9. '(max' → logprob: -17.254703521728516
    10. 'maximum' → logprob: -17.379703521728516

Token 133: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.32392441527918e-05
    2. '(' → logprob: -10.250053405761719
    3. 'dp' → logprob: -11.000053405761719
    4. '(val' → logprob: -14.250053405761719
    5. '(
' → logprob: -15.500053405761719
    6. '	dp' → logprob: -16.37505340576172
    7. ' (' → logprob: -17.00005340576172
    8. ' dp' → logprob: -17.00005340576172
    9. '(d' → logprob: -17.25005340576172
    10. 'val' → logprob: -17.50005340576172

Token 134: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. '.get' → logprob: -12.000007629394531
    3. 'used' → logprob: -14.250007629394531
    4. '[val' → logprob: -15.250007629394531
    5. 'get' → logprob: -16.37500762939453
    6. ' [' → logprob: -16.50000762939453
    7. '[get' → logprob: -16.62500762939453
    8. '[
' → logprob: -16.75000762939453
    9. '```' → logprob: -16.87500762939453
    10. '[(' → logprob: -17.12500762939453

Token 135: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. 'used' → logprob: -13.125003814697266
    3. '((' → logprob: -13.750003814697266
    4. ' (' → logprob: -14.375003814697266
    5. '(user' → logprob: -15.750003814697266
    6. ' used' → logprob: -16.875003814697266
    7. ' ' → logprob: -16.875003814697266
    8. '  ' → logprob: -18.750003814697266
    9. '(
' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.250003814697266

Token 136: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.010188435204327106
    2. '(' → logprob: -4.635188579559326
    3. ' used' → logprob: -7.760188579559326
    4. ' ' → logprob: -12.885188102722168
    5. '   ' → logprob: -13.760188102722168
    6. '_used' → logprob: -14.260188102722168
    7. '```' → logprob: -14.885188102722168
    8. '  ' → logprob: -15.010188102722168
    9. 'Used' → logprob: -15.260188102722168
    10. '-used' → logprob: -15.760188102722168

Token 137: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.05490011349320412
    2. ' |' → logprob: -2.9299001693725586
    3. '(mask' → logprob: -12.054900169372559
    4. ' ' → logprob: -12.304900169372559
    5. '   ' → logprob: -13.179900169372559
    6. ' ' → logprob: -13.679900169372559
    7. '(' → logprob: -14.304900169372559
    8. ',' → logprob: -14.554900169372559
    9. '│' → logprob: -14.804900169372559
    10. '|get' → logprob: -15.054900169372559

Token 138: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.010152087546885014
    2. ' mask' → logprob: -4.6351518630981445
    3. '_mask' → logprob: -8.510151863098145
    4. '(mask' → logprob: -9.010151863098145
    5. '	mask' → logprob: -10.260151863098145
    6. ' ' → logprob: -11.635151863098145
    7. ')' → logprob: -12.010151863098145
    8. '   ' → logprob: -12.135151863098145
    9. 'm' → logprob: -12.635151863098145
    10. '-mask' → logprob: -13.135151863098145

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012919136323034763
    2. '),' → logprob: -4.387918949127197
    3. ' ,' → logprob: -8.137919425964355
    4. ',),' → logprob: -10.012919425964355
    5. ',None' → logprob: -10.762919425964355
    6. '0' → logprob: -11.012919425964355
    7. ',val' → logprob: -11.387919425964355
    8. ')' → logprob: -12.637919425964355
    9. '],' → logprob: -12.637919425964355
    10. ' ),' → logprob: -13.012919425964355

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00150105613283813
    2. 'val' → logprob: -6.876501083374023
    3. ' ' → logprob: -8.626501083374023
    4. '-' → logprob: -8.876501083374023
    5. '-val' → logprob: -9.251501083374023
    6. ' val' → logprob: -10.251501083374023
    7. ' -' → logprob: -11.751501083374023
    8. ')' → logprob: -12.001501083374023
    9. '           ' → logprob: -13.876501083374023
    10. '   ' → logprob: -14.001501083374023

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010783452307805419
    2. ' ' → logprob: -9.750107765197754
    3. '-' → logprob: -10.875107765197754
    4. 'val' → logprob: -10.875107765197754
    5. '           ' → logprob: -12.250107765197754
    6. '-val' → logprob: -12.750107765197754
    7. ' -' → logprob: -13.625107765197754
    8. '   ' → logprob: -14.250107765197754
    9. ')' → logprob: -14.625107765197754
    10. ' val' → logprob: -14.875107765197754

Token 142: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023676820565015078
    2. ',val' → logprob: -6.7523674964904785
    3. '),' → logprob: -7.1273674964904785
    4. ' ,' → logprob: -7.8773674964904785
    5. 'val' → logprob: -11.752367973327637
    6. ')' → logprob: -12.377367973327637
    7. ',max' → logprob: -14.877367973327637
    8. ',t' → logprob: -14.877367973327637
    9. ',value' → logprob: -15.252367973327637
    10. ' val' → logprob: -15.627367973327637

Token 143: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0052373106591403484
    2. ' val' → logprob: -5.255237102508545
    3. '           ' → logprob: -12.755237579345703
    4. '	val' → logprob: -15.380237579345703
    5. '   ' → logprob: -15.630237579345703
    6. '[val' → logprob: -16.380237579345703
    7. 'dp' → logprob: -17.255237579345703
    8. '       ' → logprob: -18.005237579345703
    9. '               ' → logprob: -18.255237579345703
    10. ' ' → logprob: -18.255237579345703

Token 144: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3137880265712738
    2. '+' → logprob: -1.3137880563735962
    3. '+t' → logprob: -7.563787937164307
    4. ')' → logprob: -12.813788414001465
    5. ' t' → logprob: -13.063788414001465
    6. ' ' → logprob: -13.813788414001465
    7. ' ' → logprob: -14.813788414001465
    8. ')+' → logprob: -14.938788414001465
    9. 't' → logprob: -15.563788414001465
    10. '+c' → logprob: -16.31378746032715

Token 145: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06197037547826767
    2. ' t' → logprob: -2.8119704723358154
    3. ' ' → logprob: -13.561970710754395
    4. '   ' → logprob: -13.811970710754395
    5. '`t' → logprob: -15.686970710754395
    6. '	t' → logprob: -16.061969757080078
    7. '    ' → logprob: -16.811969757080078
    8. '1' → logprob: -17.186969757080078
    9. ' ' → logprob: -17.436969757080078
    10. ')t' → logprob: -17.561969757080078

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.875004768371582
    3. ')
' → logprob: -13.000004768371582
    4. '))' → logprob: -16.8750057220459
    5. '())' → logprob: -17.3750057220459
    6. '<|end|>' → logprob: -18.2500057220459
    7. '   ' → logprob: -18.6250057220459
    8. '`)' → logprob: -18.6250057220459
    9. ')return' → logprob: -18.7500057220459
    10. ')}' → logprob: -19.0000057220459

Token 147: 'results' (ID: 16570)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01751185581088066
    2. 'max' → logprob: -4.89251184463501
    3. '
' → logprob: -5.51751184463501
    4. ')' → logprob: -5.89251184463501
    5. '<|end|>' → logprob: -7.14251184463501
    6. 'result' → logprob: -7.64251184463501
    7. '#' → logprob: -7.76751184463501
    8. ' print' → logprob: -8.142512321472168
    9. '\n' → logprob: -8.517512321472168
    10. ' 
' → logprob: -8.767512321472168

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16033419966697693
    2. '=' → logprob: -1.9103342294692993
    3. '=[]' → logprob: -9.660334587097168
    4. '[' → logprob: -11.535334587097168
    5. '_' → logprob: -12.160334587097168
    6. ' ' → logprob: -12.535334587097168
    7. '=max' → logprob: -12.535334587097168
    8. ')' → logprob: -12.660334587097168
    9. ']' → logprob: -12.910334587097168
    10. '[]' → logprob: -12.910334587097168

Token 149: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7469648122787476
    2. '[max' → logprob: -0.7469648122787476
    3. ' max' → logprob: -3.121964931488037
    4. '[' → logprob: -5.121964931488037
    5. 'dp' → logprob: -7.246964931488037
    6. '0' → logprob: -7.871964931488037
    7. '[]' → logprob: -8.121964454650879
    8. ' [' → logprob: -8.246964454650879
    9. 'sorted' → logprob: -8.496964454650879
    10. '[]
' → logprob: -8.621964454650879

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12029159069061279
    2. 'dp' → logprob: -2.2452917098999023
    3. 'max' → logprob: -5.245291709899902
    4. ' ' → logprob: -6.995291709899902
    5. ' dp' → logprob: -6.995291709899902
    6. 'val' → logprob: -8.995291709899902
    7. ' max' → logprob: -9.495291709899902
    8. '(dp' → logprob: -10.620291709899902
    9. 'str' → logprob: -10.682791709899902
    10. ')' → logprob: -11.057791709899902

Token 151: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00484293419867754
    2. 'for' → logprob: -6.129842758178711
    3. ']
' → logprob: -6.629842758178711
    4. ']*' → logprob: -7.379842758178711
    5. ']*(' → logprob: -8.004842758178711
    6. ' for' → logprob: -8.254842758178711
    7. ' ]' → logprob: -9.379842758178711
    8. ']

' → logprob: -11.504842758178711
    9. ']+' → logprob: -11.754842758178711
    10. ')]' → logprob: -12.504842758178711

Token 152: 'L' (ID: 43)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.042506344616413116
    2. 'L' → logprob: -3.292506456375122
    3. 'M' → logprob: -6.542506217956543
    4. '(N' → logprob: -6.792506217956543
    5. '1' → logprob: -6.917506217956543
    6. '(' → logprob: -7.542506217956543
    7. '(L' → logprob: -8.417506217956543
    8. '(M' → logprob: -9.667506217956543
    9. '2' → logprob: -9.792506217956543
    10. 'len' → logprob: -12.042506217956543

Token 153: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006280870293267071
    2. ' +' → logprob: -7.3756279945373535
    3. '+
' → logprob: -14.375628471374512
    4. ')' → logprob: -15.000628471374512
    5. '+)' → logprob: -15.250628471374512
    6. '1' → logprob: -15.375628471374512
    7. '```' → logprob: -16.750627517700195
    8. '0' → logprob: -17.375627517700195
    9. '*' → logprob: -17.750627517700195
    10. '
' → logprob: -17.875627517700195

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -15.500011444091797
    4. '   ' → logprob: -18.000011444091797
    5. '```' → logprob: -18.250011444091797
    6. '
' → logprob: -18.750011444091797
    7. '１' → logprob: -19.250011444091797
    8. '  ' → logprob: -19.500011444091797
    9. '

' → logprob: -19.750011444091797
    10. '5' → logprob: -20.562511444091797

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036594532430171967
    2. ')
' → logprob: -5.628659248352051
    3. ' )' → logprob: -9.87865924835205
    4. ')

' → logprob: -12.00365924835205
    5. ' )
' → logprob: -13.75365924835205
    6. ')
' → logprob: -14.25365924835205
    7. '+' → logprob: -16.253660202026367
    8. '1' → logprob: -17.128660202026367
    9. '))' → logprob: -17.253660202026367
    10. '),' → logprob: -17.378660202026367

Token 156: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. 'max' → logprob: -13.000004768371582
    3. ' for' → logprob: -13.375004768371582
    4. 'sorted' → logprob: -15.500004768371582
    5. 'dp' → logprob: -15.750004768371582
    6. 'keys' → logprob: -16.3750057220459
    7. 'results' → logprob: -16.3750057220459
    8. 'times' → logprob: -16.7500057220459
    9. 'total' → logprob: -17.0000057220459
    10. 'count' → logprob: -17.0000057220459

Token 157: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.11883561313152313
    2. 'mask' → logprob: -2.243835687637329
    3. ' used' → logprob: -5.74383544921875
    4. 'key' → logprob: -7.36883544921875
    5. 'state' → logprob: -7.61883544921875
    6. ' mask' → logprob: -7.86883544921875
    7. 's' → logprob: -7.99383544921875
    8. 'm' → logprob: -8.49383544921875
    9. 'i' → logprob: -9.11883544921875
    10. 'k' → logprob: -9.36883544921875

Token 158: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11031585186719894
    2. ' in' → logprob: -2.6103157997131348
    3. ',' → logprob: -3.4853157997131348
    4. ',count' → logprob: -9.235316276550293
    5. ',in' → logprob: -9.735316276550293
    6. 'mask' → logprob: -10.485316276550293
    7. 'count' → logprob: -10.985316276550293
    8. '_in' → logprob: -11.360316276550293
    9. '_mask' → logprob: -11.360316276550293
    10. '```' → logprob: -11.610316276550293

Token 159: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0029259957373142242
    2. ' val' → logprob: -5.877925872802734
    3. 'time' → logprob: -9.877925872802734
    4. 'v' → logprob: -10.502925872802734
    5. 't' → logprob: -10.752925872802734
    6. 'value' → logprob: -10.877925872802734
    7. 'score' → logprob: -14.502925872802734
    8. 'total' → logprob: -15.002925872802734
    9. '	val' → logprob: -15.377925872802734
    10. 'vals' → logprob: -16.002925872802734

Token 160: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14270873367786407
    2. ' in' → logprob: -2.0177087783813477
    3. ',' → logprob: -10.642708778381348
    4. '_in' → logprob: -12.892708778381348
    5. 'In' → logprob: -13.142708778381348
    6. '	in' → logprob: -13.642708778381348
    7. 's' → logprob: -14.392708778381348
    8. ' ' → logprob: -14.892708778381348
    9. ')' → logprob: -15.142708778381348
    10. '```' → logprob: -15.142708778381348

Token 161: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031784253660589457
    2. ' dp' → logprob: -5.753178596496582
    3. '(dp' → logprob: -15.253178596496582
    4. '_dp' → logprob: -15.378178596496582
    5. '	dp' → logprob: -15.878178596496582
    6. 'items' → logprob: -17.253177642822266
    7. '
' → logprob: -17.628177642822266
    8. 'd' → logprob: -17.628177642822266
    9. '.dp' → logprob: -17.878177642822266
    10. 'range' → logprob: -18.253177642822266

Token 162: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4827571511268616
    2. '():' → logprob: -0.9827571511268616
    3. 'items' → logprob: -4.857757091522217
    4. '.items' → logprob: -7.732757091522217
    5. '):' → logprob: -8.982757568359375
    6. '_items' → logprob: -9.107757568359375
    7. '():
' → logprob: -9.232757568359375
    8. ' items' → logprob: -10.107757568359375
    9. ':
' → logprob: -10.982757568359375
    10. '(' → logprob: -11.482757568359375

Token 163: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8087270038668066e-05
    2. '()' → logprob: -11.125027656555176
    3. '():
' → logprob: -11.375027656555176
    4. ' ():' → logprob: -13.500027656555176
    5. '(' → logprob: -15.125027656555176
    6. ':' → logprob: -17.250028610229492
    7. '(),' → logprob: -17.750028610229492
    8. '():

' → logprob: -17.875028610229492
    9. '(:' → logprob: -18.000028610229492
    10. '():
' → logprob: -18.625028610229492

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007615729700773954
    2. 'count' → logprob: -6.132615566253662
    3. ' results' → logprob: -6.382615566253662
    4. ' count' → logprob: -6.882615566253662
    5. ' length' → logprob: -7.007615566253662
    6. 'results' → logprob: -7.632615566253662
    7. 'mask' → logprob: -8.75761604309082
    8. 'length' → logprob: -9.00761604309082
    9. 'num' → logprob: -9.13261604309082
    10. '    
' → logprob: -9.13261604309082

Token 165: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5914416909217834
    2. 'cnt' (adapté à ' cnt') → logprob: -1.3414416313171387
    3. 'results' → logprob: -2.4664416313171387
    4. 'bits' → logprob: -2.8414416313171387
    5. 'bit' → logprob: -4.091441631317139
    6. 'if' → logprob: -5.091441631317139
    7. 'ones' → logprob: -5.466441631317139
    8. 'classes' → logprob: -5.591441631317139
    9. 'used' → logprob: -6.466441631317139
    10. 'pop' → logprob: -6.591441631317139

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0489797405898571
    2. '=' → logprob: -3.0489797592163086
    3. '_' → logprob: -8.423979759216309
    4. ' ' → logprob: -10.423979759216309
    5. '_bits' → logprob: -10.548979759216309
    6. '_mask' → logprob: -11.048979759216309
    7. '(' → logprob: -11.298979759216309
    8. ')' → logprob: -11.548979759216309
    9. 'mask' → logprob: -11.548979759216309
    10. '   ' → logprob: -11.798979759216309

Token 167: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -5.7292167184641585e-05
    2. ' bin' → logprob: -10.125057220458984
    3. 'used' → logprob: -11.375057220458984
    4. '0' → logprob: -12.625057220458984
    5. '   ' → logprob: -13.750057220458984
    6. '(bin' → logprob: -14.625057220458984
    7. '
' → logprob: -14.750057220458984
    8. 'bit' → logprob: -15.875057220458984
    9. 'str' → logprob: -16.375057220458984
    10. 'bins' → logprob: -16.750057220458984

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. 'used' → logprob: -13.375003814697266
    3. '(cnt' → logprob: -13.625003814697266
    4. '(use' → logprob: -14.625003814697266
    5. '(count' → logprob: -15.500003814697266
    6. '(mask' → logprob: -15.750003814697266
    7. '((' → logprob: -16.750003814697266
    8. '(val' → logprob: -16.875003814697266
    9. '(
' → logprob: -17.375003814697266
    10. '(us' → logprob: -17.625003814697266

Token 169: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0006400037091225386
    2. '(' → logprob: -7.375639915466309
    3. ' used' → logprob: -11.250639915466309
    4. '
' → logprob: -15.625639915466309
    5. ')' → logprob: -16.625640869140625
    6. 'use' → logprob: -16.750640869140625
    7. 'Used' → logprob: -17.375640869140625
    8. '-used' → logprob: -18.125640869140625
    9. '.used' → logprob: -18.250640869140625
    10. '   ' → logprob: -18.250640869140625

Token 170: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5674063563346863
    2. '().' → logprob: -0.9424063563346863
    3. '()).' → logprob: -3.317406415939331
    4. '(' → logprob: -5.317406177520752
    5. '()' → logprob: -6.442406177520752
    6. '.count' → logprob: -8.81740665435791
    7. 'count' → logprob: -9.56740665435791
    8. '   ' → logprob: -9.69240665435791
    9. '(count' → logprob: -10.19240665435791
    10. ')' → logprob: -10.19240665435791

Token 171: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.531315314830863e-06
    2. ' count' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.875003814697266
    4. '   ' → logprob: -14.875003814697266
    5. '```' → logprob: -15.625003814697266
    6. '	count' → logprob: -16.250003814697266
    7. 'ount' → logprob: -16.750003814697266
    8. '.count' → logprob: -17.875003814697266
    9. '<count' → logprob: -17.875003814697266
    10. 'cnt' → logprob: -18.500003814697266

Token 172: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009040901437401772
    2. '(' → logprob: -5.134040832519531
    3. '("' → logprob: -6.259040832519531
    4. '("("' → logprob: -6.759040832519531
    5. ''' → logprob: -10.759040832519531
    6. '(
' → logprob: -12.759040832519531
    7. '1' → logprob: -13.009040832519531
    8. '('(' → logprob: -13.009040832519531
    9. '(',' → logprob: -14.134040832519531
    10. '(`' → logprob: -14.134040832519531

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -19.125
    3. '１' → logprob: -21.625
    4. '
' → logprob: -22.0
    5. ' ' → logprob: -22.0
    6. '```' → logprob: -22.0
    7. '')' → logprob: -22.5
    8. '11' → logprob: -22.625
    9. '۱' → logprob: -22.875
    10. '

' → logprob: -22.875

Token 174: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41253039240837097
    2. '()' → logprob: -1.4125304222106934
    3. ')
' → logprob: -2.6625304222106934
    4. '())' → logprob: -4.662530422210693
    5. '()
' → logprob: -4.787530422210693
    6. '())
' → logprob: -5.162530422210693
    7. ' )' → logprob: -7.287530422210693
    8. ' )
' → logprob: -8.037529945373535
    9. '')' → logprob: -9.287529945373535
    10. '')
' → logprob: -10.037529945373535

Token 175: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3259025812149048
    2. ' if' → logprob: -2.3259024620056152
    3. '   ' → logprob: -2.7009024620056152
    4. ')' → logprob: -3.0759024620056152
    5. 'results' → logprob: -3.0759024620056152
    6. '
' → logprob: -4.450902462005615
    7. 'for' → logprob: -5.575902462005615
    8. ' results' → logprob: -6.200902462005615
    9. ')
' → logprob: -6.325902462005615
    10. '```' → logprob: -7.450902462005615

Token 176: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28586333990097046
    2. 'results' → logprob: -2.0358633995056152
    3. ' if' → logprob: -2.7858633995056152
    4. '
' → logprob: -3.6608633995056152
    5. ' results' → logprob: -4.160863399505615
    6. 'for' → logprob: -5.535863399505615
    7. 'time' → logprob: -6.035863399505615
    8. '   ' → logprob: -6.410863399505615
    9. 'day' → logprob: -6.660863399505615
    10. 'hour' → logprob: -7.535863399505615

Token 177: ' Number' (ID: 9184)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7423878908157349
    2. 'for' → logprob: -0.9923878908157349
    3. 'results' → logprob: -2.2423877716064453
    4. ' if' → logprob: -3.8673877716064453
    5. ' for' → logprob: -4.367387771606445
    6. ' results' → logprob: -4.492387771606445
    7. '   ' → logprob: -7.742387771606445
    8. 'result' → logprob: -7.867387771606445
    9. '
' → logprob: -8.117387771606445
    10. 'i' → logprob: -8.117387771606445

Token 178: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.5753099918365479
    2. ' =' → logprob: -1.7003099918365479
    3. ' ' → logprob: -1.8253099918365479
    4. '=' → logprob: -2.325309991836548
    5. 'of' → logprob: -2.325309991836548
    6. ' for' → logprob: -2.825309991836548
    7. ' if' → logprob: -3.200309991836548
    8. ')' → logprob: -3.200309991836548
    9. '   ' → logprob: -3.950309991836548
    10. 's' → logprob: -4.075309753417969

Token 179: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.8414570093154907
    2. 'days' → logprob: -0.8414570093154907
    3. 'students' → logprob: -3.966456890106201
    4. 'weeks' → logprob: -4.091456890106201
    5. 'day' → logprob: -5.091456890106201
    6. 'used' → logprob: -5.216456890106201
    7. 'times' → logprob: -5.216456890106201
    8. 'blocks' → logprob: -5.341456890106201
    9. 'less' → logprob: -5.341456890106201
    10. 'slots' → logprob: -5.466456890106201

Token 180: ' selected' (ID: 6386)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.678150475025177
    2. 'for' → logprob: -1.5531504154205322
    3. ' =' → logprob: -1.8031504154205322
    4. ' for' → logprob: -3.5531504154205322
    5. '<=' → logprob: -3.5531504154205322
    6. ' <=' → logprob: -4.678150653839111
    7. 'taken' → logprob: -4.678150653839111
    8. 'if' → logprob: -4.928150653839111
    9. ')' → logprob: -4.928150653839111
    10. 'completed' → logprob: -5.303150653839111

Token 181: ' =' (ID: 314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3041509985923767
    2. ' if' → logprob: -1.8041510581970215
    3. 'for' → logprob: -2.5541510581970215
    4. ' for' → logprob: -4.5541510581970215
    5. '=' → logprob: -6.3041510581970215
    6. 'results' → logprob: -6.3041510581970215
    7. '   ' → logprob: -6.6791510581970215
    8. '<=' → logprob: -6.6791510581970215
    9. ' =' → logprob: -7.4291510581970215
    10. 'num' → logprob: -7.6791510581970215

Token 182: ' number' (ID: 2086)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.02043408714234829
    2. ' cnt' → logprob: -4.3954339027404785
    3. 'val' → logprob: -5.0204339027404785
    4. '(cnt' → logprob: -7.0204339027404785
    5. ' val' → logprob: -8.520434379577637
    6. 'bin' → logprob: -10.020434379577637
    7. 'dp' → logprob: -10.145434379577637
    8. ' (' → logprob: -10.645434379577637
    9. 'used' → logprob: -11.020434379577637
    10. '[cnt' → logprob: -11.270434379577637

Token 183: ' of' (ID: 328)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7172611951828003
    2. '(cnt' → logprob: -0.8422611951828003
    3. ' cnt' → logprob: -2.59226131439209
    4. '[cnt' → logprob: -5.21726131439209
    5. ' (' → logprob: -7.84226131439209
    6. '	cnt' → logprob: -8.59226131439209
    7. '   ' → logprob: -9.46726131439209
    8. ' ' → logprob: -9.96726131439209
    9. ' //' → logprob: -10.09226131439209
    10. '=' → logprob: -10.34226131439209

Token 184: ' distinct' (ID: 16913)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.040333837270736694
    2. 'classes' → logprob: -4.1653337478637695
    3. 'bits' → logprob: -4.2903337478637695
    4. ' cnt' → logprob: -6.5403337478637695
    5. 'set' → logprob: -6.6653337478637695
    6. '1' → logprob: -6.7903337478637695
    7. 'bins' → logprob: -6.7903337478637695
    8. 'sets' → logprob: -7.4153337478637695
    9. '(cnt' → logprob: -7.6653337478637695
    10. 'days' → logprob: -7.7903337478637695

Token 185: ' intervals' (ID: 49900)
  Prédit: ' days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' days' → logprob: -0.72810959815979
    2. 'days' → logprob: -1.22810959815979
    3. 'classes' → logprob: -2.47810959815979
    4. ' classes' → logprob: -3.35310959815979
    5. ' lines' → logprob: -3.60310959815979
    6. 'class' → logprob: -5.103109359741211
    7. '
' → logprob: -5.103109359741211
    8. ' time' → logprob: -5.228109359741211
    9. ' times' → logprob: -5.353109359741211
    10. 'rows' → logprob: -5.478109359741211

Token 186: ' =' (ID: 314)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0037928819656372
    2. ' if' → logprob: -1.7537928819656372
    3. 'for' → logprob: -2.1287927627563477
    4. '   ' → logprob: -2.2537927627563477
    5. 'results' → logprob: -2.3787927627563477
    6. 'if' → logprob: -3.2537927627563477
    7. '
' → logprob: -3.2537927627563477
    8. ' results' → logprob: -3.2537927627563477
    9. ')' → logprob: -6.003792762756348
    10. ',' → logprob: -6.128792762756348

Token 187: ' count' (ID: 3605)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.02781967632472515
    2. 'val' → logprob: -4.277819633483887
    3. 'bin' → logprob: -4.777819633483887
    4. '(cnt' → logprob: -5.777819633483887
    5. 'dp' → logprob: -7.152819633483887
    6. ' cnt' → logprob: -7.402819633483887
    7. 'sum' → logprob: -8.902819633483887
    8. 'used' → logprob: -9.152819633483887
    9. '(bin' → logprob: -9.652819633483887
    10. '(' → logprob: -10.027819633483887

Token 188: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.419380784034729
    2. 'for' → logprob: -1.919380784034729
    3. 'if' → logprob: -2.6693806648254395
    4. '=' → logprob: -2.6693806648254395
    5. ' if' → logprob: -2.6693806648254395
    6. '   ' → logprob: -3.1693806648254395
    7. 'results' → logprob: -3.1693806648254395
    8. 'of' → logprob: -3.5443806648254395
    9. ' for' → logprob: -3.5443806648254395
    10. ' //' → logprob: -3.6693806648254395

Token 189: ' (' (ID: 350)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2423587441444397
    2. 'val' → logprob: -2.117358684539795
    3. 'bin' → logprob: -2.992358684539795
    4. 'used' → logprob: -4.117358684539795
    5. '(cnt' → logprob: -4.867358684539795
    6. ' cnt' → logprob: -5.117358684539795
    7. 'classes' → logprob: -5.242358684539795
    8. ' val' → logprob: -6.492358684539795
    9. ' bin' → logprob: -6.492358684539795
    10. '(bin' → logprob: -6.867358684539795

Token 190: 'used' (ID: 4943)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.098298080265522
    2. 'used' → logprob: -2.9732980728149414
    3. 'val' → logprob: -3.7232980728149414
    4. 'bin' → logprob: -4.973298072814941
    5. ')' → logprob: -5.598298072814941
    6. '(cnt' → logprob: -5.598298072814941
    7. ' cnt' → logprob: -6.848298072814941
    8. '(' → logprob: -7.223298072814941
    9. ' used' → logprob: -7.723298072814941
    10. '
' → logprob: -7.848298072814941

Token 191: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49616876244544983
    2. ' //' → logprob: -1.8711687326431274
    3. '//' → logprob: -2.246168851852417
    4. 'bits' → logprob: -3.746168851852417
    5. ' ' → logprob: -3.996168851852417
    6. ' bits' → logprob: -4.496168613433838
    7. '+' → logprob: -4.621168613433838
    8. '-' → logprob: -4.871168613433838
    9. '   ' → logprob: -5.121168613433838
    10. ' -' → logprob: -5.246168613433838

Token 192: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10090620070695877
    2. ' //' → logprob: -3.1009061336517334
    3. ')//' → logprob: -3.7259061336517334
    4. '//' → logprob: -4.1009063720703125
    5. ' )' → logprob: -5.2259063720703125
    6. ')
' → logprob: -5.9759063720703125
    7. ' ' → logprob: -7.1009063720703125
    8. '()' → logprob: -8.100906372070312
    9. '#' → logprob: -8.350906372070312
    10. ')#' → logprob: -8.600906372070312

Token 193: 'class' (ID: 1444)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005051471292972565
    2. 'M' → logprob: -6.005051612854004
    3. 'L' → logprob: -6.755051612854004
    4. '2' → logprob: -7.255051612854004
    5. ' N' → logprob: -8.255051612854004
    6. '(' → logprob: -9.130051612854004
    7. '1' → logprob: -9.255051612854004
    8. '(N' → logprob: -9.755051612854004
    9. '3' → logprob: -10.130051612854004
    10. '
' → logprob: -10.630051612854004

Token 194: ' bits' (ID: 18189)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6264983415603638
    2. ' N' → logprob: -1.3764983415603638
    3. ')' → logprob: -2.876498222351074
    4. '+' → logprob: -3.001498222351074
    5. ' (' → logprob: -3.751498222351074
    6. '(N' → logprob: -4.001498222351074
    7. '(' → logprob: -4.251498222351074
    8. ' ' → logprob: -4.876498222351074
    9. 'L' → logprob: -4.876498222351074
    10. ' for' → logprob: -5.626498222351074

Token 195: ' not' (ID: 625)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0850640535354614
    2. ' //' → logprob: -1.5850640535354614
    3. 'for' → logprob: -1.8350640535354614
    4. ' if' → logprob: -2.210063934326172
    5. '   ' → logprob: -3.335063934326172
    6. '//' → logprob: -3.835063934326172
    7. ' N' → logprob: -3.835063934326172
    8. ' ' → logprob: -4.085063934326172
    9. '=' → logprob: -4.710063934326172
    10. '0' → logprob: -4.835063934326172

Token 196: ' directly' (ID: 8516)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21444669365882874
    2. 'N' → logprob: -3.089446783065796
    3. '//' → logprob: -3.464446783065796
    4. '```' → logprob: -3.839446783065796
    5. '1' → logprob: -3.964446783065796
    6. ' N' → logprob: -5.089446544647217
    7. '0' → logprob: -5.214446544647217
    8. ' ' → logprob: -5.339446544647217
    9. 'L' → logprob: -5.339446544647217
    10. '(' → logprob: -5.464446544647217

Token 197: ' count' (ID: 3605)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7354049682617188
    2. ')' → logprob: -1.3604049682617188
    3. '//' → logprob: -2.2354049682617188
    4. '<|end|>' → logprob: -3.2354049682617188
    5. ' ' → logprob: -3.3604049682617188
    6. 'N' → logprob: -3.8604049682617188
    7. ' N' → logprob: -4.485404968261719
    8. '#' → logprob: -4.860404968261719
    9. ' )' → logprob: -4.985404968261719
    10. '...' → logprob: -5.985404968261719

Token 198: 'able' (ID: 562)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.82944256067276
    2. ' if' → logprob: -1.3294425010681152
    3. 'for' → logprob: -2.4544425010681152
    4. ' results' → logprob: -2.5794425010681152
    5. 'if' → logprob: -3.5794425010681152
    6. 'results' → logprob: -3.8294425010681152
    7. ')' → logprob: -4.204442501068115
    8. ' intervals' → logprob: -4.954442501068115
    9. '   ' → logprob: -5.329442501068115
    10. ' classes' → logprob: -5.579442501068115

Token 199: ' here' (ID: 2105)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4396434724330902
    2. ' if' → logprob: -1.9396435022354126
    3. 'for' → logprob: -2.939643383026123
    4. ' class' → logprob: -3.939643383026123
    5. ' parts' → logprob: -3.939643383026123
    6. '   ' → logprob: -4.064643383026123
    7. ' intervals' → logprob: -4.689643383026123
    8. '```' → logprob: -4.814643383026123
    9. ' used' → logprob: -4.939643383026123
    10. ' in' → logprob: -5.064643383026123

Token 200: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33112016320228577
    2. 'for' → logprob: -1.4561201333999634
    3. ' if' → logprob: -4.331120014190674
    4. '   ' → logprob: -5.331120014190674
    5. 'if' → logprob: -5.581120014190674
    6. '#' → logprob: -5.831120014190674
    7. ' parts' → logprob: -5.956120014190674
    8. '```' → logprob: -6.206120014190674
    9. ')' → logprob: -6.331120014190674
    10. ' used' → logprob: -6.456120014190674

Token 201: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3996482193470001
    2. 'for' → logprob: -1.3996481895446777
    3. ' if' → logprob: -2.7746481895446777
    4. 'if' → logprob: -5.024648189544678
    5. '   ' → logprob: -5.524648189544678
    6. '```' → logprob: -5.649648189544678
    7. ')' → logprob: -6.774648189544678
    8. ' class' → logprob: -7.524648189544678
    9. '
' → logprob: -7.899648189544678
    10. '_' → logprob: -7.899648189544678

Token 202: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.855012834072113
    2. '   ' → logprob: -1.4800128936767578
    3. 'if' → logprob: -1.9800128936767578
    4. ' for' → logprob: -2.355012893676758
    5. ' if' → logprob: -3.230012893676758
    6. 'results' → logprob: -4.105012893676758
    7. 'idx' → logprob: -4.105012893676758
    8. '#' (adapté à ' #') → logprob: -4.480012893676758
    9. ' results' → logprob: -5.355012893676758
    10. 'time' → logprob: -5.480012893676758

Token 203: ' Instead' (ID: 21050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5289149284362793
    2. 'if' → logprob: -1.5289149284362793
    3. 'results' → logprob: -2.4039149284362793
    4. ' for' → logprob: -3.4039149284362793
    5. '#' → logprob: -3.9039149284362793
    6. ' if' → logprob: -4.153914928436279
    7. ' results' → logprob: -4.778914928436279
    8. 'idx' → logprob: -5.403914928436279
    9. '   ' → logprob: -5.653914928436279
    10. 'length' → logprob: -5.903914928436279

Token 204: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.425713449716568
    2. ' of' → logprob: -1.3007134199142456
    3. 'of' → logprob: -3.675713539123535
    4. ' for' → logprob: -4.050713539123535
    5. ' to' → logprob: -4.425713539123535
    6. 'for' → logprob: -5.050713539123535
    7. ' if' → logprob: -5.800713539123535
    8. 'to' → logprob: -6.175713539123535
    9. ' in' → logprob: -6.300713539123535
    10. ',' → logprob: -6.300713539123535

Token 205: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9592217803001404
    2. '   ' → logprob: -1.7092218399047852
    3. 'for' → logprob: -1.8342218399047852
    4. ' pass' → logprob: -2.209221839904785
    5. 'pass' → logprob: -2.959221839904785
    6. '#' → logprob: -3.834221839904785
    7. ' if' → logprob: -3.959221839904785
    8. ' results' → logprob: -4.209221839904785
    9. ' #' → logprob: -4.459221839904785
    10. 'if' → logprob: -4.709221839904785

Token 206: ' track' (ID: 5290)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6459000110626221
    2. ' can' → logprob: -1.645900011062622
    3. 'need' → logprob: -2.395900011062622
    4. 'for' → logprob: -2.645900011062622
    5. 'continue' → logprob: -3.395900011062622
    6. 'should' → logprob: -3.895900011062622
    7. '   ' → logprob: -4.395899772644043
    8. ' need' → logprob: -4.520899772644043
    9. ' should' → logprob: -4.770899772644043
    10. ' for' → logprob: -4.895899772644043

Token 207: ' selecting' (ID: 31615)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.074206829071045
    2. 'results' → logprob: -1.574206829071045
    3. ' results' → logprob: -1.824206829071045
    4. ' for' → logprob: -2.199206829071045
    5. 'for' → logprob: -2.699206829071045
    6. 'the' → logprob: -3.324206829071045
    7. '...' → logprob: -4.449206829071045
    8. ' how' → logprob: -4.699206829071045
    9. ' classes' → logprob: -5.449206829071045
    10. '0' → logprob: -5.449206829071045

Token 208: ' classes' (ID: 9778)
  Prédit: ' classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' classes' → logprob: -0.9190089702606201
    2. ' the' → logprob: -1.7940089702606201
    3. 'classes' → logprob: -1.7940089702606201
    4. ' for' → logprob: -3.04400897026062
    5. 'the' → logprob: -3.54400897026062
    6. '<|end|>' → logprob: -4.044009208679199
    7. 'for' → logprob: -4.294009208679199
    8. ' tokens' → logprob: -4.544009208679199
    9. ' up' → logprob: -4.669009208679199
    10. ' at' → logprob: -4.919009208679199

Token 209: ' cumul' (ID: 163119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6805872917175293
    2. ' for' → logprob: -1.5555872917175293
    3. '<|end|>' → logprob: -1.8055872917175293
    4. '#' → logprob: -2.3055872917175293
    5. '...' → logprob: -5.305587291717529
    6. 'pass' → logprob: -6.055587291717529
    7. '```' → logprob: -6.180587291717529
    8. '
' → logprob: -6.305587291717529
    9. '<|end|>' → logprob: -6.430587291717529
    10. 'class' → logprob: -6.930587291717529

Token 210: 'atively' (ID: 11594)
  Prédit: 'atively'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atively' → logprob: -0.004982912912964821
    2. 'ately' → logprob: -5.754982948303223
    3. 'ating' → logprob: -7.129982948303223
    4. 'ative' → logprob: -8.254982948303223
    5. '   ' → logprob: -8.504982948303223
    6. 'ated' → logprob: -8.754982948303223
    7. 'ate' → logprob: -9.004982948303223
    8. '       ' → logprob: -9.879982948303223
    9. 'ently' → logprob: -10.379982948303223
    10. '```' → logprob: -10.879982948303223

Token 211: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22652164101600647
    2. 'for' → logprob: -2.2265217304229736
    3. '   ' → logprob: -2.7265217304229736
    4. '<|end|>' → logprob: -4.1015214920043945
    5. ' if' → logprob: -5.6015214920043945
    6. '
' → logprob: -6.1015214920043945
    7. '<|end|>' → logprob: -7.1015214920043945
    8. ',' → logprob: -7.1015214920043945
    9. ')' → logprob: -7.2265214920043945
    10. ' results' → logprob: -7.3515214920043945

Token 212: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5406287908554077
    2. 'class' → logprob: -2.2906289100646973
    3. 'count' → logprob: -2.2906289100646973
    4. 'results' → logprob: -2.2906289100646973
    5. 'mask' → logprob: -2.9156289100646973
    6. 'pass' → logprob: -3.0406289100646973
    7. ' for' → logprob: -3.5406289100646973
    8. 'the' → logprob: -3.7906289100646973
    9. 'iter' → logprob: -3.9156289100646973
    10. ' class' → logprob: -4.040628910064697

Token 213: ' dp' (ID: 21546)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4403150677680969
    2. 'length' → logprob: -2.440315008163452
    3. 'bit' → logprob: -3.315315008163452
    4. 'bin' → logprob: -3.440315008163452
    5. 'for' → logprob: -3.565315008163452
    6. 'sum' → logprob: -3.690315008163452
    7. ' number' → logprob: -4.065315246582031
    8. 'bits' → logprob: -4.065315246582031
    9. 'mask' → logprob: -4.065315246582031
    10. 'count' → logprob: -4.315315246582031

Token 214: ' process' (ID: 2273)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7319494485855103
    2. 'for' → logprob: -0.8569494485855103
    3. '<|end|>' → logprob: -2.8569493293762207
    4. ')' → logprob: -4.231949329376221
    5. ',' → logprob: -4.856949329376221
    6. '   ' → logprob: -5.606949329376221
    7. '.' → logprob: -6.356949329376221
    8. '
' → logprob: -6.731949329376221
    9. '<|end|>' → logprob: -6.856949329376221
    10. ' ' → logprob: -7.106949329376221

Token 215: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06024252995848656
    2. ' for' → logprob: -3.1852424144744873
    3. '   ' → logprob: -4.560242652893066
    4. 'print' → logprob: -6.185242652893066
    5. 'results' → logprob: -6.435242652893066
    6. 'if' → logprob: -6.685242652893066
    7. '#' → logprob: -7.435242652893066
    8. '
' → logprob: -7.810242652893066
    9. '```' → logprob: -9.060242652893066
    10. ' results' → logprob: -9.685242652893066

Token 216: ' we' (ID: 581)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.342017412185669
    2. '#' → logprob: -1.717017412185669
    3. ' for' → logprob: -1.717017412185669
    4. 'for' → logprob: -1.967017412185669
    5. 'continue' → logprob: -2.842017412185669
    6. ' pass' → logprob: -2.967017412185669
    7. ' continue' → logprob: -3.092017412185669
    8. ' #' → logprob: -3.967017412185669
    9. '
' → logprob: -3.967017412185669
    10. '   ' → logprob: -4.21701717376709

Token 217: ' don't' (ID: 4128)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.8448285460472107
    2. 'don't' → logprob: -1.8448286056518555
    3. 'need' → logprob: -2.2198286056518555
    4. ' cannot' → logprob: -2.7198286056518555
    5. ' need' → logprob: -3.0948286056518555
    6. 'can't' → logprob: -3.3448286056518555
    7. ' don't' → logprob: -3.3448286056518555
    8. 'lack' → logprob: -3.4698286056518555
    9. ' can't' → logprob: -3.9698286056518555
    10. 'can' → logprob: -4.5948286056518555

Token 218: ' know' (ID: 1761)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.2805330753326416
    2. 'have' → logprob: -1.2805330753326416
    3. 'know' → logprob: -1.4055330753326416
    4. ' know' → logprob: -1.6555330753326416
    5. 'continue' → logprob: -5.5305328369140625
    6. ' continue' → logprob: -6.6555328369140625
    7. ')' → logprob: -8.030532836914062
    8. '   ' → logprob: -8.155532836914062
    9. 'count' → logprob: -8.280532836914062
    10. '```' → logprob: -8.655532836914062

Token 219: ' count' (ID: 3605)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.22341105341911316
    2. 'how' → logprob: -1.8484110832214355
    3. ' the' → logprob: -4.7234110832214355
    4. ' for' → logprob: -4.8484110832214355
    5. 'for' → logprob: -4.9734110832214355
    6. '   ' → logprob: -5.5984110832214355
    7. 'the' → logprob: -5.8484110832214355
    8. ')' → logprob: -6.0984110832214355
    9. ' exactly' → logprob: -6.3484110832214355
    10. 'exact' → logprob: -6.3484110832214355

Token 220: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33544421195983887
    2. 'for' → logprob: -1.5854442119598389
    3. '   ' → logprob: -3.085444211959839
    4. '
' → logprob: -4.960444450378418
    5. '+' → logprob: -5.710444450378418
    6. '#' → logprob: -5.835444450378418
    7. ' used' → logprob: -5.835444450378418
    8. ',' → logprob: -6.585444450378418
    9. ' in' → logprob: -6.585444450378418
    10. ' if' → logprob: -6.710444450378418

Token 221: ' bits' (ID: 18189)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.1457034349441528
    2. 'bits' → logprob: -1.5207034349441528
    3. 'used' → logprob: -2.7707033157348633
    4. 'class' → logprob: -3.1457033157348633
    5. ' used' → logprob: -3.3957033157348633
    6. 'pop' → logprob: -3.3957033157348633
    7. 'the' → logprob: -3.3957033157348633
    8. ' the' → logprob: -3.5207033157348633
    9. ' bits' → logprob: -3.6457033157348633
    10. 'mask' → logprob: -3.7707033157348633

Token 222: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23283854126930237
    2. 'for' → logprob: -2.1078386306762695
    3. '   ' → logprob: -2.6078386306762695
    4. '<|end|>' → logprob: -5.2328386306762695
    5. '
' → logprob: -5.9828386306762695
    6. '#' → logprob: -6.9828386306762695
    7. '    
' → logprob: -7.2328386306762695
    8. ' used' → logprob: -7.3578386306762695
    9. ' if' → logprob: -8.35783863067627
    10. '    ' → logprob: -8.48283863067627

Token 223: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10450298339128494
    2. ' 
' → logprob: -2.9795029163360596
    3. '<|end|>' → logprob: -4.479503154754639
    4. ' for' → logprob: -4.729503154754639
    5. '  
' → logprob: -4.979503154754639
    6. 'for' → logprob: -5.354503154754639
    7. '\n' → logprob: -5.479503154754639
    8. ' if' → logprob: -5.729503154754639
    9. '    
' → logprob: -6.104503154754639
    10. ' ' → logprob: -6.104503154754639

Token 224: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4174763858318329
    2. ' if' → logprob: -1.5424764156341553
    3. 'for' → logprob: -2.5424764156341553
    4. '   ' → logprob: -4.167476177215576
    5. 'if' → logprob: -4.542476177215576
    6. ' results' → logprob: -5.042476177215576
    7. '
' → logprob: -5.542476177215576
    8. ' #' → logprob: -5.542476177215576
    9. '#' (adapté à ' #') → logprob: -6.292476177215576
    10. 'results' → logprob: -6.542476177215576

Token 225: ' Alternative' (ID: 52728)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47152167558670044
    2. 'for' → logprob: -1.8465216159820557
    3. ' if' → logprob: -2.3465216159820557
    4. '   ' → logprob: -2.7215216159820557
    5. ' #' → logprob: -4.346521854400635
    6. ' results' → logprob: -4.471521854400635
    7. 'if' → logprob: -4.471521854400635
    8. '#' → logprob: -5.221521854400635
    9. 'results' → logprob: -5.721521854400635
    10. ' pass' → logprob: -6.221521854400635

Token 226: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0102306604385376
    2. '<|end|>' → logprob: -1.5102306604385376
    3. ' =' → logprob: -2.260230541229248
    4. ' for' → logprob: -2.260230541229248
    5. 'for' → logprob: -2.385230541229248
    6. ',' → logprob: -3.635230541229248
    7. '
' → logprob: -4.385230541229248
    8. ' approach' → logprob: -4.510230541229248
    9. '#' → logprob: -4.885230541229248
    10. '=' → logprob: -5.010230541229248

Token 227: ' store' (ID: 4897)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7977501153945923
    2. ' pass' → logprob: -0.9227501153945923
    3. ' for' → logprob: -2.4227499961853027
    4. 'for' → logprob: -3.4227499961853027
    5. '   ' → logprob: -4.797749996185303
    6. ' continue' → logprob: -5.172749996185303
    7. '#' → logprob: -5.547749996185303
    8. ' #' → logprob: -5.922749996185303
    9. 'continue' → logprob: -6.172749996185303
    10. 'import' → logprob: -7.172749996185303

Token 228: ' dp' (ID: 21546)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.37092068791389465
    2. ' both' → logprob: -2.8709206581115723
    3. ' additional' → logprob: -3.2459206581115723
    4. ' the' → logprob: -3.3709206581115723
    5. ' number' → logprob: -3.7459206581115723
    6. ' counts' → logprob: -3.7459206581115723
    7. ',' → logprob: -3.9959206581115723
    8. ' classes' → logprob: -4.245920658111572
    9. ' dp' → logprob: -4.370920658111572
    10. ' also' → logprob: -4.620920658111572

Token 229: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' count' (ID: 3605)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.538230299949646
    2. 'number' → logprob: -1.788230299949646
    3. 'count' → logprob: -2.2882304191589355
    4. 'counts' → logprob: -2.9132304191589355
    5. ' (' → logprob: -3.0382304191589355
    6. 'the' → logprob: -3.1632304191589355
    7. 'classes' → logprob: -3.1632304191589355
    8. 'used' → logprob: -3.4132304191589355
    9. '...' → logprob: -3.4132304191589355
    10. 'mask' → logprob: -3.7882304191589355

Token 231: ' keys' (ID: 12994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' pass' (ID: 1853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6255305409431458
    2. '<|end|>' → logprob: -1.375530481338501
    3. ')' → logprob: -2.250530481338501
    4. '#' → logprob: -3.000530481338501
    5. ' for' → logprob: -3.125530481338501
    6. '...' → logprob: -5.87553071975708
    7. '```' → logprob: -6.37553071975708
    8. '<|end|>' → logprob: -6.75053071975708
    9. '
' → logprob: -6.87553071975708
    10. 'continue' → logprob: -7.00053071975708

Token 235: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11783483624458313
    2. ' for' → logprob: -2.4928348064422607
    3. '<|end|>' → logprob: -4.11783504486084
    4. '#' → logprob: -4.74283504486084
    5. '
' → logprob: -7.24283504486084
    6. 'class' → logprob: -7.36783504486084
    7. ')' → logprob: -7.99283504486084
    8. '   ' → logprob: -8.11783504486084
    9. 'continue' → logprob: -8.49283504486084
    10. '```' → logprob: -8.61783504486084

Token 236: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10953010618686676
    2. ' for' → logprob: -2.859530210494995
    3. '#' → logprob: -3.484530210494995
    4. '   ' → logprob: -4.859529972076416
    5. '...' → logprob: -5.859529972076416
    6. '```' → logprob: -6.734529972076416
    7. 'from' → logprob: -7.484529972076416
    8. ' #' → logprob: -7.484529972076416
    9. 'results' → logprob: -7.734529972076416
    10. 'if' → logprob: -7.734529972076416

Token 237: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19636939465999603
    2. ' for' → logprob: -1.8213694095611572
    3. '#' → logprob: -4.196369171142578
    4. ' #' → logprob: -7.696369171142578
    5. 'class' → logprob: -8.696369171142578
    6. '   ' → logprob: -9.321369171142578
    7. '
' → logprob: -9.321369171142578
    8. '...' → logprob: -9.446369171142578
    9. ' ' → logprob: -9.571369171142578
    10. '```' → logprob: -9.571369171142578

Token 238: ' handle' (ID: 5318)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29798102378845215
    2. '#' → logprob: -1.9229810237884521
    3. ' for' → logprob: -2.672981023788452
    4. 'dp' → logprob: -3.922981023788452
    5. 'from' → logprob: -4.047981262207031
    6. '...' → logprob: -6.797981262207031
    7. 'classes' → logprob: -7.172981262207031
    8. 'class' → logprob: -7.547981262207031
    9. ' dp' → logprob: -7.547981262207031
    10. ')' → logprob: -7.922981262207031

Token 239: ' limit' (ID: 5967)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2902674674987793
    2. '<|end|>' → logprob: -1.6652674674987793
    3. '```' → logprob: -3.9152674674987793
    4. 'dp' → logprob: -4.790267467498779
    5. ')' → logprob: -4.915267467498779
    6. 'for' → logprob: -5.290267467498779
    7. 'from' → logprob: -5.290267467498779
    8. '...' → logprob: -5.540267467498779
    9. '<|end|>' → logprob: -5.790267467498779
    10. 'class' → logprob: -6.040267467498779

Token 240: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.784364640712738
    2. ' for' → logprob: -1.9093647003173828
    3. 'dp' → logprob: -2.034364700317383
    4. '
' → logprob: -2.534364700317383
    5. 'for' → logprob: -2.534364700317383
    6. ' #' → logprob: -3.284364700317383
    7. ' dp' → logprob: -3.534364700317383
    8. '<|end|>' → logprob: -4.159364700317383
    9. 'class' → logprob: -4.909364700317383
    10. ')' → logprob: -5.534364700317383

Token 241: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16052743792533875
    2. ' for' → logprob: -2.660527467727661
    3. '#' → logprob: -2.785527467727661
    4. '
' → logprob: -4.785527229309082
    5. 'dp' → logprob: -5.160527229309082
    6. 'from' → logprob: -7.160527229309082
    7. 'results' → logprob: -7.410527229309082
    8. 'class' → logprob: -8.160527229309082
    9. ' #' → logprob: -8.535527229309082
    10. '   ' → logprob: -8.660527229309082

Token 242: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.1874314546585083
    2. ' the' → logprob: -1.4374314546585083
    3. ' classes' → logprob: -1.4374314546585083
    4. 'the' → logprob: -2.8124313354492188
    5. ' class' → logprob: -3.6874313354492188
    6. 'classes' → logprob: -4.062431335449219
    7. ' range' → logprob: -4.062431335449219
    8. '#' → logprob: -4.562431335449219
    9. 'count' → logprob: -4.562431335449219
    10. 'for' → logprob: -4.562431335449219

Token 243: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5278691649436951
    2. '_' → logprob: -1.9028692245483398
    3. ' for' → logprob: -2.15286922454834
    4. '#' → logprob: -2.52786922454834
    5. '=' → logprob: -3.65286922454834
    6. ')' → logprob: -4.65286922454834
    7. ' #' → logprob: -5.40286922454834
    8. ' =' → logprob: -5.40286922454834
    9. ' ' → logprob: -5.77786922454834
    10. '   ' → logprob: -5.77786922454834

Token 244: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.5839158892631531
    2. ' classes' → logprob: -1.2089159488677979
    3. ' the' → logprob: -3.083915948867798
    4. 'the' → logprob: -3.458915948867798
    5. 'selected' → logprob: -3.833915948867798
    6. 'class' → logprob: -4.583915710449219
    7. ' selected' → logprob: -4.958915710449219
    8. 'for' → logprob: -5.083915710449219
    9. '#' → logprob: -5.208915710449219
    10. ' for' → logprob: -5.833915710449219

Token 245: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36289483308792114
    2. 'for' → logprob: -1.4878947734832764
    3. 'dp' → logprob: -3.4878947734832764
    4. 'from' → logprob: -4.6128950119018555
    5. ' for' → logprob: -4.7378950119018555
    6. '
' → logprob: -5.1128950119018555
    7. '<|end|>' → logprob: -5.3628950119018555
    8. 'class' → logprob: -5.4878950119018555
    9. 'results' → logprob: -6.1128950119018555
    10. 'pass' → logprob: -6.3628950119018555

Token 246: ' redo' (ID: 109462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2748751938343048
    2. 'for' → logprob: -2.1498751640319824
    3. 'dp' → logprob: -2.5248751640319824
    4. 'from' → logprob: -4.149875164031982
    5. ' for' → logprob: -5.024875164031982
    6. 'pass' → logprob: -5.274875164031982
    7. 'counts' → logprob: -5.399875164031982
    8. 'results' → logprob: -5.649875164031982
    9. 'continue' → logprob: -6.274875164031982
    10. ' #' → logprob: -6.274875164031982

Token 247: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09252338111400604
    2. 'from' → logprob: -2.8425233364105225
    3. '#' → logprob: -3.7175233364105225
    4. '
' → logprob: -6.467523574829102
    5. 'class' → logprob: -6.592523574829102
    6. 'classes' → logprob: -7.217523574829102
    7. 'N' → logprob: -8.092523574829102
    8. 'counts' → logprob: -8.092523574829102
    9. ' from' → logprob: -8.217523574829102
    10. ' dp' → logprob: -8.342523574829102

Token 248: ' with' (ID: 483)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29991385340690613
    2. 'from' → logprob: -2.2999138832092285
    3. 'N' → logprob: -2.4249138832092285
    4. '#' → logprob: -2.9249138832092285
    5. '
' → logprob: -5.2999138832092285
    6. 'class' → logprob: -5.7999138832092285
    7. '```' → logprob: -6.9249138832092285
    8. 'classes' → logprob: -7.0499138832092285
    9. ' 
' → logprob: -7.0499138832092285
    10. ' dp' → logprob: -7.0499138832092285

Token 249: ' class' (ID: 744)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9784184098243713
    2. 'dp' → logprob: -1.4784183502197266
    3. 'for' → logprob: -2.3534183502197266
    4. 'count' → logprob: -2.3534183502197266
    5. 'from' → logprob: -2.6034183502197266
    6. 'classes' → logprob: -3.3534183502197266
    7. '[(' → logprob: -4.228418350219727
    8. 'enumer' → logprob: -4.478418350219727
    9. 'counts' → logprob: -4.603418350219727
    10. 'range' → logprob: -4.853418350219727

Token 250: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0347435474395752
    2. ' count' → logprob: -1.1597435474395752
    3. 's' → logprob: -1.6597435474395752
    4. 'count' → logprob: -2.409743547439575
    5. '_mask' → logprob: -4.909743309020996
    6. 'dp' → logprob: -5.284743309020996
    7. '_counts' → logprob: -5.284743309020996
    8. 'counts' → logprob: -5.284743309020996
    9. ' counts' → logprob: -5.409743309020996
    10. ' dp' → logprob: -5.909743309020996

Token 251: ' dimension' (ID: 21959)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.050348199903964996
    2. 'from' → logprob: -3.6753482818603516
    3. '#' → logprob: -4.925348281860352
    4. 'class' → logprob: -5.175348281860352
    5. '
' → logprob: -5.300348281860352
    6. ' dp' → logprob: -6.175348281860352
    7. 'count' → logprob: -7.175348281860352
    8. 'counts' → logprob: -7.175348281860352
    9. ' from' → logprob: -7.425348281860352
    10. 'classes' → logprob: -8.425348281860352

Token 252: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2499878853559494
    2. 'from' → logprob: -2.999987840652466
    3. '[' → logprob: -3.499987840652466
    4. ' dp' → logprob: -3.499987840652466
    5. ')' → logprob: -3.999987840652466
    6. 'for' → logprob: -4.124988079071045
    7. '#' → logprob: -4.624988079071045
    8. 'N' → logprob: -4.749988079071045
    9. 'class' → logprob: -4.874988079071045
    10. '(' → logprob: -4.999988079071045

Token 253: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017635898664593697
    2. 'from' → logprob: -4.392635822296143
    3. ' dp' → logprob: -6.142635822296143
    4. 'import' → logprob: -6.642635822296143
    5. '#' → logprob: -7.642635822296143
    6. ' from' → logprob: -7.892635822296143
    7. 'class' → logprob: -8.3926362991333
    8. '
' → logprob: -8.3926362991333
    9. 'N' → logprob: -9.5176362991333
    10. 'for' → logprob: -9.8926362991333

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14293071627616882
    2. '=' → logprob: -2.017930746078491
    3. '2' → logprob: -8.76793098449707
    4. '_' → logprob: -9.89293098449707
    5. '[' → logprob: -11.26793098449707
    6. '_new' → logprob: -11.39293098449707
    7. ',' → logprob: -11.89293098449707
    8. '1' → logprob: -12.64293098449707
    9. '=[' → logprob: -13.01793098449707
    10. '0' → logprob: -13.01793098449707

Token 255: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4957320988178253
    2. 'default' → logprob: -0.9957320690155029
    3. '[{' → logprob: -3.995732069015503
    4. '{' → logprob: -5.870732307434082
    5. '[[' → logprob: -9.245732307434082
    6. ' [' → logprob: -9.495732307434082
    7. ' defaultdict' → logprob: -10.745732307434082
    8. '[(' → logprob: -12.745732307434082
    9. '.default' → logprob: -12.870732307434082
    10. '[-' → logprob: -13.620732307434082

Token 256: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6624776721000671
    2. '[-' → logprob: -0.9124776721000671
    3. '{' → logprob: -3.412477731704712
    4. '{-' → logprob: -3.537477731704712
    5. '[' → logprob: -3.912477731704712
    6. '{}' → logprob: -7.912477493286133
    7. '-default' → logprob: -8.912477493286133
    8. '-' → logprob: -9.787477493286133
    9. ' defaultdict' → logprob: -10.037477493286133
    10. '[(' → logprob: -10.037477493286133

Token 257: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -9.088346359931165e-07
    2. ' dict' → logprob: -14.000000953674316
    3. 'ict' → logprob: -18.25
    4. 'ct' → logprob: -19.375
    5. 'Dict' → logprob: -20.0
    6. 'int' → logprob: -22.25
    7. '(dict' → logprob: -22.25
    8. '_dict' → logprob: -23.0
    9. 'list' → logprob: -23.125
    10. 'dic' → logprob: -23.875

Token 258: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20231281220912933
    2. '(int' → logprob: -1.7023128271102905
    3. ']int' → logprob: -7.57731294631958
    4. '[int' → logprob: -8.577312469482422
    5. ',int' → logprob: -9.452312469482422
    6. 'lambda' → logprob: -9.827312469482422
    7. '](' → logprob: -10.827312469482422
    8. '(lambda' → logprob: -11.452312469482422
    9. '```' → logprob: -11.827312469482422
    10. '=int' → logprob: -11.952312469482422

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870488107204437
    2. '()' → logprob: -1.1370488405227661
    3. 'for' → logprob: -9.762048721313477
    4. '())' → logprob: -9.762048721313477
    5. '(' → logprob: -10.637048721313477
    6. ')]' → logprob: -11.512048721313477
    7. ' ()' → logprob: -11.762048721313477
    8. '   ' → logprob: -12.137048721313477
    9. ' )' → logprob: -12.637048721313477
    10. '(L' → logprob: -13.137048721313477

Token 260: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4951027035713196
    2. 'for' → logprob: -1.3701026439666748
    3. ' for' → logprob: -1.9951026439666748
    4. ']' → logprob: -9.370102882385254
    5. ')' → logprob: -9.620102882385254
    6. '(' → logprob: -9.620102882385254
    7. '   ' → logprob: -9.995102882385254
    8. '()]
' → logprob: -10.370102882385254
    9. ' ' → logprob: -10.495102882385254
    10. ']
' → logprob: -10.995102882385254

Token 261: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31407028436660767
    2. ' range' → logprob: -1.314070224761963
    3. '(range' → logprob: -7.439070224761963
    4. '_' → logprob: -9.064070701599121
    5. '_range' → logprob: -9.439070701599121
    6. ' in' → logprob: -11.064070701599121
    7. 'in' → logprob: -11.689070701599121
    8. '	range' → logprob: -15.064070701599121
    9. '_r' → logprob: -15.814070701599121
    10. 'i' → logprob: -15.814070701599121

Token 262: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005250006448477507
    2. ' range' → logprob: -5.255249977111816
    3. '(range' → logprob: -11.380249977111816
    4. 'in' → logprob: -12.505249977111816
    5. ' in' → logprob: -14.005249977111816
    6. 'r' → logprob: -16.380250930786133
    7. 'ran' → logprob: -16.505250930786133
    8. ' ' → logprob: -16.755250930786133
    9. 'rang' → logprob: -17.130250930786133
    10. 'i' → logprob: -17.880250930786133

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024925414472818375
    2. ' range' → logprob: -6.002492427825928
    3. '(range' → logprob: -11.002492904663086
    4. '(L' → logprob: -15.502492904663086
    5. ' ' → logprob: -18.252492904663086
    6. 'rang' → logprob: -18.252492904663086
    7. '   ' → logprob: -18.377492904663086
    8. 'ran' → logprob: -18.752492904663086
    9. '	range' → logprob: -18.752492904663086
    10. 'r' → logprob: -18.877492904663086

Token 264: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.07031874358654022
    2. 'L' → logprob: -2.6953186988830566
    3. ' L' → logprob: -8.445319175720215
    4. ' (' → logprob: -8.820319175720215
    5. '(M' → logprob: -11.695319175720215
    6. '   ' → logprob: -12.445319175720215
    7. '(' → logprob: -12.570319175720215
    8. '	L' → logprob: -13.570319175720215
    9. '[L' → logprob: -13.570319175720215
    10. ',L' → logprob: -14.820319175720215

Token 265: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011718906462192535
    2. ' +' → logprob: -6.751172065734863
    3. '+
' → logprob: -13.876172065734863
    4. ')]' → logprob: -14.751172065734863
    5. '1' → logprob: -16.251171112060547
    6. ')' → logprob: -17.126171112060547
    7. ' ' → logprob: -17.251171112060547
    8. '
' → logprob: -17.501171112060547
    9. 'plus' → logprob: -17.501171112060547
    10. '2' → logprob: -17.626171112060547

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.500017166137695
    3. '2' → logprob: -12.000017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '
' → logprob: -16.000017166137695
    6. '

' → logprob: -16.250017166137695
    7. '```' → logprob: -17.437517166137695
    8. '+' → logprob: -17.500017166137695
    9. '  ' → logprob: -17.812517166137695
    10. '１' → logprob: -18.625017166137695

Token 267: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3144940137863159
    2. ')]
' → logprob: -1.314494013786316
    3. ')]
' → logprob: -7.4394941329956055
    4. ')]

' → logprob: -7.5644941329956055
    5. ']' → logprob: -9.439494132995605
    6. ')' → logprob: -10.314494132995605
    7. ' )' → logprob: -11.939494132995605
    8. ']
' → logprob: -12.314494132995605
    9. ' ]' → logprob: -15.064494132995605
    10. ')
' → logprob: -15.189494132995605

Token 268: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.2007883671903983e-05
    2. '
' → logprob: -10.875021934509277
    3. ' dp' → logprob: -13.125021934509277
    4. 'for' → logprob: -14.125021934509277
    5. '(dp' → logprob: -16.500022888183594
    6. '	dp' → logprob: -16.750022888183594
    7. '```' → logprob: -16.875022888183594
    8. '0' → logprob: -17.875022888183594
    9. '_dp' → logprob: -17.875022888183594
    10. '[' → logprob: -18.000022888183594

Token 269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '0' → logprob: -12.500005722045898
    3. '[
' → logprob: -14.625005722045898
    4. '
' → logprob: -15.250005722045898
    5. ' [' → logprob: -15.375005722045898
    6. '```' → logprob: -15.500005722045898
    7. '=' → logprob: -16.0000057220459
    8. ')[' → logprob: -16.8750057220459
    9. '][' → logprob: -16.8750057220459
    10. 's' → logprob: -17.2500057220459

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -14.250001907348633
    4. '
' → logprob: -17.187501907348633
    5. '000' → logprob: -17.687501907348633
    6. '][' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. ')' → logprob: -18.000001907348633
    9. '۰' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.187501907348633

Token 271: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000536232371814549
    2. '[' → logprob: -7.8755364418029785
    3. ']' → logprob: -9.00053596496582
    4. ']={' → logprob: -10.87553596496582
    5. ' ][' → logprob: -11.37553596496582
    6. '0' → logprob: -14.25053596496582
    7. ']=' → logprob: -14.62553596496582
    8. ']{' → logprob: -14.75053596496582
    9. '"][' → logprob: -15.62553596496582
    10. ''][' → logprob: -16.12553596496582

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -20.625
    4. '00' → logprob: -20.75
    5. '۰' → logprob: -20.875
    6. '000' → logprob: -21.5
    7. ')' → logprob: -21.5
    8. '０' → logprob: -22.125
    9. '(' → logprob: -22.375
    10. '
' → logprob: -22.75

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005633997498080134
    2. ']=' → logprob: -7.875563621520996
    3. ' ]' → logprob: -8.625563621520996
    4. '=' → logprob: -12.750563621520996
    5. ')' → logprob: -15.375563621520996
    6. ' =' → logprob: -15.500563621520996
    7. '0' → logprob: -15.625563621520996
    8. ' ' → logprob: -16.50056266784668
    9. '[' → logprob: -16.75056266784668
    10. 'x' → logprob: -16.75056266784668

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4803404211997986
    2. ' =' → logprob: -0.9803404211997986
    3. ']' → logprob: -5.105340480804443
    4. ']=' → logprob: -8.730340003967285
    5. ')' → logprob: -12.105340003967285
    6. '[' → logprob: -12.105340003967285
    7. ' ' → logprob: -13.355340003967285
    8. '0' → logprob: -13.480340003967285
    9. ' ]' → logprob: -13.480340003967285
    10. '```' → logprob: -14.480340003967285

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.000001907348633
    4. 'True' → logprob: -20.312501907348633
    5. '00' → logprob: -20.687501907348633
    6. '০' → logprob: -20.812501907348633
    7. 'true' → logprob: -21.062501907348633
    8. '０' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.187501907348633
    10. '1' → logprob: -21.312501907348633

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'True' → logprob: -16.375003814697266
    4. '۰' → logprob: -18.250003814697266
    5. 'true' → logprob: -18.312503814697266
    6. '1' → logprob: -18.687503814697266
    7. '   ' → logprob: -19.000003814697266
    8. '０' → logprob: -19.250003814697266
    9. '00' → logprob: -19.750003814697266
    10. '  ' → logprob: -19.937503814697266

Token 277: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011081653647124767
    2. ' for' → logprob: -4.511081695556641
    3. '   ' → logprob: -10.63608169555664
    4. '
' → logprob: -12.01108169555664
    5. '<|end|>' → logprob: -13.38608169555664
    6. ')' → logprob: -13.76108169555664
    7. '```' → logprob: -14.88608169555664
    8. '	for' → logprob: -15.63608169555664
    9. ',' → logprob: -15.76108169555664
    10. '    
' → logprob: -16.01108169555664

Token 278: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002043748099822551
    2. ' for' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.375204086303711
    4. '
' → logprob: -15.500204086303711
    5. '```' → logprob: -16.12520408630371
    6. '    
' → logprob: -19.00020408630371
    7. '	for' → logprob: -19.12520408630371
    8. '``' → logprob: -19.75020408630371
    9. ' 
' → logprob: -20.37520408630371
    10. ')' → logprob: -20.87520408630371

Token 279: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.011609341949224472
    2. ' mask' → logprob: -4.6366095542907715
    3. '(mask' → logprob: -7.1366095542907715
    4. '_mask' → logprob: -7.6366095542907715
    5. 'm' → logprob: -8.636609077453613
    6. 'idx' → logprob: -9.011609077453613
    7. '_,' → logprob: -9.386609077453613
    8. 'i' → logprob: -9.636609077453613
    9. '(' → logprob: -10.761609077453613
    10. ' (' → logprob: -10.886609077453613

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00216394430026412
    2. ' in' → logprob: -7.252163887023926
    3. ' ,' → logprob: -7.252163887023926
    4. ',t' → logprob: -7.627163887023926
    5. 'in' → logprob: -9.627163887023926
    6. ',num' → logprob: -10.502163887023926
    7. ',k' → logprob: -10.502163887023926
    8. ',l' → logprob: -10.877163887023926
    9. 't' → logprob: -11.002163887023926
    10. ',i' → logprob: -11.127163887023926

Token 281: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01815076172351837
    2. ' t' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.768150329589844
    4. ' ' → logprob: -15.643150329589844
    5. '`t' → logprob: -16.143150329589844
    6. '	t' → logprob: -16.268150329589844
    7. 'time' → logprob: -16.643150329589844
    8. '  ' → logprob: -17.268150329589844
    9. '    ' → logprob: -18.018150329589844
    10. '_t' → logprob: -19.143150329589844

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004724987084046006
    2. 'in' → logprob: -7.750472545623779
    3. 'n' → logprob: -10.250472068786621
    4. ' i' → logprob: -12.875472068786621
    5. ',' → logprob: -14.250472068786621
    6. 'import' → logprob: -14.500472068786621
    7. 'i' → logprob: -14.750472068786621
    8. 's' → logprob: -14.875472068786621
    9. 'for' → logprob: -15.125472068786621
    10. '_in' → logprob: -15.625472068786621

Token 283: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.02079656720161438
    2. ' classes' → logprob: -3.895796537399292
    3. 'enumer' → logprob: -8.895796775817871
    4. '(classes' → logprob: -9.645796775817871
    5. ' enumerate' → logprob: -10.270796775817871
    6. 'class' → logprob: -11.895796775817871
    7. 'range' → logprob: -12.895796775817871
    8. '[(' → logprob: -13.770796775817871
    9. '   ' → logprob: -13.770796775817871
    10. ' ' → logprob: -14.145796775817871

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04012073948979378
    2. ':
' → logprob: -3.915120840072632
    3. '   ' → logprob: -4.040120601654053
    4. ' for' → logprob: -7.415120601654053
    5. ',' → logprob: -7.665120601654053
    6. '<|end|>' → logprob: -8.040121078491211
    7. '<|end|>' → logprob: -9.540121078491211
    8. '       ' → logprob: -9.665121078491211
    9. '=' → logprob: -10.165121078491211
    10. '	for' → logprob: -10.415121078491211

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04302122816443443
    2. ' for' → logprob: -3.1680212020874023
    3. 'for' → logprob: -11.418021202087402
    4. '```' → logprob: -11.793021202087402
    5. '   ' → logprob: -13.793021202087402
    6. '       ' → logprob: -14.543021202087402
    7. '<|end|>' → logprob: -14.793021202087402
    8. '    ' → logprob: -14.918021202087402
    9. '	for' → logprob: -15.168021202087402
    10. ' from' → logprob: -15.293021202087402

Token 286: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46438536047935486
    2. 'for' (adapté à ' for') → logprob: -1.4643853902816772
    3. '   ' → logprob: -1.9643853902816772
    4. '	for' → logprob: -11.714385032653809
    5. 'from' → logprob: -12.964385032653809
    6. '```' → logprob: -13.589385032653809
    7. ' range' → logprob: -13.839385032653809
    8. 'range' → logprob: -13.964385032653809
    9. '       ' → logprob: -14.464385032653809
    10. '    ' → logprob: -14.464385032653809

Token 287: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8529486656188965
    2. 'cnt' → logprob: -1.3529486656188965
    3. 'i' → logprob: -2.2279486656188965
    4. 'count' → logprob: -2.3529486656188965
    5. 'l' → logprob: -2.4779486656188965
    6. 'used' → logprob: -4.8529486656188965
    7. 'num' → logprob: -5.2279486656188965
    8. 'j' → logprob: -5.6029486656188965
    9. 'k' → logprob: -5.7279486656188965
    10. 'x' → logprob: -5.7279486656188965

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -3.531315314830863e-06
    2. 'in' → logprob: -13.875003814697266
    3. 't' → logprob: -14.500003814697266
    4. 'v' → logprob: -15.125003814697266
    5. 'l' → logprob: -15.500003814697266
    6. ' ' → logprob: -15.500003814697266
    7. 's' → logprob: -15.500003814697266
    8. '_' → logprob: -15.875003814697266
    9. 'x' → logprob: -16.000003814697266
    10. 'range' → logprob: -16.125003814697266

Token 289: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. 're' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.625001907348633
    5. 'reverse' → logprob: -19.875001907348633
    6. 'r' → logprob: -20.250001907348633
    7. '
' → logprob: -21.000001907348633
    8. 'rang' → logprob: -21.625001907348633
    9. '(range' → logprob: -21.750001907348633
    10. '	range' → logprob: -22.250001907348633

Token 290: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005551783833652735
    2. ' L' → logprob: -7.500555038452148
    3. '(L' → logprob: -13.500555038452148
    4. '	L' → logprob: -14.250555038452148
    5. '   ' → logprob: -16.25055503845215
    6. '[L' → logprob: -16.62555503845215
    7. ',L' → logprob: -18.00055503845215
    8. '>L' → logprob: -18.37555503845215
    9. ' ' → logprob: -19.37555503845215
    10. 'from' → logprob: -19.50055503845215

Token 291: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23733492195606232
    2. '-' → logprob: -2.362334966659546
    3. ' ,' → logprob: -2.987334966659546
    4. '+' → logprob: -3.237334966659546
    5. ',-' → logprob: -3.862334966659546
    6. ' -' → logprob: -5.362334728240967
    7. ' ,-' → logprob: -7.112334728240967
    8. ' +' → logprob: -7.612334728240967
    9. ',
' → logprob: -8.987335205078125
    10. '1' → logprob: -9.237335205078125

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -12.25001335144043
    3. '-' → logprob: -12.50001335144043
    4. '0' → logprob: -13.12501335144043
    5. ' -' → logprob: -14.00001335144043
    6. ',' → logprob: -14.37501335144043
    7. '+' → logprob: -14.62501335144043
    8. '```' → logprob: -15.00001335144043
    9. '
' → logprob: -15.12501335144043
    10. 'len' → logprob: -16.25001335144043

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008783090859651566
    2. ',-' → logprob: -5.008782863616943
    3. ' ,' → logprob: -6.258782863616943
    4. '+' → logprob: -9.008783340454102
    5. ' ,-' → logprob: -10.758783340454102
    6. ',+' → logprob: -12.883783340454102
    7. ',
' → logprob: -13.508783340454102
    8. ' +' → logprob: -13.633783340454102
    9. '+,' → logprob: -13.633783340454102
    10. '-' → logprob: -13.883783340454102

Token 294: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020354038861114532
    2. ' -' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.87520408630371
    4. '−' → logprob: -20.87520408630371
    5. '0' → logprob: -21.37520408630371
    6. '=-' → logprob: -22.12520408630371
    7. '
' → logprob: -22.25020408630371
    8. '	' → logprob: -22.37520408630371
    9. '  ' → logprob: -22.62520408630371
    10. '...' → logprob: -22.62520408630371

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '```' → logprob: -14.12500286102295
    4. '   ' → logprob: -16.375001907348633
    5. '
' → logprob: -16.500001907348633
    6. '``' → logprob: -16.875001907348633
    7. ',' → logprob: -16.937501907348633
    8. ' -' → logprob: -17.625001907348633
    9. '`' → logprob: -17.750001907348633
    10. '=' → logprob: -17.750001907348633

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006660910439677536
    2. ' ,' → logprob: -7.50066614151001
    3. ',-' → logprob: -9.250665664672852
    4. '-' → logprob: -11.250665664672852
    5. ' ,-' → logprob: -12.750665664672852
    6. ' -' → logprob: -14.625665664672852
    7. '```' → logprob: -15.125665664672852
    8. ',
' → logprob: -15.375665664672852
    9. '1' → logprob: -16.00066566467285
    10. '   ' → logprob: -16.37566566467285

Token 297: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002809036523103714
    2. ' -' → logprob: -5.877809047698975
    3. '   ' → logprob: -12.752808570861816
    4. ' ' → logprob: -14.502808570861816
    5. ',' → logprob: -14.877808570861816
    6. '1' → logprob: -15.252808570861816
    7. '  ' → logprob: -16.377809524536133
    8. '```' → logprob: -16.502809524536133
    9. ')' → logprob: -16.877809524536133
    10. ',-' → logprob: -17.002809524536133

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -16.875
    4. '   ' → logprob: -17.375
    5. '```' → logprob: -17.625
    6. ')' → logprob: -19.375
    7. ',' → logprob: -19.5
    8. '

' → logprob: -19.75
    9. '``' → logprob: -20.3125
    10. '１' → logprob: -20.375

Token 299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12707394361495972
    2. '):' → logprob: -2.1270740032196045
    3. ' ):
' → logprob: -9.252074241638184
    4. '   ' → logprob: -10.752074241638184
    5. ' ):' → logprob: -11.502074241638184
    6. '):
' → logprob: -11.877074241638184
    7. ')' → logprob: -12.377074241638184
    8. '):

' → logprob: -13.002074241638184
    9. '0' → logprob: -13.877074241638184
    10. ':' → logprob: -14.002074241638184

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00460860738530755
    2. ':' → logprob: -6.129608631134033
    3. ' for' → logprob: -6.254608631134033
    4. ',' → logprob: -8.754608154296875
    5. ':
' → logprob: -8.879608154296875
    6. '   ' → logprob: -9.629608154296875
    7. 'for' → logprob: -10.004608154296875
    8. '      ' → logprob: -10.629608154296875
    9. '     ' → logprob: -10.629608154296875
    10. '    ' → logprob: -11.129608154296875

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027816543355584145
    2. '           ' → logprob: -4.0278167724609375
    3. ' for' → logprob: -5.2778167724609375
    4. '       ' → logprob: -6.1528167724609375
    5. '   ' → logprob: -6.6528167724609375
    6. 'used' → logprob: -7.0278167724609375
    7. '```' → logprob: -9.402816772460938
    8. ',' → logprob: -9.652816772460938
    9. '               ' → logprob: -10.902816772460938
    10. 'current' → logprob: -11.652816772460938

Token 302: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.306760805164231e-05
    2. ' used' → logprob: -11.25001335144043
    3. '_used' → logprob: -19.12501335144043
    4. 's' → logprob: -19.62501335144043
    5. 'val' → logprob: -19.62501335144043
    6. 'use' → logprob: -19.62501335144043
    7. 'u' → logprob: -19.87501335144043
    8. '.used' → logprob: -20.25001335144043
    9. 'key' → logprob: -20.50001335144043
    10. 'Used' → logprob: -20.75001335144043

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022456541191786528
    2. ',val' → logprob: -6.3772454261779785
    3. ' ,' → logprob: -7.7522454261779785
    4. ',value' → logprob: -10.127245903015137
    5. 'in' → logprob: -10.252245903015137
    6. ' in' → logprob: -10.752245903015137
    7. ',in' → logprob: -12.252245903015137
    8. ',int' → logprob: -12.752245903015137
    9. '_val' → logprob: -13.627245903015137
    10. '_,' → logprob: -13.877245903015137

Token 304: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12692810595035553
    2. ' val' → logprob: -2.1269280910491943
    3. 'value' → logprob: -17.376928329467773
    4. 'v' → logprob: -17.876928329467773
    5. '   ' → logprob: -17.876928329467773
    6. '	val' → logprob: -18.251928329467773
    7. '_val' → logprob: -18.251928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '[val' → logprob: -19.126928329467773
    10. ',val' → logprob: -19.376928329467773

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17997607588768005
    2. 'in' → logprob: -1.8049761056900024
    3. ')' → logprob: -8.804976463317871
    4. '	in' → logprob: -10.054976463317871
    5. ' ' → logprob: -11.304976463317871
    6. ',' → logprob: -12.679976463317871
    7. '   ' → logprob: -12.804976463317871
    8. ' ' → logprob: -13.054976463317871
    9. '_in' → logprob: -13.054976463317871
    10. 'In' → logprob: -13.054976463317871

Token 306: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06715406477451324
    2. 'dp' → logprob: -3.3171541690826416
    3. ' list' → logprob: -3.5671541690826416
    4. ' dp' → logprob: -7.6921539306640625
    5. 'li' → logprob: -16.567153930664062
    6. ' ' → logprob: -16.692153930664062
    7. 'dict' → logprob: -17.317153930664062
    8. 'sorted' → logprob: -17.442153930664062
    9. 'lp' → logprob: -17.567153930664062
    10. '   ' → logprob: -17.942153930664062

Token 307: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.03368397057056427
    2. 'dp' → logprob: -3.408684015274048
    3. ' dp' → logprob: -10.908683776855469
    4. 'in' → logprob: -11.908683776855469
    5. '(' → logprob: -12.533683776855469
    6. ' (' → logprob: -12.908683776855469
    7. ' in' → logprob: -13.408683776855469
    8. '	dp' → logprob: -13.533683776855469
    9. '_dp' → logprob: -13.658683776855469
    10. '(
' → logprob: -14.408683776855469

Token 308: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.3306015716807451e-05
    2. ')[' → logprob: -13.12501335144043
    3. '   ' → logprob: -13.25001335144043
    4. 'l' → logprob: -13.37501335144043
    5. '[' → logprob: -13.37501335144043
    6. '
' → logprob: -13.62501335144043
    7. '           ' → logprob: -13.75001335144043
    8. '       ' → logprob: -13.75001335144043
    9. ' [' → logprob: -14.25001335144043
    10. '[
' → logprob: -14.62501335144043

Token 309: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.08859008550643921
    2. '.items' → logprob: -2.838590145111084
    3. '].' → logprob: -3.963590145111084
    4. 'items' → logprob: -4.963590145111084
    5. '   ' → logprob: -9.213589668273926
    6. '().' → logprob: -9.463589668273926
    7. ' items' → logprob: -10.088589668273926
    8. '()).' → logprob: -10.838589668273926
    9. '       ' → logprob: -11.588589668273926
    10. ' ).' → logprob: -12.338589668273926

Token 310: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -3.173704271830502e-06
    2. '.items' → logprob: -13.00000286102295
    3. ' items' → logprob: -14.00000286102295
    4. '	items' → logprob: -19.500003814697266
    5. '(items' → logprob: -20.500003814697266
    6. '_items' → logprob: -20.625003814697266
    7. '```' → logprob: -21.500003814697266
    8. '
' → logprob: -23.625003814697266
    9. ')' → logprob: -24.000003814697266
    10. 'tems' → logprob: -24.250003814697266

Token 311: '()):
' (ID: 83536)
  Prédit: '()):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()):
' → logprob: -0.474360853433609
    2. '()' → logprob: -0.9743608236312866
    3. '):' → logprob: -8.599360466003418
    4. '):
' → logprob: -9.474360466003418
    5. '())' → logprob: -11.849360466003418
    6. '():
' → logprob: -12.474360466003418
    7. ' (' → logprob: -12.599360466003418
    8. '(' → logprob: -12.849360466003418
    9. '():' → logprob: -12.974360466003418
    10. '   ' → logprob: -13.724360466003418

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.468279752880335e-05
    2. ' if' → logprob: -10.125064849853516
    3. '          ' → logprob: -11.250064849853516
    4. '<|end|>' → logprob: -12.625064849853516
    5. '	       ' → logprob: -13.375064849853516
    6. ':' → logprob: -13.375064849853516
    7. ',' → logprob: -13.625064849853516
    8. '         ' → logprob: -13.875064849853516
    9. '            ' → logprob: -14.125064849853516
    10. '<|end|>' → logprob: -14.625064849853516

Token 313: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4369146227836609
    2. '           ' → logprob: -1.1869146823883057
    3. ' if' → logprob: -3.0619146823883057
    4. '            ' → logprob: -6.811914443969727
    5. '   ' → logprob: -7.686914443969727
    6. '                   ' → logprob: -9.186914443969727
    7. 'if' (adapté à ' if') → logprob: -9.561914443969727
    8. '              ' → logprob: -9.561914443969727
    9. '             ' → logprob: -9.686914443969727
    10. ' ' → logprob: -10.186914443969727

Token 314: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4742485582828522
    2. '(' → logprob: -0.9742485284805298
    3. '(not' → logprob: -9.474248886108398
    4. '           ' → logprob: -9.599248886108398
    5. '               ' → logprob: -10.974248886108398
    6. '   ' → logprob: -13.099248886108398
    7. '            ' → logprob: -13.724248886108398
    8. '(user' → logprob: -13.849248886108398
    9. ' used' → logprob: -13.974248886108398
    10. '             ' → logprob: -14.349248886108398

Token 315: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0010671088239178061
    2. '(' → logprob: -7.376067161560059
    3. ' used' → logprob: -7.751067161560059
    4. '   ' → logprob: -11.876067161560059
    5. ' (' → logprob: -13.251067161560059
    6. '.used' → logprob: -15.001067161560059
    7. ' ' → logprob: -15.126067161560059
    8. '  ' → logprob: -15.501067161560059
    9. '_used' → logprob: -15.751067161560059
    10. 'Used' → logprob: -16.626066207885742

Token 316: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.029753616079688072
    2. '&' → logprob: -3.5297536849975586
    3. '&amp' → logprob: -13.779753684997559
    4. ' ' → logprob: -14.279753684997559
    5. '&nbsp' → logprob: -14.779753684997559
    6. ' &
' → logprob: -15.279753684997559
    7. '＆' → logprob: -15.529753684997559
    8. '&p' → logprob: -16.154752731323242
    9. '&
' → logprob: -16.279752731323242
    10. '&m' → logprob: -16.279752731323242

Token 317: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0788937583565712
    2. ' mask' → logprob: -2.5788936614990234
    3. '(mask' → logprob: -12.953893661499023
    4. '	mask' → logprob: -13.703893661499023
    5. '   ' → logprob: -15.828893661499023
    6. '_mask' → logprob: -16.578893661499023
    7. ' ' → logprob: -16.578893661499023
    8. ')' → logprob: -16.703893661499023
    9. '```' → logprob: -17.578893661499023
    10. '
' → logprob: -17.703893661499023

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. ')==' → logprob: -9.875052452087402
    3. '==' → logprob: -14.500052452087402
    4. ' )' → logprob: -14.875052452087402
    5. '）' → logprob: -16.250051498413086
    6. ' ==' → logprob: -18.875051498413086
    7. ')=' → logprob: -19.000051498413086
    8. '[' → logprob: -20.125051498413086
    9. ')

' → logprob: -20.500051498413086
    10. '')' → logprob: -20.625051498413086

Token 319: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013779717264696956
    2. ')==' → logprob: -6.876378059387207
    3. '==' → logprob: -8.001378059387207
    4. ' )' → logprob: -12.251378059387207
    5. ' ==' → logprob: -12.376378059387207
    6. '）' → logprob: -14.376378059387207
    7. '=' → logprob: -15.126378059387207
    8. ']==' → logprob: -16.50137710571289
    9. ')=' → logprob: -16.50137710571289
    10. '```' → logprob: -16.50137710571289

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.628177642822266
    4. '  ' → logprob: -17.878177642822266
    5. '```' → logprob: -18.128177642822266
    6. ')' → logprob: -18.753177642822266
    7. '۰' → logprob: -19.003177642822266
    8. ' ' → logprob: -19.128177642822266
    9. '=' → logprob: -19.753177642822266
    10. '０' → logprob: -20.315677642822266

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.250003814697266
    4. ')' → logprob: -20.500003814697266
    5. '=' → logprob: -20.750003814697266
    6. '```' → logprob: -20.875003814697266
    7. '۰' → logprob: -21.125003814697266
    8. '  ' → logprob: -21.875003814697266
    9. '０' → logprob: -22.250003814697266
    10. ' ' → logprob: -22.375003814697266

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04062267765402794
    2. ':
' → logprob: -3.2906227111816406
    3. '               ' → logprob: -6.290622711181641
    4. '           ' → logprob: -8.04062271118164
    5. '):' → logprob: -9.04062271118164
    6. '):
' → logprob: -9.16562271118164
    7. '=' → logprob: -9.41562271118164
    8. ')' → logprob: -10.54062271118164
    9. ':

' → logprob: -10.79062271118164
    10. ',' → logprob: -10.91562271118164

Token 323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024695901665836573
    2. ' dp' → logprob: -6.127469539642334
    3. '           ' → logprob: -9.002470016479492
    4. 'dp' → logprob: -10.127470016479492
    5. '              ' → logprob: -10.752470016479492
    6. '                   ' → logprob: -11.002470016479492
    7. '(dp' → logprob: -11.127470016479492
    8. ',' → logprob: -11.502470016479492
    9. '                
' → logprob: -11.502470016479492
    10. ':' → logprob: -11.627470016479492

Token 324: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25791677832603455
    2. ' dp' → logprob: -1.507916808128357
    3. '                   ' → logprob: -5.2579169273376465
    4. '               ' → logprob: -7.3829169273376465
    5. '	dp' → logprob: -9.382916450500488
    6. '_dp' → logprob: -11.132916450500488
    7. '
' → logprob: -11.882916450500488
    8. '(dp' → logprob: -12.007916450500488
    9. '                       ' → logprob: -12.132916450500488
    10. '   ' → logprob: -12.132916450500488

Token 325: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.25000286102295
    3. '   ' → logprob: -15.62500286102295
    4. '           ' → logprob: -16.000001907348633
    5. '][' → logprob: -16.250001907348633
    6. 'l' → logprob: -16.250001907348633
    7. '[
' → logprob: -16.500001907348633
    8. ' [' → logprob: -16.625001907348633
    9. '[L' → logprob: -16.875001907348633
    10. '               ' → logprob: -17.250001907348633

Token 326: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015248565468937159
    2. ' +' → logprob: -6.501524925231934
    3. '+l' → logprob: -10.876524925231934
    4. '][' → logprob: -13.126524925231934
    5. '[l' → logprob: -14.501524925231934
    6. '+
' → logprob: -15.251524925231934
    7. '[' → logprob: -15.501524925231934
    8. '   ' → logprob: -15.626524925231934
    9. '+[' → logprob: -16.001523971557617
    10. '＋' → logprob: -16.501523971557617

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.240481914370321e-05
    2. '][' → logprob: -10.125052452087402
    3. ' ' → logprob: -12.625052452087402
    4. 'mask' → logprob: -13.000052452087402
    5. '[' → logprob: -13.125052452087402
    6. '   ' → logprob: -13.500052452087402
    7. '{' → logprob: -13.625052452087402
    8. ']' → logprob: -13.875052452087402
    9. '```' → logprob: -14.500052452087402
    10. '
' → logprob: -15.500052452087402

Token 328: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.327856630785391e-05
    2. ' ][' → logprob: -10.375082969665527
    3. '   ' → logprob: -10.750082969665527
    4. ']' → logprob: -11.125082969665527
    5. '[' → logprob: -11.750082969665527
    6. '       ' → logprob: -13.250082969665527
    7. ' ' → logprob: -13.250082969665527
    8. '           ' → logprob: -13.375082969665527
    9. '    ' → logprob: -14.375082969665527
    10. '```' → logprob: -14.750082969665527

Token 329: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -9.014684110297821e-06
    2. ' used' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.125009536743164
    4. '
' → logprob: -18.375009536743164
    5. '(' → logprob: -19.625009536743164
    6. '.used' → logprob: -19.625009536743164
    7. '
' → logprob: -19.875009536743164
    8. '_used' → logprob: -20.125009536743164
    9. ' ' → logprob: -20.625009536743164
    10. '```' → logprob: -20.875009536743164

Token 330: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.062263213098049164
    2. '|' → logprob: -2.812263250350952
    3. ']' → logprob: -8.187263488769531
    4. ' ]' → logprob: -11.687263488769531
    5. ' |=' → logprob: -12.187263488769531
    6. ' ' → logprob: -13.062263488769531
    7. ' ' → logprob: -14.437263488769531
    8. '│' → logprob: -15.062263488769531
    9. ']=' → logprob: -15.562263488769531
    10. '   ' → logprob: -15.937263488769531

Token 331: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.04858850687742233
    2. ' mask' → logprob: -3.048588514328003
    3. '(mask' → logprob: -14.298588752746582
    4. '	mask' → logprob: -14.548588752746582
    5. ' ' → logprob: -18.048587799072266
    6. '
' → logprob: -18.048587799072266
    7. 'm' → logprob: -18.423587799072266
    8. '_mask' → logprob: -18.423587799072266
    9. '   ' → logprob: -18.798587799072266
    10. ' ' → logprob: -19.548587799072266

Token 332: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.976922744186595e-05
    2. ']=' → logprob: -10.250040054321289
    3. ' ]' → logprob: -13.000040054321289
    4. ')' → logprob: -13.625040054321289
    5. '])' → logprob: -14.125040054321289
    6. ')]' → logprob: -15.750040054321289
    7. '=' → logprob: -17.37504005432129
    8. ']
' → logprob: -18.75004005432129
    9. '`]' → logprob: -19.25004005432129
    10. '']' → logprob: -19.50004005432129

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1643669158220291
    2. ' =' → logprob: -1.9143669605255127
    3. ']' → logprob: -5.789366722106934
    4. ']=' → logprob: -6.914366722106934
    5. '=max' → logprob: -9.539366722106934
    6. ')=' → logprob: -12.289366722106934
    7. ')' → logprob: -12.664366722106934
    8. 'max' → logprob: -14.289366722106934
    9. '   ' → logprob: -16.03936767578125
    10. '=

' → logprob: -16.53936767578125

Token 334: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25192907452583313
    2. ' max' → logprob: -1.5019290447235107
    3. '	max' → logprob: -17.501928329467773
    4. '(max' → logprob: -18.751928329467773
    5. '   ' → logprob: -19.251928329467773
    6. '=max' → logprob: -19.251928329467773
    7. '[max' → logprob: -20.501928329467773
    8. ' ' → logprob: -20.626928329467773
    9. ',max' → logprob: -21.001928329467773
    10. '_max' → logprob: -21.126928329467773

Token 335: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.500028610229492
    3. 'dp' → logprob: -14.625028610229492
    4. '(
' → logprob: -16.375028610229492
    5. '	dp' → logprob: -18.375028610229492
    6. '(d' → logprob: -18.750028610229492
    7. '(df' → logprob: -18.750028610229492
    8. '(dt' → logprob: -19.375028610229492
    9. ' dp' → logprob: -19.500028610229492
    10. ' (' → logprob: -19.625028610229492

Token 336: '[l' (ID: 38286)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.030619226396083832
    2. '.get' → logprob: -3.5306191444396973
    3. 'dp' → logprob: -8.030619621276855
    4. 'get' → logprob: -8.280619621276855
    5. '(' → logprob: -8.780619621276855
    6. '[' → logprob: -9.655619621276855
    7. '(get' → logprob: -10.780619621276855
    8. '.dp' → logprob: -10.905619621276855
    9. '(
' → logprob: -11.030619621276855
    10. '	dp' → logprob: -12.030619621276855

Token 337: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01747225970029831
    2. '[l' → logprob: -4.142472267150879
    3. '+l' → logprob: -6.767472267150879
    4. '][' → logprob: -9.142472267150879
    5. '[' → logprob: -9.892472267150879
    6. '.get' → logprob: -10.267472267150879
    7. '+[' → logprob: -10.892472267150879
    8. ' +' → logprob: -11.142472267150879
    9. '].' → logprob: -11.392472267150879
    10. '}[' → logprob: -11.892472267150879

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01923595555126667
    2. 'get' → logprob: -4.394236087799072
    3. '(l' → logprob: -6.144236087799072
    4. 'mask' → logprob: -6.894236087799072
    5. 'val' → logprob: -7.019236087799072
    6. '[' → logprob: -7.519236087799072
    7. '[l' → logprob: -8.019235610961914
    8. '(' → logprob: -8.019235610961914
    9. ' ' → logprob: -8.644235610961914
    10. '.get' → logprob: -8.644235610961914

Token 339: '].' (ID: 1651)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.18374396860599518
    2. '].' → logprob: -1.808743953704834
    3. '[' → logprob: -6.058743953704834
    4. 'get' → logprob: -7.558743953704834
    5. ').' → logprob: -7.683743953704834
    6. ' .' → logprob: -8.558744430541992
    7. '.' → logprob: -8.933744430541992
    8. '][' → logprob: -9.183744430541992
    9. '
' → logprob: -9.558744430541992
    10. ' ].' → logprob: -9.683744430541992

Token 340: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7111685276031494
    2. 'dp' → logprob: -0.7111685276031494
    3. '.get' → logprob: -4.08616828918457
    4. 'used' → logprob: -6.96116828918457
    5. 'val' → logprob: -9.58616828918457
    6. '(' → logprob: -11.58616828918457
    7. ' dp' → logprob: -11.58616828918457
    8. '[' → logprob: -12.46116828918457
    9. ' get' → logprob: -12.58616828918457
    10. '.' → logprob: -12.83616828918457

Token 341: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. 'used' → logprob: -12.000006675720215
    3. '((' → logprob: -14.500006675720215
    4. ' (' → logprob: -15.750006675720215
    5. '```' → logprob: -16.00000762939453
    6. '`' → logprob: -16.62500762939453
    7. '   ' → logprob: -19.50000762939453
    8. '(user' → logprob: -19.75000762939453
    9. '(using' → logprob: -20.00000762939453
    10. ' used' → logprob: -20.00000762939453

Token 342: 'used' (ID: 4943)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197945028543472
    2. 'used' → logprob: -2.8119795322418213
    3. ' used' → logprob: -12.186979293823242
    4. '```' → logprob: -13.061979293823242
    5. ' (' → logprob: -13.811979293823242
    6. '`' → logprob: -14.186979293823242
    7. ' ' → logprob: -14.436979293823242
    8. 'Used' → logprob: -14.436979293823242
    9. '   ' → logprob: -14.811979293823242
    10. '
' → logprob: -14.811979293823242

Token 343: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.07978569716215134
    2. ' |' → logprob: -2.9547855854034424
    3. '(' → logprob: -4.0797858238220215
    4. 'used' → logprob: -5.2047858238220215
    5. '[' → logprob: -6.4547858238220215
    6. ',' → logprob: -8.829785346984863
    7. ' ' → logprob: -8.954785346984863
    8. ' (' → logprob: -9.579785346984863
    9. ' used' → logprob: -9.704785346984863
    10. '   ' → logprob: -9.954785346984863

Token 344: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0007336281123571098
    2. ' mask' → logprob: -7.250733852386475
    3. '(mask' → logprob: -10.750733375549316
    4. '	mask' → logprob: -13.750733375549316
    5. '_mask' → logprob: -14.375733375549316
    6. ' ' → logprob: -15.125733375549316
    7. ',' → logprob: -15.875733375549316
    8. '   ' → logprob: -16.625734329223633
    9. ')' → logprob: -17.375734329223633
    10. 'm' → logprob: -18.000734329223633

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. '),' → logprob: -11.500017166137695
    3. ' ,' → logprob: -11.875017166137695
    4. '```' → logprob: -15.500017166137695
    5. '0' → logprob: -15.750017166137695
    6. ',),' → logprob: -16.750017166137695
    7. ' ' → logprob: -17.375017166137695
    8. ')' → logprob: -17.625017166137695
    9. '(),' → logprob: -17.625017166137695
    10. 'None' → logprob: -17.750017166137695

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. ')' → logprob: -16.376325607299805
    4. '   ' → logprob: -16.501325607299805
    5. ' ' → logprob: -16.876325607299805
    6. ',' → logprob: -17.251325607299805
    7. '```' → logprob: -18.126325607299805
    8. '           ' → logprob: -18.501325607299805
    9. '  ' → logprob: -18.876325607299805
    10. '۰' → logprob: -19.001325607299805

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.37507438659668
    4. ')' → logprob: -16.87507438659668
    5. ' -' → logprob: -17.62507438659668
    6. ',' → logprob: -18.12507438659668
    7. '-' → logprob: -18.37507438659668
    8. '  ' → logprob: -18.75007438659668
    9. '           ' → logprob: -18.87507438659668
    10. 'float' → logprob: -18.87507438659668

Token 348: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.011167141608893871
    2. ',' → logprob: -4.511167049407959
    3. ',val' → logprob: -9.636167526245117
    4. ' ),' → logprob: -10.636167526245117
    5. ')' → logprob: -10.886167526245117
    6. ',),' → logprob: -11.636167526245117
    7. ' ,' → logprob: -13.636167526245117
    8. '```' → logprob: -15.011167526245117
    9. '           ' → logprob: -15.261167526245117
    10. '),
' → logprob: -16.386167526245117

Token 349: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.038042180240154266
    2. 'val' → logprob: -3.2880420684814453
    3. '	val' → logprob: -15.288042068481445
    4. '                ' → logprob: -15.538042068481445
    5. '[val' → logprob: -15.788042068481445
    6. '_val' → logprob: -17.038042068481445
    7. '                   ' → logprob: -17.163042068481445
    8. '               ' → logprob: -17.288042068481445
    9. 'v' → logprob: -17.663042068481445
    10. ',val' → logprob: -17.788042068481445

Token 350: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020741820335388
    2. '+' → logprob: -2.3502073287963867
    3. '+t' → logprob: -14.850207328796387
    4. ' ' → logprob: -15.100207328796387
    5. ' ' → logprob: -15.600207328796387
    6. ' plus' → logprob: -18.600208282470703
    7. '＋' → logprob: -19.225208282470703
    8. ',' → logprob: -19.350208282470703
    9. ' +
' → logprob: -19.475208282470703
    10. ')' → logprob: -19.725208282470703

Token 351: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07889056205749512
    2. ' t' → logprob: -2.578890562057495
    3. '`t' → logprob: -15.078890800476074
    4. '   ' → logprob: -15.203890800476074
    5. '	t' → logprob: -16.203889846801758
    6. ' ' → logprob: -16.828889846801758
    7. ')' → logprob: -17.328889846801758
    8. ')t' → logprob: -17.578889846801758
    9. '  ' → logprob: -18.328889846801758
    10. '```' → logprob: -18.328889846801758

Token 352: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.774276774493046e-05
    2. ' )' → logprob: -10.250038146972656
    3. ')
' → logprob: -13.125038146972656
    4. '))' → logprob: -16.250038146972656
    5. '   ' → logprob: -16.500038146972656
    6. '       ' → logprob: -16.875038146972656
    7. '           ' → logprob: -17.625038146972656
    8. ')t' → logprob: -18.125038146972656
    9. '               ' → logprob: -18.250038146972656
    10. ')}' → logprob: -18.375038146972656

Token 353: 'print' (ID: 1598)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9176540970802307
    2. 'res' → logprob: -1.167654037475586
    3. 'answer' → logprob: -1.667654037475586
    4. 'max' → logprob: -3.167654037475586
    5. 'print' → logprob: -3.292654037475586
    6. 'result' → logprob: -3.917654037475586
    7. 'final' → logprob: -7.542654037475586
    8. 'for' → logprob: -7.917654037475586
    9. 'best' → logprob: -8.542654037475586
    10. 'results' → logprob: -8.542654037475586

Token 354: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3869713544845581
    2. '(' → logprob: -1.136971354484558
    3. '(
' → logprob: -9.511971473693848
    4. 'max' → logprob: -11.011971473693848
    5. '(

' → logprob: -12.136971473693848
    6. '('' → logprob: -14.011971473693848
    7. ' (' → logprob: -14.011971473693848
    8. '(min' → logprob: -14.761971473693848
    9. '=max' → logprob: -14.886971473693848
    10. ')' → logprob: -15.011971473693848

Token 355: '([' (ID: 5194)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.07666970044374466
    2. '(max' → logprob: -2.951669692993164
    3. '(' → logprob: -4.701669692993164
    4. '([' → logprob: -4.826669692993164
    5. 'dp' → logprob: -5.951669692993164
    6. '(
' → logprob: -6.451669692993164
    7. '(val' → logprob: -9.576669692993164
    8. '(sum' → logprob: -9.701669692993164
    9. 'max' → logprob: -9.701669692993164
    10. '(d' → logprob: -10.576669692993164

Token 356: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07066158205270767
    2. 'dp' → logprob: -2.6956615447998047
    3. 'val' → logprob: -8.070661544799805
    4. ' max' → logprob: -8.570661544799805
    5. '(max' → logprob: -8.820661544799805
    6. ' dp' → logprob: -10.820661544799805
    7. '[max' → logprob: -10.945661544799805
    8. '(dp' → logprob: -11.070661544799805
    9. 'v' → logprob: -11.695661544799805
    10. 'vals' → logprob: -11.695661544799805

Token 357: '(d' (ID: 2572)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00789655651897192
    2. '(d' → logprob: -4.882896423339844
    3. '(layer' → logprob: -9.382896423339844
    4. '(dic' → logprob: -9.507896423339844
    5. '(level' → logprob: -10.132896423339844
    6. '(vals' → logprob: -10.257896423339844
    7. '(val' → logprob: -11.382896423339844
    8. 'dp' → logprob: -11.507896423339844
    9. '(x' → logprob: -12.257896423339844
    10. 'd' → logprob: -12.507896423339844

Token 358: '.values' (ID: 20422)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001040671137161553
    2. '.values' → logprob: -7.251040458679199
    3. '(dp' → logprob: -8.8760404586792
    4. 'dp' → logprob: -9.6260404586792
    5. 'd' → logprob: -10.2510404586792
    6. 'vals' → logprob: -10.8760404586792
    7. '(d' → logprob: -11.2510404586792
    8. ')' → logprob: -11.3760404586792
    9. 'values' → logprob: -11.6260404586792
    10. 'pm' → logprob: -11.8760404586792

Token 359: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02976691536605358
    2. '())' → logprob: -3.529766798019409
    3. ')' → logprob: -11.404767036437988
    4. '()]' → logprob: -13.154767036437988
    5. '(),' → logprob: -13.779767036437988
    6. ' ()' → logprob: -14.654767036437988
    7. '(' → logprob: -14.904767036437988
    8. 'default' → logprob: -14.904767036437988
    9. 'for' → logprob: -15.279767036437988
    10. 'if' → logprob: -15.654767036437988

Token 360: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10367535054683685
    2. 'for' → logprob: -2.353675365447998
    3. ' for' → logprob: -5.728675365447998
    4. ')' → logprob: -8.97867488861084
    5. '())' → logprob: -9.47867488861084
    6. ' ()' → logprob: -12.22867488861084
    7. 'if' → logprob: -13.85367488861084
    8. '()]' → logprob: -14.10367488861084
    9. '	for' → logprob: -14.60367488861084
    10. '(' → logprob: -15.10367488861084

Token 361: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.682846287731081e-05
    2. ' d' → logprob: -10.250066757202148
    3. 'len' → logprob: -10.375066757202148
    4. ' len' → logprob: -15.875066757202148
    5. '(len' → logprob: -18.37506675720215
    6. '
' → logprob: -20.25006675720215
    7. '(d' → logprob: -20.25006675720215
    8. '   ' → logprob: -20.87506675720215
    9. '```' → logprob: -21.00006675720215
    10. '	d' → logprob: -21.50006675720215

Token 362: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6126534342765808
    2. ' else' → logprob: -0.8626534342765808
    3. 'for' → logprob: -3.4876534938812256
    4. ')' → logprob: -6.6126532554626465
    5. ' for' → logprob: -6.7376532554626465
    6. ' ' → logprob: -6.9876532554626465
    7. 'd' → logprob: -7.6126532554626465
    8. 'values' → logprob: -8.112653732299805
    9. '   ' → logprob: -8.362653732299805
    10. ' d' → logprob: -9.112653732299805

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011052099289372563
    2. ' ' → logprob: -6.876105308532715
    3. '[' → logprob: -9.751105308532715
    4. 'float' → logprob: -11.876105308532715
    5. 'default' → logprob: -12.751105308532715
    6. '-' → logprob: -13.376105308532715
    7. '(' → logprob: -14.001105308532715
    8. '   ' → logprob: -14.251105308532715
    9. ' [' → logprob: -14.501105308532715
    10. '
' → logprob: -15.251105308532715

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.137130498653278e-05
    2. ' ' → logprob: -9.500081062316895
    3. '[' → logprob: -12.625081062316895
    4. 'float' → logprob: -13.250081062316895
    5. '-' → logprob: -14.000081062316895
    6. '   ' → logprob: -15.250081062316895
    7. 'default' → logprob: -15.375081062316895
    8. '
' → logprob: -16.87508201599121
    9. '  ' → logprob: -17.50008201599121
    10. ' -' → logprob: -18.50008201599121

Token 365: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06689242273569107
    2. ' for' → logprob: -2.816892385482788
    3. '()' → logprob: -5.316892623901367
    4. ')' → logprob: -12.941892623901367
    5. ' ' → logprob: -13.691892623901367
    6. '   ' → logprob: -14.941892623901367
    7. ' ()' → logprob: -15.191892623901367
    8. '	for' → logprob: -15.316892623901367
    9. '0' → logprob: -16.691892623901367
    10. '  ' → logprob: -16.691892623901367

Token 366: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4027518332004547
    2. ' d' → logprob: -1.1527518033981323
    3. 'dp' → logprob: -4.402751922607422
    4. ' dp' → logprob: -5.652751922607422
    5. '	d' → logprob: -12.777751922607422
    6. '	dp' → logprob: -14.777751922607422
    7. ')d' → logprob: -15.527751922607422
    8. '_d' → logprob: -15.652751922607422
    9. '_dp' → logprob: -16.152751922607422
    10. '(dp' → logprob: -16.902751922607422

Token 367: ' in' (ID: 306)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.751191258430481
    2. ' in' → logprob: -1.001191258430481
    3. 'dp' → logprob: -2.0011911392211914
    4. '(dp' → logprob: -3.7511911392211914
    5. 'in' → logprob: -6.251191139221191
    6. 'd' → logprob: -9.251191139221191
    7. ' d' → logprob: -10.876191139221191
    8. '_dp' → logprob: -11.376191139221191
    9. '	dp' → logprob: -11.501191139221191
    10. ' range' → logprob: -11.751191139221191

Token 368: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02975083328783512
    2. ' dp' → logprob: -3.5297508239746094
    3. '	dp' → logprob: -15.52975082397461
    4. '(dp' → logprob: -16.52975082397461
    5. '_dp' → logprob: -17.90475082397461
    6. 'DP' → logprob: -18.90475082397461
    7. 'd' → logprob: -20.15475082397461
    8. '.dp' → logprob: -20.27975082397461
    9. '
' → logprob: -21.27975082397461
    10. 'Dp' → logprob: -21.65475082397461

Token 369: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00043615259346552193
    2. '])' → logprob: -7.875436305999756
    3. ']' → logprob: -9.875435829162598
    4. '[' → logprob: -13.875435829162598
    5. ']))
' → logprob: -14.125435829162598
    6. '))' → logprob: -14.125435829162598
    7. ' ]' → logprob: -14.250435829162598
    8. ')])' → logprob: -15.125435829162598
    9. '])))' → logprob: -15.250435829162598
    10. ']))

' → logprob: -15.625435829162598


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 367
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 285
Précision stricte (1ère position): 38.42%
Précision adaptée (1ère position): 39.24%
Précision (top 10): 77.66%
================================================================================
