================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t = int(input())
dice = []
for _ in range(t):
    n, m = map(int, input().split())
    faces = []
    total_r = 0.0
    for __ in range(m):
        v, r = input().split()
        v = int(v)
        r = float(r)
        faces.append((v, r))
        total_r += r
    dice.append((n, m, faces, total_r))

p, q = map(int, input().split())
faces = []
total_r = 0.0
for _ in range(q):
    v, r = input().split()
    v = int(v)
    r = float(r)
    faces.append((v, r))
    total_r += r
leader = (p, q, faces, total_r)

def expected_value(faces, total_r):
    if total_r == 0:
        return 0.0
    s = 0.0
    for v, r in faces:
        s += v * r
    return s / total_r

leader_ev = expected_value(leader[2], leader[3])
flag = False
for d in dice:
    ev = expected_value(d[2], d[3])
    if ev - leader_ev > 0.0000001:
        flag = True
        break

if flag:
    print("YES")
else:
    print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029470553272403777
    2. '(t' → logprob: -8.87529468536377
    3. '(
' → logprob: -10.25029468536377
    4. ')' → logprob: -10.62529468536377
    5. '```' → logprob: -10.75029468536377
    6. ''' → logprob: -10.87529468536377
    7. 't' → logprob: -11.12529468536377
    8. '('' → logprob: -11.25029468536377
    9. '`' → logprob: -12.25029468536377
    10. '()' → logprob: -12.62529468536377

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6585825681686401
    2. '(' → logprob: -0.7835825681686401
    3. '()' → logprob: -4.28358268737793
    4. '())' → logprob: -5.28358268737793
    5. '")' → logprob: -6.40858268737793
    6. '))' → logprob: -6.53358268737793
    7. '')' → logprob: -6.78358268737793
    8. '(
' → logprob: -7.03358268737793
    9. '`)' → logprob: -8.28358268737793
    10. '('' → logprob: -8.53358268737793

Token 5: 'dice' (ID: 148696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39861729741096497
    2. '\n' → logprob: -1.1486172676086426
    3. ' for' → logprob: -4.773617267608643
    4. '\' → logprob: -7.023617267608643
    5. '\r' → logprob: -7.648617267608643
    6. 'f' → logprob: -7.898617267608643
    7. 'n' → logprob: -7.898617267608643
    8. 'i' → logprob: -8.3986177444458
    9. '
' → logprob: -8.6486177444458
    10. '' → logprob: -9.0236177444458

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5977444052696228
    2. '.' → logprob: -0.9727444052696228
    3. 's' → logprob: -2.9727444648742676
    4. '_roll' → logprob: -4.972744464874268
    5. ')' → logprob: -5.097744464874268
    6. '_' → logprob: -6.222744464874268
    7. '(' → logprob: -7.097744464874268
    8. '.)' → logprob: -7.347744464874268
    9. '.roll' → logprob: -7.472744464874268
    10. '1' → logprob: -7.972744464874268

Token 7: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8871074318885803
    2. ' []' → logprob: -1.3871073722839355
    3. '[' → logprob: -1.7621073722839355
    4. ' ' → logprob: -2.1371073722839355
    5. '[]' → logprob: -4.0121073722839355
    6. '0' → logprob: -5.1371073722839355
    7. '1' → logprob: -5.2621073722839355
    8. '6' → logprob: -5.3871073722839355
    9. '[int' → logprob: -6.1371073722839355
    10. ' t' → logprob: -6.2621073722839355

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011155696120113134
    2. ' for' → logprob: -6.876115798950195
    3. '```' → logprob: -9.626115798950195
    4. '\n' → logprob: -11.751115798950195
    5. '\' → logprob: -12.376115798950195
    6. '[' → logprob: -13.376115798950195
    7. '``' → logprob: -14.251115798950195
    8. '
' → logprob: -14.501115798950195
    9. '   ' → logprob: -15.126115798950195
    10. '	for' → logprob: -15.251115798950195

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16124416887760162
    2. ' i' → logprob: -1.9112441539764404
    3. ' _' → logprob: -7.6612443923950195
    4. '_' → logprob: -8.16124439239502
    5. 'i' → logprob: -9.03624439239502
    6. '  ' → logprob: -9.78624439239502
    7. ' ‌' → logprob: -9.78624439239502
    8. ' ▁' → logprob: -11.53624439239502
    9. ' ' → logprob: -12.28624439239502
    10. ' )' → logprob: -12.41124439239502

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018529394641518593
    2. 'in' → logprob: -4.018529415130615
    3. ' ' → logprob: -8.268528938293457
    4. 'n' → logprob: -10.268528938293457
    5. '_' → logprob: -11.018528938293457
    6. ' i' → logprob: -11.518528938293457
    7. '	in' → logprob: -11.518528938293457
    8. 's' → logprob: -11.643528938293457
    9. 'space' → logprob: -11.768528938293457
    10. 'range' → logprob: -12.018528938293457

Token 11: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859009385108948
    2. ' range' → logprob: -3.0485901832580566
    3. 'ran' → logprob: -13.798589706420898
    4. '	range' → logprob: -14.673589706420898
    5. '(range' → logprob: -15.298589706420898
    6. ' ran' → logprob: -15.548589706420898
    7. 'rang' → logprob: -15.548589706420898
    8. 't' → logprob: -15.673589706420898
    9. '_range' → logprob: -16.2985897064209
    10. 'ange' → logprob: -16.4235897064209

Token 12: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03384359925985336
    2. ' (' → logprob: -3.408843517303467
    3. ' range' → logprob: -9.283843994140625
    4. '(range' → logprob: -10.033843994140625
    5. 'range' → logprob: -11.283843994140625
    6. ' ' → logprob: -11.283843994140625
    7. ' )' → logprob: -11.658843994140625
    8. '(t' → logprob: -11.783843994140625
    9. ' t' → logprob: -11.908843994140625
    10. ')' → logprob: -12.783843994140625

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1429193615913391
    2. ')' → logprob: -2.0179193019866943
    3. ' ):' → logprob: -8.892919540405273
    4. ' )' → logprob: -9.642919540405273
    5. '):
' → logprob: -10.642919540405273
    6. ':' → logprob: -11.767919540405273
    7. ' ' → logprob: -13.142919540405273
    8. ')>' → logprob: -13.642919540405273
    9. ',' → logprob: -14.142919540405273
    10. '),' → logprob: -14.392919540405273

Token 14: '   ' (ID: 271)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.1934647262096405
    2. '   ' → logprob: -1.943464756011963
    3. 'dice' → logprob: -4.193464756011963
    4. '    ' → logprob: -4.818464756011963
    5. ' line' → logprob: -5.568464756011963
    6. ' d' → logprob: -6.693464756011963
    7. ' s' → logprob: -6.943464756011963
    8. ' die' → logprob: -7.193464756011963
    9. ' input' → logprob: -7.318464756011963
    10. 'd' → logprob: -7.943464756011963

Token 15: ' n' (ID: 297)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.5646864175796509
    2. 'dice' → logprob: -0.9396864175796509
    3. 'd' → logprob: -3.9396862983703613
    4. ' d' → logprob: -4.689686298370361
    5. '   ' → logprob: -5.064686298370361
    6. ' line' → logprob: -5.814686298370361
    7. 'data' → logprob: -8.06468677520752
    8. 'line' → logprob: -8.31468677520752
    9. ' die' → logprob: -8.43968677520752
    10. ' dices' → logprob: -8.43968677520752

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35706382989883423
    2. ' ' → logprob: -1.2320637702941895
    3. '=' → logprob: -5.6070637702941895
    4. ',' → logprob: -5.8570637702941895
    5. ' ,' → logprob: -6.3570637702941895
    6. '  ' → logprob: -9.482064247131348
    7. ')' → logprob: -9.982064247131348
    8. '_' → logprob: -10.107064247131348
    9. '    ' → logprob: -10.357064247131348
    10. '=int' → logprob: -10.482064247131348

Token 17: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7564008831977844
    2. ' ' → logprob: -1.3814008235931396
    3. ' m' → logprob: -1.7564008235931396
    4. ' k' → logprob: -3.0064008235931396
    5. 'k' → logprob: -3.2564008235931396
    6. 's' → logprob: -4.881401062011719
    7. 'a' → logprob: -5.631401062011719
    8. 'd' → logprob: -6.131401062011719
    9. ' s' → logprob: -6.381401062011719
    10. ' =' → logprob: -7.256401062011719

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3225904107093811
    2. '=' → logprob: -1.3225903511047363
    3. ',' → logprob: -4.697590351104736
    4. ')' → logprob: -9.572590827941895
    5. ' ' → logprob: -9.697590827941895
    6. ' ,' → logprob: -11.322590827941895
    7. '<|end|>' → logprob: -11.947590827941895
    8. '=input' → logprob: -12.072590827941895
    9. '  ' → logprob: -13.447590827941895
    10. '   ' → logprob: -13.572590827941895

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0032301140017807484
    2. 'map' → logprob: -5.753230094909668
    3. ' input' → logprob: -10.128230094909668
    4. ' ' → logprob: -11.628230094909668
    5. 'input' → logprob: -13.253230094909668
    6. ' list' → logprob: -14.003230094909668
    7. '	map' → logprob: -14.503230094909668
    8. ' [' → logprob: -15.753230094909668
    9. '   ' → logprob: -15.753230094909668
    10. ' ' → logprob: -17.003231048583984

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1327241063117981
    2. '(input' → logprob: -2.5077240467071533
    3. '(str' → logprob: -3.6327240467071533
    4. '(' → logprob: -4.382724285125732
    5. '(lambda' → logprob: -7.257724285125732
    6. 'input' → logprob: -7.257724285125732
    7. '<|end|>' → logprob: -7.507724285125732
    8. '[int' → logprob: -7.757724285125732
    9. 'list' → logprob: -8.132723808288574
    10. 'int' → logprob: -8.257723808288574

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5295336842536926
    2. ',input' → logprob: -0.9045336842536926
    3. '(input' → logprob: -5.654533863067627
    4. 'input' → logprob: -5.904533863067627
    5. '(' → logprob: -9.904533386230469
    6. ',int' → logprob: -10.404533386230469
    7. ')' → logprob: -10.529533386230469
    8. ' input' → logprob: -11.029533386230469
    9. ' ,' → logprob: -11.404533386230469
    10. '```' → logprob: -12.279533386230469

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407999634742737
    2. ' input' → logprob: -0.974079966545105
    3. ' ' → logprob: -14.224080085754395
    4. ')' → logprob: -14.349080085754395
    5. '=input' → logprob: -14.599080085754395
    6. ',input' → logprob: -14.974080085754395
    7. '(input' → logprob: -15.099080085754395
    8. '	input' → logprob: -15.099080085754395
    9. '<input' → logprob: -16.349079132080078
    10. '```' → logprob: -17.474079132080078

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00030805266578681767
    2. '()' → logprob: -8.1253080368042
    3. '())' → logprob: -11.5003080368042
    4. ')' → logprob: -13.8753080368042
    5. ' ().' → logprob: -14.6253080368042
    6. '()
' → logprob: -15.5003080368042
    7. '(' → logprob: -16.125308990478516
    8. '()))' → logprob: -16.625308990478516
    9. '()[' → logprob: -17.375308990478516
    10. '()`' → logprob: -17.500308990478516

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001173917087726295
    2. 'strip' → logprob: -6.751173973083496
    3. 'rstrip' → logprob: -13.126173973083496
    4. ' split' → logprob: -13.501173973083496
    5. '(split' → logprob: -15.626173973083496
    6. 'spl' → logprob: -16.75117301940918
    7. 'sp' → logprob: -17.62617301940918
    8. 'plit' → logprob: -17.75117301940918
    9. ')' → logprob: -18.50117301940918
    10. 's' → logprob: -18.62617301940918

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3073922395706177
    2. ')' → logprob: -1.4323922395706177
    3. '))' → logprob: -4.432392120361328
    4. '()' → logprob: -4.557392120361328
    5. '()))' → logprob: -5.682392120361328
    6. '())
' → logprob: -9.807392120361328
    7. '(' → logprob: -10.932392120361328
    8. '')' → logprob: -11.682392120361328
    9. '(),' → logprob: -12.557392120361328
    10. '`)' → logprob: -12.682392120361328

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5775246620178223
    2. ')' → logprob: -2.5775246620178223
    3. ' ' → logprob: -2.5775246620178223
    4. 'dice' → logprob: -2.8275246620178223
    5. '[' → logprob: -3.4525246620178223
    6. '    
' → logprob: -3.5775246620178223
    7. '<|end|>' → logprob: -3.7025246620178223
    8. ' dice' → logprob: -3.8275246620178223
    9. 'd' → logprob: -4.077524662017822
    10. ',' → logprob: -4.202524662017822

Token 27: ' faces' (ID: 22060)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.31624454259872437
    2. 'dice' → logprob: -1.4412446022033691
    3. 'd' → logprob: -3.566244602203369
    4. ' d' → logprob: -5.941244602203369
    5. ' dices' → logprob: -6.566244602203369
    6. 'a' → logprob: -7.691244602203369
    7. ' a' → logprob: -7.816244602203369
    8. '   ' → logprob: -8.441244125366211
    9. 'arr' → logprob: -8.691244125366211
    10. ' arr' → logprob: -8.691244125366211

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10070876032114029
    2. '=' → logprob: -2.3507087230682373
    3. '.' → logprob: -8.600708961486816
    4. '.append' → logprob: -9.475708961486816
    5. '[:]' → logprob: -9.475708961486816
    6. '_' → logprob: -9.975708961486816
    7. '=[]' → logprob: -10.225708961486816
    8. ')' → logprob: -10.600708961486816
    9. '[' → logprob: -10.975708961486816
    10. 's' → logprob: -11.725708961486816

Token 29: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.44542574882507324
    2. 'list' → logprob: -1.0704257488250732
    3. '[]' → logprob: -4.570425987243652
    4. ' []' → logprob: -5.320425987243652
    5. ' [' → logprob: -7.320425987243652
    6. '[' → logprob: -7.945425987243652
    7. '[list' → logprob: -8.445425987243652
    8. ' sorted' → logprob: -10.570425987243652
    9. '[int' → logprob: -11.195425987243652
    10. 'sorted' → logprob: -11.195425987243652

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4423119127750397
    2. 'for' → logprob: -1.5673118829727173
    3. ' for' → logprob: -1.9423118829727173
    4. '	for' → logprob: -5.817311763763428
    5. '<|end|>' → logprob: -6.567311763763428
    6. ' ' → logprob: -8.192312240600586
    7. '    ' → logprob: -8.317312240600586
    8. ')' → logprob: -8.442312240600586
    9. '       ' → logprob: -8.942312240600586
    10. '  ' → logprob: -10.192312240600586

Token 31: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19324825704097748
    2. '   ' → logprob: -2.3182482719421387
    3. ' for' → logprob: -2.5682482719421387
    4. 'faces' → logprob: -7.693248271942139
    5. ' faces' → logprob: -9.56824779510498
    6. '	for' → logprob: -10.44324779510498
    7. '       ' → logprob: -10.81824779510498
    8. '    ' → logprob: -11.69324779510498
    9. ' ' → logprob: -12.19324779510498
    10. '_faces' → logprob: -12.31824779510498

Token 32: '_r' (ID: 3442)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14154769480228424
    2. '=' → logprob: -2.516547679901123
    3. '_faces' → logprob: -3.641547679901123
    4. '_' → logprob: -4.391547679901123
    5. ' +=' → logprob: -5.016547679901123
    6. '_sum' → logprob: -5.391547679901123
    7. '_points' → logprob: -7.891547679901123
    8. '+=' → logprob: -8.266548156738281
    9. 's' → logprob: -8.516548156738281
    10. '_face' → logprob: -8.766548156738281

Token 33: ' =' (ID: 314)
  Prédit: 'oll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oll' → logprob: -0.7144455313682556
    2. 'olls' → logprob: -0.7144455313682556
    3. ' =' → logprob: -5.0894455909729
    4. 'o' → logprob: -5.4644455909729
    5. 'ol' → logprob: -5.4644455909729
    6. 'e' → logprob: -6.3394455909729
    7. '=' → logprob: -7.0894455909729
    8. 'oller' → logprob: -7.3394455909729
    9. '```' → logprob: -7.3394455909729
    10. '   ' → logprob: -7.9644455909729

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0298201534897089
    2. '0' → logprob: -3.529820203781128
    3. '"' → logprob: -10.529820442199707
    4. ' "' → logprob: -11.904820442199707
    5. ' ' → logprob: -12.029820442199707
    6. ''' → logprob: -12.029820442199707
    7. '1' → logprob: -12.404820442199707
    8. ' []' → logprob: -12.967320442199707
    9. '  ' → logprob: -13.217320442199707
    10. ' '' → logprob: -13.467320442199707

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016334759071469307
    2. ' ' → logprob: -4.141334533691406
    3. '[]' → logprob: -8.516334533691406
    4. 'int' → logprob: -10.891334533691406
    5. ' []' → logprob: -10.891334533691406
    6. 'sum' → logprob: -11.016334533691406
    7. '[' → logprob: -11.391334533691406
    8. '1' → logprob: -12.266334533691406
    9. ' sum' → logprob: -12.391334533691406
    10. ' [' → logprob: -12.641334533691406

Token 36: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6178893446922302
    2. '<|end|>' → logprob: -1.242889404296875
    3. 'for' → logprob: -1.992889404296875
    4. 'rstrip' → logprob: -4.742889404296875
    5. ' for' → logprob: -4.867889404296875
    6. ' ' → logprob: -5.242889404296875
    7. 'r' → logprob: -5.367889404296875
    8. ')' → logprob: -6.242889404296875
    9. '   ' → logprob: -6.617889404296875
    10. '<|end|>' → logprob: -6.617889404296875

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.062467943876981735
    2. ' for' → logprob: -2.9374680519104004
    3. '   ' → logprob: -5.5624680519104
    4. 'r' → logprob: -5.9374680519104
    5. 'faces' → logprob: -8.312467575073242
    6. '	for' → logprob: -8.437467575073242
    7. ' ' → logprob: -8.562467575073242
    8. ' faces' → logprob: -9.187467575073242
    9. '[' → logprob: -9.812467575073242
    10. 'total' → logprob: -10.187467575073242

Token 41: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03255147859454155
    2. '_' → logprob: -4.157551288604736
    3. ' i' → logprob: -4.782551288604736
    4. ' ' → logprob: -4.907551288604736
    5. ' j' → logprob: -7.532551288604736
    6. 'i' → logprob: -10.657551765441895
    7. ' range' → logprob: -10.782551765441895
    8. '_i' → logprob: -11.282551765441895
    9. ' __' → logprob: -11.407551765441895
    10. ' ' → logprob: -13.157551765441895

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004295757971704006
    2. 'in' → logprob: -5.504295825958252
    3. '_' → logprob: -8.629295349121094
    4. ' ' → logprob: -11.129295349121094
    5. ' _' → logprob: -11.504295349121094
    6. 'range' → logprob: -11.629295349121094
    7. ' range' → logprob: -13.879295349121094
    8. 's' → logprob: -14.379295349121094
    9. ' i' → logprob: -14.629295349121094
    10. 'i' → logprob: -15.004295349121094

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759477615356445
    2. 'range' → logprob: -0.8259477615356445
    3. ' ' → logprob: -13.450947761535645
    4. '_' → logprob: -13.700947761535645
    5. '	range' → logprob: -13.700947761535645
    6. '_range' → logprob: -14.200947761535645
    7. '(range' → logprob: -14.325947761535645
    8. '```' → logprob: -14.575947761535645
    9. 'ran' → logprob: -14.825947761535645
    10. 'rang' → logprob: -15.075947761535645

Token 44: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020901529118418694
    2. '(' → logprob: -4.020901679992676
    3. ' (' → logprob: -6.020901679992676
    4. ' n' → logprob: -8.395901679992676
    5. '(m' → logprob: -9.395901679992676
    6. 'n' → logprob: -12.020901679992676
    7. ' ' → logprob: -13.020901679992676
    8. '(s' → logprob: -14.020901679992676
    9. '   ' → logprob: -14.270901679992676
    10. '(int' → logprob: -14.645901679992676

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004043361986987293
    2. '):
' → logprob: -8.625404357910156
    3. '   ' → logprob: -9.375404357910156
    4. ':' → logprob: -9.750404357910156
    5. ' ):' → logprob: -9.875404357910156
    6. ')' → logprob: -10.750404357910156
    7. '):
' → logprob: -12.875404357910156
    8. '       ' → logprob: -13.500404357910156
    9. ',' → logprob: -13.750404357910156
    10. ' ' → logprob: -14.625404357910156

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05684901401400566
    2. ' faces' → logprob: -3.4318490028381348
    3. '   ' → logprob: -4.556849002838135
    4. '    ' → logprob: -6.431849002838135
    5. '<|end|>' → logprob: -6.556849002838135
    6. 'faces' → logprob: -6.681849002838135
    7. ' ' → logprob: -6.931849002838135
    8. ' r' → logprob: -6.931849002838135
    9. ' face' → logprob: -7.056849002838135
    10. ' s' → logprob: -7.431849002838135

Token 47: ' v' (ID: 323)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faces' → logprob: -1.1487598419189453
    2. ' r' → logprob: -1.7737598419189453
    3. '   ' → logprob: -2.2737598419189453
    4. 'r' → logprob: -2.6487598419189453
    5. 'faces' → logprob: -2.7737598419189453
    6. ' line' → logprob: -2.8987598419189453
    7. ' face' → logprob: -3.2737598419189453
    8. ' f' → logprob: -3.6487598419189453
    9. 'face' → logprob: -4.273759841918945
    10. '       ' → logprob: -4.398759841918945

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8953942656517029
    2. ' =' → logprob: -1.2703943252563477
    3. 'al' → logprob: -1.7703943252563477
    4. '=' → logprob: -2.1453943252563477
    5. 'a' → logprob: -4.895394325256348
    6. 'alue' → logprob: -5.270394325256348
    7. 'als' → logprob: -5.770394325256348
    8. ' ,' → logprob: -6.145394325256348
    9. ',a' → logprob: -6.395394325256348
    10. 's' → logprob: -7.520394325256348

Token 49: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46866676211357117
    2. 'p' → logprob: -1.4686667919158936
    3. ' r' → logprob: -2.4686667919158936
    4. ' p' → logprob: -3.2186667919158936
    5. 'w' → logprob: -5.2186665534973145
    6. 'c' → logprob: -6.2186665534973145
    7. 'd' → logprob: -6.3436665534973145
    8. 'f' → logprob: -6.5936665534973145
    9. 'k' → logprob: -6.7186665534973145
    10. 's' → logprob: -6.8436665534973145

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236421227455139
    2. '=' → logprob: -0.8986421227455139
    3. ',' → logprob: -7.648642063140869
    4. ' ' → logprob: -10.648642539978027
    5. '=float' → logprob: -12.148642539978027
    6. ')' → logprob: -12.648642539978027
    7. ' ,' → logprob: -13.023642539978027
    8. '   ' → logprob: -13.523642539978027
    9. '=int' → logprob: -13.773642539978027
    10. '=input' → logprob: -13.898642539978027

Token 51: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.062350574880838394
    2. 'map' → logprob: -2.8123505115509033
    3. ' input' → logprob: -8.312350273132324
    4. 'input' → logprob: -9.812350273132324
    5. ' ' → logprob: -10.062350273132324
    6. '	map' → logprob: -11.187350273132324
    7. ' list' → logprob: -11.437350273132324
    8. '   ' → logprob: -11.937350273132324
    9. ' ' → logprob: -13.062350273132324
    10. '  ' → logprob: -13.062350273132324

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012868782505393028
    2. '()' → logprob: -9.000128746032715
    3. '.' → logprob: -13.250128746032715
    4. ' ().' → logprob: -13.750128746032715
    5. '.split' → logprob: -14.500128746032715
    6. '(' → logprob: -14.500128746032715
    7. ')' → logprob: -14.500128746032715
    8. '()).' → logprob: -14.875128746032715
    9. '())' → logprob: -15.625128746032715
    10. ').' → logprob: -16.1251277923584

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019528986886143684
    2. 'strip' → logprob: -6.251953125
    3. 'rstrip' → logprob: -10.751953125
    4. 'rs' → logprob: -13.251953125
    5. ' split' → logprob: -14.251953125
    6. 'spl' → logprob: -14.626953125
    7. '(split' → logprob: -17.126953125
    8. 's' → logprob: -17.751953125
    9. ' ' → logprob: -18.126953125
    10. 'replace' → logprob: -18.126953125

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004282111767679453
    2. '()
' → logprob: -6.379281997680664
    3. ')' → logprob: -6.754281997680664
    4. '('' → logprob: -7.129281997680664
    5. '(' → logprob: -8.629281997680664
    6. '())' → logprob: -8.629281997680664
    7. '()\' → logprob: -9.754281997680664
    8. '(',' → logprob: -10.129281997680664
    9. '()[' → logprob: -10.379281997680664
    10. '()`' → logprob: -11.004281997680664

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.8641630411148071
    2. ' r' → logprob: -1.8641630411148071
    3. 'v' (adapté à ' v') → logprob: -1.9891630411148071
    4. ' faces' → logprob: -1.9891630411148071
    5. 'r' → logprob: -2.9891629219055176
    6. ')' → logprob: -3.3641629219055176
    7. ' ' → logprob: -4.364162921905518
    8. '       ' → logprob: -4.989162921905518
    9. ' 
' → logprob: -4.989162921905518
    10. '   ' → logprob: -5.239162921905518

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8010771870613098
    2. ' =' → logprob: -1.176077127456665
    3. ',' → logprob: -1.426077127456665
    4. '=int' → logprob: -7.051077365875244
    5. '_faces' → logprob: -7.926077365875244
    6. 's' → logprob: -8.426076889038086
    7. ',v' → logprob: -8.676076889038086
    8. ' ,' → logprob: -9.051076889038086
    9. 'v' → logprob: -9.051076889038086
    10. '=float' → logprob: -9.176076889038086

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7848815321922302
    2. 'float' → logprob: -1.034881591796875
    3. ' float' → logprob: -2.159881591796875
    4. ' int' → logprob: -2.659881591796875
    5. 'v' → logprob: -6.159881591796875
    6. ' v' → logprob: -6.909881591796875
    7. ' ' → logprob: -9.909881591796875
    8. 'flo' → logprob: -10.784881591796875
    9. '  ' → logprob: -11.534881591796875
    10. '	float' → logprob: -11.784881591796875

Token 59: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02324792370200157
    2. '(' → logprob: -3.7732479572296143
    3. '(
' → logprob: -14.398247718811035
    4. ' (' → logprob: -14.398247718811035
    5. '(value' → logprob: -15.023247718811035
    6. '(r' → logprob: -15.523247718811035
    7. '()' → logprob: -15.898247718811035
    8. ' ' → logprob: -15.898247718811035
    9. '('' → logprob: -16.02324867248535
    10. ')' → logprob: -16.14824867248535

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015600931365042925
    2. ')
' → logprob: -6.501560211181641
    3. ')v' → logprob: -10.50156021118164
    4. ' )' → logprob: -10.87656021118164
    5. ')

' → logprob: -12.50156021118164
    6. ')
' → logprob: -13.37656021118164
    7. '       ' → logprob: -13.50156021118164
    8. '<|end|>' → logprob: -14.00156021118164
    9. ')t' → logprob: -14.37656021118164
    10. '   ' → logprob: -14.50156021118164

Token 61: '       ' (ID: 309)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7746521234512329
    2. 'r' → logprob: -1.274652123451233
    3. ' ' → logprob: -2.0246520042419434
    4. '<|end|>' → logprob: -2.7746520042419434
    5. ' v' → logprob: -3.5246520042419434
    6. 'v' → logprob: -4.149652004241943
    7. ',r' → logprob: -5.274652004241943
    8. '       ' → logprob: -5.399652004241943
    9. ' 
' → logprob: -5.524652004241943
    10. ',' → logprob: -6.774652004241943

Token 62: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.5241230130195618
    2. ' r' → logprob: -0.8991230130195618
    3. ' ' → logprob: -7.274123191833496
    4. ' v' → logprob: -9.149123191833496
    5. 'v' → logprob: -9.274123191833496
    6. ' float' → logprob: -10.649123191833496
    7. '    ' → logprob: -10.649123191833496
    8. ' ' → logprob: -10.899123191833496
    9. '        ' → logprob: -11.649123191833496
    10. 'float' → logprob: -11.649123191833496

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47426873445510864
    2. ' =' → logprob: -0.9742687344551086
    3. '=float' → logprob: -8.599268913269043
    4. ' ' → logprob: -12.349268913269043
    5. '=int' → logprob: -13.974268913269043
    6. ',' → logprob: -14.349268913269043
    7. ')' → logprob: -14.849268913269043
    8. ' +=' → logprob: -15.599268913269043
    9. '<|end|>' → logprob: -15.724268913269043
    10. '+=' → logprob: -15.724268913269043

Token 64: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47408226132392883
    2. ' float' → logprob: -0.9740822315216064
    3. '=float' → logprob: -13.099081993103027
    4. '	float' → logprob: -13.474081993103027
    5. '(float' → logprob: -14.849081993103027
    6. 'flo' → logprob: -14.849081993103027
    7. '<float' → logprob: -15.099081993103027
    8. '.float' → logprob: -15.099081993103027
    9. ' ' → logprob: -15.349081993103027
    10. ',float' → logprob: -16.224082946777344

Token 65: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0031880477908998728
    2. '(' → logprob: -5.753188133239746
    3. ' (' → logprob: -11.628188133239746
    4. ')' → logprob: -13.753188133239746
    5. '(
' → logprob: -15.878188133239746
    6. ')(' → logprob: -16.37818717956543
    7. '(

' → logprob: -16.75318717956543
    8. ' ' → logprob: -17.37818717956543
    9. '(v' → logprob: -17.62818717956543
    10. '(re' → logprob: -18.12818717956543

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039254239527508616
    2. ')
' → logprob: -7.875392436981201
    3. '       ' → logprob: -11.87539291381836
    4. ')
' → logprob: -13.00039291381836
    5. ' )' → logprob: -13.25039291381836
    6. ')

' → logprob: -15.12539291381836
    7. ')`' → logprob: -15.37539291381836
    8. '))' → logprob: -15.75039291381836
    9. '<|end|>' → logprob: -16.00039291381836
    10. '   ' → logprob: -16.00039291381836

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006086751818656921
    2. '<|end|>' → logprob: -8.000608444213867
    3. '        
' → logprob: -9.875608444213867
    4. 'faces' → logprob: -10.000608444213867
    5. ' faces' → logprob: -10.125608444213867
    6. ')' → logprob: -10.250608444213867
    7. ',' → logprob: -10.500608444213867
    8. '   ' → logprob: -11.125608444213867
    9. '```' → logprob: -11.500608444213867
    10. '
' → logprob: -11.875608444213867

Token 68: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.3578898012638092
    2. '       ' → logprob: -1.6078897714614868
    3. 'total' → logprob: -2.4828898906707764
    4. '   ' → logprob: -4.857889652252197
    5. ' faces' → logprob: -5.107889652252197
    6. ' total' → logprob: -5.982889652252197
    7. ' ' → logprob: -9.232890129089355
    8. 'face' → logprob: -9.357890129089355
    9. '           ' → logprob: -9.545390129089355
    10. '_faces' → logprob: -10.107890129089355

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001431114797014743
    2. '.' → logprob: -8.875143051147461
    3. '.extend' → logprob: -13.375143051147461
    4. '.setdefault' → logprob: -14.625143051147461
    5. '.push' → logprob: -14.750143051147461
    6. ' .' → logprob: -15.250143051147461
    7. 'append' → logprob: -15.750143051147461
    8. '.add' → logprob: -15.875143051147461
    9. '.Append' → logprob: -16.37514305114746
    10. '.app' → logprob: -16.62514305114746

Token 70: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000561969296541065
    2. '(' → logprob: -7.5005621910095215
    3. '(v' → logprob: -11.875561714172363
    4. '([' → logprob: -13.875561714172363
    5. '(((' → logprob: -15.375561714172363
    6. '(('' → logprob: -15.375561714172363
    7. '(([' → logprob: -15.875561714172363
    8. '(
' → logprob: -16.37556266784668
    9. '(r' → logprob: -16.75056266784668
    10. '({'' → logprob: -16.87556266784668

Token 71: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.069664333248511e-05
    2. ' v' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.875020980834961
    4. ')v' → logprob: -15.375020980834961
    5. ')' → logprob: -16.50002098083496
    6. ' ' → logprob: -16.62502098083496
    7. '    ' → logprob: -17.12502098083496
    8. '	v' → logprob: -17.25002098083496
    9. 'r' → logprob: -17.37502098083496
    10. ',' → logprob: -17.50002098083496

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008520359406247735
    2. ',r' → logprob: -7.125852108001709
    3. ' ,' → logprob: -10.00085163116455
    4. ' ' → logprob: -13.75085163116455
    5. ',
' → logprob: -15.12585163116455
    6. 'r' → logprob: -15.75085163116455
    7. ')' → logprob: -15.75085163116455
    8. ',v' → logprob: -16.125852584838867
    9. '),' → logprob: -16.375852584838867
    10. ' r' → logprob: -16.750852584838867

Token 73: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6931602954864502
    2. ' r' → logprob: -0.6931602954864502
    3. ' ' → logprob: -11.943160057067871
    4. ' ' → logprob: -12.318160057067871
    5. '_r' → logprob: -14.443160057067871
    6. ' 
' → logprob: -15.193160057067871
    7. ')' → logprob: -15.318160057067871
    8. ',' → logprob: -15.568160057067871
    9. ',r' → logprob: -15.693160057067871
    10. '	r' → logprob: -15.943160057067871

Token 74: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00444946251809597
    2. ')' → logprob: -5.629449367523193
    3. '))
' → logprob: -7.129449367523193
    4. ',' → logprob: -11.004449844360352
    5. ' ))' → logprob: -11.004449844360352
    6. '));' → logprob: -13.004449844360352
    7. ')))' → logprob: -13.004449844360352
    8. '   ' → logprob: -13.004449844360352
    9. ')
' → logprob: -13.254449844360352
    10. '))

' → logprob: -13.379449844360352

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40109363198280334
    2. '<|end|>' → logprob: -2.1510937213897705
    3. '
' → logprob: -2.2760937213897705
    4. '    
' → logprob: -3.0260937213897705
    5. ' ' → logprob: -3.7760937213897705
    6. '  
' → logprob: -4.526093482971191
    7. '```' → logprob: -5.026093482971191
    8. ' 
' → logprob: -5.151093482971191
    9. '       ' → logprob: -5.776093482971191
    10. '    ' → logprob: -6.276093482971191

Token 76: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.462219774723053
    2. '   ' → logprob: -1.4622197151184082
    3. 'total' (adapté à ' total') → logprob: -2.587219715118408
    4. '
' → logprob: -3.587219715118408
    5. ' ' → logprob: -4.587219715118408
    6. ' total' → logprob: -5.212219715118408
    7. '+' → logprob: -5.712219715118408
    8. '```' → logprob: -6.087219715118408
    9. '           ' → logprob: -6.462219715118408
    10. '	total' → logprob: -6.462219715118408

Token 77: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.4974866644479334e-05
    2. '_' → logprob: -11.750015258789062
    3. ' +=' → logprob: -12.375015258789062
    4. '+=' → logprob: -13.125015258789062
    5. 'r' → logprob: -14.500015258789062
    6. '+r' → logprob: -15.625015258789062
    7. '+' → logprob: -16.625015258789062
    8. '```' → logprob: -17.750015258789062
    9. '	r' → logprob: -17.875015258789062
    10. '\' → logprob: -17.875015258789062

Token 78: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6944267749786377
    2. '+=' → logprob: -0.6944267749786377
    3. '+' → logprob: -6.694426536560059
    4. '=' → logprob: -10.694426536560059
    5. ' +' → logprob: -12.069426536560059
    6. ' ' → logprob: -12.319426536560059
    7. '+=(' → logprob: -12.694426536560059
    8. ']+=' → logprob: -13.319426536560059
    9. '+='' → logprob: -13.819426536560059
    10. ' ' → logprob: -14.194426536560059

Token 79: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2811756432056427
    2. ' r' → logprob: -1.4061756134033203
    3. ' ' → logprob: -11.15617561340332
    4. 'float' → logprob: -12.53117561340332
    5. ' float' → logprob: -12.78117561340332
    6. ' ' → logprob: -13.90617561340332
    7. '_r' → logprob: -14.15617561340332
    8. '	r' → logprob: -14.15617561340332
    9. '   ' → logprob: -14.40617561340332
    10. 'v' → logprob: -14.65617561340332

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48700740933418274
    2. '<|end|>' → logprob: -1.2370073795318604
    3. '
' → logprob: -2.4870073795318604
    4. ')' → logprob: -5.7370076179504395
    5. '```' → logprob: -6.3620076179504395
    6. '    
' → logprob: -6.3620076179504395
    7. '<|end|>' → logprob: -6.9870076179504395
    8. 'dice' → logprob: -7.2370076179504395
    9. ' ' → logprob: -7.4870076179504395
    10. '#' → logprob: -7.6120076179504395

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09542632102966309
    2. '<|end|>' → logprob: -3.220426321029663
    3. '
' → logprob: -3.345426321029663
    4. ' ' → logprob: -5.595426559448242
    5. '#' → logprob: -5.720426559448242
    6. ' if' → logprob: -6.345426559448242
    7. ')' → logprob: -6.595426559448242
    8. '    
' → logprob: -7.095426559448242
    9. 'if' → logprob: -7.220426559448242
    10. '```' → logprob: -7.845426559448242

Token 82: ' dice' (ID: 22078)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09794804453849792
    2. 'dice' (adapté à ' dice') → logprob: -3.7229480743408203
    3. '<|end|>' → logprob: -4.22294807434082
    4. ')' → logprob: -4.59794807434082
    5. ' if' → logprob: -4.84794807434082
    6. ' ' → logprob: -4.84794807434082
    7. 'if' → logprob: -4.84794807434082
    8. '
' → logprob: -5.59794807434082
    9. '#' → logprob: -5.84794807434082
    10. ' dice' → logprob: -6.22294807434082

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12699687480926514
    2. '.' → logprob: -2.1269969940185547
    3. '.setdefault' → logprob: -10.626996994018555
    4. '<|end|>' → logprob: -11.376996994018555
    5. '.extend' → logprob: -11.626996994018555
    6. '.push' → logprob: -12.501996994018555
    7. ' .' → logprob: -12.501996994018555
    8. '.app' → logprob: -12.626996994018555
    9. '[-' → logprob: -12.626996994018555
    10. '.pop' → logprob: -13.001996994018555

Token 84: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3214223384857178
    2. '(f' → logprob: -1.3214223384857178
    3. '(' → logprob: -4.821422576904297
    4. '(face' → logprob: -11.196422576904297
    5. '([' → logprob: -11.446422576904297
    6. '(d' → logprob: -11.696422576904297
    7. '([(' → logprob: -12.196422576904297
    8. ' (' → logprob: -12.196422576904297
    9. '(((' → logprob: -12.321422576904297
    10. '(tuple' → logprob: -12.446422576904297

Token 85: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2918221652507782
    2. 'faces' → logprob: -1.5418221950531006
    3. ' n' → logprob: -3.7918221950531006
    4. 'm' → logprob: -5.0418219566345215
    5. ' faces' → logprob: -5.2918219566345215
    6. '   ' → logprob: -5.7918219566345215
    7. ' m' → logprob: -7.9168219566345215
    8. 'dice' → logprob: -8.16682243347168
    9. ')' → logprob: -8.54182243347168
    10. ' ' → logprob: -8.60432243347168

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018339496455155313
    2. ' ,' → logprob: -8.75018310546875
    3. ',m' → logprob: -10.75018310546875
    4. ' ' → logprob: -14.50018310546875
    5. ',f' → logprob: -15.00018310546875
    6. ',d' → logprob: -15.00018310546875
    7. ',
' → logprob: -15.00018310546875
    8. '   ' → logprob: -15.37518310546875
    9. '‌,' → logprob: -15.37518310546875
    10. ',n' → logprob: -15.62518310546875

Token 87: ' m' (ID: 284)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.805516242980957
    2. 'faces' → logprob: -1.805516242980957
    3. ' m' → logprob: -1.805516242980957
    4. ' dice' → logprob: -2.055516242980957
    5. 'dice' → logprob: -2.805516242980957
    6. 'm' → logprob: -3.430516242980957
    7. ' ' → logprob: -7.055516242980957
    8. '   ' → logprob: -7.180516242980957
    9. '    ' → logprob: -7.305516242980957
    10. ' dices' → logprob: -7.930516242980957

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.817902173381299e-05
    2. ')' → logprob: -9.37509822845459
    3. ',)' → logprob: -12.50009822845459
    4. '),' → logprob: -13.00009822845459
    5. ',d' → logprob: -13.12509822845459
    6. ' ,' → logprob: -13.37509822845459
    7. '))' → logprob: -14.25009822845459
    8. ',
' → logprob: -14.37509822845459
    9. ',f' → logprob: -14.50009822845459
    10. ' faces' → logprob: -15.25009822845459

Token 89: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.38723960518836975
    2. ' faces' → logprob: -1.1372395753860474
    3. '   ' → logprob: -8.762239456176758
    4. ' ' → logprob: -9.512239456176758
    5. '_faces' → logprob: -10.262239456176758
    6. '    ' → logprob: -10.762239456176758
    7. '.faces' → logprob: -11.324739456176758
    8. 'face' → logprob: -11.387239456176758
    9. 'f' → logprob: -11.387239456176758
    10. 'dice' → logprob: -11.824739456176758

Token 90: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052750264294445515
    2. '))' → logprob: -5.255275249481201
    3. ')
' → logprob: -10.255274772644043
    4. ' )' → logprob: -12.630274772644043
    5. '   ' → logprob: -14.505274772644043
    6. ')))' → logprob: -14.630274772644043
    7. '))
' → logprob: -14.630274772644043
    8. ',' → logprob: -15.255274772644043
    9. '`)' → logprob: -15.380274772644043
    10. ')`' → logprob: -15.505274772644043

Token 91: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.693275511264801
    2. 'total' → logprob: -0.693275511264801
    3. '   ' → logprob: -10.068275451660156
    4. ' ' → logprob: -10.318275451660156
    5. 't' → logprob: -10.818275451660156
    6. ')' → logprob: -11.193275451660156
    7. ' t' → logprob: -12.068275451660156
    8. '	total' → logprob: -12.943275451660156
    9. ' tot' → logprob: -13.443275451660156
    10. '  ' → logprob: -13.443275451660156

Token 92: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.75
    3. ')' → logprob: -17.25
    4. '_t' → logprob: -18.25
    5. ' _' → logprob: -18.875
    6. '_)' → logprob: -19.25
    7. '\' → logprob: -19.625
    8. ')_' → logprob: -20.125
    9. 'r' → logprob: -21.375
    10. '_R' → logprob: -21.625

Token 93: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017058902885764837
    2. '))' → logprob: -6.376706123352051
    3. ')
' → logprob: -13.00170612335205
    4. ' )' → logprob: -14.50170612335205
    5. ')`' → logprob: -14.75170612335205
    6. ')))' → logprob: -15.00170612335205
    7. ')}' → logprob: -16.126705169677734
    8. ')")' → logprob: -16.876705169677734
    9. '),' → logprob: -17.001705169677734
    10. ')**' → logprob: -17.501705169677734

Token 94: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2567041218280792
    2. '#' → logprob: -2.881704092025757
    3. 'max' → logprob: -3.256704092025757
    4. 'result' → logprob: -3.256704092025757
    5. 'f' → logprob: -3.506704092025757
    6. 'r' → logprob: -4.381704330444336
    7. 'dice' → logprob: -5.006704330444336
    8. 'n' → logprob: -5.131704330444336
    9. 'results' → logprob: -5.256704330444336
    10. 'd' → logprob: -5.256704330444336

Token 95: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08188711851835251
    2. 'rob' → logprob: -2.5818870067596436
    3. 'rof' → logprob: -6.456887245178223
    4. 'ro' → logprob: -7.331887245178223
    5. 'rocessing' → logprob: -8.956887245178223
    6. '_r' → logprob: -9.331887245178223
    7. 'er' → logprob: -9.581887245178223
    8. 'rocess' → logprob: -9.831887245178223
    9. 'robe' → logprob: -9.956887245178223
    10. '=' → logprob: -10.456887245178223

Token 96: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05493859201669693
    2. 'k' → logprob: -4.054938793182373
    3. '=' → logprob: -4.179938793182373
    4. ' =' → logprob: -5.429938793182373
    5. 's' → logprob: -5.554938793182373
    6. ' q' → logprob: -6.304938793182373
    7. '_' → logprob: -6.804938793182373
    8. 'w' → logprob: -6.804938793182373
    9. 'l' → logprob: -7.054938793182373
    10. 'c' → logprob: -7.179938793182373

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08944777399301529
    2. '=' → logprob: -2.4644477367401123
    3. ',' → logprob: -7.714447975158691
    4. ' ' → logprob: -10.214447975158691
    5. ' ,' → logprob: -11.339447975158691
    6. ')' → logprob: -12.464447975158691
    7. '  ' → logprob: -14.026947975158691
    8. '[' → logprob: -14.214447975158691
    9. '=input' → logprob: -14.214447975158691
    10. 'space' → logprob: -14.401947975158691

Token 98: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.46465903520584106
    2. ' map' → logprob: -1.0896589756011963
    3. 'dice' → logprob: -3.9646589756011963
    4. 'input' → logprob: -5.339659214019775
    5. '0' → logprob: -5.839659214019775
    6. ' dice' → logprob: -6.089659214019775
    7. ' input' → logprob: -6.339659214019775
    8. '1' → logprob: -6.714659214019775
    9. ' ' → logprob: -6.964659214019775
    10. '10' → logprob: -7.839659214019775

Token 99: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -10.125096321105957
    3. 'int' → logprob: -10.500096321105957
    4. '<int' → logprob: -11.250096321105957
    5. '[int' → logprob: -12.375096321105957
    6. '=int' → logprob: -12.500096321105957
    7. ' (' → logprob: -12.750096321105957
    8. '```' → logprob: -12.750096321105957
    9. '(input' → logprob: -14.375096321105957
    10. ']int' → logprob: -14.500096321105957

Token 100: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16052518784999847
    2. ',input' → logprob: -2.78552508354187
    3. ')' → logprob: -3.28552508354187
    4. '()' → logprob: -4.285525321960449
    5. ',' → logprob: -4.285525321960449
    6. '(' → logprob: -4.535525321960449
    7. '(),' → logprob: -5.285525321960449
    8. 'input' → logprob: -5.535525321960449
    9. ' input' → logprob: -6.910525321960449
    10. '=input' → logprob: -7.660525321960449

Token 101: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014341950416565
    2. ' input' → logprob: -1.7014341354370117
    3. '(input' → logprob: -10.826434135437012
    4. ',input' → logprob: -15.201434135437012
    5. '=input' → logprob: -15.201434135437012
    6. ')' → logprob: -15.701434135437012
    7. ' ' → logprob: -15.826434135437012
    8. '[input' → logprob: -15.951434135437012
    9. '	input' → logprob: -16.701435089111328
    10. '   ' → logprob: -17.576435089111328

Token 102: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001587939215824008
    2. '()' → logprob: -6.626587867736816
    3. '())' → logprob: -8.251587867736816
    4. ')' → logprob: -14.501587867736816
    5. ' ().' → logprob: -15.126587867736816
    6. '()
' → logprob: -16.251588821411133
    7. '(' → logprob: -16.376588821411133
    8. '()[' → logprob: -16.626588821411133
    9. '.' → logprob: -18.001588821411133
    10. ' ())' → logprob: -18.251588821411133

Token 103: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.625000953674316
    3. ' split' → logprob: -16.125
    4. 'spl' → logprob: -16.5
    5. '(split' → logprob: -17.0
    6. ')' → logprob: -17.5
    7. 'plit' → logprob: -17.875
    8. '_split' → logprob: -19.5
    9. 'rstrip' → logprob: -19.5
    10. 's' → logprob: -19.75

Token 104: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22301393747329712
    2. '())' → logprob: -1.7230138778686523
    3. '()' → logprob: -3.8480138778686523
    4. '))' → logprob: -10.348013877868652
    5. '())
' → logprob: -12.473013877868652
    6. ')
' → logprob: -13.223013877868652
    7. '`)' → logprob: -13.598013877868652
    8. ')`' → logprob: -14.098013877868652
    9. '();)' → logprob: -14.098013877868652
    10. ')")' → logprob: -14.223013877868652

Token 105: 'faces' (ID: 11952)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18679948151111603
    2. 'expected' → logprob: -2.9367995262145996
    3. 'dp' → logprob: -3.4367995262145996
    4. 'max' → logprob: -3.6867995262145996
    5. 'results' → logprob: -4.0617995262146
    6. 'prob' → logprob: -4.3117995262146
    7. 'res' → logprob: -4.6867995262146
    8. '
' → logprob: -5.3117995262146
    9. 'total' → logprob: -6.3117995262146
    10. 'sum' → logprob: -6.4367995262146

Token 106: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07856849581003189
    2. 'dice' → logprob: -2.953568458557129
    3. ' []' → logprob: -4.203568458557129
    4. ' dice' → logprob: -5.203568458557129
    5. '[(' → logprob: -7.078568458557129
    6. '[' → logprob: -7.078568458557129
    7. '[d' → logprob: -7.703568458557129
    8. '[]}' → logprob: -8.703568458557129
    9. 'd' → logprob: -8.828568458557129
    10. ' [' → logprob: -9.078568458557129

Token 108: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015955790877342224
    2. 'total' → logprob: -8.87515926361084
    3. ' for' → logprob: -12.25015926361084
    4. 'sum' → logprob: -12.37515926361084
    5. 'p' → logprob: -13.12515926361084
    6. 'while' → logprob: -13.37515926361084
    7. 'result' → logprob: -13.75015926361084
    8. 's' → logprob: -14.12515926361084
    9. 'r' → logprob: -14.37515926361084
    10. 'count' → logprob: -14.50015926361084

Token 109: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.04417841136455536
    2. '_' → logprob: -3.1691784858703613
    3. '_p' → logprob: -7.794178485870361
    4. '_q' → logprob: -7.919178485870361
    5. ' _' → logprob: -8.294178009033203
    6. '_s' → logprob: -10.169178009033203
    7. '_f' → logprob: -10.669178009033203
    8. '_faces' → logprob: -11.419178009033203
    9. ' =' → logprob: -11.669178009033203
    10. '_a' → logprob: -11.919178009033203

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023267146199941635
    2. '=' → logprob: -3.7732670307159424
    3. ' +=' → logprob: -11.648266792297363
    4. '_' → logprob: -11.648266792297363
    5. ' ' → logprob: -13.398266792297363
    6. ')' → logprob: -14.648266792297363
    7. 'for' → logprob: -15.148266792297363
    8. ',' → logprob: -15.148266792297363
    9. ' ' → logprob: -15.273266792297363
    10. 'import' → logprob: -15.898266792297363

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268827438354492
    2. ' ' → logprob: -2.017688274383545
    3. 'float' → logprob: -12.517688751220703
    4. '   ' → logprob: -12.705188751220703
    5. ' float' → logprob: -13.767688751220703
    6. '  ' → logprob: -14.017688751220703
    7. ' ' → logprob: -14.205188751220703
    8. '```' → logprob: -14.767688751220703
    9. '`' → logprob: -15.142688751220703
    10. 'p' → logprob: -15.267688751220703

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022133004385977983
    2. ' ' → logprob: -6.127213478088379
    3. '1' → logprob: -11.627213478088379
    4. 'p' → logprob: -12.002213478088379
    5. 'float' → logprob: -12.502213478088379
    6. ' p' → logprob: -12.877213478088379
    7. 'q' → logprob: -13.627213478088379
    8. '   ' → logprob: -13.814713478088379
    9. '.' → logprob: -14.002213478088379
    10. '  ' → logprob: -14.627213478088379

Token 113: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.704273118884885e-07
    2. '.
' → logprob: -16.0
    3. 'for' → logprob: -16.25
    4. 'f' → logprob: -16.625
    5. '​.' → logprob: -16.625
    6. ' .' → logprob: -17.375
    7. '.for' → logprob: -17.625
    8. ' for' → logprob: -17.875
    9. '0' → logprob: -18.25
    10. '```' → logprob: -18.4375

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. 'float' → logprob: -16.5
    3. '1' → logprob: -16.625
    4. '5' → logprob: -17.375
    5. '```' → logprob: -17.75
    6. ' ' → logprob: -17.875
    7. '4' → logprob: -18.375
    8. '2' → logprob: -18.375
    9. 'for' → logprob: -18.5
    10. '6' → logprob: -18.875

Token 115: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023119196703191847
    2. ' for' → logprob: -8.62523078918457
    3. '<|end|>' → logprob: -10.12523078918457
    4. '
' → logprob: -12.37523078918457
    5. ')' → logprob: -12.50023078918457
    6. '```' → logprob: -13.75023078918457
    7. 'while' → logprob: -14.62523078918457
    8. '<|end|>' → logprob: -14.62523078918457
    9. 'n' → logprob: -15.25023078918457
    10. '	for' → logprob: -15.75023078918457

Token 116: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1875571544806007e-05
    2. ' for' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -15.625011444091797
    4. 'while' → logprob: -15.875011444091797
    5. 'n' → logprob: -17.500011444091797
    6. '	for' → logprob: -17.625011444091797
    7. '   ' → logprob: -18.500011444091797
    8. '```' → logprob: -18.875011444091797
    9. '<|end|>' → logprob: -19.750011444091797
    10. 'For' → logprob: -20.000011444091797

Token 117: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.576069176197052
    2. ' _' → logprob: -1.0760691165924072
    3. ' i' → logprob: -3.0760691165924072
    4. '__' → logprob: -3.8260691165924072
    5. '_i' → logprob: -3.9510691165924072
    6. ' __' → logprob: -5.576069355010986
    7. 'i' → logprob: -5.701069355010986
    8. '_m' → logprob: -6.826069355010986
    9. '___' → logprob: -7.076069355010986
    10. ' m' → logprob: -8.451068878173828

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1637394279241562
    2. 'in' → logprob: -1.9137394428253174
    3. '_' → logprob: -5.913739204406738
    4. 'range' → logprob: -7.538739204406738
    5. ' range' → logprob: -8.538739204406738
    6. ' ' → logprob: -10.038739204406738
    7. ' _' → logprob: -10.413739204406738
    8. '(range' → logprob: -14.038739204406738
    9. '(' → logprob: -14.163739204406738
    10. 'q' → logprob: -14.413739204406738

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1427830457687378
    2. ' range' → logprob: -2.0177831649780273
    3. '(range' → logprob: -9.267783164978027
    4. ' ' → logprob: -12.892783164978027
    5. 'q' → logprob: -13.017783164978027
    6. 'p' → logprob: -13.017783164978027
    7. '(q' → logprob: -14.142783164978027
    8. '	range' → logprob: -14.267783164978027
    9. ' q' → logprob: -14.392783164978027
    10. '(p' → logprob: -14.392783164978027

Token 120: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.9411383867263794
    2. '(m' → logprob: -1.1911383867263794
    3. '(p' → logprob: -1.1911383867263794
    4. '(' → logprob: -6.69113826751709
    5. '(n' → logprob: -7.44113826751709
    6. '((' → logprob: -9.69113826751709
    7. 'q' → logprob: -10.19113826751709
    8. 'm' → logprob: -10.19113826751709
    9. '(t' → logprob: -11.31613826751709
    10. '(s' → logprob: -11.44113826751709

Token 121: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10032528638839722
    2. '):' → logprob: -2.350325345993042
    3. '):
' → logprob: -9.475325584411621
    4. ':' → logprob: -10.600325584411621
    5. '   ' → logprob: -12.100325584411621
    6. ':
' → logprob: -12.225325584411621
    7. '():
' → logprob: -13.100325584411621
    8. ' ):
' → logprob: -13.225325584411621
    9. ')' → logprob: -13.725325584411621
    10. ' ' → logprob: -14.475325584411621

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020433856174349785
    2. 'v' → logprob: -4.0204339027404785
    3. ' v' → logprob: -6.2704339027404785
    4. '       ' → logprob: -8.64543342590332
    5. '	v' → logprob: -8.64543342590332
    6. '   ' → logprob: -11.14543342590332
    7. ' ' → logprob: -12.14543342590332
    8. 'vj' → logprob: -13.39543342590332
    9. '   ' → logprob: -13.39543342590332
    10. 'r' → logprob: -13.45793342590332

Token 123: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0001519325451226905
    2. ' v' → logprob: -9.250151634216309
    3. 'value' → logprob: -10.875151634216309
    4. 'vj' → logprob: -11.250151634216309
    5. 'val' → logprob: -12.625151634216309
    6. 'vi' → logprob: -12.875151634216309
    7. 'x' → logprob: -13.125151634216309
    8. 'line' → logprob: -13.375151634216309
    9. 'vv' → logprob: -13.500151634216309
    10. 's' → logprob: -13.625151634216309

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006319015519693494
    2. ' ,' → logprob: -7.500631809234619
    3. '=' → logprob: -9.750632286071777
    4. ',r' → logprob: -12.000632286071777
    5. '_,' → logprob: -12.875632286071777
    6. 'r' → logprob: -13.000632286071777
    7. 's' → logprob: -13.125632286071777
    8. ' ' → logprob: -13.500632286071777
    9. ' =' → logprob: -13.500632286071777
    10. '‌,' → logprob: -14.875632286071777

Token 125: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0380435548722744
    2. ' r' → logprob: -3.28804349899292
    3. 'w' → logprob: -14.163043975830078
    4. ' ' → logprob: -15.163043975830078
    5. 'p' → logprob: -15.413043975830078
    6. 's' → logprob: -15.663043975830078
    7. '<|end|>' → logprob: -15.788043975830078
    8. ' w' → logprob: -16.163043975830078
    9. ' p' → logprob: -16.538043975830078
    10. 'v' → logprob: -16.788043975830078

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889275997877121
    2. ' =' → logprob: -2.578892707824707
    3. '=input' → logprob: -12.828892707824707
    4. '=

' → logprob: -16.578893661499023
    5. '   ' → logprob: -16.703893661499023
    6. ' ' → logprob: -17.203893661499023
    7. '=line' → logprob: -17.328893661499023
    8. 'v' → logprob: -17.578893661499023
    9. ')' → logprob: -17.703893661499023
    10. '=}' → logprob: -17.828893661499023

Token 127: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38689419627189636
    2. 'input' → logprob: -1.1368942260742188
    3. '=input' → logprob: -11.011894226074219
    4. '(input' → logprob: -12.386894226074219
    5. ',input' → logprob: -14.386894226074219
    6. '[input' → logprob: -14.761894226074219
    7. '	input' → logprob: -14.761894226074219
    8. ' ' → logprob: -15.136894226074219
    9. '_input' → logprob: -15.136894226074219
    10. '<input' → logprob: -15.386894226074219

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006360700353980064
    2. '()' → logprob: -7.375636100769043
    3. '.' → logprob: -12.000636100769043
    4. ' ().' → logprob: -14.500636100769043
    5. '.split' → logprob: -14.500636100769043
    6. '=' → logprob: -14.625636100769043
    7. '().__' → logprob: -15.000636100769043
    8. '()='' → logprob: -15.500636100769043
    9. '   ' → logprob: -15.625636100769043
    10. '(' → logprob: -15.750636100769043

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ' split' → logprob: -14.250000953674316
    3. 'strip' → logprob: -14.375000953674316
    4. 'spl' → logprob: -16.000001907348633
    5. 'rstrip' → logprob: -18.375001907348633
    6. '(split' → logprob: -19.125001907348633
    7. '.split' → logprob: -19.125001907348633
    8. 's' → logprob: -19.125001907348633
    9. 'plit' → logprob: -20.875001907348633
    10. '_split' → logprob: -21.000001907348633

Token 130: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.659785807132721
    2. '<|end|>' → logprob: -1.1597857475280762
    3. 'v' → logprob: -1.9097857475280762
    4. ' v' → logprob: -4.284785747528076
    5. ' ' → logprob: -6.409785747528076
    6. ',v' → logprob: -6.659785747528076
    7. '
' → logprob: -6.909785747528076
    8. '	v' → logprob: -7.284785747528076
    9. '       ' → logprob: -7.284785747528076
    10. '  ' → logprob: -7.784785747528076

Token 132: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.34886640310287476
    2. ' v' → logprob: -1.2238664627075195
    3. '   ' → logprob: -7.9738664627075195
    4. '	v' → logprob: -10.59886646270752
    5. 'r' → logprob: -10.97386646270752
    6. ' ' → logprob: -11.34886646270752
    7. ',v' → logprob: -11.47386646270752
    8. '    ' → logprob: -12.72386646270752
    9. ' r' → logprob: -13.09886646270752
    10. 'n' → logprob: -13.72386646270752

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931939721107483
    2. ' =' → logprob: -0.6931939721107483
    3. '=int' → logprob: -10.068194389343262
    4. 'int' → logprob: -13.943194389343262
    5. ')' → logprob: -14.068194389343262
    6. 'v' → logprob: -14.193194389343262
    7. ' ' → logprob: -14.818194389343262
    8. ',' → logprob: -14.818194389343262
    9. '   ' → logprob: -15.318194389343262
    10. 's' → logprob: -15.943194389343262

Token 134: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.054500666621607e-06
    2. ' int' → logprob: -12.75000286102295
    3. 'float' → logprob: -17.125003814697266
    4. '[int' → logprob: -17.125003814697266
    5. '=int' → logprob: -18.375003814697266
    6. '<int' → logprob: -18.500003814697266
    7. '(int' → logprob: -19.000003814697266
    8. '	int' → logprob: -19.875003814697266
    9. ',int' → logprob: -20.625003814697266
    10. ']int' → logprob: -21.000003814697266

Token 135: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. 'v' → logprob: -15.125066757202148
    4. ')' → logprob: -17.00006675720215
    5. ')v' → logprob: -17.00006675720215
    6. ')(' → logprob: -17.37506675720215
    7. ' (' → logprob: -17.37506675720215
    8. '(
' → logprob: -17.75006675720215
    9. '(value' → logprob: -18.12506675720215
    10. '	v' → logprob: -19.00006675720215

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09320897608995438
    2. ')
' → logprob: -2.4682090282440186
    3. ',' → logprob: -5.9682087898254395
    4. '   ' → logprob: -6.4682087898254395
    5. 'r' → logprob: -10.093209266662598
    6. ')v' → logprob: -10.093209266662598
    7. 'v' → logprob: -10.343209266662598
    8. '),' → logprob: -11.718209266662598
    9. ',r' → logprob: -11.843209266662598
    10. ')
' → logprob: -12.093209266662598

Token 137: '   ' (ID: 271)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5342894792556763
    2. 'r' → logprob: -0.9092894792556763
    3. '   ' → logprob: -4.659289360046387
    4. ' ' → logprob: -6.909289360046387
    5. '       ' → logprob: -8.659289360046387
    6. ',' → logprob: -8.909289360046387
    7. ' ,' → logprob: -9.159289360046387
    8. '  ' → logprob: -9.659289360046387
    9. '    ' → logprob: -9.784289360046387
    10. ' 
' → logprob: -10.284289360046387

Token 138: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.35780811309814453
    2. 'float' → logprob: -1.3578081130981445
    3. ' float' → logprob: -3.6078081130981445
    4. ' r' → logprob: -4.1078081130981445
    5. '   ' → logprob: -11.982808113098145
    6. 'f' → logprob: -13.107808113098145
    7. ' ' → logprob: -13.232808113098145
    8. '=float' → logprob: -13.982808113098145
    9. ',float' → logprob: -14.232808113098145
    10. '    ' → logprob: -14.607808113098145

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029757557436823845
    2. ' =' → logprob: -3.529757499694824
    3. '=float' → logprob: -11.904757499694824
    4. ')' → logprob: -15.529757499694824
    5. '=int' → logprob: -17.27975845336914
    6. '<|end|>' → logprob: -17.90475845336914
    7. '=
' → logprob: -18.15475845336914
    8. ' ' → logprob: -18.27975845336914
    9. '=}' → logprob: -18.65475845336914
    10. '=

' → logprob: -18.65475845336914

Token 140: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06197015196084976
    2. ' float' → logprob: -2.8119702339172363
    3. '=float' → logprob: -14.186969757080078
    4. '(float' → logprob: -14.436969757080078
    5. '	float' → logprob: -15.061969757080078
    6. 'flo' → logprob: -15.436969757080078
    7. '   ' → logprob: -15.811969757080078
    8. ' ' → logprob: -16.061969757080078
    9. '<float' → logprob: -16.186969757080078
    10. ',float' → logprob: -16.186969757080078

Token 141: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. 'r' → logprob: -14.000007629394531
    4. ')' → logprob: -16.25000762939453
    5. ' (' → logprob: -16.62500762939453
    6. '(
' → logprob: -16.75000762939453
    7. ')(' → logprob: -19.00000762939453
    8. '<|end|>' → logprob: -19.62500762939453
    9. '(re' → logprob: -20.25000762939453
    10. '(R' → logprob: -20.25000762939453

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007205605506896973
    2. ')
' → logprob: -5.007205486297607
    3. '   ' → logprob: -7.632205486297607
    4. ')
' → logprob: -13.382205963134766
    5. ')v' → logprob: -14.257205963134766
    6. '<|end|>' → logprob: -14.257205963134766
    7. ')

' → logprob: -14.382205963134766
    8. ' )' → logprob: -14.632205963134766
    9. '')' → logprob: -15.007205963134766
    10. '),' → logprob: -15.132205963134766

Token 143: '   ' (ID: 271)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.12183412164449692
    2. '   ' → logprob: -2.4968340396881104
    3. ' faces' → logprob: -3.4968340396881104
    4. '       ' → logprob: -6.2468342781066895
    5. 'total' → logprob: -10.871833801269531
    6. ' ' → logprob: -10.996833801269531
    7. '_faces' → logprob: -11.121833801269531
    8. 'f' → logprob: -11.496833801269531
    9. '  ' → logprob: -11.621833801269531
    10. '.faces' → logprob: -11.746833801269531

Token 144: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.01437351293861866
    2. '   ' → logprob: -4.264373302459717
    3. ' faces' → logprob: -8.514373779296875
    4. '  ' → logprob: -13.514373779296875
    5. '       ' → logprob: -13.514373779296875
    6. 'fac' → logprob: -13.514373779296875
    7. ' ' → logprob: -13.764373779296875
    8. 'face' → logprob: -13.889373779296875
    9. '
' → logprob: -14.264373779296875
    10. '```' → logprob: -14.514373779296875

Token 145: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.786196975852363e-05
    2. '.' → logprob: -10.250038146972656
    3. '.app' → logprob: -13.750038146972656
    4. '.setdefault' → logprob: -14.375038146972656
    5. 'append' → logprob: -14.875038146972656
    6. '.ap' → logprob: -16.250038146972656
    7. '.extend' → logprob: -16.500038146972656
    8. ').' → logprob: -16.625038146972656
    9. '.add' → logprob: -16.625038146972656
    10. '.Append' → logprob: -16.625038146972656

Token 146: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.000006675720215
    3. '(v' → logprob: -14.125006675720215
    4. ' ((' → logprob: -16.62500762939453
    5. ' ' → logprob: -17.25000762939453
    6. '```' → logprob: -18.87500762939453
    7. ')((' → logprob: -19.12500762939453
    8. '(('' → logprob: -19.37500762939453
    9. '(value' → logprob: -19.62500762939453
    10. '[(' → logprob: -19.62500762939453

Token 147: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.5577775128767826e-06
    2. ' v' → logprob: -12.125005722045898
    3. ')v' → logprob: -17.5000057220459
    4. '	v' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.1250057220459
    6. ' ' → logprob: -19.0000057220459
    7. '
' → logprob: -19.3750057220459
    8. 'value' → logprob: -19.3750057220459
    9. ')' → logprob: -19.3750057220459
    10. 'vi' → logprob: -20.0000057220459

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8219583075260743e-05
    2. ',r' → logprob: -10.375038146972656
    3. ' ,' → logprob: -12.000038146972656
    4. 'r' → logprob: -14.375038146972656
    5. ',
' → logprob: -15.875038146972656
    6. '‌,' → logprob: -17.250038146972656
    7. ' r' → logprob: -18.500038146972656
    8. '),' → logprob: -18.750038146972656
    9. ' ' → logprob: -18.875038146972656
    10. '   ' → logprob: -19.125038146972656

Token 149: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25193139910697937
    2. ' r' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.376931190490723
    5. ')' → logprob: -14.751931190490723
    6. '_r' → logprob: -15.501931190490723
    7. 's' → logprob: -17.12693214416504
    8. ',' → logprob: -17.12693214416504
    9. '	r' → logprob: -17.25193214416504
    10. '    ' → logprob: -17.50193214416504

Token 150: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0024908799678087234
    2. ')' → logprob: -6.002490997314453
    3. '))
' → logprob: -11.752490997314453
    4. ')
' → logprob: -12.002490997314453
    5. '   ' → logprob: -14.502490997314453
    6. ' )
' → logprob: -14.752490997314453
    7. '))' → logprob: -15.127490997314453
    8. ')

' → logprob: -17.252490997314453
    9. '')
' → logprob: -17.627490997314453
    10. ',' → logprob: -18.377490997314453

Token 151: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.38713303208351135
    2. '   ' → logprob: -1.137133002281189
    3. ' total' → logprob: -8.63713264465332
    4. '
' → logprob: -10.26213264465332
    5. ' ' → logprob: -11.01213264465332
    6. '       ' → logprob: -11.51213264465332
    7. '  ' → logprob: -11.51213264465332
    8. '    
' → logprob: -12.63713264465332
    9. '```' → logprob: -13.38713264465332
    10. '	total' → logprob: -13.51213264465332

Token 152: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0002625278721097857
    2. ' total' → logprob: -8.375262260437012
    3. '   ' → logprob: -10.375262260437012
    4. ' ' → logprob: -14.500262260437012
    5. '
' → logprob: -16.000263214111328
    6. '	total' → logprob: -17.375263214111328
    7. '       ' → logprob: -17.625263214111328
    8. '  ' → logprob: -17.750263214111328
    9. 't' → logprob: -19.125263214111328
    10. '```' → logprob: -19.375263214111328

Token 153: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.001356667373329401
    2. '_' → logprob: -6.626356601715088
    3. ' _' → logprob: -10.501357078552246
    4. 'r' → logprob: -14.126357078552246
    5. '_s' → logprob: -14.251357078552246
    6. '_f' → logprob: -14.876357078552246
    7. '_p' → logprob: -15.001357078552246
    8. '_t' → logprob: -16.00135612487793
    9. '_R' → logprob: -16.25135612487793
    10. '_rr' → logprob: -16.37635612487793

Token 154: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5256571173667908
    2. ' +=' → logprob: -0.9006571173667908
    3. '+' → logprob: -6.0256571769714355
    4. ' +' → logprob: -9.650656700134277
    5. '=' → logprob: -10.525656700134277
    6. ' ' → logprob: -11.775656700134277
    7. ' ' → logprob: -12.025656700134277
    8. '+='' → logprob: -12.650656700134277
    9. ']+=' → logprob: -13.150656700134277
    10. '+="' → logprob: -13.650656700134277

Token 155: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029751067981123924
    2. ' r' → logprob: -3.5297510623931885
    3. '(r' → logprob: -15.15475082397461
    4. '_r' → logprob: -15.65475082397461
    5. ' ' → logprob: -16.15475082397461
    6. '	r' → logprob: -17.15475082397461
    7. '   ' → logprob: -18.15475082397461
    8. '0' → logprob: -18.52975082397461
    9. 'float' → logprob: -19.52975082397461
    10. '(' → logprob: -19.52975082397461

Token 156: '
' (ID: 198)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.7519472241401672
    2. 'result' → logprob: -1.7519471645355225
    3. 'dp' → logprob: -2.3769471645355225
    4. 'max' → logprob: -2.8769471645355225
    5. 'results' → logprob: -3.3769471645355225
    6. 'prob' → logprob: -3.5019471645355225
    7. 'best' → logprob: -3.8769471645355225
    8. 'def' → logprob: -4.251947402954102
    9. 'dice' → logprob: -4.626947402954102
    10. 'answer' → logprob: -4.751947402954102

Token 157: 'leader' (ID: 68083)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.112348198890686
    2. 'dp' → logprob: -1.362348198890686
    3. 'result' → logprob: -1.612348198890686
    4. 'results' → logprob: -3.3623480796813965
    5. 'max' → logprob: -3.4873480796813965
    6. 'prob' → logprob: -3.6123480796813965
    7. 'res' → logprob: -4.1123480796813965
    8. 'def' → logprob: -4.2373480796813965
    9. 'best' → logprob: -4.4873480796813965
    10. 'answer' → logprob: -4.6123480796813965

Token 158: ' =' (ID: 314)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.1717057228088379
    2. 's' → logprob: -2.171705722808838
    3. ' =' → logprob: -3.921705722808838
    4. 'boards' → logprob: -5.421705722808838
    5. '_score' → logprob: -5.546705722808838
    6. '_scores' → logprob: -5.671705722808838
    7. '_board' → logprob: -6.171705722808838
    8. '_value' → logprob: -6.421705722808838
    9. '_values' → logprob: -6.796705722808838
    10. '_b' → logprob: -7.421705722808838

Token 159: ' (' (ID: 350)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.2870163917541504
    2. '-' → logprob: -1.6620163917541504
    3. '0' → logprob: -2.1620163917541504
    4. 'p' → logprob: -2.1620163917541504
    5. '(p' → logprob: -2.6620163917541504
    6. 'max' → logprob: -3.0370163917541504
    7. 'faces' → logprob: -3.4120163917541504
    8. '(' → logprob: -3.7870163917541504
    9. 'False' → logprob: -3.9120163917541504
    10. '(-' → logprob: -3.9120163917541504

Token 160: 'p' (ID: 79)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.873566210269928
    2. '0' → logprob: -1.1235661506652832
    3. 'p' → logprob: -1.7485661506652832
    4. '-p' → logprob: -3.373566150665283
    5. 'None' → logprob: -3.623566150665283
    6. 'faces' → logprob: -4.748566150665283
    7. 'float' → logprob: -5.998566150665283
    8. 'max' → logprob: -6.123566150665283
    9. '1' → logprob: -6.248566150665283
    10. ')' → logprob: -6.873566150665283

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017267484217882156
    2. '-' → logprob: -4.64226770401001
    3. ' -' → logprob: -5.64226770401001
    4. '[' → logprob: -6.64226770401001
    5. ')' → logprob: -6.89226770401001
    6. '+' → logprob: -7.89226770401001
    7. ' ,' → logprob: -8.142267227172852
    8. ',)' → logprob: -8.267267227172852
    9. ' +' → logprob: -9.017267227172852
    10. ' /' → logprob: -9.017267227172852

Token 162: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006052516400814056
    2. ' q' → logprob: -5.506052494049072
    3. 'faces' → logprob: -6.631052494049072
    4. 'total' → logprob: -8.00605297088623
    5. 'm' → logprob: -9.13105297088623
    6. ')' → logprob: -10.00605297088623
    7. '0' → logprob: -10.38105297088623
    8. 'len' → logprob: -10.50605297088623
    9. 'p' → logprob: -11.06855297088623
    10. ' faces' → logprob: -11.25605297088623

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022427814838010818
    2. ')' → logprob: -8.500224113464355
    3. 'faces' → logprob: -11.625224113464355
    4. ' ,' → logprob: -12.125224113464355
    5. ' faces' → logprob: -13.000224113464355
    6. ',
' → logprob: -13.125224113464355
    7. '-' → logprob: -14.625224113464355
    8. '_faces' → logprob: -14.875224113464355
    9. ',f' → logprob: -15.250224113464355
    10. '),' → logprob: -15.625224113464355

Token 164: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.061983149498701096
    2. ' faces' → logprob: -2.811983108520508
    3. 'face' → logprob: -11.936983108520508
    4. '_faces' → logprob: -12.186983108520508
    5. 'fac' → logprob: -13.686983108520508
    6. '.faces' → logprob: -13.811983108520508
    7. 'Faces' → logprob: -14.811983108520508
    8. ' ' → logprob: -15.061983108520508
    9. '   ' → logprob: -15.186983108520508
    10. 'f' → logprob: -15.811983108520508

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4060561776859686e-05
    2. ',total' → logprob: -10.500043869018555
    3. ' ,' → logprob: -11.125043869018555
    4. 'total' → logprob: -14.000043869018555
    5. ')' → logprob: -14.750043869018555
    6. ',
' → logprob: -15.125043869018555
    7. '```' → logprob: -17.375043869018555
    8. '),' → logprob: -17.375043869018555
    9. '`,' → logprob: -17.750043869018555
    10. ',t' → logprob: -17.875043869018555

Token 166: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008614926598966122
    2. ' total' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.883614540100098
    4. ' ' → logprob: -17.508615493774414
    5. '	total' → logprob: -17.758615493774414
    6. '(total' → logprob: -18.133615493774414
    7. ',total' → logprob: -18.758615493774414
    8. '0' → logprob: -19.508615493774414
    9. '$total' → logprob: -19.633615493774414
    10. 'tot' → logprob: -19.883615493774414

Token 167: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.0280383548888494e-06
    2. 'r' → logprob: -14.000000953674316
    3. ')' → logprob: -16.500001907348633
    4. '_' → logprob: -17.750001907348633
    5. ' _' → logprob: -18.625001907348633
    6. '\' → logprob: -19.750001907348633
    7. '_R' → logprob: -19.875001907348633
    8. '-r' → logprob: -20.250001907348633
    9. '_t' → logprob: -20.625001907348633
    10. ')_' → logprob: -20.625001907348633

Token 168: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.500004768371582
    3. ')

' → logprob: -14.625004768371582
    4. ' )' → logprob: -15.125004768371582
    5. ')`' → logprob: -17.000003814697266
    6. '))' → logprob: -17.125003814697266
    7. '),' → logprob: -18.625003814697266
    8. ')#' → logprob: -18.875003814697266
    9. ',)' → logprob: -19.125003814697266
    10. '')' → logprob: -19.250003814697266

Token 169: 'def' (ID: 1314)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1794651746749878
    2. 'dp' → logprob: -1.6794651746749878
    3. 'expected' → logprob: -2.0544652938842773
    4. 'result' → logprob: -2.0544652938842773
    5. 'def' → logprob: -2.5544652938842773
    6. 'for' → logprob: -2.9294652938842773
    7. 'max' → logprob: -3.5544652938842773
    8. 'res' → logprob: -3.9294652938842773
    9. '#' → logprob: -4.429465293884277
    10. 'import' → logprob: -4.929465293884277

Token 170: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.06419402360916138
    2. ' calculate' → logprob: -3.1891939640045166
    3. 'expected' → logprob: -4.564194202423096
    4. ' compute' → logprob: -5.189194202423096
    5. ' probability' → logprob: -6.439194202423096
    6. ' def' → logprob: -6.689194202423096
    7. ' calc' → logprob: -7.439194202423096
    8. ' get' → logprob: -7.814194202423096
    9. 'calculate' → logprob: -8.314193725585938
    10. ' expectation' → logprob: -8.314193725585938

Token 171: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.002515254309400916
    2. '_' → logprob: -6.6275153160095215
    3. '_return' → logprob: -7.6275153160095215
    4. '_sum' → logprob: -8.127514839172363
    5. '_score' → logprob: -8.752514839172363
    6. '_values' → logprob: -10.502514839172363
    7. '_out' → logprob: -10.627514839172363
    8. '_expected' → logprob: -10.627514839172363
    9. '_result' → logprob: -10.877514839172363
    10. '_roll' → logprob: -10.877514839172363

Token 172: '(f' (ID: 1526)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10500968247652054
    2. '(' → logprob: -2.3550097942352295
    3. '(obj' → logprob: -6.23000955581665
    4. '(data' → logprob: -7.35500955581665
    5. '(params' → logprob: -8.230010032653809
    6. '(object' → logprob: -8.355010032653809
    7. '(item' → logprob: -8.605010032653809
    8. '(s' → logprob: -8.730010032653809
    9. '(entity' → logprob: -8.980010032653809
    10. '(def' → logprob: -8.980010032653809

Token 173: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.24911101162433624
    2. 'def' → logprob: -2.1241109371185303
    3. 'ace' → logprob: -2.7491109371185303
    4. 'unc' → logprob: -4.499111175537109
    5. 'unction' → logprob: -5.124111175537109
    6. 'or' → logprob: -5.249111175537109
    7. ')' → logprob: -5.499111175537109
    8. '(' → logprob: -5.499111175537109
    9. '):' → logprob: -6.874111175537109
    10. '(x' → logprob: -7.124111175537109

Token 174: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008384577231481671
    2. ')' → logprob: -7.750838279724121
    3. '):
' → logprob: -8.000838279724121
    4. ':' → logprob: -10.750838279724121
    5. ' ):' → logprob: -10.750838279724121
    6. ',' → logprob: -11.000838279724121
    7. '):
' → logprob: -12.375838279724121
    8. '   ' → logprob: -13.125838279724121
    9. '[]):' → logprob: -13.375838279724121
    10. ')):' → logprob: -14.125838279724121

Token 175: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.05793970450758934
    2. ' total' → logprob: -2.9329397678375244
    3. 'n' → logprob: -7.057939529418945
    4. 'weights' → logprob: -7.182939529418945
    5. ' n' → logprob: -8.682939529418945
    6. 'faces' → logprob: -8.807939529418945
    7. '):' → logprob: -8.807939529418945
    8. 'weight' → logprob: -8.807939529418945
    9. ')' → logprob: -9.057939529418945
    10. 'p' → logprob: -9.182939529418945

Token 176: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -14.37500286102295
    3. ')_' → logprob: -14.75000286102295
    4. '_ratio' → logprob: -15.00000286102295
    5. '_total' → logprob: -15.12500286102295
    6. '_value' → logprob: -15.25000286102295
    7. '_rate' → logprob: -15.37500286102295
    8. '_probability' → logprob: -15.37500286102295
    9. '):' → logprob: -15.62500286102295
    10. ' _' → logprob: -16.125001907348633

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002367086010053754
    2. '):
' → logprob: -6.37736701965332
    3. ')' → logprob: -7.37736701965332
    4. '):
' → logprob: -10.50236701965332
    5. ' ):' → logprob: -11.62736701965332
    6. '):

' → logprob: -13.50236701965332
    7. '=' → logprob: -14.62736701965332
    8. ':' → logprob: -15.12736701965332
    9. '   ' → logprob: -15.12736701965332
    10. ' ' → logprob: -15.50236701965332

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012771383626386523
    2. ':' → logprob: -6.876276969909668
    3. ' return' → logprob: -8.751276969909668
    4. ':return' → logprob: -10.376276969909668
    5. ')' → logprob: -11.376276969909668
    6. ' ' → logprob: -11.876276969909668
    7. 'return' → logprob: -12.376276969909668
    8. ',' → logprob: -12.501276969909668
    9. '    
' → logprob: -12.626276969909668
    10. '):' → logprob: -12.751276969909668

Token 179: ' if' (ID: 538)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ev' → logprob: -1.0224274396896362
    2. '   ' → logprob: -1.3974274396896362
    3. 'result' → logprob: -1.8974274396896362
    4. 'return' → logprob: -2.147427558898926
    5. 'sum' → logprob: -2.522427558898926
    6. 'res' → logprob: -4.022427558898926
    7. 's' → logprob: -4.647427558898926
    8. 'total' → logprob: -4.897427558898926
    9. 'value' → logprob: -5.522427558898926
    10. ' return' → logprob: -6.897427558898926

Token 180: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07124056667089462
    2. ' total' → logprob: -2.6962406635284424
    3. 'not' → logprob: -7.196240425109863
    4. ' not' → logprob: -7.571240425109863
    5. 'abs' → logprob: -10.946240425109863
    6. '   ' → logprob: -11.571240425109863
    7. ' ' → logprob: -12.196240425109863
    8. ' abs' → logprob: -12.446240425109863
    9. '(total' → logprob: -13.821240425109863
    10. '	total' → logprob: -13.946240425109863

Token 181: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.054971884936094284
    2. '_' → logprob: -2.929971933364868
    3. ' _' → logprob: -9.804971694946289
    4. '>' → logprob: -11.679971694946289
    5. 'r' → logprob: -12.304971694946289
    6. '_f' → logprob: -12.929971694946289
    7. '==' → logprob: -13.054971694946289
    8. '_a' → logprob: -13.304971694946289
    9. '_value' → logprob: -13.679971694946289
    10. '_total' → logprob: -13.804971694946289

Token 182: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09039381891489029
    2. ' ==' → logprob: -2.5903937816619873
    3. '<=' → logprob: -4.590394020080566
    4. ' <=' → logprob: -6.840394020080566
    5. '>' → logprob: -9.340394020080566
    6. '<' → logprob: -9.840394020080566
    7. '=' → logprob: -10.215394020080566
    8. ' <' → logprob: -10.965394020080566
    9. '0' → logprob: -11.965394020080566
    10. ' ' → logprob: -12.215394020080566

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015036711702123284
    2. ' ' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.126503944396973
    4. '  ' → logprob: -16.126502990722656
    5. '```' → logprob: -16.376502990722656
    6. ' ' → logprob: -16.439002990722656
    7. '    ' → logprob: -16.751502990722656
    8. '1' → logprob: -16.939002990722656
    9. '.' → logprob: -17.314002990722656
    10. '00' → logprob: -17.689002990722656

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003368926409166306
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.000336647033691
    4. '```' → logprob: -15.875336647033691
    5. '  ' → logprob: -16.000337600708008
    6. '    ' → logprob: -16.562837600708008
    7. '00' → logprob: -17.000337600708008
    8. ' ' → logprob: -17.312837600708008
    9. '.' → logprob: -17.437837600708008
    10. '1' → logprob: -17.625337600708008

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045788347721099854
    2. ':
' → logprob: -3.420788288116455
    3. ':return' → logprob: -4.420788288116455
    4. '   ' → logprob: -11.420788764953613
    5. '):' → logprob: -11.545788764953613
    6. 'return' → logprob: -12.295788764953613
    7. ' or' → logprob: -12.420788764953613
    8. ' :' → logprob: -12.420788764953613
    9. ':
' → logprob: -12.545788764953613
    10. '.' → logprob: -12.920788764953613

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2199079990386963
    2. ':' → logprob: -2.0949079990386963
    3. '   ' → logprob: -3.3449079990386963
    4. ' return' → logprob: -4.094907760620117
    5. ':return' → logprob: -4.094907760620117
    6. 'return' → logprob: -6.219907760620117
    7. ':
' → logprob: -6.344907760620117
    8. '0' → logprob: -6.969907760620117
    9. ' :' → logprob: -7.969907760620117
    10. '	return' → logprob: -8.344907760620117

Token 187: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0028397070709615946
    2. '   ' → logprob: -6.6278395652771
    3. ' return' → logprob: -6.6278395652771
    4. '       ' → logprob: -8.627840042114258
    5. '0' → logprob: -11.877840042114258
    6. '	return' → logprob: -13.252840042114258
    7. '           ' → logprob: -14.627840042114258
    8. ':return' → logprob: -14.752840042114258
    9. ' ' → logprob: -15.377840042114258
    10. ')return' → logprob: -15.627840042114258

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00410380819812417
    2. ' ' → logprob: -5.504103660583496
    3. 'None' → logprob: -10.879103660583496
    4. ' None' → logprob: -12.629103660583496
    5. 'float' → logprob: -13.629103660583496
    6. '   ' → logprob: -14.754103660583496
    7. '  ' → logprob: -15.191603660583496
    8. ' ' → logprob: -15.441603660583496
    9. '1' → logprob: -15.441603660583496
    10. ' float' → logprob: -15.879103660583496

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8828707804204896e-05
    2. ' ' → logprob: -10.000048637390137
    3. 'None' → logprob: -13.000048637390137
    4. 'float' → logprob: -14.250048637390137
    5. '   ' → logprob: -16.437549591064453
    6. '1' → logprob: -16.625049591064453
    7. 'sum' → logprob: -17.000049591064453
    8. '-' → logprob: -17.250049591064453
    9. 'return' → logprob: -17.750049591064453
    10. '```' → logprob: -17.812549591064453

Token 190: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024463387206196785
    2. '
' → logprob: -4.149463176727295
    3. '   ' → logprob: -4.899463176727295
    4. '    
' → logprob: -7.274463176727295
    5. '  
' → logprob: -9.649463653564453
    6. '0' → logprob: -9.774463653564453
    7. '   
' → logprob: -10.399463653564453
    8. '  ' → logprob: -10.649463653564453
    9. ' ' → logprob: -10.774463653564453
    10. ')' → logprob: -11.274463653564453

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '<|end|>' → logprob: -17.875
    3. 'return' → logprob: -20.875
    4. '
' → logprob: -21.625
    5. ' ' → logprob: -21.625
    6. '```' → logprob: -21.75
    7. '000' → logprob: -21.875
    8. 'value' → logprob: -21.875
    9. '9' → logprob: -22.25
    10. '00' → logprob: -22.875

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055177342146635056
    2. '
' → logprob: -5.880517959594727
    3. '    
' → logprob: -6.005517959594727
    4. ' sum' → logprob: -9.505517959594727
    5. ' return' → logprob: -9.880517959594727
    6. ' result' → logprob: -10.380517959594727
    7. 'result' → logprob: -11.005517959594727
    8. 'sum' → logprob: -11.380517959594727
    9. 'return' → logprob: -12.005517959594727
    10. ')' → logprob: -12.005517959594727

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006936123827472329
    2. '    
' → logprob: -7.5006937980651855
    3. 'value' → logprob: -10.125693321228027
    4. '
' → logprob: -10.125693321228027
    5. 'result' → logprob: -11.000693321228027
    6. ' value' → logprob: -11.125693321228027
    7. ' result' → logprob: -11.625693321228027
    8. 'total' → logprob: -12.750693321228027
    9. ' sum' → logprob: -12.750693321228027
    10. 'sum' → logprob: -12.875693321228027

Token 194: ' s' (ID: 265)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.10478470474481583
    2. 'res' → logprob: -2.8547847270965576
    3. 'result' → logprob: -3.9797847270965576
    4. 'return' → logprob: -4.6047844886779785
    5. 'value' → logprob: -5.8547844886779785
    6. 'total' → logprob: -6.2297844886779785
    7. '   ' → logprob: -6.3547844886779785
    8. 's' (adapté à ' s') → logprob: -6.3547844886779785
    9. 'exp' → logprob: -6.6047844886779785
    10. 'val' → logprob: -6.8547844886779785

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4175078570842743
    2. '=' → logprob: -1.1675078868865967
    3. 'um' → logprob: -3.5425078868865967
    4. ' ' → logprob: -6.792507648468018
    5. '   ' → logprob: -9.667508125305176
    6. ' ' → logprob: -11.292508125305176
    7. '	' → logprob: -11.667508125305176
    8. '_' → logprob: -11.667508125305176
    9. '=sum' → logprob: -12.042508125305176
    10. 'u' → logprob: -12.917508125305176

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004232377745211124
    2. 'sum' → logprob: -6.254232406616211
    3. ' ' → logprob: -6.504232406616211
    4. ' sum' → logprob: -7.129232406616211
    5. '   ' → logprob: -13.254232406616211
    6. '(sum' → logprob: -15.254232406616211
    7. ' ' → logprob: -16.25423240661621
    8. '.sum' → logprob: -16.44173240661621
    9. ',' → logprob: -16.56673240661621
    10. '	sum' → logprob: -16.56673240661621

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04860224947333336
    2. 'sum' → logprob: -3.048602342605591
    3. ' sum' → logprob: -11.423602104187012
    4. ' ' → logprob: -13.298602104187012
    5. '   ' → logprob: -14.423602104187012
    6. '(sum' → logprob: -14.423602104187012
    7. '
' → logprob: -14.798602104187012
    8. '.sum' → logprob: -15.673602104187012
    9. 'Sum' → logprob: -15.798602104187012
    10. '```' → logprob: -16.048603057861328

Token 198: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6035683155059814
    2. '   ' → logprob: -1.2285683155059814
    3. '<|end|>' → logprob: -1.9785683155059814
    4. ' ' → logprob: -5.228568077087402
    5. 'for' → logprob: -5.603568077087402
    6. '<|end|>' → logprob: -5.728568077087402
    7. '
' → logprob: -5.978568077087402
    8. '    ' → logprob: -6.228568077087402
    9. ' for' → logprob: -6.603568077087402
    10. '  ' → logprob: -6.603568077087402

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4285862057004124e-05
    2. 'for' → logprob: -10.37503433227539
    3. ' ' → logprob: -13.12503433227539
    4. '
' → logprob: -14.50003433227539
    5. '   ' → logprob: -15.12503433227539
    6. ' for' → logprob: -16.50003433227539
    7. '.' → logprob: -16.62503433227539
    8. '```' → logprob: -16.62503433227539
    9. '  ' → logprob: -17.62503433227539
    10. 'from' → logprob: -17.87503433227539

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2572762668132782
    2. '<|end|>' → logprob: -1.8822762966156006
    3. ' for' → logprob: -3.0072762966156006
    4. '
' → logprob: -3.8822762966156006
    5. 'for' → logprob: -6.3822760581970215
    6. ' ' → logprob: -6.7572760581970215
    7. '    
' → logprob: -7.5072760581970215
    8. '<|end|>' → logprob: -7.8822760581970215
    9. '	for' → logprob: -8.00727653503418
    10. '  ' → logprob: -9.25727653503418

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07384434342384338
    2. ' for' → logprob: -3.0738444328308105
    3. 'for' → logprob: -3.6988444328308105
    4. '	for' → logprob: -9.323843955993652
    5. '
' → logprob: -10.073843955993652
    6. '<|end|>' → logprob: -10.323843955993652
    7. '    
' → logprob: -11.323843955993652
    8. ' ' → logprob: -12.323843955993652
    9. ')' → logprob: -12.823843955993652
    10. '    ' → logprob: -13.198843955993652

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015063141472637653
    2. '   ' → logprob: -4.265063285827637
    3. ' for' → logprob: -7.015063285827637
    4. '	for' → logprob: -14.015063285827637
    5. '  ' → logprob: -16.26506233215332
    6. ' ' → logprob: -16.39006233215332
    7. '    ' → logprob: -18.39006233215332
    8. '
' → logprob: -18.39006233215332
    9. '    
' → logprob: -18.51506233215332
    10. '       ' → logprob: -18.76506233215332

Token 203: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005411385092884302
    2. 'value' → logprob: -5.880411148071289
    3. '(v' → logprob: -6.380411148071289
    4. ' v' → logprob: -7.130411148071289
    5. 'face' → logprob: -9.630411148071289
    6. 'val' → logprob: -11.380411148071289
    7. '(value' → logprob: -11.505411148071289
    8. ' (' → logprob: -12.130411148071289
    9. ' value' → logprob: -12.130411148071289
    10. '(' → logprob: -12.880411148071289

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015383612480945885
    2. ',r' → logprob: -9.125153541564941
    3. ' ,' → logprob: -10.500153541564941
    4. '‌,' → logprob: -12.875153541564941
    5. '_,' → logprob: -13.000153541564941
    6. ',v' → logprob: -13.375153541564941
    7. '   ' → logprob: -13.500153541564941
    8. ',f' → logprob: -13.750153541564941
    9. 'r' → logprob: -13.875153541564941
    10. '<|end|>' → logprob: -14.125153541564941

Token 205: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.500261306762695
    4. '_r' → logprob: -17.750261306762695
    5. '	r' → logprob: -17.875261306762695
    6. ' ' → logprob: -18.000261306762695
    7. '
' → logprob: -19.000261306762695
    8. 'prob' → logprob: -19.375261306762695
    9. '<|end|>' → logprob: -19.625261306762695
    10. '```' → logprob: -19.625261306762695

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020556017756462097
    2. 'in' → logprob: -3.8955559730529785
    3. ' ' → logprob: -11.770556449890137
    4. ',' → logprob: -12.520556449890137
    5. '	in' → logprob: -13.895556449890137
    6. '    ' → logprob: -14.145556449890137
    7. '   ' → logprob: -14.770556449890137
    8. 's' → logprob: -15.270556449890137
    9. '  ' → logprob: -16.02055549621582
    10. ' ,' → logprob: -16.14555549621582

Token 207: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.00672211404889822
    2. ' faces' → logprob: -5.0067219734191895
    3. '_faces' → logprob: -12.756722450256348
    4. '   ' → logprob: -13.256722450256348
    5. '.faces' → logprob: -14.131722450256348
    6. ' ' → logprob: -14.506722450256348
    7. 'aces' → logprob: -15.006722450256348
    8. 'fac' → logprob: -15.756722450256348
    9. 'Faces' → logprob: -15.881722450256348
    10. '
' → logprob: -16.00672149658203

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014648657524958253
    2. ':
' → logprob: -6.62646484375
    3. '       ' → logprob: -9.62646484375
    4. '   ' → logprob: -10.50146484375
    5. ',' → logprob: -10.62646484375
    6. ' :' → logprob: -12.37646484375
    7. '):' → logprob: -12.62646484375
    8. ':

' → logprob: -12.87646484375
    9. 's' → logprob: -13.12646484375
    10. ' s' → logprob: -13.12646484375

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006716555915772915
    2. ':' → logprob: -5.381716728210449
    3. '<|end|>' → logprob: -6.881716728210449
    4. ' s' → logprob: -8.13171672821045
    5. ',' → logprob: -8.38171672821045
    6. '   ' → logprob: -8.50671672821045
    7. 's' → logprob: -9.38171672821045
    8. '    ' → logprob: -10.13171672821045
    9. '
' → logprob: -10.13171672821045
    10. '      ' → logprob: -10.50671672821045

Token 210: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.4812467098236084
    2. ' s' → logprob: -0.9812467098236084
    3. '       ' → logprob: -4.9812469482421875
    4. ' ' → logprob: -8.981246948242188
    5. '   ' → logprob: -9.481246948242188
    6. '           ' → logprob: -10.731246948242188
    7. '        ' → logprob: -10.981246948242188
    8. '    ' → logprob: -11.481246948242188
    9. '<|end|>' → logprob: -11.856246948242188
    10. ' 
' → logprob: -12.356246948242188

Token 211: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3133573830127716
    2. ' +=' → logprob: -1.3133573532104492
    3. '+' → logprob: -9.93835735321045
    4. '   ' → logprob: -10.56335735321045
    5. '+=(' → logprob: -11.56335735321045
    6. ']+=' → logprob: -12.68835735321045
    7. '    ' → logprob: -12.81335735321045
    8. '	' → logprob: -13.68835735321045
    9. '=' → logprob: -13.81335735321045
    10. ' ' → logprob: -14.31335735321045

Token 212: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03427611663937569
    2. ' v' → logprob: -3.534276008605957
    3. '(v' → logprob: -5.409276008605957
    4. ' (' → logprob: -10.284276008605957
    5. '(' → logprob: -12.409276008605957
    6. '   ' → logprob: -13.784276008605957
    7. '	v' → logprob: -14.034276008605957
    8. ' ' → logprob: -16.284276962280273
    9. '(s' → logprob: -16.784276962280273
    10. '*v' → logprob: -16.784276962280273

Token 213: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.251935213804245
    2. ' *' → logprob: -1.5019352436065674
    3. '*r' → logprob: -12.251935005187988
    4. ' ' → logprob: -14.876935005187988
    5. '   ' → logprob: -15.126935005187988
    6. ' ' → logprob: -15.876935005187988
    7. '*v' → logprob: -16.001935958862305
    8. '*object' → logprob: -16.001935958862305
    9. '*p' → logprob: -16.626935958862305
    10. '**' → logprob: -16.626935958862305

Token 214: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3412322402000427
    2. '(r' → logprob: -1.5912322998046875
    3. ' (' → logprob: -2.7162322998046875
    4. ' r' → logprob: -3.9662322998046875
    5. '(' → logprob: -7.9662322998046875
    6. ' ' → logprob: -12.716232299804688
    7. '_r' → logprob: -12.841232299804688
    8. '(float' → logprob: -12.966232299804688
    9. '(
' → logprob: -13.341232299804688
    10. '
' → logprob: -13.466232299804688

Token 215: '
' (ID: 198)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6349288821220398
    2. ' /' → logprob: -0.7599288821220398
    3. '   ' → logprob: -6.2599287033081055
    4. '
' → logprob: -8.134928703308105
    5. ' ' → logprob: -10.384928703308105
    6. '/
' → logprob: -10.759928703308105
    7. ' /
' → logprob: -10.884928703308105
    8. '/s' → logprob: -11.009928703308105
    9. 's' → logprob: -11.759928703308105
    10. 'return' → logprob: -12.009928703308105

Token 216: '   ' (ID: 271)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.24231158196926117
    2. '/' → logprob: -1.7423115968704224
    3. '   ' → logprob: -3.242311477661133
    4. 'return' → logprob: -7.867311477661133
    5. '
' → logprob: -8.242311477661133
    6. ' return' → logprob: -8.867311477661133
    7. '/s' → logprob: -9.242311477661133
    8. ' /
' → logprob: -10.367311477661133
    9. '/
' → logprob: -10.492311477661133
    10. ' ' → logprob: -10.492311477661133

Token 217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0923890471458435
    2. '/' → logprob: -2.8423891067504883
    3. ' return' → logprob: -3.9673891067504883
    4. ' /' → logprob: -4.967389106750488
    5. '/s' → logprob: -6.092389106750488
    6. '   ' → logprob: -6.342389106750488
    7. '
' → logprob: -10.092389106750488
    8. 's' → logprob: -12.092389106750488
    9. '/
' → logprob: -12.342389106750488
    10. '    
' → logprob: -13.717389106750488

Token 218: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1269282102584839
    2. 's' → logprob: -2.1269283294677734
    3. '(s' → logprob: -16.126928329467773
    4. ' ' → logprob: -18.626928329467773
    5. ' (' → logprob: -19.376928329467773
    6. '_s' → logprob: -19.501928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '	s' → logprob: -20.876928329467773
    9. '{s' → logprob: -21.251928329467773
    10. ' /' → logprob: -22.001928329467773

Token 219: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.20141451060771942
    2. '/' → logprob: -1.7014144659042358
    3. ' /
' → logprob: -14.576414108276367
    4. ' ' → logprob: -15.201414108276367
    5. 'div' → logprob: -15.201414108276367
    6. 'total' → logprob: -16.701414108276367
    7. '/
' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.076414108276367
    9. '
' → logprob: -17.451414108276367
    10. '   ' → logprob: -17.826414108276367

Token 220: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0019286326132714748
    2. ' total' → logprob: -6.251928806304932
    3. '(total' → logprob: -20.126928329467773
    4. '_total' → logprob: -20.751928329467773
    5. ' ' → logprob: -21.376928329467773
    6. '	total' → logprob: -21.876928329467773
    7. 't' → logprob: -22.126928329467773
    8. '   ' → logprob: -22.501928329467773
    9. '$total' → logprob: -22.501928329467773
    10. 'tot' → logprob: -22.751928329467773

Token 221: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -6.034592388459714e-06
    2. ' _' → logprob: -12.875005722045898
    3. '_' → logprob: -13.000005722045898
    4. '_f' → logprob: -14.625005722045898
    5. '_total' → logprob: -15.125005722045898
    6. '_t' → logprob: -15.250005722045898
    7. '_s' → logprob: -16.6250057220459
    8. '_p' → logprob: -16.7500057220459
    9. 'r' → logprob: -17.3750057220459
    10. '_R' → logprob: -17.5000057220459

Token 222: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5730673670768738
    2. 'results' → logprob: -1.1980674266815186
    3. 'expected' → logprob: -3.0730674266815186
    4. '
' → logprob: -3.4480674266815186
    5. 'max' → logprob: -3.6980674266815186
    6. 'dp' → logprob: -4.9480671882629395
    7. 'res' → logprob: -5.0730671882629395
    8. 'def' → logprob: -5.9480671882629395
    9. 'for' → logprob: -5.9480671882629395
    10. 'answer' → logprob: -6.3230671882629395

Token 223: 'leader' (ID: 68083)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6996315121650696
    2. 'expected' → logprob: -1.8246314525604248
    3. 'result' → logprob: -2.074631452560425
    4. 'res' → logprob: -2.699631452560425
    5. 'ev' → logprob: -2.949631452560425
    6. 'dp' → logprob: -3.449631452560425
    7. 'ans' → logprob: -3.824631452560425
    8. 'def' → logprob: -4.699631690979004
    9. 'max' → logprob: -4.824631690979004
    10. 'for' → logprob: -4.824631690979004

Token 224: '_ev' (ID: 120966)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9445250630378723
    2. '(' → logprob: -1.0695250034332275
    3. ' =' → logprob: -1.8195250034332275
    4. ')' → logprob: -2.3195250034332275
    5. ',' → logprob: -6.194525241851807
    6. '_' → logprob: -6.444525241851807
    7. '(p' → logprob: -6.819525241851807
    8. '(f' → logprob: -6.819525241851807
    9. '()' → logprob: -8.069524765014648
    10. '[' → logprob: -8.319524765014648

Token 226: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.0011705794604495168
    2. ' expected' → logprob: -6.751170635223389
    3. '(expected' → logprob: -15.00117015838623
    4. '	expected' → logprob: -18.251171112060547
    5. 'expect' → logprob: -19.876171112060547
    6. 'Expected' → logprob: -20.126171112060547
    7. '.expected' → logprob: -20.126171112060547
    8. '0' → logprob: -21.126171112060547
    9. 'EXPECTED' → logprob: -21.251171112060547
    10. '   ' → logprob: -21.251171112060547

Token 227: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.125
    3. 'value' → logprob: -17.0
    4. '_val' → logprob: -17.125
    5. '_le' → logprob: -18.0
    6. '_values' → logprob: -18.5
    7. ' _' → logprob: -18.875
    8. '_VALUE' → logprob: -20.0
    9. '_velocity' → logprob: -20.0
    10. '_Value' → logprob: -20.125

Token 228: '(' (ID: 7)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0005734055885113776
    2. '(' → logprob: -7.500573635101318
    3. '(le' → logprob: -10.87557315826416
    4. ' (' → logprob: -13.87557315826416
    5. '(face' → logprob: -15.75057315826416
    6. '(F' → logprob: -16.000574111938477
    7. '((' → logprob: -16.500574111938477
    8. '(features' → logprob: -16.875574111938477
    9. '(s' → logprob: -17.375574111938477
    10. '(fe' → logprob: -17.500574111938477

Token 229: 'leader' (ID: 68083)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.2813606262207031
    2. 'leader' → logprob: -1.4063606262207031
    3. ' leader' → logprob: -9.781360626220703
    4. ' faces' → logprob: -10.156360626220703
    5. 'face' → logprob: -10.281360626220703
    6. 'lead' → logprob: -10.406360626220703
    7. 'leaders' → logprob: -11.031360626220703
    8. 'le' → logprob: -11.781360626220703
    9. 'fac' → logprob: -12.031360626220703
    10. 'leading' → logprob: -12.656360626220703

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.15310683415737e-05
    2. 'faces' → logprob: -11.875021934509277
    3. '_faces' → logprob: -12.125021934509277
    4. '.faces' → logprob: -12.375021934509277
    5. '[-' → logprob: -12.375021934509277
    6. ' faces' → logprob: -15.875021934509277
    7. '.' → logprob: -15.875021934509277
    8. 'Faces' → logprob: -16.00002098083496
    9. '```' → logprob: -16.12502098083496
    10. ')' → logprob: -16.37502098083496

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014561474381480366
    2. '3' → logprob: -9.00014591217041
    3. '-' → logprob: -10.75014591217041
    4. '
' → logprob: -15.12514591217041
    5. '```' → logprob: -15.12514591217041
    6. ' ' → logprob: -16.625144958496094
    7. '   ' → logprob: -17.125144958496094
    8. '1' → logprob: -17.625144958496094
    9. ' -' → logprob: -18.312644958496094
    10. '

' → logprob: -18.375144958496094

Token 232: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ')' → logprob: -14.375059127807617
    4. '),' → logprob: -15.875059127807617
    5. ' ' → logprob: -16.000059127807617
    6. '   ' → logprob: -16.750059127807617
    7. '‌,' → logprob: -17.125059127807617
    8. '],' → logprob: -17.500059127807617
    9. '  ' → logprob: -17.500059127807617
    10. 'leader' → logprob: -18.250059127807617

Token 233: ' leader' (ID: 12554)
  Prédit: 'leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leader' → logprob: -0.0031827057246118784
    2. ' leader' → logprob: -5.753182888031006
    3. 'lead' → logprob: -12.253182411193848
    4. 'leading' → logprob: -16.378183364868164
    5. 'league' → logprob: -17.503183364868164
    6. 'Leader' → logprob: -17.628183364868164
    7. 'le' → logprob: -17.628183364868164
    8. 'total' → logprob: -17.628183364868164
    9. ' leaderboard' → logprob: -18.128183364868164
    10. 'leaders' → logprob: -18.253183364868164

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020756404846906662
    2. '_ev' → logprob: -3.895756483078003
    3. '-' → logprob: -9.770756721496582
    4. ')' → logprob: -10.020756721496582
    5. '.' → logprob: -10.645756721496582
    6. '[-' → logprob: -11.020756721496582
    7. '2' → logprob: -11.645756721496582
    8. 'Ev' → logprob: -11.770756721496582
    9. ' [' → logprob: -11.770756721496582
    10. ' ' → logprob: -11.895756721496582

Token 235: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16378922760486603
    2. '1' → logprob: -2.0387892723083496
    3. '3' → logprob: -3.9137892723083496
    4. '-' → logprob: -7.28878927230835
    5. '0' → logprob: -8.788788795471191
    6. '```' → logprob: -10.788788795471191
    7. 'total' → logprob: -10.976288795471191
    8. '
' → logprob: -11.601288795471191
    9. ' ' → logprob: -11.663788795471191
    10. '``' → logprob: -12.101288795471191

Token 236: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.250004768371582
    3. '))' → logprob: -16.0000057220459
    4. ' )' → logprob: -16.0000057220459
    5. ')

' → logprob: -16.2500057220459
    6. ')`' → logprob: -18.8750057220459
    7. ')**' → logprob: -19.7500057220459
    8. '),' → logprob: -19.7500057220459
    9. ')#' → logprob: -20.1250057220459
    10. ')}' → logprob: -20.5000057220459

Token 237: 'flag' (ID: 17665)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6042044758796692
    2. 'best' → logprob: -1.8542044162750244
    3. 'max' → logprob: -1.9792044162750244
    4. 'for' → logprob: -3.2292044162750244
    5. 'count' → logprob: -3.9792044162750244
    6. 'result' → logprob: -4.1042046546936035
    7. 'answers' → logprob: -4.3542046546936035
    8. 'ans' → logprob: -4.6042046546936035
    9. 'win' → logprob: -4.6042046546936035
    10. 'w' → logprob: -4.7292046546936035

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02652541734278202
    2. '=' → logprob: -3.6515254974365234
    3. '_' → logprob: -8.526525497436523
    4. ' ' → logprob: -10.651525497436523
    5. ' _' → logprob: -14.401525497436523
    6. '_=' → logprob: -14.651525497436523
    7. ',' → logprob: -14.776525497436523
    8. ' =
' → logprob: -15.026525497436523
    9. ' =)' → logprob: -15.526525497436523
    10. ':' → logprob: -15.651525497436523

Token 239: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26016998291015625
    2. ' False' → logprob: -1.5101699829101562
    3. 'True' → logprob: -5.135169982910156
    4. ' True' → logprob: -6.135169982910156
    5. '0' → logprob: -9.135169982910156
    6. ' ' → logprob: -10.885169982910156
    7. '(False' → logprob: -12.010169982910156
    8. 'leader' → logprob: -12.260169982910156
    9. ' leader' → logprob: -12.760169982910156
    10. ' any' → logprob: -12.885169982910156

Token 240: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38935592770576477
    2. '
' → logprob: -1.1393558979034424
    3. ' for' → logprob: -6.0143561363220215
    4. '\n' → logprob: -10.764355659484863
    5. '
' → logprob: -11.264355659484863
    6. '

' → logprob: -13.514355659484863
    7. ' 
' → logprob: -14.389355659484863
    8. 'if' → logprob: -14.514355659484863
    9. '0' → logprob: -14.764355659484863
    10. '\' → logprob: -14.889355659484863

Token 241: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018220659694634378
    2. 'best' → logprob: -8.875182151794434
    3. 'result' → logprob: -11.000182151794434
    4. 'max' → logprob: -11.750182151794434
    5. 'winner' → logprob: -12.500182151794434
    6. 'answer' → logprob: -12.875182151794434
    7. 'results' → logprob: -13.375182151794434
    8. 'ans' → logprob: -13.500182151794434
    9. ' for' → logprob: -13.875182151794434
    10. 'selected' → logprob: -14.000182151794434

Token 242: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4831804633140564
    2. 'n' → logprob: -1.7331805229187012
    3. ' i' → logprob: -2.358180522918701
    4. '(n' → logprob: -3.358180522918701
    5. 'i' → logprob: -3.733180522918701
    6. ' dice' → logprob: -4.108180522918701
    7. ' (' → logprob: -4.233180522918701
    8. 'dice' → logprob: -4.608180522918701
    9. ' die' → logprob: -5.983180522918701
    10. ' t' → logprob: -6.358180522918701

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10395144671201706
    2. 'ice' → logprob: -2.4789514541625977
    3. 'in' → logprob: -4.728951454162598
    4. 'ie' → logprob: -6.103951454162598
    5. ',' → logprob: -6.478951454162598
    6. 'i' → logprob: -6.603951454162598
    7. ' ' → logprob: -7.853951454162598
    8. '_' → logprob: -8.853951454162598
    9. ' i' → logprob: -9.978951454162598
    10. 'e' → logprob: -9.978951454162598

Token 244: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.5802574753761292
    2. 'dice' → logprob: -0.8302574753761292
    3. 'ice' → logprob: -5.455257415771484
    4. ' ice' → logprob: -11.205257415771484
    5. ' range' → logprob: -11.330257415771484
    6. 'd' → logprob: -13.205257415771484
    7. 'ices' → logprob: -13.455257415771484
    8. 'range' → logprob: -13.455257415771484
    9. ' ' → logprob: -13.580257415771484
    10. 'lice' → logprob: -13.705257415771484

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010050622513517737
    2. ':
' → logprob: -7.751005172729492
    3. ' :' → logprob: -7.751005172729492
    4. ' in' → logprob: -9.126005172729492
    5. '[' → logprob: -11.251005172729492
    6. ',' → logprob: -11.751005172729492
    7. '):' → logprob: -12.251005172729492
    8. 'in' → logprob: -12.876005172729492
    9. ')' → logprob: -14.251005172729492
    10. '=' → logprob: -14.251005172729492

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000585918256547302
    2. '    
' → logprob: -8.625585556030273
    3. 'n' → logprob: -8.875585556030273
    4. ' n' → logprob: -9.125585556030273
    5. ',' → logprob: -10.000585556030273
    6. ' if' → logprob: -10.250585556030273
    7. ' d' → logprob: -10.750585556030273
    8. 'd' → logprob: -11.125585556030273
    9. '
' → logprob: -11.500585556030273
    10. '   ' → logprob: -12.000585556030273

Token 247: ' ev' (ID: 5332)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3470199704170227
    2. '   ' → logprob: -1.722019910812378
    3. 'n' → logprob: -3.222019910812378
    4. 'ev' (adapté à ' ev') → logprob: -3.222019910812378
    5. 'if' → logprob: -4.097020149230957
    6. 'dice' → logprob: -4.847020149230957
    7. ' d' → logprob: -5.847020149230957
    8. 'die' → logprob: -5.972020149230957
    9. ' if' → logprob: -6.972020149230957
    10. 'nv' → logprob: -7.097020149230957

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04718398302793503
    2. '=' → logprob: -3.6721839904785156
    3. '_' → logprob: -4.422183990478516
    4. '_ev' → logprob: -4.922183990478516
    5. '_val' → logprob: -7.547183990478516
    6. '_d' → logprob: -7.797183990478516
    7. '_value' → logprob: -8.047183990478516
    8. ' ' → logprob: -10.422183990478516
    9. '_current' → logprob: -10.922183990478516
    10. 'd' → logprob: -10.922183990478516

Token 249: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.029750952497124672
    2. ' expected' → logprob: -3.5297510623931885
    3. '(expected' → logprob: -15.15475082397461
    4. '   ' → logprob: -15.90475082397461
    5. '	expected' → logprob: -16.65475082397461
    6. ' ' → logprob: -18.15475082397461
    7. 'expect' → logprob: -18.65475082397461
    8. '.expected' → logprob: -19.27975082397461
    9. '  ' → logprob: -20.02975082397461
    10. '_expected' → logprob: -20.15475082397461

Token 250: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.339278580620885e-06
    2. 'value' → logprob: -13.125001907348633
    3. 'expected' → logprob: -15.875001907348633
    4. '_' → logprob: -15.875001907348633
    5. '_expected' → logprob: -17.125001907348633
    6. '_VALUE' → logprob: -18.750001907348633
    7. '_values' → logprob: -18.875001907348633
    8. 'Value' → logprob: -19.125001907348633
    9. ' _' → logprob: -19.375001907348633
    10. '_Value' → logprob: -20.250001907348633

Token 251: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.125004768371582
    4. '((' → logprob: -16.750003814697266
    5. 'd' → logprob: -17.625003814697266
    6. '(
' → logprob: -17.750003814697266
    7. '[d' → logprob: -18.000003814697266
    8. '(D' → logprob: -21.125003814697266
    9. '=d' → logprob: -21.250003814697266
    10. '```' → logprob: -21.250003814697266

Token 252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.375
    3. '   ' → logprob: -16.875
    4. '
' → logprob: -17.0
    5. '[
' → logprob: -18.625
    6. '(' → logprob: -18.75
    7. ')[' → logprob: -19.0
    8. ' ' → logprob: -19.25
    9. ')' → logprob: -19.25
    10. '

' → logprob: -19.375

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.875014305114746
    3. '[' → logprob: -12.375014305114746
    4. '   ' → logprob: -13.000014305114746
    5. '
' → logprob: -16.00001335144043
    6. '  ' → logprob: -16.25001335144043
    7. '(' → logprob: -16.62501335144043
    8. '```' → logprob: -16.87501335144043
    9. '    ' → logprob: -17.12501335144043
    10. '       ' → logprob: -18.00001335144043

Token 254: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0018280998338013887
    2. ',' → logprob: -6.751828193664551
    3. ' ],' → logprob: -7.376828193664551
    4. '   ' → logprob: -11.00182819366455
    5. ' ,' → logprob: -11.87682819366455
    6. ' ' → logprob: -13.12682819366455
    7. ']' → logprob: -13.25182819366455
    8. '),' → logprob: -13.50182819366455
    9. '  ' → logprob: -13.87682819366455
    10. '],[' → logprob: -14.37682819366455

Token 255: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01815006136894226
    2. ' d' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.518150329589844
    4. ')d' → logprob: -17.268150329589844
    5. ')' → logprob: -17.893150329589844
    6. ' ' → logprob: -18.143150329589844
    7. '  ' → logprob: -18.393150329589844
    8. '	d' → logprob: -18.518150329589844
    9. '    ' → logprob: -19.143150329589844
    10. '
' → logprob: -20.018150329589844

Token 256: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38719281554222107
    2. '3' → logprob: -1.1371928453445435
    3. ' ' → logprob: -8.137192726135254
    4. '   ' → logprob: -12.012192726135254
    5. ')' → logprob: -12.137192726135254
    6. ' [' → logprob: -12.137192726135254
    7. ']' → logprob: -12.262192726135254
    8. '
' → logprob: -13.512192726135254
    9. '```' → logprob: -13.887192726135254
    10. '][' → logprob: -14.012192726135254

Token 257: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.375007629394531
    4. '
' → logprob: -16.25000762939453
    5. '```' → logprob: -17.56250762939453
    6. '

' → logprob: -17.62500762939453
    7. '３' → logprob: -17.68750762939453
    8. '  ' → logprob: -17.81250762939453
    9. '۳' → logprob: -17.81250762939453
    10. '[' → logprob: -18.18750762939453

Token 258: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07901768386363983
    2. ')
' → logprob: -2.5790176391601562
    3. ' )' → logprob: -10.079017639160156
    4. '   ' → logprob: -10.204017639160156
    5. ' )
' → logprob: -10.954017639160156
    6. ')

' → logprob: -10.954017639160156
    7. ')
' → logprob: -11.454017639160156
    8. '])' → logprob: -14.079017639160156
    9. '))' → logprob: -14.204017639160156
    10. ' ' → logprob: -14.579017639160156

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009421593509614468
    2. ' if' → logprob: -5.0094218254089355
    3. '
' → logprob: -6.5094218254089355
    4. 'if' → logprob: -6.7594218254089355
    5. '    
' → logprob: -10.759421348571777
    6. '<|end|>' → logprob: -11.134421348571777
    7. '  ' → logprob: -12.634421348571777
    8. ')' → logprob: -12.759421348571777
    9. '  
' → logprob: -13.009421348571777
    10. '    ' → logprob: -13.134421348571777

Token 260: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01029332634061575
    2. ' if' → logprob: -5.010293483734131
    3. '   ' → logprob: -5.635293483734131
    4. '	if' → logprob: -14.385293006896973
    5. ' ' → logprob: -14.885293006896973
    6. '    ' → logprob: -15.010293006896973
    7. '
' → logprob: -15.135293006896973
    8. '  ' → logprob: -15.510293006896973
    9. '    
' → logprob: -16.13529396057129
    10. '```' → logprob: -16.13529396057129

Token 261: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.5231903791427612
    2. ' ev' → logprob: -0.8981903791427612
    3. '	ev' → logprob: -10.52319049835205
    4. '   ' → logprob: -11.52319049835205
    5. 'abs' → logprob: -11.77319049835205
    6. '(ev' → logprob: -12.02319049835205
    7. ' abs' → logprob: -12.27319049835205
    8. ' ' → logprob: -12.27319049835205
    9. '_ev' → logprob: -13.64819049835205
    10. 'flag' → logprob: -14.02319049835205

Token 262: ' -' (ID: 533)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3577743470668793
    2. ' >' → logprob: -1.2327743768692017
    3. '>=' → logprob: -5.107774257659912
    4. ' >=' → logprob: -5.857774257659912
    5. '<=' → logprob: -9.10777473449707
    6. ' <=' → logprob: -9.10777473449707
    7. '<' → logprob: -9.85777473449707
    8. ' <' → logprob: -9.98277473449707
    9. ' ' → logprob: -10.73277473449707
    10. '>
' → logprob: -12.48277473449707

Token 263: ' leader' (ID: 12554)
  Prédit: 'leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leader' → logprob: -0.03805112838745117
    2. ' leader' → logprob: -3.288051128387451
    3. 'lead' → logprob: -12.41305160522461
    4. 'flag' → logprob: -13.03805160522461
    5. 'leading' → logprob: -14.28805160522461
    6. ' ' → logprob: -14.41305160522461
    7. '>' → logprob: -15.16305160522461
    8. '0' → logprob: -15.28805160522461
    9. '=' → logprob: -15.41305160522461
    10. '
' → logprob: -15.53805160522461

Token 264: '_ev' (ID: 120966)
  Prédit: '_ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ev' → logprob: -0.00012892624363303185
    2. 'ev' → logprob: -9.000128746032715
    3. '>' → logprob: -13.375128746032715
    4. '[' → logprob: -13.500128746032715
    5. '_' → logprob: -14.625128746032715
    6. '_e' → logprob: -14.750128746032715
    7. '_EV' → logprob: -14.875128746032715
    8. ' >' → logprob: -15.125128746032715
    9. '	ev' → logprob: -15.625128746032715
    10. 'EV' → logprob: -15.750128746032715

Token 265: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05529430881142616
    2. ' >' → logprob: -2.9302942752838135
    3. '>=' → logprob: -7.930294513702393
    4. ' >=' → logprob: -10.555294036865234
    5. ' ' → logprob: -11.805294036865234
    6. '>

' → logprob: -12.055294036865234
    7. ')>' → logprob: -12.680294036865234
    8. '>
' → logprob: -13.180294036865234
    9. '>.' → logprob: -13.930294036865234
    10. ' >

' → logprob: -14.055294036865234

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015328248962759972
    2. ' ' → logprob: -4.265328407287598
    3. '0' → logprob: -6.765328407287598
    4. '-' → logprob: -12.015328407287598
    5. ' -' → logprob: -13.640328407287598
    6. '   ' → logprob: -13.765328407287598
    7. '+' → logprob: -14.765328407287598
    8. '=' → logprob: -15.015328407287598
    9. '  ' → logprob: -15.140328407287598
    10. '10' → logprob: -15.140328407287598

Token 267: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009014541283249855
    2. '0' → logprob: -7.375901222229004
    3. ' ' → logprob: -8.250901222229004
    4. '-' → logprob: -11.500901222229004
    5. '+' → logprob: -14.125901222229004
    6. '   ' → logprob: -14.375901222229004
    7. '2' → logprob: -14.750901222229004
    8. '5' → logprob: -15.375901222229004
    9. '10' → logprob: -15.375901222229004
    10. '```' → logprob: -15.375901222229004

Token 268: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7485707402229309
    2. '.' → logprob: -1.1235706806182861
    3. ':
' → logprob: -1.7485706806182861
    4. ' :' → logprob: -4.373570919036865
    5. ' :
' → logprob: -4.498570919036865
    6. 'e' → logprob: -6.248570919036865
    7. ' +' → logprob: -6.623570919036865
    8. '+' → logprob: -8.373570442199707
    9. ' and' → logprob: -8.498570442199707
    10. '0' → logprob: -8.748570442199707

Token 269: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04422586411237717
    2. '5' → logprob: -3.9192259311676025
    3. '0' → logprob: -4.294225692749023
    4. '001' → logprob: -5.294225692749023
    5. '1' → logprob: -5.669225692749023
    6. '01' → logprob: -8.044225692749023
    7. '-' → logprob: -8.794225692749023
    8. '3' → logprob: -9.044225692749023
    9. '7' → logprob: -9.044225692749023
    10. '4' → logprob: -9.544225692749023

Token 270: '000' (ID: 1302)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1632743924856186
    2. '001' → logprob: -2.2882742881774902
    3. '01' → logprob: -3.0382742881774902
    4. '000' → logprob: -6.66327428817749
    5. '0' → logprob: -12.913274765014648
    6. '_' → logprob: -13.038274765014648
    7. '00' → logprob: -14.288274765014648
    8. '005' → logprob: -14.913274765014648
    9. '5' → logprob: -15.788274765014648
    10. '

' → logprob: -16.28827476501465

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013589438050985336
    2. '01' → logprob: -4.388589382171631
    3. '001' → logprob: -6.888589382171631
    4. '000' → logprob: -9.763589859008789
    5. '5' → logprob: -13.388589859008789
    6. '05' → logprob: -14.263589859008789
    7. '005' → logprob: -16.51358985900879
    8. '2' → logprob: -16.76358985900879
    9. '9' → logprob: -16.76358985900879
    10. '0' → logprob: -16.76358985900879

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26511746644973755
    2. ':
' → logprob: -1.5151174068450928
    3. ' :
' → logprob: -4.765117645263672
    4. ' :' → logprob: -5.390117645263672
    5. ' and' → logprob: -11.640117645263672
    6. ':
' → logprob: -12.890117645263672
    7. '   ' → logprob: -13.140117645263672
    8. ':

' → logprob: -13.390117645263672
    9. ' :
' → logprob: -13.640117645263672
    10. '):
' → logprob: -14.015117645263672

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23351792991161346
    2. ' flag' → logprob: -2.10851788520813
    3. '       ' → logprob: -2.85851788520813
    4. 'flag' → logprob: -3.73351788520813
    5. '
' → logprob: -5.233518123626709
    6. '	flag' → logprob: -9.10851764678955
    7. '    
' → logprob: -9.85851764678955
    8. '```' → logprob: -11.23351764678955
    9. '        
' → logprob: -11.98351764678955
    10. ' 
' → logprob: -11.98351764678955

Token 274: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -6.933173426659778e-05
    2. '   ' → logprob: -10.375069618225098
    3. ' flag' → logprob: -10.875069618225098
    4. 'print' → logprob: -11.000069618225098
    5. '
' → logprob: -13.375069618225098
    6. '	flag' → logprob: -14.625069618225098
    7. '```' → logprob: -16.25006866455078
    8. ' ' → logprob: -16.87506866455078
    9. '    
' → logprob: -17.00006866455078
    10. 'fl' → logprob: -17.12506866455078

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689061999320984
    2. '=' → logprob: -1.1368906497955322
    3. '=True' → logprob: -10.886890411376953
    4. '=False' → logprob: -15.136890411376953
    5. ' ' → logprob: -15.511890411376953
    6. ' |=' → logprob: -16.386890411376953
    7. '    ' → logprob: -16.386890411376953
    8. '_=' → logprob: -17.011890411376953
    9. '   ' → logprob: -17.261890411376953
    10. '＝' → logprob: -17.386890411376953

Token 276: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '=True' → logprob: -20.250261306762695
    4. '(True' → logprob: -20.250261306762695
    5. 'False' → logprob: -21.125261306762695
    6. 'Tr' → logprob: -22.000261306762695
    7. 'true' → logprob: -23.000261306762695
    8. '1' → logprob: -23.500261306762695
    9. '   ' → logprob: -24.375261306762695
    10. 'not' → logprob: -24.500261306762695

Token 277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014573395310435444
    2. 'print' → logprob: -9.87514591217041
    3. '   ' → logprob: -10.50014591217041
    4. '        
' → logprob: -11.12514591217041
    5. '
' → logprob: -11.62514591217041
    6. 'break' → logprob: -11.62514591217041
    7. 'if' → logprob: -11.75014591217041
    8. '      ' → logprob: -12.12514591217041
    9. '           ' → logprob: -12.50014591217041
    10. '    
' → logprob: -12.75014591217041

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028570327907800674
    2. 'print' → logprob: -4.153570175170898
    3. 'break' → logprob: -4.653570175170898
    4. 'if' → logprob: -5.903570175170898
    5. '   ' → logprob: -9.278570175170898
    6. '```' → logprob: -10.278570175170898
    7. ' break' → logprob: -10.403570175170898
    8. ' if' → logprob: -11.153570175170898
    9. ' print' → logprob: -12.278570175170898
    10. '      ' → logprob: -12.278570175170898

Token 279: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0009269453585147858
    2. 'print' → logprob: -7.000926971435547
    3. ' break' → logprob: -11.250926971435547
    4. '       ' → logprob: -13.750926971435547
    5. '   ' → logprob: -13.875926971435547
    6. '```' → logprob: -15.875926971435547
    7. 'BREAK' → logprob: -15.875926971435547
    8. '	break' → logprob: -16.125926971435547
    9. 'continue' → logprob: -16.875926971435547
    10. 'Break' → logprob: -17.125926971435547

Token 280: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12718762457370758
    2. 'if' → logprob: -2.127187728881836
    3. '
' → logprob: -8.502187728881836
    4. ' print' → logprob: -11.127187728881836
    5. '\n' → logprob: -11.252187728881836
    6. ' if' → logprob: -11.627187728881836
    7. ')' → logprob: -12.627187728881836
    8. '    
' → logprob: -13.127187728881836
    9. '\' → logprob: -13.252187728881836
    10. ' 
' → logprob: -13.377187728881836

Token 281: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2014261931180954
    2. 'if' → logprob: -1.7014261484146118
    3. ' if' → logprob: -11.82642650604248
    4. ' print' → logprob: -12.45142650604248
    5. '```' → logprob: -15.32642650604248
    6. 'yes' → logprob: -15.57642650604248
    7. 'pr' → logprob: -15.70142650604248
    8. 'YES' → logprob: -16.076425552368164
    9. '
' → logprob: -16.076425552368164
    10. 'prin' → logprob: -16.326425552368164

Token 282: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.1488405019044876
    2. 'flag' → logprob: -2.0238404273986816
    3. ' not' → logprob: -5.148840427398682
    4. 'not' → logprob: -8.27384090423584
    5. ' ' → logprob: -9.89884090423584
    6. '(flag' → logprob: -10.52384090423584
    7. '	flag' → logprob: -12.89884090423584
    8. ' ' → logprob: -12.89884090423584
    9. '  ' → logprob: -13.52384090423584
    10. '   ' → logprob: -14.96134090423584

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011816580081358552
    2. ':
' → logprob: -6.751181602478027
    3. ' :' → logprob: -12.126181602478027
    4. ' ==' → logprob: -12.626181602478027
    5. '==' → logprob: -12.876181602478027
    6. ':

' → logprob: -16.251182556152344
    7. ':
' → logprob: -17.626182556152344
    8. '>' → logprob: -18.126182556152344
    9. ' :
' → logprob: -18.251182556152344
    10. '>:' → logprob: -18.626182556152344

Token 284: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.32654589228332e-05
    2. '   ' → logprob: -9.625073432922363
    3. ' print' → logprob: -12.000073432922363
    4. 'printf' → logprob: -14.125073432922363
    5. '"' → logprob: -15.875073432922363
    6. '```' → logprob: -16.750072479248047
    7. '
' → logprob: -18.250072479248047
    8. '	print' → logprob: -18.375072479248047
    9. 'for' → logprob: -18.375072479248047
    10. '#print' → logprob: -18.500072479248047

Token 285: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.6537622034084052e-05
    2. '   ' → logprob: -11.00002670288086
    3. ' print' → logprob: -11.62502670288086
    4. 'printf' → logprob: -14.62502670288086
    5. '"' → logprob: -15.75002670288086
    6. 'pr' → logprob: -16.12502670288086
    7. 'for' → logprob: -17.37502670288086
    8. '```' → logprob: -17.50002670288086
    9. 'prin' → logprob: -18.00002670288086
    10. '	print' → logprob: -18.75002670288086

Token 286: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0021327754948288202
    2. '(":' → logprob: -7.002132892608643
    3. '('' → logprob: -7.252132892608643
    4. '(' → logprob: -7.627132892608643
    5. '(True' → logprob: -11.752132415771484
    6. '("+' → logprob: -12.752132415771484
    7. '(-' → logprob: -12.752132415771484
    8. '("")' → logprob: -13.377132415771484
    9. '(:' → logprob: -14.002132415771484
    10. '("?' → logprob: -14.002132415771484

Token 287: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.3233046531677246
    2. 'Yes' → logprob: -1.6983046531677246
    3. 'yes' → logprob: -2.4483046531677246
    4. '"' → logprob: -6.448304653167725
    5. 'Y' → logprob: -6.948304653167725
    6. 'NO' → logprob: -7.573304653167725
    7. 'L' → logprob: -8.073305130004883
    8. 'N' → logprob: -8.198305130004883
    9. 'YA' → logprob: -8.573305130004883
    10. 'D' → logprob: -8.698305130004883

Token 288: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07889155298471451
    2. '")
' → logprob: -2.5788915157318115
    3. '")
' → logprob: -14.07889175415039
    4. '")

' → logprob: -14.45389175415039
    5. ')' → logprob: -15.32889175415039
    6. '"' → logprob: -16.07889175415039
    7. ' ")' → logprob: -16.95389175415039
    8. ')
' → logprob: -17.82889175415039
    9. ')")' → logprob: -18.32889175415039
    10. '')' → logprob: -18.57889175415039

Token 289: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0009115827269852161
    2. ' else' → logprob: -7.000911712646484
    3. 'YES' → logprob: -17.125911712646484
    4. '
' → logprob: -17.375911712646484
    5. 'print' → logprob: -18.000911712646484
    6. 'elif' → logprob: -18.125911712646484
    7. 'Else' → logprob: -18.625911712646484
    8. '```' → logprob: -18.625911712646484
    9. 'NO' → logprob: -19.250911712646484
    10. 'EL' → logprob: -19.250911712646484

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760889649391174
    2. ':' → logprob: -0.8260889649391174
    3. '   ' → logprob: -8.951088905334473
    4. ' :
' → logprob: -11.076088905334473
    5. ' :' → logprob: -13.076088905334473
    6. ':
' → logprob: -14.201088905334473
    7. ':

' → logprob: -14.451088905334473
    8. 'print' → logprob: -14.701088905334473
    9. '():
' → logprob: -15.701088905334473
    10. ' print' → logprob: -15.951088905334473

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05357842147350311
    2. ' print' → logprob: -3.0535783767700195
    3. 'print' → logprob: -5.3035783767700195
    4. '	print' → logprob: -13.55357837677002
    5. '    ' → logprob: -13.67857837677002
    6. '"' → logprob: -14.05357837677002
    7. '(print' → logprob: -14.80357837677002
    8. '    
' → logprob: -15.05357837677002
    9. '       ' → logprob: -15.17857837677002
    10. '.print' → logprob: -15.80357837677002

Token 292: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002683688362594694
    2. ' print' → logprob: -8.25026798248291
    3. '   ' → logprob: -11.87526798248291
    4. '"' → logprob: -19.000268936157227
    5. '(print' → logprob: -19.125268936157227
    6. '.print' → logprob: -19.875268936157227
    7. '    ' → logprob: -19.875268936157227
    8. '	print' → logprob: -20.000268936157227
    9. '    
' → logprob: -20.125268936157227
    10. '```' → logprob: -20.250268936157227

Token 293: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. '('' → logprob: -18.25000762939453
    4. '(
' → logprob: -19.00000762939453
    5. ' ("' → logprob: -19.25000762939453
    6. '("("' → logprob: -20.50000762939453
    7. '("")' → logprob: -20.75000762939453
    8. '()' → logprob: -21.00000762939453
    9. '("""' → logprob: -21.12500762939453
    10. '"' → logprob: -22.00000762939453

Token 294: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: 0.0
    2. '"' → logprob: -17.25
    3. '"No' → logprob: -17.625
    4. ' NO' → logprob: -20.25
    5. 'No' → logprob: -21.125
    6. '"N' → logprob: -21.5
    7. '(NO' → logprob: -21.875
    8. 'NOT' → logprob: -22.375
    9. 'N' → logprob: -22.625
    10. '")' → logprob: -23.125

Token 295: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.201659694314003
    2. ')' → logprob: -1.7016596794128418
    3. ')")' → logprob: -8.32666015625
    4. '')' → logprob: -13.32666015625
    5. '")
' → logprob: -13.45166015625
    6. ')
' → logprob: -14.32666015625
    7. '}")' → logprob: -15.32666015625
    8. '`)' → logprob: -15.57666015625
    9. ')"' → logprob: -16.20166015625
    10. '```' → logprob: -16.70166015625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 293
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 257
Précision stricte (1ère position): 42.32%
Précision adaptée (1ère position): 48.12%
Précision (top 10): 87.71%
================================================================================
