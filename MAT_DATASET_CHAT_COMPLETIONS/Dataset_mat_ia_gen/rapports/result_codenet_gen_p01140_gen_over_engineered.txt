================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DistanceSequence:
    def __init__(self, distances):
        self.distances = distances
        self.prefix_sums = self._compute_prefix_sums(distances)

    def _compute_prefix_sums(self, distances):
        prefix = [0]
        for d in distances:
            prefix.append(prefix[-1] + d)
        return prefix

    def length(self):
        return len(self.distances)

    def segment_length(self, start_index, length):
        # length: number of segments (edges) to sum
        return self.prefix_sums[start_index + length] - self.prefix_sums[start_index]


class SquareCounter:
    def __init__(self, vertical_gaps, horizontal_gaps):
        self.vertical = DistanceSequence(vertical_gaps)
        self.horizontal = DistanceSequence(horizontal_gaps)

    def count_squares(self):
        count = 0
        max_size = min(self.vertical.length(), self.horizontal.length())
        v_len = self.vertical.length()
        h_len = self.horizontal.length()
        # For each possible square size (length in edges)
        for size in range(1, max_size + 1):
            # Collect all vertical side lengths of size 'size'
            vertical_lengths = set()
            for i in range(v_len - size + 1):
                length = self.vertical.segment_length(i, size)
                vertical_lengths.add(length)
            # For each horizontal segment of size 'size', check if length in vertical_lengths
            for j in range(h_len - size + 1):
                length = self.horizontal.segment_length(j, size)
                if length in vertical_lengths:
                    count += 1
        return count


class SquareRouteSolver:
    def __init__(self):
        self.data_sets = []

    def add_data_set(self, n, m, vertical_distances, horizontal_distances):
        self.data_sets.append((n, m, vertical_distances, horizontal_distances))

    def solve(self):
        results = []
        for n, m, vertical_distances, horizontal_distances in self.data_sets:
            counter = SquareCounter(vertical_distances, horizontal_distances)
            results.append(counter.count_squares())
        return results


class InputHandler:
    def __init__(self):
        self.solver = SquareRouteSolver()

    def process_input(self):
        import sys
        input_iter = iter(sys.stdin.read().strip().split())
        while True:
            try:
                n = int(next(input_iter))
                m = int(next(input_iter))
            except StopIteration:
                break
            if n == 0 and m == 0:
                break
            vertical_distances = [int(next(input_iter)) for _ in range(n)]
            horizontal_distances = [int(next(input_iter)) for _ in range(m)]
            self.solver.add_data_set(n, m, vertical_distances, horizontal_distances)

    def print_results(self):
        results = self.solver.solve()
        for res in results:
            print(res)


def main():
    input_handler = InputHandler()
    input_handler.process_input()
    input_handler.print_results()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Distance' (ID: 53583)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sequence' (ID: 17333)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2560315728187561
    2. ':' → logprob: -1.5060315132141113
    3. '(:' → logprob: -5.631031513214111
    4. '{' → logprob: -8.13103199005127
    5. '():' → logprob: -9.63103199005127
    6. '.' → logprob: -9.75603199005127
    7. '```' → logprob: -11.13103199005127
    8. '(
' → logprob: -11.25603199005127
    9. '[' → logprob: -11.38103199005127
    10. '({' → logprob: -11.63103199005127

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6570047736167908
    2. ':' → logprob: -0.7820047736167908
    3. '```' → logprob: -4.1570048332214355
    4. '(
' → logprob: -5.6570048332214355
    5. '   ' → logprob: -6.0320048332214355
    6. ':
' → logprob: -6.2820048332214355
    7. '``' → logprob: -8.657004356384277
    8. '.' → logprob: -8.782004356384277
    9. '(:' → logprob: -9.782004356384277
    10. '():' → logprob: -10.157004356384277

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2741928696632385
    2. '(' → logprob: -1.8991928100585938
    3. '```' → logprob: -3.1491928100585938
    4. ':' → logprob: -4.399192810058594
    5. '_' → logprob: -4.649192810058594
    6. ' def' → logprob: -4.774192810058594
    7. 'def' (adapté à ' def') → logprob: -5.649192810058594
    8. '\' → logprob: -5.899192810058594
    9. '    ' → logprob: -5.899192810058594
    10. ' ' → logprob: -5.899192810058594

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05216774716973305
    2. ' calculate' → logprob: -3.9271676540374756
    3. ' ' → logprob: -4.427167892456055
    4. '__' → logprob: -4.677167892456055
    5. 'calculate' → logprob: -5.427167892456055
    6. ' __' → logprob: -6.302167892456055
    7. '_' → logprob: -7.302167892456055
    8. '<|end|>' → logprob: -8.052167892456055
    9. ')' → logprob: -8.177167892456055
    10. ''' → logprob: -8.427167892456055

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.816093228830141e-06
    2. ' init' → logprob: -13.00000286102295
    3. '_init' → logprob: -15.00000286102295
    4. 'ini' → logprob: -16.375001907348633
    5. '	init' → logprob: -18.125001907348633
    6. '_' → logprob: -19.625001907348633
    7. 'int' → logprob: -19.625001907348633
    8. ' ' → logprob: -20.000001907348633
    9. 'inti' → logprob: -20.125001907348633
    10. 'inite' → logprob: -20.125001907348633

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.23479923605918884
    2. '__' → logprob: -1.6097992658615112
    3. '(' → logprob: -4.984799385070801
    4. '__(
' → logprob: -6.734799385070801
    5. '(self' → logprob: -7.609799385070801
    6. '__((' → logprob: -7.984799385070801
    7. '```' → logprob: -8.9847993850708
    8. '_' → logprob: -9.2347993850708
    9. '__('' → logprob: -9.3597993850708
    10. '__(*' → logprob: -9.8597993850708

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011724866926670074
    2. ' self' → logprob: -6.7511725425720215
    3. ')' → logprob: -13.876172065734863
    4. ' ' → logprob: -14.876172065734863
    5. '(self' → logprob: -15.376172065734863
    6. '   ' → logprob: -16.25117301940918
    7. '       ' → logprob: -16.25117301940918
    8. '	self' → logprob: -16.50117301940918
    9. ' )' → logprob: -16.75117301940918
    10. 'space' → logprob: -17.00117301940918

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09982624650001526
    2. ')' → logprob: -2.9748263359069824
    3. 'self' → logprob: -3.7248263359069824
    4. ' ,' → logprob: -4.849826335906982
    5. '<|end|>' → logprob: -5.599826335906982
    6. '(' → logprob: -6.349826335906982
    7. ' )' → logprob: -6.474826335906982
    8. ' ' → logprob: -6.974826335906982
    9. '(self' → logprob: -7.099826335906982
    10. '_' → logprob: -7.599826335906982

Token 11: ' distances' (ID: 48294)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6363885402679443
    2. ' self' → logprob: -0.7613885402679443
    3. ' start' → logprob: -6.261388778686523
    4. ' distances' → logprob: -7.761388778686523
    5. 'start' → logprob: -7.886388778686523
    6. ' origin' → logprob: -8.636388778686523
    7. ' starting' → logprob: -9.011388778686523
    8. ' points' → logprob: -9.136388778686523
    9. ' initial' → logprob: -9.261388778686523
    10. 'origin' → logprob: -9.761388778686523

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004168983083218336
    2. ':' → logprob: -6.12916898727417
    3. ',' → logprob: -7.12916898727417
    4. '=' → logprob: -7.50416898727417
    5. '):
' → logprob: -8.254168510437012
    6. '   ' → logprob: -8.879168510437012
    7. '[' → logprob: -9.379168510437012
    8. ')' → logprob: -9.629168510437012
    9. ' ):' → logprob: -11.254168510437012
    10. '.' → logprob: -11.254168510437012

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032415243331342936
    2. 'self' → logprob: -6.128241539001465
    3. '```' → logprob: -8.128241539001465
    4. '<|end|>' → logprob: -8.628241539001465
    5. ' self' → logprob: -8.878241539001465
    6. '   ' → logprob: -9.503241539001465
    7. '\' → logprob: -9.753241539001465
    8. '        
' → logprob: -9.753241539001465
    9. '(' → logprob: -10.253241539001465
    10. '(self' → logprob: -10.378241539001465

Token 14: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.44581082463264465
    2. 'self' (adapté à ' self') → logprob: -1.0708107948303223
    3. '       ' → logprob: -4.195810794830322
    4. '        ' → logprob: -7.195810794830322
    5. ' ' → logprob: -7.695810794830322
    6. ' ' → logprob: -7.820810794830322
    7. '           ' → logprob: -9.44581127166748
    8. '   ' → logprob: -9.57081127166748
    9. '         ' → logprob: -10.57081127166748
    10. '```' → logprob: -10.57081127166748

Token 15: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.5235176682472229
    2. '.' → logprob: -0.8985176682472229
    3. ' .' → logprob: -8.398517608642578
    4. '.distance' → logprob: -9.273517608642578
    5. '.d' → logprob: -10.898517608642578
    6. 'dist' → logprob: -10.898517608642578
    7. '   ' → logprob: -12.023517608642578
    8. '	dist' → logprob: -12.273517608642578
    9. '_dist' → logprob: -12.648517608642578
    10. ' ' → logprob: -13.148517608642578

Token 16: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0007729397038929164
    2. ' ances' → logprob: -7.875772953033447
    3. '   ' → logprob: -8.625772476196289
    4. 'ance' → logprob: -8.875772476196289
    5. 'a' → logprob: -11.000772476196289
    6. ' an' → logprob: -11.125772476196289
    7. 'anc' → logprob: -11.750772476196289
    8. 'an' → logprob: -12.125772476196289
    9. '       ' → logprob: -12.250772476196289
    10. 'ANCES' → logprob: -12.250772476196289

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07031763345003128
    2. '=' → logprob: -2.6953177452087402
    3. '<|end|>' → logprob: -8.320317268371582
    4. '   ' → logprob: -10.445317268371582
    5. ' ' → logprob: -10.445317268371582
    6. '<|end|>' → logprob: -10.695317268371582
    7. '.' → logprob: -11.570317268371582
    8. '       ' → logprob: -11.695317268371582
    9. ')' → logprob: -11.695317268371582
    10. '=[]' → logprob: -11.945317268371582

Token 18: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5759939551353455
    2. ' distances' → logprob: -0.8259939551353455
    3. ' dist' → logprob: -10.950993537902832
    4. 'distance' → logprob: -11.325993537902832
    5. '_dist' → logprob: -11.825993537902832
    6. '	dist' → logprob: -12.325993537902832
    7. '(dist' → logprob: -12.825993537902832
    8. '[]' → logprob: -13.075993537902832
    9. '.dist' → logprob: -13.325993537902832
    10. ' ' → logprob: -13.325993537902832

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31621071696281433
    2. '   ' → logprob: -1.8162107467651367
    3. '\n' → logprob: -3.5662107467651367
    4. '<|end|>' → logprob: -3.5662107467651367
    5. '    
' → logprob: -3.6912107467651367
    6. ' ' → logprob: -5.066210746765137
    7. '  
' → logprob: -5.316210746765137
    8. '\' → logprob: -5.941210746765137
    9. '```' → logprob: -6.191210746765137
    10. 'def' → logprob: -6.566210746765137

Token 20: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47341862320899963
    2. '\n' → logprob: -1.8484185934066772
    3. '
' → logprob: -2.848418712615967
    4. '    
' → logprob: -3.348418712615967
    5. '<|end|>' → logprob: -3.473418712615967
    6. ' ' → logprob: -3.723418712615967
    7. '\' → logprob: -3.848418712615967
    8. '```' → logprob: -4.598418712615967
    9. '    ' → logprob: -5.348418712615967
    10. '  
' → logprob: -5.473418712615967

Token 21: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7733320593833923
    2. '   ' → logprob: -1.148332118988037
    3. '    
' → logprob: -2.148332118988037
    4. '\n' → logprob: -2.898332118988037
    5. '\' → logprob: -4.398332118988037
    6. '```' → logprob: -4.523332118988037
    7. '<|end|>' → logprob: -4.773332118988037
    8. '  
' → logprob: -5.773332118988037
    9. '        
' → logprob: -6.273332118988037
    10. ' 
' → logprob: -6.273332118988037

Token 22: '.prefix' (ID: 84410)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1535739302635193
    2. '.current' → logprob: -3.153573989868164
    3. '._' → logprob: -3.528573989868164
    4. '.next' → logprob: -4.028573989868164
    5. '.count' → logprob: -4.153573989868164
    6. '.length' → logprob: -5.403573989868164
    7. ' .' → logprob: -6.028573989868164
    8. '.total' → logprob: -6.028573989868164
    9. '.max' → logprob: -6.028573989868164
    10. '.len' → logprob: -6.153573989868164

Token 23: '_s' (ID: 1278)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.40830543637275696
    2. '_' → logprob: -1.4083054065704346
    3. '_s' → logprob: -2.4083054065704346
    4. '_lengths' → logprob: -8.408305168151855
    5. '_len' → logprob: -9.033305168151855
    6. ' _' → logprob: -9.033305168151855
    7. '_length' → logprob: -9.158305168151855
    8. '_array' → logprob: -10.158305168151855
    9. '_dist' → logprob: -10.908305168151855
    10. '_suffix' → logprob: -11.408305168151855

Token 24: 'ums' (ID: 6162)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.3870421051979065
    2. 'ums' → logprob: -1.1370420455932617
    3. '_' → logprob: -8.887042045593262
    4. 'u' → logprob: -11.137042045593262
    5. '_um' → logprob: -11.762042045593262
    6. 'quares' → logprob: -13.012042045593262
    7. '   ' → logprob: -13.512042045593262
    8. 'uffix' → logprob: -13.762042045593262
    9. '```' → logprob: -13.887042045593262
    10. '``' → logprob: -14.262042045593262

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285223066806793
    2. '=' → logprob: -2.2378523349761963
    3. '[' → logprob: -11.112852096557617
    4. '=[]' → logprob: -11.737852096557617
    5. '_' → logprob: -13.737852096557617
    6. '<|end|>' → logprob: -14.112852096557617
    7. ' =
' → logprob: -14.362852096557617
    8. '=None' → logprob: -14.487852096557617
    9. ' =[' → logprob: -14.487852096557617
    10. '[:]' → logprob: -14.612852096557617

Token 26: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3144036531448364
    2. '[' → logprob: -1.3144036531448364
    3. ' []' → logprob: -7.064403533935547
    4. '[]' → logprob: -8.189403533935547
    5. '[self' → logprob: -12.564403533935547
    6. '[len' → logprob: -13.189403533935547
    7. ' ' → logprob: -13.689403533935547
    8. '0' → logprob: -14.564403533935547
    9. '[int' → logprob: -15.064403533935547
    10. '[:]' → logprob: -15.814403533935547

Token 27: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021937575191259384
    2. '.prefix' → logprob: -4.646937370300293
    3. ' .' → logprob: -5.271937370300293
    4. '.dist' → logprob: -5.896937370300293
    5. '<|end|>' → logprob: -5.896937370300293
    6. 'prefix' → logprob: -8.146937370300293
    7. 'class' → logprob: -9.021937370300293
    8. '.calculate' → logprob: -9.521937370300293
    9. '<|end|>' → logprob: -9.521937370300293
    10. '.distance' → logprob: -9.521937370300293

Token 28: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.08003079891204834
    2. 'calculate' → logprob: -2.580030918121338
    3. 'build' → logprob: -6.955030918121338
    4. 'calc' → logprob: -8.83003044128418
    5. 'pre' → logprob: -11.08003044128418
    6. 'prefix' → logprob: -11.33003044128418
    7. '_compute' → logprob: -12.08003044128418
    8. 'generate' → logprob: -13.08003044128418
    9. 'get' → logprob: -14.08003044128418
    10. ' compute' → logprob: -14.08003044128418

Token 29: '_prefix' (ID: 33197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6939749717712402
    2. '_prefix' → logprob: -0.6939749717712402
    3. '(' → logprob: -8.193975448608398
    4. '_dist' → logprob: -8.568975448608398
    5. '_distance' → logprob: -8.943975448608398
    6. 'prefix' → logprob: -9.818975448608398
    7. ' _' → logprob: -10.068975448608398
    8. 'Prefix' → logprob: -10.943975448608398
    9. '_total' → logprob: -11.068975448608398
    10. '(prefix' → logprob: -11.068975448608398

Token 30: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5258246064186096
    2. '_s' → logprob: -0.9008246064186096
    3. '_sum' → logprob: -6.400824546813965
    4. ' _' → logprob: -7.150824546813965
    5. '_suffix' → logprob: -10.150824546813965
    6. 's' → logprob: -10.400824546813965
    7. '_lengths' → logprob: -10.775824546813965
    8. '```' → logprob: -10.775824546813965
    9. ' ' → logprob: -11.150824546813965
    10. '_prefix' → logprob: -11.275824546813965

Token 31: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.00031019834568724036
    2. 'u' → logprob: -8.750309944152832
    3. 'um' → logprob: -9.000309944152832
    4. '_' → logprob: -11.250309944152832
    5. '_u' → logprob: -12.625309944152832
    6. 'uffix' → logprob: -13.250309944152832
    7. '```' → logprob: -13.375309944152832
    8. 'umsum' → logprob: -14.375309944152832
    9. '   ' → logprob: -14.500309944152832
    10. 'ufs' → logprob: -14.625309944152832

Token 32: '(dist' (ID: 78981)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010407903464511037
    2. '()' → logprob: -7.501040935516357
    3. '<|end|>' → logprob: -9.1260404586792
    4. '(
' → logprob: -9.5010404586792
    5. '('' → logprob: -10.1260404586792
    6. '[' → logprob: -10.1260404586792
    7. '```' → logprob: -10.1260404586792
    8. '(dist' → logprob: -10.5010404586792
    9. '(len' → logprob: -11.1260404586792
    10. '(user' → logprob: -11.3760404586792

Token 33: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -6.313314952421933e-05
    2. 'ance' → logprob: -9.750062942504883
    3. ')' → logprob: -12.375062942504883
    4. 'a' → logprob: -15.625062942504883
    5. 'aces' → logprob: -15.750062942504883
    6. 'anc' → logprob: -16.625062942504883
    7. 'an' → logprob: -17.375062942504883
    8. 'ences' → logprob: -17.375062942504883
    9. 'ANCES' → logprob: -17.375062942504883
    10. 'ices' → logprob: -17.500062942504883

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.625008583068848
    3. '   ' → logprob: -12.750008583068848
    4. '       ' → logprob: -13.875008583068848
    5. ')
' → logprob: -14.125008583068848
    6. '`)' → logprob: -16.12500762939453
    7. '[' → logprob: -17.00000762939453
    8. '))' → logprob: -17.12500762939453
    9. ')`' → logprob: -17.12500762939453
    10. ' ' → logprob: -17.25000762939453

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23369726538658142
    2. '   ' → logprob: -1.7336972951889038
    3. 'def' → logprob: -4.358697414398193
    4. '```' → logprob: -4.733697414398193
    5. '    
' → logprob: -5.733697414398193
    6. ' def' → logprob: -5.983697414398193
    7. '\n' → logprob: -6.483697414398193
    8. ' ' → logprob: -7.233697414398193
    9. '  
' → logprob: -7.608697414398193
    10. '

' → logprob: -7.608697414398193

Token 36: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5578473806381226
    2. 'def' (adapté à ' def') → logprob: -0.9328473806381226
    3. ' def' → logprob: -3.807847499847412
    4. '```' → logprob: -5.557847499847412
    5. ' ' → logprob: -5.932847499847412
    6. '    
' → logprob: -6.057847499847412
    7. '
' → logprob: -6.307847499847412
    8. '_' → logprob: -8.182847023010254
    9. '\n' → logprob: -8.932847023010254
    10. '\' → logprob: -9.057847023010254

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.034011367708444595
    2. '_' → logprob: -3.7840113639831543
    3. ' ' → logprob: -5.034011363983154
    4. '_compute' → logprob: -5.659011363983154
    5. ' compute' → logprob: -8.159011840820312
    6. '_space' → logprob: -9.034011840820312
    7. '_get' → logprob: -9.284011840820312
    8. ' space' → logprob: -9.659011840820312
    9. ' def' → logprob: -10.034011840820312
    10. ' get' → logprob: -10.534011840820312

Token 38: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -6.885492621222511e-05
    2. '_compute' → logprob: -9.625068664550781
    3. ' compute' → logprob: -13.500068664550781
    4. 'comput' → logprob: -14.500068664550781
    5. 'c' → logprob: -15.000068664550781
    6. 'com' → logprob: -15.875068664550781
    7. 'co' → logprob: -16.00006866455078
    8. 'comp' → logprob: -16.25006866455078
    9. 'computer' → logprob: -16.62506866455078
    10. 'calculate' → logprob: -17.75006866455078

Token 39: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.007665659300982952
    2. '_' → logprob: -4.882665634155273
    3. '_suffix' → logprob: -11.257665634155273
    4. '_p' → logprob: -11.507665634155273
    5. '_pres' → logprob: -11.757665634155273
    6. '_distance' → logprob: -11.882665634155273
    7. '_pref' → logprob: -12.257665634155273
    8. '_length' → logprob: -13.132665634155273
    9. '_prec' → logprob: -13.132665634155273
    10. ' _' → logprob: -13.257665634155273

Token 40: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.36574100604048e-06
    2. '_sum' → logprob: -13.000004768371582
    3. '_' → logprob: -13.375004768371582
    4. '_suffix' → logprob: -15.000004768371582
    5. ' _' → logprob: -15.750004768371582
    6. '_lengths' → logprob: -18.500003814697266
    7. '```' → logprob: -18.750003814697266
    8. '_token' → logprob: -19.250003814697266
    9. '_S' → logprob: -19.375003814697266
    10. '_sub' → logprob: -19.625003814697266

Token 41: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0306253544986248
    2. '_' → logprob: -3.905625343322754
    3. '_u' → logprob: -5.530625343322754
    4. 'u' → logprob: -5.780625343322754
    5. 'um' → logprob: -6.280625343322754
    6. 'uffix' → logprob: -8.155625343322754
    7. '_um' → logprob: -8.405625343322754
    8. 'ufs' → logprob: -8.655625343322754
    9. '```' → logprob: -9.530625343322754
    10. 'uf' → logprob: -10.155625343322754

Token 42: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1281091719865799
    2. '(' → logprob: -2.1281092166900635
    3. ' (' → logprob: -6.878108978271484
    4. '(s' → logprob: -9.628108978271484
    5. '   ' → logprob: -10.753108978271484
    6. '(Self' → logprob: -10.878108978271484
    7. ' ' → logprob: -11.753108978271484
    8. 'self' → logprob: -12.003108978271484
    9. '<|end|>' → logprob: -12.003108978271484
    10. '(
' → logprob: -12.128108978271484

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032858517952263355
    2. ' ,' → logprob: -5.753285884857178
    3. ',d' → logprob: -9.62828540802002
    4. '):' → logprob: -11.12828540802002
    5. 'self' → logprob: -11.37828540802002
    6. ',self' → logprob: -12.25328540802002
    7. ',array' → logprob: -13.50328540802002
    8. '(dist' → logprob: -14.00328540802002
    9. 'dist' → logprob: -14.25328540802002
    10. ',line' → logprob: -14.25328540802002

Token 44: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5344518423080444
    2. ' distances' → logprob: -1.0344518423080444
    3. ' dist' → logprob: -3.534451961517334
    4. 'self' → logprob: -4.159451961517334
    5. ' self' → logprob: -4.409451961517334
    6. ')' → logprob: -7.159451961517334
    7. 'distance' → logprob: -8.284451484680176
    8. 'arr' → logprob: -8.909451484680176
    9. '   ' → logprob: -9.409451484680176
    10. 'd' → logprob: -9.909451484680176

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034237600630149245
    2. '       ' → logprob: -9.00034236907959
    3. '   ' → logprob: -9.37534236907959
    4. '):
' → logprob: -9.50034236907959
    5. ')' → logprob: -10.87534236907959
    6. ' ):' → logprob: -11.12534236907959
    7. ':' → logprob: -11.25034236907959
    8. ',' → logprob: -12.50034236907959
    9. 'self' → logprob: -12.62534236907959
    10. '):
' → logprob: -13.87534236907959

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11841434985399246
    2. ':' → logprob: -2.8684144020080566
    3. '[' → logprob: -3.9934144020080566
    4. '[]' → logprob: -4.243414402008057
    5. ':
' → logprob: -4.743414402008057
    6. '
' → logprob: -5.118414402008057
    7. '\n' → logprob: -6.118414402008057
    8. '[]
' → logprob: -6.993414402008057
    9. '```' → logprob: -7.243414402008057
    10. '   ' → logprob: -7.243414402008057

Token 47: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.25390130281448364
    2. ' prefix' → logprob: -1.5039012432098389
    3. '       ' → logprob: -6.378901481628418
    4. '   ' → logprob: -8.878901481628418
    5. '[' → logprob: -9.753901481628418
    6. ' [' → logprob: -10.878901481628418
    7. '```' → logprob: -11.003901481628418
    8. '_prefix' → logprob: -11.503901481628418
    9. '(prefix' → logprob: -11.878901481628418
    10. ' ' → logprob: -12.878901481628418

Token 48: ' =' (ID: 314)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001180704333819449
    2. '_' → logprob: -7.126180648803711
    3. ' _' → logprob: -8.001180648803711
    4. '_sum' → logprob: -10.626180648803711
    5. 's' → logprob: -12.751180648803711
    6. ' ' → logprob: -13.001180648803711
    7. ' =' → logprob: -13.126180648803711
    8. '   ' → logprob: -13.501180648803711
    9. '_lengths' → logprob: -13.501180648803711
    10. '_counts' → logprob: -14.376180648803711

Token 49: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31391119956970215
    2. ' [' → logprob: -1.3139111995697021
    3. '[]' → logprob: -7.938911437988281
    4. '0' → logprob: -8.438911437988281
    5. ' []' → logprob: -9.688911437988281
    6. ' ' → logprob: -11.313911437988281
    7. '[int' → logprob: -14.688911437988281
    8. ' ' → logprob: -14.938911437988281
    9. '   ' → logprob: -16.18891143798828
    10. '[len' → logprob: -16.31391143798828

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -20.375
    4. '00' → logprob: -21.375
    5. '   ' → logprob: -21.5
    6. ')' → logprob: -22.0
    7. '[' → logprob: -22.625
    8. '```' → logprob: -22.625
    9. '000' → logprob: -23.375
    10. '`' → logprob: -23.375

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3913983702659607
    2. ',' → logprob: -1.3913984298706055
    3. ' ]' → logprob: -2.6413984298706055
    4. ')' → logprob: -6.3913984298706055
    5. ' ,' → logprob: -7.6413984298706055
    6. '<|end|>' → logprob: -7.6413984298706055
    7. '0' → logprob: -8.016398429870605
    8. ',
' → logprob: -8.516398429870605
    9. ')]' → logprob: -8.766398429870605
    10. ' ' → logprob: -9.141398429870605

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10783136636018753
    2. '
' → logprob: -3.1078314781188965
    3. ' for' → logprob: -3.3578314781188965
    4. 'for' → logprob: -3.9828314781188965
    5. '   ' → logprob: -6.3578314781188965
    6. '        
' → logprob: -6.6078314781188965
    7. '    
' → logprob: -8.607831001281738
    8. '  
' → logprob: -8.982831001281738
    9. ' 
' → logprob: -9.357831001281738
    10. '[' → logprob: -9.607831001281738

Token 53: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16209633648395538
    2. ' for' → logprob: -1.912096381187439
    3. '       ' → logprob: -6.2870965003967285
    4. '   ' → logprob: -11.78709602355957
    5. '```' → logprob: -14.03709602355957
    6. '
' → logprob: -14.41209602355957
    7. '	for' → logprob: -15.03709602355957
    8. 'prefix' → logprob: -15.16209602355957
    9. 'current' → logprob: -15.66209602355957
    10. 'n' → logprob: -16.16209602355957

Token 54: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1632862389087677
    2. 'd' → logprob: -2.1632862091064453
    3. ' distance' → logprob: -3.5382862091064453
    4. 'distance' → logprob: -5.163286209106445
    5. ' dist' → logprob: -7.163286209106445
    6. 'dist' → logprob: -9.038286209106445
    7. ' ' → logprob: -11.913286209106445
    8. ' i' → logprob: -11.913286209106445
    9. '   ' → logprob: -12.163286209106445
    10. 'i' → logprob: -13.163286209106445

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012038042768836021
    2. 'in' → logprob: -6.876204013824463
    3. 'istance' → logprob: -9.376203536987305
    4. ' ' → logprob: -10.001203536987305
    5. ' i' → logprob: -11.376203536987305
    6. 'ist' → logprob: -11.501203536987305
    7. 'i' → logprob: -11.626203536987305
    8. '	in' → logprob: -13.001203536987305
    9. '   ' → logprob: -13.126203536987305
    10. 'n' → logprob: -13.626203536987305

Token 56: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12705840170383453
    2. ' distances' → logprob: -2.127058506011963
    3. ' dist' → logprob: -9.252058029174805
    4. 'self' → logprob: -11.002058029174805
    5. '	dist' → logprob: -12.002058029174805
    6. 'distance' → logprob: -12.877058029174805
    7. '_dist' → logprob: -13.002058029174805
    8. '.dist' → logprob: -13.127058029174805
    9. ' self' → logprob: -13.752058029174805
    10. ' ' → logprob: -13.752058029174805

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004725956823676825
    2. ':
' → logprob: -5.379725933074951
    3. ',' → logprob: -10.62972640991211
    4. '       ' → logprob: -10.87972640991211
    5. '           ' → logprob: -10.87972640991211
    6. ' :' → logprob: -11.25472640991211
    7. '[' → logprob: -12.00472640991211
    8. '.append' → logprob: -12.12972640991211
    9. '.' → logprob: -12.25472640991211
    10. '   ' → logprob: -12.37972640991211

Token 58: '           ' (ID: 352)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.6422083377838135
    2. '           ' → logprob: -0.8922083377838135
    3. 'prefix' → logprob: -2.7672083377838135
    4. '   ' → logprob: -7.767208099365234
    5. '    ' → logprob: -8.267208099365234
    6. '
' → logprob: -8.642208099365234
    7. '            ' → logprob: -9.017208099365234
    8. '            
' → logprob: -9.642208099365234
    9. '```' → logprob: -9.642208099365234
    10. ' ```' → logprob: -10.392208099365234

Token 59: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.03366011008620262
    2. 'prefix' (adapté à ' prefix') → logprob: -3.4086601734161377
    3. '           ' → logprob: -11.658659934997559
    4. '            ' → logprob: -13.033659934997559
    5. '(prefix' → logprob: -13.783659934997559
    6. '_prefix' → logprob: -14.158659934997559
    7. '   ' → logprob: -14.408659934997559
    8. '               ' → logprob: -14.658659934997559
    9. '    ' → logprob: -15.158659934997559
    10. '```' → logprob: -16.283660888671875

Token 60: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002215680666267872
    2. '[-' → logprob: -6.75221586227417
    3. '.' → logprob: -7.00221586227417
    4. '.extend' → logprob: -9.877215385437012
    5. ' .' → logprob: -10.002215385437012
    6. '.app' → logprob: -11.002215385437012
    7. '_append' → logprob: -12.377215385437012
    8. ' app' → logprob: -12.377215385437012
    9. '_app' → logprob: -13.127215385437012
    10. 'append' → logprob: -13.252215385437012

Token 61: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0007451872224919498
    2. ' prefix' → logprob: -7.5007452964782715
    3. '(' → logprob: -9.250744819641113
    4. 'prefix' → logprob: -9.250744819641113
    5. ' (' → logprob: -16.75074577331543
    6. '(pref' → logprob: -19.50074577331543
    7. '.prefix' → logprob: -19.62574577331543
    8. '_prefix' → logprob: -19.87574577331543
    9. '{' → logprob: -21.37574577331543
    10. ' prefixes' → logprob: -21.50074577331543

Token 62: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00018780550453811884
    2. '-' → logprob: -8.625187873840332
    3. '   ' → logprob: -12.375187873840332
    4. ' -' → logprob: -13.250187873840332
    5. ' [-' → logprob: -14.250187873840332
    6. '][-' → logprob: -14.375187873840332
    7. '       ' → logprob: -14.750187873840332
    8. '[' → logprob: -15.250187873840332
    9. '```' → logprob: -16.250186920166016
    10. '[len' → logprob: -17.000186920166016

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '    ' → logprob: -16.500003814697266
    5. '```' → logprob: -17.375003814697266
    6. '       ' → logprob: -17.500003814697266
    7. '+' → logprob: -17.500003814697266
    8. '  ' → logprob: -17.750003814697266
    9. '     ' → logprob: -18.062503814697266
    10. ')' → logprob: -18.125003814697266

Token 64: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07893969118595123
    2. '+' → logprob: -2.57893967628479
    3. '+d' → logprob: -10.078939437866211
    4. ' ' → logprob: -11.953939437866211
    5. 'd' → logprob: -14.578939437866211
    6. ' plus' → logprob: -14.953939437866211
    7. ' ' → logprob: -15.328939437866211
    8. ')' → logprob: -15.578939437866211
    9. ' d' → logprob: -16.82893943786621
    10. ']' → logprob: -16.95393943786621

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6934695243835449
    2. ' +' → logprob: -0.6934695243835449
    3. '+d' → logprob: -8.068470001220703
    4. ' ' → logprob: -11.693470001220703
    5. ' ' → logprob: -15.818470001220703
    6. ' plus' → logprob: -16.068470001220703
    7. 'd' → logprob: -16.068470001220703
    8. '＋' → logprob: -17.068470001220703
    9. '+
' → logprob: -17.068470001220703
    10. '+c' → logprob: -17.568470001220703

Token 66: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740777611732483
    2. 'd' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.474078178405762
    4. ' ' → logprob: -15.474078178405762
    5. '	d' → logprob: -16.474077224731445
    6. '    ' → logprob: -17.224077224731445
    7. ')d' → logprob: -17.599077224731445
    8. '   ' → logprob: -17.849077224731445
    9. '_d' → logprob: -18.849077224731445
    10. ')' → logprob: -18.849077224731445

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013438044115900993
    2. ')
' → logprob: -6.626343727111816
    3. ')return' → logprob: -11.251343727111816
    4. '       ' → logprob: -12.501343727111816
    5. ')
' → logprob: -15.126343727111816
    6. '<|end|>' → logprob: -15.251343727111816
    7. ' )' → logprob: -15.376343727111816
    8. '
' → logprob: -15.751343727111816
    9. '   ' → logprob: -16.376344680786133
    10. '```' → logprob: -17.251344680786133

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002848152944352478
    2. '   ' → logprob: -9.125285148620605
    3. 'return' → logprob: -9.625285148620605
    4. ' return' → logprob: -10.125285148620605
    5. '
' → logprob: -10.625285148620605
    6. '        
' → logprob: -10.625285148620605
    7. '	' → logprob: -11.750285148620605
    8. '    
' → logprob: -13.000285148620605
    9. '	return' → logprob: -13.125285148620605
    10. '    ' → logprob: -13.125285148620605

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.57623291015625
    2. '       ' → logprob: -0.95123291015625
    3. ' return' → logprob: -3.07623291015625
    4. '   ' → logprob: -5.32623291015625
    5. '	return' → logprob: -7.82623291015625
    6. '
' → logprob: -9.20123291015625
    7. '	' → logprob: -9.70123291015625
    8. ' ' → logprob: -10.07623291015625
    9. '<|end|>' → logprob: -10.45123291015625
    10. 'prefix' → logprob: -10.70123291015625

Token 70: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.38687121868133545
    2. 'prefix' → logprob: -1.1368712186813354
    3. '(prefix' → logprob: -15.761871337890625
    4. ' ' → logprob: -19.011871337890625
    5. '.prefix' → logprob: -19.011871337890625
    6. '_prefix' → logprob: -19.011871337890625
    7. '   ' → logprob: -19.511871337890625
    8. '```' → logprob: -19.761871337890625
    9. 'pref' → logprob: -20.011871337890625
    10. ' ' → logprob: -20.011871337890625

Token 71: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36606287956237793
    2. '
' → logprob: -1.491062879562378
    3. '    
' → logprob: -2.991062879562378
    4. 'def' → logprob: -4.366063117980957
    5. '<|end|>' → logprob: -4.491063117980957
    6. ' def' → logprob: -5.491063117980957
    7. '<|end|>' → logprob: -7.366063117980957
    8. ' 
' → logprob: -7.741063117980957
    9. ' ' → logprob: -7.741063117980957
    10. '  
' → logprob: -7.866063117980957

Token 73: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002506697317585349
    2. ' def' → logprob: -6.377506732940674
    3. '   ' → logprob: -7.127506732940674
    4. ' ' → logprob: -14.377506256103516
    5. '	def' → logprob: -14.502506256103516
    6. '```' → logprob: -15.002506256103516
    7. '    
' → logprob: -16.002506256103516
    8. 'class' → logprob: -18.377506256103516
    9. '@property' → logprob: -18.502506256103516
    10. '`' → logprob: -18.502506256103516

Token 74: ' length' (ID: 5517)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.412177175283432
    2. ' get' → logprob: -1.4121772050857544
    3. ' ' → logprob: -3.037177085876465
    4. '_total' → logprob: -4.162177085876465
    5. ' calculate' → logprob: -5.287177085876465
    6. ' _' → logprob: -5.287177085876465
    7. ' distance' → logprob: -5.537177085876465
    8. 'total' → logprob: -5.787177085876465
    9. ' space' → logprob: -5.912177085876465
    10. '_distance' → logprob: -6.037177085876465

Token 75: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16069594025611877
    2. '(self' → logprob: -2.160696029663086
    3. '_' → logprob: -4.035696029663086
    4. '_between' → logprob: -4.410696029663086
    5. '_at' → logprob: -7.035696029663086
    6. '_(' → logprob: -7.160696029663086
    7. 's' → logprob: -7.410696029663086
    8. '_to' → logprob: -8.285696029663086
    9. '_self' → logprob: -8.660696029663086
    10. '_of' → logprob: -9.285696029663086

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10650467127561569
    2. ',' → logprob: -2.7315046787261963
    3. ')' → logprob: -3.8565046787261963
    4. ' ):' → logprob: -4.481504440307617
    5. '):
' → logprob: -6.231504440307617
    6. ' )' → logprob: -7.356504440307617
    7. ' ,' → logprob: -8.106504440307617
    8. ' ' → logprob: -9.231504440307617
    9. '.' → logprob: -9.606504440307617
    10. '   ' → logprob: -9.856504440307617

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07662277668714523
    2. 'return' → logprob: -3.201622724533081
    3. ' return' → logprob: -3.451622724533081
    4. ':return' → logprob: -8.32662296295166
    5. 'self' → logprob: -8.45162296295166
    6. '   ' → logprob: -8.45162296295166
    7. ' 
' → logprob: -8.82662296295166
    8. '        
' → logprob: -8.82662296295166
    9. '<|end|>' → logprob: -9.32662296295166
    10. ':' → logprob: -9.32662296295166

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01872386783361435
    2. ' return' → logprob: -4.518723964691162
    3. 'self' → logprob: -4.893723964691162
    4. ' self' → logprob: -9.518723487854004
    5. '       ' → logprob: -9.643723487854004
    6. '   ' → logprob: -11.518723487854004
    7. '0' → logprob: -13.268723487854004
    8. 'len' → logprob: -14.393723487854004
    9. '    ' → logprob: -14.518723487854004
    10. '```' → logprob: -14.518723487854004

Token 79: ' len' (ID: 4631)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.022783445194363594
    2. 'self' → logprob: -4.022783279418945
    3. ' len' → logprob: -5.397783279418945
    4. 'len' → logprob: -9.272783279418945
    5. ' ' → logprob: -14.147783279418945
    6. ' ' → logprob: -14.272783279418945
    7. ' sum' → logprob: -14.772783279418945
    8. '0' → logprob: -15.647783279418945
    9. '   ' → logprob: -16.397783279418945
    10. '(self' → logprob: -16.522783279418945

Token 80: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019329203059896827
    2. '(' → logprob: -6.2519330978393555
    3. ' (' → logprob: -12.626933097839355
    4. 'self' → logprob: -14.376933097839355
    5. '(s' → logprob: -15.501933097839355
    6. 's' → logprob: -16.12693214416504
    7. '(this' → logprob: -17.12693214416504
    8. '(
' → logprob: -17.87693214416504
    9. '(

' → logprob: -18.12693214416504
    10. ' ' → logprob: -18.37693214416504

Token 81: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.0033797146752476692
    2. '.' → logprob: -5.753379821777344
    3. '.distance' → logprob: -9.253379821777344
    4. '.prefix' → logprob: -10.378379821777344
    5. '.d' → logprob: -10.503379821777344
    6. '.points' → logprob: -10.628379821777344
    7. ' .' → logprob: -12.128379821777344
    8. ').' → logprob: -13.003379821777344
    9. '.dis' → logprob: -13.128379821777344
    10. '.div' → logprob: -13.253379821777344

Token 82: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00035751116229221225
    2. 'a' → logprob: -8.125357627868652
    3. '_' → logprob: -10.500357627868652
    4. 'an' → logprob: -10.875357627868652
    5. 'ance' → logprob: -12.250357627868652
    6. 'anc' → logprob: -12.375357627868652
    7. ' ances' → logprob: -12.750357627868652
    8. '_a' → logprob: -14.000357627868652
    9. '```' → logprob: -14.500357627868652
    10. 'ANCES' → logprob: -14.625357627868652

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. ' )' → logprob: -11.500011444091797
    3. ')
' → logprob: -14.125011444091797
    4. '()' → logprob: -15.625011444091797
    5. ')return' → logprob: -16.625011444091797
    6. '}' → logprob: -17.000011444091797
    7. '())' → logprob: -17.250011444091797
    8. '))' → logprob: -17.625011444091797
    9. '')' → logprob: -18.250011444091797
    10. ']' → logprob: -18.500011444091797

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2352190762758255
    2. '    
' → logprob: -2.8602190017700195
    3. '```' → logprob: -3.3602190017700195
    4. ' 
' → logprob: -3.4852190017700195
    5. ' ' → logprob: -3.6102190017700195
    6. '
' → logprob: -3.8602190017700195
    7. '  
' → logprob: -4.4852190017700195
    8. 'n' → logprob: -4.7352190017700195
    9. 'def' → logprob: -5.4852190017700195
    10. '\n' → logprob: -5.7352190017700195

Token 85: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6668439507484436
    2. '   ' → logprob: -1.0418438911437988
    3. 'def' (adapté à ' def') → logprob: -2.166843891143799
    4. ' ' → logprob: -4.166843891143799
    5. 'd' → logprob: -6.416843891143799
    6. ' 
' → logprob: -7.541843891143799
    7. '
' → logprob: -7.666843891143799
    8. '```' → logprob: -7.666843891143799
    9. '    
' → logprob: -8.541844367980957
    10. '  ' → logprob: -8.916844367980957

Token 86: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3248174488544464
    2. ' _' → logprob: -1.699817419052124
    3. ' get' → logprob: -3.074817419052124
    4. ' total' → logprob: -3.699817419052124
    5. ' ' → logprob: -4.699817657470703
    6. '_total' → logprob: -4.824817657470703
    7. '_distance' → logprob: -6.324817657470703
    8. ' prefix' → logprob: -6.699817657470703
    9. ' distance' → logprob: -6.949817657470703
    10. '_get' → logprob: -7.699817657470703

Token 87: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07107903063297272
    2. '_length' → logprob: -2.8210790157318115
    3. '(' → logprob: -5.446079254150391
    4. '_sum' → logprob: -6.321079254150391
    5. '_distance' → logprob: -6.446079254150391
    6. '_between' → logprob: -8.32107925415039
    7. '_len' → logprob: -8.57107925415039
    8. 's' → logprob: -8.69607925415039
    9. ' _' → logprob: -8.69607925415039
    10. '_size' → logprob: -9.07107925415039

Token 88: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010834281332790852
    2. '(self' → logprob: -4.635834217071533
    3. '_' → logprob: -7.760834217071533
    4. ' (' → logprob: -7.885834217071533
    5. 's' → logprob: -8.885834693908691
    6. '(
' → logprob: -10.010834693908691
    7. '(s' → logprob: -10.885834693908691
    8. '_between' → logprob: -10.885834693908691
    9. '_s' → logprob: -11.885834693908691
    10. '_by' → logprob: -12.010834693908691

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006292314268648624
    2. ' ,' → logprob: -5.131292343139648
    3. 'self' → logprob: -8.881292343139648
    4. 's' → logprob: -9.506292343139648
    5. ')' → logprob: -10.131292343139648
    6. ',start' → logprob: -10.381292343139648
    7. ',s' → logprob: -10.631292343139648
    8. ',self' → logprob: -10.631292343139648
    9. '_,' → logprob: -11.881292343139648
    10. ',)' → logprob: -12.381292343139648

Token 90: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.631323516368866
    2. ' i' → logprob: -0.881323516368866
    3. ' self' → logprob: -3.8813235759735107
    4. 'start' → logprob: -4.131323337554932
    5. 'i' → logprob: -4.756323337554932
    6. ' s' → logprob: -5.506323337554932
    7. 'self' → logprob: -6.256323337554932
    8. ' l' → logprob: -7.256323337554932
    9. ' ' → logprob: -7.756323337554932
    10. 's' → logprob: -7.756323337554932

Token 91: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026526954025030136
    2. ' ,' → logprob: -8.250265121459961
    3. ')' → logprob: -13.625265121459961
    4. ',int' → logprob: -14.125265121459961
    5. ',
' → logprob: -14.500265121459961
    6. '_,' → logprob: -15.000265121459961
    7. ',)' → logprob: -15.875265121459961
    8. 's' → logprob: -16.00026512145996
    9. ',length' → logprob: -16.12526512145996
    10. ':' → logprob: -16.25026512145996

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',
' → logprob: -13.625029563903809
    4. ',int' → logprob: -15.375029563903809
    5. ',

' → logprob: -16.250030517578125
    6. ')' → logprob: -16.250030517578125
    7. ',)' → logprob: -16.625030517578125
    8. ',length' → logprob: -17.125030517578125
    9. '‌,' → logprob: -17.250030517578125
    10. ':' → logprob: -17.375030517578125

Token 93: ' length' (ID: 5517)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.004777687601745129
    2. 'end' → logprob: -5.379777908325195
    3. ' ' → logprob: -9.004777908325195
    4. ' stop' → logprob: -10.504777908325195
    5. 'stop' → logprob: -13.379777908325195
    6. ')' → logprob: -13.504777908325195
    7. '	end' → logprob: -14.129777908325195
    8. ' )' → logprob: -14.129777908325195
    9. '  ' → logprob: -14.504777908325195
    10. '   ' → logprob: -14.879777908325195

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037728892639279366
    2. ')' → logprob: -5.628772735595703
    3. ' ):' → logprob: -8.878772735595703
    4. '):
' → logprob: -10.753772735595703
    5. ':' → logprob: -12.003772735595703
    6. ',' → logprob: -13.628772735595703
    7. ' )' → logprob: -13.753772735595703
    8. ' ' → logprob: -13.878772735595703
    9. '   ' → logprob: -14.378772735595703
    10. '_' → logprob: -14.503772735595703

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23385635018348694
    2. ':' → logprob: -1.7338563203811646
    3. ' 
' → logprob: -4.608856201171875
    4. ':
' → logprob: -4.733856201171875
    5. ' ' → logprob: -5.483856201171875
    6. ' :' → logprob: -6.858856201171875
    7. '   ' → logprob: -6.858856201171875
    8. ' :
' → logprob: -6.983856201171875
    9. '  
' → logprob: -7.108856201171875
    10. ',' → logprob: -7.233856201171875

Token 96: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09560835361480713
    2. 'return' → logprob: -2.9706082344055176
    3. ' ' → logprob: -4.220608234405518
    4. ' 
' → logprob: -4.220608234405518
    5. '       ' → logprob: -5.845608234405518
    6. '        ' → logprob: -6.220608234405518
    7. 'r' → logprob: -6.970608234405518
    8. '    ' → logprob: -7.095608234405518
    9. '   ' → logprob: -7.345608234405518
    10. ' if' → logprob: -7.345608234405518

Token 97: ' length' (ID: 5517)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16864243149757385
    2. ' ' → logprob: -2.543642520904541
    3. ' if' → logprob: -2.793642520904541
    4. 'return' → logprob: -4.543642520904541
    5. ' start' → logprob: -7.043642520904541
    6. 'if' → logprob: -7.418642520904541
    7. ' prefix' → logprob: -7.543642520904541
    8. 'r' → logprob: -7.668642520904541
    9. ' r' → logprob: -8.168642044067383
    10. ' s' → logprob: -8.293642044067383

Token 98: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31823375821113586
    2. ' )' → logprob: -1.9432337284088135
    3. ' ' → logprob: -2.9432337284088135
    4. '<|end|>' → logprob: -3.3182337284088135
    5. ' +' → logprob: -4.318233966827393
    6. '+' → logprob: -4.443233966827393
    7. '=' → logprob: -5.568233966827393
    8. ' >' → logprob: -6.193233966827393
    9. '<|end|>' → logprob: -6.193233966827393
    10. ' =' → logprob: -6.568233966827393

Token 99: ' number' (ID: 2086)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.336373209953308
    2. ' start' → logprob: -1.586373209953308
    3. ' ' → logprob: -1.836373209953308
    4. 'length' → logprob: -2.2113733291625977
    5. ' int' → logprob: -2.5863733291625977
    6. ' self' → logprob: -2.7113733291625977
    7. 'start' → logprob: -3.0863733291625977
    8. '<|end|>' → logprob: -4.461373329162598
    9. 'int' → logprob: -4.586373329162598
    10. ' The' → logprob: -4.836373329162598

Token 100: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11093006283044815
    2. ' ' → logprob: -2.6109299659729004
    3. '<|end|>' → logprob: -4.6109299659729
    4. ' )' → logprob: -4.9859299659729
    5. '_' → logprob: -5.2359299659729
    6. 's' → logprob: -6.4859299659729
    7. '=' → logprob: -6.4859299659729
    8. '<|end|>' → logprob: -6.9859299659729
    9. '  ' → logprob: -7.1109299659729
    10. ' of' → logprob: -7.4859299659729

Token 101: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.4093048870563507
    2. 'segments' → logprob: -1.1593048572540283
    3. ' points' → logprob: -5.159305095672607
    4. ' ' → logprob: -5.409305095672607
    5. ' spaces' → logprob: -5.784305095672607
    6. '_segments' → logprob: -6.409305095672607
    7. ' elements' → logprob: -6.534305095672607
    8. 'points' → logprob: -6.659305095672607
    9. '_' → logprob: -7.159305095672607
    10. ')' → logprob: -7.909305095672607

Token 102: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8101521730422974
    2. '<|end|>' → logprob: -0.8101521730422974
    3. ')' → logprob: -2.935152053833008
    4. ',' → logprob: -3.685152053833008
    5. '   ' → logprob: -4.560152053833008
    6. ' return' → logprob: -5.185152053833008
    7. '<|end|>' → logprob: -5.685152053833008
    8. ' ' → logprob: -6.060152053833008
    9. '
' → logprob: -6.310152053833008
    10. 'return' → logprob: -7.060152053833008

Token 103: 'edges' (ID: 39127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009897274896502495
    2. 'segments' → logprob: -5.259897232055664
    3. ' )' → logprob: -6.259897232055664
    4. ' segments' → logprob: -7.509897232055664
    5. 'tokens' → logprob: -7.759897232055664
    6. ' edges' → logprob: -8.134897232055664
    7. 'edges' → logprob: -8.134897232055664
    8. '<|end|>' → logprob: -8.384897232055664
    9. ',' → logprob: -8.759897232055664
    10. ' to' → logprob: -9.134897232055664

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004111054353415966
    2. ' )' → logprob: -5.754111289978027
    3. '):' → logprob: -7.129111289978027
    4. '+' → logprob: -9.254111289978027
    5. '   ' → logprob: -11.629111289978027
    6. ' ):' → logprob: -12.129111289978027
    7. ' ' → logprob: -12.379111289978027
    8. '):
' → logprob: -12.629111289978027
    9. ',' → logprob: -12.754111289978027
    10. ' +' → logprob: -12.754111289978027

Token 105: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09639168530702591
    2. '<|end|>' → logprob: -2.8463916778564453
    3. ':' → logprob: -4.471391677856445
    4. '):' → logprob: -5.721391677856445
    5. '       ' → logprob: -5.846391677856445
    6. '   ' → logprob: -6.221391677856445
    7. '[' → logprob: -6.346391677856445
    8. ' ' → logprob: -6.471391677856445
    9. '
' → logprob: -6.471391677856445
    10. '(' → logprob: -6.596391677856445

Token 106: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5475902557373047
    2. ' cover' → logprob: -2.1725902557373047
    3. 'sum' → logprob: -2.9225902557373047
    4. ' calculate' → logprob: -3.0475902557373047
    5. ' ' → logprob: -3.2975902557373047
    6. ' measure' → logprob: -3.2975902557373047
    7. ' include' → logprob: -3.5475902557373047
    8. ' compute' → logprob: -3.5475902557373047
    9. 'calculate' → logprob: -4.047590255737305
    10. ' take' → logprob: -5.047590255737305

Token 107: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9529072642326355
    2. ':' → logprob: -1.0779073238372803
    3. '       ' → logprob: -1.4529073238372803
    4. '   ' → logprob: -4.202907085418701
    5. '):' → logprob: -4.202907085418701
    6. ':
' → logprob: -6.202907085418701
    7. ' :' → logprob: -6.452907085418701
    8. ' ' → logprob: -6.577907085418701
    9. '):
' → logprob: -6.952907085418701
    10. ',' → logprob: -7.077907085418701

Token 108: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8986780047416687
    2. ')' → logprob: -1.2736780643463135
    3. '       ' → logprob: -1.5236780643463135
    4. '   ' → logprob: -3.1486780643463135
    5. ' ' → logprob: -4.023677825927734
    6. ' :' → logprob: -4.648677825927734
    7. '):' → logprob: -4.898677825927734
    8. ',' → logprob: -5.523677825927734
    9. '    ' → logprob: -6.023677825927734
    10. '<|end|>' → logprob: -6.398677825927734

Token 109: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6266868114471436
    2. ' return' → logprob: -1.3766868114471436
    3. 'return' (adapté à ' return') → logprob: -1.6266868114471436
    4. ' if' → logprob: -4.376687049865723
    5. 'if' → logprob: -6.126687049865723
    6. '   ' → logprob: -6.751687049865723
    7. ' start' → logprob: -9.251687049865723
    8. '
' → logprob: -9.501687049865723
    9. 'r' → logprob: -9.626687049865723
    10. ' ' → logprob: -9.751687049865723

Token 110: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.008619539439678192
    2. 'self' → logprob: -4.75861930847168
    3. '(self' → logprob: -12.75861930847168
    4. ' ' → logprob: -14.25861930847168
    5. ' ' → logprob: -14.88361930847168
    6. '	self' → logprob: -15.38361930847168
    7. ' sum' → logprob: -15.50861930847168
    8. '       ' → logprob: -15.50861930847168
    9. '    ' → logprob: -15.88361930847168
    10. '   ' → logprob: -16.00861930847168

Token 111: '.prefix' (ID: 84410)
  Prédit: '.prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prefix' → logprob: -0.0006701439269818366
    2. '.segment' → logprob: -7.875669956207275
    3. ' .' → logprob: -8.375670433044434
    4. 'prefix' → logprob: -10.500670433044434
    5. '.' → logprob: -11.000670433044434
    6. '.period' → logprob: -13.250670433044434
    7. '`.' → logprob: -13.250670433044434
    8. ''.' → logprob: -13.500670433044434
    9. '.prec' → logprob: -13.750670433044434
    10. ' prefix' → logprob: -13.750670433044434

Token 112: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.005176474340260029
    2. '[_' → logprob: -6.005176544189453
    3. '[start' → logprob: -6.380176544189453
    4. '_sum' → logprob: -7.630176544189453
    5. 's' → logprob: -8.630176544189453
    6. '[' → logprob: -8.880176544189453
    7. '[-' → logprob: -9.130176544189453
    8. '[s' → logprob: -10.505176544189453
    9. '```' → logprob: -10.630176544189453
    10. '[self' → logprob: -11.380176544189453

Token 113: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.5858373641967773
    2. 's' → logprob: -0.8358373641967773
    3. '[' → logprob: -5.210837364196777
    4. '   ' → logprob: -7.335837364196777
    5. 'ds' → logprob: -7.335837364196777
    6. 'ms' → logprob: -7.335837364196777
    7. '```' → logprob: -7.960837364196777
    8. 'ks' → logprob: -8.085837364196777
    9. 'gs' → logprob: -8.210837364196777
    10. 'fs' → logprob: -8.460837364196777

Token 114: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.005961391143500805
    2. '[' → logprob: -5.1309614181518555
    3. '[min' → logprob: -11.380961418151855
    4. '[
' → logprob: -11.880961418151855
    5. '[s' → logprob: -12.255961418151855
    6. '[end' → logprob: -12.255961418151855
    7. '```' → logprob: -13.755961418151855
    8. ' [' → logprob: -13.880961418151855
    9. '[src' → logprob: -14.880961418151855
    10. 'start' → logprob: -15.255961418151855

Token 115: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -11.500016212463379
    3. 'index' → logprob: -13.000016212463379
    4. '_i' → logprob: -13.375016212463379
    5. ' _' → logprob: -14.875016212463379
    6. '_idx' → logprob: -15.250016212463379
    7. '_INDEX' → logprob: -15.375016212463379
    8. 'dex' → logprob: -15.625016212463379
    9. '_ind' → logprob: -15.750016212463379
    10. 'Index' → logprob: -15.875016212463379

Token 116: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269388198852539
    2. '+' → logprob: -2.126938819885254
    3. ' ' → logprob: -11.876938819885254
    4. ' +
' → logprob: -13.001938819885254
    5. ' plus' → logprob: -13.626938819885254
    6. '+
' → logprob: -15.876938819885254
    7. ' ' → logprob: -16.126937866210938
    8. ' +

' → logprob: -17.501937866210938
    9. '＋' → logprob: -17.501937866210938
    10. ' +
' → logprob: -17.626937866210938

Token 117: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0067154900170862675
    2. ' length' → logprob: -5.006715297698975
    3. '_length' → logprob: -16.006715774536133
    4. '(length' → logprob: -17.631715774536133
    5. 'len' → logprob: -17.756715774536133
    6. '[length' → logprob: -17.756715774536133
    7. ' ' → logprob: -18.631715774536133
    8. '	length' → logprob: -18.631715774536133
    9. '<|end|>' → logprob: -19.131715774536133
    10. 'ength' → logprob: -19.131715774536133

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028088156250305474
    2. ' ]' → logprob: -8.25028133392334
    3. ']-' → logprob: -11.00028133392334
    4. ']
' → logprob: -13.50028133392334
    5. '[' → logprob: -14.37528133392334
    6. '']' → logprob: -15.62528133392334
    7. '`]' → logprob: -15.87528133392334
    8. ')' → logprob: -16.250280380249023
    9. '"]' → logprob: -16.250280380249023
    10. ']

' → logprob: -16.375280380249023

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07899388670921326
    2. '-' → logprob: -2.578993797302246
    3. ' ' → logprob: -10.078993797302246
    4. '<|end|>' → logprob: -10.203993797302246
    5. ' -
' → logprob: -11.453993797302246
    6. ' –' → logprob: -12.828993797302246
    7. '-
' → logprob: -13.078993797302246
    8. '   ' → logprob: -13.453993797302246
    9. ' ' → logprob: -13.453993797302246
    10. '  ' → logprob: -13.703993797302246

Token 120: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31328898668289185
    2. ' self' → logprob: -1.313288927078247
    3. '<|end|>' → logprob: -11.438288688659668
    4. '	self' → logprob: -11.938288688659668
    5. '[self' → logprob: -12.563288688659668
    6. '(self' → logprob: -13.438288688659668
    7. 'prefix' → logprob: -13.688288688659668
    8. '=self' → logprob: -13.938288688659668
    9. ' ' → logprob: -14.313288688659668
    10. '       ' → logprob: -14.563288688659668

Token 121: '.prefix' (ID: 84410)
  Prédit: '.prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prefix' → logprob: -7.231182826217264e-05
    2. 'prefix' → logprob: -10.125072479248047
    3. '.' → logprob: -10.875072479248047
    4. '.user' → logprob: -12.375072479248047
    5. ' .' → logprob: -12.500072479248047
    6. '_prefix' → logprob: -13.875072479248047
    7. '_.' → logprob: -14.000072479248047
    8. 'refix' → logprob: -14.250072479248047
    9. '.pref' → logprob: -14.625072479248047
    10. '._' → logprob: -15.125072479248047

Token 122: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.981667537620524e-06
    2. 's' → logprob: -14.375001907348633
    3. ' _' → logprob: -14.875001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_sum' → logprob: -15.500001907348633
    6. '._' → logprob: -16.250001907348633
    7. '```' → logprob: -16.625001907348633
    8. ' ' → logprob: -17.250001907348633
    9. 'underscore' → logprob: -17.250001907348633
    10. ')_' → logprob: -17.250001907348633

Token 123: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0010095883626490831
    2. 's' → logprob: -8.501009941101074
    3. 'um' → logprob: -9.001009941101074
    4. '[' → logprob: -9.001009941101074
    5. 'uffix' → logprob: -9.001009941101074
    6. 'ufs' → logprob: -9.126009941101074
    7. '```' → logprob: -9.626009941101074
    8. '_s' → logprob: -10.376009941101074
    9. '_' → logprob: -10.501009941101074
    10. 'u' → logprob: -10.876009941101074

Token 124: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.250004768371582
    3. '[
' → logprob: -16.0000057220459
    4. ' [' → logprob: -17.3750057220459
    5. 'start' → logprob: -19.5000057220459
    6. '[s' → logprob: -19.5000057220459
    7. '[current' → logprob: -20.0000057220459
    8. '[end' → logprob: -20.5000057220459
    9. '[int' → logprob: -20.6250057220459
    10. '[selected' → logprob: -20.8750057220459

Token 125: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.125001907348633
    3. ' _' → logprob: -14.875001907348633
    4. 'index' → logprob: -15.125001907348633
    5. '_INDEX' → logprob: -15.625001907348633
    6. '_ind' → logprob: -15.750001907348633
    7. 'Index' → logprob: -15.875001907348633
    8. '_i' → logprob: -16.500001907348633
    9. ']_' → logprob: -17.125001907348633
    10. '_indexes' → logprob: -17.375001907348633

Token 126: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22586610913276672
    2. ')' → logprob: -1.6008660793304443
    3. '}' → logprob: -8.100866317749023
    4. '<|end|>' → logprob: -8.975866317749023
    5. '<|end|>' → logprob: -12.350866317749023
    6. '```' → logprob: -12.475866317749023
    7. ' ]' → logprob: -12.475866317749023
    8. '+' → logprob: -12.725866317749023
    9. '']' → logprob: -13.725866317749023
    10. ')]' → logprob: -13.975866317749023

Token 127: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2388973981142044
    2. ' def' → logprob: -1.863897442817688
    3. ' ' → logprob: -3.3638973236083984
    4. 'def' → logprob: -3.9888973236083984
    5. '
' → logprob: -6.238897323608398
    6. ' 
' → logprob: -7.113897323608398
    7. '(' → logprob: -8.238897323608398
    8. '[' → logprob: -8.738897323608398
    9. '    
' → logprob: -8.738897323608398
    10. '```' → logprob: -9.113897323608398

Token 128: ' Square' (ID: 22980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.588782787322998
    2. ' Point' → logprob: -1.088782787322998
    3. ' Space' → logprob: -3.463782787322998
    4. ' User' → logprob: -4.338782787322998
    5. ' Distance' → logprob: -4.338782787322998
    6. ' Path' → logprob: -5.088782787322998
    7. ' Trip' → logprob: -5.588782787322998
    8. ' Polygon' → logprob: -5.963782787322998
    9. ' Geometry' → logprob: -6.213782787322998
    10. '_' → logprob: -6.338782787322998

Token 129: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8094993233680725
    2. '(' → logprob: -0.9344993233680725
    3. 'Distance' → logprob: -2.0594992637634277
    4. '():' → logprob: -4.059499263763428
    5. 'Sequence' → logprob: -5.309499263763428
    6. 'Path' → logprob: -5.934499263763428
    7. 'Area' → logprob: -6.184499263763428
    8. 'Point' → logprob: -6.934499263763428
    9. 'Distances' → logprob: -6.934499263763428
    10. 'Root' → logprob: -7.309499263763428

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013524403038900346
    2. '(' → logprob: -9.50013542175293
    3. ':
' → logprob: -9.87513542175293
    4. ' :' → logprob: -13.00013542175293
    5. '<|end|>' → logprob: -13.12513542175293
    6. '():' → logprob: -13.50013542175293
    7. ':**' → logprob: -13.62513542175293
    8. '):' → logprob: -14.25013542175293
    9. ':

' → logprob: -14.62513542175293
    10. ':def' → logprob: -15.75013542175293

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01759244315326214
    2. ' def' → logprob: -4.767592430114746
    3. ':
' → logprob: -5.392592430114746
    4. ':' → logprob: -5.892592430114746
    5. '    ' → logprob: -7.517592430114746
    6. 'def' → logprob: -8.017592430114746
    7. ' :
' → logprob: -8.267592430114746
    8. ' 
' → logprob: -9.517592430114746
    9. ' :' → logprob: -10.017592430114746
    10. '    
' → logprob: -10.017592430114746

Token 132: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11875782161951065
    2. 'def' (adapté à ' def') → logprob: -2.618757724761963
    3. '   ' → logprob: -3.243757724761963
    4. 'class' → logprob: -9.743758201599121
    5. ' class' → logprob: -12.618758201599121
    6. '    ' → logprob: -12.993758201599121
    7. ':' → logprob: -14.368758201599121
    8. ' ' → logprob: -14.743758201599121
    9. ':def' → logprob: -14.743758201599121
    10. '	def' → logprob: -14.993758201599121

Token 133: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08431706577539444
    2. ' ' → logprob: -2.8343169689178467
    3. '_' → logprob: -4.459317207336426
    4. '__' → logprob: -4.709317207336426
    5. ' _' → logprob: -6.709317207336426
    6. '  ' → logprob: -8.834317207336426
    7. ' ' → logprob: -9.959317207336426
    8. ' ___' → logprob: -10.334317207336426
    9. '_init' → logprob: -10.709317207336426
    10. ' ```' → logprob: -11.084317207336426

Token 134: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.117345684382599e-05
    2. 'in' → logprob: -11.750020980834961
    3. 'ini' → logprob: -12.375020980834961
    4. 'i' → logprob: -12.500020980834961
    5. ' init' → logprob: -13.000020980834961
    6. 'class' → logprob: -14.125020980834961
    7. '_init' → logprob: -14.375020980834961
    8. '```' → logprob: -14.500020980834961
    9. 'int' → logprob: -15.500020980834961
    10. '
' → logprob: -15.750020980834961

Token 135: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009934930130839348
    2. '__' → logprob: -4.634934902191162
    3. '__(
' → logprob: -9.13493537902832
    4. '(' → logprob: -10.63493537902832
    5. '(self' → logprob: -10.63493537902832
    6. ' (' → logprob: -11.50993537902832
    7. '__((' → logprob: -12.13493537902832
    8. '_' → logprob: -13.00993537902832
    9. '_(' → logprob: -13.00993537902832
    10. '___' → logprob: -14.25993537902832

Token 136: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010276220738887787
    2. ' self' → logprob: -4.6352763175964355
    3. ')' → logprob: -8.010275840759277
    4. '):
' → logprob: -9.260275840759277
    5. 'dist' → logprob: -10.760275840759277
    6. ' distances' → logprob: -11.135275840759277
    7. '
' → logprob: -11.260275840759277
    8. '   ' → logprob: -11.385275840759277
    9. 'distance' → logprob: -11.885275840759277
    10. ',' → logprob: -12.260275840759277

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16031968593597412
    2. ' ,' → logprob: -1.9103196859359741
    3. '):' → logprob: -9.785319328308105
    4. ' ):' → logprob: -10.785319328308105
    5. 'self' → logprob: -11.785319328308105
    6. ',d' → logprob: -12.910319328308105
    7. ' ' → logprob: -13.035319328308105
    8. ' )' → logprob: -13.660319328308105
    9. ',self' → logprob: -14.035319328308105
    10. ')' → logprob: -14.285319328308105

Token 138: ' vertical' (ID: 17679)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.7651957273483276
    2. 'distance' → logprob: -1.0151957273483276
    3. ' distances' → logprob: -2.515195846557617
    4. ' sequence' → logprob: -3.640195846557617
    5. 'sequence' → logprob: -3.890195846557617
    6. 'dist' → logprob: -4.015195846557617
    7. ' sequences' → logprob: -4.640195846557617
    8. ' dist' → logprob: -5.390195846557617
    9. ' points' → logprob: -6.140195846557617
    10. 'se' → logprob: -6.140195846557617

Token 139: '_g' (ID: 5439)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.1548326313495636
    2. '_segments' → logprob: -2.779832601547241
    3. '_lines' → logprob: -3.654832601547241
    4. '_sequences' → logprob: -4.02983283996582
    5. ',' → logprob: -4.77983283996582
    6. '_lengths' → logprob: -4.77983283996582
    7. 's' → logprob: -5.15483283996582
    8. '_s' → logprob: -5.77983283996582
    9. ')' → logprob: -6.15483283996582
    10. '_sequence' → logprob: -6.27983283996582

Token 140: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.558497428894043
    2. 'r' → logprob: -1.933497428894043
    3. 'roups' → logprob: -1.933497428894043
    4. 'rid' → logprob: -2.558497428894043
    5. 'ap' → logprob: -3.433497428894043
    6. 'raph' → logprob: -4.933497428894043
    7. 'roup' → logprob: -5.183497428894043
    8. 'u' → logprob: -5.808497428894043
    9. 'rides' → logprob: -6.683497428894043
    10. 'lines' → logprob: -6.808497428894043

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04707026109099388
    2. '):' → logprob: -3.297070264816284
    3. ' ,' → logprob: -4.922070026397705
    4. ' ):' → logprob: -6.922070026397705
    5. ')' → logprob: -8.797070503234863
    6. ' ' → logprob: -9.047070503234863
    7. '=' → logprob: -9.297070503234863
    8. ':' → logprob: -9.422070503234863
    9. '   ' → logprob: -9.547070503234863
    10. '):
' → logprob: -10.172070503234863

Token 142: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.5244668126106262
    2. ' horizontal' → logprob: -0.8994668126106262
    3. 'vertical' → logprob: -7.3994669914245605
    4. ' vertical' → logprob: -9.274466514587402
    5. ' diagonal' → logprob: -9.524466514587402
    6. 'h' → logprob: -9.774466514587402
    7. 'distance' → logprob: -9.774466514587402
    8. ' horiz' → logprob: -10.149466514587402
    9. 'di' → logprob: -10.211966514587402
    10. 'segment' → logprob: -10.399466514587402

Token 143: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0002964935847558081
    2. '_' → logprob: -9.875296592712402
    3. '_dist' → logprob: -10.125296592712402
    4. ')_' → logprob: -10.250296592712402
    5. 'g' → logprob: -10.500296592712402
    6. ' _' → logprob: -10.625296592712402
    7. '_lengths' → logprob: -10.750296592712402
    8. ')' → logprob: -10.875296592712402
    9. '_segments' → logprob: -11.500296592712402
    10. '_s' → logprob: -11.625296592712402

Token 144: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.00023643692838959396
    2. 'ap' → logprob: -10.375236511230469
    3. ' aps' → logprob: -10.437736511230469
    4. '   ' → logprob: -10.437736511230469
    5. '```' → logprob: -11.062736511230469
    6. 'apses' → logprob: -11.125236511230469
    7. 'abs' → logprob: -11.437736511230469
    8. 'ps' → logprob: -12.312736511230469
    9. 'a' → logprob: -12.625236511230469
    10. 'ags' → logprob: -12.687736511230469

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007900939672254026
    2. '):
' → logprob: -7.750790119171143
    3. ' ):' → logprob: -8.625789642333984
    4. ',' → logprob: -8.750789642333984
    5. ')' → logprob: -11.750789642333984
    6. ':' → logprob: -12.000789642333984
    7. ' ' → logprob: -13.000789642333984
    8. '   ' → logprob: -13.375789642333984
    9. '):
' → logprob: -13.500789642333984
    10. '**' → logprob: -15.250789642333984

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3908204436302185
    2. ':' → logprob: -1.1408205032348633
    3. ',' → logprob: -6.015820503234863
    4. ':
' → logprob: -7.515820503234863
    5. '<|end|>' → logprob: -7.515820503234863
    6. '):' → logprob: -8.890820503234863
    7. '   ' → logprob: -9.640820503234863
    8. '.' → logprob: -9.765820503234863
    9. ' :' → logprob: -10.265820503234863
    10. '):
' → logprob: -10.515820503234863

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.045696333050727844
    2. ' self' → logprob: -3.170696258544922
    3. '       ' → logprob: -5.920696258544922
    4. 'def' → logprob: -12.920696258544922
    5. 'import' → logprob: -13.545696258544922
    6. ' ' → logprob: -13.795696258544922
    7. '   ' → logprob: -13.795696258544922
    8. 'super' → logprob: -13.795696258544922
    9. '	self' → logprob: -14.045696258544922
    10. '
' → logprob: -14.295696258544922

Token 148: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.06623882800340652
    2. '.' → logprob: -3.0662388801574707
    3. ' .' → logprob: -4.066238880157471
    4. '.horizontal' → logprob: -9.066238403320312
    5. 'vertical' → logprob: -9.566238403320312
    6. '.vert' → logprob: -9.816238403320312
    7. '.v' → logprob: -10.566238403320312
    8. ' vertical' → logprob: -11.566238403320312
    9. '.dist' → logprob: -11.566238403320312
    10. '   ' → logprob: -11.691238403320312

Token 149: ' =' (ID: 314)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0018570076208561659
    2. ' =' → logprob: -7.626856803894043
    3. '_' → logprob: -7.876856803894043
    4. '_s' → logprob: -8.626856803894043
    5. '_dist' → logprob: -8.751856803894043
    6. '_lengths' → logprob: -8.876856803894043
    7. '_segments' → logprob: -9.251856803894043
    8. 's' → logprob: -9.376856803894043
    9. ' _' → logprob: -9.751856803894043
    10. '=' → logprob: -9.751856803894043

Token 150: ' Distance' (ID: 53583)
  Prédit: 'Distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.38718852400779724
    2. ' Distance' → logprob: -1.1371885538101196
    3. ' vertical' → logprob: -8.637188911437988
    4. 'Vertical' → logprob: -9.637188911437988
    5. 'vertical' → logprob: -9.762188911437988
    6. 'distance' → logprob: -12.012188911437988
    7. ' Vertical' → logprob: -12.137188911437988
    8. ' distance' → logprob: -12.512188911437988
    9. ' ' → logprob: -14.387188911437988
    10. '   ' → logprob: -14.762188911437988

Token 151: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.9361264946837764e-07
    2. 'Sequences' → logprob: -16.375
    3. '_sequence' → logprob: -17.125
    4. ' Sequence' → logprob: -18.25
    5. 'sequence' → logprob: -18.625
    6. 'Sequ' → logprob: -18.875
    7. '_SEQUENCE' → logprob: -19.5
    8. 'Series' → logprob: -20.75
    9. 's' → logprob: -21.5
    10. '.Sequence' → logprob: -22.125

Token 152: '(vertical' (ID: 154834)
  Prédit: '(vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertical' → logprob: -0.00013214473437983543
    2. '(' → logprob: -9.12513256072998
    3. '(horizontal' → logprob: -11.00013256072998
    4. '(
' → logprob: -12.62513256072998
    5. 'vertical' → logprob: -13.62513256072998
    6. ' (' → logprob: -14.37513256072998
    7. '(v' → logprob: -15.25013256072998
    8. '(verbose' → logprob: -15.62513256072998
    9. '(

' → logprob: -16.000131607055664
    10. '(ver' → logprob: -16.125131607055664

Token 153: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00014656837447546422
    2. 's' → logprob: -9.750146865844727
    3. 'g' → logprob: -9.875146865844727
    4. ')' → logprob: -10.875146865844727
    5. ')_' → logprob: -12.250146865844727
    6. '
' → logprob: -13.375146865844727
    7. ' _' → logprob: -13.625146865844727
    8. '   ' → logprob: -13.875146865844727
    9. ')
' → logprob: -13.875146865844727
    10. '),' → logprob: -14.000146865844727

Token 154: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.00016659092216286808
    2. 'ap' → logprob: -10.125166893005371
    3. '   ' → logprob: -10.875166893005371
    4. 'abs' → logprob: -11.375166893005371
    5. 's' → logprob: -11.687666893005371
    6. 'ps' → logprob: -11.750166893005371
    7. ')' → logprob: -11.750166893005371
    8. 'apses' → logprob: -11.812666893005371
    9. '
' → logprob: -11.937666893005371
    10. ' aps' → logprob: -12.187666893005371

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006450029904954135
    2. ')
' → logprob: -7.875645160675049
    3. ',' → logprob: -8.37564468383789
    4. '       ' → logprob: -10.75064468383789
    5. ' )' → logprob: -12.25064468383789
    6. '),' → logprob: -12.25064468383789
    7. '   ' → logprob: -13.00064468383789
    8. ')

' → logprob: -15.37564468383789
    9. ',)' → logprob: -15.50064468383789
    10. ');' → logprob: -15.87564468383789

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008107058703899384
    2. 'self' → logprob: -4.8831071853637695
    3. ' self' → logprob: -7.6331071853637695
    4. '
' → logprob: -12.13310718536377
    5. '   ' → logprob: -12.38310718536377
    6. '        
' → logprob: -12.63310718536377
    7. '	self' → logprob: -13.75810718536377
    8. '      ' → logprob: -14.00810718536377
    9. ' ' → logprob: -14.25810718536377
    10. ' ' → logprob: -14.88310718536377

Token 157: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001350234029814601
    2. ' self' → logprob: -6.751350402832031
    3. '       ' → logprob: -8.626350402832031
    4. '	self' → logprob: -15.251350402832031
    5. '   ' → logprob: -15.626350402832031
    6. '
' → logprob: -16.00135040283203
    7. ' ' → logprob: -16.00135040283203
    8. 'se' → logprob: -18.12635040283203
    9. '        
' → logprob: -18.25135040283203
    10. '      ' → logprob: -18.50135040283203

Token 158: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -0.47442910075187683
    2. '.' → logprob: -0.9744291305541992
    3. 'horizontal' → logprob: -9.0994291305542
    4. '.vertical' → logprob: -9.2244291305542
    5. '.h' → logprob: -9.7244291305542
    6. ' .' → logprob: -9.8494291305542
    7. '.
' → logprob: -10.7244291305542
    8. '.Horizontal' → logprob: -13.3494291305542
    9. ' horizontal' → logprob: -13.5994291305542
    10. '.square' → logprob: -14.4744291305542

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329265236854553
    2. '=' → logprob: -1.3132926225662231
    3. '_g' → logprob: -11.188292503356934
    4. '   ' → logprob: -12.438292503356934
    5. '(' → logprob: -13.063292503356934
    6. '=g' → logprob: -13.188292503356934
    7. 'g' → logprob: -13.313292503356934
    8. '_' → logprob: -13.563292503356934
    9. ' ' → logprob: -13.938292503356934
    10. '.' → logprob: -13.938292503356934

Token 160: ' Distance' (ID: 53583)
  Prédit: 'Distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.04858816787600517
    2. ' Distance' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.423587799072266
    4. 'distance' → logprob: -15.798587799072266
    5. '   ' → logprob: -16.048587799072266
    6. 'Length' → logprob: -16.173587799072266
    7. ' distance' → logprob: -16.423587799072266
    8. 'Dist' → logprob: -17.423587799072266
    9. 'Distances' → logprob: -17.423587799072266
    10. '.Distance' → logprob: -17.423587799072266

Token 161: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.5048530030981055e-06
    2. 'Sequences' → logprob: -14.250001907348633
    3. '_sequence' → logprob: -14.875001907348633
    4. '_' → logprob: -15.375001907348633
    5. ' Sequence' → logprob: -16.875001907348633
    6. 'Sequ' → logprob: -17.250001907348633
    7. '_S' → logprob: -18.000001907348633
    8. 'sequence' → logprob: -18.125001907348633
    9. 'Square' → logprob: -18.625001907348633
    10. '_SEQUENCE' → logprob: -18.750001907348633

Token 162: '(horizontal' (ID: 106641)
  Prédit: '(horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(horizontal' → logprob: -0.0003663212701212615
    2. '(' → logprob: -8.0003662109375
    3. 'horizontal' → logprob: -11.0003662109375
    4. '(h' → logprob: -12.1253662109375
    5. ' (' → logprob: -12.1253662109375
    6. ' horizontal' → logprob: -13.6253662109375
    7. '(
' → logprob: -13.8753662109375
    8. '(vertical' → logprob: -14.1253662109375
    9. '.horizontal' → logprob: -16.2503662109375
    10. '_horizontal' → logprob: -16.8753662109375

Token 163: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0005648265941999853
    2. 'g' → logprob: -7.500565052032471
    3. ')' → logprob: -12.375564575195312
    4. 's' → logprob: -13.000564575195312
    5. '(horizontal' → logprob: -13.625564575195312
    6. ')_' → logprob: -14.250564575195312
    7. '_lengths' → logprob: -14.375564575195312
    8. '(g' → logprob: -15.000564575195312
    9. '_h' → logprob: -15.250564575195312
    10. '(_' → logprob: -15.500564575195312

Token 164: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.00022928470571059734
    2. 'ap' → logprob: -9.625228881835938
    3. '   ' → logprob: -10.000228881835938
    4. 'abs' → logprob: -10.500228881835938
    5. 'apses' → logprob: -11.125228881835938
    6. 'gs' → logprob: -11.250228881835938
    7. 'ps' → logprob: -11.437728881835938
    8. 'ags' → logprob: -12.125228881835938
    9. ' gaps' → logprob: -12.250228881835938
    10. '
' → logprob: -12.812728881835938

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '       ' → logprob: -15.000001907348633
    5. ')
' → logprob: -15.500001907348633
    6. '}' → logprob: -15.625001907348633
    7. ')}' → logprob: -17.250001907348633
    8. '<|end|>' → logprob: -17.250001907348633
    9. ' ' → logprob: -17.625001907348633
    10. '),' → logprob: -19.375001907348633

Token 166: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2691858410835266
    2. '   ' → logprob: -1.6441857814788818
    3. 'def' → logprob: -3.894185781478882
    4. '    
' → logprob: -4.394186019897461
    5. ' def' → logprob: -4.769186019897461
    6. '<|end|>' → logprob: -7.519186019897461
    7. ' 
' → logprob: -7.894186019897461
    8. '  
' → logprob: -8.519186019897461
    9. '        
' → logprob: -9.019186019897461
    10. ' ' → logprob: -9.019186019897461

Token 167: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007156503852456808
    2. ' def' → logprob: -7.250715732574463
    3. '   ' → logprob: -12.125715255737305
    4. 'de' → logprob: -16.000715255737305
    5. '
' → logprob: -16.375715255737305
    6. ' ' → logprob: -18.375715255737305
    7. '    
' → logprob: -18.875715255737305
    8. '```' → logprob: -19.750715255737305
    9. 'import' → logprob: -19.875715255737305
    10. ')' → logprob: -20.125715255737305

Token 168: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.018858997151255608
    2. 'count' → logprob: -4.018858909606934
    3. '_count' → logprob: -8.018858909606934
    4. ' max' → logprob: -9.393858909606934
    5. ' ' → logprob: -9.518858909606934
    6. ' _' → logprob: -10.018858909606934
    7. ' find' → logprob: -10.393858909606934
    8. '_' → logprob: -10.518858909606934
    9. ' square' → logprob: -10.518858909606934
    10. ' total' → logprob: -10.643858909606934

Token 169: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0009506448986940086
    2. '_' → logprob: -7.750950813293457
    3. '_square' → logprob: -8.375950813293457
    4. '(self' → logprob: -9.250950813293457
    5. '_self' → logprob: -9.375950813293457
    6. 's' → logprob: -10.625950813293457
    7. '_all' → logprob: -10.875950813293457
    8. 'Squares' → logprob: -11.000950813293457
    9. '(' → logprob: -11.125950813293457
    10. '_squared' → logprob: -12.000950813293457

Token 170: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.00011856284982059151
    2. 'quare' → logprob: -9.750118255615234
    3. 'qu' → logprob: -10.500118255615234
    4. 'qua' → logprob: -10.875118255615234
    5. '```' → logprob: -12.875118255615234
    6. '``' → logprob: -13.250118255615234
    7. 'q' → logprob: -13.500118255615234
    8. '_' → logprob: -14.125118255615234
    9. 'ub' → logprob: -14.125118255615234
    10. '

' → logprob: -14.250118255615234

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06464222073554993
    2. '(' → logprob: -2.8146421909332275
    3. ' (' → logprob: -5.939642429351807
    4. '(
' → logprob: -10.939641952514648
    5. 'self' → logprob: -11.564641952514648
    6. '(s' → logprob: -12.564641952514648
    7. '   ' → logprob: -12.564641952514648
    8. ' ' → logprob: -13.689641952514648
    9. ' self' → logprob: -13.814641952514648
    10. '       ' → logprob: -14.814641952514648

Token 172: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6593044996261597
    2. '):' → logprob: -0.7843044996261597
    3. '):
' → logprob: -3.909304618835449
    4. 'self' → logprob: -5.409304618835449
    5. '(self' → logprob: -7.159304618835449
    6. ' ):' → logprob: -7.784304618835449
    7. ' ,' → logprob: -7.909304618835449
    8. '   ' → logprob: -8.90930461883545
    9. '       ' → logprob: -10.40930461883545
    10. ' self' → logprob: -10.78430461883545

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009938708506524563
    2. '
' → logprob: -5.009938716888428
    3. '(' → logprob: -6.134938716888428
    4. 'n' → logprob: -8.38493824005127
    5. '        
' → logprob: -8.38493824005127
    6. '\' → logprob: -8.50993824005127
    7. '```' → logprob: -9.50993824005127
    8. '\n' → logprob: -9.75993824005127
    9. '()' → logprob: -10.00993824005127
    10. '(
' → logprob: -10.25993824005127

Token 174: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3942832946777344
    2. 'n' → logprob: -1.8942832946777344
    3. '       ' → logprob: -2.8942832946777344
    4. 'total' → logprob: -3.0192832946777344
    5. ' count' → logprob: -3.2692832946777344
    6. ' total' → logprob: -4.144283294677734
    7. ' n' → logprob: -4.394283294677734
    8. 'result' → logprob: -5.519283294677734
    9. ' result' → logprob: -7.269283294677734
    10. 'size' → logprob: -9.394283294677734

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032296369317919016
    2. '=' → logprob: -5.75322961807251
    3. ' ' → logprob: -10.628230094909668
    4. 's' → logprob: -11.003230094909668
    5. '_' → logprob: -11.503230094909668
    6. '  ' → logprob: -14.628230094909668
    7. '   ' → logprob: -16.12822914123535
    8. ' =
' → logprob: -16.50322914123535
    9. ' +=' → logprob: -16.50322914123535
    10. ' ' → logprob: -16.50322914123535

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020667314529419
    2. ' ' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.10020637512207
    4. '   ' → logprob: -18.97520637512207
    5. '1' → logprob: -20.10020637512207
    6. ' 
' → logprob: -20.35020637512207
    7. '       ' → logprob: -20.47520637512207
    8. '
' → logprob: -21.10020637512207
    9. '```' → logprob: -21.22520637512207
    10. 'int' → logprob: -21.60020637512207

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.25002670288086
    4. '  ' → logprob: -18.81252670288086
    5. ' ' → logprob: -18.93752670288086
    6. '۰' → logprob: -19.37502670288086
    7. 'sum' → logprob: -19.43752670288086
    8. '```' → logprob: -19.68752670288086
    9. '{' → logprob: -20.00002670288086
    10. '０' → logprob: -20.06252670288086

Token 178: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0182790607213974
    2. '       ' → logprob: -4.018279075622559
    3. '        
' → logprob: -9.268279075622559
    4. '
' → logprob: -10.768279075622559
    5. ' 
' → logprob: -13.143279075622559
    6. '  
' → logprob: -13.143279075622559
    7. ' for' → logprob: -13.268279075622559
    8. '    
' → logprob: -13.268279075622559
    9. ',' → logprob: -13.393279075622559
    10. '\n' → logprob: -13.643279075622559

Token 179: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023787387181073427
    2. '       ' → logprob: -6.127378940582275
    3. '        
' → logprob: -9.627378463745117
    4. '
' → logprob: -10.252378463745117
    5. ' 
' → logprob: -10.377378463745117
    6. '\n' → logprob: -10.877378463745117
    7. '  
' → logprob: -11.252378463745117
    8. '    
' → logprob: -11.752378463745117
    9. '<|end|>' → logprob: -12.252378463745117
    10. '' → logprob: -12.502378463745117

Token 180: ' max' (ID: 2999)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6921843886375427
    2. ' n' → logprob: -1.3171844482421875
    3. ' for' → logprob: -2.1921844482421875
    4. 'for' → logprob: -2.6921844482421875
    5. '       ' → logprob: -3.0671844482421875
    6. ' max' → logprob: -6.4421844482421875
    7. ' size' → logprob: -6.8171844482421875
    8. 'size' → logprob: -7.3171844482421875
    9. ' side' → logprob: -7.5671844482421875
    10. 'max' (adapté à ' max') → logprob: -7.8171844482421875

Token 181: '_size' (ID: 5044)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.6842327117919922
    2. '_side' → logprob: -1.3092327117919922
    3. '_size' → logprob: -2.184232711791992
    4. '_length' → logprob: -2.434232711791992
    5. '_square' → logprob: -4.684232711791992
    6. '_' → logprob: -4.809232711791992
    7. '_vert' → logprob: -6.059232711791992
    8. '_vertical' → logprob: -6.684232711791992
    9. '_horizontal' → logprob: -6.934232711791992
    10. '_h' → logprob: -7.059232711791992

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001559258671477437
    2. '=' → logprob: -6.501559257507324
    3. '_' → logprob: -10.376559257507324
    4. ' ' → logprob: -10.751559257507324
    5. 's' → logprob: -13.501559257507324
    6. '_index' → logprob: -14.126559257507324
    7. '_idx' → logprob: -14.751559257507324
    8. ' =
' → logprob: -15.251559257507324
    9. 'x' → logprob: -15.501559257507324
    10. '_len' → logprob: -15.751559257507324

Token 183: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.693480908870697
    2. 'min' → logprob: -0.693480908870697
    3. ' self' → logprob: -8.693480491638184
    4. 'self' → logprob: -8.818480491638184
    5. '	min' → logprob: -11.818480491638184
    6. 'len' → logprob: -12.818480491638184
    7. '(min' → logprob: -13.318480491638184
    8. ' len' → logprob: -13.443480491638184
    9. 'max' → logprob: -13.568480491638184
    10. ' max' → logprob: -14.068480491638184

Token 184: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1622922718524933
    2. '(' → logprob: -1.912292242050171
    3. '(
' → logprob: -6.53729248046875
    4. '(len' → logprob: -7.41229248046875
    5. '(

' → logprob: -11.28729248046875
    6. ' (' → logprob: -14.78729248046875
    7. '(s' → logprob: -14.91229248046875
    8. 'self' → logprob: -15.78729248046875
    9. '(
' → logprob: -15.91229248046875
    10. '((' → logprob: -16.03729248046875

Token 185: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.023616960272192955
    2. '.horizontal' → logprob: -3.7736170291900635
    3. '.' → logprob: -8.523616790771484
    4. 'vertical' → logprob: -9.148616790771484
    5. ' .' → logprob: -9.773616790771484
    6. ' vertical' → logprob: -12.648616790771484
    7. 'horizontal' → logprob: -13.898616790771484
    8. '_vertical' → logprob: -14.023616790771484
    9. ').' → logprob: -14.148616790771484
    10. ' ' → logprob: -14.273616790771484

Token 186: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00018387178715784103
    2. ' .' → logprob: -9.250184059143066
    3. '().' → logprob: -9.500184059143066
    4. '.' → logprob: -11.875184059143066
    5. 'ength' → logprob: -12.625184059143066
    6. '.count' → logprob: -14.250184059143066
    7. '.size' → logprob: -14.250184059143066
    8. '.len' → logprob: -15.250184059143066
    9. ').' → logprob: -15.375184059143066
    10. '.height' → logprob: -15.625184059143066

Token 187: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.00021045419271104038
    2. '()' → logprob: -9.000210762023926
    3. ' (),' → logprob: -9.500210762023926
    4. '(),
' → logprob: -11.875210762023926
    5. ',' → logprob: -12.875210762023926
    6. '(),

' → logprob: -13.750210762023926
    7. '(' → logprob: -15.000210762023926
    8. '())' → logprob: -15.125210762023926
    9. '(),"' → logprob: -15.500210762023926
    10. '()
' → logprob: -15.750210762023926

Token 188: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.026322366669774055
    2. 'self' → logprob: -3.651322364807129
    3. ' ' → logprob: -11.401322364807129
    4. '	self' → logprob: -12.526322364807129
    5. '(self' → logprob: -13.026322364807129
    6. '       ' → logprob: -13.401322364807129
    7. '   ' → logprob: -13.776322364807129
    8. '    ' → logprob: -14.026322364807129
    9. '        ' → logprob: -14.651322364807129
    10. ')' → logprob: -15.151322364807129

Token 189: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -0.0026548474561423063
    2. '.' → logprob: -6.002655029296875
    3. '.vertical' → logprob: -9.252655029296875
    4. ' .' → logprob: -9.752655029296875
    5. 'horizontal' → logprob: -10.752655029296875
    6. '.
' → logprob: -14.252655029296875
    7. ' horizontal' → logprob: -14.252655029296875
    8. '.Horizontal' → logprob: -14.752655029296875
    9. ').' → logprob: -14.752655029296875
    10. '   ' → logprob: -15.127655029296875

Token 190: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.003994342405349016
    2. '().' → logprob: -5.628994464874268
    3. ' .' → logprob: -8.37899398803711
    4. '.' → logprob: -9.50399398803711
    5. ')' → logprob: -9.87899398803711
    6. '())' → logprob: -11.37899398803711
    7. ').' → logprob: -12.12899398803711
    8. '()' → logprob: -12.25399398803711
    9. 'length' → logprob: -12.62899398803711
    10. ' length' → logprob: -13.00399398803711

Token 191: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023695308715105057
    2. '()' → logprob: -3.773695230484009
    3. '())
' → logprob: -8.02369499206543
    4. ' ())' → logprob: -9.64869499206543
    5. ')' → logprob: -10.27369499206543
    6. '()
' → logprob: -11.02369499206543
    7. '())

' → logprob: -13.52369499206543
    8. '();)' → logprob: -13.77369499206543
    9. '()-' → logprob: -14.27369499206543
    10. '(),' → logprob: -14.39869499206543

Token 192: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23020039498806
    2. '       ' → logprob: -1.6052004098892212
    3. ' for' → logprob: -6.105200290679932
    4. '        
' → logprob: -6.855200290679932
    5. ' 
' → logprob: -7.605200290679932
    6. '\n' → logprob: -7.730200290679932
    7. '  
' → logprob: -8.60520076751709
    8. '<|end|>' → logprob: -9.23020076751709
    9. '
' → logprob: -9.73020076751709
    10. ')' → logprob: -10.10520076751709

Token 193: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029265882447361946
    2. ' for' → logprob: -4.029265880584717
    3. ' 
' → logprob: -5.029265880584717
    4. '       ' → logprob: -5.779265880584717
    5. '\n' → logprob: -7.279265880584717
    6. 'for' → logprob: -8.404266357421875
    7. '        
' → logprob: -8.404266357421875
    8. '  
' → logprob: -8.779266357421875
    9. '
' → logprob: -10.029266357421875
    10. ' ' → logprob: -10.279266357421875

Token 194: '_len' (ID: 13683)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6782094240188599
    2. 'for' → logprob: -0.8032094240188599
    3. '   ' → logprob: -3.6782093048095703
    4. ' ' → logprob: -5.05320930480957
    5. 'ert' → logprob: -5.30320930480957
    6. 'al' → logprob: -6.30320930480957
    7. '       ' → logprob: -6.55320930480957
    8. 'i' → logprob: -6.92820930480957
    9. 'or' → logprob: -7.42820930480957
    10. '	for' → logprob: -7.67820930480957

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6730425953865051
    2. '=' → logprob: -1.4230425357818604
    3. '()' → logprob: -2.0480425357818604
    4. '       ' → logprob: -3.2980425357818604
    5. ')' → logprob: -3.7980425357818604
    6. ' ' → logprob: -4.4230427742004395
    7. ',' → logprob: -4.6730427742004395
    8. '        ' → logprob: -5.0480427742004395
    9. '   ' → logprob: -5.0480427742004395
    10. '    ' → logprob: -5.7980427742004395

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2265055924654007
    2. ' self' → logprob: -1.6015056371688843
    3. 'len' → logprob: -7.101505756378174
    4. ' len' → logprob: -8.476505279541016
    5. ' ' → logprob: -10.726505279541016
    6. '       ' → logprob: -11.226505279541016
    7. '   ' → logprob: -11.601505279541016
    8. '
' → logprob: -12.476505279541016
    9. '    ' → logprob: -12.976505279541016
    10. '(self' → logprob: -13.101505279541016

Token 197: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.0003546502848621458
    2. 'vertical' → logprob: -8.000354766845703
    3. '.' → logprob: -11.250354766845703
    4. '.horizontal' → logprob: -12.500354766845703
    5. 'ert' → logprob: -14.125354766845703
    6. '.vert' → logprob: -14.625354766845703
    7. '_vertical' → logprob: -15.125354766845703
    8. ' .' → logprob: -15.500354766845703
    9. '.length' → logprob: -15.625354766845703
    10. 'ERTICAL' → logprob: -15.875354766845703

Token 198: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.4259644558478612e-05
    2. ' .' → logprob: -11.375014305114746
    3. '.' → logprob: -13.875014305114746
    4. '.count' → logprob: -14.875014305114746
    5. '.segment' → logprob: -14.875014305114746
    6. '.prefix' → logprob: -15.125014305114746
    7. '.size' → logprob: -15.250014305114746
    8. '.len' → logprob: -15.875014305114746
    9. 'length' → logprob: -16.25001335144043
    10. '.LENGTH' → logprob: -16.25001335144043

Token 199: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00104305159766227
    2. '()
' → logprob: -6.87604284286499
    3. ' ()' → logprob: -11.876043319702148
    4. '()

' → logprob: -13.751043319702148
    5. '()
' → logprob: -14.001043319702148
    6. '()`' → logprob: -14.876043319702148
    7. '()>' → logprob: -15.126043319702148
    8. '()"' → logprob: -15.501043319702148
    9. '()-' → logprob: -16.00104331970215
    10. '())' → logprob: -16.37604331970215

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012501158053055406
    2. 'h' → logprob: -7.001250267028809
    3. ' for' → logprob: -9.126250267028809
    4. ',' → logprob: -9.376250267028809
    5. ' h' → logprob: -10.001250267028809
    6. ' and' → logprob: -11.001250267028809
    7. ' ' → logprob: -11.251250267028809
    8. '        
' → logprob: -11.251250267028809
    9. ',h' → logprob: -11.251250267028809
    10. 'for' → logprob: -11.376250267028809

Token 201: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.04880877211689949
    2. ' h' → logprob: -3.1738088130950928
    3. '       ' → logprob: -5.173808574676514
    4. 'for' → logprob: -9.548809051513672
    5. ' for' → logprob: -10.923809051513672
    6. '   ' → logprob: -11.048809051513672
    7. '	h' → logprob: -12.048809051513672
    8. ' ' → logprob: -12.298809051513672
    9. 'v' → logprob: -12.423809051513672
    10. 'hh' → logprob: -13.173809051513672

Token 202: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.004307872150093317
    2. 'ength' → logprob: -6.129307746887207
    3. 'length' → logprob: -7.004307746887207
    4. '_length' → logprob: -7.629307746887207
    5. 'len' → logprob: -7.879307746887207
    6. '.len' → logprob: -9.254307746887207
    7. '.length' → logprob: -9.379307746887207
    8. ' =' → logprob: -9.879307746887207
    9. '   ' → logprob: -10.754307746887207
    10. '       ' → logprob: -11.004307746887207

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889165729284286
    2. '=' → logprob: -2.5788917541503906
    3. '       ' → logprob: -14.32889175415039
    4. ' ' → logprob: -14.32889175415039
    5. '        ' → logprob: -14.57889175415039
    6. ' =
' → logprob: -15.95389175415039
    7. '    ' → logprob: -16.95389175415039
    8. '   ' → logprob: -17.07889175415039
    9. ',' → logprob: -17.20389175415039
    10. ')' → logprob: -17.57889175415039

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04860224947333336
    2. ' self' → logprob: -3.048602342605591
    3. '       ' → logprob: -11.798602104187012
    4. '(self' → logprob: -13.173602104187012
    5. ' ' → logprob: -13.298602104187012
    6. '   ' → logprob: -14.048602104187012
    7. '	self' → logprob: -14.298602104187012
    8. '           ' → logprob: -14.923602104187012
    9. '        ' → logprob: -15.048602104187012
    10. 's' → logprob: -15.173602104187012

Token 205: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -0.13690178096294403
    2. 'orizontal' → logprob: -2.13690185546875
    3. 'horizontal' → logprob: -4.63690185546875
    4. '.length' → logprob: -8.63690185546875
    5. ' horizontal' → logprob: -10.88690185546875
    6. 'length' → logprob: -11.01190185546875
    7. '_horizontal' → logprob: -11.76190185546875
    8. '   ' → logprob: -12.38690185546875
    9. 'Horizontal' → logprob: -13.26190185546875
    10. 'oriz' → logprob: -13.38690185546875

Token 206: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0007325552869588137
    2. '()' → logprob: -7.750732421875
    3. '().' → logprob: -8.500732421875
    4. '.' → logprob: -9.625732421875
    5. 'length' → logprob: -10.750732421875
    6. '()
' → logprob: -12.625732421875
    7. ' .' → logprob: -12.750732421875
    8. '.count' → logprob: -14.000732421875
    9. ' length' → logprob: -14.125732421875
    10. 'ength' → logprob: -14.375732421875

Token 207: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000932421418838203
    2. '()
' → logprob: -7.000932216644287
    3. '())' → logprob: -12.125932693481445
    4. '()

' → logprob: -12.125932693481445
    5. ')' → logprob: -12.500932693481445
    6. '()>' → logprob: -13.250932693481445
    7. '(' → logprob: -13.750932693481445
    8. '()<' → logprob: -14.250932693481445
    9. '()]' → logprob: -14.875932693481445
    10. '()+' → logprob: -14.875932693481445

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038778618909418583
    2. ' for' → logprob: -6.128877639770508
    3. '
' → logprob: -6.878877639770508
    4. 'for' → logprob: -7.503877639770508
    5. '   ' → logprob: -10.128877639770508
    6. '<|end|>' → logprob: -10.378877639770508
    7. '        
' → logprob: -11.003877639770508
    8. '```' → logprob: -11.628877639770508
    9. '	for' → logprob: -12.503877639770508
    10. ',' → logprob: -13.253877639770508

Token 209: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5239539742469788
    2. ' for' → logprob: -1.023953914642334
    3. '       ' → logprob: -3.023953914642334
    4. '
' → logprob: -10.898954391479492
    5. '```' → logprob: -11.398954391479492
    6. '   ' → logprob: -11.773954391479492
    7. '        
' → logprob: -12.273954391479492
    8. '	for' → logprob: -13.273954391479492
    9. ' ' → logprob: -14.273954391479492
    10. ' 
' → logprob: -16.523954391479492

Token 210: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31533145904541016
    2. ' for' → logprob: -1.3153314590454102
    3. '       ' → logprob: -6.19033145904541
    4. '   ' → logprob: -11.56533145904541
    5. '```' → logprob: -12.31533145904541
    6. ' ' → logprob: -13.94033145904541
    7. '        ' → logprob: -13.94033145904541
    8. '
' → logprob: -14.06533145904541
    9. '	for' → logprob: -14.69033145904541
    10. '        
' → logprob: -15.19033145904541

Token 211: ' each' (ID: 2454)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6557474732398987
    2. ' size' → logprob: -1.030747413635254
    3. ' side' → logprob: -2.780747413635254
    4. 'side' → logprob: -3.530747413635254
    5. ' square' → logprob: -4.905747413635254
    6. 'square' → logprob: -4.905747413635254
    7. 'v' → logprob: -5.280747413635254
    8. 'i' → logprob: -5.405747413635254
    9. ' v' → logprob: -6.280747413635254
    10. ' i' → logprob: -6.655747413635254

Token 212: ' possible' (ID: 4149)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8187819719314575
    2. ' size' → logprob: -1.6937819719314575
    3. 'square' → logprob: -2.443781852722168
    4. ' square' → logprob: -2.693781852722168
    5. ' side' → logprob: -2.693781852722168
    6. 'side' → logprob: -2.818781852722168
    7. 'i' → logprob: -3.693781852722168
    8. 'segment' → logprob: -4.568781852722168
    9. 'v' → logprob: -4.693781852722168
    10. ' vertical' → logprob: -4.943781852722168

Token 213: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.9822984933853149
    2. 'size' → logprob: -1.232298493385315
    3. ' square' → logprob: -1.732298493385315
    4. 'side' → logprob: -3.1072983741760254
    5. 'start' → logprob: -3.3572983741760254
    6. ' size' → logprob: -3.3572983741760254
    7. ' side' → logprob: -4.107298374176025
    8. ' start' → logprob: -4.732298374176025
    9. 'segment' → logprob: -5.607298374176025
    10. 'vertical' → logprob: -5.732298374176025

Token 214: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.062077928334474564
    2. ' size' → logprob: -2.9370779991149902
    3. 'side' → logprob: -5.43707799911499
    4. '_size' → logprob: -6.18707799911499
    5. ' side' → logprob: -7.43707799911499
    6. '       ' → logprob: -9.812077522277832
    7. '   ' → logprob: -10.312077522277832
    8. ',' → logprob: -10.437077522277832
    9. '
' → logprob: -10.812077522277832
    10. '_side' → logprob: -11.562077522277832

Token 215: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2643464505672455
    2. ':' → logprob: -1.7643464803695679
    3. ':
' → logprob: -4.139346599578857
    4. ',
' → logprob: -4.264346599578857
    5. '
' → logprob: -4.389346599578857
    6. '       ' → logprob: -4.514346599578857
    7. ' ,' → logprob: -6.389346599578857
    8. ' (' → logprob: -6.889346599578857
    9. ' in' → logprob: -7.389346599578857
    10. '\n' → logprob: -7.389346599578857

Token 216: 'length' (ID: 7914)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.39907994866371155
    2. ' size' → logprob: -1.5240799188613892
    3. '1' → logprob: -2.6490800380706787
    4. 's' → logprob: -4.5240797996521
    5. ' s' → logprob: -4.6490797996521
    6. 'side' → logprob: -5.1490797996521
    7. ' side' → logprob: -5.2740797996521
    8. ')' → logprob: -5.8990797996521
    9. ' ' → logprob: -6.0240797996521
    10. 'k' → logprob: -6.6490797996521

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.4732146263122559
    2. '=' → logprob: -1.8482146263122559
    3. '):' → logprob: -1.8482146263122559
    4. '+' → logprob: -1.9732146263122559
    5. ' =' → logprob: -2.098214626312256
    6. ' +' → logprob: -2.723214626312256
    7. ')' → logprob: -2.973214626312256
    8. '):
' → logprob: -3.848214626312256
    9. 'in' → logprob: -4.348214626312256
    10. 'from' → logprob: -4.598214626312256

Token 218: ' edges' (ID: 22569)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.22533857822418213
    2. ' segments' → logprob: -2.3503384590148926
    3. 'range' → logprob: -3.1003384590148926
    4. ' range' → logprob: -3.8503384590148926
    5. 'edges' → logprob: -4.350338459014893
    6. '1' → logprob: -4.475338459014893
    7. ' edges' → logprob: -4.850338459014893
    8. '[' → logprob: -5.475338459014893
    9. ' ' → logprob: -6.850338459014893
    10. ' [' → logprob: -7.975338459014893

Token 219: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33305248618125916
    2. '):
' → logprob: -1.3330525159835815
    3. '+' → logprob: -4.708052635192871
    4. '       ' → logprob: -6.333052635192871
    5. ' ):' → logprob: -6.333052635192871
    6. ')' → logprob: -6.458052635192871
    7. ' +' → logprob: -6.458052635192871
    8. ' ):
' → logprob: -6.833052635192871
    9. '=' → logprob: -6.958052635192871
    10. '),' → logprob: -7.583052635192871

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018218660727143288
    2. ' for' → logprob: -4.268218517303467
    3. ',' → logprob: -6.393218517303467
    4. ' ' → logprob: -7.643218517303467
    5. '        
' → logprob: -8.018218994140625
    6. '   ' → logprob: -8.143218994140625
    7. '
' → logprob: -8.268218994140625
    8. '        ' → logprob: -8.518218994140625
    9. '<|end|>' → logprob: -8.643218994140625
    10. '  
' → logprob: -8.893218994140625

Token 221: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6300311088562012
    2. ' for' → logprob: -1.1300311088562012
    3. '
' → logprob: -2.505031108856201
    4. '\n' → logprob: -3.255031108856201
    5. 'for' (adapté à ' for') → logprob: -4.005031108856201
    6. ' 
' → logprob: -5.755031108856201
    7. '        
' → logprob: -7.005031108856201
    8. '\' → logprob: -7.380031108856201
    9. '   ' → logprob: -8.13003158569336
    10. '  
' → logprob: -8.25503158569336

Token 222: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.4323795437812805
    2. 'size' → logprob: -1.0573794841766357
    3. ' square' → logprob: -6.307379722595215
    4. 'square' → logprob: -7.057379722595215
    5. ' side' → logprob: -7.682379722595215
    6. 'side' → logprob: -8.432379722595215
    7. ' s' → logprob: -9.807379722595215
    8. ' sz' → logprob: -9.932379722595215
    9. ' ' → logprob: -9.932379722595215
    10. 's' → logprob: -10.807379722595215

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02351880446076393
    2. 'in' → logprob: -3.7735188007354736
    3. ' ' → logprob: -8.273518562316895
    4. '1' → logprob: -12.523518562316895
    5. 's' → logprob: -13.023518562316895
    6. ',' → logprob: -13.398518562316895
    7. '_in' → logprob: -13.648518562316895
    8. '```' → logprob: -13.648518562316895
    9. 'space' → logprob: -13.648518562316895
    10. 'In' → logprob: -13.898518562316895

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759923458099365
    2. ' range' → logprob: -0.8259923458099365
    3. ' ' → logprob: -10.325992584228516
    4. '	range' → logprob: -11.825992584228516
    5. '   ' → logprob: -12.075992584228516
    6. '(range' → logprob: -12.325992584228516
    7. '  ' → logprob: -13.700992584228516
    8. ' xrange' → logprob: -14.950992584228516
    9. ')' → logprob: -15.325992584228516
    10. '1' → logprob: -15.450992584228516

Token 225: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -13.375001907348633
    3. ' (' → logprob: -16.500001907348633
    4. '(
' → logprob: -17.875001907348633
    5. '   ' → logprob: -20.750001907348633
    6. ' ' → logprob: -21.000001907348633
    7. '(max' → logprob: -21.000001907348633
    8. '	' → logprob: -22.125001907348633
    9. ',' → logprob: -23.125001907348633
    10. '(

' → logprob: -23.250001907348633

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.114600834436715e-05
    2. ' ' → logprob: -9.500091552734375
    3. '   ' → logprob: -11.750091552734375
    4. 'max' → logprob: -12.375091552734375
    5. '0' → logprob: -13.125091552734375
    6. '(' → logprob: -13.625091552734375
    7. '
' → logprob: -15.250091552734375
    8. '       ' → logprob: -15.875091552734375
    9. '           ' → logprob: -16.375091552734375
    10. 'min' → logprob: -16.500091552734375

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000491672137286514
    2. ' ,' → logprob: -7.625491619110107
    3. ',
' → logprob: -12.875492095947266
    4. ',max' → logprob: -14.625492095947266
    5. '   ' → logprob: -15.625492095947266
    6. ',v' → logprob: -15.750492095947266
    7. ',len' → logprob: -16.500492095947266
    8. '),' → logprob: -16.500492095947266
    9. '):
' → logprob: -16.750492095947266
    10. '       ' → logprob: -17.000492095947266

Token 228: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078758880496025
    2. ' max' → logprob: -5.5040788650512695
    3. 'min' → logprob: -16.004077911376953
    4. '	max' → logprob: -16.379077911376953
    5. '[max' → logprob: -17.004077911376953
    6. '(max' → logprob: -17.129077911376953
    7. '   ' → logprob: -18.379077911376953
    8. '=max' → logprob: -18.754077911376953
    9. '```' → logprob: -18.879077911376953
    10. '_max' → logprob: -20.004077911376953

Token 229: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.750006675720215
    3. '_s' → logprob: -13.375006675720215
    4. ' _' → logprob: -14.000006675720215
    5. 'size' → logprob: -14.500006675720215
    6. '(size' → logprob: -15.875006675720215
    7. '+' → logprob: -15.875006675720215
    8. ')' → logprob: -15.875006675720215
    9. '(_' → logprob: -15.875006675720215
    10. '   ' → logprob: -16.37500762939453

Token 230: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5775332450866699
    2. '+' → logprob: -0.8275332450866699
    3. '):' → logprob: -6.57753324508667
    4. '):
' → logprob: -8.577533721923828
    5. ' ):' → logprob: -12.327533721923828
    6. '+:' → logprob: -13.202533721923828
    7. '   ' → logprob: -13.327533721923828
    8. ' ' → logprob: -13.327533721923828
    9. '+
' → logprob: -13.577533721923828
    10. ' +
' → logprob: -14.327533721923828

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '
' → logprob: -14.62548828125
    4. '   ' → logprob: -15.62548828125
    5. ')' → logprob: -17.37548828125
    6. '```' → logprob: -17.37548828125
    7. '):
' → logprob: -18.12548828125
    8. '

' → logprob: -19.06298828125
    9. '(' → logprob: -19.56298828125
    10. '       ' → logprob: -19.68798828125

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.5000057220459
    4. ')' → logprob: -19.0000057220459
    5. '
' → logprob: -19.3750057220459
    6. '):
' → logprob: -20.0000057220459
    7. '```' → logprob: -21.0000057220459
    8. '           ' → logprob: -21.6250057220459
    9. '2' → logprob: -21.7500057220459
    10. '       ' → logprob: -21.7500057220459

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049723751842975616
    2. '):
' → logprob: -3.5497238636016846
    3. ':' → logprob: -3.9247238636016846
    4. ':
' → logprob: -11.674723625183105
    5. '       ' → logprob: -12.049723625183105
    6. '):
' → logprob: -12.424723625183105
    7. ' ):' → logprob: -12.549723625183105
    8. ')' → logprob: -13.424723625183105
    9. ' :' → logprob: -13.674723625183105
    10. '   ' → logprob: -13.924723625183105

Token 234: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0835543870925903
    2. '       ' → logprob: -1.0835543870925903
    3. '           ' → logprob: -2.083554267883301
    4. '<|end|>' → logprob: -2.583554267883301
    5. '        
' → logprob: -2.708554267883301
    6. '  
' → logprob: -4.458554267883301
    7. ':' → logprob: -4.583554267883301
    8. '<|end|>' → logprob: -4.958554267883301
    9. ' 
' → logprob: -5.583554267883301
    10. '\' → logprob: -5.708554267883301

Token 235: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27871760725975037
    2. '           ' → logprob: -1.9037176370620728
    3. 'for' → logprob: -2.403717517852783
    4. '            ' → logprob: -6.153717517852783
    5. '               ' → logprob: -7.903717517852783
    6. ' 
' → logprob: -8.028717994689941
    7. '       ' → logprob: -8.403717994689941
    8. '
' → logprob: -8.528717994689941
    9. '            
' → logprob: -8.653717994689941
    10. ' ' → logprob: -8.778717994689941

Token 236: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40505245327949524
    2. ' for' → logprob: -1.1550524234771729
    3. '           ' → logprob: -4.030052661895752
    4. '#' → logprob: -9.030052185058594
    5. '            
' → logprob: -10.780052185058594
    6. ' ' → logprob: -11.030052185058594
    7. '   ' → logprob: -11.280052185058594
    8. '               ' → logprob: -11.280052185058594
    9. '```' → logprob: -11.280052185058594
    10. ' #' → logprob: -11.530052185058594

Token 237: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5575775504112244
    2. ' vertical' → logprob: -1.3075776100158691
    3. 'vertical' → logprob: -3.557577610015869
    4. 'all' → logprob: -3.682577610015869
    5. ' for' → logprob: -4.057577610015869
    6. ' the' → logprob: -4.432577610015869
    7. 'horizontal' → logprob: -4.557577610015869
    8. ' v' → logprob: -4.682577610015869
    9. ' horizontal' → logprob: -4.682577610015869
    10. ' squares' → logprob: -5.307577610015869

Token 238: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.3137349784374237
    2. 'horizontal' → logprob: -1.688735008239746
    3. ' vertical' → logprob: -3.063735008239746
    4. 'v' → logprob: -3.688735008239746
    5. 'h' → logprob: -5.563735008239746
    6. ' horizontal' → logprob: -5.813735008239746
    7. ' v' → logprob: -6.313735008239746
    8. 'vert' → logprob: -6.938735008239746
    9. '#' → logprob: -7.688735008239746
    10. 'segment' → logprob: -7.813735008239746

Token 239: ' side' (ID: 4307)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.649038314819336
    2. ' segments' → logprob: -2.024038314819336
    3. '_dist' → logprob: -2.274038314819336
    4. 'segments' → logprob: -2.399038314819336
    5. '_g' → logprob: -3.024038314819336
    6. '_positions' → logprob: -3.149038314819336
    7. 'dist' → logprob: -3.149038314819336
    8. ' positions' → logprob: -3.274038314819336
    9. '_segments' → logprob: -3.399038314819336
    10. ' distances' → logprob: -3.649038314819336

Token 240: ' lengths' (ID: 51957)
  Prédit: ' lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.575958788394928
    2. 'length' → logprob: -1.0759587287902832
    3. 's' → logprob: -2.950958728790283
    4. '_lengths' → logprob: -4.325958728790283
    5. ' length' → logprob: -4.950958728790283
    6. ' segments' → logprob: -5.575958728790283
    7. 'segments' → logprob: -5.575958728790283
    8. 'start' → logprob: -5.825958728790283
    9. ' distances' → logprob: -6.075958728790283
    10. '_length' → logprob: -6.200958728790283

Token 241: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1757001429796219
    2. ' for' → logprob: -3.3007001876831055
    3. ' at' → logprob: -3.8007001876831055
    4. ',' → logprob: -3.8007001876831055
    5. 's' → logprob: -4.3007001876831055
    6. '_lengths' → logprob: -4.3007001876831055
    7. ' =' → logprob: -4.5507001876831055
    8. ':' → logprob: -5.0507001876831055
    9. ' in' → logprob: -5.0507001876831055
    10. '            
' → logprob: -5.3007001876831055

Token 242: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2837924063205719
    2. ' size' → logprob: -2.283792495727539
    3. 'range' → logprob: -3.033792495727539
    4. 'vertical' → logprob: -3.533792495727539
    5. 'length' → logprob: -3.783792495727539
    6. 'self' → logprob: -4.033792495727539
    7. ' vertical' → logprob: -5.408792495727539
    8. ' range' → logprob: -5.533792495727539
    9. ' length' → logprob: -5.783792495727539
    10. 'v' → logprob: -6.283792495727539

Token 243: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20049560070037842
    2. 's' → logprob: -2.075495719909668
    3. ' for' → logprob: -4.075495719909668
    4. ' =' → logprob: -4.825495719909668
    5. 'for' → logprob: -5.325495719909668
    6. ',' → logprob: -5.575495719909668
    7. 'in' → logprob: -6.075495719909668
    8. ':' → logprob: -6.325495719909668
    9. 'positions' → logprob: -6.325495719909668
    10. '   ' → logprob: -6.450495719909668

Token 244: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0031398090068250895
    2. ' size' → logprob: -6.503139972686768
    3. ''' → logprob: -6.878139972686768
    4. '')' → logprob: -8.25313949584961
    5. 's' → logprob: -9.25313949584961
    6. ')' → logprob: -9.50313949584961
    7. ''s' → logprob: -10.25313949584961
    8. '
' → logprob: -10.37813949584961
    9. ''
' → logprob: -10.87813949584961
    10. 'segments' → logprob: -11.12813949584961

Token 245: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09042844921350479
    2. ''
' → logprob: -2.965428352355957
    3. ')'' → logprob: -3.965428352355957
    4. ' '' → logprob: -4.840428352355957
    5. ')'
' → logprob: -5.840428352355957
    6. ')' → logprob: -6.465428352355957
    7. 's' → logprob: -7.465428352355957
    8. ' '
' → logprob: -7.465428352355957
    9. ''s' → logprob: -7.715428352355957
    10. ']'' → logprob: -7.965428352355957

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19933602213859558
    2. ':' → logprob: -2.324336051940918
    3. ' for' → logprob: -3.449336051940918
    4. '<|end|>' → logprob: -4.324336051940918
    5. ',' → logprob: -4.824336051940918
    6. ' in' → logprob: -5.574336051940918
    7. ' ' → logprob: -5.824336051940918
    8. '
' → logprob: -5.949336051940918
    9. '            
' → logprob: -5.949336051940918
    10. '  
' → logprob: -6.199336051940918

Token 247: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.42107388377189636
    2. ' v' → logprob: -2.4210739135742188
    3. '           ' → logprob: -2.4210739135742188
    4. 'vertical' (adapté à ' vertical') → logprob: -2.6710739135742188
    5. 'v' → logprob: -3.2960739135742188
    6. ' vert' → logprob: -3.5460739135742188
    7. 'vert' → logprob: -4.421073913574219
    8. ' side' → logprob: -5.046073913574219
    9. ' sides' → logprob: -6.421073913574219
    10. ' vertically' → logprob: -6.546073913574219

Token 248: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.6050500273704529
    2. '_s' → logprob: -1.1050500869750977
    3. '_side' → logprob: -2.6050500869750977
    4. '_segments' → logprob: -3.9800500869750977
    5. '_edges' → logprob: -4.355050086975098
    6. 's' → logprob: -4.605050086975098
    7. '_positions' → logprob: -6.730050086975098
    8. '_sizes' → logprob: -6.855050086975098
    9. '_dist' → logprob: -7.105050086975098
    10. '_set' → logprob: -7.355050086975098

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0037487715017050505
    2. '=' → logprob: -5.628748893737793
    3. '_set' → logprob: -10.503748893737793
    4. '=set' → logprob: -10.628748893737793
    5. '_lengths' → logprob: -10.628748893737793
    6. 's' → logprob: -10.878748893737793
    7. '=[]' → logprob: -10.878748893737793
    8. '   ' → logprob: -11.378748893737793
    9. '_values' → logprob: -12.253748893737793
    10. '_positions' → logprob: -13.128748893737793

Token 250: ' set' (ID: 920)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1480662822723389
    2. '[' → logprob: -1.2730662822723389
    3. 'set' → logprob: -1.5230662822723389
    4. '[]' → logprob: -2.273066282272339
    5. ' [' → logprob: -3.273066282272339
    6. '[]
' → logprob: -4.398066520690918
    7. ' set' → logprob: -4.773066520690918
    8. ' []' → logprob: -5.023066520690918
    9. '[
' → logprob: -5.148066520690918
    10. '{' → logprob: -5.273066520690918

Token 251: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16148550808429718
    2. '()
' → logprob: -2.286485433578491
    3. '(
' → logprob: -3.411485433578491
    4. '(' → logprob: -4.53648567199707
    5. '(self' → logprob: -6.41148567199707
    6. '([' → logprob: -6.41148567199707
    7. '([
' → logprob: -8.41148567199707
    8. '()

' → logprob: -8.53648567199707
    9. '(v' → logprob: -11.03648567199707
    10. '(

' → logprob: -11.66148567199707

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1044139638543129
    2. ' for' → logprob: -3.2294139862060547
    3. '       ' → logprob: -3.8544139862060547
    4. 'for' → logprob: -4.604413986206055
    5. '<|end|>' → logprob: -5.104413986206055
    6. '            
' → logprob: -5.604413986206055
    7. ' ' → logprob: -6.104413986206055
    8. '            ' → logprob: -6.104413986206055
    9. ')' → logprob: -6.354413986206055
    10. '        
' → logprob: -6.729413986206055

Token 253: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7408348917961121
    2. ' for' → logprob: -0.8658348917961121
    3. 'for' (adapté à ' for') → logprob: -2.740834951400757
    4. '       ' → logprob: -3.365834951400757
    5. '<|end|>' → logprob: -6.115834712982178
    6. '        ' → logprob: -8.240835189819336
    7. '	       ' → logprob: -8.615835189819336
    8. ' ' → logprob: -8.615835189819336
    9. '   ' → logprob: -8.865835189819336
    10. ')' → logprob: -9.365835189819336

Token 254: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7981693744659424
    2. ' start' → logprob: -1.2981693744659424
    3. 'i' → logprob: -2.1731693744659424
    4. 'v' → logprob: -2.4231693744659424
    5. ' i' → logprob: -3.0481693744659424
    6. ' v' → logprob: -3.6731693744659424
    7. 'vi' → logprob: -7.173169136047363
    8. '   ' → logprob: -8.048169136047363
    9. ' vi' → logprob: -8.798169136047363
    10. 'j' → logprob: -9.798169136047363

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030937964096665382
    2. 'in' → logprob: -3.530937910079956
    3. ' ' → logprob: -6.780938148498535
    4. 'n' → logprob: -10.905938148498535
    5. '	in' → logprob: -11.155938148498535
    6. 'space' → logprob: -12.405938148498535
    7. '<|end|>' → logprob: -12.905938148498535
    8. ')' → logprob: -13.530938148498535
    9. '	' → logprob: -13.530938148498535
    10. ',' → logprob: -14.030938148498535

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408005595207214
    2. ' range' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.599080085754395
    4. '	range' → logprob: -13.974080085754395
    5. '   ' → logprob: -14.849080085754395
    6. '(range' → logprob: -14.974080085754395
    7. 'ange' → logprob: -15.974080085754395
    8. '  ' → logprob: -16.349079132080078
    9. '    ' → logprob: -17.974079132080078
    10. '
' → logprob: -17.974079132080078

Token 257: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00038562860572710633
    2. '(' → logprob: -7.875385761260986
    3. 'v' → logprob: -12.875385284423828
    4. ' (' → logprob: -14.125385284423828
    5. ' v' → logprob: -14.250385284423828
    6. '(
' → logprob: -14.625385284423828
    7. '(vertical' → logprob: -15.125385284423828
    8. '(len' → logprob: -15.500385284423828
    9. '   ' → logprob: -15.750385284423828
    10. '((' → logprob: -16.625385284423828

Token 258: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.5776860184123507e-06
    2. 'len' → logprob: -13.62500286102295
    3. 'ert' → logprob: -15.00000286102295
    4. '_' → logprob: -15.25000286102295
    5. '_l' → logprob: -16.000001907348633
    6. ' _' → logprob: -16.250001907348633
    7. 'e' → logprob: -16.750001907348633
    8. '_LEN' → logprob: -16.750001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '__' → logprob: -17.625001907348633

Token 259: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018503302708268166
    2. '-' → logprob: -4.018503189086914
    3. ' ' → logprob: -8.393503189086914
    4. '   ' → logprob: -9.893503189086914
    5. '):
' → logprob: -10.018503189086914
    6. '-size' → logprob: -11.518503189086914
    7. '):' → logprob: -11.893503189086914
    8. ')' → logprob: -12.393503189086914
    9. '-length' → logprob: -12.893503189086914
    10. '       ' → logprob: -13.393503189086914

Token 260: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0380525141954422
    2. ' size' → logprob: -3.288052558898926
    3. '   ' → logprob: -12.538052558898926
    4. '(size' → logprob: -12.663052558898926
    5. '[size' → logprob: -13.538052558898926
    6. '	size' → logprob: -14.038052558898926
    7. '    ' → logprob: -14.413052558898926
    8. ' ' → logprob: -14.538052558898926
    9. 's' → logprob: -15.288052558898926
    10. '<size' → logprob: -15.788052558898926

Token 261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3133351504802704
    2. '+' → logprob: -1.3133351802825928
    3. '):
' → logprob: -10.063335418701172
    4. '):' → logprob: -11.063335418701172
    5. ' ' → logprob: -11.688335418701172
    6. '+
' → logprob: -13.688335418701172
    7. '   ' → logprob: -13.813335418701172
    8. ' ):
' → logprob: -13.813335418701172
    9. ' +
' → logprob: -13.938335418701172
    10. '    ' → logprob: -14.063335418701172

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.000431060791016
    4. '0' → logprob: -17.500431060791016
    5. '  ' → logprob: -17.875431060791016
    6. '
' → logprob: -18.125431060791016
    7. ')' → logprob: -18.750431060791016
    8. '```' → logprob: -18.750431060791016
    9. '    ' → logprob: -18.875431060791016
    10. '2' → logprob: -19.937931060791016

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. '0' → logprob: -18.250009536743164
    5. '
' → logprob: -18.375009536743164
    6. ')' → logprob: -18.500009536743164
    7. '```' → logprob: -18.562509536743164
    8. '  ' → logprob: -19.500009536743164
    9. '`' → logprob: -20.000009536743164
    10. '2' → logprob: -20.187509536743164

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2523975670337677
    2. '):
' → logprob: -1.5023975372314453
    3. ')' → logprob: -8.752397537231445
    4. '):
' → logprob: -9.127397537231445
    5. ' ):' → logprob: -9.127397537231445
    6. ' ):
' → logprob: -10.002397537231445
    7. ':' → logprob: -10.127397537231445
    8. '):

' → logprob: -12.877397537231445
    9. '   ' → logprob: -13.752397537231445
    10. '       ' → logprob: -14.252397537231445

Token 265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035448670387268066
    2. '           ' → logprob: -4.2854485511779785
    3. ' ' → logprob: -5.2854485511779785
    4. ':' → logprob: -5.4104485511779785
    5. '<|end|>' → logprob: -5.9104485511779785
    6. ' vertical' → logprob: -6.9104485511779785
    7. '            ' → logprob: -7.2854485511779785
    8. ')' → logprob: -7.2854485511779785
    9. ':
' → logprob: -7.4104485511779785
    10. '(vertical' → logprob: -7.6604485511779785

Token 266: ' length' (ID: 5517)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.14593614637851715
    2. 'vertical' → logprob: -2.0209362506866455
    3. '                   ' → logprob: -7.520936012268066
    4. ' 
' → logprob: -7.520936012268066
    5. '               ' → logprob: -7.770936012268066
    6. 'v' → logprob: -7.895936012268066
    7. ' ' → logprob: -8.145936012268066
    8. ' v' → logprob: -8.395936012268066
    9. '(vertical' → logprob: -8.770936012268066
    10. ' vert' → logprob: -9.520936012268066

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01604633405804634
    2. '=' → logprob: -4.141046524047852
    3. ' ' → logprob: -11.891046524047852
    4. '=self' → logprob: -13.391046524047852
    5. ')' → logprob: -13.641046524047852
    6. ' =
' → logprob: -14.016046524047852
    7. ' ' → logprob: -14.641046524047852
    8. 's' → logprob: -15.016046524047852
    9. 'self' → logprob: -15.391046524047852
    10. '_' → logprob: -16.39104652404785

Token 268: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693576514720917
    2. 'self' → logprob: -2.1269357204437256
    3. ' ' → logprob: -12.251935958862305
    4. '(self' → logprob: -13.876935958862305
    5. '	self' → logprob: -14.626935958862305
    6. ' ' → logprob: -14.751935958862305
    7. ' s' → logprob: -15.876935958862305
    8. '<|end|>' → logprob: -16.501935958862305
    9. 's' → logprob: -16.626935958862305
    10. ' 
' → logprob: -16.626935958862305

Token 269: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.20446211099624634
    2. '.segment' → logprob: -1.7044620513916016
    3. '.' → logprob: -6.204462051391602
    4. 'vertical' → logprob: -7.329462051391602
    5. '.prefix' → logprob: -8.204462051391602
    6. ' .' → logprob: -9.579462051391602
    7. 'segment' → logprob: -11.704462051391602
    8. ' vertical' → logprob: -12.329462051391602
    9. '.horizontal' → logprob: -12.829462051391602
    10. '.vert' → logprob: -13.579462051391602

Token 270: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -3.4881879400927573e-05
    2. 'segment' → logprob: -10.625035285949707
    3. ' .' → logprob: -11.750035285949707
    4. '.' → logprob: -13.125035285949707
    5. ' segment' → logprob: -14.625035285949707
    6. '.prefix' → logprob: -16.37503433227539
    7. '.seg' → logprob: -16.75003433227539
    8. '_segment' → logprob: -17.37503433227539
    9. '.section' → logprob: -17.75003433227539
    10. '.sequence' → logprob: -18.62503433227539

Token 271: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.6240566083070007e-06
    2. '_lengths' → logprob: -13.875001907348633
    3. '_' → logprob: -15.375001907348633
    4. '_l' → logprob: -16.125001907348633
    5. ' _' → logprob: -16.125001907348633
    6. 'length' → logprob: -16.375001907348633
    7. '_len' → logprob: -18.250001907348633
    8. '_le' → logprob: -18.375001907348633
    9. '_LENGTH' → logprob: -18.750001907348633
    10. '_segment' → logprob: -18.875001907348633

Token 272: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001589618914294988
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.87515926361084
    4. ' (' → logprob: -15.75015926361084
    5. 'i' → logprob: -18.500158309936523
    6. '(

' → logprob: -20.125158309936523
    7. ' ' → logprob: -20.500158309936523
    8. '(I' → logprob: -20.750158309936523
    9. '   ' → logprob: -21.125158309936523
    10. '```' → logprob: -21.250158309936523

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013405199570115656
    2. ',size' → logprob: -9.500134468078613
    3. ' ,' → logprob: -9.750134468078613
    4. ',length' → logprob: -15.000134468078613
    5. ',
' → logprob: -16.000133514404297
    6. '   ' → logprob: -16.375133514404297
    7. '‌,' → logprob: -16.875133514404297
    8. '           ' → logprob: -17.000133514404297
    9. ',s' → logprob: -17.250133514404297
    10. ',i' → logprob: -17.625133514404297

Token 274: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.1269291490316391
    2. ' size' → logprob: -2.1269290447235107
    3. ')' → logprob: -15.00192928314209
    4. '(size' → logprob: -15.12692928314209
    5. ' ' → logprob: -16.001928329467773
    6. '	size' → logprob: -16.376928329467773
    7. 's' → logprob: -16.626928329467773
    8. '1' → logprob: -17.251928329467773
    9. '[size' → logprob: -17.251928329467773
    10. '
' → logprob: -17.376928329467773

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25242432951927185
    2. ')
' → logprob: -1.5024243593215942
    3. ')
' → logprob: -7.627424240112305
    4. ')

' → logprob: -12.502424240112305
    5. ' )
' → logprob: -14.002424240112305
    6. ' )' → logprob: -14.127424240112305
    7. ')`' → logprob: -14.127424240112305
    8. '               ' → logprob: -14.377424240112305
    9. ')`
' → logprob: -14.502424240112305
    10. '):
' → logprob: -15.252424240112305

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027365204878151417
    2. ' vertical' → logprob: -7.127736568450928
    3. 'vertical' → logprob: -7.752736568450928
    4. '           ' → logprob: -7.877736568450928
    5. '                
' → logprob: -8.37773609161377
    6. '<|end|>' → logprob: -8.50273609161377
    7. ')' → logprob: -8.62773609161377
    8. '(vertical' → logprob: -8.75273609161377
    9. '                   ' → logprob: -9.62773609161377
    10. ',' → logprob: -10.25273609161377

Token 277: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.2019633650779724
    2. 'vertical' (adapté à ' vertical') → logprob: -1.7019634246826172
    3. '(vertical' → logprob: -8.576963424682617
    4. '               ' → logprob: -9.201963424682617
    5. ' 
' → logprob: -9.451963424682617
    6. '_vertical' → logprob: -9.576963424682617
    7. '                
' → logprob: -10.201963424682617
    8. '.vertical' → logprob: -10.326963424682617
    9. ' ' → logprob: -11.451963424682617
    10. '
' → logprob: -11.826963424682617

Token 278: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.750000953674316
    3. '_length' → logprob: -15.750000953674316
    4. '_sizes' → logprob: -16.375
    5. 'Lengths' → logprob: -16.875
    6. ' _' → logprob: -17.0
    7. '_l' → logprob: -17.125
    8. '_counts' → logprob: -17.75
    9. '_le' → logprob: -18.125
    10. ' lengths' → logprob: -18.375

Token 279: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06197384372353554
    2. '.' → logprob: -2.811973810195923
    3. ' .' → logprob: -12.311973571777344
    4. '.insert' → logprob: -14.686973571777344
    5. '.Add' → logprob: -14.936973571777344
    6. '.append' → logprob: -15.061973571777344
    7. '.setdefault' → logprob: -15.811973571777344
    8. '.update' → logprob: -16.061973571777344
    9. '.
' → logprob: -16.186973571777344
    10. 'add' → logprob: -16.311973571777344

Token 280: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0005543439765460789
    2. '(' → logprob: -7.50055456161499
    3. '(len' → logprob: -14.125554084777832
    4. 'length' → logprob: -14.875554084777832
    5. '(
' → logprob: -16.75055503845215
    6. ' (' → logprob: -17.25055503845215
    7. ' length' → logprob: -17.25055503845215
    8. '(value' → logprob: -17.37555503845215
    9. '[length' → logprob: -17.62555503845215
    10. '(level' → logprob: -18.00055503845215

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005002511315979064
    2. '           ' → logprob: -8.375500679016113
    3. ')
' → logprob: -9.125500679016113
    4. '<|end|>' → logprob: -9.625500679016113
    5. '               ' → logprob: -10.125500679016113
    6. ' )' → logprob: -10.375500679016113
    7. '
' → logprob: -11.875500679016113
    8. '       ' → logprob: -12.250500679016113
    9. '<|end|>' → logprob: -12.500500679016113
    10. ' ' → logprob: -14.250500679016113

Token 282: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6369369626045227
    2. '           ' → logprob: -0.7619369626045227
    3. ' 
' → logprob: -6.886937141418457
    4. '       ' → logprob: -7.011937141418457
    5. '  
' → logprob: -7.511937141418457
    6. '            
' → logprob: -7.761937141418457
    7. '<|end|>' → logprob: -8.011937141418457
    8. '
' → logprob: -8.136937141418457
    9. '        
' → logprob: -9.261937141418457
    10. '​' → logprob: -9.386937141418457

Token 283: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.151126891374588
    2. '           ' → logprob: -2.1511268615722656
    3. '\n' → logprob: -5.151126861572266
    4. ' 
' → logprob: -5.401126861572266
    5. '       ' → logprob: -5.651126861572266
    6. '            
' → logprob: -6.151126861572266
    7. '  
' → logprob: -6.276126861572266
    8. '
' → logprob: -6.651126861572266
    9. ' for' → logprob: -6.651126861572266
    10. '' → logprob: -7.026126861572266

Token 284: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5069422721862793
    2. '           ' → logprob: -1.2569422721862793
    3. ' for' → logprob: -2.5069422721862793
    4. '#' → logprob: -4.006942272186279
    5. 'horizontal' → logprob: -4.756942272186279
    6. '       ' → logprob: -6.631942272186279
    7. ' horizontal' → logprob: -6.631942272186279
    8. '   ' → logprob: -6.881942272186279
    9. ' #' → logprob: -7.381942272186279
    10. 'For' → logprob: -8.506942749023438

Token 285: ' each' (ID: 2454)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.37312552332878113
    2. ' i' → logprob: -1.6231255531311035
    3. 'h' → logprob: -3.3731255531311035
    4. ' j' → logprob: -4.1231255531311035
    5. 'i' → logprob: -4.2481255531311035
    6. ' each' → logprob: -4.3731255531311035
    7. ' for' → logprob: -4.8731255531311035
    8. '   ' → logprob: -5.1231255531311035
    9. ' size' → logprob: -5.1231255531311035
    10. 'for' → logprob: -6.1231255531311035

Token 286: ' horizontal' (ID: 25511)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6412964463233948
    2. ' j' → logprob: -2.14129638671875
    3. ' size' → logprob: -2.26629638671875
    4. 'h' → logprob: -2.26629638671875
    5. ' horizontal' → logprob: -3.39129638671875
    6. 'j' → logprob: -3.64129638671875
    7. 'size' → logprob: -3.76629638671875
    8. ' length' → logprob: -4.26629638671875
    9. 'horizontal' → logprob: -4.39129638671875
    10. ' i' → logprob: -4.51629638671875

Token 287: ' segment' (ID: 14806)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.08146987855434418
    2. 'length' → logprob: -2.956469774246216
    3. '_length' → logprob: -4.706470012664795
    4. ' length' → logprob: -5.581470012664795
    5. '_sizes' → logprob: -5.956470012664795
    6. 'size' → logprob: -5.956470012664795
    7. 'for' → logprob: -6.206470012664795
    8. ' size' → logprob: -6.831470012664795
    9. '_' → logprob: -7.331470012664795
    10. '           ' → logprob: -7.706470012664795

Token 288: ' of' (ID: 328)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.1202449798583984
    2. 'size' → logprob: -1.6202449798583984
    3. ' length' → logprob: -1.9952449798583984
    4. ',' → logprob: -1.9952449798583984
    5. ' size' → logprob: -2.4952449798583984
    6. '_length' → logprob: -3.6202449798583984
    7. '           ' → logprob: -3.6202449798583984
    8. ' in' → logprob: -3.8702449798583984
    9. ' of' → logprob: -3.9952449798583984
    10. '               ' → logprob: -5.120244979858398

Token 289: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8793529272079468
    2. 'range' → logprob: -0.8793529272079468
    3. ' size' → logprob: -2.3793530464172363
    4. ' range' → logprob: -2.6293530464172363
    5. 'length' → logprob: -5.629353046417236
    6. ' length' → logprob: -7.129353046417236
    7. '   ' → logprob: -8.629352569580078
    8. 'same' → logprob: -9.754352569580078
    9. ' ' → logprob: -9.879352569580078
    10. '(range' → logprob: -10.129352569580078

Token 290: ' '' (ID: 461)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -1.2825804948806763
    2. ' in' → logprob: -1.5325804948806763
    3. 'size' → logprob: -1.5325804948806763
    4. 'range' → logprob: -1.9075804948806763
    5. ' range' → logprob: -2.2825803756713867
    6. '(size' → logprob: -4.907580375671387
    7. ' for' → logprob: -4.907580375671387
    8. 'in' → logprob: -4.907580375671387
    9. ' (' → logprob: -5.282580375671387
    10. 'for' → logprob: -5.782580375671387

Token 291: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0010378103470429778
    2. ' size' → logprob: -7.00103759765625
    3. 'range' → logprob: -9.12603759765625
    4. '1' → logprob: -12.25103759765625
    5. '
' → logprob: -12.62603759765625
    6. 'for' → logprob: -13.50103759765625
    7. '   ' → logprob: -13.50103759765625
    8. '       ' → logprob: -13.62603759765625
    9. 'length' → logprob: -13.75103759765625
    10. '(size' → logprob: -14.12603759765625

Token 292: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5726548433303833
    2. ',' → logprob: -1.8226548433303833
    3. '':
' → logprob: -1.8226548433303833
    4. '':' → logprob: -1.9476548433303833
    5. ':
' → logprob: -2.1976547241210938
    6. '           ' → logprob: -2.5726547241210938
    7. '):
' → logprob: -2.9476547241210938
    8. '',' → logprob: -3.4476547241210938
    9. '):' → logprob: -3.5726547241210938
    10. '               ' → logprob: -4.822654724121094

Token 293: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26495587825775146
    2. ' for' → logprob: -1.6399558782577515
    3. '               ' → logprob: -4.014955997467041
    4. 'for' → logprob: -4.014955997467041
    5. ' continue' → logprob: -6.889955997467041
    6. '       ' → logprob: -7.889955997467041
    7. ' ' → logprob: -8.639955520629883
    8. 'horizontal' → logprob: -9.139955520629883
    9. 'continue' → logprob: -9.139955520629883
    10. ' h' → logprob: -9.264955520629883

Token 294: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36794692277908325
    2. 'if' → logprob: -1.7429468631744385
    3. '           ' → logprob: -2.1179468631744385
    4. ' for' → logprob: -5.117947101593018
    5. 'for' → logprob: -5.242947101593018
    6. '       ' → logprob: -7.242947101593018
    7. '               ' → logprob: -8.24294662475586
    8. '   ' → logprob: -9.36794662475586
    9. ' whether' → logprob: -9.61794662475586
    10. 'whether' → logprob: -10.24294662475586

Token 295: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7674814462661743
    2. 'length' → logprob: -1.3924814462661743
    3. ' self' → logprob: -2.3924813270568848
    4. 'horizontal' → logprob: -2.6424813270568848
    5. 'self' → logprob: -2.8924813270568848
    6. ' horizontal' → logprob: -3.6424813270568848
    7. ' any' → logprob: -4.017481327056885
    8. 'h' → logprob: -5.142481327056885
    9. ' the' → logprob: -5.517481327056885
    10. 'any' → logprob: -6.017481327056885

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009018577635288239
    2. 'in' → logprob: -5.134018421173096
    3. ' =' → logprob: -6.634018421173096
    4. ' is' → logprob: -7.384018421173096
    5. ' ' → logprob: -8.134018898010254
    6. '=' → logprob: -8.759018898010254
    7. '           ' → logprob: -9.009018898010254
    8. ')' → logprob: -9.009018898010254
    9. 'In' → logprob: -9.384018898010254
    10. '               ' → logprob: -9.759018898010254

Token 297: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.17055408656597137
    2. ' vertical' → logprob: -1.9205540418624878
    3. 'horizontal' → logprob: -4.670554161071777
    4. ' horizontal' → logprob: -7.045554161071777
    5. '           ' → logprob: -10.545554161071777
    6. '(vertical' → logprob: -12.545554161071777
    7. '   ' → logprob: -12.920554161071777
    8. '               ' → logprob: -14.045554161071777
    9. '       ' → logprob: -14.295554161071777
    10. '
' → logprob: -14.295554161071777

Token 298: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -6.511406809295295e-06
    2. '_length' → logprob: -12.500006675720215
    3. 'length' → logprob: -13.750006675720215
    4. '_' → logprob: -14.750006675720215
    5. ' lengths' → logprob: -15.375006675720215
    6. 'Lengths' → logprob: -15.500006675720215
    7. ' _' → logprob: -15.750006675720215
    8. '   ' → logprob: -16.0000057220459
    9. '
' → logprob: -16.3750057220459
    10. '```' → logprob: -16.6250057220459

Token 299: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023903798311948776
    2. '               ' → logprob: -4.773903846740723
    3. ':' → logprob: -5.148903846740723
    4. ':
' → logprob: -5.773903846740723
    5. '
' → logprob: -6.398903846740723
    6. '       ' → logprob: -6.773903846740723
    7. ',' → logprob: -7.523903846740723
    8. '<|end|>' → logprob: -7.648903846740723
    9. '            
' → logprob: -7.648903846740723
    10. ' for' → logprob: -7.898903846740723

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026558278128504753
    2. '
' → logprob: -4.1515583992004395
    3. '       ' → logprob: -5.1515583992004395
    4. '  
' → logprob: -6.6515583992004395
    5. '            
' → logprob: -6.9015583992004395
    6. '        
' → logprob: -7.4015583992004395
    7. '    
' → logprob: -7.4015583992004395
    8. ' for' → logprob: -7.9015583992004395
    9. '               ' → logprob: -8.026557922363281
    10. 'for' → logprob: -9.151557922363281

Token 301: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03274150192737579
    2. ' for' → logprob: -4.032741546630859
    3. 'for' (adapté à ' for') → logprob: -4.282741546630859
    4. '       ' → logprob: -7.407741546630859
    5. '   ' → logprob: -10.28274154663086
    6. '               ' → logprob: -10.90774154663086
    7. '
' → logprob: -11.90774154663086
    8. '         ' → logprob: -12.90774154663086
    9. '          ' → logprob: -13.03274154663086
    10. ' ' → logprob: -13.15774154663086

Token 302: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.46213656663894653
    2. 'j' → logprob: -1.2121365070343018
    3. 'i' → logprob: -3.2121365070343018
    4. ' i' → logprob: -3.4621365070343018
    5. '   ' → logprob: -7.587136745452881
    6. ' ' → logprob: -8.962136268615723
    7. 'h' → logprob: -10.087136268615723
    8. 'range' → logprob: -10.337136268615723
    9. '    ' → logprob: -10.712136268615723
    10. 'size' → logprob: -10.774636268615723

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011965400772169232
    2. 'in' → logprob: -6.751196384429932
    3. ' ' → logprob: -10.62619686126709
    4. '	in' → logprob: -14.00119686126709
    5. ' i' → logprob: -16.001195907592773
    6. ' ' → logprob: -16.126195907592773
    7. 'space' → logprob: -16.251195907592773
    8. ',' → logprob: -16.501195907592773
    9. 'n' → logprob: -16.501195907592773
    10. '```' → logprob: -16.563695907592773

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693104147911072
    2. ' range' → logprob: -2.1269309520721436
    3. '(range' → logprob: -13.501931190490723
    4. '   ' → logprob: -14.126931190490723
    5. 'h' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.376931190490723
    7. ' h' → logprob: -15.376931190490723
    8. '	range' → logprob: -16.376930236816406
    9. 'for' → logprob: -17.376930236816406
    10. '
' → logprob: -17.626930236816406

Token 305: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.010967056266963482
    2. ' h' → logprob: -5.510967254638672
    3. 'h' → logprob: -5.635967254638672
    4. 'range' → logprob: -6.510967254638672
    5. ' range' → logprob: -7.260967254638672
    6. '(' → logprob: -8.260967254638672
    7. '   ' → logprob: -8.385967254638672
    8. ' (' → logprob: -8.385967254638672
    9. '       ' → logprob: -9.010967254638672
    10. '(range' → logprob: -9.260967254638672

Token 306: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.4849443838757e-06
    2. 'len' → logprob: -12.875004768371582
    3. 'orizontal' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.500004768371582
    5. ')' → logprob: -16.250003814697266
    6. '_LEN' → logprob: -16.500003814697266
    7. '_l' → logprob: -17.000003814697266
    8. 'size' → logprob: -17.125003814697266
    9. '
' → logprob: -17.125003814697266
    10. 'Len' → logprob: -17.125003814697266

Token 307: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013427316443994641
    2. '-' → logprob: -6.6263427734375
    3. ' ' → logprob: -11.1263427734375
    4. ')' → logprob: -13.5013427734375
    5. '-j' → logprob: -15.5013427734375
    6. '   ' → logprob: -15.6263427734375
    7. '  ' → logprob: -16.8763427734375
    8. '    ' → logprob: -17.0013427734375
    9. '-size' → logprob: -17.1263427734375
    10. '        ' → logprob: -17.5013427734375

Token 308: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.023246292024850845
    2. ' size' → logprob: -3.7732462882995605
    3. '(size' → logprob: -15.398246765136719
    4. '	size' → logprob: -15.648246765136719
    5. '[size' → logprob: -16.14824676513672
    6. '       ' → logprob: -16.52324676513672
    7. '_size' → logprob: -16.52324676513672
    8. ' ' → logprob: -16.64824676513672
    9. '   ' → logprob: -17.02324676513672
    10. '.size' → logprob: -17.39824676513672

Token 309: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029750952497124672
    2. '+' → logprob: -3.5297510623931885
    3. ' ' → logprob: -16.27975082397461
    4. ')' → logprob: -16.52975082397461
    5. ' +
' → logprob: -16.65475082397461
    6. '+)' → logprob: -16.90475082397461
    7. '<|end|>' → logprob: -17.15475082397461
    8. '+j' → logprob: -17.77975082397461
    9. '[' → logprob: -17.90475082397461
    10. ')+' → logprob: -18.52975082397461

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007136239437386394
    2. ' ' → logprob: -7.25071382522583
    3. '+' → logprob: -13.500713348388672
    4. '   ' → logprob: -13.875713348388672
    5. '0' → logprob: -15.000713348388672
    6. '           ' → logprob: -15.125713348388672
    7. '       ' → logprob: -15.125713348388672
    8. '```' → logprob: -16.000713348388672
    9. ' +' → logprob: -16.500713348388672
    10. 'j' → logprob: -16.750713348388672

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -12.12501049041748
    3. '+' → logprob: -12.37501049041748
    4. '   ' → logprob: -15.62501049041748
    5. '0' → logprob: -16.000009536743164
    6. '```' → logprob: -16.250009536743164
    7. ' +' → logprob: -16.875009536743164
    8. '       ' → logprob: -18.000009536743164
    9. '           ' → logprob: -18.562509536743164
    10. ')' → logprob: -18.812509536743164

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761434435844421
    2. '):
' → logprob: -0.8261434435844421
    3. '):
' → logprob: -8.951143264770508
    4. ':' → logprob: -10.451143264770508
    5. '           ' → logprob: -11.076143264770508
    6. ' ):' → logprob: -11.451143264770508
    7. ' ):
' → logprob: -12.326143264770508
    8. '       ' → logprob: -12.576143264770508
    9. '):

' → logprob: -12.826143264770508
    10. ')' → logprob: -12.826143264770508

Token 313: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009887122549116611
    2. '           ' → logprob: -5.384887218475342
    3. 'length' → logprob: -6.634887218475342
    4. ' length' → logprob: -7.134887218475342
    5. '       ' → logprob: -7.384887218475342
    6. '            ' → logprob: -7.509887218475342
    7. ' ' → logprob: -7.884887218475342
    8. '                ' → logprob: -8.134886741638184
    9. '              ' → logprob: -8.384886741638184
    10. '   ' → logprob: -8.759886741638184

Token 314: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.10279244929552078
    2. 'length' (adapté à ' length') → logprob: -2.352792501449585
    3. '               ' → logprob: -6.102792263031006
    4. ' horizontal' → logprob: -8.977792739868164
    5. 'horizontal' → logprob: -9.477792739868164
    6. '           ' → logprob: -10.227792739868164
    7. ' if' → logprob: -10.352792739868164
    8. '	length' → logprob: -10.727792739868164
    9. '   ' → logprob: -10.977792739868164
    10. 'if' → logprob: -11.477792739868164

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815064437687397
    2. '=' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.518150329589844
    4. ' =
' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.268150329589844
    6. ' is' → logprob: -17.268150329589844
    7. ')' → logprob: -17.518150329589844
    8. '=self' → logprob: -18.393150329589844
    9. ' ==' → logprob: -18.393150329589844
    10. ' =)' → logprob: -18.893150329589844

Token 316: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06993843615055084
    2. 'self' → logprob: -2.6949384212493896
    3. '	self' → logprob: -14.319938659667969
    4. '<|end|>' → logprob: -14.694938659667969
    5. '(self' → logprob: -14.819938659667969
    6. ' ' → logprob: -15.444938659667969
    7. ' ' → logprob: -15.694938659667969
    8. ' 
' → logprob: -16.19493865966797
    9. '```' → logprob: -16.81993865966797
    10. 's' → logprob: -16.81993865966797

Token 317: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -0.0001266613689949736
    2. 'horizontal' → logprob: -9.375126838684082
    3. '.' → logprob: -10.125126838684082
    4. ' horizontal' → logprob: -14.375126838684082
    5. '.vertical' → logprob: -14.375126838684082
    6. ' .' → logprob: -15.375126838684082
    7. 'Horizontal' → logprob: -16.625125885009766
    8. '   ' → logprob: -17.000125885009766
    9. '.Horizontal' → logprob: -17.500125885009766
    10. '_horizontal' → logprob: -17.625125885009766

Token 318: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -0.00012928384239785373
    2. '.' → logprob: -9.250129699707031
    3. ' .' → logprob: -10.375129699707031
    4. 'segment' → logprob: -13.750129699707031
    5. ' segment' → logprob: -14.625129699707031
    6. '.section' → logprob: -15.625129699707031
    7. '.seg' → logprob: -15.625129699707031
    8. '   ' → logprob: -17.75012969970703
    9. '.se' → logprob: -18.00012969970703
    10. '\.' → logprob: -18.37512969970703

Token 319: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.320199877838604e-07
    2. '_lengths' → logprob: -15.5
    3. '_l' → logprob: -16.625
    4. 'length' → logprob: -17.375
    5. 'Length' → logprob: -18.125
    6. '_segment' → logprob: -18.25
    7. '           ' → logprob: -18.75
    8. '```' → logprob: -18.875
    9. '_LENGTH' → logprob: -19.125
    10. 'ength' → logprob: -19.25

Token 320: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0001093841710826382
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -15.250109672546387
    4. 'j' → logprob: -16.12510871887207
    5. '(
' → logprob: -17.62510871887207
    6. '	j' → logprob: -17.87510871887207
    7. '[j' → logprob: -18.75010871887207
    8. ' j' → logprob: -19.25010871887207
    9. '   ' → logprob: -20.87510871887207
    10. '```' → logprob: -21.00010871887207

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.455048449221067e-05
    2. ' ,' → logprob: -10.000054359436035
    3. ',size' → logprob: -11.625054359436035
    4. '   ' → logprob: -17.12505531311035
    5. '           ' → logprob: -17.12505531311035
    6. ',
' → logprob: -17.62505531311035
    7. '       ' → logprob: -18.37505531311035
    8. ')' → logprob: -18.62505531311035
    9. '‌,' → logprob: -18.75005531311035
    10. '	' → logprob: -19.25005531311035

Token 322: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07888989895582199
    2. ' size' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.453889846801758
    4. '(size' → logprob: -17.453889846801758
    5. '	size' → logprob: -17.953889846801758
    6. 'length' → logprob: -18.203889846801758
    7. '
' → logprob: -18.453889846801758
    8. ')' → logprob: -18.453889846801758
    9. '1' → logprob: -18.953889846801758
    10. '   ' → logprob: -19.078889846801758

Token 323: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062327396124601364
    2. ')
' → logprob: -2.8123273849487305
    3. '               ' → logprob: -8.06232738494873
    4. '           ' → logprob: -10.81232738494873
    5. ')
' → logprob: -11.18732738494873
    6. ')

' → logprob: -12.31232738494873
    7. '):
' → logprob: -13.43732738494873
    8. '       ' → logprob: -13.68732738494873
    9. ' )' → logprob: -13.68732738494873
    10. ' )
' → logprob: -14.93732738494873

Token 324: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00048179292934946716
    2. ' if' → logprob: -8.875481605529785
    3. '                
' → logprob: -9.000481605529785
    4. '           ' → logprob: -9.375481605529785
    5. 'if' → logprob: -9.625481605529785
    6. '                ' → logprob: -11.000481605529785
    7. '<|end|>' → logprob: -11.875481605529785
    8. '
' → logprob: -12.000481605529785
    9. '                   ' → logprob: -12.125481605529785
    10. '       ' → logprob: -12.125481605529785

Token 325: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3137989044189453
    2. 'if' (adapté à ' if') → logprob: -1.3137989044189453
    3. '               ' → logprob: -7.563798904418945
    4. '           ' → logprob: -11.813798904418945
    5. '
' → logprob: -12.063798904418945
    6. '                ' → logprob: -13.438798904418945
    7. ' ' → logprob: -14.063798904418945
    8. '   ' → logprob: -14.438798904418945
    9. '            ' → logprob: -14.813798904418945
    10. '                   ' → logprob: -14.938798904418945

Token 326: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.0009134899592027068
    2. 'length' → logprob: -7.000913619995117
    3. '(length' → logprob: -13.750913619995117
    4. ' len' → logprob: -14.375913619995117
    5. ' leng' → logprob: -16.125913619995117
    6. '[length' → logprob: -16.250913619995117
    7. ' lenght' → logprob: -17.000913619995117
    8. 'ength' → logprob: -17.250913619995117
    9. '	length' → logprob: -17.375913619995117
    10. ' ' → logprob: -17.625913619995117

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807443380355835
    2. 'in' → logprob: -3.288074493408203
    3. ')' → logprob: -11.163074493408203
    4. ' ' → logprob: -11.413074493408203
    5. ' ' → logprob: -13.163074493408203
    6. '	in' → logprob: -13.413074493408203
    7. ' )' → logprob: -14.038074493408203
    8. '_' → logprob: -14.538074493408203
    9. ' not' → logprob: -14.538074493408203
    10. 'In' → logprob: -14.788074493408203

Token 328: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.029752103611826897
    2. ' vertical' → logprob: -3.529752016067505
    3. '(vertical' → logprob: -13.904751777648926
    4. '.vertical' → logprob: -15.404751777648926
    5. '_vertical' → logprob: -15.404751777648926
    6. '   ' → logprob: -15.529751777648926
    7. 'vert' → logprob: -16.279752731323242
    8. ' ' → logprob: -16.779752731323242
    9. 'horizontal' → logprob: -17.529752731323242
    10. ' вертик' → logprob: -17.529752731323242

Token 329: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -3.128163257315464e-07
    2. ' _' → logprob: -16.125
    3. '_sizes' → logprob: -16.25
    4. '_counts' → logprob: -17.0
    5. '_' → logprob: -17.25
    6. '_length' → logprob: -17.375
    7. 'ength' → logprob: -18.125
    8. ' lengths' → logprob: -18.25
    9. '_languages' → logprob: -19.125
    10. '_ranges' → logprob: -19.25

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20710621774196625
    2. ':
' → logprob: -1.7071062326431274
    3. '                   ' → logprob: -5.457106113433838
    4. '               ' → logprob: -6.957106113433838
    5. '):
' → logprob: -8.332106590270996
    6. '           ' → logprob: -9.582106590270996
    7. '):' → logprob: -9.832106590270996
    8. '                       ' → logprob: -10.082106590270996
    9. ',' → logprob: -10.832106590270996
    10. '():
' → logprob: -12.082106590270996

Token 331: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005004852078855038
    2. '               ' → logprob: -5.6300048828125
    3. '
' → logprob: -7.1300048828125
    4. '           ' → logprob: -8.2550048828125
    5. '                       ' → logprob: -8.7550048828125
    6. '                    
' → logprob: -9.3800048828125
    7. 'count' → logprob: -10.6300048828125
    8. '       ' → logprob: -10.6300048828125
    9. '                ' → logprob: -11.6300048828125
    10. '                  ' → logprob: -11.7550048828125

Token 332: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3168134093284607
    2. ' count' → logprob: -1.8168134689331055
    3. '                   ' → logprob: -2.4418134689331055
    4. '                       ' → logprob: -4.0668134689331055
    5. '               ' → logprob: -5.5668134689331055
    6. '
' → logprob: -8.066813468933105
    7. '       ' → logprob: -8.191813468933105
    8. '           ' → logprob: -8.566813468933105
    9. '   ' → logprob: -9.566813468933105
    10. '                               ' → logprob: -9.691813468933105

Token 333: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931610703468323
    2. '+=' → logprob: -0.6931610703468323
    3. ']+=' → logprob: -11.693161010742188
    4. '+' → logprob: -12.943161010742188
    5. '```' → logprob: -14.443161010742188
    6. '=' → logprob: -14.693161010742188
    7. '   ' → logprob: -14.818161010742188
    8. ')' → logprob: -15.068161010742188
    9. '[' → logprob: -15.443161010742188
    10. '           ' → logprob: -15.693161010742188

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.625085830688477
    4. '
' → logprob: -19.125085830688477
    5. '2' → logprob: -19.750085830688477
    6. ' ' → logprob: -20.250085830688477
    7. '           ' → logprob: -20.375085830688477
    8. '```' → logprob: -20.812585830688477
    9. '１' → logprob: -20.875085830688477
    10. '       ' → logprob: -21.000085830688477

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.000001907348633
    4. '
' → logprob: -20.875001907348633
    5. '2' → logprob: -21.250001907348633
    6. 'len' → logprob: -22.250001907348633
    7. 'v' → logprob: -22.500001907348633
    8. '           ' → logprob: -22.562501907348633
    9. '１' → logprob: -22.625001907348633
    10. '100' → logprob: -23.000001907348633

Token 336: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03984149545431137
    2. '
' → logprob: -3.789841413497925
    3. '<|end|>' → logprob: -4.414841651916504
    4. 'return' → logprob: -6.164841651916504
    5. ' return' → logprob: -6.914841651916504
    6. '        
' → logprob: -7.789841651916504
    7. '\n' → logprob: -8.414841651916504
    8. '   ' → logprob: -9.289841651916504
    9. '  
' → logprob: -9.539841651916504
    10. ')' → logprob: -9.789841651916504

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03820328041911125
    2. 'return' → logprob: -3.788203239440918
    3. '
' → logprob: -4.538203239440918
    4. ' return' → logprob: -6.163203239440918
    5. '   ' → logprob: -7.788203239440918
    6. '	' → logprob: -7.788203239440918
    7. '        
' → logprob: -7.788203239440918
    8. '```' → logprob: -8.163203239440918
    9. '	return' → logprob: -9.038203239440918
    10. '' → logprob: -9.788203239440918

Token 338: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25318053364753723
    2. 'return' (adapté à ' return') → logprob: -1.5031805038452148
    3. ' return' → logprob: -6.878180503845215
    4. '   ' → logprob: -9.003180503845215
    5. '	return' → logprob: -9.503180503845215
    6. '```' → logprob: -11.753180503845215
    7. ':return' → logprob: -12.128180503845215
    8. '
' → logprob: -12.878180503845215
    9. '	' → logprob: -13.503180503845215
    10. '           ' → logprob: -13.753180503845215

Token 339: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06196768581867218
    2. 'count' → logprob: -2.811967611312866
    3. '	count' → logprob: -18.311967849731445
    4. '[count' → logprob: -21.061967849731445
    5. ' ' → logprob: -21.561967849731445
    6. '(count' → logprob: -21.936967849731445
    7. '$count' → logprob: -22.811967849731445
    8. '<count' → logprob: -22.936967849731445
    9. ' ' → logprob: -23.061967849731445
    10. '   ' → logprob: -23.061967849731445

Token 340: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6529629826545715
    2. '<|end|>' → logprob: -1.0279629230499268
    3. '```' → logprob: -2.1529629230499268
    4. '
' → logprob: -6.277963161468506
    5. 'square' → logprob: -7.027963161468506
    6. '<|end|>' → logprob: -7.277963161468506
    7. ')' → logprob: -7.777963161468506
    8. '[' → logprob: -7.902963161468506
    9. 'v' → logprob: -8.152962684631348
    10. ' ' → logprob: -8.777962684631348

Token 342: ' Square' (ID: 22980)
  Prédit: ' Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.09201835095882416
    2. 'Rectangle' → logprob: -3.4670183658599854
    3. ' Grid' → logprob: -3.8420183658599854
    4. ' Point' → logprob: -4.592018127441406
    5. ' Distance' → logprob: -4.592018127441406
    6. ' Square' → logprob: -5.342018127441406
    7. ' Rect' → logprob: -6.092018127441406
    8. 'Grid' → logprob: -6.967018127441406
    9. ' Solution' → logprob: -7.342018127441406
    10. ' Per' → logprob: -7.342018127441406

Token 343: 'Route' (ID: 7656)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.7767781615257263
    2. 'Counter' → logprob: -1.026778221130371
    3. 'Grid' → logprob: -2.526778221130371
    4. 'Detector' → logprob: -2.651778221130371
    5. 'Checker' → logprob: -4.526778221130371
    6. 'Matrix' → logprob: -5.776778221130371
    7. 'Builder' → logprob: -6.276778221130371
    8. 'Set' → logprob: -6.401778221130371
    9. 'Iterator' → logprob: -6.901778221130371
    10. 'Splitter' → logprob: -6.901778221130371

Token 344: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000651197915431112
    2. ':
' → logprob: -7.5006513595581055
    3. '(S' → logprob: -9.625651359558105
    4. '(' → logprob: -10.625651359558105
    5. '<|end|>' → logprob: -12.750651359558105
    6. ':

' → logprob: -13.750651359558105
    7. '(D' → logprob: -13.875651359558105
    8. 'Square' → logprob: -14.750651359558105
    9. '():' → logprob: -15.125651359558105
    10. 'S' → logprob: -15.250651359558105

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032275060657411814
    2. ':
' → logprob: -5.753227710723877
    3. '<|end|>' → logprob: -10.253227233886719
    4. '(S' → logprob: -12.628227233886719
    5. '(' → logprob: -12.753227233886719
    6. ' :' → logprob: -13.378227233886719
    7. ':def' → logprob: -13.753227233886719
    8. '(QWidget' → logprob: -14.003227233886719
    9. '():' → logprob: -14.003227233886719
    10. ':

' → logprob: -14.128227233886719

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20707957446575165
    2. ' def' → logprob: -1.707079529762268
    3. 'def' → logprob: -5.2070794105529785
    4. ':' → logprob: -9.957079887390137
    5. 'class' → logprob: -9.957079887390137
    6. ':
' → logprob: -10.707079887390137
    7. '```' → logprob: -11.332079887390137
    8. '    ' → logprob: -11.707079887390137
    9. '<|end|>' → logprob: -11.957079887390137
    10. ':def' → logprob: -12.207079887390137

Token 347: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.008818189613521099
    2. 'def' (adapté à ' def') → logprob: -4.75881814956665
    3. '   ' → logprob: -8.508818626403809
    4. 'class' → logprob: -13.383818626403809
    5. '	def' → logprob: -16.258817672729492
    6. '    ' → logprob: -16.383817672729492
    7. '```' → logprob: -16.383817672729492
    8. ' class' → logprob: -16.758817672729492
    9. ':def' → logprob: -17.133817672729492
    10. ' __' → logprob: -17.383817672729492

Token 348: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.019619198516011238
    2. '__' → logprob: -4.019618988037109
    3. ' def' → logprob: -7.144618988037109
    4. 'init' → logprob: -7.769618988037109
    5. ' init' → logprob: -8.76961898803711
    6. '_init' → logprob: -10.01961898803711
    7. 'def' → logprob: -10.64461898803711
    8. ' _' → logprob: -11.26961898803711
    9. '_' → logprob: -11.89461898803711
    10. ' ___' → logprob: -12.26961898803711

Token 349: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.4121114822482923e-06
    2. 'ini' → logprob: -13.125003814697266
    3. ' init' → logprob: -14.250003814697266
    4. 'in' → logprob: -14.625003814697266
    5. 'def' → logprob: -16.125003814697266
    6. 'inite' → logprob: -17.375003814697266
    7. 'int' → logprob: -17.875003814697266
    8. 'i' → logprob: -17.875003814697266
    9. '_init' → logprob: -17.875003814697266
    10. '_' → logprob: -18.375003814697266

Token 350: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1300186663866043
    2. '(self' → logprob: -2.380018711090088
    3. '(' → logprob: -3.880018711090088
    4. ' (' → logprob: -5.505018711090088
    5. '__' → logprob: -5.755018711090088
    6. '__(
' → logprob: -7.380018711090088
    7. ',' → logprob: -8.63001823425293
    8. '<|end|>' → logprob: -8.63001823425293
    9. ')(' → logprob: -8.88001823425293
    10. 'self' → logprob: -9.38001823425293

Token 351: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013393278641160578
    2. ' self' → logprob: -9.500133514404297
    3. 'vertical' → logprob: -10.125133514404297
    4. ',' → logprob: -11.750133514404297
    5. '   ' → logprob: -12.125133514404297
    6. ')' → logprob: -13.000133514404297
    7. '
' → logprob: -13.250133514404297
    8. '       ' → logprob: -14.625133514404297
    9. '(self' → logprob: -14.875133514404297
    10. ',self' → logprob: -15.250133514404297

Token 352: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037961541675031185
    2. 'self' → logprob: -6.378796100616455
    3. '(self' → logprob: -6.753796100616455
    4. ' ,' → logprob: -7.378796100616455
    5. ')' → logprob: -9.128796577453613
    6. '(' → logprob: -10.003796577453613
    7. ',self' → logprob: -10.253796577453613
    8. 'vertical' → logprob: -11.003796577453613
    9. ' (' → logprob: -11.128796577453613
    10. '   ' → logprob: -11.253796577453613

Token 353: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00042745075188577175
    2. ' self' → logprob: -8.00042724609375
    3. '       ' → logprob: -9.62542724609375
    4. 'vertical' → logprob: -10.62542724609375
    5. '   ' → logprob: -13.75042724609375
    6. '```' → logprob: -15.50042724609375
    7. ',' → logprob: -16.37542724609375
    8. '(self' → logprob: -16.37542724609375
    9. '	self' → logprob: -16.87542724609375
    10. ' vertical' → logprob: -17.12542724609375

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.034562669694423676
    2. ' self' → logprob: -3.784562587738037
    3. '       ' → logprob: -4.784562587738037
    4. 'pass' → logprob: -6.034562587738037
    5. ' pass' → logprob: -8.159563064575195
    6. '   ' → logprob: -8.534563064575195
    7. 'vertical' → logprob: -12.034563064575195
    8. 'def' → logprob: -12.909563064575195
    9. ' ' → logprob: -13.409563064575195
    10. '	self' → logprob: -13.659563064575195

Token 355: '.data' (ID: 3885)
  Prédit: '.vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.41179490089416504
    2. '.' → logprob: -1.536794900894165
    3. '.routes' → logprob: -3.286794900894165
    4. '._' → logprob: -3.536794900894165
    5. ' .' → logprob: -3.786794900894165
    6. '.s' → logprob: -4.661794662475586
    7. 'vertical' → logprob: -5.411794662475586
    8. '_vertical' → logprob: -6.161794662475586
    9. '.square' → logprob: -6.286794662475586
    10. '.points' → logprob: -6.661794662475586

Token 356: '_sets' (ID: 56707)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12934088706970215
    2. '=' → logprob: -2.129340887069702
    3. '=[]' → logprob: -6.754341125488281
    4. '_' → logprob: -7.754341125488281
    5. '_points' → logprob: -8.754341125488281
    6. 's' → logprob: -9.129341125488281
    7. '[]' → logprob: -9.879341125488281
    8. '[' → logprob: -10.004341125488281
    9. '={}' → logprob: -10.004341125488281
    10. '.setdefault' → logprob: -10.129341125488281

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1004084125161171
    2. '=' → logprob: -2.3504083156585693
    3. '=[]' → logprob: -8.850408554077148
    4. '[]' → logprob: -10.350408554077148
    5. ' ' → logprob: -10.975408554077148
    6. '[' → logprob: -12.975408554077148
    7. '.append' → logprob: -13.100408554077148
    8. ' []' → logprob: -13.850408554077148
    9. '<|end|>' → logprob: -14.350408554077148
    10. '   ' → logprob: -14.600408554077148

Token 358: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10021314769983292
    2. ' []' → logprob: -2.350213050842285
    3. '[]
' → logprob: -12.225213050842285
    4. '[' → logprob: -14.600213050842285
    5. '[]}' → logprob: -15.100213050842285
    6. ' []
' → logprob: -15.225213050842285
    7. '   ' → logprob: -15.350213050842285
    8. ' ' → logprob: -15.475213050842285
    9. '[]

' → logprob: -15.975213050842285
    10. '  ' → logprob: -17.6002140045166

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06553424894809723
    2. '
' → logprob: -2.8155343532562256
    3. '<|end|>' → logprob: -6.5655341148376465
    4. '    
' → logprob: -6.6905341148376465
    5. 'def' → logprob: -7.9405341148376465
    6. ' def' → logprob: -7.9405341148376465
    7. '```' → logprob: -9.940534591674805
    8. ' 
' → logprob: -9.940534591674805
    9. '<|end|>' → logprob: -10.065534591674805
    10. '  
' → logprob: -11.440534591674805

Token 360: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.062038157135248184
    2. ' def' → logprob: -2.8120381832122803
    3. '   ' → logprob: -9.56203842163086
    4. '	def' → logprob: -16.31203842163086
    5. 'de' → logprob: -17.68703842163086
    6. '
' → logprob: -17.68703842163086
    7. ' ' → logprob: -18.81203842163086
    8. '    
' → logprob: -18.93703842163086
    9. '```' → logprob: -20.18703842163086
    10. ' 
' → logprob: -20.68703842163086

Token 361: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.16030952334403992
    2. ' add' → logprob: -1.9103095531463623
    3. 'load' → logprob: -10.035309791564941
    4. ' load' → logprob: -10.910309791564941
    5. 'append' → logprob: -11.285309791564941
    6. 'solve' → logprob: -12.160309791564941
    7. '_add' → logprob: -13.535309791564941
    8. ' solve' → logprob: -13.535309791564941
    9. 'process' → logprob: -14.160309791564941
    10. ' append' → logprob: -14.785309791564941

Token 362: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.012256736867129803
    2. '(self' → logprob: -5.387256622314453
    3. '_route' → logprob: -5.512256622314453
    4. '(' → logprob: -6.512256622314453
    5. '_dataset' → logprob: -6.887256622314453
    6. '_' → logprob: -7.637256622314453
    7. '_item' → logprob: -9.262256622314453
    8. '_point' → logprob: -9.512256622314453
    9. '_set' → logprob: -9.762256622314453
    10. '_trip' → logprob: -9.887256622314453

Token 363: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.04654630273580551
    2. '(self' → logprob: -3.296546220779419
    3. 'set' → logprob: -5.421546459197998
    4. '(' → logprob: -5.671546459197998
    5. '_point' → logprob: -8.29654598236084
    6. 'Set' → logprob: -8.79654598236084
    7. '(
' → logprob: -9.67154598236084
    8. 'self' → logprob: -9.67154598236084
    9. '(data' → logprob: -10.92154598236084
    10. '_' → logprob: -11.67154598236084

Token 364: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029796196147799492
    2. '(' → logprob: -3.5297961235046387
    3. '(
' → logprob: -10.279796600341797
    4. ' (' → logprob: -11.654796600341797
    5. 'self' → logprob: -13.779796600341797
    6. '(s' → logprob: -13.904796600341797
    7. '   ' → logprob: -15.654796600341797
    8. '(se' → logprob: -15.904796600341797
    9. ' ' → logprob: -16.404796600341797
    10. '(data' → logprob: -16.529796600341797

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013774730905424803
    2. ' ,' → logprob: -9.000137329101562
    3. ',self' → logprob: -11.375137329101562
    4. 'self' → logprob: -13.000137329101562
    5. ',s' → logprob: -16.000137329101562
    6. '(self' → logprob: -16.000137329101562
    7. ',data' → logprob: -16.375137329101562
    8. ',d' → logprob: -16.875137329101562
    9. ',
' → logprob: -17.750137329101562
    10. '       ' → logprob: -18.750137329101562

Token 366: ' n' (ID: 297)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.3997502624988556
    2. ' vertical' → logprob: -1.1497502326965332
    3. 'self' → logprob: -4.774750232696533
    4. ' self' → logprob: -5.524750232696533
    5. ' data' → logprob: -9.024750709533691
    6. 'data' → logprob: -9.399750709533691
    7. '   ' → logprob: -9.774750709533691
    8. 'horizontal' → logprob: -10.524750709533691
    9. 'v' → logprob: -10.649750709533691
    10. ')' → logprob: -11.649750709533691

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003472633252386004
    2. ' ,' → logprob: -8.000347137451172
    3. ',
' → logprob: -11.750347137451172
    4. ')' → logprob: -13.375347137451172
    5. '_,' → logprob: -14.625347137451172
    6. '   ' → logprob: -15.625347137451172
    7. '_vertical' → logprob: -15.750347137451172
    8. '):
' → logprob: -16.250347137451172
    9. 'vertical' → logprob: -16.250347137451172
    10. '),' → logprob: -16.375347137451172

Token 368: ' m' (ID: 284)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.6883583664894104
    2. 'm' → logprob: -1.1883583068847656
    3. 'horizontal' → logprob: -2.1883583068847656
    4. 'g' → logprob: -3.6883583068847656
    5. ' vertical' → logprob: -4.188358306884766
    6. 'dist' → logprob: -4.938358306884766
    7. ' m' → logprob: -5.313358306884766
    8. ' horizontal' → logprob: -5.438358306884766
    9. 'points' → logprob: -5.438358306884766
    10. 'h' → logprob: -5.813358306884766

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -12.000011444091797
    3. ',n' → logprob: -12.750011444091797
    4. '):' → logprob: -13.625011444091797
    5. ',
' → logprob: -14.375011444091797
    6. ',num' → logprob: -16.875011444091797
    7. '‌,' → logprob: -16.875011444091797
    8. ',user' → logprob: -17.000011444091797
    9. ',int' → logprob: -17.000011444091797
    10. ',v' → logprob: -17.125011444091797

Token 370: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.053973473608493805
    2. ' vertical' → logprob: -3.803973436355591
    3. 'horizontal' → logprob: -4.17897367477417
    4. 'v' → logprob: -4.67897367477417
    5. '   ' → logprob: -7.17897367477417
    6. 'h' → logprob: -7.30397367477417
    7. 'x' → logprob: -7.30397367477417
    8. 'dist' → logprob: -8.178973197937012
    9. 'a' → logprob: -8.178973197937012
    10. 'points' → logprob: -8.366473197937012

Token 371: '_dist' (ID: 37968)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0033826762810349464
    2. ',' → logprob: -7.003382682800293
    3. 'g' → logprob: -7.003382682800293
    4. '_dist' → logprob: -7.253382682800293
    5. '_segments' → logprob: -7.753382682800293
    6. '_edges' → logprob: -9.128382682800293
    7. '_lengths' → logprob: -9.378382682800293
    8. ')' → logprob: -10.128382682800293
    9. '_inter' → logprob: -10.378382682800293
    10. '),' → logprob: -10.628382682800293

Token 372: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -7.171581091824919e-05
    2. ',' → logprob: -10.87507152557373
    3. 'ance' → logprob: -11.00007152557373
    4. '   ' → logprob: -11.37507152557373
    5. '[' → logprob: -11.75007152557373
    6. 's' → logprob: -12.62507152557373
    7. '```' → logprob: -12.87507152557373
    8. 'anc' → logprob: -13.62507152557373
    9. '=' → logprob: -13.62507152557373
    10. 'aces' → logprob: -13.75007152557373

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.000018119812012
    3. '):' → logprob: -14.375018119812012
    4. '[],' → logprob: -14.500018119812012
    5. ',
' → logprob: -15.750018119812012
    6. '   ' → logprob: -16.000019073486328
    7. ',n' → logprob: -16.500019073486328
    8. '):
' → logprob: -16.875019073486328
    9. '‌,' → logprob: -17.125019073486328
    10. ',m' → logprob: -17.375019073486328

Token 374: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.1602722555398941
    2. ' horizontal' → logprob: -1.910272240638733
    3. '   ' → logprob: -10.410272598266602
    4. 'vertical' → logprob: -11.785272598266602
    5. ' ' → logprob: -12.785272598266602
    6. '       ' → logprob: -13.285272598266602
    7. '    ' → logprob: -13.535272598266602
    8. '           ' → logprob: -13.660272598266602
    9. '_horizontal' → logprob: -14.410272598266602
    10. '.horizontal' → logprob: -14.660272598266602

Token 375: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0061429147608578205
    2. '_g' → logprob: -5.131143093109131
    3. '_d' → logprob: -9.506142616271973
    4. 'g' → logprob: -10.256142616271973
    5. '_lengths' → logprob: -10.256142616271973
    6. 'dist' → logprob: -11.381142616271973
    7. ')_' → logprob: -11.631142616271973
    8. ')' → logprob: -11.881142616271973
    9. '_ranges' → logprob: -12.131142616271973
    10. '_' → logprob: -12.256142616271973

Token 376: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -13.125005722045898
    3. 'aces' → logprob: -13.375005722045898
    4. 'ance' → logprob: -14.250005722045898
    5. 'ces' → logprob: -14.875005722045898
    6. 'anc' → logprob: -15.250005722045898
    7. '```' → logprob: -15.375005722045898
    8. 'ANCES' → logprob: -15.625005722045898
    9. '       ' → logprob: -16.3750057220459
    10. '[' → logprob: -16.5000057220459

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004409939981997013
    2. ',' → logprob: -6.1294097900390625
    3. '):
' → logprob: -6.1294097900390625
    4. ')' → logprob: -10.754409790039062
    5. '   ' → logprob: -11.629409790039062
    6. '       ' → logprob: -12.004409790039062
    7. '):
' → logprob: -12.379409790039062
    8. ':' → logprob: -13.379409790039062
    9. ' ):' → logprob: -13.504409790039062
    10. '    ' → logprob: -15.754409790039062

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005965200834907591
    2. 'self' → logprob: -8.625596046447754
    3. '
' → logprob: -9.000596046447754
    4. ',' → logprob: -9.375596046447754
    5. ' self' → logprob: -9.375596046447754
    6. '        
' → logprob: -10.375596046447754
    7. '```' → logprob: -10.500596046447754
    8. '<|end|>' → logprob: -10.500596046447754
    9. '[' → logprob: -11.250596046447754
    10. '      ' → logprob: -12.625596046447754

Token 379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.040277160704135895
    2. ' self' → logprob: -3.4152772426605225
    3. '       ' → logprob: -5.040277004241943
    4. 'data' → logprob: -9.040277481079102
    5. ' data' → logprob: -12.165277481079102
    6. '```' → logprob: -12.665277481079102
    7. '	self' → logprob: -13.165277481079102
    8. 'new' → logprob: -13.665277481079102
    9. 'd' → logprob: -13.665277481079102
    10. '   ' → logprob: -13.915277481079102

Token 380: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.875001907348633
    3. 'data' → logprob: -14.125001907348633
    4. '.dat' → logprob: -15.875001907348633
    5. '.vertical' → logprob: -15.875001907348633
    6. '.datas' → logprob: -16.125001907348633
    7. '.user' → logprob: -16.250001907348633
    8. '.d' → logprob: -17.125001907348633
    9. '.add' → logprob: -17.625001907348633
    10. '
' → logprob: -17.625001907348633

Token 381: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -8.542423165636137e-05
    2. '_set' → logprob: -9.500085830688477
    3. '.append' → logprob: -11.625085830688477
    4. '_' → logprob: -14.750085830688477
    5. '.setdefault' → logprob: -15.000085830688477
    6. '       ' → logprob: -15.250085830688477
    7. ' _' → logprob: -16.125085830688477
    8. '   ' → logprob: -16.250085830688477
    9. '=_' → logprob: -17.000085830688477
    10. '.set' → logprob: -17.125085830688477

Token 382: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.25001335144043
    3. ' .' → logprob: -15.37501335144043
    4. '.app' → logprob: -15.50001335144043
    5. 'append' → logprob: -15.62501335144043
    6. '.ap' → logprob: -17.25001335144043
    7. '.extend' → logprob: -17.87501335144043
    8. ').' → logprob: -19.25001335144043
    9. '.push' → logprob: -19.87501335144043
    10. '	append' → logprob: -19.87501335144043

Token 383: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001353806466795504
    2. '(' → logprob: -6.751353740692139
    3. '(
' → logprob: -8.751354217529297
    4. '({
' → logprob: -10.876354217529297
    5. '(((' → logprob: -12.501354217529297
    6. '({' → logprob: -13.376354217529297
    7. '({'' → logprob: -14.626354217529297
    8. '(({' → logprob: -15.126354217529297
    9. '([' → logprob: -15.501354217529297
    10. '(([' → logprob: -16.251354217529297

Token 384: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.3458322731312364e-06
    2. ' n' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.625007629394531
    4. '
' → logprob: -15.625007629394531
    5. '       ' → logprob: -17.87500762939453
    6. 'vertical' → logprob: -17.87500762939453
    7. '	n' → logprob: -18.12500762939453
    8. '[n' → logprob: -18.25000762939453
    9. '(n' → logprob: -18.50000762939453
    10. ')n' → logprob: -18.62500762939453

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003112711710855365
    2. ' ,' → logprob: -8.625310897827148
    3. ',m' → logprob: -9.000310897827148
    4. ',
' → logprob: -12.000310897827148
    5. 'm' → logprob: -14.375310897827148
    6. '   ' → logprob: -14.750310897827148
    7. ',n' → logprob: -15.000310897827148
    8. '-' → logprob: -15.500310897827148
    9. '       ' → logprob: -16.25031089782715
    10. '
' → logprob: -16.62531089782715

Token 386: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061969365924596786
    2. ' m' → logprob: -2.81196928024292
    3. '   ' → logprob: -14.311969757080078
    4. ' ' → logprob: -14.686969757080078
    5. '    ' → logprob: -15.436969757080078
    6. ' 
' → logprob: -15.936969757080078
    7. '
' → logprob: -16.186969757080078
    8. '       ' → logprob: -16.811969757080078
    9. '	m' → logprob: -16.936969757080078
    10. '  ' → logprob: -17.436969757080078

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',
' → logprob: -11.875019073486328
    4. '       ' → logprob: -15.000019073486328
    5. '   ' → logprob: -16.125019073486328
    6. '           ' → logprob: -16.250019073486328
    7. '),' → logprob: -17.125019073486328
    8. ')' → logprob: -17.250019073486328
    9. '
' → logprob: -17.625019073486328
    10. '        ' → logprob: -17.750019073486328

Token 388: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.3132747709751129
    2. ' vertical' → logprob: -1.3132747411727905
    3. 'vert' → logprob: -12.563274383544922
    4. '        ' → logprob: -13.313274383544922
    5. 'horizontal' → logprob: -13.313274383544922
    6. '    ' → logprob: -13.938274383544922
    7. '(vertical' → logprob: -14.063274383544922
    8. ' ' → logprob: -14.438274383544922
    9. '_vertical' → logprob: -14.688274383544922
    10. '            ' → logprob: -14.688274383544922

Token 389: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.1054253011243418e-05
    2. 'dist' → logprob: -11.250020980834961
    3. '_d' → logprob: -13.375020980834961
    4. '_' → logprob: -14.000020980834961
    5. ')_' → logprob: -14.250020980834961
    6. ',' → logprob: -14.250020980834961
    7. '
' → logprob: -14.250020980834961
    8. ')' → logprob: -14.625020980834961
    9. '_,' → logprob: -15.500020980834961
    10. '_dis' → logprob: -15.500020980834961

Token 390: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.006799798924475908
    2. '_dist' → logprob: -5.131799697875977
    3. 'ences' → logprob: -7.881799697875977
    4. 'dist' → logprob: -8.756799697875977
    5. 'ces' → logprob: -10.131799697875977
    6. 'ist' → logprob: -10.131799697875977
    7. 'Distances' → logprob: -10.131799697875977
    8. '_' → logprob: -10.256799697875977
    9. 's' → logprob: -10.256799697875977
    10. ' distances' → logprob: -11.006799697875977

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012642296496778727
    2. ',
' → logprob: -9.625126838684082
    3. ' ,' → logprob: -10.250126838684082
    4. ',h' → logprob: -10.625126838684082
    5. '       ' → logprob: -15.875126838684082
    6. ',

' → logprob: -15.875126838684082
    7. ')' → logprob: -16.375125885009766
    8. '<|end|>' → logprob: -16.875125885009766
    9. '),' → logprob: -17.000125885009766
    10. '           ' → logprob: -17.250125885009766

Token 392: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.25192990899086
    2. ' horizontal' → logprob: -1.5019298791885376
    3. 'hor' → logprob: -15.251930236816406
    4. '.horizontal' → logprob: -16.001930236816406
    5. '(horizontal' → logprob: -16.251930236816406
    6. '           ' → logprob: -16.626930236816406
    7. 'h' → logprob: -16.751930236816406
    8. '_horizontal' → logprob: -16.876930236816406
    9. ' горизонт' → logprob: -17.501930236816406
    10. ' horizont' → logprob: -18.001930236816406

Token 393: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.289473822107539e-05
    2. 'dist' → logprob: -9.875062942504883
    3. '_d' → logprob: -12.375062942504883
    4. '_' → logprob: -12.625062942504883
    5. ')' → logprob: -13.875062942504883
    6. ')_' → logprob: -14.750062942504883
    7. '```' → logprob: -15.125062942504883
    8. '   ' → logprob: -15.500062942504883
    9. '_)' → logprob: -15.500062942504883
    10. '_g' → logprob: -15.500062942504883

Token 394: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0007420878973789513
    2. 'ues' → logprob: -7.875741958618164
    3. 'ces' → logprob: -8.750741958618164
    4. 'aces' → logprob: -9.375741958618164
    5. 's' → logprob: -9.625741958618164
    6. 'uces' → logprob: -11.375741958618164
    7. '   ' → logprob: -11.750741958618164
    8. 'ences' → logprob: -11.875741958618164
    9. 'es' → logprob: -12.125741958618164
    10. 'u' → logprob: -12.250741958618164

Token 395: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06201731413602829
    2. ')' → logprob: -2.8120172023773193
    3. '))
' → logprob: -10.437017440795898
    4. '       ' → logprob: -11.062017440795898
    5. ')))' → logprob: -13.562017440795898
    6. ')
' → logprob: -13.937017440795898
    7. ')}' → logprob: -14.437017440795898
    8. '   ' → logprob: -14.437017440795898
    9. ' ))' → logprob: -14.687017440795898
    10. '),' → logprob: -15.437017440795898

Token 396: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09818462282419205
    2. '   ' → logprob: -2.723184585571289
    3. 'def' → logprob: -3.848184585571289
    4. '```' → logprob: -5.473184585571289
    5. '<|end|>' → logprob: -6.848184585571289
    6. ' def' → logprob: -7.098184585571289
    7. '    
' → logprob: -8.848184585571289
    8. '	def' → logprob: -9.473184585571289
    9. '<|end|>' → logprob: -9.848184585571289
    10. '

' → logprob: -10.473184585571289

Token 397: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.6895233531831764e-05
    2. ' def' → logprob: -10.75002670288086
    3. '   ' → logprob: -12.50002670288086
    4. '
' → logprob: -13.37502670288086
    5. '	def' → logprob: -16.75002670288086
    6. '```' → logprob: -17.25002670288086
    7. '    
' → logprob: -20.00002670288086
    8. ' ' → logprob: -20.37502670288086
    9. '  ' → logprob: -21.37502670288086
    10. ':def' → logprob: -22.25002670288086

Token 398: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5838583111763
    2. 'solve' → logprob: -0.8338583111763
    3. ' process' → logprob: -5.333858489990234
    4. 'def' → logprob: -6.708858489990234
    5. 'process' → logprob: -6.958858489990234
    6. ' def' → logprob: -7.458858489990234
    7. ' count' → logprob: -8.708858489990234
    8. 'count' → logprob: -9.458858489990234
    9. ' run' → logprob: -10.583858489990234
    10. ' compute' → logprob: -11.083858489990234

Token 399: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.250000953674316
    3. 'self' → logprob: -15.375000953674316
    4. '(s' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '_all' → logprob: -17.750001907348633
    7. ' (' → logprob: -18.125001907348633
    8. '_(' → logprob: -18.250001907348633
    9. '       ' → logprob: -18.375001907348633
    10. '(sel' → logprob: -18.625001907348633

Token 400: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4923914074897766
    2. '):' → logprob: -0.9923914074897766
    3. ',' → logprob: -4.117391586303711
    4. 'self' → logprob: -6.742391586303711
    5. '):
' → logprob: -7.492391586303711
    6. '   ' → logprob: -10.367391586303711
    7. ',self' → logprob: -10.492391586303711
    8. ')' → logprob: -11.367391586303711
    9. '):

' → logprob: -11.617391586303711
    10. '       ' → logprob: -11.742391586303711

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15084050595760345
    2. 'results' → logprob: -2.2758405208587646
    3. ' results' → logprob: -3.6508405208587646
    4. 'result' → logprob: -4.5258402824401855
    5. ' result' → logprob: -8.400840759277344
    6. '```' → logprob: -8.650840759277344
    7. 'solutions' → logprob: -10.775840759277344
    8. 'outputs' → logprob: -11.025840759277344
    9. '	results' → logprob: -11.150840759277344
    10. 'output' → logprob: -11.400840759277344

Token 402: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.10079670697450638
    2. ' results' → logprob: -2.350796699523926
    3. '       ' → logprob: -7.600796699523926
    4. 'result' → logprob: -9.725796699523926
    5. 'for' → logprob: -11.850796699523926
    6. 'answers' → logprob: -12.225796699523926
    7. '	results' → logprob: -12.350796699523926
    8. 'outputs' → logprob: -12.350796699523926
    9. ' for' → logprob: -12.600796699523926
    10. ' result' → logprob: -12.725796699523926

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005235767923295498
    2. '=' → logprob: -5.25523567199707
    3. '=[]' → logprob: -13.88023567199707
    4. ' ' → logprob: -14.38023567199707
    5. '=[]
' → logprob: -15.63023567199707
    6. '   ' → logprob: -16.63023567199707
    7. '[]' → logprob: -16.88023567199707
    8. '  ' → logprob: -17.75523567199707
    9. '	' → logprob: -17.75523567199707
    10. ' =[' → logprob: -17.75523567199707

Token 404: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014324624091386795
    2. '[]
' → logprob: -4.26432466506958
    3. ' []' → logprob: -8.764324188232422
    4. ' []
' → logprob: -12.264324188232422
    5. '[]

' → logprob: -15.389324188232422
    6. '[' → logprob: -16.639324188232422
    7. '[]"' → logprob: -17.764324188232422
    8. '[])' → logprob: -19.764324188232422
    9. '   ' → logprob: -20.389324188232422
    10. '[])
' → logprob: -20.389324188232422

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039386264979839325
    2. ' for' → logprob: -3.53938627243042
    3. '<|end|>' → logprob: -5.53938627243042
    4. '
' → logprob: -5.78938627243042
    5. '```' → logprob: -6.53938627243042
    6. '        
' → logprob: -7.78938627243042
    7. 'for' → logprob: -7.91438627243042
    8. '<|end|>' → logprob: -9.414385795593262
    9. '   ' → logprob: -9.914385795593262
    10. '  
' → logprob: -10.164385795593262

Token 406: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002888682356569916
    2. ' for' → logprob: -8.250288963317871
    3. '       ' → logprob: -10.500288963317871
    4. '```' → logprob: -17.500288009643555
    5. '	for' → logprob: -18.750288009643555
    6. '   ' → logprob: -19.125288009643555
    7. '``' → logprob: -21.875288009643555
    8. ' ' → logprob: -22.250288009643555
    9. 'from' → logprob: -22.375288009643555
    10. '
' → logprob: -24.125288009643555

Token 407: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.302944153547287
    2. 'n' → logprob: -1.4279441833496094
    3. '(n' → logprob: -4.177944183349609
    4. ' (' → logprob: -5.427944183349609
    5. ' data' → logprob: -6.552944183349609
    6. 'data' → logprob: -8.30294418334961
    7. '(' → logprob: -9.17794418334961
    8. ' ' → logprob: -11.05294418334961
    9. '_n' → logprob: -11.42794418334961
    10. '   ' → logprob: -11.42794418334961

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ',m' → logprob: -9.500086784362793
    3. ' ,' → logprob: -11.375086784362793
    4. 'm' → logprob: -14.625086784362793
    5. '_,' → logprob: -17.00008773803711
    6. ',
' → logprob: -17.25008773803711
    7. '‌,' → logprob: -18.50008773803711
    8. ',self' → logprob: -18.50008773803711
    9. '```' → logprob: -18.87508773803711
    10. '<|end|>' → logprob: -19.12508773803711

Token 409: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01416350994259119
    2. ' m' → logprob: -4.264163494110107
    3. ' ' → logprob: -19.264163970947266
    4. '    ' → logprob: -19.389163970947266
    5. '   ' → logprob: -19.764163970947266
    6. '       ' → logprob: -20.014163970947266
    7. '	m' → logprob: -20.514163970947266
    8. '<|end|>' → logprob: -20.514163970947266
    9. ',' → logprob: -20.639163970947266
    10. '  ' → logprob: -21.139163970947266

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ' ,' → logprob: -11.000025749206543
    3. ',v' → logprob: -12.375025749206543
    4. ',h' → logprob: -13.750025749206543
    5. ',m' → logprob: -13.875025749206543
    6. ',n' → logprob: -14.000025749206543
    7. '_,' → logprob: -14.750025749206543
    8. ',user' → logprob: -15.125025749206543
    9. ',
' → logprob: -16.250024795532227
    10. ',d' → logprob: -16.250024795532227

Token 411: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.01643127202987671
    2. ' vertical' → logprob: -4.1414313316345215
    3. 'v' → logprob: -7.8914313316345215
    4. 'vert' → logprob: -11.391430854797363
    5. '   ' → logprob: -12.391430854797363
    6. '       ' → logprob: -13.266430854797363
    7. '(vertical' → logprob: -13.766430854797363
    8. '           ' → logprob: -14.141430854797363
    9. 'vs' → logprob: -14.141430854797363
    10. ' v' → logprob: -14.141430854797363

Token 412: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02000090852379799
    2. ',' → logprob: -4.14500093460083
    3. '_g' → logprob: -6.27000093460083
    4. '_,' → logprob: -6.77000093460083
    5. '_d' → logprob: -8.020000457763672
    6. ',_' → logprob: -8.145000457763672
    7. '_' → logprob: -9.520000457763672
    8. '       ' → logprob: -10.270000457763672
    9. '           ' → logprob: -10.645000457763672
    10. ' ,' → logprob: -10.645000457763672

Token 413: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.004779230337589979
    2. ',' → logprob: -5.50477933883667
    3. 'ences' → logprob: -8.879778861999512
    4. '       ' → logprob: -9.004778861999512
    5. '   ' → logprob: -9.129778861999512
    6. 's' → logprob: -9.629778861999512
    7. '           ' → logprob: -10.004778861999512
    8. '_dist' → logprob: -10.129778861999512
    9. 'aces' → logprob: -10.629778861999512
    10. '_lengths' → logprob: -11.004778861999512

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -15.875003814697266
    4. '<|end|>' → logprob: -16.750003814697266
    5. '[],' → logprob: -17.375003814697266
    6. '_,' → logprob: -18.250003814697266
    7. '[' → logprob: -19.000003814697266
    8. ',m' → logprob: -19.000003814697266
    9. ',n' → logprob: -19.250003814697266
    10. '       ' → logprob: -19.375003814697266

Token 415: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.6931560039520264
    2. 'horizontal' → logprob: -0.6931560039520264
    3. '           ' → logprob: -12.318156242370605
    4. '               ' → logprob: -13.693156242370605
    5. '(horizontal' → logprob: -14.693156242370605
    6. '            ' → logprob: -14.943156242370605
    7. '.horizontal' → logprob: -14.943156242370605
    8. '       ' → logprob: -15.193156242370605
    9. '        ' → logprob: -15.318156242370605
    10. '_horizontal' → logprob: -15.443156242370605

Token 416: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.933173426659778e-05
    2. '_d' → logprob: -10.750069618225098
    3. ',' → logprob: -11.875069618225098
    4. '_' → logprob: -12.000069618225098
    5. '_g' → logprob: -12.000069618225098
    6. 'dist' → logprob: -12.125069618225098
    7. '_lengths' → logprob: -12.250069618225098
    8. '       ' → logprob: -12.500069618225098
    9. '   ' → logprob: -12.875069618225098
    10. '_,' → logprob: -13.000069618225098

Token 417: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -6.992775888647884e-05
    2. '   ' → logprob: -10.875069618225098
    3. 'aces' → logprob: -11.625069618225098
    4. '       ' → logprob: -11.750069618225098
    5. 'ences' → logprob: -12.000069618225098
    6. 'ancies' → logprob: -13.000069618225098
    7. 'u' → logprob: -13.000069618225098
    8. 'ces' → logprob: -13.000069618225098
    9. 'ance' → logprob: -13.125069618225098
    10. 'anc' → logprob: -13.125069618225098

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025275067891925573
    2. 'in' → logprob: -6.002527713775635
    3. ',' → logprob: -10.002527236938477
    4. ':
' → logprob: -13.502527236938477
    5. ':' → logprob: -14.002527236938477
    6. '       ' → logprob: -14.127527236938477
    7. '        ' → logprob: -14.502527236938477
    8. '):
' → logprob: -14.502527236938477
    9. ')' → logprob: -14.627527236938477
    10. '<|end|>' → logprob: -14.627527236938477

Token 419: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234356038272381
    2. ' self' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130234718322754
    4. '       ' → logprob: -16.005233764648438
    5. '(self' → logprob: -16.130233764648438
    6. '[self' → logprob: -17.630233764648438
    7. '	self' → logprob: -17.880233764648438
    8. '
' → logprob: -18.005233764648438
    9. ' ' → logprob: -18.255233764648438
    10. '           ' → logprob: -18.505233764648438

Token 420: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00018101456225849688
    2. 'data' → logprob: -8.625181198120117
    3. '.' → logprob: -14.625181198120117
    4. ' data' → logprob: -15.000181198120117
    5. ' .' → logprob: -15.625181198120117
    6. 'self' → logprob: -15.625181198120117
    7. '
' → logprob: -15.875181198120117
    8. '   ' → logprob: -16.875181198120117
    9. '	data' → logprob: -17.375181198120117
    10. ' ' → logprob: -17.375181198120117

Token 421: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -8.77627644513268e-06
    2. 'sets' → logprob: -11.750008583068848
    3. 's' → logprob: -14.750008583068848
    4. '_set' → logprob: -15.625008583068848
    5. '_s' → logprob: -16.375009536743164
    6. ' sets' → logprob: -16.625009536743164
    7. 'ets' → logprob: -16.625009536743164
    8. '_' → logprob: -17.125009536743164
    9. 'Sets' → logprob: -17.375009536743164
    10. 'set' → logprob: -18.875009536743164

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2522374987602234
    2. ':
' → logprob: -1.5022375583648682
    3. '       ' → logprob: -9.502237319946289
    4. ',' → logprob: -9.627237319946289
    5. '):
' → logprob: -9.627237319946289
    6. '           ' → logprob: -10.002237319946289
    7. '():
' → logprob: -11.127237319946289
    8. ':

' → logprob: -11.377237319946289
    9. '<|end|>' → logprob: -11.502237319946289
    10. '<|end|>' → logprob: -11.627237319946289

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13123410940170288
    2. '       ' → logprob: -2.1312341690063477
    3. '<|end|>' → logprob: -6.006234169006348
    4. ',' → logprob: -7.506234169006348
    5. '        
' → logprob: -8.381234169006348
    6. '```' → logprob: -8.506234169006348
    7. '<|end|>' → logprob: -8.506234169006348
    8. '   ' → logprob: -9.631234169006348
    9. ' s' → logprob: -9.881234169006348
    10. '    
' → logprob: -9.943734169006348

Token 424: ' counter' (ID: 9446)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.9688833355903625
    2. '           ' → logprob: -1.4688832759857178
    3. 'counter' (adapté à ' counter') → logprob: -1.5938832759857178
    4. ' counter' → logprob: -1.9688832759857178
    5. ' solver' → logprob: -3.2188832759857178
    6. 'square' → logprob: -5.718883514404297
    7. 'sc' → logprob: -6.593883514404297
    8. ' square' → logprob: -6.843883514404297
    9. 's' → logprob: -7.968883514404297
    10. ' squares' → logprob: -8.218883514404297

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007606270257383585
    2. '=' → logprob: -4.882606506347656
    3. ' ' → logprob: -17.007606506347656
    4. '   ' → logprob: -17.507606506347656
    5. ' =
' → logprob: -17.632606506347656
    6. '	' → logprob: -18.382606506347656
    7. '  ' → logprob: -18.632606506347656
    8. 's' → logprob: -18.632606506347656
    9. '    ' → logprob: -19.132606506347656
    10. ' =
' → logprob: -19.257606506347656

Token 426: ' Square' (ID: 22980)
  Prédit: ' Square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Square' → logprob: -0.6931471824645996
    2. 'Square' → logprob: -0.6931471824645996
    3. ' square' → logprob: -17.193147659301758
    4. 'Squ' → logprob: -17.818147659301758
    5. 'Sq' → logprob: -17.943147659301758
    6. '_square' → logprob: -18.943147659301758
    7. 'Squares' → logprob: -19.068147659301758
    8. 'Squared' → logprob: -19.318147659301758
    9. 'Cube' → logprob: -20.193147659301758
    10. '
' → logprob: -20.318147659301758

Token 427: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -9.088346359931165e-07
    2. 'Count' → logprob: -14.000000953674316
    3. 'Coun' → logprob: -17.25
    4. 'ounter' → logprob: -17.75
    5. 'counter' → logprob: -17.875
    6. '```' → logprob: -19.25
    7. ' Counter' → logprob: -19.625
    8. '_counter' → logprob: -19.875
    9. 'Counting' → logprob: -21.0
    10. '.Counter' → logprob: -21.125

Token 428: '(vertical' (ID: 154834)
  Prédit: '(vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertical' → logprob: -0.00014406509581021965
    2. 'vertical' → logprob: -8.875144004821777
    3. '(horizontal' → logprob: -13.125144004821777
    4. '(' → logprob: -14.000144004821777
    5. ' vertical' → logprob: -14.750144004821777
    6. '.vertical' → logprob: -15.125144004821777
    7. '(
' → logprob: -15.750144004821777
    8. '   ' → logprob: -15.875144004821777
    9. 'Vertical' → logprob: -16.500144958496094
    10. ' (' → logprob: -16.750144958496094

Token 429: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.2948405128554441e-05
    2. 'dist' → logprob: -11.37501335144043
    3. '_dis' → logprob: -15.75001335144043
    4. '_d' → logprob: -15.87501335144043
    5. '	dist' → logprob: -16.00001335144043
    6. '.dist' → logprob: -16.25001335144043
    7. 'Distances' → logprob: -16.25001335144043
    8. '=' → logprob: -16.62501335144043
    9. '```' → logprob: -16.62501335144043
    10. ')' → logprob: -16.87501335144043

Token 430: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.000573763158172369
    2. 'g' → logprob: -8.375574111938477
    3. 'ences' → logprob: -9.250574111938477
    4. 'ices' → logprob: -10.250574111938477
    5. 'aces' → logprob: -10.250574111938477
    6. 'ages' → logprob: -10.250574111938477
    7. '   ' → logprob: -10.750574111938477
    8. 'Distances' → logprob: -10.750574111938477
    9. 'ance' → logprob: -11.250574111938477
    10. 'al' → logprob: -11.625574111938477

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.4192871175473556e-05
    2. ' ,' → logprob: -10.125054359436035
    3. ',
' → logprob: -12.000054359436035
    4. ',h' → logprob: -12.125054359436035
    5. 'horizontal' → logprob: -13.625054359436035
    6. '[' → logprob: -15.125054359436035
    7. '(horizontal' → logprob: -15.500054359436035
    8. ' horizontal' → logprob: -15.750054359436035
    9. '       ' → logprob: -15.875054359436035
    10. '   ' → logprob: -15.875054359436035

Token 432: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.0015024791937321424
    2. ' horizontal' → logprob: -6.501502513885498
    3. '           ' → logprob: -16.251502990722656
    4. '.horizontal' → logprob: -18.126502990722656
    5. 'hor' → logprob: -18.751502990722656
    6. '   ' → logprob: -19.126502990722656
    7. '               ' → logprob: -19.376502990722656
    8. '       ' → logprob: -19.376502990722656
    9. 'Horizontal' → logprob: -19.376502990722656
    10. '_horizontal' → logprob: -19.376502990722656

Token 433: '_dist' (ID: 37968)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.0025025326758623123
    2. '_horizontal' → logprob: -6.50250244140625
    3. '_dist' → logprob: -7.12750244140625
    4. ' horizontal' → logprob: -9.12750244140625
    5. 'dist' → logprob: -9.75250244140625
    6. '(horizontal' → logprob: -11.25250244140625
    7. 'orizontal' → logprob: -11.62750244140625
    8. 'h' → logprob: -13.50250244140625
    9. '_' → logprob: -13.62750244140625
    10. 'g' → logprob: -13.75250244140625

Token 434: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0036366537678986788
    2. 'ces' → logprob: -5.878636837005615
    3. 'aces' → logprob: -7.503636837005615
    4. 'ences' → logprob: -9.503636360168457
    5. 'ges' → logprob: -10.253636360168457
    6. '   ' → logprob: -10.253636360168457
    7. 'ices' → logprob: -10.378636360168457
    8. 'ist' → logprob: -10.628636360168457
    9. 'uces' → logprob: -11.253636360168457
    10. 'es' → logprob: -11.378636360168457

Token 435: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520442605018616
    2. ')' → logprob: -1.5020442008972168
    3. ')
' → logprob: -9.127044677734375
    4. '           ' → logprob: -13.002044677734375
    5. ').' → logprob: -13.252044677734375
    6. ')

' → logprob: -13.377044677734375
    7. ' )
' → logprob: -15.002044677734375
    8. '       ' → logprob: -15.377044677734375
    9. '               ' → logprob: -16.127044677734375
    10. ')`
' → logprob: -16.127044677734375

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008863262482918799
    2. '<|end|>' → logprob: -8.250885963439941
    3. 'results' → logprob: -9.000885963439941
    4. ' results' → logprob: -9.125885963439941
    5. '
' → logprob: -9.375885963439941
    6. '<|end|>' → logprob: -9.750885963439941
    7. 'result' → logprob: -10.000885963439941
    8. '.append' → logprob: -10.375885963439941
    9. '       ' → logprob: -10.375885963439941
    10. ' result' → logprob: -10.750885963439941

Token 437: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.01750963367521763
    2. ' results' → logprob: -4.267509460449219
    3. 'result' → logprob: -6.017509460449219
    4. '           ' → logprob: -7.642509460449219
    5. 'count' → logprob: -7.892509460449219
    6. ' result' → logprob: -10.142509460449219
    7. 'counts' → logprob: -12.267509460449219
    8. '	results' → logprob: -12.642509460449219
    9. ' count' → logprob: -12.892509460449219
    10. '       ' → logprob: -13.892509460449219

Token 438: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.704065213445574e-05
    2. '.' → logprob: -10.000046730041504
    3. '.extend' → logprob: -13.625046730041504
    4. '.ap' → logprob: -15.750046730041504
    5. '.app' → logprob: -16.12504768371582
    6. 'append' → logprob: -17.25004768371582
    7. '.push' → logprob: -18.00004768371582
    8. ' .' → logprob: -18.25004768371582
    9. '.Append' → logprob: -19.12504768371582
    10. '_append' → logprob: -19.25004768371582

Token 439: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.00019948746194131672
    2. 'counter' → logprob: -9.000199317932129
    3. '(' → logprob: -9.500199317932129
    4. ' counter' → logprob: -14.375199317932129
    5. '(
' → logprob: -14.750199317932129
    6. '[counter' → logprob: -15.875199317932129
    7. '(count' → logprob: -16.125200271606445
    8. ' (' → logprob: -17.750200271606445
    9. '(

' → logprob: -18.625200271606445
    10. '	counter' → logprob: -19.125200271606445

Token 440: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -5.512236498361744e-07
    2. 'count' → logprob: -15.500000953674316
    3. '.' → logprob: -16.0
    4. ').' → logprob: -16.0
    5. ' .' → logprob: -16.375
    6. '.Count' → logprob: -18.875
    7. ' count' → logprob: -19.25
    8. '	count' → logprob: -19.75
    9. '.findall' → logprob: -20.125
    10. '<count' → logprob: -20.625

Token 441: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.433829159708694e-05
    2. '_' → logprob: -9.75007438659668
    3. 's' → logprob: -11.62507438659668
    4. '()' → logprob: -12.37507438659668
    5. ')' → logprob: -13.50007438659668
    6. '_)' → logprob: -14.50007438659668
    7. '())' → logprob: -15.00007438659668
    8. ')_' → logprob: -15.00007438659668
    9. ' _' → logprob: -15.75007438659668
    10. '_
' → logprob: -17.75007438659668

Token 442: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -1.6405310816480778e-05
    2. 'q' → logprob: -12.250016212463379
    3. 's' → logprob: -13.000016212463379
    4. 'a' → logprob: -13.000016212463379
    5. 'ques' → logprob: -13.500016212463379
    6. 'qu' → logprob: -13.750016212463379
    7. '```' → logprob: -13.750016212463379
    8. 'quences' → logprob: -14.125016212463379
    9. '_' → logprob: -14.250016212463379
    10. '``' → logprob: -14.875016212463379

Token 443: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0049894400872290134
    2. '())
' → logprob: -5.5049896240234375
    3. '()' → logprob: -7.0049896240234375
    4. '()
' → logprob: -13.129989624023438
    5. '())

' → logprob: -14.254989624023438
    6. '())
' → logprob: -14.504989624023438
    7. ' ())' → logprob: -16.254989624023438
    8. '(' → logprob: -18.254989624023438
    9. ')' → logprob: -18.504989624023438
    10. '()]' → logprob: -18.879989624023438

Token 444: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5272181630134583
    2. '       ' → logprob: -0.9022181630134583
    3. 'return' → logprob: -6.027218341827393
    4. '
' → logprob: -7.152218341827393
    5. ' return' → logprob: -8.402217864990234
    6. '   ' → logprob: -8.652217864990234
    7. '        
' → logprob: -8.777217864990234
    8. '	' → logprob: -9.402217864990234
    9. '	return' → logprob: -9.402217864990234
    10. '```' → logprob: -9.652217864990234

Token 445: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001161769381724298
    2. '       ' → logprob: -7.001161575317383
    3. ' return' → logprob: -8.501161575317383
    4. '   ' → logprob: -10.501161575317383
    5. '
' → logprob: -11.251161575317383
    6. '	return' → logprob: -12.001161575317383
    7. '        
' → logprob: -16.251161575317383
    8. '```' → logprob: -16.501161575317383
    9. '    
' → logprob: -17.501161575317383
    10. ' ' → logprob: -17.626161575317383

Token 446: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.01416350994259119
    2. ' results' → logprob: -4.264163494110107
    3. '	results' → logprob: -17.889163970947266
    4. '(results' → logprob: -18.514163970947266
    5. '[' → logprob: -21.139163970947266
    6. '.results' → logprob: -22.139163970947266
    7. '_results' → logprob: -24.389163970947266
    8. 'Results' → logprob: -24.764163970947266
    9. '[]' → logprob: -24.889163970947266
    10. 'result' → logprob: -24.889163970947266

Token 447: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07259153574705124
    2. 'if' → logprob: -3.322591543197632
    3. '#' → logprob: -3.947591543197632
    4. '```' → logprob: -4.697591304779053
    5. 'n' → logprob: -5.322591304779053
    6. 'import' → logprob: -7.697591304779053
    7. '<|end|>' → logprob: -9.947591781616211
    8. 'data' → logprob: -10.322591781616211
    9. 'from' → logprob: -10.947591781616211
    10. 'd' → logprob: -11.072591781616211

Token 449: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.5854847431182861
    2. ' Square' → logprob: -1.9604847431182861
    3. 'Solution' → logprob: -2.710484743118286
    4. ' Solver' → logprob: -2.960484743118286
    5. ' Input' → logprob: -3.335484743118286
    6. ' Test' → logprob: -3.960484743118286
    7. ' Main' → logprob: -4.085484504699707
    8. ' Route' → logprob: -4.210484504699707
    9. 'Input' → logprob: -4.210484504699707
    10. ' Distance' → logprob: -4.335484504699707

Token 450: 'Handler' (ID: 4139)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.400762677192688
    2. 'Handler' → logprob: -1.275762677192688
    3. 'Parser' → logprob: -3.1507625579833984
    4. 'Data' → logprob: -5.650762557983398
    5. ':' → logprob: -6.275762557983398
    6. 'Processor' → logprob: -6.275762557983398
    7. '():' → logprob: -8.900762557983398
    8. ':
' → logprob: -9.150762557983398
    9. 'Provider' → logprob: -9.400762557983398
    10. 'Generator' → logprob: -9.650762557983398

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198841333389282
    2. ':
' → logprob: -2.811988353729248
    3. ':

' → logprob: -12.061988830566406
    4. '(object' → logprob: -12.561988830566406
    5. ':def' → logprob: -12.561988830566406
    6. '<|end|>' → logprob: -13.186988830566406
    7. '():
' → logprob: -13.311988830566406
    8. '():' → logprob: -13.561988830566406
    9. ':
' → logprob: -14.311988830566406
    10. '):' → logprob: -14.936988830566406

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009879447519779205
    2. ' def' → logprob: -4.6348795890808105
    3. 'def' → logprob: -9.009879112243652
    4. 'import' → logprob: -14.884879112243652
    5. '```' → logprob: -15.259879112243652
    6. '	def' → logprob: -15.509879112243652
    7. '<|end|>' → logprob: -16.13488006591797
    8. ',' → logprob: -16.38488006591797
    9. ':def' → logprob: -16.63488006591797
    10. ' class' → logprob: -16.88488006591797

Token 453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07889242470264435
    2. ' def' → logprob: -2.578892469406128
    3. '   ' → logprob: -12.828892707824707
    4. '@' → logprob: -17.45389175415039
    5. '	def' → logprob: -19.20389175415039
    6. 'import' → logprob: -19.45389175415039
    7. 'de' → logprob: -19.57889175415039
    8. ' @' → logprob: -19.57889175415039
    9. 'class' → logprob: -22.07889175415039
    10. ':def' → logprob: -22.57889175415039

Token 454: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17669346928596497
    2. ' __' → logprob: -2.4266934394836426
    3. 'def' → logprob: -2.8016934394836426
    4. 'staticmethod' → logprob: -4.926693439483643
    5. '__' → logprob: -5.801693439483643
    6. ' read' → logprob: -7.301693439483643
    7. 'read' → logprob: -7.801693439483643
    8. ' init' → logprob: -7.926693439483643
    9. 'init' → logprob: -8.4266939163208
    10. ' ' → logprob: -8.9266939163208

Token 455: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00013369438238441944
    2. 'iter' → logprob: -9.000133514404297
    3. 'int' → logprob: -13.375133514404297
    4. 'new' → logprob: -13.375133514404297
    5. '```' → logprob: -13.500133514404297
    6. '
' → logprob: -14.000133514404297
    7. '__' → logprob: -14.125133514404297
    8. 'enter' → logprob: -14.125133514404297
    9. 'nit' → logprob: -14.125133514404297
    10. 'in' → logprob: -15.000133514404297

Token 456: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06825631856918335
    2. '(' → logprob: -3.568256378173828
    3. '__(' → logprob: -3.693256378173828
    4. ' (' → logprob: -4.568256378173828
    5. '   ' → logprob: -7.068256378173828
    6. '
' → logprob: -7.443256378173828
    7. 'self' → logprob: -7.818256378173828
    8. '_(' → logprob: -7.943256378173828
    9. '()' → logprob: -9.318256378173828
    10. '>(' → logprob: -9.693256378173828

Token 457: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.318681188422488e-05
    2. ')' → logprob: -12.12501335144043
    3. '):
' → logprob: -12.12501335144043
    4. ' self' → logprob: -13.12501335144043
    5. '   ' → logprob: -15.87501335144043
    6. '
' → logprob: -16.50001335144043
    7. '       ' → logprob: -17.75001335144043
    8. '):

' → logprob: -18.50001335144043
    9. '	self' → logprob: -18.75001335144043
    10. '):' → logprob: -18.75001335144043

Token 458: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11566168069839478
    2. '):
' → logprob: -2.24066162109375
    3. ',' → logprob: -5.99066162109375
    4. ')' → logprob: -8.24066162109375
    5. 'self' → logprob: -9.86566162109375
    6. '):

' → logprob: -12.49066162109375
    7. '   ' → logprob: -12.74066162109375
    8. ' ):' → logprob: -13.11566162109375
    9. '():' → logprob: -13.24066162109375
    10. '):
' → logprob: -13.49066162109375

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7163638472557068
    2. 'self' → logprob: -0.7163638472557068
    3. '   ' → logprob: -3.8413639068603516
    4. '
' → logprob: -7.216363906860352
    5. ' self' → logprob: -7.841363906860352
    6. '):
' → logprob: -8.216363906860352
    7. '	self' → logprob: -10.716363906860352
    8. ')' → logprob: -11.216363906860352
    9. '           ' → logprob: -11.341363906860352
    10. '    
' → logprob: -11.966363906860352

Token 460: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013707260601222515
    2. 'pass' → logprob: -4.638707160949707
    3. ' self' → logprob: -5.638707160949707
    4. ' pass' → logprob: -8.388707160949707
    5. '   ' → logprob: -9.013707160949707
    6. '       ' → logprob: -10.388707160949707
    7. 'import' → logprob: -12.388707160949707
    8. 'def' → logprob: -13.888707160949707
    9. '	self' → logprob: -15.888707160949707
    10. 'super' → logprob: -16.138708114624023

Token 461: '.s' (ID: 640)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.053619321435689926
    2. '.s' → logprob: -3.803619384765625
    3. '.lines' → logprob: -4.303619384765625
    4. '.buffer' → logprob: -4.928619384765625
    5. '.square' → logprob: -6.303619384765625
    6. '.' → logprob: -6.553619384765625
    7. '.datasets' → logprob: -6.803619384765625
    8. '.routes' → logprob: -6.928619384765625
    9. '.results' → logprob: -7.178619384765625
    10. '.inputs' → logprob: -7.178619384765625

Token 462: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.3205859363079071
    2. 't' → logprob: -2.6955859661102295
    3. 'ets' → logprob: -2.8205859661102295
    4. 'olutions' → logprob: -2.8205859661102295
    5. 'td' → logprob: -3.9455859661102295
    6. 'quare' → logprob: -4.19558572769165
    7. 'quares' → logprob: -4.19558572769165
    8. 'olution' → logprob: -4.44558572769165
    9. 'olve' → logprob: -4.44558572769165
    10. 'et' → logprob: -5.82058572769165

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693158745765686
    2. ' =' → logprob: -0.693158745765686
    3. '   ' → logprob: -12.943159103393555
    4. ' ' → logprob: -12.943159103393555
    5. '=None' → logprob: -13.443159103393555
    6. '<|end|>' → logprob: -13.818159103393555
    7. '=[]' → logprob: -13.818159103393555
    8. '.' → logprob: -14.318159103393555
    9. '  ' → logprob: -14.443159103393555
    10. ')' → logprob: -14.693159103393555

Token 464: ' Square' (ID: 22980)
  Prédit: 'Square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Square' → logprob: -0.0067154900170862675
    2. ' Square' → logprob: -5.006715297698975
    3. 'Squ' → logprob: -16.881715774536133
    4. 'Sq' → logprob: -17.756715774536133
    5. ' ' → logprob: -20.756715774536133
    6. 'Cube' → logprob: -21.006715774536133
    7. 'Squared' → logprob: -21.006715774536133
    8. 'None' → logprob: -22.631715774536133
    9. 'SQ' → logprob: -22.756715774536133
    10. '_square' → logprob: -22.756715774536133

Token 465: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -3.128163257315464e-07
    2. 'Router' → logprob: -16.0
    3. 'Counter' → logprob: -17.375
    4. '	Route' → logprob: -17.75
    5. 'route' → logprob: -17.875
    6. ' Route' → logprob: -18.25
    7. '<Route' → logprob: -18.5
    8. '_route' → logprob: -18.875
    9. 'Routes' → logprob: -19.5
    10. '```' → logprob: -20.0

Token 466: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.999452772201039e-05
    2. 'solver' → logprob: -10.500029563903809
    3. ' solver' → logprob: -13.750029563903809
    4. ' Solver' → logprob: -14.250029563903809
    5. '_solver' → logprob: -14.250029563903809
    6. 'Solve' → logprob: -16.500030517578125
    7. 'olver' → logprob: -17.250030517578125
    8. 'Sol' → logprob: -17.625030517578125
    9. 'solve' → logprob: -19.375030517578125
    10. 'Solved' → logprob: -20.000030517578125

Token 467: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4751037359237671
    2. '   ' → logprob: -0.9751037359237671
    3. '    
' → logprob: -7.100103855133057
    4. '<|end|>' → logprob: -9.225103378295898
    5. '

' → logprob: -9.975103378295898
    6. 'def' → logprob: -10.225103378295898
    7. '        
' → logprob: -12.225103378295898
    8. ' def' → logprob: -12.475103378295898
    9. '<|end|>' → logprob: -12.600103378295898
    10. '
' → logprob: -12.975103378295898

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052743975073099136
    2. 'def' → logprob: -3.552743911743164
    3. ' def' → logprob: -3.802743911743164
    4. '
' → logprob: -7.802743911743164
    5. '	def' → logprob: -11.927743911743164
    6. '    
' → logprob: -12.552743911743164
    7. '<|end|>' → logprob: -13.302743911743164
    8. '```' → logprob: -14.677743911743164
    9. ' ' → logprob: -15.552743911743164
    10. '<|end|>' → logprob: -16.302743911743164

Token 469: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.517272024415433e-05
    2. ' def' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '
' → logprob: -18.12507438659668
    5. '	def' → logprob: -19.75007438659668
    6. 'd' → logprob: -20.12507438659668
    7. 'de' → logprob: -20.25007438659668
    8. 'import' → logprob: -22.00007438659668
    9. '```' → logprob: -22.75007438659668
    10. ' ' → logprob: -22.75007438659668

Token 470: ' process' (ID: 2273)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.11201860010623932
    2. 'process' → logprob: -2.987018585205078
    3. ' read' → logprob: -3.112018585205078
    4. ' process' → logprob: -5.112018585205078
    5. 'handle' → logprob: -5.987018585205078
    6. 'parse' → logprob: -6.237018585205078
    7. ' handle' → logprob: -8.487018585205078
    8. 'run' → logprob: -8.987018585205078
    9. ' parse' → logprob: -9.362018585205078
    10. 'load' → logprob: -9.862018585205078

Token 471: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.02585803158581257
    2. '_line' → logprob: -3.775857925415039
    3. '(self' → logprob: -6.400857925415039
    4. '_inputs' → logprob: -7.525857925415039
    5. '_lines' → logprob: -8.650857925415039
    6. '_' → logprob: -9.150857925415039
    7. '_data' → logprob: -9.275857925415039
    8. '(' → logprob: -11.525857925415039
    9. '()' → logprob: -11.525857925415039
    10. '_self' → logprob: -12.150857925415039

Token 472: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005549400229938328
    2. '(' → logprob: -7.500555038452148
    3. 'self' → logprob: -13.875555038452148
    4. ' (' → logprob: -13.875555038452148
    5. '()' → logprob: -17.12555503845215
    6. '(
' → logprob: -17.62555503845215
    7. '   ' → logprob: -17.75055503845215
    8. '():
' → logprob: -18.50055503845215
    9. '(sel' → logprob: -19.00055503845215
    10. '(line' → logprob: -19.12555503845215

Token 473: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04094277694821358
    2. '):' → logprob: -4.040942668914795
    3. 'self' → logprob: -4.165942668914795
    4. '):
' → logprob: -5.040942668914795
    5. ',self' → logprob: -8.165943145751953
    6. '(self' → logprob: -9.540943145751953
    7. '   ' → logprob: -9.540943145751953
    8. ' ,' → logprob: -10.540943145751953
    9. ',s' → logprob: -10.915943145751953
    10. ',input' → logprob: -11.040943145751953

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16842085123062134
    2. ' while' → logprob: -1.9184207916259766
    3. 'while' → logprob: -5.793420791625977
    4. '   ' → logprob: -6.293420791625977
    5. ' try' → logprob: -7.418420791625977
    6. ' line' → logprob: -7.668420791625977
    7. 'import' → logprob: -7.793420791625977
    8. ' lines' → logprob: -7.918420791625977
    9. '
' → logprob: -8.168420791625977
    10. '```' → logprob: -8.543420791625977

Token 475: ' import' (ID: 1588)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12802201509475708
    2. ' while' → logprob: -2.1280219554901123
    3. 'import' (adapté à ' import') → logprob: -6.878022193908691
    4. '       ' → logprob: -10.128022193908691
    5. '   ' → logprob: -11.503022193908691
    6. ' import' → logprob: -11.503022193908691
    7. 'n' → logprob: -13.753022193908691
    8. '```' → logprob: -13.878022193908691
    9. '
' → logprob: -14.503022193908691
    10. 'try' → logprob: -14.878022193908691

Token 476: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000553151941858232
    2. ' sys' → logprob: -7.500553131103516
    3. '=sys' → logprob: -16.500553131103516
    4. '	sys' → logprob: -18.125553131103516
    5. 'stdin' → logprob: -19.500553131103516
    6. '(sys' → logprob: -20.375553131103516
    7. '_sys' → logprob: -20.500553131103516
    8. '```' → logprob: -21.375553131103516
    9. '.sys' → logprob: -21.500553131103516
    10. 'math' → logprob: -22.750553131103516

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02370753325521946
    2. '
' → logprob: -3.898707628250122
    3. 'for' → logprob: -6.398707389831543
    4. '        
' → logprob: -7.523707389831543
    5. ' for' → logprob: -7.648707389831543
    6. ' line' → logprob: -8.398707389831543
    7. ' lines' → logprob: -9.898707389831543
    8. 'line' → logprob: -10.023707389831543
    9. 'while' → logprob: -10.898707389831543
    10. 'n' → logprob: -11.148707389831543

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001584850688232109
    2. 'for' → logprob: -9.250158309936523
    3. ' for' → logprob: -10.125158309936523
    4. 'while' → logprob: -11.375158309936523
    5. ' while' → logprob: -12.375158309936523
    6. ' lines' → logprob: -12.500158309936523
    7. '   ' → logprob: -14.625158309936523
    8. '        
' → logprob: -14.875158309936523
    9. 'line' → logprob: -15.000158309936523
    10. ' line' → logprob: -15.125158309936523

Token 479: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0948917493224144
    2. '       ' → logprob: -2.8448917865753174
    3. ' for' → logprob: -3.9698917865753174
    4. 'while' → logprob: -4.844891548156738
    5. 'lines' → logprob: -5.594891548156738
    6. ' lines' → logprob: -6.469891548156738
    7. ' while' → logprob: -7.969891548156738
    8. 'data' → logprob: -11.469891548156738
    9. 'results' → logprob: -11.844891548156738
    10. 'line' → logprob: -12.344891548156738

Token 480: '_iter' (ID: 27043)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6226465702056885
    2. '()' → logprob: -0.9976465702056885
    3. '_lines' → logprob: -3.1226465702056885
    4. ' =' → logprob: -3.8726465702056885
    5. '_data' → logprob: -4.122646331787109
    6. '=' → logprob: -5.497646331787109
    7. '().' → logprob: -5.622646331787109
    8. '_' → logprob: -5.997646331787109
    9. 'line' → logprob: -6.497646331787109
    10. '()
' → logprob: -7.747646331787109

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270768791437149
    2. '=' → logprob: -2.1270768642425537
    3. 'ator' → logprob: -9.002077102661133
    4. '()' → logprob: -11.127077102661133
    5. 'er' → logprob: -13.002077102661133
    6. 'or' → logprob: -13.002077102661133
    7. ' ' → logprob: -13.252077102661133
    8. '   ' → logprob: -13.627077102661133
    9. '_' → logprob: -14.002077102661133
    10. '_=' → logprob: -14.252077102661133

Token 482: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.002240654779598117
    2. ' iter' → logprob: -6.5022406578063965
    3. 'sys' → logprob: -7.2522406578063965
    4. '(iter' → logprob: -10.502240180969238
    5. ' sys' → logprob: -13.877240180969238
    6. '(sys' → logprob: -15.002240180969238
    7. 'input' → logprob: -15.127240180969238
    8. 'map' → logprob: -15.877240180969238
    9. '
' → logprob: -16.877241134643555
    10. '	iter' → logprob: -17.002241134643555

Token 483: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -7.958325295476243e-05
    2. '(input' → logprob: -10.250079154968262
    3. '(' → logprob: -10.375079154968262
    4. 'sys' → logprob: -12.125079154968262
    5. '(line' → logprob: -12.375079154968262
    6. '=sys' → logprob: -13.500079154968262
    7. '(iter' → logprob: -15.125079154968262
    8. ' sys' → logprob: -15.375079154968262
    9. '	sys' → logprob: -15.500079154968262
    10. '(lambda' → logprob: -15.625079154968262

Token 484: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.625000953674316
    3. '.argv' → logprob: -15.625000953674316
    4. '.stdout' → logprob: -16.875
    5. '.std' → logprob: -17.25
    6. ' .' → logprob: -17.75
    7. 'stdin' → logprob: -18.125
    8. '(stdin' → logprob: -20.125
    9. '.input' → logprob: -21.125
    10. '.st' → logprob: -21.375

Token 485: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.044821806252002716
    2. ')' → logprob: -3.1698217391967773
    3. '.readlines' → logprob: -6.419821739196777
    4. ')
' → logprob: -9.044821739196777
    5. '.' → logprob: -9.919821739196777
    6. '.read' → logprob: -11.044821739196777
    7. '())' → logprob: -12.544821739196777
    8. '.buffer' → logprob: -13.169821739196777
    9. ' readline' → logprob: -14.169821739196777
    10. '.)' → logprob: -14.294821739196777

Token 486: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002875569916795939
    2. '()' → logprob: -8.250288009643555
    3. '())' → logprob: -10.750288009643555
    4. '(' → logprob: -12.875288009643555
    5. '()
' → logprob: -13.375288009643555
    6. 'lines' → logprob: -15.500288009643555
    7. ' ().' → logprob: -15.625288009643555
    8. 'line' → logprob: -16.500288009643555
    9. '()\' → logprob: -16.875288009643555
    10. ')' → logprob: -17.500288009643555

Token 487: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03806283324956894
    2. 'split' → logprob: -3.288062810897827
    3. '().' → logprob: -11.288063049316406
    4. 'rstrip' → logprob: -12.288063049316406
    5. 'read' → logprob: -12.538063049316406
    6. 'decode' → logprob: -14.663063049316406
    7. 'lines' → logprob: -15.288063049316406
    8. '.strip' → logprob: -16.913063049316406
    9. '(strip' → logprob: -18.413063049316406
    10. 'str' → logprob: -18.913063049316406

Token 488: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.676292231422849e-05
    2. '()' → logprob: -11.000017166137695
    3. '('\' → logprob: -17.375017166137695
    4. ' ().' → logprob: -18.125017166137695
    5. '())' → logprob: -18.375017166137695
    6. '.split' → logprob: -19.125017166137695
    7. '()\' → logprob: -19.125017166137695
    8. '(' → logprob: -19.250017166137695
    9. '()
' → logprob: -20.375017166137695
    10. ')' → logprob: -20.750017166137695

Token 489: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.625
    3. 'spl' → logprob: -19.25
    4. '(split' → logprob: -21.5
    5. 'sp' → logprob: -21.75
    6. '.split' → logprob: -21.875
    7. '().' → logprob: -23.0
    8. 'replace' → logprob: -23.625
    9. 's' → logprob: -24.375
    10. 'strip' → logprob: -24.5

Token 490: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004951290902681649
    2. '()' → logprob: -7.750494956970215
    3. '())
' → logprob: -9.875494956970215
    4. '('\' → logprob: -11.875494956970215
    5. ')' → logprob: -13.625494956970215
    6. '(' → logprob: -13.750494956970215
    7. '()
' → logprob: -13.750494956970215
    8. '())

' → logprob: -13.875494956970215
    9. ' ())' → logprob: -14.375494956970215
    10. '()\' → logprob: -14.875494956970215

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011215222999453545
    2. 'n' → logprob: -5.2612152099609375
    3. '        
' → logprob: -5.3862152099609375
    4. '   ' → logprob: -8.136215209960938
    5. '        ' → logprob: -9.136215209960938
    6. 't' → logprob: -9.386215209960938
    7. '    
' → logprob: -9.511215209960938
    8. '	' → logprob: -9.511215209960938
    9. '      ' → logprob: -9.511215209960938
    10. '           ' → logprob: -9.761215209960938

Token 492: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0685226172208786
    2. 'try' → logprob: -3.0685226917266846
    3. '       ' → logprob: -4.1935224533081055
    4. 'n' → logprob: -5.9435224533081055
    5. ' while' → logprob: -6.5685224533081055
    6. 'for' → logprob: -7.5685224533081055
    7. '   ' → logprob: -10.193522453308105
    8. 't' → logprob: -10.443522453308105
    9. ' try' → logprob: -11.193522453308105
    10. 'w' → logprob: -12.193522453308105

Token 493: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.018175693228840828
    2. ' True' → logprob: -4.0181756019592285
    3. '(True' → logprob: -10.643176078796387
    4. 'true' → logprob: -14.143176078796387
    5. '
' → logprob: -14.768176078796387
    6. ' ' → logprob: -15.393176078796387
    7. '1' → logprob: -15.643176078796387
    8. '   ' → logprob: -15.893176078796387
    9. 'T' → logprob: -15.893176078796387
    10. 'Tr' → logprob: -16.14317512512207

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017945174127817154
    2. '           ' → logprob: -4.392945289611816
    3. ':
' → logprob: -5.267945289611816
    4. ',' → logprob: -8.642945289611816
    5. '       ' → logprob: -10.892945289611816
    6. 'try' → logprob: -11.517945289611816
    7. '.' → logprob: -11.892945289611816
    8. '):' → logprob: -12.017945289611816
    9. ' :' → logprob: -12.142945289611816
    10. '   ' → logprob: -12.267945289611816

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12786394357681274
    2. 'try' → logprob: -2.377863883972168
    3. ' try' → logprob: -3.877863883972168
    4. '   ' → logprob: -5.252863883972168
    5. '       ' → logprob: -6.627863883972168
    6. '	try' → logprob: -11.002863883972168
    7. '    ' → logprob: -12.627863883972168
    8. '	   ' → logprob: -13.377863883972168
    9. '.try' → logprob: -13.752863883972168
    10. 'Try' → logprob: -14.127863883972168

Token 496: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.5247473120689392
    2. 'n' → logprob: -0.8997473120689392
    3. '           ' → logprob: -7.024747371673584
    4. '   ' → logprob: -8.399746894836426
    5. ' try' → logprob: -8.649746894836426
    6. 'line' → logprob: -8.774746894836426
    7. 'N' → logprob: -9.774746894836426
    8. ' n' → logprob: -10.649746894836426
    9. 'num' → logprob: -10.774746894836426
    10. '       ' → logprob: -11.149746894836426

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10314960032701492
    2. ':
' → logprob: -2.353149652481079
    3. '               ' → logprob: -5.8531494140625
    4. '           ' → logprob: -9.8531494140625
    5. ' :' → logprob: -11.9781494140625
    6. '):
' → logprob: -13.2281494140625
    7. ':

' → logprob: -13.6031494140625
    8. '):' → logprob: -13.9781494140625
    9. ' :
' → logprob: -14.1031494140625
    10. ',' → logprob: -14.2281494140625

Token 498: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5746607184410095
    2. '           ' → logprob: -1.3246607780456543
    3. '               ' → logprob: -1.9496607780456543
    4. '   ' → logprob: -4.449660778045654
    5. 'num' → logprob: -4.449660778045654
    6. ' n' → logprob: -5.449660778045654
    7. 'line' → logprob: -7.199660778045654
    8. ' num' → logprob: -8.699660301208496
    9. ' line' → logprob: -9.199660301208496
    10. '       ' → logprob: -10.199660301208496

Token 499: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0005950896302238107
    2. ' n' → logprob: -7.6255950927734375
    3. 'N' → logprob: -9.750595092773438
    4. '   ' → logprob: -10.500595092773438
    5. '               ' → logprob: -11.500595092773438
    6. '                   ' → logprob: -11.875595092773438
    7. '           ' → logprob: -14.000595092773438
    8. ' ' → logprob: -14.250595092773438
    9. '	n' → logprob: -14.250595092773438
    10. '_n' → logprob: -14.625595092773438

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619937963783741
    2. '=' → logprob: -2.8119938373565674
    3. '=int' → logprob: -11.311993598937988
    4. ',' → logprob: -11.811993598937988
    5. ' ' → logprob: -13.061993598937988
    6. ' =
' → logprob: -13.811993598937988
    7. '   ' → logprob: -14.436993598937988
    8. 'int' → logprob: -14.936993598937988
    9. 'space' → logprob: -15.061993598937988
    10. ')' → logprob: -15.186993598937988

Token 501: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028203281108289957
    2. ' int' → logprob: -6.0028204917907715
    3. 'next' → logprob: -8.002820014953613
    4. ' next' → logprob: -11.502820014953613
    5. '<int' → logprob: -19.25282096862793
    6. '   ' → logprob: -19.25282096862793
    7. '=int' → logprob: -19.62782096862793
    8. '[int' → logprob: -19.62782096862793
    9. '(int' → logprob: -19.75282096862793
    10. ' ' → logprob: -20.00282096862793

Token 502: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00012130453251302242
    2. '(' → logprob: -9.500121116638184
    3. 'next' → logprob: -10.000121116638184
    4. ' next' → logprob: -14.250121116638184
    5. '(input' → logprob: -15.500121116638184
    6. '(
' → logprob: -17.1251220703125
    7. ' (' → logprob: -18.0001220703125
    8. '()' → logprob: -18.3751220703125
    9. '('' → logprob: -19.1251220703125
    10. '	next' → logprob: -19.3751220703125

Token 503: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0023398506455123425
    2. 'input' → logprob: -6.127339839935303
    3. '(' → logprob: -8.877340316772461
    4. ' input' → logprob: -11.377340316772461
    5. ' (' → logprob: -13.877340316772461
    6. ')' → logprob: -13.877340316772461
    7. '=input' → logprob: -14.002340316772461
    8. '(
' → logprob: -14.377340316772461
    9. ',input' → logprob: -15.002340316772461
    10. '[input' → logprob: -16.75234031677246

Token 504: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -3.297462171758525e-05
    2. '_iterator' → logprob: -11.125033378601074
    3. '_it' → logprob: -12.000033378601074
    4. 'iter' → logprob: -12.125033378601074
    5. '(iter' → logprob: -13.250033378601074
    6. '_input' → logprob: -13.500033378601074
    7. '_itr' → logprob: -14.125033378601074
    8. '_' → logprob: -14.375033378601074
    9. '(input' → logprob: -14.500033378601074
    10. '_inter' → logprob: -15.375033378601074

Token 505: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.031618814915418625
    2. ')' → logprob: -3.65661883354187
    3. '))
' → logprob: -5.281618595123291
    4. '()))' → logprob: -8.78161907196045
    5. ')
' → logprob: -10.65661907196045
    6. '()' → logprob: -11.40661907196045
    7. ' ))' → logprob: -11.40661907196045
    8. '())' → logprob: -11.78161907196045
    9. '()))
' → logprob: -12.53161907196045
    10. ' )' → logprob: -13.28161907196045

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005191935342736542
    2. 'if' → logprob: -8.625518798828125
    3. '                
' → logprob: -9.500518798828125
    4. '           ' → logprob: -9.500518798828125
    5. '<|end|>' → logprob: -9.750518798828125
    6. ' if' → logprob: -10.125518798828125
    7. '			' → logprob: -10.875518798828125
    8. '                ' → logprob: -11.250518798828125
    9. '              ' → logprob: -11.500518798828125
    10. ')' → logprob: -11.625518798828125

Token 507: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.06217315420508385
    2. 'if' → logprob: -2.8121731281280518
    3. '               ' → logprob: -8.687172889709473
    4. ' if' → logprob: -10.562172889709473
    5. ' m' → logprob: -12.312172889709473
    6. '           ' → logprob: -12.562172889709473
    7. '                   ' → logprob: -13.562172889709473
    8. '                
' → logprob: -15.062172889709473
    9. '              ' → logprob: -15.062172889709473
    10. '                ' → logprob: -15.437172889709473

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629990577698
    2. '=' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.438262939453125
    4. ')' → logprob: -14.438262939453125
    5. '<|end|>' → logprob: -16.688262939453125
    6. ',' → logprob: -16.938262939453125
    7. '   ' → logprob: -17.688262939453125
    8. ' =)' → logprob: -18.188262939453125
    9. '               ' → logprob: -18.688262939453125
    10. ')=' → logprob: -18.688262939453125

Token 509: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759401917457581
    2. ' int' → logprob: -0.8259401917457581
    3. '=int' → logprob: -14.825940132141113
    4. '(int' → logprob: -15.450940132141113
    5. '[int' → logprob: -16.20094108581543
    6. '<int' → logprob: -16.32594108581543
    7. ':int' → logprob: -17.45094108581543
    8. '	int' → logprob: -19.70094108581543
    9. ']int' → logprob: -19.95094108581543
    10. ' next' → logprob: -20.70094108581543

Token 510: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.01470975298434496
    2. 'next' → logprob: -4.264709949493408
    3. ' next' → logprob: -7.514709949493408
    4. '[next' → logprob: -14.13970947265625
    5. '.next' → logprob: -15.63970947265625
    6. '	next' → logprob: -16.26470947265625
    7. ',next' → logprob: -16.88970947265625
    8. 'Next' → logprob: -17.51470947265625
    9. '_next' → logprob: -18.38970947265625
    10. '(' → logprob: -19.13970947265625

Token 511: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00031746976310387254
    2. 'input' → logprob: -8.125317573547363
    3. '(next' → logprob: -11.125317573547363
    4. ' input' → logprob: -12.250317573547363
    5. ' (' → logprob: -14.625317573547363
    6. 'next' → logprob: -14.750317573547363
    7. ',input' → logprob: -14.875317573547363
    8. '=input' → logprob: -15.500317573547363
    9. '(' → logprob: -15.625317573547363
    10. '[input' → logprob: -15.875317573547363

Token 512: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -5.796184723294573e-06
    2. 'iter' → logprob: -12.125005722045898
    3. 'Iter' → logprob: -15.625005722045898
    4. '(input' → logprob: -17.1250057220459
    5. '(iter' → logprob: -18.3750057220459
    6. '_iterator' → logprob: -18.6250057220459
    7. 'input' → logprob: -19.7500057220459
    8. ' iter' → logprob: -19.8750057220459
    9. '_it' → logprob: -19.8750057220459
    10. '	iter' → logprob: -20.2500057220459

Token 513: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015121731848921627
    2. '))' → logprob: -9.500151634216309
    3. ' )' → logprob: -9.750151634216309
    4. ')
' → logprob: -11.000151634216309
    5. ' ' → logprob: -14.875151634216309
    6. ')n' → logprob: -15.500151634216309
    7. ')`' → logprob: -15.625151634216309
    8. '())' → logprob: -15.875151634216309
    9. '<|end|>' → logprob: -16.000150680541992
    10. ' ' → logprob: -16.500150680541992

Token 514: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010449681576574221
    2. '                
' → logprob: -10.125104904174805
    3. '           ' → logprob: -10.375104904174805
    4. 'if' → logprob: -11.250104904174805
    5. ' if' → logprob: -12.000104904174805
    6. '              ' → logprob: -12.625104904174805
    7. '                ' → logprob: -13.250104904174805
    8. '       ' → logprob: -13.625104904174805
    9. '			' → logprob: -13.750104904174805
    10. '                   ' → logprob: -13.875104904174805

Token 515: ' except' (ID: 6384)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20157597959041595
    2. '           ' → logprob: -2.326575994491577
    3. '
' → logprob: -2.576575994491577
    4. '<|end|>' → logprob: -5.951575756072998
    5. '            
' → logprob: -6.201575756072998
    6. '                
' → logprob: -6.701575756072998
    7. ' if' → logprob: -6.951575756072998
    8. 'if' → logprob: -7.826575756072998
    9. '\n' → logprob: -8.326576232910156
    10. '  
' → logprob: -8.326576232910156

Token 516: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.0007106438861228526
    2. ' Stop' → logprob: -7.250710487365723
    3. '_Stop' → logprob: -15.125710487365723
    4. '_stop' → logprob: -15.375710487365723
    5. '(' → logprob: -15.375710487365723
    6. 'EOF' → logprob: -17.75071144104004
    7. 'Break' → logprob: -18.00071144104004
    8. '.Stop' → logprob: -18.00071144104004
    9. 'STOP' → logprob: -18.12571144104004
    10. '(stop' → logprob: -19.50071144104004

Token 517: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -6.704273118884885e-07
    2. 'Iterator' → logprob: -14.750000953674316
    3. 'iteration' → logprob: -16.125
    4. 'Async' → logprob: -16.875
    5. ' iteration' → logprob: -18.625
    6. 'Iter' → logprob: -18.75
    7. '
' → logprob: -19.625
    8. '_iteration' → logprob: -19.875
    9. 'I' → logprob: -20.5
    10. 'Input' → logprob: -20.625

Token 518: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09215762466192245
    2. ':' → logprob: -2.7171576023101807
    3. ':
' → logprob: -3.8421576023101807
    4. '                   ' → logprob: -7.96715784072876
    5. '           ' → logprob: -9.217157363891602
    6. '              ' → logprob: -10.842157363891602
    7. '                       ' → logprob: -11.592157363891602
    8. '   ' → logprob: -11.717157363891602
    9. '	           ' → logprob: -11.967157363891602
    10. ' ' → logprob: -12.092157363891602

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013727048644796014
    2. '           ' → logprob: -9.125137329101562
    3. '                   ' → logprob: -11.250137329101562
    4. '              ' → logprob: -12.250137329101562
    5. '	           ' → logprob: -12.625137329101562
    6. '   ' → logprob: -13.250137329101562
    7. '                ' → logprob: -13.625137329101562
    8. '             ' → logprob: -13.750137329101562
    9. '			' → logprob: -14.000137329101562
    10. '            ' → logprob: -14.500137329101562

Token 520: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01612633652985096
    2. 'break' (adapté à ' break') → logprob: -4.3911261558532715
    3. '                   ' → logprob: -6.3911261558532715
    4. ' break' → logprob: -6.8911261558532715
    5. '           ' → logprob: -7.6411261558532715
    6. 'return' → logprob: -8.01612663269043
    7. '	break' → logprob: -9.76612663269043
    8. '
' → logprob: -10.76612663269043
    9. '   ' → logprob: -11.64112663269043
    10. '                
' → logprob: -12.01612663269043

Token 521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01740291528403759
    2. '
' → logprob: -4.7674031257629395
    3. '            
' → logprob: -5.1424031257629395
    4. '               ' → logprob: -6.0174031257629395
    5. '<|end|>' → logprob: -9.267402648925781
    6. '    
' → logprob: -9.517402648925781
    7. '       ' → logprob: -9.767402648925781
    8. '  
' → logprob: -9.767402648925781
    9. '        
' → logprob: -10.142402648925781
    10. '                
' → logprob: -10.267402648925781

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005276449490338564
    2. '               ' → logprob: -5.505276679992676
    3. '       ' → logprob: -7.255276679992676
    4. '            
' → logprob: -8.755276679992676
    5. '<|end|>' → logprob: -8.755276679992676
    6. 'n' → logprob: -9.505276679992676
    7. '```' → logprob: -10.880276679992676
    8. '   ' → logprob: -11.130276679992676
    9. '
' → logprob: -11.255276679992676
    10. '        
' → logprob: -11.755276679992676

Token 523: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3179810345172882
    2. '           ' → logprob: -1.6929810047149658
    3. 'vertical' → logprob: -2.442981004714966
    4. 'v' → logprob: -6.942981243133545
    5. ' if' → logprob: -8.817980766296387
    6. '               ' → logprob: -8.942980766296387
    7. '       ' → logprob: -9.067980766296387
    8. '   ' → logprob: -9.317980766296387
    9. 'vert' → logprob: -10.317980766296387
    10. ' vertical' → logprob: -11.567980766296387

Token 524: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34845981001853943
    2. ' n' → logprob: -1.2234598398208618
    3. ' not' → logprob: -12.34846019744873
    4. '(n' → logprob: -12.59846019744873
    5. 'not' → logprob: -13.22346019744873
    6. '	n' → logprob: -13.34846019744873
    7. ' ' → logprob: -13.97346019744873
    8. ' ' → logprob: -14.09846019744873
    9. '   ' → logprob: -14.34846019744873
    10. '(' → logprob: -14.47346019744873

Token 525: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04877891391515732
    2. ' ==' → logprob: -3.048779010772705
    3. '0' → logprob: -8.798778533935547
    4. '=' → logprob: -10.923778533935547
    5. '<=' → logprob: -12.048778533935547
    6. 'm' → logprob: -12.173778533935547
    7. 'n' → logprob: -12.923778533935547
    8. ' ' → logprob: -13.173778533935547
    9. 'is' → logprob: -13.173778533935547
    10. '==
' → logprob: -13.673778533935547

Token 526: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017120669363066554
    2. 'm' → logprob: -6.376711845397949
    3. ' ' → logprob: -12.25171184539795
    4. '```' → logprob: -13.68921184539795
    5. 'and' → logprob: -14.50171184539795
    6. '
' → logprob: -14.50171184539795
    7. ' m' → logprob: -14.56421184539795
    8. '1' → logprob: -15.25171184539795
    9. '-' → logprob: -15.43921184539795
    10. '   ' → logprob: -15.75171184539795

Token 527: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.08944896562025e-05
    2. 'm' → logprob: -9.500081062316895
    3. ' ' → logprob: -12.625081062316895
    4. '-' → logprob: -14.500081062316895
    5. 'and' → logprob: -14.875081062316895
    6. '```' → logprob: -15.000081062316895
    7. 'zero' → logprob: -15.437581062316895
    8. '
' → logprob: -15.750081062316895
    9. '   ' → logprob: -15.875081062316895
    10. '``' → logprob: -16.062580108642578

Token 528: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.575951337814331
    2. ' and' → logprob: -0.825951337814331
    3. ' ' → logprob: -11.70095157623291
    4. ' or' → logprob: -12.82595157623291
    5. '   ' → logprob: -15.32595157623291
    6. ':' → logprob: -15.45095157623291
    7. '<|end|>' → logprob: -15.57595157623291
    8. '	and' → logprob: -16.200950622558594
    9. '  ' → logprob: -16.325950622558594
    10. 'or' → logprob: -17.075950622558594

Token 529: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005929274018853903
    2. ' m' → logprob: -5.130929470062256
    3. '   ' → logprob: -14.380928993225098
    4. '0' → logprob: -17.005929946899414
    5. '	m' → logprob: -17.005929946899414
    6. '           ' → logprob: -17.380929946899414
    7. ' ' → logprob: -17.505929946899414
    8. '  ' → logprob: -17.630929946899414
    9. '    ' → logprob: -18.005929946899414
    10. '       ' → logprob: -18.880929946899414

Token 530: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.693162202835083
    2. ' ==' → logprob: -0.693162202835083
    3. '<|end|>' → logprob: -11.568161964416504
    4. '0' → logprob: -13.693161964416504
    5. ')==' → logprob: -13.818161964416504
    6. '=' → logprob: -14.068161964416504
    7. ' ' → logprob: -14.193161964416504
    8. '()==' → logprob: -14.693161964416504
    9. ']==' → logprob: -15.068161964416504
    10. '<|end|>' → logprob: -15.318161964416504

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -20.375139236450195
    4. '  ' → logprob: -21.250139236450195
    5. '<|end|>' → logprob: -22.125139236450195
    6. '           ' → logprob: -22.625139236450195
    7. '۰' → logprob: -22.625139236450195
    8. ' ' → logprob: -23.375139236450195
    9. '=' → logprob: -23.875139236450195
    10. '    ' → logprob: -24.000139236450195

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -21.375
    5. '০' → logprob: -21.8125
    6. '  ' → logprob: -21.9375
    7. '
' → logprob: -22.0
    8. '०' → logprob: -22.5625
    9. '０' → logprob: -22.6875
    10. '

' → logprob: -23.0

Token 533: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5818122625350952
    2. ':' → logprob: -0.8318122625350952
    3. '               ' → logprob: -5.331812381744385
    4. '           ' → logprob: -6.956812381744385
    5. '   ' → logprob: -10.956811904907227
    6. ':return' → logprob: -11.081811904907227
    7. '                   ' → logprob: -11.456811904907227
    8. '       ' → logprob: -11.706811904907227
    9. ':
' → logprob: -12.331811904907227
    10. '):
' → logprob: -13.081811904907227

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008133203955367208
    2. '           ' → logprob: -7.1258134841918945
    3. '                   ' → logprob: -12.875813484191895
    4. '   ' → logprob: -13.375813484191895
    5. '              ' → logprob: -13.375813484191895
    6. '	           ' → logprob: -13.500813484191895
    7. '       ' → logprob: -14.500813484191895
    8. '		       ' → logprob: -15.500813484191895
    9. '             ' → logprob: -15.625813484191895
    10. '			' → logprob: -15.875813484191895

Token 535: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7265517711639404
    2. 'break' (adapté à ' break') → logprob: -0.9765517711639404
    3. ' break' → logprob: -1.9765517711639404
    4. 'return' → logprob: -7.1015520095825195
    5. '	break' → logprob: -8.22655200958252
    6. '                   ' → logprob: -9.60155200958252
    7. '           ' → logprob: -9.60155200958252
    8. '   ' → logprob: -10.97655200958252
    9. ' return' → logprob: -11.10155200958252
    10. '
' → logprob: -11.97655200958252

Token 536: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05153525620698929
    2. '
' → logprob: -3.0515353679656982
    3. '               ' → logprob: -6.301535129547119
    4. '            
' → logprob: -6.926535129547119
    5. '       ' → logprob: -10.551535606384277
    6. '    
' → logprob: -10.801535606384277
    7. 'n' → logprob: -10.801535606384277
    8. '        
' → logprob: -10.926535606384277
    9. '                
' → logprob: -11.551535606384277
    10. ' 
' → logprob: -12.426535606384277

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006205123383551836
    2. '               ' → logprob: -5.756205081939697
    3. '
' → logprob: -6.256205081939697
    4. '            
' → logprob: -7.506205081939697
    5. '       ' → logprob: -8.006205558776855
    6. 'n' → logprob: -9.881205558776855
    7. '        
' → logprob: -10.131205558776855
    8. '```' → logprob: -10.506205558776855
    9. '   ' → logprob: -10.631205558776855
    10. '    
' → logprob: -10.756205558776855

Token 538: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' (adapté à ' vertical') → logprob: -0.004982439801096916
    2. 'v' → logprob: -5.7549824714660645
    3. ' vertical' → logprob: -6.6299824714660645
    4. '           ' → logprob: -8.004981994628906
    5. 'vert' → logprob: -9.004981994628906
    6. '_vertical' → logprob: -12.379981994628906
    7. '(vertical' → logprob: -12.629981994628906
    8. '               ' → logprob: -12.629981994628906
    9. '   ' → logprob: -12.754981994628906
    10. 'vn' → logprob: -13.254981994628906

Token 539: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.07336681336164474
    2. '_g' → logprob: -2.94836688041687
    3. '_lengths' → logprob: -4.323366641998291
    4. ' =' → logprob: -5.573366641998291
    5. '=' → logprob: -7.948366641998291
    6. '_' → logprob: -8.32336711883545
    7. '_d' → logprob: -8.44836711883545
    8. '_counts' → logprob: -9.44836711883545
    9. '_len' → logprob: -9.82336711883545
    10. '_length' → logprob: -10.07336711883545

Token 540: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -2.6895233531831764e-05
    2. 'aces' → logprob: -12.00002670288086
    3. 's' → logprob: -12.50002670288086
    4. 'ences' → logprob: -12.62502670288086
    5. '   ' → logprob: -12.75002670288086
    6. 'ance' → logprob: -13.00002670288086
    7. ' =' → logprob: -13.50002670288086
    8. '       ' → logprob: -13.62502670288086
    9. '_' → logprob: -13.87502670288086
    10. 'anc' → logprob: -14.00002670288086

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812066972255707
    2. ' =' → logprob: -1.406206727027893
    3. '=[]' → logprob: -10.031207084655762
    4. '=[' → logprob: -11.906207084655762
    5. '=[]
' → logprob: -13.031207084655762
    6. ' =[' → logprob: -14.156207084655762
    7. '[:]' → logprob: -14.656207084655762
    8. ' ' → logprob: -14.656207084655762
    9. '[' → logprob: -15.281207084655762
    10. '[]' → logprob: -15.406207084655762

Token 542: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.44015729427337646
    2. '[int' → logprob: -1.6901572942733765
    3. '[' → logprob: -2.190157413482666
    4. ' [' → logprob: -2.940157413482666
    5. '[next' → logprob: -5.940157413482666
    6. '[List' → logprob: -6.190157413482666
    7. '[str' → logprob: -7.440157413482666
    8. '[n' → logprob: -7.815157413482666
    9. '[number' → logprob: -8.690156936645508
    10. '[length' → logprob: -8.815156936645508

Token 543: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.5
    3. '   ' → logprob: -19.625
    4. '[int' → logprob: -19.875
    5. '(int' → logprob: -20.25
    6. ']int' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '<int' → logprob: -21.0
    9. '	int' → logprob: -22.25
    10. '=int' → logprob: -22.75

Token 544: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00017505438881926239
    2. 'next' → logprob: -8.750175476074219
    3. ']' → logprob: -11.625175476074219
    4. '(' → logprob: -12.000175476074219
    5. '[next' → logprob: -14.125175476074219
    6. '(n' → logprob: -15.000175476074219
    7. '
' → logprob: -15.375175476074219
    8. '()]' → logprob: -16.12517547607422
    9. ' next' → logprob: -16.25017547607422
    10. '](' → logprob: -17.00017547607422

Token 545: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04875621199607849
    2. 'input' → logprob: -3.0487561225891113
    3. ' input' → logprob: -8.79875659942627
    4. ',input' → logprob: -12.17375659942627
    5. '(' → logprob: -12.42375659942627
    6. ' (' → logprob: -12.92375659942627
    7. '[input' → logprob: -13.04875659942627
    8. '=input' → logprob: -13.29875659942627
    9. ')' → logprob: -13.54875659942627
    10. '	input' → logprob: -15.04875659942627

Token 546: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -6.074907287256792e-05
    2. 'iter' → logprob: -9.75006103515625
    3. 'input' → logprob: -13.62506103515625
    4. '(input' → logprob: -14.00006103515625
    5. 'Iter' → logprob: -15.62506103515625
    6. '(iter' → logprob: -17.00006103515625
    7. '_iterator' → logprob: -17.75006103515625
    8. ' iter' → logprob: -17.87506103515625
    9. '	iter' → logprob: -18.12506103515625
    10. 'it' → logprob: -18.50006103515625

Token 547: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038276031613349915
    2. '())' → logprob: -3.288275957107544
    3. ' )' → logprob: -9.163275718688965
    4. '()' → logprob: -9.913275718688965
    5. '))' → logprob: -10.038275718688965
    6. ')]' → logprob: -11.163275718688965
    7. ' ())' → logprob: -11.288275718688965
    8. '(' → logprob: -13.288275718688965
    9. ' ' → logprob: -13.413275718688965
    10. '   ' → logprob: -13.788275718688965

Token 548: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.229917511343956
    2. 'for' → logprob: -1.6049175262451172
    3. '()' → logprob: -5.479917526245117
    4. '               ' → logprob: -9.854917526245117
    5. ']' → logprob: -9.979917526245117
    6. '           ' → logprob: -9.979917526245117
    7. '   ' → logprob: -9.979917526245117
    8. '(n' → logprob: -10.229917526245117
    9. '	for' → logprob: -10.354917526245117
    10. ')' → logprob: -10.729917526245117

Token 549: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016682932619005442
    2. ' _' → logprob: -9.250166893005371
    3. '_range' → logprob: -10.375166893005371
    4. ' in' → logprob: -10.875166893005371
    5. ' range' → logprob: -11.500166893005371
    6. ' ' → logprob: -12.000166893005371
    7. '_in' → logprob: -13.250166893005371
    8. 'range' → logprob: -14.125166893005371
    9. '_i' → logprob: -14.375166893005371
    10. ']' → logprob: -15.375166893005371

Token 550: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1006404161453247
    2. ' in' → logprob: -1.1006404161453247
    3. 'range' → logprob: -1.1006404161453247
    4. ' range' → logprob: -6.225640296936035
    5. ' ' → logprob: -10.350640296936035
    6. '   ' → logprob: -12.350640296936035
    7. 'i' → logprob: -12.600640296936035
    8. '  ' → logprob: -12.725640296936035
    9. 'n' → logprob: -12.725640296936035
    10. '_' → logprob: -14.350640296936035

Token 551: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.876928329467773
    4. '	range' → logprob: -17.501928329467773
    5. '(range' → logprob: -17.751928329467773
    6. ' ' → logprob: -18.126928329467773
    7. 'rang' → logprob: -18.626928329467773
    8. '
' → logprob: -18.751928329467773
    9. '  ' → logprob: -18.876928329467773
    10. 'r' → logprob: -19.251928329467773

Token 552: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002123614540323615
    2. 'n' → logprob: -8.500212669372559
    3. ' (' → logprob: -12.250212669372559
    4. ' n' → logprob: -13.000212669372559
    5. '(' → logprob: -13.250212669372559
    6. '	n' → logprob: -17.125211715698242
    7. '((' → logprob: -18.000211715698242
    8. '   ' → logprob: -19.000211715698242
    9. '(
' → logprob: -19.625211715698242
    10. '(m' → logprob: -19.625211715698242

Token 553: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06323657184839249
    2. '-' → logprob: -3.0632364749908447
    3. ')]
' → logprob: -4.938236713409424
    4. ' -' → logprob: -4.938236713409424
    5. ' )' → logprob: -9.313236236572266
    6. ')]
' → logprob: -9.563236236572266
    7. '           ' → logprob: -11.438236236572266
    8. ')]

' → logprob: -11.938236236572266
    9. '       ' → logprob: -11.938236236572266
    10. ')' → logprob: -12.063236236572266

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007790116942487657
    2. '
' → logprob: -8.500779151916504
    3. 'horizontal' → logprob: -8.625779151916504
    4. '            
' → logprob: -9.000779151916504
    5. ' horizontal' → logprob: -9.250779151916504
    6. '		' → logprob: -9.750779151916504
    7. ' 
' → logprob: -10.625779151916504
    8. '       ' → logprob: -10.625779151916504
    9. '<|end|>' → logprob: -10.875779151916504
    10. '               ' → logprob: -11.625779151916504

Token 555: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.16022463142871857
    2. ' horizontal' → logprob: -1.9102246761322021
    3. '           ' → logprob: -15.160224914550781
    4. '.horizontal' → logprob: -15.660224914550781
    5. '(horizontal' → logprob: -17.66022491455078
    6. '_horizontal' → logprob: -17.66022491455078
    7. 'Horizontal' → logprob: -18.03522491455078
    8. ' горизонт' → logprob: -18.28522491455078
    9. ' horiz' → logprob: -18.66022491455078
    10. 'vertical' → logprob: -18.78522491455078

Token 556: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.8624639324116288e-06
    2. '_d' → logprob: -14.750001907348633
    3. '_lengths' → logprob: -14.750001907348633
    4. '```' → logprob: -15.375001907348633
    5. '"_' → logprob: -15.625001907348633
    6. '_dis' → logprob: -16.250001907348633
    7. '_' → logprob: -16.250001907348633
    8. ''_' → logprob: -16.250001907348633
    9. 'dist' → logprob: -17.250001907348633
    10. ' _' → logprob: -17.250001907348633

Token 557: 'ances' (ID: 3528)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.7569519877433777
    2. 'ances' → logprob: -1.2569520473480225
    3. '_dist' → logprob: -1.5069520473480225
    4. 'dist' → logprob: -3.7569520473480225
    5. 'ists' → logprob: -7.506951808929443
    6. 'stances' → logprob: -8.631952285766602
    7. '_' → logprob: -8.756952285766602
    8. 'is' → logprob: -9.381952285766602
    9. 'ences' → logprob: -9.506952285766602
    10. 'er' → logprob: -9.756952285766602

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. '=[' → logprob: -15.350207328796387
    4. ' =[' → logprob: -15.350207328796387
    5. '[' → logprob: -16.10020637512207
    6. ' ' → logprob: -16.35020637512207
    7. '   ' → logprob: -17.72520637512207
    8. '=[]' → logprob: -18.22520637512207
    9. ')' → logprob: -18.35020637512207
    10. '	' → logprob: -18.85020637512207

Token 559: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07999227195978165
    2. ' [' → logprob: -2.5799922943115234
    3. '[' → logprob: -6.829992294311523
    4. '[Int' → logprob: -10.829992294311523
    5. '[ind' → logprob: -14.579992294311523
    6. '[in' → logprob: -15.079992294311523
    7. ' ' → logprob: -15.454992294311523
    8. '[class' → logprob: -16.704992294311523
    9. '[str' → logprob: -17.079992294311523
    10. '[list' → logprob: -17.204992294311523

Token 560: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.375
    3. '[int' → logprob: -16.875
    4. '(int' → logprob: -17.0
    5. '<int' → logprob: -19.25
    6. '   ' → logprob: -21.25
    7. ']int' → logprob: -21.25
    8. '
' → logprob: -21.375
    9. '=int' → logprob: -22.25
    10. 'ints' → logprob: -22.625

Token 561: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.3856492842023727e-06
    2. 'next' → logprob: -13.875000953674316
    3. '(' → logprob: -16.125001907348633
    4. '(int' → logprob: -16.500001907348633
    5. '[next' → logprob: -16.500001907348633
    6. ' next' → logprob: -19.125001907348633
    7. ',next' → logprob: -19.250001907348633
    8. ' (' → logprob: -19.500001907348633
    9. '(n' → logprob: -20.125001907348633
    10. 'int' → logprob: -20.375001907348633

Token 562: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.173704271830502e-06
    2. 'input' → logprob: -12.75000286102295
    3. '=input' → logprob: -16.750003814697266
    4. ' input' → logprob: -17.250003814697266
    5. ',input' → logprob: -17.375003814697266
    6. '[input' → logprob: -17.375003814697266
    7. '(' → logprob: -17.750003814697266
    8. '<input' → logprob: -17.875003814697266
    9. ' (' → logprob: -19.125003814697266
    10. '(
' → logprob: -19.875003814697266

Token 563: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.1277516931295395
    2. '(input' → logprob: -2.127751588821411
    3. 'input' → logprob: -7.37775182723999
    4. 'iter' → logprob: -9.002751350402832
    5. '_input' → logprob: -10.252751350402832
    6. '_iterator' → logprob: -11.377751350402832
    7. '(iter' → logprob: -11.752751350402832
    8. '=input' → logprob: -12.127751350402832
    9. '[input' → logprob: -12.127751350402832
    10. ',input' → logprob: -12.627751350402832

Token 564: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017780190333724022
    2. '())' → logprob: -4.142780303955078
    3. '()' → logprob: -6.392780303955078
    4. '(' → logprob: -10.517780303955078
    5. ' )' → logprob: -10.892780303955078
    6. 'for' → logprob: -11.017780303955078
    7. '(n' → logprob: -13.017780303955078
    8. ' ())' → logprob: -13.392780303955078
    9. ' for' → logprob: -13.642780303955078
    10. '(m' → logprob: -14.142780303955078

Token 565: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1271691620349884
    2. 'for' → logprob: -2.127169132232666
    3. ')' → logprob: -8.502169609069824
    4. '()' → logprob: -11.252169609069824
    5. '(for' → logprob: -12.127169609069824
    6. '(n' → logprob: -12.377169609069824
    7. '(' → logprob: -12.502169609069824
    8. '	for' → logprob: -12.627169609069824
    9. '       ' → logprob: -13.252169609069824
    10. '   ' → logprob: -13.377169609069824

Token 566: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10094554722309113
    2. 'range' → logprob: -2.350945472717285
    3. '_' → logprob: -7.850945472717285
    4. ' in' → logprob: -8.100945472717285
    5. '_range' → logprob: -10.975945472717285
    6. ' _' → logprob: -11.100945472717285
    7. '(range' → logprob: -11.475945472717285
    8. ' for' → logprob: -13.475945472717285
    9. 'in' → logprob: -13.600945472717285
    10. 'for' → logprob: -14.475945472717285

Token 567: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721756421029568
    2. ' range' → logprob: -5.0067219734191895
    3. '_range' → logprob: -12.256721496582031
    4. '_' → logprob: -13.881721496582031
    5. '(range' → logprob: -14.631721496582031
    6. '	range' → logprob: -15.631721496582031
    7. '   ' → logprob: -17.25672149658203
    8. '[' → logprob: -17.75672149658203
    9. ' ' → logprob: -19.50672149658203
    10. ' _' → logprob: -19.50672149658203

Token 568: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246407508850098
    2. ' range' → logprob: -3.7732462882995605
    3. '(range' → logprob: -14.273246765136719
    4. 'm' → logprob: -14.898246765136719
    5. 'r' → logprob: -18.39824676513672
    6. '	range' → logprob: -19.02324676513672
    7. ' ' → logprob: -20.02324676513672
    8. '   ' → logprob: -20.02324676513672
    9. '
' → logprob: -20.14824676513672
    10. 'rang' → logprob: -20.39824676513672

Token 569: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006973040290176868
    2. '(m' → logprob: -7.375697135925293
    3. ' m' → logprob: -9.625697135925293
    4. 'range' → logprob: -13.375697135925293
    5. '           ' → logprob: -13.750697135925293
    6. '[m' → logprob: -14.375697135925293
    7. '       ' → logprob: -14.500697135925293
    8. ' (' → logprob: -14.750697135925293
    9. ')' → logprob: -15.500697135925293
    10. '               ' → logprob: -15.750697135925293

Token 570: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00032604875741526484
    2. ')]
' → logprob: -8.250326156616211
    3. ']' → logprob: -10.125326156616211
    4. ')' → logprob: -11.500326156616211
    5. '           ' → logprob: -12.625326156616211
    6. ')]
' → logprob: -12.625326156616211
    7. '       ' → logprob: -12.750326156616211
    8. ')])' → logprob: -13.500326156616211
    9. '])' → logprob: -13.625326156616211
    10. '])]' → logprob: -14.375326156616211

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005829381989315152
    2. '       ' → logprob: -7.500583171844482
    3. '               ' → logprob: -11.250582695007324
    4. '
' → logprob: -11.250582695007324
    5. '<|end|>' → logprob: -13.500582695007324
    6. '            
' → logprob: -14.125582695007324
    7. '```' → logprob: -14.625582695007324
    8. '        
' → logprob: -14.750582695007324
    9. '          ' → logprob: -15.125582695007324
    10. '   ' → logprob: -15.375582695007324

Token 572: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.046576570719480515
    2. '           ' → logprob: -3.296576499938965
    3. ' self' → logprob: -4.796576499938965
    4. '       ' → logprob: -8.546576499938965
    5. '
' → logprob: -10.171576499938965
    6. '   ' → logprob: -12.171576499938965
    7. '```' → logprob: -13.796576499938965
    8. '               ' → logprob: -14.046576499938965
    9. '	self' → logprob: -14.421576499938965
    10. '            
' → logprob: -15.421576499938965

Token 573: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.250000953674316
    3. ' .' → logprob: -16.75
    4. 's' → logprob: -16.875
    5. 'solver' → logprob: -18.0
    6. '.processor' → logprob: -18.875
    7. '.solve' → logprob: -20.0
    8. '._' → logprob: -20.375
    9. '.sol' → logprob: -20.5
    10. '
' → logprob: -20.625

Token 574: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -4.417976379045285e-05
    2. 'solver' → logprob: -10.500043869018555
    3. 'olve' → logprob: -11.125043869018555
    4. '   ' → logprob: -13.625043869018555
    5. 'over' → logprob: -16.500043869018555
    6. '_' → logprob: -16.500043869018555
    7. '_solver' → logprob: -16.875043869018555
    8. 'elf' → logprob: -16.875043869018555
    9. '```' → logprob: -17.000043869018555
    10. '  ' → logprob: -17.750043869018555

Token 575: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.75000286102295
    3. '.append' → logprob: -16.375003814697266
    4. ' .' → logprob: -18.875003814697266
    5. '.Add' → logprob: -19.250003814697266
    6. '.save' → logprob: -20.250003814697266
    7. '.enqueue' → logprob: -20.250003814697266
    8. '       ' → logprob: -20.500003814697266
    9. '   ' → logprob: -20.500003814697266
    10. '.process' → logprob: -20.625003814697266

Token 576: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -12.87500286102295
    3. 'data' → logprob: -17.875001907348633
    4. '(_' → logprob: -18.500001907348633
    5. '_d' → logprob: -19.000001907348633
    6. '```' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '(' → logprob: -19.750001907348633
    9. '_dat' → logprob: -19.875001907348633
    10. '(n' → logprob: -20.125001907348633

Token 577: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0003163969377055764
    2. '_' → logprob: -8.875316619873047
    3. '_sets' → logprob: -9.250316619873047
    4. '_data' → logprob: -10.500316619873047
    5. '_dataset' → logprob: -10.750316619873047
    6. '_s' → logprob: -10.875316619873047
    7. ' _' → logprob: -11.750316619873047
    8. 'set' → logprob: -12.875316619873047
    9. '   ' → logprob: -14.375316619873047
    10. 's' → logprob: -15.500316619873047

Token 578: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6286106983898208e-05
    2. '(' → logprob: -11.125016212463379
    3. '(
' → logprob: -13.750016212463379
    4. ' (' → logprob: -14.750016212463379
    5. '((' → logprob: -16.500017166137695
    6. '(len' → logprob: -18.375017166137695
    7. '
' → logprob: -18.875017166137695
    8. 'n' → logprob: -19.250017166137695
    9. '   ' → logprob: -19.750017166137695
    10. '```' → logprob: -20.125017166137695

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009280181839130819
    2. ',m' → logprob: -7.000927925109863
    3. ' ,' → logprob: -11.125927925109863
    4. ',
' → logprob: -13.375927925109863
    5. '   ' → logprob: -16.50092887878418
    6. 'm' → logprob: -16.50092887878418
    7. ',n' → logprob: -17.12592887878418
    8. '       ' → logprob: -18.00092887878418
    9. '
' → logprob: -18.37592887878418
    10. '‌,' → logprob: -18.62592887878418

Token 580: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002475777640938759
    2. ' m' → logprob: -6.002475738525391
    3. '           ' → logprob: -17.12747573852539
    4. '   ' → logprob: -18.12747573852539
    5. '       ' → logprob: -18.87747573852539
    6. '    ' → logprob: -20.25247573852539
    7. ' ' → logprob: -20.37747573852539
    8. '	m' → logprob: -20.62747573852539
    9. '               ' → logprob: -21.12747573852539
    10. '  ' → logprob: -21.62747573852539

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ' ,' → logprob: -12.125009536743164
    3. '           ' → logprob: -12.625009536743164
    4. ',
' → logprob: -15.500009536743164
    5. '       ' → logprob: -17.000009536743164
    6. '   ' → logprob: -17.375009536743164
    7. '```' → logprob: -17.750009536743164
    8. 'vertical' → logprob: -17.875009536743164
    9. '          ' → logprob: -18.250009536743164
    10. '               ' → logprob: -18.375009536743164

Token 582: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.16022463142871857
    2. ' vertical' → logprob: -1.9102246761322021
    3. '           ' → logprob: -15.910224914550781
    4. 'vert' → logprob: -16.28522491455078
    5. '(vertical' → logprob: -16.28522491455078
    6. 'horizontal' → logprob: -16.66022491455078
    7. '_vertical' → logprob: -16.91022491455078
    8. '.vertical' → logprob: -17.53522491455078
    9. '   ' → logprob: -17.91022491455078
    10. '            ' → logprob: -18.91022491455078

Token 583: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00118677644059062
    2. 'vertical' → logprob: -7.001186847686768
    3. 'al' → logprob: -9.00118637084961
    4. 'dist' → logprob: -9.50118637084961
    5. 'ist' → logprob: -10.25118637084961
    6. '_vertical' → logprob: -10.87618637084961
    7. 'el' → logprob: -12.12618637084961
    8. 'ert' → logprob: -12.75118637084961
    9. 'ial' → logprob: -13.12618637084961
    10. 'vert' → logprob: -13.50118637084961

Token 584: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -4.0722858102526516e-05
    2. 'ences' → logprob: -10.625041007995605
    3. 'ces' → logprob: -12.500041007995605
    4. '_' → logprob: -12.625041007995605
    5. '   ' → logprob: -13.125041007995605
    6. 'er' → logprob: -13.500041007995605
    7. 'al' → logprob: -14.125041007995605
    8. '[' → logprob: -14.125041007995605
    9. 'ues' → logprob: -14.500041007995605
    10. 'es' → logprob: -14.625041007995605

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.468279752880335e-05
    2. ' ,' → logprob: -10.250064849853516
    3. ',h' → logprob: -10.500064849853516
    4. ',
' → logprob: -14.000064849853516
    5. '           ' → logprob: -14.250064849853516
    6. '   ' → logprob: -16.375064849853516
    7. '[' → logprob: -17.250064849853516
    8. '       ' → logprob: -17.250064849853516
    9. ',p' → logprob: -17.375064849853516
    10. '```' → logprob: -17.875064849853516

Token 586: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.16022422909736633
    2. ' horizontal' → logprob: -1.910224199295044
    3. '(horizontal' → logprob: -16.91022491455078
    4. '.horizontal' → logprob: -17.41022491455078
    5. '_horizontal' → logprob: -17.41022491455078
    6. '           ' → logprob: -17.78522491455078
    7. 'hor' → logprob: -18.53522491455078
    8. 'Horizontal' → logprob: -18.78522491455078
    9. 'vertical' → logprob: -19.53522491455078
    10. '   ' → logprob: -19.78522491455078

Token 587: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.751746746478602e-05
    2. 'ist' → logprob: -10.25004768371582
    3. 'dist' → logprob: -11.37504768371582
    4. '_' → logprob: -15.25004768371582
    5. '	dist' → logprob: -16.37504768371582
    6. '_d' → logprob: -16.75004768371582
    7. '```' → logprob: -17.25004768371582
    8. '(dist' → logprob: -17.25004768371582
    9. 's' → logprob: -17.37504768371582
    10. '.dist' → logprob: -17.50004768371582

Token 588: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0001645644661039114
    2. 'er' → logprob: -9.125164985656738
    3. 'u' → logprob: -10.125164985656738
    4. '   ' → logprob: -12.125164985656738
    5. 'ces' → logprob: -13.375164985656738
    6. 't' → logprob: -14.125164985656738
    7. 'r' → logprob: -14.250164985656738
    8. 'aces' → logprob: -14.250164985656738
    9. 'ues' → logprob: -14.375164985656738
    10. 'es' → logprob: -14.375164985656738

Token 589: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043555660522542894
    2. ')
' → logprob: -8.250435829162598
    3. '       ' → logprob: -9.250435829162598
    4. '           ' → logprob: -9.500435829162598
    5. ' )' → logprob: -13.750435829162598
    6. '<|end|>' → logprob: -13.750435829162598
    7. '   ' → logprob: -15.500435829162598
    8. '))' → logprob: -15.750435829162598
    9. ')

' → logprob: -15.875435829162598
    10. '())' → logprob: -16.37543487548828

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5530396103858948
    2. '
' → logprob: -0.9280396103858948
    3. ' def' → logprob: -3.67803955078125
    4. 'def' → logprob: -5.80303955078125
    5. '```' → logprob: -7.55303955078125
    6. '    
' → logprob: -7.80303955078125
    7. '<|end|>' → logprob: -8.80303955078125
    8. '        
' → logprob: -10.55303955078125
    9. '       ' → logprob: -10.92803955078125
    10. '	def' → logprob: -11.17803955078125

Token 591: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10312294214963913
    2. '   ' → logprob: -2.3531229496002197
    3. ' def' → logprob: -5.853122711181641
    4. '	def' → logprob: -10.60312271118164
    5. '
' → logprob: -11.10312271118164
    6. '    
' → logprob: -14.60312271118164
    7. '       ' → logprob: -15.10312271118164
    8. '<|end|>' → logprob: -15.35312271118164
    9. ' ' → logprob: -15.60312271118164
    10. '  ' → logprob: -15.85312271118164

Token 592: ' print' (ID: 2123)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.7416545748710632
    2. 'print' → logprob: -1.491654634475708
    3. 'process' → logprob: -1.741654634475708
    4. 'output' → logprob: -2.491654634475708
    5. 'solve' → logprob: -3.491654634475708
    6. 'execute' → logprob: -4.991654396057129
    7. 'def' → logprob: -6.491654396057129
    8. 'display' → logprob: -7.241654396057129
    9. 'produce' → logprob: -7.991654396057129
    10. 'write' → logprob: -7.991654396057129

Token 593: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.002451161155477166
    2. '_' → logprob: -6.252450942993164
    3. '_result' → logprob: -7.627450942993164
    4. 'Results' → logprob: -11.877450942993164
    5. '_output' → logprob: -11.877450942993164
    6. '_s' → logprob: -12.377450942993164
    7. '()' → logprob: -12.377450942993164
    8. '_solution' → logprob: -12.877450942993164
    9. '(' → logprob: -13.002450942993164
    10. '_answers' → logprob: -13.252450942993164

Token 594: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018506382184568793
    2. '(' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.875185012817383
    4. '       ' → logprob: -13.750185012817383
    5. '(
' → logprob: -14.250185012817383
    6. 'self' → logprob: -14.375185012817383
    7. ' (' → logprob: -14.750185012817383
    8. '	self' → logprob: -16.375185012817383
    9. ' ' → logprob: -16.750185012817383
    10. '(s' → logprob: -17.000185012817383

Token 595: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020421473309397697
    2. 'self' → logprob: -4.895421504974365
    3. '):
' → logprob: -5.020421504974365
    4. '(self' → logprob: -5.270421504974365
    5. '       ' → logprob: -7.520421504974365
    6. '   ' → logprob: -8.020421028137207
    7. ')' → logprob: -9.270421028137207
    8. '):
' → logprob: -12.145421028137207
    9. ' self' → logprob: -12.395421028137207
    10. ',' → logprob: -12.520421028137207

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032953477930277586
    2. '   ' → logprob: -6.128295421600342
    3. '(self' → logprob: -7.503295421600342
    4. '(' → logprob: -8.503294944763184
    5. 'self' → logprob: -9.003294944763184
    6. 'def' → logprob: -9.503294944763184
    7. ' for' → logprob: -9.628294944763184
    8. 'for' → logprob: -10.503294944763184
    9. '
' → logprob: -10.753294944763184
    10. ' self' → logprob: -11.628294944763184

Token 597: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.12313885241746902
    2. 'for' → logprob: -2.623138904571533
    3. ' results' → logprob: -3.373138904571533
    4. ' for' → logprob: -4.873138904571533
    5. '       ' → logprob: -6.623138904571533
    6. '   ' → logprob: -11.123138427734375
    7. 'result' → logprob: -12.748138427734375
    8. '
' → logprob: -13.123138427734375
    9. '```' → logprob: -13.123138427734375
    10. 'def' → logprob: -13.873138427734375

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22753053903579712
    2. '=' → logprob: -2.2275304794311523
    3. '()' → logprob: -2.3525304794311523
    4. '   ' → logprob: -8.227530479431152
    5. '()
' → logprob: -8.977530479431152
    6. '       ' → logprob: -9.977530479431152
    7. '(' → logprob: -10.477530479431152
    8. '_' → logprob: -11.227530479431152
    9. ':' → logprob: -11.477530479431152
    10. '=self' → logprob: -11.477530479431152

Token 599: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009124171338044107
    2. ' self' → logprob: -7.000912189483643
    3. '       ' → logprob: -14.3759126663208
    4. '   ' → logprob: -15.0009126663208
    5. '(self' → logprob: -17.250911712646484
    6. '[self' → logprob: -17.375911712646484
    7. '	self' → logprob: -17.500911712646484
    8. '=self' → logprob: -20.250911712646484
    9. '
' → logprob: -20.375911712646484
    10. '           ' → logprob: -20.750911712646484

Token 600: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -2.45848218582978e-06
    2. 'solver' → logprob: -13.00000286102295
    3. '.' → logprob: -16.250001907348633
    4. '.sol' → logprob: -18.875001907348633
    5. 's' → logprob: -19.125001907348633
    6. ' .' → logprob: -19.375001907348633
    7. '.solve' → logprob: -19.625001907348633
    8. '_solver' → logprob: -21.500001907348633
    9. 'olver' → logprob: -21.500001907348633
    10. ' solver' → logprob: -21.750001907348633

Token 601: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -2.935296834039036e-06
    2. 'olve' → logprob: -13.50000286102295
    3. 'solver' → logprob: -14.12500286102295
    4. 'elf' → logprob: -14.50000286102295
    5. '   ' → logprob: -16.000003814697266
    6. '(self' → logprob: -17.375003814697266
    7. 'oler' → logprob: -17.375003814697266
    8. 'over' → logprob: -18.000003814697266
    9. '       ' → logprob: -18.250003814697266
    10. '```' → logprob: -18.375003814697266

Token 602: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.696889623621246e-06
    2. 'solve' → logprob: -13.37500286102295
    3. '.' → logprob: -13.87500286102295
    4. '.sol' → logprob: -16.875001907348633
    5. '.results' → logprob: -17.625001907348633
    6. ' .' → logprob: -17.625001907348633
    7. '.resolve' → logprob: -18.500001907348633
    8. '.count' → logprob: -18.625001907348633
    9. '.print' → logprob: -19.250001907348633
    10. '.s' → logprob: -20.250001907348633

Token 603: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07897979021072388
    2. '()' → logprob: -2.578979730606079
    3. '       ' → logprob: -9.7039794921875
    4. 'for' → logprob: -11.7039794921875
    5. '()
' → logprob: -11.8289794921875
    6. '   ' → logprob: -12.0789794921875
    7. '()

' → logprob: -12.7039794921875
    8. 'def' → logprob: -12.7039794921875
    9. '()`' → logprob: -14.4539794921875
    10. 'print' → logprob: -14.9539794921875

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004837957210838795
    2. 'for' → logprob: -6.129837989807129
    3. ' for' → logprob: -6.254837989807129
    4. '   ' → logprob: -7.754837989807129
    5. '	' → logprob: -8.254837989807129
    6. '	for' → logprob: -10.379837989807129
    7. '
' → logprob: -13.004837989807129
    8. '<|end|>' → logprob: -13.379837989807129
    9. '```' → logprob: -13.879837989807129
    10. '	   ' → logprob: -13.879837989807129

Token 605: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003812217037193477
    2. '       ' → logprob: -8.000381469726562
    3. ' for' → logprob: -10.000381469726562
    4. '	for' → logprob: -15.500381469726562
    5. '   ' → logprob: -15.625381469726562
    6. '
' → logprob: -17.625381469726562
    7. '	' → logprob: -19.375381469726562
    8. '```' → logprob: -19.500381469726562
    9. ' ' → logprob: -21.625381469726562
    10. '           ' → logprob: -21.625381469726562

Token 606: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31710028648376465
    2. 'result' → logprob: -1.3171002864837646
    3. 'r' → logprob: -5.567100524902344
    4. 'count' → logprob: -11.692100524902344
    5. ' res' → logprob: -13.942100524902344
    6. ' result' → logprob: -15.192100524902344
    7. ' r' → logprob: -16.942100524902344
    8. 'ans' → logprob: -17.567100524902344
    9. 'answer' → logprob: -17.567100524902344
    10. 'score' → logprob: -17.817100524902344

Token 607: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.005215263459831476
    2. 'ults' → logprob: -5.630215167999268
    3. 'ultat' → logprob: -7.380215167999268
    4. 'ul' → logprob: -8.380215644836426
    5. 'u' → logprob: -8.630215644836426
    6. 'ut' → logprob: -8.630215644836426
    7. 't' → logprob: -8.755215644836426
    8. 'ulta' → logprob: -9.630215644836426
    9. 'ault' → logprob: -10.130215644836426
    10. ' in' → logprob: -10.380215644836426

Token 608: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00033546582562848926
    2. ' results' → logprob: -8.000335693359375
    3. '(results' → logprob: -17.750335693359375
    4. '	results' → logprob: -19.625335693359375
    5. '
' → logprob: -20.625335693359375
    6. 'result' → logprob: -20.750335693359375
    7. '.results' → logprob: -21.625335693359375
    8. '   ' → logprob: -22.125335693359375
    9. '_results' → logprob: -22.625335693359375
    10. 'Results' → logprob: -23.000335693359375

Token 609: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1302461624145508
    2. '           ' → logprob: -1.2552461624145508
    3. ':' → logprob: -1.3802461624145508
    4. 'print' → logprob: -2.005246162414551
    5. '():
' → logprob: -6.505246162414551
    6. ' print' → logprob: -6.755246162414551
    7. '       ' → logprob: -7.130246162414551
    8. '```' → logprob: -7.255246162414551
    9. ',' → logprob: -7.505246162414551
    10. '   ' → logprob: -8.13024616241455

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008721524849534035
    2. 'print' → logprob: -4.758721351623535
    3. ' print' → logprob: -9.633721351623535
    4. '   ' → logprob: -10.258721351623535
    5. '       ' → logprob: -12.383721351623535
    6. '```' → logprob: -13.258721351623535
    7. '	print' → logprob: -15.758721351623535
    8. '	       ' → logprob: -16.25872230529785
    9. '#print' → logprob: -16.38372230529785
    10. '.print' → logprob: -16.88372230529785

Token 611: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '           ' → logprob: -21.0
    4. '```' → logprob: -21.75
    5. '       ' → logprob: -24.5
    6. '   ' → logprob: -24.5
    7. '	print' → logprob: -25.625
    8. 'printf' → logprob: -26.25
    9. '               ' → logprob: -26.5
    10. 'println' → logprob: -27.125

Token 612: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020354038861114532
    2. 'res' → logprob: -8.500203132629395
    3. '(' → logprob: -16.87520408630371
    4. ' res' → logprob: -17.62520408630371
    5. '(
' → logprob: -19.25020408630371
    6. '$res' → logprob: -19.37520408630371
    7. '	res' → logprob: -19.62520408630371
    8. '=res' → logprob: -19.87520408630371
    9. ',res' → logprob: -20.75020408630371
    10. '(r' → logprob: -21.62520408630371

Token 613: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '())' → logprob: -14.250000953674316
    3. '()' → logprob: -14.625000953674316
    4. ')
' → logprob: -16.125001907348633
    5. ' )' → logprob: -16.375001907348633
    6. '))' → logprob: -17.750001907348633
    7. ')`' → logprob: -18.375001907348633
    8. '`)' → logprob: -18.750001907348633
    9. '')' → logprob: -19.625001907348633
    10. '")' → logprob: -20.000001907348633

Token 614: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.334533878136426e-05
    2. '```' → logprob: -10.625042915344238
    3. 'def' → logprob: -11.375042915344238
    4. ' if' → logprob: -11.875042915344238
    5. 'input' → logprob: -15.250042915344238
    6. '    
' → logprob: -15.375042915344238
    7. '
' → logprob: -17.375043869018555
    8. '  
' → logprob: -17.375043869018555
    9. '#' → logprob: -18.125043869018555
    10. '   ' → logprob: -18.375043869018555

Token 615: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5759429931640625
    2. 'main' → logprob: -0.8259429931640625
    3. '_main' → logprob: -12.825942993164062
    4. '	main' → logprob: -14.575942993164062
    5. ' run' → logprob: -15.700942993164062
    6. 'run' → logprob: -16.450942993164062
    7. '__' → logprob: -16.700942993164062
    8. ' ' → logprob: -18.075942993164062
    9. 'm' → logprob: -18.200942993164062
    10. '
' → logprob: -18.575942993164062

Token 616: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1637164789135568e-05
    2. ' ():' → logprob: -11.625011444091797
    3. '():
' → logprob: -12.875011444091797
    4. '()' → logprob: -16.500011444091797
    5. '():
' → logprob: -18.000011444091797
    6. '(' → logprob: -19.750011444091797
    7. '():

' → logprob: -20.750011444091797
    8. '_' → logprob: -20.750011444091797
    9. '().' → logprob: -20.875011444091797
    10. ':' → logprob: -21.125011444091797

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9883086681365967
    2. ' ih' → logprob: -1.2383086681365967
    3. ' handler' → logprob: -2.3633086681365967
    4. 'ih' → logprob: -2.4883086681365967
    5. 'handler' → logprob: -2.7383086681365967
    6. ' input' → logprob: -2.7383086681365967
    7. 'input' → logprob: -3.4883086681365967
    8. '	handler' → logprob: -7.613308906555176
    9. ' ioh' → logprob: -8.988308906555176
    10. ' h' → logprob: -10.113308906555176

Token 618: ' input' (ID: 3422)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.1920798420906067
    2. 'input' (adapté à ' input') → logprob: -2.192079782485962
    3. 'ih' → logprob: -2.942079782485962
    4. '   ' → logprob: -5.692080020904541
    5. ' handler' → logprob: -5.692080020904541
    6. ' input' → logprob: -5.942080020904541
    7. ' ih' → logprob: -7.817080020904541
    8. 'Input' → logprob: -7.817080020904541
    9. 'import' → logprob: -9.692079544067383
    10. 'inp' → logprob: -10.442079544067383

Token 619: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.003507772693410516
    2. 'Handler' → logprob: -5.878507614135742
    3. '_' → logprob: -7.753507614135742
    4. '()' → logprob: -8.878507614135742
    5. 'handler' → logprob: -9.753507614135742
    6. '_Handler' → logprob: -10.128507614135742
    7. '_handle' → logprob: -10.878507614135742
    8. ' =' → logprob: -12.253507614135742
    9. '=' → logprob: -12.753507614135742
    10. '()
' → logprob: -12.878507614135742

Token 620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8401939868927002
    2. '.process' → logprob: -0.8401939868927002
    3. '.' → logprob: -2.3401939868927
    4. '=' → logprob: -3.2151939868927
    5. 'process' → logprob: -8.715193748474121
    6. ' ' → logprob: -9.840193748474121
    7. '(process' → logprob: -11.465193748474121
    8. '.=' → logprob: -11.590193748474121
    9. '.print' → logprob: -11.715193748474121
    10. ' .' → logprob: -11.840193748474121

Token 621: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -7.493430894101039e-05
    2. ' Input' → logprob: -9.500075340270996
    3. '	Input' → logprob: -21.50007438659668
    4. '<Input' → logprob: -24.25007438659668
    5. '_Input' → logprob: -24.75007438659668
    6. '_input' → logprob: -25.37507438659668
    7. '\Input' → logprob: -26.25007438659668
    8. ' input' → logprob: -27.25007438659668
    9. '.Input' → logprob: -27.50007438659668
    10. 'INPUT' → logprob: -27.62507438659668

Token 622: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.0280383548888494e-06
    2. 'handler' → logprob: -14.000000953674316
    3. '_Handler' → logprob: -16.250001907348633
    4. '_handler' → logprob: -18.375001907348633
    5. ' Handler' → logprob: -18.625001907348633
    6. '.Handler' → logprob: -19.500001907348633
    7. '_HANDLER' → logprob: -19.750001907348633
    8. 'Handle' → logprob: -19.875001907348633
    9. 'andler' → logprob: -20.000001907348633
    10. 'Hand' → logprob: -20.625001907348633

Token 623: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3603971600532532
    2. '
' → logprob: -1.2353971004486084
    3. '()
' → logprob: -4.6103973388671875
    4. '()' → logprob: -7.2353973388671875
    5. '(input' → logprob: -7.9853973388671875
    6. 'input' → logprob: -8.110397338867188
    7. '    
' → logprob: -8.485397338867188
    8. '.process' → logprob: -9.485397338867188
    9. 'process' → logprob: -10.110397338867188
    10. '
' → logprob: -10.360397338867188

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16108466684818268
    2. '
' → logprob: -1.9110846519470215
    3. 'input' → logprob: -7.1610846519470215
    4. '    
' → logprob: -10.16108512878418
    5. ' input' → logprob: -10.66108512878418
    6. '
' → logprob: -11.66108512878418
    7. '  
' → logprob: -12.78608512878418
    8. ' 
' → logprob: -12.91108512878418
    9. '	input' → logprob: -13.03608512878418
    10. '\n' → logprob: -13.66108512878418

Token 625: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.007698433008044958
    2. '   ' → logprob: -5.2576985359191895
    3. ' input' → logprob: -6.0076985359191895
    4. '	input' → logprob: -13.757698059082031
    5. '
' → logprob: -14.382698059082031
    6. ' ' → logprob: -16.63269805908203
    7. '.input' → logprob: -17.50769805908203
    8. '  ' → logprob: -17.63269805908203
    9. '(input' → logprob: -17.63269805908203
    10. '<input' → logprob: -17.88269805908203

Token 626: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -14.25000286102295
    3. '_Handler' → logprob: -14.25000286102295
    4. 'Handler' → logprob: -15.25000286102295
    5. '_controller' → logprob: -15.62500286102295
    6. 'handler' → logprob: -15.75000286102295
    7. '   ' → logprob: -15.75000286102295
    8. '_HANDLER' → logprob: -15.75000286102295
    9. '_handle' → logprob: -16.375001907348633
    10. ' _' → logprob: -16.375001907348633

Token 627: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.00012356207298580557
    2. '.' → logprob: -9.000123977661133
    3. 'process' → logprob: -16.875123977661133
    4. ' .' → logprob: -18.000123977661133
    5. '.proc' → logprob: -19.250123977661133
    6. '.perform' → logprob: -20.250123977661133
    7. '.run' → logprob: -20.250123977661133
    8. '.pro' → logprob: -20.625123977661133
    9. '.Process' → logprob: -20.750123977661133
    10. '.handle' → logprob: -20.875123977661133

Token 628: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.250000953674316
    3. '_Input' → logprob: -19.125
    4. '_
' → logprob: -20.75
    5. '_output' → logprob: -21.0
    6. '_in' → logprob: -21.375
    7. 'Input' → logprob: -21.75
    8. '_inputs' → logprob: -21.75
    9. '_INPUT' → logprob: -21.75
    10. '__' → logprob: -22.5

Token 629: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007918820483610034
    2. '
' → logprob: -7.625792026519775
    3. 'input' → logprob: -8.125791549682617
    4. '    
' → logprob: -12.375791549682617
    5. ' input' → logprob: -13.250791549682617
    6. '	input' → logprob: -13.500791549682617
    7. '<|end|>' → logprob: -15.625791549682617
    8. '  ' → logprob: -16.125791549682617
    9. ',input' → logprob: -16.250791549682617
    10. '```' → logprob: -16.875791549682617

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018434131518006325
    2. 'input' → logprob: -4.018434047698975
    3. ' input' → logprob: -8.268434524536133
    4. '
' → logprob: -10.768434524536133
    5. '	input' → logprob: -12.643434524536133
    6. '    
' → logprob: -13.268434524536133
    7. '```' → logprob: -14.268434524536133
    8. '_input' → logprob: -15.268434524536133
    9. ',input' → logprob: -15.768434524536133
    10. '[input' → logprob: -15.768434524536133

Token 631: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0006340435356833041
    2. ' input' → logprob: -7.75063419342041
    3. '   ' → logprob: -8.50063419342041
    4. '	input' → logprob: -18.375633239746094
    5. ' ' → logprob: -19.000633239746094
    6. '_input' → logprob: -20.750633239746094
    7. '
' → logprob: -20.750633239746094
    8. '  ' → logprob: -21.125633239746094
    9. '<input' → logprob: -22.000633239746094
    10. '    
' → logprob: -22.625633239746094

Token 632: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.704273118884885e-07
    2. 'handler' → logprob: -14.500000953674316
    3. '_Handler' → logprob: -17.75
    4. '_HANDLER' → logprob: -17.875
    5. '_handle' → logprob: -18.125
    6. '_' → logprob: -18.25
    7. '._' → logprob: -19.0
    8. '_hand' → logprob: -19.125
    9. 'Handler' → logprob: -19.875
    10. '_helper' → logprob: -20.0

Token 633: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.375000953674316
    3. 'print' → logprob: -14.625000953674316
    4. ' .' → logprob: -18.375001907348633
    5. '.println' → logprob: -18.875001907348633
    6. '.
' → logprob: -19.500001907348633
    7. '.process' → logprob: -20.125001907348633
    8. '.Print' → logprob: -20.250001907348633
    9. '.run' → logprob: -20.500001907348633
    10. '.write' → logprob: -20.750001907348633

Token 634: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.9361264946837764e-07
    2. 'results' → logprob: -17.375
    3. '_' → logprob: -17.5
    4. '()' → logprob: -17.75
    5. 'Results' → logprob: -18.0
    6. '_RESULTS' → logprob: -18.375
    7. ' results' → logprob: -18.5
    8. '_res' → logprob: -19.5
    9. 's' → logprob: -19.5
    10. '_result' → logprob: -19.75

Token 635: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1284342259168625
    2. 'if' → logprob: -2.378434181213379
    3. '()' → logprob: -4.253434181213379
    4. '()
' → logprob: -4.878434181213379
    5. '<|end|>' → logprob: -5.503434181213379
    6. '(
' → logprob: -7.753434181213379
    7. '```' → logprob: -7.753434181213379
    8. '

' → logprob: -7.878434181213379
    9. '()

' → logprob: -8.128434181213379
    10. '\n' → logprob: -8.878434181213379

Token 636: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -12.750003814697266
    3. ' if' → logprob: -14.625003814697266
    4. '
' → logprob: -16.250003814697266
    5. 'main' → logprob: -18.375003814697266
    6. '#' → logprob: -18.625003814697266
    7. '\n' → logprob: -19.000003814697266
    8. '    
' → logprob: -19.125003814697266
    9. '\' → logprob: -19.750003814697266
    10. '  
' → logprob: -20.250003814697266

Token 637: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010422403924167156
    2. '__' → logprob: -4.635422229766846
    3. '_' → logprob: -8.135422706604004
    4. '_name' → logprob: -8.260422706604004
    5. ' ' → logprob: -9.635422706604004
    6. ' ' → logprob: -11.135422706604004
    7. ' _' → logprob: -11.260422706604004
    8. 'name' → logprob: -11.760422706604004
    9. ' ___' → logprob: -12.885422706604004
    10. '___' → logprob: -12.885422706604004

Token 638: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6158292889595032
    2. ' ==' → logprob: -1.2408292293548584
    3. '==' → logprob: -1.8658292293548584
    4. '[' → logprob: -4.6158294677734375
    5. '.__' → logprob: -6.4908294677734375
    6. '=="' → logprob: -6.7408294677734375
    7. ' __' → logprob: -7.1158294677734375
    8. '=='' → logprob: -7.6158294677734375
    9. '['' → logprob: -7.8658294677734375
    10. 'name' → logprob: -8.240829467773438

Token 639: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.688212614681106e-05
    2. '__.__' → logprob: -11.125017166137695
    3. '__.' → logprob: -13.750017166137695
    4. '==' → logprob: -14.500017166137695
    5. '__
' → logprob: -16.375017166137695
    6. ' ==' → logprob: -16.625017166137695
    7. '__["' → logprob: -16.750017166137695
    8. '___' → logprob: -16.750017166137695
    9. '__('' → logprob: -17.000017166137695
    10. '____' → logprob: -17.500017166137695

Token 640: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00045902872807346284
    2. '==' → logprob: -7.75045919418335
    3. ' ==' → logprob: -10.750458717346191
    4. '_' → logprob: -12.625458717346191
    5. '__.__' → logprob: -13.375458717346191
    6. '=' → logprob: -14.125458717346191
    7. '=="' → logprob: -14.500458717346191
    8. '___' → logprob: -15.000458717346191
    9. '__.' → logprob: -15.750458717346191
    10. '.__' → logprob: -15.875458717346191

Token 641: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023249205201864243
    2. ''' → logprob: -3.7732491493225098
    3. ' "__' → logprob: -12.898249626159668
    4. '__' → logprob: -14.148249626159668
    5. '"user' → logprob: -15.648249626159668
    6. '"class' → logprob: -15.773249626159668
    7. '"name' → logprob: -16.14824867248535
    8. ' '__' → logprob: -17.02324867248535
    9. ''"' → logprob: -17.89824867248535
    10. '"'' → logprob: -18.02324867248535

Token 642: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31331661343574524
    2. '__' → logprob: -1.3133165836334229
    3. '_main' → logprob: -10.313316345214844
    4. '"' → logprob: -11.313316345214844
    5. 'name' → logprob: -12.438316345214844
    6. '__
' → logprob: -13.188316345214844
    7. '__":
' → logprob: -14.313316345214844
    8. ''' → logprob: -14.563316345214844
    9. '___' → logprob: -14.563316345214844
    10. ' main' → logprob: -14.813316345214844

Token 643: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47422391176223755
    2. '__":
' → logprob: -0.9742239117622375
    3. '__':
' → logprob: -9.599224090576172
    4. '__.__' → logprob: -10.599224090576172
    5. '__["' → logprob: -10.599224090576172
    6. '__.' → logprob: -10.724224090576172
    7. '__
' → logprob: -12.599224090576172
    8. '__",' → logprob: -13.849224090576172
    9. '__("' → logprob: -13.974224090576172
    10. '__
' → logprob: -14.724224090576172

Token 644: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1614275872707367
    2. '__' → logprob: -1.911427617073059
    3. '"' → logprob: -6.7864274978637695
    4. ''' → logprob: -10.41142749786377
    5. ' main' → logprob: -10.41142749786377
    6. '_main' → logprob: -12.03642749786377
    7. '   ' → logprob: -13.03642749786377
    8. '___' → logprob: -13.91142749786377
    9. '__":
' → logprob: -14.03642749786377
    10. '	main' → logprob: -14.03642749786377

Token 645: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -20.75
    4. 'import' → logprob: -24.125
    5. '   ' → logprob: -24.375
    6. '.main' → logprob: -25.125
    7. '_main' → logprob: -26.125
    8. 'mai' → logprob: -26.125
    9. 'ma' → logprob: -26.375
    10. '(main' → logprob: -26.375

Token 646: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 644
Tokens correctement prédits (1ère position, stricte): 344
Tokens correctement prédits (1ère position, avec adaptation): 381
Tokens correctement prédits (top 10): 573
Précision stricte (1ère position): 53.42%
Précision adaptée (1ère position): 59.16%
Précision (top 10): 88.98%
================================================================================
