================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def classify(v):
    if v >= 1.1:
        return 0  # A
    elif v >= 0.6:
        return 1  # B
    elif v >= 0.2:
        return 2  # C
    else:
        return 3  # D

import sys

left_counts = [0, 0, 0, 0]
right_counts = [0, 0, 0, 0]

for line in sys.stdin:
    line = line.strip()
    if not line:
        continue
    l, r = map(float, line.split())
    left_counts[classify(l)] += 1
    right_counts[classify(r)] += 1

for i in range(4):
    print(left_counts[i], right_counts[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' classify' (ID: 92913)
  → Token d'amorce (pas de prédiction)

Token 2: '(v' (ID: 6932)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11003963649272919
    2. 'alue' → logprob: -2.985039710998535
    3. 'ariable' → logprob: -3.860039710998535
    4. 'e' → logprob: -4.235039710998535
    5. ')' → logprob: -4.860039710998535
    6. 'ector' → logprob: -5.610039710998535
    7. 'v' → logprob: -6.360039710998535
    8. 'al' → logprob: -6.485039710998535
    9. '):' → logprob: -7.235039710998535
    10. '```' → logprob: -7.735039710998535

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06374773383140564
    2. '```' → logprob: -3.0637476444244385
    3. ' ' → logprob: -5.438747882843018
    4. ':' → logprob: -5.813747882843018
    5. '    ' → logprob: -6.188747882843018
    6. '\' → logprob: -6.813747882843018
    7. ' return' → logprob: -6.938747882843018
    8. '    
' → logprob: -7.063747882843018
    9. ' if' → logprob: -7.688747882843018
    10. ''' → logprob: -8.06374740600586

Token 5: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.068622350692749
    2. 'i' → logprob: -1.193622350692749
    3. 'if' (adapté à ' if') → logprob: -2.193622350692749
    4. '   ' → logprob: -2.193622350692749
    5. ''' → logprob: -3.318622350692749
    6. 'r' → logprob: -3.568622350692749
    7. 'return' → logprob: -3.568622350692749
    8. ' if' → logprob: -4.318622589111328
    9. '```' → logprob: -5.818622589111328
    10. '[' → logprob: -5.818622589111328

Token 6: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.00495907012373209
    2. ' ' → logprob: -5.6299591064453125
    3. 'v' → logprob: -6.7549591064453125
    4. ' not' → logprob: -8.754959106445312
    5. '  ' → logprob: -11.379959106445312
    6. ' s' → logprob: -12.379959106445312
    7. ' a' → logprob: -12.504959106445312
    8. '(v' → logprob: -13.379959106445312
    9. ' (' → logprob: -13.504959106445312
    10. ' )' → logprob: -13.754959106445312

Token 7: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20123623311519623
    2. ' ==' → logprob: -2.4512362480163574
    3. ' >=' → logprob: -3.3262362480163574
    4. ' ' → logprob: -3.7012362480163574
    5. '>' → logprob: -4.076236248016357
    6. ' <' → logprob: -4.951236248016357
    7. ' <=' → logprob: -5.826236248016357
    8. '==' → logprob: -5.951236248016357
    9. '  ' → logprob: -6.076236248016357
    10. '.' → logprob: -7.576236248016357

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17145982384681702
    2. '0' → logprob: -2.171459913253784
    3. '10' → logprob: -3.171459913253784
    4. '100' → logprob: -6.921459674835205
    5. '1' → logprob: -8.046460151672363
    6. '50' → logprob: -8.671460151672363
    7. '18' → logprob: -10.546460151672363
    8. '5' → logprob: -10.671460151672363
    9. '80' → logprob: -10.921460151672363
    10. '90' → logprob: -11.171460151672363

Token 9: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29238569736480713
    2. '10' → logprob: -1.6673856973648071
    3. ' ' → logprob: -3.2923855781555176
    4. '50' → logprob: -4.542385578155518
    5. '100' → logprob: -4.792385578155518
    6. '80' → logprob: -5.917385578155518
    7. '1' → logprob: -6.292385578155518
    8. '90' → logprob: -6.292385578155518
    9. '5' → logprob: -7.792385578155518
    10. '18' → logprob: -7.917385578155518

Token 10: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007479907013475895
    2. '0' → logprob: -5.132480144500732
    3. ' :' → logprob: -6.507480144500732
    4. '.' → logprob: -11.507479667663574
    5. '2' → logprob: -11.632479667663574
    6. '):' → logprob: -12.132479667663574
    7. ':
' → logprob: -12.132479667663574
    8. '_:' → logprob: -12.257479667663574
    9. '':' → logprob: -12.382479667663574
    10. ':return' → logprob: -12.882479667663574

Token 11: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010696083772927523
    2. '5' → logprob: -6.87606954574585
    3. ' ' → logprob: -10.376070022583008
    4. '7' → logprob: -13.251070022583008
    5. '8' → logprob: -13.501070022583008
    6. '   ' → logprob: -14.876070022583008
    7. '```' → logprob: -14.876070022583008
    8. '  ' → logprob: -15.188570022583008
    9. ':' → logprob: -15.251070022583008
    10. '1' → logprob: -15.688570022583008

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009892434813082218
    2. ' :' → logprob: -4.634892463684082
    3. '):' → logprob: -9.259892463684082
    4. ':return' → logprob: -11.259892463684082
    5. '':' → logprob: -11.634892463684082
    6. ':
' → logprob: -12.634892463684082
    7. '>:' → logprob: -12.884892463684082
    8. ':**' → logprob: -13.134892463684082
    9. ')' → logprob: -13.259892463684082
    10. '   ' → logprob: -13.634892463684082

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2504953444004059
    2. ':' → logprob: -1.7504953145980835
    3. '    ' → logprob: -4.750495433807373
    4. '   ' → logprob: -4.750495433807373
    5. ' return' → logprob: -5.250495433807373
    6. ' :' → logprob: -5.250495433807373
    7. ':
' → logprob: -5.750495433807373
    8. ':return' → logprob: -5.750495433807373
    9. 'return' → logprob: -6.125495433807373
    10. ' 
' → logprob: -6.250495433807373

Token 14: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6614737510681152
    2. ' return' → logprob: -0.7864737510681152
    3. '       ' → logprob: -4.161473751068115
    4. '           ' → logprob: -4.411473751068115
    5. '   ' → logprob: -8.536474227905273
    6. ''' → logprob: -8.786474227905273
    7. '```' → logprob: -9.036474227905273
    8. '`' → logprob: -9.911474227905273
    9. '"' → logprob: -9.911474227905273
    10. '\n' → logprob: -10.411474227905273

Token 15: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.496398001909256
    2. '"' → logprob: -1.1213979721069336
    3. ' '' → logprob: -3.8713979721069336
    4. '1' → logprob: -4.246397972106934
    5. ' True' → logprob: -4.496397972106934
    6. ' "' → logprob: -4.871397972106934
    7. ' ' → logprob: -4.996397972106934
    8. 'True' → logprob: -6.246397972106934
    9. '2' → logprob: -7.871397972106934
    10. '">' → logprob: -8.121397972106934

Token 16: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6238041520118713
    2. ''' → logprob: -0.8738041520118713
    3. '1' → logprob: -4.748804092407227
    4. ''H' → logprob: -4.873804092407227
    5. ''>' → logprob: -5.123804092407227
    6. '">' → logprob: -5.248804092407227
    7. ''h' → logprob: -5.373804092407227
    8. ''A' → logprob: -5.623804092407227
    9. '"H' → logprob: -5.873804092407227
    10. ''T' → logprob: -6.748804092407227

Token 17: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17483514547348022
    2. '
' → logprob: -2.299835205078125
    3. '   ' → logprob: -3.174835205078125
    4. '    
' → logprob: -4.799835205078125
    5. '```' → logprob: -5.924835205078125
    6. '  
' → logprob: -6.549835205078125
    7. '\' → logprob: -6.924835205078125
    8. '\r' → logprob: -7.049835205078125
    9. '' → logprob: -7.299835205078125
    10. 'elif' → logprob: -7.549835205078125

Token 18: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.38596683740615845
    2. '
' → logprob: -1.3859667778015137
    3. '   ' → logprob: -3.1359667778015137
    4. '    
' → logprob: -4.635966777801514
    5. '  
' → logprob: -5.760966777801514
    6. ' ' → logprob: -6.135966777801514
    7. '```' → logprob: -6.260966777801514
    8. '\' → logprob: -6.385966777801514
    9. '\r' → logprob: -6.385966777801514
    10. 'elif' → logprob: -6.510966777801514

Token 19: ' A' (ID: 355)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.8357924222946167
    2. 'positive' → logprob: -2.4607925415039062
    3. ' high' → logprob: -2.5857925415039062
    4. ' large' → logprob: -3.2107925415039062
    5. ' pass' → logprob: -3.2732925415039062
    6. ' low' → logprob: -3.5232925415039062
    7. ''' → logprob: -3.7732925415039062
    8. ' safe' → logprob: -4.148292541503906
    9. ' class' → logprob: -4.273292541503906
    10. ' else' → logprob: -4.523292541503906

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36642879247665405
    2. 'elif' → logprob: -1.7414288520812988
    3. '\n' → logprob: -2.866428852081299
    4. ' elif' → logprob: -4.116428852081299
    5. '<|end|>' → logprob: -4.366428852081299
    6. '   ' → logprob: -4.491428852081299
    7. '    
' → logprob: -4.616428852081299
    8. '```' → logprob: -4.616428852081299
    9. '  
' → logprob: -5.866428852081299
    10. 'e' → logprob: -5.991428852081299

Token 21: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6315296292304993
    2. '
' → logprob: -1.0065295696258545
    3. '   ' → logprob: -2.8815295696258545
    4. '    
' → logprob: -4.506529808044434
    5. '```' → logprob: -4.631529808044434
    6. 'elif' → logprob: -4.756529808044434
    7. '  
' → logprob: -5.256529808044434
    8. ' elif' → logprob: -6.006529808044434
    9. '\r' → logprob: -6.131529808044434
    10. ' ' → logprob: -6.506529808044434

Token 22: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4285740852355957
    2. '\n' → logprob: -2.1785740852355957
    3. '
' → logprob: -2.6785740852355957
    4. ' elif' → logprob: -2.8035740852355957
    5. '   ' → logprob: -2.8035740852355957
    6. '```' → logprob: -3.5535740852355957
    7. 'else' → logprob: -5.428574085235596
    8. '    
' → logprob: -5.553574085235596
    9. ' ' → logprob: -5.928574085235596
    10. ' else' → logprob: -6.428574085235596

Token 23: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07672159373760223
    2. ' ' → logprob: -2.701721668243408
    3. 'v' → logprob: -5.076721668243408
    4. '    ' → logprob: -8.45172119140625
    5. '0' → logprob: -8.82672119140625
    6. ' ' → logprob: -10.45172119140625
    7. '  ' → logprob: -10.45172119140625
    8. '	v' → logprob: -10.82672119140625
    9. '   ' → logprob: -10.95172119140625
    10. ' (' → logprob: -11.20172119140625

Token 24: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.46237555146217346
    2. ' <' → logprob: -1.087375521659851
    3. ' >' → logprob: -3.9623756408691406
    4. ' ' → logprob: -5.087375640869141
    5. '<' → logprob: -5.712375640869141
    6. '>=' → logprob: -5.962375640869141
    7. ' <=' → logprob: -6.587375640869141
    8. '>' → logprob: -7.462375640869141
    9. ' ' → logprob: -11.08737564086914
    10. '<=' → logprob: -11.21237564086914

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3323129713535309
    2. ' ' → logprob: -1.5823129415512085
    3. '1' → logprob: -2.707313060760498
    4. '-' → logprob: -5.082313060760498
    5. ' -' → logprob: -5.582313060760498
    6. '2' → logprob: -8.95731258392334
    7. '10' → logprob: -9.83231258392334
    8. '9' → logprob: -9.89481258392334
    9. ' .' → logprob: -9.89481258392334
    10. '5' → logprob: -10.08231258392334

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26947224140167236
    2. '1' → logprob: -1.6444722414016724
    3. '-' → logprob: -3.269472122192383
    4. ' ' → logprob: -6.019472122192383
    5. '.' → logprob: -7.144472122192383
    6. '2' → logprob: -7.269472122192383
    7. ' -' → logprob: -7.769472122192383
    8. '3' → logprob: -8.831972122192383
    9. '5' → logprob: -8.956972122192383
    10. '9' → logprob: -9.644472122192383

Token 27: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2603901015827432e-05
    2. ' .' → logprob: -11.125022888183594
    3. '`.' → logprob: -13.750022888183594
    4. '4' → logprob: -14.125022888183594
    5. '9' → logprob: -14.500022888183594
    6. '7' → logprob: -14.500022888183594
    7. '46' → logprob: -14.500022888183594
    8. '6' → logprob: -14.625022888183594
    9. '0' → logprob: -14.750022888183594
    10. '​.' → logprob: -14.750022888183594

Token 28: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9114201664924622
    2. '9' → logprob: -1.7864201068878174
    3. '6' → logprob: -2.0364201068878174
    4. '7' → logprob: -2.0364201068878174
    5. '8' → logprob: -2.2864201068878174
    6. '1' → logprob: -3.7864201068878174
    7. '4' → logprob: -4.4114203453063965
    8. '3' → logprob: -4.6614203453063965
    9. '0' → logprob: -5.0364203453063965
    10. '2' → logprob: -5.2864203453063965

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025192240718752146
    2. ':
' → logprob: -8.375251770019531
    3. ' :' → logprob: -11.750251770019531
    4. '       ' → logprob: -12.125251770019531
    5. '   ' → logprob: -12.250251770019531
    6. '):' → logprob: -13.875251770019531
    7. ' and' → logprob: -13.875251770019531
    8. ':return' → logprob: -14.625251770019531
    9. ':
' → logprob: -15.375251770019531
    10. ':**' → logprob: -16.12525177001953

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016101972432807088
    2. ' return' → logprob: -7.001610279083252
    3. 'return' → logprob: -8.251609802246094
    4. '0' → logprob: -8.626609802246094
    5. '4' → logprob: -9.376609802246094
    6. '   ' → logprob: -9.751609802246094
    7. ' ' → logprob: -10.376609802246094
    8. '1' → logprob: -10.751609802246094
    9. '           ' → logprob: -10.876609802246094
    10. '2' → logprob: -11.501609802246094

Token 31: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7041453719139099
    2. 'return' (adapté à ' return') → logprob: -1.3291454315185547
    3. ' return' → logprob: -1.4541454315185547
    4. '1' → logprob: -5.954145431518555
    5. '0' → logprob: -6.454145431518555
    6. ' ' → logprob: -6.954145431518555
    7. '   ' → logprob: -7.079145431518555
    8. '           ' → logprob: -7.579145431518555
    9. '4' → logprob: -8.204145431518555
    10. '2' → logprob: -9.079145431518555

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13123400509357452
    2. '1' → logprob: -2.1312339305877686
    3. '0' → logprob: -5.506234169006348
    4. '2' → logprob: -8.506234169006348
    5. ' ' → logprob: -11.131234169006348
    6. '3' → logprob: -11.506234169006348
    7. '4' → logprob: -12.631234169006348
    8. ''' → logprob: -14.131234169006348
    9. '   ' → logprob: -14.318734169006348
    10. '5' → logprob: -14.568734169006348

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010415202006697655
    2. '0' → logprob: -4.885415077209473
    3. ' ' → logprob: -6.385415077209473
    4. '2' → logprob: -6.885415077209473
    5. '3' → logprob: -9.510415077209473
    6. '4' → logprob: -11.260415077209473
    7. '   ' → logprob: -12.947915077209473
    8. '5' → logprob: -13.197915077209473
    9. '```' → logprob: -14.447915077209473
    10. '6' → logprob: -14.510415077209473

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21606801450252533
    2. ' #' → logprob: -2.2160680294036865
    3. '   ' → logprob: -3.2160680294036865
    4. '#' → logprob: -4.216067790985107
    5. '<|end|>' → logprob: -4.216067790985107
    6. '  ' → logprob: -5.341067790985107
    7. ':' → logprob: -5.716067790985107
    8. ' :' → logprob: -5.841067790985107
    9. '       ' → logprob: -6.466067790985107
    10. '```' → logprob: -7.466067790985107

Token 35: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8014987111091614
    2. ' #' → logprob: -1.0514986515045166
    3. '#' → logprob: -1.8014986515045166
    4. '   ' → logprob: -3.4264986515045166
    5. '       ' → logprob: -6.176498889923096
    6. '  ' → logprob: -6.551498889923096
    7. '<|end|>' → logprob: -8.551498413085938
    8. '	' → logprob: -8.926498413085938
    9. '0' → logprob: -8.926498413085938
    10. '```' → logprob: -9.551498413085938

Token 36: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39510151743888855
    2. ' B' → logprob: -1.145101547241211
    3. 'A' → logprob: -5.395101547241211
    4. ' A' → logprob: -6.395101547241211
    5. ' ' → logprob: -6.645101547241211
    6. 'C' → logprob: -8.520101547241211
    7. ''' → logprob: -9.457601547241211
    8. ' C' → logprob: -9.582601547241211
    9. '0' → logprob: -9.707601547241211
    10. '1' → logprob: -10.582601547241211

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00903983972966671
    2. '```' → logprob: -6.009039878845215
    3. '<|end|>' → logprob: -6.134039878845215
    4. 'elif' → logprob: -6.634039878845215
    5. '	elif' → logprob: -6.759039878845215
    6. ' elif' → logprob: -7.509039878845215
    7. '    
' → logprob: -7.759039878845215
    8. '
' → logprob: -8.634039878845215
    9. ' else' → logprob: -8.884039878845215
    10. '\n' → logprob: -9.134039878845215

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07783637940883636
    2. '<|end|>' → logprob: -3.327836275100708
    3. 'elif' → logprob: -4.702836513519287
    4. '```' → logprob: -4.952836513519287
    5. '    
' → logprob: -5.202836513519287
    6. '	elif' → logprob: -5.827836513519287
    7. 'else' → logprob: -5.827836513519287
    8. ' else' → logprob: -6.452836513519287
    9. '
' → logprob: -6.452836513519287
    10. ' 
' → logprob: -6.577836513519287

Token 39: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5526199340820312
    2. 'elif' (adapté à ' elif') → logprob: -0.9276199340820312
    3. 'else' → logprob: -3.6776199340820312
    4. ' elif' → logprob: -6.427619934082031
    5. ' else' → logprob: -6.927619934082031
    6. '```' → logprob: -7.052619934082031
    7. '       ' → logprob: -8.802619934082031
    8. '	elif' → logprob: -10.177619934082031
    9. ' ' → logprob: -10.802619934082031
    10. '    
' → logprob: -10.802619934082031

Token 40: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.008600624278187752
    2. 'v' → logprob: -5.13360071182251
    3. ' ' → logprob: -6.00860071182251
    4. '0' → logprob: -8.508600234985352
    5. ' ' → logprob: -12.383600234985352
    6. '-' → logprob: -14.008600234985352
    7. '	v' → logprob: -14.446100234985352
    8. '<|end|>' → logprob: -14.883600234985352
    9. '(v' → logprob: -15.321100234985352
    10. '.' → logprob: -15.508600234985352

Token 41: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.014182187616825104
    2. ' ' → logprob: -4.389182090759277
    3. '>=' → logprob: -6.764182090759277
    4. ' <' → logprob: -8.139182090759277
    5. ' >' → logprob: -8.764182090759277
    6. '<|end|>' → logprob: -10.514182090759277
    7. '>' → logprob: -11.389182090759277
    8. '<' → logprob: -11.639182090759277
    9. ' <=' → logprob: -12.389182090759277
    10. '  ' → logprob: -12.639182090759277

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6331945657730103
    2. ' ' → logprob: -0.7581945657730103
    3. '-' → logprob: -7.758194446563721
    4. ' -' → logprob: -8.758194923400879
    5. '1' → logprob: -13.133194923400879
    6. '4' → logprob: -13.195694923400879
    7. '   ' → logprob: -13.820694923400879
    8. '3' → logprob: -13.945694923400879
    9. '  ' → logprob: -14.133194923400879
    10. '5' → logprob: -14.258194923400879

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004587484523653984
    2. '-' → logprob: -5.629587650299072
    3. ' ' → logprob: -7.004587650299072
    4. ' -' → logprob: -10.254587173461914
    5. '1' → logprob: -11.192087173461914
    6. '4' → logprob: -11.692087173461914
    7. '3' → logprob: -11.879587173461914
    8. '2' → logprob: -12.254587173461914
    9. '5' → logprob: -12.692087173461914
    10. '   ' → logprob: -13.942087173461914

Token 44: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.286852345103398e-05
    2. ' .' → logprob: -10.250042915344238
    3. '0' → logprob: -13.125042915344238
    4. '4' → logprob: -14.000042915344238
    5. '```' → logprob: -14.250042915344238
    6. ' ' → logprob: -14.875042915344238
    7. '7' → logprob: -15.000042915344238
    8. '2' → logprob: -15.000042915344238
    9. '<|end|>' → logprob: -15.000042915344238
    10. '3' → logprob: -15.250042915344238

Token 45: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5633268356323242
    2. '1' → logprob: -1.9383268356323242
    3. '4' → logprob: -1.9383268356323242
    4. '2' → logprob: -2.313326835632324
    5. '0' → logprob: -3.938326835632324
    6. '5' → logprob: -4.438326835632324
    7. '6' → logprob: -4.813326835632324
    8. '25' → logprob: -6.313326835632324
    9. '35' → logprob: -6.813326835632324
    10. '15' → logprob: -8.063326835632324

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003063838230445981
    2. ':
' → logprob: -8.125306129455566
    3. '       ' → logprob: -12.250306129455566
    4. '   ' → logprob: -13.250306129455566
    5. ' :' → logprob: -13.250306129455566
    6. ':return' → logprob: -14.000306129455566
    7. '):' → logprob: -14.875306129455566
    8. ':

' → logprob: -15.250306129455566
    9. '```' → logprob: -15.500306129455566
    10. ',' → logprob: -15.875306129455566

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002447234932333231
    2. ' ' → logprob: -6.877447128295898
    3. '4' → logprob: -7.252447128295898
    4. '2' → logprob: -8.252447128295898
    5. '1' → logprob: -8.752447128295898
    6. '   ' → logprob: -9.252447128295898
    7. '0' → logprob: -9.627447128295898
    8. 'return' → logprob: -10.627447128295898
    9. '```' → logprob: -10.627447128295898
    10. ' return' → logprob: -10.877447128295898

Token 48: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23385928571224213
    2. '       ' → logprob: -1.8588593006134033
    3. '2' → logprob: -3.3588593006134033
    4. ' return' → logprob: -4.483859062194824
    5. '1' → logprob: -5.858859062194824
    6. '0' → logprob: -6.108859062194824
    7. '4' → logprob: -6.983859062194824
    8. '   ' → logprob: -7.858859062194824
    9. ' ' → logprob: -8.858859062194824
    10. '```' → logprob: -10.483859062194824

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12735284864902496
    2. '2' → logprob: -2.1273529529571533
    3. '1' → logprob: -8.252352714538574
    4. '0' → logprob: -8.752352714538574
    5. ' ' → logprob: -12.377352714538574
    6. '3' → logprob: -14.377352714538574
    7. '  ' → logprob: -15.189852714538574
    8. '   ' → logprob: -15.564852714538574
    9. '```' → logprob: -16.12735366821289
    10. '`' → logprob: -16.25235366821289

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015689032152295113
    2. ' ' → logprob: -6.626568794250488
    3. '3' → logprob: -8.626568794250488
    4. '1' → logprob: -9.876568794250488
    5. '0' → logprob: -11.751568794250488
    6. '  ' → logprob: -13.751568794250488
    7. '4' → logprob: -13.939068794250488
    8. '```' → logprob: -14.376568794250488
    9. '   ' → logprob: -14.689068794250488
    10. '     ' → logprob: -15.939068794250488

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041556376963853836
    2. ' :' → logprob: -3.6665563583374023
    3. ' #' → logprob: -4.541556358337402
    4. ':' → logprob: -6.041556358337402
    5. '  ' → logprob: -7.166556358337402
    6. '<|end|>' → logprob: -7.541556358337402
    7. '#' → logprob: -7.791556358337402
    8. ' ' → logprob: -9.041556358337402
    9. '   ' → logprob: -9.791556358337402
    10. ' 
' → logprob: -9.791556358337402

Token 52: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6818829774856567
    2. ' #' → logprob: -1.1818829774856567
    3. ' ' → logprob: -1.6818829774856567
    4. '   ' → logprob: -7.306882858276367
    5. '  ' → logprob: -7.681882858276367
    6. ':' → logprob: -8.556882858276367
    7. '       ' → logprob: -8.681882858276367
    8. ' :' → logprob: -10.056882858276367
    9. '#:' → logprob: -10.681882858276367
    10. '```' → logprob: -11.431882858276367

Token 53: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.523339569568634
    2. 'C' → logprob: -0.898339569568634
    3. ' ' → logprob: -9.39833927154541
    4. 'A' → logprob: -10.02333927154541
    5. ' A' → logprob: -10.83583927154541
    6. 'B' → logprob: -11.71083927154541
    7. ''C' → logprob: -11.77333927154541
    8. 'I' → logprob: -11.96083927154541
    9. 'D' → logprob: -11.96083927154541
    10. ' B' → logprob: -12.33583927154541

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018481183797121048
    2. 'else' → logprob: -5.018481254577637
    3. ' else' → logprob: -5.643481254577637
    4. '<|end|>' → logprob: -6.018481254577637
    5. '    
' → logprob: -6.268481254577637
    6. 'elif' → logprob: -6.893481254577637
    7. '
' → logprob: -7.018481254577637
    8. '	else' → logprob: -7.518481254577637
    9. '```' → logprob: -8.143481254577637
    10. '\n' → logprob: -8.518481254577637

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679613590240479
    2. 'else' → logprob: -0.7929613590240479
    3. ' else' → logprob: -3.417961359024048
    4. 'elif' → logprob: -6.792961120605469
    5. '	else' → logprob: -7.542961120605469
    6. '```' → logprob: -8.292961120605469
    7. '<|end|>' → logprob: -11.167961120605469
    8. ' elif' → logprob: -11.292961120605469
    9. '    
' → logprob: -11.542961120605469
    10. '	elif' → logprob: -11.542961120605469

Token 56: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.010698179714381695
    2. 'elif' → logprob: -5.260698318481445
    3. ' else' → logprob: -5.260698318481445
    4. '   ' → logprob: -8.885698318481445
    5. 'return' → logprob: -9.885698318481445
    6. 'e' → logprob: -10.135698318481445
    7. '```' → logprob: -11.510698318481445
    8. '	else' → logprob: -11.635698318481445
    9. ' elif' → logprob: -12.010698318481445
    10. ' ' → logprob: -14.135698318481445

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006477446295320988
    2. ':
' → logprob: -7.37564754486084
    3. ':return' → logprob: -10.87564754486084
    4. ' :' → logprob: -13.62564754486084
    5. '   ' → logprob: -14.87564754486084
    6. ':
' → logprob: -15.00064754486084
    7. ':

' → logprob: -15.37564754486084
    8. '       ' → logprob: -16.500648498535156
    9. '<|end|>' → logprob: -17.125648498535156
    10. '```' → logprob: -17.625648498535156

Token 58: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16476857662200928
    2. '3' → logprob: -1.9147685766220093
    3. '0' → logprob: -6.164768695831299
    4. '   ' → logprob: -7.039768695831299
    5. '1' → logprob: -8.03976821899414
    6. ' ' → logprob: -8.28976821899414
    7. 'return' → logprob: -8.41476821899414
    8. ' return' → logprob: -8.41476821899414
    9. '    ' → logprob: -8.78976821899414
    10. ' 
' → logprob: -9.16476821899414

Token 59: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1005343422293663
    2. '3' → logprob: -2.350534439086914
    3. ' return' → logprob: -8.100534439086914
    4. '   ' → logprob: -11.600534439086914
    5. '2' → logprob: -12.350534439086914
    6. '1' → logprob: -12.350534439086914
    7. ' ' → logprob: -12.475534439086914
    8. '0' → logprob: -13.350534439086914
    9. '```' → logprob: -14.475534439086914
    10. '       ' → logprob: -15.600534439086914

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31327277421951294
    2. '3' → logprob: -1.3132727146148682
    3. ' ' → logprob: -12.188272476196289
    4. 'None' → logprob: -13.188272476196289
    5. ' None' → logprob: -13.563272476196289
    6. '  ' → logprob: -14.563272476196289
    7. '0' → logprob: -14.563272476196289
    8. '2' → logprob: -14.938272476196289
    9. '   ' → logprob: -15.063272476196289
    10. '1' → logprob: -15.563272476196289

Token 61: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.500015258789062
    4. '-' → logprob: -16.625015258789062
    5. '```' → logprob: -16.812515258789062
    6. '  ' → logprob: -17.000015258789062
    7. 'None' → logprob: -17.062515258789062
    8. '2' → logprob: -17.187515258789062
    9. '1' → logprob: -17.687515258789062
    10. '4' → logprob: -18.250015258789062

Token 62: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014180555939674377
    2. ' D' → logprob: -4.264180660247803
    3. ' ' → logprob: -11.639180183410645
    4. 'E' → logprob: -13.889180183410645
    5. 'Unknown' → logprob: -14.014180183410645
    6. '  ' → logprob: -14.389180183410645
    7. 'unknown' → logprob: -14.389180183410645
    8. '0' → logprob: -14.451680183410645
    9. '	D' → logprob: -14.576680183410645
    10. '`' → logprob: -14.639180183410645

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9407315850257874
    2. '\n' → logprob: -1.4407315254211426
    3. '
' → logprob: -1.6907315254211426
    4. '```' → logprob: -2.4407315254211426
    5. 'v' → logprob: -3.3157315254211426
    6. '#' → logprob: -4.190731525421143
    7. 'a' → logprob: -4.440731525421143
    8. '\' → logprob: -4.565731525421143
    9. 'x' → logprob: -5.190731525421143
    10. 'n' → logprob: -5.315731525421143

Token 67: ' sys' (ID: 12228)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.13713212311267853
    2. ' math' → logprob: -2.762132167816162
    3. ' pandas' → logprob: -3.262132167816162
    4. ' random' → logprob: -4.012132167816162
    5. ' ' → logprob: -5.637132167816162
    6. ' sklearn' → logprob: -5.887132167816162
    7. ' sys' → logprob: -7.387132167816162
    8. ' tensorflow' → logprob: -8.012131690979004
    9. ' re' → logprob: -8.262131690979004
    10. ' json' → logprob: -8.387131690979004

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19521883130073547
    2. '

' → logprob: -1.945218801498413
    3. '\n' → logprob: -3.820218801498413
    4. 'def' → logprob: -4.820219039916992
    5. '\' → logprob: -7.195219039916992
    6. '' → logprob: -7.320219039916992
    7. '```' → logprob: -7.695219039916992
    8. '
    
' → logprob: -8.070219039916992
    9. 'newline' → logprob: -8.070219039916992
    10. '
' → logprob: -8.195219039916992

Token 69: 'left' (ID: 4530)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4888104200363159
    2. 'v' → logprob: -1.488810420036316
    3. 'd' → logprob: -3.1138105392456055
    4. 'n' → logprob: -3.2388105392456055
    5. 'if' → logprob: -3.3638105392456055
    6. 'def' → logprob: -4.1138105392456055
    7. 'f' → logprob: -4.7388105392456055
    8. 'for' → logprob: -4.7388105392456055
    9. 'input' → logprob: -6.3638105392456055
    10. 'p' → logprob: -6.3638105392456055

Token 70: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6864045858383179
    2. ' =' → logprob: -1.4364045858383179
    3. '=' → logprob: -1.9364045858383179
    4. ')' → logprob: -3.3114047050476074
    5. '(' → logprob: -4.186404705047607
    6. 'over' → logprob: -4.311404705047607
    7. ',' → logprob: -4.686404705047607
    8. '.' → logprob: -5.186404705047607
    9. '[' → logprob: -5.311404705047607
    10. '_val' → logprob: -5.311404705047607

Token 71: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6650173664093018
    2. ' =' → logprob: -0.7900173664093018
    3. '=' → logprob: -3.5400173664093018
    4. ',' → logprob: -6.415017127990723
    5. ' ' → logprob: -7.915017127990723
    6. '.setdefault' → logprob: -8.540017127990723
    7. '[:]' → logprob: -8.540017127990723
    8. '['' → logprob: -9.290017127990723
    9. '[]' → logprob: -10.165017127990723
    10. ')' → logprob: -10.165017127990723

Token 72: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0731302797794342
    2. '[' → logprob: -3.0731303691864014
    3. ' {}' → logprob: -4.073130130767822
    4. ' [' → logprob: -5.198130130767822
    5. '{' → logprob: -6.823130130767822
    6. '[]' → logprob: -8.32313060760498
    7. 'default' → logprob: -9.19813060760498
    8. ' defaultdict' → logprob: -9.69813060760498
    9. ' {' → logprob: -10.19813060760498
    10. ' []' → logprob: -10.57313060760498

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -9.750060081481934
    3. ']' → logprob: -13.625060081481934
    4. ')' → logprob: -16.125059127807617
    5. '   ' → logprob: -16.500059127807617
    6. ' ]' → logprob: -16.500059127807617
    7. '  ' → logprob: -16.875059127807617
    8. '[' → logprob: -17.750059127807617
    9. '۰' → logprob: -17.875059127807617
    10. '    ' → logprob: -18.250059127807617

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01114355307072401
    2. ']' → logprob: -4.511143684387207
    3. ',
' → logprob: -10.011143684387207
    4. ' for' → logprob: -10.886143684387207
    5. ' ,' → logprob: -10.886143684387207
    6. ' ]' → logprob: -11.636143684387207
    7. ']*' → logprob: -13.636143684387207
    8. ']int' → logprob: -14.261143684387207
    9. ' ' → logprob: -14.636143684387207
    10. ')' → logprob: -14.636143684387207

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. '<|end|>' → logprob: -15.755233764648438
    4. ')' → logprob: -18.005233764648438
    5. ']' → logprob: -18.130233764648438
    6. '  ' → logprob: -18.130233764648438
    7. '۰' → logprob: -18.130233764648438
    8. '<|end|>' → logprob: -18.880233764648438
    9. '   ' → logprob: -19.067733764648438
    10. '    ' → logprob: -19.192733764648438

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -16.12501335144043
    4. ']' → logprob: -17.25001335144043
    5. ')' → logprob: -18.12501335144043
    6. '2' → logprob: -19.06251335144043
    7. '```' → logprob: -19.06251335144043
    8. '3' → logprob: -19.18751335144043
    9. '<|end|>' → logprob: -19.31251335144043
    10. '4' → logprob: -19.31251335144043

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ']' → logprob: -10.250041961669922
    3. ' ,' → logprob: -12.375041961669922
    4. ',
' → logprob: -13.500041961669922
    5. ',

' → logprob: -15.875041961669922
    6. '<|end|>' → logprob: -16.000041961669922
    7. ')' → logprob: -16.375041961669922
    8. ' ' → logprob: -16.375041961669922
    9. '```' → logprob: -16.875041961669922
    10. ' ]' → logprob: -17.500041961669922

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021860685665160418
    2. ' ' → logprob: -6.127186298370361
    3. ',' → logprob: -15.127185821533203
    4. ']' → logprob: -16.127185821533203
    5. '  ' → logprob: -16.377185821533203
    6. '<|end|>' → logprob: -16.377185821533203
    7. '   ' → logprob: -16.439685821533203
    8. ')' → logprob: -16.564685821533203
    9. '```' → logprob: -16.939685821533203
    10. '1' → logprob: -17.189685821533203

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001005630983854644
    2. ' ' → logprob: -10.250100135803223
    3. '1' → logprob: -10.375100135803223
    4. '3' → logprob: -11.437600135803223
    5. '4' → logprob: -11.937600135803223
    6. '2' → logprob: -12.750100135803223
    7. '```' → logprob: -13.562600135803223
    8. '10' → logprob: -13.625100135803223
    9. ']' → logprob: -13.625100135803223
    10. '5' → logprob: -13.750100135803223

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04305719956755638
    2. ']' → logprob: -3.1680572032928467
    3. ' ]' → logprob: -10.168057441711426
    4. ' ,' → logprob: -11.668057441711426
    5. ',
' → logprob: -11.918057441711426
    6. ')' → logprob: -13.418057441711426
    7. ']
' → logprob: -14.418057441711426
    8. '```' → logprob: -15.168057441711426
    9. '<|end|>' → logprob: -15.543057441711426
    10. ' ' → logprob: -15.668057441711426

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009172935388050973
    2. ' ' → logprob: -7.000917434692383
    3. ']' → logprob: -12.125917434692383
    4. ')' → logprob: -16.000917434692383
    5. '4' → logprob: -16.875917434692383
    6. ' ]' → logprob: -17.125917434692383
    7. '   ' → logprob: -17.250917434692383
    8. '  ' → logprob: -17.375917434692383
    9. '```' → logprob: -17.375917434692383
    10. '3' → logprob: -18.188417434692383

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. ']' → logprob: -14.375007629394531
    4. ')' → logprob: -15.125007629394531
    5. '1' → logprob: -17.12500762939453
    6. '<|end|>' → logprob: -17.37500762939453
    7. '۰' → logprob: -17.62500762939453
    8. '```' → logprob: -17.62500762939453
    9. '2' → logprob: -17.87500762939453
    10. '   ' → logprob: -18.18750762939453

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003469057264737785
    2. ' ]' → logprob: -8.500347137451172
    3. ']
' → logprob: -8.875347137451172
    4. ']

' → logprob: -13.750347137451172
    5. ']
' → logprob: -13.875347137451172
    6. ')' → logprob: -14.375347137451172
    7. ',' → logprob: -14.875347137451172
    8. ' ]
' → logprob: -16.125347137451172
    9. '']' → logprob: -16.125347137451172
    10. '
' → logprob: -16.500347137451172

Token 84: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0072362590581178665
    2. 'for' → logprob: -5.007236480712891
    3. ' right' → logprob: -9.13223648071289
    4. 'with' → logprob: -9.38223648071289
    5. 'left' → logprob: -10.13223648071289
    6. 'line' → logprob: -10.25723648071289
    7. 'rig' → logprob: -10.25723648071289
    8. 'total' → logprob: -10.38223648071289
    9. '
' → logprob: -10.63223648071289
    10. 'try' → logprob: -11.00723648071289

Token 85: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.04335278272628784
    2. '_' → logprob: -3.1683528423309326
    3. '_s' → logprob: -9.418353080749512
    4. '```' → logprob: -9.793353080749512
    5. ' _' → logprob: -10.293353080749512
    6. '_scores' → logprob: -10.418353080749512
    7. '_c' → logprob: -10.543353080749512
    8. '__' → logprob: -11.418353080749512
    9. ')_' → logprob: -11.543353080749512
    10. '_codes' → logprob: -12.293353080749512

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00164435722399503
    2. '=' → logprob: -6.501644134521484
    3. '[' → logprob: -9.001644134521484
    4. ' =[' → logprob: -11.501644134521484
    5. ' ' → logprob: -12.001644134521484
    6. ')' → logprob: -14.626644134521484
    7. '<|end|>' → logprob: -14.751644134521484
    8. ']' → logprob: -15.126644134521484
    9. ' [' → logprob: -15.126644134521484
    10. '[:]' → logprob: -15.126644134521484

Token 87: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3868728280067444
    2. ' [' → logprob: -1.1368727684020996
    3. ' ' → logprob: -13.511873245239258
    4. '[]' → logprob: -16.636873245239258
    5. '   ' → logprob: -16.761873245239258
    6. '[left' → logprob: -16.761873245239258
    7. '[
' → logprob: -16.886873245239258
    8. ' ' → logprob: -17.011873245239258
    9. '```' → logprob: -17.511873245239258
    10. '  ' → logprob: -17.511873245239258

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.12504005432129
    4. '   ' → logprob: -17.00004005432129
    5. '  ' → logprob: -17.00004005432129
    6. ']' → logprob: -17.00004005432129
    7. ')' → logprob: -17.37504005432129
    8. '[' → logprob: -17.68754005432129
    9. '
' → logprob: -18.12504005432129
    10. ',' → logprob: -18.62504005432129

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ' ,' → logprob: -10.50003719329834
    3. ' ' → logprob: -12.50003719329834
    4. '0' → logprob: -12.50003719329834
    5. ')' → logprob: -14.62503719329834
    6. '<|end|>' → logprob: -14.62503719329834
    7. '[' → logprob: -15.37503719329834
    8. '```' → logprob: -15.75003719329834
    9. ',
' → logprob: -16.125036239624023
    10. ']' → logprob: -16.125036239624023

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600901924073696
    2. ' ' → logprob: -5.62860107421875
    3. '  ' → logprob: -15.81610107421875
    4. '```' → logprob: -15.94110107421875
    5. ')' → logprob: -16.00360107421875
    6. ']' → logprob: -16.31610107421875
    7. '[' → logprob: -16.56610107421875
    8. ',' → logprob: -16.94110107421875
    9. '   ' → logprob: -17.12860107421875
    10. '۰' → logprob: -17.31610107421875

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. ',' → logprob: -16.750123977661133
    4. '  ' → logprob: -17.187623977661133
    5. '```' → logprob: -17.187623977661133
    6. ']' → logprob: -17.687623977661133
    7. ')' → logprob: -17.812623977661133
    8. '   ' → logprob: -18.000123977661133
    9. '۰' → logprob: -18.250123977661133
    10. '4' → logprob: -18.312623977661133

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.313314952421933e-05
    2. ' ,' → logprob: -9.750062942504883
    3. ' ' → logprob: -12.625062942504883
    4. '0' → logprob: -14.250062942504883
    5. '4' → logprob: -14.375062942504883
    6. '1' → logprob: -16.250062942504883
    7. '<|end|>' → logprob: -16.250062942504883
    8. '3' → logprob: -17.000062942504883
    9. ')' → logprob: -17.500062942504883
    10. '[' → logprob: -17.812562942504883

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '4' → logprob: -15.251171112060547
    4. '```' → logprob: -16.126171112060547
    5. '<|end|>' → logprob: -16.188671112060547
    6. '  ' → logprob: -16.813671112060547
    7. '3' → logprob: -16.813671112060547
    8. '1' → logprob: -17.063671112060547
    9. '   ' → logprob: -17.751171112060547
    10. ',' → logprob: -18.001171112060547

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.375021934509277
    4. '1' → logprob: -17.50002098083496
    5. '```' → logprob: -17.50002098083496
    6. '4' → logprob: -17.87502098083496
    7. ',' → logprob: -18.12502098083496
    8. '۰' → logprob: -18.18752098083496
    9. '<|end|>' → logprob: -18.37502098083496
    10. '

' → logprob: -18.62502098083496

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ' ,' → logprob: -11.250020980834961
    3. '4' → logprob: -12.250020980834961
    4. '0' → logprob: -14.125020980834961
    5. ']' → logprob: -14.125020980834961
    6. ' ' → logprob: -14.125020980834961
    7. '3' → logprob: -14.375020980834961
    8. ')' → logprob: -15.375020980834961
    9. '])' → logprob: -18.12502098083496
    10. '1' → logprob: -18.37502098083496

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '4' → logprob: -16.875335693359375
    4. '   ' → logprob: -16.875335693359375
    5. '<|end|>' → logprob: -17.250335693359375
    6. '```' → logprob: -17.500335693359375
    7. ')' → logprob: -17.625335693359375
    8. '  ' → logprob: -17.687835693359375
    9. ']' → logprob: -18.625335693359375
    10. '[' → logprob: -18.750335693359375

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -16.12504005432129
    4. '4' → logprob: -16.37504005432129
    5. ')' → logprob: -17.12504005432129
    6. ']' → logprob: -17.31254005432129
    7. '   ' → logprob: -17.43754005432129
    8. '۰' → logprob: -17.43754005432129
    9. '3' → logprob: -18.18754005432129
    10. '04' → logprob: -18.37504005432129

Token 98: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018331967294216156
    2. ')' → logprob: -4.018332004547119
    3. ']
' → logprob: -8.768331527709961
    4. ']

' → logprob: -11.768331527709961
    5. '}' → logprob: -12.143331527709961
    6. ' ]' → logprob: -12.143331527709961
    7. ')
' → logprob: -12.393331527709961
    8. '
' → logprob: -13.768331527709961
    9. '```' → logprob: -13.893331527709961
    10. '）' → logprob: -14.893331527709961

Token 99: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013929695705883205
    2. ' for' → logprob: -9.125139236450195
    3. 'with' → logprob: -11.125139236450195
    4. 'while' → logprob: -12.000139236450195
    5. 'line' → logprob: -12.125139236450195
    6. 'n' → logprob: -13.625139236450195
    7. 'import' → logprob: -13.750139236450195
    8. 'data' → logprob: -15.125139236450195
    9. 'try' → logprob: -15.250139236450195
    10. 'def' → logprob: -15.500139236450195

Token 100: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.003375672735273838
    2. 'line' → logprob: -6.37837553024292
    3. ' arg' → logprob: -7.00337553024292
    4. ' i' → logprob: -7.87837553024292
    5. ' ' → logprob: -9.253376007080078
    6. ' word' → logprob: -9.503376007080078
    7. ' _' → logprob: -10.128376007080078
    8. ' token' → logprob: -10.253376007080078
    9. ' s' → logprob: -10.753376007080078
    10. ' filename' → logprob: -10.753376007080078

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017826911062002182
    2. 'in' → logprob: -4.267827033996582
    3. ' ' → logprob: -6.142827033996582
    4. '<|end|>' → logprob: -7.517827033996582
    5. ' =' → logprob: -8.142827033996582
    6. ',' → logprob: -9.767827033996582
    7. '[' → logprob: -9.767827033996582
    8. '<|end|>' → logprob: -9.892827033996582
    9. '(' → logprob: -10.142827033996582
    10. '  ' → logprob: -10.142827033996582

Token 102: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.007621064782142639
    2. 'sys' → logprob: -4.8826212882995605
    3. '	sys' → logprob: -11.757620811462402
    4. '=sys' → logprob: -12.132620811462402
    5. '(sys' → logprob: -13.382620811462402
    6. ' iter' → logprob: -16.63262176513672
    7. ' ' → logprob: -17.38262176513672
    8. 'stdin' → logprob: -17.63262176513672
    9. '_sys' → logprob: -17.75762176513672
    10. '```' → logprob: -18.38262176513672

Token 103: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.049755782238208e-05
    2. '.' → logprob: -10.62505054473877
    3. 'stdin' → logprob: -11.12505054473877
    4. '.argv' → logprob: -12.75005054473877
    5. '.readline' → logprob: -12.87505054473877
    6. ' .' → logprob: -13.00005054473877
    7. ' stdin' → logprob: -13.87505054473877
    8. '.stdout' → logprob: -14.00005054473877
    9. 'import' → logprob: -14.62505054473877
    10. '.readlines' → logprob: -14.87505054473877

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21172727644443512
    2. '.strip' → logprob: -2.3367273807525635
    3. '.readline' → logprob: -2.5867273807525635
    4. '.rstrip' → logprob: -4.586727142333984
    5. '.' → logprob: -5.461727142333984
    6. '.readlines' → logprob: -6.086727142333984
    7. '.split' → logprob: -6.586727142333984
    8. 'rstrip' → logprob: -8.086727142333984
    9. ':
' → logprob: -8.836727142333984
    10. 'strip' → logprob: -9.586727142333984

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015514736878685653
    2. '    
' → logprob: -9.500155448913574
    3. ' line' → logprob: -10.000155448913574
    4. ' tokens' → logprob: -11.500155448913574
    5. ' if' → logprob: -11.875155448913574
    6. ' readline' → logprob: -12.500155448913574
    7. 'tokens' → logprob: -13.000155448913574
    8. '<|end|>' → logprob: -13.750155448913574
    9. '```' → logprob: -13.875155448913574
    10. ' parts' → logprob: -13.875155448913574

Token 106: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7187283039093018
    2. ' line' → logprob: -1.5937283039093018
    3. ' value' → logprob: -2.4687283039093018
    4. ' parts' → logprob: -2.5937283039093018
    5. ' values' → logprob: -2.8437283039093018
    6. ' v' → logprob: -3.4687283039093018
    7. ' if' → logprob: -3.9687283039093018
    8. ' val' → logprob: -4.843728065490723
    9. ' fields' → logprob: -4.968728065490723
    10. ' tokens' → logprob: -5.218728065490723

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2534070611000061
    2. ' =' → logprob: -1.5034070014953613
    3. '.strip' → logprob: -6.753407001495361
    4. '.rstrip' → logprob: -9.12840747833252
    5. '=line' → logprob: -9.37840747833252
    6. '.' → logprob: -9.50340747833252
    7. 'rstrip' → logprob: -11.50340747833252
    8. '_strip' → logprob: -11.75340747833252
    9. 'strip' → logprob: -12.00340747833252
    10. 'split' → logprob: -12.25340747833252

Token 108: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868727385997772
    2. 'line' → logprob: -1.1368727684020996
    3. '	line' → logprob: -13.761872291564941
    4. '=line' → logprob: -14.636872291564941
    5. '(line' → logprob: -16.386873245239258
    6. ' ' → logprob: -16.386873245239258
    7. '#line' → logprob: -16.511873245239258
    8. '[line' → logprob: -18.011873245239258
    9. '   ' → logprob: -18.511873245239258
    10. 'lin' → logprob: -18.761873245239258

Token 109: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.016087748110294342
    2. '.' → logprob: -4.266087532043457
    3. '.rstrip' → logprob: -6.266087532043457
    4. 'strip' → logprob: -11.266087532043457
    5. ' .' → logprob: -11.766087532043457
    6. ' strip' → logprob: -13.891087532043457
    7. 'rstrip' → logprob: -14.641087532043457
    8. '.split' → logprob: -14.891087532043457
    9. '.trim' → logprob: -15.516087532043457
    10. '.chomp' → logprob: -16.141088485717773

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0564331205387134e-05
    2. '().' → logprob: -12.62501049041748
    3. '(' → logprob: -12.75001049041748
    4. '()`' → logprob: -14.00001049041748
    5. '()
' → logprob: -14.62501049041748
    6. ' ()' → logprob: -14.75001049041748
    7. '())' → logprob: -14.87501049041748
    8. '()\' → logprob: -15.25001049041748
    9. '()

' → logprob: -15.25001049041748
    10. '()"' → logprob: -15.25001049041748

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02294214442372322
    2. ' if' → logprob: -4.397942066192627
    3. 'if' → logprob: -5.022942066192627
    4. '    
' → logprob: -5.897942066192627
    5. ',' → logprob: -7.772942066192627
    6. 'tokens' → logprob: -8.897942543029785
    7. '    ' → logprob: -9.022942543029785
    8. '
' → logprob: -9.147942543029785
    9. '<|end|>' → logprob: -9.397942543029785
    10. '   
' → logprob: -10.647942543029785

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004688692279160023
    2. 'values' → logprob: -6.004688739776611
    3. ' if' → logprob: -6.629688739776611
    4. 'parts' → logprob: -7.629688739776611
    5. '   ' → logprob: -9.129688262939453
    6. 'vals' → logprob: -9.129688262939453
    7. 'tokens' → logprob: -9.754688262939453
    8. 'left' → logprob: -10.004688262939453
    9. 'fields' → logprob: -10.379688262939453
    10. '    
' → logprob: -11.629688262939453

Token 113: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03358299657702446
    2. ' line' → logprob: -3.908582925796509
    3. 'not' → logprob: -4.408583164215088
    4. 'line' → logprob: -7.283583164215088
    5. ' len' → logprob: -10.15858268737793
    6. ' ' → logprob: -10.28358268737793
    7. 'len' → logprob: -11.78358268737793
    8. '   ' → logprob: -12.90858268737793
    9. 'n't' → logprob: -12.90858268737793
    10. '	not' → logprob: -12.90858268737793

Token 114: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20141403377056122
    2. 'line' → logprob: -1.7014139890670776
    3. ' ' → logprob: -14.951414108276367
    4. '	line' → logprob: -15.076414108276367
    5. '(line' → logprob: -16.826414108276367
    6. '#line' → logprob: -17.201414108276367
    7. '   ' → logprob: -18.951414108276367
    8. 'Line' → logprob: -19.201414108276367
    9. '[line' → logprob: -19.201414108276367
    10. '```' → logprob: -19.326414108276367

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2002304196357727
    2. ' or' → logprob: -2.325230360031128
    3. ':
' → logprob: -3.200230360031128
    4. '<|end|>' → logprob: -3.575230360031128
    5. '.startswith' → logprob: -4.575230598449707
    6. '<|end|>' → logprob: -6.200230598449707
    7. '   ' → logprob: -6.825230598449707
    8. '.split' → logprob: -8.325230598449707
    9. ' :' → logprob: -8.450230598449707
    10. ':return' → logprob: -8.575230598449707

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009348054882138968
    2. ':' → logprob: -7.750934600830078
    3. ' continue' → logprob: -8.250934600830078
    4. '   ' → logprob: -8.750934600830078
    5. ':
' → logprob: -10.375934600830078
    6. 'continue' → logprob: -11.250934600830078
    7. '
' → logprob: -12.000934600830078
    8. ' continues' → logprob: -12.125934600830078
    9. ',' → logprob: -12.375934600830078
    10. '	continue' → logprob: -12.625934600830078

Token 117: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9932977557182312
    2. ' continue' → logprob: -1.493297815322876
    3. ' break' → logprob: -1.618297815322876
    4. '       ' → logprob: -2.243297815322876
    5. 'continue' (adapté à ' continue') → logprob: -2.493297815322876
    6. 'break' → logprob: -4.118297576904297
    7. '
' → logprob: -6.743297576904297
    8. '	continue' → logprob: -8.743297576904297
    9. '	break' → logprob: -8.868297576904297
    10. '           ' → logprob: -9.118297576904297

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07722214609384537
    2. '    
' → logprob: -3.2022221088409424
    3. '
' → logprob: -3.4522221088409424
    4. '<|end|>' → logprob: -6.4522223472595215
    5. '  
' → logprob: -8.702221870422363
    6. '<|end|>' → logprob: -9.202221870422363
    7. '   
' → logprob: -10.327221870422363
    8. '        
' → logprob: -10.577221870422363
    9. ' 
' → logprob: -11.202221870422363
    10. '
' → logprob: -11.452221870422363

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04547196254134178
    2. '    
' → logprob: -3.1704719066619873
    3. '
' → logprob: -6.045472145080566
    4. 'tokens' → logprob: -10.420472145080566
    5. '  
' → logprob: -10.545472145080566
    6. '   
' → logprob: -10.920472145080566
    7. '        
' → logprob: -12.045472145080566
    8. '<|end|>' → logprob: -12.545472145080566
    9. '    
' → logprob: -12.795472145080566
    10. '    

' → logprob: -12.920472145080566

Token 120: ' l' (ID: 305)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.9183288812637329
    2. ' parts' → logprob: -1.293328881263733
    3. 'left' → logprob: -2.2933287620544434
    4. 'values' → logprob: -2.6683287620544434
    5. 'fields' → logprob: -3.6683287620544434
    6. ' left' → logprob: -4.168328762054443
    7. 'v' → logprob: -4.293328762054443
    8. '   ' → logprob: -4.418328762054443
    9. 'vals' → logprob: -4.543328762054443
    10. 'value' → logprob: -4.543328762054443

Token 121: ',' (ID: 11)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.035725463181734085
    2. ',' → logprob: -4.0357255935668945
    3. '_' → logprob: -4.9107255935668945
    4. 'ef' → logprob: -6.2857255935668945
    5. 'e' → logprob: -6.4107255935668945
    6. '_value' → logprob: -6.6607255935668945
    7. '_e' → logprob: -6.9107255935668945
    8. '_vals' → logprob: -7.0357255935668945
    9. '_val' → logprob: -7.5357255935668945
    10. '_,' → logprob: -7.5357255935668945

Token 122: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04868638142943382
    2. ' r' → logprob: -3.0486862659454346
    3. 'v' → logprob: -10.423686027526855
    4. 'w' → logprob: -10.673686027526855
    5. 's' → logprob: -10.798686027526855
    6. 'value' → logprob: -12.923686027526855
    7. ' v' → logprob: -12.923686027526855
    8. 'val' → logprob: -13.173686027526855
    9. ' ' → logprob: -13.298686027526855
    10. 'score' → logprob: -13.298686027526855

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3139355778694153
    2. '=' → logprob: -1.3139355182647705
    3. ',' → logprob: -7.31393575668335
    4. ' ' → logprob: -13.438935279846191
    5. '.' → logprob: -14.063935279846191
    6. ')' → logprob: -14.188935279846191
    7. '_' → logprob: -14.188935279846191
    8. ' =
' → logprob: -14.438935279846191
    9. '=line' → logprob: -14.438935279846191
    10. ' ,' → logprob: -14.688935279846191

Token 124: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3289227783679962
    2. 'line' → logprob: -1.4539227485656738
    3. ' map' → logprob: -3.453922748565674
    4. 'map' → logprob: -4.203922748565674
    5. '[line' → logprob: -9.703923225402832
    6. '(line' → logprob: -11.578923225402832
    7. ' [' → logprob: -12.078923225402832
    8. ' ' → logprob: -12.203923225402832
    9. '	line' → logprob: -12.703923225402832
    10. '   ' → logprob: -13.078923225402832

Token 125: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.002629161812365055
    2. '(' → logprob: -6.502629280090332
    3. '(str' → logprob: -6.877629280090332
    4. '(int' → logprob: -10.002629280090332
    5. 'float' → logprob: -10.377629280090332
    6. '(lambda' → logprob: -11.252629280090332
    7. '(eval' → logprob: -12.877629280090332
    8. ' float' → logprob: -14.127629280090332
    9. ',float' → logprob: -14.127629280090332
    10. '<float' → logprob: -14.127629280090332

Token 126: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.6385741829872131
    2. ',line' → logprob: -1.1385741233825684
    3. ',' → logprob: -1.8885741233825684
    4. ' line' → logprob: -8.638574600219727
    5. '=line' → logprob: -9.763574600219727
    6. ')' → logprob: -10.013574600219727
    7. ' ,' → logprob: -10.138574600219727
    8. '#line' → logprob: -11.013574600219727
    9. '[line' → logprob: -11.013574600219727
    10. 'line' → logprob: -11.263574600219727

Token 127: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07889506965875626
    2. 'line' → logprob: -2.578895092010498
    3. '(line' → logprob: -12.95389461517334
    4. '	line' → logprob: -13.45389461517334
    5. '[line' → logprob: -14.32889461517334
    6. ')' → logprob: -14.95389461517334
    7. '=line' → logprob: -15.45389461517334
    8. '   ' → logprob: -15.82889461517334
    9. ' ' → logprob: -16.203895568847656
    10. '#line' → logprob: -16.578895568847656

Token 128: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10944656282663345
    2. '.split' → logprob: -2.3594465255737305
    3. '.' → logprob: -5.2344465255737305
    4. '.strip' → logprob: -5.6094465255737305
    5. ' .' → logprob: -8.60944652557373
    6. '.rstrip' → logprob: -11.73444652557373
    7. ')' → logprob: -11.98444652557373
    8. '()' → logprob: -13.23444652557373
    9. '.Split' → logprob: -13.35944652557373
    10. 'split' → logprob: -13.60944652557373

Token 129: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011251884512603283
    2. '()' → logprob: -4.511251926422119
    3. '('' → logprob: -9.011251449584961
    4. '(','' → logprob: -10.511251449584961
    5. '(' → logprob: -11.011251449584961
    6. '())
' → logprob: -11.261251449584961
    7. '()))' → logprob: -11.386251449584961
    8. ' ())' → logprob: -12.386251449584961
    9. '('\' → logprob: -13.261251449584961
    10. '()
' → logprob: -13.386251449584961

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08384262025356293
    2. '   ' → logprob: -2.7088425159454346
    3. 'left' → logprob: -4.708842754364014
    4. '    
' → logprob: -5.583842754364014
    5. ' left' → logprob: -8.208842277526855
    6. '[left' → logprob: -8.583842277526855
    7. '

' → logprob: -8.958842277526855
    8. '
' → logprob: -9.083842277526855
    9. '  
' → logprob: -9.208842277526855
    10. '   
' → logprob: -9.583842277526855

Token 131: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.34184280037879944
    2. 'left' (adapté à ' left') → logprob: -1.341842770576477
    3. 'l' → logprob: -4.5918426513671875
    4. ' lc' → logprob: -4.7168426513671875
    5. ' l' → logprob: -5.3418426513671875
    6. 'lc' → logprob: -6.0918426513671875
    7. '
' → logprob: -7.9668426513671875
    8. 'cl' → logprob: -8.091842651367188
    9. '   ' → logprob: -8.841842651367188
    10. ' cl' → logprob: -8.841842651367188

Token 132: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.5306270718574524
    2. '_class' → logprob: -1.0306270122528076
    3. '_category' → logprob: -3.9056270122528076
    4. '_type' → logprob: -4.905627250671387
    5. '_idx' → logprob: -4.905627250671387
    6. '_val' → logprob: -5.155627250671387
    7. '_index' → logprob: -5.405627250671387
    8. '_' → logprob: -5.405627250671387
    9. '_cat' → logprob: -5.905627250671387
    10. '_cls' → logprob: -7.405627250671387

Token 133: '[class' (ID: 132691)
  Prédit: '[class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[class' → logprob: -0.0011746286181733012
    2. '[' → logprob: -6.751174449920654
    3. ' [' → logprob: -13.626174926757812
    4. 'class' → logprob: -13.626174926757812
    5. '[
' → logprob: -14.251174926757812
    6. '[count' → logprob: -14.626174926757812
    7. '[c' → logprob: -15.501174926757812
    8. '<class' → logprob: -15.626174926757812
    9. '

' → logprob: -16.751174926757812
    10. '\[' → logprob: -17.001174926757812

Token 134: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -6.704273118884885e-07
    2. 'if' → logprob: -14.875000953674316
    3. '```' → logprob: -16.625
    4. '(' → logprob: -16.875
    5. 'IFY' → logprob: -17.125
    6. '(class' → logprob: -17.875
    7. 'fy' → logprob: -18.125
    8. 'ize' → logprob: -18.25
    9. '(left' → logprob: -18.25
    10. 'i' → logprob: -18.625

Token 135: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0003944496565964073
    2. '(' → logprob: -8.000394821166992
    3. '(left' → logprob: -10.375394821166992
    4. '(r' → logprob: -10.750394821166992
    5. ' (' → logprob: -12.875394821166992
    6. '(v' → logprob: -13.250394821166992
    7. '](' → logprob: -13.875394821166992
    8. ')(' → logprob: -14.875394821166992
    9. ')' → logprob: -15.250394821166992
    10. '(
' → logprob: -15.375394821166992

Token 136: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.088138227118179e-05
    2. ')' → logprob: -9.875070571899414
    3. ' )' → logprob: -11.750070571899414
    4. ']' → logprob: -12.375070571899414
    5. '   ' → logprob: -12.500070571899414
    6. ')])' → logprob: -14.375070571899414
    7. ')]
' → logprob: -14.875070571899414
    8. '')]' → logprob: -15.000070571899414
    9. ')].' → logprob: -15.250070571899414
    10. '    ' → logprob: -15.250070571899414

Token 137: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3140566051006317
    2. '+=' → logprob: -1.314056634902954
    3. '[' → logprob: -7.439056396484375
    4. ']+=' → logprob: -8.814056396484375
    5. '+' → logprob: -9.939056396484375
    6. ' ' → logprob: -13.064056396484375
    7. '   ' → logprob: -13.189056396484375
    8. '```' → logprob: -13.439056396484375
    9. ']' → logprob: -13.814056396484375
    10. '+='' → logprob: -14.314056396484375

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.250709533691406
    4. '0' → logprob: -19.000709533691406
    5. '  ' → logprob: -19.063209533691406
    6. '```' → logprob: -19.125709533691406
    7. '
' → logprob: -19.313209533691406
    8. ' ' → logprob: -20.563209533691406
    9. '`' → logprob: -20.625709533691406
    10. ')' → logprob: -20.625709533691406

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '```' → logprob: -20.000001907348633
    5. 'right' → logprob: -20.500001907348633
    6. '0' → logprob: -20.750001907348633
    7. '`' → logprob: -20.750001907348633
    8. '
' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '+' → logprob: -21.812501907348633

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09008796513080597
    2. 'right' → logprob: -2.965087890625
    3. '   ' → logprob: -3.965087890625
    4. ' right' → logprob: -5.090087890625
    5. '    
' → logprob: -5.090087890625
    6. ' 
' → logprob: -7.090087890625
    7. '  
' → logprob: -7.340087890625
    8. '[right' → logprob: -7.340087890625
    9. '   
' → logprob: -8.465087890625
    10. '<|end|>' → logprob: -8.715087890625

Token 141: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.004217659123241901
    2. '
' → logprob: -5.879217624664307
    3. ' right' → logprob: -6.629217624664307
    4. '   ' → logprob: -10.004218101501465
    5. '[right' → logprob: -10.879218101501465
    6. '    
' → logprob: -11.379218101501465
    7. ',right' → logprob: -12.754218101501465
    8. ' 
' → logprob: -12.879218101501465
    9. '(right' → logprob: -13.004218101501465
    10. '	right' → logprob: -13.754218101501465

Token 142: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0019291093340143561
    2. ' right' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.00192928314209
    4. 'r' → logprob: -17.001928329467773
    5. '	right' → logprob: -17.626928329467773
    6. 'left' → logprob: -17.751928329467773
    7. ' ' → logprob: -17.876928329467773
    8. 'Right' → logprob: -17.876928329467773
    9. 'rights' → logprob: -19.126928329467773
    10. '[right' → logprob: -19.251928329467773

Token 143: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.3306015716807451e-05
    2. '_' → logprob: -12.62501335144043
    3. ')_' → logprob: -12.75001335144043
    4. ']_' → logprob: -13.37501335144043
    5. '```' → logprob: -13.75001335144043
    6. ' _' → logprob: -14.00001335144043
    7. '_c' → logprob: -14.50001335144043
    8. ''_' → logprob: -14.50001335144043
    9. '"_' → logprob: -14.75001335144043
    10. '[_' → logprob: -14.87501335144043

Token 144: '[class' (ID: 132691)
  Prédit: '[class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[class' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.00000286102295
    3. '<class' → logprob: -15.00000286102295
    4. ' [' → logprob: -16.625001907348633
    5. '(class' → logprob: -18.125001907348633
    6. '```' → logprob: -18.250001907348633
    7. '[c' → logprob: -19.250001907348633
    8. '@class' → logprob: -19.625001907348633
    9. '[
' → logprob: -19.750001907348633
    10. '[count' → logprob: -19.750001907348633

Token 145: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -8.721228368813172e-05
    2. 'fy' → logprob: -9.625086784362793
    3. '(r' → logprob: -11.500086784362793
    4. 'class' → logprob: -12.250086784362793
    5. '```' → logprob: -14.250086784362793
    6. 'y' → logprob: -14.500086784362793
    7. 'ize' → logprob: -14.625086784362793
    8. 'if' → logprob: -14.625086784362793
    9. '(class' → logprob: -14.750086784362793
    10. 'ity' → logprob: -14.750086784362793

Token 146: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -14.50000286102295
    4. ')(' → logprob: -15.87500286102295
    5. ')' → logprob: -17.500003814697266
    6. '(right' → logprob: -18.750003814697266
    7. '(s' → logprob: -19.250003814697266
    8. '](' → logprob: -20.250003814697266
    9. 'r' → logprob: -20.375003814697266
    10. '(rhs' → logprob: -20.375003814697266

Token 147: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -14.00000286102295
    3. ']' → logprob: -14.25000286102295
    4. ' )' → logprob: -14.25000286102295
    5. ')]
' → logprob: -16.500001907348633
    6. '")]' → logprob: -16.625001907348633
    7. '')]' → logprob: -16.750001907348633
    8. '])' → logprob: -16.875001907348633
    9. ')])' → logprob: -16.875001907348633
    10. '])]' → logprob: -17.375001907348633

Token 148: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07062947750091553
    2. ' +=' → logprob: -2.695629596710205
    3. ']+=' → logprob: -7.695629596710205
    4. '+' → logprob: -8.695629119873047
    5. '[' → logprob: -10.195629119873047
    6. '   ' → logprob: -11.820629119873047
    7. ' ' → logprob: -11.820629119873047
    8. '  ' → logprob: -12.070629119873047
    9. '```' → logprob: -12.445629119873047
    10. '+='' → logprob: -12.945629119873047

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.002185821533203
    4. '  ' → logprob: -17.002185821533203
    5. '```' → logprob: -17.627185821533203
    6. ')' → logprob: -17.939685821533203
    7. '(' → logprob: -18.002185821533203
    8. '0' → logprob: -18.439685821533203
    9. '<|end|>' → logprob: -19.002185821533203
    10. '１' → logprob: -19.252185821533203

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'r' → logprob: -17.43751335144043
    4. '```' → logprob: -17.68751335144043
    5. ')' → logprob: -18.06251335144043
    6. '   ' → logprob: -18.31251335144043
    7. '0' → logprob: -18.31251335144043
    8. '  ' → logprob: -19.31251335144043
    9. '`' → logprob: -19.56251335144043
    10. '１' → logprob: -19.62501335144043

Token 151: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4846248626708984
    2. 'import' → logprob: -1.6096248626708984
    3. 'chi' → logprob: -1.8596248626708984
    4. '
' → logprob: -2.2346248626708984
    5. 'print' → logprob: -2.2346248626708984
    6. 'for' → logprob: -2.3596248626708984
    7. 'total' → logprob: -3.1096248626708984
    8. '#' → logprob: -3.8596248626708984
    9. 'if' → logprob: -4.734624862670898
    10. '<|end|>' → logprob: -5.109624862670898

Token 152: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6398634314537048
    2. 'print' → logprob: -1.3898634910583496
    3. 'total' → logprob: -1.5148634910583496
    4. 'import' → logprob: -6.63986349105835
    5. '#' → logprob: -7.63986349105835
    6. 'left' → logprob: -8.139863014221191
    7. 'result' → logprob: -8.264863014221191
    8. 'if' → logprob: -8.389863014221191
    9. 'tot' → logprob: -8.389863014221191
    10. 'from' → logprob: -8.514863014221191

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1608363389968872
    2. 'i' → logprob: -1.9108363389968872
    3. ' c' → logprob: -7.785836219787598
    4. ' category' → logprob: -9.660836219787598
    5. 'c' → logprob: -9.785836219787598
    6. ' cls' → logprob: -11.160836219787598
    7. ' idx' → logprob: -11.160836219787598
    8. ' ' → logprob: -11.285836219787598
    9. 'category' → logprob: -11.660836219787598
    10. ' label' → logprob: -12.160836219787598

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007683992851525545
    2. 'in' → logprob: -4.882684230804443
    3. ' ' → logprob: -10.007683753967285
    4. ',' → logprob: -10.382683753967285
    5. '	in' → logprob: -14.757683753967285
    6. ' ,' → logprob: -14.882683753967285
    7. 'range' → logprob: -15.132683753967285
    8. '  ' → logprob: -15.257683753967285
    9. ' i' → logprob: -15.507683753967285
    10. '.' → logprob: -16.7576847076416

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326326727867126
    2. ' range' → logprob: -1.3132632970809937
    3. '(range' → logprob: -14.813262939453125
    4. '	range' → logprob: -14.813262939453125
    5. ' ' → logprob: -15.188262939453125
    6. ' xrange' → logprob: -15.563262939453125
    7. '[' → logprob: -15.688262939453125
    8. '   ' → logprob: -16.938262939453125
    9. '```' → logprob: -17.313262939453125
    10. 'rang' → logprob: -17.813262939453125

Token 156: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016325322212651372
    2. '(len' → logprob: -8.750163078308105
    3. '4' → logprob: -12.375163078308105
    4. ' (' → logprob: -15.375163078308105
    5. '(
' → logprob: -15.500163078308105
    6. 'len' → logprob: -16.625164031982422
    7. '<|end|>' → logprob: -18.625164031982422
    8. ' ' → logprob: -18.875164031982422
    9. ' len' → logprob: -19.625164031982422
    10. '(length' → logprob: -19.750164031982422

Token 157: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.750041007995605
    3. 'len' → logprob: -10.875041007995605
    4. ' len' → logprob: -15.750041007995605
    5. '0' → logprob: -16.00004005432129
    6. '   ' → logprob: -16.50004005432129
    7. '```' → logprob: -16.87504005432129
    8. ')' → logprob: -17.25004005432129
    9. '3' → logprob: -18.18754005432129
    10. '1' → logprob: -18.37504005432129

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012791648041456938
    2. ':' → logprob: -7.001279354095459
    3. '):
' → logprob: -8.8762788772583
    4. ')' → logprob: -8.8762788772583
    5. ' ):' → logprob: -9.3762788772583
    6. ']:' → logprob: -13.2512788772583
    7. '}:' → logprob: -14.7512788772583
    8. ',' → logprob: -14.8762788772583
    9. ' :' → logprob: -15.7512788772583
    10. '+' → logprob: -15.8762788772583

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10517634451389313
    2. ':' → logprob: -2.3551764488220215
    3. ' print' → logprob: -5.9801764488220215
    4. 'print' → logprob: -6.2301764488220215
    5. ':
' → logprob: -8.730175971984863
    6. '	print' → logprob: -8.980175971984863
    7. '    
' → logprob: -10.355175971984863
    8. '):' → logprob: -10.605175971984863
    9. '```' → logprob: -10.730175971984863
    10. ' ' → logprob: -10.980175971984863

Token 160: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1836230605840683
    2. 'print' (adapté à ' print') → logprob: -2.3086230754852295
    3. '   ' → logprob: -2.6836230754852295
    4. '	print' → logprob: -10.808623313903809
    5. '```' → logprob: -11.808623313903809
    6. '.print' → logprob: -12.808623313903809
    7. '    
' → logprob: -13.558623313903809
    8. '    ' → logprob: -13.808623313903809
    9. ')' → logprob: -14.683623313903809
    10. ',' → logprob: -14.808623313903809

Token 161: '(left' (ID: 32958)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3508055806159973
    2. '(' → logprob: -1.3508055210113525
    3. '(left' → logprob: -3.8508055210113525
    4. '(i' → logprob: -4.850805759429932
    5. '('' → logprob: -5.600805759429932
    6. 'left' → logprob: -6.100805759429932
    7. '("' → logprob: -6.850805759429932
    8. 'f' → logprob: -7.475805759429932
    9. '(
' → logprob: -9.725805282592773
    10. '("("' → logprob: -9.850805282592773

Token 162: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.981667537620524e-06
    2. '_scores' → logprob: -14.750001907348633
    3. ''_' → logprob: -14.875001907348633
    4. ')_' → logprob: -15.125001907348633
    5. '_count' → logprob: -15.750001907348633
    6. '_c' → logprob: -15.750001907348633
    7. '_results' → logprob: -16.000001907348633
    8. '_f' → logprob: -16.625001907348633
    9. ' _' → logprob: -16.625001907348633
    10. '"_' → logprob: -16.875001907348633

Token 163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.8126592193730175e-05
    2. '[' → logprob: -10.2500581741333
    3. ')' → logprob: -11.2500581741333
    4. ')[' → logprob: -13.0000581741333
    5. ' [' → logprob: -13.0000581741333
    6. '[I' → logprob: -13.6250581741333
    7. '[
' → logprob: -13.7500581741333
    8. ',i' → logprob: -14.1250581741333
    9. ',' → logprob: -14.3750581741333
    10. '   ' → logprob: -14.8750581741333

Token 164: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034143938682973385
    2. ' ,' → logprob: -6.003414630889893
    3. ',end' → logprob: -7.753414630889893
    4. ')' → logprob: -8.253414154052734
    5. ',right' → logprob: -9.003414154052734
    6. ',",' → logprob: -9.503414154052734
    7. ',r' → logprob: -11.628414154052734
    8. '   ' → logprob: -11.628414154052734
    9. ',left' → logprob: -12.378414154052734
    10. ',i' → logprob: -12.503414154052734

Token 165: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0004329341172706336
    2. ' right' → logprob: -7.750432968139648
    3. ',right' → logprob: -13.625432968139648
    4. 'end' → logprob: -14.000432968139648
    5. '(right' → logprob: -16.25043296813965
    6. '	right' → logprob: -16.50043296813965
    7. 'r' → logprob: -17.50043296813965
    8. 'left' → logprob: -17.62543296813965
    9. '[right' → logprob: -17.62543296813965
    10. ')' → logprob: -19.12543296813965

Token 166: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -4.954393079970032e-05
    2. 'counts' → logprob: -10.125049591064453
    3. 's' → logprob: -12.625049591064453
    4. ''_' → logprob: -13.875049591064453
    5. '```' → logprob: -14.000049591064453
    6. 'Counts' → logprob: -14.250049591064453
    7. ')' → logprob: -14.250049591064453
    8. '_scores' → logprob: -14.750049591064453
    9. ''' → logprob: -14.875049591064453
    10. '`' → logprob: -14.875049591064453

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.375004768371582
    4. '[
' → logprob: -15.500004768371582
    5. '[I' → logprob: -15.625004768371582
    6. '```' → logprob: -16.1250057220459
    7. 'i' → logprob: -16.5000057220459
    8. ')[' → logprob: -16.5000057220459
    9. '][' → logprob: -17.7500057220459
    10. ']' → logprob: -18.1250057220459

Token 168: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.875017166137695
    3. ' )' → logprob: -12.500017166137695
    4. ',' → logprob: -13.000017166137695
    5. '})' → logprob: -14.500017166137695
    6. '])' → logprob: -14.500017166137695
    7. ',)' → logprob: -14.500017166137695
    8. ')")' → logprob: -14.500017166137695
    9. '),' → logprob: -14.625017166137695
    10. ')
' → logprob: -15.250017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 51.20%
Précision adaptée (1ère position): 55.42%
Précision (top 10): 90.96%
================================================================================
