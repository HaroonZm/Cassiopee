================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def max_pond_capacity(d, w, elevation):
    max_capacity = 0
    # We need to consider every possible rectangular area of size at least 3x3
    # Iterate over all possible top-left corners
    for top in range(d):
        for left in range(w):
            # Iterate over all possible bottom-right corners with minimum size
            for bottom in range(top + 2, d):
                for right in range(left + 2, w):
                    # Extract the rectangular area boundaries
                    # Outer layer coordinates:
                    # top row: (top,left) to (top,right)
                    # bottom row: (bottom,left) to (bottom,right)
                    # left column: (top+1,left) to (bottom-1,left)
                    # right column: (top+1,right) to (bottom-1,right)
                    # Inner cells: (top+1 to bottom-1, left+1 to right-1)
                    
                    # Find elevations of outer cells and inner cells
                    outer_cells = []
                    inner_cells = []
                    
                    # Collect outer cells from top and bottom row
                    outer_cells.extend(elevation[top][left:right+1])
                    outer_cells.extend(elevation[bottom][left:right+1])
                    
                    # Collect outer cells from left and right columns (excluding corners already counted)
                    for row in range(top+1, bottom):
                        outer_cells.append(elevation[row][left])
                        outer_cells.append(elevation[row][right])
                    
                    # Collect inner cells
                    inner_cells = []
                    for row in range(top+1, bottom):
                        inner_cells.extend(elevation[row][left+1:right])
                    
                    # If there are no inner cells (should not happen due to size constraints), skip
                    if not inner_cells:
                        continue
                    
                    # The lowest elevation among the outer cells
                    min_outer = min(outer_cells)
                    
                    # Check the condition: all outermost cells strictly higher than all inner cells
                    # i.e. min outer > max inner
                    max_inner = max(inner_cells)
                    if min_outer <= max_inner:
                        continue
                    
                    # Calculate capacity: sum over inner cells of (min_outer - elevation)
                    capacity = sum(min_outer - h for h in inner_cells)
                    
                    if capacity > max_capacity:
                        max_capacity = capacity
    return max_capacity


def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        line = input_lines[idx].strip()
        if not line:
            idx += 1
            continue
        d, w = map(int, line.split())
        if d == 0 and w == 0:
            break
        idx += 1
        elevation = []
        for _ in range(d):
            row = list(map(int, input_lines[idx].split()))
            idx += 1
            elevation.append(row)
        result = max_pond_capacity(d, w, elevation)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12063832581043243
    2. 'import' → logprob: -3.370638370513916
    3. '\n' → logprob: -3.495638370513916
    4. '' → logprob: -4.245638370513916
    5. '<|end|>' → logprob: -4.620638370513916
    6. '#' → logprob: -5.120638370513916
    7. 'print' → logprob: -5.120638370513916
    8. '\' → logprob: -6.495638370513916
    9. ',' → logprob: -6.495638370513916
    10. ';' → logprob: -6.620638370513916

Token 4: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004897146485745907
    2. '_length' → logprob: -6.379897117614746
    3. '_size' → logprob: -7.629897117614746
    4. 'imum' → logprob: -7.754897117614746
    5. '_value' → logprob: -7.754897117614746
    6. '(_' → logprob: -7.754897117614746
    7. ' _' → logprob: -8.004897117614746
    8. '_depth' → logprob: -8.129897117614746
    9. '_max' → logprob: -8.629897117614746
    10. '_sum' → logprob: -9.004897117614746

Token 6: 'pond' (ID: 4940)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0036563649773597717
    2. 'length' → logprob: -6.003656387329102
    3. 'max' → logprob: -7.753656387329102
    4. 'sum' → logprob: -8.753656387329102
    5. 'size' → logprob: -9.253656387329102
    6. '_value' → logprob: -9.253656387329102
    7. 'val' → logprob: -9.503656387329102
    8. 'number' → logprob: -9.628656387329102
    9. 'num' → logprob: -9.753656387329102
    10. 'count' → logprob: -10.003656387329102

Token 7: '_capacity' (ID: 85527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22638145089149475
    2. '(' → logprob: -2.101381540298462
    3. '_size' → logprob: -2.726381540298462
    4. '():' → logprob: -4.976381301879883
    5. '_length' → logprob: -6.601381301879883
    6. '_depth' → logprob: -6.726381301879883
    7. '_area' → logprob: -6.851381301879883
    8. '_space' → logprob: -6.976381301879883
    9. '_:' → logprob: -7.726381301879883
    10. '_value' → logprob: -7.976381301879883

Token 8: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001748126931488514
    2. '_' → logprob: -6.376748085021973
    3. ' (' → logprob: -11.501748085021973
    4. ')' → logprob: -12.376748085021973
    5. '('' → logprob: -12.626748085021973
    6. '_parent' → logprob: -12.751748085021973
    7. '(user' → logprob: -12.876748085021973
    8. 's' → logprob: -12.876748085021973
    9. '("("' → logprob: -12.876748085021973
    10. '_(' → logprob: -13.126748085021973

Token 9: ',' (ID: 11)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.5894465446472168
    2. 'am' → logprob: -1.4644465446472168
    3. 'ata' → logprob: -2.214446544647217
    4. 'ams' → logprob: -3.714446544647217
    5. 'ist' → logprob: -4.089446544647217
    6. 'efs' → logprob: -4.964446544647217
    7. ')' → logprob: -5.089446544647217
    8. 'e' → logprob: -5.089446544647217
    9. 'r' → logprob: -5.714446544647217
    10. '):' → logprob: -5.714446544647217

Token 10: ' w' (ID: 286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.4026763439178467
    2. ' l' → logprob: -2.5276763439178467
    3. ' p' → logprob: -2.6526763439178467
    4. 'h' → logprob: -2.7776763439178467
    5. 'p' → logprob: -2.7776763439178467
    6. 'v' → logprob: -2.7776763439178467
    7. ' h' → logprob: -2.9026763439178467
    8. 'a' → logprob: -3.0276763439178467
    9. ' n' → logprob: -3.1526763439178467
    10. 'k' → logprob: -3.1526763439178467

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050056494772434235
    2. ')' → logprob: -3.0500564575195312
    3. ',' → logprob: -6.675056457519531
    4. 's' → logprob: -9.550056457519531
    5. '_' → logprob: -9.800056457519531
    6. '):
' → logprob: -10.925056457519531
    7. '=' → logprob: -11.425056457519531
    8. '[' → logprob: -11.550056457519531
    9. ' ):' → logprob: -11.800056457519531
    10. ''):' → logprob: -12.550056457519531

Token 12: ' elevation' (ID: 43683)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5906715989112854
    2. ' h' → logprob: -1.0906715393066406
    3. ' l' → logprob: -3.8406715393066406
    4. 'l' → logprob: -3.8406715393066406
    5. ' p' → logprob: -4.590671539306641
    6. 'p' → logprob: -4.965671539306641
    7. ' n' → logprob: -4.965671539306641
    8. ' s' → logprob: -5.590671539306641
    9. 's' → logprob: -5.590671539306641
    10. 'n' → logprob: -5.590671539306641

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020755473524332047
    2. 's' → logprob: -4.020755290985107
    3. ')' → logprob: -6.270755290985107
    4. '[' → logprob: -7.895755290985107
    5. '):
' → logprob: -8.520755767822266
    6. '_map' → logprob: -10.520755767822266
    7. '=' → logprob: -10.895755767822266
    8. '[]):' → logprob: -11.145755767822266
    9. '_' → logprob: -11.395755767822266
    10. ',' → logprob: -11.895755767822266

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016090795397758484
    2. '):' → logprob: -4.7660908699035645
    3. '   ' → logprob: -5.3910908699035645
    4. '```' → logprob: -7.2660908699035645
    5. ':
' → logprob: -7.7660908699035645
    6. '':' → logprob: -8.141090393066406
    7. '":' → logprob: -8.141090393066406
    8. '():' → logprob: -8.266090393066406
    9. '[' → logprob: -8.516090393066406
    10. ' :' → logprob: -9.141090393066406

Token 15: ' max' (ID: 2999)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11047117412090302
    2. '   ' → logprob: -2.860471248626709
    3. ':
' → logprob: -3.360471248626709
    4. '\' → logprob: -6.360471248626709
    5. ' :' → logprob: -6.360471248626709
    6. ' ' → logprob: -6.485471248626709
    7. '\n' → logprob: -6.610471248626709
    8. '```' → logprob: -6.860471248626709
    9. '"' → logprob: -7.235471248626709
    10. '    ' → logprob: -7.610471248626709

Token 16: '_capacity' (ID: 85527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003967504948377609
    2. '_capacity' → logprob: -5.62896728515625
    3. '_cap' → logprob: -8.62896728515625
    4. '_space' → logprob: -9.50396728515625
    5. '_val' → logprob: -10.25396728515625
    6. ' _' → logprob: -10.50396728515625
    7. '_height' → logprob: -11.37896728515625
    8. '_depth' → logprob: -11.37896728515625
    9. '_p' → logprob: -12.37896728515625
    10. '_)' → logprob: -12.37896728515625

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017375385388731956
    2. '=' → logprob: -4.142375469207764
    3. '_' → logprob: -6.767375469207764
    4. ' ' → logprob: -9.142374992370605
    5. ')' → logprob: -10.142374992370605
    6. '  ' → logprob: -11.642374992370605
    7. '   ' → logprob: -11.892374992370605
    8. ',' → logprob: -12.017374992370605
    9. '_space' → logprob: -12.267374992370605
    10. '_=' → logprob: -12.517374992370605

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869614005088806
    2. '0' → logprob: -1.1369614601135254
    3. ' max' → logprob: -10.886960983276367
    4. ' float' → logprob: -10.886960983276367
    5. 'float' → logprob: -11.511960983276367
    6. ' -' → logprob: -11.636960983276367
    7. 'max' → logprob: -12.136960983276367
    8. ' ' → logprob: -12.261960983276367
    9. ' d' → logprob: -12.636960983276367
    10. 'd' → logprob: -13.011960983276367

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012548855505883694
    2. ' ' → logprob: -4.387548923492432
    3. 'float' → logprob: -11.637548446655273
    4. '-' → logprob: -11.762548446655273
    5. ' -' → logprob: -12.012548446655273
    6. ' float' → logprob: -12.512548446655273
    7. 'max' → logprob: -12.762548446655273
    8. '[' → logprob: -13.262548446655273
    9. ' max' → logprob: -13.387548446655273
    10. 'e' → logprob: -13.512548446655273

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09934421628713608
    2. '\n' → logprob: -2.849344253540039
    3. '   ' → logprob: -4.474344253540039
    4. ' 
' → logprob: -4.974344253540039
    5. '    
' → logprob: -5.224344253540039
    6. '' → logprob: -5.724344253540039
    7. '   
' → logprob: -6.099344253540039
    8. '  
' → logprob: -6.224344253540039
    9. '\' → logprob: -6.349344253540039
    10. '    ' → logprob: -7.474344253540039

Token 21: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049670781940221786
    2. '   ' → logprob: -3.924670696258545
    3. '\n' → logprob: -4.049670696258545
    4. ' 
' → logprob: -5.799670696258545
    5. '    
' → logprob: -6.299670696258545
    6. '   
' → logprob: -6.799670696258545
    7. '  
' → logprob: -6.799670696258545
    8. '\' → logprob: -7.049670696258545
    9. '' → logprob: -7.424670696258545
    10. '```' → logprob: -7.549670696258545

Token 22: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9341640472412109
    2. 'n' → logprob: -1.059164047241211
    3. 'for' → logprob: -1.934164047241211
    4. '   ' → logprob: -3.059164047241211
    5. '\n' → logprob: -3.434164047241211
    6. '```' → logprob: -4.434164047241211
    7. ' n' → logprob: -4.559164047241211
    8. ' ' → logprob: -5.559164047241211
    9. ' 
' → logprob: -5.809164047241211
    10. '\' → logprob: -6.434164047241211

Token 23: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6969247460365295
    2. ' n' → logprob: -0.9469247460365295
    3. 'for' → logprob: -2.3219246864318848
    4. 'n' → logprob: -4.196924686431885
    5. '   ' → logprob: -7.946924686431885
    6. ' range' → logprob: -8.946925163269043
    7. 'range' → logprob: -9.821925163269043
    8. ' ' → logprob: -9.946925163269043
    9. ' indent' → logprob: -10.321925163269043
    10. ' indentation' → logprob: -10.571925163269043

Token 24: ' need' (ID: 1309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6847602725028992
    2. ''ll' → logprob: -1.684760332107544
    3. ' ' → logprob: -2.434760332107544
    4. 'for' → logprob: -2.809760332107544
    5. '   ' → logprob: -2.934760332107544
    6. ' can' → logprob: -3.309760332107544
    7. 'n' → logprob: -4.559760093688965
    8. ' n' → logprob: -4.684760093688965
    9. ' need' → logprob: -4.809760093688965
    10. 'r' → logprob: -5.184760093688965

Token 25: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14044712483882904
    2. 'to' → logprob: -2.2654471397399902
    3. '    ' → logprob: -4.51544713973999
    4. ' ' → logprob: -4.64044713973999
    5. '   ' → logprob: -5.39044713973999
    6. '  ' → logprob: -6.26544713973999
    7. ' a' → logprob: -9.765446662902832
    8. '     ' → logprob: -10.890446662902832
    9. 'space' → logprob: -11.140446662902832
    10. ' ' → logprob: -11.515446662902832

Token 26: ' consider' (ID: 3331)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.14888519048690796
    2. 'find' → logprob: -2.7738852500915527
    3. ' consider' → logprob: -3.6488852500915527
    4. ' iterate' → logprob: -4.523885250091553
    5. ' calculate' → logprob: -5.148885250091553
    6. 'calculate' → logprob: -5.148885250091553
    7. 'consider' → logprob: -5.273885250091553
    8. ' check' → logprob: -5.273885250091553
    9. 'iterate' → logprob: -5.648885250091553
    10. ' for' → logprob: -7.023885250091553

Token 27: ' every' (ID: 1753)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.06223812699317932
    2. ' ' → logprob: -4.0622382164001465
    3. 'all' → logprob: -4.0622382164001465
    4. ' the' → logprob: -4.8122382164001465
    5. ' two' → logprob: -4.8122382164001465
    6. ' every' → logprob: -5.8122382164001465
    7. ' each' → logprob: -6.0622382164001465
    8. ' pairs' → logprob: -6.3122382164001465
    9. ' spaces' → logprob: -6.9372382164001465
    10. ' a' → logprob: -7.4372382164001465

Token 28: ' possible' (ID: 4149)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.2967464327812195
    2. ' i' → logprob: -2.6717464923858643
    3. ' ' → logprob: -2.7967464923858643
    4. ' possible' → logprob: -2.9217464923858643
    5. ' space' → logprob: -3.0467464923858643
    6. 'possible' → logprob: -5.296746253967285
    7. '_' → logprob: -5.546746253967285
    8. 'pair' → logprob: -5.796746253967285
    9. '_possible' → logprob: -6.296746253967285
    10. '<|end|>' → logprob: -6.671746253967285

Token 29: ' rectangular' (ID: 79707)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.7346338629722595
    2. '<|end|>' → logprob: -2.1096339225769043
    3. ' segment' → logprob: -2.4846339225769043
    4. ' space' → logprob: -3.2346339225769043
    5. ' sub' → logprob: -3.3596339225769043
    6. ' valley' → logprob: -3.4846339225769043
    7. 'pair' → logprob: -3.7346339225769043
    8. ' i' → logprob: -4.109633922576904
    9. ' ' → logprob: -4.109633922576904
    10. ' starting' → logprob: -4.359633922576904

Token 30: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.6483684182167053
    2. ' ' → logprob: -1.1483683586120605
    3. ' space' → logprob: -2.7733683586120605
    4. ' block' → logprob: -3.2733683586120605
    5. ' region' → logprob: -3.3983683586120605
    6. ' sub' → logprob: -4.2733683586120605
    7. ' prism' → logprob: -5.1483683586120605
    8. ' section' → logprob: -6.6483683586120605
    9. '<|end|>' → logprob: -6.8983683586120605
    10. ' subset' → logprob: -7.0233683586120605

Token 31: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' size' (ID: 2349)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20040251314640045
    2. ' water' → logprob: -2.3254024982452393
    3. ' elevation' → logprob: -3.0754024982452393
    4. ' size' → logprob: -4.825402736663818
    5. 'the' → logprob: -5.200402736663818
    6. ' land' → logprob: -5.450402736663818
    7. ' elevations' → logprob: -5.575402736663818
    8. ' ' → logprob: -5.950402736663818
    9. 'e' → logprob: -6.325402736663818
    10. ' code' → logprob: -6.325402736663818

Token 33: ' at' (ID: 540)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3619222044944763
    2. ' d' → logprob: -1.986922264099121
    3. ' (' → logprob: -2.736922264099121
    4. 'd' → logprob: -3.236922264099121
    5. ' `' → logprob: -4.111922264099121
    6. ' h' → logprob: -4.861922264099121
    7. '(' → logprob: -4.986922264099121
    8. '`' → logprob: -4.986922264099121
    9. ' w' → logprob: -5.611922264099121
    10. '```' → logprob: -5.736922264099121

Token 34: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.27838802337646484
    2. ' least' → logprob: -1.5283880233764648
    3. ' ' → logprob: -4.153388023376465
    4. '   ' → logprob: -6.278388023376465
    5. '_le' → logprob: -6.403388023376465
    6. 'range' → logprob: -6.903388023376465
    7. '  ' → logprob: -7.278388023376465
    8. '1' → logprob: -7.403388023376465
    9. 'most' → logprob: -7.528388023376465
    10. '    ' → logprob: -7.653388023376465

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03108958713710308
    2. '1' → logprob: -3.5310895442962646
    3. '2' → logprob: -7.031089782714844
    4. ' one' → logprob: -8.281089782714844
    5. ' two' → logprob: -9.656089782714844
    6. '```' → logprob: -10.406089782714844
    7. ' d' → logprob: -10.656089782714844
    8. ' (' → logprob: -10.656089782714844
    9. ' `' → logprob: -10.906089782714844
    10. ' w' → logprob: -12.031089782714844

Token 36: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08217056840658188
    2. '2' → logprob: -2.8321704864501953
    3. ' ' → logprob: -4.082170486450195
    4. 'd' → logprob: -6.582170486450195
    5. '(' → logprob: -6.707170486450195
    6. ' (' → logprob: -9.207170486450195
    7. '```' → logprob: -9.207170486450195
    8. '`' → logprob: -9.582170486450195
    9. ' d' → logprob: -9.582170486450195
    10. 'w' → logprob: -10.207170486450195

Token 37: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22759130597114563
    2. '<|end|>' → logprob: -2.7275912761688232
    3. '  ' → logprob: -3.6025912761688232
    4. ' for' → logprob: -3.9775912761688232
    5. '   ' → logprob: -3.9775912761688232
    6. ',' → logprob: -4.227591514587402
    7. 'x' → logprob: -4.602591514587402
    8. ' ,' → logprob: -4.727591514587402
    9. '    ' → logprob: -4.852591514587402
    10. 'for' → logprob: -5.102591514587402

Token 38: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16027164459228516
    2. ' ' → logprob: -1.9102716445922852
    3. '```' → logprob: -10.910271644592285
    4. '2' → logprob: -11.410271644592285
    5. '  ' → logprob: -11.535271644592285
    6. '   ' → logprob: -13.222771644592285
    7. '1' → logprob: -13.535271644592285
    8. ' ' → logprob: -13.785271644592285
    9. '4' → logprob: -14.285271644592285
    10. ' ```' → logprob: -14.472771644592285

Token 39: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.16265070438385
    2. '<|end|>' → logprob: -1.78765070438385
    3. '\n' → logprob: -2.1626505851745605
    4. '
' → logprob: -2.2876505851745605
    5. ',' → logprob: -2.4126505851745605
    6. ' 
' → logprob: -3.0376505851745605
    7. ':' → logprob: -3.2876505851745605
    8. ' ' → logprob: -3.5376505851745605
    9. '    
' → logprob: -4.1626505851745605
    10. '\' → logprob: -4.1626505851745605

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4194056987762451
    2. '\' → logprob: -2.044405698776245
    3. '
' → logprob: -2.044405698776245
    4. ' 
' → logprob: -2.169405698776245
    5. '   ' → logprob: -2.294405698776245
    6. '\n' → logprob: -2.669405698776245
    7. '   
' → logprob: -3.294405698776245
    8. '  
' → logprob: -3.419405698776245
    9. ' for' → logprob: -3.544405698776245
    10. '```' → logprob: -3.544405698776245

Token 41: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0622508525848389
    2. '
' → logprob: -1.1872508525848389
    3. '\' → logprob: -1.6872508525848389
    4. ' for' → logprob: -3.312250852584839
    5. ':' → logprob: -3.687250852584839
    6. '   ' → logprob: -3.687250852584839
    7. ' 
' → logprob: -4.187251091003418
    8. 'n' → logprob: -4.187251091003418
    9. 'for' → logprob: -4.437251091003418
    10. ' ' → logprob: -5.312251091003418

Token 42: ' Iterate' (ID: 129410)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3208705186843872
    2. 'for' → logprob: -2.1958703994750977
    3. '   ' → logprob: -2.9458703994750977
    4. 'n' → logprob: -3.5708703994750977
    5. '\n' → logprob: -3.5708703994750977
    6. ' 
' → logprob: -3.6958703994750977
    7. ' ' → logprob: -4.945870399475098
    8. '\' → logprob: -5.070870399475098
    9. '
' → logprob: -5.320870399475098
    10. ' n' → logprob: -5.820870399475098

Token 43: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.044483575969934464
    2. ' ' → logprob: -3.5444836616516113
    3. ' through' → logprob: -5.044483661651611
    4. ' for' → logprob: -5.544483661651611
    5. 'over' → logprob: -6.044483661651611
    6. '_' → logprob: -7.419483661651611
    7. 'for' → logprob: -8.544483184814453
    8. ' i' → logprob: -8.544483184814453
    9. ' in' → logprob: -8.669483184814453
    10. '    ' → logprob: -8.919483184814453

Token 44: ' all' (ID: 722)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.017827849835157394
    2. 'range' → logprob: -4.767827987670898
    3. ' ranges' → logprob: -5.892827987670898
    4. ' i' → logprob: -6.267827987670898
    5. ' rows' → logprob: -6.642827987670898
    6. ' the' → logprob: -6.892827987670898
    7. ' all' → logprob: -6.892827987670898
    8. ' ' → logprob: -8.017827987670898
    9. ' r' → logprob: -8.017827987670898
    10. ' h' → logprob: -9.017827987670898

Token 45: ' possible' (ID: 4149)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8382475972175598
    2. ' rows' → logprob: -1.713247537612915
    3. ' ranges' → logprob: -1.963247537612915
    4. ' ' → logprob: -2.588247537612915
    5. ' range' → logprob: -2.963247537612915
    6. ' i' → logprob: -3.213247537612915
    7. ' r' → logprob: -4.338247776031494
    8. '_' → logprob: -4.338247776031494
    9. ' possible' → logprob: -4.338247776031494
    10. ' d' → logprob: -4.463247776031494

Token 46: ' top' (ID: 2344)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -1.1050028800964355
    2. ' heights' → logprob: -1.2300028800964355
    3. ' ranges' → logprob: -2.3550028800964355
    4. ' h' → logprob: -2.7300028800964355
    5. ' i' → logprob: -2.7300028800964355
    6. ' top' → logprob: -3.1050028800964355
    7. ' r' → logprob: -4.1050028800964355
    8. 'rows' → logprob: -4.2300028800964355
    9. 'r' → logprob: -4.4800028800964355
    10. 'i' → logprob: -4.7300028800964355

Token 47: '-left' (ID: 17007)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.8585307598114014
    2. '-left' → logprob: -1.4835307598114014
    3. ' -' → logprob: -1.9835307598114014
    4. '_' → logprob: -2.3585307598114014
    5. '-' → logprob: -2.9835307598114014
    6. ' _' → logprob: -3.4835307598114014
    7. ' left' → logprob: -3.8585307598114014
    8. '_i' → logprob: -5.2335309982299805
    9. '-_' → logprob: -6.6085309982299805
    10. '```' → logprob: -6.6085309982299805

Token 48: ' corners' (ID: 39479)
  Prédit: ' corners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corners' → logprob: -0.02185768261551857
    2. ' coordinates' → logprob: -4.646857738494873
    3. ' ' → logprob: -4.771857738494873
    4. 'corn' → logprob: -6.646857738494873
    5. ' positions' → logprob: -6.771857738494873
    6. ' corner' → logprob: -7.521857738494873
    7. ' _' → logprob: -9.146857261657715
    8. '_' → logprob: -9.521857261657715
    9. ' and' → logprob: -9.521857261657715
    10. '_corner' → logprob: -9.521857261657715

Token 49: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4852476418018341
    2. '   ' → logprob: -2.4852476119995117
    3. 'for' → logprob: -2.6102476119995117
    4. ':' → logprob: -2.7352476119995117
    5. '
' → logprob: -2.7352476119995117
    6. ' 
' → logprob: -3.8602476119995117
    7. '  
' → logprob: -4.110247611999512
    8. ' ' → logprob: -4.235247611999512
    9. '```' → logprob: -4.360247611999512
    10. '   
' → logprob: -5.110247611999512

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7470411062240601
    2. ' for' → logprob: -0.8720411062240601
    3. ':' → logprob: -3.1220412254333496
    4. 'for' → logprob: -3.6220412254333496
    5. '
' → logprob: -4.49704122543335
    6. ' 
' → logprob: -5.12204122543335
    7. '    
' → logprob: -5.24704122543335
    8. '```' → logprob: -5.74704122543335
    9. '   
' → logprob: -5.99704122543335
    10. ' ' → logprob: -5.99704122543335

Token 51: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.355810523033142
    2. 'for' (adapté à ' for') → logprob: -1.605810523033142
    3. ' ' → logprob: -1.730810523033142
    4. ' for' → logprob: -2.2308106422424316
    5. '\' → logprob: -2.8558106422424316
    6. '   ' → logprob: -3.1058106422424316
    7. '```' → logprob: -3.3558106422424316
    8. '\n' → logprob: -3.4808106422424316
    9. ' \' → logprob: -4.105810642242432
    10. '   
' → logprob: -4.355810642242432

Token 52: ' top' (ID: 2344)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04642147570848465
    2. ' r' → logprob: -3.796421527862549
    3. 'i' → logprob: -4.171421527862549
    4. ' x' → logprob: -6.171421527862549
    5. ' ' → logprob: -6.671421527862549
    6. ' row' → logprob: -6.796421527862549
    7. 'r' → logprob: -6.921421527862549
    8. ' h' → logprob: -7.421421527862549
    9. ' y' → logprob: -7.671421527862549
    10. ' t' → logprob: -8.42142105102539

Token 53: ' in' (ID: 306)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.3141783475875854
    2. '_row' → logprob: -1.4391783475875854
    3. '_x' → logprob: -1.8141783475875854
    4. ' in' → logprob: -1.8141783475875854
    5. '_' → logprob: -2.564178466796875
    6. '_left' → logprob: -3.314178466796875
    7. '_y' → logprob: -3.689178466796875
    8. ',' → logprob: -4.189178466796875
    9. ' ,' → logprob: -5.689178466796875
    10. ' _' → logprob: -5.689178466796875

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012526246719062328
    2. 'range' → logprob: -4.387526035308838
    3. ' ' → logprob: -11.262526512145996
    4. ' in' → logprob: -13.262526512145996
    5. '(range' → logprob: -14.137526512145996
    6. '0' → logprob: -14.762526512145996
    7. '	range' → logprob: -15.137526512145996
    8. ' xrange' → logprob: -15.262526512145996
    9. ' space' → logprob: -16.38752555847168
    10. ')' → logprob: -16.63752555847168

Token 55: '(d' (ID: 2572)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2687153220176697
    2. '(' → logprob: -1.5187153816223145
    3. '(d' → logprob: -4.1437153816223145
    4. ' (' → logprob: -7.2687153816223145
    5. '(n' → logprob: -10.143714904785156
    6. '(length' → logprob: -11.268714904785156
    7. '(s' → logprob: -11.643714904785156
    8. '(depth' → logprob: -12.268714904785156
    9. '((' → logprob: -12.518714904785156
    10. '(l' → logprob: -13.143714904785156

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0052217827178537846
    2. '):
' → logprob: -5.880221843719482
    3. ')' → logprob: -7.130221843719482
    4. '-' → logprob: -7.380221843719482
    5. ' ):' → logprob: -7.630221843719482
    6. '   ' → logprob: -8.130221366882324
    7. ' -' → logprob: -9.380221366882324
    8. ':' → logprob: -10.755221366882324
    9. ' ' → logprob: -10.755221366882324
    10. '+' → logprob: -11.380221366882324

Token 57: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3659006953239441
    2. '   ' → logprob: -1.9909007549285889
    3. '       ' → logprob: -2.490900754928589
    4. '    ' → logprob: -2.990900754928589
    5. '+' → logprob: -4.61590051651001
    6. ' :' → logprob: -4.99090051651001
    7. '):' → logprob: -5.11590051651001
    8. ' ' → logprob: -5.36590051651001
    9. '<|end|>' → logprob: -6.11590051651001
    10. ',' → logprob: -6.49090051651001

Token 58: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6816916465759277
    2. ' for' → logprob: -1.1816916465759277
    3. '   ' → logprob: -2.3066916465759277
    4. '<|end|>' → logprob: -3.8066916465759277
    5. '    ' → logprob: -3.9316916465759277
    6. ' ' → logprob: -4.056691646575928
    7. ':' → logprob: -4.681691646575928
    8. '        ' → logprob: -4.931691646575928
    9. ',' → logprob: -6.306691646575928
    10. 'for' (adapté à ' for') → logprob: -6.431691646575928

Token 59: ' left' (ID: 3561)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10512032359838486
    2. 'w' → logprob: -2.4801204204559326
    3. ' left' → logprob: -5.3551201820373535
    4. '0' → logprob: -5.6051201820373535
    5. ' ' → logprob: -6.1051201820373535
    6. ' top' → logprob: -6.1051201820373535
    7. 'left' → logprob: -6.8551201820373535
    8. 'top' → logprob: -7.2301201820373535
    9. ' bottom' → logprob: -8.105120658874512
    10. '   ' → logprob: -8.480120658874512

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028268657624721527
    2. 'in' → logprob: -5.877826690673828
    3. ' ' → logprob: -11.377826690673828
    4. '    ' → logprob: -12.252826690673828
    5. '   ' → logprob: -13.377826690673828
    6. 'd' → logprob: -14.002826690673828
    7. '+' → logprob: -14.502826690673828
    8. '```' → logprob: -14.502826690673828
    9. 'range' → logprob: -15.127826690673828
    10. '  ' → logprob: -15.127826690673828

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760091543197632
    2. ' range' → logprob: -0.8260091543197632
    3. 'w' → logprob: -10.326008796691895
    4. ' w' → logprob: -10.326008796691895
    5. '(range' → logprob: -12.576008796691895
    6. ' ' → logprob: -14.826008796691895
    7. '(w' → logprob: -15.326008796691895
    8. '	range' → logprob: -16.82600975036621
    9. 'd' → logprob: -17.82600975036621
    10. '<w' → logprob: -18.07600975036621

Token 62: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0018685447284951806
    2. '(' → logprob: -6.376868724822998
    3. ' (' → logprob: -9.12686824798584
    4. '(d' → logprob: -10.00186824798584
    5. '   ' → logprob: -12.87686824798584
    6. 'w' → logprob: -13.12686824798584
    7. '	w' → logprob: -13.87686824798584
    8. '(len' → logprob: -13.87686824798584
    9. '(width' → logprob: -14.12686824798584
    10. '(W' → logprob: -14.25186824798584

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012590413680300117
    2. '+' → logprob: -7.626258850097656
    3. '):
' → logprob: -7.626258850097656
    4. ' ):' → logprob: -9.001258850097656
    5. '   ' → logprob: -9.751258850097656
    6. ':' → logprob: -10.001258850097656
    7. ',' → logprob: -10.501258850097656
    8. ')' → logprob: -11.376258850097656
    9. '       ' → logprob: -12.126258850097656
    10. ' +' → logprob: -12.626258850097656

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028863390907645226
    2. ':' → logprob: -3.7788634300231934
    3. ' :' → logprob: -6.403863430023193
    4. '               ' → logprob: -7.153863430023193
    5. '<|end|>' → logprob: -7.403863430023193
    6. ':
' → logprob: -7.528863430023193
    7. '       ' → logprob: -7.653863430023193
    8. ' ' → logprob: -8.028862953186035
    9. ',' → logprob: -8.653862953186035
    10. '   ' → logprob: -8.653862953186035

Token 65: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11732075363397598
    2. ' ' → logprob: -2.8673207759857178
    3. ' for' → logprob: -4.492320537567139
    4. '<|end|>' → logprob: -4.617320537567139
    5. '           ' → logprob: -4.742320537567139
    6. '                ' → logprob: -5.492320537567139
    7. ' if' → logprob: -5.617320537567139
    8. '            ' → logprob: -5.742320537567139
    9. '                
' → logprob: -6.117320537567139
    10. ':' → logprob: -6.367320537567139

Token 66: ' Iterate' (ID: 129410)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0816008448600769
    2. 'for' → logprob: -2.5816009044647217
    3. ' continue' → logprob: -6.581600666046143
    4. '#' → logprob: -7.456600666046143
    5. 'continue' → logprob: -8.7066011428833
    6. '           ' → logprob: -8.8316011428833
    7. ' #' → logprob: -9.2066011428833
    8. ' Continue' → logprob: -10.0816011428833
    9. 'Continue' → logprob: -10.0816011428833
    10. ' if' → logprob: -10.3316011428833

Token 67: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.04229530319571495
    2. ' for' → logprob: -3.792295217514038
    3. 'over' → logprob: -4.542295455932617
    4. ' through' → logprob: -6.042295455932617
    5. ' ' → logprob: -6.167295455932617
    6. '           ' → logprob: -6.917295455932617
    7. '   ' → logprob: -7.667295455932617
    8. 'for' → logprob: -7.792295455932617
    9. '               ' → logprob: -8.042295455932617
    10. '<|end|>' → logprob: -8.042295455932617

Token 68: ' all' (ID: 722)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.49592363834381104
    2. 'range' → logprob: -1.120923638343811
    3. ' bottom' → logprob: -3.8709235191345215
    4. 'right' → logprob: -4.1209235191345215
    5. 'top' → logprob: -4.3709235191345215
    6. ' range' → logprob: -4.3709235191345215
    7. ' right' → logprob: -7.8709235191345215
    8. 'width' → logprob: -7.9959235191345215
    9. '```' → logprob: -8.12092399597168
    10. 'height' → logprob: -8.12092399597168

Token 69: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.6462241411209106
    2. ' bottom' → logprob: -1.2712241411209106
    3. ' ranges' → logprob: -2.771224021911621
    4. 'possible' → logprob: -3.646224021911621
    5. ' right' → logprob: -4.021224021911621
    6. 'bottom' → logprob: -4.021224021911621
    7. ' sizes' → logprob: -4.521224021911621
    8. ' valid' → logprob: -4.521224021911621
    9. 'sizes' → logprob: -4.771224021911621
    10. 'right' → logprob: -5.396224021911621

Token 70: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.12156063318252563
    2. ' bottom' → logprob: -2.371560573577881
    3. 'right' → logprob: -4.871560573577881
    4. '```' → logprob: -5.871560573577881
    5. ' bottoms' → logprob: -5.871560573577881
    6. 'sizes' → logprob: -6.121560573577881
    7. 'bot' → logprob: -6.871560573577881
    8. 'he' → logprob: -6.871560573577881
    9. '   ' → logprob: -7.246560573577881
    10. ' ' → logprob: -7.496560573577881

Token 71: '-right' (ID: 14810)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020737024024128914
    2. ' ' → logprob: -4.395737171173096
    3. 's' → logprob: -5.145737171173096
    4. '<|end|>' → logprob: -7.145737171173096
    5. ' for' → logprob: -7.395737171173096
    6. 'in' → logprob: -8.520736694335938
    7. '   ' → logprob: -9.395736694335938
    8. '_' → logprob: -9.520736694335938
    9. ' sides' → logprob: -9.770736694335938
    10. '<|end|>' → logprob: -9.895736694335938

Token 72: ' corners' (ID: 39479)
  Prédit: ' corners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corners' → logprob: -0.0011231913231313229
    2. ' ' → logprob: -7.501123428344727
    3. 'corn' → logprob: -8.251123428344727
    4. 's' → logprob: -8.626123428344727
    5. '<|end|>' → logprob: -10.126123428344727
    6. ' points' → logprob: -10.501123428344727
    7. 'Corners' → logprob: -11.251123428344727
    8. ' coordinates' → logprob: -11.376123428344727
    9. '_corner' → logprob: -11.501123428344727
    10. 'orners' → logprob: -12.251123428344727

Token 73: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.436199426651001
    2. ',' → logprob: -1.936199426651001
    3. '<|end|>' → logprob: -1.936199426651001
    4. ' for' → logprob: -4.061199188232422
    5. '           ' → logprob: -4.436199188232422
    6. ' ' → logprob: -4.686199188232422
    7. ' in' → logprob: -5.186199188232422
    8. ':' → logprob: -5.311199188232422
    9. '<|end|>' → logprob: -5.936199188232422
    10. ' ,' → logprob: -6.311199188232422

Token 74: ' minimum' (ID: 11085)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12002328783273697
    2. ' top' → logprob: -2.620023250579834
    3. 'range' → logprob: -3.745023250579834
    4. 'top' → logprob: -4.995023250579834
    5. ' ' → logprob: -5.620023250579834
    6. ' at' → logprob: -6.620023250579834
    7. ' bottom' → logprob: -6.745023250579834
    8. ' ranges' → logprob: -6.745023250579834
    9. ' the' → logprob: -7.620023250579834
    10. 'bottom' → logprob: -7.745023250579834

Token 75: ' size' (ID: 2349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04021589457988739
    2. ' size' → logprob: -4.040215969085693
    3. '3' → logprob: -5.915215969085693
    4. ' top' → logprob: -6.040215969085693
    5. ' spacing' → logprob: -6.040215969085693
    6. '2' → logprob: -6.415215969085693
    7. ' offset' → logprob: -6.790215969085693
    8. '  ' → logprob: -6.915215969085693
    9. 'size' → logprob: -7.165215969085693
    10. ' two' → logprob: -7.290215969085693

Token 76: '
' (ID: 198)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -1.7804632186889648
    2. '(top' → logprob: -1.7804632186889648
    3. ' for' → logprob: -1.9054632186889648
    4. ' at' → logprob: -2.530463218688965
    5. 'top' → logprob: -2.655463218688965
    6. ' ' → logprob: -2.655463218688965
    7. ' (' → logprob: -2.905463218688965
    8. ' of' → logprob: -3.030463218688965
    9. ' =' → logprob: -3.280463218688965
    10. '=' → logprob: -3.530463218688965

Token 77: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8318710327148438
    2. ' =' → logprob: -2.2068710327148438
    3. '=' → logprob: -2.7068710327148438
    4. ' at' → logprob: -3.0818710327148438
    5. ' (' → logprob: -3.0818710327148438
    6. ':' → logprob: -3.2068710327148438
    7. '   ' → logprob: -3.3318710327148438
    8. ' for' → logprob: -3.4568710327148438
    9. '           ' → logprob: -3.5818710327148438
    10. ' of' → logprob: -3.5818710327148438

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04985452815890312
    2. ' ' → logprob: -3.6748545169830322
    3. 'for' (adapté à ' for') → logprob: -4.299854755401611
    4. '<|end|>' → logprob: -5.424854755401611
    5. ' range' → logprob: -6.174854755401611
    6. 'range' → logprob: -6.674854755401611
    7. ' if' → logprob: -7.424854755401611
    8. ' in' → logprob: -8.049854278564453
    9. '    ' → logprob: -9.174854278564453
    10. '   ' → logprob: -9.174854278564453

Token 79: ' bottom' (ID: 8725)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.06565023958683014
    2. 'top' → logprob: -2.815650224685669
    3. ' bottom' → logprob: -6.190650463104248
    4. ' range' → logprob: -6.940650463104248
    5. 'bottom' → logprob: -8.31564998626709
    6. '(top' → logprob: -8.56564998626709
    7. 'range' → logprob: -9.06564998626709
    8. ' max' → logprob: -10.44064998626709
    9. ' right' → logprob: -10.69064998626709
    10. '   ' → logprob: -11.31564998626709

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031857939902693033
    2. 'in' → logprob: -5.753185749053955
    3. ' ' → logprob: -12.253186225891113
    4. '```' → logprob: -14.503186225891113
    5. 'range' → logprob: -14.503186225891113
    6. '   ' → logprob: -14.628186225891113
    7. 's' → logprob: -15.253186225891113
    8. 'In' → logprob: -15.503186225891113
    9. '    ' → logprob: -15.503186225891113
    10. 'd' → logprob: -15.628186225891113

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4747990369796753
    2. ' range' → logprob: -0.9747990369796753
    3. 'top' → logprob: -7.974799156188965
    4. ' top' → logprob: -7.974799156188965
    5. '(range' → logprob: -10.849799156188965
    6. ' ' → logprob: -11.724799156188965
    7. '(top' → logprob: -12.724799156188965
    8. '[top' → logprob: -13.849799156188965
    9. '   ' → logprob: -14.349799156188965
    10. '	range' → logprob: -14.724799156188965

Token 82: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.0025499812327325344
    2. ' top' → logprob: -6.62755012512207
    3. 'top' → logprob: -6.75255012512207
    4. '(' → logprob: -10.12755012512207
    5. '[top' → logprob: -11.75255012512207
    6. ' (' → logprob: -12.25255012512207
    7. '	top' → logprob: -13.25255012512207
    8. '(max' → logprob: -14.12755012512207
    9. '(t' → logprob: -15.75255012512207
    10. ' ' → logprob: -16.62755012512207

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931775212287903
    2. ' +' → logprob: -0.6931775212287903
    3. ',' → logprob: -10.818177223205566
    4. ' ' → logprob: -12.568177223205566
    5. ' ,' → logprob: -13.443177223205566
    6. '   ' → logprob: -13.443177223205566
    7. '+k' → logprob: -14.568177223205566
    8. '       ' → logprob: -14.693177223205566
    9. '+,' → logprob: -14.693177223205566
    10. '3' → logprob: -14.693177223205566

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006550174206495285
    2. ' ' → logprob: -5.506550312042236
    3. '3' → logprob: -6.006550312042236
    4. '```' → logprob: -12.756549835205078
    5. '   ' → logprob: -14.131549835205078
    6. '  ' → logprob: -14.381549835205078
    7. '1' → logprob: -14.381549835205078
    8. '

' → logprob: -15.631549835205078
    9. '    ' → logprob: -16.006549835205078
    10. '     ' → logprob: -16.381549835205078

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00526316836476326
    2. '3' → logprob: -5.255263328552246
    3. ' ' → logprob: -10.505263328552246
    4. '```' → logprob: -14.067763328552246
    5. '1' → logprob: -14.692763328552246
    6. '   ' → logprob: -15.942763328552246
    7. '``' → logprob: -16.31776237487793
    8. '

' → logprob: -16.81776237487793
    9. '  ' → logprob: -16.88026237487793
    10. '4' → logprob: -17.19276237487793

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008517975220456719
    2. ' ,' → logprob: -7.125851631164551
    3. ',w' → logprob: -11.00085163116455
    4. ',d' → logprob: -12.12585163116455
    5. '):' → logprob: -12.37585163116455
    6. ',width' → logprob: -12.87585163116455
    7. ',len' → logprob: -12.87585163116455
    8. '<|end|>' → logprob: -12.87585163116455
    9. ' ' → logprob: -13.12585163116455
    10. ',n' → logprob: -13.50085163116455

Token 87: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5759681463241577
    2. ' d' → logprob: -0.8259681463241577
    3. '   ' → logprob: -11.200967788696289
    4. ' ' → logprob: -12.700967788696289
    5. '	d' → logprob: -12.825967788696289
    6. ')d' → logprob: -12.950967788696289
    7. '    ' → logprob: -13.200967788696289
    8. '  ' → logprob: -13.950967788696289
    9. '       ' → logprob: -14.450967788696289
    10. 'w' → logprob: -14.450967788696289

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006064103217795491
    2. '):
' → logprob: -7.500606536865234
    3. '+' → logprob: -10.750606536865234
    4. ':' → logprob: -11.625606536865234
    5. ' ):' → logprob: -11.625606536865234
    6. '   ' → logprob: -12.125606536865234
    7. '       ' → logprob: -12.875606536865234
    8. ')' → logprob: -13.250606536865234
    9. ' ' → logprob: -13.875606536865234
    10. '):

' → logprob: -14.250606536865234

Token 89: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44885435700416565
    2. ':' → logprob: -1.3238543272018433
    3. '<|end|>' → logprob: -2.698854446411133
    4. ' ' → logprob: -4.698854446411133
    5. '           ' → logprob: -5.198854446411133
    6. '       ' → logprob: -5.948854446411133
    7. '```' → logprob: -6.698854446411133
    8. ' :' → logprob: -6.698854446411133
    9. '            ' → logprob: -6.948854446411133
    10. '                ' → logprob: -6.948854446411133

Token 90: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7783153057098389
    2. '<|end|>' → logprob: -0.9033153057098389
    3. '                ' → logprob: -3.278315305709839
    4. '               ' → logprob: -3.403315305709839
    5. '                   ' → logprob: -3.903315305709839
    6. ' for' → logprob: -3.903315305709839
    7. '```' → logprob: -5.653315544128418
    8. 'for' (adapté à ' for') → logprob: -6.028315544128418
    9. ' ' → logprob: -6.153315544128418
    10. ' 
' → logprob: -6.278315544128418

Token 91: ' right' (ID: 1849)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.007763254456222057
    2. 'left' → logprob: -4.882763385772705
    3. '(left' → logprob: -9.007762908935547
    4. ' (' → logprob: -11.507762908935547
    5. ' ' → logprob: -11.882762908935547
    6. '	left' → logprob: -12.007762908935547
    7. '[left' → logprob: -12.882762908935547
    8. ' lef' → logprob: -13.132762908935547
    9. '_left' → logprob: -13.632762908935547
    10. '    ' → logprob: -13.757762908935547

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008097442332655191
    2. 'in' → logprob: -7.125809669494629
    3. ' ' → logprob: -12.500809669494629
    4. '<|end|>' → logprob: -15.000809669494629
    5. ' =' → logprob: -15.625809669494629
    6. '	in' → logprob: -15.875809669494629
    7. 'In' → logprob: -16.000810623168945
    8. '    ' → logprob: -16.000810623168945
    9. '  ' → logprob: -16.250810623168945
    10. '=' → logprob: -16.250810623168945

Token 93: ' range' (ID: 3352)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.700886607170105
    2. ' left' → logprob: -0.825886607170105
    3. 'left' → logprob: -2.8258867263793945
    4. ' (' → logprob: -6.0758867263793945
    5. '[left' → logprob: -6.0758867263793945
    6. ' range' → logprob: -6.7008867263793945
    7. '	left' → logprob: -7.8258867263793945
    8. 'range' → logprob: -8.200886726379395
    9. ':left' → logprob: -9.575886726379395
    10. ' ' → logprob: -9.700886726379395

Token 94: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.03163452073931694
    2. 'left' → logprob: -3.906634569168091
    3. ' left' → logprob: -4.531634330749512
    4. ' (' → logprob: -9.156634330749512
    5. '(' → logprob: -10.031634330749512
    6. '	left' → logprob: -10.156634330749512
    7. '[left' → logprob: -10.281634330749512
    8. ':left' → logprob: -11.031634330749512
    9. '   ' → logprob: -11.531634330749512
    10. ',left' → logprob: -11.656634330749512

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196846812963486
    2. '+' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.686968803405762
    4. ' +
' → logprob: -15.936968803405762
    5. '＋' → logprob: -16.936967849731445
    6. '   ' → logprob: -17.061967849731445
    7. ' plus' → logprob: -17.311967849731445
    8. ')' → logprob: -17.811967849731445
    9. ' +

' → logprob: -18.061967849731445
    10. '2' → logprob: -18.061967849731445

Token 96: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006717267446219921
    2. ' ' → logprob: -5.006717205047607
    3. '```' → logprob: -14.131717681884766
    4. '1' → logprob: -14.694217681884766
    5. '   ' → logprob: -15.381717681884766
    6. '  ' → logprob: -15.881717681884766
    7. '۲' → logprob: -17.069217681884766
    8. '3' → logprob: -17.069217681884766
    9. '     ' → logprob: -17.194217681884766
    10. ')' → logprob: -17.694217681884766

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007124318508431315
    2. ' ' → logprob: -7.2507123947143555
    3. '1' → logprob: -14.438212394714355
    4. '```' → logprob: -14.625712394714355
    5. '   ' → logprob: -14.813212394714355
    6. '  ' → logprob: -15.313212394714355
    7. '۲' → logprob: -16.563213348388672
    8. '২' → logprob: -16.875713348388672
    9. '     ' → logprob: -16.938213348388672
    10. '२' → logprob: -17.313213348388672

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002135152230039239
    2. ',w' → logprob: -6.252135276794434
    3. ' ,' → logprob: -8.502135276794434
    4. 'w' → logprob: -13.002135276794434
    5. ')' → logprob: -14.752135276794434
    6. ' w' → logprob: -15.877135276794434
    7. '<w' → logprob: -16.127134323120117
    8. ',
' → logprob: -16.377134323120117
    9. '(w' → logprob: -16.627134323120117
    10. '	w' → logprob: -16.877134323120117

Token 99: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.03364742547273636
    2. 'w' → logprob: -3.4086475372314453
    3. '	w' → logprob: -14.033647537231445
    4. ' ' → logprob: -15.283647537231445
    5. '    ' → logprob: -15.533647537231445
    6. ')' → logprob: -15.783647537231445
    7. '   ' → logprob: -16.033647537231445
    8. '(w' → logprob: -16.783647537231445
    9. '```' → logprob: -17.158647537231445
    10. ' ' → logprob: -17.533647537231445

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007958084461279213
    2. '+' → logprob: -7.375795841217041
    3. ':' → logprob: -9.750795364379883
    4. ')' → logprob: -9.750795364379883
    5. '):
' → logprob: -10.000795364379883
    6. ' ):' → logprob: -12.875795364379883
    7. '+:' → logprob: -13.250795364379883
    8. ' +' → logprob: -13.625795364379883
    9. '():' → logprob: -14.875795364379883
    10. '):

' → logprob: -15.250795364379883

Token 101: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3051214814186096
    2. '               ' → logprob: -1.8051214218139648
    3. '                   ' → logprob: -3.055121421813965
    4. ' :' → logprob: -3.930121421813965
    5. ':
' → logprob: -4.555121421813965
    6. '<|end|>' → logprob: -5.180121421813965
    7. '                ' → logprob: -5.555121421813965
    8. '           ' → logprob: -6.430121421813965
    9. '                               ' → logprob: -6.555121421813965
    10. ',' → logprob: -6.930121421813965

Token 102: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3896435499191284
    2. '                        
' → logprob: -2.389643669128418
    3. '                   ' → logprob: -3.264643669128418
    4. '
' → logprob: -3.389643669128418
    5. ' #' → logprob: -3.514643669128418
    6. '#' (adapté à ' #') → logprob: -4.264643669128418
    7. '                     
' → logprob: -4.389643669128418
    8. '                        ' → logprob: -4.639643669128418
    9. ':' → logprob: -4.764643669128418
    10. ' ' → logprob: -4.889643669128418

Token 103: ' Extract' (ID: 39239)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0329869985580444
    2. ' #' → logprob: -1.1579869985580444
    3. ' border' → logprob: -2.407987117767334
    4. ' max' → logprob: -3.157987117767334
    5. ' boundary' → logprob: -3.282987117767334
    6. '#' → logprob: -3.657987117767334
    7. '                   ' → logprob: -3.782987117767334
    8. ' perimeter' → logprob: -4.407987117767334
    9. ' area' → logprob: -4.532987117767334
    10. ' water' → logprob: -4.532987117767334

Token 104: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.29473042488098145
    2. ' area' → logprob: -2.5447304248809814
    3. 'the' → logprob: -2.6697304248809814
    4. 'area' → logprob: -3.5447304248809814
    5. '                   ' → logprob: -3.6697304248809814
    6. ' elevation' → logprob: -4.419730186462402
    7. '<|end|>' → logprob: -4.419730186462402
    8. ' sub' → logprob: -5.419730186462402
    9. ' elevations' → logprob: -5.794730186462402
    10. '                    
' → logprob: -6.169730186462402

Token 105: ' rectangular' (ID: 79707)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.551124632358551
    2. ' sub' → logprob: -1.9261245727539062
    3. 'area' → logprob: -2.3011245727539062
    4. 'sub' → logprob: -3.1761245727539062
    5. ' rectangle' → logprob: -3.5511245727539062
    6. 'rect' → logprob: -3.6761245727539062
    7. 'rectangle' → logprob: -4.051124572753906
    8. ' #' → logprob: -5.176124572753906
    9. '#' → logprob: -5.176124572753906
    10. ' block' → logprob: -5.426124572753906

Token 106: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.03701741620898247
    2. ' block' → logprob: -3.912017345428467
    3. 'area' → logprob: -4.537017345428467
    4. ' region' → logprob: -6.162017345428467
    5. ' elevation' → logprob: -6.787017345428467
    6. ' rectangle' → logprob: -7.287017345428467
    7. ' sub' → logprob: -7.412017345428467
    8. ' section' → logprob: -8.537017822265625
    9. '                   ' → logprob: -8.787017822265625
    10. '_area' → logprob: -9.787017822265625

Token 107: ' boundaries' (ID: 35665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46681565046310425
    2. '<|end|>' → logprob: -1.591815710067749
    3. '                    ' → logprob: -3.091815710067749
    4. '                    
' → logprob: -3.091815710067749
    5. '                       ' → logprob: -3.716815710067749
    6. '                        
' → logprob: -4.34181547164917
    7. '<|end|>' → logprob: -4.34181547164917
    8. '               ' → logprob: -5.84181547164917
    9. ':' → logprob: -6.09181547164917
    10. ' ' → logprob: -6.09181547164917

Token 108: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30701202154159546
    2. '                   ' → logprob: -1.9320120811462402
    3. ' :' → logprob: -3.3070120811462402
    4. '                    ' → logprob: -3.5570120811462402
    5. '                    
' → logprob: -3.9320120811462402
    6. '                       ' → logprob: -5.18201208114624
    7. '<|end|>' → logprob: -5.30701208114624
    8. '                     
' → logprob: -5.80701208114624
    9. '\n' → logprob: -5.93201208114624
    10. '\' → logprob: -5.93201208114624

Token 109: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2079610824584961
    2. '                    
' → logprob: -2.082961082458496
    3. '                    ' → logprob: -3.332961082458496
    4. '                     
' → logprob: -4.582961082458496
    5. '<|end|>' → logprob: -5.582961082458496
    6. '                        
' → logprob: -5.707961082458496
    7. '                       ' → logprob: -6.332961082458496
    8. ':' → logprob: -7.082961082458496
    9. '               ' → logprob: -7.082961082458496
    10. '                   
' → logprob: -7.207961082458496

Token 110: ' #' (ID: 1069)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5375941395759583
    2. '                   ' → logprob: -1.7875940799713135
    3. 'area' → logprob: -2.5375940799713135
    4. ' min' → logprob: -2.6625940799713135
    5. ' heights' → logprob: -4.412594318389893
    6. ' border' → logprob: -4.662594318389893
    7. '                       ' → logprob: -4.912594318389893
    8. 'height' → logprob: -5.037594318389893
    9. ' height' → logprob: -5.287594318389893
    10. ' elevations' → logprob: -5.287594318389893

Token 111: ' Outer' (ID: 102576)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4410277009010315
    2. ' area' → logprob: -2.0660276412963867
    3. 'area' → logprob: -2.5660276412963867
    4. ' min' → logprob: -3.5660276412963867
    5. ' elevation' → logprob: -3.9410276412963867
    6. '                       ' → logprob: -4.066027641296387
    7. '                    ' → logprob: -4.441027641296387
    8. ' elevations' → logprob: -4.941027641296387
    9. ' border' → logprob: -5.066027641296387
    10. '                    
' → logprob: -5.191027641296387

Token 112: ' layer' (ID: 10261)
  Prédit: ' boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boundary' → logprob: -1.1253477334976196
    2. '_boundary' → logprob: -2.12534761428833
    3. 'boundary' → logprob: -2.25034761428833
    4. ' perimeter' → logprob: -2.62534761428833
    5. ' elevations' → logprob: -2.62534761428833
    6. ' boundaries' → logprob: -2.62534761428833
    7. ' border' → logprob: -3.37534761428833
    8. '_border' → logprob: -3.87534761428833
    9. ' edges' → logprob: -4.00034761428833
    10. ' elevation' → logprob: -4.25034761428833

Token 113: ' coordinates' (ID: 27933)
  Prédit: ' elevations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elevations' → logprob: -0.21624203026294708
    2. '                   ' → logprob: -3.0912420749664307
    3. ':' → logprob: -3.4662420749664307
    4. ' elevation' → logprob: -4.216241836547852
    5. ' boundaries' → logprob: -4.341241836547852
    6. ' min' → logprob: -4.341241836547852
    7. 'min' → logprob: -4.591241836547852
    8. ' =' → logprob: -4.591241836547852
    9. ' is' → logprob: -4.841241836547852
    10. ' heights' → logprob: -5.091241836547852

Token 114: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.706943690776825
    2. ':' → logprob: -0.956943690776825
    3. '<|end|>' → logprob: -2.5819437503814697
    4. '                    ' → logprob: -4.081943511962891
    5. '                    
' → logprob: -4.706943511962891
    6. ' :' → logprob: -4.956943511962891
    7. '<|end|>' → logprob: -5.081943511962891
    8. ' =' → logprob: -6.456943511962891
    9. '                       ' → logprob: -6.706943511962891
    10. '               ' → logprob: -7.206943511962891

Token 115: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8381319642066956
    2. '                    ' → logprob: -0.9631319642066956
    3. '                    
' → logprob: -2.338131904602051
    4. '                     
' → logprob: -3.838131904602051
    5. '<|end|>' → logprob: -4.088131904602051
    6. '                       ' → logprob: -4.213131904602051
    7. '                        
' → logprob: -5.213131904602051
    8. ' ' → logprob: -5.338131904602051
    9. '\' → logprob: -5.588131904602051
    10. ' \' → logprob: -5.963131904602051

Token 116: ' #' (ID: 1069)
  Prédit: ' outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' outer' → logprob: -0.8997154235839844
    2. 'outer' → logprob: -1.2747154235839844
    3. ' perimeter' → logprob: -2.3997154235839844
    4. ' border' → logprob: -3.2747154235839844
    5. ' min' → logprob: -3.5247154235839844
    6. 'min' → logprob: -3.6497154235839844
    7. ' top' → logprob: -4.024715423583984
    8. ' layer' → logprob: -4.024715423583984
    9. ' valid' → logprob: -4.149715423583984
    10. ' is' → logprob: -4.149715423583984

Token 117: ' top' (ID: 2344)
  Prédit: ' perimeter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perimeter' → logprob: -1.2577675580978394
    2. ' outer' → logprob: -1.3827675580978394
    3. ' border' → logprob: -2.007767677307129
    4. 'outer' → logprob: -2.132767677307129
    5. ' top' → logprob: -2.507767677307129
    6. ' min' → logprob: -3.382767677307129
    7. ' layer' → logprob: -4.132767677307129
    8. ' boundary' → logprob: -4.257767677307129
    9. 'border' → logprob: -4.257767677307129
    10. 'min' → logprob: -5.132767677307129

Token 118: ' row' (ID: 5225)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5640332698822021
    2. '_layer' → logprob: -1.5640332698822021
    3. '+' → logprob: -2.564033269882202
    4. '<|end|>' → logprob: -3.064033269882202
    5. ' ,' → logprob: -4.064033508300781
    6. 'layer' → logprob: -4.314033508300781
    7. '_row' → logprob: -4.439033508300781
    8. ' +' → logprob: -5.064033508300781
    9. '_border' → logprob: -5.314033508300781
    10. ' and' → logprob: -5.314033508300781

Token 119: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9670998454093933
    2. '+' → logprob: -1.592099905014038
    3. ',' → logprob: -1.967099905014038
    4. ' +' → logprob: -2.467099905014038
    5. ':' → logprob: -2.592099905014038
    6. '                    ' → logprob: -3.217099905014038
    7. '                    
' → logprob: -3.467099905014038
    8. '                     
' → logprob: -5.342099666595459
    9. '               ' → logprob: -5.467099666595459
    10. ' ,' → logprob: -5.467099666595459

Token 120: ' (' (ID: 350)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.1461428850889206
    2. 'top' → logprob: -2.0211429595947266
    3. ' range' → logprob: -7.021142959594727
    4. ' for' → logprob: -7.146142959594727
    5. '                    ' → logprob: -7.521142959594727
    6. '                   ' → logprob: -8.271142959594727
    7. '[top' → logprob: -8.521142959594727
    8. ' ' → logprob: -8.771142959594727
    9. '```' → logprob: -8.896142959594727
    10. '(top' → logprob: -9.396142959594727

Token 121: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3869072496891022
    2. ' top' → logprob: -1.1369072198867798
    3. '[top' → logprob: -10.886907577514648
    4. '	top' → logprob: -11.886907577514648
    5. ',' → logprob: -12.386907577514648
    6. '(top' → logprob: -12.886907577514648
    7. ' ' → logprob: -13.636907577514648
    8. '   ' → logprob: -13.886907577514648
    9. ')' → logprob: -14.511907577514648
    10. ' ,' → logprob: -14.886907577514648

Token 122: ',left' (ID: 192836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025300506502389908
    2. ' ,' → logprob: -3.9003005027770996
    3. ')' → logprob: -5.7753005027771
    4. ',right' → logprob: -7.5253005027771
    5. ',left' → logprob: -7.6503005027771
    6. ',row' → logprob: -9.150300979614258
    7. ' )' → logprob: -9.275300979614258
    8. '<|end|>' → logprob: -9.775300979614258
    9. '+' → logprob: -9.900300979614258
    10. ',:)' → logprob: -10.025300979614258

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45673608779907227
    2. ',' → logprob: -1.2067360877990723
    3. '),' → logprob: -2.9567360877990723
    4. '),(' → logprob: -5.456736087799072
    5. ' )' → logprob: -5.706736087799072
    6. ' ,' → logprob: -6.456736087799072
    7. ',right' → logprob: -6.706736087799072
    8. ')
' → logprob: -6.831736087799072
    9. '),
' → logprob: -7.206736087799072
    10. ' ),' → logprob: -7.206736087799072

Token 124: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.9197472333908081
    2. ' (' → logprob: -1.419747233390808
    3. 'right' → logprob: -1.669747233390808
    4. ' right' → logprob: -1.794747233390808
    5. '(top' → logprob: -5.419747352600098
    6. 'top' → logprob: -8.419747352600098
    7. ',right' → logprob: -8.794747352600098
    8. '[right' → logprob: -9.294747352600098
    9. ' top' → logprob: -9.419747352600098
    10. ' ' → logprob: -10.169747352600098

Token 126: 'top' (ID: 8169)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05506225675344467
    2. ' right' → logprob: -2.9300622940063477
    3. 'top' → logprob: -8.805062294006348
    4. ' top' → logprob: -11.055062294006348
    5. ',right' → logprob: -11.930062294006348
    6. '	right' → logprob: -12.430062294006348
    7. '(right' → logprob: -14.055062294006348
    8. 'bottom' → logprob: -14.305062294006348
    9. '[right' → logprob: -14.555062294006348
    10. ' ' → logprob: -14.555062294006348

Token 127: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.0038961567915976048
    2. ',' → logprob: -5.628896236419678
    3. ' ,' → logprob: -8.62889575958252
    4. 'right' → logprob: -9.12889575958252
    5. ' right' → logprob: -13.37889575958252
    6. '+' → logprob: -13.37889575958252
    7. '	right' → logprob: -13.62889575958252
    8. ':right' → logprob: -14.25389575958252
    9. ',j' → logprob: -14.62889575958252
    10. ')' → logprob: -14.62889575958252

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32041090726852417
    2. '+' → logprob: -1.320410966873169
    3. ' +' → logprob: -5.57041072845459
    4. ')
' → logprob: -6.07041072845459
    5. '),' → logprob: -7.94541072845459
    6. ' )' → logprob: -8.07041072845459
    7. '):' → logprob: -9.57041072845459
    8. ',' → logprob: -10.19541072845459
    9. '                   ' → logprob: -10.57041072845459
    10. '```' → logprob: -10.57041072845459

Token 129: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28555813431739807
    2. '                    
' → logprob: -1.9105581045150757
    3. '#' → logprob: -3.9105582237243652
    4. '                     
' → logprob: -3.9105582237243652
    5. '                    ' → logprob: -4.035558223724365
    6. '\' → logprob: -4.660558223724365
    7. '\n' → logprob: -5.410558223724365
    8. ')' → logprob: -5.535558223724365
    9. '<|end|>' → logprob: -5.660558223724365
    10. '```' → logprob: -5.660558223724365

Token 130: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20579077303409576
    2. '                    
' → logprob: -2.4557907581329346
    3. '                    ' → logprob: -3.8307907581329346
    4. '                     
' → logprob: -4.330790996551514
    5. '#' (adapté à ' #') → logprob: -4.705790996551514
    6. ' 
' → logprob: -4.955790996551514
    7. '<|end|>' → logprob: -5.080790996551514
    8. ')' → logprob: -5.205790996551514
    9. '\' → logprob: -5.330790996551514
    10. '\n' → logprob: -5.580790996551514

Token 131: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.20602236688137054
    2. 'bottom' → logprob: -1.9560223817825317
    3. '#' → logprob: -3.831022262573242
    4. '                   ' → logprob: -5.206022262573242
    5. ' top' → logprob: -5.456022262573242
    6. ' #' → logprob: -5.956022262573242
    7. 'top' → logprob: -6.081022262573242
    8. ' for' → logprob: -6.206022262573242
    9. ' ' → logprob: -6.331022262573242
    10. ' middle' → logprob: -6.456022262573242

Token 132: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.01489322166889906
    2. 'row' → logprob: -5.389893054962158
    3. ',row' → logprob: -5.514893054962158
    4. ',' → logprob: -6.014893054962158
    5. '_row' → logprob: -6.514893054962158
    6. ' ,' → logprob: -7.764893054962158
    7. ')' → logprob: -8.014893531799316
    8. '<|end|>' → logprob: -8.014893531799316
    9. '	row' → logprob: -8.389893531799316
    10. '[row' → logprob: -8.389893531799316

Token 133: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015091794542968273
    2. ',' → logprob: -5.015091896057129
    3. ' :' → logprob: -5.265091896057129
    4. '<|end|>' → logprob: -6.640091896057129
    5. ' (' → logprob: -7.265091896057129
    6. ')' → logprob: -8.015091896057129
    7. ' =' → logprob: -8.140091896057129
    8. ' ,' → logprob: -9.390091896057129
    9. '=' → logprob: -9.765091896057129
    10. '   ' → logprob: -9.765091896057129

Token 134: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18932470679283142
    2. '(top' → logprob: -1.8143247365951538
    3. '(bottom' → logprob: -4.689324855804443
    4. '(' → logprob: -8.564324378967285
    5. ' top' → logprob: -9.689324378967285
    6. '(right' → logprob: -11.189324378967285
    7. '`' → logprob: -11.314324378967285
    8. '[top' → logprob: -11.314324378967285
    9. ' bottom' → logprob: -11.939324378967285
    10. ')' → logprob: -12.064324378967285

Token 135: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.007977922447025776
    2. 'top' → logprob: -4.8829779624938965
    3. ' bottom' → logprob: -8.007977485656738
    4. 'right' → logprob: -10.757977485656738
    5. 'left' → logprob: -11.757977485656738
    6. 'bot' → logprob: -12.132977485656738
    7. ' top' → logprob: -12.632977485656738
    8. '(bottom' → logprob: -14.257977485656738
    9. ',' → logprob: -16.257978439331055
    10. '.bottom' → logprob: -16.632978439331055

Token 136: ',left' (ID: 192836)
  Prédit: ',left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',left' → logprob: -0.42789605259895325
    2. ',right' → logprob: -1.3028960227966309
    3. ',' → logprob: -2.677896022796631
    4. ',row' → logprob: -4.927896022796631
    5. ' ,' → logprob: -8.802896499633789
    6. '+' → logprob: -9.302896499633789
    7. ')' → logprob: -9.552896499633789
    8. ',line' → logprob: -9.802896499633789
    9. ',b' → logprob: -11.177896499633789
    10. 'left' → logprob: -12.177896499633789

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006657334160991013
    2. ' )' → logprob: -8.625665664672852
    3. ' to' → logprob: -9.250665664672852
    4. '+' → logprob: -9.375665664672852
    5. '#' → logprob: -9.625665664672852
    6. ',' → logprob: -9.625665664672852
    7. ')
' → logprob: -10.250665664672852
    8. '),' → logprob: -10.750665664672852
    9. '```' → logprob: -10.750665664672852
    10. 'to' → logprob: -11.000665664672852

Token 138: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020208530128002167
    2. ' to' → logprob: -4.645208358764648
    3. '<|end|>' → logprob: -5.520208358764648
    4. '                   ' → logprob: -6.270208358764648
    5. '               ' → logprob: -6.520208358764648
    6. '```' → logprob: -7.520208358764648
    7. ' )' → logprob: -7.770208358764648
    8. '+' → logprob: -7.895208358764648
    9. ' ' → logprob: -8.520208358764648
    10. ',' → logprob: -8.770208358764648

Token 139: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04257945716381073
    2. '(top' → logprob: -3.292579412460327
    3. '(bottom' → logprob: -5.417579650878906
    4. '(right' → logprob: -10.417579650878906
    5. ' top' → logprob: -10.542579650878906
    6. '(' → logprob: -11.167579650878906
    7. 'top' → logprob: -12.417579650878906
    8. '[top' → logprob: -12.917579650878906
    9. '(bot' → logprob: -13.042579650878906
    10. ' bottom' → logprob: -13.167579650878906

Token 140: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.02244558185338974
    2. 'top' → logprob: -3.8974456787109375
    3. ' bottom' → logprob: -6.5224456787109375
    4. '(bottom' → logprob: -8.147445678710938
    5. 'right' → logprob: -9.522445678710938
    6. ' top' → logprob: -10.022445678710938
    7. 'bot' → logprob: -11.272445678710938
    8. '(top' → logprob: -11.522445678710938
    9. 'left' → logprob: -13.897445678710938
    10. ' right' → logprob: -14.772445678710938

Token 141: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.026747358962893486
    2. 'right' → logprob: -3.776747465133667
    3. ',' → logprob: -6.276747226715088
    4. ',row' → logprob: -7.151747226715088
    5. ')' → logprob: -7.526747226715088
    6. '+' → logprob: -8.776747703552246
    7. '[right' → logprob: -10.026747703552246
    8. ',r' → logprob: -11.151747703552246
    9. '_right' → logprob: -11.526747703552246
    10. ':right' → logprob: -11.651747703552246

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001319881179369986
    2. ')
' → logprob: -6.751319885253906
    3. '                   ' → logprob: -9.251319885253906
    4. '#' → logprob: -10.751319885253906
    5. ' )' → logprob: -11.501319885253906
    6. '   ' → logprob: -12.376319885253906
    7. '               ' → logprob: -12.501319885253906
    8. '```' → logprob: -12.626319885253906
    9. ')#' → logprob: -13.251319885253906
    10. ')

' → logprob: -13.751319885253906

Token 143: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029185308143496513
    2. '                    
' → logprob: -4.1541852951049805
    3. '                    ' → logprob: -5.1541852951049805
    4. '#' → logprob: -7.1541852951049805
    5. '               ' → logprob: -7.1541852951049805
    6. '                       ' → logprob: -7.1541852951049805
    7. '```' → logprob: -7.2791852951049805
    8. '<|end|>' → logprob: -7.4041852951049805
    9. '\' → logprob: -7.5291852951049805
    10. ' ' → logprob: -7.7791852951049805

Token 144: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26896870136260986
    2. '#' (adapté à ' #') → logprob: -2.6439685821533203
    3. ' #' → logprob: -2.7689685821533203
    4. '                    
' → logprob: -3.3939685821533203
    5. '                    ' → logprob: -4.01896858215332
    6. '```' → logprob: -4.89396858215332
    7. '                     
' → logprob: -5.39396858215332
    8. 'height' → logprob: -5.76896858215332
    9. ' 
' → logprob: -5.76896858215332
    10. '                       ' → logprob: -5.89396858215332

Token 145: ' left' (ID: 3561)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.5554102659225464
    2. '#' → logprob: -1.5554102659225464
    3. 'left' → logprob: -2.805410385131836
    4. 'rows' → logprob: -3.555410385131836
    5. ' #' → logprob: -4.180410385131836
    6. '                   ' → logprob: -4.180410385131836
    7. 'height' → logprob: -4.305410385131836
    8. 'side' → logprob: -4.305410385131836
    9. ' perimeter' → logprob: -4.430410385131836
    10. ' inner' → logprob: -4.805410385131836

Token 146: ' column' (ID: 6000)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.540650725364685
    2. ',' → logprob: -2.0406508445739746
    3. ' column' → logprob: -2.0406508445739746
    4. ' ' → logprob: -2.4156508445739746
    5. ')' → logprob: -3.0406508445739746
    6. ' for' → logprob: -3.1656508445739746
    7. 'row' → logprob: -3.2906508445739746
    8. '<|end|>' → logprob: -3.2906508445739746
    9. '_row' → logprob: -3.5406508445739746
    10. '<|end|>' → logprob: -3.5406508445739746

Token 147: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031083116307854652
    2. ' =' → logprob: -4.406083106994629
    3. '=' → logprob: -5.156083106994629
    4. ' (' → logprob: -5.406083106994629
    5. ' :' → logprob: -6.281083106994629
    6. '                   ' → logprob: -6.406083106994629
    7. ',' → logprob: -6.656083106994629
    8. ')' → logprob: -6.906083106994629
    9. '(' → logprob: -8.031083106994629
    10. 'from' → logprob: -8.031083106994629

Token 148: ' (' (ID: 350)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.48127833008766174
    2. '(top' → logprob: -1.8562783002853394
    3. ' (' → logprob: -1.9812783002853394
    4. 'top' → logprob: -2.981278419494629
    5. ' range' → logprob: -4.231278419494629
    6. ' for' → logprob: -4.856278419494629
    7. 'range' → logprob: -4.981278419494629
    8. ' left' → logprob: -6.231278419494629
    9. '[top' → logprob: -6.606278419494629
    10. '(' → logprob: -6.606278419494629

Token 149: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0004331725067459047
    2. ' top' → logprob: -7.875432968139648
    3. '(top' → logprob: -10.000432968139648
    4. '[top' → logprob: -12.000432968139648
    5. 'range' → logprob: -14.500432968139648
    6. ')' → logprob: -14.625432968139648
    7. 'bottom' → logprob: -15.375432968139648
    8. '	top' → logprob: -15.625432968139648
    9. 't' → logprob: -16.62543296813965
    10. '   ' → logprob: -17.25043296813965

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3197750747203827
    2. ' +' → logprob: -1.319775104522705
    3. ',' → logprob: -5.194775104522705
    4. ' ,' → logprob: -7.444775104522705
    5. ',left' → logprob: -8.819774627685547
    6. ',right' → logprob: -9.694774627685547
    7. '   ' → logprob: -10.319774627685547
    8. ' plus' → logprob: -10.444774627685547
    9. ' ' → logprob: -10.569774627685547
    10. ')' → logprob: -10.569774627685547

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036411690525710583
    2. ' ' → logprob: -5.628641128540039
    3. '+' → logprob: -11.253641128540039
    4. ',' → logprob: -11.378641128540039
    5. '   ' → logprob: -12.128641128540039
    6. ' ,' → logprob: -12.378641128540039
    7. ')' → logprob: -12.878641128540039
    8. ' +' → logprob: -13.503641128540039
    9. '```' → logprob: -13.503641128540039
    10. '2' → logprob: -14.628641128540039

Token 152: ',left' (ID: 192836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011415957473218441
    2. ' ,' → logprob: -4.636415958404541
    3. '<|end|>' → logprob: -6.761415958404541
    4. ')' → logprob: -7.886415958404541
    5. ' to' → logprob: -10.386415481567383
    6. ',column' → logprob: -10.886415481567383
    7. ',right' → logprob: -11.136415481567383
    8. ',to' → logprob: -11.386415481567383
    9. '<|end|>' → logprob: -12.011415481567383
    10. ',left' → logprob: -12.386415481567383

Token 153: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7705099582672119
    2. ',' → logprob: -1.520509958267212
    3. ' +' → logprob: -1.520509958267212
    4. ' ,' → logprob: -2.895509958267212
    5. ')' → logprob: -3.645509958267212
    6. ' ' → logprob: -5.020509719848633
    7. '   ' → logprob: -5.270509719848633
    8. ' )' → logprob: -6.020509719848633
    9. '<|end|>' → logprob: -7.020509719848633
    10. '    ' → logprob: -7.145509719848633

Token 154: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9119283556938171
    2. '+' → logprob: -1.786928415298462
    3. '<|end|>' → logprob: -1.911928415298462
    4. ':' → logprob: -2.911928415298462
    5. ' to' → logprob: -2.911928415298462
    6. ')' → logprob: -3.411928415298462
    7. 'for' → logprob: -3.536928415298462
    8. ' for' → logprob: -3.661928415298462
    9. ' ,' → logprob: -3.911928415298462
    10. '                   ' → logprob: -4.286928176879883

Token 155: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.049050573259592056
    2. '(bottom' → logprob: -3.0490505695343018
    3. '(' → logprob: -7.799050807952881
    4. ' bottom' → logprob: -11.174050331115723
    5. '(top' → logprob: -11.174050331115723
    6. '(b' → logprob: -11.424050331115723
    7. '(bot' → logprob: -12.424050331115723
    8. '(right' → logprob: -12.674050331115723
    9. 'bottom' → logprob: -13.174050331115723
    10. ' ' → logprob: -14.049050331115723

Token 156: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.008728263899683952
    2. ' bottom' → logprob: -4.75872802734375
    3. '(bottom' → logprob: -9.13372802734375
    4. '   ' → logprob: -12.75872802734375
    5. ' (' → logprob: -14.63372802734375
    6. 'top' → logprob: -15.00872802734375
    7. '```' → logprob: -15.13372802734375
    8. 'bot' → logprob: -15.13372802734375
    9. '           ' → logprob: -15.38372802734375
    10. '(' → logprob: -15.63372802734375

Token 157: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023590877652168274
    2. '-' → logprob: -4.023591041564941
    3. ' +' → logprob: -6.023591041564941
    4. ',' → logprob: -6.273591041564941
    5. ',right' → logprob: -7.148591041564941
    6. ' -' → logprob: -8.773591041564941
    7. ')' → logprob: -9.898591041564941
    8. '<|end|>' → logprob: -10.273591041564941
    9. '```' → logprob: -10.648591041564941
    10. '<|end|>' → logprob: -10.773591041564941

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -10.62502670288086
    3. 'left' → logprob: -13.50002670288086
    4. '+' → logprob: -15.50002670288086
    5. '   ' → logprob: -15.50002670288086
    6. '```' → logprob: -15.50002670288086
    7. '0' → logprob: -16.12502670288086
    8. 'right' → logprob: -16.12502670288086
    9. ')' → logprob: -16.25002670288086
    10. '<|end|>' → logprob: -16.81252670288086

Token 159: ',left' (ID: 192836)
  Prédit: ',left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',left' → logprob: -0.7094275951385498
    2. ',right' → logprob: -0.9594275951385498
    3. ',' → logprob: -2.08442759513855
    4. '+' → logprob: -8.709427833557129
    5. ',column' → logprob: -8.834427833557129
    6. ' ,' → logprob: -9.584427833557129
    7. ',end' → logprob: -10.459427833557129
    8. ',w' → logprob: -10.709427833557129
    9. ',b' → logprob: -11.209427833557129
    10. ')' → logprob: -11.334427833557129

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01880868338048458
    2. '):' → logprob: -4.268808841705322
    3. '                   ' → logprob: -5.893808841705322
    4. ' )' → logprob: -6.893808841705322
    5. '):
' → logprob: -7.893808841705322
    6. '               ' → logprob: -9.018808364868164
    7. '#' → logprob: -9.393808364868164
    8. ')
' → logprob: -9.893808364868164
    9. ',' → logprob: -10.018808364868164
    10. '   ' → logprob: -10.393808364868164

Token 161: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17438504099845886
    2. '                    ' → logprob: -2.5493850708007812
    3. '<|end|>' → logprob: -3.2993850708007812
    4. ' ' → logprob: -3.7993850708007812
    5. '                    
' → logprob: -4.799385070800781
    6. '               ' → logprob: -6.049385070800781
    7. '                       ' → logprob: -6.299385070800781
    8. '                ' → logprob: -6.424385070800781
    9. ')' → logprob: -6.674385070800781
    10. '                  ' → logprob: -6.924385070800781

Token 162: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0283809900283813
    2. ' ' → logprob: -1.1533809900283813
    3. '                    ' → logprob: -1.2783809900283813
    4. '#' (adapté à ' #') → logprob: -4.903380870819092
    5. '                     
' → logprob: -5.153380870819092
    6. ')' → logprob: -5.153380870819092
    7. '                     ' → logprob: -5.403380870819092
    8. '                       ' → logprob: -5.653380870819092
    9. '                    
' → logprob: -5.778380870819092
    10. '                ' → logprob: -6.153380870819092

Token 163: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.10815806686878204
    2. ' ' → logprob: -2.9831581115722656
    3. 'right' → logprob: -3.7331581115722656
    4. '                    ' → logprob: -4.483158111572266
    5. ' ' → logprob: -5.733158111572266
    6. '                   ' → logprob: -5.858158111572266
    7. ' left' → logprob: -6.233158111572266
    8. ' (' → logprob: -6.358158111572266
    9. '            ' → logprob: -6.358158111572266
    10. '    ' → logprob: -6.733158111572266

Token 164: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.6874040365219116
    2. '_column' → logprob: -0.9374040365219116
    3. ',' → logprob: -3.062404155731201
    4. '_' → logprob: -4.437404155731201
    5. 'column' → logprob: -4.562404155731201
    6. ',column' → logprob: -4.687404155731201
    7. ' ' → logprob: -5.187404155731201
    8. ' ,' → logprob: -5.562404155731201
    9. '_col' → logprob: -5.687404155731201
    10. ')' → logprob: -5.937404155731201

Token 165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005189874675124884
    2. ' :' → logprob: -5.380189895629883
    3. ',' → logprob: -9.005189895629883
    4. ' (' → logprob: -9.380189895629883
    5. ':right' → logprob: -9.630189895629883
    6. ':left' → logprob: -9.880189895629883
    7. ' =' → logprob: -10.630189895629883
    8. ')' → logprob: -10.755189895629883
    9. '):' → logprob: -10.755189895629883
    10. '   ' → logprob: -11.130189895629883

Token 166: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.32035717368125916
    2. '(top' → logprob: -1.3203572034835815
    3. '(' → logprob: -5.070357322692871
    4. '"' → logprob: -8.945357322692871
    5. '(bottom' → logprob: -9.070357322692871
    6. '(t' → logprob: -9.195357322692871
    7. ''' → logprob: -9.195357322692871
    8. ' top' → logprob: -9.320357322692871
    9. '(space' → logprob: -10.445357322692871
    10. '[top' → logprob: -10.570357322692871

Token 167: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00027087211492471397
    2. ' top' → logprob: -8.25027084350586
    3. '(top' → logprob: -11.87527084350586
    4. 'bottom' → logprob: -13.00027084350586
    5. '[top' → logprob: -15.25027084350586
    6. '	top' → logprob: -16.62527084350586
    7. '   ' → logprob: -17.75027084350586
    8. 'right' → logprob: -19.12527084350586
    9. ' bottom' → logprob: -19.37527084350586
    10. ')' → logprob: -19.50027084350586

Token 168: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006351164192892611
    2. ' +' → logprob: -7.375635147094727
    3. ',' → logprob: -12.000635147094727
    4. '+,' → logprob: -14.000635147094727
    5. '+
' → logprob: -14.750635147094727
    6. ' ' → logprob: -15.500635147094727
    7. '1' → logprob: -15.625635147094727
    8. ',right' → logprob: -15.625635147094727
    9. ' ,' → logprob: -16.250635147094727
    10. ')' → logprob: -16.500635147094727

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002601438027340919
    2. 'right' → logprob: -8.500260353088379
    3. ' ' → logprob: -10.250260353088379
    4. '+' → logprob: -11.125260353088379
    5. ',right' → logprob: -13.750260353088379
    6. '```' → logprob: -13.750260353088379
    7. '(right' → logprob: -14.125260353088379
    8. ' right' → logprob: -14.250260353088379
    9. ')' → logprob: -14.625260353088379
    10. '-' → logprob: -14.875260353088379

Token 170: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.0008378617349080741
    2. ',' → logprob: -7.375837802886963
    3. ',left' → logprob: -8.500838279724121
    4. ' ,' → logprob: -11.875838279724121
    5. '   ' → logprob: -16.000837326049805
    6. '```' → logprob: -16.125837326049805
    7. ',column' → logprob: -16.125837326049805
    8. ',user' → logprob: -16.250837326049805
    9. '	right' → logprob: -16.250837326049805
    10. '[right' → logprob: -16.500837326049805

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6027749180793762
    2. ',right' → logprob: -0.9777749180793762
    3. ',' → logprob: -3.1027748584747314
    4. ',left' → logprob: -3.4777748584747314
    5. '):' → logprob: -8.602774620056152
    6. 'right' → logprob: -8.977774620056152
    7. ' ,' → logprob: -9.102774620056152
    8. ' )' → logprob: -9.602774620056152
    9. '):
' → logprob: -10.102774620056152
    10. '   ' → logprob: -10.227774620056152

Token 172: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10911034047603607
    2. ',left' → logprob: -2.6091103553771973
    3. ',right' → logprob: -3.7341103553771973
    4. ')' → logprob: -6.359110355377197
    5. ' ,' → logprob: -6.484110355377197
    6. 'for' → logprob: -6.984110355377197
    7. ' for' → logprob: -7.359110355377197
    8. 'left' → logprob: -8.109109878540039
    9. ',w' → logprob: -8.234109878540039
    10. 'right' → logprob: -9.609109878540039

Token 173: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693167507648468
    2. '(bottom' → logprob: -0.693167507648468
    3. '(right' → logprob: -12.193167686462402
    4. '(top' → logprob: -12.193167686462402
    5. '(bot' → logprob: -12.568167686462402
    6. '(b' → logprob: -13.318167686462402
    7. ' bottom' → logprob: -13.318167686462402
    8. ' ' → logprob: -14.068167686462402
    9. 'bottom' → logprob: -14.443167686462402
    10. '   ' → logprob: -14.443167686462402

Token 174: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00339551386423409
    2. ' bottom' → logprob: -6.0033955574035645
    3. '(bottom' → logprob: -7.0033955574035645
    4. 'right' → logprob: -11.628395080566406
    5. 'bot' → logprob: -14.128395080566406
    6. ' (' → logprob: -14.878395080566406
    7. 'top' → logprob: -15.003395080566406
    8. '```' → logprob: -16.003395080566406
    9. 'middle' → logprob: -17.128395080566406
    10. 'b' → logprob: -17.378395080566406

Token 175: '-' (ID: 12)
  Prédit: ',right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.07622509449720383
    2. '-' → logprob: -3.2012250423431396
    3. '+' → logprob: -3.7012250423431396
    4. ')' → logprob: -5.576225280761719
    5. ',' → logprob: -5.701225280761719
    6. '```' → logprob: -8.576225280761719
    7. '-right' → logprob: -8.701225280761719
    8. '1' → logprob: -8.951225280761719
    9. '[right' → logprob: -9.201225280761719
    10. ',left' → logprob: -9.826225280761719

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008622690802440047
    2. ' ' → logprob: -7.125862121582031
    3. '-' → logprob: -10.250862121582031
    4. '   ' → logprob: -11.875862121582031
    5. '```' → logprob: -12.250862121582031
    6. '2' → logprob: -13.250862121582031
    7. ')' → logprob: -13.250862121582031
    8. '0' → logprob: -13.875862121582031
    9. '  ' → logprob: -14.063362121582031
    10. 'right' → logprob: -14.188362121582031

Token 177: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.0002467966405674815
    2. ',' → logprob: -8.37524700164795
    3. ',left' → logprob: -12.25024700164795
    4. 'right' → logprob: -12.37524700164795
    5. ' ,' → logprob: -12.50024700164795
    6. '[right' → logprob: -13.50024700164795
    7. ')' → logprob: -14.25024700164795
    8. ',r' → logprob: -14.87524700164795
    9. '	right' → logprob: -15.25024700164795
    10. '```' → logprob: -15.50024700164795

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7013335227966309
    2. '):' → logprob: -0.7013335227966309
    3. '):
' → logprob: -4.951333522796631
    4. '                   ' → logprob: -7.076333522796631
    5. '):

' → logprob: -9.701333999633789
    6. ')
' → logprob: -10.076333999633789
    7. ' )' → logprob: -10.201333999633789
    8. '   ' → logprob: -10.701333999633789
    9. '               ' → logprob: -10.951333999633789
    10. ' ):' → logprob: -10.951333999633789

Token 179: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13319134712219238
    2. '                    
' → logprob: -2.6331913471221924
    3. '                    ' → logprob: -4.133191108703613
    4. '                     
' → logprob: -4.258191108703613
    5. '                       ' → logprob: -4.883191108703613
    6. '                        
' → logprob: -5.008191108703613
    7. ':' → logprob: -6.383191108703613
    8. '                   
' → logprob: -6.758191108703613
    9. '               ' → logprob: -7.008191108703613
    10. ' :' → logprob: -8.008191108703613

Token 180: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.8420789241790771
    2. 'min' → logprob: -2.092078924179077
    3. ' min' → logprob: -2.092078924179077
    4. '                   ' → logprob: -2.342078924179077
    5. ' max' → logprob: -2.467078924179077
    6. 'max' → logprob: -2.467078924179077
    7. '
' → logprob: -2.717078924179077
    8. ' #' → logprob: -3.592078924179077
    9. '                       ' → logprob: -3.592078924179077
    10. 'border' → logprob: -3.592078924179077

Token 181: ' Inner' (ID: 51587)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8694095611572266
    2. '#' → logprob: -2.1194095611572266
    3. 'border' → logprob: -2.1194095611572266
    4. 'boundary' → logprob: -2.9944095611572266
    5. 'he' → logprob: -3.1194095611572266
    6. ' min' → logprob: -3.4944095611572266
    7. 'layers' → logprob: -3.4944095611572266
    8. 'outer' → logprob: -3.6194095611572266
    9. 'inner' → logprob: -3.7444095611572266
    10. 'layer' → logprob: -3.9944095611572266

Token 182: ' cells' (ID: 11242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6308012008666992
    2. '_capacity' → logprob: -1.3808012008666992
    3. '_layer' → logprob: -2.630801200866699
    4. '_depth' → logprob: -3.130801200866699
    5. '_height' → logprob: -3.130801200866699
    6. '_area' → logprob: -3.880801200866699
    7. '_he' → logprob: -4.755801200866699
    8. '_rows' → logprob: -5.255801200866699
    9. '_max' → logprob: -5.380801200866699
    10. '_e' → logprob: -5.755801200866699

Token 183: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4907921254634857
    2. ' =' → logprob: -2.4907920360565186
    3. '                    ' → logprob: -2.4907920360565186
    4. ':' → logprob: -2.8657920360565186
    5. '                    
' → logprob: -3.1157920360565186
    6. '<|end|>' → logprob: -3.9907920360565186
    7. '#' → logprob: -4.615792274475098
    8. '                       ' → logprob: -4.740792274475098
    9. '               ' → logprob: -4.865792274475098
    10. '                ' → logprob: -4.865792274475098

Token 184: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0275318622589111
    2. ' inner' → logprob: -1.0275318622589111
    3. 'inner' → logprob: -2.152531862258911
    4. '                    ' → logprob: -3.777531862258911
    5. '                   ' → logprob: -4.027531623840332
    6. ' ' → logprob: -4.027531623840332
    7. ' min' → logprob: -4.277531623840332
    8. ' continue' → logprob: -4.527531623840332
    9. ' capacity' → logprob: -4.527531623840332
    10. 'max' → logprob: -4.777531623840332

Token 185: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.006730645429342985
    2. ' top' → logprob: -5.006730556488037
    3. '(top' → logprob: -11.631731033325195
    4. '[top' → logprob: -12.756731033325195
    5. 'for' → logprob: -13.256731033325195
    6. ')' → logprob: -14.256731033325195
    7. '	top' → logprob: -14.881731033325195
    8. ' for' → logprob: -15.381731033325195
    9. 'i' → logprob: -15.756731033325195
    10. '   ' → logprob: -16.131731033325195

Token 186: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023260504007339478
    2. ' +' → logprob: -3.7732605934143066
    3. ')' → logprob: -12.398260116577148
    4. ')+' → logprob: -12.773260116577148
    5. '   ' → logprob: -13.023260116577148
    6. ',' → logprob: -13.148260116577148
    7. '+)' → logprob: -14.023260116577148
    8. '+
' → logprob: -14.898260116577148
    9. '＋' → logprob: -15.210760116577148
    10. '<|end|>' → logprob: -15.523260116577148

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005685480311512947
    2. '2' → logprob: -5.255685329437256
    3. '3' → logprob: -8.005685806274414
    4. ' ' → logprob: -9.130685806274414
    5. '   ' → logprob: -12.130685806274414
    6. '```' → logprob: -13.005685806274414
    7. '    ' → logprob: -14.693185806274414
    8. '  ' → logprob: -15.255685806274414
    9. ')' → logprob: -15.255685806274414
    10. '+' → logprob: -15.318185806274414

Token 188: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0100720738992095
    2. ' ,' → logprob: -5.635072231292725
    3. ',right' → logprob: -6.010072231292725
    4. ',left' → logprob: -6.635072231292725
    5. '<|end|>' → logprob: -7.010072231292725
    6. ')' → logprob: -7.510072231292725
    7. '+' → logprob: -7.635072231292725
    8. ',j' → logprob: -8.510071754455566
    9. ',next' → logprob: -9.385071754455566
    10. ',row' → logprob: -9.385071754455566

Token 189: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0788913294672966
    2. ' bottom' → logprob: -2.5788912773132324
    3. '(bottom' → logprob: -13.57889175415039
    4. ' ' → logprob: -15.82889175415039
    5. '```' → logprob: -17.07889175415039
    6. 'bot' → logprob: -17.82889175415039
    7. 'Bottom' → logprob: -17.95389175415039
    8. 'top' → logprob: -17.95389175415039
    9. '_bottom' → logprob: -18.07889175415039
    10. '   ' → logprob: -18.20389175415039

Token 190: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0371304526925087
    2. ' -' → logprob: -3.912130355834961
    3. '+' → logprob: -4.162130355834961
    4. '1' → logprob: -8.162130355834961
    5. ',' → logprob: -8.537130355834961
    6. ')' → logprob: -8.912130355834961
    7. '   ' → logprob: -9.412130355834961
    8. ' +' → logprob: -9.662130355834961
    9. ' ' → logprob: -10.287130355834961
    10. ' ,' → logprob: -11.287130355834961

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '-' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.500041007995605
    4. '2' → logprob: -15.500041007995605
    5. '```' → logprob: -15.500041007995605
    6. ' -' → logprob: -16.125041961669922
    7. 'left' → logprob: -16.500041961669922
    8. 'bottom' → logprob: -16.875041961669922
    9. 'top' → logprob: -17.187541961669922
    10. 'minus' → logprob: -17.250041961669922

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026121633127331734
    2. ' ,' → logprob: -6.127612113952637
    3. ')' → logprob: -8.627612113952637
    4. ',
' → logprob: -9.502612113952637
    5. '),(' → logprob: -9.502612113952637
    6. '),' → logprob: -10.002612113952637
    7. ',j' → logprob: -11.627612113952637
    8. '<|end|>' → logprob: -11.627612113952637
    9. ',column' → logprob: -12.377612113952637
    10. ',to' → logprob: -13.002612113952637

Token 193: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16025032103061676
    2. ' left' → logprob: -1.9102503061294556
    3. '                   ' → logprob: -11.285250663757324
    4. '	left' → logprob: -12.660250663757324
    5. '(left' → logprob: -13.285250663757324
    6. '   ' → logprob: -13.535250663757324
    7. '                           ' → logprob: -13.785250663757324
    8. ',left' → logprob: -13.910250663757324
    9. ' ' → logprob: -14.035250663757324
    10. ')' → logprob: -14.160250663757324

Token 194: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014164566993713379
    2. ' +' → logprob: -4.264164447784424
    3. ')+' → logprob: -14.639164924621582
    4. '+
' → logprob: -15.389164924621582
    5. ')' → logprob: -16.139163970947266
    6. '+)' → logprob: -16.139163970947266
    7. '＋' → logprob: -16.514163970947266
    8. '   ' → logprob: -16.639163970947266
    9. '1' → logprob: -17.014163970947266
    10. ' plus' → logprob: -17.264163970947266

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.184812031686306e-05
    2. '+' → logprob: -9.625082015991211
    3. ' ' → logprob: -11.250082015991211
    4. ')' → logprob: -14.125082015991211
    5. ' +' → logprob: -14.250082015991211
    6. '   ' → logprob: -14.500082015991211
    7. '```' → logprob: -14.500082015991211
    8. '`' → logprob: -17.31258201599121
    9. '<|end|>' → logprob: -17.68758201599121
    10. ')+' → logprob: -17.75008201599121

Token 196: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0762760117650032
    2. ' to' → logprob: -3.2012760639190674
    3. 'to' → logprob: -3.9512760639190674
    4. ')' → logprob: -5.201275825500488
    5. ',to' → logprob: -5.326275825500488
    6. ' ,' → logprob: -6.201275825500488
    7. '+' → logprob: -7.076275825500488
    8. '<|end|>' → logprob: -9.076275825500488
    9. ',right' → logprob: -10.451275825500488
    10. ',
' → logprob: -10.826275825500488

Token 197: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014164102263748646
    2. ' right' → logprob: -4.264163970947266
    3. '(right' → logprob: -15.014163970947266
    4. '	right' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.264163970947266
    6. '   ' → logprob: -16.889163970947266
    7. '[right' → logprob: -17.889163970947266
    8. '
' → logprob: -18.014163970947266
    9. ',right' → logprob: -19.014163970947266
    10. '```' → logprob: -19.639163970947266

Token 198: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007735815830528736
    2. '+' → logprob: -4.882735729217529
    3. ' -' → logprob: -9.132736206054688
    4. ')' → logprob: -11.007736206054688
    5. '1' → logprob: -13.632736206054688
    6. ' +' → logprob: -13.632736206054688
    7. '```' → logprob: -14.007736206054688
    8. '   ' → logprob: -15.007736206054688
    9. ' ' → logprob: -15.007736206054688
    10. '−' → logprob: -15.382736206054688

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '-' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.000001907348633
    5. ')' → logprob: -16.125001907348633
    6. '```' → logprob: -16.500001907348633
    7. '
' → logprob: -16.875001907348633
    8. '۱' → logprob: -18.812501907348633
    9. '  ' → logprob: -18.875001907348633
    10. '' → logprob: -18.875001907348633

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04984613135457039
    2. '):' → logprob: -3.1748461723327637
    3. '                   ' → logprob: -5.299846172332764
    4. '):
' → logprob: -7.049846172332764
    5. ' )' → logprob: -7.424846172332764
    6. ')
' → logprob: -8.799845695495605
    7. '                    ' → logprob: -10.174845695495605
    8. '               ' → logprob: -10.424845695495605
    9. '                       ' → logprob: -10.424845695495605
    10. '                           ' → logprob: -11.049845695495605

Token 201: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8281934857368469
    2. ':' → logprob: -1.3281934261322021
    3. ' :' → logprob: -2.203193426132202
    4. '                    
' → logprob: -2.453193426132202
    5. '                    ' → logprob: -3.703193426132202
    6. '                       ' → logprob: -4.328193664550781
    7. '                     
' → logprob: -4.328193664550781
    8. '                        
' → logprob: -4.453193664550781
    9. ':
' → logprob: -4.953193664550781
    10. ' :
' → logprob: -5.578193664550781

Token 202: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020710516721010208
    2. '                    
' → logprob: -5.270710468292236
    3. ' min' → logprob: -5.395710468292236
    4. '                       ' → logprob: -6.645710468292236
    5. ' max' → logprob: -6.770710468292236
    6. 'height' → logprob: -6.770710468292236
    7. 'min' → logprob: -6.770710468292236
    8. ' heights' → logprob: -6.895710468292236
    9. ' #' → logprob: -7.145710468292236
    10. '#' → logprob: -7.270710468292236

Token 203: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7531549334526062
    2. 'border' → logprob: -1.878154993057251
    3. 'outer' → logprob: -2.003154993057251
    4. ' min' → logprob: -2.503154993057251
    5. '#' (adapté à ' #') → logprob: -3.128154993057251
    6. '                   ' → logprob: -3.753154993057251
    7. ' outer' → logprob: -4.003154754638672
    8. ' #' → logprob: -4.253154754638672
    9. 'boundary' → logprob: -4.503154754638672
    10. 'max' → logprob: -4.503154754638672

Token 204: ' Find' (ID: 9764)
  Prédit: 'border'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'border' → logprob: -0.9086384177207947
    2. 'min' → logprob: -1.4086384773254395
    3. 'outer' → logprob: -2.1586384773254395
    4. '#' → logprob: -2.1586384773254395
    5. 'boundary' → logprob: -2.7836384773254395
    6. 'max' → logprob: -3.9086384773254395
    7. 'per' → logprob: -4.6586384773254395
    8. 'valid' → logprob: -5.4086384773254395
    9. 'corn' → logprob: -5.5336384773254395
    10. 'bound' → logprob: -5.9086384773254395

Token 205: ' elevations' (ID: 192928)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2293892651796341
    2. ' max' → logprob: -2.354389190673828
    3. 'min' → logprob: -2.479389190673828
    4. 'max' → logprob: -4.854389190673828
    5. ' outer' → logprob: -5.229389190673828
    6. ' minimum' → logprob: -5.979389190673828
    7. ' border' → logprob: -6.229389190673828
    8. ' boundary' → logprob: -6.479389190673828
    9. 'border' → logprob: -7.104389190673828
    10. '_min' → logprob: -7.229389190673828

Token 206: ' of' (ID: 328)
  Prédit: '[top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.059315800666809
    2. ' =' → logprob: -1.684315800666809
    3. '_top' → logprob: -1.809315800666809
    4. '_min' → logprob: -2.9343156814575195
    5. ' on' → logprob: -3.5593156814575195
    6. ' at' → logprob: -3.6843156814575195
    7. '=' → logprob: -3.8093156814575195
    8. '_on' → logprob: -3.8093156814575195
    9. '_in' → logprob: -3.9343156814575195
    10. 'top' → logprob: -4.1843156814575195

Token 207: ' outer' (ID: 25982)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0927189588546753
    2. ' outer' → logprob: -1.4677189588546753
    3. 'the' → logprob: -1.8427189588546753
    4. 'outer' → logprob: -2.592719078063965
    5. 'top' → logprob: -2.842719078063965
    6. ' top' → logprob: -2.967719078063965
    7. ' all' → logprob: -3.342719078063965
    8. ' cells' → logprob: -4.092719078063965
    9. 'all' → logprob: -4.717719078063965
    10. ' perimeter' → logprob: -4.967719078063965

Token 208: ' cells' (ID: 11242)
  Prédit: '_layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_layer' → logprob: -0.7232434153556824
    2. '_cells' → logprob: -1.4732434749603271
    3. '_' → logprob: -2.973243474960327
    4. '_rows' → logprob: -3.098243474960327
    5. '_top' → logprob: -3.348243474960327
    6. '_outer' → logprob: -3.473243474960327
    7. '_max' → logprob: -3.723243474960327
    8. '_coords' → logprob: -4.348243236541748
    9. '_he' → logprob: -4.348243236541748
    10. '_boundary' → logprob: -4.348243236541748

Token 209: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07676785439252853
    2. '                    
' → logprob: -2.951767921447754
    3. ' outer' → logprob: -4.951767921447754
    4. ':' → logprob: -5.326767921447754
    5. 'outer' → logprob: -5.451767921447754
    6. '                    ' → logprob: -6.701767921447754
    7. '               ' → logprob: -7.701767921447754
    8. ',' → logprob: -7.826767921447754
    9. ' =' → logprob: -7.826767921447754
    10. '                       ' → logprob: -7.951767921447754

Token 210: ' inner' (ID: 12694)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2022151947021484
    2. ' max' → logprob: -1.3272151947021484
    3. 'min' → logprob: -2.3272151947021484
    4. ' min' → logprob: -2.9522151947021484
    5. ' their' → logprob: -3.0772151947021484
    6. ' inner' → logprob: -3.0772151947021484
    7. 'inner' → logprob: -3.3272151947021484
    8. ' check' → logprob: -3.7022151947021484
    9. ' calculate' → logprob: -3.9522151947021484
    10. ' outer' → logprob: -4.202215194702148

Token 211: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.2011028677225113
    2. '_e' → logprob: -3.0761029720306396
    3. '_max' → logprob: -3.0761029720306396
    4. '_outer' → logprob: -3.9511029720306396
    5. ' cells' → logprob: -4.3261027336120605
    6. 'cells' → logprob: -4.7011027336120605
    7. '_min' → logprob: -4.8261027336120605
    8. '_border' → logprob: -5.2011027336120605
    9. '_' → logprob: -5.3261027336120605
    10. ' elevations' → logprob: -5.4511027336120605

Token 212: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7814357280731201
    2. '                    
' → logprob: -0.7814357280731201
    3. '
' → logprob: -3.90643572807312
    4. '                     
' → logprob: -4.031435966491699
    5. '                    ' → logprob: -4.281435966491699
    6. ' outer' → logprob: -4.531435966491699
    7. '
                    
' → logprob: -5.781435966491699
    8. '                        
' → logprob: -5.906435966491699
    9. 'outer' → logprob: -6.281435966491699
    10. ' 
' → logprob: -6.406435966491699

Token 213: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5558524131774902
    2. '                    
' → logprob: -0.9308524131774902
    3. '                     
' → logprob: -4.93085241317749
    4. '
' → logprob: -5.05585241317749
    5. '                    ' → logprob: -5.55585241317749
    6. ' outer' → logprob: -6.05585241317749
    7. 'outer' → logprob: -6.18085241317749
    8. '                        
' → logprob: -6.18085241317749
    9. '                       ' → logprob: -6.93085241317749
    10. '                   
' → logprob: -7.05585241317749

Token 214: ' outer' (ID: 25982)
  Prédit: ' outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outer' → logprob: -0.1860467791557312
    2. 'outer' (adapté à ' outer') → logprob: -2.061046838760376
    3. '                   ' → logprob: -3.686046838760376
    4. ' top' → logprob: -4.436046600341797
    5. 'top' → logprob: -5.811046600341797
    6. '                    ' → logprob: -7.311046600341797
    7. '                    
' → logprob: -7.561046600341797
    8. ' max' → logprob: -8.311046600341797
    9. '                       ' → logprob: -9.061046600341797
    10. 'inner' → logprob: -9.436046600341797

Token 215: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.26341354846954346
    2. '_e' → logprob: -2.263413429260254
    3. '_' → logprob: -2.888413429260254
    4. '_outer' → logprob: -3.263413429260254
    5. '_he' → logprob: -3.513413429260254
    6. '_rows' → logprob: -6.888413429260254
    7. '_levels' → logprob: -7.263413429260254
    8. '_edges' → logprob: -8.263413429260254
    9. ' =' → logprob: -8.388413429260254
    10. '_vals' → logprob: -8.388413429260254

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869459629058838
    2. ' =' → logprob: -1.1369459629058838
    3. '=[]' → logprob: -9.886945724487305
    4. '=[' → logprob: -10.886945724487305
    5. '   ' → logprob: -13.511945724487305
    6. ' =[' → logprob: -13.636945724487305
    7. ',' → logprob: -15.011945724487305
    8. '=[]
' → logprob: -15.011945724487305
    9. ' =
' → logprob: -15.136945724487305
    10. 's' → logprob: -15.261945724487305

Token 217: ' []
' (ID: 8911)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.3574178218841553
    2. '[
' → logprob: -1.8574178218841553
    3. '[' → logprob: -2.7324178218841553
    4. '[]' → logprob: -2.9824178218841553
    5. ' [' → logprob: -4.482418060302734
    6. '[(' → logprob: -4.732418060302734
    7. '[]
' → logprob: -5.482418060302734
    8. ' []' → logprob: -5.982418060302734
    9. ' [
' → logprob: -6.857418060302734
    10. 'e' → logprob: -8.482418060302734

Token 218: '                   ' (ID: 699)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.8051049709320068
    2. '                   ' → logprob: -0.9301049709320068
    3. 'top' → logprob: -3.180104970932007
    4. 'for' → logprob: -3.180104970932007
    5. '                    
' → logprob: -4.180105209350586
    6. '                    ' → logprob: -4.680105209350586
    7. '[top' → logprob: -4.680105209350586
    8. ' for' → logprob: -4.930105209350586
    9. '.extend' → logprob: -5.055105209350586
    10. ' =' → logprob: -5.555105209350586

Token 219: ' inner' (ID: 12694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3767225742340088
    2. ' for' → logprob: -1.5017225742340088
    3. 'outer' → logprob: -3.126722574234009
    4. '#' → logprob: -3.751722574234009
    5. ' outer' → logprob: -4.00172233581543
    6. ' #' → logprob: -5.50172233581543
    7. '                   ' → logprob: -7.12672233581543
    8. '                    
' → logprob: -7.87672233581543
    9. '                    ' → logprob: -9.25172233581543
    10. '
' → logprob: -9.62672233581543

Token 220: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0043260264210402966
    2. '_' → logprob: -5.629325866699219
    3. '_rows' → logprob: -8.379325866699219
    4. ' _' → logprob: -8.629325866699219
    5. '[' → logprob: -8.754325866699219
    6. 'cells' → logprob: -10.129325866699219
    7. ')' → logprob: -10.879325866699219
    8. 'Cells' → logprob: -11.004325866699219
    9. '```' → logprob: -11.379325866699219
    10. 'for' → logprob: -11.754325866699219

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133212924003601
    2. ' =' → logprob: -1.3133213520050049
    3. '=[]' → logprob: -10.063321113586426
    4. '.append' → logprob: -12.063321113586426
    5. ' ' → logprob: -12.688321113586426
    6. ')' → logprob: -13.688321113586426
    7. '[]' → logprob: -13.938321113586426
    8. ',' → logprob: -14.063321113586426
    9. '.' → logprob: -14.188321113586426
    10. '+=' → logprob: -14.313321113586426

Token 222: ' []
' (ID: 8911)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.23816733062267303
    2. '[]' → logprob: -1.9881672859191895
    3. '[]
' → logprob: -3.3631672859191895
    4. '[
' → logprob: -3.4881672859191895
    5. '[' → logprob: -4.8631672859191895
    6. '[d' → logprob: -7.2381672859191895
    7. 'e' → logprob: -7.7381672859191895
    8. ' []' → logprob: -8.488167762756348
    9. ' [' → logprob: -8.863167762756348
    10. '[row' → logprob: -9.113167762756348

Token 223: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20408473908901215
    2. '                    
' → logprob: -2.079084634780884
    3. '                    ' → logprob: -3.204084634780884
    4. ' for' → logprob: -5.579084873199463
    5. '
' → logprob: -6.079084873199463
    6. '                     
' → logprob: -6.204084873199463
    7. '\' → logprob: -6.454084873199463
    8. 'for' → logprob: -6.579084873199463
    9. '                        
' → logprob: -6.704084873199463
    10. '\n' → logprob: -6.704084873199463

Token 224: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2537447214126587
    2. 'for' → logprob: -1.8787447214126587
    3. ' for' → logprob: -2.753744602203369
    4. '#' → logprob: -5.128744602203369
    5. '                    
' → logprob: -7.503744602203369
    6. '                    ' → logprob: -7.753744602203369
    7. ' #' → logprob: -8.128745079040527
    8. '   ' → logprob: -8.878745079040527
    9. '               ' → logprob: -9.253745079040527
    10. '
' → logprob: -9.753745079040527

Token 225: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10103584080934525
    2. '#' (adapté à ' #') → logprob: -2.3510358333587646
    3. '                   ' → logprob: -7.351036071777344
    4. ' for' → logprob: -9.351036071777344
    5. 'outer' → logprob: -9.851036071777344
    6. '                    
' → logprob: -10.726036071777344
    7. 'top' → logprob: -11.101036071777344
    8. ' #' → logprob: -12.726036071777344
    9. '               ' → logprob: -13.226036071777344
    10. 'if' → logprob: -13.851036071777344

Token 226: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2599326968193054
    2. '#' → logprob: -1.5099327564239502
    3. 'outer' → logprob: -5.384932518005371
    4. ' for' → logprob: -6.134932518005371
    5. '                   ' → logprob: -7.134932518005371
    6. ' #' → logprob: -8.759932518005371
    7. 'top' → logprob: -9.009932518005371
    8. '                    
' → logprob: -9.884932518005371
    9. ' outer' → logprob: -10.759932518005371
    10. '
' → logprob: -11.009932518005371

Token 227: ' outer' (ID: 25982)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0830566883087158
    2. ' top' → logprob: -1.2080566883087158
    3. 'for' → logprob: -1.5830566883087158
    4. 'top' → logprob: -2.208056688308716
    5. '#' → logprob: -4.458056449890137
    6. ' outer' → logprob: -4.708056449890137
    7. '(top' → logprob: -4.958056449890137
    8. '[top' → logprob: -5.083056449890137
    9. ' #' → logprob: -5.583056449890137
    10. ' (' → logprob: -5.708056449890137

Token 228: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.009983789175748825
    2. 'cells' → logprob: -5.134984016418457
    3. 'top' → logprob: -6.759984016418457
    4. ' cells' → logprob: -6.884984016418457
    5. '_rows' → logprob: -7.759984016418457
    6. 'for' → logprob: -8.134984016418457
    7. ' top' → logprob: -8.259984016418457
    8. 'row' → logprob: -8.509984016418457
    9. 'Cells' → logprob: -9.259984016418457
    10. 'rows' → logprob: -9.509984016418457

Token 229: ' from' (ID: 591)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2507990002632141
    2. '                    
' → logprob: -2.3757989406585693
    3. '
' → logprob: -2.8757989406585693
    4. ' for' → logprob: -3.1257989406585693
    5. 'for' → logprob: -3.6257989406585693
    6. '                    ' → logprob: -8.250799179077148
    7. ':' → logprob: -8.250799179077148
    8. '[top' → logprob: -8.500799179077148
    9. ',' → logprob: -8.750799179077148
    10. '#' → logprob: -8.875799179077148

Token 230: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6332303285598755
    2. ' top' → logprob: -2.008230209350586
    3. 'e' → logprob: -2.133230209350586
    4. '[top' → logprob: -2.633230209350586
    5. ' elevation' → logprob: -3.258230209350586
    6. 'range' → logprob: -3.383230209350586
    7. ' range' → logprob: -3.508230209350586
    8. '[(' → logprob: -4.258230209350586
    9. '(top' → logprob: -4.383230209350586
    10. '[e' → logprob: -4.633230209350586

Token 231: ' and' (ID: 326)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.4579095840454102
    2. ' row' → logprob: -1.8329095840454102
    3. ',' → logprob: -2.08290958404541
    4. '                   ' → logprob: -2.08290958404541
    5. '   ' → logprob: -2.33290958404541
    6. '_row' → logprob: -2.83290958404541
    7. ']' → logprob: -3.45790958404541
    8. 'for' → logprob: -3.70790958404541
    9. ' for' → logprob: -4.08290958404541
    10. ' and' → logprob: -4.08290958404541

Token 232: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6463404893875122
    2. ' bottom' → logprob: -1.1463404893875122
    3. 'left' → logprob: -2.3963403701782227
    4. ' left' → logprob: -3.7713403701782227
    5. 'range' → logprob: -4.146340370178223
    6. ' range' → logprob: -4.396340370178223
    7. 'top' → logprob: -5.021340370178223
    8. 'right' → logprob: -5.271340370178223
    9. ' top' → logprob: -6.021340370178223
    10. ' right' → logprob: -6.396340370178223

Token 233: ' row' (ID: 5225)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5835320353507996
    2. ' for' → logprob: -2.0835320949554443
    3. 'for' → logprob: -2.2085320949554443
    4. ' top' → logprob: -2.9585320949554443
    5. '[top' → logprob: -3.0835320949554443
    6. 'top' → logprob: -3.2085320949554443
    7. '_top' → logprob: -4.208531856536865
    8. '   ' → logprob: -4.333531856536865
    9. 'row' → logprob: -4.583531856536865
    10. ' row' → logprob: -5.083531856536865

Token 234: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9144027829170227
    2. ' for' → logprob: -1.039402723312378
    3. '                   ' → logprob: -1.414402723312378
    4. '                    
' → logprob: -6.164402961730957
    5. '   ' → logprob: -9.539402961730957
    6. '                    ' → logprob: -9.539402961730957
    7. ' top' → logprob: -10.039402961730957
    8. '               ' → logprob: -10.039402961730957
    9. '
' → logprob: -10.289402961730957
    10. ':' → logprob: -10.414402961730957

Token 235: '                   ' (ID: 699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.688196063041687
    2. 'for' → logprob: -1.188196063041687
    3. '                   ' → logprob: -1.688196063041687
    4. '                    
' → logprob: -4.938196182250977
    5. '                    ' → logprob: -8.813196182250977
    6. '
' → logprob: -8.938196182250977
    7. '               ' → logprob: -9.063196182250977
    8. '   ' → logprob: -9.688196182250977
    9. '                       ' → logprob: -9.688196182250977
    10. '                   
' → logprob: -10.688196182250977

Token 236: ' outer' (ID: 25982)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35209131240844727
    2. '                   ' → logprob: -1.8520913124084473
    3. 'for' → logprob: -1.9770913124084473
    4. '                    
' → logprob: -7.227091312408447
    5. '                       ' → logprob: -8.727090835571289
    6. '
' → logprob: -8.977090835571289
    7. '                    ' → logprob: -8.977090835571289
    8. '               ' → logprob: -9.102090835571289
    9. '   ' → logprob: -9.977090835571289
    10. '           ' → logprob: -10.977090835571289

Token 237: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.000249061529757455
    2. '.append' → logprob: -9.000248908996582
    3. 'Cells' → logprob: -10.375248908996582
    4. '.extend' → logprob: -11.000248908996582
    5. 'cells' → logprob: -11.125248908996582
    6. '_' → logprob: -11.375248908996582
    7. '_rows' → logprob: -11.500248908996582
    8. ' _' → logprob: -11.750248908996582
    9. '   ' → logprob: -12.500248908996582
    10. '```' → logprob: -12.625248908996582

Token 238: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.01468015369027853
    2. ' +=' → logprob: -4.7646803855896
    3. '+=' → logprob: -5.5146803855896
    4. '.' → logprob: -6.2646803855896
    5. '.append' → logprob: -9.264679908752441
    6. '+' → logprob: -11.139679908752441
    7. '=' → logprob: -12.639679908752441
    8. ' .' → logprob: -13.514679908752441
    9. 'extend' → logprob: -13.639679908752441
    10. '.=' → logprob: -13.639679908752441

Token 239: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0009030037908814847
    2. '(' → logprob: -8.125903129577637
    3. '([' → logprob: -8.125903129577637
    4. '([(' → logprob: -8.625903129577637
    5. '((' → logprob: -9.375903129577637
    6. 'e' → logprob: -10.125903129577637
    7. '(list' → logprob: -13.000903129577637
    8. '(d' → logprob: -13.875903129577637
    9. '[e' → logprob: -13.875903129577637
    10. '(((' → logprob: -14.000903129577637

Token 240: 'levation' (ID: 130610)
  Prédit: 'levation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levation' → logprob: -0.0034638175275176764
    2. '[' → logprob: -6.1284637451171875
    3. 'lev' → logprob: -8.003463745117188
    4. '[e' → logprob: -8.128463745117188
    5. '[-' → logprob: -8.503463745117188
    6. 'le' → logprob: -8.878463745117188
    7. '[(' → logprob: -9.628463745117188
    8. '[]' → logprob: -10.628463745117188
    9. 'l' → logprob: -10.878463745117188
    10. '[
' → logprob: -11.128463745117188

Token 241: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.250009536743164
    3. ' [' → logprob: -13.250009536743164
    4. ')[' → logprob: -14.250009536743164
    5. '   ' → logprob: -14.250009536743164
    6. '][' → logprob: -14.750009536743164
    7. 'top' → logprob: -15.500009536743164
    8. '[to' → logprob: -15.625009536743164
    9. ')' → logprob: -16.000009536743164
    10. '
' → logprob: -16.250009536743164

Token 242: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005985204596072435
    2. '[left' → logprob: -5.380985260009766
    3. ' ][' → logprob: -7.755985260009766
    4. ']' → logprob: -7.880985260009766
    5. ',left' → logprob: -8.755985260009766
    6. ',' → logprob: -9.005985260009766
    7. '][:' → logprob: -9.630985260009766
    8. 'left' → logprob: -9.755985260009766
    9. '])' → logprob: -9.880985260009766
    10. '[' → logprob: -10.005985260009766

Token 243: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00010318557906430215
    2. ' left' → logprob: -9.250102996826172
    3. ':left' → logprob: -12.375102996826172
    4. ':' → logprob: -14.000102996826172
    5. '[left' → logprob: -14.750102996826172
    6. '
' → logprob: -15.500102996826172
    7. '0' → logprob: -15.625102996826172
    8. 'right' → logprob: -15.750102996826172
    9. '(left' → logprob: -15.875102996826172
    10. 'i' → logprob: -15.875102996826172

Token 244: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.018721874803304672
    2. ':' → logprob: -4.393722057342529
    3. ' :' → logprob: -5.393722057342529
    4. ':left' → logprob: -6.643722057342529
    5. '])' → logprob: -8.143721580505371
    6. ' ' → logprob: -11.018721580505371
    7. ',right' → logprob: -11.643721580505371
    8. '   ' → logprob: -11.768721580505371
    9. 'right' → logprob: -12.143721580505371
    10. ']' → logprob: -12.268721580505371

Token 245: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234002135694027
    2. ' +' → logprob: -5.2552337646484375
    3. ']' → logprob: -16.130233764648438
    4. ']+' → logprob: -16.755233764648438
    5. '   ' → logprob: -18.130233764648438
    6. '＋' → logprob: -18.380233764648438
    7. '+
' → logprob: -18.380233764648438
    8. ' ' → logprob: -19.005233764648438
    9. '+]' → logprob: -19.005233764648438
    10. '1' → logprob: -19.630233764648438

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.37501335144043
    3. '+' → logprob: -14.50001335144043
    4. ']' → logprob: -14.62501335144043
    5. '])' → logprob: -15.50001335144043
    6. '   ' → logprob: -15.62501335144043
    7. '```' → logprob: -16.75001335144043
    8. '
' → logprob: -17.37501335144043
    9. ']+' → logprob: -17.87501335144043
    10. '  ' → logprob: -18.37501335144043

Token 247: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000853466335684061
    2. ' ])' → logprob: -7.625853538513184
    3. ']' → logprob: -8.000853538513184
    4. '])
' → logprob: -10.625853538513184
    5. ')' → logprob: -13.375853538513184
    6. '   ' → logprob: -13.875853538513184
    7. ' ]' → logprob: -14.250853538513184
    8. ' ' → logprob: -14.875853538513184
    9. '])
' → logprob: -15.000853538513184
    10. '                   ' → logprob: -15.000853538513184

Token 248: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3905195891857147
    2. '                    
' → logprob: -1.265519618988037
    3. '
' → logprob: -3.515519618988037
    4. 'outer' → logprob: -5.390519618988037
    5. '\n' → logprob: -6.765519618988037
    6. 'newline' → logprob: -7.015519618988037
    7. '                    ' → logprob: -7.265519618988037
    8. ' outer' → logprob: -7.390519618988037
    9. '               ' → logprob: -7.640519618988037
    10. '                        
' → logprob: -7.765519618988037

Token 249: ' outer' (ID: 25982)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8873952031135559
    2. 'outer' (adapté à ' outer') → logprob: -0.8873952031135559
    3. '                    
' → logprob: -2.137395143508911
    4. ' outer' → logprob: -3.387395143508911
    5. '
' → logprob: -3.762395143508911
    6. '               ' → logprob: -7.63739538192749
    7. '                
' → logprob: -8.762394905090332
    8. '                    ' → logprob: -9.137394905090332
    9. '                        
' → logprob: -9.137394905090332
    10. '           ' → logprob: -9.262394905090332

Token 250: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.00017648482753429562
    2. '```' → logprob: -10.125176429748535
    3. '._' → logprob: -10.375176429748535
    4. 'Cells' → logprob: -11.375176429748535
    5. ']_' → logprob: -11.375176429748535
    6. '[' → logprob: -11.500176429748535
    7. 'cells' → logprob: -11.500176429748535
    8. '.cells' → logprob: -11.625176429748535
    9. '.' → logprob: -11.875176429748535
    10. '.append' → logprob: -12.125176429748535

Token 251: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.006745331920683384
    2. '.' → logprob: -5.006745338439941
    3. ' .' → logprob: -10.631745338439941
    4. '.append' → logprob: -12.881745338439941
    5. '.expand' → logprob: -13.006745338439941
    6. '.ext' → logprob: -14.131745338439941
    7. '.setdefault' → logprob: -17.131744384765625
    8. '\.' → logprob: -17.256744384765625
    9. '.reverse' → logprob: -17.631744384765625
    10. ').' → logprob: -17.756744384765625

Token 252: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00042888117604888976
    2. '(' → logprob: -7.875428676605225
    3. ' (' → logprob: -10.500429153442383
    4. 'e' → logprob: -10.875429153442383
    5. ' elevation' → logprob: -13.250429153442383
    6. '((' → logprob: -15.750429153442383
    7. '(s' → logprob: -16.375429153442383
    8. ' e' → logprob: -16.625429153442383
    9. '[e' → logprob: -16.625429153442383
    10. '([' → logprob: -17.000429153442383

Token 253: 'levation' (ID: 130610)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001351306913420558
    2. 'bottom' → logprob: -6.626351356506348
    3. '[b' → logprob: -11.126351356506348
    4. '```' → logprob: -13.001351356506348
    5. '   ' → logprob: -13.376351356506348
    6. ' [' → logprob: -13.626351356506348
    7. 'bot' → logprob: -14.376351356506348
    8. '[
' → logprob: -15.001351356506348
    9. '][' → logprob: -15.001351356506348
    10. 'levation' → logprob: -15.001351356506348

Token 254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4140441635390744e-05
    2. 'bottom' → logprob: -11.375014305114746
    3. '[b' → logprob: -13.625014305114746
    4. ' [' → logprob: -14.750014305114746
    5. '```' → logprob: -14.750014305114746
    6. '   ' → logprob: -15.125014305114746
    7. '[top' → logprob: -16.37501335144043
    8. '[
' → logprob: -16.50001335144043
    9. ' ' → logprob: -16.75001335144043
    10. '
' → logprob: -17.25001335144043

Token 255: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -6.704273118884885e-07
    2. ' bottom' → logprob: -14.375000953674316
    3. 'bot' → logprob: -17.75
    4. '   ' → logprob: -18.875
    5. '(bottom' → logprob: -20.125
    6. '.bottom' → logprob: -20.875
    7. 'top' → logprob: -21.125
    8. '[' → logprob: -21.125
    9. ' ' → logprob: -21.125
    10. '```' → logprob: -21.375

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00037919526221230626
    2. '[top' → logprob: -8.62537956237793
    3. ' ][' → logprob: -9.75037956237793
    4. '[left' → logprob: -9.87537956237793
    5. '[' → logprob: -9.87537956237793
    6. ']' → logprob: -10.50037956237793
    7. '   ' → logprob: -13.00037956237793
    8. '[right' → logprob: -13.12537956237793
    9. ' ' → logprob: -13.87537956237793
    10. '[row' → logprob: -13.87537956237793

Token 257: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002719449403230101
    2. '[left' → logprob: -8.250271797180176
    3. ' left' → logprob: -11.625271797180176
    4. ':left' → logprob: -13.875271797180176
    5. '(left' → logprob: -14.875271797180176
    6. '	left' → logprob: -15.500271797180176
    7. ',left' → logprob: -15.625271797180176
    8. '][' → logprob: -16.625272750854492
    9. 'right' → logprob: -16.875272750854492
    10. '   ' → logprob: -17.625272750854492

Token 258: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.0005037044174969196
    2. ':' → logprob: -7.7505035400390625
    3. ' :' → logprob: -9.750503540039062
    4. 'right' → logprob: -11.625503540039062
    5. '[right' → logprob: -13.250503540039062
    6. ':left' → logprob: -13.625503540039062
    7. '+' → logprob: -14.750503540039062
    8. ' right' → logprob: -14.750503540039062
    9. ',right' → logprob: -15.375503540039062
    10. '```' → logprob: -15.375503540039062

Token 259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.339278580620885e-06
    2. ' +' → logprob: -13.750001907348633
    3. '[' → logprob: -14.500001907348633
    4. ']+' → logprob: -14.875001907348633
    5. '1' → logprob: -15.000001907348633
    6. ']' → logprob: -16.500001907348633
    7. '])' → logprob: -17.625001907348633
    8. '+
' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '+[' → logprob: -18.625001907348633

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. '+' → logprob: -10.875021934509277
    3. ' ' → logprob: -13.125021934509277
    4. '])' → logprob: -14.500021934509277
    5. ']+' → logprob: -15.375021934509277
    6. ']' → logprob: -16.50002098083496
    7. '```' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.25002098083496
    9. ']))' → logprob: -17.25002098083496
    10. '
' → logprob: -17.50002098083496

Token 261: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -6.749814019713085e-06
    2. ')' → logprob: -13.000006675720215
    3. ']' → logprob: -13.000006675720215
    4. '])
' → logprob: -13.375006675720215
    5. ' ])' → logprob: -14.625006675720215
    6. ']])' → logprob: -16.25000762939453
    7. ')])' → logprob: -17.12500762939453
    8. ']))' → logprob: -17.50000762939453
    9. ''])' → logprob: -18.00000762939453
    10. '))' → logprob: -18.25000762939453

Token 262: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5336010456085205
    2. '                    
' → logprob: -0.9086010456085205
    3. '
' → logprob: -4.783600807189941
    4. '\n' → logprob: -8.158600807189941
    5. 'newline' → logprob: -8.408600807189941
    6. '                        
' → logprob: -8.533600807189941
    7. '                    ' → logprob: -8.658600807189941
    8. '                   
' → logprob: -8.658600807189941
    9. '                
' → logprob: -8.783600807189941
    10. 'for' → logprob: -9.283600807189941

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08795087784528732
    2. '                    
' → logprob: -2.7129509449005127
    3. 'for' → logprob: -4.337950706481934
    4. '
' → logprob: -5.587950706481934
    5. ' for' → logprob: -8.087950706481934
    6. '                    ' → logprob: -8.212950706481934
    7. '               ' → logprob: -9.212950706481934
    8. '                   
' → logprob: -9.837950706481934
    9. '                        
' → logprob: -10.212950706481934
    10. '				' → logprob: -10.337950706481934

Token 264: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07250971347093582
    2. '                   ' → logprob: -2.822509765625
    3. ' for' → logprob: -4.572509765625
    4. '                    
' → logprob: -9.322509765625
    5. '#' (adapté à ' #') → logprob: -10.197509765625
    6. '               ' → logprob: -11.697509765625
    7. '                  ' → logprob: -12.322509765625
    8. '                    ' → logprob: -12.447509765625
    9. '
' → logprob: -12.947509765625
    10. '   ' → logprob: -13.072509765625

Token 265: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011251530610024929
    2. ' for' → logprob: -4.511251449584961
    3. '                   ' → logprob: -8.511251449584961
    4. '
' → logprob: -14.136251449584961
    5. '               ' → logprob: -14.886251449584961
    6. ' ' → logprob: -15.136251449584961
    7. '           ' → logprob: -15.261251449584961
    8. '#' → logprob: -15.261251449584961
    9. '                    ' → logprob: -15.511251449584961
    10. '   ' → logprob: -15.636251449584961

Token 266: ' outer' (ID: 25982)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17640000581741333
    2. ' for' → logprob: -1.9263999462127686
    3. 'range' → logprob: -4.676400184631348
    4. ' range' → logprob: -6.301400184631348
    5. 'outer' → logprob: -6.551400184631348
    6. 'e' → logprob: -6.926400184631348
    7. '[top' → logprob: -7.676400184631348
    8. ' outer' → logprob: -7.801400184631348
    9. '#' → logprob: -8.051400184631348
    10. '                   ' → logprob: -8.051400184631348

Token 267: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.026366373524069786
    2. 'cells' → logprob: -4.151366233825684
    3. ' cells' → logprob: -5.026366233825684
    4. '                   ' → logprob: -6.526366233825684
    5. 'for' → logprob: -6.776366233825684
    6. '   ' → logprob: -8.401366233825684
    7. ' for' → logprob: -8.776366233825684
    8. 'Cells' → logprob: -8.901366233825684
    9. '                    
' → logprob: -9.151366233825684
    10. '
' → logprob: -9.401366233825684

Token 268: ' from' (ID: 591)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7035468816757202
    2. 'from' → logprob: -1.5785468816757202
    3. 'for' → logprob: -1.9535468816757202
    4. ' from' → logprob: -2.8285470008850098
    5. ' for' → logprob: -3.0785470008850098
    6. '                    
' → logprob: -3.9535470008850098
    7. '               ' → logprob: -4.07854700088501
    8. '.extend' → logprob: -4.70354700088501
    9. '                    ' → logprob: -5.70354700088501
    10. '                ' → logprob: -7.20354700088501

Token 269: ' left' (ID: 3561)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014282210730016232
    2. ' range' → logprob: -4.2642822265625
    3. 'top' → logprob: -9.1392822265625
    4. '(range' → logprob: -12.2642822265625
    5. 'for' → logprob: -12.5142822265625
    6. '[top' → logprob: -13.6392822265625
    7. ' top' → logprob: -13.8892822265625
    8. '   ' → logprob: -15.1392822265625
    9. ' ' → logprob: -15.8892822265625
    10. 'row' → logprob: -16.1392822265625

Token 270: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8030332326889038
    2. 'column' → logprob: -1.4280332326889038
    3. ' and' → logprob: -2.4280333518981934
    4. '                   ' → logprob: -3.0530333518981934
    5. ' column' → logprob: -3.1780333518981934
    6. '[' → logprob: -3.3030333518981934
    7. 'and' → logprob: -3.5530333518981934
    8. '[column' → logprob: -4.053033351898193
    9. ' +' → logprob: -4.178033351898193
    10. 'columns' → logprob: -5.428033351898193

Token 271: ' right' (ID: 1849)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30962908267974854
    2. ' range' → logprob: -1.8096290826797485
    3. 'right' → logprob: -3.059628963470459
    4. ' right' → logprob: -3.184628963470459
    5. 'top' → logprob: -5.059628963470459
    6. ' top' → logprob: -5.934628963470459
    7. '[top' → logprob: -6.809628963470459
    8. '(top' → logprob: -6.934628963470459
    9. ' (' → logprob: -7.059628963470459
    10. '(range' → logprob: -7.184628963470459

Token 272: ' columns' (ID: 15697)
  Prédit: ' column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.4944305121898651
    2. ' columns' → logprob: -1.6194305419921875
    3. 'column' → logprob: -2.1194305419921875
    4. '[column' → logprob: -3.1194305419921875
    5. 'columns' → logprob: -4.3694305419921875
    6. '_columns' → logprob: -4.9944305419921875
    7. '_column' → logprob: -5.4944305419921875
    8. '[' → logprob: -7.1194305419921875
    9. '	column' → logprob: -7.2444305419921875
    10. '[col' → logprob: -7.6194305419921875

Token 273: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04997178912162781
    2. 'for' → logprob: -3.42497181892395
    3. ' for' → logprob: -4.174971580505371
    4. '                    
' → logprob: -7.799971580505371
    5. '               ' → logprob: -8.549971580505371
    6. '           ' → logprob: -9.549971580505371
    7. '
' → logprob: -10.049971580505371
    8. '                    ' → logprob: -10.299971580505371
    9. '                       ' → logprob: -10.924971580505371
    10. '       ' → logprob: -11.424971580505371

Token 274: 'excluding' (ID: 135903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12525007128715515
    2. ' for' → logprob: -2.8752501010894775
    3. 'range' → logprob: -2.8752501010894775
    4. ' range' → logprob: -6.000249862670898
    5. 'top' → logprob: -6.125249862670898
    6. ' top' → logprob: -9.000249862670898
    7. '[top' → logprob: -9.875249862670898
    8. '   ' → logprob: -10.375249862670898
    9. '(top' → logprob: -11.000249862670898
    10. ')' → logprob: -11.375249862670898

Token 275: ' corners' (ID: 39479)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3357810080051422
    2. 'corn' → logprob: -1.4607809782028198
    3. ' corners' → logprob: -3.0857810974121094
    4. ' top' → logprob: -5.085781097412109
    5. 'the' → logprob: -7.335781097412109
    6. 'edges' → logprob: -7.960781097412109
    7. 'corner' → logprob: -9.21078109741211
    8. ' edges' → logprob: -9.58578109741211
    9. ' the' → logprob: -9.71078109741211
    10. 'first' → logprob: -11.33578109741211

Token 276: ' already' (ID: 4279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23509006202220917
    2. '                   ' → logprob: -1.8600900173187256
    3. '[top' → logprob: -4.110090255737305
    4. ')
' → logprob: -4.235090255737305
    5. '])' → logprob: -4.485090255737305
    6. '):
' → logprob: -5.735090255737305
    7. '):' → logprob: -6.235090255737305
    8. '[' → logprob: -6.360090255737305
    9. 'top' → logprob: -7.360090255737305
    10. '                    
' → logprob: -7.610090255737305

Token 277: ' counted' (ID: 60500)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.013034695759415627
    2. 'added' → logprob: -4.513034820556641
    3. ' included' → logprob: -6.763034820556641
    4. 'col' → logprob: -7.263034820556641
    5. 'count' → logprob: -9.13803482055664
    6. ' added' → logprob: -11.76303482055664
    7. 'covered' → logprob: -12.13803482055664
    8. ' counted' → logprob: -12.26303482055664
    9. 'account' → logprob: -14.63803482055664
    10. 'consider' → logprob: -14.88803482055664

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1300053745508194
    2. ')
' → logprob: -2.130005359649658
    3. '                   ' → logprob: -6.755005359649658
    4. '[top' → logprob: -7.380005359649658
    5. ' )' → logprob: -8.505005836486816
    6. '):
' → logprob: -8.505005836486816
    7. 'for' → logprob: -8.880005836486816
    8. '[' → logprob: -9.255005836486816
    9. 'in' → logprob: -9.380005836486816
    10. 'top' → logprob: -9.505005836486816

Token 279: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48046934604644775
    2. 'for' → logprob: -1.3554693460464478
    3. ' for' → logprob: -2.105469226837158
    4. '                    
' → logprob: -6.605469226837158
    5. '               ' → logprob: -8.605469703674316
    6. '                    ' → logprob: -8.980469703674316
    7. '           ' → logprob: -9.980469703674316
    8. '                       ' → logprob: -9.980469703674316
    9. '
' → logprob: -10.355469703674316
    10. '       ' → logprob: -10.480469703674316

Token 280: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16861242055892944
    2. ' for' → logprob: -1.9186124801635742
    3. '                   ' → logprob: -4.793612480163574
    4. '               ' → logprob: -10.543612480163574
    5. '                    ' → logprob: -11.043612480163574
    6. '   ' → logprob: -12.168612480163574
    7. '                       ' → logprob: -12.293612480163574
    8. '           ' → logprob: -12.418612480163574
    9. '                    
' → logprob: -12.918612480163574
    10. '                ' → logprob: -12.918612480163574

Token 281: ' row' (ID: 5225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06259796023368835
    2. 'row' → logprob: -3.0625979900360107
    3. ' i' → logprob: -4.687597751617432
    4. 'r' → logprob: -5.687597751617432
    5. ' row' → logprob: -6.687597751617432
    6. 'inner' → logprob: -10.18759822845459
    7. ' r' → logprob: -11.43759822845459
    8. 'k' → logprob: -12.18759822845459
    9. 't' → logprob: -12.43759822845459
    10. 'idx' → logprob: -12.56259822845459

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022889316082
    2. 'in' → logprob: -1.9102288484573364
    3. 'i' → logprob: -13.785228729248047
    4. '   ' → logprob: -13.910228729248047
    5. '	in' → logprob: -14.285228729248047
    6. ' ' → logprob: -14.910228729248047
    7. 'int' → logprob: -14.910228729248047
    8. 'top' → logprob: -15.035228729248047
    9. 'range' → logprob: -15.160228729248047
    10. 'In' → logprob: -15.535228729248047

Token 283: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575952410697937
    2. ' range' → logprob: -0.825952410697937
    3. 'top' → logprob: -11.825952529907227
    4. '(range' → logprob: -12.325952529907227
    5. ' top' → logprob: -13.950952529907227
    6. '[top' → logprob: -15.450952529907227
    7. '(top' → logprob: -16.325952529907227
    8. '	range' → logprob: -16.575952529907227
    9. ' ' → logprob: -18.325952529907227
    10. ' xrange' → logprob: -18.325952529907227

Token 284: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.030642006546258926
    2. '(top' → logprob: -3.530642032623291
    3. ' top' → logprob: -7.030642032623291
    4. '[top' → logprob: -12.405641555786133
    5. '	top' → logprob: -13.155641555786133
    6. '   ' → logprob: -14.280641555786133
    7. '_top' → logprob: -17.280641555786133
    8. '(' → logprob: -18.030641555786133
    9. 'Top' → logprob: -18.030641555786133
    10. ' (' → logprob: -18.280641555786133

Token 285: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141665637493134
    2. ' +' → logprob: -1.7014166116714478
    3. '1' → logprob: -13.076416969299316
    4. '   ' → logprob: -14.201416969299316
    5. ')+' → logprob: -15.826416969299316
    6. ' ' → logprob: -15.951416969299316
    7. '＋' → logprob: -16.201416015625
    8. '+
' → logprob: -16.576416015625
    9. '()+' → logprob: -16.701416015625
    10. ']+' → logprob: -17.076416015625

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006291598547250032
    2. ' ' → logprob: -7.37562894821167
    3. '0' → logprob: -13.500629425048828
    4. '```' → logprob: -15.000629425048828
    5. '   ' → logprob: -15.250629425048828
    6. '
' → logprob: -15.500629425048828
    7. '2' → logprob: -15.875629425048828
    8. '3' → logprob: -17.188129425048828
    9. ')' → logprob: -17.250629425048828
    10. ',' → logprob: -18.063129425048828

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007653831038624048
    2. ',left' → logprob: -5.632653713226318
    3. ' ,' → logprob: -5.757653713226318
    4. ',row' → logprob: -7.632653713226318
    5. ',right' → logprob: -8.507654190063477
    6. ',len' → logprob: -9.632654190063477
    7. ',length' → logprob: -9.882654190063477
    8. ' ' → logprob: -10.882654190063477
    9. ',column' → logprob: -11.007654190063477
    10. ',line' → logprob: -12.007654190063477

Token 288: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0002613358374219388
    2. ' bottom' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.375261306762695
    4. 'bot' → logprob: -18.375261306762695
    5. '(bottom' → logprob: -18.875261306762695
    6. 'b' → logprob: -19.875261306762695
    7. ' ' → logprob: -20.250261306762695
    8. '```' → logprob: -21.125261306762695
    9. '.bottom' → logprob: -21.500261306762695
    10. 'Bottom' → logprob: -21.625261306762695

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17236246168613434
    2. '):
' → logprob: -1.9223624467849731
    3. '-' → logprob: -4.547362327575684
    4. ')' → logprob: -6.922362327575684
    5. '+' → logprob: -8.797362327575684
    6. '   ' → logprob: -9.422362327575684
    7. ' -' → logprob: -9.922362327575684
    8. '):

' → logprob: -10.047362327575684
    9. ' ' → logprob: -10.547362327575684
    10. '1' → logprob: -10.547362327575684

Token 290: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0877908319234848
    2. ' outer' → logprob: -2.8377907276153564
    3. '   ' → logprob: -4.7127909660339355
    4. 'outer' → logprob: -5.0877909660339355
    5. '                   ' → logprob: -5.0877909660339355
    6. '       ' → logprob: -6.3377909660339355
    7. '                        ' → logprob: -7.4627909660339355
    8. '                        
' → logprob: -7.8377909660339355
    9. '               ' → logprob: -7.9627909660339355
    10. ' if' → logprob: -8.587790489196777

Token 291: ' outer' (ID: 25982)
  Prédit: ' outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outer' → logprob: -0.28435206413269043
    2. 'outer' (adapté à ' outer') → logprob: -1.4093520641326904
    3. '                       ' → logprob: -6.1593523025512695
    4. '   ' → logprob: -7.4093523025512695
    5. '                   ' → logprob: -8.15935230255127
    6. '                           ' → logprob: -9.90935230255127
    7. ' ' → logprob: -10.15935230255127
    8. '       ' → logprob: -10.40935230255127
    9. '               ' → logprob: -11.15935230255127
    10. '_outer' → logprob: -11.40935230255127

Token 292: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.5213274309644476e-05
    2. 'cells' → logprob: -11.250015258789062
    3. 'Cells' → logprob: -14.125015258789062
    4. '```' → logprob: -14.750015258789062
    5. 's' → logprob: -15.750015258789062
    6. '_columns' → logprob: -15.875015258789062
    7. ' cells' → logprob: -16.500015258789062
    8. '[' → logprob: -16.625015258789062
    9. '                   ' → logprob: -16.750015258789062
    10. '_' → logprob: -16.875015258789062

Token 293: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031847211066633463
    2. '.' → logprob: -6.003184795379639
    3. '.extend' → logprob: -7.253184795379639
    4. ' .' → logprob: -14.87818431854248
    5. 'append' → logprob: -15.75318431854248
    6. '.Append' → logprob: -16.378185272216797
    7. '.add' → logprob: -16.503185272216797
    8. '.push' → logprob: -16.878185272216797
    9. '.app' → logprob: -17.253185272216797
    10. ').' → logprob: -17.378185272216797

Token 294: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00034654809860512614
    2. 'e' → logprob: -8.250346183776855
    3. '(' → logprob: -9.625346183776855
    4. ' (' → logprob: -10.875346183776855
    5. ' elevation' → logprob: -15.500346183776855
    6. '(
' → logprob: -16.375347137451172
    7. ')' → logprob: -17.125347137451172
    8. '	e' → logprob: -18.250347137451172
    9. '((' → logprob: -19.000347137451172
    10. ' e' → logprob: -19.625347137451172

Token 295: 'levation' (ID: 130610)
  Prédit: 'levation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levation' → logprob: -0.00016301481809932739
    2. '[' → logprob: -8.875163078308105
    3. 'lev' → logprob: -11.750163078308105
    4. 'e' → logprob: -12.625163078308105
    5. 'le' → logprob: -13.250163078308105
    6. '[]' → logprob: -13.375163078308105
    7. '[e' → logprob: -13.375163078308105
    8. 'vation' → logprob: -13.500163078308105
    9. ' elevation' → logprob: -14.250163078308105
    10. 'l' → logprob: -14.375163078308105

Token 296: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -5.676981345459353e-06
    2. 'row' → logprob: -12.250005722045898
    3. ' [' → logprob: -15.375005722045898
    4. '[' → logprob: -15.500005722045898
    5. '(row' → logprob: -16.1250057220459
    6. ' row' → logprob: -16.6250057220459
    7. ')[' → logprob: -16.8750057220459
    8. ')' → logprob: -16.8750057220459
    9. ' ' → logprob: -17.5000057220459
    10. ',row' → logprob: -17.5000057220459

Token 297: '][' (ID: 2696)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0015628274995833635
    2. '][' → logprob: -6.501562595367432
    3. '[' → logprob: -10.75156307220459
    4. 'left' → logprob: -11.50156307220459
    5. ' [' → logprob: -11.62656307220459
    6. ')[' → logprob: -11.75156307220459
    7. '[right' → logprob: -12.62656307220459
    8. ',left' → logprob: -12.62656307220459
    9. ' ][' → logprob: -12.87656307220459
    10. '(left' → logprob: -13.62656307220459

Token 298: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.45848218582978e-06
    2. ' left' → logprob: -13.00000286102295
    3. '[left' → logprob: -16.125001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '	left' → logprob: -19.000001907348633
    6. ')' → logprob: -19.000001907348633
    7. ' ' → logprob: -19.500001907348633
    8. '(left' → logprob: -19.750001907348633
    9. 'right' → logprob: -20.625001907348633
    10. '
' → logprob: -20.875001907348633

Token 299: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0132615240290761
    2. ' ])' → logprob: -4.388261318206787
    3. '])
' → logprob: -7.388261318206787
    4. ')' → logprob: -9.888261795043945
    5. ']' → logprob: -10.138261795043945
    6. ' ])
' → logprob: -11.138261795043945
    7. ' )' → logprob: -11.888261795043945
    8. ''])' → logprob: -12.263261795043945
    9. ' ]' → logprob: -12.388261795043945
    10. '])

' → logprob: -12.513261795043945

Token 300: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002086023800075054
    2. '                        
' → logprob: -6.752086162567139
    3. ' outer' → logprob: -8.62708568572998
    4. ')' → logprob: -8.62708568572998
    5. '                   ' → logprob: -8.62708568572998
    6. '                        ' → logprob: -9.25208568572998
    7. '<|end|>' → logprob: -9.50208568572998
    8. 'outer' → logprob: -10.25208568572998
    9. '               ' → logprob: -10.50208568572998
    10. '                    ' → logprob: -10.50208568572998

Token 301: ' outer' (ID: 25982)
  Prédit: ' outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outer' → logprob: -0.2812332212924957
    2. 'outer' (adapté à ' outer') → logprob: -1.4062331914901733
    3. '                   ' → logprob: -10.281232833862305
    4. '                    ' → logprob: -10.906232833862305
    5. '                    
' → logprob: -12.031232833862305
    6. '.outer' → logprob: -12.031232833862305
    7. '                       ' → logprob: -12.406232833862305
    8. '_outer' → logprob: -12.781232833862305
    9. '                        
' → logprob: -13.156232833862305
    10. ''' → logprob: -13.656232833862305

Token 302: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.27099974633893e-05
    2. 'Cells' → logprob: -12.750012397766113
    3. ']_' → logprob: -12.750012397766113
    4. '._' → logprob: -13.625012397766113
    5. '.append' → logprob: -14.125012397766113
    6. 'cells' → logprob: -14.250012397766113
    7. ')_' → logprob: -14.375012397766113
    8. '```' → logprob: -14.875012397766113
    9. '_tokens' → logprob: -15.250012397766113
    10. 's' → logprob: -15.250012397766113

Token 303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023512568441219628
    2. '.' → logprob: -8.375235557556152
    3. ' .' → logprob: -12.875235557556152
    4. '.extend' → logprob: -13.875235557556152
    5. 'append' → logprob: -14.250235557556152
    6. '.app' → logprob: -15.625235557556152
    7. '           ' → logprob: -16.375234603881836
    8. '].' → logprob: -17.375234603881836
    9. ').' → logprob: -17.625234603881836
    10. '_append' → logprob: -18.000234603881836

Token 304: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0004424667276907712
    2. '(' → logprob: -7.7504425048828125
    3. ' (' → logprob: -11.375442504882812
    4. ' elevation' → logprob: -15.875442504882812
    5. '(
' → logprob: -16.000442504882812
    6. 'e' → logprob: -17.875442504882812
    7. '[e' → logprob: -20.000442504882812
    8. '	e' → logprob: -20.500442504882812
    9. ' ' → logprob: -20.875442504882812
    10. ' e' → logprob: -21.000442504882812

Token 305: 'levation' (ID: 130610)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -4.036524842376821e-05
    2. '[' → logprob: -11.125040054321289
    3. 'row' → logprob: -11.625040054321289
    4. ' [' → logprob: -12.000040054321289
    5. '[e' → logprob: -13.250040054321289
    6. '=row' → logprob: -13.750040054321289
    7. 'e' → logprob: -13.875040054321289
    8. ')[' → logprob: -13.875040054321289
    9. '
' → logprob: -14.250040054321289
    10. '][' → logprob: -14.500040054321289

Token 306: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.1472419600977446e-06
    2. 'row' → logprob: -14.375000953674316
    3. '[' → logprob: -15.250000953674316
    4. '(row' → logprob: -15.375000953674316
    5. ' [' → logprob: -17.125001907348633
    6. '=row' → logprob: -17.375001907348633
    7. ' row' → logprob: -17.500001907348633
    8. '```' → logprob: -18.000001907348633
    9. '[
' → logprob: -18.125001907348633
    10. ',row' → logprob: -18.125001907348633

Token 307: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47590282559394836
    2. '[right' → logprob: -0.975902795791626
    3. '[row' → logprob: -6.475903034210205
    4. ' ][' → logprob: -8.600902557373047
    5. ']' → logprob: -10.600902557373047
    6. ')[' → logprob: -10.725902557373047
    7. '[' → logprob: -10.850902557373047
    8. ',right' → logprob: -11.475902557373047
    9. '   ' → logprob: -11.600902557373047
    10. 'right' → logprob: -12.850902557373047

Token 308: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.531315314830863e-06
    2. ' right' → logprob: -12.750003814697266
    3. '[right' → logprob: -14.375003814697266
    4. '
' → logprob: -19.500003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '(right' → logprob: -19.875003814697266
    7. '	right' → logprob: -20.000003814697266
    8. ',right' → logprob: -20.375003814697266
    9. ')' → logprob: -20.500003814697266
    10. 'rightness' → logprob: -20.625003814697266

Token 309: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0025373713579028845
    2. ')' → logprob: -6.002537250518799
    3. ']' → logprob: -10.877537727355957
    4. ' ])' → logprob: -11.002537727355957
    5. ')])' → logprob: -11.627537727355957
    6. '])
' → logprob: -11.752537727355957
    7. ''])' → logprob: -12.752537727355957
    8. ')]' → logprob: -12.877537727355957
    9. '))' → logprob: -13.377537727355957
    10. ']))' → logprob: -14.627537727355957

Token 310: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.551745593547821
    2. '                    
' → logprob: -0.926745593547821
    3. '                        
' → logprob: -4.551745414733887
    4. '
' → logprob: -5.051745414733887
    5. '```' → logprob: -5.551745414733887
    6. '                   
' → logprob: -6.801745414733887
    7. '<|end|>' → logprob: -6.801745414733887
    8. 'newline' → logprob: -7.051745414733887
    9. '                     
' → logprob: -7.176745414733887
    10. '                    ' → logprob: -7.301745414733887

Token 311: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3913700580596924
    2. '                    
' → logprob: -1.1413700580596924
    3. '
' → logprob: -6.016369819641113
    4. '                   
' → logprob: -7.516369819641113
    5. '                        
' → logprob: -7.766369819641113
    6. '                    ' → logprob: -7.891369819641113
    7. '                     
' → logprob: -8.141369819641113
    8. ' 
' → logprob: -9.891369819641113
    9. '  
' → logprob: -10.391369819641113
    10. '               ' → logprob: -10.391369819641113

Token 312: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3153821527957916
    2. 'inner' → logprob: -2.315382242202759
    3. 'min' → logprob: -3.190382242202759
    4. '#' (adapté à ' #') → logprob: -3.315382242202759
    5. '                    
' → logprob: -3.315382242202759
    6. 'outer' → logprob: -4.44038200378418
    7. 'max' → logprob: -4.69038200378418
    8. ' min' → logprob: -4.69038200378418
    9. '
' → logprob: -5.19038200378418
    10. 'minimum' → logprob: -5.44038200378418

Token 313: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06832011789083481
    2. 'inner' → logprob: -2.9433200359344482
    3. '                   ' → logprob: -5.193320274353027
    4. 'valid' → logprob: -5.568320274353027
    5. '#' → logprob: -5.818320274353027
    6. ' for' → logprob: -8.568320274353027
    7. 'min' → logprob: -8.818320274353027
    8. 'max' → logprob: -8.943320274353027
    9. 'found' → logprob: -9.318320274353027
    10. 'is' → logprob: -9.818320274353027

Token 314: ' inner' (ID: 12694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4723670482635498
    2. 'inner' → logprob: -1.2223670482635498
    3. ' for' → logprob: -2.97236704826355
    4. '                   ' → logprob: -3.97236704826355
    5. ' inner' → logprob: -4.597367286682129
    6. '                    ' → logprob: -7.972367286682129
    7. '                    
' → logprob: -8.347367286682129
    8. 'row' → logprob: -9.097367286682129
    9. '#' → logprob: -9.097367286682129
    10. '(inner' → logprob: -9.097367286682129

Token 315: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.6033032536506653
    2. 'for' → logprob: -1.1033031940460205
    3. ' for' → logprob: -2.2283031940460205
    4. 'cells' → logprob: -4.7283034324646
    5. ' cells' → logprob: -5.8533034324646
    6. '                   ' → logprob: -6.9783034324646
    7. '_rows' → logprob: -8.853302955627441
    8. '                    
' → logprob: -8.853302955627441
    9. '
' → logprob: -9.603302955627441
    10. ' ' → logprob: -9.603302955627441

Token 316: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15418574213981628
    2. ' for' → logprob: -2.5291857719421387
    3. 'for' → logprob: -2.7791857719421387
    4. '                    ' → logprob: -7.904185771942139
    5. '                    
' → logprob: -8.15418529510498
    6. '                       ' → logprob: -8.65418529510498
    7. '               ' → logprob: -9.40418529510498
    8. '                        
' → logprob: -10.52918529510498
    9. '           ' → logprob: -10.90418529510498
    10. ':' → logprob: -10.90418529510498

Token 317: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008228140883147717
    2. 'for' → logprob: -5.008228302001953
    3. ' for' → logprob: -6.508228302001953
    4. '                       ' → logprob: -11.633228302001953
    5. '                    ' → logprob: -12.633228302001953
    6. '               ' → logprob: -12.883228302001953
    7. '   ' → logprob: -13.883228302001953
    8. '           ' → logprob: -14.008228302001953
    9. '                    
' → logprob: -14.133228302001953
    10. '                  ' → logprob: -14.383228302001953

Token 318: ' inner' (ID: 12694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038727179169654846
    2. ' for' → logprob: -3.288727283477783
    3. '                   ' → logprob: -7.288727283477783
    4. '                       ' → logprob: -14.288726806640625
    5. '                    ' → logprob: -14.413726806640625
    6. '               ' → logprob: -14.538726806640625
    7. '	for' → logprob: -15.788726806640625
    8. '                    
' → logprob: -16.163726806640625
    9. '   ' → logprob: -16.413726806640625
    10. '           ' → logprob: -16.913726806640625

Token 319: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.12121062725782394
    2. '                   ' → logprob: -2.3712105751037598
    3. 'for' → logprob: -4.12121057510376
    4. 'cells' → logprob: -6.87121057510376
    5. '                    ' → logprob: -7.24621057510376
    6. '               ' → logprob: -7.24621057510376
    7. ' for' → logprob: -7.62121057510376
    8. '                       ' → logprob: -8.121211051940918
    9. '_rows' → logprob: -8.121211051940918
    10. '                     ' → logprob: -8.746211051940918

Token 320: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.003114853287115693
    2. '.append' → logprob: -6.253114700317383
    3. '.' → logprob: -7.753114700317383
    4. '=' → logprob: -7.878114700317383
    5. 'extend' → logprob: -8.378114700317383
    6. ' =' → logprob: -9.253114700317383
    7. 'for' → logprob: -11.628114700317383
    8. ' .' → logprob: -11.753114700317383
    9. 'extends' → logprob: -11.753114700317383
    10. '+=' → logprob: -12.003114700317383

Token 321: ' []
' (ID: 8911)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.04253913834691048
    2. '[
' → logprob: -3.917539119720459
    3. '[' → logprob: -4.417539119720459
    4. ' [' → logprob: -4.667539119720459
    5. '[]
' → logprob: -9.167539596557617
    6. 'e' → logprob: -9.542539596557617
    7. '[row' → logprob: -10.292539596557617
    8. ' ' → logprob: -10.917539596557617
    9. '   ' → logprob: -11.042539596557617
    10. ' [
' → logprob: -11.042539596557617

Token 322: '                   ' (ID: 699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.639058530330658
    2. '                   ' → logprob: -1.1390585899353027
    3. ' for' → logprob: -1.8890585899353027
    4. '                       ' → logprob: -7.514058589935303
    5. '                    ' → logprob: -9.264058113098145
    6. '               ' → logprob: -9.264058113098145
    7. '   ' → logprob: -9.889058113098145
    8. '           ' → logprob: -10.264058113098145
    9. '                    
' → logprob: -11.389058113098145
    10. '       ' → logprob: -11.514058113098145

Token 323: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006351164192892611
    2. ' for' → logprob: -7.750635147094727
    3. '                   ' → logprob: -8.500635147094727
    4. '               ' → logprob: -14.375635147094727
    5. '           ' → logprob: -16.000635147094727
    6. '                       ' → logprob: -16.250635147094727
    7. '                    ' → logprob: -16.500635147094727
    8. '   ' → logprob: -16.625635147094727
    9. '                 ' → logprob: -17.625635147094727
    10. '                     ' → logprob: -17.750635147094727

Token 324: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10699376463890076
    2. 'inner' → logprob: -2.7319936752319336
    3. 'i' → logprob: -3.3569936752319336
    4. ' row' → logprob: -6.981993675231934
    5. 'r' → logprob: -8.356993675231934
    6. ' inner' → logprob: -8.356993675231934
    7. ' i' → logprob: -9.106993675231934
    8. 'in' → logprob: -11.356993675231934
    9. 'inside' → logprob: -12.356993675231934
    10. 'inn' → logprob: -12.606993675231934

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005240156780928373
    2. 'in' → logprob: -5.255239963531494
    3. ' ' → logprob: -12.755240440368652
    4. '=' → logprob: -13.380240440368652
    5. 'range' → logprob: -14.255240440368652
    6. '   ' → logprob: -14.255240440368652
    7. ' =' → logprob: -15.380240440368652
    8. ' range' → logprob: -16.130239486694336
    9. 'top' → logprob: -16.130239486694336
    10. '    ' → logprob: -16.630239486694336

Token 326: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06204431876540184
    2. ' range' → logprob: -2.812044382095337
    3. '(range' → logprob: -9.937044143676758
    4. 'top' → logprob: -10.562044143676758
    5. '(top' → logprob: -13.437044143676758
    6. ' top' → logprob: -14.312044143676758
    7. '   ' → logprob: -16.062044143676758
    8. '	range' → logprob: -16.937044143676758
    9. '[top' → logprob: -17.062044143676758
    10. ' in' → logprob: -17.187044143676758

Token 327: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.0019906130619347095
    2. 'top' → logprob: -6.251990795135498
    3. ' top' → logprob: -10.00199031829834
    4. ' (' → logprob: -11.37699031829834
    5. '[top' → logprob: -12.75199031829834
    6. '(' → logprob: -13.25199031829834
    7. '	top' → logprob: -14.62699031829834
    8. '   ' → logprob: -16.001991271972656
    9. '_top' → logprob: -18.876991271972656
    10. '(t' → logprob: -18.876991271972656

Token 328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009759512729942799
    2. ' +' → logprob: -4.634759426116943
    3. '1' → logprob: -13.384759902954102
    4. '()+' → logprob: -14.259759902954102
    5. ')+' → logprob: -14.759759902954102
    6. '   ' → logprob: -14.884759902954102
    7. '＋' → logprob: -15.259759902954102
    8. '+
' → logprob: -16.5097599029541
    9. ' ' → logprob: -17.0722599029541
    10. '2' → logprob: -17.2597599029541

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -15.000012397766113
    4. 'range' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.12501335144043
    6. 'row' → logprob: -16.37501335144043
    7. '```' → logprob: -16.37501335144043
    8. '+' → logprob: -16.93751335144043
    9. '
' → logprob: -16.93751335144043
    10. '...' → logprob: -17.68751335144043

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006818148540332913
    2. ' ,' → logprob: -7.5006818771362305
    3. ',row' → logprob: -9.50068187713623
    4. ',left' → logprob: -11.12568187713623
    5. ',right' → logprob: -11.37568187713623
    6. ',len' → logprob: -11.62568187713623
    7. ',w' → logprob: -12.00068187713623
    8. '   ' → logprob: -13.12568187713623
    9. ',length' → logprob: -13.37568187713623
    10. ',to' → logprob: -13.62568187713623

Token 331: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.03804149478673935
    2. ' bottom' → logprob: -3.288041591644287
    3. '(bottom' → logprob: -17.413042068481445
    4. 'bot' → logprob: -17.538042068481445
    5. 'b' → logprob: -17.788042068481445
    6. 'Bottom' → logprob: -18.538042068481445
    7. ' ' → logprob: -19.038042068481445
    8. '_bottom' → logprob: -19.413042068481445
    9. '.bottom' → logprob: -20.038042068481445
    10. '   ' → logprob: -20.038042068481445

Token 332: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06838636845350266
    2. '):
' → logprob: -3.3183863162994385
    3. '):' → logprob: -3.8183863162994385
    4. ' -' → logprob: -4.943386554718018
    5. '   ' → logprob: -7.693386554718018
    6. '1' → logprob: -9.06838607788086
    7. ' ' → logprob: -9.31838607788086
    8. ')' → logprob: -10.56838607788086
    9. '+' → logprob: -10.69338607788086
    10. '<|end|>' → logprob: -10.69338607788086

Token 333: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017263730987906456
    2. '       ' → logprob: -5.017263889312744
    3. '                        ' → logprob: -6.142263889312744
    4. '                   ' → logprob: -6.392263889312744
    5. '<|end|>' → logprob: -6.517263889312744
    6. ' ' → logprob: -6.642263889312744
    7. ' for' → logprob: -6.892263889312744
    8. '                    ' → logprob: -7.642263889312744
    9. '   ' → logprob: -7.767263889312744
    10. '    ' → logprob: -7.767263889312744

Token 334: ' inner' (ID: 12694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.041562099009752274
    2. 'for' → logprob: -3.291562080383301
    3. '                       ' → logprob: -5.916562080383301
    4. ' ' → logprob: -7.666562080383301
    5. '                        ' → logprob: -8.9165620803833
    6. '   ' → logprob: -9.2915620803833
    7. '                           ' → logprob: -10.1665620803833
    8. '    ' → logprob: -10.7915620803833
    9. '                   ' → logprob: -11.1665620803833
    10. '                        
' → logprob: -11.2915620803833

Token 335: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0050327288918197155
    2. 'for' → logprob: -6.505032539367676
    3. '                       ' → logprob: -6.755032539367676
    4. 'cells' → logprob: -7.630032539367676
    5. ' for' → logprob: -7.755032539367676
    6. ' ' → logprob: -7.880032539367676
    7. '   ' → logprob: -8.130032539367676
    8. '                           ' → logprob: -8.255032539367676
    9. ',' → logprob: -9.380032539367676
    10. '```' → logprob: -9.880032539367676

Token 336: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.005430239252746105
    2. '.append' → logprob: -5.755430221557617
    3. '.' → logprob: -6.130430221557617
    4. ' .' → logprob: -10.005430221557617
    5. 'extend' → logprob: -10.755430221557617
    6. '                           ' → logprob: -12.755430221557617
    7. ' +=' → logprob: -13.880430221557617
    8. '   ' → logprob: -14.380430221557617
    9. '+=' → logprob: -14.505430221557617
    10. '                       ' → logprob: -14.755430221557617

Token 337: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.012425946071743965
    2. 'e' → logprob: -4.512425899505615
    3. ' elevation' → logprob: -7.387425899505615
    4. '(' → logprob: -7.512425899505615
    5. ' (' → logprob: -8.762426376342773
    6. ' e' → logprob: -10.262426376342773
    7. '[e' → logprob: -12.262426376342773
    8. '([' → logprob: -12.387426376342773
    9. '	e' → logprob: -12.762426376342773
    10. '(
' → logprob: -12.762426376342773

Token 338: 'levation' (ID: 130610)
  Prédit: 'levation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levation' → logprob: -0.0019065011292696
    2. '(e' → logprob: -6.626906394958496
    3. '(' → logprob: -7.751906394958496
    4. 'lev' → logprob: -9.626906394958496
    5. '[' → logprob: -10.376906394958496
    6. '[e' → logprob: -11.126906394958496
    7. 'e' → logprob: -11.876906394958496
    8. 'le' → logprob: -12.126906394958496
    9. '(le' → logprob: -12.501906394958496
    10. '([' → logprob: -12.626906394958496

Token 339: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.981667537620524e-06
    2. 'row' → logprob: -13.375001907348633
    3. ' [' → logprob: -15.375001907348633
    4. '[' → logprob: -15.750001907348633
    5. '(row' → logprob: -17.375001907348633
    6. ' row' → logprob: -17.750001907348633
    7. '	row' → logprob: -18.125001907348633
    8. ')[' → logprob: -18.375001907348633
    9. ',row' → logprob: -18.625001907348633
    10. '=row' → logprob: -18.625001907348633

Token 340: '][' (ID: 2696)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.050627704709768295
    2. '][' → logprob: -3.0506277084350586
    3. '[' → logprob: -6.550627708435059
    4. '[row' → logprob: -7.925627708435059
    5. '[line' → logprob: -9.550627708435059
    6. ')[' → logprob: -9.925627708435059
    7. '[right' → logprob: -10.175627708435059
    8. ' [' → logprob: -11.050627708435059
    9. ' ][' → logprob: -11.050627708435059
    10. 'left' → logprob: -11.675627708435059

Token 341: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.580929347255733e-05
    2. ' left' → logprob: -11.250016212463379
    3. '(left' → logprob: -13.000016212463379
    4. '[left' → logprob: -14.625016212463379
    5. '   ' → logprob: -18.375015258789062
    6. '	left' → logprob: -18.500015258789062
    7. ':left' → logprob: -18.625015258789062
    8. '
' → logprob: -18.625015258789062
    9. '_left' → logprob: -19.500015258789062
    10. ',left' → logprob: -19.500015258789062

Token 342: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024762547109276056
    2. ' +' → logprob: -6.002476215362549
    3. '1' → logprob: -14.502476692199707
    4. '＋' → logprob: -16.75247573852539
    5. ']+' → logprob: -16.87747573852539
    6. '+
' → logprob: -17.87747573852539
    7. '()+' → logprob: -18.00247573852539
    8. '   ' → logprob: -18.62747573852539
    9. ')+' → logprob: -18.87747573852539
    10. '```' → logprob: -19.00247573852539

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. '+' → logprob: -14.37501049041748
    4. '   ' → logprob: -15.12501049041748
    5. '```' → logprob: -15.62501049041748
    6. '2' → logprob: -16.000011444091797
    7. '
' → logprob: -16.000011444091797
    8. 'range' → logprob: -17.250011444091797
    9. ']' → logprob: -17.812511444091797
    10. ' +' → logprob: -17.875011444091797

Token 344: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.004268458113074303
    2. ':' → logprob: -5.504268646240234
    3. ' :' → logprob: -9.004268646240234
    4. ',right' → logprob: -9.879268646240234
    5. 'right' → logprob: -11.254268646240234
    6. ' right' → logprob: -14.004268646240234
    7. '[right' → logprob: -14.254268646240234
    8. '	right' → logprob: -14.754268646240234
    9. ',' → logprob: -14.879268646240234
    10. ':left' → logprob: -15.004268646240234

Token 345: '])
' (ID: 5169)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1320493072271347
    2. '])' → logprob: -2.132049322128296
    3. '1' → logprob: -5.507049083709717
    4. ']' → logprob: -7.757049083709717
    5. '])]' → logprob: -8.382049560546875
    6. ']])' → logprob: -9.382049560546875
    7. ')])' → logprob: -9.507049560546875
    8. ' +' → logprob: -9.882049560546875
    9. ' ' → logprob: -10.257049560546875
    10. '<|end|>' → logprob: -10.507049560546875

Token 346: '                    
' (ID: 23160)
  Prédit: '                    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                    
' → logprob: -0.5002060532569885
    2. '                   ' → logprob: -1.2502059936523438
    3. '
' → logprob: -2.5002059936523438
    4. '<|end|>' → logprob: -4.375205993652344
    5. '                        
' → logprob: -5.500205993652344
    6. '
                    
' → logprob: -6.500205993652344
    7. '    
' → logprob: -6.625205993652344
    8. '            
' → logprob: -7.250205993652344
    9. '<|end|>' → logprob: -7.250205993652344
    10. 'newline' → logprob: -7.250205993652344

Token 347: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5168057084083557
    2. '                    
' → logprob: -1.016805648803711
    3. '
' → logprob: -4.391805648803711
    4. '                        
' → logprob: -5.141805648803711
    5. '                     
' → logprob: -5.516805648803711
    6. '
                    
' → logprob: -6.141805648803711
    7. ' if' → logprob: -6.266805648803711
    8. '                    ' → logprob: -6.266805648803711
    9. '               ' → logprob: -6.516805648803711
    10. '                   
' → logprob: -6.641805648803711

Token 348: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4031892418861389
    2. '                    
' → logprob: -2.528189182281494
    3. 'if' → logprob: -2.653189182281494
    4. 'min' → logprob: -2.903189182281494
    5. ' if' → logprob: -3.278189182281494
    6. ' min' → logprob: -3.778189182281494
    7. 'minimum' → logprob: -3.903189182281494
    8. 'outer' → logprob: -4.153189182281494
    9. ' outer' → logprob: -4.903189182281494
    10. 'max' → logprob: -5.403189182281494

Token 349: ' If' (ID: 1843)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.345229834318161
    2. 'if' → logprob: -1.7202298641204834
    3. 'outer' → logprob: -2.3452298641204834
    4. 'max' → logprob: -4.970229625701904
    5. ' min' → logprob: -5.720229625701904
    6. '#' → logprob: -6.345229625701904
    7. ' if' → logprob: -6.970229625701904
    8. '           ' → logprob: -7.345229625701904
    9. 'height' → logprob: -7.720229625701904
    10. 'lowest' → logprob: -7.845229625701904

Token 350: ' there' (ID: 1354)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6011987328529358
    2. ' not' → logprob: -1.601198673248291
    3. ' max' → logprob: -1.601198673248291
    4. 'min' → logprob: -3.851198673248291
    5. ' len' → logprob: -4.101198673248291
    6. 'max' → logprob: -5.226198673248291
    7. ' outer' → logprob: -6.101198673248291
    8. ' inner' → logprob: -6.476198673248291
    9. 'len' → logprob: -7.226198673248291
    10. 'not' → logprob: -7.976198673248291

Token 351: ' are' (ID: 553)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9491372108459473
    2. ' is' → logprob: -1.4491372108459473
    3. ' max' → logprob: -2.4491372108459473
    4. 'max' → logprob: -2.4491372108459473
    5. 'not' → logprob: -2.6991372108459473
    6. ' are' → logprob: -2.8241372108459473
    7. 'is' → logprob: -3.9491372108459473
    8. ' ' → logprob: -4.074137210845947
    9. 'min' → logprob: -4.324137210845947
    10. 'are' → logprob: -4.699137210845947

Token 352: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12436988949775696
    2. 'not' → logprob: -2.2493698596954346
    3. 'inner' → logprob: -5.624370098114014
    4. ' no' → logprob: -6.124370098114014
    5. ' len' → logprob: -6.249370098114014
    6. ' inner' → logprob: -6.499370098114014
    7. 'len' → logprob: -7.124370098114014
    8. ' ' → logprob: -7.749370098114014
    9. ' outer' → logprob: -8.124369621276855
    10. 'outer' → logprob: -8.499369621276855

Token 353: ' inner' (ID: 12694)
  Prédit: ' inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.2826065123081207
    2. 'inner' → logprob: -1.4076064825057983
    3. ' outer' → logprob: -7.282606601715088
    4. ' ' → logprob: -7.782606601715088
    5. 'outer' → logprob: -8.53260612487793
    6. '_inner' → logprob: -9.78260612487793
    7. '  ' → logprob: -9.90760612487793
    8. 'inners' → logprob: -11.65760612487793
    9. '   ' → logprob: -12.03260612487793
    10. ' spaces' → logprob: -12.28260612487793

Token 354: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.001034595537930727
    2. ' cells' → logprob: -7.501034736633301
    3. 'cells' → logprob: -8.0010347366333
    4. '_' → logprob: -9.0010347366333
    5. ' _' → logprob: -11.3760347366333
    6. ' ' → logprob: -12.8760347366333
    7. '_tokens' → logprob: -13.1260347366333
    8. '_spaces' → logprob: -13.5010347366333
    9. '```' → logprob: -13.5010347366333
    10. '                   ' → logprob: -14.5010347366333

Token 355: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.43663668632507324
    2. ':' → logprob: -1.1866366863250732
    3. ' and' → logprob: -3.4366366863250732
    4. ' continue' → logprob: -5.061636924743652
    5. ' ==' → logprob: -6.061636924743652
    6. 'and' → logprob: -6.311636924743652
    7. ',' → logprob: -6.311636924743652
    8. '==' → logprob: -6.686636924743652
    9. 'or' → logprob: -6.936636924743652
    10. '   ' → logprob: -7.811636924743652

Token 356: 'should' (ID: 10618)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.20899027585983276
    2. 'continue' → logprob: -1.7089903354644775
    3. ')' → logprob: -5.958990097045898
    4. '                   ' → logprob: -6.083990097045898
    5. '                       ' → logprob: -6.958990097045898
    6. '),' → logprob: -7.958990097045898
    7. '
' → logprob: -7.958990097045898
    8. ',' → logprob: -7.958990097045898
    9. '               ' → logprob: -8.583990097045898
    10. ' ' → logprob: -9.583990097045898

Token 357: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05500143766403198
    2. ' continue' → logprob: -3.5550014972686768
    3. 'not' → logprob: -4.055001258850098
    4. 'continue' → logprob: -5.430001258850098
    5. ' be' → logprob: -5.930001258850098
    6. ' return' → logprob: -8.930001258850098
    7. ')' → logprob: -9.680001258850098
    8. '                   ' → logprob: -10.055001258850098
    9. '_continue' → logprob: -10.180001258850098
    10. 'return' → logprob: -10.180001258850098

Token 358: ' happen' (ID: 5659)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08261738717556
    2. 'be' → logprob: -2.9576172828674316
    3. 'continue' → logprob: -4.707617282867432
    4. ' continue' → logprob: -5.082617282867432
    5. ' happen' → logprob: -5.207617282867432
    6. ')' → logprob: -6.082617282867432
    7. '),' → logprob: -7.207617282867432
    8. ' occur' → logprob: -7.457617282867432
    9. 'occur' → logprob: -8.20761775970459
    10. '   ' → logprob: -8.20761775970459

Token 359: ' due' (ID: 5192)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39431124925613403
    2. '),' → logprob: -1.2693111896514893
    3. '                   ' → logprob: -4.269311428070068
    4. ' continue' → logprob: -4.644311428070068
    5. ' ),' → logprob: -5.144311428070068
    6. ')' → logprob: -5.394311428070068
    7. '):' → logprob: -5.894311428070068
    8. '):
' → logprob: -6.144311428070068
    9. ' because' → logprob: -6.769311428070068
    10. ':' → logprob: -6.894311428070068

Token 360: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5237467288970947
    2. ' to' → logprob: -0.8987467288970947
    3. ')' → logprob: -7.648746490478516
    4. '<|end|>' → logprob: -9.648746490478516
    5. '),' → logprob: -9.898746490478516
    6. '
' → logprob: -11.898746490478516
    7. '_to' → logprob: -12.023746490478516
    8. '```' → logprob: -12.773746490478516
    9. ' ' → logprob: -12.898746490478516
    10. '	to' → logprob: -13.148746490478516

Token 361: ' size' (ID: 2349)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8472160696983337
    2. 'minimum' → logprob: -1.4722161293029785
    3. 'min' → logprob: -2.0972161293029785
    4. 'the' → logprob: -2.8472161293029785
    5. ' minimum' → logprob: -3.3472161293029785
    6. 'size' → logprob: -3.4722161293029785
    7. ' the' → logprob: -3.4722161293029785
    8. ' range' → logprob: -3.4722161293029785
    9. ' size' → logprob: -4.4722161293029785
    10. ' min' → logprob: -4.5972161293029785

Token 362: ' constraints' (ID: 31060)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7030325531959534
    2. ')' → logprob: -1.4530324935913086
    3. ' constraints' → logprob: -2.0780324935913086
    4. '>=' → logprob: -3.0780324935913086
    5. '>' → logprob: -3.5780324935913086
    6. ' >=' → logprob: -3.5780324935913086
    7. ' ),' → logprob: -4.078032493591309
    8. ' ' → logprob: -5.078032493591309
    9. 'constraints' → logprob: -5.328032493591309
    10. '
' → logprob: -5.703032493591309

Token 363: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16795283555984497
    2. '                   ' → logprob: -2.5429527759552
    3. '),' → logprob: -3.7929527759552
    4. ' continue' → logprob: -3.9179527759552
    5. '                       ' → logprob: -4.667953014373779
    6. '):' → logprob: -4.792953014373779
    7. ')' → logprob: -5.042953014373779
    8. ' or' → logprob: -5.542953014373779
    9. 'continue' → logprob: -6.167953014373779
    10. ':' → logprob: -6.417953014373779

Token 364: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.030193567276000977
    2. '                   ' → logprob: -4.280193328857422
    3. 'continue' → logprob: -4.405193328857422
    4. '                       ' → logprob: -6.155193328857422
    5. ' if' → logprob: -6.780193328857422
    6. 'if' → logprob: -8.905193328857422
    7. '               ' → logprob: -9.530193328857422
    8. '                    ' → logprob: -9.780193328857422
    9. ' ' → logprob: -9.905193328857422
    10. '   ' → logprob: -10.405193328857422

Token 365: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009599774144589901
    2. '                       ' → logprob: -5.009599685668945
    3. ' continue' → logprob: -6.634599685668945
    4. 'continue' → logprob: -7.134599685668945
    5. 'if' → logprob: -8.009599685668945
    6. '                    
' → logprob: -8.759599685668945
    7. '               ' → logprob: -9.509599685668945
    8. '   ' → logprob: -9.634599685668945
    9. ' if' → logprob: -9.884599685668945
    10. '
' → logprob: -11.009599685668945

Token 366: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014237663708627224
    2. ' continue' → logprob: -4.514237880706787
    3. 'continue' → logprob: -6.889237880706787
    4. ' if' → logprob: -7.389237880706787
    5. '                       ' → logprob: -7.639237880706787
    6. 'if' → logprob: -7.889237880706787
    7. '               ' → logprob: -8.014237403869629
    8. '                    
' → logprob: -8.889237403869629
    9. '                    ' → logprob: -9.889237403869629
    10. '   ' → logprob: -9.889237403869629

Token 367: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3488205373287201
    2. ' if' → logprob: -1.7238205671310425
    3. 'if' (adapté à ' if') → logprob: -2.723820447921753
    4. ' continue' → logprob: -3.098820447921753
    5. 'continue' → logprob: -5.723820686340332
    6. '               ' → logprob: -7.348820686340332
    7. '                       ' → logprob: -7.848820686340332
    8. '                    ' → logprob: -8.223820686340332
    9. '                    
' → logprob: -8.223820686340332
    10. '   ' → logprob: -8.723820686340332

Token 368: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04138517007231712
    2. 'not' → logprob: -3.5413851737976074
    3. ' len' → logprob: -4.541385173797607
    4. 'len' → logprob: -7.041385173797607
    5. ' inner' → logprob: -10.79138469696045
    6. 'inner' → logprob: -11.79138469696045
    7. ' ' → logprob: -12.29138469696045
    8. '(len' → logprob: -14.16638469696045
    9. ' outer' → logprob: -16.291385650634766
    10. '	not' → logprob: -16.541385650634766

Token 369: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.10021886229515076
    2. ' inner' → logprob: -2.3502187728881836
    3. 'outer' → logprob: -11.725218772888184
    4. '(inner' → logprob: -13.350218772888184
    5. ' outer' → logprob: -13.725218772888184
    6. 'inners' → logprob: -14.600218772888184
    7. ' ' → logprob: -15.100218772888184
    8. 'internal' → logprob: -16.2252197265625
    9. 'Inner' → logprob: -16.3502197265625
    10. '_inner' → logprob: -16.3502197265625

Token 370: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -3.9292415749514475e-05
    2. '_' → logprob: -11.125039100646973
    3. 'cells' → logprob: -11.250039100646973
    4. 'inner' → logprob: -12.125039100646973
    5. '_inner' → logprob: -13.000039100646973
    6. '
' → logprob: -14.000039100646973
    7. ' _' → logprob: -14.625039100646973
    8. '   ' → logprob: -14.750039100646973
    9. '```' → logprob: -15.250039100646973
    10. 's' → logprob: -15.500039100646973

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027885886374861
    2. ':
' → logprob: -6.002788543701172
    3. ':return' → logprob: -9.127788543701172
    4. ' or' → logprob: -9.377788543701172
    5. 'continue' → logprob: -9.502788543701172
    6. ' continue' → logprob: -10.502788543701172
    7. '   ' → logprob: -12.252788543701172
    8. ' :' → logprob: -12.252788543701172
    9. '	continue' → logprob: -13.502788543701172
    10. '.' → logprob: -13.752788543701172

Token 372: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00775746488943696
    2. ' continue' → logprob: -5.132757663726807
    3. 'continue' → logprob: -6.382757663726807
    4. '                   ' → logprob: -9.132757186889648
    5. '   ' → logprob: -11.382757186889648
    6. '                           ' → logprob: -12.257757186889648
    7. '       ' → logprob: -12.382757186889648
    8. '               ' → logprob: -13.132757186889648
    9. '	continue' → logprob: -13.382757186889648
    10. '                        
' → logprob: -13.757757186889648

Token 373: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.038057100027799606
    2. ' continue' → logprob: -3.2880570888519287
    3. '                       ' → logprob: -11.538057327270508
    4. '                   ' → logprob: -12.788057327270508
    5. '	continue' → logprob: -13.163057327270508
    6. '   ' → logprob: -14.538057327270508
    7. '                           ' → logprob: -14.788057327270508
    8. 'continu' → logprob: -16.413057327270508
    9. '                               ' → logprob: -16.663057327270508
    10. 'return' → logprob: -16.913057327270508

Token 374: '
                    
' (ID: 158495)
  Prédit: '                    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                    
' → logprob: -0.09272722899913788
    2. '                   ' → logprob: -2.9677271842956543
    3. '
' → logprob: -3.9677271842956543
    4. '
                    
' → logprob: -4.467727184295654
    5. '                     
' → logprob: -6.092727184295654
    6. '                        
' → logprob: -7.092727184295654
    7. '                   
' → logprob: -7.217727184295654
    8. 'outer' → logprob: -7.717727184295654
    9. '            
' → logprob: -7.842727184295654
    10. ' 
' → logprob: -7.842727184295654

Token 375: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14561107754707336
    2. '                    
' → logprob: -2.270611047744751
    3. 'outer' → logprob: -4.14561128616333
    4. ' outer' → logprob: -4.64561128616333
    5. '
' → logprob: -6.52061128616333
    6. '
                    
' → logprob: -6.64561128616333
    7. 'height' → logprob: -7.52061128616333
    8. '               ' → logprob: -7.64561128616333
    9. 'min' → logprob: -8.020610809326172
    10. 'boundary' → logprob: -8.145610809326172

Token 376: ' #' (ID: 1069)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.5955077409744263
    2. 'min' → logprob: -1.4705077409744263
    3. 'max' → logprob: -2.0955076217651367
    4. '                   ' → logprob: -3.5955076217651367
    5. ' outer' → logprob: -3.8455076217651367
    6. ' min' → logprob: -4.345507621765137
    7. ' max' → logprob: -4.345507621765137
    8. 'inner' → logprob: -4.720507621765137
    9. 'lowest' → logprob: -6.095507621765137
    10. 'highest' → logprob: -6.470507621765137

Token 377: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.39671605825424194
    2. 'outer' → logprob: -1.2717161178588867
    3. 'max' → logprob: -3.2717161178588867
    4. ' min' → logprob: -5.271716117858887
    5. ' outer' → logprob: -7.271716117858887
    6. 'minimum' → logprob: -7.646716117858887
    7. 'boundary' → logprob: -7.646716117858887
    8. 'lowest' → logprob: -7.646716117858887
    9. 'border' → logprob: -8.021716117858887
    10. 'wall' → logprob: -8.146716117858887

Token 378: ' lowest' (ID: 23120)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.479756623506546
    2. 'outer' → logprob: -1.4797565937042236
    3. ' min' → logprob: -2.4797565937042236
    4. ' outer' → logprob: -3.3547565937042236
    5. 'wall' → logprob: -4.354756832122803
    6. 'water' → logprob: -5.354756832122803
    7. 'height' → logprob: -5.479756832122803
    8. 'max' → logprob: -5.604756832122803
    9. 'level' → logprob: -6.729756832122803
    10. ' wall' → logprob: -7.104756832122803

Token 379: ' elevation' (ID: 43683)
  Prédit: '_outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -0.0582401342689991
    2. 'outer' → logprob: -3.3082401752471924
    3. '_e' → logprob: -4.558239936828613
    4. '_height' → logprob: -5.808239936828613
    5. ' outer' → logprob: -6.433239936828613
    6. 'e' → logprob: -6.433239936828613
    7. ' =' → logprob: -7.058239936828613
    8. '_inner' → logprob: -7.308239936828613
    9. 'height' → logprob: -7.433239936828613
    10. ' elevation' → logprob: -7.683239936828613

Token 380: ' among' (ID: 6200)
  Prédit: '_outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_outer' → logprob: -1.1404740810394287
    2. 'outer' → logprob: -1.6404740810394287
    3. ' of' → logprob: -2.1404740810394287
    4. ' =' → logprob: -2.1404740810394287
    5. ' in' → logprob: -2.5154740810394287
    6. ' outer' → logprob: -2.8904740810394287
    7. 'of' → logprob: -3.2654740810394287
    8. 'in' → logprob: -3.5154740810394287
    9. ' on' → logprob: -4.015474319458008
    10. '_in' → logprob: -5.140474319458008

Token 381: ' the' (ID: 290)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.22552146017551422
    2. ' outer' → logprob: -1.600521445274353
    3. 'inner' → logprob: -9.475521087646484
    4. '_outer' → logprob: -10.850521087646484
    5. ' inner' → logprob: -12.350521087646484
    6. 'the' → logprob: -13.350521087646484
    7. '   ' → logprob: -13.475521087646484
    8. 'all' → logprob: -14.350521087646484
    9. ' ' → logprob: -14.350521087646484
    10. ' the' → logprob: -14.475521087646484

Token 382: ' outer' (ID: 25982)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.008294818922877312
    2. ' outer' → logprob: -4.883294582366943
    3. 'min' → logprob: -7.508294582366943
    4. 'max' → logprob: -9.133295059204102
    5. ' min' → logprob: -11.633295059204102
    6. 'inner' → logprob: -11.758295059204102
    7. 'minimum' → logprob: -12.508295059204102
    8. '                   ' → logprob: -13.258295059204102
    9. '               ' → logprob: -13.633295059204102
    10. '   ' → logprob: -13.758295059204102

Token 383: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0011466487776488066
    2. 'cells' → logprob: -7.3761467933654785
    3. '_' → logprob: -8.25114631652832
    4. ' cells' → logprob: -9.37614631652832
    5. ' _' → logprob: -10.50114631652832
    6. ')' → logprob: -10.75114631652832
    7. '_outer' → logprob: -10.87614631652832
    8. '```' → logprob: -11.12614631652832
    9. ' ' → logprob: -11.62614631652832
    10. '_layers' → logprob: -11.75114631652832

Token 384: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7471469640731812
    2. '_outer' → logprob: -1.2471469640731812
    3. ' is' → logprob: -2.8721470832824707
    4. ' outer' → logprob: -3.4971470832824707
    5. '                   ' → logprob: -3.4971470832824707
    6. 'outer' → logprob: -3.7471470832824707
    7. '=' → logprob: -3.7471470832824707
    8. ',' → logprob: -4.497147083282471
    9. ')' → logprob: -4.622147083282471
    10. '_e' → logprob: -4.872147083282471

Token 385: '                   ' (ID: 699)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1292260885238647
    2. ' =' → logprob: -1.3792260885238647
    3. '_outer' → logprob: -1.6292260885238647
    4. '_min' → logprob: -3.1292262077331543
    5. '=' → logprob: -3.5042262077331543
    6. '_boundary' → logprob: -3.6292262077331543
    7. 'outer' → logprob: -3.7542262077331543
    8. ' outer' → logprob: -3.7542262077331543
    9. '_' → logprob: -4.254226207733154
    10. '_water' → logprob: -4.504226207733154

Token 386: ' min' (ID: 1349)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.5885656476020813
    2. 'min' (adapté à ' min') → logprob: -1.0885655879974365
    3. 'lowest' → logprob: -3.3385655879974365
    4. 'wall' → logprob: -3.7135655879974365
    5. 'boundary' → logprob: -4.213565826416016
    6. 'bar' → logprob: -4.713565826416016
    7. 'border' → logprob: -4.713565826416016
    8. ' min' → logprob: -5.338565826416016
    9. ' outer' → logprob: -5.838565826416016
    10. 'water' → logprob: -6.088565826416016

Token 387: '_outer' (ID: 164061)
  Prédit: '_outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -0.14520661532878876
    2. '_' → logprob: -2.1452066898345947
    3. '(' → logprob: -4.645206451416016
    4. '_e' → logprob: -4.895206451416016
    5. '_height' → logprob: -7.145206451416016
    6. '_out' → logprob: -9.645206451416016
    7. 'outer' → logprob: -10.395206451416016
    8. '_capacity' → logprob: -11.020206451416016
    9. '_alt' → logprob: -11.145206451416016
    10. '_external' → logprob: -11.395206451416016

Token 388: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1775466650724411
    2. '_e' → logprob: -2.052546739578247
    3. '_outer' → logprob: -3.427546739578247
    4. ' _' → logprob: -6.802546501159668
    5. '_height' → logprob: -8.677546501159668
    6. '_cells' → logprob: -8.802546501159668
    7. '_cell' → logprob: -9.802546501159668
    8. 'e' → logprob: -10.052546501159668
    9. '}_' → logprob: -10.302546501159668
    10. '\' → logprob: -10.552546501159668

Token 389: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002475777640938759
    2. ' min' → logprob: -6.002475738525391
    3. 'max' → logprob: -15.75247573852539
    4. '	min' → logprob: -18.87747573852539
    5. '   ' → logprob: -19.62747573852539
    6. 'float' → logprob: -20.25247573852539
    7. '(min' → logprob: -20.37747573852539
    8. 'minimum' → logprob: -20.50247573852539
    9. ' ' → logprob: -21.25247573852539
    10. '=min' → logprob: -22.00247573852539

Token 390: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.875007629394531
    3. '(
' → logprob: -13.250007629394531
    4. 'outer' → logprob: -13.500007629394531
    5. '(_' → logprob: -13.875007629394531
    6. '(inner' → logprob: -15.625007629394531
    7. '((' → logprob: -15.750007629394531
    8. '([' → logprob: -15.750007629394531
    9. '_outer' → logprob: -16.12500762939453
    10. '(min' → logprob: -16.50000762939453

Token 391: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.005234356038272381
    2. ' outer' → logprob: -5.255234241485596
    3. ')' → logprob: -15.255234718322754
    4. '.outer' → logprob: -16.005233764648438
    5. '_outer' → logprob: -16.755233764648438
    6. 'inner' → logprob: -17.005233764648438
    7. 'Outer' → logprob: -17.380233764648438
    8. '[' → logprob: -18.005233764648438
    9. ' ' → logprob: -18.255233764648438
    10. '   ' → logprob: -18.505233764648438

Token 392: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -7.226628895296017e-06
    2. ')_' → logprob: -12.750007629394531
    3. ' _' → logprob: -13.250007629394531
    4. '```' → logprob: -14.000007629394531
    5. '_tokens' → logprob: -14.250007629394531
    6. ')' → logprob: -15.375007629394531
    7. '_' → logprob: -15.750007629394531
    8. 'cells' → logprob: -15.875007629394531
    9. '
' → logprob: -15.875007629394531
    10. '[' → logprob: -16.87500762939453

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012267775600776076
    2. ' )' → logprob: -7.001226902008057
    3. ')
' → logprob: -8.126226425170898
    4. ',' → logprob: -11.876226425170898
    5. ' )
' → logprob: -12.626226425170898
    6. '+' → logprob: -13.626226425170898
    7. '   ' → logprob: -13.626226425170898
    8. ' +' → logprob: -13.876226425170898
    9. ')+' → logprob: -14.376226425170898
    10. '[' → logprob: -14.626226425170898

Token 394: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6544164419174194
    2. '<|end|>' → logprob: -1.4044164419174194
    3. '
' → logprob: -2.529416561126709
    4. '                    
' → logprob: -2.904416561126709
    5. '                    ' → logprob: -4.154416561126709
    6. ' ' → logprob: -4.279416561126709
    7. ' 
' → logprob: -4.279416561126709
    8. ')' → logprob: -4.404416561126709
    9. '<|end|>' → logprob: -5.279416561126709
    10. '  
' → logprob: -5.279416561126709

Token 395: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036022020503878593
    2. '                    
' → logprob: -6.128602027893066
    3. '                    ' → logprob: -7.253602027893066
    4. '               ' → logprob: -8.253602027893066
    5. ' if' → logprob: -8.503602027893066
    6. 'if' → logprob: -10.003602027893066
    7. '                       ' → logprob: -10.628602027893066
    8. '```' → logprob: -10.628602027893066
    9. '                     
' → logprob: -10.628602027893066
    10. '           ' → logprob: -11.003602027893066

Token 396: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21449528634548187
    2. 'min' → logprob: -2.4644951820373535
    3. 'max' → logprob: -3.0894951820373535
    4. '#' (adapté à ' #') → logprob: -3.2144951820373535
    5. '                   ' → logprob: -4.2144951820373535
    6. 'inner' → logprob: -5.4644951820373535
    7. 'valid' → logprob: -7.0894951820373535
    8. 'can' → logprob: -7.5894951820373535
    9. 'water' → logprob: -7.5894951820373535
    10. ' if' → logprob: -7.8394951820373535

Token 397: ' Check' (ID: 6208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5326171517372131
    2. 'min' → logprob: -1.0326170921325684
    3. 'if' → logprob: -3.1576170921325684
    4. 'inner' → logprob: -4.782617092132568
    5. '#' → logprob: -6.532617092132568
    6. ' min' → logprob: -6.782617092132568
    7. 'for' → logprob: -6.907617092132568
    8. ' max' → logprob: -7.032617092132568
    9. 'current' → logprob: -8.657617568969727
    10. 'If' → logprob: -8.657617568969727

Token 398: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02647794783115387
    2. 'if' → logprob: -3.6514780521392822
    3. '                   ' → logprob: -8.776477813720703
    4. '                    ' → logprob: -12.651477813720703
    5. ' for' → logprob: -12.776477813720703
    6. '   ' → logprob: -12.776477813720703
    7. ' inner' → logprob: -12.901477813720703
    8. '                    
' → logprob: -12.901477813720703
    9. 'for' → logprob: -13.401477813720703
    10. '               ' → logprob: -13.651477813720703

Token 399: ' condition' (ID: 7060)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.96452397108078
    2. 'min' → logprob: -1.0895240306854248
    3. 'if' → logprob: -2.214524030685425
    4. ' max' → logprob: -2.714524030685425
    5. ' min' → logprob: -2.839524030685425
    6. ' if' → logprob: -3.464524030685425
    7. 'inner' → logprob: -5.339523792266846
    8. ' inner' → logprob: -6.339523792266846
    9. 'water' → logprob: -6.464523792266846
    10. 'lowest' → logprob: -6.464523792266846

Token 400: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2249230295419693
    2. '                   ' → logprob: -2.0999231338500977
    3. '                    
' → logprob: -3.0999231338500977
    4. 'if' → logprob: -4.349923133850098
    5. '                    ' → logprob: -4.474923133850098
    6. ' for' → logprob: -5.599923133850098
    7. '                     
' → logprob: -5.974923133850098
    8. '               ' → logprob: -7.224923133850098
    9. ':' → logprob: -7.599923133850098
    10. '                ' → logprob: -8.224923133850098

Token 401: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7506543397903442
    2. ' if' → logprob: -1.2506543397903442
    3. ' all' → logprob: -2.0006542205810547
    4. 'all' → logprob: -3.0006542205810547
    5. ' min' → logprob: -3.3756542205810547
    6. 'min' → logprob: -4.375654220581055
    7. ' max' → logprob: -5.375654220581055
    8. 'max' → logprob: -6.500654220581055
    9. '                   ' → logprob: -7.000654220581055
    10. 'can' → logprob: -7.375654220581055

Token 402: ' outer' (ID: 25982)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.6660037040710449
    2. ' inner' → logprob: -0.7910037040710449
    3. '(inner' → logprob: -4.541003704071045
    4. 'cell' → logprob: -4.791003704071045
    5. ' cell' → logprob: -5.166003704071045
    6. 'cells' → logprob: -6.041003704071045
    7. '(cell' → logprob: -6.791003704071045
    8. 'outer' → logprob: -6.916003704071045
    9. ' cells' → logprob: -7.041003704071045
    10. ' outer' → logprob: -7.291003704071045

Token 403: 'most' (ID: 5309)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0020834049209952354
    2. '_' → logprob: -6.8770833015441895
    3. 'cells' → logprob: -7.5020833015441895
    4. ' cells' → logprob: -8.877083778381348
    5. '>' → logprob: -9.252083778381348
    6. ' _' → logprob: -10.127083778381348
    7. '>=' → logprob: -10.127083778381348
    8. '```' → logprob: -10.252083778381348
    9. '_tokens' → logprob: -10.502083778381348
    10. ' >=' → logprob: -11.002083778381348

Token 404: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.026831161230802536
    2. ' cells' → logprob: -4.526831150054932
    3. '_' → logprob: -5.276831150054932
    4. 'cells' → logprob: -5.526831150054932
    5. ' _' → logprob: -5.651831150054932
    6. '_outer' → logprob: -7.401831150054932
    7. ' outer' → logprob: -7.901831150054932
    8. ' <=' → logprob: -8.02683162689209
    9. '```' → logprob: -8.27683162689209
    10. ' ' → logprob: -8.40183162689209

Token 405: ' strictly' (ID: 38971)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.3416388034820557
    2. ' <=' → logprob: -1.7166388034820557
    3. ' >' → logprob: -1.8416388034820557
    4. ' <' → logprob: -2.0916388034820557
    5. '>=' → logprob: -2.4666388034820557
    6. '>' → logprob: -2.5916388034820557
    7. '<=' → logprob: -3.0916388034820557
    8. ' are' → logprob: -3.3416388034820557
    9. ' must' → logprob: -4.466638565063477
    10. ' have' → logprob: -4.466638565063477

Token 406: ' higher' (ID: 7266)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018052542582154274
    2. 'greater' → logprob: -4.143052577972412
    3. ' >' → logprob: -6.268052577972412
    4. ' greater' → logprob: -9.518052101135254
    5. 'higher' → logprob: -10.518052101135254
    6. '>
' → logprob: -11.518052101135254
    7. 'have' → logprob: -12.768052101135254
    8. '<' → logprob: -12.893052101135254
    9. '>`' → logprob: -14.143052101135254
    10. ' ' → logprob: -14.393052101135254

Token 407: ' than' (ID: 1572)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6110705733299255
    2. ' >' → logprob: -1.1110706329345703
    3. '<|end|>' → logprob: -2.9860706329345703
    4. ' than' → logprob: -3.2360706329345703
    5. 'and' → logprob: -4.86107063293457
    6. ' and' → logprob: -4.98607063293457
    7. ',' → logprob: -5.23607063293457
    8. ' ' → logprob: -5.48607063293457
    9. 'than' → logprob: -5.48607063293457
    10. '_' → logprob: -5.61107063293457

Token 408: ' all' (ID: 722)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.026345007121562958
    2. ' min' → logprob: -3.6513450145721436
    3. 'the' → logprob: -11.151345252990723
    4. '=min' → logprob: -11.651345252990723
    5. 'max' → logprob: -12.401345252990723
    6. ' the' → logprob: -12.526345252990723
    7. 'inner' → logprob: -12.901345252990723
    8. 'all' → logprob: -13.026345252990723
    9. '(min' → logprob: -13.151345252990723
    10. 'minimum' → logprob: -13.276345252990723

Token 409: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.08342454582452774
    2. ' inner' → logprob: -2.7084245681762695
    3. '_inner' → logprob: -5.2084245681762695
    4. 'outer' → logprob: -6.2084245681762695
    5. '<|end|>' → logprob: -6.8334245681762695
    6. 'inners' → logprob: -6.9584245681762695
    7. 'min' → logprob: -7.0834245681762695
    8. '(inner' → logprob: -7.3334245681762695
    9. ' outer' → logprob: -7.8334245681762695
    10. '_' → logprob: -8.08342456817627

Token 410: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.009847339242696762
    2. 'cells' → logprob: -5.509847164154053
    3. '_' → logprob: -5.884847164154053
    4. ' _' → logprob: -7.009847164154053
    5. ' cells' → logprob: -7.384847164154053
    6. '_tokens' → logprob: -7.509847164154053
    7. '```' → logprob: -8.634847640991211
    8. '                   ' → logprob: -9.384847640991211
    9. ')' → logprob: -9.634847640991211
    10. '+' → logprob: -9.759847640991211

Token 411: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3051118850708008
    2. '                   ' → logprob: -1.5551118850708008
    3. '                    
' → logprob: -4.180111885070801
    4. ' if' → logprob: -4.180111885070801
    5. 'and' → logprob: -4.430111885070801
    6. '                    ' → logprob: -5.930111885070801
    7. '
' → logprob: -6.305111885070801
    8. 'if' → logprob: -7.055111885070801
    9. ' 
' → logprob: -7.180111885070801
    10. '                       ' → logprob: -7.430111885070801

Token 412: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3119600713253021
    2. ' if' → logprob: -1.5619601011276245
    3. '                    
' → logprob: -3.686959981918335
    4. '                    ' → logprob: -4.561960220336914
    5. 'if' → logprob: -4.936960220336914
    6. ' and' → logprob: -5.686960220336914
    7. '                       ' → logprob: -5.811960220336914
    8. '               ' → logprob: -6.561960220336914
    9. '
' → logprob: -6.936960220336914
    10. ' >' → logprob: -7.061960220336914

Token 413: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38092324137687683
    2. 'if' → logprob: -1.2559232711791992
    3. '                   ' → logprob: -3.505923271179199
    4. '                    
' → logprob: -6.630923271179199
    5. '                    ' → logprob: -8.0059232711792
    6. ' outer' → logprob: -10.0059232711792
    7. '                     
' → logprob: -10.2559232711792
    8. '
' → logprob: -10.3809232711792
    9. '               ' → logprob: -11.1309232711792
    10. ' 
' → logprob: -11.3809232711792

Token 414: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1587316393852234
    2. ' if' → logprob: -2.033731698989868
    3. '                   ' → logprob: -4.158731460571289
    4. '                    
' → logprob: -8.533731460571289
    5. 'outer' → logprob: -10.658731460571289
    6. ' outer' → logprob: -11.158731460571289
    7. '                    ' → logprob: -11.408731460571289
    8. '   ' → logprob: -11.908731460571289
    9. '               ' → logprob: -11.908731460571289
    10. 'all' → logprob: -12.033731460571289

Token 415: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.009920645505189896
    2. 'nner' → logprob: -4.759920597076416
    3. 'n' → logprob: -6.884920597076416
    4. 'if' → logprob: -8.884921073913574
    5. 's' → logprob: -9.384921073913574
    6. 'm' → logprob: -11.509921073913574
    7. '```' → logprob: -11.759921073913574
    8. '   ' → logprob: -11.759921073913574
    9. 'outer' → logprob: -12.259921073913574
    10. '           ' → logprob: -12.509921073913574

Token 416: '.' (ID: 13)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.30737146735191345
    2. 'f' → logprob: -2.4323713779449463
    3. 'if' → logprob: -2.4323713779449463
    4. ' if' → logprob: -2.9323713779449463
    5. 'all' → logprob: -3.9323713779449463
    6. ' f' → logprob: -5.432371616363525
    7. ' outer' → logprob: -5.557371616363525
    8. 'for' → logprob: -5.932371616363525
    9. '                   ' → logprob: -6.307371616363525
    10. ' for' → logprob: -6.932371616363525

Token 417: ' min' (ID: 1349)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005173158831894398
    2. 'min' → logprob: -5.755173206329346
    3. ' if' → logprob: -6.380173206329346
    4. 'all' → logprob: -8.755172729492188
    5. 'max' → logprob: -9.130172729492188
    6. ' min' → logprob: -10.880172729492188
    7. ' all' → logprob: -12.130172729492188
    8. '   ' → logprob: -12.505172729492188
    9. '                   ' → logprob: -12.630172729492188
    10. '                    
' → logprob: -14.380172729492188

Token 418: ' outer' (ID: 25982)
  Prédit: '_outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -0.09038761258125305
    2. '(' → logprob: -2.4653875827789307
    3. '_' → logprob: -7.46538782119751
    4. '_inner' → logprob: -7.71538782119751
    5. '(inner' → logprob: -9.090387344360352
    6. '(_' → logprob: -9.340387344360352
    7. '(min' → logprob: -9.465387344360352
    8. 'outer' → logprob: -10.215387344360352
    9. ' outer' → logprob: -10.340387344360352
    10. 'Outer' → logprob: -10.715387344360352

Token 419: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6393487453460693
    2. '>' → logprob: -0.7643487453460693
    3. '_outer' → logprob: -5.639348983764648
    4. '_' → logprob: -6.639348983764648
    5. '_cells' → logprob: -7.639348983764648
    6. ' ' → logprob: -8.014348983764648
    7. ')' → logprob: -8.139348983764648
    8. '-' → logprob: -9.014348983764648
    9. '  ' → logprob: -9.389348983764648
    10. 'outer' → logprob: -9.389348983764648

Token 420: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007161272224038839
    2. ' max' → logprob: -7.250716209411621
    3. 'min' → logprob: -12.000716209411621
    4. '(max' → logprob: -17.375715255737305
    5. '	max' → logprob: -19.000715255737305
    6. ' min' → logprob: -19.250715255737305
    7. '   ' → logprob: -19.375715255737305
    8. ' ' → logprob: -19.500715255737305
    9. 'maximum' → logprob: -20.625715255737305
    10. '_max' → logprob: -20.750715255737305

Token 421: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.9406273365020752
    2. '(inner' → logprob: -0.9406273365020752
    3. '_inner' → logprob: -1.5656273365020752
    4. ' inner' → logprob: -4.815627098083496
    5. '(' → logprob: -6.815627098083496
    6. '_outer' → logprob: -7.565627098083496
    7. 'outer' → logprob: -8.690627098083496
    8. '(max' → logprob: -9.565627098083496
    9. '(in' → logprob: -10.065627098083496
    10. '_in' → logprob: -10.315627098083496

Token 422: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5671644806861877
    2. ' and' → logprob: -1.317164421081543
    3. 'and' → logprob: -2.567164421081543
    4. '>' → logprob: -3.442164421081543
    5. ' >' → logprob: -4.567164421081543
    6. ')' → logprob: -4.817164421081543
    7. '                    
' → logprob: -4.942164421081543
    8. '                    ' → logprob: -5.317164421081543
    9. '   ' → logprob: -5.442164421081543
    10. '               ' → logprob: -5.442164421081543

Token 423: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2593420445919037
    2. ' and' → logprob: -2.5093419551849365
    3. ' if' → logprob: -2.7593419551849365
    4. '>' → logprob: -4.009342193603516
    5. ' >' → logprob: -4.259342193603516
    6. '                    ' → logprob: -4.259342193603516
    7. '                    
' → logprob: -4.384342193603516
    8. 'if' → logprob: -4.759342193603516
    9. 'and' → logprob: -5.009342193603516
    10. '               ' → logprob: -6.134342193603516

Token 424: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1933419108390808
    2. '                   ' → logprob: -1.9433419704437256
    3. ' if' → logprob: -3.4433419704437256
    4. 'max' (adapté à ' max') → logprob: -8.068342208862305
    5. '                    
' → logprob: -9.068342208862305
    6. '               ' → logprob: -9.818342208862305
    7. ' max' → logprob: -10.068342208862305
    8. 'inner' → logprob: -10.818342208862305
    9. '           ' → logprob: -11.068342208862305
    10. '                    ' → logprob: -11.443342208862305

Token 425: '_inner' (ID: 81672)
  Prédit: '(inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inner' → logprob: -0.529051661491394
    2. '_inner' → logprob: -0.904051661491394
    3. 'inner' → logprob: -5.654051780700684
    4. '(' → logprob: -6.654051780700684
    5. ' inner' → logprob: -7.654051780700684
    6. '_' → logprob: -7.904051780700684
    7. '_outer' → logprob: -8.779051780700684
    8. '(_' → logprob: -9.904051780700684
    9. '.inner' → logprob: -10.404051780700684
    10. 'Inner' → logprob: -11.904051780700684

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12703856825828552
    2. '=' → logprob: -2.1270384788513184
    3. '=max' → logprob: -9.752038955688477
    4. '<|end|>' → logprob: -10.377038955688477
    5. ' ' → logprob: -11.877038955688477
    6. ')' → logprob: -11.877038955688477
    7. 'max' → logprob: -13.252038955688477
    8. '_' → logprob: -13.252038955688477
    9. '>' → logprob: -14.002038955688477
    10. '   ' → logprob: -14.252038955688477

Token 427: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750484973192215
    2. ' max' → logprob: -3.5297505855560303
    3. '(max' → logprob: -17.15475082397461
    4. '	max' → logprob: -19.40475082397461
    5. ',max' → logprob: -20.52975082397461
    6. '=max' → logprob: -20.52975082397461
    7. '_max' → logprob: -20.77975082397461
    8. ' ' → logprob: -21.27975082397461
    9. '   ' → logprob: -21.52975082397461
    10. '0' → logprob: -21.52975082397461

Token 428: '(inner' (ID: 125841)
  Prédit: '(inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inner' → logprob: -0.003646399360150099
    2. '(' → logprob: -5.878646373748779
    3. 'inner' → logprob: -7.128646373748779
    4. '_inner' → logprob: -10.378646850585938
    5. ' inner' → logprob: -12.378646850585938
    6. '(in' → logprob: -13.378646850585938
    7. '_' → logprob: -14.003646850585938
    8. '(_' → logprob: -14.503646850585938
    9. '<|end|>' → logprob: -15.128646850585938
    10. '(
' → logprob: -15.253646850585938

Token 429: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -6.158350151963532e-05
    2. '_tokens' → logprob: -9.750061988830566
    3. 'inner' → logprob: -14.125061988830566
    4. '_inner' → logprob: -14.250061988830566
    5. 'cells' → logprob: -14.500061988830566
    6. '_cell' → logprob: -15.625061988830566
    7. '(inner' → logprob: -15.875061988830566
    8. ')' → logprob: -15.875061988830566
    9. ')_' → logprob: -16.12506103515625
    10. 'Cells' → logprob: -16.12506103515625

Token 430: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012558852904476225
    2. ')
' → logprob: -9.250125885009766
    3. ' )' → logprob: -10.750125885009766
    4. '<|end|>' → logprob: -12.375125885009766
    5. '                   ' → logprob: -14.500125885009766
    6. '),' → logprob: -14.625125885009766
    7. '   ' → logprob: -14.875125885009766
    8. '+' → logprob: -15.125125885009766
    9. '<|end|>' → logprob: -15.375125885009766
    10. '))' → logprob: -15.500125885009766

Token 431: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.037074968218803406
    2. '                    
' → logprob: -4.287075042724609
    3. '                    ' → logprob: -5.287075042724609
    4. ':' → logprob: -5.412075042724609
    5. ' if' → logprob: -6.162075042724609
    6. '<|end|>' → logprob: -6.162075042724609
    7. '                       ' → logprob: -6.537075042724609
    8. '               ' → logprob: -6.787075042724609
    9. ':
' → logprob: -6.912075042724609
    10. ')' → logprob: -7.162075042724609

Token 432: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1004253402352333
    2. ' if' → logprob: -3.3504252433776855
    3. '                    
' → logprob: -3.4754252433776855
    4. 'if' (adapté à ' if') → logprob: -3.7254252433776855
    5. '                    ' → logprob: -6.6004252433776855
    6. '                        
' → logprob: -7.1004252433776855
    7. '                       ' → logprob: -7.4754252433776855
    8. ' 
' → logprob: -7.7254252433776855
    9. '               ' → logprob: -7.8504252433776855
    10. '
' → logprob: -8.100425720214844

Token 433: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.02975141443312168
    2. 'min' → logprob: -3.5297513008117676
    3. '(min' → logprob: -15.029751777648926
    4. '	min' → logprob: -15.404751777648926
    5. '                   ' → logprob: -16.02975082397461
    6. ' max' → logprob: -16.65475082397461
    7. '_min' → logprob: -16.90475082397461
    8. '    ' → logprob: -17.27975082397461
    9. '   ' → logprob: -17.27975082397461
    10. ' ' → logprob: -17.40475082397461

Token 434: '_outer' (ID: 164061)
  Prédit: '_outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -13.375003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_inner' → logprob: -14.500003814697266
    5. ' outer' → logprob: -15.250003814697266
    6. '(_' → logprob: -15.500003814697266
    7. 'outer' → logprob: -16.750003814697266
    8. '_external' → logprob: -17.500003814697266
    9. 'Outer' → logprob: -17.500003814697266
    10. '_out' → logprob: -17.750003814697266

Token 435: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011052302084863186
    2. '>' → logprob: -4.511052131652832
    3. ' ' → logprob: -13.011052131652832
    4. ' <=' → logprob: -13.386052131652832
    5. '  ' → logprob: -16.01105308532715
    6. ' ' → logprob: -16.01105308532715
    7. ' >
' → logprob: -16.38605308532715
    8. ' >
' → logprob: -16.51105308532715
    9. '   ' → logprob: -16.76105308532715
    10. ')' → logprob: -16.88605308532715

Token 436: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015023599844425917
    2. ' max' → logprob: -6.501502513885498
    3. '(max' → logprob: -20.376502990722656
    4. '=max' → logprob: -20.626502990722656
    5. '[max' → logprob: -21.626502990722656
    6. '	max' → logprob: -22.126502990722656
    7. '_max' → logprob: -24.001502990722656
    8. ' ' → logprob: -24.501502990722656
    9. ',max' → logprob: -24.876502990722656
    10. ':max' → logprob: -25.251502990722656

Token 437: '_inner' (ID: 81672)
  Prédit: '_inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inner' → logprob: -4.47757811343763e-05
    2. '_' → logprob: -11.125044822692871
    3. ' _' → logprob: -11.250044822692871
    4. '_outer' → logprob: -11.375044822692871
    5. 'inner' → logprob: -12.375044822692871
    6. ' inner' → logprob: -14.125044822692871
    7. '(inner' → logprob: -15.500044822692871
    8. ' ' → logprob: -16.375043869018555
    9. 'Inner' → logprob: -16.625043869018555
    10. '_
' → logprob: -17.250043869018555

Token 438: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9048618674278259
    2. ':' → logprob: -1.1548619270324707
    3. ':
' → logprob: -1.2798619270324707
    4. '                   ' → logprob: -6.779861927032471
    5. ' continue' → logprob: -7.404861927032471
    6. 'continue' → logprob: -8.154861450195312
    7. '                           ' → logprob: -9.404861450195312
    8. '                               ' → logprob: -11.029861450195312
    9. '               ' → logprob: -11.154861450195312
    10. '       ' → logprob: -11.654861450195312

Token 439: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002915668999776244
    2. ' continue' → logprob: -6.252915859222412
    3. 'continue' → logprob: -7.127915859222412
    4. '                           ' → logprob: -9.252915382385254
    5. '                   ' → logprob: -9.627915382385254
    6. '   ' → logprob: -11.502915382385254
    7. '                               ' → logprob: -12.252915382385254
    8. '               ' → logprob: -13.002915382385254
    9. '                        
' → logprob: -13.502915382385254
    10. '	continue' → logprob: -13.877915382385254

Token 440: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5562517642974854
    2. '                       ' → logprob: -1.5562517642974854
    3. ' continue' → logprob: -1.5562517642974854
    4. '                           ' → logprob: -5.556251525878906
    5. '   ' → logprob: -7.681251525878906
    6. '                   ' → logprob: -8.556251525878906
    7. '	continue' → logprob: -8.681251525878906
    8. '                               ' → logprob: -9.431251525878906
    9. '               ' → logprob: -11.806251525878906
    10. '           ' → logprob: -11.931251525878906

Token 441: '
                    
' (ID: 158495)
  Prédit: '                    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                    
' → logprob: -0.3991553485393524
    2. '                   ' → logprob: -1.2741553783416748
    3. '
' → logprob: -4.024155139923096
    4. '                        
' → logprob: -4.524155139923096
    5. ' 
' → logprob: -5.024155139923096
    6. '                     
' → logprob: -5.649155139923096
    7. '    
' → logprob: -5.774155139923096
    8. '  
' → logprob: -6.399155139923096
    9. '                    ' → logprob: -6.399155139923096
    10. '                   
' → logprob: -6.899155139923096

Token 442: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39708125591278076
    2. '                    
' → logprob: -1.1470812559127808
    3. '
' → logprob: -5.02208137512207
    4. ' 
' → logprob: -7.14708137512207
    5. '                        
' → logprob: -7.64708137512207
    6. '                    ' → logprob: -7.77208137512207
    7. '                     
' → logprob: -7.77208137512207
    8. '
                    
' → logprob: -7.89708137512207
    9. '                   
' → logprob: -8.27208137512207
    10. '               ' → logprob: -8.77208137512207

Token 443: ' #' (ID: 1069)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.8192459344863892
    2. '                   ' → logprob: -0.9442459344863892
    3. 'depth' → logprob: -2.9442458152770996
    4. 'water' → logprob: -3.3192458152770996
    5. ' capacity' → logprob: -3.4442458152770996
    6. 'height' → logprob: -4.8192458152771
    7. '#' (adapté à ' #') → logprob: -4.9442458152771
    8. '                    
' → logprob: -5.0692458152771
    9. ' water' → logprob: -5.4442458152771
    10. ' #' → logprob: -5.5692458152771

Token 444: ' Calculate' (ID: 38942)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.347540020942688
    2. 'depth' → logprob: -2.3475399017333984
    3. 'water' → logprob: -2.8475399017333984
    4. '#' → logprob: -3.0975399017333984
    5. 'volume' → logprob: -3.4725399017333984
    6. 'height' → logprob: -3.8475399017333984
    7. 'potential' → logprob: -4.597539901733398
    8. 'pond' → logprob: -4.972539901733398
    9. 'current' → logprob: -5.347539901733398
    10. 'possible' → logprob: -5.847539901733398

Token 445: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.1667131781578064
    2. ' capacity' → logprob: -2.166713237762451
    3. '                   ' → logprob: -4.041713237762451
    4. 'water' → logprob: -5.666713237762451
    5. 'volume' → logprob: -5.791713237762451
    6. 'current' → logprob: -5.791713237762451
    7. 'potential' → logprob: -6.041713237762451
    8. ' water' → logprob: -6.541713237762451
    9. 'pool' → logprob: -6.791713237762451
    10. 'depth' → logprob: -6.916713237762451

Token 446: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4901631772518158
    2. ' =' → logprob: -0.9901632070541382
    3. '                   ' → logprob: -4.240163326263428
    4. '                    ' → logprob: -7.365163326263428
    5. '                       ' → logprob: -8.24016284942627
    6. '                    
' → logprob: -8.74016284942627
    7. 'capacity' → logprob: -9.36516284942627
    8. '_capacity' → logprob: -9.86516284942627
    9. '=
' → logprob: -10.11516284942627
    10. ' +=' → logprob: -10.36516284942627

Token 447: ' sum' (ID: 4215)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.09703786671161652
    2. ' capacity' → logprob: -2.4720377922058105
    3. '                   ' → logprob: -6.3470377922058105
    4. 'depth' → logprob: -6.5970377922058105
    5. 'pool' → logprob: -7.0970377922058105
    6. 'water' → logprob: -7.0970377922058105
    7. 'volume' → logprob: -7.2220377922058105
    8. 'min' → logprob: -7.9720377922058105
    9. 'pond' → logprob: -8.097038269042969
    10. ' water' → logprob: -8.222038269042969

Token 448: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03802897408604622
    2. '_' → logprob: -4.163029193878174
    3. '(inner' → logprob: -5.163029193878174
    4. '_inner' → logprob: -5.413029193878174
    5. '_capacity' → logprob: -5.538029193878174
    6. 'inner' → logprob: -5.913029193878174
    7. '_outer' → logprob: -6.913029193878174
    8. 'capacity' → logprob: -7.288029193878174
    9. '(
' → logprob: -7.288029193878174
    10. ' (' → logprob: -7.538029193878174

Token 449: ' inner' (ID: 12694)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.8450955748558044
    2. '(inner' → logprob: -1.7200956344604492
    3. '((' → logprob: -1.9700956344604492
    4. ' (' → logprob: -2.720095634460449
    5. '(' → logprob: -3.095095634460449
    6. '(max' → logprob: -3.220095634460449
    7. 'inner' → logprob: -3.595095634460449
    8. '(row' → logprob: -4.095095634460449
    9. 'min' → logprob: -4.345095634460449
    10. '(i' → logprob: -4.970095634460449

Token 450: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.01584278792142868
    2. 'cells' → logprob: -4.515842914581299
    3. '_' → logprob: -6.390842914581299
    4. ' _' → logprob: -6.640842914581299
    5. '```' → logprob: -8.14084243774414
    6. ')' → logprob: -8.39084243774414
    7. '   ' → logprob: -8.51584243774414
    8. 'cell' → logprob: -8.89084243774414
    9. 'inner' → logprob: -9.01584243774414
    10. '_cell' → logprob: -9.26584243774414

Token 451: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33764177560806274
    2. 'capacity' → logprob: -1.962641716003418
    3. '(' → logprob: -3.712641716003418
    4. '                    
' → logprob: -4.212641716003418
    5. ' -' → logprob: -4.337641716003418
    6. ' capacity' → logprob: -4.712641716003418
    7. '
' → logprob: -4.712641716003418
    8. 'inner' → logprob: -4.712641716003418
    9. '_capacity' → logprob: -4.837641716003418
    10. 'for' → logprob: -4.962641716003418

Token 452: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.12280035763978958
    2. 'min' → logprob: -2.372800350189209
    3. ' (' → logprob: -4.497800350189209
    4. ' min' → logprob: -4.622800350189209
    5. '(max' → logprob: -7.247800350189209
    6. '(' → logprob: -7.622800350189209
    7. 'max' → logprob: -9.497800827026367
    8. '[min' → logprob: -10.247800827026367
    9. '((' → logprob: -10.622800827026367
    10. '   ' → logprob: -11.872800827026367

Token 453: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004716703202575445
    2. ' min' → logprob: -6.004716873168945
    3. '(min' → logprob: -6.129716873168945
    4. ' (' → logprob: -10.504716873168945
    5. '   ' → logprob: -11.504716873168945
    6. '(' → logprob: -12.004716873168945
    7. '[min' → logprob: -12.129716873168945
    8. '```' → logprob: -12.254716873168945
    9. '	min' → logprob: -13.379716873168945
    10. '`' → logprob: -13.754716873168945

Token 454: '_outer' (ID: 164061)
  Prédit: '_outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -4.723352049040841e-06
    2. 'outer' → logprob: -12.750004768371582
    3. ' outer' → logprob: -14.500004768371582
    4. ' _' → logprob: -14.750004768371582
    5. 'Outer' → logprob: -14.750004768371582
    6. '_inner' → logprob: -15.000004768371582
    7. '(' → logprob: -17.375003814697266
    8. '(_' → logprob: -17.750003814697266
    9. '.outer' → logprob: -18.250003814697266
    10. ' -' → logprob: -18.250003814697266

Token 455: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018203208222985268
    2. '-' → logprob: -4.018203258514404
    3. ' ' → logprob: -10.768202781677246
    4. ')' → logprob: -10.768202781677246
    5. '   ' → logprob: -13.018202781677246
    6. ' -
' → logprob: -13.643202781677246
    7. '```' → logprob: -13.768202781677246
    8. ' ' → logprob: -14.018202781677246
    9. '#' → logprob: -14.018202781677246
    10. 'minus' → logprob: -14.018202781677246

Token 456: ' elevation' (ID: 43683)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.9460641741752625
    2. 'e' → logprob: -1.8210642337799072
    3. 'inner' → logprob: -1.8210642337799072
    4. ' elevation' → logprob: -2.9460642337799072
    5. 'height' → logprob: -3.0710642337799072
    6. 'value' → logprob: -3.4460642337799072
    7. 'h' → logprob: -3.4460642337799072
    8. 'val' → logprob: -3.6960642337799072
    9. ' inner' → logprob: -3.8210642337799072
    10. ' cell' → logprob: -3.8210642337799072

Token 457: ')
' (ID: 446)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.12913337349891663
    2. '[i' → logprob: -2.879133462905884
    3. '[cell' → logprob: -3.129133462905884
    4. ')' → logprob: -4.129133224487305
    5. '[' → logprob: -5.504133224487305
    6. '[token' → logprob: -7.879133224487305
    7. 'cell' → logprob: -8.629133224487305
    8. 'row' → logprob: -9.879133224487305
    9. '[j' → logprob: -10.004133224487305
    10. '(row' → logprob: -10.004133224487305

Token 458: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2932032346725464
    2. '                    
' → logprob: -1.7932032346725464
    3. 'capacity' → logprob: -3.168203353881836
    4. ' capacity' → logprob: -4.543203353881836
    5. '
' → logprob: -4.543203353881836
    6. ' 
' → logprob: -5.043203353881836
    7. '                    ' → logprob: -5.543203353881836
    8. '               ' → logprob: -5.918203353881836
    9. '                       ' → logprob: -6.418203353881836
    10. '   ' → logprob: -6.418203353881836

Token 459: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' (adapté à ' capacity') → logprob: -0.05014697462320328
    2. ' capacity' → logprob: -3.05014705657959
    3. '                   ' → logprob: -6.55014705657959
    4. '                    
' → logprob: -10.42514705657959
    5. 'cap' → logprob: -10.67514705657959
    6. 'current' → logprob: -10.67514705657959
    7. 'inner' → logprob: -11.05014705657959
    8. 'total' → logprob: -11.67514705657959
    9. 'volume' → logprob: -12.80014705657959
    10. '```' → logprob: -12.92514705657959

Token 460: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7496492862701416
    2. ' =' → logprob: -0.9996492862701416
    3. '=' → logprob: -1.8746492862701416
    4. '+=' → logprob: -5.1246490478515625
    5. '_' → logprob: -10.124649047851562
    6. '   ' → logprob: -10.499649047851562
    7. '_=' → logprob: -11.624649047851562
    8. ' ' → logprob: -11.999649047851562
    9. '_capacity' → logprob: -12.749649047851562
    10. '                   ' → logprob: -12.749649047851562

Token 461: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.33045050501823425
    2. '0' → logprob: -1.3304505348205566
    3. ' sum' → logprob: -4.080450534820557
    4. ' ' → logprob: -8.955450057983398
    5. '   ' → logprob: -11.455450057983398
    6. '	sum' → logprob: -14.205450057983398
    7. '(sum' → logprob: -14.580450057983398
    8. '  ' → logprob: -15.205450057983398
    9. '           ' → logprob: -15.580450057983398
    10. '=sum' → logprob: -15.580450057983398

Token 462: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.007305480074137449
    2. '((' → logprob: -5.25730562210083
    3. '(' → logprob: -6.25730562210083
    4. '([' → logprob: -9.757305145263672
    5. ' (' → logprob: -10.132305145263672
    6. 'min' → logprob: -10.257305145263672
    7. '[min' → logprob: -11.382305145263672
    8. '([(' → logprob: -12.382305145263672
    9. '[(' → logprob: -13.132305145263672
    10. '(max' → logprob: -13.507305145263672

Token 463: '_outer' (ID: 164061)
  Prédit: '_outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_outer' → logprob: -0.00014525714504998177
    2. '_inner' → logprob: -8.875144958496094
    3. 'outer' → logprob: -13.750144958496094
    4. '(' → logprob: -14.375144958496094
    5. '[_' → logprob: -14.625144958496094
    6. '_-' → logprob: -14.625144958496094
    7. '_' → logprob: -14.625144958496094
    8. '(_' → logprob: -14.625144958496094
    9. '-' → logprob: -15.125144958496094
    10. '-_' → logprob: -15.375144958496094

Token 464: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018151231110095978
    2. '-' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.01815128326416
    4. ' ' → logprob: -15.51815128326416
    5. '-inner' → logprob: -16.518150329589844
    6. '   ' → logprob: -16.768150329589844
    7. '-e' → logprob: -16.893150329589844
    8. ')' → logprob: -17.143150329589844
    9. '  ' → logprob: -17.393150329589844
    10. ',' → logprob: -18.018150329589844

Token 465: ' h' (ID: 312)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.04650920256972313
    2. 'e' → logprob: -3.671509265899658
    3. 'h' → logprob: -4.796509265899658
    4. 'x' → logprob: -5.421509265899658
    5. 'c' → logprob: -5.546509265899658
    6. 'inner' → logprob: -6.671509265899658
    7. 'height' → logprob: -7.296509265899658
    8. 'ic' → logprob: -7.546509265899658
    9. 'val' → logprob: -7.796509265899658
    10. 'ec' → logprob: -8.1715087890625

Token 466: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07901779562234879
    2. 'for' → logprob: -2.5790178775787354
    3. ')' → logprob: -9.329017639160156
    4. '	for' → logprob: -10.579017639160156
    5. ' ' → logprob: -11.329017639160156
    6. '}' → logprob: -15.079017639160156
    7. ']' → logprob: -15.204017639160156
    8. '   ' → logprob: -15.704017639160156
    9. 'inner' → logprob: -15.704017639160156
    10. '[' → logprob: -15.829017639160156

Token 467: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009756323881447315
    2. ' h' → logprob: -4.634756088256836
    3. '	h' → logprob: -15.509756088256836
    4. '_h' → logprob: -17.259756088256836
    5. ' ' → logprob: -17.509756088256836
    6. '<h' → logprob: -18.634756088256836
    7. 'inner' → logprob: -19.134756088256836
    8. 'height' → logprob: -19.384756088256836
    9. '`' → logprob: -19.509756088256836
    10. '   ' → logprob: -19.634756088256836

Token 468: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03092166595160961
    2. 'in' → logprob: -3.530921697616577
    3. 'h' → logprob: -6.780921459197998
    4. ' h' → logprob: -10.280921936035156
    5. ' ' → logprob: -14.155921936035156
    6. ',h' → logprob: -17.280921936035156
    7. 's' → logprob: -17.530921936035156
    8. ')' → logprob: -17.530921936035156
    9. '_h' → logprob: -17.530921936035156
    10. ' ' → logprob: -18.030921936035156

Token 469: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0007102862582542002
    2. ' inner' → logprob: -7.250710487365723
    3. 'inners' → logprob: -16.500709533691406
    4. 'outer' → logprob: -16.750709533691406
    5. '(inner' → logprob: -17.375709533691406
    6. ' ' → logprob: -17.500709533691406
    7. '   ' → logprob: -17.625709533691406
    8. '.inner' → logprob: -18.875709533691406
    9. 'inline' → logprob: -19.375709533691406
    10. '_inner' → logprob: -19.375709533691406

Token 470: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -9.372294698550832e-06
    2. 'cells' → logprob: -12.375009536743164
    3. 'inner' → logprob: -12.625009536743164
    4. '_inner' → logprob: -14.625009536743164
    5. '_cell' → logprob: -14.875009536743164
    6. '_' → logprob: -15.125009536743164
    7. ')' → logprob: -15.375009536743164
    8. 'cell' → logprob: -15.500009536743164
    9. '_tokens' → logprob: -16.000009536743164
    10. 'Cells' → logprob: -16.750009536743164

Token 471: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010531729785725474
    2. '                   ' → logprob: -7.126053333282471
    3. ')
' → logprob: -8.751052856445312
    4. ' )' → logprob: -9.751052856445312
    5. ' if' → logprob: -10.751052856445312
    6. 'if' → logprob: -11.876052856445312
    7. '               ' → logprob: -13.501052856445312
    8. '                    ' → logprob: -14.001052856445312
    9. '                       ' → logprob: -14.626052856445312
    10. '                  ' → logprob: -15.251052856445312

Token 472: '                    
' (ID: 23160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023734312504529953
    2. '                    
' → logprob: -3.8987343311309814
    3. '
' → logprob: -6.523734092712402
    4. '                        
' → logprob: -8.648734092712402
    5. '                    ' → logprob: -8.773734092712402
    6. '				' → logprob: -8.773734092712402
    7. ' if' → logprob: -8.898734092712402
    8. '                       ' → logprob: -8.898734092712402
    9. '               ' → logprob: -8.898734092712402
    10. 'if' → logprob: -9.273734092712402

Token 473: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014464260311797261
    2. ' if' → logprob: -7.12644624710083
    3. 'if' → logprob: -7.62644624710083
    4. '                    
' → logprob: -10.126446723937988
    5. '                       ' → logprob: -10.251446723937988
    6. '               ' → logprob: -10.376446723937988
    7. '                    ' → logprob: -11.376446723937988
    8. '       ' → logprob: -12.001446723937988
    9. '           ' → logprob: -12.126446723937988
    10. '   ' → logprob: -12.251446723937988

Token 474: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007686127442866564
    2. '                   ' → logprob: -5.007686138153076
    3. ' if' → logprob: -7.007686138153076
    4. 'max' → logprob: -9.757685661315918
    5. '               ' → logprob: -13.007685661315918
    6. '           ' → logprob: -13.257685661315918
    7. '
' → logprob: -13.632685661315918
    8. '                       ' → logprob: -14.132685661315918
    9. '                    
' → logprob: -14.882685661315918
    10. '```' → logprob: -15.132685661315918

Token 475: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.3132619559764862
    2. 'capacity' → logprob: -1.3132619857788086
    3. 'Capacity' → logprob: -16.438261032104492
    4. '(cap' → logprob: -16.938261032104492
    5. '_capacity' → logprob: -16.938261032104492
    6. 'cap' → logprob: -18.188261032104492
    7. '   ' → logprob: -18.563261032104492
    8. ' ' → logprob: -18.938261032104492
    9. '.capacity' → logprob: -18.938261032104492
    10. '容量' → logprob: -19.313261032104492

Token 476: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10021670162677765
    2. '>' → logprob: -2.3502166271209717
    3. '   ' → logprob: -11.97521686553955
    4. ' ' → logprob: -13.97521686553955
    5. ' >
' → logprob: -14.35021686553955
    6. '[' → logprob: -14.60021686553955
    7. ')' → logprob: -14.85021686553955
    8. 'max' → logprob: -15.35021686553955
    9. '  ' → logprob: -15.72521686553955
    10. '    ' → logprob: -15.85021686553955

Token 477: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018150994554162025
    2. ' max' → logprob: -4.018150806427002
    3. '                   ' → logprob: -13.76815128326416
    4. '	max' → logprob: -17.018150329589844
    5. '=max' → logprob: -18.018150329589844
    6. '(max' → logprob: -18.268150329589844
    7. '_max' → logprob: -19.018150329589844
    8. '
' → logprob: -19.268150329589844
    9. '                       ' → logprob: -19.518150329589844
    10. '[max' → logprob: -19.768150329589844

Token 478: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -7.465036105713807e-06
    2. 'capacity' → logprob: -12.125007629394531
    3. '_' → logprob: -13.375007629394531
    4. ' capacity' → logprob: -15.375007629394531
    5. 'Capacity' → logprob: -16.37500762939453
    6. '_cap' → logprob: -17.50000762939453
    7. '_
' → logprob: -18.37500762939453
    8. '容量' → logprob: -18.75000762939453
    9. '.capacity' → logprob: -19.25000762939453
    10. 'max' → logprob: -19.50000762939453

Token 479: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004060590174049139
    2. '                       ' → logprob: -6.004060745239258
    3. ':
' → logprob: -6.629060745239258
    4. '=' → logprob: -9.629060745239258
    5. '                   ' → logprob: -9.754060745239258
    6. '):' → logprob: -10.004060745239258
    7. '<|end|>' → logprob: -10.629060745239258
    8. '       ' → logprob: -11.504060745239258
    9. '):
' → logprob: -11.629060745239258
    10. '                           ' → logprob: -11.879060745239258

Token 480: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0012967812363058329
    2. '                   ' → logprob: -7.1262969970703125
    3. ' max' → logprob: -8.376296997070312
    4. '                        
' → logprob: -9.126296997070312
    5. '                           ' → logprob: -10.376296997070312
    6. 'max' → logprob: -10.376296997070312
    7. '```' → logprob: -11.501296997070312
    8. '                        ' → logprob: -11.626296997070312
    9. '       ' → logprob: -11.626296997070312
    10. '                               ' → logprob: -11.751296997070312

Token 481: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.251975417137146
    2. 'max' (adapté à ' max') → logprob: -1.501975417137146
    3. '                       ' → logprob: -10.126975059509277
    4. '                           ' → logprob: -12.251975059509277
    5. '                   ' → logprob: -14.626975059509277
    6. '               ' → logprob: -15.376975059509277
    7. '   ' → logprob: -15.501975059509277
    8. '           ' → logprob: -16.001976013183594
    9. '	max' → logprob: -16.126976013183594
    10. '                               ' → logprob: -16.376976013183594

Token 482: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -2.856408536899835e-05
    2. '_' → logprob: -10.500028610229492
    3. '_cap' → logprob: -14.250028610229492
    4. 'Capacity' → logprob: -15.750028610229492
    5. 'capacity' → logprob: -16.375028610229492
    6. ' _' → logprob: -17.125028610229492
    7. '_code' → logprob: -17.625028610229492
    8. ' capacity' → logprob: -18.125028610229492
    9. '```' → logprob: -18.625028610229492
    10. '_CAP' → logprob: -19.250028610229492

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. '＝' → logprob: -16.636871337890625
    4. ' +=' → logprob: -17.761871337890625
    5. '=max' → logprob: -18.011871337890625
    6. ' =
' → logprob: -18.011871337890625
    7. '.=' → logprob: -18.261871337890625
    8. ' =)' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.761871337890625
    10. ' =
' → logprob: -18.886871337890625

Token 484: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.0031777136027812958
    2. ' capacity' → logprob: -5.753177642822266
    3. 'cap' → logprob: -18.628177642822266
    4. '_capacity' → logprob: -20.503177642822266
    5. 'capac' → logprob: -20.878177642822266
    6. 'Capacity' → logprob: -21.378177642822266
    7. '.capacity' → logprob: -21.878177642822266
    8. '
' → logprob: -23.003177642822266
    9. '容量' → logprob: -23.753177642822266
    10. '(cap' → logprob: -23.753177642822266

Token 485: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2219071388244629
    2. '   ' → logprob: -2.721907138824463
    3. '    
' → logprob: -2.721907138824463
    4. '\n' → logprob: -3.096907138824463
    5. '  
' → logprob: -5.596907138824463
    6. 'return' → logprob: -5.846907138824463
    7. ' 
' → logprob: -5.846907138824463
    8. '<|end|>' → logprob: -5.846907138824463
    9. 'newline' → logprob: -6.596907138824463
    10. '\' → logprob: -6.596907138824463

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13820894062519073
    2. 'return' → logprob: -3.0132088661193848
    3. '
' → logprob: -3.5132088661193848
    4. '    
' → logprob: -3.6382088661193848
    5. ' return' → logprob: -4.638208866119385
    6. '                    
' → logprob: -5.138208866119385
    7. '```' → logprob: -5.638208866119385
    8. '                   ' → logprob: -6.638208866119385
    9. '\n' → logprob: -6.763208866119385
    10. '                        
' → logprob: -7.388208866119385

Token 487: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46035414934158325
    2. ' return' → logprob: -1.7103540897369385
    3. '
' → logprob: -1.9603540897369385
    4. '   ' → logprob: -4.210354328155518
    5. '    
' → logprob: -4.210354328155518
    6. ' 
' → logprob: -4.585354328155518
    7. '	return' → logprob: -6.210354328155518
    8. '```' → logprob: -6.585354328155518
    9. '\n' → logprob: -6.835354328155518
    10. '                    
' → logprob: -6.960354328155518

Token 488: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4740770161151886
    2. ' max' → logprob: -0.9740769863128662
    3. '(max' → logprob: -17.974077224731445
    4. '[max' → logprob: -17.974077224731445
    5. '	max' → logprob: -18.974077224731445
    6. '_max' → logprob: -19.599077224731445
    7. ',max' → logprob: -19.974077224731445
    8. '=max' → logprob: -20.724077224731445
    9. '   ' → logprob: -21.224077224731445
    10. ' ' → logprob: -21.224077224731445

Token 489: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.00012523093027994037
    2. '_' → logprob: -9.00012493133545
    3. '_cap' → logprob: -13.37512493133545
    4. 'Capacity' → logprob: -16.750125885009766
    5. 'capacity' → logprob: -17.125125885009766
    6. '_CAP' → logprob: -18.500125885009766
    7. ' capacity' → logprob: -18.750125885009766
    8. '\' → logprob: -18.750125885009766
    9. '}_' → logprob: -18.750125885009766
    10. ' _' → logprob: -19.375125885009766

Token 490: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0010864014038816094
    2. 'main' → logprob: -7.251086235046387
    3. ' max' → logprob: -8.501086235046387
    4. ' solve' → logprob: -8.876086235046387
    5. '_main' → logprob: -11.626086235046387
    6. ' solution' → logprob: -12.251086235046387
    7. 'max' → logprob: -12.501086235046387
    8. '_' → logprob: -13.001086235046387
    9. ' input' → logprob: -13.126086235046387
    10. 'solve' → logprob: -13.251086235046387

Token 493: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002601438027340919
    2. '():
' → logprob: -8.500260353088379
    3. ' ():' → logprob: -10.375260353088379
    4. '_' → logprob: -11.000260353088379
    5. '()' → logprob: -12.500260353088379
    6. '(' → logprob: -13.000260353088379
    7. '()>' → logprob: -13.625260353088379
    8. '():
' → logprob: -14.000260353088379
    9. '():

' → logprob: -15.375260353088379
    10. '_:' → logprob: -15.750260353088379

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001964082010090351
    2. 'import' → logprob: -7.501964092254639
    3. ' import' → logprob: -7.501964092254639
    4. ' input' → logprob: -8.75196361541748
    5. '    
' → logprob: -8.75196361541748
    6. ' readline' → logprob: -8.75196361541748
    7. '(' → logprob: -9.87696361541748
    8. '```' → logprob: -9.87696361541748
    9. '(n' → logprob: -10.00196361541748
    10. 'input' → logprob: -10.25196361541748

Token 495: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.547745406627655
    2. ' import' → logprob: -1.4227454662322998
    3. ' n' → logprob: -2.7977454662323
    4. 'import' → logprob: -2.7977454662323
    5. 'input' (adapté à ' input') → logprob: -3.4227454662323
    6. '   ' → logprob: -4.297745227813721
    7. 'n' → logprob: -4.422745227813721
    8. ' line' → logprob: -8.297745704650879
    9. ' data' → logprob: -9.047745704650879
    10. ' t' → logprob: -9.797745704650879

Token 496: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5571781396865845
    2. '_line' → logprob: -1.5571781396865845
    3. '_data' → logprob: -1.9321781396865845
    4. '_' → logprob: -3.057178020477295
    5. ' =' → logprob: -4.557178020477295
    6. '=' → logprob: -4.932178020477295
    7. '_lines' → logprob: -5.057178020477295
    8. '_=' → logprob: -9.307178497314453
    9. '_text' → logprob: -9.682178497314453
    10. 'data' → logprob: -9.682178497314453

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25355178117752075
    2. ' =' → logprob: -1.503551721572876
    3. '()' → logprob: -6.503551959991455
    4. '   ' → logprob: -9.128551483154297
    5. '=[]' → logprob: -12.753551483154297
    6. '[' → logprob: -12.753551483154297
    7. '(' → logprob: -13.003551483154297
    8. '=sys' → logprob: -13.503551483154297
    9. '_' → logprob: -13.628551483154297
    10. '	' → logprob: -14.503551483154297

Token 498: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693199515342712
    2. ' sys' → logprob: -2.12693190574646
    3. '[' → logprob: -12.626932144165039
    4. ' [' → logprob: -15.001932144165039
    5. '=sys' → logprob: -16.12693214416504
    6. '(sys' → logprob: -16.37693214416504
    7. '	sys' → logprob: -16.62693214416504
    8. '[]' → logprob: -17.62693214416504
    9. 'list' → logprob: -18.12693214416504
    10. '[]
' → logprob: -19.62693214416504

Token 499: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.463036435074173e-05
    2. '.' → logprob: -10.875024795532227
    3. '.argv' → logprob: -12.500024795532227
    4. 'stdin' → logprob: -13.875024795532227
    5. '.std' → logprob: -14.625024795532227
    6. '.stdout' → logprob: -14.750024795532227
    7. ' .' → logprob: -16.875024795532227
    8. '.st' → logprob: -16.875024795532227
    9. '.readline' → logprob: -17.125024795532227
    10. ' stdin' → logprob: -17.750024795532227

Token 500: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10554433614015579
    2. '.readlines' → logprob: -2.355544328689575
    3. '.' → logprob: -5.605544567108154
    4. '.read' → logprob: -6.730544567108154
    5. 'read' → logprob: -7.730544567108154
    6. '_read' → logprob: -12.355544090270996
    7. ' readline' → logprob: -12.855544090270996
    8. '.stdin' → logprob: -13.355544090270996
    9. ' .' → logprob: -13.730544090270996
    10. '_lines' → logprob: -14.480544090270996

Token 501: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04859315976500511
    2. '()' → logprob: -3.048593044281006
    3. '(' → logprob: -13.048593521118164
    4. ' ().' → logprob: -14.048593521118164
    5. ' ()' → logprob: -14.298593521118164
    6. '())' → logprob: -14.673593521118164
    7. '()

' → logprob: -15.173593521118164
    8. 'lines' → logprob: -15.298593521118164
    9. '()`' → logprob: -15.548593521118164
    10. '()\' → logprob: -15.548593521118164

Token 502: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022655367851257
    2. 'split' → logprob: -1.910226583480835
    3. 'decode' → logprob: -13.535226821899414
    4. 'read' → logprob: -14.160226821899414
    5. 'rstrip' → logprob: -14.660226821899414
    6. ' split' → logprob: -17.535226821899414
    7. ' strip' → logprob: -17.660226821899414
    8. 'replace' → logprob: -18.410226821899414
    9. '(split' → logprob: -19.910226821899414
    10. 'plit' → logprob: -20.160226821899414

Token 503: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003179259831085801
    2. '()' → logprob: -5.75317907333374
    3. '('' → logprob: -14.753179550170898
    4. '()
' → logprob: -14.878179550170898
    5. '(' → logprob: -15.003179550170898
    6. 'split' → logprob: -15.753179550170898
    7. ' ().' → logprob: -16.0031795501709
    8. '().'' → logprob: -16.1281795501709
    9. '()`' → logprob: -17.3781795501709
    10. '（）' → logprob: -17.5031795501709

Token 504: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.25
    3. '(split' → logprob: -16.375
    4. 'strip' → logprob: -18.25
    5. 'spl' → logprob: -20.375
    6. '```' → logprob: -20.75
    7. 'rstrip' → logprob: -21.0
    8. 'decode' → logprob: -21.375
    9. 'plit' → logprob: -21.75
    10. '_split' → logprob: -22.0

Token 505: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.786281406879425
    2. '('\' → logprob: -0.786281406879425
    3. '('' → logprob: -2.5362813472747803
    4. 'lines' → logprob: -4.661281585693359
    5. '("\' → logprob: -9.28628158569336
    6. '()\' → logprob: -9.28628158569336
    7. '(' → logprob: -9.53628158569336
    8. '()
' → logprob: -10.66128158569336
    9. '("("' → logprob: -11.78628158569336
    10. '()[' → logprob: -12.03628158569336

Token 506: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. '\n' → logprob: -13.625000953674316
    3. ' n' → logprob: -18.250001907348633
    4. 'newline' → logprob: -19.125001907348633
    5. 'lines' → logprob: -19.250001907348633
    6. '
' → logprob: -19.750001907348633
    7. ''n' → logprob: -20.375001907348633
    8. ''\' → logprob: -20.500001907348633
    9. '	n' → logprob: -20.875001907348633
    10. '('\' → logprob: -21.375001907348633

Token 507: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023379470221698284
    2. ')
' → logprob: -6.87733793258667
    3. '   ' → logprob: -7.12733793258667
    4. '')' → logprob: -7.62733793258667
    5. '[' → logprob: -12.377338409423828
    6. '")' → logprob: -12.627338409423828
    7. '')
' → logprob: -13.002338409423828
    8. ')
' → logprob: -13.877338409423828
    9. ' )' → logprob: -13.877338409423828
    10. '`)' → logprob: -14.127338409423828

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48584893345832825
    2. ' n' → logprob: -0.9858489036560059
    3. 'n' → logprob: -4.860848903656006
    4. ' for' → logprob: -6.360848903656006
    5. ' d' → logprob: -8.110849380493164
    6. ' num' → logprob: -8.235849380493164
    7. ' t' → logprob: -8.485849380493164
    8. ' size' → logprob: -8.610849380493164
    9. ' idx' → logprob: -8.610849380493164
    10. 'd' → logprob: -8.735849380493164

Token 509: ' idx' (ID: 14016)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005034148693084717
    2. ' d' → logprob: -6.25503396987915
    3. 'n' → logprob: -6.50503396987915
    4. '   ' → logprob: -7.25503396987915
    5. 'dw' → logprob: -8.630034446716309
    6. 'dims' → logprob: -8.630034446716309
    7. 'first' → logprob: -8.880034446716309
    8. 't' → logprob: -9.005034446716309
    9. 'num' → logprob: -9.880034446716309
    10. 'dimensions' → logprob: -10.005034446716309

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011066329665482044
    2. '=' → logprob: -4.511066436767578
    3. ' +=' → logprob: -11.136066436767578
    4. ' ' → logprob: -13.011066436767578
    5. ')' → logprob: -14.511066436767578
    6. ' =)' → logprob: -15.011066436767578
    7. '+=' → logprob: -15.761066436767578
    8. '_' → logprob: -16.011066436767578
    9. ' ' → logprob: -16.136066436767578
    10. '    ' → logprob: -16.136066436767578

Token 511: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009712525061331689
    2. '1' → logprob: -7.25097131729126
    3. ' ' → logprob: -8.250970840454102
    4. '   ' → logprob: -16.1259708404541
    5. '2' → logprob: -16.6259708404541
    6. '```' → logprob: -18.6884708404541
    7. '  ' → logprob: -18.9384708404541
    8. '=' → logprob: -18.9384708404541
    9. '۰' → logprob: -19.4384708404541
    10. '+' → logprob: -20.0009708404541

Token 512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009209888521581888
    2. '1' → logprob: -7.00092077255249
    3. '2' → logprob: -12.000921249389648
    4. ' ' → logprob: -12.625921249389648
    5. '   ' → logprob: -19.50092124938965
    6. '۰' → logprob: -19.93842124938965
    7. '０' → logprob: -20.06342124938965
    8. '```' → logprob: -20.62592124938965
    9. '3' → logprob: -21.12592124938965
    10. '=' → logprob: -21.31342124938965

Token 513: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10466393083333969
    2. '
' → logprob: -2.604663848876953
    3. ' while' → logprob: -4.729663848876953
    4. 'while' → logprob: -5.354663848876953
    5. '    
' → logprob: -5.479663848876953
    6. 'd' → logprob: -5.479663848876953
    7. 'n' → logprob: -7.104663848876953
    8. ' 
' → logprob: -7.354663848876953
    9. ' d' → logprob: -8.229663848876953
    10. ',' → logprob: -8.354663848876953

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5374486446380615
    2. 'n' → logprob: -1.2874486446380615
    3. ' n' → logprob: -2.7874486446380615
    4. 'd' → logprob: -2.9124486446380615
    5. 't' → logprob: -4.287448883056641
    6. ' d' → logprob: -5.162448883056641
    7. ' t' → logprob: -6.537448883056641
    8. 'num' → logprob: -6.537448883056641
    9. 'nd' → logprob: -8.03744888305664
    10. 'while' → logprob: -8.53744888305664

Token 515: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3785400092601776
    2. ' t' → logprob: -2.0035400390625
    3. 'n' → logprob: -2.2535400390625
    4. 'T' → logprob: -4.0035400390625
    5. ' n' → logprob: -4.0035400390625
    6. '   ' → logprob: -4.5035400390625
    7. 'num' → logprob: -4.6285400390625
    8. ' T' → logprob: -5.2535400390625
    9. ' while' → logprob: -5.3785400390625
    10. 'while' (adapté à ' while') → logprob: -5.3785400390625

Token 516: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.005516904406249523
    2. 'idx' → logprob: -5.25551700592041
    3. ' True' → logprob: -8.25551700592041
    4. 'True' → logprob: -10.75551700592041
    5. '(idx' → logprob: -14.00551700592041
    6. '	idx' → logprob: -14.00551700592041
    7. ' ' → logprob: -16.755516052246094
    8. '_idx' → logprob: -17.005516052246094
    9. '   ' → logprob: -17.255516052246094
    10. '[idx' → logprob: -17.505516052246094

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024654850363731384
    2. ':
' → logprob: -4.149654865264893
    3. '   ' → logprob: -5.399654865264893
    4. '       ' → logprob: -5.899654865264893
    5. ' and' → logprob: -7.399654865264893
    6. ',' → logprob: -7.899654865264893
    7. '):' → logprob: -10.024654388427734
    8. 'and' → logprob: -10.024654388427734
    9. '():' → logprob: -10.024654388427734
    10. '<|end|>' → logprob: -10.274654388427734

Token 518: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725473999977112
    2. '       ' → logprob: -0.9225473999977112
    3. ' if' → logprob: -2.5475473403930664
    4. 'if' → logprob: -4.422547340393066
    5. ' try' → logprob: -6.797547340393066
    6. 'try' → logprob: -7.672547340393066
    7. ' ' → logprob: -9.797547340393066
    8. '    ' → logprob: -10.047547340393066
    9. '    
' → logprob: -10.422547340393066
    10. '	   ' → logprob: -10.547547340393066

Token 519: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013995662331581116
    2. ' if' → logprob: -4.63899564743042
    3. 'line' → logprob: -6.01399564743042
    4. '   ' → logprob: -6.88899564743042
    5. 'n' → logprob: -7.26399564743042
    6. ' line' → logprob: -10.263996124267578
    7. 'l' → logprob: -11.263996124267578
    8. '	if' → logprob: -11.888996124267578
    9. ' n' → logprob: -13.013996124267578
    10. 'N' → logprob: -13.513996124267578

Token 520: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.001182607957161963
    2. ' idx' → logprob: -6.751182556152344
    3. '	idx' → logprob: -11.376182556152344
    4. '_idx' → logprob: -14.501182556152344
    5. '(idx' → logprob: -15.251182556152344
    6. '[idx' → logprob: -16.251182556152344
    7. 'index' → logprob: -17.376182556152344
    8. '   ' → logprob: -17.376182556152344
    9. 'not' → logprob: -17.376182556152344
    10. '.idx' → logprob: -17.626182556152344

Token 521: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0263415165245533
    2. ' >=' → logprob: -3.651341438293457
    3. ']>=' → logprob: -10.526341438293457
    4. ')>=' → logprob: -11.776341438293457
    5. '==' → logprob: -12.401341438293457
    6. '+' → logprob: -13.401341438293457
    7. '≥' → logprob: -14.401341438293457
    8. '=' → logprob: -15.276341438293457
    9. ' ' → logprob: -15.776341438293457
    10. '>' → logprob: -16.776342391967773

Token 522: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. 'length' → logprob: -21.125001907348633
    4. '(len' → logprob: -21.125001907348633
    5. '=len' → logprob: -21.750001907348633
    6. '	len' → logprob: -22.375001907348633
    7. '<len' → logprob: -23.500001907348633
    8. ',len' → logprob: -23.750001907348633
    9. '[len' → logprob: -24.250001907348633
    10. 'input' → logprob: -24.250001907348633

Token 523: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014364466071128845
    2. 'input' → logprob: -4.264364242553711
    3. ' input' → logprob: -8.514364242553711
    4. '=input' → logprob: -15.639364242553711
    5. ',input' → logprob: -16.01436424255371
    6. '(' → logprob: -16.63936424255371
    7. '<input' → logprob: -17.26436424255371
    8. ' (' → logprob: -17.76436424255371
    9. '[input' → logprob: -18.13936424255371
    10. '_input' → logprob: -18.13936424255371

Token 524: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. 'lines' → logprob: -17.625
    4. ')' → logprob: -17.625
    5. '_LINES' → logprob: -18.625
    6. '_line' → logprob: -18.75
    7. '_)' → logprob: -19.0
    8. '```' → logprob: -19.625
    9. ' lines' → logprob: -20.375
    10. '_links' → logprob: -20.375

Token 525: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2712216079235077
    2. ':' → logprob: -1.77122163772583
    3. ':
' → logprob: -2.77122163772583
    4. ')' → logprob: -6.39622163772583
    5. '):
' → logprob: -6.77122163772583
    6. '):' → logprob: -7.39622163772583
    7. '   ' → logprob: -7.77122163772583
    8. '       ' → logprob: -7.89622163772583
    9. 'or' → logprob: -8.646221160888672
    10. '           ' → logprob: -8.771221160888672

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0084524005651474
    2. '       ' → logprob: -4.883452415466309
    3. '   ' → logprob: -7.258452415466309
    4. ' break' → logprob: -9.758452415466309
    5. 'break' → logprob: -10.758452415466309
    6. ' ' → logprob: -11.008452415466309
    7. '		' → logprob: -11.633452415466309
    8. '     ' → logprob: -12.133452415466309
    9. '    ' → logprob: -12.258452415466309
    10. '  ' → logprob: -12.508452415466309

Token 527: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08794444054365158
    2. ' break' → logprob: -3.087944507598877
    3. '       ' → logprob: -3.587944507598877
    4. '           ' → logprob: -4.587944507598877
    5. '	break' → logprob: -7.712944507598877
    6. 'return' → logprob: -8.462944030761719
    7. '   ' → logprob: -9.837944030761719
    8. '               ' → logprob: -10.087944030761719
    9. '_break' → logprob: -12.462944030761719
    10. ' return' → logprob: -12.837944030761719

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041133634746074677
    2. '        
' → logprob: -4.041133403778076
    3. '
' → logprob: -4.416133403778076
    4. '  
' → logprob: -5.541133403778076
    5. '    
' → logprob: -6.041133403778076
    6. '   ' → logprob: -6.166133403778076
    7. ' 
' → logprob: -7.416133403778076
    8. '<|end|>' → logprob: -7.541133403778076
    9. '   
' → logprob: -8.166133880615234
    10. '\n' → logprob: -8.416133880615234

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009560934267938137
    2. '   ' → logprob: -5.134561061859131
    3. ' ' → logprob: -6.759561061859131
    4. '        
' → logprob: -7.009561061859131
    5. ' line' → logprob: -8.259560585021973
    6. '<|end|>' → logprob: -8.384560585021973
    7. '
' → logprob: -8.759560585021973
    8. '    
' → logprob: -9.134560585021973
    9. '  
' → logprob: -9.134560585021973
    10. ' if' → logprob: -9.259560585021973

Token 530: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.3515644073486328
    2. 'n' → logprob: -1.8515644073486328
    3. 'dims' → logprob: -2.601564407348633
    4. ' line' → logprob: -4.226564407348633
    5. 'h' → logprob: -4.476564407348633
    6. 'l' → logprob: -4.851564407348633
    7. 'L' → logprob: -5.101564407348633
    8. '   ' → logprob: -5.476564407348633
    9. ' dims' → logprob: -5.726564407348633
    10. ' n' → logprob: -5.726564407348633

Token 531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132871389389038
    2. '=' → logprob: -1.3132871389389038
    3. '=line' → logprob: -10.688286781311035
    4. 's' → logprob: -13.563286781311035
    5. '   ' → logprob: -14.063286781311035
    6. ' =
' → logprob: -16.06328773498535
    7. ' ' → logprob: -16.31328773498535
    8. '=
' → logprob: -16.43828773498535
    9. '＝' → logprob: -17.43828773498535
    10. ')' → logprob: -17.43828773498535

Token 532: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078401252627373
    2. ' input' → logprob: -5.504078388214111
    3. '=input' → logprob: -19.379077911376953
    4. '(input' → logprob: -19.504077911376953
    5. '	input' → logprob: -20.879077911376953
    6. ' ' → logprob: -21.129077911376953
    7. 'import' → logprob: -21.254077911376953
    8. '<input' → logprob: -21.629077911376953
    9. '   ' → logprob: -21.629077911376953
    10. '_input' → logprob: -22.379077911376953

Token 533: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00045426786527968943
    2. '[line' → logprob: -8.25045394897461
    3. '[idx' → logprob: -9.62545394897461
    4. '[' → logprob: -10.62545394897461
    5. 'lines' → logprob: -10.87545394897461
    6. 's' → logprob: -11.00045394897461
    7. ' =' → logprob: -11.37545394897461
    8. '=' → logprob: -11.37545394897461
    9. 'Lines' → logprob: -11.87545394897461
    10. '_LINES' → logprob: -11.87545394897461

Token 534: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.250001907348633
    3. 'idx' → logprob: -14.500001907348633
    4. '```' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '[id' → logprob: -17.000001907348633
    7. '[index' → logprob: -17.125001907348633
    8. '\[' → logprob: -17.375001907348633
    9. '(idx' → logprob: -17.625001907348633
    10. '	idx' → logprob: -17.750001907348633

Token 535: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2841345965862274
    2. ']' → logprob: -1.4091346263885498
    3. ']
' → logprob: -5.909134387969971
    4. '])' → logprob: -8.909134864807129
    5. '.strip' → logprob: -9.534134864807129
    6. ' ].' → logprob: -10.659134864807129
    7. ')' → logprob: -11.409134864807129
    8. ').' → logprob: -12.284134864807129
    9. ' ]' → logprob: -12.659134864807129
    10. ')]' → logprob: -13.159134864807129

Token 536: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.547789674485102e-05
    2. 'split' → logprob: -10.250035285949707
    3. 'rstrip' → logprob: -19.000036239624023
    4. '.strip' → logprob: -22.125036239624023
    5. ' strip' → logprob: -22.250036239624023
    6. 'startswith' → logprob: -23.375036239624023
    7. '_strip' → logprob: -24.000036239624023
    8. '-strip' → logprob: -25.000036239624023
    9. 'stripe' → logprob: -25.250036239624023
    10. 'skip' → logprob: -25.500036239624023

Token 537: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00978406984359026
    2. '()
' → logprob: -4.63478422164917
    3. '())' → logprob: -11.759783744812012
    4. '()`' → logprob: -12.134783744812012
    5. '()\' → logprob: -12.634783744812012
    6. '()]' → logprob: -13.259783744812012
    7. '().' → logprob: -13.509783744812012
    8. '()

' → logprob: -13.509783744812012
    9. '()
' → logprob: -13.759783744812012
    10. '()</' → logprob: -13.884783744812012

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4958939254283905
    2. '<|end|>' → logprob: -0.9958939552307129
    3. ' if' → logprob: -4.870893955230713
    4. '   ' → logprob: -5.120893955230713
    5. '<|end|>' → logprob: -5.745893955230713
    6. 'if' → logprob: -6.495893955230713
    7. ' ' → logprob: -6.995893955230713
    8. '        
' → logprob: -7.120893955230713
    9. '```' → logprob: -7.870893955230713
    10. '\' → logprob: -8.370893478393555

Token 539: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.3596853831550106e-05
    2. 'idx' → logprob: -10.000053405761719
    3. ' if' → logprob: -11.750053405761719
    4. '       ' → logprob: -16.00005340576172
    5. '
' → logprob: -17.25005340576172
    6. '   ' → logprob: -17.62505340576172
    7. '	if' → logprob: -19.00005340576172
    8. '           ' → logprob: -19.00005340576172
    9. '        
' → logprob: -19.12505340576172
    10. '```' → logprob: -19.25005340576172

Token 540: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.29476049542427063
    2. ' not' → logprob: -1.7947604656219482
    3. 'not' → logprob: -2.5447604656219482
    4. ' line' → logprob: -4.544760704040527
    5. '#line' → logprob: -13.044760704040527
    6. ' ' → logprob: -13.044760704040527
    7. '(line' → logprob: -13.669760704040527
    8. '	line' → logprob: -13.919760704040527
    9. 'len' → logprob: -14.294760704040527
    10. '[line' → logprob: -14.669760704040527

Token 541: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '	line' → logprob: -18.001502990722656
    4. '(line' → logprob: -19.001502990722656
    5. '#line' → logprob: -20.876502990722656
    6. 'Line' → logprob: -21.001502990722656
    7. '```' → logprob: -21.001502990722656
    8. 'l' → logprob: -21.126502990722656
    9. '
' → logprob: -21.126502990722656
    10. '[line' → logprob: -21.126502990722656

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.410820871591568
    2. ' or' → logprob: -1.4108208417892456
    3. ':
' → logprob: -2.410820960998535
    4. 'or' → logprob: -5.910820960998535
    5. '<|end|>' → logprob: -8.535820960998535
    6. '.' → logprob: -9.535820960998535
    7. ':return' → logprob: -9.535820960998535
    8. '   ' → logprob: -10.035820960998535
    9. '.startswith' → logprob: -10.785820960998535
    10. '<|end|>' → logprob: -11.410820960998535

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008011689060367644
    2. 'break' → logprob: -7.875801086425781
    3. '               ' → logprob: -9.250801086425781
    4. ':' → logprob: -9.375801086425781
    5. '       ' → logprob: -9.750801086425781
    6. ' break' → logprob: -9.875801086425781
    7. ':
' → logprob: -10.500801086425781
    8. '   ' → logprob: -10.625801086425781
    9. ' or' → logprob: -11.250801086425781
    10. '		' → logprob: -11.375801086425781

Token 544: ' idx' (ID: 14016)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.10399828851222992
    2. ' break' → logprob: -3.2289981842041016
    3. '           ' → logprob: -3.3539981842041016
    4. 'idx' (adapté à ' idx') → logprob: -3.8539981842041016
    5. '       ' → logprob: -6.103998184204102
    6. ' idx' → logprob: -7.353998184204102
    7. '   ' → logprob: -9.353998184204102
    8. 'return' → logprob: -10.478998184204102
    9. '               ' → logprob: -11.228998184204102
    10. '	break' → logprob: -11.353998184204102

Token 545: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002422779070911929
    2. ' +=' → logprob: -8.375242233276367
    3. '=' → logprob: -12.000242233276367
    4. '+' → logprob: -12.250242233276367
    5. ']+=' → logprob: -14.625242233276367
    6. '```' → logprob: -15.875242233276367
    7. '           ' → logprob: -16.375242233276367
    8. '   ' → logprob: -16.625242233276367
    9. '++' → logprob: -16.875242233276367
    10. '==' → logprob: -17.875242233276367

Token 546: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -21.250036239624023
    4. '   ' → logprob: -21.375036239624023
    5. '１' → logprob: -22.375036239624023
    6. '+' → logprob: -23.125036239624023
    7. '2' → logprob: -23.250036239624023
    8. '
' → logprob: -23.250036239624023
    9. '۱' → logprob: -23.375036239624023
    10. '0' → logprob: -24.000036239624023

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '１' → logprob: -21.125001907348633
    6. '۱' → logprob: -22.250001907348633
    7. '+' → logprob: -22.500001907348633
    8. '
' → logprob: -22.687501907348633
    9. '2' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.312501907348633

Token 548: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.611323624383658e-05
    2. 'continue' → logprob: -10.125065803527832
    3. ' continue' → logprob: -11.375065803527832
    4. '       ' → logprob: -12.625065803527832
    5. '```' → logprob: -12.625065803527832
    6. '		' → logprob: -13.250065803527832
    7. '<|end|>' → logprob: -13.625065803527832
    8. '   ' → logprob: -13.625065803527832
    9. '               ' → logprob: -13.875065803527832
    10. '          ' → logprob: -14.250065803527832

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031613188330084085
    2. 'continue' → logprob: -6.253161430358887
    3. ' continue' → logprob: -6.753161430358887
    4. '       ' → logprob: -9.753161430358887
    5. '   ' → logprob: -12.378161430358887
    6. ' ' → logprob: -14.503161430358887
    7. '               ' → logprob: -14.628161430358887
    8. '		' → logprob: -14.753161430358887
    9. '	continue' → logprob: -15.253161430358887
    10. '          ' → logprob: -15.503161430358887

Token 550: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.24622906744480133
    2. '           ' → logprob: -1.9962290525436401
    3. ' continue' → logprob: -2.4962291717529297
    4. 'break' → logprob: -11.62122917175293
    5. '       ' → logprob: -12.87122917175293
    6. '	continue' → logprob: -13.12122917175293
    7. '```' → logprob: -14.49622917175293
    8. '		' → logprob: -15.37122917175293
    9. ' break' → logprob: -15.49622917175293
    10. '   ' → logprob: -15.49622917175293

Token 551: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000282431225059554
    2. '        
' → logprob: -8.625282287597656
    3. 'if' → logprob: -9.625282287597656
    4. '
' → logprob: -11.500282287597656
    5. '   ' → logprob: -11.875282287597656
    6. ' if' → logprob: -12.375282287597656
    7. '<|end|>' → logprob: -12.375282287597656
    8. '```' → logprob: -13.000282287597656
    9. '           ' → logprob: -13.250282287597656
    10. 'n' → logprob: -13.625282287597656

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007347009377554059
    2. 'if' → logprob: -8.125734329223633
    3. 'd' → logprob: -8.875734329223633
    4. 'n' → logprob: -9.375734329223633
    5. ' if' → logprob: -9.375734329223633
    6. '```' → logprob: -10.250734329223633
    7. '   ' → logprob: -10.625734329223633
    8. '        
' → logprob: -10.875734329223633
    9. '<|end|>' → logprob: -11.375734329223633
    10. 'try' → logprob: -11.875734329223633

Token 553: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.236913800239563
    2. 'dims' → logprob: -2.2369136810302734
    3. 'n' → logprob: -2.9869136810302734
    4. 'h' → logprob: -4.361913681030273
    5. 'parts' → logprob: -4.611913681030273
    6. 'D' → logprob: -4.986913681030273
    7. ' parts' → logprob: -5.111913681030273
    8. ' dims' → logprob: -5.611913681030273
    9. 'try' → logprob: -5.736913681030273
    10. 'if' → logprob: -5.986913681030273

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029884008690714836
    2. ',w' → logprob: -3.529884099960327
    3. ' ,' → logprob: -9.279884338378906
    4. ',d' → logprob: -11.654884338378906
    5. ',width' → logprob: -11.904884338378906
    6. '=' → logprob: -12.404884338378906
    7. 'w' → logprob: -12.904884338378906
    8. ',int' → logprob: -13.029884338378906
    9. ',num' → logprob: -13.029884338378906
    10. ',line' → logprob: -13.529884338378906

Token 555: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.061970602720975876
    2. ' w' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.561970710754395
    4. '<|end|>' → logprob: -14.561970710754395
    5. ' =' → logprob: -15.061970710754395
    6. '=' → logprob: -15.686970710754395
    7. '  ' → logprob: -15.686970710754395
    8. ',w' → logprob: -15.686970710754395
    9. 's' → logprob: -16.186969757080078
    10. '=w' → logprob: -16.311969757080078

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254440188407898
    2. ' =' → logprob: -1.6004440784454346
    3. ',' → logprob: -10.725443840026855
    4. '<|end|>' → logprob: -12.225443840026855
    5. '=int' → logprob: -13.475443840026855
    6. '=line' → logprob: -13.725443840026855
    7. ')' → logprob: -14.225443840026855
    8. ' ' → logprob: -15.475443840026855
    9. ')=' → logprob: -15.600443840026855
    10. '<|end|>' → logprob: -16.475444793701172

Token 557: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12692904472351074
    2. 'map' → logprob: -2.1269290447235107
    3. '(map' → logprob: -14.75192928314209
    4. '[' → logprob: -14.87692928314209
    5. '	map' → logprob: -16.251928329467773
    6. ' [' → logprob: -17.001928329467773
    7. 'list' → logprob: -18.251928329467773
    8. ' ' → logprob: -18.376928329467773
    9. '.map' → logprob: -18.376928329467773
    10. '_map' → logprob: -18.501928329467773

Token 558: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005342059303075075
    2. '(' → logprob: -8.375534057617188
    3. 'int' → logprob: -9.125534057617188
    4. '(str' → logprob: -9.250534057617188
    5. '(lambda' → logprob: -9.250534057617188
    6. '[int' → logprob: -14.250534057617188
    7. '<int' → logprob: -14.625534057617188
    8. '=int' → logprob: -14.750534057617188
    9. 'str' → logprob: -15.125534057617188
    10. '()' → logprob: -15.375534057617188

Token 559: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06701818853616714
    2. ')' → logprob: -3.0670182704925537
    3. '(input' → logprob: -4.817018032073975
    4. '(' → logprob: -4.817018032073975
    5. 'line' → logprob: -6.317018032073975
    6. 'input' → logprob: -8.817018508911133
    7. '#line' → logprob: -10.442018508911133
    8. ' line' → logprob: -10.692018508911133
    9. '[line' → logprob: -10.692018508911133
    10. ',line' → logprob: -10.692018508911133

Token 560: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0016237606760114431
    2. ' line' → logprob: -7.001623630523682
    3. 'input' → logprob: -7.251623630523682
    4. ' input' → logprob: -12.75162410736084
    5. '(line' → logprob: -15.87662410736084
    6. '[line' → logprob: -18.626623153686523
    7. '=line' → logprob: -18.751623153686523
    8. '	line' → logprob: -19.126623153686523
    9. ')' → logprob: -19.126623153686523
    10. '#line' → logprob: -19.501623153686523

Token 561: '.split' (ID: 10347)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030444754287600517
    2. '().' → logprob: -4.155444622039795
    3. '.split' → logprob: -4.655444622039795
    4. '(' → logprob: -6.530444622039795
    5. 'split' → logprob: -6.905444622039795
    6. '()' → logprob: -7.780444622039795
    7. '(split' → logprob: -7.780444622039795
    8. '())' → logprob: -7.905444622039795
    9. '.strip' → logprob: -8.030445098876953
    10. '.readline' → logprob: -8.405445098876953

Token 562: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.028652813285589218
    2. '()' → logprob: -3.7786529064178467
    3. '('' → logprob: -5.403652667999268
    4. '(','' → logprob: -7.528652667999268
    5. '(' → logprob: -8.278653144836426
    6. ')' → logprob: -9.653653144836426
    7. '())
' → logprob: -10.903653144836426
    8. '(',' → logprob: -11.903653144836426
    9. '()))' → logprob: -13.153653144836426
    10. '()]' → logprob: -13.153653144836426

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10606691986322403
    2. '<|end|>' → logprob: -2.731066942214966
    3. ' if' → logprob: -3.981066942214966
    4. '   ' → logprob: -4.981066703796387
    5. 'if' → logprob: -5.106066703796387
    6. '<|end|>' → logprob: -6.731066703796387
    7. '```' → logprob: -7.231066703796387
    8. '        
' → logprob: -8.356066703796387
    9. '[idx' → logprob: -8.481066703796387
    10. '#' → logprob: -8.606066703796387

Token 564: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03218066692352295
    2. ' if' → logprob: -3.5321807861328125
    3. 'idx' → logprob: -6.0321807861328125
    4. '[idx' → logprob: -11.157180786132812
    5. ' idx' → logprob: -12.157180786132812
    6. '```' → logprob: -12.657180786132812
    7. '   ' → logprob: -13.532180786132812
    8. '	if' → logprob: -13.657180786132812
    9. '	idx' → logprob: -14.782180786132812
    10. '<|end|>' → logprob: -14.782180786132812

Token 565: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018150296062231064
    2. ' d' → logprob: -4.018150329589844
    3. '(d' → logprob: -14.893150329589844
    4. '	d' → logprob: -17.893150329589844
    5. ' (' → logprob: -19.768150329589844
    6. '(' → logprob: -19.893150329589844
    7. '[d' → logprob: -20.643150329589844
    8. '_d' → logprob: -21.143150329589844
    9. ')d' → logprob: -21.393150329589844
    10. ' ' → logprob: -21.643150329589844

Token 566: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16035471856594086
    2. ' ==' → logprob: -1.910354733467102
    3. '=' → logprob: -9.410354614257812
    4. 'd' → logprob: -11.160354614257812
    5. ' ' → logprob: -11.285354614257812
    6. '===' → logprob: -12.160354614257812
    7. 'and' → logprob: -12.285354614257812
    8. '<=' → logprob: -12.785354614257812
    9. '0' → logprob: -13.035354614257812
    10. ']==' → logprob: -13.535354614257812

Token 567: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -19.125019073486328
    4. 'w' → logprob: -19.375019073486328
    5. 'd' → logprob: -19.375019073486328
    6. '```' → logprob: -20.375019073486328
    7. '=' → logprob: -20.750019073486328
    8. '０' → logprob: -21.000019073486328
    9. '٠' → logprob: -21.000019073486328
    10. '00' → logprob: -21.437519073486328

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'w' → logprob: -16.500001907348633
    4. '```' → logprob: -17.750001907348633
    5. 'd' → logprob: -17.875001907348633
    6. '۰' → logprob: -17.937501907348633
    7. '-' → logprob: -18.687501907348633
    8. '０' → logprob: -19.062501907348633
    9. 'and' → logprob: -19.062501907348633
    10. '٠' → logprob: -19.250001907348633

Token 569: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868732452392578
    2. 'and' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.886873245239258
    4. '	and' → logprob: -14.136873245239258
    5. '0' → logprob: -15.136873245239258
    6. '<|end|>' → logprob: -16.136873245239258
    7. ' or' → logprob: -16.386873245239258
    8. ' и' → logprob: -16.886873245239258
    9. '   ' → logprob: -17.386873245239258
    10. '  ' → logprob: -18.636873245239258

Token 570: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1269284337759018
    2. ' w' → logprob: -2.1269283294677734
    3. '	w' → logprob: -15.626928329467773
    4. '   ' → logprob: -16.376928329467773
    5. '  ' → logprob: -17.876928329467773
    6. '    ' → logprob: -18.126928329467773
    7. ' ' → logprob: -18.376928329467773
    8. ' ' → logprob: -19.751928329467773
    9. 'W' → logprob: -20.376928329467773
    10. '<w' → logprob: -20.876928329467773

Token 571: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6328938007354736
    2. '==' → logprob: -0.7578938007354736
    3. '=' → logprob: -8.757893562316895
    4. '0' → logprob: -9.382893562316895
    5. ' ' → logprob: -11.257893562316895
    6. ' =' → logprob: -11.257893562316895
    7. '<|end|>' → logprob: -11.382893562316895
    8. '===' → logprob: -12.132893562316895
    9. ')==' → logprob: -12.382893562316895
    10. ')' → logprob: -13.507893562316895

Token 572: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -22.37501335144043
    4. '۰' → logprob: -22.50001335144043
    5. '  ' → logprob: -23.12501335144043
    6. '   ' → logprob: -23.37501335144043
    7. '```' → logprob: -24.25001335144043
    8. '০' → logprob: -24.62501335144043
    9. '<|end|>' → logprob: -25.25001335144043
    10. '=' → logprob: -25.37501335144043

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -21.375003814697266
    4. '<|end|>' → logprob: -22.250003814697266
    5. '০' → logprob: -22.625003814697266
    6. '```' → logprob: -22.750003814697266
    7. '  ' → logprob: -23.000003814697266
    8. '०' → logprob: -23.125003814697266
    9. '   ' → logprob: -23.125003814697266
    10. '<|end|>' → logprob: -23.812503814697266

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2014642059803009
    2. ':
' → logprob: -1.7014641761779785
    3. '       ' → logprob: -10.951464653015137
    4. '   ' → logprob: -11.201464653015137
    5. ':return' → logprob: -11.451464653015137
    6. ':
' → logprob: -12.326464653015137
    7. '           ' → logprob: -13.326464653015137
    8. '):
' → logprob: -14.076464653015137
    9. ' break' → logprob: -14.326464653015137
    10. ':

' → logprob: -15.076464653015137

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.958325295476243e-05
    2. '       ' → logprob: -9.625079154968262
    3. '   ' → logprob: -12.000079154968262
    4. '		' → logprob: -12.750079154968262
    5. ' break' → logprob: -13.875079154968262
    6. '          ' → logprob: -13.875079154968262
    7. '               ' → logprob: -14.125079154968262
    8. '	       ' → logprob: -14.750079154968262
    9. '         ' → logprob: -15.500079154968262
    10. ',' → logprob: -15.500079154968262

Token 576: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09549254179000854
    2. 'break' (adapté à ' break') → logprob: -2.5954926013946533
    3. '           ' → logprob: -4.345492362976074
    4. '       ' → logprob: -6.345492362976074
    5. ' return' → logprob: -6.970492362976074
    6. 'return' → logprob: -7.345492362976074
    7. '	break' → logprob: -8.845492362976074
    8. '   ' → logprob: -11.845492362976074
    9. '_break' → logprob: -12.345492362976074
    10. '               ' → logprob: -12.470492362976074

Token 577: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003532198315951973
    2. '   ' → logprob: -8.62535285949707
    3. '
' → logprob: -9.75035285949707
    4. '        
' → logprob: -9.87535285949707
    5. '<|end|>' → logprob: -10.25035285949707
    6. '```' → logprob: -11.25035285949707
    7. '           ' → logprob: -12.25035285949707
    8. 'idx' → logprob: -13.50035285949707
    9. ',' → logprob: -13.62535285949707
    10. '    
' → logprob: -13.75035285949707

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03428775072097778
    2. '   ' → logprob: -3.409287691116333
    3. '```' → logprob: -8.534287452697754
    4. '
' → logprob: -8.909287452697754
    5. 'idx' → logprob: -9.034287452697754
    6. '        
' → logprob: -9.659287452697754
    7. '<|end|>' → logprob: -9.659287452697754
    8. '    
' → logprob: -11.034287452697754
    9. '                   ' → logprob: -11.659287452697754
    10. '           ' → logprob: -11.784287452697754

Token 579: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.6015290021896362
    2. '   ' → logprob: -0.8515290021896362
    3. '       ' → logprob: -3.851529121398926
    4. '                   ' → logprob: -5.851529121398926
    5. '```' → logprob: -7.851529121398926
    6. '           ' → logprob: -8.351529121398926
    7. '	idx' → logprob: -8.601529121398926
    8. ' idx' → logprob: -8.976529121398926
    9. 'd' → logprob: -9.976529121398926
    10. 'indent' → logprob: -10.101529121398926

Token 580: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519315779209137
    2. '+=' → logprob: -1.5019315481185913
    3. '+' → logprob: -13.626931190490723
    4. ']+=' → logprob: -13.876931190490723
    5. '   ' → logprob: -15.501931190490723
    6. '```' → logprob: -16.50193214416504
    7. ' +' → logprob: -17.25193214416504
    8. '=' → logprob: -17.37693214416504
    9. ' ' → logprob: -17.87693214416504
    10. '+="' → logprob: -18.12693214416504

Token 581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'd' → logprob: -15.12500286102295
    4. '2' → logprob: -17.375001907348633
    5. 'w' → logprob: -17.625001907348633
    6. '0' → logprob: -19.125001907348633
    7. '3' → logprob: -19.250001907348633
    8. '+' → logprob: -19.750001907348633
    9. ' d' → logprob: -20.187501907348633
    10. '```' → logprob: -21.000001907348633

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '2' → logprob: -19.5
    4. '１' → logprob: -21.0
    5. '```' → logprob: -21.125
    6. '۱' → logprob: -22.0
    7. '0' → logprob: -22.625
    8. '+' → logprob: -22.8125
    9. 'd' → logprob: -22.875
    10. '   ' → logprob: -22.875

Token 583: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058487970381975174
    2. 'e' → logprob: -3.558487892150879
    3. '   ' → logprob: -3.808487892150879
    4. '                   ' → logprob: -6.683487892150879
    5. '
' → logprob: -7.183487892150879
    6. '<|end|>' → logprob: -7.308487892150879
    7. '        
' → logprob: -7.433487892150879
    8. 'w' → logprob: -7.683487892150879
    9. 'd' → logprob: -7.808487892150879
    10. ' elevation' → logprob: -8.058487892150879

Token 584: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3199329972267151
    2. '   ' → logprob: -1.3199329376220703
    3. '```' → logprob: -6.06993293762207
    4. '                   ' → logprob: -6.19493293762207
    5. '       ' → logprob: -7.19493293762207
    6. 'w' → logprob: -7.81993293762207
    7. '	e' → logprob: -8.19493293762207
    8. ' elevation' → logprob: -8.56993293762207
    9. '_e' → logprob: -8.69493293762207
    10. '           ' → logprob: -8.81993293762207

Token 585: ' elevation' (ID: 43683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0001766040368238464
    2. '   ' → logprob: -9.750176429748535
    3. '                   ' → logprob: -9.750176429748535
    4. ' elevation' → logprob: -10.125176429748535
    5. '       ' → logprob: -11.625176429748535
    6. '           ' → logprob: -12.000176429748535
    7. '	e' → logprob: -13.500176429748535
    8. '```' → logprob: -13.500176429748535
    9. 'w' → logprob: -14.375176429748535
    10. '               ' → logprob: -14.875176429748535

Token 586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891159504652023
    2. ' =' → logprob: -2.578911542892456
    3. '   ' → logprob: -10.828911781311035
    4. '=[]' → logprob: -13.578911781311035
    5. '[]' → logprob: -14.953911781311035
    6. '[' → logprob: -15.453911781311035
    7. 's' → logprob: -16.20391082763672
    8. '=[]
' → logprob: -16.57891082763672
    9. '[:]' → logprob: -17.32891082763672
    10. '=line' → logprob: -17.32891082763672

Token 587: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3513450026512146
    2. '[]' → logprob: -1.8513450622558594
    3. '[e' → logprob: -2.6013450622558594
    4. '[input' → logprob: -3.1013450622558594
    5. '[]
' → logprob: -4.851345062255859
    6. '[int' → logprob: -5.601345062255859
    7. '[array' → logprob: -5.601345062255859
    8. '[element' → logprob: -7.351345062255859
    9. '[list' → logprob: -7.601345062255859
    10. '[ind' → logprob: -7.726345062255859

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14163678884506226
    2. 'for' → logprob: -2.391636848449707
    3. ' for' → logprob: -3.266636848449707
    4. '	for' → logprob: -6.641636848449707
    5. '   ' → logprob: -7.391636848449707
    6. '<|end|>' → logprob: -7.891636848449707
    7. 'while' → logprob: -9.891636848449707
    8. '	   ' → logprob: -10.266636848449707
    9. '	' → logprob: -11.266636848449707
    10. '           ' → logprob: -11.891636848449707

Token 589: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029989054426550865
    2. '       ' → logprob: -3.779989004135132
    3. ' for' → logprob: -5.029989242553711
    4. '	for' → logprob: -8.779989242553711
    5. '   ' → logprob: -10.654989242553711
    6. 'while' → logprob: -13.029989242553711
    7. '```' → logprob: -13.904989242553711
    8. '	   ' → logprob: -14.654989242553711
    9. '           ' → logprob: -15.404989242553711
    10. '	' → logprob: -15.529989242553711

Token 590: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011229134164750576
    2. '_i' → logprob: -4.511229038238525
    3. 'i' → logprob: -8.761229515075684
    4. ' _' → logprob: -11.511229515075684
    5. '_in' → logprob: -12.136229515075684
    6. '_range' → logprob: -12.261229515075684
    7. '_d' → logprob: -13.011229515075684
    8. '_row' → logprob: -13.886229515075684
    9. ' i' → logprob: -14.511229515075684
    10. '_data' → logprob: -15.136229515075684

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02978312037885189
    2. 'in' → logprob: -3.529783010482788
    3. 'range' → logprob: -10.779783248901367
    4. 'i' → logprob: -11.904783248901367
    5. '_' → logprob: -12.279783248901367
    6. '_in' → logprob: -15.654783248901367
    7. ' ' → logprob: -15.779783248901367
    8. ' range' → logprob: -17.654783248901367
    9. '_i' → logprob: -18.029783248901367
    10. '	in' → logprob: -18.529783248901367

Token 592: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -19.62501335144043
    4. '	range' → logprob: -20.25001335144043
    5. 'ange' → logprob: -21.37501335144043
    6. '   ' → logprob: -22.12501335144043
    7. '_range' → logprob: -22.25001335144043
    8. ' ' → logprob: -22.50001335144043
    9. '  ' → logprob: -23.12501335144043
    10. ')' → logprob: -23.12501335144043

Token 593: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.008617766201496124
    2. 'd' → logprob: -4.758617877960205
    3. ' d' → logprob: -13.133617401123047
    4. '	d' → logprob: -14.133617401123047
    5. ')d' → logprob: -15.633617401123047
    6. '(' → logprob: -15.758617401123047
    7. '0' → logprob: -16.383617401123047
    8. ' (' → logprob: -17.633617401123047
    9. ',d' → logprob: -18.133617401123047
    10. 'int' → logprob: -18.133617401123047

Token 594: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09075694531202316
    2. '):
' → logprob: -2.465756893157959
    3. ':' → logprob: -6.715756893157959
    4. '   ' → logprob: -8.465757369995117
    5. '       ' → logprob: -9.340757369995117
    6. '):
' → logprob: -9.715757369995117
    7. ':
' → logprob: -9.715757369995117
    8. '<|end|>' → logprob: -9.965757369995117
    9. ')' → logprob: -10.590757369995117
    10. ']:' → logprob: -10.715757369995117

Token 595: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018547531217336655
    2. '	       ' → logprob: -5.018547534942627
    3. '<|end|>' → logprob: -5.018547534942627
    4. '   ' → logprob: -6.268547534942627
    5. '	   ' → logprob: -7.143547534942627
    6. '           ' → logprob: -7.893547534942627
    7. '```' → logprob: -8.018547058105469
    8. '        
' → logprob: -8.018547058105469
    9. '<|end|>' → logprob: -8.143547058105469
    10. 'e' → logprob: -8.268547058105469

Token 596: ' row' (ID: 5225)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11407238245010376
    2. 'row' (adapté à ' row') → logprob: -3.239072322845459
    3. 'line' → logprob: -3.489072322845459
    4. '           ' → logprob: -3.864072322845459
    5. ' elevation' → logprob: -4.364072322845459
    6. ' row' → logprob: -6.239072322845459
    7. ' line' → logprob: -6.364072322845459
    8. '   ' → logprob: -8.864072799682617
    9. '_e' → logprob: -9.114072799682617
    10. ' elevations' → logprob: -9.239072799682617

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07929105311632156
    2. '=' → logprob: -2.5792911052703857
    3. '   ' → logprob: -8.704291343688965
    4. '=line' → logprob: -9.579291343688965
    5. '.append' → logprob: -9.829291343688965
    6. '           ' → logprob: -9.829291343688965
    7. '=e' → logprob: -11.954291343688965
    8. '       ' → logprob: -12.079291343688965
    9. '=[]' → logprob: -12.329291343688965
    10. '    ' → logprob: -12.329291343688965

Token 598: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.676292231422849e-05
    2. ' list' → logprob: -11.000017166137695
    3. '=list' → logprob: -22.750017166137695
    4. '	list' → logprob: -23.750017166137695
    5. ':list' → logprob: -24.875017166137695
    6. 'map' → logprob: -25.125017166137695
    7. '   ' → logprob: -25.750017166137695
    8. 'List' → logprob: -26.000017166137695
    9. '(list' → logprob: -26.375017166137695
    10. '[list' → logprob: -26.375017166137695

Token 599: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.584861744660884e-05
    2. 'map' → logprob: -10.125045776367188
    3. '(' → logprob: -13.125045776367188
    4. '	map' → logprob: -13.500045776367188
    5. '.map' → logprob: -14.000045776367188
    6. ' map' → logprob: -14.000045776367188
    7. ',map' → logprob: -15.375045776367188
    8. '_map' → logprob: -15.500045776367188
    9. '(int' → logprob: -15.750045776367188
    10. '(
' → logprob: -16.125045776367188

Token 600: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004149987827986479
    2. 'int' → logprob: -5.504149913787842
    3. '[int' → logprob: -10.129150390625
    4. '=int' → logprob: -11.629150390625
    5. '<int' → logprob: -11.879150390625
    6. ',int' → logprob: -12.004150390625
    7. '(' → logprob: -12.379150390625
    8. ']int' → logprob: -12.754150390625
    9. ' int' → logprob: -13.754150390625
    10. ')' → logprob: -14.754150390625

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05582239106297493
    2. ',input' → logprob: -2.9308223724365234
    3. '(input' → logprob: -7.305822372436523
    4. 'input' → logprob: -8.430822372436523
    5. ',int' → logprob: -11.180822372436523
    6. ' ,' → logprob: -11.930822372436523
    7. ',line' → logprob: -11.930822372436523
    8. '           ' → logprob: -12.180822372436523
    9. '   ' → logprob: -12.305822372436523
    10. '(' → logprob: -12.930822372436523

Token 602: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007100477814674377
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -17.000709533691406
    4. '           ' → logprob: -20.125709533691406
    5. ',input' → logprob: -20.500709533691406
    6. '   ' → logprob: -20.625709533691406
    7. '_input' → logprob: -20.875709533691406
    8. 'line' → logprob: -21.000709533691406
    9. '	input' → logprob: -21.375709533691406
    10. ')' → logprob: -21.375709533691406

Token 603: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5452616214752197
    2. 'input' → logprob: -1.5452616214752197
    3. '(input' → logprob: -1.6702616214752197
    4. '().' → logprob: -5.295261383056641
    5. ')' → logprob: -5.420261383056641
    6. '(' → logprob: -5.545261383056641
    7. '[input' → logprob: -6.920261383056641
    8. '=input' → logprob: -7.420261383056641
    9. '()' → logprob: -7.545261383056641
    10. 'lines' → logprob: -7.545261383056641

Token 604: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.088346359931165e-07
    2. 'idx' → logprob: -14.625000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[id' → logprob: -16.0
    5. '   ' → logprob: -17.0
    6. '[index' → logprob: -17.375
    7. ' [' → logprob: -18.125
    8. '[ind' → logprob: -18.375
    9. ' idx' → logprob: -19.0
    10. '```' → logprob: -19.125

Token 605: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.894790981779806e-05
    2. '[idx' → logprob: -10.375048637390137
    3. '][' → logprob: -11.500048637390137
    4. ' ].' → logprob: -12.250048637390137
    5. ']' → logprob: -13.750048637390137
    6. '.strip' → logprob: -14.125048637390137
    7. '.split' → logprob: -15.000048637390137
    8. 'idx' → logprob: -15.375048637390137
    9. '   ' → logprob: -15.750048637390137
    10. ']))' → logprob: -16.375049591064453

Token 606: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008615872822701931
    2. 'split' → logprob: -4.758615970611572
    3. 'rstrip' → logprob: -13.758615493774414
    4. ' strip' → logprob: -15.258615493774414
    5. '.strip' → logprob: -16.883615493774414
    6. '(strip' → logprob: -18.508615493774414
    7. ' split' → logprob: -20.258615493774414
    8. 'trim' → logprob: -20.633615493774414
    9. '_strip' → logprob: -21.383615493774414
    10. '(split' → logprob: -22.383615493774414

Token 607: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009631185792386532
    2. '()))
' → logprob: -4.759631156921387
    3. '()' → logprob: -7.009631156921387
    4. '))' → logprob: -9.509631156921387
    5. '()));' → logprob: -11.259631156921387
    6. '(' → logprob: -12.009631156921387
    7. '()))

' → logprob: -12.384631156921387
    8. '())' → logprob: -12.634631156921387
    9. '()))
' → logprob: -12.759631156921387
    10. '())))' → logprob: -12.884631156921387

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3572845458984375
    2. '       ' → logprob: -1.2322845458984375
    3. '<|end|>' → logprob: -5.6072845458984375
    4. 'idx' → logprob: -5.8572845458984375
    5. '                   ' → logprob: -7.1072845458984375
    6. '               ' → logprob: -8.107284545898438
    7. '<|end|>' → logprob: -8.482284545898438
    8. '	       ' → logprob: -8.482284545898438
    9. '[idx' → logprob: -8.732284545898438
    10. '   ' → logprob: -8.857284545898438

Token 609: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0006893210811540484
    2. '           ' → logprob: -8.250689506530762
    3. ' idx' → logprob: -8.250689506530762
    4. '       ' → logprob: -9.125689506530762
    5. '	idx' → logprob: -10.750689506530762
    6. '                   ' → logprob: -11.000689506530762
    7. 'e' → logprob: -11.750689506530762
    8. '               ' → logprob: -12.625689506530762
    9. '   ' → logprob: -12.750689506530762
    10. 'index' → logprob: -13.250689506530762

Token 610: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005268738139420748
    2. ' +=' → logprob: -5.255268573760986
    3. ']+=' → logprob: -11.005269050598145
    4. '+' → logprob: -11.630269050598145
    5. '++' → logprob: -12.380269050598145
    6. '```' → logprob: -12.755269050598145
    7. '=' → logprob: -14.005269050598145
    8. '           ' → logprob: -15.005269050598145
    9. '.append' → logprob: -15.005269050598145
    10. '   ' → logprob: -15.380269050598145

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '(' → logprob: -19.375
    4. '```' → logprob: -19.75
    5. '   ' → logprob: -20.25
    6. '0' → logprob: -20.75
    7. '۱' → logprob: -21.125
    8. '１' → logprob: -21.5
    9. '>' → logprob: -21.5
    10. '_' → logprob: -22.625

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '```' → logprob: -21.75
    4. '(' → logprob: -22.375
    5. '0' → logprob: -22.625
    6. '１' → logprob: -22.875
    7. '۱' → logprob: -23.625
    8. '   ' → logprob: -24.125
    9. '१' → logprob: -24.5
    10. '>' → logprob: -24.75

Token 613: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038896629121154547
    2. 'e' → logprob: -8.500389099121094
    3. '       ' → logprob: -9.500389099121094
    4. '                   ' → logprob: -10.250389099121094
    5. '<|end|>' → logprob: -10.625389099121094
    6. ' elevation' → logprob: -11.000389099121094
    7. '   ' → logprob: -11.375389099121094
    8. '               ' → logprob: -11.625389099121094
    9. '          ' → logprob: -12.500389099121094
    10. '```' → logprob: -13.000389099121094

Token 614: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2642868459224701
    2. '           ' → logprob: -1.6392868757247925
    3. 'e' → logprob: -3.389286756515503
    4. '   ' → logprob: -5.764286994934082
    5. '                   ' → logprob: -7.264286994934082
    6. ' elevation' → logprob: -8.014286994934082
    7. ',e' → logprob: -9.514286994934082
    8. '               ' → logprob: -10.014286994934082
    9. '	e' → logprob: -10.264286994934082
    10. '```' → logprob: -10.764286994934082

Token 615: ' elevation' (ID: 43683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0008916903752833605
    2. ' elevation' → logprob: -7.50089168548584
    3. '           ' → logprob: -8.00089168548584
    4. '       ' → logprob: -13.62589168548584
    5. '                   ' → logprob: -13.75089168548584
    6. '   ' → logprob: -14.25089168548584
    7. '               ' → logprob: -15.37589168548584
    8. ' e' → logprob: -16.125892639160156
    9. '	e' → logprob: -16.125892639160156
    10. '_e' → logprob: -16.500892639160156

Token 616: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.999452772201039e-05
    2. '.' → logprob: -10.500029563903809
    3. '.extend' → logprob: -13.250029563903809
    4. ' .' → logprob: -15.250029563903809
    5. ').' → logprob: -15.625029563903809
    6. 'append' → logprob: -16.750030517578125
    7. '.app' → logprob: -17.000030517578125
    8. '.add' → logprob: -17.750030517578125
    9. '.Append' → logprob: -18.125030517578125
    10. '           ' → logprob: -18.375030517578125

Token 617: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0015024791937321424
    2. 'row' → logprob: -6.501502513885498
    3. ' row' → logprob: -16.376502990722656
    4. '(' → logprob: -18.126502990722656
    5. '=row' → logprob: -18.501502990722656
    6. ',row' → logprob: -19.126502990722656
    7. '	row' → logprob: -19.376502990722656
    8. '[row' → logprob: -20.376502990722656
    9. '$row' → logprob: -22.126502990722656
    10. '(line' → logprob: -23.376502990722656

Token 618: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. ')
' → logprob: -11.750022888183594
    3. '<|end|>' → logprob: -11.750022888183594
    4. '       ' → logprob: -12.500022888183594
    5. '   ' → logprob: -13.375022888183594
    6. ')return' → logprob: -14.125022888183594
    7. '<|end|>' → logprob: -15.500022888183594
    8. ' )' → logprob: -15.750022888183594
    9. ')}' → logprob: -16.625022888183594
    10. '))' → logprob: -16.875022888183594

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47359880805015564
    2. 'result' → logprob: -1.973598837852478
    3. '   ' → logprob: -2.7235987186431885
    4. '
' → logprob: -2.8485987186431885
    5. ' result' → logprob: -3.3485987186431885
    6. 'capacity' → logprob: -3.3485987186431885
    7. '```' → logprob: -4.098598957061768
    8. ' capacity' → logprob: -4.098598957061768
    9. '        
' → logprob: -5.723598957061768
    10. 'max' → logprob: -6.223598957061768

Token 620: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3572344779968262
    2. 'result' (adapté à ' result') → logprob: -1.3572344779968262
    3. 'capacity' → logprob: -1.6072344779968262
    4. '       ' → logprob: -2.482234477996826
    5. ' result' → logprob: -2.607234477996826
    6. ' capacity' → logprob: -2.732234477996826
    7. '   ' → logprob: -2.982234477996826
    8. ' print' → logprob: -4.857234477996826
    9. '```' → logprob: -6.232234477996826
    10. 'output' → logprob: -7.857234477996826

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022545099258423
    2. '=' → logprob: -1.9102253913879395
    3. ')' → logprob: -14.285225868225098
    4. '_' → logprob: -15.160225868225098
    5. ' ' → logprob: -16.16022491455078
    6. '  ' → logprob: -16.53522491455078
    7. '   ' → logprob: -16.78522491455078
    8. '＝' → logprob: -17.53522491455078
    9. ',' → logprob: -18.03522491455078
    10. '.' → logprob: -18.53522491455078

Token 622: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233763717114925
    2. ' max' → logprob: -5.2552337646484375
    3. '(max' → logprob: -18.630233764648438
    4. '   ' → logprob: -19.755233764648438
    5. 'str' → logprob: -20.380233764648438
    6. '	max' → logprob: -20.380233764648438
    7. '=max' → logprob: -22.630233764648438
    8. 'print' → logprob: -22.755233764648438
    9. ' ' → logprob: -22.755233764648438
    10. '[max' → logprob: -22.880233764648438

Token 623: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_max' → logprob: -18.75
    3. '_capacity' → logprob: -19.25
    4. 'max' → logprob: -20.0
    5. 'pond' → logprob: -21.0
    6. '_p' → logprob: -21.5
    7. '```' → logprob: -21.625
    8. '\' → logprob: -21.75
    9. '(max' → logprob: -21.75
    10. 'e' → logprob: -22.5

Token 624: 'pond' (ID: 4940)
  Prédit: 'pond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pond' → logprob: -0.00039647609810344875
    2. '_' → logprob: -7.875396251678467
    3. 'pon' → logprob: -11.125396728515625
    4. 'max' → logprob: -14.500396728515625
    5. 'pong' → logprob: -15.500396728515625
    6. 'ond' → logprob: -15.875396728515625
    7. 'e' → logprob: -16.125396728515625
    8. '_p' → logprob: -16.250396728515625
    9. 'ponder' → logprob: -16.375396728515625
    10. '__' → logprob: -16.375396728515625

Token 625: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -2.45848218582978e-06
    2. 'capacity' → logprob: -13.00000286102295
    3. '_' → logprob: -16.375001907348633
    4. ' capacity' → logprob: -18.375001907348633
    5. '_cap' → logprob: -18.500001907348633
    6. 'Capacity' → logprob: -20.125001907348633
    7. '_
' → logprob: -20.875001907348633
    8. '
' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. ' _' → logprob: -21.375001907348633

Token 626: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.25000286102295
    4. '(D' → logprob: -16.875003814697266
    5. '((' → logprob: -17.250003814697266
    6. '(len' → logprob: -17.500003814697266
    7. '(dim' → logprob: -18.500003814697266
    8. 'd' → logprob: -18.750003814697266
    9. '(de' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007623184472322464
    2. ',w' → logprob: -4.882623195648193
    3. ' ,' → logprob: -11.132622718811035
    4. 'w' → logprob: -13.382622718811035
    5. '(w' → logprob: -14.757622718811035
    6. ',
' → logprob: -15.257622718811035
    7. ' w' → logprob: -16.38262367248535
    8. ')' → logprob: -16.88262367248535
    9. ',d' → logprob: -17.00762367248535
    10. '```' → logprob: -17.25762367248535

Token 628: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004078401252627373
    2. ' w' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.379077911376953
    4. '	w' → logprob: -19.254077911376953
    5. '       ' → logprob: -20.879077911376953
    6. 'W' → logprob: -21.004077911376953
    7. '<w' → logprob: -21.129077911376953
    8. '    ' → logprob: -22.004077911376953
    9. '_w' → logprob: -22.254077911376953
    10. ',w' → logprob: -22.629077911376953

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. ' ,' → logprob: -11.125029563903809
    3. ',e' → logprob: -11.125029563903809
    4. '   ' → logprob: -16.125030517578125
    5. 'e' → logprob: -16.500030517578125
    6. ',d' → logprob: -16.625030517578125
    7. '```' → logprob: -16.875030517578125
    8. ')' → logprob: -17.375030517578125
    9. ',w' → logprob: -17.500030517578125
    10. ',
' → logprob: -17.625030517578125

Token 630: ' elevation' (ID: 43683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004621780011802912
    2. ' elevation' → logprob: -5.379621982574463
    3. ' e' → logprob: -13.754621505737305
    4. 'Elevation' → logprob: -15.504621505737305
    5. '   ' → logprob: -16.754621505737305
    6. '	e' → logprob: -17.004621505737305
    7. '_e' → logprob: -17.129621505737305
    8. ')e' → logprob: -17.504621505737305
    9. 'evaluation' → logprob: -17.629621505737305
    10. '```' → logprob: -17.879621505737305

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008629691787064075
    2. ')
' → logprob: -4.75862979888916
    3. '   ' → logprob: -11.25862979888916
    4. ')
' → logprob: -13.25862979888916
    5. ' )' → logprob: -16.258628845214844
    6. ')`' → logprob: -16.383628845214844
    7. ')

' → logprob: -16.633628845214844
    8. '       ' → logprob: -16.758628845214844
    9. ')return' → logprob: -17.633628845214844
    10. '))' → logprob: -17.758628845214844

Token 632: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31679898500442505
    2. '       ' → logprob: -1.3167989253997803
    3. ' print' → logprob: -5.941799163818359
    4. '   ' → logprob: -7.566799163818359
    5. '```' → logprob: -8.06679916381836
    6. '
' → logprob: -9.69179916381836
    7. '        
' → logprob: -12.69179916381836
    8. '	print' → logprob: -12.81679916381836
    9. '``' → logprob: -13.06679916381836
    10. '    
' → logprob: -14.06679916381836

Token 633: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.011373155459296e-05
    2. ' print' → logprob: -10.750030517578125
    3. '       ' → logprob: -11.750030517578125
    4. '```' → logprob: -14.625030517578125
    5. '   ' → logprob: -15.250030517578125
    6. '``' → logprob: -18.250030517578125
    7. '
' → logprob: -18.375030517578125
    8. '	print' → logprob: -19.000030517578125
    9. '`' → logprob: -19.500030517578125
    10. '#print' → logprob: -19.625030517578125

Token 634: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.935296834039036e-06
    2. 'result' → logprob: -12.75000286102295
    3. '(' → logprob: -16.875003814697266
    4. '(results' → logprob: -20.125003814697266
    5. '=result' → logprob: -20.375003814697266
    6. ' result' → logprob: -20.625003814697266
    7. '(res' → logprob: -21.375003814697266
    8. ',result' → logprob: -21.375003814697266
    9. '[result' → logprob: -21.500003814697266
    10. '(f' → logprob: -21.750003814697266

Token 635: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5648496150970459
    2. ')' → logprob: -1.314849615097046
    3. '()' → logprob: -1.814849615097046
    4. '(' → logprob: -9.064849853515625
    5. '()
' → logprob: -11.064849853515625
    6. ' )' → logprob: -11.314849853515625
    7. ' ())' → logprob: -12.189849853515625
    8. '())
' → logprob: -12.189849853515625
    9. '(""))' → logprob: -12.189849853515625
    10. '("")' → logprob: -12.314849853515625

Token 636: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018804467981681228
    2. '```' → logprob: -6.876880645751953
    3. '<|end|>' → logprob: -7.501880645751953
    4. ' if' → logprob: -8.876880645751953
    5. '
' → logprob: -9.001880645751953
    6. '#' → logprob: -10.626880645751953
    7. '\' → logprob: -13.626880645751953
    8. '    
' → logprob: -13.626880645751953
    9. '\n' → logprob: -13.751880645751953
    10. '``' → logprob: -13.751880645751953

Token 637: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47416242957115173
    2. '__' → logprob: -0.9741624593734741
    3. '_' → logprob: -9.724162101745605
    4. '_name' → logprob: -11.474162101745605
    5. 'name' → logprob: -11.599162101745605
    6. '___' → logprob: -12.974162101745605
    7. ' ' → logprob: -13.849162101745605
    8. ' ' → logprob: -14.099162101745605
    9. 'Name' → logprob: -14.599162101745605
    10. ' ' → logprob: -15.349162101745605

Token 638: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022832384333014488
    2. ' ==' → logprob: -4.27283239364624
    3. '==' → logprob: -5.27283239364624
    4. ' __' → logprob: -6.89783239364624
    5. '[' → logprob: -7.02283239364624
    6. '.__' → logprob: -7.52283239364624
    7. '__.__' → logprob: -8.272831916809082
    8. '.' → logprob: -8.897831916809082
    9. '=="' → logprob: -9.022831916809082
    10. '__.' → logprob: -9.147831916809082

Token 639: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005991366691887379
    2. '__.__' → logprob: -5.130991458892822
    3. '__.' → logprob: -10.005990982055664
    4. '==' → logprob: -11.755990982055664
    5. '__["' → logprob: -12.755990982055664
    6. '```' → logprob: -13.380990982055664
    7. '___' → logprob: -13.880990982055664
    8. '__
' → logprob: -13.880990982055664
    9. '__[' → logprob: -14.005990982055664
    10. '=="' → logprob: -14.630990982055664

Token 640: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10917854309082031
    2. '==' → logprob: -2.3591785430908203
    3. ' ==' → logprob: -5.10917854309082
    4. '=="' → logprob: -6.23417854309082
    5. '=='' → logprob: -7.60917854309082
    6. '__.__' → logprob: -8.23417854309082
    7. '.__' → logprob: -10.10917854309082
    8. '"' → logprob: -10.48417854309082
    9. '[' → logprob: -11.10917854309082
    10. '===' → logprob: -11.48417854309082

Token 641: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805583342909813
    2. ''' → logprob: -3.288055896759033
    3. '__' → logprob: -11.663055419921875
    4. ' "__' → logprob: -12.163055419921875
    5. ' '__' → logprob: -15.913055419921875
    6. ''"' → logprob: -16.038055419921875
    7. '"name' → logprob: -16.663055419921875
    8. '"user' → logprob: -16.913055419921875
    9. '"'' → logprob: -17.663055419921875
    10. '   ' → logprob: -18.038055419921875

Token 642: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011052302084863186
    2. '__' → logprob: -4.511052131652832
    3. '"' → logprob: -13.261052131652832
    4. 'name' → logprob: -13.636052131652832
    5. '__":
' → logprob: -14.886052131652832
    6. 'python' → logprob: -14.886052131652832
    7. '_main' → logprob: -15.511052131652832
    8. ' main' → logprob: -15.761052131652832
    9. 'built' → logprob: -16.13605308532715
    10. '___' → logprob: -16.26105308532715

Token 643: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03395433723926544
    2. '__' → logprob: -3.408954381942749
    3. '__':
' → logprob: -8.283954620361328
    4. '__:' → logprob: -10.908954620361328
    5. '.' → logprob: -11.158954620361328
    6. '__.' → logprob: -11.908954620361328
    7. ':' → logprob: -12.408954620361328
    8. '__["' → logprob: -12.533954620361328
    9. '```' → logprob: -12.783954620361328
    10. '__.__' → logprob: -13.408954620361328

Token 644: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06197989732027054
    2. ' main' → logprob: -2.8119800090789795
    3. '	main' → logprob: -12.311980247497559
    4. '   ' → logprob: -12.686980247497559
    5. '_main' → logprob: -12.936980247497559
    6. '__' → logprob: -13.436980247497559
    7. '(main' → logprob: -15.686980247497559
    8. 'run' → logprob: -15.686980247497559
    9. 'if' → logprob: -16.061979293823242
    10. ' __' → logprob: -16.061979293823242

Token 645: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.511406809295295e-06
    2. ' main' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.250006675720215
    4. '	main' → logprob: -18.5000057220459
    5. ' ' → logprob: -23.7500057220459
    6. '.main' → logprob: -24.1250057220459
    7. '_main' → logprob: -24.6250057220459
    8. 'import' → logprob: -24.8750057220459
    9. '(main' → logprob: -24.8750057220459
    10. '  ' → logprob: -25.0000057220459

Token 646: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 644
Tokens correctement prédits (1ère position, stricte): 265
Tokens correctement prédits (1ère position, avec adaptation): 285
Tokens correctement prédits (top 10): 530
Précision stricte (1ère position): 41.15%
Précision adaptée (1ère position): 44.25%
Précision (top 10): 82.30%
================================================================================
