================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def main():
    directions = [(1,0),(-1,0),(0,1),(0,-1)]
    colors = ['R','G','B']

    while True:
        X, Y = map(int, input().split())
        if X == 0 and Y == 0:
            break
        grid = [input().split() for _ in range(Y)]

        # BFS to find connected component of the top-left cell with its color
        def flood_fill(g, target_color):
            visited = [[False]*X for _ in range(Y)]
            q = deque()
            q.append((0,0))
            visited[0][0] = True
            component = [(0,0)]
            while q:
                x,y = q.popleft()
                for dx, dy in directions:
                    nx, ny = x+dx, y+dy
                    if 0 <= nx < X and 0 <= ny < Y and not visited[ny][nx] and g[ny][nx] == target_color:
                        visited[ny][nx] = True
                        q.append((nx, ny))
                        component.append((nx, ny))
            return component

        def is_uniform(g):
            c = g[0][0]
            for row in g:
                for cell in row:
                    if cell != c:
                        return False
            return True

        start = tuple(tuple(row) for row in grid)
        visited_states = set([start])
        queue = deque()
        queue.append( (grid, 0) )

        while queue:
            g, steps = queue.popleft()
            if is_uniform(g):
                print(steps)
                break
            cur_color = g[0][0]
            comp = flood_fill(g, cur_color)
            for c in colors:
                if c == cur_color:
                    continue
                new_g = [row[:] for row in g]
                for x,y in comp:
                    new_g[y][x] = c
                ng_tuple = tuple(tuple(row) for row in new_g)
                if ng_tuple not in visited_states:
                    visited_states.add(ng_tuple)
                    queue.append((new_g, steps+1))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.4278699457645416
    2. 'deque' → logprob: -1.8028699159622192
    3. ' defaultdict' → logprob: -2.677870035171509
    4. ' abc' → logprob: -2.677870035171509
    5. 'default' → logprob: -3.552870035171509
    6. 'Counter' → logprob: -5.17786979675293
    7. ' deque' → logprob: -5.67786979675293
    8. ' Counter' → logprob: -5.92786979675293
    9. '```' → logprob: -5.92786979675293
    10. 'named' → logprob: -6.55286979675293

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015454558655619621
    2. '.' → logprob: -4.5154547691345215
    3. '\(' → logprob: -6.0154547691345215
    4. '\' → logprob: -7.7654547691345215
    5. '[' → logprob: -7.7654547691345215
    6. '```' → logprob: -8.265454292297363
    7. ',' → logprob: -8.765454292297363
    8. '\[' → logprob: -8.890454292297363
    9. 'import' → logprob: -9.015454292297363
    10. 'newline' → logprob: -9.390454292297363

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.057669561356306076
    2. 'd' → logprob: -3.4326696395874023
    3. ',' → logprob: -5.432669639587402
    4. '[' → logprob: -5.682669639587402
    5. 'a' → logprob: -5.807669639587402
    6. '.' → logprob: -5.932669639587402
    7. '(
' → logprob: -6.682669639587402
    8. '\' → logprob: -7.057669639587402
    9. '=' → logprob: -7.057669639587402
    10. 'q' → logprob: -7.432669639587402

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03391653671860695
    2. ' bfs' → logprob: -4.158916473388672
    3. ' deque' → logprob: -5.658916473388672
    4. ' ' → logprob: -5.783916473388672
    5. ' process' → logprob: -5.783916473388672
    6. ' append' → logprob: -6.783916473388672
    7. ' de' → logprob: -7.158916473388672
    8. ' queue' → logprob: -7.408916473388672
    9. ' dfs' → logprob: -7.533916473388672
    10. ' space' → logprob: -7.908916473388672

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023955097422003746
    2. '(:' → logprob: -6.6273956298828125
    3. ':' → logprob: -7.3773956298828125
    4. '():' → logprob: -8.002395629882812
    5. '(
' → logprob: -10.127395629882812
    6. ' (' → logprob: -11.252395629882812
    7. '```' → logprob: -11.377395629882812
    8. '('' → logprob: -12.127395629882812
    9. '(`' → logprob: -12.252395629882812
    10. '(":' → logprob: -12.377395629882812

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29986608028411865
    2. '(' → logprob: -2.049866199493408
    3. '[' → logprob: -3.424866199493408
    4. 'de' → logprob: -4.424866199493408
    5. '\' → logprob: -4.674866199493408
    6. '    ' → logprob: -4.674866199493408
    7. 'a' → logprob: -4.924866199493408
    8. '```' → logprob: -4.924866199493408
    9. 'deque' → logprob: -5.049866199493408
    10. '    
' → logprob: -5.049866199493408

Token 9: ' directions' (ID: 24921)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.289128303527832
    2. 'd' → logprob: -1.539128303527832
    3. 'queue' → logprob: -2.289128303527832
    4. ' queue' → logprob: -2.289128303527832
    5. 'deque' → logprob: -3.164128303527832
    6. 'n' → logprob: -3.289128303527832
    7. ' ' → logprob: -3.539128303527832
    8. '   ' → logprob: -3.539128303527832
    9. 'de' → logprob: -3.664128303527832
    10. ' q' → logprob: -3.664128303527832

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00011427151912357658
    2. '=' → logprob: -9.125114440917969
    3. '[:]' → logprob: -13.375114440917969
    4. '.' → logprob: -14.000114440917969
    5. '[' → logprob: -14.125114440917969
    6. ' ' → logprob: -14.375114440917969
    7. ' =)' → logprob: -14.875114440917969
    8. ')' → logprob: -15.250114440917969
    9. ' =[' → logprob: -15.375114440917969
    10. '   ' → logprob: -16.00011444091797

Token 11: ' [(' (ID: 43900)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.06362424790859222
    2. ' ['' → logprob: -3.313624143600464
    3. 'deque' → logprob: -3.938624143600464
    4. ' ["' → logprob: -5.563624382019043
    5. '['' → logprob: -6.688624382019043
    6. '["' → logprob: -8.313624382019043
    7. ' [' → logprob: -8.438624382019043
    8. ' ' → logprob: -9.313624382019043
    9. ' {'' → logprob: -9.688624382019043
    10. '   ' → logprob: -10.563624382019043

Token 12: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43396928906440735
    2. '0' → logprob: -1.933969259262085
    3. '-' → logprob: -2.433969259262085
    4. '1' → logprob: -2.558969259262085
    5. '(-' → logprob: -3.183969259262085
    6. ' ' → logprob: -7.183969497680664
    7. ' (' → logprob: -8.683969497680664
    8. ' -' → logprob: -10.433969497680664
    9. ' (-' → logprob: -10.683969497680664
    10. '   ' → logprob: -11.683969497680664

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.208653162000701e-05
    2. ' ,' → logprob: -9.625082015991211
    3. '0' → logprob: -11.375082015991211
    4. ' ' → logprob: -13.500082015991211
    5. ',),' → logprob: -13.625082015991211
    6. ',)' → logprob: -14.125082015991211
    7. '),' → logprob: -14.500082015991211
    8. ')' → logprob: -14.750082015991211
    9. '```' → logprob: -16.50008201599121
    10. ',
' → logprob: -16.75008201599121

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.313263863325119
    2. ' ' → logprob: -1.3132638931274414
    3. '   ' → logprob: -14.188263893127441
    4. '1' → logprob: -15.063263893127441
    5. '-' → logprob: -15.188263893127441
    6. '  ' → logprob: -15.188263893127441
    7. ' ' → logprob: -15.563263893127441
    8. '	' → logprob: -15.688263893127441
    9. ' -' → logprob: -16.125762939453125
    10. ')' → logprob: -16.625762939453125

Token 15: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0031806828919798136
    2. '),(' → logprob: -6.003180503845215
    3. ')' → logprob: -7.503180503845215
    4. '),
' → logprob: -9.253180503845215
    5. ')]' → logprob: -10.003180503845215
    6. '),

' → logprob: -12.003180503845215
    7. ' ),' → logprob: -12.628180503845215
    8. ',' → logprob: -14.003180503845215
    9. ')],' → logprob: -14.128180503845215
    10. ',),' → logprob: -14.753180503845215

Token 16: '(-' (ID: 8087)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.34384411573410034
    2. '(' → logprob: -1.8438441753387451
    3. '0' → logprob: -2.968844175338745
    4. ' ' → logprob: -2.968844175338745
    5. ' (-' → logprob: -3.968844175338745
    6. '(-' → logprob: -4.718843936920166
    7. ' -' → logprob: -6.218843936920166
    8. '-' → logprob: -8.468844413757324
    9. '   ' → logprob: -13.968844413757324
    10. ' ' → logprob: -13.968844413757324

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.875000953674316
    3. '-' → logprob: -16.9375
    4. '۱' → logprob: -17.25
    5. '```' → logprob: -17.3125
    6. '১' → logprob: -17.5625
    7. '

' → logprob: -17.5625
    8. '１' → logprob: -17.75
    9. '१' → logprob: -17.75
    10. '   ' → logprob: -18.4375

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021140782337170094
    2. '0' → logprob: -8.500211715698242
    3. ' ,' → logprob: -12.125211715698242
    4. '1' → logprob: -13.625211715698242
    5. '<|end|>' → logprob: -14.125211715698242
    6. '```' → logprob: -15.375211715698242
    7. ' ' → logprob: -15.875211715698242
    8. ')' → logprob: -16.750211715698242
    9. '‌,' → logprob: -18.125211715698242
    10. '<|end|>' → logprob: -18.750211715698242

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -17.250030517578125
    4. '۰' → logprob: -17.500030517578125
    5. '```' → logprob: -18.000030517578125
    6. '０' → logprob: -19.500030517578125
    7. ')' → logprob: -20.750030517578125
    8. '٠' → logprob: -20.937530517578125
    9. ',' → logprob: -21.062530517578125
    10. '   ' → logprob: -21.312530517578125

Token 20: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.2531903386116028
    2. '),' → logprob: -1.503190279006958
    3. ')]' → logprob: -7.003190517425537
    4. ')' → logprob: -8.003190040588379
    5. '),
' → logprob: -12.003190040588379
    6. ' ),' → logprob: -12.253190040588379
    7. ')])' → logprob: -13.253190040588379
    8. ')],' → logprob: -13.503190040588379
    9. ',' → logprob: -14.503190040588379
    10. '],[' → logprob: -14.753190040588379

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.500014305114746
    3. '1' → logprob: -12.875014305114746
    4. '```' → logprob: -14.000014305114746
    5. '۰' → logprob: -15.687514305114746
    6. '``' → logprob: -16.00001335144043
    7. '   ' → logprob: -16.75001335144043
    8. '０' → logprob: -17.68751335144043
    9. ')' → logprob: -17.75001335144043
    10. '-' → logprob: -17.81251335144043

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. '1' → logprob: -11.125025749206543
    3. ' ,' → logprob: -12.125025749206543
    4. ',-' → logprob: -12.125025749206543
    5. ',+' → logprob: -16.37502670288086
    6. '```' → logprob: -17.12502670288086
    7. ',
' → logprob: -17.50002670288086
    8. ' ' → logprob: -18.75002670288086
    9. ',

' → logprob: -19.25002670288086
    10. '，' → logprob: -19.37502670288086

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012654215970542282
    2. '-' → logprob: -9.000126838684082
    3. ' ' → logprob: -12.750126838684082
    4. '```' → logprob: -16.750125885009766
    5. '   ' → logprob: -18.125125885009766
    6. ' -' → logprob: -18.500125885009766
    7. '۱' → logprob: -18.750125885009766
    8. '+' → logprob: -18.750125885009766
    9. '１' → logprob: -19.500125885009766
    10. '  ' → logprob: -19.500125885009766

Token 24: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.02385607548058033
    2. '),' → logprob: -3.7738561630249023
    3. ')' → logprob: -7.523856163024902
    4. ')]' → logprob: -9.648856163024902
    5. ',' → logprob: -12.773856163024902
    6. '),
' → logprob: -14.273856163024902
    7. ' ),' → logprob: -14.398856163024902
    8. ',(' → logprob: -14.773856163024902
    9. ')],' → logprob: -15.398856163024902
    10. ')])' → logprob: -15.648856163024902

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003602094016969204
    2. '-' → logprob: -5.628602027893066
    3. ' ' → logprob: -13.753602027893066
    4. ' -' → logprob: -14.753602027893066
    5. '```' → logprob: -15.503602027893066
    6. '1' → logprob: -15.628602027893066
    7. '−' → logprob: -17.441102981567383
    8. '   ' → logprob: -17.503602981567383
    9. ',' → logprob: -17.566102981567383
    10. '۰' → logprob: -17.566102981567383

Token 26: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0485946387052536
    2. ',' → logprob: -3.0485947132110596
    3. '-' → logprob: -12.54859447479248
    4. ' ,-' → logprob: -13.17359447479248
    5. '1' → logprob: -14.67359447479248
    6. ',-

' → logprob: -14.79859447479248
    7. ',--' → logprob: -15.29859447479248
    8. ' ,' → logprob: -15.42359447479248
    9. '",-' → logprob: -15.79859447479248
    10. ',-
' → logprob: -16.673595428466797

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. '0' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. ')' → logprob: -16.75
    6. '۱' → logprob: -18.75
    7. '2' → logprob: -18.875
    8. '１' → logprob: -19.0
    9. '१' → logprob: -19.0
    10. '   ' → logprob: -19.0625

Token 28: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015121731848921627
    2. ')' → logprob: -9.500151634216309
    3. ')])' → logprob: -10.000151634216309
    4. '),' → logprob: -11.500151634216309
    5. ')]
' → logprob: -12.000151634216309
    6. ' )' → logprob: -12.125151634216309
    7. '   ' → logprob: -13.125151634216309
    8. '))' → logprob: -13.625151634216309
    9. '')]' → logprob: -13.750151634216309
    10. '])]' → logprob: -14.000151634216309

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01851804181933403
    2. '    
' → logprob: -4.143517971038818
    3. '<|end|>' → logprob: -7.768517971038818
    4. ')' → logprob: -7.893517971038818
    5. '    ' → logprob: -8.018518447875977
    6. '
' → logprob: -8.143518447875977
    7. ',' → logprob: -8.518518447875977
    8. '\' → logprob: -8.643518447875977
    9. ' 
' → logprob: -9.143518447875977
    10. '       ' → logprob: -9.393518447875977

Token 30: ' colors' (ID: 10803)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14296522736549377
    2. 'queue' → logprob: -2.392965316772461
    3. ' queue' → logprob: -3.392965316772461
    4. 'q' → logprob: -6.017965316772461
    5. '```' → logprob: -6.642965316772461
    6. 'for' → logprob: -6.767965316772461
    7. ' for' → logprob: -7.267965316772461
    8. '    
' → logprob: -7.517965316772461
    9. ' ' → logprob: -8.392965316772461
    10. 'n' → logprob: -8.642965316772461

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06229110062122345
    2. '=' → logprob: -2.937291145324707
    3. '[' → logprob: -5.187291145324707
    4. ')' → logprob: -6.687291145324707
    5. '=[]' → logprob: -8.812291145324707
    6. ']' → logprob: -9.687291145324707
    7. '.' → logprob: -9.812291145324707
    8. '_' → logprob: -9.812291145324707
    9. '[:]' → logprob: -9.937291145324707
    10. ',' → logprob: -10.687291145324707

Token 32: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.7114611268043518
    2. '["' → logprob: -1.836461067199707
    3. ' ["' → logprob: -1.836461067199707
    4. '['' → logprob: -2.086461067199707
    5. '{}' → logprob: -4.211461067199707
    6. ' {}' → logprob: -4.586461067199707
    7. '[(' → logprob: -4.711461067199707
    8. ' set' → logprob: -5.086461067199707
    9. ' []' → logprob: -5.211461067199707
    10. ' [(' → logprob: -5.461461067199707

Token 33: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.15726427733898163
    2. 'r' → logprob: -2.157264232635498
    3. 'red' → logprob: -3.782264232635498
    4. '#' → logprob: -5.657264232635498
    5. 'B' → logprob: -6.782264232635498
    6. 'W' → logprob: -7.032264232635498
    7. 'Red' → logprob: -7.407264232635498
    8. 'w' → logprob: -8.657264709472656
    9. 'b' → logprob: -8.907264709472656
    10. ''' → logprob: -9.532264709472656

Token 34: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4321558177471161
    2. '','' → logprob: -1.0571558475494385
    3. 'ed' → logprob: -6.307155609130859
    4. ''' → logprob: -7.557155609130859
    5. 'B' → logprob: -7.932155609130859
    6. 'G' → logprob: -8.05715560913086
    7. '',"' → logprob: -9.05715560913086
    8. ' ','' → logprob: -9.30715560913086
    9. 'e' → logprob: -9.93215560913086
    10. 'R' → logprob: -10.43215560913086

Token 35: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0005518406978808343
    2. 'B' → logprob: -7.750551700592041
    3. ' G' → logprob: -9.8755521774292
    4. ''' → logprob: -10.6255521774292
    5. 'Y' → logprob: -10.8755521774292
    6. 'W' → logprob: -12.5630521774292
    7. '```' → logprob: -12.6880521774292
    8. ' ' → logprob: -13.0630521774292
    9. '	G' → logprob: -13.3755521774292
    10. 'R' → logprob: -13.8130521774292

Token 36: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.006393114570528269
    2. '',' → logprob: -5.131392955780029
    3. '']' → logprob: -7.881392955780029
    4. '',"' → logprob: -10.881393432617188
    5. ''' → logprob: -11.131393432617188
    6. '',['' → logprob: -11.381393432617188
    7. ' ','' → logprob: -12.006393432617188
    8. ''],'' → logprob: -12.131393432617188
    9. ','' → logprob: -12.256393432617188
    10. '','#' → logprob: -12.381393432617188

Token 37: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.690834273584187e-05
    2. ''' → logprob: -11.37503719329834
    3. 'Y' → logprob: -11.62503719329834
    4. ' B' → logprob: -12.12503719329834
    5. 'R' → logprob: -12.75003719329834
    6. 'G' → logprob: -13.50003719329834
    7. '']' → logprob: -13.87503719329834
    8. '')' → logprob: -14.75003719329834
    9. 'W' → logprob: -14.93753719329834
    10. '['' → logprob: -15.00003719329834

Token 38: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.05024730786681175
    2. '','' → logprob: -3.6752471923828125
    3. '',' → logprob: -3.8002471923828125
    4. ''' → logprob: -7.1752471923828125
    5. ']' → logprob: -8.300247192382812
    6. '')' → logprob: -9.175247192382812
    7. '']
' → logprob: -10.300247192382812
    8. ','' → logprob: -10.300247192382812
    9. '',"' → logprob: -10.925247192382812
    10. '']

' → logprob: -11.175247192382812

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012497581774368882
    2. '    
' → logprob: -7.12624979019165
    3. '<|end|>' → logprob: -9.251249313354492
    4. '
' → logprob: -9.626249313354492
    5. '```' → logprob: -9.626249313354492
    6. 'def' → logprob: -10.126249313354492
    7. 'for' → logprob: -10.251249313354492
    8. 'queue' → logprob: -10.251249313354492
    9. ')' → logprob: -11.001249313354492
    10. '    ' → logprob: -11.251249313354492

Token 40: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2056251764297485
    2. 'queue' → logprob: -1.7056251764297485
    3. 'n' → logprob: -2.080625057220459
    4. 'for' → logprob: -2.205625057220459
    5. 'grid' → logprob: -2.330625057220459
    6. 'q' → logprob: -2.580625057220459
    7. 'r' → logprob: -2.830625057220459
    8. 'm' → logprob: -4.830625057220459
    9. ' grid' → logprob: -4.955625057220459
    10. 'rows' → logprob: -5.330625057220459

Token 41: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0001657565007917583
    2. 'True' → logprob: -8.750165939331055
    3. '(True' → logprob: -11.875165939331055
    4. ' ' → logprob: -16.000165939331055
    5. '=True' → logprob: -16.125165939331055
    6. ' input' → logprob: -17.750165939331055
    7. ' not' → logprob: -18.125165939331055
    8. ' true' → logprob: -18.375165939331055
    9. '_true' → logprob: -18.625165939331055
    10. ' Tru' → logprob: -18.875165939331055

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003461905289441347
    2. '):' → logprob: -8.375346183776855
    3. '():' → logprob: -10.125346183776855
    4. '       ' → logprob: -10.250346183776855
    5. '   ' → logprob: -11.000346183776855
    6. ':
' → logprob: -11.375346183776855
    7. ' :' → logprob: -12.250346183776855
    8. ':**' → logprob: -12.625346183776855
    9. '':' → logprob: -14.375346183776855
    10. '    ' → logprob: -15.000346183776855

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.396431565284729
    2. ' ' → logprob: -1.771431565284729
    3. '    ' → logprob: -2.5214314460754395
    4. '<|end|>' → logprob: -3.1464314460754395
    5. '   ' → logprob: -3.6464314460754395
    6. '        ' → logprob: -6.3964314460754395
    7. '<|end|>' → logprob: -6.7714314460754395
    8. '     ' → logprob: -6.7714314460754395
    9. '        
' → logprob: -7.0214314460754395
    10. '  ' → logprob: -7.1464314460754395

Token 44: ' X' (ID: 2127)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.040142953395843506
    2. 'line' → logprob: -3.5401430130004883
    3. '   ' → logprob: -5.915143013000488
    4. ' n' → logprob: -6.415143013000488
    5. 'n' → logprob: -6.665143013000488
    6. '       ' → logprob: -6.790143013000488
    7. ' s' → logprob: -7.540143013000488
    8. '```' → logprob: -7.665143013000488
    9. 'row' → logprob: -7.790143013000488
    10. '           ' → logprob: -7.790143013000488

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0642862543463707
    2. ',Y' → logprob: -2.939286231994629
    3. 'Y' → logprob: -4.689286231994629
    4. ' ,' → logprob: -9.064286231994629
    5. ' Y' → logprob: -10.564286231994629
    6. ',y' → logprob: -11.939286231994629
    7. 'YZ' → logprob: -12.814286231994629
    8. 'y' → logprob: -13.064286231994629
    9. 'Ys' → logprob: -13.064286231994629
    10. ',n' → logprob: -13.689286231994629

Token 46: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.3132714629173279
    2. ' Y' → logprob: -1.3132715225219727
    3. ' ' → logprob: -12.313271522521973
    4. '	Y' → logprob: -12.313271522521973
    5. 'y' → logprob: -15.438271522521973
    6. '    ' → logprob: -15.938271522521973
    7. '  ' → logprob: -16.313270568847656
    8. '   ' → logprob: -16.688270568847656
    9. 'space' → logprob: -16.813270568847656
    10. ' ' → logprob: -17.188270568847656

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25398746132850647
    2. '=' → logprob: -1.503987431526184
    3. ',' → logprob: -6.2539873123168945
    4. '=input' → logprob: -9.628987312316895
    5. '<|end|>' → logprob: -10.503987312316895
    6. ')' → logprob: -10.628987312316895
    7. '<|end|>' → logprob: -13.003987312316895
    8. ' ' → logprob: -13.003987312316895
    9. '    ' → logprob: -13.128987312316895
    10. ' ,' → logprob: -13.378987312316895

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0067209405824542046
    2. 'map' → logprob: -5.006721019744873
    3. ' input' → logprob: -12.506720542907715
    4. '	map' → logprob: -14.381720542907715
    5. ' ' → logprob: -15.006720542907715
    6. 'input' → logprob: -15.256720542907715
    7. ' list' → logprob: -15.506720542907715
    8. '(map' → logprob: -15.756720542907715
    9. ' mapa' → logprob: -16.00672149658203
    10. ' [' → logprob: -16.38172149658203

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014698355458676815
    2. '(' → logprob: -4.264698505401611
    3. '(input' → logprob: -7.889698505401611
    4. 'int' → logprob: -9.889698028564453
    5. '(str' → logprob: -10.014698028564453
    6. '(lambda' → logprob: -10.514698028564453
    7. '<int' → logprob: -11.389698028564453
    8. '<|end|>' → logprob: -11.389698028564453
    9. '(
' → logprob: -12.639698028564453
    10. '[int' → logprob: -12.889698028564453

Token 50: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5932813286781311
    2. 'input' → logprob: -1.4682812690734863
    3. ')' → logprob: -2.3432812690734863
    4. ',input' → logprob: -2.5932812690734863
    5. ',' → logprob: -3.2182812690734863
    6. ' input' → logprob: -5.718281269073486
    7. '(' → logprob: -6.593281269073486
    8. '<|end|>' → logprob: -7.093281269073486
    9. '=input' → logprob: -8.093281745910645
    10. '),' → logprob: -8.593281745910645

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868808448314667
    2. ' input' → logprob: -1.136880874633789
    3. ')' → logprob: -11.761880874633789
    4. ' )' → logprob: -14.511880874633789
    5. '(input' → logprob: -14.511880874633789
    6. ',input' → logprob: -14.886880874633789
    7. '	input' → logprob: -15.011880874633789
    8. '=input' → logprob: -15.386880874633789
    9. ' ' → logprob: -16.63688087463379
    10. '<input' → logprob: -17.26188087463379

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.333223139634356e-05
    2. '()' → logprob: -10.375033378601074
    3. '())' → logprob: -13.625033378601074
    4. ' ().' → logprob: -15.000033378601074
    5. '()
' → logprob: -15.125033378601074
    6. '(' → logprob: -16.125032424926758
    7. '('').' → logprob: -16.750032424926758
    8. '('' → logprob: -17.000032424926758
    9. '()[' → logprob: -17.750032424926758
    10. '()))' → logprob: -17.750032424926758

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015598179015796632
    2. 'strip' → logprob: -8.87515640258789
    3. 'rstrip' → logprob: -11.25015640258789
    4. ' split' → logprob: -13.25015640258789
    5. '(split' → logprob: -13.75015640258789
    6. 'spl' → logprob: -15.62515640258789
    7. ')' → logprob: -16.50015640258789
    8. '().' → logprob: -17.12515640258789
    9. 's' → logprob: -18.25015640258789
    10. 'read' → logprob: -18.75015640258789

Token 54: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021551121026277542
    2. '()))' → logprob: -4.521551132202148
    3. '()' → logprob: -5.021551132202148
    4. ')' → logprob: -5.646551132202148
    5. '))' → logprob: -8.521551132202148
    6. '('' → logprob: -9.896551132202148
    7. '(' → logprob: -10.146551132202148
    8. '())
' → logprob: -11.146551132202148
    9. '()))
' → logprob: -12.146551132202148
    10. '(','' → logprob: -12.146551132202148

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.02976241149008274
    2. 'X' → logprob: -3.5297625064849854
    3. ' (' → logprob: -12.154762268066406
    4. ' ' → logprob: -12.279762268066406
    5. '(X' → logprob: -14.029762268066406
    6. ' not' → logprob: -14.154762268066406
    7. '(' → logprob: -15.029762268066406
    8. '   ' → logprob: -16.404762268066406
    9. '	X' → logprob: -16.404762268066406
    10. '  ' → logprob: -17.529762268066406

Token 58: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20146040618419647
    2. ' ==' → logprob: -1.701460361480713
    3. '=' → logprob: -11.701460838317871
    4. '<=' → logprob: -11.826460838317871
    5. '```' → logprob: -12.076460838317871
    6. ' ' → logprob: -12.326460838317871
    7. '()==' → logprob: -12.576460838317871
    8. '<' → logprob: -12.576460838317871
    9. '===' → logprob: -12.576460838317871
    10. ')==' → logprob: -12.951460838317871

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.575955331325531
    2. ' ' → logprob: -0.825955331325531
    3. ' Y' → logprob: -11.575955390930176
    4. 'Y' → logprob: -13.200955390930176
    5. '  ' → logprob: -13.950955390930176
    6. '```' → logprob: -14.138455390930176
    7. ' ' → logprob: -14.325955390930176
    8. '   ' → logprob: -15.013455390930176
    9. '<' → logprob: -15.325955390930176
    10. '<|end|>' → logprob: -15.575955390930176

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.741137283621356e-05
    2. ' ' → logprob: -10.250057220458984
    3. 'Y' → logprob: -11.000057220458984
    4. '```' → logprob: -12.750057220458984
    5. ' Y' → logprob: -14.250057220458984
    6. '``' → logprob: -14.937557220458984
    7. '-' → logprob: -15.062557220458984
    8. '`' → logprob: -16.000057220458984
    9. 'and' → logprob: -16.187557220458984
    10. '۰' → logprob: -16.187557220458984

Token 61: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029814716428518295
    2. 'and' → logprob: -3.5298147201538086
    3. ' ' → logprob: -10.154814720153809
    4. ' or' → logprob: -10.779814720153809
    5. '<|end|>' → logprob: -13.279814720153809
    6. '	and' → logprob: -13.529814720153809
    7. '   ' → logprob: -14.654814720153809
    8. '  ' → logprob: -15.529814720153809
    9. ' a' → logprob: -16.029813766479492
    10. ' и' → logprob: -16.154813766479492

Token 62: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.004100958351045847
    2. 'Y' → logprob: -5.504100799560547
    3. ' ' → logprob: -10.754100799560547
    4. '	Y' → logprob: -14.379100799560547
    5. ' ' → logprob: -14.754100799560547
    6. '<|end|>' → logprob: -15.629100799560547
    7. '<|end|>' → logprob: -18.379100799560547
    8. '  ' → logprob: -18.504100799560547
    9. ' and' → logprob: -19.129100799560547
    10. '    ' → logprob: -19.379100799560547

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04407336562871933
    2. '==' → logprob: -3.1690733432769775
    3. '<|end|>' → logprob: -7.044073581695557
    4. '<|end|>' → logprob: -9.294073104858398
    5. ')==' → logprob: -10.169073104858398
    6. ' ' → logprob: -10.419073104858398
    7. ')' → logprob: -11.794073104858398
    8. '  ' → logprob: -12.294073104858398
    9. ' =' → logprob: -12.419073104858398
    10. '=' → logprob: -12.419073104858398

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059289163909852505
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.755928993225098
    4. '  ' → logprob: -16.88092803955078
    5. '<|end|>' → logprob: -17.63092803955078
    6. ' ' → logprob: -17.88092803955078
    7. '۰' → logprob: -18.13092803955078
    8. '```' → logprob: -18.63092803955078
    9. '    ' → logprob: -19.06842803955078
    10. '<|end|>' → logprob: -19.44342803955078

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -16.250158309936523
    4. '۰' → logprob: -17.375158309936523
    5. '```' → logprob: -18.375158309936523
    6. '   ' → logprob: -18.500158309936523
    7. '<|end|>' → logprob: -18.937658309936523
    8. '০' → logprob: -19.125158309936523
    9. '  ' → logprob: -19.312658309936523
    10. ')' → logprob: -19.375158309936523

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009188431431539357
    2. ':
' → logprob: -7.000918865203857
    3. ':return' → logprob: -12.7509183883667
    4. '       ' → logprob: -13.3759183883667
    5. '):' → logprob: -13.5009183883667
    6. '   ' → logprob: -14.2509183883667
    7. '<|end|>' → logprob: -15.8759183883667
    8. ',' → logprob: -16.000919342041016
    9. ' :' → logprob: -16.125919342041016
    10. '.' → logprob: -16.375919342041016

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6381521821022034
    2. '       ' → logprob: -1.3881521224975586
    3. ':' → logprob: -1.5131521224975586
    4. ':
' → logprob: -6.513152122497559
    5. '   ' → logprob: -9.013152122497559
    6. '\n' → logprob: -9.138152122497559
    7. '		' → logprob: -9.763152122497559
    8. '<|end|>' → logprob: -10.638152122497559
    9. '	       ' → logprob: -10.888152122497559
    10. '	' → logprob: -10.888152122497559

Token 68: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09265193343162537
    2. ' break' → logprob: -2.592651844024658
    3. 'break' (adapté à ' break') → logprob: -4.342651844024658
    4. '       ' → logprob: -8.217652320861816
    5. '               ' → logprob: -8.842652320861816
    6. ' return' → logprob: -9.592652320861816
    7. '	break' → logprob: -9.717652320861816
    8. 'return' → logprob: -9.717652320861816
    9. '   ' → logprob: -10.217652320861816
    10. '```' → logprob: -11.467652320861816

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.709843635559082
    2. '       ' → logprob: -1.334843635559082
    3. '   ' → logprob: -2.084843635559082
    4. '<|end|>' → logprob: -2.459843635559082
    5. '    
' → logprob: -4.084843635559082
    6. '        
' → logprob: -5.709843635559082
    7. '  
' → logprob: -5.959843635559082
    8. '<|end|>' → logprob: -6.459843635559082
    9. '```' → logprob: -6.709843635559082
    10. 'newline' → logprob: -6.709843635559082

Token 70: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8574954271316528
    2. '       ' → logprob: -0.8574954271316528
    3. '   ' → logprob: -2.9824953079223633
    4. '    
' → logprob: -3.4824953079223633
    5. '        
' → logprob: -3.8574953079223633
    6. '\n' → logprob: -4.107495307922363
    7. '<|end|>' → logprob: -4.357495307922363
    8. '  
' → logprob: -5.107495307922363
    9. ' 
' → logprob: -5.732495307922363
    10. '\' → logprob: -5.982495307922363

Token 71: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.785417377948761
    2. ' grid' → logprob: -0.785417377948761
    3. '       ' → logprob: -3.535417318344116
    4. '
' → logprob: -3.660417318344116
    5. '   ' → logprob: -4.535417556762695
    6. 'graph' → logprob: -5.160417556762695
    7. 'map' → logprob: -5.410417556762695
    8. ' graph' → logprob: -6.410417556762695
    9. '	grid' → logprob: -6.410417556762695
    10. '        
' → logprob: -6.785417556762695

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001337147317826748
    2. '=' → logprob: -6.626337051391602
    3. ' ' → logprob: -11.876337051391602
    4. '[' → logprob: -13.501337051391602
    5. ' =
' → logprob: -14.001337051391602
    6. ' =[' → logprob: -14.001337051391602
    7. '[:]' → logprob: -15.376337051391602
    8. ')' → logprob: -15.376337051391602
    9. '  ' → logprob: -15.751337051391602
    10. ']' → logprob: -16.2513370513916

Token 73: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16086435317993164
    2. ' [' → logprob: -1.9108643531799316
    3. '[str' → logprob: -9.160863876342773
    4. '[input' → logprob: -9.410863876342773
    5. '[key' → logprob: -10.035863876342773
    6. '[string' → logprob: -10.160863876342773
    7. '[list' → logprob: -10.410863876342773
    8. '[new' → logprob: -10.410863876342773
    9. '[array' → logprob: -10.410863876342773
    10. '[n' → logprob: -10.535863876342773

Token 74: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17521631717681885
    2. ' list' → logprob: -1.9252163171768188
    3. 'input' → logprob: -4.300216197967529
    4. ' input' → logprob: -6.800216197967529
    5. '[input' → logprob: -9.050216674804688
    6. '[list' → logprob: -9.550216674804688
    7. '   ' → logprob: -12.175216674804688
    8. '	list' → logprob: -13.425216674804688
    9. ' [' → logprob: -13.425216674804688
    10. '(list' → logprob: -13.425216674804688

Token 75: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013270588591694832
    2. '().' → logprob: -4.388270378112793
    3. '()]' → logprob: -7.263270378112793
    4. ' ()' → logprob: -10.638270378112793
    5. '())' → logprob: -11.013270378112793
    6. '()
' → logprob: -12.513270378112793
    7. '()`' → logprob: -13.138270378112793
    8. '（）' → logprob: -13.388270378112793
    9. '()].' → logprob: -13.513270378112793
    10. '()[' → logprob: -13.513270378112793

Token 76: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011750608682632446
    2. 'rstrip' → logprob: -4.5117506980896
    3. 'split' → logprob: -7.2617506980896
    4. ' strip' → logprob: -14.261750221252441
    5. 'read' → logprob: -16.636751174926758
    6. 'str' → logprob: -17.386751174926758
    7. '_strip' → logprob: -19.011751174926758
    8. '(strip' → logprob: -19.261751174926758
    9. ')' → logprob: -19.386751174926758
    10. 'r' → logprob: -19.386751174926758

Token 77: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3206750452518463
    2. '()]' → logprob: -1.320675015449524
    3. '())' → logprob: -5.570674896240234
    4. '('' → logprob: -5.695674896240234
    5. '(' → logprob: -9.695674896240234
    6. '()]
' → logprob: -9.945674896240234
    7. '()[' → logprob: -9.945674896240234
    8. '()][' → logprob: -10.820674896240234
    9. '()
' → logprob: -11.320674896240234
    10. ' ()' → logprob: -11.945674896240234

Token 78: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021031927317380905
    2. '()]' → logprob: -3.8960318565368652
    3. ' for' → logprob: -9.146032333374023
    4. '()[' → logprob: -9.271032333374023
    5. '(' → logprob: -9.521032333374023
    6. ']' → logprob: -9.521032333374023
    7. ' ()' → logprob: -10.021032333374023
    8. 'for' → logprob: -10.646032333374023
    9. '())' → logprob: -10.646032333374023
    10. '('' → logprob: -11.521032333374023

Token 79: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.589256763458252
    2. ' _' → logprob: -0.839256763458252
    3. ' range' → logprob: -4.339256763458252
    4. '_range' → logprob: -9.589256286621094
    5. 'range' → logprob: -9.714256286621094
    6. '(range' → logprob: -11.089256286621094
    7. ' ' → logprob: -11.339256286621094
    8. ' xrange' → logprob: -12.089256286621094
    9. '<|end|>' → logprob: -12.339256286621094
    10. ' in' → logprob: -12.339256286621094

Token 80: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9249247312545776
    2. 'range' → logprob: -0.9249247312545776
    3. '(range' → logprob: -2.174924850463867
    4. ' in' → logprob: -2.424924850463867
    5. 'in' → logprob: -5.674924850463867
    6. '(' → logprob: -7.674924850463867
    7. ' xrange' → logprob: -7.799924850463867
    8. '	range' → logprob: -7.924924850463867
    9. ' ' → logprob: -10.299924850463867
    10. '_range' → logprob: -11.049924850463867

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003831252979580313
    2. ' range' → logprob: -7.875382900238037
    3. '(range' → logprob: -12.875383377075195
    4. '	range' → logprob: -15.500383377075195
    5. ')' → logprob: -16.250383377075195
    6. 'rang' → logprob: -17.000383377075195
    7. '```' → logprob: -17.500383377075195
    8. '[' → logprob: -17.875383377075195
    9. 'ran' → logprob: -18.000383377075195
    10. ']' → logprob: -18.375383377075195

Token 82: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0012215361930429935
    2. '(' → logprob: -6.751221656799316
    3. '(X' → logprob: -10.251221656799316
    4. ' (' → logprob: -11.751221656799316
    5. 'Y' → logprob: -12.501221656799316
    6. ' Y' → logprob: -12.876221656799316
    7. '	Y' → logprob: -14.001221656799316
    8. '(y' → logprob: -14.501221656799316
    9. '(
' → logprob: -15.001221656799316
    10. ')' → logprob: -17.251220703125

Token 83: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020103710994590074
    2. ')' → logprob: -8.750201225280762
    3. ']' → logprob: -10.125201225280762
    4. ' )' → logprob: -14.500201225280762
    5. '   ' → logprob: -14.875201225280762
    6. '')]' → logprob: -15.250201225280762
    7. ')}' → logprob: -15.625201225280762
    8. '))' → logprob: -15.625201225280762
    9. ')]
' → logprob: -16.000200271606445
    10. '}]' → logprob: -16.125200271606445

Token 84: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03881065919995308
    2. '<|end|>' → logprob: -4.163810729980469
    3. '   ' → logprob: -4.413810729980469
    4. '    
' → logprob: -6.038810729980469
    5. '\n' → logprob: -6.413810729980469
    6. '' → logprob: -6.663810729980469
    7. '```' → logprob: -6.788810729980469
    8. ' 
' → logprob: -7.288810729980469
    9. '  
' → logprob: -7.413810729980469
    10. '       ' → logprob: -7.788810729980469

Token 85: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3658033609390259
    2. 'dist' → logprob: -1.7408033609390259
    3. 'distance' → logprob: -2.2408032417297363
    4. ' visited' → logprob: -4.990803241729736
    5. '       ' → logprob: -5.115803241729736
    6. 'def' → logprob: -5.615803241729736
    7. 'result' → logprob: -6.990803241729736
    8. ' distance' → logprob: -7.115803241729736
    9. 'vis' → logprob: -7.115803241729736
    10. 'd' → logprob: -7.365803241729736

Token 86: ' BFS' (ID: 190016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18515942990779877
    2. 'd' → logprob: -3.43515944480896
    3. ' visited' → logprob: -3.93515944480896
    4. '   ' → logprob: -4.310159206390381
    5. 'space' → logprob: -4.810159206390381
    6. ' d' → logprob: -4.810159206390381
    7. 'c' → logprob: -4.935159206390381
    8. ' #' → logprob: -5.060159206390381
    9. 'visited' → logprob: -5.060159206390381
    10. '    ' → logprob: -5.185159206390381

Token 87: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.09000539034605026
    2. 'find' → logprob: -2.840005397796631
    3. ' explore' → logprob: -4.590005397796631
    4. ' check' → logprob: -5.090005397796631
    5. ' process' → logprob: -5.590005397796631
    6. 'expl' → logprob: -5.965005397796631
    7. '<|end|>' → logprob: -7.465005397796631
    8. ' visit' → logprob: -7.465005397796631
    9. 'process' → logprob: -7.840005397796631
    10. ' compute' → logprob: -7.965005397796631

Token 89: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.8975187540054321
    2. ' regions' → logprob: -1.0225187540054321
    3. ' the' → logprob: -2.2725186347961426
    4. ' a' → logprob: -3.1475186347961426
    5. ' areas' → logprob: -3.3975186347961426
    6. ' contiguous' → logprob: -4.022518634796143
    7. 'regions' → logprob: -5.272518634796143
    8. 'connected' → logprob: -5.397518634796143
    9. ' all' → logprob: -5.397518634796143
    10. ' components' → logprob: -5.897518634796143

Token 90: ' component' (ID: 6392)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.3885430097579956
    2. '_components' → logprob: -1.7635430097579956
    3. '_' → logprob: -2.263543128967285
    4. 'components' → logprob: -3.388543128967285
    5. '_component' → logprob: -5.138543128967285
    6. ' component' → logprob: -5.763543128967285
    7. ' ' → logprob: -6.888543128967285
    8. '<|end|>' → logprob: -7.263543128967285
    9. 'component' → logprob: -7.638543128967285
    10. '_regions' → logprob: -8.388543128967285

Token 91: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9197174906730652
    2. '   ' → logprob: -1.66971755027771
    3. '    ' → logprob: -1.79471755027771
    4. ':' → logprob: -2.29471755027771
    5. '<|end|>' → logprob: -2.91971755027771
    6. ' ' → logprob: -3.41971755027771
    7. '        ' → logprob: -4.419717311859131
    8. ' for' → logprob: -4.544717311859131
    9. '        
' → logprob: -5.294717311859131
    10. '  ' → logprob: -5.294717311859131

Token 92: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4150114059448242
    2. ' the' → logprob: -1.4150114059448242
    3. ' (' → logprob: -1.9150114059448242
    4. ' color' → logprob: -2.415011405944824
    5. ' cells' → logprob: -2.665011405944824
    6. '<|end|>' → logprob: -2.665011405944824
    7. ' grid' → logprob: -3.040011405944824
    8. ' each' → logprob: -3.790011405944824
    9. ' current' → logprob: -4.415011405944824
    10. ' same' → logprob: -4.915011405944824

Token 93: ' top' (ID: 2344)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.7625769376754761
    2. 'current' → logprob: -1.762576937675476
    3. ' next' → logprob: -2.3875770568847656
    4. ' starting' → logprob: -2.5125770568847656
    5. ' cell' → logprob: -2.7625770568847656
    6. ' same' → logprob: -3.8875770568847656
    7. 'same' → logprob: -4.137577056884766
    8. 'starting' → logprob: -4.137577056884766
    9. 'next' → logprob: -4.262577056884766
    10. 'start' → logprob: -4.637577056884766

Token 94: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.02596060186624527
    2. ' left' → logprob: -4.775960445404053
    3. ' row' → logprob: -5.900960445404053
    4. '[' → logprob: -6.025960445404053
    5. '   ' → logprob: -6.400960445404053
    6. '-' → logprob: -6.400960445404053
    7. '<|end|>' → logprob: -6.900960445404053
    8. ')' → logprob: -6.900960445404053
    9. '-level' → logprob: -7.275960445404053
    10. ' (' → logprob: -7.400960445404053

Token 95: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4880267083644867
    2. '_' → logprob: -1.738026738166809
    3. ' ' → logprob: -1.863026738166809
    4. ' )' → logprob: -3.1130266189575195
    5. ' node' → logprob: -6.4880266189575195
    6. ',' → logprob: -6.7380266189575195
    7. ' cell' → logprob: -6.9880266189575195
    8. '<|end|>' → logprob: -7.1130266189575195
    9. '   ' → logprob: -7.6130266189575195
    10. '  ' → logprob: -7.6130266189575195

Token 96: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0645052194595337
    2. '   ' → logprob: -1.3145052194595337
    3. '       ' → logprob: -1.9395052194595337
    4. ' ' → logprob: -2.439505100250244
    5. ')' → logprob: -2.814505100250244
    6. ',' → logprob: -3.314505100250244
    7. '    ' → logprob: -3.439505100250244
    8. '  ' → logprob: -5.189505100250244
    9. '<|end|>' → logprob: -5.314505100250244
    10. '        ' → logprob: -6.314505100250244

Token 97: ' its' (ID: 1617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06613428145647049
    2. ' same' → logprob: -3.691134214401245
    3. ' color' → logprob: -4.566134452819824
    4. 'the' → logprob: -4.691134452819824
    5. ' colors' → logprob: -5.191134452819824
    6. 'out' → logprob: -5.816134452819824
    7. 'same' → logprob: -5.816134452819824
    8. ' a' → logprob: -6.066134452819824
    9. 'in' → logprob: -6.316134452819824
    10. ' its' → logprob: -7.066134452819824

Token 98: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.208199143409729
    2. 'color' → logprob: -1.708199143409729
    3. 'same' → logprob: -6.4581990242004395
    4. ' same' → logprob: -6.8331990242004395
    5. ' own' → logprob: -6.9581990242004395
    6. '<|end|>' → logprob: -6.9581990242004395
    7. 'own' → logprob: -7.3331990242004395
    8. 'neighbor' → logprob: -8.208199501037598
    9. '```' → logprob: -8.333199501037598
    10. ' neighbors' → logprob: -8.708199501037598

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.165628433227539
    2. ':' → logprob: -1.415628433227539
    3. '       ' → logprob: -1.790628433227539
    4. '
' → logprob: -2.415628433227539
    5. ' ' → logprob: -2.540628433227539
    6. ',' → logprob: -3.290628433227539
    7. '<|end|>' → logprob: -3.790628433227539
    8. ')' → logprob: -4.290628433227539
    9. '    ' → logprob: -4.540628433227539
    10. '  ' → logprob: -5.290628433227539

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8129599094390869
    2. '   ' → logprob: -1.062959909439087
    3. ':' → logprob: -2.937959909439087
    4. '
' → logprob: -2.937959909439087
    5. ' ' → logprob: -3.687959909439087
    6. '<|end|>' → logprob: -3.812959909439087
    7. '    ' → logprob: -4.312959671020508
    8. ',' → logprob: -4.562959671020508
    9. ')' → logprob: -5.187959671020508
    10. ' 
' → logprob: -5.312959671020508

Token 101: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45193299651145935
    2. '       ' → logprob: -1.3269330263137817
    3. '
' → logprob: -3.201932907104492
    4. 'visited' → logprob: -4.201932907104492
    5. 'queue' → logprob: -4.451932907104492
    6. ' 
' → logprob: -5.201932907104492
    7. ' queue' → logprob: -5.576932907104492
    8. ' visited' → logprob: -5.951932907104492
    9. '    ' → logprob: -6.076932907104492
    10. ' ' → logprob: -6.076932907104492

Token 102: ' flood' (ID: 23390)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.008618000894784927
    2. 'b' → logprob: -4.758617877960205
    3. ' BFS' → logprob: -13.508618354797363
    4. '	b' → logprob: -13.633618354797363
    5. ' find' → logprob: -15.383618354797363
    6. '```' → logprob: -16.008617401123047
    7. ' b' → logprob: -16.008617401123047
    8. ' dfs' → logprob: -16.133617401123047
    9. ' ' → logprob: -16.383617401123047
    10. 'B' → logprob: -16.633617401123047

Token 103: '_fill' (ID: 70344)
  Prédit: '_fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fill' → logprob: -0.12743879854679108
    2. '_' → logprob: -2.12743878364563
    3. 'fill' → logprob: -7.627439022064209
    4. ' fill' → logprob: -11.75243854522705
    5. '-' → logprob: -12.37743854522705
    6. '-fill' → logprob: -12.62743854522705
    7. '_f' → logprob: -13.12743854522705
    8. 'Fill' → logprob: -13.62743854522705
    9. '_FILL' → logprob: -14.37743854522705
    10. '(fill' → logprob: -14.62743854522705

Token 104: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3410813808441162
    2. '(grid' → logprob: -1.8410813808441162
    3. '(x' → logprob: -2.341081380844116
    4. '(queue' → logprob: -4.341081619262695
    5. ' (' → logprob: -4.466081619262695
    6. '(row' → logprob: -4.966081619262695
    7. '(cell' → logprob: -7.591081619262695
    8. '(node' → logprob: -7.591081619262695
    9. '(start' → logprob: -8.091081619262695
    10. '(
' → logprob: -8.716081619262695

Token 105: ',' (ID: 11)
  Prédit: 'rid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rid' → logprob: -0.5807251930236816
    2. ',' → logprob: -1.3307251930236816
    3. ')' → logprob: -2.5807251930236816
    4. '):' → logprob: -3.0807251930236816
    5. '[' → logprob: -3.5807251930236816
    6. '):
' → logprob: -4.330725193023682
    7. 'raph' → logprob: -5.955725193023682
    8. '[g' → logprob: -6.455725193023682
    9. '(grid' → logprob: -6.955725193023682
    10. '[u' → logprob: -7.080725193023682

Token 106: ' target' (ID: 3783)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.036673404276371
    2. ' x' → logprob: -3.5366733074188232
    3. 'r' → logprob: -5.911673545837402
    4. 'start' → logprob: -6.411673545837402
    5. ' start' → logprob: -6.411673545837402
    6. 'sr' → logprob: -7.536673545837402
    7. ' r' → logprob: -8.411673545837402
    8. 'sx' → logprob: -10.036673545837402
    9. ' sr' → logprob: -10.286673545837402
    10. 'y' → logprob: -11.161673545837402

Token 107: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.010300404392182827
    2. ',' → logprob: -5.010300636291504
    3. 'color' → logprob: -6.760300636291504
    4. '):' → logprob: -7.010300636291504
    5. '_x' → logprob: -7.010300636291504
    6. ')' → logprob: -8.135300636291504
    7. '_' → logprob: -9.635300636291504
    8. ' ,' → logprob: -10.010300636291504
    9. ',color' → logprob: -10.010300636291504
    10. ' color' → logprob: -10.385300636291504

Token 108: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046332005877047777
    2. '):' → logprob: -7.750463485717773
    3. ' ,' → logprob: -10.875463485717773
    4. ')' → logprob: -11.500463485717773
    5. ',x' → logprob: -14.125463485717773
    6. '):
' → logprob: -14.125463485717773
    7. ',
' → logprob: -15.000463485717773
    8. '   ' → logprob: -15.125463485717773
    9. '‌,' → logprob: -16.250463485717773
    10. 's' → logprob: -16.250463485717773

Token 109: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' visited' (ID: 18416)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.2718609869480133
    2. 'queue' → logprob: -2.6468610763549805
    3. ' 
' → logprob: -3.2718610763549805
    4. ' visited' → logprob: -3.7718610763549805
    5. '
' → logprob: -4.0218610763549805
    6. 'd' → logprob: -4.1468610763549805
    7. '       ' → logprob: -4.1468610763549805
    8. '   ' → logprob: -4.3968610763549805
    9. ' d' → logprob: -5.0218610763549805
    10. 'deque' → logprob: -5.0218610763549805

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006576312007382512
    2. '=' → logprob: -7.375657558441162
    3. ' ' → logprob: -11.12565803527832
    4. '<|end|>' → logprob: -11.62565803527832
    5. ',' → logprob: -12.62565803527832
    6. ')' → logprob: -13.62565803527832
    7. '=set' → logprob: -14.62565803527832
    8. '   ' → logprob: -14.62565803527832
    9. '  ' → logprob: -14.87565803527832
    10. '    ' → logprob: -15.12565803527832

Token 112: ' [[' (ID: 9237)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.37595269083976746
    2. 'set' → logprob: -1.3759527206420898
    3. 'deque' → logprob: -3.37595272064209
    4. ' deque' → logprob: -4.12595272064209
    5. ' [[' → logprob: -5.00095272064209
    6. '[[' → logprob: -5.62595272064209
    7. '{' → logprob: -9.87595272064209
    8. '	set' → logprob: -10.75095272064209
    9. ' {' → logprob: -11.25095272064209
    10. ' ' → logprob: -13.00095272064209

Token 113: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -14.75
    3. '(False' → logprob: -20.875
    4. '0' → logprob: -21.25
    5. 'True' → logprob: -24.875
    6. '=False' → logprob: -25.125
    7. 'false' → logprob: -25.75
    8. '```' → logprob: -26.875
    9. '.False' → logprob: -27.25
    10. '_false' → logprob: -27.375

Token 114: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03738667443394661
    2. ']' → logprob: -3.787386655807495
    3. 'for' → logprob: -4.537386894226074
    4. '<|end|>' → logprob: -6.162386894226074
    5. ']*' → logprob: -7.037386894226074
    6. ',' → logprob: -9.662386894226074
    7. ')' → logprob: -9.787386894226074
    8. '           ' → logprob: -10.037386894226074
    9. ' ]' → logprob: -10.162386894226074
    10. '               ' → logprob: -10.787386894226074

Token 115: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0019452953711152077
    2. 'len' → logprob: -6.501945495605469
    3. ' X' → logprob: -8.001945495605469
    4. 'Y' → logprob: -9.376945495605469
    5. '(X' → logprob: -11.751945495605469
    6. '(len' → logprob: -11.751945495605469
    7. ' len' → logprob: -12.251945495605469
    8. '   ' → logprob: -14.376945495605469
    9. '	X' → logprob: -14.751945495605469
    10. '(' → logprob: -14.876945495605469

Token 116: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004639572463929653
    2. 'for' → logprob: -5.379639625549316
    3. '	for' → logprob: -11.629639625549316
    4. ')' → logprob: -13.129639625549316
    5. '       ' → logprob: -13.129639625549316
    6. '           ' → logprob: -13.504639625549316
    7. '   ' → logprob: -13.629639625549316
    8. ' ' → logprob: -13.754639625549316
    9. ']' → logprob: -13.879639625549316
    10. '<|end|>' → logprob: -14.629639625549316

Token 117: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3139401972293854
    2. '_' → logprob: -1.313940167427063
    3. ' range' → logprob: -7.563940048217773
    4. '_range' → logprob: -9.188940048217773
    5. '<|end|>' → logprob: -10.938940048217773
    6. ' ' → logprob: -10.938940048217773
    7. 'range' → logprob: -11.938940048217773
    8. ' in' → logprob: -12.313940048217773
    9. '_Y' → logprob: -13.188940048217773
    10. '<|end|>' → logprob: -13.438940048217773

Token 118: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12695078551769257
    2. ' range' → logprob: -2.251950740814209
    3. ' in' → logprob: -4.501950740814209
    4. 'in' → logprob: -5.876950740814209
    5. '(range' → logprob: -9.126951217651367
    6. ' xrange' → logprob: -11.876951217651367
    7. '	range' → logprob: -12.126951217651367
    8. '_' → logprob: -12.376951217651367
    9. ' ' → logprob: -12.501951217651367
    10. '_range' → logprob: -12.501951217651367

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694396078586578
    2. ' range' → logprob: -2.126944065093994
    3. '[' → logprob: -12.501943588256836
    4. '(range' → logprob: -12.751943588256836
    5. '	range' → logprob: -12.876943588256836
    6. ' ' → logprob: -13.501943588256836
    7. '   ' → logprob: -13.626943588256836
    8. ' xrange' → logprob: -14.001943588256836
    9. ')' → logprob: -14.251943588256836
    10. 'g' → logprob: -14.751943588256836

Token 120: '(Y' (ID: 44341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3965892493724823
    2. 'range' → logprob: -1.8965892791748047
    3. '(Y' → logprob: -1.8965892791748047
    4. '(' → logprob: -3.8965892791748047
    5. '(range' → logprob: -5.521589279174805
    6. 'Y' → logprob: -6.146589279174805
    7. ' Y' → logprob: -8.896589279174805
    8. ' (' → logprob: -9.271589279174805
    9. '   ' → logprob: -9.271589279174805
    10. '(grid' → logprob: -9.521589279174805

Token 121: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03830323368310928
    2. ']' → logprob: -3.2883031368255615
    3. ' ]' → logprob: -9.66330337524414
    4. ')' → logprob: -9.91330337524414
    5. ']
' → logprob: -9.91330337524414
    6. '       ' → logprob: -10.16330337524414
    7. '           ' → logprob: -10.66330337524414
    8. ')]
' → logprob: -11.16330337524414
    9. '])' → logprob: -11.78830337524414
    10. '   ' → logprob: -12.53830337524414

Token 122: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' q' (ID: 2335)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.13123536109924316
    2. 'queue' → logprob: -2.506235361099243
    3. '
' → logprob: -4.256235122680664
    4. '   ' → logprob: -4.381235122680664
    5. ' 
' → logprob: -5.256235122680664
    6. ' q' → logprob: -6.131235122680664
    7. '	queue' → logprob: -6.256235122680664
    8. '    
' → logprob: -6.506235122680664
    9. '       ' → logprob: -6.631235122680664
    10. 'q' (adapté à ' q') → logprob: -6.756235122680664

Token 124: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6926727890968323
    2. ' =' → logprob: -1.1926727294921875
    3. '=' → logprob: -2.3176727294921875
    4. '.append' → logprob: -2.9426727294921875
    5. '.enqueue' → logprob: -3.4426727294921875
    6. '.add' → logprob: -5.6926727294921875
    7. '.dequeue' → logprob: -6.3176727294921875
    8. ')' → logprob: -6.3176727294921875
    9. ' .' → logprob: -6.6926727294921875
    10. '<|end|>' → logprob: -6.6926727294921875

Token 125: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.126929372549057
    2. ' deque' → logprob: -2.12692928314209
    3. 'Deque' → logprob: -13.75192928314209
    4. 'de' → logprob: -15.50192928314209
    5. '	de' → logprob: -18.626930236816406
    6. ' dequeue' → logprob: -20.251930236816406
    7. '```' → logprob: -20.376930236816406
    8. '(de' → logprob: -20.876930236816406
    9. 'dq' → logprob: -21.251930236816406
    10. 'collections' → logprob: -21.376930236816406

Token 126: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.013092710636556149
    2. '()' → logprob: -4.388092517852783
    3. '([' → logprob: -8.013092994689941
    4. '[(' → logprob: -8.763092994689941
    5. '()
' → logprob: -10.138092994689941
    6. '((' → logprob: -10.763092994689941
    7. '(' → logprob: -11.263092994689941
    8. '([
' → logprob: -11.513092994689941
    9. '[((' → logprob: -13.513092994689941
    10. '()]' → logprob: -13.638092994689941

Token 127: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2702367603778839
    2. '           ' → logprob: -1.8952367305755615
    3. ' (' → logprob: -3.5202367305755615
    4. 'q' → logprob: -3.5202367305755615
    5. '(q' → logprob: -4.395236968994141
    6. ' q' → logprob: -4.645236968994141
    7. '<|end|>' → logprob: -6.395236968994141
    8. '            ' → logprob: -7.520236968994141
    9. '               ' → logprob: -7.770236968994141
    10. '(
' → logprob: -7.895236968994141

Token 128: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.07674841582775116
    2. ' q' → logprob: -2.7017483711242676
    3. ' (' → logprob: -5.701748371124268
    4. '(' → logprob: -6.326748371124268
    5. ' 
' → logprob: -6.951748371124268
    6. '
' → logprob: -8.451748847961426
    7. '(q' → logprob: -8.701748847961426
    8. '           ' → logprob: -9.201748847961426
    9. '            
' → logprob: -10.451748847961426
    10. '    
' → logprob: -10.451748847961426

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00445587420836091
    2. '.' → logprob: -5.504456043243408
    3. '.enqueue' → logprob: -8.37945556640625
    4. '.put' → logprob: -9.00445556640625
    5. ' .' → logprob: -11.50445556640625
    6. '.extend' → logprob: -11.87945556640625
    7. '.push' → logprob: -13.25445556640625
    8. 'append' → logprob: -13.62945556640625
    9. '.p' → logprob: -14.00445556640625
    10. '.add' → logprob: -14.12945556640625

Token 130: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002087853499688208
    2. '(' → logprob: -8.500208854675293
    3. '(((' → logprob: -12.375208854675293
    4. ' ((' → logprob: -14.250208854675293
    5. '([(' → logprob: -15.375208854675293
    6. '([' → logprob: -17.000207901000977
    7. '[(' → logprob: -17.000207901000977
    8. 'left' → logprob: -17.500207901000977
    9. '(q' → logprob: -17.750207901000977
    10. '(([' → logprob: -17.875207901000977

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '(' → logprob: -15.750045776367188
    4. ')' → logprob: -18.000045776367188
    5. '۰' → logprob: -18.250045776367188
    6. '
' → logprob: -18.375045776367188
    7. '00' → logprob: -18.375045776367188
    8. '   ' → logprob: -19.062545776367188
    9. ' (' → logprob: -19.375045776367188
    10. '<|end|>' → logprob: -19.500045776367188

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.603335638530552e-05
    2. ' ,' → logprob: -9.625096321105957
    3. '<|end|>' → logprob: -10.625096321105957
    4. ')' → logprob: -13.375096321105957
    5. ',
' → logprob: -13.625096321105957
    6. '0' → logprob: -13.750096321105957
    7. ' ' → logprob: -14.750096321105957
    8. '<|end|>' → logprob: -15.250096321105957
    9. ',q' → logprob: -15.375096321105957
    10. '‌,' → logprob: -15.500096321105957

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -17.37523078918457
    4. '۰' → logprob: -18.62523078918457
    5. ',' → logprob: -19.50023078918457
    6. ' ' → logprob: -19.56273078918457
    7. '
' → logprob: -19.56273078918457
    8. '1' → logprob: -19.62523078918457
    9. ')' → logprob: -20.18773078918457
    10. '  ' → logprob: -20.68773078918457

Token 134: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038323063403367996
    2. ')' → logprob: -3.288323163986206
    3. ',' → logprob: -9.413323402404785
    4. '))
' → logprob: -9.413323402404785
    5. ' ))' → logprob: -9.788323402404785
    6. ')))' → logprob: -10.163323402404785
    7. '),' → logprob: -11.538323402404785
    8. ' )' → logprob: -12.163323402404785
    9. ')
' → logprob: -13.038323402404785
    10. '));' → logprob: -13.288323402404785

Token 135: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.125957652926445
    2. '           ' → logprob: -2.500957727432251
    3. ' visited' → logprob: -3.375957727432251
    4. '       ' → logprob: -7.500957489013672
    5. 'while' → logprob: -7.625957489013672
    6. ' while' → logprob: -7.750957489013672
    7. '
' → logprob: -8.125957489013672
    8. '               ' → logprob: -9.500957489013672
    9. '   ' → logprob: -9.875957489013672
    10. ' 
' → logprob: -9.875957489013672

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3306015716807451e-05
    2. ')[' → logprob: -11.87501335144043
    3. '][' → logprob: -12.50001335144043
    4. ' [' → logprob: -13.37501335144043
    5. '```' → logprob: -15.12501335144043
    6. ')' → logprob: -16.12501335144043
    7. '[[' → logprob: -16.50001335144043
    8. '
' → logprob: -16.62501335144043
    9. '[][' → logprob: -16.62501335144043
    10. '\[' → logprob: -16.62501335144043

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.125012397766113
    4. 'Y' → logprob: -14.750012397766113
    5. '][' → logprob: -16.25001335144043
    6. '
' → logprob: -17.75001335144043
    7. '```' → logprob: -17.87501335144043
    8. '(' → logprob: -18.00001335144043
    9. ')' → logprob: -18.12501335144043
    10. 'y' → logprob: -18.56251335144043

Token 139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.976922744186595e-05
    2. ' ][' → logprob: -10.750040054321289
    3. ']' → logprob: -11.500040054321289
    4. '[' → logprob: -12.000040054321289
    5. ')][' → logprob: -13.625040054321289
    6. ']][' → logprob: -14.625040054321289
    7. '()][' → logprob: -16.12504005432129
    8. '"][' → logprob: -16.62504005432129
    9. ''][' → logprob: -17.00004005432129
    10. '   ' → logprob: -17.12504005432129

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -17.75
    4. '<|end|>' → logprob: -18.75
    5. '1' → logprob: -19.375
    6. ')' → logprob: -20.1875
    7. ']' → logprob: -20.3125
    8. '০' → logprob: -20.4375
    9. '
' → logprob: -20.6875
    10. '०' → logprob: -20.8125

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020984768867492676
    2. ')' → logprob: -4.020984649658203
    3. ']=' → logprob: -6.520984649658203
    4. '])' → logprob: -6.770984649658203
    5. ')]' → logprob: -9.020984649658203
    6. ' ]' → logprob: -9.895984649658203
    7. ' )' → logprob: -11.645984649658203
    8. '=' → logprob: -11.645984649658203
    9. ' =' → logprob: -11.770984649658203
    10. ')=' → logprob: -11.895984649658203

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602974385023117
    2. '=' → logprob: -1.9102973937988281
    3. ']' → logprob: -9.785297393798828
    4. '=True' → logprob: -11.285297393798828
    5. ')' → logprob: -13.285297393798828
    6. ']=' → logprob: -13.410297393798828
    7. ' ' → logprob: -14.035297393798828
    8. '[' → logprob: -15.910297393798828
    9. ' ]' → logprob: -15.910297393798828
    10. ')=' → logprob: -16.535297393798828

Token 143: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. '=True' → logprob: -18.018150329589844
    4. '(True' → logprob: -18.143150329589844
    5. 'Tr' → logprob: -18.518150329589844
    6. ' Tru' → logprob: -21.268150329589844
    7. 'T' → logprob: -21.643150329589844
    8. '.True' → logprob: -21.768150329589844
    9. '1' → logprob: -22.268150329589844
    10. 'true' → logprob: -22.268150329589844

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0017810913268476725
    2. '<|end|>' → logprob: -8.126781463623047
    3. '    
' → logprob: -8.251781463623047
    4. '  
' → logprob: -8.376781463623047
    5. ' 
' → logprob: -8.376781463623047
    6. '           ' → logprob: -8.626781463623047
    7. '\n' → logprob: -8.751781463623047
    8. '       ' → logprob: -8.876781463623047
    9. '
' → logprob: -9.751781463623047
    10. '   ' → logprob: -9.751781463623047

Token 145: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1391652822494507
    2. '   ' → logprob: -1.5141652822494507
    3. ' while' → logprob: -1.8891652822494507
    4. ' 
' → logprob: -2.2641654014587402
    5. '       ' → logprob: -2.5141654014587402
    6. '    
' → logprob: -3.1391654014587402
    7. '<|end|>' → logprob: -3.6391654014587402
    8. '  
' → logprob: -4.38916540145874
    9. 'while' → logprob: -5.01416540145874
    10. '           ' → logprob: -5.13916540145874

Token 146: ' component' (ID: 6392)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06933244317770004
    2. ' while' → logprob: -2.8193323612213135
    3. 'color' → logprob: -5.569332599639893
    4. '       ' → logprob: -6.444332599639893
    5. '           ' → logprob: -7.069332599639893
    6. 'target' → logprob: -7.694332599639893
    7. 'count' → logprob: -8.569332122802734
    8. '   ' → logprob: -8.569332122802734
    9. 'result' → logprob: -9.194332122802734
    10. 'current' → logprob: -10.194332122802734

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.528541088104248
    2. '=' → logprob: -0.903541088104248
    3. '_size' → logprob: -6.528541088104248
    4. '=[]' → logprob: -6.778541088104248
    5. '.append' → logprob: -7.028541088104248
    6. 's' → logprob: -7.403541088104248
    7. '_' → logprob: -8.028541564941406
    8. '_cells' → logprob: -8.528541564941406
    9. '.' → logprob: -8.653541564941406
    10. ')' → logprob: -8.778541564941406

Token 148: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.008578523993492126
    2. '[]' → logprob: -5.508578300476074
    3. ' [(' → logprob: -5.508578300476074
    4. ' {(' → logprob: -8.383578300476074
    5. '{' → logprob: -9.008578300476074
    6. 'set' → logprob: -10.383578300476074
    7. ' []' → logprob: -10.508578300476074
    8. '[' → logprob: -11.258578300476074
    9. ' set' → logprob: -11.883578300476074
    10. '[((' → logprob: -12.258578300476074

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -16.625001907348633
    4. '
' → logprob: -17.375001907348633
    5. '۰' → logprob: -17.625001907348633
    6. '(' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '```' → logprob: -18.500001907348633
    9. '０' → logprob: -18.937501907348633
    10. '00' → logprob: -19.125001907348633

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001652796781854704
    2. ' ,' → logprob: -8.750164985656738
    3. '0' → logprob: -13.125164985656738
    4. '<|end|>' → logprob: -13.250164985656738
    5. ')' → logprob: -13.750164985656738
    6. ',
' → logprob: -14.125164985656738
    7. ' ' → logprob: -15.000164985656738
    8. '   ' → logprob: -15.750164985656738
    9. '```' → logprob: -15.875164985656738
    10. '[' → logprob: -16.000165939331055

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -18.125017166137695
    4. '<|end|>' → logprob: -18.375017166137695
    5. '۰' → logprob: -19.500017166137695
    6. '```' → logprob: -20.125017166137695
    7. ',' → logprob: -20.125017166137695
    8. ')' → logprob: -20.375017166137695
    9. ' ' → logprob: -21.062517166137695
    10. '

' → logprob: -21.375017166137695

Token 152: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012013008818030357
    2. ')' → logprob: -6.876201152801514
    3. ']' → logprob: -8.751201629638672
    4. ')]
' → logprob: -12.751201629638672
    5. ' )' → logprob: -13.251201629638672
    6. ',' → logprob: -13.376201629638672
    7. ')])' → logprob: -13.626201629638672
    8. '),' → logprob: -14.501201629638672
    9. '))' → logprob: -14.876201629638672
    10. ')]

' → logprob: -15.126201629638672

Token 153: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039085838943719864
    2. '<|end|>' → logprob: -4.539085865020752
    3. '    
' → logprob: -4.789085865020752
    4. ' 
' → logprob: -5.289085865020752
    5. '   ' → logprob: -5.414085865020752
    6. ' while' → logprob: -5.789085865020752
    7. '  
' → logprob: -5.914085865020752
    8. 'while' → logprob: -7.039085865020752
    9. '       ' → logprob: -7.164085865020752
    10. '	while' → logprob: -8.039085388183594

Token 154: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5712020397186279
    2. ' while' → logprob: -1.321202039718628
    3. '
' → logprob: -1.821202039718628
    4. ' 
' → logprob: -5.821202278137207
    5. '    
' → logprob: -6.571202278137207
    6. '   ' → logprob: -7.071202278137207
    7. '	while' → logprob: -7.321202278137207
    8. '  
' → logprob: -9.196202278137207
    9. '       ' → logprob: -9.196202278137207
    10. '```' → logprob: -9.446202278137207

Token 155: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023260852321982384
    2. ' q' → logprob: -3.7732608318328857
    3. '	q' → logprob: -11.398261070251465
    4. '
' → logprob: -13.898261070251465
    5. 'True' → logprob: -14.023261070251465
    6. ' ' → logprob: -14.648261070251465
    7. 'len' → logprob: -14.898261070251465
    8. ' len' → logprob: -14.898261070251465
    9. ' True' → logprob: -15.023261070251465
    10. '   ' → logprob: -15.148261070251465

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022354244720190763
    2. ':
' → logprob: -6.752235412597656
    3. '.' → logprob: -7.627235412597656
    4. '):' → logprob: -7.752235412597656
    5. '[' → logprob: -10.877235412597656
    6. '():' → logprob: -11.002235412597656
    7. '.pop' → logprob: -11.127235412597656
    8. '.append' → logprob: -11.377235412597656
    9. '```' → logprob: -11.627235412597656
    10. '>:' → logprob: -11.877235412597656

Token 157: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2534450888633728
    2. '               ' → logprob: -2.0034451484680176
    3. '           ' → logprob: -3.3784451484680176
    4. ',' → logprob: -4.003445148468018
    5. ' 
' → logprob: -4.253445148468018
    6. '   ' → logprob: -5.378445148468018
    7. ')' → logprob: -5.628445148468018
    8. ' ' → logprob: -5.878445148468018
    9. '  
' → logprob: -5.878445148468018
    10. '
' → logprob: -6.753445148468018

Token 158: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.14314067363739014
    2. 'y' → logprob: -2.1431407928466797
    3. ' y' → logprob: -4.39314079284668
    4. ' x' → logprob: -5.89314079284668
    5. 'r' → logprob: -7.76814079284668
    6. 'cy' → logprob: -8.14314079284668
    7. 'cx' → logprob: -8.51814079284668
    8. 'cur' → logprob: -11.01814079284668
    9. ' r' → logprob: -11.39314079284668
    10. '   ' → logprob: -11.89314079284668

Token 159: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12718762457370758
    2. ',y' → logprob: -2.127187728881836
    3. ' ,' → logprob: -9.127187728881836
    4. ',x' → logprob: -9.627187728881836
    5. ',
' → logprob: -9.877187728881836
    6. ',q' → logprob: -11.877187728881836
    7. '[' → logprob: -12.752187728881836
    8. 'y' → logprob: -12.877187728881836
    9. ')' → logprob: -13.002187728881836
    10. '_,' → logprob: -13.252187728881836

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6950868368148804
    2. ' =' → logprob: -0.6950868368148804
    3. ')' → logprob: -6.32008695602417
    4. ')=' → logprob: -9.195086479187012
    5. ' )' → logprob: -10.945086479187012
    6. '    ' → logprob: -12.195086479187012
    7. ',' → logprob: -12.445086479187012
    8. ']' → logprob: -12.820086479187012
    9. ']=' → logprob: -13.570086479187012
    10. ' =)' → logprob: -13.695086479187012

Token 161: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0013284528395161033
    2. ' q' → logprob: -6.626328468322754
    3. 'x' → logprob: -13.751328468322754
    4. '	q' → logprob: -14.376328468322754
    5. 'y' → logprob: -14.626328468322754
    6. 'queue' → logprob: -16.501327514648438
    7. 'deque' → logprob: -17.001327514648438
    8. 'qx' → logprob: -17.001327514648438
    9. 'de' → logprob: -17.251327514648438
    10. '0' → logprob: -17.501327514648438

Token 162: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.011187640018761158
    2. '.pop' → logprob: -4.511187553405762
    3. '.' → logprob: -9.011187553405762
    4. '[' → logprob: -12.136187553405762
    5. '.poll' → logprob: -12.761187553405762
    6. 'pop' → logprob: -13.011187553405762
    7. 'p' → logprob: -13.261187553405762
    8. ' .' → logprob: -13.386187553405762
    9. '.dequeue' → logprob: -13.636187553405762
    10. '   ' → logprob: -14.136187553405762

Token 163: 'opleft' (ID: 182170)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4742661118507385
    2. 'opleft' → logprob: -0.9742661118507385
    3. 'opl' → logprob: -8.849266052246094
    4. 'opup' → logprob: -11.599266052246094
    5. 'o' → logprob: -11.974266052246094
    6. '(op' → logprob: -11.974266052246094
    7. '[' → logprob: -11.974266052246094
    8. 'ople' → logprob: -12.724266052246094
    9. '```' → logprob: -12.724266052246094
    10. 'opu' → logprob: -13.224266052246094

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04345528036355972
    2. ')' → logprob: -3.1684553623199463
    3. '()
' → logprob: -8.418455123901367
    4. '())' → logprob: -8.543455123901367
    5. '(' → logprob: -11.043455123901367
    6. ' )' → logprob: -12.543455123901367
    7. ' ()' → logprob: -12.668455123901367
    8. ']' → logprob: -12.918455123901367
    9. '()]' → logprob: -12.918455123901367
    10. '   ' → logprob: -13.293455123901367

Token 165: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029178354889154434
    2. 'for' (adapté à ' for') → logprob: -3.6541783809661865
    3. '       ' → logprob: -6.029178142547607
    4. ' ' → logprob: -8.279178619384766
    5. '	for' → logprob: -10.154178619384766
    6. '   ' → logprob: -10.404178619384766
    7. ' x' → logprob: -10.529178619384766
    8. '
' → logprob: -10.654178619384766
    9. '        ' → logprob: -10.904178619384766
    10. ' 
' → logprob: -11.154178619384766

Token 167: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.31326648592948914
    2. ' dx' → logprob: -1.3132665157318115
    3. '_dx' → logprob: -13.06326675415039
    4. 'nx' → logprob: -13.93826675415039
    5. '(dx' → logprob: -14.18826675415039
    6. '```' → logprob: -15.31326675415039
    7. 'd' → logprob: -15.68826675415039
    8. '   ' → logprob: -15.93826675415039
    9. 'dy' → logprob: -15.93826675415039
    10. ' nx' → logprob: -16.18826675415039

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002791803563013673
    2. ',y' → logprob: -6.002791881561279
    3. ' ,' → logprob: -8.752791404724121
    4. ',d' → logprob: -9.002791404724121
    5. ',user' → logprob: -11.627791404724121
    6. ',n' → logprob: -12.252791404724121
    7. ',j' → logprob: -12.377791404724121
    8. ',x' → logprob: -13.002791404724121
    9. 'dy' → logprob: -13.252791404724121
    10. ',int' → logprob: -13.377791404724121

Token 169: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.16026495397090912
    2. 'dy' → logprob: -1.9102649688720703
    3. '<|end|>' → logprob: -10.16026496887207
    4. '.dy' → logprob: -14.28526496887207
    5. 'd' → logprob: -14.66026496887207
    6. ' ' → logprob: -14.78526496887207
    7. 'Dy' → logprob: -15.53526496887207
    8. ' 
' → logprob: -16.16026496887207
    9. ',' → logprob: -16.53526496887207
    10. 'y' → logprob: -16.66026496887207

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011740478686988354
    2. 'in' → logprob: -4.511740684509277
    3. '<|end|>' → logprob: -7.886740684509277
    4. ')' → logprob: -8.761740684509277
    5. ',' → logprob: -8.886740684509277
    6. '<|end|>' → logprob: -12.261740684509277
    7. ' ' → logprob: -12.386740684509277
    8. 's' → logprob: -12.511740684509277
    9. 'In' → logprob: -13.011740684509277
    10. ' ,' → logprob: -13.761740684509277

Token 171: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.06197776645421982
    2. 'dire' → logprob: -2.8119778633117676
    3. 'Directions' → logprob: -12.43697738647461
    4. 'd' → logprob: -12.81197738647461
    5. 'direction' → logprob: -13.93697738647461
    6. '```' → logprob: -13.93697738647461
    7. 'irections' → logprob: -14.06197738647461
    8. '   ' → logprob: -14.93697738647461
    9. ' ' → logprob: -15.56197738647461
    10. '    ' → logprob: -16.81197738647461

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020260661840438843
    2. ':
' → logprob: -6.752026081085205
    3. '<|end|>' → logprob: -7.627026081085205
    4. '):' → logprob: -8.502025604248047
    5. ',' → logprob: -9.502025604248047
    6. ' :' → logprob: -10.252025604248047
    7. '<|end|>' → logprob: -10.502025604248047
    8. ')' → logprob: -11.877025604248047
    9. '):
' → logprob: -12.002025604248047
    10. ':

' → logprob: -12.752025604248047

Token 173: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.32965099811553955
    2. 'nx' (adapté à ' nx') → logprob: -1.8296509981155396
    3. '(nx' → logprob: -2.70465087890625
    4. ' 
' → logprob: -3.45465087890625
    5. ' ' → logprob: -4.20465087890625
    6. ' new' → logprob: -6.20465087890625
    7. 'x' → logprob: -6.70465087890625
    8. 'new' → logprob: -6.95465087890625
    9. '<|end|>' → logprob: -7.70465087890625
    10. 'n' → logprob: -7.82965087890625

Token 175: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6550760269165039
    2. ',' → logprob: -0.7800760269165039
    3. ' =' → logprob: -3.905076026916504
    4. ',n' → logprob: -6.905076026916504
    5. ',y' → logprob: -7.405076026916504
    6. ' ,' → logprob: -8.155076026916504
    7. ',x' → logprob: -9.780076026916504
    8. ')' → logprob: -10.655076026916504
    9. '=n' → logprob: -10.780076026916504
    10. '<|end|>' → logprob: -10.905076026916504

Token 176: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40887323021888733
    2. ' x' → logprob: -1.158873200416565
    3. ' y' → logprob: -4.908873081207275
    4. '0' → logprob: -5.158873081207275
    5. 'y' → logprob: -5.283873081207275
    6. ' ' → logprob: -6.283873081207275
    7. '<|end|>' → logprob: -6.783873081207275
    8. ' ny' → logprob: -8.408873558044434
    9. ' nx' → logprob: -9.783873558044434
    10. ' dx' → logprob: -10.033873558044434

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759502649307251
    2. '=' → logprob: -0.8259502649307251
    3. ')' → logprob: -12.950950622558594
    4. '<|end|>' → logprob: -13.200950622558594
    5. ' ' → logprob: -13.575950622558594
    6. ',' → logprob: -13.575950622558594
    7. ' =
' → logprob: -13.950950622558594
    8. '```' → logprob: -14.325950622558594
    9. '=
' → logprob: -14.700950622558594
    10. '=n' → logprob: -15.325950622558594

Token 178: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022716462612152
    2. ' x' → logprob: -1.9102271795272827
    3. ' ' → logprob: -13.660226821899414
    4. '	x' → logprob: -13.660226821899414
    5. '    ' → logprob: -16.035226821899414
    6. '<|end|>' → logprob: -16.035226821899414
    7. '(x' → logprob: -16.285226821899414
    8. '0' → logprob: -16.535226821899414
    9. ')x' → logprob: -16.660226821899414
    10. '   ' → logprob: -16.785226821899414

Token 179: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326207518577576
    2. '+' → logprob: -0.7576207518577576
    3. '<|end|>' → logprob: -11.882620811462402
    4. ' +=' → logprob: -12.632620811462402
    5. '+x' → logprob: -12.757620811462402
    6. '+,' → logprob: -13.132620811462402
    7. ',' → logprob: -13.132620811462402
    8. '+=' → logprob: -14.257620811462402
    9. ' +
' → logprob: -14.382620811462402
    10. ' ' → logprob: -14.757620811462402

Token 180: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0013049989938735962
    2. ' dx' → logprob: -7.251305103302002
    3. '0' → logprob: -7.751305103302002
    4. '1' → logprob: -9.251304626464844
    5. 'dy' → logprob: -10.376304626464844
    6. '(dx' → logprob: -11.626304626464844
    7. '
' → logprob: -12.001304626464844
    8. '_dx' → logprob: -12.251304626464844
    9. '```' → logprob: -12.876304626464844
    10. ' ' → logprob: -13.001304626464844

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10148248076438904
    2. ' ,' → logprob: -2.351482391357422
    3. ',y' → logprob: -6.726482391357422
    4. ' y' → logprob: -10.351482391357422
    5. ',n' → logprob: -10.351482391357422
    6. 'y' → logprob: -12.851482391357422
    7. ' ' → logprob: -12.976482391357422
    8. '<|end|>' → logprob: -13.726482391357422
    9. ' ,
' → logprob: -13.851482391357422
    10. ')' → logprob: -14.101482391357422

Token 182: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06196824833750725
    2. ' y' → logprob: -2.8119683265686035
    3. '   ' → logprob: -15.686967849731445
    4. ' ' → logprob: -15.811967849731445
    5. '	y' → logprob: -15.811967849731445
    6. '    ' → logprob: -15.936967849731445
    7. 'x' → logprob: -17.311967849731445
    8. '  ' → logprob: -17.936967849731445
    9. '0' → logprob: -18.061967849731445
    10. '<|end|>' → logprob: -19.436967849731445

Token 183: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013521412620320916
    2. '+y' → logprob: -6.751352310180664
    3. '<|end|>' → logprob: -8.876352310180664
    4. ' +' → logprob: -10.626352310180664
    5. '+
' → logprob: -11.751352310180664
    6. '+d' → logprob: -12.876352310180664
    7. ',' → logprob: -13.376352310180664
    8. '+x' → logprob: -13.376352310180664
    9. '+n' → logprob: -13.501352310180664
    10. 'y' → logprob: -13.751352310180664

Token 184: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3544268012046814
    2. '1' → logprob: -2.104426860809326
    3. '0' → logprob: -2.604426860809326
    4. '<|end|>' → logprob: -2.854426860809326
    5. ' dy' → logprob: -3.729426860809326
    6. 'dx' → logprob: -4.604426860809326
    7. 'x' → logprob: -4.854426860809326
    8. 'y' → logprob: -6.479426860809326
    9. ' ' → logprob: -7.479426860809326
    10. 'd' → logprob: -7.979426860809326

Token 185: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6318070292472839
    2. '           ' → logprob: -1.7568070888519287
    3. '               ' → logprob: -2.2568070888519287
    4. '       ' → logprob: -3.3818070888519287
    5. ' ' → logprob: -3.6318070888519287
    6. '	       ' → logprob: -4.13180685043335
    7. '
' → logprob: -4.13180685043335
    8. '<|end|>' → logprob: -4.13180685043335
    9. '		           ' → logprob: -4.38180685043335
    10. '	' → logprob: -4.88180685043335

Token 187: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6943230628967285
    2. '<|end|>' → logprob: -1.1943230628967285
    3. ' if' → logprob: -1.6943230628967285
    4. 'if' (adapté à ' if') → logprob: -4.9443230628967285
    5. ' 
' → logprob: -5.6943230628967285
    6. '<|end|>' → logprob: -6.9443230628967285
    7. ')' → logprob: -7.5693230628967285
    8. '
' → logprob: -7.9443230628967285
    9. '        ' → logprob: -8.44432258605957
    10. ' valid' → logprob: -8.81932258605957

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10029099881649017
    2. ' ' → logprob: -2.3502910137176514
    3. ' nx' → logprob: -9.72529125213623
    4. '(nx' → logprob: -10.97529125213623
    5. 'nx' → logprob: -12.47529125213623
    6. ' (' → logprob: -13.72529125213623
    7. '<|end|>' → logprob: -13.97529125213623
    8. ' ' → logprob: -14.47529125213623
    9. '(' → logprob: -14.85029125213623
    10. '   ' → logprob: -15.72529125213623

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016110755677800626
    2. ' ' → logprob: -8.750161170959473
    3. 'nx' → logprob: -13.375161170959473
    4. '(nx' → logprob: -14.125161170959473
    5. ' nx' → logprob: -15.750161170959473
    6. '(' → logprob: -16.375160217285156
    7. '```' → logprob: -17.500160217285156
    8. ' (' → logprob: -18.062660217285156
    9. ' ' → logprob: -18.187660217285156
    10. '   ' → logprob: -18.437660217285156

Token 190: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06993910670280457
    2. '<=' → logprob: -2.694939136505127
    3. ' <' → logprob: -14.194938659667969
    4. '<' → logprob: -14.569938659667969
    5. ' >=' → logprob: -14.819938659667969
    6. ' ' → logprob: -15.444938659667969
    7. '>=' → logprob: -15.569938659667969
    8. ' ' → logprob: -15.819938659667969
    9. ' ≤' → logprob: -16.31993865966797
    10. '[' → logprob: -16.69493865966797

Token 191: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.007660465780645609
    2. ' nx' → logprob: -4.882660388946533
    3. 'ny' → logprob: -10.382660865783691
    4. '(nx' → logprob: -10.882660865783691
    5. 'n' → logprob: -13.132660865783691
    6. '
' → logprob: -14.132660865783691
    7. ' ny' → logprob: -14.382660865783691
    8. '```' → logprob: -15.007660865783691
    9. 'xn' → logprob: -15.132660865783691
    10. '   ' → logprob: -15.632660865783691

Token 192: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.033749546855688095
    2. ' <' → logprob: -3.408749580383301
    3. 'and' → logprob: -9.9087495803833
    4. '<n' → logprob: -10.7837495803833
    5. ' and' → logprob: -11.1587495803833
    6. '<N' → logprob: -12.4087495803833
    7. '<size' → logprob: -13.0337495803833
    8. '<X' → logprob: -13.1587495803833
    9. '<len' → logprob: -13.4087495803833
    10. '<num' → logprob: -13.6587495803833

Token 193: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.012943972833454609
    2. 'Y' → logprob: -4.637943744659424
    3. ' X' → logprob: -5.762943744659424
    4. ' Y' → logprob: -10.387944221496582
    5. ' ' → logprob: -12.137944221496582
    6. '	X' → logprob: -13.262944221496582
    7. '1' → logprob: -13.762944221496582
    8. 'x' → logprob: -14.700444221496582
    9. '0' → logprob: -15.137944221496582
    10. '
' → logprob: -15.200444221496582

Token 194: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163863845169544
    2. 'and' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. ' if' → logprob: -17.139163970947266
    5. ')' → logprob: -17.389163970947266
    6. ',' → logprob: -18.764163970947266
    7. '0' → logprob: -18.889163970947266
    8. 'if' → logprob: -18.889163970947266
    9. ' и' → logprob: -18.889163970947266
    10. '	and' → logprob: -19.514163970947266

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34845486283302307
    2. ' ' → logprob: -1.2234548330307007
    3. ' ny' → logprob: -12.598454475402832
    4. ' y' → logprob: -12.973454475402832
    5. 'y' → logprob: -13.098454475402832
    6. 'ny' → logprob: -13.973454475402832
    7. '<|end|>' → logprob: -14.848454475402832
    8. '    ' → logprob: -15.598454475402832
    9. '   ' → logprob: -15.723454475402832
    10. ' ' → logprob: -15.973454475402832

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007107630372047424
    2. ' ' → logprob: -7.250710964202881
    3. 'Y' → logprob: -14.750710487365723
    4. '   ' → logprob: -16.12571144104004
    5. '<|end|>' → logprob: -16.62571144104004
    6. 'y' → logprob: -17.12571144104004
    7. 'ny' → logprob: -17.12571144104004
    8. '  ' → logprob: -17.37571144104004
    9. '
' → logprob: -17.62571144104004
    10. '                   ' → logprob: -17.68821144104004

Token 197: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1338699609041214
    2. ' <=' → logprob: -2.6338698863983154
    3. '<' → logprob: -3.0088698863983154
    4. '<=' → logprob: -5.5088701248168945
    5. '0' → logprob: -10.383870124816895
    6. ' ' → logprob: -10.508870124816895
    7. 'and' → logprob: -11.008870124816895
    8. ' and' → logprob: -12.133870124816895
    9. 'y' → logprob: -12.758870124816895
    10. '<|end|>' → logprob: -12.883870124816895

Token 198: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.4684906005859375
    2. 'Y' → logprob: -1.3434906005859375
    3. ' ny' → logprob: -2.3434906005859375
    4. 'y' → logprob: -4.2184906005859375
    5. ' Y' → logprob: -6.2184906005859375
    6. ' y' → logprob: -8.343490600585938
    7. '
' → logprob: -9.843490600585938
    8. 'Ny' → logprob: -10.218490600585938
    9. 'yn' → logprob: -10.593490600585938
    10. 'NY' → logprob: -10.968490600585938

Token 199: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020546678453683853
    2. '<' → logprob: -3.8955466747283936
    3. 'Y' → logprob: -13.145546913146973
    4. ' ' → logprob: -14.020546913146973
    5. '<|end|>' → logprob: -14.020546913146973
    6. ' Y' → logprob: -15.145546913146973
    7. '<n' → logprob: -16.020545959472656
    8. ')' → logprob: -16.020545959472656
    9. '<len' → logprob: -16.145545959472656
    10. '<N' → logprob: -16.270545959472656

Token 200: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0007105246186256409
    2. ' Y' → logprob: -7.250710487365723
    3. '
' → logprob: -15.500710487365723
    4. ' ' → logprob: -16.25071144104004
    5. '	Y' → logprob: -16.62571144104004
    6. 'y' → logprob: -17.50071144104004
    7. '   ' → logprob: -17.87571144104004
    8. '<|end|>' → logprob: -18.12571144104004
    9. '```' → logprob: -18.25071144104004
    10. '...' → logprob: -18.62571144104004

Token 201: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00691085634753108
    2. 'and' → logprob: -5.006910800933838
    3. ':' → logprob: -9.256911277770996
    4. ' ' → logprob: -10.631911277770996
    5. '<|end|>' → logprob: -10.631911277770996
    6. '                       ' → logprob: -10.881911277770996
    7. '                   ' → logprob: -11.506911277770996
    8. ':
' → logprob: -12.006911277770996
    9. '               ' → logprob: -12.131911277770996
    10. '<|end|>' → logprob: -12.881911277770996

Token 202: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6331591606140137
    2. 'not' → logprob: -0.7581591606140137
    3. 'grid' → logprob: -8.008159637451172
    4. ' grid' → logprob: -9.508159637451172
    5. 'g' → logprob: -9.633159637451172
    6. '(not' → logprob: -9.758159637451172
    7. ' g' → logprob: -11.883159637451172
    8. '   ' → logprob: -12.133159637451172
    9. '(grid' → logprob: -13.008159637451172
    10. ' and' → logprob: -13.258159637451172

Token 203: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.17989729344844818
    2. ' visited' → logprob: -1.8048973083496094
    3. '<|end|>' → logprob: -8.80489730834961
    4. ' ' → logprob: -14.55489730834961
    5. ' ' → logprob: -14.92989730834961
    6. '
' → logprob: -15.17989730834961
    7. 'Visited' → logprob: -15.42989730834961
    8. '[' → logprob: -15.80489730834961
    9. '<|end|>' → logprob: -15.80489730834961
    10. '   ' → logprob: -15.92989730834961

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004601841792464256
    2. '[n' → logprob: -5.629601955413818
    3. 'ny' → logprob: -7.629601955413818
    4. ' ny' → logprob: -8.25460147857666
    5. '][' → logprob: -8.87960147857666
    6. '[y' → logprob: -9.75460147857666
    7. ' [' → logprob: -10.62960147857666
    8. '[next' → logprob: -12.00460147857666
    9. ')[' → logprob: -12.62960147857666
    10. '```' → logprob: -12.75460147857666

Token 205: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.008860491216182709
    2. 'nx' → logprob: -4.7588605880737305
    3. ' ny' → logprob: -8.63386058807373
    4. '[' → logprob: -10.38386058807373
    5. 'n' → logprob: -11.50886058807373
    6. '][' → logprob: -11.63386058807373
    7. 'ni' → logprob: -12.50886058807373
    8. '[n' → logprob: -12.63386058807373
    9. '(nx' → logprob: -12.88386058807373
    10. '```' → logprob: -13.00886058807373

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001578301889821887
    2. '[' → logprob: -6.501578330993652
    3. ']' → logprob: -10.001578330993652
    4. ' ][' → logprob: -10.626578330993652
    5. '[n' → logprob: -12.876578330993652
    6. ''][' → logprob: -13.876578330993652
    7. '"][' → logprob: -14.251578330993652
    8. 'ny' → logprob: -15.251578330993652
    9. '[y' → logprob: -15.501578330993652
    10. ' ny' → logprob: -15.501578330993652

Token 207: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0007923588855192065
    2. ' nx' → logprob: -7.375792503356934
    3. '(nx' → logprob: -9.250792503356934
    4. 'x' → logprob: -9.625792503356934
    5. 'ny' → logprob: -12.875792503356934
    6. 'n' → logprob: -15.000792503356934
    7. '0' → logprob: -15.375792503356934
    8. 'Nx' → logprob: -15.500792503356934
    9. '```' → logprob: -15.750792503356934
    10. 'xn' → logprob: -16.000791549682617

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24078713357448578
    2. ' and' → logprob: -1.615787148475647
    3. 'and' → logprob: -4.365787029266357
    4. ']:
' → logprob: -6.490787029266357
    5. ' ]' → logprob: -7.615787029266357
    6. ']:' → logprob: -7.740787029266357
    7. ')' → logprob: -10.365787506103516
    8. ']:

' → logprob: -11.490787506103516
    9. '               ' → logprob: -11.740787506103516
    10. ']:
' → logprob: -11.865787506103516

Token 209: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01827203668653965
    2. 'and' → logprob: -4.0182719230651855
    3. '               ' → logprob: -9.643272399902344
    4. '                ' → logprob: -11.143272399902344
    5. '                   ' → logprob: -11.268272399902344
    6. '           ' → logprob: -11.518272399902344
    7. '            ' → logprob: -12.143272399902344
    8. '                       ' → logprob: -13.143272399902344
    9. '              ' → logprob: -13.393272399902344
    10. '          ' → logprob: -13.393272399902344

Token 210: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22576385736465454
    2. ' g' → logprob: -1.6007637977600098
    3. '                   ' → logprob: -8.725764274597168
    4. 'grid' → logprob: -9.225764274597168
    5. '           ' → logprob: -10.600764274597168
    6. ' grid' → logprob: -10.850764274597168
    7. '               ' → logprob: -10.975764274597168
    8. '                       ' → logprob: -11.850764274597168
    9. '                           ' → logprob: -12.100764274597168
    10. '(g' → logprob: -13.225764274597168

Token 211: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2617008400848135e-05
    2. 'ny' → logprob: -11.500032424926758
    3. ' [' → logprob: -11.750032424926758
    4. '[n' → logprob: -12.500032424926758
    5. '][' → logprob: -12.875032424926758
    6. '```' → logprob: -13.125032424926758
    7. '[y' → logprob: -13.375032424926758
    8. ' ny' → logprob: -13.875032424926758
    9. '
' → logprob: -14.375032424926758
    10. '[next' → logprob: -14.375032424926758

Token 212: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00044032474397681653
    2. '[' → logprob: -7.8754401206970215
    3. ' ny' → logprob: -10.25044059753418
    4. '][' → logprob: -10.75044059753418
    5. ']' → logprob: -13.87544059753418
    6. 'yn' → logprob: -14.00044059753418
    7. 'y' → logprob: -14.75044059753418
    8. 'ni' → logprob: -14.75044059753418
    9. '   ' → logprob: -15.75044059753418
    10. 'nx' → logprob: -16.00044059753418

Token 213: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003933768020942807
    2. '[' → logprob: -8.50039291381836
    3. ']' → logprob: -9.37539291381836
    4. '[n' → logprob: -9.50039291381836
    5. ']==' → logprob: -11.25039291381836
    6. ' ][' → logprob: -11.50039291381836
    7. '   ' → logprob: -13.37539291381836
    8. '```' → logprob: -14.25039291381836
    9. '==' → logprob: -14.37539291381836
    10. '"][' → logprob: -14.50039291381836

Token 214: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0002851729223039001
    2. ' nx' → logprob: -8.500285148620605
    3. '(nx' → logprob: -9.750285148620605
    4. 'x' → logprob: -11.250285148620605
    5. '[n' → logprob: -12.125285148620605
    6. 'xn' → logprob: -13.250285148620605
    7. 'n' → logprob: -13.375285148620605
    8. ']' → logprob: -14.875285148620605
    9. '[' → logprob: -15.125285148620605
    10. '][' → logprob: -15.250285148620605

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01145885232836008
    2. ']==' → logprob: -4.511458873748779
    3. ' ]' → logprob: -8.636458396911621
    4. '==' → logprob: -9.011458396911621
    5. ' ==' → logprob: -9.136458396911621
    6. '']' → logprob: -13.261458396911621
    7. '[' → logprob: -14.511458396911621
    8. ')' → logprob: -15.261458396911621
    9. '']==' → logprob: -15.261458396911621
    10. '"]' → logprob: -15.636458396911621

Token 216: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4788125157356262
    2. '==' → logprob: -0.9788125157356262
    3. ']==' → logprob: -5.6038126945495605
    4. ']' → logprob: -7.1038126945495605
    5. '[' → logprob: -8.603812217712402
    6. ')==' → logprob: -11.103812217712402
    7. '```' → logprob: -12.103812217712402
    8. ')' → logprob: -12.978812217712402
    9. '==
' → logprob: -12.978812217712402
    10. '']==' → logprob: -12.978812217712402

Token 217: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5759431719779968
    2. ' target' → logprob: -0.8259431719779968
    3. '	target' → logprob: -13.700942993164062
    4. ' ' → logprob: -13.950942993164062
    5. '[target' → logprob: -14.825942993164062
    6. '(target' → logprob: -15.200942993164062
    7. ' ' → logprob: -15.200942993164062
    8. 'token' → logprob: -15.700942993164062
    9. '
' → logprob: -15.825942993164062
    10. 't' → logprob: -16.325942993164062

Token 218: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -13.000005722045898
    3. 'color' → logprob: -13.500005722045898
    4. ' _' → logprob: -13.875005722045898
    5. '_colors' → logprob: -15.375005722045898
    6. '_COLOR' → logprob: -15.625005722045898
    7. '_code' → logprob: -16.0000057220459
    8. '```' → logprob: -16.1250057220459
    9. '[' → logprob: -16.2500057220459
    10. ')' → logprob: -16.7500057220459

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02500394731760025
    2. ':
' → logprob: -4.025003910064697
    3. '):' → logprob: -5.400003910064697
    4. '                   ' → logprob: -6.900003910064697
    5. '):
' → logprob: -7.400003910064697
    6. '                       ' → logprob: -7.775003910064697
    7. ' :' → logprob: -9.400004386901855
    8. '                           ' → logprob: -9.775004386901855
    9. ' and' → logprob: -10.275004386901855
    10. '               ' → logprob: -11.025004386901855

Token 220: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10379570722579956
    2. ':' → logprob: -3.4787957668304443
    3. '                           ' → logprob: -3.7287957668304443
    4. '                   ' → logprob: -4.228795528411865
    5. '                               ' → logprob: -4.603795528411865
    6. '<|end|>' → logprob: -5.103795528411865
    7. '                        
' → logprob: -5.978795528411865
    8. ' :' → logprob: -6.228795528411865
    9. '                        ' → logprob: -6.478795528411865
    10. '                    ' → logprob: -6.728795528411865

Token 221: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.05570051819086075
    2. 'visited' (adapté à ' visited') → logprob: -3.4307005405426025
    3. '                           ' → logprob: -4.305700302124023
    4. '                               ' → logprob: -5.430700302124023
    5. '                       ' → logprob: -6.305700302124023
    6. ' 
' → logprob: -6.680700302124023
    7. ' ' → logprob: -8.180700302124023
    8. '                        
' → logprob: -8.930700302124023
    9. '                            ' → logprob: -9.680700302124023
    10. ' q' → logprob: -9.680700302124023

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.125000953674316
    3. ' [' → logprob: -16.0
    4. '][' → logprob: -16.0
    5. '
' → logprob: -16.875
    6. '                   ' → logprob: -17.375
    7. ')[' → logprob: -17.375
    8. '           ' → logprob: -18.0
    9. 'ny' → logprob: -18.125
    10. '       ' → logprob: -18.3125

Token 223: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0001867326645879075
    2. '[' → logprob: -9.000186920166016
    3. ' ny' → logprob: -9.750186920166016
    4. 'ni' → logprob: -13.250186920166016
    5. 'nx' → logprob: -14.250186920166016
    6. ']' → logprob: -14.750186920166016
    7. 'yn' → logprob: -15.250186920166016
    8. '][' → logprob: -15.375186920166016
    9. 'nyi' → logprob: -15.500186920166016
    10. '
' → logprob: -16.000186920166016

Token 224: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07005592435598373
    2. '[' → logprob: -2.6950559616088867
    3. ' ][' → logprob: -10.320055961608887
    4. ']' → logprob: -10.445055961608887
    5. '       ' → logprob: -11.320055961608887
    6. 'ny' → logprob: -11.445055961608887
    7. '                       ' → logprob: -12.195055961608887
    8. ''][' → logprob: -12.195055961608887
    9. '           ' → logprob: -12.195055961608887
    10. '"][' → logprob: -12.820055961608887

Token 225: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.004207802005112171
    2. 'ny' → logprob: -5.504207611083984
    3. '(nx' → logprob: -9.754207611083984
    4. 'True' → logprob: -10.379207611083984
    5. ' nx' → logprob: -10.629207611083984
    6. 'x' → logprob: -12.004207611083984
    7. '[' → logprob: -12.379207611083984
    8. '```' → logprob: -13.254207611083984
    9. 'nz' → logprob: -13.379207611083984
    10. '1' → logprob: -14.754207611083984

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013608321314677596
    2. ']=' → logprob: -6.876360893249512
    3. '=' → logprob: -8.251360893249512
    4. ' =' → logprob: -10.126360893249512
    5. ' ]' → logprob: -10.751360893249512
    6. ')' → logprob: -13.251360893249512
    7. 'True' → logprob: -13.626360893249512
    8. '[' → logprob: -13.626360893249512
    9. '=True' → logprob: -14.751360893249512
    10. ']
' → logprob: -15.376360893249512

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744113087654114
    2. ' =' → logprob: -0.9744113087654114
    3. ']' → logprob: -8.099411010742188
    4. ']=' → logprob: -11.224411010742188
    5. '[' → logprob: -11.599411010742188
    6. '=True' → logprob: -11.849411010742188
    7. ')' → logprob: -14.599411010742188
    8. 'True' → logprob: -15.474411010742188
    9. ' ]' → logprob: -16.849411010742188
    10. '＝' → logprob: -17.224411010742188

Token 228: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -18.000431060791016
    4. '=True' → logprob: -21.250431060791016
    5. 'true' → logprob: -21.750431060791016
    6. '
' → logprob: -21.875431060791016
    7. '1' → logprob: -22.500431060791016
    8. 'Tr' → logprob: -22.500431060791016
    9. '   ' → logprob: -22.875431060791016
    10. '[' → logprob: -23.500431060791016

Token 229: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.029894428327679634
    2. '<|end|>' → logprob: -4.4048943519592285
    3. '                        
' → logprob: -4.9048943519592285
    4. ',' → logprob: -5.2798943519592285
    5. ')' → logprob: -6.1548943519592285
    6. '                        ' → logprob: -6.9048943519592285
    7. '
' → logprob: -7.6548943519592285
    8. '                           ' → logprob: -8.154894828796387
    9. '```' → logprob: -9.529894828796387
    10. ' q' → logprob: -9.654894828796387

Token 230: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002629757858812809
    2. ',' → logprob: -6.87762975692749
    3. '                        
' → logprob: -7.62762975692749
    4. ' q' → logprob: -7.75262975692749
    5. '<|end|>' → logprob: -8.877630233764648
    6. '                           ' → logprob: -9.377630233764648
    7. '                        ' → logprob: -9.377630233764648
    8. '               ' → logprob: -9.502630233764648
    9. '```' → logprob: -10.002630233764648
    10. ',q' → logprob: -10.127630233764648

Token 231: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.5764156579971313
    2. ' q' → logprob: -0.8264156579971313
    3. '                           ' → logprob: -8.951416015625
    4. '                       ' → logprob: -9.326416015625
    5. 'component' → logprob: -9.576416015625
    6. ' component' → logprob: -9.826416015625
    7. '                        ' → logprob: -10.201416015625
    8. '                            ' → logprob: -11.201416015625
    9. '	q' → logprob: -11.201416015625
    10. 's' → logprob: -11.576416015625

Token 232: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013274075172375888
    2. '.' → logprob: -9.00013256072998
    3. 'append' → logprob: -12.50013256072998
    4. '.extend' → logprob: -13.00013256072998
    5. '.put' → logprob: -13.75013256072998
    6. '.enqueue' → logprob: -14.00013256072998
    7. ' .' → logprob: -14.75013256072998
    8. '.p' → logprob: -15.12513256072998
    9. '.app' → logprob: -16.000133514404297
    10. '.push' → logprob: -16.125133514404297

Token 233: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.000021934509277
    3. '(nx' → logprob: -12.250021934509277
    4. ' ((' → logprob: -14.375021934509277
    5. '>((' → logprob: -16.750022888183594
    6. '(((' → logprob: -16.875022888183594
    7. '(n' → logprob: -16.875022888183594
    8. ')((' → logprob: -17.125022888183594
    9. '```' → logprob: -17.250022888183594
    10. '(
' → logprob: -17.375022888183594

Token 234: 'nx' (ID: 45103)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.01699596643447876
    2. 'nx' → logprob: -4.141995906829834
    3. ' (' → logprob: -7.766995906829834
    4. '(n' → logprob: -8.141996383666992
    5. ' nx' → logprob: -9.016996383666992
    6. 'ny' → logprob: -9.516996383666992
    7. ')' → logprob: -10.891996383666992
    8. '   ' → logprob: -11.516996383666992
    9. '(' → logprob: -12.516996383666992
    10. ' ny' → logprob: -12.641996383666992

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',y' → logprob: -12.125009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. ',
' → logprob: -14.375009536743164
    5. ',n' → logprob: -15.500009536743164
    6. ')' → logprob: -15.875009536743164
    7. '),' → logprob: -16.375009536743164
    8. '```' → logprob: -17.375009536743164
    9. '<|end|>' → logprob: -17.375009536743164
    10. ',)' → logprob: -17.500009536743164

Token 236: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.706686690449715e-05
    2. ' ny' → logprob: -9.625066757202148
    3. 'nyi' → logprob: -14.625066757202148
    4. ')' → logprob: -15.500066757202148
    5. 'n' → logprob: -16.00006675720215
    6. ' ' → logprob: -17.12506675720215
    7. 'nym' → logprob: -17.25006675720215
    8. 'y' → logprob: -17.62506675720215
    9. 'nye' → logprob: -17.75006675720215
    10. 'nyt' → logprob: -18.00006675720215

Token 237: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133036196231842
    2. ')
' → logprob: -1.3133035898208618
    3. '))' → logprob: -10.93830394744873
    4. '))
' → logprob: -11.68830394744873
    5. ')
' → logprob: -11.93830394744873
    6. '                       ' → logprob: -12.43830394744873
    7. '                   ' → logprob: -12.68830394744873
    8. '               ' → logprob: -14.93830394744873
    9. ')

' → logprob: -15.06330394744873
    10. ')`
' → logprob: -15.43830394744873

Token 238: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.039038147777318954
    2. '                   ' → logprob: -3.6640381813049316
    3. '           ' → logprob: -5.914038181304932
    4. '               ' → logprob: -6.289038181304932
    5. '                           ' → logprob: -6.289038181304932
    6. '       ' → logprob: -7.039038181304932
    7. '
' → logprob: -7.164038181304932
    8. '```' → logprob: -7.164038181304932
    9. '                        
' → logprob: -7.289038181304932
    10. ',' → logprob: -7.414038181304932

Token 239: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' (adapté à ' component') → logprob: -0.011055364273488522
    2. ' component' → logprob: -4.5110554695129395
    3. '                           ' → logprob: -12.636054992675781
    4. '                               ' → logprob: -13.886054992675781
    5. '	component' → logprob: -14.011054992675781
    6. '                       ' → logprob: -14.136054992675781
    7. '```' → logprob: -14.261054992675781
    8. '                   ' → logprob: -14.386054992675781
    9. '
' → logprob: -16.01105499267578
    10. '.component' → logprob: -16.38605499267578

Token 240: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.629921436891891e-05
    2. '.' → logprob: -10.62502670288086
    3. '.add' → logprob: -14.25002670288086
    4. '.extend' → logprob: -14.25002670288086
    5. '.app' → logprob: -14.62502670288086
    6. '.setdefault' → logprob: -16.37502670288086
    7. '.Append' → logprob: -16.62502670288086
    8. ' .' → logprob: -17.25002670288086
    9. ').' → logprob: -17.50002670288086
    10. 'append' → logprob: -17.75002670288086

Token 241: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. '(((' → logprob: -14.250005722045898
    4. ' ((' → logprob: -17.2500057220459
    5. '(
' → logprob: -18.7500057220459
    6. '(nx' → logprob: -19.8750057220459
    7. '([(' → logprob: -20.5000057220459
    8. '(({' → logprob: -20.5000057220459
    9. '[(' → logprob: -20.6250057220459
    10. '```' → logprob: -20.6250057220459

Token 242: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00019507692195475101
    2. '(nx' → logprob: -8.875195503234863
    3. ' nx' → logprob: -9.875195503234863
    4. 'ny' → logprob: -12.875195503234863
    5. '```' → logprob: -14.750195503234863
    6. '
' → logprob: -15.250195503234863
    7. '   ' → logprob: -15.750195503234863
    8. 'n' → logprob: -16.500194549560547
    9. '(' → logprob: -16.875194549560547
    10. '(n' → logprob: -17.250194549560547

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006189120467752218
    2. ',n' → logprob: -8.000618934631348
    3. '[' → logprob: -8.625618934631348
    4. ' ,' → logprob: -9.875618934631348
    5. ',y' → logprob: -10.875618934631348
    6. ')' → logprob: -11.750618934631348
    7. ',[' → logprob: -11.875618934631348
    8. '[n' → logprob: -12.125618934631348
    9. ',
' → logprob: -12.375618934631348
    10. '))' → logprob: -13.000618934631348

Token 244: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00869304221123457
    2. ' ny' → logprob: -4.758693218231201
    3. '1' → logprob: -9.883692741394043
    4. ')' → logprob: -11.758692741394043
    5. '0' → logprob: -11.883692741394043
    6. 'y' → logprob: -12.133692741394043
    7. '))' → logprob: -13.258692741394043
    8. 'nyi' → logprob: -13.508692741394043
    9. '```' → logprob: -13.883692741394043
    10. '
' → logprob: -14.383692741394043

Token 245: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16024839878082275
    2. ')' → logprob: -1.9102483987808228
    3. '))
' → logprob: -11.285248756408691
    4. ')))' → logprob: -11.910248756408691
    5. ')
' → logprob: -12.660248756408691
    6. ')}' → logprob: -14.410248756408691
    7. ')]' → logprob: -14.785248756408691
    8. '),' → logprob: -15.660248756408691
    9. '                   ' → logprob: -16.035247802734375
    10. '])' → logprob: -16.035247802734375

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7053807973861694
    2. ')' → logprob: -1.2053807973861694
    3. '       ' → logprob: -1.8303807973861694
    4. '<|end|>' → logprob: -4.205380916595459
    5. '   ' → logprob: -4.330380916595459
    6. '
' → logprob: -5.205380916595459
    7. ' return' → logprob: -5.580380916595459
    8. 'return' → logprob: -6.330380916595459
    9. '	return' → logprob: -6.580380916595459
    10. '               ' → logprob: -6.830380916595459

Token 247: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00794030912220478
    2. '           ' → logprob: -5.007940292358398
    3. '   ' → logprob: -6.882940292358398
    4. '<|end|>' → logprob: -9.507940292358398
    5. ' return' → logprob: -9.882940292358398
    6. 'return' (adapté à ' return') → logprob: -10.132940292358398
    7. '               ' → logprob: -11.507940292358398
    8. '	return' → logprob: -11.882940292358398
    9. ')' → logprob: -12.132940292358398
    10. '.' → logprob: -13.132940292358398

Token 248: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -9.615255839889869e-05
    2. ' component' → logprob: -9.250096321105957
    3. '(component' → logprob: -18.37509536743164
    4. '	component' → logprob: -20.37509536743164
    5. 'components' → logprob: -22.25009536743164
    6. '[' → logprob: -22.50009536743164
    7. 'coordinate' → logprob: -23.50009536743164
    8. '.component' → logprob: -23.75009536743164
    9. ' ' → logprob: -23.87509536743164
    10. '```' → logprob: -24.12509536743164

Token 249: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11602149158716202
    2. '
' → logprob: -2.2410213947296143
    3. '        
' → logprob: -6.241021633148193
    4. '<|end|>' → logprob: -7.366021633148193
    5. '```' → logprob: -8.741021156311035
    6. 'target' → logprob: -9.116021156311035
    7. '    
' → logprob: -9.491021156311035
    8. ' target' → logprob: -9.991021156311035
    9. '            
' → logprob: -10.491021156311035
    10. '   ' → logprob: -10.616021156311035

Token 251: ' def' (ID: 1056)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.6015713214874268
    2. '       ' → logprob: -0.9765713214874268
    3. 'color' → logprob: -2.8515713214874268
    4. ' target' → logprob: -4.851571083068848
    5. ' color' → logprob: -6.851571083068848
    6. 'original' → logprob: -6.851571083068848
    7. 't' → logprob: -7.476571083068848
    8. 'new' → logprob: -7.476571083068848
    9. '```' → logprob: -7.476571083068848
    10. '[target' → logprob: -7.601571083068848

Token 252: ' is' (ID: 382)
  Prédit: ' flood'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flood' → logprob: -0.8020685315132141
    2. ' paint' → logprob: -2.0520684719085693
    3. ' color' → logprob: -2.4270684719085693
    4. ' replace' → logprob: -2.5520684719085693
    5. ' repaint' → logprob: -2.6770684719085693
    6. ' solve' → logprob: -3.3020684719085693
    7. ' recol' → logprob: -3.3020684719085693
    8. ' change' → logprob: -3.5520684719085693
    9. ' count' → logprob: -3.8020684719085693
    10. ' is' → logprob: -4.927068710327148

Token 253: '_uniform' (ID: 116363)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.7246606349945068
    2. '_color' → logprob: -1.8496606349945068
    3. '_safe' → logprob: -2.599660634994507
    4. '_' → logprob: -2.974660634994507
    5. '_connected' → logprob: -3.099660634994507
    6. '_same' → logprob: -3.224660634994507
    7. '_in' → logprob: -3.849660634994507
    8. '_possible' → logprob: -4.224660873413086
    9. '_uniform' → logprob: -4.849660873413086
    10. '_inside' → logprob: -4.974660873413086

Token 254: '(g' (ID: 7791)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.026313303038477898
    2. '(' → logprob: -4.026313304901123
    3. '(g' → logprob: -4.901313304901123
    4. '_color' → logprob: -8.401312828063965
    5. '(color' → logprob: -8.901312828063965
    6. ' (' → logprob: -10.151312828063965
    7. '(_' → logprob: -10.276312828063965
    8. '(gr' → logprob: -10.401312828063965
    9. '(s' → logprob: -10.651312828063965
    10. '(Grid' → logprob: -10.901312828063965

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40274330973625183
    2. '):
' → logprob: -1.4027433395385742
    3. ',' → logprob: -2.527743339538574
    4. ',g' → logprob: -5.277743339538574
    5. ' ,' → logprob: -8.652743339538574
    6. ')' → logprob: -9.277743339538574
    7. '):

' → logprob: -9.402743339538574
    8. '):
' → logprob: -9.777743339538574
    9. ' ):' → logprob: -9.902743339538574
    10. '(g' → logprob: -10.277743339538574

Token 256: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08934170752763748
    2. '   ' → logprob: -2.714341640472412
    3. ' for' → logprob: -5.464341640472412
    4. '           ' → logprob: -5.589341640472412
    5. '	   ' → logprob: -5.839341640472412
    6. '(' → logprob: -6.089341640472412
    7. '<|end|>' → logprob: -6.964341640472412
    8. '[' → logprob: -7.089341640472412
    9. '	       ' → logprob: -7.339341640472412
    10. '    
' → logprob: -7.714341640472412

Token 257: ' c' (ID: 274)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.6853154301643372
    2. ' base' → logprob: -2.0603153705596924
    3. 'first' → logprob: -2.0603153705596924
    4. ' color' → logprob: -2.9353153705596924
    5. '           ' → logprob: -3.0603153705596924
    6. ' c' → logprob: -3.0603153705596924
    7. 'color' → logprob: -3.1853153705596924
    8. ' target' → logprob: -4.0603156089782715
    9. 'c' (adapté à ' c') → logprob: -4.1853156089782715
    10. 'base' → logprob: -4.9353156089782715

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15106385946273804
    2. '=' → logprob: -2.401063919067383
    3. 'urrent' → logprob: -3.151063919067383
    4. 'olor' → logprob: -5.776063919067383
    5. 'ell' → logprob: -7.401063919067383
    6. '   ' → logprob: -7.901063919067383
    7. '0' → logprob: -8.026063919067383
    8. '_' → logprob: -8.026063919067383
    9. 'ol' → logprob: -8.276063919067383
    10. ' ' → logprob: -8.276063919067383

Token 259: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2781656086444855
    2. 'grid' → logprob: -1.903165578842163
    3. ' g' → logprob: -2.528165578842163
    4. ' grid' → logprob: -4.278165817260742
    5. '   ' → logprob: -11.653165817260742
    6. 'None' → logprob: -11.653165817260742
    7. ' ' → logprob: -11.778165817260742
    8. 'set' → logprob: -12.028165817260742
    9. ' None' → logprob: -12.528165817260742
    10. '`' → logprob: -13.028165817260742

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -14.250001907348633
    3. '\[' → logprob: -14.750001907348633
    4. 'def' → logprob: -16.000001907348633
    5. '```' → logprob: -16.000001907348633
    6. '[Y' → logprob: -16.875001907348633
    7. '[y' → logprob: -17.500001907348633
    8. '       ' → logprob: -17.625001907348633
    9. '[
' → logprob: -17.625001907348633
    10. '
' → logprob: -17.750001907348633

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.522638169466518e-05
    2. '[' → logprob: -10.750024795532227
    3. ' ' → logprob: -13.750024795532227
    4. 'y' → logprob: -14.250024795532227
    5. '][' → logprob: -14.250024795532227
    6. '
' → logprob: -15.125024795532227
    7. '1' → logprob: -15.562524795532227
    8. '   ' → logprob: -15.812524795532227
    9. '```' → logprob: -16.000024795532227
    10. '-' → logprob: -16.062524795532227

Token 262: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002843384863808751
    2. '[' → logprob: -8.250284194946289
    3. ']' → logprob: -11.375284194946289
    4. '0' → logprob: -11.875284194946289
    5. ' ][' → logprob: -12.500284194946289
    6. 's' → logprob: -15.375284194946289
    7. '1' → logprob: -16.50028419494629
    8. ']
' → logprob: -16.62528419494629
    9. '```' → logprob: -16.75028419494629
    10. '   ' → logprob: -17.00028419494629

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -18.375
    4. '```' → logprob: -18.75
    5. ']' → logprob: -19.25
    6. ')' → logprob: -19.25
    7. '1' → logprob: -19.5625
    8. '[' → logprob: -19.6875
    9. '০' → logprob: -19.75
    10. '०' → logprob: -20.0

Token 264: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014370749704539776
    2. ']==' → logprob: -9.875144004821777
    3. ']
' → logprob: -10.000144004821777
    4. ' ]' → logprob: -10.625144004821777
    5. '[' → logprob: -11.000144004821777
    6. '][' → logprob: -12.375144004821777
    7. '])' → logprob: -14.750144004821777
    8. ']

' → logprob: -15.625144004821777
    9. ']=='' → logprob: -15.750144004821777
    10. ']>' → logprob: -15.750144004821777

Token 265: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5005766749382019
    2. '<|end|>' → logprob: -1.1255767345428467
    3. '       ' → logprob: -3.6255767345428467
    4. '           ' → logprob: -4.500576496124268
    5. '<|end|>' → logprob: -4.625576496124268
    6. '  
' → logprob: -4.875576496124268
    7. '    
' → logprob: -5.500576496124268
    8. ' 
' → logprob: -6.250576496124268
    9. '[' → logprob: -6.500576496124268
    10. '        
' → logprob: -6.625576496124268

Token 266: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026653924956917763
    2. 'for' (adapté à ' for') → logprob: -3.776654005050659
    3. '       ' → logprob: -6.02665376663208
    4. '           ' → logprob: -7.15165376663208
    5. '   ' → logprob: -8.776654243469238
    6. '
' → logprob: -10.276654243469238
    7. '	for' → logprob: -11.401654243469238
    8. ' ' → logprob: -13.401654243469238
    9. '               ' → logprob: -13.901654243469238
    10. '```' → logprob: -13.901654243469238

Token 267: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.17176876962184906
    2. ' row' → logprob: -1.9217687845230103
    3. 'y' → logprob: -4.671768665313721
    4. ' y' → logprob: -6.171768665313721
    5. ' i' → logprob: -11.171769142150879
    6. 'i' → logprob: -11.296769142150879
    7. 'r' → logprob: -12.296769142150879
    8. '   ' → logprob: -13.171769142150879
    9. '	row' → logprob: -13.796769142150879
    10. ' ' → logprob: -15.046769142150879

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004621303640305996
    2. 'in' → logprob: -5.379621505737305
    3. '	in' → logprob: -14.629621505737305
    4. ' ' → logprob: -14.629621505737305
    5. '_in' → logprob: -16.879621505737305
    6. 's' → logprob: -17.004621505737305
    7. '   ' → logprob: -17.129621505737305
    8. '[' → logprob: -17.379621505737305
    9. '<|end|>' → logprob: -17.629621505737305
    10. '```' → logprob: -17.879621505737305

Token 269: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.024340888485312462
    2. ' g' → logprob: -3.899340867996216
    3. 'grid' → logprob: -5.649341106414795
    4. ' grid' → logprob: -8.274340629577637
    5. 'range' → logprob: -11.649340629577637
    6. ' range' → logprob: -11.899340629577637
    7. '	g' → logprob: -14.649340629577637
    8. '
' → logprob: -15.274340629577637
    9. ' ' → logprob: -15.899340629577637
    10. ')' → logprob: -16.024341583251953

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1798236072063446
    2. ':
' → logprob: -1.804823637008667
    3. ' in' → logprob: -10.179823875427246
    4. '   ' → logprob: -10.804823875427246
    5. '       ' → logprob: -12.054823875427246
    6. '           ' → logprob: -12.554823875427246
    7. '):
' → logprob: -12.804823875427246
    8. '):' → logprob: -13.554823875427246
    9. '[' → logprob: -13.679823875427246
    10. ' :' → logprob: -13.679823875427246

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009825548622757196
    2. ' in' → logprob: -7.250982761383057
    3. ' for' → logprob: -8.875982284545898
    4. '           ' → logprob: -9.375982284545898
    5. '                ' → logprob: -11.625982284545898
    6. '	           ' → logprob: -11.750982284545898
    7. '```' → logprob: -12.250982284545898
    8. '            ' → logprob: -12.625982284545898
    9. '<|end|>' → logprob: -12.625982284545898
    10. ' ' → logprob: -13.250982284545898

Token 272: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015431788749992847
    2. '               ' → logprob: -4.265431880950928
    3. '           ' → logprob: -7.265431880950928
    4. ' if' → logprob: -8.64043140411377
    5. 'for' (adapté à ' for') → logprob: -9.14043140411377
    6. '                ' → logprob: -9.51543140411377
    7. '            ' → logprob: -9.51543140411377
    8. '                   ' → logprob: -9.89043140411377
    9. '    ' → logprob: -10.76543140411377
    10. ' ' → logprob: -10.76543140411377

Token 273: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.12525542080402374
    2. ' cell' → logprob: -2.6252553462982178
    3. 'col' → logprob: -3.3752553462982178
    4. 'color' → logprob: -5.250255584716797
    5. 'ch' → logprob: -5.500255584716797
    6. 'val' → logprob: -7.625255584716797
    7. ' col' → logprob: -8.000255584716797
    8. ' ch' → logprob: -8.125255584716797
    9. ' color' → logprob: -8.125255584716797
    10. 'elem' → logprob: -8.750255584716797

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005235190503299236
    2. 'in' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.880234718322754
    4. ',' → logprob: -14.880234718322754
    5. '	in' → logprob: -15.255234718322754
    6. '   ' → logprob: -16.00523567199707
    7. '    ' → logprob: -16.50523567199707
    8. 'if' → logprob: -16.75523567199707
    9. '           ' → logprob: -17.25523567199707
    10. '               ' → logprob: -17.25523567199707

Token 275: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.16022889316082
    2. ' row' → logprob: -1.9102288484573364
    3. 'cell' → logprob: -12.660228729248047
    4. ' cell' → logprob: -13.535228729248047
    5. '(row' → logprob: -16.160228729248047
    6. ' ' → logprob: -16.535228729248047
    7. '	row' → logprob: -17.535228729248047
    8. '$row' → logprob: -19.910228729248047
    9. '[row' → logprob: -19.910228729248047
    10. ',row' → logprob: -20.535228729248047

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2621406316757202
    2. ':
' → logprob: -2.0121407508850098
    3. '               ' → logprob: -3.1371407508850098
    4. '                   ' → logprob: -3.5121407508850098
    5. ' if' → logprob: -4.51214075088501
    6. '                ' → logprob: -5.63714075088501
    7. '           ' → logprob: -6.13714075088501
    8. '            ' → logprob: -6.51214075088501
    9. 'if' → logprob: -7.13714075088501
    10. '<|end|>' → logprob: -7.38714075088501

Token 277: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.034506138414144516
    2. '               ' → logprob: -3.53450608253479
    3. ' if' → logprob: -6.409506320953369
    4. '           ' → logprob: -6.784506320953369
    5. '<|end|>' → logprob: -7.159506320953369
    6. '                       ' → logprob: -7.534506320953369
    7. '       ' → logprob: -8.784505844116211
    8. '   ' → logprob: -9.409505844116211
    9. '		           ' → logprob: -9.409505844116211
    10. '<|end|>' → logprob: -9.534505844116211

Token 278: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22701606154441833
    2. '               ' → logprob: -1.8520160913467407
    3. 'if' (adapté à ' if') → logprob: -3.477015972137451
    4. '                       ' → logprob: -4.352015972137451
    5. '                   ' → logprob: -6.852015972137451
    6. '   ' → logprob: -7.977015972137451
    7. '           ' → logprob: -8.10201644897461
    8. '       ' → logprob: -8.35201644897461
    9. ' ' → logprob: -8.85201644897461
    10. '<|end|>' → logprob: -9.72701644897461

Token 279: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.313262403011322
    2. ' cell' → logprob: -1.3132624626159668
    3. '                   ' → logprob: -14.813261985778809
    4. '	cell' → logprob: -15.313261985778809
    5. '(cell' → logprob: -17.313262939453125
    6. '                    ' → logprob: -17.813262939453125
    7. 'c' → logprob: -17.938262939453125
    8. '                       ' → logprob: -18.438262939453125
    9. '[cell' → logprob: -18.563262939453125
    10. 'Cell' → logprob: -18.688262939453125

Token 280: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2519630193710327
    2. '!=' → logprob: -1.5019630193710327
    3. ')!=' → logprob: -10.751962661743164
    4. '()!=' → logprob: -11.751962661743164
    5. ']!=' → logprob: -12.626962661743164
    6. '!='' → logprob: -14.626962661743164
    7. '!=(' → logprob: -15.126962661743164
    8. '!==' → logprob: -15.376962661743164
    9. '                   ' → logprob: -15.626962661743164
    10. '!="' → logprob: -16.251962661743164

Token 281: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38687121868133545
    2. ' c' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.386871337890625
    4. ')c' → logprob: -17.136871337890625
    5. '	c' → logprob: -17.511871337890625
    6. ' ' → logprob: -17.636871337890625
    7. '_c' → logprob: -18.511871337890625
    8. '$c' → logprob: -19.011871337890625
    9. '```' → logprob: -19.511871337890625
    10. '   ' → logprob: -19.761871337890625

Token 282: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7089496850967407
    2. ':' → logprob: -0.8339496850967407
    3. ':
' → logprob: -2.708949565887451
    4. ':return' → logprob: -5.208949565887451
    5. '                           ' → logprob: -7.458949565887451
    6. '                   ' → logprob: -8.58395004272461
    7. '                               ' → logprob: -8.83395004272461
    8. ' and' → logprob: -9.33395004272461
    9. 'return' → logprob: -9.33395004272461
    10. '               ' → logprob: -9.70895004272461

Token 283: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0012338032247498631
    2. ' return' → logprob: -7.0012335777282715
    3. 'return' → logprob: -8.12623405456543
    4. '               ' → logprob: -12.25123405456543
    5. '                           ' → logprob: -12.37623405456543
    6. '                   ' → logprob: -12.62623405456543
    7. '                               ' → logprob: -12.75123405456543
    8. '                        
' → logprob: -13.12623405456543
    9. ':return' → logprob: -13.12623405456543
    10. '       ' → logprob: -13.62623405456543

Token 284: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.592492938041687
    2. 'return' (adapté à ' return') → logprob: -0.842492938041687
    3. '                           ' → logprob: -4.592493057250977
    4. '                       ' → logprob: -5.217493057250977
    5. '                               ' → logprob: -7.592493057250977
    6. '                   ' → logprob: -9.592493057250977
    7. '               ' → logprob: -9.592493057250977
    8. ':return' → logprob: -9.842493057250977
    9. '	return' → logprob: -10.092493057250977
    10. '           ' → logprob: -10.342493057250977

Token 285: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '(False' → logprob: -21.000709533691406
    4. '=False' → logprob: -21.875709533691406
    5. 'false' → logprob: -23.500709533691406
    6. 'True' → logprob: -24.500709533691406
    7. '_false' → logprob: -24.625709533691406
    8. '.False' → logprob: -25.500709533691406
    9. '   ' → logprob: -26.250709533691406
    10. '```' → logprob: -26.375709533691406

Token 286: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09620481729507446
    2. '
' → logprob: -2.7212047576904297
    3. '            
' → logprob: -4.59620475769043
    4. '               ' → logprob: -5.72120475769043
    5. 'return' → logprob: -6.09620475769043
    6. '    
' → logprob: -6.22120475769043
    7. ' 
' → logprob: -6.22120475769043
    8. '                        
' → logprob: -6.97120475769043
    9. '                    
' → logprob: -7.22120475769043
    10. '<|end|>' → logprob: -7.34620475769043

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044711565715260804
    2. '
' → logprob: -8.750447273254395
    3. '       ' → logprob: -8.875447273254395
    4. '		' → logprob: -9.750447273254395
    5. '            
' → logprob: -10.125447273254395
    6. '               ' → logprob: -11.500447273254395
    7. '    
' → logprob: -11.875447273254395
    8. '                   ' → logprob: -12.375447273254395
    9. 'return' → logprob: -12.375447273254395
    10. '        
' → logprob: -12.625447273254395

Token 288: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08278452605009079
    2. 'return' (adapté à ' return') → logprob: -2.832784414291382
    3. '       ' → logprob: -4.832784652709961
    4. '   ' → logprob: -5.082784652709961
    5. ' return' → logprob: -5.457784652709961
    6. '
' → logprob: -6.207784652709961
    7. '	return' → logprob: -9.832784652709961
    8. '               ' → logprob: -10.082784652709961
    9. '                   ' → logprob: -11.082784652709961
    10. '		' → logprob: -11.332784652709961

Token 289: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.3306015716807451e-05
    2. ' True' → logprob: -11.25001335144043
    3. 'False' → logprob: -15.50001335144043
    4. '(True' → logprob: -20.62501335144043
    5. '   ' → logprob: -21.12501335144043
    6. '=True' → logprob: -22.62501335144043
    7. 'true' → logprob: -22.87501335144043
    8. '           ' → logprob: -23.75001335144043
    9. '       ' → logprob: -23.87501335144043
    10. '
' → logprob: -25.12501335144043

Token 290: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005558936391025782
    2. '<|end|>' → logprob: -8.125555992126465
    3. '
' → logprob: -10.000555992126465
    4. ' if' → logprob: -10.375555992126465
    5. '```' → logprob: -10.875555992126465
    6. '   ' → logprob: -10.875555992126465
    7. 'def' → logprob: -11.000555992126465
    8. 'count' → logprob: -11.125555992126465
    9. 'current' → logprob: -11.125555992126465
    10. '        
' → logprob: -11.500555992126465

Token 292: ' start' (ID: 1604)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.9219768643379211
    2. 'if' → logprob: -1.4219768047332764
    3. 'color' → logprob: -2.2969768047332764
    4. 'count' → logprob: -2.7969768047332764
    5. '       ' → logprob: -3.0469768047332764
    6. 'def' → logprob: -3.1719768047332764
    7. 'current' → logprob: -4.2969770431518555
    8. '   ' → logprob: -4.4219770431518555
    9. 'grid' → logprob: -4.7969770431518555
    10. 'for' → logprob: -4.9219770431518555

Token 293: ' =' (ID: 314)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.45606622099876404
    2. '_' → logprob: -1.3310662508010864
    3. ' =' → logprob: -2.831066131591797
    4. '_grid' → logprob: -4.081066131591797
    5. ':' → logprob: -5.081066131591797
    6. '=' → logprob: -5.206066131591797
    7. 'ing' → logprob: -5.956066131591797
    8. 'color' → logprob: -6.081066131591797
    9. '(' → logprob: -6.581066131591797
    10. '()' → logprob: -6.581066131591797

Token 294: ' tuple' (ID: 31311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24526119232177734
    2. '[(' → logprob: -1.9952611923217773
    3. 'grid' → logprob: -3.2452611923217773
    4. ' (' → logprob: -3.8702611923217773
    5. ' flood' → logprob: -4.745261192321777
    6. 'f' → logprob: -5.620261192321777
    7. ' grid' → logprob: -5.870261192321777
    8. ' [(' → logprob: -5.870261192321777
    9. '[' → logprob: -6.495261192321777
    10. '0' → logprob: -7.120261192321777

Token 295: '(tuple' (ID: 133029)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.018152287229895592
    2. '(input' → logprob: -4.768152236938477
    3. '((' → logprob: -5.268152236938477
    4. '(' → logprob: -6.018152236938477
    5. 'grid' → logprob: -7.143152236938477
    6. '([' → logprob: -7.518152236938477
    7. 'input' → logprob: -8.643152236938477
    8. '(range' → logprob: -8.768152236938477
    9. '[' → logprob: -9.518152236938477
    10. '(x' → logprob: -10.018152236938477

Token 296: '(row' (ID: 15945)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.21142995357513428
    2. 'grid' → logprob: -1.9614299535751343
    3. '((' → logprob: -4.586430072784424
    4. '(row' → logprob: -4.836430072784424
    5. '(' → logprob: -5.211430072784424
    6. 'input' → logprob: -5.336430072784424
    7. '(input' → logprob: -5.461430072784424
    8. '(start' → logprob: -5.711430072784424
    9. '(component' → logprob: -6.086430072784424
    10. 'start' → logprob: -6.461430072784424

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05757300928235054
    2. '(grid' → logprob: -3.182573080062866
    3. '(row' → logprob: -4.432572841644287
    4. '(g' → logprob: -6.557572841644287
    5. '())' → logprob: -8.182573318481445
    6. '(' → logprob: -8.557573318481445
    7. '(x' → logprob: -8.807573318481445
    8. '(cell' → logprob: -9.307573318481445
    9. ' for' → logprob: -9.557573318481445
    10. 'for' → logprob: -9.682573318481445

Token 298: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19216766953468323
    2. ' for' → logprob: -2.6921677589416504
    3. '(grid' → logprob: -2.8171677589416504
    4. 'for' → logprob: -3.5671677589416504
    5. '()' → logprob: -4.69216775894165
    6. '[' → logprob: -5.56716775894165
    7. '(' → logprob: -5.94216775894165
    8. '())' → logprob: -6.06716775894165
    9. '(row' → logprob: -7.94216775894165
    10. '(g' → logprob: -8.692167282104492

Token 299: ' row' (ID: 5225)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.020631227642297745
    2. 'grid' → logprob: -3.8956313133239746
    3. '(grid' → logprob: -9.520630836486816
    4. '	grid' → logprob: -12.520630836486816
    5. ':grid' → logprob: -12.770630836486816
    6. ' row' → logprob: -12.895630836486816
    7. '_grid' → logprob: -13.520630836486816
    8. '.grid' → logprob: -13.770630836486816
    9. '[' → logprob: -14.020630836486816
    10. ' ' → logprob: -14.270630836486816

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00742145674303174
    2. 'in' → logprob: -5.007421493530273
    3. ')' → logprob: -7.632421493530273
    4. '<|end|>' → logprob: -9.132421493530273
    5. '=' → logprob: -10.007421493530273
    6. 's' → logprob: -10.757421493530273
    7. ' =' → logprob: -11.257421493530273
    8. '...' → logprob: -12.507421493530273
    9. '<|end|>' → logprob: -12.632421493530273
    10. '[' → logprob: -12.757421493530273

Token 301: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.003605178790166974
    2. ' grid' → logprob: -5.628605365753174
    3. '(grid' → logprob: -12.753604888916016
    4. '[' → logprob: -14.378604888916016
    5. '	grid' → logprob: -15.128604888916016
    6. ')' → logprob: -15.503604888916016
    7. '       ' → logprob: -15.503604888916016
    8. '   ' → logprob: -15.878604888916016
    9. '.grid' → logprob: -16.003604888916016
    10. ':grid' → logprob: -16.003604888916016

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. ')
' → logprob: -11.125020027160645
    3. '       ' → logprob: -12.750020027160645
    4. '[' → logprob: -13.750020027160645
    5. '))' → logprob: -14.375020027160645
    6. ' )' → logprob: -15.250020027160645
    7. '   ' → logprob: -15.625020027160645
    8. ')))' → logprob: -16.00002098083496
    9. ')[' → logprob: -16.37502098083496
    10. '())' → logprob: -16.50002098083496

Token 303: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.091218002140522
    2. '
' → logprob: -3.8412179946899414
    3. ' if' → logprob: -3.9662179946899414
    4. ' while' → logprob: -5.216217994689941
    5. ' step' → logprob: -5.841217994689941
    6. '        
' → logprob: -5.841217994689941
    7. '<|end|>' → logprob: -5.966217994689941
    8. ' for' → logprob: -6.091217994689941
    9. '   ' → logprob: -6.216217994689941
    10. ' 
' → logprob: -6.341217994689941

Token 305: '_states' (ID: 53795)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020468657836318016
    2. '<|end|>' → logprob: -4.645468711853027
    3. '.add' → logprob: -5.020468711853027
    4. '=' → logprob: -6.395468711853027
    5. '[' → logprob: -6.520468711853027
    6. '.setdefault' → logprob: -7.895468711853027
    7. ',' → logprob: -8.395468711853027
    8. '=set' → logprob: -9.645468711853027
    9. ' ' → logprob: -10.270468711853027
    10. 'add' → logprob: -10.270468711853027

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006392885115928948
    2. '=' → logprob: -7.37563943862915
    3. '=set' → logprob: -11.875638961791992
    4. '<|end|>' → logprob: -12.250638961791992
    5. ',' → logprob: -14.875638961791992
    6. ')' → logprob: -15.500638961791992
    7. ' ' → logprob: -15.750638961791992
    8. 'set' → logprob: -17.375638961791992
    9. ' ={' → logprob: -17.625638961791992
    10. '<|end|>' → logprob: -17.750638961791992

Token 307: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12759798765182495
    2. '{' → logprob: -2.1275980472564697
    3. ' set' → logprob: -7.627597808837891
    4. ' {' → logprob: -8.62759780883789
    5. '{s' → logprob: -12.62759780883789
    6. '=set' → logprob: -15.87759780883789
    7. '	set' → logprob: -16.50259780883789
    8. '(set' → logprob: -16.75259780883789
    9. '   ' → logprob: -17.12759780883789
    10. '{sub' → logprob: -17.12759780883789

Token 308: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03468749672174454
    2. '(start' → logprob: -3.5346875190734863
    3. '()
' → logprob: -5.784687519073486
    4. '([' → logprob: -6.534687519073486
    5. '(' → logprob: -8.034687042236328
    6. '({' → logprob: -10.909687042236328
    7. '[start' → logprob: -10.909687042236328
    8. '()

' → logprob: -11.159687042236328
    9. '();' → logprob: -12.659687042236328
    10. '()
' → logprob: -12.784687042236328

Token 309: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00012356207298580557
    2. ' start' → logprob: -9.000123977661133
    3. '(start' → logprob: -16.750123977661133
    4. '   ' → logprob: -18.750123977661133
    5. '[start' → logprob: -19.500123977661133
    6. '	start' → logprob: -19.750123977661133
    7. '           ' → logprob: -21.000123977661133
    8. '       ' → logprob: -21.125123977661133
    9. ',start' → logprob: -21.875123977661133
    10. '
' → logprob: -22.000123977661133

Token 310: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -3.309382373117842e-05
    2. '])
' → logprob: -11.375033378601074
    3. ')])' → logprob: -11.750033378601074
    4. ')' → logprob: -12.000033378601074
    5. ' ])' → logprob: -12.625033378601074
    6. '       ' → logprob: -13.000033378601074
    7. ')]' → logprob: -13.875033378601074
    8. '])]' → logprob: -14.625033378601074
    9. '   ' → logprob: -15.875033378601074
    10. ']])' → logprob: -16.375032424926758

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047106825513765216
    2. '        
' → logprob: -8.750471115112305
    3. 'queue' → logprob: -9.750471115112305
    4. '   ' → logprob: -9.750471115112305
    5. ' queue' → logprob: -9.875471115112305
    6. 'step' → logprob: -10.750471115112305
    7. 'steps' → logprob: -10.750471115112305
    8. '           ' → logprob: -10.875471115112305
    9. '```' → logprob: -11.125471115112305
    10. '
' → logprob: -11.250471115112305

Token 312: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.47023412585258484
    2. '       ' → logprob: -1.7202341556549072
    3. 'q' → logprob: -2.2202341556549072
    4. 'steps' → logprob: -3.0952341556549072
    5. 'from' → logprob: -4.345233917236328
    6. 'step' → logprob: -4.470233917236328
    7. 'stack' → logprob: -4.720233917236328
    8. ' queue' → logprob: -5.595233917236328
    9. 'level' → logprob: -6.470233917236328
    10. 'count' → logprob: -6.970233917236328

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197037547826767
    2. '=' → logprob: -2.8119704723358154
    3. '=[]' → logprob: -13.811970710754395
    4. '.append' → logprob: -14.561970710754395
    5. '.' → logprob: -15.561970710754395
    6. 'deque' → logprob: -15.686970710754395
    7. '	' → logprob: -15.811970710754395
    8. '<|end|>' → logprob: -15.936970710754395
    9. ' ' → logprob: -16.311969757080078
    10. '   ' → logprob: -16.436969757080078

Token 314: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0009124171338044107
    2. ' deque' → logprob: -7.000912189483643
    3. 'de' → logprob: -14.8759126663208
    4. '[' → logprob: -15.1259126663208
    5. '   ' → logprob: -15.3759126663208
    6. '	de' → logprob: -16.875911712646484
    7. 'Deque' → logprob: -17.250911712646484
    8. '```' → logprob: -17.875911712646484
    9. ' ' → logprob: -18.250911712646484
    10. '[(' → logprob: -18.875911712646484

Token 315: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5519014596939087
    2. '()' → logprob: -1.5519014596939087
    3. '([(' → logprob: -1.5519014596939087
    4. '()
' → logprob: -8.051901817321777
    5. '[(' → logprob: -9.551901817321777
    6. '(' → logprob: -10.926901817321777
    7. '[' → logprob: -11.301901817321777
    8. '([
' → logprob: -11.801901817321777
    9. '()

' → logprob: -12.176901817321777
    10. '([[' → logprob: -12.301901817321777

Token 316: '       ' (ID: 309)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.8406254649162292
    2. '       ' → logprob: -0.9656254649162292
    3. 'queue' → logprob: -1.965625524520874
    4. ' queue' → logprob: -3.215625524520874
    5. '[' → logprob: -5.215625286102295
    6. '(grid' → logprob: -7.715625286102295
    7. '[(' → logprob: -7.715625286102295
    8. ' (' → logprob: -8.090625762939453
    9. '	queue' → logprob: -8.215625762939453
    10. '(' → logprob: -8.840625762939453

Token 317: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.08926408737897873
    2. ' queue' → logprob: -2.589264154434204
    3. '(queue' → logprob: -4.839263916015625
    4. 'grid' → logprob: -6.464263916015625
    5. '(' → logprob: -7.839263916015625
    6. '       ' → logprob: -8.589263916015625
    7. ' (' → logprob: -9.214263916015625
    8. '   ' → logprob: -9.464263916015625
    9. ' grid' → logprob: -9.964263916015625
    10. '(grid' → logprob: -10.589263916015625

Token 318: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.570319702499546e-05
    2. '.' → logprob: -11.125025749206543
    3. '.extend' → logprob: -11.500025749206543
    4. '.enqueue' → logprob: -15.250025749206543
    5. ' .' → logprob: -15.375025749206543
    6. '=' → logprob: -16.500024795532227
    7. 'append' → logprob: -16.500024795532227
    8. '.p' → logprob: -16.625024795532227
    9. '().' → logprob: -16.750024795532227
    10. '_append' → logprob: -17.125024795532227

Token 319: '(' (ID: 7)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.07903563976287842
    2. '((' → logprob: -2.579035758972168
    3. '(' → logprob: -9.454035758972168
    4. '(tuple' → logprob: -9.829035758972168
    5. '(((' → logprob: -12.204035758972168
    6. 'grid' → logprob: -12.829035758972168
    7. '(Grid' → logprob: -13.079035758972168
    8. '([' → logprob: -13.829035758972168
    9. ' (' → logprob: -14.829035758972168
    10. '(gr' → logprob: -15.204035758972168

Token 320: ' (' (ID: 350)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.05765189602971077
    2. 'grid' → logprob: -3.057651996612549
    3. '(start' → logprob: -5.307651996612549
    4. '(' → logprob: -6.057651996612549
    5. '(tuple' → logprob: -7.307651996612549
    6. '((' → logprob: -7.682651996612549
    7. ' (' → logprob: -8.68265151977539
    8. 'start' → logprob: -8.93265151977539
    9. 'tuple' → logprob: -9.43265151977539
    10. '(g' → logprob: -10.55765151977539

Token 321: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.004565411247313023
    2. 'start' → logprob: -6.004565238952637
    3. 'tuple' → logprob: -6.504565238952637
    4. '0' → logprob: -8.129565238952637
    5. '(grid' → logprob: -8.754565238952637
    6. '[' → logprob: -9.754565238952637
    7. ' grid' → logprob: -11.004565238952637
    8. '(' → logprob: -11.254565238952637
    9. ')' → logprob: -11.379565238952637
    10. '[start' → logprob: -11.754565238952637

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016535978764295578
    2. ')' → logprob: -4.516535758972168
    3. ',)' → logprob: -5.266535758972168
    4. ' ,' → logprob: -8.266535758972168
    5. ',
' → logprob: -10.641535758972168
    6. ' )' → logprob: -11.516535758972168
    7. ',[' → logprob: -12.516535758972168
    8. ',,' → logprob: -12.891535758972168
    9. ',:)' → logprob: -13.016535758972168
    10. ',None' → logprob: -13.391535758972168

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019457722082734108
    2. ' ' → logprob: -6.251945972442627
    3. '1' → logprob: -11.501945495605469
    4. ')' → logprob: -12.376945495605469
    5. '   ' → logprob: -13.751945495605469
    6. 'steps' → logprob: -15.689445495605469
    7. ' steps' → logprob: -16.12694549560547
    8. '))' → logprob: -16.12694549560547
    9. '  ' → logprob: -16.18944549560547
    10. '2' → logprob: -16.18944549560547

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.750065803527832
    3. '1' → logprob: -12.125065803527832
    4. ')' → logprob: -13.500065803527832
    5. '[]' → logprob: -15.625065803527832
    6. '   ' → logprob: -15.687565803527832
    7. '))' → logprob: -16.06256675720215
    8. 'steps' → logprob: -16.18756675720215
    9. '[])' → logprob: -16.43756675720215
    10. '-' → logprob: -16.75006675720215

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. '))' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.250005722045898
    4. ')
' → logprob: -15.750005722045898
    5. ',' → logprob: -16.5000057220459
    6. '   ' → logprob: -18.7500057220459
    7. '),' → logprob: -19.0000057220459
    8. ')}' → logprob: -19.3750057220459
    9. ')

' → logprob: -19.6250057220459
    10. ')))' → logprob: -19.8750057220459

Token 326: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.874882430769503e-05
    2. '       ' → logprob: -10.250079154968262
    3. ')
' → logprob: -10.500079154968262
    4. ' )' → logprob: -11.125079154968262
    5. '   ' → logprob: -14.500079154968262
    6. '))' → logprob: -15.875079154968262
    7. ')`' → logprob: -16.125078201293945
    8. '
' → logprob: -17.125078201293945
    9. ')

' → logprob: -17.250078201293945
    10. '),' → logprob: -17.375078201293945

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010772839188575745
    2. ')' → logprob: -5.635772705078125
    3. '<|end|>' → logprob: -5.760772705078125
    4. '        
' → logprob: -6.510772705078125
    5. '   ' → logprob: -7.135772705078125
    6. '
' → logprob: -7.635772705078125
    7. ',' → logprob: -8.260772705078125
    8. '```' → logprob: -8.510772705078125
    9. '    
' → logprob: -8.885772705078125
    10. ' 
' → logprob: -9.010772705078125

Token 328: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06461954116821289
    2. ' while' → logprob: -2.814619541168213
    3. '       ' → logprob: -5.939619541168213
    4. '   ' → logprob: -11.564619064331055
    5. 'if' → logprob: -13.314619064331055
    6. '	while' → logprob: -13.439619064331055
    7. '
' → logprob: -14.689619064331055
    8. '```' → logprob: -14.939619064331055
    9. '        
' → logprob: -15.064619064331055
    10. 'wh' → logprob: -15.189619064331055

Token 329: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6931662559509277
    2. ' queue' → logprob: -0.6931662559509277
    3. '(queue' → logprob: -11.443166732788086
    4. '	queue' → logprob: -11.943166732788086
    5. 'que' → logprob: -14.693166732788086
    6. '   ' → logprob: -14.943166732788086
    7. ' ' → logprob: -15.193166732788086
    8. 'len' → logprob: -15.568166732788086
    9. '.queue' → logprob: -15.818166732788086
    10. 'True' → logprob: -15.943166732788086

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009150886908173561
    2. ':
' → logprob: -4.759150981903076
    3. '.pop' → logprob: -7.884150981903076
    4. '.append' → logprob: -10.134150505065918
    5. '[' → logprob: -10.509150505065918
    6. '```' → logprob: -10.884150505065918
    7. '.dequeue' → logprob: -11.134150505065918
    8. '():' → logprob: -11.509150505065918
    9. 'opleft' → logprob: -12.009150505065918
    10. ' :' → logprob: -12.134150505065918

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026293791830539703
    2. 'grid' → logprob: -4.151293754577637
    3. ',' → logprob: -4.901293754577637
    4. '(grid' → logprob: -6.651293754577637
    5. ' grid' → logprob: -7.526293754577637
    6. '```' → logprob: -7.901293754577637
    7. '            
' → logprob: -8.276293754577637
    8. '   ' → logprob: -9.901293754577637
    9. ' ,' → logprob: -10.026293754577637
    10. '	grid' → logprob: -10.401293754577637

Token 332: ' g' (ID: 329)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10056258738040924
    2. ' grid' → logprob: -2.975562572479248
    3. 'g' (adapté à ' g') → logprob: -3.225562572479248
    4. ' g' → logprob: -5.850562572479248
    5. 'current' → logprob: -6.975562572479248
    6. ' current' → logprob: -7.975562572479248
    7. 'cur' → logprob: -8.475563049316406
    8. '           ' → logprob: -8.475563049316406
    9. '               ' → logprob: -8.975563049316406
    10. 'curr' → logprob: -9.350563049316406

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',n' → logprob: -15.62500286102295
    4. ',num' → logprob: -16.375003814697266
    5. ',size' → logprob: -16.750003814697266
    6. '_,' → logprob: -16.750003814697266
    7. ',count' → logprob: -17.125003814697266
    8. ',length' → logprob: -17.250003814697266
    9. ',current' → logprob: -17.375003814697266
    10. ',index' → logprob: -17.625003814697266

Token 334: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.05794273689389229
    2. 'moves' → logprob: -3.5579426288604736
    3. 'depth' → logprob: -4.307942867279053
    4. ' steps' → logprob: -5.432942867279053
    5. 'dist' → logprob: -5.682942867279053
    6. 'step' → logprob: -6.057942867279053
    7. 'd' → logprob: -6.307942867279053
    8. ' dist' → logprob: -7.432942867279053
    9. ' moves' → logprob: -7.432942867279053
    10. 'cost' → logprob: -7.682942867279053

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693513929843903
    2. ' =' → logprob: -2.1269352436065674
    3. ')' → logprob: -12.001935005187988
    4. ')=' → logprob: -14.126935005187988
    5. ',' → logprob: -16.626935958862305
    6. ' =)' → logprob: -16.626935958862305
    7. '<|end|>' → logprob: -17.126935958862305
    8. '=
' → logprob: -17.626935958862305
    9. ' =
' → logprob: -17.751935958862305
    10. '＝' → logprob: -18.126935958862305

Token 336: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5759400129318237
    2. ' queue' → logprob: -0.8259400129318237
    3. '	queue' → logprob: -14.950940132141113
    4. '(queue' → logprob: -15.950940132141113
    5. '.queue' → logprob: -17.200939178466797
    6. 'que' → logprob: -17.325939178466797
    7. ' ' → logprob: -18.450939178466797
    8. 'g' → logprob: -18.700939178466797
    9. '   ' → logprob: -18.825939178466797
    10. '_queue' → logprob: -19.200939178466797

Token 337: '.p' (ID: 1201)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22618305683135986
    2. '=' → logprob: -1.6011830568313599
    3. '           ' → logprob: -7.72618293762207
    4. ')' → logprob: -8.97618293762207
    5. ':' → logprob: -9.47618293762207
    6. '               ' → logprob: -10.85118293762207
    7. '       ' → logprob: -10.97618293762207
    8. ' ' → logprob: -10.97618293762207
    9. '<|end|>' → logprob: -11.10118293762207
    10. '        ' → logprob: -11.60118293762207

Token 338: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00012737659562844783
    2. 'op' → logprob: -9.000127792358398
    3. 'ople' → logprob: -12.625127792358398
    4. 'append' → logprob: -14.500127792358398
    5. 'opl' → logprob: -15.750127792358398
    6. 'left' → logprob: -17.1251277923584
    7. 'opt' → logprob: -17.8751277923584
    8. 'opy' → logprob: -19.5001277923584
    9. 'oplevel' → logprob: -19.6251277923584
    10. 'opf' → logprob: -20.0001277923584

Token 339: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04763305187225342
    2. '
' → logprob: -3.672633171081543
    3. '<|end|>' → logprob: -5.047633171081543
    4. '       ' → logprob: -5.297633171081543
    5. ')' → logprob: -5.547633171081543
    6. '            
' → logprob: -5.922633171081543
    7. ',' → logprob: -7.297633171081543
    8. '<|end|>' → logprob: -7.672633171081543
    9. '               ' → logprob: -7.922633171081543
    10. '  
' → logprob: -7.922633171081543

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005424272385425866
    2. ' if' → logprob: -8.625542640686035
    3. '            
' → logprob: -8.875542640686035
    4. '               ' → logprob: -9.000542640686035
    5. 'if' → logprob: -10.500542640686035
    6. '
' → logprob: -10.625542640686035
    7. '       ' → logprob: -10.875542640686035
    8. '<|end|>' → logprob: -11.375542640686035
    9. '            ' → logprob: -12.750542640686035
    10. '   ' → logprob: -12.875542640686035

Token 341: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3737388551235199
    2. 'component' → logprob: -1.4987388849258423
    3. '           ' → logprob: -2.7487387657165527
    4. 'current' → logprob: -4.373738765716553
    5. ' if' → logprob: -5.623738765716553
    6. 'target' → logprob: -5.873738765716553
    7. 'color' → logprob: -6.373738765716553
    8. 'for' → logprob: -6.748738765716553
    9. 'f' → logprob: -7.623738765716553
    10. '```' → logprob: -7.998738765716553

Token 342: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1269284337759018
    2. 'is' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. '   ' → logprob: -16.626928329467773
    5. ' all' → logprob: -16.751928329467773
    6. '	is' → logprob: -17.001928329467773
    7. '(is' → logprob: -17.126928329467773
    8. ' ' → logprob: -17.251928329467773
    9. '           ' → logprob: -17.501928329467773
    10. 'len' → logprob: -18.251928329467773

Token 343: '_uniform' (ID: 116363)
  Prédit: '_uniform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uniform' → logprob: -7.896309739408025e-07
    2. '_un' → logprob: -14.750000953674316
    3. 'uniform' → logprob: -14.875000953674316
    4. '_' → logprob: -17.0
    5. '_unique' → logprob: -17.875
    6. '_uni' → logprob: -18.125
    7. '_union' → logprob: -18.25
    8. ' _' → logprob: -18.875
    9. '_u' → logprob: -19.625
    10. ' uniform' → logprob: -19.75

Token 344: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -14.750004768371582
    4. '(
' → logprob: -18.3750057220459
    5. '(grid' → logprob: -18.5000057220459
    6. 'g' → logprob: -18.5000057220459
    7. ')' → logprob: -19.1250057220459
    8. '(gr' → logprob: -19.1250057220459
    9. '[g' → logprob: -20.6250057220459
    10. '(s' → logprob: -21.2500057220459

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007171963807195425
    2. '):
' → logprob: -7.2507171630859375
    3. ' ):' → logprob: -12.000717163085938
    4. ')' → logprob: -14.000717163085938
    5. '):
' → logprob: -16.375717163085938
    6. '():' → logprob: -16.500717163085938
    7. ':' → logprob: -17.000717163085938
    8. '):

' → logprob: -17.875717163085938
    9. ')):' → logprob: -19.125717163085938
    10. '）：' → logprob: -19.750717163085938

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005156316328793764
    2. 'print' → logprob: -6.005156517028809
    3. ' print' → logprob: -6.255156517028809
    4. '           ' → logprob: -7.255156517028809
    5. ' return' → logprob: -10.630156517028809
    6. 'return' → logprob: -11.880156517028809
    7. '
' → logprob: -11.880156517028809
    8. '       ' → logprob: -12.380156517028809
    9. '                   ' → logprob: -12.755156517028809
    10. '   ' → logprob: -13.255156517028809

Token 347: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07254453003406525
    2. ' print' → logprob: -2.822544574737549
    3. '               ' → logprob: -4.572544574737549
    4. 'return' → logprob: -9.32254409790039
    5. ' return' → logprob: -10.19754409790039
    6. '                   ' → logprob: -10.19754409790039
    7. '           ' → logprob: -10.69754409790039
    8. '   ' → logprob: -13.69754409790039
    9. '
' → logprob: -13.94754409790039
    10. '```' → logprob: -14.69754409790039

Token 348: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. 'steps' → logprob: -12.500003814697266
    3. ' (' → logprob: -14.875003814697266
    4. ' steps' → logprob: -15.750003814697266
    5. '(step' → logprob: -17.500003814697266
    6. '((' → logprob: -19.125003814697266
    7. 'Steps' → logprob: -21.250003814697266
    8. '   ' → logprob: -21.750003814697266
    9. '(f' → logprob: -22.375003814697266
    10. '_steps' → logprob: -22.625003814697266

Token 349: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -2.339278580620885e-06
    2. ' steps' → logprob: -13.000001907348633
    3. 'step' → logprob: -17.000001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '(' → logprob: -20.000001907348633
    6. '.steps' → logprob: -21.500001907348633
    7. '           ' → logprob: -21.750001907348633
    8. '       ' → logprob: -21.750001907348633
    9. '
' → logprob: -21.875001907348633
    10. 'Steps' → logprob: -22.000001907348633

Token 350: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06205249950289726
    2. ')' → logprob: -2.8120524883270264
    3. '               ' → logprob: -10.062052726745605
    4. ')
' → logprob: -10.187052726745605
    5. ')return' → logprob: -13.562052726745605
    6. '           ' → logprob: -13.812052726745605
    7. ')`
' → logprob: -13.937052726745605
    8. '                   ' → logprob: -14.187052726745605
    9. ' )
' → logprob: -15.187052726745605
    10. '())
' → logprob: -16.43705177307129

Token 351: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000122608442325145
    2. '           ' → logprob: -9.375123023986816
    3. '                   ' → logprob: -11.250123023986816
    4. '                
' → logprob: -11.375123023986816
    5. '       ' → logprob: -12.375123023986816
    6. '              ' → logprob: -12.750123023986816
    7. '<|end|>' → logprob: -13.500123023986816
    8. '                ' → logprob: -14.000123023986816
    9. '                       ' → logprob: -14.250123023986816
    10. '   ' → logprob: -14.250123023986816

Token 352: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05105450749397278
    2. '               ' → logprob: -3.0510544776916504
    3. ' break' → logprob: -6.05105447769165
    4. 'return' → logprob: -9.176054954528809
    5. '           ' → logprob: -12.801054954528809
    6. '	break' → logprob: -13.301054954528809
    7. ' return' → logprob: -15.426054954528809
    8. '```' → logprob: -15.926054954528809
    9. '
' → logprob: -16.301054000854492
    10. '                   ' → logprob: -16.426054000854492

Token 353: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004216943867504597
    2. '       ' → logprob: -5.629217147827148
    3. '
' → logprob: -7.754217147827148
    4. '            
' → logprob: -9.254217147827148
    5. '        
' → logprob: -10.254217147827148
    6. '    
' → logprob: -11.129217147827148
    7. '   ' → logprob: -11.129217147827148
    8. 'for' → logprob: -12.254217147827148
    9. 'else' → logprob: -12.629217147827148
    10. ' for' → logprob: -12.629217147827148

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07295753061771393
    2. 'for' → logprob: -3.1979575157165527
    3. '       ' → logprob: -3.8229575157165527
    4. ' for' → logprob: -4.947957515716553
    5. '            
' → logprob: -8.322957992553711
    6. '
' → logprob: -8.697957992553711
    7. 'else' → logprob: -9.697957992553711
    8. '   ' → logprob: -10.197957992553711
    9. '        
' → logprob: -10.947957992553711
    10. '               ' → logprob: -11.322957992553711

Token 355: ' cur' (ID: 4396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014833167660981417
    2. '           ' → logprob: -7.12648344039917
    3. ' for' → logprob: -7.87648344039917
    4. 'current' → logprob: -8.376482963562012
    5. 'target' → logprob: -10.376482963562012
    6. 'component' → logprob: -10.751482963562012
    7. 'top' → logprob: -11.876482963562012
    8. 'color' → logprob: -12.626482963562012
    9. '            
' → logprob: -13.251482963562012
    10. '   ' → logprob: -14.126482963562012

Token 356: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.6775760650634766
    2. 'ent' → logprob: -0.8025760650634766
    3. 'color' → logprob: -3.8025760650634766
    4. '_component' → logprob: -4.802576065063477
    5. '_colors' → logprob: -5.302576065063477
    6. 'nt' → logprob: -6.052576065063477
    7. 'component' → logprob: -6.552576065063477
    8. 'ect' → logprob: -7.302576065063477
    9. 'nent' → logprob: -7.927576065063477
    10. 'olor' → logprob: -7.927576065063477

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22795620560646057
    2. '=' → logprob: -1.6029561758041382
    3. 's' → logprob: -5.977956295013428
    4. ',' → logprob: -12.97795581817627
    5. ')' → logprob: -13.35295581817627
    6. ' ' → logprob: -15.22795581817627
    7. '           ' → logprob: -15.22795581817627
    8. ']' → logprob: -15.47795581817627
    9. '   ' → logprob: -15.60295581817627
    10. '=s' → logprob: -15.72795581817627

Token 358: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11299480497837067
    2. ' g' → logprob: -2.237994909286499
    3. 'grid' → logprob: -8.737995147705078
    4. ' grid' → logprob: -11.487995147705078
    5. '   ' → logprob: -14.987995147705078
    6. ' ' → logprob: -15.362995147705078
    7. ''g' → logprob: -15.362995147705078
    8. '           ' → logprob: -15.487995147705078
    9. 'gr' → logprob: -15.862995147705078
    10. '`' → logprob: -16.362995147705078

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003036457928828895
    2. '0' → logprob: -8.125303268432617
    3. ' ' → logprob: -12.750303268432617
    4. 'f' → logprob: -13.750303268432617
    5. ' [' → logprob: -13.875303268432617
    6. '   ' → logprob: -14.500303268432617
    7. '[y' → logprob: -14.625303268432617
    8. '[f' → logprob: -15.000303268432617
    9. '
' → logprob: -15.500303268432617
    10. '```' → logprob: -15.625303268432617

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0020742492051795e-05
    2. '[' → logprob: -10.875049591064453
    3. 'y' → logprob: -11.250049591064453
    4. '   ' → logprob: -12.250049591064453
    5. 'ny' → logprob: -12.250049591064453
    6. ' ' → logprob: -12.375049591064453
    7. '
' → logprob: -13.625049591064453
    8. '][' → logprob: -14.125049591064453
    9. '```' → logprob: -15.125049591064453
    10. '[y' → logprob: -15.562549591064453

Token 361: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004044554370921105
    2. '[' → logprob: -8.125404357910156
    3. '0' → logprob: -9.375404357910156
    4. ' ][' → logprob: -11.375404357910156
    5. ']' → logprob: -11.500404357910156
    6. ']][' → logprob: -15.125404357910156
    7. ')][' → logprob: -15.500404357910156
    8. '```' → logprob: -15.625404357910156
    9. ']
' → logprob: -15.750404357910156
    10. '   ' → logprob: -15.750404357910156

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.0
    3. '[' → logprob: -17.5
    4. ']' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. '
' → logprob: -18.0
    7. '1' → logprob: -18.0
    8. ')' → logprob: -18.875
    9. '])' → logprob: -18.875
    10. '۰' → logprob: -19.1875

Token 363: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.857566237449646
    2. ']' → logprob: -1.107566237449646
    3. ')
' → logprob: -1.982566237449646
    4. ')' → logprob: -2.2325663566589355
    5. '])' → logprob: -8.607565879821777
    6. ')]' → logprob: -8.857565879821777
    7. '])
' → logprob: -9.482565879821777
    8. ']
' → logprob: -10.732565879821777
    9. ')]
' → logprob: -11.232565879821777
    10. ')
' → logprob: -11.732565879821777

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004920512437820435
    2. ' for' → logprob: -5.629920482635498
    3. 'for' → logprob: -7.379920482635498
    4. '       ' → logprob: -8.004920959472656
    5. '            
' → logprob: -9.004920959472656
    6. '
' → logprob: -9.254920959472656
    7. '<|end|>' → logprob: -9.754920959472656
    8. '   ' → logprob: -10.879920959472656
    9. ' 
' → logprob: -11.504920959472656
    10. '        
' → logprob: -11.629920959472656

Token 365: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08671759068965912
    2. ' for' → logprob: -2.8367176055908203
    3. '           ' → logprob: -3.7117176055908203
    4. '       ' → logprob: -11.96171760559082
    5. '	for' → logprob: -13.46171760559082
    6. '            
' → logprob: -14.33671760559082
    7. '
' → logprob: -14.71171760559082
    8. '<|end|>' → logprob: -14.71171760559082
    9. '               ' → logprob: -14.83671760559082
    10. '   ' → logprob: -14.96171760559082

Token 366: ' =' (ID: 314)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.002573875244706869
    2. ' =' → logprob: -6.2525739669799805
    3. '=' → logprob: -7.8775739669799805
    4. 'on' → logprob: -8.75257396697998
    5. 'ONENT' → logprob: -9.37757396697998
    6. 'ponent' → logprob: -11.87757396697998
    7. ',' → logprob: -12.25257396697998
    8. 'ent' → logprob: -12.62757396697998
    9. 'ont' → logprob: -13.25257396697998
    10. '=[]' → logprob: -14.00257396697998

Token 367: ' flood' (ID: 23390)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.026321783661842346
    2. ' flood' → logprob: -3.6513218879699707
    3. '(f' → logprob: -11.026321411132812
    4. ' f' → logprob: -12.651321411132812
    5. 'flo' → logprob: -14.901321411132812
    6. '   ' → logprob: -15.151321411132812
    7. '[f' → logprob: -15.151321411132812
    8. '=f' → logprob: -15.276321411132812
    9. '	f' → logprob: -15.526321411132812
    10. 'fl' → logprob: -16.276321411132812

Token 368: '_fill' (ID: 70344)
  Prédit: '_fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fill' → logprob: -1.1279553291387856e-05
    2. '_' → logprob: -12.000011444091797
    3. ' _' → logprob: -13.375011444091797
    4. '_FILL' → logprob: -13.750011444091797
    5. 'fill' → logprob: -13.875011444091797
    6. '_flush' → logprob: -15.375011444091797
    7. '_f' → logprob: -15.375011444091797
    8. '_append' → logprob: -15.625011444091797
    9. '_replace' → logprob: -15.750011444091797
    10. '_flip' → logprob: -16.000011444091797

Token 369: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.250007629394531
    3. '(grid' → logprob: -13.625007629394531
    4. 'g' → logprob: -13.875007629394531
    5. ' (' → logprob: -15.500007629394531
    6. '(gr' → logprob: -15.500007629394531
    7. '[g' → logprob: -15.875007629394531
    8. '(
' → logprob: -16.12500762939453
    9. ',g' → logprob: -16.87500762939453
    10. ')' → logprob: -16.87500762939453

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01847720332443714
    2. ',g' → logprob: -4.018477439880371
    3. ' ,' → logprob: -8.893477439880371
    4. 'g' → logprob: -9.143477439880371
    5. '(g' → logprob: -10.768477439880371
    6. '           ' → logprob: -11.018477439880371
    7. ')' → logprob: -11.268477439880371
    8. ',
' → logprob: -11.268477439880371
    9. '(' → logprob: -11.643477439880371
    10. '       ' → logprob: -13.393477439880371

Token 371: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00023071514442563057
    2. ' cur' → logprob: -8.37523078918457
    3. '(cur' → logprob: -16.87523078918457
    4. '   ' → logprob: -17.00023078918457
    5. '[cur' → logprob: -18.00023078918457
    6. 'curr' → logprob: -18.25023078918457
    7. '	cur' → logprob: -18.25023078918457
    8. ' ' → logprob: -18.62523078918457
    9. 'g' → logprob: -19.00023078918457
    10. '           ' → logprob: -19.62523078918457

Token 372: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00014728360110893846
    2. 'color' → logprob: -9.000146865844727
    3. 'Color' → logprob: -12.000146865844727
    4. 'cur' → logprob: -12.125146865844727
    5. '[' → logprob: -12.250146865844727
    6. '[cur' → logprob: -13.875146865844727
    7. 'olor' → logprob: -14.000146865844727
    8. '_cur' → logprob: -14.125146865844727
    9. '_colors' → logprob: -14.250146865844727
    10. '_fill' → logprob: -14.250146865844727

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018209880217909813
    2. ')
' → logprob: -4.018209934234619
    3. '           ' → logprob: -9.893209457397461
    4. ')
' → logprob: -11.768209457397461
    5. '       ' → logprob: -15.018209457397461
    6. ')`' → logprob: -15.018209457397461
    7. ' )' → logprob: -15.393209457397461
    8. ')

' → logprob: -15.393209457397461
    9. ')`
' → logprob: -15.393209457397461
    10. '))' → logprob: -15.893209457397461

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021847609896212816
    2. '       ' → logprob: -6.627184867858887
    3. ' for' → logprob: -8.127184867858887
    4. '            
' → logprob: -8.377184867858887
    5. ' 
' → logprob: -9.377184867858887
    6. '               ' → logprob: -10.002184867858887
    7. '        
' → logprob: -10.252184867858887
    8. '   ' → logprob: -10.752184867858887
    9. '<|end|>' → logprob: -11.127184867858887
    10. '                   ' → logprob: -11.127184867858887

Token 375: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25828486680984497
    2. ' for' → logprob: -1.5082848072052002
    3. '           ' → logprob: -5.508285045623779
    4. '       ' → logprob: -6.133285045623779
    5. '   ' → logprob: -9.758284568786621
    6. '	for' → logprob: -10.508284568786621
    7. '               ' → logprob: -12.133284568786621
    8. 'colors' → logprob: -12.133284568786621
    9. '
' → logprob: -12.633284568786621
    10. '            
' → logprob: -13.258284568786621

Token 376: ' c' (ID: 274)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.01717960648238659
    2. ' color' → logprob: -4.142179489135742
    3. 'c' → logprob: -7.392179489135742
    4. 'col' → logprob: -7.642179489135742
    5. 'new' → logprob: -10.267179489135742
    6. ' c' → logprob: -12.392179489135742
    7. ' new' → logprob: -12.642179489135742
    8. ' col' → logprob: -12.642179489135742
    9. 'clr' → logprob: -13.017179489135742
    10. 'icolor' → logprob: -15.517179489135742

Token 377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0486038476228714
    2. 'in' → logprob: -3.0486037731170654
    3. 'olor' → logprob: -11.798604011535645
    4. ' ' → logprob: -12.673604011535645
    5. 'i' → logprob: -13.423604011535645
    6. 's' → logprob: -13.548604011535645
    7. 'ol' → logprob: -13.923604011535645
    8. '	in' → logprob: -14.923604011535645
    9. '  ' → logprob: -15.173604011535645
    10. 'n' → logprob: -15.173604011535645

Token 378: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.04300559684634209
    2. ' colors' → logprob: -3.1680057048797607
    3. '(colors' → logprob: -13.41800594329834
    4. '[' → logprob: -13.54300594329834
    5. '.colors' → logprob: -14.29300594329834
    6. '   ' → logprob: -14.54300594329834
    7. '['' → logprob: -14.66800594329834
    8. 'range' → logprob: -15.04300594329834
    9. 'c' → logprob: -15.04300594329834
    10. ' [' → logprob: -15.16800594329834

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11297138035297394
    2. ':
' → logprob: -2.237971305847168
    3. '           ' → logprob: -9.737971305847168
    4. '               ' → logprob: -9.987971305847168
    5. ':
' → logprob: -11.237971305847168
    6. '   ' → logprob: -12.237971305847168
    7. '       ' → logprob: -12.362971305847168
    8. ' :' → logprob: -12.487971305847168
    9. ':

' → logprob: -12.862971305847168
    10. '):
' → logprob: -12.987971305847168

Token 380: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024843132123351097
    2. ' if' → logprob: -3.899843215942383
    3. '<|end|>' → logprob: -6.899843215942383
    4. ' ' → logprob: -7.524843215942383
    5. ' :' → logprob: -7.774843215942383
    6. ':' → logprob: -7.774843215942383
    7. ':
' → logprob: -7.899843215942383
    8. '           ' → logprob: -8.649843215942383
    9. ' :
' → logprob: -8.774843215942383
    10. '   ' → logprob: -8.774843215942383

Token 381: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03308628499507904
    2. '                   ' → logprob: -4.28308629989624
    3. 'if' (adapté à ' if') → logprob: -4.40808629989624
    4. '               ' → logprob: -5.15808629989624
    5. '                ' → logprob: -8.283085823059082
    6. ' ' → logprob: -8.658085823059082
    7. '   ' → logprob: -9.033085823059082
    8. '                       ' → logprob: -9.158085823059082
    9. '                    ' → logprob: -10.158085823059082
    10. '	               ' → logprob: -10.658085823059082

Token 382: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.029750952497124672
    2. 'c' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.65475082397461
    4. '	c' → logprob: -15.77975082397461
    5. '
' → logprob: -16.02975082397461
    6. '   ' → logprob: -17.15475082397461
    7. ' ' → logprob: -18.27975082397461
    8. '                   ' → logprob: -18.65475082397461
    9. ')c' → logprob: -18.77975082397461
    10. '```' → logprob: -18.77975082397461

Token 383: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0017312256386503577
    2. '!=' → logprob: -6.3767313957214355
    3. ' ==' → logprob: -10.501730918884277
    4. ' ' → logprob: -14.001730918884277
    5. '==' → logprob: -15.126730918884277
    6. ' ' → logprob: -16.126731872558594
    7. ')!=' → logprob: -16.376731872558594
    8. ' c' → logprob: -16.501731872558594
    9. ')' → logprob: -17.126731872558594
    10. '()!=' → logprob: -17.251731872558594

Token 384: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.011047935113310814
    2. ' cur' → logprob: -4.511047840118408
    3. 'c' → logprob: -16.63604736328125
    4. '	cur' → logprob: -17.01104736328125
    5. ' ' → logprob: -17.26104736328125
    6. '[cur' → logprob: -19.13604736328125
    7. '(cur' → logprob: -19.88604736328125
    8. ' c' → logprob: -20.13604736328125
    9. '_cur' → logprob: -21.13604736328125
    10. '   ' → logprob: -21.38604736328125

Token 385: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.002375534735620022
    2. 'cur' → logprob: -7.127375602722168
    3. '[' → logprob: -7.752375602722168
    4. '_colors' → logprob: -8.002375602722168
    5. '_cur' → logprob: -8.377375602722168
    6. 'g' → logprob: -8.627375602722168
    7. 'Color' → logprob: -9.502375602722168
    8. ' cur' → logprob: -10.252375602722168
    9. 'color' → logprob: -10.252375602722168
    10. '               ' → logprob: -10.252375602722168

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5404736399650574
    2. ':
' → logprob: -0.9154736399650574
    3. ' or' → logprob: -4.790473461151123
    4. '                   ' → logprob: -5.165473461151123
    5. 'continue' → logprob: -6.415473461151123
    6. ' continue' → logprob: -7.290473461151123
    7. ':return' → logprob: -8.165473937988281
    8. '               ' → logprob: -8.290473937988281
    9. '                       ' → logprob: -9.040473937988281
    10. '	continue' → logprob: -9.540473937988281

Token 387: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06182963401079178
    2. ':' → logprob: -3.5618295669555664
    3. ' continue' → logprob: -4.061829566955566
    4. ':
' → logprob: -4.436829566955566
    5. 'continue' → logprob: -6.311829566955566
    6. '               ' → logprob: -8.061829566955566
    7. '                       ' → logprob: -9.186829566955566
    8. '           ' → logprob: -9.561829566955566
    9. '	continue' → logprob: -9.811829566955566
    10. ' :' → logprob: -10.186829566955566

Token 388: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.17114344239234924
    2. 'continue' (adapté à ' continue') → logprob: -1.9211434125900269
    3. '                   ' → logprob: -4.546143531799316
    4. '               ' → logprob: -9.546143531799316
    5. '	continue' → logprob: -9.546143531799316
    6. '   ' → logprob: -10.046143531799316
    7. '                       ' → logprob: -10.296143531799316
    8. '
' → logprob: -11.671143531799316
    9. 'contin' → logprob: -11.796143531799316
    10. '_continue' → logprob: -11.796143531799316

Token 389: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0563984252512455
    2. '
' → logprob: -3.556398391723633
    3. '           ' → logprob: -4.556398391723633
    4. '                   ' → logprob: -5.431398391723633
    5. '                
' → logprob: -5.806398391723633
    6. '                    
' → logprob: -6.306398391723633
    7. '            
' → logprob: -7.431398391723633
    8. '       ' → logprob: -7.556398391723633
    9. ':
' → logprob: -7.681398391723633
    10. '	           ' → logprob: -7.806398391723633

Token 390: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30415037274360657
    2. '                    
' → logprob: -2.554150342941284
    3. '                
' → logprob: -2.804150342941284
    4. '                   ' → logprob: -2.804150342941284
    5. '
' → logprob: -3.929150342941284
    6. ' 
' → logprob: -4.304150581359863
    7. '                ' → logprob: -4.929150581359863
    8. '                        
' → logprob: -5.179150581359863
    9. '            
' → logprob: -6.054150581359863
    10. '           ' → logprob: -6.054150581359863

Token 391: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.36567923426628113
    2. 'new' (adapté à ' new') → logprob: -1.3656792640686035
    3. '               ' → logprob: -3.3656792640686035
    4. '           ' → logprob: -4.8656792640686035
    5. '
' → logprob: -5.3656792640686035
    6. '                   ' → logprob: -5.9906792640686035
    7. ' 
' → logprob: -7.8656792640686035
    8. '                
' → logprob: -8.240678787231445
    9. ' grid' → logprob: -9.115678787231445
    10. 'grid' → logprob: -9.365678787231445

Token 392: '_g' (ID: 5439)
  Prédit: '_grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.5320953130722046
    2. '_g' → logprob: -0.9070953130722046
    3. '_' → logprob: -4.907095432281494
    4. 'g' → logprob: -6.782095432281494
    5. '_gr' → logprob: -9.032094955444336
    6. 'grid' → logprob: -9.157094955444336
    7. ' _' → logprob: -9.907094955444336
    8. ' =' → logprob: -10.282094955444336
    9. '_color' → logprob: -10.407094955444336
    10. '_graph' → logprob: -11.657094955444336

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688984513282776
    2. '=' → logprob: -1.1368898153305054
    3. ' =[' → logprob: -12.261889457702637
    4. ' =
' → logprob: -12.636889457702637
    5. '[' → logprob: -13.136889457702637
    6. '=[' → logprob: -13.261889457702637
    7. ',' → logprob: -13.386889457702637
    8. '=
' → logprob: -13.386889457702637
    9. ' ' → logprob: -13.886889457702637
    10. '=[[' → logprob: -14.136889457702637

Token 394: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0780811756849289
    2. '[g' → logprob: -2.8280811309814453
    3. '[c' → logprob: -4.703081130981445
    4. ' [' → logprob: -5.953081130981445
    5. '[row' → logprob: -7.078081130981445
    6. '[line' → logprob: -7.578081130981445
    7. '[new' → logprob: -7.578081130981445
    8. '[list' → logprob: -7.953081130981445
    9. '[array' → logprob: -8.078081130981445
    10. '[group' → logprob: -8.578081130981445

Token 395: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0011387886479496956
    2. '[row' → logprob: -7.001138687133789
    3. ' row' → logprob: -8.751138687133789
    4. 'list' → logprob: -10.001138687133789
    5. '[' → logprob: -10.751138687133789
    6. ' [' → logprob: -13.626138687133789
    7. '[r' → logprob: -14.251138687133789
    8. '   ' → logprob: -16.12613868713379
    9. '[list' → logprob: -16.37613868713379
    10. 'r' → logprob: -16.75113868713379

Token 396: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.0003404687449801713
    2. '.copy' → logprob: -8.000340461730957
    3. '[:' → logprob: -12.375340461730957
    4. '[' → logprob: -14.125340461730957
    5. ' for' → logprob: -17.625341415405273
    6. '[]' → logprob: -17.750341415405273
    7. '[::-' → logprob: -18.125341415405273
    8. 'copy' → logprob: -18.250341415405273
    9. '.' → logprob: -19.000341415405273
    10. '+' → logprob: -19.125341415405273

Token 397: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269402801990509
    2. 'for' → logprob: -2.1269402503967285
    3. '[:]' → logprob: -12.501940727233887
    4. '	for' → logprob: -12.876940727233887
    5. ')' → logprob: -13.126940727233887
    6. '       ' → logprob: -14.001940727233887
    7. '   ' → logprob: -14.251940727233887
    8. ' ' → logprob: -14.251940727233887
    9. ']' → logprob: -14.376940727233887
    10. '           ' → logprob: -14.876940727233887

Token 398: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.005497341509908438
    2. ' row' → logprob: -5.255497455596924
    3. 'g' → logprob: -8.255496978759766
    4. 'grid' → logprob: -13.505496978759766
    5. ' g' → logprob: -13.755496978759766
    6. 'r' → logprob: -14.630496978759766
    7. '(row' → logprob: -15.630496978759766
    8. 'range' → logprob: -15.630496978759766
    9. '_' → logprob: -15.755496978759766
    10. '	row' → logprob: -16.755496978759766

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6336422562599182
    2. 'in' → logprob: -0.7586422562599182
    3. 'g' → logprob: -6.883642196655273
    4. ' g' → logprob: -11.883642196655273
    5. ' ' → logprob: -12.758642196655273
    6. 's' → logprob: -12.758642196655273
    7. '
' → logprob: -13.508642196655273
    8. 'n' → logprob: -14.008642196655273
    9. 'i' → logprob: -15.133642196655273
    10. 'ing' → logprob: -15.258642196655273

Token 400: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0007115975022315979
    2. ' g' → logprob: -7.250711441040039
    3. 'grid' → logprob: -13.375711441040039
    4. '
' → logprob: -17.37571144104004
    5. '[g' → logprob: -18.00071144104004
    6. '	g' → logprob: -18.12571144104004
    7. ' grid' → logprob: -18.75071144104004
    8. '   ' → logprob: -18.87571144104004
    9. '_g' → logprob: -19.25071144104004
    10. 'range' → logprob: -19.87571144104004

Token 401: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.23444634675979614
    2. ']' → logprob: -1.7344462871551514
    3. '               ' → logprob: -3.4844462871551514
    4. ']
' → logprob: -6.6094465255737305
    5. ']

' → logprob: -7.9844465255737305
    6. '           ' → logprob: -9.48444652557373
    7. '       ' → logprob: -10.73444652557373
    8. ' ]
' → logprob: -11.98444652557373
    9. '                   ' → logprob: -12.35944652557373
    10. '			' → logprob: -12.60944652557373

Token 402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013166663702577353
    2. '
' → logprob: -7.251316547393799
    3. '           ' → logprob: -8.126317024230957
    4. '       ' → logprob: -9.126317024230957
    5. ' for' → logprob: -10.126317024230957
    6. '                   ' → logprob: -10.501317024230957
    7. '                
' → logprob: -10.626317024230957
    8. 'for' → logprob: -10.876317024230957
    9. '                       ' → logprob: -11.501317024230957
    10. '<|end|>' → logprob: -11.626317024230957

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.025935865938663483
    2. ' for' → logprob: -3.7759358882904053
    3. '               ' → logprob: -6.150935649871826
    4. '           ' → logprob: -7.525935649871826
    5. '                   ' → logprob: -11.650936126708984
    6. '       ' → logprob: -12.400936126708984
    7. '   ' → logprob: -13.525936126708984
    8. '	for' → logprob: -13.900936126708984
    9. '```' → logprob: -14.275936126708984
    10. '                
' → logprob: -16.400936126708984

Token 404: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004141910932958126
    2. '(x' → logprob: -5.504141807556152
    3. ' x' → logprob: -9.754141807556152
    4. ' (' → logprob: -12.629141807556152
    5. '(' → logprob: -14.629141807556152
    6. 'nx' → logprob: -14.754141807556152
    7. 'cx' → logprob: -15.129141807556152
    8. '(y' → logprob: -15.504141807556152
    9. 'y' → logprob: -15.629141807556152
    10. 'i' → logprob: -15.754141807556152

Token 405: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5762484073638916
    2. ',' → logprob: -0.8262484073638916
    3. 'y' → logprob: -8.201248168945312
    4. ' ,' → logprob: -11.076248168945312
    5. '_,' → logprob: -11.826248168945312
    6. ',
' → logprob: -12.201248168945312
    7. ',_' → logprob: -13.826248168945312
    8. 'n' → logprob: -14.326248168945312
    9. ',row' → logprob: -14.576248168945312
    10. '```' → logprob: -14.701248168945312

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026323752477765083
    2. 'in' → logprob: -3.6513237953186035
    3. ')' → logprob: -11.651323318481445
    4. ' ' → logprob: -12.401323318481445
    5. '<|end|>' → logprob: -12.651323318481445
    6. ',' → logprob: -13.276323318481445
    7. '	in' → logprob: -13.276323318481445
    8. ' ,' → logprob: -14.526323318481445
    9. '_in' → logprob: -14.526323318481445
    10. 'In' → logprob: -14.776323318481445

Token 407: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.005234121344983578
    2. ' comp' → logprob: -5.255234241485596
    3. '	comp' → logprob: -15.755233764648438
    4. '(comp' → logprob: -17.255233764648438
    5. 'com' → logprob: -18.380233764648438
    6. 'c' → logprob: -18.630233764648438
    7. 'component' → logprob: -19.255233764648438
    8. 'cur' → logprob: -19.880233764648438
    9. 'cap' → logprob: -20.255233764648438
    10. '   ' → logprob: -20.380233764648438

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15353456139564514
    2. ':
' → logprob: -2.1535346508026123
    3. '=' → logprob: -4.403534412384033
    4. ' =' → logprob: -5.278534412384033
    5. '<|end|>' → logprob: -6.278534412384033
    6. ']' → logprob: -6.403534412384033
    7. '                   ' → logprob: -6.653534412384033
    8. ' in' → logprob: -6.778534412384033
    9. '):
' → logprob: -7.653534412384033
    10. ']=' → logprob: -7.903534412384033

Token 409: '                   ' (ID: 699)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.291692852973938
    2. '                   ' → logprob: -1.416692852973938
    3. 'new' → logprob: -4.666692733764648
    4. '               ' → logprob: -8.541692733764648
    5. '[new' → logprob: -8.541692733764648
    6. ' =' → logprob: -8.916692733764648
    7. '                    
' → logprob: -8.916692733764648
    8. '                       ' → logprob: -9.166692733764648
    9. '                           ' → logprob: -9.791692733764648
    10. '[' → logprob: -10.416692733764648

Token 410: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3873114585876465
    2. 'new' (adapté à ' new') → logprob: -1.1373114585876465
    3. '                   ' → logprob: -7.8873114585876465
    4. '               ' → logprob: -10.012311935424805
    5. '                       ' → logprob: -12.012311935424805
    6. '[new' → logprob: -12.387311935424805
    7. '	new' → logprob: -12.512311935424805
    8. '   ' → logprob: -13.262311935424805
    9. '           ' → logprob: -14.012311935424805
    10. '_new' → logprob: -14.137311935424805

Token 411: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0007387538789771497
    2. '[y' → logprob: -7.625738620758057
    3. 'g' → logprob: -9.125739097595215
    4. '[g' → logprob: -9.625739097595215
    5. '[' → logprob: -10.125739097595215
    6. '_' → logprob: -11.750739097595215
    7. '```' → logprob: -12.000739097595215
    8. '_[' → logprob: -12.250739097595215
    9. '[x' → logprob: -12.375739097595215
    10. '_y' → logprob: -12.500739097595215

Token 412: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.002189160557463765
    2. '[' → logprob: -6.1271891593933105
    3. '   ' → logprob: -13.627189636230469
    4. 'y' → logprob: -13.627189636230469
    5. ' [' → logprob: -14.627189636230469
    6. '][' → logprob: -14.627189636230469
    7. '```' → logprob: -15.752189636230469
    8. '       ' → logprob: -16.37718963623047
    9. '    ' → logprob: -16.50218963623047
    10. '\[' → logprob: -16.50218963623047

Token 413: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016874190419912338
    2. '[x' → logprob: -4.141874313354492
    3. '[y' → logprob: -7.391874313354492
    4. ']' → logprob: -8.891874313354492
    5. '[' → logprob: -9.766874313354492
    6. ')[' → logprob: -11.141874313354492
    7. ' ][' → logprob: -12.516874313354492
    8. ']][' → logprob: -13.641874313354492
    9. '                   ' → logprob: -13.891874313354492
    10. ' [' → logprob: -14.016874313354492

Token 414: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.000000953674316
    3. ')x' → logprob: -18.5
    4. '<|end|>' → logprob: -19.375
    5. '	x' → logprob: -19.5
    6. '"x' → logprob: -19.875
    7. '[x' → logprob: -20.375
    8. '(x' → logprob: -20.5
    9. ']' → logprob: -20.625
    10. ' ' → logprob: -20.875

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05913268402218819
    2. '=' → logprob: -3.3091325759887695
    3. ']=' → logprob: -4.1841325759887695
    4. ' =' → logprob: -5.1841325759887695
    5. ' ]' → logprob: -10.55913257598877
    6. '=c' → logprob: -12.68413257598877
    7. ')' → logprob: -14.43413257598877
    8. ']
' → logprob: -15.93413257598877
    9. ')=' → logprob: -16.434133529663086
    10. '[' → logprob: -16.434133529663086

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '=c' → logprob: -15.128177642822266
    4. '＝' → logprob: -19.128177642822266
    5. ']=' → logprob: -19.753177642822266
    6. '=

' → logprob: -20.128177642822266
    7. '=C' → logprob: -20.878177642822266
    8. '=
' → logprob: -21.003177642822266
    9. '=cut' → logprob: -21.003177642822266
    10. 'c' → logprob: -21.753177642822266

Token 417: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1002068892121315
    2. ' c' → logprob: -2.3502068519592285
    3. '	c' → logprob: -16.10020637512207
    4. ')c' → logprob: -17.10020637512207
    5. '_c' → logprob: -17.85020637512207
    6. ''' → logprob: -17.85020637512207
    7. ' ' → logprob: -18.72520637512207
    8. '[c' → logprob: -18.97520637512207
    9. '   ' → logprob: -19.10020637512207
    10. '(c' → logprob: -19.22520637512207

Token 418: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25283148884773254
    2. '               ' → logprob: -1.8778314590454102
    3. '  
' → logprob: -3.62783145904541
    4. '                
' → logprob: -3.75283145904541
    5. ' 
' → logprob: -4.00283145904541
    6. '<|end|>' → logprob: -7.87783145904541
    7. '            
' → logprob: -8.12783145904541
    8. '        
' → logprob: -8.25283145904541
    9. '    
' → logprob: -8.25283145904541
    10. '                    
' → logprob: -8.50283145904541

Token 419: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7861276268959045
    2. '               ' → logprob: -1.0361275672912598
    3. '                
' → logprob: -2.6611275672912598
    4. ' 
' → logprob: -2.7861275672912598
    5. '  
' → logprob: -3.5361275672912598
    6. ' new' → logprob: -4.28612756729126
    7. '                    
' → logprob: -5.41112756729126
    8. '<|end|>' → logprob: -5.78612756729126
    9. '
' → logprob: -6.78612756729126
    10. '        
' → logprob: -6.91112756729126

Token 420: ' ng' (ID: 1657)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.28854748606681824
    2. ' new' → logprob: -1.5385475158691406
    3. 'state' → logprob: -3.9135475158691406
    4. 'start' → logprob: -4.538547515869141
    5. ' state' → logprob: -6.163547515869141
    6. 'next' → logprob: -7.288547515869141
    7. ' start' → logprob: -7.538547515869141
    8. '           ' → logprob: -8.41354751586914
    9. 'tuple' → logprob: -8.53854751586914
    10. 't' → logprob: -8.53854751586914

Token 421: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.41907668113708496
    2. ' =' → logprob: -1.669076681137085
    3. 'ew' → logprob: -2.669076681137085
    4. '=' → logprob: -3.294076681137085
    5. 'tuple' → logprob: -4.169076919555664
    6. '_state' → logprob: -4.669076919555664
    7. 'w' → logprob: -5.044076919555664
    8. '_repr' → logprob: -6.169076919555664
    9. '_hash' → logprob: -6.294076919555664
    10. '_' → logprob: -6.419076919555664

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. 'uple' → logprob: -16.60020637512207
    4. '=(' → logprob: -16.85020637512207
    5. ' =(' → logprob: -17.97520637512207
    6. ',' → logprob: -18.72520637512207
    7. '=((' → logprob: -19.22520637512207
    8. ')' → logprob: -19.47520637512207
    9. '＝' → logprob: -19.47520637512207
    10. ' =
' → logprob: -19.72520637512207

Token 423: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0052354102954268456
    2. ' tuple' → logprob: -5.255235195159912
    3. '(tuple' → logprob: -13.38023567199707
    4. 'tu' → logprob: -16.50523567199707
    5. '   ' → logprob: -17.38023567199707
    6. ' ' → logprob: -19.00523567199707
    7. '  ' → logprob: -19.13023567199707
    8. '    ' → logprob: -19.75523567199707
    9. 't' → logprob: -19.88023567199707
    10. 'uple' → logprob: -19.88023567199707

Token 424: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.029781503602862358
    2. 'tuple' → logprob: -3.5297815799713135
    3. '(' → logprob: -10.529781341552734
    4. ' tuple' → logprob: -12.529781341552734
    5. '(map' → logprob: -14.654781341552734
    6. 'tu' → logprob: -15.904781341552734
    7. 'map' → logprob: -17.154781341552734
    8. '(t' → logprob: -17.279781341552734
    9. '[' → logprob: -18.029781341552734
    10. ' (' → logprob: -19.029781341552734

Token 425: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0005623269826173782
    2. '(row' → logprob: -7.5005621910095215
    3. ' row' → logprob: -11.62556266784668
    4. 'r' → logprob: -15.12556266784668
    5. '	row' → logprob: -16.87556266784668
    6. '[row' → logprob: -17.37556266784668
    7. 'new' → logprob: -17.62556266784668
    8. 'line' → logprob: -18.12556266784668
    9. '$row' → logprob: -18.12556266784668
    10. 'rows' → logprob: -19.12556266784668

Token 426: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2010565549135208
    2. 'new' → logprob: -2.451056480407715
    3. 'for' → logprob: -2.701056480407715
    4. ' for' → logprob: -3.701056480407715
    5. '(new' → logprob: -6.201056480407715
    6. '(row' → logprob: -6.701056480407715
    7. 'row' → logprob: -7.451056480407715
    8. ' new' → logprob: -8.701056480407715
    9. ')new' → logprob: -10.076056480407715
    10. 'r' → logprob: -10.701056480407715

Token 427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08510752767324448
    2. ' for' → logprob: -2.5851075649261475
    3. ')' → logprob: -5.085107326507568
    4. 'new' → logprob: -11.585107803344727
    5. ' new' → logprob: -15.585107803344727
    6. ' ' → logprob: -15.710107803344727
    7. '   ' → logprob: -15.835107803344727
    8. '	for' → logprob: -15.835107803344727
    9. '
' → logprob: -16.710107803344727
    10. ' in' → logprob: -17.335107803344727

Token 428: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.31344035267829895
    2. ' row' → logprob: -1.3134403228759766
    3. 'new' → logprob: -9.063440322875977
    4. ' new' → logprob: -9.688440322875977
    5. '	row' → logprob: -14.938440322875977
    6. ' ' → logprob: -15.438440322875977
    7. '(row' → logprob: -16.063440322875977
    8. '=row' → logprob: -17.313440322875977
    9. ',row' → logprob: -17.688440322875977
    10. '[row' → logprob: -18.063440322875977

Token 429: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3871200382709503
    2. ' in' → logprob: -1.137120008468628
    3. 'row' → logprob: -8.887120246887207
    4. 'new' → logprob: -9.137120246887207
    5. ' ' → logprob: -13.762120246887207
    6. ' row' → logprob: -14.387120246887207
    7. ' new' → logprob: -14.387120246887207
    8. '(row' → logprob: -15.512120246887207
    9. ' ' → logprob: -16.13711929321289
    10. '=row' → logprob: -16.26211929321289

Token 430: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00861468818038702
    2. ' new' → logprob: -4.758614540100098
    3. '	new' → logprob: -17.008615493774414
    4. '[new' → logprob: -17.258615493774414
    5. '(new' → logprob: -18.008615493774414
    6. ')new' → logprob: -18.133615493774414
    7. '
' → logprob: -18.258615493774414
    8. '_new' → logprob: -18.508615493774414
    9. '[' → logprob: -18.758615493774414
    10. '```' → logprob: -18.758615493774414

Token 431: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0001612267515156418
    2. 'g' → logprob: -8.750161170959473
    3. 'new' → logprob: -13.125161170959473
    4. '_c' → logprob: -15.750161170959473
    5. '_' → logprob: -16.25016212463379
    6. ')' → logprob: -16.50016212463379
    7. '\' → logprob: -16.75016212463379
    8. '```' → logprob: -16.87516212463379
    9. '(g' → logprob: -17.25016212463379
    10. '[g' → logprob: -17.50016212463379

Token 432: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003213245654478669
    2. ')' → logprob: -5.753213405609131
    3. ')
' → logprob: -10.378212928771973
    4. '               ' → logprob: -12.378212928771973
    5. '           ' → logprob: -15.753212928771973
    6. ')

' → logprob: -16.87821388244629
    7. ' )
' → logprob: -17.75321388244629
    8. ')`
' → logprob: -19.00321388244629
    9. '       ' → logprob: -19.25321388244629
    10. '))
' → logprob: -19.75321388244629

Token 433: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05714752525091171
    2. '<|end|>' → logprob: -3.18214750289917
    3. ' if' → logprob: -5.55714750289917
    4. '                
' → logprob: -5.68214750289917
    5. '                ' → logprob: -6.05714750289917
    6. ' 
' → logprob: -6.55714750289917
    7. '[' → logprob: -7.80714750289917
    8. ' new' → logprob: -8.057147979736328
    9. '<|end|>' → logprob: -8.182147979736328
    10. '
' → logprob: -8.557147979736328

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.589084267616272
    2. ' if' → logprob: -0.839084267616272
    3. '               ' → logprob: -4.339084148406982
    4. '
' → logprob: -12.96408462524414
    5. '                ' → logprob: -12.96408462524414
    6. '	if' → logprob: -13.33908462524414
    7. '                   ' → logprob: -14.21408462524414
    8. '           ' → logprob: -14.33908462524414
    9. '                
' → logprob: -14.46408462524414
    10. 'If' → logprob: -14.58908462524414

Token 435: ' ng' (ID: 1657)
  Prédit: ' ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ng' → logprob: -0.029752103611826897
    2. 'ng' → logprob: -3.529752016067505
    3. '_ng' → logprob: -14.529751777648926
    4. '/ng' → logprob: -15.154751777648926
    5. ''ng' → logprob: -15.529751777648926
    6. '.ng' → logprob: -15.779751777648926
    7. 'ngr' → logprob: -16.404752731323242
    8. ' ' → logprob: -16.654752731323242
    9. ' not' → logprob: -16.654752731323242
    10. '               ' → logprob: -16.904752731323242

Token 436: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.00010402000043541193
    2. '_t' → logprob: -9.750103950500488
    3. '_' → logprob: -10.250103950500488
    4. 'tuple' → logprob: -12.625103950500488
    5. ' _' → logprob: -13.125103950500488
    6. 't' → logprob: -13.250103950500488
    7. '_ng' → logprob: -13.875103950500488
    8. 'g' → logprob: -14.875103950500488
    9. 'ng' → logprob: -15.000103950500488
    10. '_tpl' → logprob: -15.750103950500488

Token 437: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.126930832862854
    2. 'not' → logprob: -2.1269307136535645
    3. '	not' → logprob: -13.126931190490723
    4. ')' → logprob: -14.876931190490723
    5. '_not' → logprob: -15.626931190490723
    6. 'in' → logprob: -16.501930236816406
    7. ':not' → logprob: -16.501930236816406
    8. ' in' → logprob: -16.501930236816406
    9. '<|end|>' → logprob: -18.251930236816406
    10. 'Not' → logprob: -18.501930236816406

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008608191274106503
    2. 'in' → logprob: -5.633608341217041
    3. 'visited' → logprob: -5.758608341217041
    4. ' visited' → logprob: -6.508608341217041
    5. '               ' → logprob: -8.508607864379883
    6. ' not' → logprob: -9.633607864379883
    7. '                   ' → logprob: -9.883607864379883
    8. '           ' → logprob: -11.883607864379883
    9. '<|end|>' → logprob: -12.258607864379883
    10. '                ' → logprob: -12.758607864379883

Token 439: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -5.872261317563243e-05
    2. ' visited' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.625059127807617
    4. '
' → logprob: -16.375059127807617
    5. '           ' → logprob: -16.750059127807617
    6. '       ' → logprob: -17.750059127807617
    7. '               ' → logprob: -18.750059127807617
    8. 'visible' → logprob: -20.000059127807617
    9. ' ' → logprob: -20.750059127807617
    10. 'seen' → logprob: -20.750059127807617

Token 440: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -9.088346359931165e-07
    2. 'states' → logprob: -15.000000953674316
    3. 'States' → logprob: -15.125000953674316
    4. '_' → logprob: -15.875000953674316
    5. ' states' → logprob: -16.75
    6. ' States' → logprob: -17.375
    7. '```' → logprob: -18.5
    8. '_state' → logprob: -18.625
    9. '   ' → logprob: -18.75
    10. 's' → logprob: -19.0

Token 441: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.693564236164093
    2. ':
' → logprob: -0.693564236164093
    3. '                   ' → logprob: -8.568564414978027
    4. '):
' → logprob: -8.943564414978027
    5. '               ' → logprob: -10.693564414978027
    6. ':
' → logprob: -11.193564414978027
    7. '           ' → logprob: -11.318564414978027
    8. '():
' → logprob: -11.443564414978027
    9. ' :
' → logprob: -11.693564414978027
    10. '                       ' → logprob: -11.943564414978027

Token 442: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002784434938803315
    2. ' visited' → logprob: -6.252784252166748
    3. 'visited' → logprob: -7.502784252166748
    4. '               ' → logprob: -8.502784729003906
    5. '                       ' → logprob: -9.752784729003906
    6. '           ' → logprob: -11.127784729003906
    7. '                           ' → logprob: -12.002784729003906
    8. '                    
' → logprob: -12.252784729003906
    9. '```' → logprob: -12.252784729003906
    10. '   ' → logprob: -13.002784729003906

Token 443: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.40674954652786255
    2. 'visited' (adapté à ' visited') → logprob: -1.5317494869232178
    3. '                   ' → logprob: -2.1567494869232178
    4. '                       ' → logprob: -6.406749725341797
    5. ' queue' → logprob: -8.531749725341797
    6. '
' → logprob: -9.281749725341797
    7. '               ' → logprob: -9.406749725341797
    8. '```' → logprob: -9.656749725341797
    9. '                    ' → logprob: -9.906749725341797
    10. 'Visited' → logprob: -10.031749725341797

Token 444: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -4.320199877838604e-07
    2. 'States' → logprob: -16.5
    3. 'states' → logprob: -16.75
    4. '._' → logprob: -16.875
    5. '_state' → logprob: -17.375
    6. '_stats' → logprob: -17.375
    7. '_' → logprob: -17.625
    8. '_tokens' → logprob: -17.875
    9. '.append' → logprob: -18.0
    10. '=_' → logprob: -19.125

Token 445: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.596781946020201e-05
    2. '.' → logprob: -10.000045776367188
    3. ' .' → logprob: -15.500045776367188
    4. 'add' → logprob: -15.750045776367188
    5. '.append' → logprob: -17.250045776367188
    6. '.Add' → logprob: -17.375045776367188
    7. '_add' → logprob: -17.875045776367188
    8. '   ' → logprob: -18.375045776367188
    9. '.update' → logprob: -18.500045776367188
    10. ' add' → logprob: -18.625045776367188

Token 446: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -18.625
    3. '((' → logprob: -20.375
    4. '(
' → logprob: -20.875
    5. '(nd' → logprob: -21.75
    6. '(n' → logprob: -22.25
    7. '(nt' → logprob: -22.75
    8. '(new' → logprob: -23.375
    9. '(nx' → logprob: -24.5
    10. '   ' → logprob: -24.625

Token 447: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -3.4121114822482923e-06
    2. ' ng' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '(' → logprob: -18.250003814697266
    5. '
' → logprob: -18.250003814697266
    6. '_ng' → logprob: -18.375003814697266
    7. 'ngr' → logprob: -19.125003814697266
    8. '           ' → logprob: -19.750003814697266
    9. '       ' → logprob: -19.875003814697266
    10. 'nt' → logprob: -20.125003814697266

Token 448: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.0005070421029813588
    2. 'tuple' → logprob: -7.75050687789917
    3. 'uple' → logprob: -9.500507354736328
    4. 'Tuple' → logprob: -14.500507354736328
    5. '(tuple' → logprob: -14.875507354736328
    6. 't' → logprob: -15.625507354736328
    7. '_t' → logprob: -16.125507354736328
    8. '<Tuple' → logprob: -16.250507354736328
    9. 'tu' → logprob: -16.500507354736328
    10. ' tuple' → logprob: -16.625507354736328

Token 449: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.848548948764801
    2. '                   ' → logprob: -0.973548948764801
    3. ')
' → logprob: -1.7235488891601562
    4. '
' → logprob: -4.848548889160156
    5. ',' → logprob: -5.598548889160156
    6. '               ' → logprob: -6.098548889160156
    7. '				' → logprob: -7.598548889160156
    8. '           ' → logprob: -8.348548889160156
    9. '                    
' → logprob: -8.348548889160156
    10. ',
' → logprob: -8.473548889160156

Token 450: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28821635246276855
    2. '                   ' → logprob: -1.6632163524627686
    3. '				' → logprob: -4.038216590881348
    4. '<|end|>' → logprob: -5.288216590881348
    5. ' queue' → logprob: -5.413216590881348
    6. '					
' → logprob: -5.538216590881348
    7. '```' → logprob: -5.538216590881348
    8. '(queue' → logprob: -5.538216590881348
    9. '                    
' → logprob: -5.538216590881348
    10. 'queue' → logprob: -5.538216590881348

Token 451: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.006715370807796717
    2. ' queue' → logprob: -5.006715297698975
    3. '       ' → logprob: -17.631715774536133
    4. '	queue' → logprob: -17.756715774536133
    5. '(queue' → logprob: -18.381715774536133
    6. '   ' → logprob: -18.631715774536133
    7. 'que' → logprob: -19.631715774536133
    8. '.queue' → logprob: -19.631715774536133
    9. '           ' → logprob: -19.756715774536133
    10. '                   ' → logprob: -20.256715774536133

Token 452: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.9623810658231378e-05
    2. '.' → logprob: -10.875020027160645
    3. '.enqueue' → logprob: -15.375020027160645
    4. '.extend' → logprob: -15.500020027160645
    5. 'append' → logprob: -16.500019073486328
    6. '.app' → logprob: -16.750019073486328
    7. '.p' → logprob: -17.000019073486328
    8. '.put' → logprob: -17.625019073486328
    9. ' .' → logprob: -18.000019073486328
    10. ').' → logprob: -18.000019073486328

Token 453: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474346786737442
    2. '((' → logprob: -0.9743467569351196
    3. ' (' → logprob: -8.349347114562988
    4. '(new' → logprob: -10.474347114562988
    5. ' ((' → logprob: -12.349347114562988
    6. '```' → logprob: -15.099347114562988
    7. '(
' → logprob: -16.224346160888672
    8. '(((' → logprob: -16.474346160888672
    9. '(('' → logprob: -16.724346160888672
    10. '(([' → logprob: -17.349346160888672

Token 454: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0003918271977454424
    2. ' new' → logprob: -8.000391960144043
    3. '(new' → logprob: -9.875391960144043
    4. '[new' → logprob: -12.250391960144043
    5. ')new' → logprob: -16.500391006469727
    6. '	new' → logprob: -16.625391006469727
    7. '$new' → logprob: -17.375391006469727
    8. ',new' → logprob: -17.375391006469727
    9. '   ' → logprob: -17.750391006469727
    10. '.new' → logprob: -18.250391006469727

Token 455: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -3.128163257315464e-07
    2. 'g' → logprob: -15.375
    3. '(g' → logprob: -17.625
    4. 'new' → logprob: -17.75
    5. '(new' → logprob: -18.375
    6. '```' → logprob: -18.625
    7. ' _' → logprob: -18.875
    8. '[g' → logprob: -19.125
    9. ',' → logprob: -19.5
    10. '_' → logprob: -19.625

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.000006675720215
    3. '‌,' → logprob: -16.7500057220459
    4. ',
' → logprob: -17.2500057220459
    5. '   ' → logprob: -18.0000057220459
    6. '),' → logprob: -18.1250057220459
    7. '`,' → logprob: -18.2500057220459
    8. '```' → logprob: -18.3750057220459
    9. '	' → logprob: -19.1250057220459
    10. ',c' → logprob: -19.5000057220459

Token 457: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.3868710398674011
    2. ' steps' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.386871337890625
    4. 'step' → logprob: -18.511871337890625
    5. ' ' → logprob: -19.511871337890625
    6. '
' → logprob: -19.886871337890625
    7. '.steps' → logprob: -20.136871337890625
    8. '_steps' → logprob: -20.261871337890625
    9. 'Steps' → logprob: -20.511871337890625
    10. '       ' → logprob: -20.511871337890625

Token 458: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048587486147880554
    2. ' +' → logprob: -3.0485875606536865
    3. '＋' → logprob: -16.548587799072266
    4. ' plus' → logprob: -17.923587799072266
    5. '1' → logprob: -18.048587799072266
    6. ' ' → logprob: -18.548587799072266
    7. '+
' → logprob: -18.548587799072266
    8. '```' → logprob: -18.548587799072266
    9. ' ' → logprob: -18.673587799072266
    10. '   ' → logprob: -19.548587799072266

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -18.500019073486328
    4. ')' → logprob: -19.125019073486328
    5. '   ' → logprob: -19.125019073486328
    6. '))' → logprob: -21.375019073486328
    7. '
' → logprob: -21.375019073486328
    8. '           ' → logprob: -21.625019073486328
    9. '                   ' → logprob: -22.500019073486328
    10. '  ' → logprob: -22.500019073486328

Token 460: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000206401280593127
    2. '))
' → logprob: -8.500205993652344
    3. ')' → logprob: -12.750205993652344
    4. ' ))' → logprob: -16.750205993652344
    5. ')))' → logprob: -18.000205993652344
    6. '))

' → logprob: -18.375205993652344
    7. '))
' → logprob: -18.625205993652344
    8. '       ' → logprob: -19.500205993652344
    9. ')
' → logprob: -19.625205993652344
    10. '           ' → logprob: -19.750205993652344

Token 461: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010061351349577308
    2. '
' → logprob: -7.376006126403809
    3. 'main' → logprob: -8.126006126403809
    4. ' if' → logprob: -10.001006126403809
    5. '```' → logprob: -11.376006126403809
    6. '  
' → logprob: -12.001006126403809
    7. '    
' → logprob: -12.001006126403809
    8. '<|end|>' → logprob: -12.251006126403809
    9. '\n' → logprob: -12.751006126403809
    10. ' 
' → logprob: -13.126006126403809

Token 462: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3139238953590393
    2. ' __' → logprob: -1.3139238357543945
    3. '_' → logprob: -7.6889238357543945
    4. ' ' → logprob: -9.563923835754395
    5. '_name' → logprob: -9.938923835754395
    6. 'name' → logprob: -10.063923835754395
    7. '___' → logprob: -10.813923835754395
    8. 'Name' → logprob: -12.188923835754395
    9. ' ' → logprob: -12.313923835754395
    10. ' ' → logprob: -12.938923835754395

Token 463: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009947025682777166
    2. '==' → logprob: -7.875994682312012
    3. ' ==' → logprob: -8.000994682312012
    4. ' __' → logprob: -8.500994682312012
    5. '_' → logprob: -10.875994682312012
    6. 'name' → logprob: -11.125994682312012
    7. '__.__' → logprob: -11.125994682312012
    8. '__[' → logprob: -12.000994682312012
    9. '__.' → logprob: -12.125994682312012
    10. '.__' → logprob: -12.875994682312012

Token 464: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.469590491382405e-05
    2. '__.__' → logprob: -9.62507438659668
    3. '==' → logprob: -12.12507438659668
    4. '___' → logprob: -14.25007438659668
    5. '__.' → logprob: -14.37507438659668
    6. '____' → logprob: -14.37507438659668
    7. '__('' → logprob: -14.62507438659668
    8. '__["' → logprob: -15.25007438659668
    9. '__
' → logprob: -15.62507438659668
    10. '=="' → logprob: -16.00007438659668

Token 465: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006479218602180481
    2. ' ==' → logprob: -5.506479263305664
    3. '==' → logprob: -6.506479263305664
    4. '=='' → logprob: -7.756479263305664
    5. '=="' → logprob: -8.381479263305664
    6. '_' → logprob: -9.506479263305664
    7. '___' → logprob: -10.131479263305664
    8. '__.__' → logprob: -10.131479263305664
    9. '"' → logprob: -11.006479263305664
    10. '____' → logprob: -11.256479263305664

Token 466: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018161412328481674
    2. ''' → logprob: -4.018161296844482
    3. '__' → logprob: -11.51816177368164
    4. ' "__' → logprob: -13.76816177368164
    5. ''"' → logprob: -15.26816177368164
    6. '"name' → logprob: -16.01816177368164
    7. '"user' → logprob: -17.39316177368164
    8. ' '__' → logprob: -17.39316177368164
    9. '"class' → logprob: -17.39316177368164
    10. '"'' → logprob: -17.76816177368164

Token 467: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009012157097458839
    2. '__' → logprob: -7.500901222229004
    3. 'name' → logprob: -8.000901222229004
    4. ''' → logprob: -11.625901222229004
    5. '_main' → logprob: -12.750901222229004
    6. '"' → logprob: -15.000901222229004
    7. ''name' → logprob: -15.000901222229004
    8. ' main' → logprob: -15.250901222229004
    9. 'ma' → logprob: -16.625900268554688
    10. 'm' → logprob: -16.875900268554688

Token 468: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008729210123419762
    2. '__' → logprob: -4.758728981018066
    3. '':' → logprob: -9.883728981018066
    4. '__":
' → logprob: -10.633728981018066
    5. ':' → logprob: -11.008728981018066
    6. '__:' → logprob: -11.633728981018066
    7. '':
' → logprob: -11.883728981018066
    8. '_' → logprob: -13.008728981018066
    9. '():
' → logprob: -13.258728981018066
    10. ''' → logprob: -14.508728981018066

Token 469: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.45076867938041687
    2. '   ' → logprob: -1.4507687091827393
    3. ' main' → logprob: -2.0757687091827393
    4. '	main' → logprob: -5.95076847076416
    5. '(main' → logprob: -8.82576847076416
    6. '    
' → logprob: -9.07576847076416
    7. '_main' → logprob: -9.45076847076416
    8. '
' → logprob: -10.32576847076416
    9. '```' → logprob: -10.82576847076416
    10. '<|end|>' → logprob: -12.45076847076416

Token 470: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -23.25
    5. 'import' → logprob: -25.875
    6. '(main' → logprob: -26.125
    7. '.main' → logprob: -26.125
    8. '_main' → logprob: -26.625
    9. 'Main' → logprob: -27.375
    10. '    
' → logprob: -29.75

Token 471: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 469
Tokens correctement prédits (1ère position, stricte): 231
Tokens correctement prédits (1ère position, avec adaptation): 249
Tokens correctement prédits (top 10): 423
Précision stricte (1ère position): 49.25%
Précision adaptée (1ère position): 53.09%
Précision (top 10): 90.19%
================================================================================
