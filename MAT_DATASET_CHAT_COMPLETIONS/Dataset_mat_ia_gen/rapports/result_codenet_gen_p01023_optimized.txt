================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

H,W,N=map(int,input().split())
grid=[list(input()) for _ in range(H)]

# Directions: up, down, left, right
directions=[(-1,0),(1,0),(0,-1),(0,1)]

# Find positions of head 'S' and bodies 'a','b','c','d','e' in order, and food positions indexed by number
pos_dict={}
for i in range(H):
    for j in range(W):
        c=grid[i][j]
        if c=='S' or c in "abcde":
            pos_dict[c]=(i,j)
        elif c.isdigit():
            pos_dict[int(c)]=(i,j)

# Build worm body positions list from 'S' then 'a'.. as per input
body_chars=['S','a','b','c','d','e']
worm_body=[]
for ch in body_chars:
    if ch in pos_dict:
        worm_body.append(pos_dict[ch])

# Precompute food targets in order 1..N
foods=[pos_dict[i] for i in range(1,N+1)]

def is_valid(r,c):
    return 0<=r<H and 0<=c<W and grid[r][c]!='#'

from sys import maxsize
visited=set()
# State: (head_r, head_c, (body_r1, body_c1, ..., body_r5, body_c5), food_index)
start=(worm_body[0], tuple(worm_body[1:]), 0)
visited.add((worm_body[0], tuple(worm_body[1:]), 0))
queue=deque()
queue.append( (worm_body[0], tuple(worm_body[1:]), 0, 0) ) # head_pos, body_positions, food_index, steps

while queue:
    head, body, fi, steps=queue.popleft()
    if fi==N:
        print(steps)
        break
    for dr,dc in directions:
        nh,nc=head[0]+dr, head[1]+dc
        if not is_valid(nh,nc):
            continue
        
        # Check if nh,nc is in worm body or obstacles (before movement)
        if (nh,nc) in body:
            # The only exception is if tail moves out from this cell after movement
            # Because worm moves forward, tail leaves its cell, so moving into tail's current cell is allowed
            tail=body[-1] if body else None
            if tail!=(nh,nc):
                continue
        
        # New body positions after movement
        new_body=[head]+list(body[:-1]) if body else [head]
        new_body=tuple(new_body)
        
        # Check collision: head not on body after move
        if (nh,nc) in new_body:
            continue
        
        # Check if on current food
        new_fi=fi
        if fi<N and (nh,nc)==foods[fi]:
            new_fi=fi+1
        
        state=((nh,nc), new_body, new_fi)
        if state in visited:
            continue
        visited.add(state)
        queue.append( ((nh,nc), new_body, new_fi, steps+1) )
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.0524401664733887
    2. 'deque' → logprob: -1.3024401664733887
    3. ' defaultdict' → logprob: -1.4274401664733887
    4. 'default' → logprob: -2.9274401664733887
    5. ' abc' → logprob: -2.9274401664733887
    6. 'Counter' → logprob: -4.427440166473389
    7. ' deque' → logprob: -4.552440166473389
    8. ' Counter' → logprob: -5.552440166473389
    9. 'named' → logprob: -6.177440166473389
    10. '```' → logprob: -6.427440166473389

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014868208207190037
    2. '\' → logprob: -5.639868259429932
    3. '\(' → logprob: -5.639868259429932
    4. '.' → logprob: -6.014868259429932
    5. '[' → logprob: -6.889868259429932
    6. '\n' → logprob: -7.264868259429932
    7. ' (' → logprob: -7.389868259429932
    8. '```' → logprob: -7.389868259429932
    9. '(
' → logprob: -7.889868259429932
    10. '\[' → logprob: -7.889868259429932

Token 5: 'H' (ID: 39)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1184166818857193
    2. 'd' → logprob: -2.4934167861938477
    3. '[' → logprob: -5.118416786193848
    4. 'a' → logprob: -5.618416786193848
    5. '.' → logprob: -5.993416786193848
    6. ',' → logprob: -5.993416786193848
    7. '\' → logprob: -6.118416786193848
    8. '```' → logprob: -6.243416786193848
    9. '`' → logprob: -6.618416786193848
    10. '=' → logprob: -6.618416786193848

Token 6: ',W' (ID: 117252)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44880005717277527
    2. 'e' → logprob: -1.0738000869750977
    3. ' =' → logprob: -4.198800086975098
    4. '.' → logprob: -6.573800086975098
    5. '(' → logprob: -7.323800086975098
    6. '[' → logprob: -7.823800086975098
    7. '_' → logprob: -7.948800086975098
    8. ':' → logprob: -7.948800086975098
    9. '.append' → logprob: -7.948800086975098
    10. 'T' → logprob: -8.198800086975098

Token 7: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3886825442314148
    2. '=' → logprob: -1.2636826038360596
    3. ',' → logprob: -3.3886826038360596
    4. ' ' → logprob: -6.0136823654174805
    5. '<|end|>' → logprob: -6.5136823654174805
    6. ')' → logprob: -7.1386823654174805
    7. ' ,' → logprob: -7.3886823654174805
    8. '[' → logprob: -9.01368236541748
    9. ' =
' → logprob: -10.26368236541748
    10. '.' → logprob: -10.76368236541748

Token 8: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524968385696411
    2. ' =' → logprob: -1.5024968385696411
    3. ',' → logprob: -7.502496719360352
    4. '=
' → logprob: -12.127496719360352
    5. ' =
' → logprob: -12.752496719360352
    6. '=

' → logprob: -13.127496719360352
    7. '=int' → logprob: -14.252496719360352
    8. '```' → logprob: -14.502496719360352
    9. ' ,' → logprob: -14.627496719360352
    10. '`' → logprob: -14.627496719360352

Token 9: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2519535422325134
    2. ' map' → logprob: -1.5019536018371582
    3. 'list' → logprob: -11.126953125
    4. 'input' → logprob: -12.251953125
    5. ' list' → logprob: -12.876953125
    6. ' input' → logprob: -14.251953125
    7. ' ' → logprob: -14.626953125
    8. '(map' → logprob: -15.126953125
    9. '	map' → logprob: -15.251953125
    10. '0' → logprob: -15.626953125

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06429976224899292
    2. '(' → logprob: -2.8142998218536377
    3. '(str' → logprob: -7.189299583435059
    4. 'int' → logprob: -7.189299583435059
    5. '(lambda' → logprob: -7.939299583435059
    6. '(input' → logprob: -8.314299583435059
    7. '<int' → logprob: -10.064299583435059
    8. '(len' → logprob: -10.314299583435059
    9. '[int' → logprob: -10.564299583435059
    10. '(
' → logprob: -10.939299583435059

Token 11: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.05106096714735031
    2. ',' → logprob: -3.176060914993286
    3. ',int' → logprob: -5.176061153411865
    4. '(input' → logprob: -6.426061153411865
    5. '(' → logprob: -8.676060676574707
    6. 'input' → logprob: -8.801060676574707
    7. ',str' → logprob: -8.926060676574707
    8. ',list' → logprob: -10.051060676574707
    9. ',(' → logprob: -10.176060676574707
    10. ',data' → logprob: -10.426060676574707

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6037303805351257
    2. '())' → logprob: -1.1037304401397705
    3. '()' → logprob: -2.6037304401397705
    4. ')' → logprob: -3.1037304401397705
    5. '(),' → logprob: -6.603730201721191
    6. '());' → logprob: -7.603730201721191
    7. '()),' → logprob: -8.728730201721191
    8. '();)' → logprob: -8.853730201721191
    9. '()>' → logprob: -8.978730201721191
    10. '();' → logprob: -9.603730201721191

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.20734242349863e-05
    2. 'strip' → logprob: -9.625072479248047
    3. 'rstrip' → logprob: -12.375072479248047
    4. 'read' → logprob: -13.500072479248047
    5. '(split' → logprob: -16.125072479248047
    6. ')' → logprob: -16.250072479248047
    7. ' split' → logprob: -16.375072479248047
    8. 'spl' → logprob: -18.125072479248047
    9. 's' → logprob: -18.250072479248047
    10. 'startswith' → logprob: -18.875072479248047

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021756007336080074
    2. '))' → logprob: -6.252175807952881
    3. '`)' → logprob: -8.877175331115723
    4. '())' → logprob: -10.627175331115723
    5. '')' → logprob: -10.752175331115723
    6. '),' → logprob: -11.127175331115723
    7. '(' → logprob: -11.127175331115723
    8. ')`' → logprob: -11.752175331115723
    9. ')))' → logprob: -12.627175331115723
    10. '```' → logprob: -12.752175331115723

Token 15: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.2981359958648682
    2. 'dp' → logprob: -1.5481359958648682
    3. 'graph' → logprob: -2.173135995864868
    4. 'field' → logprob: -2.173135995864868
    5. 'queue' → logprob: -2.548135995864868
    6. 'q' → logprob: -2.798135995864868
    7. 'deque' → logprob: -3.048135995864868
    8. 'd' → logprob: -3.548135995864868
    9. 'dq' → logprob: -4.173135757446289
    10. 'road' → logprob: -4.923135757446289

Token 16: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011632794514298439
    2. '=' → logprob: -4.886632919311523
    3. '[:]' → logprob: -6.511632919311523
    4. '[]' → logprob: -7.386632919311523
    5. ' =' → logprob: -7.636632919311523
    6. '.' → logprob: -8.386632919311523
    7. '[][]' → logprob: -8.511632919311523
    8. '[
' → logprob: -8.886632919311523
    9. '\[' → logprob: -9.136632919311523
    10. '```' → logprob: -9.261632919311523

Token 17: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16025307774543762
    2. 'input' → logprob: -1.9102530479431152
    3. ' list' → logprob: -11.535253524780273
    4. '[input' → logprob: -11.785253524780273
    5. ' input' → logprob: -11.910253524780273
    6. '[list' → logprob: -13.160253524780273
    7. '(list' → logprob: -13.660253524780273
    8. '(input' → logprob: -14.410253524780273
    9. '<input' → logprob: -15.160253524780273
    10. '[]' → logprob: -15.410253524780273

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026584045961499214
    2. '(map' → logprob: -3.7765841484069824
    3. '(' → logprob: -5.776584148406982
    4. '(str' → logprob: -8.526583671569824
    5. '(int' → logprob: -10.901583671569824
    6. '()' → logprob: -11.651583671569824
    7. 'input' → logprob: -13.026583671569824
    8. '=input' → logprob: -13.901583671569824
    9. '(range' → logprob: -14.651583671569824
    10. '(line' → logprob: -14.651583671569824

Token 19: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000741134281270206
    2. '().' → logprob: -7.750741004943848
    3. '()' → logprob: -8.500741004943848
    4. '()]' → logprob: -9.625741004943848
    5. '()))' → logprob: -10.500741004943848
    6. '());' → logprob: -11.875741004943848
    7. '()),' → logprob: -13.125741004943848
    8. '();)' → logprob: -13.750741004943848
    9. '()>' → logprob: -14.000741004943848
    10. ' ())' → logprob: -14.500741004943848

Token 20: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5082024931907654
    2. '()' → logprob: -1.2582025527954102
    3. '())' → logprob: -2.38320255279541
    4. '()]' → logprob: -4.50820255279541
    5. 'for' → logprob: -4.88320255279541
    6. ')]' → logprob: -6.50820255279541
    7. ' for' → logprob: -6.88320255279541
    8. ']' → logprob: -7.63320255279541
    9. '(' → logprob: -8.25820255279541
    10. '().' → logprob: -10.25820255279541

Token 21: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0445803739130497
    2. '_' → logprob: -3.7945804595947266
    3. ' _' → logprob: -4.044580459594727
    4. '_range' → logprob: -6.044580459594727
    5. '(range' → logprob: -7.419580459594727
    6. 'range' → logprob: -7.669580459594727
    7. ' in' → logprob: -9.419580459594727
    8. '	range' → logprob: -10.669580459594727
    9. ' ' → logprob: -10.919580459594727
    10. ' i' → logprob: -11.169580459594727

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24080699682235718
    2. 'in' → logprob: -1.615807056427002
    3. 'range' → logprob: -4.240807056427002
    4. ' range' → logprob: -7.240807056427002
    5. ' ' → logprob: -9.240806579589844
    6. '_' → logprob: -10.615806579589844
    7. 'H' → logprob: -11.865806579589844
    8. '(range' → logprob: -12.115806579589844
    9. ')' → logprob: -13.115806579589844
    10. '<|end|>' → logprob: -13.240806579589844

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020377879263833165
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -16.00020408630371
    4. '	range' → logprob: -16.25020408630371
    5. '_range' → logprob: -18.37520408630371
    6. '.range' → logprob: -18.37520408630371
    7. ')' → logprob: -19.00020408630371
    8. '```' → logprob: -19.50020408630371
    9. '[' → logprob: -19.62520408630371
    10. 'rage' → logprob: -19.62520408630371

Token 24: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.011076359078288078
    2. '(N' → logprob: -5.0110764503479
    3. '(' → logprob: -5.5110764503479
    4. '(W' → logprob: -8.136075973510742
    5. 'H' → logprob: -12.386075973510742
    6. ')' → logprob: -13.136075973510742
    7. '(Q' → logprob: -13.511075973510742
    8. '((' → logprob: -13.636075973510742
    9. '(int' → logprob: -13.761075973510742
    10. '(M' → logprob: -14.011075973510742

Token 25: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.611323624383658e-05
    2. ')' → logprob: -9.750065803527832
    3. ']' → logprob: -12.375065803527832
    4. ')])' → logprob: -13.375065803527832
    5. ')],' → logprob: -14.125065803527832
    6. '])]' → logprob: -14.875065803527832
    7. '')]' → logprob: -15.750065803527832
    8. '))' → logprob: -15.875065803527832
    9. '])' → logprob: -16.12506675720215
    10. ')][' → logprob: -16.25006675720215

Token 26: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5291427969932556
    2. 'dp' → logprob: -1.7791428565979004
    3. 'steps' → logprob: -2.5291428565979004
    4. 'visited' → logprob: -3.6541428565979004
    5. 'd' → logprob: -3.7791428565979004
    6. 'start' → logprob: -4.1541428565979
    7. 'distance' → logprob: -4.1541428565979
    8. 'from' → logprob: -4.4041428565979
    9. 'goal' → logprob: -4.6541428565979
    10. 'S' → logprob: -4.9041428565979

Token 27: ' Directions' (ID: 85422)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22205446660518646
    2. 'from' → logprob: -2.8470544815063477
    3. 'dq' → logprob: -3.4720544815063477
    4. 'dp' → logprob: -3.9720544815063477
    5. 'start' → logprob: -4.097054481506348
    6. 'd' → logprob: -4.097054481506348
    7. 'visited' → logprob: -4.472054481506348
    8. 'q' → logprob: -4.722054481506348
    9. ' dist' → logprob: -4.972054481506348
    10. 'distance' → logprob: -5.222054481506348

Token 28: ':' (ID: 25)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6759477257728577
    2. 'dire' → logprob: -1.675947666168213
    3. ' =' → logprob: -1.925947666168213
    4. 'd' → logprob: -2.425947666168213
    5. ' directions' → logprob: -4.175947666168213
    6. ' dx' → logprob: -4.300947666168213
    7. 'dirs' → logprob: -4.675947666168213
    8. 'dy' → logprob: -5.050947666168213
    9. 'dr' → logprob: -5.300947666168213
    10. 'di' → logprob: -5.550947666168213

Token 29: ' up' (ID: 869)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -1.2760710716247559
    2. ' dx' → logprob: -1.4010710716247559
    3. ' [(' → logprob: -1.7760710716247559
    4. 'dx' → logprob: -2.026071071624756
    5. '[(' → logprob: -2.776071071624756
    6. 'dire' → logprob: -3.526071071624756
    7. ' (' → logprob: -3.776071071624756
    8. 'd' → logprob: -4.526071071624756
    9. ' dr' → logprob: -4.526071071624756
    10. ' dy' → logprob: -4.526071071624756

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014105896698310971
    2. ' ,' → logprob: -7.126410484313965
    3. ',-' → logprob: -8.626410484313965
    4. 'dx' → logprob: -9.126410484313965
    5. ',d' → logprob: -9.626410484313965
    6. '(' → logprob: -9.751410484313965
    7. ',(' → logprob: -10.126410484313965
    8. '(-' → logprob: -10.501410484313965
    9. '[' → logprob: -10.626410484313965
    10. ' (-' → logprob: -11.626410484313965

Token 31: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.47459954023361206
    2. ' down' → logprob: -0.9745995402336121
    3. '1' → logprob: -8.224599838256836
    4. 'right' → logprob: -8.974599838256836
    5. ' right' → logprob: -9.974599838256836
    6. '_down' → logprob: -10.599599838256836
    7. ' ' → logprob: -10.849599838256836
    8. '0' → logprob: -11.349599838256836
    9. 'left' → logprob: -11.349599838256836
    10. ',' → logprob: -12.349599838256836

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004330660216510296
    2. 'dx' → logprob: -6.129330635070801
    3. ' ,' → logprob: -6.629330635070801
    4. ',d' → logprob: -8.0043306350708
    5. '[' → logprob: -9.2543306350708
    6. ',(' → logprob: -9.5043306350708
    7. '```' → logprob: -9.7543306350708
    8. ',
' → logprob: -10.2543306350708
    9. ',-' → logprob: -10.5043306350708
    10. ',[' → logprob: -10.8793306350708

Token 33: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.06290584802627563
    2. 'left' → logprob: -2.812905788421631
    3. ' right' → logprob: -7.187905788421631
    4. 'right' → logprob: -9.687906265258789
    5. ',left' → logprob: -9.812906265258789
    6. '_left' → logprob: -11.062906265258789
    7. ' lef' → logprob: -11.312906265258789
    8. '	left' → logprob: -12.312906265258789
    9. ' up' → logprob: -12.437906265258789
    10. '0' → logprob: -12.562906265258789

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00723755219951272
    2. ' ,' → logprob: -5.132237434387207
    3. ',d' → logprob: -7.257237434387207
    4. ',right' → logprob: -8.507237434387207
    5. 'dx' → logprob: -9.132237434387207
    6. 's' → logprob: -9.632237434387207
    7. ' and' → logprob: -10.132237434387207
    8. ',[' → logprob: -10.632237434387207
    9. ',(' → logprob: -10.882237434387207
    10. ',-' → logprob: -11.007237434387207

Token 35: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.38695329427719116
    2. 'right' → logprob: -1.136953353881836
    3. ',right' → logprob: -9.636953353881836
    4. '	right' → logprob: -11.761953353881836
    5. '```' → logprob: -12.761953353881836
    6. '_right' → logprob: -12.761953353881836
    7. '[right' → logprob: -14.261953353881836
    8. 'Right' → logprob: -14.261953353881836
    9. '1' → logprob: -15.011953353881836
    10. ':right' → logprob: -15.136953353881836

Token 36: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2763479948043823
    2. 'dirs' → logprob: -1.7763479948043823
    3. 'dx' → logprob: -2.901348114013672
    4. 'd' → logprob: -5.526348114013672
    5. 'dy' → logprob: -5.651348114013672
    6. 'dir' → logprob: -5.776348114013672
    7. 'dr' → logprob: -6.276348114013672
    8. 'D' → logprob: -6.526348114013672
    9. 'moves' → logprob: -6.651348114013672
    10. '```' → logprob: -7.151348114013672

Token 37: 'dire' (ID: 57765)
  Prédit: 'dire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3574971854686737
    2. 'dirs' → logprob: -1.482497215270996
    3. 'dx' → logprob: -2.857497215270996
    4. 'dr' → logprob: -4.732497215270996
    5. 'd' → logprob: -5.982497215270996
    6. 'dy' → logprob: -6.107497215270996
    7. 'dir' → logprob: -6.982497215270996
    8. 'moves' → logprob: -7.107497215270996
    9. ' directions' → logprob: -7.857497215270996
    10. '```' → logprob: -8.857497215270996

Token 38: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.0003597760514821857
    2. 'c' → logprob: -8.625359535217285
    3. 'CTIONS' → logprob: -9.375359535217285
    4. 'ction' → logprob: -9.375359535217285
    5. 'ct' → logprob: -12.375359535217285
    6. 'cts' → logprob: -12.750359535217285
    7. '```' → logprob: -13.500359535217285
    8. '#' → logprob: -14.375359535217285
    9. 'ections' → logprob: -14.750359535217285
    10. '=' → logprob: -15.375359535217285

Token 39: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00045783669338561594
    2. '=' → logprob: -7.750457763671875
    3. ' =[' → logprob: -10.875457763671875
    4. '[' → logprob: -12.125457763671875
    5. '[:]' → logprob: -14.000457763671875
    6. '=[' → logprob: -14.000457763671875
    7. '=[]' → logprob: -14.750457763671875
    8. '=['' → logprob: -16.000457763671875
    9. ' =)' → logprob: -16.250457763671875
    10. 's' → logprob: -16.750457763671875

Token 40: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0024779161904007196
    2. '(' → logprob: -6.002478122711182
    3. '[-' → logprob: -13.502477645874023
    4. ' (-' → logprob: -14.252477645874023
    5. '-' → logprob: -16.627477645874023
    6. ' (' → logprob: -16.877477645874023
    7. '[' → logprob: -17.002477645874023
    8. '(up' → logprob: -17.377477645874023
    9. ' ' → logprob: -19.127477645874023
    10. '(+' → logprob: -19.502477645874023

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. '１' → logprob: -21.0
    4. '১' → logprob: -21.625
    5. '-' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '0' → logprob: -22.125
    8. '2' → logprob: -22.25
    9. '१' → logprob: -22.25
    10. '۱' → logprob: -22.375

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. '0' → logprob: -10.875038146972656
    3. ' ,' → logprob: -10.875038146972656
    4. '),' → logprob: -16.875038146972656
    5. '),(' → logprob: -17.000038146972656
    6. ',),' → logprob: -17.000038146972656
    7. '<|end|>' → logprob: -17.375038146972656
    8. '‌,' → logprob: -17.375038146972656
    9. ' ' → logprob: -18.000038146972656
    10. '```' → logprob: -18.000038146972656

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -19.125003814697266
    4. '۰' → logprob: -20.500003814697266
    5. '０' → logprob: -21.500003814697266
    6. '```' → logprob: -22.125003814697266
    7. '),' → logprob: -22.875003814697266
    8. '٠' → logprob: -23.000003814697266
    9. '00' → logprob: -23.125003814697266
    10. '1' → logprob: -23.812503814697266

Token 44: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07923278957605362
    2. '),(' → logprob: -2.579232692718506
    3. ')' → logprob: -8.204233169555664
    4. ' ),' → logprob: -10.079233169555664
    5. '),
' → logprob: -10.704233169555664
    6. '),

' → logprob: -13.204233169555664
    7. ',),' → logprob: -13.704233169555664
    8. ')]' → logprob: -14.079233169555664
    9. ',' → logprob: -14.454233169555664
    10. ')],' → logprob: -15.329233169555664

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '+' → logprob: -16.000001907348633
    4. '0' → logprob: -16.375001907348633
    5. '-' → logprob: -16.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. ')' → logprob: -17.937501907348633
    8. ',' → logprob: -18.500001907348633
    9. '１' → logprob: -18.687501907348633
    10. '

' → logprob: -19.000001907348633

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018506382184568793
    2. '0' → logprob: -8.625185012817383
    3. ' ,' → logprob: -12.125185012817383
    4. ' ' → logprob: -17.750185012817383
    5. '```' → logprob: -18.625185012817383
    6. '‌,' → logprob: -20.000185012817383
    7. '<|end|>' → logprob: -20.000185012817383
    8. ')' → logprob: -20.750185012817383
    9. '),(' → logprob: -21.250185012817383
    10. '

' → logprob: -21.375185012817383

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '۰' → logprob: -18.375003814697266
    4. '-' → logprob: -19.000003814697266
    5. '```' → logprob: -19.000003814697266
    6. '1' → logprob: -19.937503814697266
    7. '０' → logprob: -20.062503814697266
    8. ',' → logprob: -20.375003814697266
    9. '   ' → logprob: -20.562503814697266
    10. ')' → logprob: -20.625003814697266

Token 48: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0019425610080361366
    2. '),' → logprob: -6.2519426345825195
    3. ' ),' → logprob: -12.00194263458252
    4. ')' → logprob: -12.00194263458252
    5. ',' → logprob: -14.37694263458252
    6. '0' → logprob: -14.62694263458252
    7. '(' → logprob: -15.50194263458252
    8. ',(' → logprob: -16.126941680908203
    9. ')(' → logprob: -16.501941680908203
    10. ' ' → logprob: -16.751941680908203

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.250015258789062
    3. '-' → logprob: -13.500015258789062
    4. ',' → logprob: -15.687515258789062
    5. '00' → logprob: -15.687515258789062
    6. '```' → logprob: -16.437515258789062
    7. '1' → logprob: -16.750015258789062
    8. '۰' → logprob: -16.937515258789062
    9. '０' → logprob: -17.500015258789062
    10. '01' → logprob: -17.625015258789062

Token 50: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0003815756645053625
    2. ',' → logprob: -7.8753814697265625
    3. '-' → logprob: -13.875381469726562
    4. ',-

' → logprob: -15.750381469726562
    5. '1' → logprob: -16.000381469726562
    6. ',--' → logprob: -16.000381469726562
    7. ' ,-' → logprob: -16.125381469726562
    8. ',-
' → logprob: -17.750381469726562
    9. '",-' → logprob: -18.250381469726562
    10. ',+' → logprob: -18.500381469726562

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -19.5
    4. '```' → logprob: -19.625
    5. ',' → logprob: -20.625
    6. '+' → logprob: -21.0
    7. '１' → logprob: -21.0625
    8. '۱' → logprob: -21.1875
    9. '-' → logprob: -21.25
    10. '১' → logprob: -21.875

Token 52: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0026830181013792753
    2. ',(' → logprob: -6.127683162689209
    3. ',' → logprob: -7.627683162689209
    4. ')' → logprob: -12.12768268585205
    5. '(' → logprob: -12.87768268585205
    6. '),' → logprob: -13.00268268585205
    7. '1' → logprob: -15.12768268585205
    8. ' ,' → logprob: -15.87768268585205
    9. ')(' → logprob: -16.002683639526367
    10. '0' → logprob: -16.752683639526367

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890035957098007
    2. '1' → logprob: -2.5789003372192383
    3. ' ' → logprob: -11.453900337219238
    4. '```' → logprob: -17.328901290893555
    5. '01' → logprob: -18.203901290893555
    6. '2' → logprob: -18.203901290893555
    7. '+' → logprob: -18.578901290893555
    8. ')' → logprob: -19.203901290893555
    9. '-' → logprob: -19.703901290893555
    10. ',' → logprob: -20.203901290893555

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0802738870552275e-05
    2. '1' → logprob: -11.75001049041748
    3. ',+' → logprob: -12.87501049041748
    4. ',(' → logprob: -15.25001049041748
    5. ' ,' → logprob: -16.500011444091797
    6. ',)' → logprob: -18.000011444091797
    7. ')]' → logprob: -18.375011444091797
    8. ')' → logprob: -18.750011444091797
    9. '),(' → logprob: -19.000011444091797
    10. ',-' → logprob: -19.625011444091797

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '+' → logprob: -15.250000953674316
    4. ')' → logprob: -17.375001907348633
    5. '```' → logprob: -17.625001907348633
    6. '0' → logprob: -18.875001907348633
    7. '-' → logprob: -19.625001907348633
    8. '１' → logprob: -20.125001907348633
    9. '2' → logprob: -21.000001907348633
    10. '۱' → logprob: -21.125001907348633

Token 56: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0030121726449579
    2. ')' → logprob: -5.878012180328369
    3. ']' → logprob: -9.003011703491211
    4. ')])' → logprob: -9.878011703491211
    5. '])]' → logprob: -10.503011703491211
    6. '])' → logprob: -13.003011703491211
    7. '))' → logprob: -14.003011703491211
    8. ' )' → logprob: -14.378011703491211
    9. ')],' → logprob: -14.753011703491211
    10. ')}' → logprob: -14.753011703491211

Token 57: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3705775737762451
    2. 'start' → logprob: -1.4955775737762451
    3. 'dp' → logprob: -4.120577812194824
    4. 'queue' → logprob: -4.370577812194824
    5. 'Q' → logprob: -4.620577812194824
    6. 'S' → logprob: -4.620577812194824
    7. 'visited' → logprob: -4.870577812194824
    8. 'from' → logprob: -5.120577812194824
    9. 'distance' → logprob: -5.120577812194824
    10. 'q' → logprob: -6.120577812194824

Token 58: ' Find' (ID: 9764)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9878321886062622
    2. 'from' → logprob: -1.3628321886062622
    3. 'def' → logprob: -2.1128320693969727
    4. 'dist' → logprob: -2.2378320693969727
    5. 'visited' → logprob: -2.8628320693969727
    6. '#' → logprob: -2.9878320693969727
    7. 'for' → logprob: -4.237832069396973
    8. 'queue' → logprob: -4.862832069396973
    9. 'distance' → logprob: -5.612832069396973
    10. 'q' → logprob: -6.362832069396973

Token 59: ' positions' (ID: 15897)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.801981508731842
    2. 'the' → logprob: -1.5519814491271973
    3. 's' → logprob: -2.3019814491271973
    4. ' the' → logprob: -2.4269814491271973
    5. ''s' → logprob: -3.4269814491271973
    6. ' start' → logprob: -3.5519814491271973
    7. '<|end|>' → logprob: -3.8019814491271973
    8. 'starting' → logprob: -4.551981449127197
    9. '_start' → logprob: -5.051981449127197
    10. 'positions' → logprob: -5.051981449127197

Token 60: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2759270668029785
    2. 's' → logprob: -2.5259270668029785
    3. 'for' → logprob: -3.1509270668029785
    4. ' of' → logprob: -3.2759270668029785
    5. 'S' → logprob: -3.9009270668029785
    6. '=' → logprob: -4.2759270668029785
    7. '=[]' → logprob: -4.6509270668029785
    8. '```' → logprob: -4.7759270668029785
    9. '<|end|>' → logprob: -5.7759270668029785
    10. 'positions' → logprob: -5.9009270668029785

Token 61: ' head' (ID: 3189)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.501201331615448
    2. ''S' → logprob: -1.2512013912200928
    3. ' S' → logprob: -3.1262013912200928
    4. '"S' → logprob: -3.6262013912200928
    5. ''s' → logprob: -4.251201152801514
    6. ''' → logprob: -5.001201152801514
    7. ' '' → logprob: -5.751201152801514
    8. 'R' → logprob: -6.001201152801514
    9. '"' → logprob: -6.626201152801514
    10. '`' → logprob: -6.751201152801514

Token 62: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24952952563762665
    2. 'and' → logprob: -2.3745296001434326
    3. 'S' → logprob: -3.1245296001434326
    4. ' and' → logprob: -3.2495296001434326
    5. ',' → logprob: -4.1245293617248535
    6. 'snake' → logprob: -4.4995293617248535
    7. '_s' → logprob: -5.3745293617248535
    8. '_sn' → logprob: -6.4995293617248535
    9. '=' → logprob: -6.6245293617248535
    10. '(s' → logprob: -6.7495293617248535

Token 63: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008714319206774235
    2. 's' → logprob: -4.758714199066162
    3. ''' → logprob: -10.38371467590332
    4. 'R' → logprob: -11.00871467590332
    5. 'A' → logprob: -11.25871467590332
    6. ''S' → logprob: -11.75871467590332
    7. '@' → logprob: -12.25871467590332
    8. 'r' → logprob: -12.50871467590332
    9. ' S' → logprob: -12.50871467590332
    10. '`' → logprob: -13.00871467590332

Token 64: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028777492698282003
    2. '',' → logprob: -6.627877712249756
    3. '','' → logprob: -8.002878189086914
    4. '')' → logprob: -8.002878189086914
    5. ''s' → logprob: -8.377878189086914
    6. ' and' → logprob: -9.127878189086914
    7. ' '' → logprob: -9.252878189086914
    8. ',' → logprob: -9.377878189086914
    9. 'a' → logprob: -9.377878189086914
    10. 'and' → logprob: -9.877878189086914

Token 65: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0019512176513672
    2. ' and' → logprob: -1.0019512176513672
    3. 'S' → logprob: -1.8769512176513672
    4. 'positions' → logprob: -3.376951217651367
    5. ' positions' → logprob: -4.251951217651367
    6. ',' → logprob: -4.251951217651367
    7. 'for' → logprob: -4.376951217651367
    8. 'and' → logprob: -4.626951217651367
    9. ' for' → logprob: -4.751951217651367
    10. 'head' → logprob: -5.376951217651367

Token 66: ' bodies' (ID: 22410)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.0932250022888184
    2. 'goal' → logprob: -1.3432250022888184
    3. ''' → logprob: -2.2182250022888184
    4. 'target' → logprob: -2.3432250022888184
    5. 'targets' → logprob: -2.5932250022888184
    6. ' tail' → logprob: -3.3432250022888184
    7. ''d' → logprob: -4.343225002288818
    8. ' goal' → logprob: -4.468225002288818
    9. 'tails' → logprob: -4.843225002288818
    10. ''s' → logprob: -4.968225002288818

Token 67: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.216168761253357
    2. ' and' → logprob: -1.216168761253357
    3. 's' → logprob: -1.841168761253357
    4. 'S' → logprob: -2.7161688804626465
    5. ' of' → logprob: -3.3411688804626465
    6. ':' → logprob: -3.4661688804626465
    7. '.' → logprob: -3.8411688804626465
    8. 'and' → logprob: -3.8411688804626465
    9. ''s' → logprob: -4.7161688804626465
    10. ''' → logprob: -4.7161688804626465

Token 68: 'a' (ID: 64)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5176514983177185
    2. 'o' → logprob: -2.1426515579223633
    3. '#' → logprob: -2.2676515579223633
    4. 's' → logprob: -2.5176515579223633
    5. ''' → logprob: -3.5176515579223633
    6. '1' → logprob: -4.767651557922363
    7. 'O' → logprob: -4.767651557922363
    8. '')' → logprob: -5.142651557922363
    9. 'd' → logprob: -5.642651557922363
    10. '@' → logprob: -5.642651557922363

Token 69: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31458836793899536
    2. '','' → logprob: -1.8145883083343506
    3. ''-' → logprob: -3.3145883083343506
    4. '',' → logprob: -3.5645883083343506
    5. ''s' → logprob: -3.6895883083343506
    6. 'b' → logprob: -4.81458854675293
    7. ''+' → logprob: -5.93958854675293
    8. 's' → logprob: -6.18958854675293
    9. ''b' → logprob: -7.31458854675293
    10. ',b' → logprob: -7.56458854675293

Token 70: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00011450992315076292
    2. 'bc' → logprob: -10.250114440917969
    3. '>' → logprob: -10.500114440917969
    4. 'z' → logprob: -11.625114440917969
    5. ''b' → logprob: -12.000114440917969
    6. '...' → logprob: -12.250114440917969
    7. ''' → logprob: -12.250114440917969
    8. 'S' → logprob: -12.375114440917969
    9. 's' → logprob: -12.500114440917969
    10. ',b' → logprob: -13.000114440917969

Token 71: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.17326566576957703
    2. ',c' → logprob: -2.6732656955718994
    3. ','' → logprob: -3.2982656955718994
    4. ',' → logprob: -3.6732656955718994
    5. '',' → logprob: -4.29826545715332
    6. ''' → logprob: -4.92326545715332
    7. '...' → logprob: -6.42326545715332
    8. ',...' → logprob: -6.54826545715332
    9. '',"' → logprob: -7.04826545715332
    10. '","' → logprob: -7.79826545715332

Token 72: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0066965422593057156
    2. ''' → logprob: -5.131696701049805
    3. '...' → logprob: -7.756696701049805
    4. ' c' → logprob: -9.756696701049805
    5. '<|end|>' → logprob: -10.381696701049805
    6. 'S' → logprob: -10.506696701049805
    7. ',c' → logprob: -10.506696701049805
    8. '')' → logprob: -10.631696701049805
    9. 'cd' → logprob: -10.631696701049805
    10. ''s' → logprob: -10.631696701049805

Token 73: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.5623847246170044
    2. '',' → logprob: -1.0623847246170044
    3. ''' → logprob: -2.937384605407715
    4. ',d' → logprob: -4.187384605407715
    5. '',"' → logprob: -5.312384605407715
    6. ','' → logprob: -5.687384605407715
    7. '...' → logprob: -6.812384605407715
    8. ',' → logprob: -6.937384605407715
    9. '','','' → logprob: -6.937384605407715
    10. ',...' → logprob: -7.062384605407715

Token 74: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2040715217590332
    2. '...' → logprob: -1.8290715217590332
    3. ''d' → logprob: -4.079071521759033
    4. ''' → logprob: -5.704071521759033
    5. '#' → logprob: -6.329071521759033
    6. '<|end|>' → logprob: -7.329071521759033
    7. '…' → logprob: -8.079071044921875
    8. 's' → logprob: -8.329071044921875
    9. ''s' → logprob: -9.204071044921875
    10. ' d' → logprob: -9.329071044921875

Token 75: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.02738829329609871
    2. '',' → logprob: -4.402388095855713
    3. ''' → logprob: -5.277388095855713
    4. ','' → logprob: -5.527388095855713
    5. ',e' → logprob: -5.777388095855713
    6. '',"' → logprob: -7.402388095855713
    7. ''e' → logprob: -7.652388095855713
    8. '','#' → logprob: -8.277388572692871
    9. ',' → logprob: -8.402388572692871
    10. 'e' → logprob: -8.527388572692871

Token 76: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.027751499786973
    2. ''e' → logprob: -3.6527514457702637
    3. '...' → logprob: -7.152751445770264
    4. ''' → logprob: -7.777751445770264
    5. '<|end|>' → logprob: -9.902751922607422
    6. ',e' → logprob: -10.027751922607422
    7. '#' → logprob: -10.402751922607422
    8. '<|end|>' → logprob: -10.527751922607422
    9. ' e' → logprob: -11.027751922607422
    10. ''s' → logprob: -11.402751922607422

Token 77: ''' (ID: 6)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.6077227592468262
    2. ''' → logprob: -1.3577227592468262
    3. '']' → logprob: -2.107722759246826
    4. '',' → logprob: -3.482722759246826
    5. ''s' → logprob: -3.982722759246826
    6. ','' → logprob: -5.107722759246826
    7. ',f' → logprob: -5.107722759246826
    8. 'f' → logprob: -6.357722759246826
    9. 's' → logprob: -6.357722759246826
    10. ''f' → logprob: -6.357722759246826

Token 78: ' in' (ID: 306)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16729170083999634
    2. 'head' → logprob: -3.6672916412353516
    3. 'S' → logprob: -3.7922916412353516
    4. 'pos' → logprob: -3.7922916412353516
    5. 'snake' → logprob: -3.7922916412353516
    6. 's' → logprob: -4.042291641235352
    7. '
' → logprob: -4.167291641235352
    8. '```' → logprob: -5.042291641235352
    9. '#' → logprob: -5.167291641235352
    10. 'for' → logprob: -5.542291641235352

Token 79: ' order' (ID: 2569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4968324303627014
    2. 'the' → logprob: -0.9968324303627014
    3. ' grid' → logprob: -4.246832370758057
    4. 'grid' → logprob: -5.746832370758057
    5. ' order' → logprob: -5.871832370758057
    6. 'order' → logprob: -6.996832370758057
    7. ' a' → logprob: -7.371832370758057
    8. 'sequence' → logprob: -9.246832847595215
    9. ' sequence' → logprob: -9.621832847595215
    10. 'a' → logprob: -9.621832847595215

Token 80: ',' (ID: 11)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6233341097831726
    2. '
' → logprob: -0.9983341097831726
    3. 'pos' → logprob: -3.1233341693878174
    4. 'head' → logprob: -3.6233341693878174
    5. ' positions' → logprob: -4.248333930969238
    6. 's' → logprob: -5.998333930969238
    7. '```' → logprob: -6.373333930969238
    8. 'position' → logprob: -6.498333930969238
    9. '
' → logprob: -6.873333930969238
    10. 'snake' → logprob: -7.248333930969238

Token 81: ' and' (ID: 326)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snake' → logprob: -1.092153549194336
    2. ' snake' → logprob: -1.467153549194336
    3. 'positions' → logprob: -1.717153549194336
    4. ' positions' → logprob: -1.842153549194336
    5. 'pos' → logprob: -3.342153549194336
    6. ' pos' → logprob: -3.967153549194336
    7. ' body' → logprob: -4.717153549194336
    8. 's' → logprob: -4.842153549194336
    9. 'body' → logprob: -5.592153549194336
    10. '#' → logprob: -5.592153549194336

Token 82: ' food' (ID: 4232)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3606829643249512
    2. 'store' → logprob: -1.3606829643249512
    3. 'tail' → logprob: -2.235682964324951
    4. 'tails' → logprob: -2.235682964324951
    5. ' store' → logprob: -2.860682964324951
    6. 'initialize' → logprob: -3.110682964324951
    7. ''s' → logprob: -3.610682964324951
    8. 'the' → logprob: -3.610682964324951
    9. ' tail' → logprob: -3.860682964324951
    10. 'targets' → logprob: -4.610682964324951

Token 83: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.08402655273675919
    2. 'pos' → logprob: -3.084026575088501
    3. ' positions' → logprob: -3.834026575088501
    4. 'snake' → logprob: -4.959026336669922
    5. 'head' → logprob: -6.459026336669922
    6. 's' → logprob: -6.834026336669922
    7. 'body' → logprob: -6.959026336669922
    8. 'position' → logprob: -7.084026336669922
    9. '_positions' → logprob: -7.334026336669922
    10. ' pos' → logprob: -8.709026336669922

Token 84: ' indexed' (ID: 44010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.47987988591194153
    2. 'snake' → logprob: -1.2298798561096191
    3. 'pos' → logprob: -2.729879856109619
    4. 'position' → logprob: -5.104879856109619
    5. 'head' → logprob: -5.229879856109619
    6. '
' → logprob: -5.729879856109619
    7. 'body' → logprob: -5.854879856109619
    8. ' positions' → logprob: -5.979879856109619
    9. '#' → logprob: -7.479879856109619
    10. ' snake' → logprob: -7.604879856109619

Token 85: ' by' (ID: 656)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7585110664367676
    2. 'positions' → logprob: -1.7585110664367676
    3. '=' → logprob: -2.6335110664367676
    4. ' =' → logprob: -2.7585110664367676
    5. '_' → logprob: -3.1335110664367676
    6. ']' → logprob: -3.7585110664367676
    7. ' ' → logprob: -3.7585110664367676
    8. ',' → logprob: -4.008511066436768
    9. 's' → logprob: -4.008511066436768
    10. '=[]' → logprob: -4.133511066436768

Token 86: ' number' (ID: 2086)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -2.249479293823242
    2. ' '' → logprob: -2.499479293823242
    3. 'positions' → logprob: -2.499479293823242
    4. ' ' → logprob: -2.624479293823242
    5. 'space' → logprob: -2.749479293823242
    6. ' a' → logprob: -2.874479293823242
    7. '1' → logprob: -2.874479293823242
    8. '"' → logprob: -3.124479293823242
    9. 'numbers' → logprob: -3.249479293823242
    10. ' numbers' → logprob: -3.249479293823242

Token 87: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.742775559425354
    2. 'pos' → logprob: -0.867775559425354
    3. ' positions' → logprob: -3.3677754402160645
    4. 'position' → logprob: -3.9927754402160645
    5. 'head' → logprob: -4.3677754402160645
    6. 'snake' → logprob: -4.3677754402160645
    7. '
' → logprob: -4.9927754402160645
    8. ' pos' → logprob: -4.9927754402160645
    9. 's' → logprob: -5.6177754402160645
    10. 'body' → logprob: -6.3677754402160645

Token 88: 'pos' (ID: 1103)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7564706802368164
    2. 'pos' → logprob: -1.6314706802368164
    3. 'snake' → logprob: -1.6314706802368164
    4. 'head' → logprob: -2.1314706802368164
    5. ' positions' → logprob: -5.131470680236816
    6. 'position' → logprob: -5.381470680236816
    7. 's' → logprob: -6.381470680236816
    8. ' snake' → logprob: -6.506470680236816
    9. 'body' → logprob: -6.506470680236816
    10. 'S' → logprob: -6.631470680236816

Token 89: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022433342412114143
    2. 'itions' → logprob: -3.897433280944824
    3. '=' → logprob: -6.522433280944824
    4. ' =' → logprob: -8.522433280944824
    5. 'ions' → logprob: -10.022433280944824
    6. '_positions' → logprob: -10.147433280944824
    7. '_' → logprob: -10.397433280944824
    8. 'ition' → logprob: -10.772433280944824
    9. 'initions' → logprob: -11.022433280944824
    10. '_s' → logprob: -11.522433280944824

Token 90: '={}
' (ID: 146130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7746859192848206
    2. '={}' → logprob: -1.1496858596801758
    3. '=' → logprob: -1.5246858596801758
    4. '={' → logprob: -6.149685859680176
    5. ' ={' → logprob: -6.399685859680176
    6. '={'' → logprob: -7.399685859680176
    7. '={"' → logprob: -8.899685859680176
    8. '={}
' → logprob: -9.899685859680176
    9. '=dict' → logprob: -10.524685859680176
    10. '=[]' → logprob: -10.524685859680176

Token 91: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07395395636558533
    2. ' for' → logprob: -3.573953866958618
    3. 'positions' → logprob: -4.073954105377197
    4. 'head' → logprob: -5.073954105377197
    5. '<|end|>' → logprob: -5.073954105377197
    6. 'snake' → logprob: -5.823954105377197
    7. 's' → logprob: -5.948954105377197
    8. ',' → logprob: -7.073954105377197
    9. 'pos' → logprob: -7.323954105377197
    10. 'deque' → logprob: -7.448954105377197

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1239301860332489
    2. ' r' → logprob: -3.2489302158355713
    3. ' _' → logprob: -3.4989302158355713
    4. 'i' → logprob: -3.8739302158355713
    5. ' h' → logprob: -4.248929977416992
    6. ' y' → logprob: -5.248929977416992
    7. 'r' → logprob: -5.998929977416992
    8. '_' → logprob: -6.748929977416992
    9. 'h' → logprob: -6.998929977416992
    10. ' ' → logprob: -7.123929977416992

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055335693061351776
    2. 'in' → logprob: -2.930335760116577
    3. ',' → logprob: -7.930335521697998
    4. ' ' → logprob: -9.680335998535156
    5. ' ,' → logprob: -11.555335998535156
    6. 'range' → logprob: -12.055335998535156
    7. ',in' → logprob: -12.180335998535156
    8. ' range' → logprob: -13.305335998535156
    9. '<|end|>' → logprob: -13.555335998535156
    10. ')' → logprob: -13.680335998535156

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163863845169544
    2. ' range' → logprob: -4.264163970947266
    3. '	range' → logprob: -15.639163970947266
    4. '(range' → logprob: -16.639163970947266
    5. '```' → logprob: -16.764163970947266
    6. ')' → logprob: -17.014163970947266
    7. '0' → logprob: -18.014163970947266
    8. '_range' → logprob: -18.014163970947266
    9. 'ange' → logprob: -18.514163970947266
    10. '.range' → logprob: -18.514163970947266

Token 95: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00022427814838010818
    2. 'H' → logprob: -8.625224113464355
    3. '(' → logprob: -10.125224113464355
    4. ' H' → logprob: -12.625224113464355
    5. '	H' → logprob: -14.625224113464355
    6. ' (' → logprob: -14.875224113464355
    7. '(
' → logprob: -15.500224113464355
    8. '(len' → logprob: -16.000225067138672
    9. ',H' → logprob: -16.375225067138672
    10. ')' → logprob: -16.500225067138672

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007173155900090933
    2. '):
' → logprob: -7.2507171630859375
    3. ':' → logprob: -12.875717163085938
    4. ' ):' → logprob: -13.250717163085938
    5. ')' → logprob: -13.625717163085938
    6. '):
' → logprob: -14.375717163085938
    7. ']:' → logprob: -14.750717163085938
    8. '}:' → logprob: -15.250717163085938
    9. '):

' → logprob: -16.000717163085938
    10. ' ' → logprob: -16.375717163085938

Token 97: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5974741578102112
    2. '   ' → logprob: -0.8474741578102112
    3. '<|end|>' → logprob: -3.9724740982055664
    4. ' ' → logprob: -6.847474098205566
    5. 'for' → logprob: -7.222474098205566
    6. '	for' → logprob: -7.722474098205566
    7. '<|end|>' → logprob: -9.347474098205566
    8. '    ' → logprob: -9.972474098205566
    9. '```' → logprob: -10.597474098205566
    10. '   ' → logprob: -11.097474098205566

Token 98: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07623105496168137
    2. 'for' (adapté à ' for') → logprob: -2.701231002807617
    3. '   ' → logprob: -5.076231002807617
    4. '	for' → logprob: -11.076231002807617
    5. ' ' → logprob: -12.451231002807617
    6. ' j' → logprob: -12.576231002807617
    7. '    ' → logprob: -12.701231002807617
    8. '<|end|>' → logprob: -12.826231002807617
    9. 'j' → logprob: -13.201231002807617
    10. '```' → logprob: -15.076231002807617

Token 99: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5764907002449036
    2. 'j' → logprob: -0.8264907002449036
    3. ' range' → logprob: -7.826490879058838
    4. 'range' → logprob: -8.82649040222168
    5. ' ' → logprob: -12.70149040222168
    6. 'r' → logprob: -15.07649040222168
    7. 'w' → logprob: -15.20149040222168
    8. '   ' → logprob: -15.20149040222168
    9. '    ' → logprob: -15.70149040222168
    10. 'x' → logprob: -15.70149040222168

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076304152607917786
    2. 'in' → logprob: -4.882630348205566
    3. ' ' → logprob: -11.132630348205566
    4. ')' → logprob: -12.507630348205566
    5. '   ' → logprob: -12.882630348205566
    6. '    ' → logprob: -13.882630348205566
    7. '  ' → logprob: -14.132630348205566
    8. 'range' → logprob: -14.507630348205566
    9. ' range' → logprob: -14.882630348205566
    10. ',' → logprob: -15.507630348205566

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196802109479904
    2. ' range' → logprob: -2.8119680881500244
    3. '(range' → logprob: -15.061967849731445
    4. ')' → logprob: -19.811967849731445
    5. ' ' → logprob: -19.936967849731445
    6. '(' → logprob: -20.061967849731445
    7. '	range' → logprob: -21.561967849731445
    8. '```' → logprob: -21.811967849731445
    9. '   ' → logprob: -22.436967849731445
    10. '0' → logprob: -22.436967849731445

Token 102: '(W' (ID: 26031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.02997494488954544
    2. '(W' → logprob: -3.529974937438965
    3. '(' → logprob: -8.904974937438965
    4. ' (' → logprob: -10.029974937438965
    5. 'range' → logprob: -10.779974937438965
    6. ' range' → logprob: -11.279974937438965
    7. 'H' → logprob: -12.529974937438965
    8. '(range' → logprob: -12.904974937438965
    9. 'W' → logprob: -13.404974937438965
    10. ')' → logprob: -13.904974937438965

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013834135606884956
    2. ')' → logprob: -4.388833999633789
    3. '):
' → logprob: -6.763833999633789
    4. ':' → logprob: -8.763833999633789
    5. 'if' → logprob: -12.763833999633789
    6. '):

' → logprob: -12.763833999633789
    7. ' ):' → logprob: -13.138833999633789
    8. '   ' → logprob: -13.388833999633789
    9. '):
' → logprob: -13.888833999633789
    10. '}:' → logprob: -15.013833999633789

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03408384323120117
    2. ' if' → logprob: -3.409083843231201
    3. '   ' → logprob: -8.78408432006836
    4. '```' → logprob: -8.78408432006836
    5. 'if' → logprob: -9.03408432006836
    6. '<|end|>' → logprob: -13.15908432006836
    7. ' ```' → logprob: -13.28408432006836
    8. '    ' → logprob: -13.78408432006836
    9. '      ' → logprob: -14.03408432006836
    10. ' ' → logprob: -14.15908432006836

Token 105: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15226870775222778
    2. ' c' → logprob: -2.402268648147583
    3. 'if' → logprob: -4.277268886566162
    4. ' ch' → logprob: -4.277268886566162
    5. 'c' (adapté à ' c') → logprob: -4.652268886566162
    6. 'ch' → logprob: -5.277268886566162
    7. ' char' → logprob: -5.527268886566162
    8. ' cell' → logprob: -6.152268886566162
    9. '       ' → logprob: -7.402268886566162
    10. 'char' → logprob: -7.652268886566162

Token 106: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03376833349466324
    2. ' =' → logprob: -3.40876841545105
    3. '=
' → logprob: -10.033768653869629
    4. '=s' → logprob: -10.783768653869629
    5. '=row' → logprob: -11.408768653869629
    6. '=input' → logprob: -11.533768653869629
    7. '=line' → logprob: -12.033768653869629
    8. '=user' → logprob: -12.408768653869629
    9. '=f' → logprob: -12.533768653869629
    10. '=

' → logprob: -12.658768653869629

Token 107: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.004078878089785576
    2. ' grid' → logprob: -5.5040788650512695
    3. '	grid' → logprob: -15.00407886505127
    4. '(grid' → logprob: -16.129079818725586
    5. '.grid' → logprob: -17.379079818725586
    6. '   ' → logprob: -17.879079818725586
    7. ':grid' → logprob: -18.129079818725586
    8. ' ' → logprob: -18.379079818725586
    9. '
' → logprob: -19.504079818725586
    10. '/grid' → logprob: -19.504079818725586

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[j' → logprob: -12.000007629394531
    3. '[I' → logprob: -14.250007629394531
    4. '[' → logprob: -15.125007629394531
    5. '```' → logprob: -15.375007629394531
    6. 'i' → logprob: -16.00000762939453
    7. ' [' → logprob: -16.25000762939453
    8. '][' → logprob: -16.75000762939453
    9. '[
' → logprob: -17.12500762939453
    10. '[int' → logprob: -18.62500762939453

Token 109: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010509284038562328
    2. '[j' → logprob: -9.750104904174805
    3. ']' → logprob: -10.750104904174805
    4. ')][' → logprob: -11.625104904174805
    5. ' ][' → logprob: -12.125104904174805
    6. ')[' → logprob: -12.250104904174805
    7. '[i' → logprob: -13.500104904174805
    8. '   ' → logprob: -14.000104904174805
    9. ')' → logprob: -14.250104904174805
    10. '[' → logprob: -14.375104904174805

Token 110: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.727905979962088e-05
    2. '][' → logprob: -10.50004768371582
    3. ' j' → logprob: -11.12504768371582
    4. '   ' → logprob: -13.50004768371582
    5. '```' → logprob: -14.00004768371582
    6. '[j' → logprob: -14.12504768371582
    7. ']' → logprob: -14.37504768371582
    8. ' ' → logprob: -14.75004768371582
    9. ',j' → logprob: -15.37504768371582
    10. ':j' → logprob: -15.62504768371582

Token 111: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.182414248585701
    2. ')
' → logprob: -1.8074142932891846
    3. ']' → logprob: -6.6824140548706055
    4. '])' → logprob: -7.5574140548706055
    5. 'if' → logprob: -8.432414054870605
    6. '       ' → logprob: -8.807414054870605
    7. ')]' → logprob: -8.807414054870605
    8. ']
' → logprob: -8.807414054870605
    9. ' )' → logprob: -9.807414054870605
    10. ')
' → logprob: -10.307414054870605

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006210576975718141
    2. '<|end|>' → logprob: -7.7506208419799805
    3. ' if' → logprob: -9.25062084197998
    4. ' ' → logprob: -10.87562084197998
    5. '<|end|>' → logprob: -10.87562084197998
    6. '   ' → logprob: -11.12562084197998
    7. '        
' → logprob: -11.25062084197998
    8. '```' → logprob: -11.37562084197998
    9. '        ' → logprob: -12.62562084197998
    10. 'if' → logprob: -12.75062084197998

Token 113: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0628499835729599
    2. 'if' (adapté à ' if') → logprob: -2.812849998474121
    3. '       ' → logprob: -7.062849998474121
    4. '```' → logprob: -11.187849998474121
    5. '   ' → logprob: -12.562849998474121
    6. ' ' → logprob: -12.937849998474121
    7. '        ' → logprob: -13.187849998474121
    8. '	if' → logprob: -13.562849998474121
    9. '
' → logprob: -14.187849998474121
    10. ' 
' → logprob: -14.562849998474121

Token 114: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0019289902411401272
    2. 'c' → logprob: -6.251928806304932
    3. ' ' → logprob: -14.75192928314209
    4. '(c' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.501928329467773
    6. ' '' → logprob: -18.626928329467773
    7. ')c' → logprob: -18.751928329467773
    8. '	c' → logprob: -18.876928329467773
    9. ' (' → logprob: -19.001928329467773
    10. ''' → logprob: -19.501928329467773

Token 115: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.2365790754556656
    2. '==' → logprob: -2.111579179763794
    3. ' ==' → logprob: -2.611579179763794
    4. ' =='' → logprob: -4.361578941345215
    5. ' in' → logprob: -6.236578941345215
    6. '=="' → logprob: -6.611578941345215
    7. 'in' → logprob: -10.486578941345215
    8. '==='' → logprob: -10.611578941345215
    9. '='' → logprob: -10.736578941345215
    10. ']=='' → logprob: -10.986578941345215

Token 116: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. ''S' → logprob: -17.0
    3. ' S' → logprob: -19.25
    4. '#' → logprob: -19.5
    5. 's' → logprob: -20.0
    6. 'H' → logprob: -20.875
    7. ''' → logprob: -21.125
    8. '"S' → logprob: -21.625
    9. '@' → logprob: -22.0
    10. 'Ｓ' → logprob: -22.125

Token 117: ''' (ID: 6)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002919353311881423
    2. ''' → logprob: -6.2529191970825195
    3. '':
' → logprob: -7.5029191970825195
    4. ':' → logprob: -8.00291919708252
    5. ''or' → logprob: -10.50291919708252
    6. '':
' → logprob: -10.62791919708252
    7. ''):' → logprob: -10.75291919708252
    8. ' or' → logprob: -11.62791919708252
    9. '':'' → logprob: -12.00291919708252
    10. '):' → logprob: -12.75291919708252

Token 118: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008099827100522816
    2. ':
' → logprob: -7.125810146331787
    3. '):' → logprob: -13.375809669494629
    4. ' or' → logprob: -13.375809669494629
    5. ' :' → logprob: -14.000809669494629
    6. '=' → logprob: -15.125809669494629
    7. ')' → logprob: -15.250809669494629
    8. ':return' → logprob: -15.625809669494629
    9. ':def' → logprob: -15.750809669494629
    10. ':s' → logprob: -16.125810623168945

Token 119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0949457511305809
    2. ' c' → logprob: -2.4699456691741943
    3. '('' → logprob: -5.969945907592773
    4. ''' → logprob: -6.594945907592773
    5. '(c' → logprob: -6.844945907592773
    6. ' (' → logprob: -7.594945907592773
    7. '(' → logprob: -7.969945907592773
    8. ' ('' → logprob: -9.094945907592773
    9. ' '' → logprob: -11.094945907592773
    10. '(ord' → logprob: -11.844945907592773

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04617666080594063
    2. 'in' → logprob: -3.1711766719818115
    3. '>' → logprob: -5.921176433563232
    4. '==' → logprob: -8.67117691040039
    5. '>=' → logprob: -9.04617691040039
    6. '=='' → logprob: -9.29617691040039
    7. ' ' → logprob: -11.29617691040039
    8. '.is' → logprob: -11.42117691040039
    9. 'elif' → logprob: -11.42117691040039
    10. 'is' → logprob: -11.54617691040039

Token 121: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5259169936180115
    2. '"' → logprob: -1.6509170532226562
    3. ''ab' → logprob: -1.7759170532226562
    4. '['' → logprob: -3.1509170532226562
    5. ''s' → logprob: -6.025917053222656
    6. ' '' → logprob: -7.025917053222656
    7. '{'' → logprob: -8.275917053222656
    8. ' ['' → logprob: -8.400917053222656
    9. ''a' → logprob: -8.525917053222656
    10. '('' → logprob: -8.775917053222656

Token 122: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.0004688034241553396
    2. 'abcd' → logprob: -8.375469207763672
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.875469207763672
    4. 'abcdef' → logprob: -9.875469207763672
    5. ' abc' → logprob: -10.250469207763672
    6. '"' → logprob: -11.625469207763672
    7. 'abcdefgh' → logprob: -13.375469207763672
    8. '
' → logprob: -14.875469207763672
    9. ''' → logprob: -15.375469207763672
    10. 'ab' → logprob: -15.375469207763672

Token 123: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.000672043883241713
    2. '"' → logprob: -8.000672340393066
    3. 'def' → logprob: -8.125672340393066
    4. 'ed' → logprob: -10.625672340393066
    5. 'd' → logprob: -11.750672340393066
    6. 'e' → logprob: -12.875672340393066
    7. 'dea' → logprob: -13.375672340393066
    8. '"""' → logprob: -13.500672340393066
    9. '"`' → logprob: -14.250672340393066
    10. 'ede' → logprob: -14.500672340393066

Token 124: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.027029355987906456
    2. '":
' → logprob: -3.652029275894165
    3. '"' → logprob: -7.527029514312744
    4. '":
' → logprob: -9.152029037475586
    5. '":

' → logprob: -11.027029037475586
    6. '':' → logprob: -11.277029037475586
    7. ':' → logprob: -11.527029037475586
    8. '"]:' → logprob: -11.902029037475586
    9. '":{
' → logprob: -12.152029037475586
    10. '"):' → logprob: -12.652029037475586

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764049768447876
    2. '           ' → logprob: -1.1514049768447876
    3. ':' → logprob: -2.026404857635498
    4. ':
' → logprob: -3.401404857635498
    5. '   ' → logprob: -3.776404857635498
    6. 'pos' → logprob: -3.901404857635498
    7. ' pos' → logprob: -4.401404857635498
    8. ',pos' → logprob: -6.651404857635498
    9. ',' → logprob: -7.651404857635498
    10. '	pos' → logprob: -8.276405334472656

Token 126: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.13248011469841003
    2. 'pos' (adapté à ' pos') → logprob: -2.1324801445007324
    3. ' if' → logprob: -5.507480144500732
    4. 'if' → logprob: -7.257480144500732
    5. '           ' → logprob: -7.382480144500732
    6. '	pos' → logprob: -10.382479667663574
    7. '   ' → logprob: -10.507479667663574
    8. '       ' → logprob: -11.132479667663574
    9. '[pos' → logprob: -11.132479667663574
    10. ',pos' → logprob: -11.132479667663574

Token 127: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -4.60414821645827e-06
    2. '_dic' → logprob: -13.250004768371582
    3. '=_' → logprob: -15.000004768371582
    4. 's' → logprob: -15.125004768371582
    5. 'dict' → logprob: -15.250004768371582
    6. '_' → logprob: -15.500004768371582
    7. ']' → logprob: -15.500004768371582
    8. '_positions' → logprob: -15.625004768371582
    9. ')' → logprob: -15.750004768371582
    10. '_DICT' → logprob: -15.750004768371582

Token 128: '[c' (ID: 22840)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4741284251213074
    2. '[c' → logprob: -0.9741284251213074
    3. '[' → logprob: -10.724128723144531
    4. '(c' → logprob: -10.724128723144531
    5. 'c' → logprob: -12.474128723144531
    6. '.setdefault' → logprob: -13.849128723144531
    7. '```' → logprob: -14.224128723144531
    8. ' [(' → logprob: -14.974128723144531
    9. '

' → logprob: -14.974128723144531
    10. '[C' → logprob: -15.099128723144531

Token 129: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.3408607840538025
    2. ']=' → logprob: -1.5908608436584473
    3. ']' → logprob: -2.4658608436584473
    4. ']={' → logprob: -9.090860366821289
    5. ' ]' → logprob: -11.090860366821289
    6. '=(' → logprob: -11.465860366821289
    7. ']='' → logprob: -11.840860366821289
    8. ']="' → logprob: -12.590860366821289
    9. '"]=' → logprob: -13.340860366821289
    10. '=' → logprob: -13.715860366821289

Token 130: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006529859383590519
    2. ' i' → logprob: -7.37565279006958
    3. '(i' → logprob: -11.625653266906738
    4. ')' → logprob: -11.750653266906738
    5. ')i' → logprob: -12.250653266906738
    6. ' (' → logprob: -12.625653266906738
    7. 'j' → logprob: -13.750653266906738
    8. '   ' → logprob: -15.750653266906738
    9. ' ' → logprob: -17.000652313232422
    10. '
' → logprob: -17.125652313232422

Token 131: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.3873635232448578
    2. ',' → logprob: -1.1373635530471802
    3. ' ,' → logprob: -7.637363433837891
    4. 'j' → logprob: -12.38736343383789
    5. ')' → logprob: -13.51236343383789
    6. ',
' → logprob: -14.01236343383789
    7. ' j' → logprob: -14.76236343383789
    8. ' ' → logprob: -14.88736343383789
    9. ',y' → logprob: -14.88736343383789
    10. '   ' → logprob: -15.26236343383789

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.250007629394531
    3. ' )' → logprob: -13.750007629394531
    4. ')}}' → logprob: -14.500007629394531
    5. ')#' → logprob: -15.000007629394531
    6. '),' → logprob: -15.000007629394531
    7. ')}' → logprob: -15.750007629394531
    8. '<|end|>' → logprob: -15.875007629394531
    9. '))' → logprob: -16.12500762939453
    10. ',)' → logprob: -16.50000762939453

Token 133: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.708259642124176
    2. '       ' → logprob: -1.8332595825195312
    3. '#' → logprob: -2.4582595825195312
    4. 'for' → logprob: -2.5832595825195312
    5. '<|end|>' → logprob: -2.8332595825195312
    6. '```' → logprob: -3.2082595825195312
    7. ' elif' → logprob: -4.208259582519531
    8. 'if' → logprob: -4.333259582519531
    9. ' for' → logprob: -4.958259582519531
    10. '
' → logprob: -5.083259582519531

Token 134: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5772956013679504
    2. ' elif' → logprob: -0.8272956013679504
    3. '       ' → logprob: -6.952295780181885
    4. '	elif' → logprob: -8.452295303344727
    5. ' if' → logprob: -9.827295303344727
    6. 'if' → logprob: -10.452295303344727
    7. 'for' → logprob: -11.077295303344727
    8. '```' → logprob: -11.077295303344727
    9. ' for' → logprob: -11.202295303344727
    10. '        ' → logprob: -11.577295303344727

Token 135: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20420771837234497
    2. 'c' → logprob: -1.7042076587677002
    3. ''' → logprob: -6.204207897186279
    4. ' '' → logprob: -7.204207897186279
    5. ' ' → logprob: -11.079207420349121
    6. 'grid' → logprob: -13.454207420349121
    7. ' grid' → logprob: -13.454207420349121
    8. '"' → logprob: -13.579207420349121
    9. ' ' → logprob: -13.704207420349121
    10. ')c' → logprob: -14.016707420349121

Token 136: '.is' (ID: 3109)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1533646136522293
    2. '>' → logprob: -3.028364658355713
    3. '.is' → logprob: -3.403364658355713
    4. 'isdigit' → logprob: -3.653364658355713
    5. '=='' → logprob: -4.028364658355713
    6. ' in' → logprob: -4.903364658355713
    7. '>=' → logprob: -5.528364658355713
    8. '=' → logprob: -5.778364658355713
    9. ' ==' → logprob: -6.528364658355713
    10. '='' → logprob: -7.528364658355713

Token 137: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -9.710618905955926e-05
    2. 'decimal' → logprob: -9.250097274780273
    3. 'numeric' → logprob: -13.875097274780273
    4. 'd' → logprob: -18.750097274780273
    5. 'dig' → logprob: -18.875097274780273
    6. ' digit' → logprob: -19.125097274780273
    7. 'digital' → logprob: -19.250097274780273
    8. 'alpha' → logprob: -19.625097274780273
    9. '-digit' → logprob: -19.625097274780273
    10. 'di' → logprob: -19.750097274780273

Token 138: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47437185049057007
    2. '()' → logprob: -0.9743718504905701
    3. '(' → logprob: -8.474371910095215
    4. '():
' → logprob: -10.849371910095215
    5. '()>' → logprob: -10.849371910095215
    6. '()%' → logprob: -11.349371910095215
    7. '()==' → logprob: -11.474371910095215
    8. '()(' → logprob: -11.724371910095215
    9. '()">' → logprob: -12.724371910095215
    10. '()?>' → logprob: -12.849371910095215

Token 139: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10222448408603668
    2. ' pos' → logprob: -2.602224588394165
    3. 'num' → logprob: -3.977224588394165
    4. 'int' → logprob: -6.102224349975586
    5. '   ' → logprob: -6.602224349975586
    6. '           ' → logprob: -8.227224349975586
    7. ' num' → logprob: -8.852224349975586
    8. '	pos' → logprob: -9.227224349975586
    9. 'idx' → logprob: -10.227224349975586
    10. ' int' → logprob: -10.227224349975586

Token 140: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.011199071072041988
    2. ' pos' → logprob: -4.511198997497559
    3. 'num' → logprob: -9.136198997497559
    4. '           ' → logprob: -10.386198997497559
    5. '	pos' → logprob: -12.511198997497559
    6. 'food' → logprob: -13.011198997497559
    7. 'if' → logprob: -13.511198997497559
    8. '   ' → logprob: -13.511198997497559
    9. 'number' → logprob: -14.261198997497559
    10. 'idx' → logprob: -14.386198997497559

Token 141: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0001725511101540178
    2. 'dict' → logprob: -8.75017261505127
    3. '_DICT' → logprob: -11.87517261505127
    4. 'edict' → logprob: -12.62517261505127
    5. 'Dict' → logprob: -13.75017261505127
    6. '_dic' → logprob: -13.87517261505127
    7. 's' → logprob: -14.87517261505127
    8. '[' → logprob: -15.00017261505127
    9. 'ed' → logprob: -15.25017261505127
    10. 'd' → logprob: -15.75017261505127

Token 142: '[int' (ID: 40124)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0004386558721307665
    2. '[int' → logprob: -7.750438690185547
    3. '[' → logprob: -12.500438690185547
    4. '[(' → logprob: -13.875438690185547
    5. '[str' → logprob: -14.000438690185547
    6. 'c' → logprob: -14.000438690185547
    7. '.setdefault' → logprob: -14.250438690185547
    8. 'int' → logprob: -14.875438690185547
    9. '(c' → logprob: -15.500438690185547
    10. ' [' → logprob: -15.750438690185547

Token 143: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0022363781463354826
    2. 'c' → logprob: -6.252236366271973
    3. '(' → logprob: -8.502236366271973
    4. ')(' → logprob: -9.877236366271973
    5. '](' → logprob: -10.502236366271973
    6. ')c' → logprob: -11.002236366271973
    7. '(
' → logprob: -12.377236366271973
    8. ')' → logprob: -13.502236366271973
    9. ']' → logprob: -13.502236366271973
    10. ' (' → logprob: -14.002236366271973

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3259490728378296
    2. ')]' → logprob: -1.3259490728378296
    3. '])' → logprob: -5.075949192047119
    4. ']=(' → logprob: -5.325949192047119
    5. ')])' → logprob: -7.075949192047119
    6. ']' → logprob: -7.575949192047119
    7. ' )' → logprob: -9.700948715209961
    8. '])]' → logprob: -10.200948715209961
    9. ']=' → logprob: -11.325948715209961
    10. ')=' → logprob: -11.575948715209961

Token 145: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.0054730442352592945
    2. ']' → logprob: -5.5054731369018555
    3. ']=' → logprob: -6.6304731369018555
    4. '=(' → logprob: -10.130473136901855
    5. ')' → logprob: -10.630473136901855
    6. '])' → logprob: -12.505473136901855
    7. ']={' → logprob: -13.005473136901855
    8. ']="' → logprob: -13.630473136901855
    9. ')]' → logprob: -14.005473136901855
    10. ']='' → logprob: -14.130473136901855

Token 146: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.750008583068848
    3. '(i' → logprob: -14.250008583068848
    4. 'int' → logprob: -15.250008583068848
    5. '   ' → logprob: -16.125009536743164
    6. '
' → logprob: -16.875009536743164
    7. ' ' → logprob: -17.250009536743164
    8. ')' → logprob: -17.625009536743164
    9. ')i' → logprob: -17.625009536743164
    10. ' (' → logprob: -17.750009536743164

Token 147: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.019867917522788048
    2. ',' → logprob: -4.519867897033691
    3. 'j' → logprob: -4.769867897033691
    4. ' ,' → logprob: -8.269867897033691
    5. ' j' → logprob: -10.269867897033691
    6. ' ' → logprob: -13.519867897033691
    7. ',int' → logprob: -13.644867897033691
    8. ')' → logprob: -13.894867897033691
    9. '   ' → logprob: -13.894867897033691
    10. '```' → logprob: -14.394867897033691

Token 148: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.875011444091797
    3. ' )' → logprob: -13.375011444091797
    4. '       ' → logprob: -14.000011444091797
    5. '<|end|>' → logprob: -14.250011444091797
    6. '))' → logprob: -15.125011444091797
    7. ')}}' → logprob: -15.125011444091797
    8. ')}' → logprob: -15.500011444091797
    9. '   ' → logprob: -15.625011444091797
    10. '}' → logprob: -15.875011444091797

Token 149: '#' (ID: 2)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'snake' → logprob: -0.5374734401702881
    2. 'order' → logprob: -1.662473440170288
    3. 'head' → logprob: -2.412473440170288
    4. '#' → logprob: -2.662473440170288
    5. 'body' → logprob: -4.287473678588867
    6. 'next' → logprob: -4.662473678588867
    7. 'max' → logprob: -4.912473678588867
    8. 'start' → logprob: -5.162473678588867
    9. 'chain' → logprob: -5.912473678588867
    10. 'targets' → logprob: -6.162473678588867

Token 150: ' Build' (ID: 10885)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snake' → logprob: -0.692035436630249
    2. 'order' → logprob: -1.442035436630249
    3. '#' → logprob: -1.942035436630249
    4. 'body' → logprob: -2.442035436630249
    5. 'keys' → logprob: -5.317035675048828
    6. 'chain' → logprob: -5.442035675048828
    7. 'seq' → logprob: -5.442035675048828
    8. 'sorted' → logprob: -5.442035675048828
    9. 'head' → logprob: -6.192035675048828
    10. 'from' → logprob: -6.317035675048828

Token 151: ' worm' (ID: 40598)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snake' → logprob: -0.670464813709259
    2. 'body' → logprob: -2.1704647541046143
    3. ' a' → logprob: -2.4204647541046143
    4. ' snake' → logprob: -3.1704647541046143
    5. ' the' → logprob: -3.1704647541046143
    6. 'the' → logprob: -3.2954647541046143
    7. 'a' → logprob: -3.4204647541046143
    8. 'chain' → logprob: -3.7954647541046143
    9. 'adj' → logprob: -3.9204647541046143
    10. ' body' → logprob: -3.9204647541046143

Token 152: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.07984591275453568
    2. 'segments' → logprob: -3.454845905303955
    3. 'snake' → logprob: -4.329845905303955
    4. 'chain' → logprob: -4.329845905303955
    5. 'parts' → logprob: -4.704845905303955
    6. 'positions' → logprob: -5.829845905303955
    7. 'worm' → logprob: -6.329845905303955
    8. '#' → logprob: -6.454845905303955
    9. 'length' → logprob: -7.079845905303955
    10. 'from' → logprob: -7.579845905303955

Token 153: ' positions' (ID: 15897)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.13044239580631256
    2. 'worm' → logprob: -2.1304423809051514
    3. 'snake' → logprob: -6.8804426193237305
    4. 'order' → logprob: -7.0054426193237305
    5. 'worms' → logprob: -8.38044261932373
    6. 'positions' → logprob: -8.38044261932373
    7. '```' → logprob: -8.63044261932373
    8. 'segments' → logprob: -8.63044261932373
    9. 'w' → logprob: -8.75544261932373
    10. '#' → logprob: -9.13044261932373

Token 154: ' list' (ID: 1562)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.3216496706008911
    2. 'worm' → logprob: -1.3216496706008911
    3. 'snake' → logprob: -5.446649551391602
    4. 'w' → logprob: -7.071649551391602
    5. 'order' → logprob: -7.071649551391602
    6. '```' → logprob: -7.321649551391602
    7. 'worms' → logprob: -7.696649551391602
    8. 'positions' → logprob: -7.821649551391602
    9. '#' → logprob: -9.196649551391602
    10. ']' → logprob: -9.321649551391602

Token 155: ' from' (ID: 591)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.024680087342858315
    2. 'worm' → logprob: -3.7746801376342773
    3. '```' → logprob: -7.899680137634277
    4. 'snake' → logprob: -8.149680137634277
    5. 'positions' → logprob: -8.274680137634277
    6. 'w' → logprob: -8.524680137634277
    7. 'order' → logprob: -8.899680137634277
    8. 'pos' → logprob: -9.399680137634277
    9. 'worms' → logprob: -10.149680137634277
    10. '#' → logprob: -12.274680137634277

Token 156: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.08566650003194809
    2. '['' → logprob: -2.5856664180755615
    3. '"S' → logprob: -6.210666656494141
    4. ' '' → logprob: -6.585666656494141
    5. ''s' → logprob: -7.085666656494141
    6. 'head' → logprob: -7.960666656494141
    7. ''' → logprob: -7.960666656494141
    8. 'the' → logprob: -7.960666656494141
    9. 'S' → logprob: -7.960666656494141
    10. '```' → logprob: -8.83566665649414

Token 157: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.25914618372917175
    2. '['' → logprob: -1.7591462135314941
    3. ''S' → logprob: -3.134146213531494
    4. ''' → logprob: -5.509146213531494
    5. '"S' → logprob: -5.509146213531494
    6. '["' → logprob: -6.009146213531494
    7. 'pos' → logprob: -8.134145736694336
    8. '"' → logprob: -8.384145736694336
    9. '`' → logprob: -8.509145736694336
    10. '
' → logprob: -8.759145736694336

Token 158: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42832300066947937
    2. '',' → logprob: -2.0533230304718018
    3. '']' → logprob: -2.1783230304718018
    4. 'positions' → logprob: -4.303322792053223
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.303322792053223
    6. 'pos' → logprob: -4.678322792053223
    7. '')' → logprob: -4.678322792053223
    8. ',' → logprob: -4.803322792053223
    9. '',['' → logprob: -5.053322792053223
    10. ','' → logprob: -5.303322792053223

Token 159: ' then' (ID: 1815)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.13694316148757935
    2. 'positions' → logprob: -2.8869431018829346
    3. 'worm' → logprob: -3.3869431018829346
    4. ',' → logprob: -4.636943340301514
    5. 'snake' → logprob: -5.011943340301514
    6. 'pos' → logprob: -5.511943340301514
    7. '[' → logprob: -5.511943340301514
    8. 's' → logprob: -6.386943340301514
    9. 'head' → logprob: -6.761943340301514
    10. ']' → logprob: -6.886943340301514

Token 160: ' '' (ID: 461)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.00108003616333
    2. ''a' → logprob: -1.00108003616333
    3. 'sorted' → logprob: -2.12608003616333
    4. '[a' → logprob: -3.50108003616333
    5. '"' → logprob: -4.00108003616333
    6. '"a' → logprob: -4.12608003616333
    7. ' sorted' → logprob: -4.37608003616333
    8. 'for' → logprob: -4.37608003616333
    9. '["' → logprob: -4.62608003616333
    10. 'a' → logprob: -4.62608003616333

Token 161: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.6264154314994812
    2. 'a' → logprob: -0.8764154314994812
    3. 'abc' → logprob: -4.126415252685547
    4. 'sorted' → logprob: -4.876415252685547
    5. '"a' → logprob: -5.126415252685547
    6. ''' → logprob: -5.126415252685547
    7. ' a' → logprob: -5.626415252685547
    8. '"' → logprob: -6.126415252685547
    9. '['' → logprob: -6.251415252685547
    10. 'for' → logprob: -6.376415252685547

Token 162: ''' (ID: 6)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3869721591472626
    2. ',' → logprob: -2.011972188949585
    3. 'b' → logprob: -2.761972188949585
    4. '','' → logprob: -2.886972188949585
    5. ''' → logprob: -3.886972188949585
    6. '',' → logprob: -4.011971950531006
    7. 'bc' → logprob: -5.011971950531006
    8. ','' → logprob: -5.136971950531006
    9. ''b' → logprob: -5.511971950531006
    10. '')' → logprob: -5.761971950531006

Token 163: '..' (ID: 485)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.5153229236602783
    2. 'positions' → logprob: -1.7653229236602783
    3. ',' → logprob: -2.0153229236602783
    4. 'to' → logprob: -3.2653229236602783
    5. 'pos' → logprob: -4.140322685241699
    6. 'for' → logprob: -4.640322685241699
    7. 'worm' → logprob: -4.890322685241699
    8. 'parts' → logprob: -5.515322685241699
    9. '```' → logprob: -5.890322685241699
    10. ',b' → logprob: -6.140322685241699

Token 164: ' as' (ID: 472)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.5336488485336304
    2. ' =' → logprob: -1.7836488485336304
    3. 'positions' → logprob: -2.28364896774292
    4. ',' → logprob: -2.78364896774292
    5. ' to' → logprob: -2.78364896774292
    6. '=['' → logprob: -3.28364896774292
    7. 'for' → logprob: -3.40864896774292
    8. ' for' → logprob: -3.40864896774292
    9. '[' → logprob: -3.65864896774292
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.65864896774292

Token 165: ' per' (ID: 777)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8915342092514038
    2. '[]' → logprob: -1.1415342092514038
    3. ' follows' → logprob: -2.6415343284606934
    4. '[pos' → logprob: -3.0165343284606934
    5. '['' → logprob: -3.3915343284606934
    6. ' far' → logprob: -4.391534328460693
    7. 'sorted' → logprob: -4.641534328460693
    8. 'f' → logprob: -4.891534328460693
    9. '[
' → logprob: -5.016534328460693
    10. '[]
' → logprob: -5.016534328460693

Token 166: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2761480212211609
    2. 'sorted' → logprob: -2.5261480808258057
    3. ' sorted' → logprob: -2.6511480808258057
    4. ' "' → logprob: -3.9011480808258057
    5. '"S' → logprob: -4.026147842407227
    6. 'range' → logprob: -4.776147842407227
    7. '['' → logprob: -4.901147842407227
    8. ' the' → logprob: -5.026147842407227
    9. ''' → logprob: -5.151147842407227
    10. ' range' → logprob: -5.901147842407227

Token 167: '
' (ID: 198)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.03466884791851044
    2. 'worm' → logprob: -3.4096689224243164
    3. '```' → logprob: -8.159668922424316
    4. 'snake' → logprob: -8.284668922424316
    5. 'w' → logprob: -9.034668922424316
    6. 'positions' → logprob: -9.284668922424316
    7. 'worms' → logprob: -9.534668922424316
    8. 'pos' → logprob: -9.909668922424316
    9. 'keys' → logprob: -10.284668922424316
    10. 'order' → logprob: -10.534668922424316

Token 168: 'body' (ID: 4681)
  Prédit: 'body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.03262151777744293
    2. 'worm' → logprob: -3.5326216220855713
    3. 'snake' → logprob: -6.907621383666992
    4. '```' → logprob: -7.407621383666992
    5. 'positions' → logprob: -7.657621383666992
    6. 'w' → logprob: -8.282621383666992
    7. 'keys' → logprob: -8.907621383666992
    8. 'pos' → logprob: -9.407621383666992
    9. 'worms' → logprob: -9.532621383666992
    10. 'order' → logprob: -9.657621383666992

Token 169: '_chars' (ID: 94246)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.9162911772727966
    2. ' =' → logprob: -1.0412912368774414
    3. '=' → logprob: -2.0412912368774414
    4. '_positions' → logprob: -2.7912912368774414
    5. '=[' → logprob: -3.1662912368774414
    6. '=['' → logprob: -4.541291236877441
    7. '=_' → logprob: -6.416291236877441
    8. '=[]
' → logprob: -7.666291236877441
    9. '=["' → logprob: -8.041291236877441
    10. ' =[' → logprob: -8.666291236877441

Token 170: '=['' (ID: 31252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39695999026298523
    2. '=['' → logprob: -1.6469600200653076
    3. '=' → logprob: -2.0219600200653076
    4. '=["' → logprob: -6.3969597816467285
    5. '=[' → logprob: -7.6469597816467285
    6. '=[]' → logprob: -8.146960258483887
    7. ' =[' → logprob: -9.271960258483887
    8. '="' → logprob: -11.271960258483887
    9. ' ="' → logprob: -11.271960258483887
    10. ' ='' → logprob: -11.646960258483887

Token 171: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00014716439181938767
    2. 'a' → logprob: -9.625146865844727
    3. ''S' → logprob: -9.875146865844727
    4. ''' → logprob: -10.750146865844727
    5. '']' → logprob: -12.750146865844727
    6. '"S' → logprob: -13.625146865844727
    7. 'b' → logprob: -14.000146865844727
    8. '"' → logprob: -14.000146865844727
    9. ''s' → logprob: -14.750146865844727
    10. ' S' → logprob: -15.000146865844727

Token 172: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.24512284994125366
    2. ''' → logprob: -2.4951229095458984
    3. '','' → logprob: -2.4951229095458984
    4. '',' → logprob: -2.9951229095458984
    5. '',"' → logprob: -6.370122909545898
    6. '']
' → logprob: -7.870122909545898
    7. '',
' → logprob: -9.995122909545898
    8. ']' → logprob: -9.995122909545898
    9. ','' → logprob: -10.120122909545898
    10. '"]' → logprob: -10.120122909545898

Token 173: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ''a' → logprob: -15.125
    3. ' a' → logprob: -17.0
    4. '']' → logprob: -17.375
    5. ''' → logprob: -18.0
    6. 'abc' → logprob: -19.0
    7. 'S' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. 's' → logprob: -19.625
    10. '
' → logprob: -20.0

Token 174: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.00031615851912647486
    2. '',' → logprob: -8.125316619873047
    3. ''' → logprob: -11.000316619873047
    4. '',"' → logprob: -13.625316619873047
    5. 'b' → logprob: -14.125316619873047
    6. '']' → logprob: -14.625316619873047
    7. ','' → logprob: -15.000316619873047
    8. '',
' → logprob: -15.250316619873047
    9. ''b' → logprob: -16.250316619873047
    10. '","' → logprob: -16.250316619873047

Token 175: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014169031754136086
    2. ''b' → logprob: -4.264169216156006
    3. ''' → logprob: -12.139168739318848
    4. ' b' → logprob: -16.889169692993164
    5. '','' → logprob: -18.014169692993164
    6. ''s' → logprob: -18.264169692993164
    7. ',b' → logprob: -18.514169692993164
    8. '',' → logprob: -18.514169692993164
    9. '"' → logprob: -19.014169692993164
    10. '
' → logprob: -19.639169692993164

Token 176: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.00022713904036208987
    2. '',' → logprob: -8.625226974487305
    3. ''' → logprob: -10.125226974487305
    4. 'c' → logprob: -12.625226974487305
    5. '',"' → logprob: -13.000226974487305
    6. '',
' → logprob: -14.000226974487305
    7. ','' → logprob: -15.125226974487305
    8. '']' → logprob: -15.625226974487305
    9. '","' → logprob: -16.000226974487305
    10. '','=','' → logprob: -16.500226974487305

Token 177: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010373335098847747
    2. ''' → logprob: -6.876037120819092
    3. 'cd' → logprob: -12.75103759765625
    4. '',' → logprob: -14.12603759765625
    5. '"' → logprob: -15.50103759765625
    6. ' c' → logprob: -15.75103759765625
    7. '','' → logprob: -15.75103759765625
    8. 'cdf' → logprob: -16.25103759765625
    9. '']' → logprob: -16.37603759765625
    10. ')c' → logprob: -16.50103759765625

Token 178: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.002366966800764203
    2. 'd' → logprob: -6.37736701965332
    3. '',' → logprob: -7.50236701965332
    4. ''d' → logprob: -9.50236701965332
    5. ''' → logprob: -11.12736701965332
    6. 'de' → logprob: -11.37736701965332
    7. '',"' → logprob: -12.50236701965332
    8. ',d' → logprob: -12.87736701965332
    9. '',
' → logprob: -13.25236701965332
    10. 'def' → logprob: -13.50236701965332

Token 179: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4974866644479334e-05
    2. 'de' → logprob: -11.375015258789062
    3. ''d' → logprob: -13.375015258789062
    4. 'e' → logprob: -14.000015258789062
    5. 'def' → logprob: -14.750015258789062
    6. ''' → logprob: -15.250015258789062
    7. ' d' → logprob: -15.250015258789062
    8. '']' → logprob: -16.500015258789062
    9. '
' → logprob: -18.375015258789062
    10. '',' → logprob: -18.375015258789062

Token 180: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0005906827282160521
    2. '',' → logprob: -7.500590801239014
    3. ''e' → logprob: -11.250590324401855
    4. ''' → logprob: -11.500590324401855
    5. 'e' → logprob: -11.875590324401855
    6. '']' → logprob: -12.625590324401855
    7. '',"' → logprob: -13.000590324401855
    8. '',
' → logprob: -14.250590324401855
    9. ','' → logprob: -14.500590324401855
    10. '","' → logprob: -14.875590324401855

Token 181: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6931835412979126
    2. ''e' → logprob: -0.6931835412979126
    3. ' e' → logprob: -10.443183898925781
    4. ''' → logprob: -12.443183898925781
    5. '']' → logprob: -13.693183898925781
    6. '’e' → logprob: -14.068183898925781
    7. ' '' → logprob: -14.443183898925781
    8. '`' → logprob: -16.19318389892578
    9. '	e' → logprob: -16.19318389892578
    10. '"' → logprob: -16.31818389892578

Token 182: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00024608144303783774
    2. ']' → logprob: -9.375246047973633
    3. ''' → logprob: -9.500246047973633
    4. '"]' → logprob: -10.500246047973633
    5. '']
' → logprob: -10.750246047973633
    6. '',' → logprob: -11.125246047973633
    7. '','' → logprob: -11.375246047973633
    8. '']

' → logprob: -12.250246047973633
    9. '')' → logprob: -13.000246047973633
    10. ' ']' → logprob: -13.000246047973633

Token 183: 'worm' (ID: 73750)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.0007509016431868076
    2. ']' → logprob: -8.750750541687012
    3. '```' → logprob: -9.125750541687012
    4. 'snake' → logprob: -9.250750541687012
    5. 'positions' → logprob: -9.375750541687012
    6. 'worm' → logprob: -9.375750541687012
    7. 'for' → logprob: -10.000750541687012
    8. '#' → logprob: -10.875750541687012
    9. '=' → logprob: -11.000750541687012
    10. ' body' → logprob: -11.000750541687012

Token 184: '_body' (ID: 31684)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.626956045627594
    2. '_positions' → logprob: -1.0019559860229492
    3. ' =' → logprob: -2.751955986022949
    4. '=[]' → logprob: -3.626955986022949
    5. '=_' → logprob: -6.001955986022949
    6. '_pos' → logprob: -6.251955986022949
    7. '_body' → logprob: -6.501955986022949
    8. '=[' → logprob: -6.626955986022949
    9. '=[]
' → logprob: -8.75195598602295
    10. '_' → logprob: -8.75195598602295

Token 185: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.09546959400177
    2. '=[' → logprob: -1.22046959400177
    3. '=' → logprob: -1.47046959400177
    4. ' =' → logprob: -1.97046959400177
    5. ' =[' → logprob: -6.8454694747924805
    6. '=[]
' → logprob: -9.34546947479248
    7. '=['' → logprob: -9.97046947479248
    8. '=list' → logprob: -10.47046947479248
    9. '=[[' → logprob: -11.22046947479248
    10. '=len' → logprob: -11.34546947479248

Token 186: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011178565211594105
    2. 'i' → logprob: -4.761178493499756
    3. 'idx' → logprob: -6.011178493499756
    4. ' for' → logprob: -9.761178970336914
    5. 'while' → logprob: -10.761178970336914
    6. 'k' → logprob: -10.761178970336914
    7. 'index' → logprob: -11.761178970336914
    8. '```' → logprob: -14.386178970336914
    9. 'length' → logprob: -15.011178970336914
    10. ' idx' → logprob: -15.636178970336914

Token 187: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6177857518196106
    2. 'ch' → logprob: -1.2427856922149658
    3. 'char' → logprob: -1.8677856922149658
    4. ' c' → logprob: -4.492785930633545
    5. ' ch' → logprob: -5.992785930633545
    6. 'i' → logprob: -6.367785930633545
    7. 'k' → logprob: -6.617785930633545
    8. ' char' → logprob: -7.742785930633545
    9. 'x' → logprob: -8.742785453796387
    10. '_char' → logprob: -8.742785453796387

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026447178795933723
    2. 'in' → logprob: -3.651447296142578
    3. ' ' → logprob: -8.901447296142578
    4. 's' → logprob: -13.026447296142578
    5. '  ' → logprob: -13.651447296142578
    6. 'n' → logprob: -13.651447296142578
    7. '   ' → logprob: -13.651447296142578
    8. '_in' → logprob: -13.776447296142578
    9. '	in' → logprob: -13.901447296142578
    10. 'i' → logprob: -14.276447296142578

Token 189: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.00016921341011766344
    2. ' body' → logprob: -8.750168800354004
    3. '['' → logprob: -12.250168800354004
    4. 'pos' → logprob: -13.250168800354004
    5. 'range' → logprob: -13.875168800354004
    6. '   ' → logprob: -14.000168800354004
    7. ' ' → logprob: -14.250168800354004
    8. '[' → logprob: -14.875168800354004
    9. '["' → logprob: -15.125168800354004
    10. '<body' → logprob: -15.250168800354004

Token 190: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -5.796184723294573e-06
    2. 'chars' → logprob: -12.125005722045898
    3. 's' → logprob: -15.750005722045898
    4. '_body' → logprob: -17.0000057220459
    5. '_' → logprob: -17.1250057220459
    6. '_coords' → logprob: -17.7500057220459
    7. 'Chars' → logprob: -17.7500057220459
    8. '(chars' → logprob: -17.7500057220459
    9. '_char' → logprob: -18.8750057220459
    10. '_chunks' → logprob: -19.0000057220459

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2813033163547516
    2. ':
' → logprob: -1.4063032865524292
    3. ' if' → logprob: -9.656303405761719
    4. 'if' → logprob: -9.781303405761719
    5. '):
' → logprob: -11.906303405761719
    6. ':
' → logprob: -12.531303405761719
    7. ':

' → logprob: -12.781303405761719
    8. '	if' → logprob: -12.906303405761719
    9. 'in' → logprob: -13.031303405761719
    10. '[' → logprob: -13.156303405761719

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08023038506507874
    2. ' if' → logprob: -2.580230474472046
    3. 'if' → logprob: -6.955230236053467
    4. '<|end|>' → logprob: -8.455230712890625
    5. '	if' → logprob: -9.580230712890625
    6. ' ' → logprob: -10.330230712890625
    7. '<|end|>' → logprob: -10.455230712890625
    8. ',' → logprob: -11.080230712890625
    9. '```' → logprob: -12.830230712890625
    10. ' with' → logprob: -12.955230712890625

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5763005614280701
    2. 'if' (adapté à ' if') → logprob: -0.8263005614280701
    3. '   ' → logprob: -7.951300621032715
    4. 'ch' → logprob: -11.951300621032715
    5. '	if' → logprob: -13.826300621032715
    6. ' ' → logprob: -14.826300621032715
    7. ' ch' → logprob: -15.076300621032715
    8. 'If' → logprob: -15.951300621032715
    9. '  ' → logprob: -16.0762996673584
    10. ';if' → logprob: -16.4512996673584

Token 194: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.02324594371020794
    2. ' ch' → logprob: -3.7732460498809814
    3. '	ch' → logprob: -15.273245811462402
    4. '(ch' → logprob: -15.773245811462402
    5. ' ' → logprob: -17.02324676513672
    6. '[ch' → logprob: -17.02324676513672
    7. '   ' → logprob: -17.39824676513672
    8. '_ch' → logprob: -18.64824676513672
    9. ',ch' → logprob: -18.64824676513672
    10. 'Ch' → logprob: -18.96074676513672

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16026535630226135
    2. 'in' → logprob: -1.910265326499939
    3. ' not' → logprob: -11.53526496887207
    4. ' ' → logprob: -12.03526496887207
    5. 's' → logprob: -12.16026496887207
    6. ')' → logprob: -12.41026496887207
    7. 'n' → logprob: -12.41026496887207
    8. 'not' → logprob: -12.91026496887207
    9. 'i' → logprob: -13.03526496887207
    10. ' i' → logprob: -13.78526496887207

Token 196: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005233763717114925
    2. ' pos' → logprob: -5.2552337646484375
    3. '(pos' → logprob: -17.380233764648438
    4. '	pos' → logprob: -17.755233764648438
    5. '_pos' → logprob: -17.880233764648438
    6. '[pos' → logprob: -17.880233764648438
    7. ' ' → logprob: -19.255233764648438
    8. '   ' → logprob: -19.255233764648438
    9. ',pos' → logprob: -19.630233764648438
    10. '.pos' → logprob: -19.755233764648438

Token 197: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.670925358776003e-05
    2. 'dict' → logprob: -9.625066757202148
    3. 'Dict' → logprob: -15.000066757202148
    4. '_DICT' → logprob: -15.500066757202148
    5. 'edict' → logprob: -17.62506675720215
    6. 'ict' → logprob: -17.87506675720215
    7. '```' → logprob: -19.00006675720215
    8. '_dic' → logprob: -19.37506675720215
    9. 'DICT' → logprob: -19.87506675720215
    10. ' dict' → logprob: -20.00006675720215

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002059853868559003
    2. '):' → logprob: -6.7520599365234375
    3. ':
' → logprob: -7.1270599365234375
    4. ']:' → logprob: -9.877059936523438
    5. ' :' → logprob: -11.002059936523438
    6. '>:' → logprob: -12.127059936523438
    7. '):
' → logprob: -12.377059936523438
    8. '():' → logprob: -13.252059936523438
    9. ':**' → logprob: -13.252059936523438
    10. '}:' → logprob: -13.377059936523438

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5110758543014526
    2. '       ' → logprob: -1.7610758543014526
    3. ' worm' → logprob: -1.7610758543014526
    4. 'worm' → logprob: -2.886075973510742
    5. '    
' → logprob: -9.136075973510742
    6. '	w' → logprob: -9.386075973510742
    7. '        
' → logprob: -9.636075973510742
    8. '    ' → logprob: -9.761075973510742
    9. '
' → logprob: -9.886075973510742
    10. '     ' → logprob: -10.261075973510742

Token 200: ' worm' (ID: 40598)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' (adapté à ' worm') → logprob: -0.0006247530109249055
    2. ' worm' → logprob: -7.625624656677246
    3. '       ' → logprob: -9.250624656677246
    4. '   ' → logprob: -10.250624656677246
    5. ' ' → logprob: -13.500624656677246
    6. 'w' → logprob: -14.125624656677246
    7. 'wolf' → logprob: -14.250624656677246
    8. 'worms' → logprob: -14.250624656677246
    9. '```' → logprob: -15.000624656677246
    10. '     ' → logprob: -15.125624656677246

Token 201: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -6.704273118884885e-07
    2. 'body' → logprob: -15.000000953674316
    3. '_' → logprob: -16.0
    4. '_BODY' → logprob: -16.5
    5. ' _' → logprob: -17.375
    6. '_b' → logprob: -17.625
    7. '<body' → logprob: -17.875
    8. '._' → logprob: -18.125
    9. '```' → logprob: -18.375
    10. '.append' → logprob: -18.75

Token 202: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.375004768371582
    3. ' .' → logprob: -14.500004768371582
    4. '.extend' → logprob: -16.0000057220459
    5. 'append' → logprob: -16.0000057220459
    6. ').' → logprob: -16.1250057220459
    7. '].' → logprob: -18.0000057220459
    8. '.Append' → logprob: -18.2500057220459
    9. '.push' → logprob: -19.3750057220459
    10. '=.' → logprob: -19.6250057220459

Token 203: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0005837726057507098
    2. 'pos' → logprob: -7.500583648681641
    3. '(' → logprob: -10.50058364868164
    4. ' pos' → logprob: -12.75058364868164
    5. ' (' → logprob: -16.12558364868164
    6. ',pos' → logprob: -16.25058364868164
    7. '(
' → logprob: -17.00058364868164
    8. '	pos' → logprob: -17.37558364868164
    9. '((' → logprob: -17.62558364868164
    10. '[pos' → logprob: -17.75058364868164

Token 204: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -4.429896944202483e-05
    2. 'dict' → logprob: -10.250043869018555
    3. 'Dict' → logprob: -11.750043869018555
    4. '_DICT' → logprob: -14.250043869018555
    5. '[' → logprob: -17.125043869018555
    6. '```' → logprob: -17.250043869018555
    7. 'edict' → logprob: -17.375043869018555
    8. 'ict' → logprob: -17.875043869018555
    9. '[(' → logprob: -17.875043869018555
    10. '_dic' → logprob: -18.000043869018555

Token 205: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -7.896309739408025e-07
    2. 'ch' → logprob: -14.250000953674316
    3. '[c' → logprob: -18.375
    4. '(ch' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. ')' → logprob: -19.5
    7. '[
' → logprob: -20.75
    8. '
' → logprob: -21.375
    9. ')[' → logprob: -22.125
    10. ' ch' → logprob: -22.25

Token 206: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0021795271895825863
    2. ')' → logprob: -6.2521796226501465
    3. ']' → logprob: -8.752179145812988
    4. ')]' → logprob: -10.002179145812988
    5. ')])' → logprob: -10.877179145812988
    6. '))' → logprob: -11.127179145812988
    7. '])
' → logprob: -12.252179145812988
    8. ' ])' → logprob: -12.377179145812988
    9. ']))' → logprob: -13.627179145812988
    10. '])

' → logprob: -14.502179145812988

Token 207: '#' (ID: 2)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.19948533177375793
    2. '#' → logprob: -3.6994853019714355
    3. 'queue' → logprob: -3.9494853019714355
    4. 'snake' → logprob: -4.0744853019714355
    5. 'Q' → logprob: -4.1994853019714355
    6. 'head' → logprob: -4.3244853019714355
    7. 'length' → logprob: -4.3244853019714355
    8. 'goal' → logprob: -4.5744853019714355
    9. 'dist' → logprob: -4.5744853019714355
    10. 'start' → logprob: -4.8244853019714355

Token 208: ' Pre' (ID: 4659)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9219678044319153
    2. 'food' → logprob: -1.4219677448272705
    3. 'start' → logprob: -2.5469677448272705
    4. 'dist' → logprob: -2.7969677448272705
    5. 'queue' → logprob: -2.9219677448272705
    6. 'def' → logprob: -2.9219677448272705
    7. 'visited' → logprob: -3.0469677448272705
    8. 'q' → logprob: -3.7969677448272705
    9. 'target' → logprob: -4.29696798324585
    10. 'head' → logprob: -4.54696798324585

Token 209: 'compute' (ID: 54521)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2472103834152222
    2. 'q' → logprob: -1.3722103834152222
    3. 'visited' → logprob: -1.6222103834152222
    4. 'v' → logprob: -2.7472105026245117
    5. 'def' → logprob: -2.9972105026245117
    6. 'dist' → logprob: -3.6222105026245117
    7. 'd' → logprob: -3.6222105026245117
    8. 'from' → logprob: -3.6222105026245117
    9. 'queue' → logprob: -4.122210502624512
    10. 'p' → logprob: -5.122210502624512

Token 210: ' food' (ID: 4232)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4295557141304016
    2. 'from' → logprob: -2.554555654525757
    3. 'max' → logprob: -2.804555654525757
    4. 'distance' → logprob: -2.804555654525757
    5. 'visited' → logprob: -3.054555654525757
    6. 'food' → logprob: -3.054555654525757
    7. 'queue' → logprob: -5.054555892944336
    8. 'initial' → logprob: -5.054555892944336
    9. 'next' → logprob: -5.429555892944336
    10. ' dist' → logprob: -5.554555892944336

Token 211: ' targets' (ID: 22836)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.09001781791448593
    2. 'positions' → logprob: -2.715017795562744
    3. '=[]' → logprob: -4.840017795562744
    4. '_list' → logprob: -5.590017795562744
    5. '_pos' → logprob: -5.715017795562744
    6. 'pos' → logprob: -6.965017795562744
    7. '_count' → logprob: -7.215017795562744
    8. '_locations' → logprob: -7.465017795562744
    9. 's' → logprob: -7.840017795562744
    10. '_num' → logprob: -7.965017795562744

Token 212: ' in' (ID: 306)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.032330140471458435
    2. 'foods' → logprob: -3.53233003616333
    3. 'max' → logprob: -6.28233003616333
    4. 'targets' → logprob: -7.40733003616333
    5. 'target' → logprob: -10.157330513000488
    6. 'num' → logprob: -10.532330513000488
    7. 'for' → logprob: -11.782330513000488
    8. ' food' → logprob: -11.907330513000488
    9. 'sorted' → logprob: -12.907330513000488
    10. '=' → logprob: -13.032330513000488

Token 213: ' order' (ID: 2569)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.8615087866783142
    2. 'order' → logprob: -1.111508846282959
    3. 'range' → logprob: -1.736508846282959
    4. 'a' → logprob: -3.236508846282959
    5. 'ascending' → logprob: -3.486508846282959
    6. '[' → logprob: -6.486508846282959
    7. '[num' → logprob: -8.9865083694458
    8. 'sequence' → logprob: -9.2365083694458
    9. '[int' → logprob: -9.3615083694458
    10. '[number' → logprob: -9.4865083694458

Token 214: ' ' (ID: 220)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.03511517122387886
    2. 'foods' → logprob: -3.4101152420043945
    3. 'targets' → logprob: -7.0351152420043945
    4. 'max' → logprob: -7.7851152420043945
    5. 'num' → logprob: -9.660115242004395
    6. 'target' → logprob: -9.660115242004395
    7. 'N' → logprob: -11.660115242004395
    8. ' food' → logprob: -12.160115242004395
    9. 'fo' → logprob: -12.285115242004395
    10. 'sorted' → logprob: -12.535115242004395

Token 215: '1' (ID: 16)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.02915600873529911
    2. 'foods' → logprob: -3.904155969619751
    3. 'max' → logprob: -4.90415620803833
    4. 'targets' → logprob: -7.90415620803833
    5. '=' → logprob: -8.279155731201172
    6. 'num' → logprob: -8.404155731201172
    7. 'sorted' → logprob: -9.279155731201172
    8. 'N' → logprob: -9.529155731201172
    9. 'target' → logprob: -10.154155731201172
    10. 'next' → logprob: -10.779155731201172

Token 216: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35560497641563416
    2. '...' → logprob: -2.730604887008667
    3. ',...' → logprob: -3.480604887008667
    4. 'for' → logprob: -3.480604887008667
    5. 'max' → logprob: -3.605604887008667
    6. '<|end|>' → logprob: -3.605604887008667
    7. '+' → logprob: -3.980604887008667
    8. 'range' → logprob: -4.105605125427246
    9. ',max' → logprob: -4.230605125427246
    10. '..' → logprob: -4.605605125427246

Token 217: 'N' (ID: 45)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.6314060091972351
    2. 'max' → logprob: -0.8814060091972351
    3. 'foods' → logprob: -3.75640606880188
    4. 'for' → logprob: -4.006405830383301
    5. 'K' → logprob: -6.006405830383301
    6. 'num' → logprob: -6.131405830383301
    7. 'while' → logprob: -6.256405830383301
    8. 'if' → logprob: -6.256405830383301
    9. 'N' → logprob: -6.381405830383301
    10. 'targets' → logprob: -7.756405830383301

Token 218: '
' (ID: 198)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.030710328370332718
    2. 'foods' → logprob: -3.530710220336914
    3. 'targets' → logprob: -7.030710220336914
    4. 'target' → logprob: -10.030710220336914
    5. '```' → logprob: -12.155710220336914
    6. ' food' → logprob: -12.405710220336914
    7. 'for' → logprob: -12.530710220336914
    8. 'fo' → logprob: -12.655710220336914
    9. 'go' → logprob: -12.905710220336914
    10. 'next' → logprob: -13.030710220336914

Token 219: 'foods' (ID: 144120)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.03428901731967926
    2. 'foods' → logprob: -3.4092891216278076
    3. 'targets' → logprob: -7.4092888832092285
    4. 'target' → logprob: -10.909289360046387
    5. ' food' → logprob: -12.159289360046387
    6. 'fo' → logprob: -12.284289360046387
    7. '```' → logprob: -13.284289360046387
    8. 'go' → logprob: -13.534289360046387
    9. 'for' → logprob: -13.909289360046387
    10. 'Food' → logprob: -14.034289360046387

Token 220: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3242851495742798
    2. '=[]' → logprob: -1.5742851495742798
    3. '=[' → logprob: -2.9492850303649902
    4. ' =' → logprob: -4.07428503036499
    5. '=list' → logprob: -8.074285507202148
    6. '=[]
' → logprob: -10.074285507202148
    7. '={}' → logprob: -10.574285507202148
    8. '=[]
' → logprob: -11.199285507202148
    9. '=[],' → logprob: -12.324285507202148
    10. '=['' → logprob: -12.949285507202148

Token 221: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0032446200493723154
    2. 'None' → logprob: -5.878244400024414
    3. ' pos' → logprob: -9.003244400024414
    4. ']' → logprob: -9.128244400024414
    5. '[pos' → logprob: -9.128244400024414
    6. '(pos' → logprob: -10.128244400024414
    7. '[' → logprob: -10.628244400024414
    8. 'tuple' → logprob: -11.753244400024414
    9. '0' → logprob: -11.878244400024414
    10. ']
' → logprob: -12.378244400024414

Token 222: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.026470167562365532
    2. 'dict' → logprob: -3.651470184326172
    3. 'ict' → logprob: -9.401470184326172
    4. 'Dict' → logprob: -10.151470184326172
    5. '[' → logprob: -12.026470184326172
    6. '(dict' → logprob: -12.026470184326172
    7. '(' → logprob: -12.151470184326172
    8. 'pos' → logprob: -12.276470184326172
    9. 'edict' → logprob: -12.776470184326172
    10. 'ect' → logprob: -13.026470184326172

Token 223: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003479785518720746
    2. '[k' → logprob: -8.375348091125488
    3. '.get' → logprob: -9.875348091125488
    4. '(i' → logprob: -11.000348091125488
    5. '[num' → logprob: -11.000348091125488
    6. '[n' → logprob: -11.375348091125488
    7. 'i' → logprob: -11.375348091125488
    8. '[x' → logprob: -12.250348091125488
    9. '[int' → logprob: -13.500348091125488
    10. '[idx' → logprob: -14.375348091125488

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005099033936858177
    2. 'for' → logprob: -5.630098819732666
    3. ' for' → logprob: -6.630098819732666
    4. ' ]' → logprob: -9.005099296569824
    5. ')' → logprob: -10.130099296569824
    6. '+' → logprob: -11.505099296569824
    7. ' ' → logprob: -13.630099296569824
    8. '[' → logprob: -14.005099296569824
    9. '1' → logprob: -14.630099296569824
    10. '[i' → logprob: -15.255099296569824

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868870735168457
    2. 'for' → logprob: -1.1368870735168457
    3. ' ' → logprob: -12.261886596679688
    4. ']' → logprob: -12.261886596679688
    5. '	for' → logprob: -13.011886596679688
    6. ')' → logprob: -13.511886596679688
    7. ' if' → logprob: -13.636886596679688
    8. 'if' → logprob: -14.261886596679688
    9. '   ' → logprob: -14.261886596679688
    10. ' ' → logprob: -15.761886596679688

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05885174497961998
    2. ' i' → logprob: -3.058851718902588
    3. ' range' → logprob: -5.058851718902588
    4. 'range' → logprob: -5.558851718902588
    5. ' in' → logprob: -12.308852195739746
    6. 'in' → logprob: -13.558852195739746
    7. ' ' → logprob: -16.80885124206543
    8. ' ' → logprob: -16.80885124206543
    9. '	i' → logprob: -18.05885124206543
    10. 'Range' → logprob: -18.93385124206543

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014095335267484188
    2. 'range' → logprob: -4.764095306396484
    3. 'in' → logprob: -5.639095306396484
    4. ' range' → logprob: -6.264095306396484
    5. 's' → logprob: -13.014095306396484
    6. 'ange' → logprob: -13.139095306396484
    7. '(range' → logprob: -14.514095306396484
    8. 'n' → logprob: -14.514095306396484
    9. ' ' → logprob: -15.139095306396484
    10. '1' → logprob: -15.639095306396484

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416398212313652
    2. ' range' → logprob: -4.264163970947266
    3. '(range' → logprob: -14.889163970947266
    4. '	range' → logprob: -16.139163970947266
    5. '   ' → logprob: -17.264163970947266
    6. 'sorted' → logprob: -17.639163970947266
    7. '1' → logprob: -17.764163970947266
    8. ' ' → logprob: -18.014163970947266
    9. '
' → logprob: -18.764163970947266
    10. '`' → logprob: -18.889163970947266

Token 229: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01251129899173975
    2. '1' → logprob: -4.387511253356934
    3. ' (' → logprob: -13.637511253356934
    4. 'N' → logprob: -15.762511253356934
    5. ' ' → logprob: -17.13751220703125
    6. 'from' → logprob: -17.26251220703125
    7. '(N' → logprob: -17.38751220703125
    8. '   ' → logprob: -17.38751220703125
    9. '[' → logprob: -17.51251220703125
    10. '```' → logprob: -17.76251220703125

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -14.625003814697266
    4. 'N' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '```' → logprob: -18.625003814697266
    7. '
' → logprob: -18.750003814697266
    8. '[' → logprob: -19.375003814697266
    9. '۱' → logprob: -19.625003814697266
    10. '#' → logprob: -19.625003814697266

Token 231: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3878360092639923
    2. ',N' → logprob: -1.13783597946167
    3. ' ,' → logprob: -7.01283597946167
    4. '1' → logprob: -10.512836456298828
    5. ',n' → logprob: -10.887836456298828
    6. 'N' → logprob: -11.637836456298828
    7. '(N' → logprob: -13.387836456298828
    8. '(' → logprob: -13.637836456298828
    9. ' ' → logprob: -14.012836456298828
    10. ',(' → logprob: -14.012836456298828

Token 232: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009420731803402305
    2. ' +' → logprob: -7.000942230224609
    3. ')]' → logprob: -11.25094223022461
    4. ',' → logprob: -11.75094223022461
    5. ')' → logprob: -12.75094223022461
    6. '1' → logprob: -13.25094223022461
    7. ',N' → logprob: -13.37594223022461
    8. ',+' → logprob: -13.37594223022461
    9. ')])' → logprob: -15.00094223022461
    10. ')+' → logprob: -15.12594223022461

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.125003814697266
    4. 'N' → logprob: -17.500003814697266
    5. ')' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '
' → logprob: -18.875003814697266
    8. '``' → logprob: -19.250003814697266
    9. '0' → logprob: -20.000003814697266
    10. '+' → logprob: -20.000003814697266

Token 234: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011802274966612458
    2. ']' → logprob: -6.751180171966553
    3. ')' → logprob: -11.626180648803711
    4. ' ]' → logprob: -14.751180648803711
    5. '}]' → logprob: -15.251180648803711
    6. ' )' → logprob: -16.25118064880371
    7. '])' → logprob: -16.25118064880371
    8. '>]' → logprob: -16.62618064880371
    9. '])]' → logprob: -16.87618064880371
    10. ']]' → logprob: -17.12618064880371

Token 235: 'def' (ID: 1314)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6652235984802246
    2. 'visited' → logprob: -0.9152235984802246
    3. 'def' → logprob: -3.2902235984802246
    4. 'start' → logprob: -3.9152235984802246
    5. 'dist' → logprob: -4.290223598480225
    6. 'queue' → logprob: -5.040223598480225
    7. 'q' → logprob: -6.165223598480225
    8. 'head' → logprob: -6.665223598480225
    9. '```' → logprob: -6.915223598480225
    10. '#' → logprob: -7.165223598480225

Token 236: ' is' (ID: 382)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.07618842273950577
    2. 'b' → logprob: -2.701188325881958
    3. ' is' → logprob: -6.201188564300537
    4. ' solve' → logprob: -6.576188564300537
    5. 'solve' → logprob: -6.576188564300537
    6. 'is' → logprob: -7.826188564300537
    7. ' valid' → logprob: -8.076188087463379
    8. ' can' → logprob: -8.201188087463379
    9. '```' → logprob: -8.826188087463379
    10. 'valid' → logprob: -9.076188087463379

Token 237: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.011710075661540031
    2. '_in' → logprob: -5.011710166931152
    3. 'valid' → logprob: -6.511710166931152
    4. '_inside' → logprob: -6.511710166931152
    5. '_safe' → logprob: -6.636710166931152
    6. '_pass' → logprob: -7.886710166931152
    7. '_with' → logprob: -8.886710166931152
    8. '_access' → logprob: -10.011710166931152
    9. '_move' → logprob: -10.511710166931152
    10. 'Valid' → logprob: -10.636710166931152

Token 238: '(r' (ID: 4729)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6211404204368591
    2. '(r' → logprob: -0.8711404204368591
    3. '(y' → logprob: -3.871140480041504
    4. '(i' → logprob: -4.371140480041504
    5. '(' → logprob: -5.246140480041504
    6. '(nx' → logprob: -5.996140480041504
    7. '(pos' → logprob: -6.246140480041504
    8. '(row' → logprob: -7.121140480041504
    9. ' (' → logprob: -8.871140480041504
    10. '(rx' → logprob: -11.121140480041504

Token 239: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16614320874214172
    2. ',c' → logprob: -2.0411431789398193
    3. ',k' → logprob: -4.791143417358398
    4. ' ,' → logprob: -5.291143417358398
    5. ',x' → logprob: -5.541143417358398
    6. ',r' → logprob: -5.916143417358398
    7. ',u' → logprob: -7.041143417358398
    8. ',t' → logprob: -7.541143417358398
    9. ',w' → logprob: -7.916143417358398
    10. ',s' → logprob: -8.166143417358398

Token 240: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11572220176458359
    2. '):' → logprob: -2.740722179412842
    3. ',r' → logprob: -3.365722179412842
    4. ' ,' → logprob: -5.865722179412842
    5. '):
' → logprob: -5.865722179412842
    6. ',n' → logprob: -6.365722179412842
    7. ',int' → logprob: -6.865722179412842
    8. ',len' → logprob: -7.990722179412842
    9. ',k' → logprob: -8.11572265625
    10. ',size' → logprob: -8.49072265625

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050943829119205475
    2. ' return' → logprob: -3.0509438514709473
    3. '<|end|>' → logprob: -6.675943851470947
    4. '	return' → logprob: -7.925943851470947
    5. ' ' → logprob: -7.925943851470947
    6. 'return' → logprob: -9.050943374633789
    7. ' 
' → logprob: -9.050943374633789
    8. '    
' → logprob: -10.550943374633789
    9. '    ' → logprob: -10.925943374633789
    10. '       ' → logprob: -10.925943374633789

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07250683009624481
    2. ' return' → logprob: -2.822506904602051
    3. '0' → logprob: -4.572506904602051
    4. '   ' → logprob: -8.82250690460205
    5. 'if' → logprob: -13.69750690460205
    6. ' ' → logprob: -13.69750690460205
    7. '
' → logprob: -14.07250690460205
    8. '	return' → logprob: -14.07250690460205
    9. '1' → logprob: -15.57250690460205
    10. ' if' → logprob: -16.197505950927734

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '(' → logprob: -18.75007438659668
    4. '   ' → logprob: -20.00007438659668
    5. ' ' → logprob: -20.87507438659668
    6. '00' → logprob: -21.75007438659668
    7. '`' → logprob: -22.37507438659668
    8. '
' → logprob: -22.50007438659668
    9. ' (' → logprob: -22.50007438659668
    10. '０' → logprob: -22.50007438659668

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '(' → logprob: -18.375
    4. '０' → logprob: -22.625
    5. '۰' → logprob: -24.25
    6. '00' → logprob: -24.75
    7. '`' → logprob: -25.0
    8. '
' → logprob: -25.125
    9. '

' → logprob: -25.625
    10. '-' → logprob: -25.875

Token 245: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.061999283730983734
    2. ' <=' → logprob: -2.8119993209838867
    3. '<' → logprob: -11.311999320983887
    4. '>=' → logprob: -11.811999320983887
    5. '0' → logprob: -12.061999320983887
    6. ' ' → logprob: -12.686999320983887
    7. ' <' → logprob: -14.436999320983887
    8. '<H' → logprob: -14.561999320983887
    9. '≤' → logprob: -14.936999320983887
    10. 'r' → logprob: -14.936999320983887

Token 246: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1517960956552997e-05
    2. ' r' → logprob: -11.375011444091797
    3. '	r' → logprob: -19.500011444091797
    4. 'c' → logprob: -19.625011444091797
    5. '_r' → logprob: -19.750011444091797
    6. '­r' → logprob: -21.875011444091797
    7. '```' → logprob: -22.125011444091797
    8. '
' → logprob: -22.875011444091797
    9. 'р' → logprob: -23.125011444091797
    10. '.r' → logprob: -23.125011444091797

Token 247: '<H' (ID: 104212)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4843330979347229
    2. '<H' → logprob: -0.9843330979347229
    3. 'r' → logprob: -5.109333038330078
    4. '<W' → logprob: -5.984333038330078
    5. ' <' → logprob: -7.234333038330078
    6. '<R' → logprob: -8.109333038330078
    7. ' r' → logprob: -8.734333038330078
    8. '<len' → logprob: -8.734333038330078
    9. 'H' → logprob: -9.484333038330078
    10. 'and' → logprob: -9.859333038330078

Token 248: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.033660564571619034
    2. 'and' → logprob: -3.408660650253296
    3. '   ' → logprob: -11.658660888671875
    4. '    ' → logprob: -13.533660888671875
    5. 'c' → logprob: -13.658660888671875
    6. ' ' → logprob: -14.158660888671875
    7. '0' → logprob: -14.658660888671875
    8. 'r' → logprob: -14.658660888671875
    9. '&&' → logprob: -14.783660888671875
    10. '       ' → logprob: -15.158660888671875

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02138345316052437
    2. 'c' → logprob: -4.021383285522461
    3. ' ' → logprob: -5.896383285522461
    4. ' c' → logprob: -7.646383285522461
    5. '   ' → logprob: -14.146383285522461
    6. '	c' → logprob: -16.02138328552246
    7. '
' → logprob: -16.39638328552246
    8. ')c' → logprob: -16.64638328552246
    9. '  ' → logprob: -16.77138328552246
    10. '<c' → logprob: -17.14638328552246

Token 250: '0' (ID: 15)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005971103440970182
    2. '0' → logprob: -5.1309709548950195
    3. ' c' → logprob: -10.50597095489502
    4. 'W' → logprob: -11.25597095489502
    5. 'w' → logprob: -13.63097095489502
    6. ' ' → logprob: -14.00597095489502
    7. ')c' → logprob: -16.880971908569336
    8. '	c' → logprob: -18.130971908569336
    9. '<c' → logprob: -18.255971908569336
    10. ' W' → logprob: -18.380971908569336

Token 251: '<=' (ID: 16672)
  Prédit: '<c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<c' → logprob: -0.5098075270652771
    2. 'c' → logprob: -1.6348075866699219
    3. ',c' → logprob: -1.6348075866699219
    4. '<' → logprob: -5.384807586669922
    5. '<=' → logprob: -6.509807586669922
    6. 'and' → logprob: -7.009807586669922
    7. '<W' → logprob: -7.509807586669922
    8. '[c' → logprob: -8.134807586669922
    9. '>' → logprob: -8.509807586669922
    10. ';c' → logprob: -8.759807586669922

Token 252: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12869000434875488
    2. 'W' → logprob: -2.128690004348755
    3. 'w' → logprob: -6.378689765930176
    4. 'r' → logprob: -10.253689765930176
    5. ' W' → logprob: -11.503689765930176
    6. ' c' → logprob: -11.878689765930176
    7. '=W' → logprob: -13.003689765930176
    8. '<W' → logprob: -13.003689765930176
    9. '   ' → logprob: -14.003689765930176
    10. ')c' → logprob: -14.253689765930176

Token 253: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -0.2032347321510315
    2. 'W' → logprob: -1.7032346725463867
    3. 'c' → logprob: -6.953234672546387
    4. '<c' → logprob: -7.703234672546387
    5. '<' → logprob: -8.203234672546387
    6. ' W' → logprob: -9.453234672546387
    7. 'r' → logprob: -10.953234672546387
    8. '<=' → logprob: -11.578234672546387
    9. '   ' → logprob: -11.828234672546387
    10. '<H' → logprob: -11.828234672546387

Token 254: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197911128401756
    2. 'and' → logprob: -2.811979055404663
    3. '   ' → logprob: -11.436979293823242
    4. '	and' → logprob: -15.186979293823242
    5. 'def' → logprob: -15.561979293823242
    6. ' ' → logprob: -15.811979293823242
    7. '<|end|>' → logprob: -17.436979293823242
    8. '
' → logprob: -17.936979293823242
    9. 'return' → logprob: -18.061979293823242
    10. '```' → logprob: -18.311979293823242

Token 255: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -2.339278580620885e-06
    2. ' grid' → logprob: -13.000001907348633
    3. '(grid' → logprob: -17.625001907348633
    4. '
' → logprob: -20.000001907348633
    5. '	grid' → logprob: -20.375001907348633
    6. '   ' → logprob: -21.250001907348633
    7. ' ' → logprob: -22.875001907348633
    8. '```' → logprob: -22.875001907348633
    9. '(' → logprob: -23.000001907348633
    10. '.grid' → logprob: -23.000001907348633

Token 256: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.125
    3. '[i' → logprob: -18.25
    4. '[' → logprob: -18.25
    5. '\[' → logprob: -18.5
    6. '[row' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '[n' → logprob: -19.375
    9. '[c' → logprob: -20.0
    10. ' [' → logprob: -20.25

Token 257: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3871893286705017
    2. '[r' → logprob: -1.1371893882751465
    3. 'r' → logprob: -8.887188911437988
    4. ']' → logprob: -9.637188911437988
    5. '[c' → logprob: -9.637188911437988
    6. ']!=' → logprob: -10.637188911437988
    7. '[' → logprob: -11.137188911437988
    8. '!=' → logprob: -13.137188911437988
    9. ' ][' → logprob: -13.137188911437988
    10. '"][' → logprob: -13.512188911437988

Token 258: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01639937423169613
    2. 'r' → logprob: -4.141399383544922
    3. ']' → logprob: -9.266399383544922
    4. '][' → logprob: -9.641399383544922
    5. '   ' → logprob: -10.141399383544922
    6. '[c' → logprob: -10.391399383544922
    7. ' c' → logprob: -10.641399383544922
    8. '0' → logprob: -11.016399383544922
    9. '[r' → logprob: -11.141399383544922
    10. ')c' → logprob: -11.266399383544922

Token 259: ']!='' (ID: 187656)
  Prédit: ']!=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!='' → logprob: -0.5515111684799194
    2. ']' → logprob: -0.9265111684799194
    3. ']!=' → logprob: -3.676511287689209
    4. ']!' → logprob: -6.051511287689209
    5. '!='' → logprob: -8.42651081085205
    6. ']'' → logprob: -10.67651081085205
    7. ']=='' → logprob: -10.80151081085205
    8. '']' → logprob: -10.92651081085205
    9. ']<' → logprob: -11.67651081085205
    10. ']]' → logprob: -12.17651081085205

Token 260: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02327471412718296
    2. ''#' → logprob: -3.7732746601104736
    3. '"#' → logprob: -10.773274421691895
    4. 'X' → logprob: -13.023274421691895
    5. ''' → logprob: -13.648274421691895
    6. '*' → logprob: -14.023274421691895
    7. ' '#'' → logprob: -14.148274421691895
    8. '#
' → logprob: -14.148274421691895
    9. '#g' → logprob: -14.523274421691895
    10. 'x' → logprob: -15.148274421691895

Token 261: ''

' (ID: 7497)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3347770869731903
    2. 'and' → logprob: -1.9597771167755127
    3. ')' → logprob: -2.0847771167755127
    4. '<|end|>' → logprob: -3.9597771167755127
    5. ' )' → logprob: -9.584776878356934
    6. ']' → logprob: -10.084776878356934
    7. ')return' → logprob: -10.334776878356934
    8. '<|end|>' → logprob: -11.209776878356934
    9. 'def' → logprob: -11.459776878356934
    10. ' ' → logprob: -11.834776878356934

Token 262: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046085257083177567
    2. 'visited' → logprob: -3.9210853576660156
    3. 'deque' → logprob: -5.046085357666016
    4. ')' → logprob: -5.171085357666016
    5. 'from' → logprob: -5.421085357666016
    6. 'dist' → logprob: -6.171085357666016
    7. 'queue' → logprob: -6.421085357666016
    8. 'distance' → logprob: -6.671085357666016
    9. '
' → logprob: -7.421085357666016
    10. '```' → logprob: -7.671085357666016

Token 263: ' sys' (ID: 12228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.015644827857613564
    2. ' collections' → logprob: -4.7656450271606445
    3. 'copy' → logprob: -5.0156450271606445
    4. 'heap' → logprob: -8.515645027160645
    5. 'sys' → logprob: -9.390645027160645
    6. ' copy' → logprob: -9.640645027160645
    7. '_copy' → logprob: -11.390645027160645
    8. 'queue' → logprob: -11.890645027160645
    9. 'typing' → logprob: -12.515645027160645
    10. ' sys' → logprob: -14.515645027160645

Token 264: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00043913270928896964
    2. 'import' → logprob: -7.750439167022705
    3. '	import' → logprob: -13.250438690185547
    4. '<|end|>' → logprob: -13.500438690185547
    5. ' queue' → logprob: -14.000438690185547
    6. ' imports' → logprob: -14.125438690185547
    7. ' ' → logprob: -14.500438690185547
    8. ' .' → logprob: -14.500438690185547
    9. ' ' → logprob: -15.000438690185547
    10. '.' → logprob: -15.125438690185547

Token 265: ' max' (ID: 2999)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.37864187359809875
    2. 'set' → logprob: -1.3786418437957764
    3. 'exit' → logprob: -3.0036418437957764
    4. 'stdout' → logprob: -5.1286420822143555
    5. 'max' → logprob: -5.7536420822143555
    6. 'stderr' → logprob: -6.2536420822143555
    7. 'deque' → logprob: -7.2536420822143555
    8. 'import' → logprob: -7.5036420822143555
    9. 'queue' → logprob: -8.503642082214355
    10. 'st' → logprob: -8.503642082214355

Token 266: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.061078108847141266
    2. 'depth' → logprob: -3.0610780715942383
    3. 'int' → logprob: -4.436078071594238
    4. 'import' → logprob: -8.436078071594238
    5. '_depth' → logprob: -8.936078071594238
    6. 'from' → logprob: -9.436078071594238
    7. 'limit' → logprob: -10.686078071594238
    8. 'deque' → logprob: -11.061078071594238
    9. '_size' → logprob: -11.186078071594238
    10. 'max' → logprob: -11.186078071594238

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18255209922790527
    2. 'def' → logprob: -2.3075520992279053
    3. 'dist' → logprob: -2.9325520992279053
    4. 'distance' → logprob: -4.932552337646484
    5. '

' → logprob: -6.182552337646484
    6. 'visited' → logprob: -6.182552337646484
    7. 'queue' → logprob: -7.182552337646484
    8. 'import' → logprob: -7.557552337646484
    9. 'deque' → logprob: -7.807552337646484
    10. 'from' → logprob: -8.182552337646484

Token 268: 'visited' (ID: 52453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.054581958800554276
    2. 'dist' → logprob: -3.054581880569458
    3. 'from' → logprob: -6.304582118988037
    4. 'INF' → logprob: -7.054582118988037
    5. 'distance' → logprob: -7.179582118988037
    6. '
' → logprob: -7.304582118988037
    7. 'visited' → logprob: -7.429582118988037
    8. 'queue' → logprob: -7.804582118988037
    9. 'dp' → logprob: -8.679581642150879
    10. 'deque' → logprob: -8.679581642150879

Token 269: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.213224396109581
    2. ' =' → logprob: -1.8382244110107422
    3. '=set' → logprob: -3.463224411010742
    4. '={}' → logprob: -6.463224411010742
    5. '=[]' → logprob: -11.838224411010742
    6. '={' → logprob: -11.963224411010742
    7. '=lambda' → logprob: -12.338224411010742
    8. '={(' → logprob: -12.588224411010742
    9. '={"' → logprob: -12.963224411010742
    10. '=[' → logprob: -13.338224411010742

Token 270: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013174348510801792
    2. '(' → logprob: -4.638174533843994
    3. '((' → logprob: -6.513174533843994
    4. '(w' → logprob: -6.638174533843994
    5. '([(' → logprob: -8.138174057006836
    6. '()
' → logprob: -8.638174057006836
    7. '([' → logprob: -10.513174057006836
    8. '<|end|>' → logprob: -10.888174057006836
    9. '();' → logprob: -11.513174057006836
    10. '()\' → logprob: -11.763174057006836

Token 271: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4573550820350647
    2. 'q' → logprob: -1.20735502243042
    3. 'from' → logprob: -2.95735502243042
    4. 'start' → logprob: -4.83235502243042
    5. 'dq' → logprob: -5.45735502243042
    6. 'initial' → logprob: -6.70735502243042
    7. 'que' → logprob: -6.95735502243042
    8. 'def' → logprob: -7.20735502243042
    9. 'deque' → logprob: -7.58235502243042
    10. '```' → logprob: -8.207355499267578

Token 272: ' State' (ID: 5388)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6091817021369934
    2. 'q' → logprob: -1.6091816425323486
    3. 'from' → logprob: -1.6091816425323486
    4. 'start' → logprob: -3.1091816425323486
    5. 'initial' → logprob: -4.984181880950928
    6. 'def' → logprob: -6.234181880950928
    7. 'dq' → logprob: -6.359181880950928
    8. 'que' → logprob: -7.609181880950928
    9. 'deque' → logprob: -8.85918140411377
    10. '```' → logprob: -9.48418140411377

Token 273: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138514459133148
    2. ' =' → logprob: -1.3138514757156372
    3. '=[]' → logprob: -8.563851356506348
    4. '=
' → logprob: -9.438851356506348
    5. '_queue' → logprob: -9.563851356506348
    6. '_' → logprob: -10.313851356506348
    7. 's' → logprob: -10.813851356506348
    8. '=(' → logprob: -10.813851356506348
    9. ')' → logprob: -10.938851356506348
    10. ',' → logprob: -11.063851356506348

Token 274: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.10737543553113937
    2. ' (' → logprob: -2.732375383377075
    3. '(' → logprob: -3.982375383377075
    4. '(tuple' → logprob: -4.482375621795654
    5. '(de' → logprob: -6.357375621795654
    6. '(queue' → logprob: -6.482375621795654
    7. '(body' → logprob: -6.982375621795654
    8. '((' → logprob: -6.982375621795654
    9. '(head' → logprob: -7.982375621795654
    10. '(r' → logprob: -8.232375144958496

Token 275: 'head' (ID: 3636)
  Prédit: 'head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.22355948388576508
    2. '(head' → logprob: -2.8485593795776367
    3. '(w' → logprob: -3.2235593795776367
    4. 'tuple' → logprob: -3.5985593795776367
    5. '(r' → logprob: -3.5985593795776367
    6. 'worm' → logprob: -4.598559379577637
    7. '(' → logprob: -5.098559379577637
    8. 'positions' → logprob: -5.723559379577637
    9. '0' → logprob: -5.723559379577637
    10. ')' → logprob: -5.848559379577637

Token 276: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.7901028990745544
    2. '_pos' → logprob: -0.9151028990745544
    3. '_row' → logprob: -2.040102958679199
    4. ',' → logprob: -4.915102958679199
    5. '_position' → logprob: -6.040102958679199
    6. 'r' → logprob: -6.165102958679199
    7. '_positions' → logprob: -6.165102958679199
    8. 'pos' → logprob: -7.290102958679199
    9. ',r' → logprob: -7.915102958679199
    10. 'row' → logprob: -8.2901029586792

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006361891864798963
    2. ',r' → logprob: -8.250636100769043
    3. ',pos' → logprob: -9.250636100769043
    4. ' ,' → logprob: -9.625636100769043
    5. ',w' → logprob: -10.000636100769043
    6. ',state' → logprob: -10.250636100769043
    7. ',c' → logprob: -10.500636100769043
    8. ',
' → logprob: -11.125636100769043
    9. ',current' → logprob: -11.250636100769043
    10. ',row' → logprob: -11.625636100769043

Token 278: ' head' (ID: 3189)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.0005549400229938328
    2. ' head' → logprob: -7.500555038452148
    3. '
' → logprob: -14.750555038452148
    4. '	head' → logprob: -14.875555038452148
    5. '(head' → logprob: -15.000555038452148
    6. '_head' → logprob: -15.250555038452148
    7. '<head' → logprob: -16.12555503845215
    8. ')' → logprob: -16.62555503845215
    9. 'heads' → logprob: -16.75055503845215
    10. 'body' → logprob: -16.87555503845215

Token 279: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.12719351053237915
    2. '_r' → logprob: -2.1271934509277344
    3. 'c' → logprob: -8.627193450927734
    4. ',' → logprob: -10.127193450927734
    5. 'r' → logprob: -11.002193450927734
    6. 'C' → logprob: -11.002193450927734
    7. ',c' → logprob: -12.002193450927734
    8. '_pos' → logprob: -13.627193450927734
    9. '```' → logprob: -13.627193450927734
    10. '_j' → logprob: -14.127193450927734

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041610258631408215
    2. ',w' → logprob: -6.7541608810424805
    3. ',
' → logprob: -7.1291608810424805
    4. ',len' → logprob: -7.3791608810424805
    5. '),' → logprob: -7.6291608810424805
    6. ')' → logprob: -8.12916088104248
    7. ' ,' → logprob: -8.37916088104248
    8. ',length' → logprob: -8.50416088104248
    9. ',)' → logprob: -9.75416088104248
    10. '),(' → logprob: -10.12916088104248

Token 281: ' (' (ID: 350)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.28201615810394287
    2. 'tail' → logprob: -2.2820162773132324
    3. 'body' → logprob: -2.5320162773132324
    4. ' tuple' → logprob: -3.1570162773132324
    5. 'length' → logprob: -4.782016277313232
    6. '(tuple' → logprob: -5.532016277313232
    7. ' tail' → logprob: -6.157016277313232
    8. 'positions' → logprob: -6.282016277313232
    9. ' body' → logprob: -7.032016277313232
    10. 'len' → logprob: -7.157016277313232

Token 282: 'body' (ID: 4681)
  Prédit: 'body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.8910743594169617
    2. 'worm' → logprob: -1.2660744190216064
    3. '(w' → logprob: -2.3910744190216064
    4. 'tuple' → logprob: -2.6410744190216064
    5. '(body' → logprob: -3.2660744190216064
    6. '(r' → logprob: -3.3910744190216064
    7. ')' → logprob: -4.016074180603027
    8. 'tail' → logprob: -4.391074180603027
    9. '(tuple' → logprob: -4.641074180603027
    10. '(' → logprob: -5.016074180603027

Token 283: '_r' (ID: 3442)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.4299636483192444
    2. '))' → logprob: -1.4299635887145996
    3. ')' → logprob: -2.5549635887145996
    4. '_r' → logprob: -4.6799635887146
    5. '_coords' → logprob: -4.6799635887146
    6. 'positions' → logprob: -5.3049635887146
    7. ')_' → logprob: -5.9299635887146
    8. '_coordinates' → logprob: -6.9299635887146
    9. '_tuple' → logprob: -7.0549635887146
    10. 'r' → logprob: -7.1799635887146

Token 284: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18703246116638184
    2. 's' → logprob: -1.8120324611663818
    3. ',s' → logprob: -5.437032699584961
    4. ' ,' → logprob: -6.812032699584961
    5. '0' → logprob: -7.312032699584961
    6. 'es' → logprob: -8.687032699584961
    7. '[' → logprob: -8.812032699584961
    8. ',pos' → logprob: -9.437032699584961
    9. '_list' → logprob: -9.687032699584961
    10. '_positions' → logprob: -9.812032699584961

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042983482126146555
    2. ',b' → logprob: -8.6254301071167
    3. ' ,' → logprob: -9.5004301071167
    4. ',user' → logprob: -10.3754301071167
    5. ',c' → logprob: -10.6254301071167
    6. ',w' → logprob: -11.0004301071167
    7. ',j' → logprob: -11.1254301071167
    8. ',state' → logprob: -11.1254301071167
    9. ',pos' → logprob: -11.5004301071167
    10. ',r' → logprob: -11.7504301071167

Token 286: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.006179052405059338
    2. ' body' → logprob: -5.131178855895996
    3. 'head' → logprob: -8.881178855895996
    4. ',' → logprob: -9.381178855895996
    5. '<body' → logprob: -12.006178855895996
    6. ')' → logprob: -12.131178855895996
    7. '_body' → logprob: -12.756178855895996
    8. '```' → logprob: -12.881178855895996
    9. 'b' → logprob: -13.381178855895996
    10. '-body' → logprob: -13.381178855895996

Token 287: '_c' (ID: 1303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014851996675133705
    2. 'body' → logprob: -5.264852046966553
    3. '_body' → logprob: -5.514852046966553
    4. '_' → logprob: -6.264852046966553
    5. '_c' → logprob: -6.514852046966553
    6. '0' → logprob: -6.889852046966553
    7. ',' → logprob: -7.639852046966553
    8. 'c' → logprob: -8.639851570129395
    9. '_positions' → logprob: -8.639851570129395
    10. ' body' → logprob: -9.389851570129395

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044719114899635315
    2. '),' → logprob: -3.5447192192077637
    3. ',' → logprob: -4.544719219207764
    4. '),(' → logprob: -5.794719219207764
    5. ')' → logprob: -7.419719219207764
    6. '_' → logprob: -8.044718742370605
    7. ')_' → logprob: -9.044718742370605
    8. ',_' → logprob: -10.169718742370605
    9. '
' → logprob: -10.544718742370605
    10. ',
' → logprob: -11.169718742370605

Token 289: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22136148810386658
    2. '),(' → logprob: -1.971361517906189
    3. ',' → logprob: -2.8463613986968994
    4. ')' → logprob: -7.3463616371154785
    5. ',),' → logprob: -8.47136116027832
    6. ',
' → logprob: -8.72136116027832
    7. '),
' → logprob: -9.34636116027832
    8. ' ,' → logprob: -10.22136116027832
    9. ' ),' → logprob: -10.22136116027832
    10. ',)' → logprob: -10.72136116027832

Token 290: ' ...,' (ID: 126708)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.01197997760027647
    2. ' body' → logprob: -5.511980056762695
    3. '),' → logprob: -5.761980056762695
    4. ')' → logprob: -5.886980056762695
    5. '...' → logprob: -7.386980056762695
    6. '),(' → logprob: -8.136980056762695
    7. '
' → logprob: -8.386980056762695
    8. '...,' → logprob: -8.886980056762695
    9. '...),' → logprob: -9.136980056762695
    10. 'head' → logprob: -9.136980056762695

Token 291: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.16340257227420807
    2. '...' → logprob: -2.413402557373047
    3. ' body' → logprob: -3.538402557373047
    4. ')' → logprob: -4.663402557373047
    5. 'head' → logprob: -4.913402557373047
    6. '...)' → logprob: -4.913402557373047
    7. 'worm' → logprob: -6.288402557373047
    8. ')...' → logprob: -6.538402557373047
    9. '...,' → logprob: -6.913402557373047
    10. '...),' → logprob: -7.163402557373047

Token 292: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.00388355809263885
    2. '_positions' → logprob: -5.878883361816406
    3. '0' → logprob: -7.753883361816406
    4. '_s' → logprob: -8.253883361816406
    5. '1' → logprob: -8.878883361816406
    6. '_' → logprob: -9.753883361816406
    7. 'r' → logprob: -9.878883361816406
    8. ')' → logprob: -10.503883361816406
    9. 'positions' → logprob: -10.503883361816406
    10. ')_' → logprob: -11.253883361816406

Token 293: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06476457417011261
    2. '1' → logprob: -3.3147644996643066
    3. '2' → logprob: -4.064764499664307
    4. ',' → logprob: -5.564764499664307
    5. ')' → logprob: -5.814764499664307
    6. '```' → logprob: -7.564764499664307
    7. '))' → logprob: -7.814764499664307
    8. 'N' → logprob: -7.939764499664307
    9. '...' → logprob: -8.814764976501465
    10. '[' → logprob: -9.064764976501465

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007416613399982452
    2. '))' → logprob: -5.257416725158691
    3. 'body' → logprob: -6.882416725158691
    4. '_body' → logprob: -7.632416725158691
    5. ',b' → logprob: -8.132416725158691
    6. ')' → logprob: -9.507416725158691
    7. ',...' → logprob: -10.007416725158691
    8. ' ,' → logprob: -10.132416725158691
    9. '_,' → logprob: -10.382416725158691
    10. ',_' → logprob: -10.632416725158691

Token 295: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.03191005438566208
    2. ' body' → logprob: -3.531909942626953
    3. 'head' → logprob: -6.156909942626953
    4. ' head' → logprob: -10.406909942626953
    5. '_body' → logprob: -12.781909942626953
    6. ')' → logprob: -12.906909942626953
    7. 'b' → logprob: -13.656909942626953
    8. '
' → logprob: -14.031909942626953
    9. '<body' → logprob: -15.156909942626953
    10. '	body' → logprob: -16.031909942626953

Token 296: '_c' (ID: 1303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08320331573486328
    2. '_c' → logprob: -2.7082033157348633
    3. '0' → logprob: -5.333203315734863
    4. '_' → logprob: -5.458203315734863
    5. '_r' → logprob: -6.958203315734863
    6. '_positions' → logprob: -6.958203315734863
    7. 'c' → logprob: -7.208203315734863
    8. '_body' → logprob: -7.583203315734863
    9. '_s' → logprob: -8.333203315734863
    10. ' ' → logprob: -9.083203315734863

Token 297: '5' (ID: 20)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8174501657485962
    2. ')' → logprob: -0.9424501657485962
    3. '1' → logprob: -1.8174501657485962
    4. '),' → logprob: -5.567450046539307
    5. '...' → logprob: -7.192450046539307
    6. ')...' → logprob: -7.817450046539307
    7. ')_' → logprob: -8.317450523376465
    8. ')),' → logprob: -8.692450523376465
    9. ',' → logprob: -8.817450523376465
    10. '2' → logprob: -8.942450523376465

Token 298: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007177902851253748
    2. ')' → logprob: -5.507177829742432
    3. '))
' → logprob: -6.257177829742432
    4. '),' → logprob: -6.882177829742432
    5. ',' → logprob: -9.50717830657959
    6. '...' → logprob: -10.88217830657959
    7. '))

' → logprob: -11.38217830657959
    8. ' ))' → logprob: -11.38217830657959
    9. ')))' → logprob: -11.75717830657959
    10. ')
' → logprob: -12.25717830657959

Token 299: ' food' (ID: 4232)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.9066319465637207
    2. 'steps' → logprob: -2.2816319465637207
    3. ' (' → logprob: -2.6566319465637207
    4. ' step' → logprob: -2.9066319465637207
    5. ')' → logprob: -3.0316319465637207
    6. ' food' → logprob: -3.1566319465637207
    7. 'food' → logprob: -3.4066319465637207
    8. '(' → logprob: -3.7816319465637207
    9. ' target' → logprob: -4.156631946563721
    10. ' current' → logprob: -4.156631946563721

Token 300: '_index' (ID: 7748)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.3547372817993164
    2. '_index' → logprob: -1.2297372817993164
    3. '_e' → logprob: -5.354737281799316
    4. 'idx' → logprob: -7.479737281799316
    5. '_id' → logprob: -8.229737281799316
    6. '_i' → logprob: -8.604737281799316
    7. '_num' → logprob: -8.604737281799316
    8. 'index' → logprob: -8.729737281799316
    9. ')' → logprob: -9.354737281799316
    10. 'Index' → logprob: -10.729737281799316

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024311232846230268
    2. ')=' → logprob: -9.250243186950684
    3. ',' → logprob: -9.375243186950684
    4. ',)' → logprob: -11.125243186950684
    5. '))' → logprob: -11.500243186950684
    6. ')
' → logprob: -11.625243186950684
    7. ' )' → logprob: -12.000243186950684
    8. ')`' → logprob: -12.250243186950684
    9. ',state' → logprob: -12.625243186950684
    10. ')>' → logprob: -13.000243186950684

Token 302: 'start' (ID: 5236)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.177193745970726
    2. 'q' → logprob: -2.3021936416625977
    3. 'start' → logprob: -4.302193641662598
    4. 'def' → logprob: -4.302193641662598
    5. 'dq' → logprob: -4.802193641662598
    6. 'for' → logprob: -5.052193641662598
    7. 'from' → logprob: -5.177193641662598
    8. 'deque' → logprob: -5.302193641662598
    9. 'initial' → logprob: -5.802193641662598
    10. 'state' → logprob: -6.302193641662598

Token 303: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5568278431892395
    2. ' =' → logprob: -1.5568277835845947
    3. '_state' → logprob: -1.5568277835845947
    4. '=_' → logprob: -6.181828022003174
    5. '_pos' → logprob: -6.306828022003174
    6. '_' → logprob: -7.806828022003174
    7. '_=' → logprob: -8.056827545166016
    8. '_states' → logprob: -8.306827545166016
    9. '=(' → logprob: -8.806827545166016
    10. 'state' → logprob: -8.806827545166016

Token 304: 'worm' (ID: 73750)
  Prédit: 'worm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.0009231308358721435
    2. 'pos' → logprob: -7.000923156738281
    3. ' worm' → logprob: -11.875923156738281
    4. 'wolf' → logprob: -13.375923156738281
    5. 'worms' → logprob: -13.750923156738281
    6. 'snake' → logprob: -14.250923156738281
    7. 'witch' → logprob: -15.500923156738281
    8. 'body' → logprob: -15.500923156738281
    9. '   ' → logprob: -16.00092315673828
    10. ')' → logprob: -16.25092315673828

Token 305: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -1.981667537620524e-06
    2. 'body' → logprob: -13.250001907348633
    3. '_BODY' → logprob: -16.875001907348633
    4. '_head' → logprob: -17.000001907348633
    5. '<body' → logprob: -17.250001907348633
    6. 'Body' → logprob: -17.250001907348633
    7. '_b' → logprob: -17.750001907348633
    8. '_pos' → logprob: -18.000001907348633
    9. 'pos' → logprob: -18.375001907348633
    10. '```' → logprob: -19.375001907348633

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007040912751108408
    2. '0' → logprob: -8.250703811645508
    3. ')' → logprob: -8.375703811645508
    4. '+[' → logprob: -9.000703811645508
    5. '+' → logprob: -10.000703811645508
    6. ' [' → logprob: -11.250703811645508
    7. ' +' → logprob: -11.500703811645508
    8. '[
' → logprob: -12.375703811645508
    9. '
' → logprob: -12.875703811645508
    10. ')[' → logprob: -13.000703811645508

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9054008084349334e-05
    2. '[' → logprob: -10.875039100646973
    3. ' ' → logprob: -10.875039100646973
    4. '(' → logprob: -14.750039100646973
    5. '   ' → logprob: -15.500039100646973
    6. '
' → logprob: -15.750039100646973
    7. ' [' → logprob: -16.687538146972656
    8. '```' → logprob: -17.000038146972656
    9. '][' → logprob: -17.375038146972656
    10. '  ' → logprob: -17.625038146972656

Token 308: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22252081334590912
    2. '][' → logprob: -2.3475208282470703
    3. ',' → logprob: -2.9725208282470703
    4. '],' → logprob: -3.0975208282470703
    5. '],[' → logprob: -5.84752082824707
    6. ']' → logprob: -6.34752082824707
    7. '])' → logprob: -6.47252082824707
    8. '),' → logprob: -7.72252082824707
    9. '0' → logprob: -8.34752082824707
    10. ')' → logprob: -8.72252082824707

Token 309: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.1024673581123352
    2. '(tuple' → logprob: -2.8524672985076904
    3. 'worm' → logprob: -4.1024675369262695
    4. '(w' → logprob: -4.2274675369262695
    5. ' tuple' → logprob: -5.3524675369262695
    6. '(' → logprob: -5.8524675369262695
    7. '(*' → logprob: -7.6024675369262695
    8. '((' → logprob: -9.47746753692627
    9. ' (' → logprob: -9.60246753692627
    10. ' worm' → logprob: -9.85246753692627

Token 310: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.001983829541131854
    2. 'w' → logprob: -7.126983642578125
    3. 'worm' → logprob: -7.376983642578125
    4. '((' → logprob: -8.001983642578125
    5. '([' → logprob: -9.126983642578125
    6. '(' → logprob: -9.876983642578125
    7. '([(' → logprob: -11.626983642578125
    8. 'item' → logprob: -11.751983642578125
    9. '(sum' → logprob: -12.001983642578125
    10. '(item' → logprob: -12.251983642578125

Token 311: 'orm' (ID: 551)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.932624876499176
    2. 'orm' → logprob: -1.1826248168945312
    3. '_body' → logprob: -1.3076248168945312
    4. 'body' → logprob: -4.432624816894531
    5. '(w' → logprob: -4.807624816894531
    6. '(' → logprob: -6.182624816894531
    7. '_w' → logprob: -6.182624816894531
    8. '_b' → logprob: -6.682624816894531
    9. 'w' → logprob: -7.182624816894531
    10. '(r' → logprob: -7.307624816894531

Token 312: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -7.941850526549388e-06
    2. 'body' → logprob: -12.375007629394531
    3. ')' → logprob: -13.875007629394531
    4. '[' → logprob: -14.250007629394531
    5. '[_' → logprob: -14.250007629394531
    6. ')_' → logprob: -14.750007629394531
    7. '_BODY' → logprob: -14.750007629394531
    8. '_b' → logprob: -15.875007629394531
    9. '<body' → logprob: -16.00000762939453
    10. 'Body' → logprob: -16.25000762939453

Token 313: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008116161450743675
    2. '))' → logprob: -5.008116245269775
    3. '),' → logprob: -7.008116245269775
    4. ')' → logprob: -8.008115768432617
    5. '+' → logprob: -9.883115768432617
    6. ')+' → logprob: -10.883115768432617
    7. '))
' → logprob: -10.883115768432617
    8. '[
' → logprob: -11.133115768432617
    9. '+[' → logprob: -11.758115768432617
    10. ')[' → logprob: -12.008115768432617

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002612997777760029
    2. '])' → logprob: -6.377613067626953
    3. '(' → logprob: -7.502613067626953
    4. ':' → logprob: -9.627613067626953
    5. ' ' → logprob: -9.877613067626953
    6. '[' → logprob: -10.252613067626953
    7. '   ' → logprob: -10.502613067626953
    8. ']' → logprob: -10.627613067626953
    9. 'i' → logprob: -10.877613067626953
    10. '])
' → logprob: -11.002613067626953

Token 315: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.9433721303939819
    2. ':' → logprob: -1.068372130393982
    3. ']))' → logprob: -2.5683722496032715
    4. '+' → logprob: -3.1933722496032715
    5. '()' → logprob: -3.5683722496032715
    6. ']' → logprob: -3.8183722496032715
    7. ']+' → logprob: -3.9433722496032715
    8. ':],' → logprob: -4.1933722496032715
    9. ']),' → logprob: -4.4433722496032715
    10. '],' → logprob: -4.6933722496032715

Token 316: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.37747305631637573
    2. ']))' → logprob: -1.2524731159210205
    3. ']' → logprob: -3.8774731159210205
    4. '],' → logprob: -5.502472877502441
    5. ' ]' → logprob: -6.502472877502441
    6. '()' → logprob: -7.502472877502441
    7. '])' → logprob: -7.627472877502441
    8. '])),' → logprob: -8.127472877502441
    9. '].' → logprob: -8.502472877502441
    10. '),' → logprob: -9.002472877502441

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.250097274780273
    4. '1' → logprob: -16.500097274780273
    5. ')' → logprob: -16.625097274780273
    6. ',' → logprob: -17.375097274780273
    7. '۰' → logprob: -17.750097274780273
    8. '
' → logprob: -17.875097274780273
    9. ' ' → logprob: -18.187597274780273
    10. '00' → logprob: -18.187597274780273

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. ')' → logprob: -18.75000762939453
    4. '   ' → logprob: -19.50000762939453
    5. '۰' → logprob: -19.50000762939453
    6. '
' → logprob: -20.25000762939453
    7. '00' → logprob: -20.37500762939453
    8. '000' → logprob: -20.37500762939453
    9. '```' → logprob: -20.37500762939453
    10. ' ' → logprob: -20.62500762939453

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.945094355614856e-05
    2. ')
' → logprob: -9.625069618225098
    3. ' )' → logprob: -12.750069618225098
    4. ',)' → logprob: -15.750069618225098
    5. ')
' → logprob: -16.37506866455078
    6. ')#' → logprob: -16.62506866455078
    7. '))' → logprob: -17.12506866455078
    8. ')

' → logprob: -17.50006866455078
    9. '),' → logprob: -17.62506866455078
    10. ',' → logprob: -17.62506866455078

Token 320: 'visited' (ID: 52453)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.014380449429154396
    2. 'visited' → logprob: -5.26438045501709
    3. 'deque' → logprob: -5.38938045501709
    4. 'q' → logprob: -5.76438045501709
    5. ' queue' → logprob: -7.01438045501709
    6. 'dq' → logprob: -8.63938045501709
    7. 'que' → logprob: -9.63938045501709
    8. 'start' → logprob: -9.76438045501709
    9. 'stack' → logprob: -10.13938045501709
    10. ')' → logprob: -10.13938045501709

Token 321: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.4617256056226324e-05
    2. '.' → logprob: -11.250014305114746
    3. ' .' → logprob: -14.250014305114746
    4. ').' → logprob: -15.125014305114746
    5. '=' → logprob: -15.375014305114746
    6. '.update' → logprob: -15.625014305114746
    7. '.setdefault' → logprob: -17.000015258789062
    8. 'add' → logprob: -17.125015258789062
    9. ' =' → logprob: -17.750015258789062
    10. '
' → logprob: -17.875015258789062

Token 322: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.38944199681282043
    2. '(start' → logprob: -1.139441967010498
    3. '(((' → logprob: -6.389441967010498
    4. '(' → logprob: -7.139441967010498
    5. 'start' → logprob: -9.389442443847656
    6. '((((' → logprob: -12.639442443847656
    7. ' ((' → logprob: -13.139442443847656
    8. '((*' → logprob: -13.639442443847656
    9. ' (' → logprob: -14.139442443847656
    10. '(st' → logprob: -14.264442443847656

Token 323: 'worm' (ID: 73750)
  Prédit: 'worm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.009681839495897293
    2. '(w' → logprob: -5.259681701660156
    3. 'start' → logprob: -5.634681701660156
    4. ' worm' → logprob: -7.884681701660156
    5. '(start' → logprob: -9.134681701660156
    6. 'wolf' → logprob: -9.634681701660156
    7. 'worms' → logprob: -9.759681701660156
    8. '   ' → logprob: -10.259681701660156
    9. '((' → logprob: -10.259681701660156
    10. '(' → logprob: -10.384681701660156

Token 324: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -4.23917081207037e-05
    2. '[' → logprob: -10.750041961669922
    3. 'body' → logprob: -11.000041961669922
    4. '_BODY' → logprob: -13.250041961669922
    5. '<body' → logprob: -13.625041961669922
    6. 'Body' → logprob: -15.000041961669922
    7. '[(' → logprob: -16.125041961669922
    8. 'bod' → logprob: -16.250041961669922
    9. '_b' → logprob: -16.250041961669922
    10. ')[' → logprob: -16.500041961669922

Token 325: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.52788148727268e-05
    2. '0' → logprob: -9.875064849853516
    3. ' [' → logprob: -12.625064849853516
    4. '
' → logprob: -12.750064849853516
    5. '[
' → logprob: -13.000064849853516
    6. ')[' → logprob: -13.500064849853516
    7. '(' → logprob: -14.000064849853516
    8. ')' → logprob: -14.375064849853516
    9. '][' → logprob: -14.375064849853516
    10. ' ' → logprob: -14.500064849853516

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.75001335144043
    3. '[' → logprob: -13.00001335144043
    4. '(' → logprob: -13.62501335144043
    5. '][' → logprob: -14.93751335144043
    6. '
' → logprob: -15.18751335144043
    7. '   ' → logprob: -15.62501335144043
    8. '])' → logprob: -15.93751335144043
    9. '1' → logprob: -16.12501335144043
    10. '```' → logprob: -16.31251335144043

Token 327: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054537031799554825
    2. '[' → logprob: -3.054537057876587
    3. ' ,' → logprob: -5.929536819458008
    4. ',
' → logprob: -6.804536819458008
    5. '),' → logprob: -7.054536819458008
    6. ',(' → logprob: -8.179536819458008
    7. '),(' → logprob: -8.429536819458008
    8. ',[' → logprob: -8.554536819458008
    9. ')' → logprob: -9.304536819458008
    10. ',

' → logprob: -9.554536819458008

Token 328: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0004870378761552274
    2. ' tuple' → logprob: -7.750486850738525
    3. '(tuple' → logprob: -10.375487327575684
    4. 'worm' → logprob: -10.875487327575684
    5. '   ' → logprob: -13.250487327575684
    6. ' ' → logprob: -13.750487327575684
    7. '  ' → logprob: -14.375487327575684
    8. 'tu' → logprob: -14.875487327575684
    9. '(' → logprob: -15.000487327575684
    10. ')' → logprob: -15.125487327575684

Token 329: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.375007629394531
    3. 'w' → logprob: -14.125007629394531
    4. ')' → logprob: -14.125007629394531
    5. '((' → logprob: -14.250007629394531
    6. 'worm' → logprob: -15.000007629394531
    7. '```' → logprob: -15.625007629394531
    8. '(
' → logprob: -16.12500762939453
    9. ' (' → logprob: -16.37500762939453
    10. '())' → logprob: -16.50000762939453

Token 330: 'orm' (ID: 551)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.1280701607465744
    2. 'orm' → logprob: -2.128070116043091
    3. '_body' → logprob: -7.00307035446167
    4. 'body' → logprob: -8.878069877624512
    5. ' worm' → logprob: -10.003069877624512
    6. '_' → logprob: -11.878069877624512
    7. '[' → logprob: -12.003069877624512
    8. 'or' → logprob: -12.503069877624512
    9. '(' → logprob: -12.628069877624512
    10. 'ork' → logprob: -12.753069877624512

Token 331: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -2.4272752852994017e-05
    2. 'body' → logprob: -11.12502384185791
    3. '[' → logprob: -11.75002384185791
    4. '_BODY' → logprob: -14.62502384185791
    5. '<body' → logprob: -15.25002384185791
    6. ')[' → logprob: -15.37502384185791
    7. 'Body' → logprob: -15.62502384185791
    8. ')' → logprob: -15.75002384185791
    9. '```' → logprob: -17.000024795532227
    10. '_b' → logprob: -17.375024795532227

Token 332: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9160102712921798e-05
    2. ')[' → logprob: -11.125029563903809
    3. '1' → logprob: -12.125029563903809
    4. ')' → logprob: -13.000029563903809
    5. '```' → logprob: -13.000029563903809
    6. '(' → logprob: -13.625029563903809
    7. '[
' → logprob: -14.375029563903809
    8. ' [' → logprob: -14.625029563903809
    9. '()[' → logprob: -14.625029563903809
    10. '   ' → logprob: -14.750029563903809

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067287529818713665
    2. '[' → logprob: -5.006728649139404
    3. '(' → logprob: -12.256729125976562
    4. ' ' → logprob: -12.756729125976562
    5. 'body' → logprob: -13.256729125976562
    6. '   ' → logprob: -13.881729125976562
    7. '```' → logprob: -14.256729125976562
    8. '
' → logprob: -15.006729125976562
    9. ')' → logprob: -15.069229125976562
    10. 'from' → logprob: -15.194229125976562

Token 334: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5948559045791626
    2. '[' → logprob: -0.8448559045791626
    3. ':]' → logprob: -4.844855785369873
    4. '[:' → logprob: -5.469855785369873
    5. ']),' → logprob: -5.844855785369873
    6. '),' → logprob: -6.594855785369873
    7. ':],' → logprob: -7.219855785369873
    8. ']))' → logprob: -7.594855785369873
    9. '[:]' → logprob: -8.469856262207031
    10. '1' → logprob: -8.719856262207031

Token 335: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06620736420154572
    2. '],' → logprob: -3.4412074089050293
    3. ']),' → logprob: -4.066207408905029
    4. ']))' → logprob: -5.066207408905029
    5. ']' → logprob: -6.191207408905029
    6. ')],' → logprob: -6.441207408905029
    7. ')' → logprob: -6.441207408905029
    8. ')))' → logprob: -7.191207408905029
    9. ')]' → logprob: -7.316207408905029
    10. ')),' → logprob: -7.316207408905029

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.12502670288086
    4. '```' → logprob: -18.87502670288086
    5. ')' → logprob: -19.12502670288086
    6. '
' → logprob: -19.12502670288086
    7. '۰' → logprob: -19.56252670288086
    8. '(' → logprob: -19.81252670288086
    9. '  ' → logprob: -19.87502670288086
    10. ' ' → logprob: -20.00002670288086

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. ')' → logprob: -20.3125
    6. '   ' → logprob: -20.375
    7. '))' → logprob: -20.375
    8. '000' → logprob: -20.375
    9. '00' → logprob: -21.0
    10. '０' → logprob: -21.3125

Token 338: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20274001359939575
    2. ')' → logprob: -1.702739953994751
    3. '))
' → logprob: -6.70274019241333
    4. ')
' → logprob: -9.327739715576172
    5. '))

' → logprob: -12.452739715576172
    6. ')))' → logprob: -13.202739715576172
    7. '),' → logprob: -13.702739715576172
    8. ' ))' → logprob: -14.452739715576172
    9. ' )' → logprob: -14.577739715576172
    10. '))
' → logprob: -15.702739715576172

Token 339: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0292475875467062
    2. 'q' → logprob: -4.029247760772705
    3. '
' → logprob: -5.279247760772705
    4. 'from' → logprob: -5.904247760772705
    5. 'dq' → logprob: -6.654247760772705
    6. 'que' → logprob: -7.154247760772705
    7. 'deque' → logprob: -7.154247760772705
    8. ' queue' → logprob: -8.904247283935547
    9. '```' → logprob: -9.529247283935547
    10. 'Q' → logprob: -10.654247283935547

Token 340: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931584477424622
    2. ' =' → logprob: -0.6931584477424622
    3. ')' → logprob: -12.443158149719238
    4. ')=' → logprob: -13.318158149719238
    5. '<|end|>' → logprob: -13.943158149719238
    6. '=torch' → logprob: -14.318158149719238
    7. '＝' → logprob: -14.568158149719238
    8. '=re' → logprob: -14.943158149719238
    9. 'deque' → logprob: -15.068158149719238
    10. ' ' → logprob: -15.193158149719238

Token 341: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -4.5491004129871726e-05
    2. ' deque' → logprob: -10.000045776367188
    3. 'Deque' → logprob: -18.125045776367188
    4. '```' → logprob: -20.250045776367188
    5. 'collections' → logprob: -22.000045776367188
    6. 'de' → logprob: -22.375045776367188
    7. '   ' → logprob: -22.875045776367188
    8. 'dq' → logprob: -24.125045776367188
    9. '(de' → logprob: -24.625045776367188
    10. '
' → logprob: -24.750045776367188

Token 342: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.4567197263240814
    2. '([' → logprob: -1.0817197561264038
    3. '()' → logprob: -3.7067196369171143
    4. '[(' → logprob: -6.581719875335693
    5. '([
' → logprob: -7.081719875335693
    6. '(' → logprob: -7.831719875335693
    7. '()
' → logprob: -8.831719398498535
    8. '(start' → logprob: -8.956719398498535
    9. '((' → logprob: -9.706719398498535
    10. '[start' → logprob: -10.331719398498535

Token 343: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00010187433508690447
    2. '(queue' → logprob: -9.500102043151855
    3. ' queue' → logprob: -10.625102043151855
    4. '.append' → logprob: -14.000102043151855
    5. '.queue' → logprob: -14.500102043151855
    6. 'append' → logprob: -14.750102043151855
    7. '```' → logprob: -15.125102043151855
    8. '	queue' → logprob: -15.250102043151855
    9. 'que' → logprob: -16.12510108947754
    10. 'enqueue' → logprob: -16.25010108947754

Token 344: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.522638169466518e-05
    2. '.enqueue' → logprob: -11.500024795532227
    3. '.' → logprob: -12.125024795532227
    4. ').' → logprob: -12.375024795532227
    5. '.put' → logprob: -13.250024795532227
    6. '.extend' → logprob: -13.375024795532227
    7. 'append' → logprob: -15.000024795532227
    8. '().' → logprob: -15.250024795532227
    9. '.offer' → logprob: -15.500024795532227
    10. ' .' → logprob: -15.500024795532227

Token 345: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0633857250213623
    2. '(start' → logprob: -2.8133857250213623
    3. '(' → logprob: -6.938385963439941
    4. '(((' → logprob: -7.813385963439941
    5. 'start' → logprob: -10.688385963439941
    6. '```' → logprob: -11.813385963439941
    7. ' ((' → logprob: -12.688385963439941
    8. ' (' → logprob: -13.063385963439941
    9. '(('' → logprob: -13.563385963439941
    10. '((((' → logprob: -13.563385963439941

Token 346: ' (' (ID: 350)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09505805373191833
    2. '(start' → logprob: -2.595057964324951
    3. '(w' → logprob: -4.220057964324951
    4. '(' → logprob: -7.470057964324951
    5. '((' → logprob: -7.845057964324951
    6. ' start' → logprob: -8.22005844116211
    7. ' (' → logprob: -9.22005844116211
    8. ')' → logprob: -13.47005844116211
    9. '(
' → logprob: -13.72005844116211
    10. '	start' → logprob: -13.97005844116211

Token 347: 'worm' (ID: 73750)
  Prédit: 'worm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.44007930159568787
    2. 'start' → logprob: -1.0650793313980103
    3. '(w' → logprob: -5.565079212188721
    4. '(start' → logprob: -5.815079212188721
    5. ')' → logprob: -6.190079212188721
    6. '0' → logprob: -7.065079212188721
    7. ' start' → logprob: -8.315079689025879
    8. '(' → logprob: -8.440079689025879
    9. ' worm' → logprob: -8.690079689025879
    10. 'worms' → logprob: -9.190079689025879

Token 348: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -2.2200749754119897e-06
    2. 'body' → logprob: -13.250001907348633
    3. '<body' → logprob: -15.375001907348633
    4. '_BODY' → logprob: -15.750001907348633
    5. 'Body' → logprob: -16.750001907348633
    6. '_head' → logprob: -18.125001907348633
    7. '[' → logprob: -18.125001907348633
    8. '(body' → logprob: -18.875001907348633
    9. '_wall' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043376852408982813
    2. '0' → logprob: -8.375433921813965
    3. ')' → logprob: -8.750433921813965
    4. '(' → logprob: -11.375433921813965
    5. ')[' → logprob: -12.000433921813965
    6. '
' → logprob: -12.125433921813965
    7. '[
' → logprob: -12.125433921813965
    8. ',' → logprob: -12.500433921813965
    9. ' [' → logprob: -13.750433921813965
    10. '#' → logprob: -13.812933921813965

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.625044822692871
    3. '[' → logprob: -11.375044822692871
    4. '(' → logprob: -12.375044822692871
    5. '
' → logprob: -12.875044822692871
    6. '])' → logprob: -15.312544822692871
    7. ')' → logprob: -15.375044822692871
    8. '   ' → logprob: -15.375044822692871
    9. '1' → logprob: -15.500044822692871
    10. '][' → logprob: -15.562544822692871

Token 351: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003525002161040902
    2. ' ,' → logprob: -6.7535247802734375
    3. '),' → logprob: -7.0035247802734375
    4. '[' → logprob: -7.1285247802734375
    5. ')' → logprob: -8.878524780273438
    6. ',
' → logprob: -9.003524780273438
    7. ',len' → logprob: -9.503524780273438
    8. '],' → logprob: -9.628524780273438
    9. ',None' → logprob: -10.378524780273438
    10. ',[' → logprob: -10.753524780273438

Token 352: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.02063017524778843
    2. ' tuple' → logprob: -3.895630121231079
    3. '(tuple' → logprob: -9.3956298828125
    4. '   ' → logprob: -13.7706298828125
    5. 'tu' → logprob: -14.0206298828125
    6. '       ' → logprob: -14.1456298828125
    7. ' ' → logprob: -14.2706298828125
    8. ')' → logprob: -15.3956298828125
    9. '           ' → logprob: -15.7706298828125
    10. '(' → logprob: -15.8956298828125

Token 353: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -13.375004768371582
    3. 'w' → logprob: -13.625004768371582
    4. '((' → logprob: -13.875004768371582
    5. ')' → logprob: -15.625004768371582
    6. 'worm' → logprob: -15.875004768371582
    7. '```' → logprob: -16.000003814697266
    8. '(
' → logprob: -16.125003814697266
    9. ' (' → logprob: -16.250003814697266
    10. '(body' → logprob: -17.250003814697266

Token 354: 'orm' (ID: 551)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.07043962925672531
    2. 'orm' → logprob: -2.695439577102661
    3. '(w' → logprob: -8.070439338684082
    4. '_body' → logprob: -9.695439338684082
    5. 'body' → logprob: -9.945439338684082
    6. ' worm' → logprob: -10.445439338684082
    7. '(' → logprob: -11.195439338684082
    8. '(r' → logprob: -11.945439338684082
    9. '[' → logprob: -12.195439338684082
    10. '_w' → logprob: -12.695439338684082

Token 355: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -6.873571692267433e-05
    2. '[' → logprob: -9.750068664550781
    3. 'body' → logprob: -11.875068664550781
    4. '_BODY' → logprob: -12.750068664550781
    5. '<body' → logprob: -15.375068664550781
    6. 'Body' → logprob: -16.25006866455078
    7. ')[' → logprob: -16.25006866455078
    8. ' body' → logprob: -17.00006866455078
    9. ')' → logprob: -17.37506866455078
    10. '-body' → logprob: -17.87506866455078

Token 356: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.955703818472102e-05
    2. ')[' → logprob: -10.000059127807617
    3. '),' → logprob: -12.750059127807617
    4. '1' → logprob: -12.875059127807617
    5. ')' → logprob: -13.000059127807617
    6. '```' → logprob: -13.375059127807617
    7. '[
' → logprob: -13.750059127807617
    8. ' [' → logprob: -14.250059127807617
    9. '
' → logprob: -14.250059127807617
    10. '(' → logprob: -14.500059127807617

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5796393156051636
    2. '[' → logprob: -0.8296393156051636
    3. 'body' → logprob: -6.079639434814453
    4. '(' → logprob: -6.704639434814453
    5. '```' → logprob: -10.704639434814453
    6. '[-' → logprob: -10.829639434814453
    7. ')' → logprob: -10.829639434814453
    8. 'worm' → logprob: -10.954639434814453
    9. '
' → logprob: -11.079639434814453
    10. '[
' → logprob: -11.204639434814453

Token 358: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2694823443889618
    2. ':' → logprob: -1.5194823741912842
    3. ':],' → logprob: -5.019482135772705
    4. ':]' → logprob: -5.144482135772705
    5. ']),' → logprob: -5.769482135772705
    6. '[:' → logprob: -7.394482135772705
    7. '),' → logprob: -7.894482135772705
    8. ':[' → logprob: -8.144482612609863
    9. '(' → logprob: -8.894482612609863
    10. '1' → logprob: -9.144482612609863

Token 359: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0007880675257183611
    2. ',' → logprob: -8.000787734985352
    3. '],' → logprob: -8.500787734985352
    4. ']),' → logprob: -8.875787734985352
    5. ')],' → logprob: -10.000787734985352
    6. ')' → logprob: -10.750787734985352
    7. ' ),' → logprob: -11.000787734985352
    8. ')),' → logprob: -11.500787734985352
    9. ',),' → logprob: -12.000787734985352
    10. '),(' → logprob: -12.375787734985352

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '
' → logprob: -18.875085830688477
    5. ',' → logprob: -19.125085830688477
    6. ' ' → logprob: -19.125085830688477
    7. '```' → logprob: -19.500085830688477
    8. '  ' → logprob: -19.937585830688477
    9. ')' → logprob: -19.937585830688477
    10. 'N' → logprob: -20.250085830688477

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.7500057220459
    4. '(' → logprob: -20.2500057220459
    5. '```' → logprob: -20.2500057220459
    6. 'N' → logprob: -20.3750057220459
    7. '۰' → logprob: -20.7500057220459
    8. ',' → logprob: -21.2500057220459
    9. ')' → logprob: -21.4375057220459
    10. ' ' → logprob: -21.8125057220459

Token 362: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04614126309752464
    2. ',' → logprob: -3.1711411476135254
    3. '))' → logprob: -5.921141147613525
    4. ',)' → logprob: -7.921141147613525
    5. ' )' → logprob: -9.546141624450684
    6. '),' → logprob: -11.296141624450684
    7. ' ,' → logprob: -12.671141624450684
    8. ',:)' → logprob: -14.796141624450684
    9. ' ))' → logprob: -14.921141624450684
    10. ',state' → logprob: -15.296141624450684

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -14.875006675720215
    4. '   ' → logprob: -18.6250057220459
    5. '-' → logprob: -19.6250057220459
    6. '))' → logprob: -20.5000057220459
    7. '
' → logprob: -20.7500057220459
    8. '```' → logprob: -20.8750057220459
    9. '"' → logprob: -21.0000057220459
    10. '``' → logprob: -21.1250057220459

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. ')' → logprob: -14.375001907348633
    4. '"' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '[]' → logprob: -19.125001907348633
    7. '[])' → logprob: -19.375001907348633
    8. '-' → logprob: -19.500001907348633
    9. '""' → logprob: -19.625001907348633
    10. '))' → logprob: -20.125001907348633

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038825106457807124
    2. '))' → logprob: -7.875388145446777
    3. ' )' → logprob: -11.875388145446777
    4. ')
' → logprob: -14.750388145446777
    5. ')))' → logprob: -15.750388145446777
    6. '),' → logprob: -16.125389099121094
    7. ')}' → logprob: -16.500389099121094
    8. ',)' → logprob: -16.625389099121094
    9. ',' → logprob: -16.750389099121094
    10. ')#' → logprob: -17.500389099121094

Token 366: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9424725148128346e-05
    2. ' )' → logprob: -10.000049591064453
    3. ')
' → logprob: -13.250049591064453
    4. '))' → logprob: -14.500049591064453
    5. ',' → logprob: -15.000049591064453
    6. '<|end|>' → logprob: -15.250049591064453
    7. '),' → logprob: -15.500049591064453
    8. ',)' → logprob: -16.125049591064453
    9. '   ' → logprob: -16.125049591064453
    10. ')#' → logprob: -16.250049591064453

Token 367: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.5690089639974758e-05
    2. '
' → logprob: -11.500015258789062
    3. ' while' → logprob: -12.250015258789062
    4. '```' → logprob: -15.125015258789062
    5. 'While' → logprob: -15.500015258789062
    6. 'def' → logprob: -16.000015258789062
    7. ')' → logprob: -16.750015258789062
    8. '``' → logprob: -18.250015258789062
    9. '	while' → logprob: -18.375015258789062
    10. 'for' → logprob: -18.875015258789062

Token 368: ' head' (ID: 3189)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6115359663963318
    2. 'head' → logprob: -1.9865360260009766
    3. '0' → logprob: -2.2365360260009766
    4. ' #' → logprob: -2.9865360260009766
    5. 'distance' → logprob: -3.3615360260009766
    6. 'r' → logprob: -3.6115360260009766
    7. 'while' → logprob: -3.7365360260009766
    8. ' head' → logprob: -4.236536026000977
    9. ' while' → logprob: -4.611536026000977
    10. ' distance' → logprob: -4.736536026000977

Token 369: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0149216651916504
    2. ',' → logprob: -1.5149216651916504
    3. '_,' → logprob: -1.8899216651916504
    4. '<|end|>' → logprob: -1.8899216651916504
    5. '_r' → logprob: -3.1399216651916504
    6. ')' → logprob: -3.8899216651916504
    7. '_steps' → logprob: -4.88992166519165
    8. ' _' → logprob: -5.26492166519165
    9. '_moves' → logprob: -5.38992166519165
    10. 'r' → logprob: -5.51492166519165

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7216115593910217
    2. ')' → logprob: -1.346611499786377
    3. '<|end|>' → logprob: -1.721611499786377
    4. '
' → logprob: -3.971611499786377
    5. 'while' → logprob: -4.346611499786377
    6. '<|end|>' → logprob: -4.846611499786377
    7. ',
' → logprob: -4.971611499786377
    8. ':' → logprob: -5.721611499786377
    9. ' ,' → logprob: -5.846611499786377
    10. '=' → logprob: -5.971611499786377

Token 371: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.6713144779205322
    2. 'tuple' → logprob: -0.9213144779205322
    3. 'worm' → logprob: -3.0463144779205322
    4. ' tuple' → logprob: -4.171314239501953
    5. '(tuple' → logprob: -5.046314239501953
    6. 'tail' → logprob: -5.546314239501953
    7. ' (' → logprob: -5.796314239501953
    8. '(body' → logprob: -5.921314239501953
    9. ' body' → logprob: -6.046314239501953
    10. '(t' → logprob: -6.171314239501953

Token 372: '_positions' (ID: 93193)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.8617632389068604
    2. '_len' → logprob: -1.7367632389068604
    3. '_lengths' → logprob: -2.1117632389068604
    4. '_positions' → logprob: -2.2367632389068604
    5. 'length' → logprob: -2.4867632389068604
    6. '_parts' → logprob: -3.4867632389068604
    7. '_segments' → logprob: -4.611763000488281
    8. '_' → logprob: -4.986763000488281
    9. '<|end|>' → logprob: -5.111763000488281
    10. '_tokens' → logprob: -5.111763000488281

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007552678231149912
    2. '<|end|>' → logprob: -5.382552623748779
    3. ' ,' → logprob: -6.382552623748779
    4. ',length' → logprob: -7.882552623748779
    5. ',next' → logprob: -8.382553100585938
    6. '<|end|>' → logprob: -8.757553100585938
    7. ',time' → logprob: -9.382553100585938
    8. 'distance' → logprob: -9.507553100585938
    9. ',current' → logprob: -10.007553100585938
    10. ',n' → logprob: -10.632553100585938

Token 374: ' food' (ID: 4232)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.05676679685711861
    2. ' food' → logprob: -3.0567667484283447
    3. 'steps' → logprob: -5.806766986846924
    4. 'distance' → logprob: -6.306766986846924
    5. 'current' → logprob: -6.556766986846924
    6. ' steps' → logprob: -7.556766986846924
    7. 'depth' → logprob: -8.181766510009766
    8. 'foods' → logprob: -8.431766510009766
    9. ' current' → logprob: -8.556766510009766
    10. 'e' → logprob: -8.681766510009766

Token 375: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.02644694410264492
    2. '_idx' → logprob: -3.776447057723999
    3. 'index' → logprob: -5.77644681930542
    4. 'idx' → logprob: -9.776447296142578
    5. '_' → logprob: -11.651447296142578
    6. '_ind' → logprob: -11.776447296142578
    7. '#index' → logprob: -12.651447296142578
    8. '_count' → logprob: -12.776447296142578
    9. '<|end|>' → logprob: -12.776447296142578
    10. 'Index' → logprob: -13.276447296142578

Token 376: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01025615818798542
    2. '
' → logprob: -4.885256290435791
    3. ' while' → logprob: -6.260256290435791
    4. ')' → logprob: -7.385256290435791
    5. ',' → logprob: -10.260255813598633
    6. '\n' → logprob: -11.010255813598633
    7. 'While' → logprob: -11.010255813598633
    8. '```' → logprob: -11.885255813598633
    9. ')
' → logprob: -12.010255813598633
    10. ',
' → logprob: -12.385255813598633

Token 377: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.05077875405550003
    2. 'distance' → logprob: -3.300778865814209
    3. 'dist' → logprob: -5.425778865814209
    4. 'moves' → logprob: -5.800778865814209
    5. ' steps' → logprob: -6.175778865814209
    6. '0' → logprob: -6.175778865814209
    7. 'depth' → logprob: -7.425778865814209
    8. 'cost' → logprob: -8.55077838897705
    9. 'step' → logprob: -8.80077838897705
    10. ' distance' → logprob: -9.67577838897705

Token 378: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006948976311832666
    2. '
' → logprob: -5.131948947906494
    3. ' while' → logprob: -7.006948947906494
    4. ')
' → logprob: -9.881949424743652
    5. ')' → logprob: -10.506949424743652
    6. '```' → logprob: -11.006949424743652
    7. 'While' → logprob: -12.881949424743652
    8. '):
' → logprob: -13.006949424743652
    9. '	while' → logprob: -13.006949424743652
    10. ',
' → logprob: -13.131949424743652

Token 379: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00019865304057020694
    2. ' while' → logprob: -8.625198364257812
    3. ')' → logprob: -11.500198364257812
    4. '
' → logprob: -12.500198364257812
    5. 'While' → logprob: -13.000198364257812
    6. '	while' → logprob: -14.000198364257812
    7. 'wh' → logprob: -14.375198364257812
    8. 'w' → logprob: -14.625198364257812
    9. '```' → logprob: -14.875198364257812
    10. '   ' → logprob: -15.125198364257812

Token 380: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0004311460361350328
    2. ' queue' → logprob: -7.750431060791016
    3. '(queue' → logprob: -15.375431060791016
    4. 'len' → logprob: -15.750431060791016
    5. '	queue' → logprob: -16.875431060791016
    6. 'que' → logprob: -19.250431060791016
    7. 'True' → logprob: -19.250431060791016
    8. '.queue' → logprob: -21.125431060791016
    9. '   ' → logprob: -21.875431060791016
    10. '```' → logprob: -22.125431060791016

Token 381: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033675435930490494
    2. ':
' → logprob: -3.4086754322052
    3. '.pop' → logprob: -12.033675193786621
    4. '):
' → logprob: -12.283675193786621
    5. '>:' → logprob: -12.283675193786621
    6. '):' → logprob: -12.908675193786621
    7. ':

' → logprob: -13.033675193786621
    8. '=' → logprob: -13.283675193786621
    9. '[' → logprob: -13.408675193786621
    10. 'opleft' → logprob: -13.533675193786621

Token 382: '   ' (ID: 271)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -1.1124227046966553
    2. 'r' → logprob: -1.8624227046966553
    3. '   ' → logprob: -1.8624227046966553
    4. '(head' → logprob: -1.9874227046966553
    5. '(r' → logprob: -2.1124227046966553
    6. ' (' → logprob: -3.2374227046966553
    7. ' head' → logprob: -3.3624227046966553
    8. ' r' → logprob: -3.7374227046966553
    9. '(h' → logprob: -7.237422943115234
    10. '	head' → logprob: -7.362422943115234

Token 383: ' head' (ID: 3189)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' (adapté à ' head') → logprob: -0.4820817708969116
    2. '(head' → logprob: -0.9820817708969116
    3. ' head' → logprob: -5.482081890106201
    4. ' (' → logprob: -6.357081890106201
    5. '(h' → logprob: -6.732081890106201
    6. '(r' → logprob: -7.982081890106201
    7. '   ' → logprob: -7.982081890106201
    8. 'r' → logprob: -9.607081413269043
    9. '	head' → logprob: -10.357081413269043
    10. 'h' → logprob: -10.482081413269043

Token 384: ',' (ID: 11)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.010127654299139977
    2. '_pos' → logprob: -4.635127544403076
    3. 'r' → logprob: -8.385128021240234
    4. ',r' → logprob: -10.260128021240234
    5. ',' → logprob: -10.385128021240234
    6. ',_' → logprob: -10.885128021240234
    7. 'pos' → logprob: -11.010128021240234
    8. '=' → logprob: -11.510128021240234
    9. '[' → logprob: -11.635128021240234
    10. '_positions' → logprob: -12.635128021240234

Token 385: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.012134498916566372
    2. 'rest' → logprob: -4.637134552001953
    3. 'b' → logprob: -6.262134552001953
    4. 'tail' → logprob: -8.637134552001953
    5. '*' → logprob: -9.262134552001953
    6. ' body' → logprob: -9.637134552001953
    7. ' rest' → logprob: -10.012134552001953
    8. 'remaining' → logprob: -10.262134552001953
    9. 'bod' → logprob: -10.762134552001953
    10. '```' → logprob: -12.137134552001953

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043530941009521484
    2. '=' → logprob: -3.2935309410095215
    3. ',r' → logprob: -6.1685309410095215
    4. ' =' → logprob: -6.6685309410095215
    5. ',next' → logprob: -6.7935309410095215
    6. ' ,' → logprob: -8.16853141784668
    7. ',new' → logprob: -8.79353141784668
    8. 'r' → logprob: -9.04353141784668
    9. '   ' → logprob: -9.41853141784668
    10. ',n' → logprob: -9.79353141784668

Token 387: ' fi' (ID: 6134)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.16463379561901093
    2. 'steps' → logprob: -1.9146337509155273
    3. ' food' → logprob: -5.664633750915527
    4. ' steps' → logprob: -7.789633750915527
    5. 'dist' → logprob: -8.789633750915527
    6. 'foods' → logprob: -8.789633750915527
    7. 'step' → logprob: -9.414633750915527
    8. 'idx' → logprob: -9.914633750915527
    9. 'f' → logprob: -11.164633750915527
    10. 'curr' → logprob: -11.289633750915527

Token 388: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010595214553177357
    2. 'x' → logprob: -5.260595321655273
    3. ' =' → logprob: -5.260595321655273
    4. ',' → logprob: -9.260595321655273
    5. 'dx' → logprob: -11.010595321655273
    6. '   ' → logprob: -11.135595321655273
    7. 't' → logprob: -11.510595321655273
    8. 'ex' → logprob: -11.760595321655273
    9. 'nd' → logprob: -13.135595321655273
    10. 'nt' → logprob: -13.135595321655273

Token 389: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.018161648884415627
    2. ' steps' → logprob: -4.018161773681641
    3. 'step' → logprob: -11.39316177368164
    4. '   ' → logprob: -15.64316177368164
    5. '_steps' → logprob: -15.76816177368164
    6. ' step' → logprob: -16.26816177368164
    7. ' ' → logprob: -17.14316177368164
    8. 'Steps' → logprob: -17.64316177368164
    9. '  ' → logprob: -18.39316177368164
    10. '.steps' → logprob: -18.64316177368164

Token 390: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04325631260871887
    2. ' =' → logprob: -3.1682562828063965
    3. '=head' → logprob: -8.543256759643555
    4. '   ' → logprob: -10.918256759643555
    5. '=
' → logprob: -11.043256759643555
    6. ')=' → logprob: -11.418256759643555
    7. ')' → logprob: -12.543256759643555
    8. '=

' → logprob: -13.043256759643555
    9. '=line' → logprob: -13.043256759643555
    10. '=q' → logprob: -13.168256759643555

Token 391: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.003178782993927598
    2. ' queue' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.378178596496582
    4. '
' → logprob: -15.753178596496582
    5. 'deque' → logprob: -16.3781795501709
    6. '(queue' → logprob: -16.5031795501709
    7. '	queue' → logprob: -16.7531795501709
    8. 'que' → logprob: -17.1281795501709
    9. ' ' → logprob: -17.7531795501709
    10. '.queue' → logprob: -17.8781795501709

Token 392: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002246011747047305
    2. '.pop' → logprob: -7.377245903015137
    3. ' =' → logprob: -7.502245903015137
    4. '=p' → logprob: -8.127245903015137
    5. '.p' → logprob: -8.127245903015137
    6. 'p' → logprob: -8.752245903015137
    7. '=head' → logprob: -8.877245903015137
    8. ',' → logprob: -10.752245903015137
    9. 'pop' → logprob: -10.877245903015137
    10. ',p' → logprob: -11.002245903015137

Token 393: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00034142236108891666
    2. 'op' → logprob: -8.000341415405273
    3. 'ople' → logprob: -12.250341415405273
    4. 'opl' → logprob: -13.625341415405273
    5. 'opf' → logprob: -18.625341415405273
    6. 'opt' → logprob: -18.750341415405273
    7. 'append' → logprob: -18.750341415405273
    8. 'left' → logprob: -19.500341415405273
    9. 'opup' → logprob: -19.625341415405273
    10. 'opy' → logprob: -20.250341415405273

Token 394: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03005985915660858
    2. ')' → logprob: -4.155059814453125
    3. '
' → logprob: -5.155059814453125
    4. ',' → logprob: -5.655059814453125
    5. '    
' → logprob: -5.905059814453125
    6. '  
' → logprob: -7.280059814453125
    7. '<|end|>' → logprob: -8.280059814453125
    8. ':' → logprob: -8.655059814453125
    9. ' for' → logprob: -9.030059814453125
    10. '#' → logprob: -9.280059814453125

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011930029839277267
    2. ' for' → logprob: -4.886929988861084
    3. 'for' → logprob: -6.261929988861084
    4. 'r' → logprob: -6.386929988861084
    5. '    
' → logprob: -7.636929988861084
    6. ' r' → logprob: -9.511930465698242
    7. '```' → logprob: -9.761930465698242
    8. '<|end|>' → logprob: -10.886930465698242
    9. '	for' → logprob: -11.261930465698242
    10. '
' → logprob: -11.386930465698242

Token 396: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001190702780149877
    2. ' for' → logprob: -7.251190662384033
    3. 'r' → logprob: -8.126191139221191
    4. 'hr' → logprob: -8.751191139221191
    5. '   ' → logprob: -10.751191139221191
    6. 'head' → logprob: -12.626191139221191
    7. 'rh' → logprob: -13.876191139221191
    8. 'if' (adapté à ' if') → logprob: -15.501191139221191
    9. '	for' → logprob: -15.626191139221191
    10. 'h' → logprob: -15.876191139221191

Token 397: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.001705771079286933
    2. ' fi' → logprob: -6.376705646514893
    3. '(fi' → logprob: -13.00170612335205
    4. '	fi' → logprob: -13.87670612335205
    5. '   ' → logprob: -15.25170612335205
    6. ' ' → logprob: -16.251705169677734
    7. '  ' → logprob: -17.751705169677734
    8. 'head' → logprob: -18.126705169677734
    9. 'f' → logprob: -18.126705169677734
    10. 'food' → logprob: -18.251705169677734

Token 398: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062107622623443604
    2. ' ==' → logprob: -2.812107563018799
    3. '>=' → logprob: -10.062108039855957
    4. ')==' → logprob: -10.062108039855957
    5. '==(' → logprob: -10.562108039855957
    6. '=' → logprob: -11.437108039855957
    7. ']==' → logprob: -11.687108039855957
    8. ')' → logprob: -12.812108039855957
    9. '===' → logprob: -12.937108039855957
    10. '==
' → logprob: -13.062108039855957

Token 399: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7610454708337784e-05
    2. ' N' → logprob: -10.500027656555176
    3. ' ' → logprob: -16.75002670288086
    4. 'len' → logprob: -16.87502670288086
    5. '   ' → logprob: -18.50002670288086
    6. '	N' → logprob: -18.62502670288086
    7. '
' → logprob: -19.25002670288086
    8. '0' → logprob: -19.50002670288086
    9. '>N' → logprob: -19.50002670288086
    10. ' ' → logprob: -19.87502670288086

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05506044998764992
    2. ':
' → logprob: -2.930060386657715
    3. ':return' → logprob: -9.305060386657715
    4. '   ' → logprob: -9.805060386657715
    5. ' :' → logprob: -11.180060386657715
    6. ' and' → logprob: -12.305060386657715
    7. ')' → logprob: -12.930060386657715
    8. ' :
' → logprob: -13.180060386657715
    9. '):' → logprob: -13.305060386657715
    10. ' or' → logprob: -13.555060386657715

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004825264681130648
    2. ' print' → logprob: -6.129825115203857
    3. 'print' → logprob: -6.254825115203857
    4. '   ' → logprob: -7.254825115203857
    5. ' break' → logprob: -12.504825592041016
    6. '
' → logprob: -13.504825592041016
    7. 'break' → logprob: -13.754825592041016
    8. '```' → logprob: -13.879825592041016
    9. ',' → logprob: -15.254825592041016
    10. '    
' → logprob: -15.504825592041016

Token 402: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003236417192965746
    2. '   ' → logprob: -5.753236293792725
    3. ' print' → logprob: -9.753236770629883
    4. '       ' → logprob: -15.003236770629883
    5. '	print' → logprob: -15.753236770629883
    6. '```' → logprob: -16.378236770629883
    7. 'break' → logprob: -17.253236770629883
    8. '    
' → logprob: -18.753236770629883
    9. '    ' → logprob: -19.503236770629883
    10. '
' → logprob: -19.503236770629883

Token 403: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033593899570405483
    2. 'steps' → logprob: -8.000335693359375
    3. ' steps' → logprob: -14.625335693359375
    4. ' (' → logprob: -17.000335693359375
    5. '(step' → logprob: -19.125335693359375
    6. 'Steps' → logprob: -19.875335693359375
    7. '_steps' → logprob: -19.875335693359375
    8. '(
' → logprob: -21.000335693359375
    9. '((' → logprob: -21.375335693359375
    10. '.steps' → logprob: -21.875335693359375

Token 404: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -3.128163257315464e-07
    2. ' steps' → logprob: -15.25
    3. 'step' → logprob: -19.375
    4. '   ' → logprob: -21.375
    5. '
' → logprob: -22.25
    6. '(' → logprob: -22.625
    7. '.steps' → logprob: -22.875
    8. '_steps' → logprob: -23.625
    9. 'Steps' → logprob: -23.75
    10. 'esteps' → logprob: -24.0

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6454882025718689
    2. ')
' → logprob: -0.7704882025718689
    3. '       ' → logprob: -4.395488262176514
    4. '   ' → logprob: -7.895488262176514
    5. ')
' → logprob: -9.645487785339355
    6. ')return' → logprob: -11.520487785339355
    7. '
' → logprob: -12.020487785339355
    8. '           ' → logprob: -12.020487785339355
    9. ')`
' → logprob: -13.270487785339355
    10. ' )' → logprob: -13.395487785339355

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20144705474376678
    2. '   ' → logprob: -1.7014470100402832
    3. '    
' → logprob: -11.451447486877441
    4. '<|end|>' → logprob: -12.076447486877441
    5. '
' → logprob: -12.701447486877441
    6. ',' → logprob: -12.826447486877441
    7. '        
' → logprob: -13.201447486877441
    8. '           ' → logprob: -13.326447486877441
    9. ' for' → logprob: -13.326447486877441
    10. '     ' → logprob: -13.951447486877441

Token 407: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -8.172891830326989e-05
    2. ' break' → logprob: -9.750082015991211
    3. '   ' → logprob: -11.375082015991211
    4. 'exit' → logprob: -12.000082015991211
    5. '	break' → logprob: -12.375082015991211
    6. '       ' → logprob: -13.500082015991211
    7. '
' → logprob: -16.12508201599121
    8. '_break' → logprob: -16.87508201599121
    9. '```' → logprob: -17.25008201599121
    10. 'return' → logprob: -17.25008201599121

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007151735480874777
    2. '    
' → logprob: -7.750715255737305
    3. '
' → logprob: -8.625715255737305
    4. ' for' → logprob: -9.750715255737305
    5. 'for' → logprob: -10.375715255737305
    6. '  
' → logprob: -12.125715255737305
    7. ' 
' → logprob: -12.250715255737305
    8. '   
' → logprob: -13.250715255737305
    9. '        
' → logprob: -13.250715255737305
    10. '       ' → logprob: -15.000715255737305

Token 409: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13417042791843414
    2. '   ' → logprob: -2.1341705322265625
    3. ' for' → logprob: -5.0091705322265625
    4. '    
' → logprob: -8.009170532226562
    5. 'r' → logprob: -9.009170532226562
    6. '
' → logprob: -9.759170532226562
    7. '  
' → logprob: -11.634170532226562
    8. 'else' → logprob: -12.009170532226562
    9. ' 
' → logprob: -12.759170532226562
    10. '	for' → logprob: -12.884170532226562

Token 410: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004554254002869129
    2. 'hr' → logprob: -5.754554271697998
    3. ' for' → logprob: -6.879554271697998
    4. 'r' → logprob: -8.12955379486084
    5. '   ' → logprob: -10.12955379486084
    6. 'head' → logprob: -11.62955379486084
    7. 'Hr' → logprob: -13.25455379486084
    8. 'HR' → logprob: -14.87955379486084
    9. ' hr' → logprob: -15.00455379486084
    10. '(hr' → logprob: -15.25455379486084

Token 411: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.25223761796951294
    2. ' dr' → logprob: -1.5022375583648682
    3. 'dx' → logprob: -8.377237319946289
    4. 'd' → logprob: -9.752237319946289
    5. '(dr' → logprob: -11.627237319946289
    6. ' dx' → logprob: -12.877237319946289
    7. '_dr' → logprob: -13.002237319946289
    8. 'nr' → logprob: -13.127237319946289
    9. '	dr' → logprob: -13.627237319946289
    10. 'dir' → logprob: -14.002237319946289

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047666458413004875
    2. ',d' → logprob: -5.754766464233398
    3. ',c' → logprob: -6.504766464233398
    4. ' ,' → logprob: -9.379766464233398
    5. ',(' → logprob: -12.629766464233398
    6. ',de' → logprob: -13.129766464233398
    7. ',_' → logprob: -14.004766464233398
    8. ',-' → logprob: -15.129766464233398
    9. ',n' → logprob: -15.379766464233398
    10. ',tr' → logprob: -16.6297664642334

Token 413: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.03804149478673935
    2. ' dc' → logprob: -3.288041591644287
    3. '_dc' → logprob: -16.788042068481445
    4. '.dc' → logprob: -17.038042068481445
    5. '(dc' → logprob: -18.788042068481445
    6. 'dl' → logprob: -19.663042068481445
    7. 'dcc' → logprob: -20.913042068481445
    8. ' ' → logprob: -20.913042068481445
    9. ' DC' → logprob: -21.288042068481445
    10. 'DC' → logprob: -21.413042068481445

Token 414: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889242470264435
    2. 'in' → logprob: -2.578892469406128
    3. ' ' → logprob: -14.078892707824707
    4. '	in' → logprob: -14.453892707824707
    5. ',' → logprob: -14.578892707824707
    6. ')' → logprob: -14.953892707824707
    7. '  ' → logprob: -15.828892707824707
    8. ' ,' → logprob: -16.20389175415039
    9. ',in' → logprob: -16.70389175415039
    10. 'inth' → logprob: -17.07889175415039

Token 415: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.01416350994259119
    2. ' directions' → logprob: -4.264163494110107
    3. 'direction' → logprob: -17.764163970947266
    4. 'direct' → logprob: -17.889163970947266
    5. '-dire' → logprob: -18.764163970947266
    6. 'directories' → logprob: -18.764163970947266
    7. '[' → logprob: -19.514163970947266
    8. ' ' → logprob: -19.889163970947266
    9. 'Directions' → logprob: -21.389163970947266
    10. '[-' → logprob: -21.639163970947266

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008709830231964588
    2. ':
' → logprob: -4.758709907531738
    3. '   ' → logprob: -9.883709907531738
    4. ',' → logprob: -11.133709907531738
    5. '):' → logprob: -11.133709907531738
    6. '):
' → logprob: -12.383709907531738
    7. ' :' → logprob: -12.758709907531738
    8. ':

' → logprob: -12.883709907531738
    9. '=' → logprob: -13.133709907531738
    10. ':
' → logprob: -13.633709907531738

Token 417: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12288764864206314
    2. '    ' → logprob: -2.87288761138916
    3. ' r' → logprob: -3.74788761138916
    4. '       ' → logprob: -4.24788761138916
    5. ' next' → logprob: -4.49788761138916
    6. '   ' → logprob: -5.12288761138916
    7. ' nxt' → logprob: -6.62288761138916
    8. ' ' → logprob: -7.24788761138916
    9. 'r' → logprob: -7.99788761138916
    10. ' nr' → logprob: -8.37288761138916

Token 418: ' nh' (ID: 5467)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.5762465596199036
    2. ' nr' → logprob: -0.8262465596199036
    3. ' nh' → logprob: -8.57624626159668
    4. ' new' → logprob: -9.70124626159668
    5. 'new' → logprob: -10.57624626159668
    6. '       ' → logprob: -11.20124626159668
    7. 'r' → logprob: -11.82624626159668
    8. ' r' → logprob: -12.57624626159668
    9. 'nh' (adapté à ' nh') → logprob: -12.82624626159668
    10. 'hr' → logprob: -13.82624626159668

Token 419: ',n' (ID: 18103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0282147154211998
    2. '=head' → logprob: -4.528214931488037
    3. 'r' → logprob: -4.903214931488037
    4. '=(' → logprob: -5.778214931488037
    5. '=r' → logprob: -5.903214931488037
    6. '_r' → logprob: -5.903214931488037
    7. ',r' → logprob: -7.778214931488037
    8. ' =' → logprob: -8.028214454650879
    9. '=n' → logprob: -9.028214454650879
    10. ',' → logprob: -9.153214454650879

Token 420: 'c' (ID: 66)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2869538068771362
    2. 'r' → logprob: -1.2869538068771362
    3. '=' → logprob: -1.6619538068771362
    4. 'w' → logprob: -1.9119538068771362
    5. ' =' → logprob: -2.411953926086426
    6. 'hc' → logprob: -4.911953926086426
    7. 'c' → logprob: -5.036953926086426
    8. 'n' → logprob: -6.661953926086426
    9. ',' → logprob: -7.161953926086426
    10. 'nc' → logprob: -7.536953926086426

Token 421: '=head' (ID: 56939)
  Prédit: '=head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=head' → logprob: -0.16042904555797577
    2. '=' → logprob: -1.9104290008544922
    3. ' =' → logprob: -8.535429000854492
    4. '=(' → logprob: -12.035429000854492
    5. '=
' → logprob: -13.910429000854492
    6. '=`' → logprob: -15.285429000854492
    7. ')=' → logprob: -15.410429000854492
    8. '=n' → logprob: -15.785429000854492
    9. '=

' → logprob: -16.035429000854492
    10. 'head' → logprob: -16.410429000854492

Token 422: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742261469364166
    2. '=head' → logprob: -0.9742261171340942
    3. '=
' → logprob: -9.099225997924805
    4. ' =' → logprob: -10.474225997924805
    5. 'head' → logprob: -12.849225997924805
    6. '=

' → logprob: -13.474225997924805
    7. '=n' → logprob: -13.724225997924805
    8. '=r' → logprob: -14.474225997924805
    9. ',' → logprob: -14.599225997924805
    10. '+=' → logprob: -14.724225997924805

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. ']' → logprob: -15.625000953674316
    4. '
' → logprob: -16.375001907348633
    5. '+' → logprob: -17.000001907348633
    6. '[' → logprob: -17.375001907348633
    7. 'dr' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. ']+' → logprob: -18.500001907348633
    10. '```' → logprob: -18.500001907348633

Token 424: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017651435919106007
    2. ' +' → logprob: -6.376765251159668
    3. '+n' → logprob: -10.751765251159668
    4. ']+' → logprob: -11.251765251159668
    5. '+
' → logprob: -11.626765251159668
    6. ',' → logprob: -12.001765251159668
    7. '+,' → logprob: -12.251765251159668
    8. ')+' → logprob: -13.376765251159668
    9. ',n' → logprob: -13.626765251159668
    10. '],' → logprob: -13.751765251159668

Token 425: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -1.9027791495318525e-05
    2. ' dr' → logprob: -10.875019073486328
    3. ' ' → logprob: -17.750019073486328
    4. '	dr' → logprob: -18.125019073486328
    5. '   ' → logprob: -18.375019073486328
    6. '1' → logprob: -19.375019073486328
    7. '  ' → logprob: -20.500019073486328
    8. '
' → logprob: -20.500019073486328
    9. '(dr' → logprob: -20.625019073486328
    10. 'd' → logprob: -20.625019073486328

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001619003596715629
    2. ' ,' → logprob: -6.6266188621521
    3. ',n' → logprob: -8.626619338989258
    4. ',h' → logprob: -9.376619338989258
    5. 'head' → logprob: -11.001619338989258
    6. ',next' → logprob: -13.126619338989258
    7. '=head' → logprob: -13.251619338989258
    8. ',
' → logprob: -13.376619338989258
    9. ',int' → logprob: -13.501619338989258
    10. ' head' → logprob: -14.001619338989258

Token 427: ' head' (ID: 3189)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -1.8624639324116288e-06
    2. ' head' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.750001907348633
    4. '	head' → logprob: -20.750001907348633
    5. '<head' → logprob: -21.875001907348633
    6. ' ' → logprob: -22.000001907348633
    7. '=head' → logprob: -22.500001907348633
    8. '
' → logprob: -22.625001907348633
    9. '(head' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.875001907348633

Token 428: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5451681974809617e-05
    2. '1' → logprob: -11.125015258789062
    3. '
' → logprob: -15.500015258789062
    4. '   ' → logprob: -15.875015258789062
    5. '```' → logprob: -16.500015258789062
    6. 'c' → logprob: -16.750015258789062
    7. '[
' → logprob: -17.125015258789062
    8. ' ' → logprob: -17.625015258789062
    9. '][' → logprob: -18.000015258789062
    10. ' [' → logprob: -18.375015258789062

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.75
    3. 'c' → logprob: -18.625
    4. ' ' → logprob: -19.5
    5. '```' → logprob: -19.5
    6. '[' → logprob: -19.75
    7. 'dc' → logprob: -20.625
    8. '   ' → logprob: -21.125
    9. '
' → logprob: -21.25
    10. '+' → logprob: -21.875

Token 430: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005035098642110825
    2. ']+' → logprob: -5.380034923553467
    3. '+c' → logprob: -8.130035400390625
    4. ' +' → logprob: -9.630035400390625
    5. ')+' → logprob: -11.130035400390625
    6. ']' → logprob: -11.130035400390625
    7. '[' → logprob: -11.380035400390625
    8. '+n' → logprob: -11.755035400390625
    9. '}+' → logprob: -13.130035400390625
    10. '()+' → logprob: -13.380035400390625

Token 431: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -3.1424973713001236e-05
    2. ' dc' → logprob: -10.375031471252441
    3. '1' → logprob: -16.125030517578125
    4. '(dc' → logprob: -17.375030517578125
    5. 'c' → logprob: -18.875030517578125
    6. '_dc' → logprob: -19.250030517578125
    7. '.dc' → logprob: -20.000030517578125
    8. '
' → logprob: -20.000030517578125
    9. 'dr' → logprob: -20.125030517578125
    10. ' ' → logprob: -20.375030517578125

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029446575790643692
    2. '<|end|>' → logprob: -3.904446601867676
    3. '        
' → logprob: -5.404446601867676
    4. '
' → logprob: -5.904446601867676
    5. ')' → logprob: -7.404446601867676
    6. ',' → logprob: -8.279446601867676
    7. '<|end|>' → logprob: -8.654446601867676
    8. '	' → logprob: -9.154446601867676
    9. '   ' → logprob: -9.529446601867676
    10. '        ' → logprob: -9.654446601867676

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015336352400481701
    2. '<|end|>' → logprob: -4.390336513519287
    3. ' if' → logprob: -6.265336513519287
    4. 'if' → logprob: -7.640336513519287
    5. '        
' → logprob: -8.265336036682129
    6. '```' → logprob: -9.640336036682129
    7. '<|end|>' → logprob: -10.640336036682129
    8. ')' → logprob: -10.890336036682129
    9. ' 
' → logprob: -11.140336036682129
    10. ',' → logprob: -11.390336036682129

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0234018936753273
    2. ' if' → logprob: -3.773401975631714
    3. '       ' → logprob: -8.773402214050293
    4. '```' → logprob: -13.898402214050293
    5. '        
' → logprob: -15.273402214050293
    6. '   ' → logprob: -15.773402214050293
    7. '           ' → logprob: -16.023401260375977
    8. '	if' → logprob: -16.023401260375977
    9. ' ' → logprob: -17.273401260375977
    10. '#' → logprob: -17.648401260375977

Token 435: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.625571072101593
    2. ' not' → logprob: -1.2505710124969482
    3. 'not' → logprob: -2.3755710124969482
    4. ' is' → logprob: -2.5005710124969482
    5. '0' → logprob: -5.625571250915527
    6. ' ' → logprob: -9.375571250915527
    7. '(not' → logprob: -12.375571250915527
    8. '(is' → logprob: -12.500571250915527
    9. '(' → logprob: -13.375571250915527
    10. ' (' → logprob: -13.375571250915527

Token 436: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011056780815124512
    2. ' is' → logprob: -4.511056900024414
    3. '(is' → logprob: -11.761056900024414
    4. '(' → logprob: -14.136056900024414
    5. ' (' → logprob: -14.636056900024414
    6. '0' → logprob: -17.761056900024414
    7. '	is' → logprob: -20.136056900024414
    8. ' ' → logprob: -20.136056900024414
    9. 'in' → logprob: -20.386056900024414
    10. ')is' → logprob: -21.011056900024414

Token 437: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -2.1008713702030946e-06
    2. 'valid' → logprob: -13.125001907348633
    3. ' valid' → logprob: -17.375001907348633
    4. '_' → logprob: -17.750001907348633
    5. 'Valid' → logprob: -17.750001907348633
    6. ' _' → logprob: -18.125001907348633
    7. '_val' → logprob: -19.500001907348633
    8. '_safe' → logprob: -20.375001907348633
    9. '_VALID' → logprob: -20.375001907348633
    10. '_invalid' → logprob: -20.875001907348633

Token 438: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.511406809295295e-06
    2. ' (' → logprob: -12.125006675720215
    3. '(' → logprob: -13.875006675720215
    4. '(nx' → logprob: -18.6250057220459
    5. ' ' → logprob: -19.5000057220459
    6. '(
' → logprob: -19.5000057220459
    7. '((' → logprob: -19.8750057220459
    8. '   ' → logprob: -19.8750057220459
    9. '
' → logprob: -20.2500057220459
    10. '```' → logprob: -20.6250057220459

Token 439: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.4121114822482923e-06
    2. '(h' → logprob: -13.250003814697266
    3. '(' → logprob: -14.250003814697266
    4. ',h' → logprob: -15.375003814697266
    5. '_h' → logprob: -16.000003814697266
    6. '
' → logprob: -16.375003814697266
    7. '	h' → logprob: -16.500003814697266
    8. '(n' → logprob: -16.750003814697266
    9. ')' → logprob: -16.875003814697266
    10. ' h' → logprob: -17.000003814697266

Token 440: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.062063585966825485
    2. ',' → logprob: -2.812063694000244
    3. ' ,' → logprob: -9.312063217163086
    4. ',
' → logprob: -12.437063217163086
    5. ',int' → logprob: -15.437063217163086
    6. ',num' → logprob: -15.437063217163086
    7. '```' → logprob: -15.562063217163086
    8. ',h' → logprob: -15.687063217163086
    9. ',no' → logprob: -15.812063217163086
    10. 'nc' → logprob: -15.937063217163086

Token 441: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00888766534626484
    2. 'nc' → logprob: -5.633887767791748
    3. ',' → logprob: -6.133887767791748
    4. ',c' → logprob: -6.383887767791748
    5. ',n' → logprob: -6.633887767791748
    6. 'hc' → logprob: -11.25888729095459
    7. '   ' → logprob: -11.25888729095459
    8. ' nc' → logprob: -11.50888729095459
    9. '
' → logprob: -11.63388729095459
    10. ')' → logprob: -11.63388729095459

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17191697657108307
    2. ')' → logprob: -1.9219169616699219
    3. '):
' → logprob: -4.546916961669922
    4. ' ):' → logprob: -7.671916961669922
    5. ' or' → logprob: -7.796916961669922
    6. ' )' → logprob: -9.546916961669922
    7. '       ' → logprob: -10.421916961669922
    8. '   ' → logprob: -10.796916961669922
    9. ' ):
' → logprob: -11.921916961669922
    10. '):
' → logprob: -12.671916961669922

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021775043569505215
    2. ' continue' → logprob: -6.252177715301514
    3. 'continue' → logprob: -8.377177238464355
    4. '               ' → logprob: -12.002177238464355
    5. '	continue' → logprob: -12.377177238464355
    6. '       ' → logprob: -12.752177238464355
    7. '   ' → logprob: -13.002177238464355
    8. ' ' → logprob: -14.002177238464355
    9. ' or' → logprob: -14.502177238464355
    10. '_continue' → logprob: -14.877177238464355

Token 444: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5789874792098999
    2. 'continue' (adapté à ' continue') → logprob: -1.0789874792099
    3. ' continue' → logprob: -2.3289875984191895
    4. '               ' → logprob: -6.2039875984191895
    5. '	continue' → logprob: -9.203987121582031
    6. '       ' → logprob: -10.328987121582031
    7. '```' → logprob: -10.828987121582031
    8. '   ' → logprob: -11.703987121582031
    9. '_continue' → logprob: -11.828987121582031
    10. '		' → logprob: -12.328987121582031

Token 445: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041142539121210575
    2. '
' → logprob: -6.004114151000977
    3. '        
' → logprob: -6.629114151000977
    4. 'if' → logprob: -8.879114151000977
    5. ' if' → logprob: -9.629114151000977
    6. '  
' → logprob: -10.754114151000977
    7. '       
' → logprob: -11.129114151000977
    8. ' 
' → logprob: -11.504114151000977
    9. '```' → logprob: -11.754114151000977
    10. '            
' → logprob: -11.754114151000977

Token 446: '       ' (ID: 309)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8060893416404724
    2. 'if' → logprob: -1.1810894012451172
    3. 'next' → logprob: -1.8060894012451172
    4. '#' → logprob: -2.806089401245117
    5. '       ' → logprob: -4.181089401245117
    6. '        
' → logprob: -6.556089401245117
    7. 'n' → logprob: -6.931089401245117
    8. ' new' → logprob: -7.181089401245117
    9. 'tail' → logprob: -7.431089401245117
    10. 'nd' → logprob: -7.556089401245117

Token 447: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6597587466239929
    2. '#' (adapté à ' #') → logprob: -1.4097588062286377
    3. 'if' → logprob: -1.7847588062286377
    4. 'next' → logprob: -2.7847588062286377
    5. '       ' → logprob: -5.159758567810059
    6. 'n' → logprob: -6.409758567810059
    7. '        
' → logprob: -7.034758567810059
    8. 'nd' → logprob: -7.909758567810059
    9. 'occupied' → logprob: -9.284758567810059
    10. ' new' → logprob: -9.409758567810059

Token 448: ' Check' (ID: 6208)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5120282769203186
    2. '#' → logprob: -1.7620282173156738
    3. 'if' → logprob: -1.7620282173156738
    4. 'next' → logprob: -3.012028217315674
    5. 'n' → logprob: -5.012028217315674
    6. 'nb' → logprob: -7.887028217315674
    7. 'occupied' → logprob: -8.262028694152832
    8. 'npos' → logprob: -8.512028694152832
    9. 'nd' → logprob: -8.637028694152832
    10. ' new' → logprob: -9.762028694152832

Token 449: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.146066427230835
    2. 'if' → logprob: -1.271066427230835
    3. ' new' → logprob: -1.396066427230835
    4. 'new' → logprob: -2.396066427230835
    5. '#' → logprob: -3.396066427230835
    6. ' next' → logprob: -4.396066665649414
    7. 'next' → logprob: -4.521066665649414
    8. '       ' → logprob: -5.521066665649414
    9. ' #' → logprob: -7.146066665649414
    10. 'nd' → logprob: -7.896066665649414

Token 450: ' nh' (ID: 5467)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09269560873508453
    2. '(fi' → logprob: -3.092695713043213
    3. '(body' → logprob: -3.342695713043213
    4. ' (' → logprob: -5.592695713043213
    5. '(len' → logprob: -6.467695713043213
    6. '(' → logprob: -6.967695713043213
    7. '(dr' → logprob: -7.967695713043213
    8. '(nb' → logprob: -8.717695236206055
    9. '(not' → logprob: -8.842695236206055
    10. '((' → logprob: -8.842695236206055

Token 451: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.03381063789129257
    2. ',' → logprob: -3.408810615539551
    3. ' ,' → logprob: -9.53381061553955
    4. 'nc' → logprob: -10.28381061553955
    5. '_nc' → logprob: -11.03381061553955
    6. '
' → logprob: -11.65881061553955
    7. '```' → logprob: -12.28381061553955
    8. ',new' → logprob: -12.53381061553955
    9. ',
' → logprob: -12.65881061553955
    10. ',N' → logprob: -12.78381061553955

Token 452: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00029244067263789475
    2. ',c' → logprob: -8.375292778015137
    3. ',n' → logprob: -10.250292778015137
    4. '_nc' → logprob: -11.375292778015137
    5. '_c' → logprob: -11.875292778015137
    6. ',' → logprob: -12.125292778015137
    7. 'nc' → logprob: -14.125292778015137
    8. '```' → logprob: -14.875292778015137
    9. '
' → logprob: -15.000292778015137
    10. '``' → logprob: -15.000292778015137

Token 453: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6967650651931763
    2. 'in' → logprob: -0.9467650651931763
    3. ' not' → logprob: -2.4467649459838867
    4. '==' → logprob: -4.321764945983887
    5. 'not' → logprob: -4.446764945983887
    6. ')' → logprob: -7.321764945983887
    7. ' ==' → logprob: -7.446764945983887
    8. '<|end|>' → logprob: -7.571764945983887
    9. ',' → logprob: -8.571764945983887
    10. ' is' → logprob: -9.196764945983887

Token 454: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06677768379449844
    2. 'not' → logprob: -3.5667777061462402
    3. ' in' → logprob: -3.8167777061462402
    4. '(n' → logprob: -4.56677770614624
    5. ' not' → logprob: -7.31677770614624
    6. '(head' → logprob: -7.44177770614624
    7. 'head' → logprob: -7.44177770614624
    8. '(not' → logprob: -7.69177770614624
    9. 'body' → logprob: -8.191777229309082
    10. '(body' → logprob: -8.316777229309082

Token 455: ' worm' (ID: 40598)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.00019269285257905722
    2. 'set' → logprob: -9.250192642211914
    3. '(body' → logprob: -9.750192642211914
    4. ' body' → logprob: -10.250192642211914
    5. '{' → logprob: -13.375192642211914
    6. '<body' → logprob: -14.125192642211914
    7. '[' → logprob: -15.500192642211914
    8. '	body' → logprob: -16.500192642211914
    9. ' set' → logprob: -16.875192642211914
    10. '(set' → logprob: -17.250192642211914

Token 456: ' body' (ID: 3641)
  Prédit: '_body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.0055312467738986015
    2. 'body' → logprob: -5.880531311035156
    3. '       ' → logprob: -6.755531311035156
    4. '   ' → logprob: -7.130531311035156
    5. ' body' → logprob: -8.130531311035156
    6. '_head' → logprob: -8.755531311035156
    7. '```' → logprob: -10.255531311035156
    8. '[' → logprob: -10.380531311035156
    9. '_BODY' → logprob: -10.380531311035156
    10. '           ' → logprob: -10.380531311035156

Token 457: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011366101913154125
    2. 'if' → logprob: -5.63636589050293
    3. ' if' → logprob: -5.63636589050293
    4. ' and' → logprob: -6.13636589050293
    5. ' or' → logprob: -6.76136589050293
    6. 'and' → logprob: -7.38636589050293
    7. ',' → logprob: -9.88636589050293
    8. ':' → logprob: -10.13636589050293
    9. 'or' → logprob: -10.26136589050293
    10. ' (' → logprob: -11.26136589050293

Token 458: ' obstacles' (ID: 46430)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2581373453140259
    2. 'body' → logprob: -1.3831373453140259
    3. '(body' → logprob: -2.2581372261047363
    4. ' (' → logprob: -2.3831372261047363
    5. '(' → logprob: -2.5081372261047363
    6. '(head' → logprob: -3.1331372261047363
    7. ' body' → logprob: -3.2581372261047363
    8. '(not' → logprob: -3.7581372261047363
    9. 'head' → logprob: -3.8831372261047363
    10. '(w' → logprob: -4.258137226104736

Token 459: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003360581584274769
    2. ' if' → logprob: -6.628360748291016
    3. 'if' → logprob: -7.003360748291016
    4. ' and' → logprob: -7.253360748291016
    5. ' or' → logprob: -8.628360748291016
    6. '        
' → logprob: -9.628360748291016
    7. 'and' → logprob: -9.753360748291016
    8. ',' → logprob: -9.878360748291016
    9. 'in' → logprob: -12.003360748291016
    10. ':' → logprob: -12.003360748291016

Token 460: 'before' (ID: 29615)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9518993496894836
    2. ' (' → logprob: -1.2018992900848389
    3. '(n' → logprob: -2.076899290084839
    4. ' if' → logprob: -2.701899290084839
    5. 'body' → logprob: -3.576899290084839
    6. ')' → logprob: -3.951899290084839
    7. 'nh' → logprob: -4.201899528503418
    8. '       ' → logprob: -4.201899528503418
    9. '(body' → logprob: -4.576899528503418
    10. ' body' → logprob: -5.201899528503418

Token 461: ' movement' (ID: 12772)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.4309872388839722
    2. 'moving' → logprob: -1.8059872388839722
    3. 'tail' → logprob: -2.1809873580932617
    4. 'e' → logprob: -2.1809873580932617
    5. 'adding' → logprob: -2.9309873580932617
    6. 'the' → logprob: -2.9309873580932617
    7. ')' → logprob: -3.0559873580932617
    8. '(' → logprob: -3.1809873580932617
    9. 'checking' → logprob: -3.5559873580932617
    10. '(grid' → logprob: -4.180987358093262

Token 462: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6587315201759338
    2. ')' → logprob: -1.033731460571289
    3. ' and' → logprob: -2.783731460571289
    4. ' or' → logprob: -3.658731460571289
    5. ',' → logprob: -4.158731460571289
    6. '):' → logprob: -4.783731460571289
    7. 'and' → logprob: -5.033731460571289
    8. '):
' → logprob: -5.783731460571289
    9. ' if' → logprob: -6.408731460571289
    10. ')
' → logprob: -6.533731460571289

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014005064032971859
    2. ' if' → logprob: -4.764005184173584
    3. 'if' → logprob: -5.264005184173584
    4. '        
' → logprob: -9.264004707336426
    5. ',' → logprob: -10.264004707336426
    6. '```' → logprob: -11.514004707336426
    7. ' and' → logprob: -11.889004707336426
    8. 'body' → logprob: -12.014004707336426
    9. ')' → logprob: -12.139004707336426
    10. '           ' → logprob: -12.389004707336426

Token 464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04163367673754692
    2. '       ' → logprob: -3.5416336059570312
    3. ' if' → logprob: -4.791633605957031
    4. 'occupied' → logprob: -6.791633605957031
    5. 'body' → logprob: -7.166633605957031
    6. 'new' → logprob: -7.291633605957031
    7. 'next' → logprob: -7.291633605957031
    8. '        
' → logprob: -9.916633605957031
    9. ' occupied' → logprob: -9.916633605957031
    10. '#' → logprob: -10.416633605957031

Token 465: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002374342642724514
    2. ' (' → logprob: -7.252374172210693
    3. '(any' → logprob: -7.252374172210693
    4. '(body' → logprob: -8.002374649047852
    5. '((' → logprob: -8.127374649047852
    6. '(' → logprob: -9.377374649047852
    7. '(nb' → logprob: -9.627374649047852
    8. '(N' → logprob: -10.252374649047852
    9. '(head' → logprob: -10.877374649047852
    10. 'nh' → logprob: -11.252374649047852

Token 466: 'nh' (ID: 5380)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25228309631347656
    2. 'nh' → logprob: -1.5022830963134766
    3. ' nh' → logprob: -8.627283096313477
    4. ' (' → logprob: -10.002283096313477
    5. 'n' → logprob: -10.127283096313477
    6. '(' → logprob: -10.502283096313477
    7. '(nx' → logprob: -12.002283096313477
    8. '(N' → logprob: -12.252283096313477
    9. '(h' → logprob: -12.377283096313477
    10. '((' → logprob: -12.502283096313477

Token 467: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.020562324672937393
    2. ',' → logprob: -3.8955624103546143
    3. ',(' → logprob: -11.645562171936035
    4. ' ,' → logprob: -12.020562171936035
    5. ',_' → logprob: -14.020562171936035
    6. ',int' → logprob: -14.145562171936035
    7. ',
' → logprob: -14.770562171936035
    8. ',in' → logprob: -14.895562171936035
    9. ',new' → logprob: -14.895562171936035
    10. ',N' → logprob: -14.895562171936035

Token 468: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19945095479488373
    2. ',n' → logprob: -2.324450969696045
    3. 'nc' → logprob: -2.824450969696045
    4. ',c' → logprob: -4.449450969696045
    5. ',' → logprob: -4.574450969696045
    6. '_nc' → logprob: -7.824450969696045
    7. 'n' → logprob: -8.074450492858887
    8. '
' → logprob: -8.199450492858887
    9. '.nc' → logprob: -8.949450492858887
    10. ')' → logprob: -9.324450492858887

Token 469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05608075112104416
    2. 'in' → logprob: -3.4310808181762695
    3. ' in' → logprob: -4.5560808181762695
    4. ')==' → logprob: -4.8060808181762695
    5. '==' → logprob: -5.9310808181762695
    6. ' )' → logprob: -7.3060808181762695
    7. ' ==' → logprob: -9.18108081817627
    8. '==(' → logprob: -10.18108081817627
    9. ']==' → logprob: -11.80608081817627
    10. ']' → logprob: -12.55608081817627

Token 470: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28179654479026794
    2. ' in' → logprob: -1.4067965745925903
    3. '==' → logprob: -7.531796455383301
    4. ')' → logprob: -9.6567964553833
    5. ' ==' → logprob: -10.1567964553833
    6. '```' → logprob: -13.4067964553833
    7. '==(' → logprob: -13.4067964553833
    8. ')==' → logprob: -14.0317964553833
    9. '
' → logprob: -14.5317964553833
    10. ' ' → logprob: -14.5317964553833

Token 471: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.0009271837188862264
    2. 'set' → logprob: -7.875926971435547
    3. '(body' → logprob: -8.250926971435547
    4. '[' → logprob: -8.625926971435547
    5. '{' → logprob: -9.625926971435547
    6. ' body' → logprob: -10.500926971435547
    7. '<body' → logprob: -12.625926971435547
    8. '([' → logprob: -12.875926971435547
    9. 'worm' → logprob: -13.375926971435547
    10. ' [' → logprob: -14.250926971435547

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17698323726654053
    2. ':' → logprob: -2.05198335647583
    3. '       ' → logprob: -4.05198335647583
    4. '           ' → logprob: -4.42698335647583
    5. ' or' → logprob: -5.67698335647583
    6. '   ' → logprob: -7.55198335647583
    7. ' and' → logprob: -8.426982879638672
    8. 'continue' → logprob: -10.176982879638672
    9. 'and' → logprob: -10.426982879638672
    10. ' ' → logprob: -10.801982879638672

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0059484681114554405
    2. ' continue' → logprob: -5.880948543548584
    3. 'continue' → logprob: -6.130948543548584
    4. ':
' → logprob: -7.380948543548584
    5. ':' → logprob: -8.880948066711426
    6. '       ' → logprob: -9.005948066711426
    7. '               ' → logprob: -10.130948066711426
    8. '	continue' → logprob: -11.505948066711426
    9. '   ' → logprob: -11.880948066711426
    10. ' or' → logprob: -12.130948066711426

Token 474: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0016276907408609986
    2. '           ' → logprob: -7.0016279220581055
    3. ' continue' → logprob: -7.2516279220581055
    4. '       ' → logprob: -12.001627922058105
    5. '	continue' → logprob: -14.876627922058105
    6. '   ' → logprob: -15.251627922058105
    7. '               ' → logprob: -16.12662696838379
    8. 'continu' → logprob: -16.62662696838379
    9. '_continue' → logprob: -17.25162696838379
    10. 'contin' → logprob: -18.75162696838379

Token 475: ' The' (ID: 623)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00011570196511456743
    2. ' continue' → logprob: -9.750115394592285
    3. '           ' → logprob: -10.000115394592285
    4. '#' → logprob: -12.125115394592285
    5. 'if' → logprob: -12.875115394592285
    6. '       ' → logprob: -13.000115394592285
    7. '   ' → logprob: -13.625115394592285
    8. '               ' → logprob: -15.625115394592285
    9. '	continue' → logprob: -16.0001163482666
    10. 'continu' → logprob: -16.3751163482666

Token 476: ' only' (ID: 1606)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09137032926082611
    2. '#' → logprob: -2.7163703441619873
    3. 'tail' → logprob: -5.091370105743408
    4. 'next' → logprob: -5.216370105743408
    5. ' continue' → logprob: -5.341370105743408
    6. ' #' → logprob: -7.341370105743408
    7. 'continu' → logprob: -7.341370105743408
    8. 'if' → logprob: -7.591370105743408
    9. '       ' → logprob: -7.591370105743408
    10. 'continued' → logprob: -7.591370105743408

Token 477: ' exception' (ID: 8020)
  Prédit: 'exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exception' → logprob: -0.27250906825065613
    2. ' exception' → logprob: -1.6475090980529785
    3. 'time' → logprob: -3.7725090980529785
    4. 'except' → logprob: -4.7725090980529785
    5. 'case' → logprob: -5.2725090980529785
    6. 'possible' → logprob: -5.8975090980529785
    7. 'allowed' → logprob: -6.2725090980529785
    8. 'if' → logprob: -6.7725090980529785
    9. 'way' → logprob: -6.8975090980529785
    10. 'continue' → logprob: -7.5225090980529785

Token 478: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.045724913477897644
    2. ' if' → logprob: -4.295724868774414
    3. 'is' → logprob: -4.545724868774414
    4. '           ' → logprob: -4.545724868774414
    5. ' and' → logprob: -5.920724868774414
    6. 'and' → logprob: -6.795724868774414
    7. ' can' → logprob: -7.170724868774414
    8. '               ' → logprob: -7.170724868774414
    9. 'if' → logprob: -7.295724868774414
    10. ' would' → logprob: -7.545724868774414

Token 479: ' if' (ID: 538)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04691876471042633
    2. 'body' → logprob: -4.296918869018555
    3. '(' → logprob: -4.546918869018555
    4. 'if' → logprob: -4.921918869018555
    5. 'nh' → logprob: -4.921918869018555
    6. ' (' → logprob: -5.796918869018555
    7. '(body' → logprob: -6.921918869018555
    8. ' nh' → logprob: -7.171918869018555
    9. ' body' → logprob: -7.296918869018555
    10. ' if' → logprob: -7.546918869018555

Token 480: ' tail' (ID: 12742)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.28123044967651367
    2. '(n' → logprob: -2.0312304496765137
    3. '(fi' → logprob: -2.5312304496765137
    4. '(' → logprob: -3.7812304496765137
    5. 'nh' → logprob: -5.406230449676514
    6. 'body' → logprob: -6.281230449676514
    7. '(body' → logprob: -6.781230449676514
    8. ' (' → logprob: -7.156230449676514
    9. ' fi' → logprob: -7.406230449676514
    10. '(food' → logprob: -7.656230449676514

Token 481: ' moves' (ID: 19523)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5107395052909851
    2. 'and' → logprob: -1.6357395648956299
    3. ' and' → logprob: -2.13573956489563
    4. '==' → logprob: -3.26073956489563
    5. 'body' → logprob: -4.510739326477051
    6. '(len' → logprob: -4.760739326477051
    7. ' ==' → logprob: -4.885739326477051
    8. ' len' → logprob: -5.885739326477051
    9. ' ' → logprob: -6.010739326477051
    10. '!=' → logprob: -6.135739326477051

Token 482: ' out' (ID: 842)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08414293825626373
    2. 'and' → logprob: -2.5841429233551025
    3. '           ' → logprob: -6.209143161773682
    4. ',' → logprob: -6.709143161773682
    5. '       ' → logprob: -7.834143161773682
    6. ')' → logprob: -8.209142684936523
    7. ' to' → logprob: -9.084142684936523
    8. ' (' → logprob: -9.209142684936523
    9. ' ahead' → logprob: -9.334142684936523
    10. '               ' → logprob: -9.334142684936523

Token 483: ' from' (ID: 591)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3906051218509674
    2. 'and' → logprob: -1.265605092048645
    3. ',' → logprob: -4.2656049728393555
    4. '               ' → logprob: -4.7656049728393555
    5. ' next' → logprob: -5.3906049728393555
    6. '           ' → logprob: -5.6406049728393555
    7. ' in' → logprob: -6.5156049728393555
    8. 'next' → logprob: -6.5156049728393555
    9. ')' → logprob: -6.8906049728393555
    10. ' of' → logprob: -7.0156049728393555

Token 484: ' this' (ID: 495)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7067236304283142
    2. 'body' → logprob: -0.8317236304283142
    3. 'the' → logprob: -3.081723690032959
    4. '(body' → logprob: -4.331723690032959
    5. ' body' → logprob: -5.456723690032959
    6. '(' → logprob: -5.456723690032959
    7. ' (' → logprob: -6.581723690032959
    8. 'tail' → logprob: -7.581723690032959
    9. 'here' → logprob: -7.956723690032959
    10. ' the' → logprob: -7.956723690032959

Token 485: ' cell' (ID: 4206)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.037352204322815
    2. ' position' → logprob: -1.162352204322815
    3. 'cell' → logprob: -1.787352204322815
    4. ' cell' → logprob: -2.2873520851135254
    5. ' spot' → logprob: -3.4123520851135254
    6. ' move' → logprob: -5.037352085113525
    7. 'move' → logprob: -5.287352085113525
    8. ' square' → logprob: -5.787352085113525
    9. 'square' → logprob: -5.787352085113525
    10. '#' → logprob: -5.912352085113525

Token 486: ' after' (ID: 1934)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08453991264104843
    2. '           ' → logprob: -3.0845398902893066
    3. ',' → logprob: -4.084539890289307
    4. '       ' → logprob: -4.834539890289307
    5. 'and' → logprob: -5.459539890289307
    6. ' if' → logprob: -6.209539890289307
    7. ' at' → logprob: -6.834539890289307
    8. ' ,' → logprob: -7.584539890289307
    9. '               ' → logprob: -8.334540367126465
    10. ' (' → logprob: -8.334540367126465

Token 487: ' movement' (ID: 12772)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movement' → logprob: -1.065443992614746
    2. 'moving' → logprob: -1.190443992614746
    3. 'this' → logprob: -1.315443992614746
    4. 'the' → logprob: -3.190443992614746
    5. 'move' → logprob: -3.940443992614746
    6. ' movement' → logprob: -4.440443992614746
    7. ' this' → logprob: -5.315443992614746
    8. ' moving' → logprob: -5.815443992614746
    9. 'head' → logprob: -6.940443992614746
    10. ' the' → logprob: -8.065443992614746

Token 488: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2236140966415405
    2. '           ' → logprob: -1.3486140966415405
    3. ',' → logprob: -1.4736140966415405
    4. '       ' → logprob: -1.5986140966415405
    5. 'and' → logprob: -6.47361421585083
    6. ' (' → logprob: -6.59861421585083
    7. '        
' → logprob: -6.59861421585083
    8. ' if' → logprob: -6.84861421585083
    9. '.' → logprob: -6.84861421585083
    10. ' ,' → logprob: -7.09861421585083

Token 489: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3122076690196991
    2. '           ' → logprob: -1.4372076988220215
    3. ',' → logprob: -4.0622076988220215
    4. ' and' → logprob: -5.5622076988220215
    5. ' continue' → logprob: -6.0622076988220215
    6. 'continue' → logprob: -6.0622076988220215
    7. ')' → logprob: -6.4372076988220215
    8. '               ' → logprob: -7.3122076988220215
    9. ' continues' → logprob: -7.4372076988220215
    10. ' if' → logprob: -8.312207221984863

Token 490: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7695930004119873
    2. '           ' → logprob: -1.7695930004119873
    3. 'continue' → logprob: -2.2695930004119873
    4. 'tail' → logprob: -2.6445930004119873
    5. 'if' → logprob: -2.7695930004119873
    6. ' if' → logprob: -2.7695930004119873
    7. ' continue' → logprob: -3.6445930004119873
    8. ' tail' → logprob: -3.8945930004119873
    9. '#' (adapté à ' #') → logprob: -5.394593238830566
    10. 'next' → logprob: -5.519593238830566

Token 491: ' Because' (ID: 13602)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.3182806670665741
    2. 'if' → logprob: -1.9432806968688965
    3. '           ' → logprob: -2.8182806968688965
    4. '#' → logprob: -3.8182806968688965
    5. ' tail' → logprob: -4.0682806968688965
    6. 'new' → logprob: -4.4432806968688965
    7. 'next' → logprob: -4.9432806968688965
    8. ' if' → logprob: -5.5682806968688965
    9. 'continue' → logprob: -6.1932806968688965
    10. '       ' → logprob: -6.9432806968688965

Token 492: ' worm' (ID: 40598)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7244733572006226
    2. 'body' → logprob: -1.4744733572006226
    3. '(body' → logprob: -2.974473476409912
    4. '(' → logprob: -3.099473476409912
    5. ' (' → logprob: -3.224473476409912
    6. '(len' → logprob: -3.474473476409912
    7. 'len' → logprob: -3.474473476409912
    8. ' body' → logprob: -3.974473476409912
    9. 'nh' → logprob: -4.099473476409912
    10. 'the' → logprob: -4.224473476409912

Token 493: ' moves' (ID: 19523)
  Prédit: '_body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.8600391149520874
    2. 'moves' → logprob: -1.1100391149520874
    3. '_tail' → logprob: -3.235039234161377
    4. 'body' → logprob: -3.235039234161377
    5. 'length' → logprob: -3.485039234161377
    6. 'tail' → logprob: -3.735039234161377
    7. ' moves' → logprob: -4.110039234161377
    8. 'can' → logprob: -4.360039234161377
    9. ' can' → logprob: -4.485039234161377
    10. ' body' → logprob: -4.735039234161377

Token 494: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.3102644085884094
    2. 'one' → logprob: -2.1852643489837646
    3. ' forward' → logprob: -2.4352643489837646
    4. 'head' → logprob: -3.4352643489837646
    5. 'tail' → logprob: -4.935264587402344
    6. 'by' → logprob: -5.310264587402344
    7. 'the' → logprob: -5.310264587402344
    8. ' one' → logprob: -5.560264587402344
    9. ',' → logprob: -6.185264587402344
    10. 'like' → logprob: -6.310264587402344

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16395407915115356
    2. ' and' → logprob: -2.413954019546509
    3. ' ,' → logprob: -3.913954019546509
    4. '       ' → logprob: -4.038954257965088
    5. '           ' → logprob: -4.913954257965088
    6. ' by' → logprob: -5.788954257965088
    7. 'and' → logprob: -5.913954257965088
    8. ' in' → logprob: -6.163954257965088
    9. ' with' → logprob: -6.913954257965088
    10. ' (' → logprob: -7.038954257965088

Token 496: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5122045874595642
    2. ' tail' → logprob: -2.137204647064209
    3. 'if' → logprob: -2.887204647064209
    4. '           ' → logprob: -3.262204647064209
    5. ' new' → logprob: -3.262204647064209
    6. '#' → logprob: -3.387204647064209
    7. 'new' → logprob: -3.387204647064209
    8. ' if' → logprob: -3.512204647064209
    9. 'the' → logprob: -4.262204647064209
    10. ' the' → logprob: -4.512204647064209

Token 497: ' leaves' (ID: 15657)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4620528817176819
    2. '=' → logprob: -1.962052822113037
    3. 'pos' → logprob: -2.462052822113037
    4. ' =' → logprob: -2.837052822113037
    5. 'moves' → logprob: -3.087052822113037
    6. '=head' → logprob: -5.087052822113037
    7. ' moves' → logprob: -5.212052822113037
    8. '_moves' → logprob: -5.712052822113037
    9. 'will' → logprob: -5.962052822113037
    10. '_positions' → logprob: -6.087052822113037

Token 498: ' its' (ID: 1617)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.26445379853248596
    2. 'the' → logprob: -2.514453887939453
    3. ' body' → logprob: -2.889453887939453
    4. '(body' → logprob: -3.014453887939453
    5. '           ' → logprob: -4.264453887939453
    6. ' the' → logprob: -4.639453887939453
    7. 'tail' → logprob: -5.139453887939453
    8. '       ' → logprob: -5.639453887939453
    9. '(' → logprob: -5.639453887939453
    10. '=' → logprob: -6.014453887939453

Token 499: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.17757143080234528
    2. 'position' → logprob: -1.927571415901184
    3. 'current' → logprob: -4.3025712966918945
    4. ' cell' → logprob: -6.0525712966918945
    5. 'body' → logprob: -7.6775712966918945
    6. ' position' → logprob: -8.052571296691895
    7. ' current' → logprob: -8.552571296691895
    8. 'last' → logprob: -8.802571296691895
    9. '0' → logprob: -9.802571296691895
    10. 'place' → logprob: -10.552571296691895

Token 500: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2976827919483185
    2. ',' → logprob: -1.922682762145996
    3. '           ' → logprob: -2.797682762145996
    4. ' and' → logprob: -4.547682762145996
    5. '        
' → logprob: -4.922682762145996
    6. ' if' → logprob: -5.047682762145996
    7. ' at' → logprob: -5.047682762145996
    8. 'and' → logprob: -5.422682762145996
    9. '.' → logprob: -5.672682762145996
    10. '<|end|>' → logprob: -6.797682762145996

Token 501: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.40961888432502747
    2. 'so' → logprob: -1.284618854522705
    3. 'and' → logprob: -3.784618854522705
    4. ' and' → logprob: -5.034618854522705
    5. '           ' → logprob: -5.284618854522705
    6. '       ' → logprob: -5.284618854522705
    7. 'if' → logprob: -5.534618854522705
    8. 'which' → logprob: -5.659618854522705
    9. 'allow' → logprob: -5.909618854522705
    10. 'tail' → logprob: -6.284618854522705

Token 502: ' moving' (ID: 10067)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23203113675117493
    2. '(n' → logprob: -2.1070311069488525
    3. 'we' → logprob: -3.9820311069488525
    4. ' if' → logprob: -4.107031345367432
    5. 'the' → logprob: -4.107031345367432
    6. 'moving' → logprob: -4.982031345367432
    7. 'tail' → logprob: -5.607031345367432
    8. 'new' → logprob: -5.732031345367432
    9. ' we' → logprob: -5.982031345367432
    10. ' (' → logprob: -5.982031345367432

Token 503: ' into' (ID: 1511)
  Prédit: 'onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onto' → logprob: -0.754278838634491
    2. 'into' → logprob: -1.0042788982391357
    3. 'to' → logprob: -2.2542788982391357
    4. 'head' → logprob: -3.5042788982391357
    5. 'forward' → logprob: -5.004278659820557
    6. 'here' → logprob: -5.254278659820557
    7. 'ahead' → logprob: -5.254278659820557
    8. ' into' → logprob: -6.129278659820557
    9. '(n' → logprob: -6.254278659820557
    10. ' onto' → logprob: -6.379278659820557

Token 504: ' tail' (ID: 12742)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.19228364527225494
    2. 'tail' → logprob: -2.0672836303710938
    3. '(n' → logprob: -3.9422836303710938
    4. 'nh' → logprob: -4.817283630371094
    5. ' body' → logprob: -4.942283630371094
    6. '(body' → logprob: -5.567283630371094
    7. ' tail' → logprob: -6.317283630371094
    8. '(' → logprob: -6.442283630371094
    9. 'the' → logprob: -6.567283630371094
    10. 'worm' → logprob: -6.817283630371094

Token 505: ''s' (ID: 885)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.5676965713500977
    2. 'position' → logprob: -1.1926965713500977
    3. '_pos' → logprob: -3.6926965713500977
    4. 'pos' → logprob: -3.8176965713500977
    5. ' cell' → logprob: -4.192696571350098
    6. '_cell' → logprob: -4.567696571350098
    7. '[' → logprob: -4.692696571350098
    8. ' position' → logprob: -5.067696571350098
    9. 'is' → logprob: -5.192696571350098
    10. '_position' → logprob: -5.317696571350098

Token 506: ' current' (ID: 2208)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.28950339555740356
    2. 'position' → logprob: -1.5395033359527588
    3. ' cell' → logprob: -3.914503335952759
    4. ' position' → logprob: -4.664503574371338
    5. 'current' → logprob: -5.164503574371338
    6. ' current' → logprob: -6.664503574371338
    7. 'pos' → logprob: -7.914503574371338
    8. 'location' → logprob: -9.28950309753418
    9. ' location' → logprob: -11.78950309753418
    10. ' spot' → logprob: -11.78950309753418

Token 507: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.13213476538658142
    2. 'position' → logprob: -2.7571346759796143
    3. ' cell' → logprob: -2.8821346759796143
    4. ' position' → logprob: -5.882134914398193
    5. '(cell' → logprob: -7.132134914398193
    6. 'space' → logprob: -7.757134914398193
    7. ' (' → logprob: -9.382134437561035
    8. '(' → logprob: -9.507134437561035
    9. 'location' → logprob: -10.382134437561035
    10. 'pos' → logprob: -10.632134437561035

Token 508: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.40608635544776917
    2. 'is' → logprob: -1.9060863256454468
    3. '           ' → logprob: -2.6560864448547363
    4. ' can' → logprob: -3.5310864448547363
    5. 'and' → logprob: -4.031086444854736
    6. ' only' → logprob: -4.281086444854736
    7. 'should' → logprob: -4.281086444854736
    8. ' and' → logprob: -4.531086444854736
    9. ' should' → logprob: -4.656086444854736
    10. 'only' → logprob: -5.531086444854736

Token 509: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.005057160276919603
    2. ' allowed' → logprob: -6.005057334899902
    3. 'valid' → logprob: -6.630057334899902
    4. 'True' → logprob: -7.880057334899902
    5. 'possible' → logprob: -8.005057334899902
    6. ' True' → logprob: -8.130057334899902
    7. 'acceptable' → logprob: -8.880057334899902
    8. 'allow' → logprob: -9.880057334899902
    9. ' valid' → logprob: -10.505057334899902
    10. 'only' → logprob: -11.880057334899902

Token 510: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10006268322467804
    2. '       ' → logprob: -2.475062608718872
    3. '        
' → logprob: -5.600062847137451
    4. ',' → logprob: -5.725062847137451
    5. ' if' → logprob: -6.225062847137451
    6. '            
' → logprob: -7.475062847137451
    7. '
' → logprob: -7.475062847137451
    8. 'continue' → logprob: -8.350062370300293
    9. '.' → logprob: -9.100062370300293
    10. ' continue' → logprob: -9.475062370300293

Token 511: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03287959471344948
    2. '           ' → logprob: -4.157879829406738
    3. '        
' → logprob: -4.407879829406738
    4. ' continue' → logprob: -5.907879829406738
    5. ' if' → logprob: -7.032879829406738
    6. 'continue' → logprob: -8.532879829406738
    7. '        ' → logprob: -8.782879829406738
    8. ',' → logprob: -9.157879829406738
    9. ' continues' → logprob: -9.657879829406738
    10. ' and' → logprob: -9.907879829406738

Token 512: ' tail' (ID: 12742)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2817957401275635
    2. ' continue' → logprob: -1.9067957401275635
    3. ' if' → logprob: -1.9067957401275635
    4. 'continue' → logprob: -1.9067957401275635
    5. '       ' → logprob: -2.0317957401275635
    6. '           ' → logprob: -2.1567957401275635
    7. 'tail' (adapté à ' tail') → logprob: -4.031795501708984
    8. ' tail' → logprob: -4.531795501708984
    9. '#' → logprob: -8.406795501708984
    10. 'next' → logprob: -8.781795501708984

Token 513: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034903085324913263
    2. ' =' → logprob: -6.253490447998047
    3. '=head' → logprob: -7.253490447998047
    4. '_pos' → logprob: -7.503490447998047
    5. '=(' → logprob: -8.628490447998047
    6. 'pos' → logprob: -9.628490447998047
    7. '_r' → logprob: -11.503490447998047
    8. '=row' → logprob: -11.628490447998047
    9. '_position' → logprob: -12.753490447998047
    10. '=_' → logprob: -12.753490447998047

Token 514: 'body' (ID: 4681)
  Prédit: 'body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.001942322589457035
    2. ' body' → logprob: -6.251942157745361
    3. '   ' → logprob: -12.12694263458252
    4. '(body' → logprob: -12.75194263458252
    5. '<body' → logprob: -13.25194263458252
    6. ' ' → logprob: -14.00194263458252
    7. '       ' → logprob: -14.00194263458252
    8. '	body' → logprob: -14.50194263458252
    9. '           ' → logprob: -14.87694263458252
    10. '
' → logprob: -15.25194263458252

Token 515: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00014036978245712817
    2. '[' → logprob: -8.875140190124512
    3. '
' → logprob: -16.125141143798828
    4. ' [-' → logprob: -16.500141143798828
    5. '   ' → logprob: -16.625141143798828
    6. '[len' → logprob: -16.750141143798828
    7. '0' → logprob: -17.000141143798828
    8. '[:-' → logprob: -17.250141143798828
    9. '-' → logprob: -17.375141143798828
    10. '[::-' → logprob: -17.750141143798828

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '0' → logprob: -18.375
    4. '2' → logprob: -18.875
    5. '
' → logprob: -18.9375
    6. '```' → logprob: -18.9375
    7. '   ' → logprob: -19.125
    8. '１' → logprob: -19.25
    9. '-' → logprob: -19.4375
    10. '(' → logprob: -19.5625

Token 517: ']' (ID: 60)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07278086245059967
    2. ']' → logprob: -3.3227808475494385
    3. ')
' → logprob: -3.4477808475494385
    4. ')' → logprob: -6.197781085968018
    5. '       ' → logprob: -8.94778060913086
    6. ']
' → logprob: -9.94778060913086
    7. ']

' → logprob: -10.82278060913086
    8. '           ' → logprob: -11.07278060913086
    9. ' ]
' → logprob: -11.07278060913086
    10. ')]
' → logprob: -11.57278060913086

Token 518: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8907331824302673
    2. '           ' → logprob: -1.515733242034912
    3. '
' → logprob: -1.890733242034912
    4. '<|end|>' → logprob: -2.015733242034912
    5. ' if' → logprob: -3.515733242034912
    6. ',' → logprob: -4.015733242034912
    7. '            
' → logprob: -4.515733242034912
    8. '        
' → logprob: -4.890733242034912
    9. '<|end|>' → logprob: -5.390733242034912
    10. ' and' → logprob: -6.015733242034912

Token 519: ' body' (ID: 3641)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25235339999198914
    2. 'body' → logprob: -1.5023534297943115
    3. '(len' → logprob: -8.50235366821289
    4. ' len' → logprob: -9.25235366821289
    5. ' body' → logprob: -10.37735366821289
    6. 'tail' → logprob: -10.62735366821289
    7. '   ' → logprob: -11.37735366821289
    8. '(body' → logprob: -11.50235366821289
    9. 'length' → logprob: -12.06485366821289
    10. '<body' → logprob: -12.18985366821289

Token 520: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4606899321079254
    2. ' else' → logprob: -1.085689902305603
    3. '!=' → logprob: -5.085690021514893
    4. 'not' → logprob: -5.335690021514893
    5. '<|end|>' → logprob: -5.585690021514893
    6. ' not' → logprob: -5.585690021514893
    7. '<|end|>' → logprob: -5.710690021514893
    8. ' is' → logprob: -6.210690021514893
    9. ')' → logprob: -6.960690021514893
    10. '[' → logprob: -7.085690021514893

Token 521: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07320008426904678
    2. 'head' → logprob: -2.948199987411499
    3. '(None' → logprob: -4.573200225830078
    4. 'body' → logprob: -5.698200225830078
    5. '()' → logprob: -6.323200225830078
    6. ' None' → logprob: -6.573200225830078
    7. '(-' → logprob: -7.198200225830078
    8. '(' → logprob: -7.948200225830078
    9. '(head' → logprob: -9.198200225830078
    10. '()
' → logprob: -10.948200225830078

Token 522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35341182351112366
    2. '           ' → logprob: -2.103411912918091
    3. '
' → logprob: -2.353411912918091
    4. '<|end|>' → logprob: -2.728411912918091
    5. '        
' → logprob: -5.228411674499512
    6. ' if' → logprob: -5.978411674499512
    7. '            
' → logprob: -6.353411674499512
    8. ',' → logprob: -6.478411674499512
    9. '<|end|>' → logprob: -6.478411674499512
    10. ' and' → logprob: -7.353411674499512

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010249509941786528
    2. '       ' → logprob: -7.2510247230529785
    3. ' and' → logprob: -9.376025199890137
    4. ' if' → logprob: -9.376025199890137
    5. '<|end|>' → logprob: -9.626025199890137
    6. ',' → logprob: -10.626025199890137
    7. 'if' → logprob: -11.251025199890137
    8. '            
' → logprob: -11.376025199890137
    9. '        
' → logprob: -11.751025199890137
    10. ')' → logprob: -12.001025199890137

Token 524: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4080444574356079
    2. ' if' → logprob: -1.408044457435608
    3. '           ' → logprob: -2.4080443382263184
    4. '       ' → logprob: -7.783044338226318
    5. '            
' → logprob: -11.158044815063477
    6. ' ' → logprob: -14.158044815063477
    7. '        
' → logprob: -14.283044815063477
    8. '
' → logprob: -14.408044815063477
    9. '	if' → logprob: -14.408044815063477
    10. ',' → logprob: -14.658044815063477

Token 525: ' tail' (ID: 12742)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08089017868041992
    2. '(t' → logprob: -2.95589017868042
    3. 'not' → logprob: -4.45589017868042
    4. '(not' → logprob: -4.95589017868042
    5. 'tail' → logprob: -5.58089017868042
    6. ' (' → logprob: -6.45589017868042
    7. 'nh' → logprob: -7.45589017868042
    8. ' not' → logprob: -8.580890655517578
    9. 'tn' → logprob: -8.580890655517578
    10. '((' → logprob: -8.830890655517578

Token 526: '!=(' (ID: 156580)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.46353721618652344
    2. '!=(' → logprob: -1.3385372161865234
    3. 'is' → logprob: -2.8385372161865234
    4. ' is' → logprob: -3.5885372161865234
    5. ' !=' → logprob: -3.9635372161865234
    6. '==' → logprob: -6.338537216186523
    7. 'and' → logprob: -6.838537216186523
    8. ' and' → logprob: -8.338537216186523
    9. '==(' → logprob: -8.588537216186523
    10. ' not' → logprob: -9.463537216186523

Token 527: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0013560713268816471
    2. '(n' → logprob: -6.62635612487793
    3. ' nh' → logprob: -10.62635612487793
    4. 'n' → logprob: -13.25135612487793
    5. 'None' → logprob: -13.50135612487793
    6. '

' → logprob: -14.75135612487793
    7. '
' → logprob: -14.87635612487793
    8. '(' → logprob: -14.87635612487793
    9. '   ' → logprob: -15.50135612487793
    10. ')' → logprob: -15.50135612487793

Token 528: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.00018732868193183094
    2. ',' → logprob: -8.750186920166016
    3. 'nc' → logprob: -10.625186920166016
    4. ' ,' → logprob: -12.750186920166016
    5. ',
' → logprob: -14.750186920166016
    6. '   ' → logprob: -14.750186920166016
    7. '.nc' → logprob: -15.250186920166016
    8. '_nc' → logprob: -15.875186920166016
    9. '
' → logprob: -16.125186920166016
    10. ',c' → logprob: -16.250186920166016

Token 529: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004207682330161333
    2. 'nc' → logprob: -5.504207611083984
    3. ',c' → logprob: -10.004207611083984
    4. ',' → logprob: -11.004207611083984
    5. ' nc' → logprob: -11.629207611083984
    6. ')' → logprob: -11.754207611083984
    7. ' ' → logprob: -11.879207611083984
    8. ',n' → logprob: -12.254207611083984
    9. '_nc' → logprob: -12.379207611083984
    10. '.nc' → logprob: -12.504207611083984

Token 530: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7911019921302795
    2. '):' → logprob: -1.0411019325256348
    3. ')' → logprob: -1.6661019325256348
    4. ' ):
' → logprob: -6.416101932525635
    5. ' ):' → logprob: -7.041101932525635
    6. ' and' → logprob: -7.041101932525635
    7. ' )' → logprob: -7.166101932525635
    8. '):
' → logprob: -8.791102409362793
    9. '):

' → logprob: -9.041102409362793
    10. ' or' → logprob: -9.166102409362793

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17180129885673523
    2. 'continue' → logprob: -2.5468013286590576
    3. ' continue' → logprob: -2.9218013286590576
    4. '           ' → logprob: -3.6718013286590576
    5. '	continue' → logprob: -8.921801567077637
    6. '   ' → logprob: -10.046801567077637
    7. '                   ' → logprob: -10.421801567077637
    8. '_continue' → logprob: -11.796801567077637
    9. ' ' → logprob: -12.046801567077637
    10. '			' → logprob: -12.171801567077637

Token 532: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0006215345347300172
    2. ' continue' → logprob: -8.000621795654297
    3. '               ' → logprob: -8.750621795654297
    4. '           ' → logprob: -9.000621795654297
    5. '                   ' → logprob: -12.500621795654297
    6. '   ' → logprob: -14.750621795654297
    7. '	continue' → logprob: -15.625621795654297
    8. ' ' → logprob: -17.000621795654297
    9. '       ' → logprob: -17.750621795654297
    10. '                       ' → logprob: -18.625621795654297

Token 533: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32831859588623047
    2. '        
' → logprob: -1.3283185958862305
    3. '           ' → logprob: -4.4533185958862305
    4. '            
' → logprob: -6.2033185958862305
    5. '<|end|>' → logprob: -7.7033185958862305
    6. '#' → logprob: -9.07831859588623
    7. '       
' → logprob: -9.20331859588623
    8. '                
' → logprob: -9.45331859588623
    9. '
' → logprob: -9.57831859588623
    10. ')' → logprob: -9.70331859588623

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023673884570598602
    2. '        
' → logprob: -3.7736737728118896
    3. '```' → logprob: -9.023674011230469
    4. '           ' → logprob: -9.398674011230469
    5. '            
' → logprob: -9.648674011230469
    6. '+' → logprob: -10.523674011230469
    7. '       
' → logprob: -11.023674011230469
    8. '  
' → logprob: -11.273674011230469
    9. '#' → logprob: -11.273674011230469
    10. '
' → logprob: -11.773674011230469

Token 535: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.985873281955719
    2. 'new' → logprob: -1.1108732223510742
    3. '#' (adapté à ' #') → logprob: -1.2358732223510742
    4. 'if' → logprob: -5.735873222351074
    5. 'next' → logprob: -6.235873222351074
    6. '        
' → logprob: -6.860873222351074
    7. 'n' → logprob: -7.610873222351074
    8. ' new' → logprob: -9.610873222351074
    9. '+' → logprob: -9.735873222351074
    10. '   ' → logprob: -9.985873222351074

Token 536: ' New' (ID: 2036)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7308502197265625
    2. 'new' → logprob: -0.7308502197265625
    3. '       ' → logprob: -3.7308502197265625
    4. 'if' → logprob: -5.1058502197265625
    5. 'next' → logprob: -5.6058502197265625
    6. 'n' → logprob: -6.4808502197265625
    7. '        
' → logprob: -7.6058502197265625
    8. ' new' → logprob: -8.855850219726562
    9. 'nd' → logprob: -9.230850219726562
    10. 'If' → logprob: -9.230850219726562

Token 537: ' body' (ID: 3641)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.10170517861843109
    2. 'body' → logprob: -2.6017050743103027
    3. '_head' → logprob: -4.476705074310303
    4. '#' → logprob: -4.726705074310303
    5. '_body' → logprob: -7.101705074310303
    6. 'new' → logprob: -7.226705074310303
    7. '       ' → logprob: -8.351705551147461
    8. ' head' → logprob: -8.601705551147461
    9. 'tail' → logprob: -9.351705551147461
    10. '   ' → logprob: -9.726705551147461

Token 538: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.6686934232711792
    2. '=' → logprob: -1.2936934232711792
    3. '=(' → logprob: -2.9186935424804688
    4. ' =' → logprob: -2.9186935424804688
    5. 'positions' → logprob: -3.5436935424804688
    6. '=[' → logprob: -3.6686935424804688
    7. '=list' → logprob: -4.168693542480469
    8. '_pos' → logprob: -4.918693542480469
    9. 'new' → logprob: -5.168693542480469
    10. '=[]
' → logprob: -5.543693542480469

Token 539: ' after' (ID: 1934)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04554976522922516
    2. '       ' → logprob: -3.4205498695373535
    3. ' new' → logprob: -5.6705498695373535
    4. '        
' → logprob: -6.0455498695373535
    5. 'if' → logprob: -6.2955498695373535
    6. ',new' → logprob: -6.2955498695373535
    7. ',' → logprob: -7.4205498695373535
    8. '_new' → logprob: -8.670549392700195
    9. 'next' → logprob: -8.670549392700195
    10. '[new' → logprob: -8.795549392700195

Token 540: ' movement' (ID: 12772)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.7311282753944397
    2. 'move' → logprob: -1.481128215789795
    3. '(' → logprob: -2.731128215789795
    4. 'moving' → logprob: -2.856128215789795
    5. '(n' → logprob: -2.981128215789795
    6. '   ' → logprob: -3.106128215789795
    7. '#' → logprob: -4.231128215789795
    8. ' movement' → logprob: -4.231128215789795
    9. '       ' → logprob: -4.356128215789795
    10. 'head' → logprob: -4.856128215789795

Token 541: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.060136906802654266
    2. ' new' → logprob: -3.8101367950439453
    3. '       ' → logprob: -4.185136795043945
    4. '(new' → logprob: -5.435136795043945
    5. ',new' → logprob: -5.810136795043945
    6. ',' → logprob: -6.185136795043945
    7. '=' → logprob: -6.310136795043945
    8. '        
' → logprob: -6.810136795043945
    9. ')new' → logprob: -6.810136795043945
    10. ' =' → logprob: -6.935136795043945

Token 542: '       ' (ID: 309)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07168472558259964
    2. '       ' → logprob: -2.9466848373413086
    3. 'if' → logprob: -4.571684837341309
    4. ' new' → logprob: -5.196684837341309
    5. ' if' → logprob: -7.946684837341309
    6. 'next' → logprob: -9.321684837341309
    7. '        
' → logprob: -9.446684837341309
    8. ',new' → logprob: -9.571684837341309
    9. 'prev' → logprob: -10.321684837341309
    10. '```' → logprob: -10.321684837341309

Token 543: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00580602465197444
    2. 'if' → logprob: -5.380805969238281
    3. ' new' → logprob: -7.005805969238281
    4. '       ' → logprob: -8.755805969238281
    5. 'nb' → logprob: -9.630805969238281
    6. ' if' → logprob: -11.005805969238281
    7. '   ' → logprob: -11.880805969238281
    8. 'n' → logprob: -12.005805969238281
    9. '        
' → logprob: -12.005805969238281
    10. '(new' → logprob: -12.255805969238281

Token 544: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.19287234544754028
    2. 'body' → logprob: -1.8178722858428955
    3. '_head' → logprob: -4.567872524261475
    4. 'head' → logprob: -5.942872524261475
    5. '```' → logprob: -12.067872047424316
    6. 'pos' → logprob: -12.317872047424316
    7. 'from' → logprob: -12.692872047424316
    8. '(' → logprob: -12.817872047424316
    9. '=' → logprob: -12.817872047424316
    10. 'Body' → logprob: -13.067872047424316

Token 545: '=[' (ID: 13370)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.05414954572916031
    2. '=[' → logprob: -3.054149627685547
    3. '=' → logprob: -5.429149627685547
    4. '=((' → logprob: -7.304149627685547
    5. ' =' → logprob: -7.679149627685547
    6. ' =(' → logprob: -11.679149627685547
    7. '   ' → logprob: -12.679149627685547
    8. '=('' → logprob: -12.804149627685547
    9. '=head' → logprob: -12.804149627685547
    10. '=list' → logprob: -13.429149627685547

Token 546: 'head' (ID: 3636)
  Prédit: 'head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -6.034592388459714e-06
    2. '(head' → logprob: -12.750005722045898
    3. 'nh' → logprob: -13.000005722045898
    4. ' head' → logprob: -14.500005722045898
    5. '(' → logprob: -16.1250057220459
    6. '	head' → logprob: -17.2500057220459
    7. '=head' → logprob: -17.5000057220459
    8. '[' → logprob: -17.5000057220459
    9. '.head' → logprob: -17.7500057220459
    10. 'hn' → logprob: -17.8750057220459

Token 547: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008825987577438354
    2. ']+' → logprob: -4.883825778961182
    3. ']
' → logprob: -7.758825778961182
    4. '(n' → logprob: -8.13382625579834
    5. ',' → logprob: -8.63382625579834
    6. ',n' → logprob: -8.88382625579834
    7. ' ]' → logprob: -9.88382625579834
    8. '   ' → logprob: -11.00882625579834
    9. '[n' → logprob: -11.13382625579834
    10. 'new' → logprob: -11.50882625579834

Token 548: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00032604875741526484
    2. '[list' → logprob: -8.375326156616211
    3. 'body' → logprob: -9.625326156616211
    4. ' list' → logprob: -10.500326156616211
    5. '[' → logprob: -14.000326156616211
    6. '(list' → logprob: -14.875326156616211
    7. '   ' → logprob: -15.250326156616211
    8. '=list' → logprob: -15.375326156616211
    9. '[:-' → logprob: -16.50032615661621
    10. '
' → logprob: -16.50032615661621

Token 549: '(body' (ID: 29826)
  Prédit: '(body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(body' → logprob: -0.0004309076175559312
    2. 'body' → logprob: -7.750431060791016
    3. '<body' → logprob: -15.625431060791016
    4. '(' → logprob: -17.125431060791016
    5. ' body' → logprob: -17.875431060791016
    6. 'Body' → logprob: -19.125431060791016
    7. '(b' → logprob: -19.250431060791016
    8. '	body' → logprob: -19.375431060791016
    9. '_body' → logprob: -19.500431060791016
    10. '```' → logprob: -19.750431060791016

Token 550: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0033778147771954536
    2. ')' → logprob: -5.878377914428711
    3. ')
' → logprob: -7.503377914428711
    4. '[:' → logprob: -11.003377914428711
    5. '[' → logprob: -12.503377914428711
    6. '   ' → logprob: -14.628377914428711
    7. '
' → logprob: -15.253377914428711
    8. ')

' → logprob: -15.878377914428711
    9. '```' → logprob: -16.12837791442871
    10. '    
' → logprob: -16.50337791442871

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.375000953674316
    3. ' -' → logprob: -19.125
    4. ')' → logprob: -19.375
    5. ' ' → logprob: -19.5
    6. '```' → logprob: -20.125
    7. ']' → logprob: -20.25
    8. '(' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '0' → logprob: -20.25

Token 552: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25305262207984924
    2. ')' → logprob: -1.7530525922775269
    3. '])' → logprob: -3.0030527114868164
    4. ')])' → logprob: -7.878052711486816
    5. ']' → logprob: -8.753052711486816
    6. '])]' → logprob: -9.253052711486816
    7. ' )' → logprob: -10.878052711486816
    8. '))' → logprob: -11.378052711486816
    9. ')]
' → logprob: -11.503052711486816
    10. '）' → logprob: -11.878052711486816

Token 553: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15859247744083405
    2. '        
' → logprob: -2.033592462539673
    3. ' if' → logprob: -5.158592700958252
    4. 'if' → logprob: -5.783592700958252
    5. '
' → logprob: -6.408592700958252
    6. '<|end|>' → logprob: -6.908592700958252
    7. '#' → logprob: -7.283592700958252
    8. ')' → logprob: -7.533592700958252
    9. ',' → logprob: -7.533592700958252
    10. '        ' → logprob: -7.783592700958252

Token 554: ' body' (ID: 3641)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.36126628518104553
    2. '(n' → logprob: -1.8612662553787231
    3. '(fi' → logprob: -2.1112663745880127
    4. '(not' → logprob: -4.736266136169434
    5. '(' → logprob: -5.486266136169434
    6. 'not' → logprob: -5.611266136169434
    7. '(f' → logprob: -6.236266136169434
    8. '(new' → logprob: -6.361266136169434
    9. 'nh' → logprob: -6.986266136169434
    10. '((' → logprob: -6.986266136169434

Token 555: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.28119760751724243
    2. ' else' → logprob: -1.4061975479125977
    3. '[]' → logprob: -11.281197547912598
    4. '<|end|>' → logprob: -11.906197547912598
    5. ')' → logprob: -12.531197547912598
    6. '!=' → logprob: -12.656197547912598
    7. '	else' → logprob: -12.781197547912598
    8. '        ' → logprob: -12.781197547912598
    9. 'and' → logprob: -12.781197547912598
    10. '[' → logprob: -13.406197547912598

Token 556: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.08944896562025e-05
    2. '[]' → logprob: -10.000081062316895
    3. ' [' → logprob: -10.625081062316895
    4. '[new' → logprob: -12.625081062316895
    5. '   ' → logprob: -12.750081062316895
    6. '[h' → logprob: -14.000081062316895
    7. ' ' → logprob: -14.625081062316895
    8. '[(' → logprob: -14.750081062316895
    9. '[]
' → logprob: -15.000081062316895
    10. '  ' → logprob: -15.250081062316895

Token 557: 'head' (ID: 3636)
  Prédit: 'head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -3.7697225252486533e-06
    2. '(head' → logprob: -12.625003814697266
    3. ' head' → logprob: -14.875003814697266
    4. '[' → logprob: -17.375003814697266
    5. '(' → logprob: -17.750003814697266
    6. '
' → logprob: -18.000003814697266
    7. '=head' → logprob: -18.500003814697266
    8. '	head' → logprob: -18.500003814697266
    9. 'heads' → logprob: -19.125003814697266
    10. '.head' → logprob: -19.375003814697266

Token 558: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013010689290240407
    2. ']+' → logprob: -7.501301288604736
    3. ' ]' → logprob: -8.501300811767578
    4. '       ' → logprob: -8.876300811767578
    5. '<|end|>' → logprob: -9.001300811767578
    6. ']
' → logprob: -9.376300811767578
    7. '[' → logprob: -9.626300811767578
    8. '+' → logprob: -9.876300811767578
    9. '+]' → logprob: -11.751300811767578
    10. ',' → logprob: -11.876300811767578

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036756373941898346
    2. '        
' → logprob: -4.03675651550293
    3. '<|end|>' → logprob: -4.28675651550293
    4. '
' → logprob: -5.78675651550293
    5. ' if' → logprob: -7.53675651550293
    6. '#' → logprob: -8.28675651550293
    7. 'if' → logprob: -8.53675651550293
    8. 'next' → logprob: -8.66175651550293
    9. 'new' → logprob: -9.53675651550293
    10. '<|end|>' → logprob: -9.78675651550293

Token 560: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31223464012145996
    2. '       ' → logprob: -1.43723464012146
    3. ' if' → logprob: -4.437234878540039
    4. 'new' (adapté à ' new') → logprob: -4.562234878540039
    5. '#' → logprob: -5.562234878540039
    6. 'next' → logprob: -5.937234878540039
    7. '        
' → logprob: -7.062234878540039
    8. 'head' → logprob: -7.562234878540039
    9. '+' → logprob: -8.937234878540039
    10. ')' → logprob: -9.312234878540039

Token 561: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.003858031937852502
    2. '_head' → logprob: -6.0038580894470215
    3. '_pos' → logprob: -6.7538580894470215
    4. 'body' → logprob: -9.128857612609863
    5. '_position' → logprob: -10.128857612609863
    6. 'pos' → logprob: -10.253857612609863
    7. '_positions' → logprob: -11.753857612609863
    8. '_tail' → logprob: -12.253857612609863
    9. '_' → logprob: -12.753857612609863
    10. '```' → logprob: -13.003857612609863

Token 562: '=' (ID: 28)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.015710078179836273
    2. '.insert' → logprob: -4.26570987701416
    3. '=' → logprob: -7.01570987701416
    4. '.pop' → logprob: -8.01570987701416
    5. '.' → logprob: -8.64070987701416
    6. 'append' → logprob: -9.39070987701416
    7. '[' → logprob: -10.76570987701416
    8. '=[' → logprob: -11.39070987701416
    9. '_append' → logprob: -12.76570987701416
    10. 'insert' → logprob: -12.89070987701416

Token 563: 'tuple' (ID: 52834)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.005692469421774149
    2. '[' → logprob: -5.380692481994629
    3. '[n' → logprob: -7.505692481994629
    4. ' [(' → logprob: -7.755692481994629
    5. '(n' → logprob: -9.880692481994629
    6. '[new' → logprob: -11.005692481994629
    7. ' [' → logprob: -11.505692481994629
    8. '(' → logprob: -12.255692481994629
    9. 'new' → logprob: -12.505692481994629
    10. 'tuple' → logprob: -12.880692481994629

Token 564: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0019385118503123522
    2. 'new' → logprob: -6.251938343048096
    3. '((' → logprob: -11.876938819885254
    4. '[new' → logprob: -13.751938819885254
    5. '(' → logprob: -14.501938819885254
    6. '([(' → logprob: -14.501938819885254
    7. '([' → logprob: -14.626938819885254
    8. '(sorted' → logprob: -16.251937866210938
    9. ' new' → logprob: -16.376937866210938
    10. '(list' → logprob: -16.751937866210938

Token 565: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.008645887486636639
    2. 'body' → logprob: -4.758646011352539
    3. 'bod' → logprob: -11.383646011352539
    4. '(body' → logprob: -11.508646011352539
    5. '<body' → logprob: -12.383646011352539
    6. 'b' → logprob: -13.258646011352539
    7. ' body' → logprob: -14.258646011352539
    8. 'Body' → logprob: -14.508646011352539
    9. 'new' → logprob: -14.758646011352539
    10. '_BODY' → logprob: -14.883646011352539

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004846538067795336
    2. ')
' → logprob: -7.750484466552734
    3. '       ' → logprob: -10.000484466552734
    4. ' )' → logprob: -12.500484466552734
    5. '<|end|>' → logprob: -13.625484466552734
    6. ',' → logprob: -14.125484466552734
    7. '),' → logprob: -14.625484466552734
    8. '))' → logprob: -14.625484466552734
    9. ')

' → logprob: -15.000484466552734
    10. '[' → logprob: -15.375484466552734

Token 567: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9285135865211487
    2. 'if' → logprob: -1.053513526916504
    3. 'new' → logprob: -2.303513526916504
    4. 'next' → logprob: -2.803513526916504
    5. 'food' → logprob: -2.928513526916504
    6. '#' → logprob: -3.178513526916504
    7. 'current' → logprob: -9.303513526916504
    8. 'target' → logprob: -9.303513526916504
    9. '```' → logprob: -9.678513526916504
    10. '        
' → logprob: -9.803513526916504

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5118793845176697
    2. '#' → logprob: -1.7618794441223145
    3. 'if' → logprob: -1.7618794441223145
    4. 'new' → logprob: -3.1368794441223145
    5. 'next' → logprob: -4.5118794441223145
    6. 'food' → logprob: -6.1368794441223145
    7. 'is' → logprob: -8.261878967285156
    8. 'state' → logprob: -8.761878967285156
    9. 'eat' → logprob: -10.011878967285156
    10. 'n' → logprob: -10.511878967285156

Token 569: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5079226493835449
    2. 'new' → logprob: -1.632922649383545
    3. '#' (adapté à ' #') → logprob: -1.882922649383545
    4. 'food' → logprob: -3.007922649383545
    5. 'next' → logprob: -7.382922649383545
    6. 'nf' → logprob: -8.507923126220703
    7. '   ' → logprob: -9.132923126220703
    8. '       ' → logprob: -9.132923126220703
    9. 'eat' → logprob: -9.757923126220703
    10. 'is' → logprob: -10.257923126220703

Token 570: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10920900106430054
    2. '#' → logprob: -2.6092090606689453
    3. 'new' → logprob: -3.6092090606689453
    4. 'food' → logprob: -6.734209060668945
    5. 'eat' → logprob: -7.484209060668945
    6. 'next' → logprob: -7.734209060668945
    7. 'is' → logprob: -8.359209060668945
    8. 'e' → logprob: -9.359209060668945
    9. '       ' → logprob: -9.484209060668945
    10. '   ' → logprob: -10.234209060668945

Token 571: ' collision' (ID: 34967)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018937598913908005
    2. ' if' → logprob: -4.643937587738037
    3. '#' → logprob: -5.018937587738037
    4. 'food' → logprob: -7.268937587738037
    5. '       ' → logprob: -7.393937587738037
    6. 'grid' → logprob: -7.518937587738037
    7. 'new' → logprob: -8.518938064575195
    8. 'for' → logprob: -8.643938064575195
    9. '   ' → logprob: -9.393938064575195
    10. '(grid' → logprob: -9.393938064575195

Token 572: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2375616878271103
    2. 'if' → logprob: -1.7375617027282715
    3. ' if' → logprob: -3.3625617027282715
    4. 'with' → logprob: -7.2375617027282715
    5. ' with' → logprob: -9.737561225891113
    6. '        
' → logprob: -10.237561225891113
    7. 'and' → logprob: -11.487561225891113
    8. ',' → logprob: -12.362561225891113
    9. '=' → logprob: -12.487561225891113
    10. 'for' → logprob: -12.612561225891113

Token 573: ' head' (ID: 3189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018766338005661964
    2. '       ' → logprob: -4.018766403198242
    3. ' if' → logprob: -7.393766403198242
    4. '```' → logprob: -14.143766403198242
    5. '#' → logprob: -15.643766403198242
    6. '        
' → logprob: -16.143766403198242
    7. '	if' → logprob: -16.393766403198242
    8. '           ' → logprob: -16.768766403198242
    9. 'next' → logprob: -17.643766403198242
    10. '   ' → logprob: -17.893766403198242

Token 574: ' not' (ID: 625)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2537541389465332
    2. ' in' → logprob: -1.8787541389465332
    3. '==' → logprob: -3.878754138946533
    4. ' not' → logprob: -4.378754138946533
    5. '=' → logprob: -4.503754138946533
    6. 'if' → logprob: -4.628754138946533
    7. ',' → logprob: -5.253754138946533
    8. 'not' → logprob: -5.253754138946533
    9. '       ' → logprob: -6.503754138946533
    10. ' ==' → logprob: -6.878754138946533

Token 575: ' on' (ID: 402)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01615835912525654
    2. ' in' → logprob: -4.141158580780029
    3. '==' → logprob: -9.766158103942871
    4. ')' → logprob: -10.141158103942871
    5. '
' → logprob: -11.391158103942871
    6. 'new' → logprob: -12.141158103942871
    7. '```' → logprob: -13.266158103942871
    8. ',' → logprob: -13.891158103942871
    9. '(n' → logprob: -14.016158103942871
    10. ' ==' → logprob: -14.016158103942871

Token 576: ' body' (ID: 3641)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.050287216901779175
    2. 'tail' → logprob: -3.5502872467041016
    3. 'grid' → logprob: -4.925287246704102
    4. 'ob' → logprob: -5.175287246704102
    5. '#' → logprob: -6.300287246704102
    6. 'wall' → logprob: -6.425287246704102
    7. '(new' → logprob: -6.550287246704102
    8. ' new' → logprob: -7.925287246704102
    9. ''#' → logprob: -7.925287246704102
    10. '('#' → logprob: -8.050287246704102

Token 577: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07803211361169815
    2. ' and' → logprob: -3.5780320167541504
    3. 'and' → logprob: -3.8280320167541504
    4. 'if' → logprob: -4.45303201675415
    5. ' if' → logprob: -4.95303201675415
    6. ' or' → logprob: -5.32803201675415
    7. ',' → logprob: -6.82803201675415
    8. 'or' → logprob: -7.70303201675415
    9. '=' → logprob: -9.328032493591309
    10. ' =' → logprob: -9.828032493591309

Token 578: ' move' (ID: 5275)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.6029214859008789
    2. 'new' → logprob: -1.602921485900879
    3. 'moving' → logprob: -1.852921485900879
    4. 'move' → logprob: -2.602921485900879
    5. ' movement' → logprob: -4.352921485900879
    6. '#' → logprob: -6.477921485900879
    7. ' new' → logprob: -6.727921485900879
    8. ' moving' → logprob: -6.852921485900879
    9. '   ' → logprob: -7.227921485900879
    10. ' move' → logprob: -7.602921485900879

Token 579: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007894979789853096
    2. 'if' → logprob: -7.500789642333984
    3. ' if' → logprob: -8.375789642333984
    4. ',' → logprob: -12.500789642333984
    5. 'and' → logprob: -14.250789642333984
    6. ' and' → logprob: -14.500789642333984
    7. '<|end|>' → logprob: -15.125789642333984
    8. '      ' → logprob: -15.375789642333984
    9. '        
' → logprob: -15.375789642333984
    10. '	' → logprob: -16.250789642333984

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011302133789286017
    2. 'if' → logprob: -6.876130104064941
    3. ' if' → logprob: -9.251130104064941
    4. ',' → logprob: -14.501130104064941
    5. '<|end|>' → logprob: -15.876130104064941
    6. '        
' → logprob: -16.126131057739258
    7. '+' → logprob: -16.251131057739258
    8. '           ' → logprob: -16.251131057739258
    9. 'and' → logprob: -16.376131057739258
    10. ' and' → logprob: -16.501131057739258

Token 581: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009184855734929442
    2. '       ' → logprob: -7.000918388366699
    3. ' if' → logprob: -11.8759183883667
    4. '   ' → logprob: -17.500919342041016
    5. '           ' → logprob: -17.625919342041016
    6. '```' → logprob: -18.250919342041016
    7. 'continue' → logprob: -18.625919342041016
    8. '        
' → logprob: -18.750919342041016
    9. 'If' → logprob: -19.500919342041016
    10. '        ' → logprob: -19.750919342041016

Token 582: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05865246057510376
    2. 'new' → logprob: -3.433652400970459
    3. '(new' → logprob: -4.433652400970459
    4. 'nh' → logprob: -4.933652400970459
    5. ' (' → logprob: -5.558652400970459
    6. '(head' → logprob: -7.058652400970459
    7. ' new' → logprob: -8.308652877807617
    8. ' nh' → logprob: -8.433652877807617
    9. 'head' → logprob: -8.433652877807617
    10. '(N' → logprob: -10.058652877807617

Token 583: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.12002498656511307
    2. '(n' → logprob: -2.3700249195098877
    3. 'new' → logprob: -3.9950249195098877
    4. '(new' → logprob: -7.245025157928467
    5. 'head' → logprob: -8.370024681091309
    6. ' nh' → logprob: -8.995024681091309
    7. '(head' → logprob: -9.620024681091309
    8. '(h' → logprob: -10.620024681091309
    9. ' (' → logprob: -11.120024681091309
    10. '(' → logprob: -11.495024681091309

Token 584: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0410517081618309
    2. ',' → logprob: -3.7910516262054443
    3. ',new' → logprob: -4.041051864624023
    4. ',(' → logprob: -10.416051864624023
    5. ',in' → logprob: -10.791051864624023
    6. ' ,' → logprob: -11.666051864624023
    7. 'new' → logprob: -12.166051864624023
    8. ',
' → logprob: -13.791051864624023
    9. 'in' → logprob: -14.041051864624023
    10. ',c' → logprob: -14.416051864624023

Token 585: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01795840449631214
    2. 'nc' → logprob: -4.392958641052246
    3. ',c' → logprob: -5.517958641052246
    4. ',n' → logprob: -7.017958641052246
    5. ',' → logprob: -8.142958641052246
    6. 'new' → logprob: -9.892958641052246
    7. '_nc' → logprob: -9.892958641052246
    8. ',new' → logprob: -10.142958641052246
    9. '
' → logprob: -11.267958641052246
    10. '(n' → logprob: -11.392958641052246

Token 586: ')' (ID: 8)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4340767562389374
    2. ' in' → logprob: -1.4340767860412598
    3. ')' → logprob: -2.1840767860412598
    4. ',' → logprob: -7.05907678604126
    5. ',)' → logprob: -8.934076309204102
    6. ' )' → logprob: -9.434076309204102
    7. ')==' → logprob: -9.684076309204102
    8. '==' → logprob: -10.559076309204102
    9. ',in' → logprob: -11.184076309204102
    10. 'not' → logprob: -11.684076309204102

Token 587: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16026891767978668
    2. ' in' → logprob: -1.9102689027786255
    3. 'not' → logprob: -10.535268783569336
    4. ' not' → logprob: -11.410268783569336
    5. '==' → logprob: -12.035268783569336
    6. ')' → logprob: -14.285268783569336
    7. ' ==' → logprob: -16.035268783569336
    8. '   ' → logprob: -16.285268783569336
    9. '
' → logprob: -16.660268783569336
    10. ' ' → logprob: -16.660268783569336

Token 588: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0017205192707479
    2. ' new' → logprob: -6.376720428466797
    3. '   ' → logprob: -11.126720428466797
    4. 'set' → logprob: -14.251720428466797
    5. ' ' → logprob: -14.376720428466797
    6. '	new' → logprob: -14.501720428466797
    7. '[new' → logprob: -14.626720428466797
    8. '       ' → logprob: -14.876720428466797
    9. '  ' → logprob: -15.376720428466797
    10. '```' → logprob: -15.626720428466797

Token 589: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -2.7968066206085496e-05
    2. 'body' → logprob: -10.500027656555176
    3. '_BODY' → logprob: -16.000028610229492
    4. 'new' → logprob: -16.500028610229492
    5. ' body' → logprob: -16.625028610229492
    6. 'Body' → logprob: -17.250028610229492
    7. '<body' → logprob: -17.625028610229492
    8. '_new' → logprob: -18.500028610229492
    9. '```' → logprob: -19.250028610229492
    10. '	body' → logprob: -19.625028610229492

Token 590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050977252423763275
    2. ':
' → logprob: -3.1759772300720215
    3. '           ' → logprob: -5.3009772300720215
    4. '       ' → logprob: -7.0509772300720215
    5. ' continue' → logprob: -7.3009772300720215
    6. '   ' → logprob: -7.5509772300720215
    7. 'continue' → logprob: -7.5509772300720215
    8. ' and' → logprob: -8.92597770690918
    9. ' or' → logprob: -9.92597770690918
    10. ')' → logprob: -10.17597770690918

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019054098054766655
    2. 'continue' → logprob: -4.019053936004639
    3. ' continue' → logprob: -7.019053936004639
    4. '               ' → logprob: -12.519054412841797
    5. '   ' → logprob: -13.019054412841797
    6. '	continue' → logprob: -13.644054412841797
    7. '		' → logprob: -14.144054412841797
    8. '       ' → logprob: -14.519054412841797
    9. '_continue' → logprob: -14.894054412841797
    10. '```' → logprob: -15.144054412841797

Token 592: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10105597972869873
    2. '           ' → logprob: -2.3510560989379883
    3. ' continue' → logprob: -7.101056098937988
    4. '               ' → logprob: -10.726056098937988
    5. '	continue' → logprob: -13.726056098937988
    6. '   ' → logprob: -13.851056098937988
    7. '       ' → logprob: -14.476056098937988
    8. '_continue' → logprob: -16.726055145263672
    9. '```' → logprob: -16.976055145263672
    10. '		' → logprob: -17.351055145263672

Token 593: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03368339315056801
    2. 'if' → logprob: -3.9086833000183105
    3. '        
' → logprob: -4.4086833000183105
    4. ' if' → logprob: -8.283683776855469
    5. 'next' → logprob: -8.658683776855469
    6. 'new' → logprob: -9.158683776855469
    7. '+' → logprob: -9.408683776855469
    8. '#' → logprob: -9.658683776855469
    9. 'food' → logprob: -9.783683776855469
    10. 'state' → logprob: -9.783683776855469

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03445499762892723
    2. 'if' → logprob: -4.034454822540283
    3. 'next' → logprob: -4.909454822540283
    4. 'new' → logprob: -5.159454822540283
    5. 'food' → logprob: -6.909454822540283
    6. 'eat' → logprob: -7.159454822540283
    7. '#' → logprob: -7.534454822540283
    8. 'e' → logprob: -8.284455299377441
    9. 'is' → logprob: -8.534455299377441
    10. '        
' → logprob: -8.784455299377441

Token 595: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04385981336236
    2. 'if' → logprob: -4.043859958648682
    3. 'next' → logprob: -4.668859958648682
    4. '#' (adapté à ' #') → logprob: -4.668859958648682
    5. 'food' → logprob: -5.668859958648682
    6. 'nf' → logprob: -6.543859958648682
    7. 'n' → logprob: -6.918859958648682
    8. '       ' → logprob: -7.543859958648682
    9. 'fi' → logprob: -9.418859481811523
    10. 'ni' → logprob: -9.793859481811523

Token 596: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1792079508304596
    2. '#' → logprob: -1.9292079210281372
    3. 'new' → logprob: -4.179207801818848
    4. '       ' → logprob: -6.804207801818848
    5. 'eat' → logprob: -6.929207801818848
    6. 'next' → logprob: -7.429207801818848
    7. 'food' → logprob: -7.929207801818848
    8. 'is' → logprob: -8.304207801818848
    9. 'e' → logprob: -9.304207801818848
    10. '   ' → logprob: -9.929207801818848

Token 597: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011705600656569004
    2. ' if' → logprob: -5.76170539855957
    3. 'food' → logprob: -5.76170539855957
    4. '       ' → logprob: -6.26170539855957
    5. '#' → logprob: -6.76170539855957
    6. 'grid' → logprob: -7.38670539855957
    7. 'foods' → logprob: -7.38670539855957
    8. '(food' → logprob: -8.13670539855957
    9. '   ' → logprob: -8.51170539855957
    10. '(grid' → logprob: -8.76170539855957

Token 598: ' on' (ID: 402)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20303234457969666
    2. 'fi' → logprob: -2.0780322551727295
    3. '(fi' → logprob: -3.4530322551727295
    4. '(' → logprob: -3.8280322551727295
    5. 'foods' → logprob: -6.828032493591309
    6. 'grid' → logprob: -6.953032493591309
    7. '(food' → logprob: -7.203032493591309
    8. 'nh' → logprob: -7.328032493591309
    9. ' (' → logprob: -7.328032493591309
    10. 'food' → logprob: -7.953032493591309

Token 599: ' current' (ID: 2208)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1748652458190918
    2. ' (' → logprob: -1.4248652458190918
    3. 'foods' → logprob: -1.4248652458190918
    4. '(' → logprob: -2.174865245819092
    5. ' foods' → logprob: -2.924865245819092
    6. '(food' → logprob: -3.799865245819092
    7. 'food' → logprob: -4.549865245819092
    8. ' food' → logprob: -5.424865245819092
    9. '   ' → logprob: -6.799865245819092
    10. '(f' → logprob: -7.424865245819092

Token 600: ' food' (ID: 4232)
  Prédit: 'food'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'food' → logprob: -0.16180050373077393
    2. ' food' → logprob: -2.0368003845214844
    3. 'target' → logprob: -4.786800384521484
    4. '       ' → logprob: -5.536800384521484
    5. ' target' → logprob: -6.161800384521484
    6. '(food' → logprob: -6.536800384521484
    7. '_food' → logprob: -6.911800384521484
    8. 'if' → logprob: -7.536800384521484
    9. 'foods' → logprob: -7.536800384521484
    10. 'fi' → logprob: -7.661800384521484

Token 601: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001777757192030549
    2. 'if' → logprob: -6.876777648925781
    3. ' and' → logprob: -8.001777648925781
    4. ' if' → logprob: -8.376777648925781
    5. 'and' → logprob: -9.501777648925781
    6. '==' → logprob: -10.251777648925781
    7. '=' → logprob: -11.376777648925781
    8. ' =' → logprob: -11.376777648925781
    9. ',' → logprob: -11.501777648925781
    10. ' ==' → logprob: -12.001777648925781

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006924942601472139
    2. 'if' → logprob: -5.006925106048584
    3. ' if' → logprob: -8.506924629211426
    4. 'and' → logprob: -13.131924629211426
    5. ' and' → logprob: -13.381924629211426
    6. '        
' → logprob: -14.256924629211426
    7. '   ' → logprob: -14.256924629211426
    8. '           ' → logprob: -14.756924629211426
    9. 'food' → logprob: -14.881924629211426
    10. '      ' → logprob: -15.256924629211426

Token 603: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07935986667871475
    2. '       ' → logprob: -2.579359769821167
    3. ' if' → logprob: -7.704360008239746
    4. 'food' → logprob: -11.079360008239746
    5. 'current' → logprob: -13.829360008239746
    6. '	if' → logprob: -14.204360008239746
    7. 'next' → logprob: -14.704360008239746
    8. '```' → logprob: -15.079360008239746
    9. '        
' → logprob: -15.329360008239746
    10. 'If' → logprob: -15.329360008239746

Token 604: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.08047746121883392
    2. 'fi' → logprob: -2.580477476119995
    3. '_head' → logprob: -7.205477237701416
    4. '_body' → logprob: -7.705477237701416
    5. '_food' → logprob: -8.830477714538574
    6. '_pos' → logprob: -9.080477714538574
    7. 'if' → logprob: -9.830477714538574
    8. 'head' → logprob: -10.955477714538574
    9. 'Fi' → logprob: -10.955477714538574
    10. '_if' → logprob: -11.580477714538574

Token 605: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.491498531133402e-06
    2. 'ood' → logprob: -12.375009536743164
    3. 'I' → logprob: -12.625009536743164
    4. '_i' → logprob: -14.375009536743164
    5. '(i' → logprob: -14.875009536743164
    6. 'index' → logprob: -15.625009536743164
    7. 'o' → logprob: -15.750009536743164
    8. 'oods' → logprob: -15.750009536743164
    9. '_index' → logprob: -15.875009536743164
    10. 'fi' → logprob: -16.750009536743164

Token 606: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.660315895918757e-05
    2. ' =' → logprob: -9.500076293945312
    3. '=f' → logprob: -13.750076293945312
    4. '=
' → logprob: -14.750076293945312
    5. '=int' → logprob: -16.375076293945312
    6. '=i' → logprob: -17.375076293945312
    7. '＝' → logprob: -18.000076293945312
    8. '=None' → logprob: -18.375076293945312
    9. '=

' → logprob: -18.375076293945312
    10. '==' → logprob: -18.500076293945312

Token 607: 'fi' (ID: 9608)
  Prédit: 'fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -1.1472419600977446e-06
    2. ' fi' → logprob: -14.125000953674316
    3. '(fi' → logprob: -15.000000953674316
    4. '	fi' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '  ' → logprob: -21.250001907348633
    7. 'fo' → logprob: -21.875001907348633
    8. 'f' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '
' → logprob: -22.625001907348633

Token 608: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7355601191520691
    2. '+' → logprob: -1.1105601787567139
    3. '
' → logprob: -1.9855601787567139
    4. 'if' → logprob: -2.985560178756714
    5. ' if' → logprob: -6.235559940338135
    6. ' +' → logprob: -6.985559940338135
    7. '=' → logprob: -8.735560417175293
    8. '+
' → logprob: -8.860560417175293
    9. '        
' → logprob: -8.985560417175293
    10. '+(' → logprob: -9.485560417175293

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12742210924625397
    2. 'if' → logprob: -2.1274220943450928
    3. ' if' → logprob: -7.627422332763672
    4. '        
' → logprob: -13.127422332763672
    5. '```' → logprob: -13.252422332763672
    6. 'new' → logprob: -14.127422332763672
    7. 'next' → logprob: -14.377422332763672
    8. 'food' → logprob: -14.627422332763672
    9. '	if' → logprob: -15.252422332763672
    10. ',' → logprob: -15.502422332763672

Token 610: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001530812936834991
    2. '       ' → logprob: -6.501530647277832
    3. 'new' → logprob: -10.626530647277832
    4. ' if' → logprob: -13.376530647277832
    5. 'next' → logprob: -13.751530647277832
    6. 'food' → logprob: -14.001530647277832
    7. '        
' → logprob: -15.126530647277832
    8. '           ' → logprob: -15.876530647277832
    9. '```' → logprob: -16.12653160095215
    10. 'current' → logprob: -16.25153160095215

Token 611: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.3064700961112976
    2. '(fi' → logprob: -1.5564701557159424
    3. '(' → logprob: -4.056469917297363
    4. '(n' → logprob: -4.181469917297363
    5. 'new' → logprob: -4.806469917297363
    6. '(new' → logprob: -5.056469917297363
    7. '(food' → logprob: -6.556469917297363
    8. ' fi' → logprob: -6.806469917297363
    9. '(f' → logprob: -7.306469917297363
    10. 'foods' → logprob: -7.431469917297363

Token 612: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18891049921512604
    2. ' <' → logprob: -2.438910484313965
    3. '==' → logprob: -3.438910484313965
    4. '<len' → logprob: -3.813910484313965
    5. '<N' → logprob: -4.188910484313965
    6. '<n' → logprob: -4.688910484313965
    7. ' ==' → logprob: -5.313910484313965
    8. '<num' → logprob: -7.438910484313965
    9. '<size' → logprob: -8.563910484313965
    10. '+' → logprob: -8.813910484313965

Token 613: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31329602003097534
    2. 'and' → logprob: -1.3132960796356201
    3. '       ' → logprob: -11.0632963180542
    4. '           ' → logprob: -11.3132963180542
    5. '   ' → logprob: -13.4382963180542
    6. '        ' → logprob: -14.3132963180542
    7. '      ' → logprob: -14.3132963180542
    8. '          ' → logprob: -14.4382963180542
    9. '>' → logprob: -14.5632963180542
    10. '	and' → logprob: -14.9382963180542

Token 614: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18968135118484497
    2. '(n' → logprob: -1.8146812915802002
    3. 'foods' → logprob: -4.814681529998779
    4. '(food' → logprob: -7.314681529998779
    5. ' (' → logprob: -8.064681053161621
    6. '(h' → logprob: -9.064681053161621
    7. '(ne' → logprob: -9.189681053161621
    8. 'food' → logprob: -9.189681053161621
    9. '(head' → logprob: -9.314681053161621
    10. '(pos' → logprob: -9.939681053161621

Token 615: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.47528722882270813
    2. '(n' → logprob: -0.9752871990203857
    3. 'foods' → logprob: -6.975287437438965
    4. '(h' → logprob: -9.725287437438965
    5. ' nh' → logprob: -9.975287437438965
    6. 'food' → logprob: -10.350287437438965
    7. ' (' → logprob: -10.600287437438965
    8. '(food' → logprob: -10.725287437438965
    9. '(' → logprob: -11.475287437438965
    10. '(nx' → logprob: -11.725287437438965

Token 616: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.010119275189936161
    2. ',' → logprob: -4.885119438171387
    3. ',c' → logprob: -6.010119438171387
    4. ',new' → logprob: -10.010119438171387
    5. ' ,' → logprob: -12.135119438171387
    6. '==' → logprob: -13.510119438171387
    7. ',const' → logprob: -14.010119438171387
    8. ',N' → logprob: -14.260119438171387
    9. ',np' → logprob: -14.635119438171387
    10. 'c' → logprob: -14.635119438171387

Token 617: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005774373654276133
    2. 'nc' → logprob: -5.25577449798584
    3. ',n' → logprob: -8.38077449798584
    4. 'cn' → logprob: -9.38077449798584
    5. '_nc' → logprob: -9.38077449798584
    6. ',c' → logprob: -9.50577449798584
    7. ' nc' → logprob: -10.63077449798584
    8. '.nc' → logprob: -11.13077449798584
    9. ',' → logprob: -11.88077449798584
    10. 'cc' → logprob: -12.38077449798584

Token 618: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.24708205461502075
    2. ')' → logprob: -1.997081995010376
    3. '==' → logprob: -2.497081995010376
    4. ' ==' → logprob: -7.122082233428955
    5. ']==' → logprob: -9.872081756591797
    6. ' )' → logprob: -11.872081756591797
    7. '==(' → logprob: -14.122081756591797
    8. ')=' → logprob: -15.247081756591797
    9. '```' → logprob: -15.247081756591797
    10. '")==' → logprob: -15.497081756591797

Token 619: 'foods' (ID: 144120)
  Prédit: 'foods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foods' → logprob: -3.128163257315464e-07
    2. ' foods' → logprob: -15.25
    3. 'food' → logprob: -16.875
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -23.125
    6. '
' → logprob: -23.75
    7. 'fo' → logprob: -23.875
    8. 'fields' → logprob: -24.125
    9. 'oods' → logprob: -24.25
    10. 'Foods' → logprob: -24.25

Token 620: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.790129555156454e-05
    2. '[new' → logprob: -10.250067710876465
    3. 'fi' → logprob: -10.875067710876465
    4. 'new' → logprob: -11.250067710876465
    5. ' [' → logprob: -16.12506866455078
    6. '
' → logprob: -16.50006866455078
    7. '(fi' → logprob: -16.50006866455078
    8. '	fi' → logprob: -17.25006866455078
    9. '[
' → logprob: -17.25006866455078
    10. '[i' → logprob: -17.37506866455078

Token 621: 'fi' (ID: 9608)
  Prédit: 'fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.000003814697266
    3. ' fi' → logprob: -13.875003814697266
    4. '(fi' → logprob: -15.000003814697266
    5. '	fi' → logprob: -15.000003814697266
    6. 'fo' → logprob: -16.875003814697266
    7. 'f' → logprob: -17.375003814697266
    8. 'fin' → logprob: -17.750003814697266
    9. 'Fi' → logprob: -18.000003814697266
    10. 'i' → logprob: -18.500003814697266

Token 622: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5452818870544434
    2. '):' → logprob: -1.5452818870544434
    3. ':' → logprob: -1.7952818870544434
    4. ':
' → logprob: -3.2952818870544434
    5. '       ' → logprob: -6.045281887054443
    6. ']:
' → logprob: -7.795281887054443
    7. ')' → logprob: -7.920281887054443
    8. ']:' → logprob: -8.295282363891602
    9. '   ' → logprob: -8.420282363891602
    10. '           ' → logprob: -10.170282363891602

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021715736016631126
    2. 'new' → logprob: -4.2717156410217285
    3. ' new' → logprob: -4.8967156410217285
    4. '#' → logprob: -11.646716117858887
    5. '```' → logprob: -11.771716117858887
    6. ',' → logprob: -11.896716117858887
    7. '               ' → logprob: -12.021716117858887
    8. '          ' → logprob: -12.521716117858887
    9. ',new' → logprob: -12.896716117858887
    10. ':' → logprob: -13.021716117858887

Token 624: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.011735999956727028
    2. '           ' → logprob: -4.636735916137695
    3. '#' → logprob: -6.636735916137695
    4. ' new' → logprob: -7.511735916137695
    5. '   ' → logprob: -9.761735916137695
    6. '               ' → logprob: -10.386735916137695
    7. '       ' → logprob: -10.761735916137695
    8. 'if' → logprob: -12.761735916137695
    9. '
' → logprob: -13.136735916137695
    10. ' #' → logprob: -13.636735916137695

Token 625: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00016229959146585315
    2. 'fi' → logprob: -8.750162124633789
    3. '	fi' → logprob: -12.625162124633789
    4. 'f' → logprob: -15.250162124633789
    5. '=' → logprob: -16.25016212463379
    6. ' fi' → logprob: -16.87516212463379
    7. '(fi' → logprob: -16.87516212463379
    8. 'Fi' → logprob: -17.50016212463379
    9. '_' → logprob: -17.50016212463379
    10. '-fi' → logprob: -18.00016212463379

Token 626: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2233183042553719e-05
    2. 'fi' → logprob: -11.625012397766113
    3. '_i' → logprob: -13.000012397766113
    4. 'f' → logprob: -15.625012397766113
    5. 'и' → logprob: -16.187511444091797
    6. '_f' → logprob: -16.500011444091797
    7. '=' → logprob: -16.875011444091797
    8. '_' → logprob: -16.875011444091797
    9. 'if' → logprob: -17.000011444091797
    10. '```' → logprob: -17.000011444091797

Token 627: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3133832812309265
    2. '=' → logprob: -1.3133833408355713
    3. ' +=' → logprob: -9.063383102416992
    4. ' =' → logprob: -12.188383102416992
    5. ']+=' → logprob: -14.813383102416992
    6. '.=' → logprob: -16.438383102416992
    7. '=int' → logprob: -18.313383102416992
    8. '+='' → logprob: -18.313383102416992
    9. '-=' → logprob: -18.438383102416992
    10. '=len' → logprob: -18.688383102416992

Token 628: 'fi' (ID: 9608)
  Prédit: 'fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: 0.0
    2. ' fi' → logprob: -17.5
    3. '(fi' → logprob: -19.0
    4. '	fi' → logprob: -19.75
    5. 'fo' → logprob: -22.5
    6. '   ' → logprob: -22.75
    7. 'f' → logprob: -23.625
    8. 'Fi' → logprob: -24.875
    9. 'fil' → logprob: -24.875
    10. 'fic' → logprob: -25.375

Token 629: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7610454708337784e-05
    2. ' +' → logprob: -10.500027656555176
    3. '+
' → logprob: -20.37502670288086
    4. '＋' → logprob: -20.62502670288086
    5. '()+' → logprob: -22.25002670288086
    6. '+=' → logprob: -22.37502670288086
    7. '+i' → logprob: -23.00002670288086
    8. '+n' → logprob: -23.62502670288086
    9. '1' → logprob: -23.75002670288086
    10. '+c' → logprob: -23.87502670288086

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.5
    4. '<|end|>' → logprob: -21.25
    5. '   ' → logprob: -22.625
    6. '+' → logprob: -22.625
    7. '0' → logprob: -22.875
    8. '۱' → logprob: -23.625
    9. '``' → logprob: -24.0
    10. '१' → logprob: -24.125

Token 631: '
        
' (ID: 20417)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022488702088594437
    2. 'new' → logprob: -4.522488594055176
    3. '#' → logprob: -4.897488594055176
    4. '            
' → logprob: -6.147488594055176
    5. '
' → logprob: -7.522488594055176
    6. '       ' → logprob: -7.647488594055176
    7. '        
' → logprob: -8.022488594055176
    8. 'else' → logprob: -8.772488594055176
    9. ' new' → logprob: -9.522488594055176
    10. '   ' → logprob: -10.147488594055176

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27793776988983154
    2. 'new' → logprob: -1.9029377698898315
    3. 'if' → logprob: -2.527937889099121
    4. '#' → logprob: -4.527937889099121
    5. '        
' → logprob: -6.527937889099121
    6. 'next' → logprob: -6.902937889099121
    7. '```' → logprob: -8.777937889099121
    8. '   ' → logprob: -9.402937889099121
    9. ' new' → logprob: -10.152937889099121
    10. ' if' → logprob: -10.152937889099121

Token 633: ' state' (ID: 2608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5530617237091064
    2. 'new' → logprob: -1.0530617237091064
    3. '#' → logprob: -3.1780617237091064
    4. '       ' → logprob: -3.4280617237091064
    5. 'next' → logprob: -6.678061485290527
    6. '   ' → logprob: -8.303061485290527
    7. 'state' (adapté à ' state') → logprob: -9.303061485290527
    8. '        
' → logprob: -9.803061485290527
    9. 'visited' → logprob: -10.303061485290527
    10. 'head' → logprob: -10.803061485290527

Token 634: '=((' (ID: 150348)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.3870903551578522
    2. '=' → logprob: -1.1370903253555298
    3. ' =' → logprob: -8.512090682983398
    4. '=((' → logprob: -11.637090682983398
    5. '=('' → logprob: -12.637090682983398
    6. '=("' → logprob: -13.012090682983398
    7. ' =(' → logprob: -13.512090682983398
    8. '=
' → logprob: -14.262090682983398
    9. '=head' → logprob: -14.512090682983398
    10. '=(-' → logprob: -15.137090682983398

Token 635: 'nh' (ID: 5380)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6931600570678711
    2. 'nh' → logprob: -0.6931600570678711
    3. ' nh' → logprob: -11.443160057067871
    4. ' (' → logprob: -13.943160057067871
    5. '(' → logprob: -14.193160057067871
    6. 'n' → logprob: -15.068160057067871
    7. '   ' → logprob: -16.068161010742188
    8. '_n' → logprob: -16.693161010742188
    9. '[n' → logprob: -16.943161010742188
    10. '
' → logprob: -17.693161010742188

Token 636: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.20188796520233154
    2. ',' → logprob: -1.7018879652023315
    3. '(n' → logprob: -7.826888084411621
    4. ',(' → logprob: -9.576888084411621
    5. ' ,' → logprob: -13.326888084411621
    6. ',int' → logprob: -13.326888084411621
    7. '(' → logprob: -13.951888084411621
    8. ',new' → logprob: -14.701888084411621
    9. ',N' → logprob: -15.201888084411621
    10. ' (' → logprob: -15.451888084411621

Token 637: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024599602911621332
    2. 'nc' → logprob: -6.25246000289917
    3. ',c' → logprob: -7.87746000289917
    4. ',n' → logprob: -9.252459526062012
    5. ',' → logprob: -10.127459526062012
    6. ' nc' → logprob: -12.252459526062012
    7. '(n' → logprob: -12.377459526062012
    8. '_nc' → logprob: -12.877459526062012
    9. '(c' → logprob: -13.627459526062012
    10. '.nc' → logprob: -14.252459526062012

Token 638: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.759883463382721
    2. '),' → logprob: -0.759883463382721
    3. ',new' → logprob: -2.759883403778076
    4. ',),' → logprob: -7.759883403778076
    5. '),(' → logprob: -8.009883880615234
    6. ' ,' → logprob: -8.009883880615234
    7. 'new' → logprob: -9.259883880615234
    8. ' ),' → logprob: -10.884883880615234
    9. ',n' → logprob: -11.134883880615234
    10. ')' → logprob: -11.134883880615234

Token 639: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0015716375783085823
    2. ' new' → logprob: -6.5015716552734375
    3. 'tuple' → logprob: -9.751571655273438
    4. '   ' → logprob: -11.876571655273438
    5. ' tuple' → logprob: -13.751571655273438
    6. '       ' → logprob: -14.126571655273438
    7. '(new' → logprob: -14.876571655273438
    8. '           ' → logprob: -15.126571655273438
    9. ' ' → logprob: -15.251571655273438
    10. '  ' → logprob: -15.376571655273438

Token 640: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -5.180879816180095e-05
    2. 'body' → logprob: -9.875051498413086
    3. '_BODY' → logprob: -16.375051498413086
    4. ' body' → logprob: -16.500051498413086
    5. 'Body' → logprob: -16.625051498413086
    6. '<body' → logprob: -17.875051498413086
    7. '(body' → logprob: -18.250051498413086
    8. '_new' → logprob: -18.625051498413086
    9. '_b' → logprob: -18.875051498413086
    10. '.body' → logprob: -20.125051498413086

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015564014902338386
    2. ',new' → logprob: -6.501556396484375
    3. ' ,' → logprob: -10.001556396484375
    4. '       ' → logprob: -12.876556396484375
    5. '   ' → logprob: -13.001556396484375
    6. ',n' → logprob: -13.251556396484375
    7. 'new' → logprob: -13.751556396484375
    8. ',
' → logprob: -15.751556396484375
    9. ')' → logprob: -16.001556396484375
    10. ',next' → logprob: -16.126556396484375

Token 642: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0024756586644798517
    2. ' new' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.75247573852539
    4. '       ' → logprob: -20.00247573852539
    5. '	new' → logprob: -20.00247573852539
    6. ' ' → logprob: -20.25247573852539
    7. 'New' → logprob: -20.25247573852539
    8. '_new' → logprob: -20.87747573852539
    9. '           ' → logprob: -21.00247573852539
    10. '    ' → logprob: -21.00247573852539

Token 643: '_f' (ID: 1337)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.4794584810733795
    2. '_f' → logprob: -0.9794584512710571
    3. 'f' → logprob: -5.229458332061768
    4. '	fi' → logprob: -12.354458808898926
    5. 'Fi' → logprob: -13.729458808898926
    6. 'i' → logprob: -13.854458808898926
    7. 'if' → logprob: -14.479458808898926
    8. ')' → logprob: -14.604458808898926
    9. 'new' → logprob: -14.729458808898926
    10. 'фи' → logprob: -14.854458808898926

Token 644: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000215457082958892
    2. '_i' → logprob: -8.500215530395508
    3. 'fi' → logprob: -12.125215530395508
    4. 'new' → logprob: -13.375215530395508
    5. 'I' → logprob: -13.625215530395508
    6. 'if' → logprob: -13.875215530395508
    7. 'и' → logprob: -15.125215530395508
    8. 'ii' → logprob: -15.250215530395508
    9. '_' → logprob: -15.500215530395508
    10. 'in' → logprob: -15.625215530395508

Token 645: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03848298639059067
    2. ')' → logprob: -3.288482904434204
    3. ')
' → logprob: -8.413482666015625
    4. ' ,' → logprob: -8.913482666015625
    5. '   ' → logprob: -10.038482666015625
    6. ' )' → logprob: -10.788482666015625
    7. '       ' → logprob: -11.413482666015625
    8. ',
' → logprob: -12.413482666015625
    9. ',)' → logprob: -13.538482666015625
    10. ' )
' → logprob: -14.663482666015625

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14963321387767792
    2. 'if' → logprob: -2.0246331691741943
    3. ' if' → logprob: -5.649633407592773
    4. ')' → logprob: -6.774633407592773
    5. '   ' → logprob: -7.274633407592773
    6. '<|end|>' → logprob: -7.399633407592773
    7. 'visited' → logprob: -7.774633407592773
    8. '	if' → logprob: -8.524633407592773
    9. '```' → logprob: -8.524633407592773
    10. '        
' → logprob: -10.024633407592773

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4479086101055145
    2. ' if' → logprob: -1.072908639907837
    3. '       ' → logprob: -4.697908401489258
    4. '<|end|>' → logprob: -4.822908401489258
    5. '```' → logprob: -7.197908401489258
    6. '
' → logprob: -7.697908401489258
    7. '        
' → logprob: -8.322908401489258
    8. ')' → logprob: -8.822908401489258
    9. '	if' → logprob: -9.447908401489258
    10. ' 
' → logprob: -9.947908401489258

Token 648: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0007099286303855479
    2. ' state' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.375709533691406
    4. '(state' → logprob: -21.375709533691406
    5. '	state' → logprob: -22.375709533691406
    6. ' ' → logprob: -23.250709533691406
    7. 'State' → logprob: -24.125709533691406
    8. '_state' → logprob: -24.750709533691406
    9. ',state' → logprob: -25.500709533691406
    10. 'not' → logprob: -26.250709533691406

Token 649: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1628655642271042
    2. 'not' → logprob: -1.9128655195236206
    3. 'in' → logprob: -6.41286563873291
    4. ' in' → logprob: -6.91286563873291
    5. '	not' → logprob: -12.91286563873291
    6. '_not' → logprob: -15.66286563873291
    7. ':not' → logprob: -17.537864685058594
    8. 'Not' → logprob: -18.287864685058594
    9. ')' → logprob: -18.537864685058594
    10. '   ' → logprob: -19.287864685058594

Token 650: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -4.842555426876061e-06
    2. ' visited' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.8750057220459
    4. '
' → logprob: -22.0000057220459
    5. '       ' → logprob: -23.1250057220459
    6. 'visible' → logprob: -23.3750057220459
    7. '           ' → logprob: -24.1250057220459
    8. 'visit' → logprob: -24.5000057220459
    9. '```' → logprob: -24.7500057220459
    10. 'seen' → logprob: -24.7500057220459

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18365052342414856
    2. ':
' → logprob: -2.433650493621826
    3. '           ' → logprob: -2.558650493621826
    4. ' continue' → logprob: -6.558650493621826
    5. 'continue' → logprob: -6.808650493621826
    6. '       ' → logprob: -10.058650970458984
    7. '	continue' → logprob: -10.683650970458984
    8. ',' → logprob: -10.808650970458984
    9. ' continues' → logprob: -11.433650970458984
    10. ':return' → logprob: -11.808650970458984

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6139078736305237
    2. 'continue' → logprob: -0.8639078736305237
    3. ' continue' → logprob: -3.363907814025879
    4. '	continue' → logprob: -6.113907814025879
    5. '		' → logprob: -8.113907814025879
    6. '   ' → logprob: -9.738907814025879
    7. '	       ' → logprob: -9.863907814025879
    8. '```' → logprob: -11.113907814025879
    9. '       ' → logprob: -12.113907814025879
    10. '               ' → logprob: -12.238907814025879

Token 653: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06340105831623077
    2. '           ' → logprob: -2.813400983810425
    3. ' continue' → logprob: -6.563401222229004
    4. '	continue' → logprob: -11.188401222229004
    5. '   ' → logprob: -12.188401222229004
    6. '		' → logprob: -14.438401222229004
    7. '```' → logprob: -14.438401222229004
    8. '       ' → logprob: -14.563401222229004
    9. '               ' → logprob: -14.688401222229004
    10. '_continue' → logprob: -15.063401222229004

Token 654: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.072945237159729
    2. '       ' → logprob: -2.6979451179504395
    3. ' visited' → logprob: -6.8229451179504395
    4. '   ' → logprob: -7.4479451179504395
    5. '```' → logprob: -7.5729451179504395
    6. '
' → logprob: -7.5729451179504395
    7. '        
' → logprob: -8.947945594787598
    8. 'queue' → logprob: -10.447945594787598
    9. '           ' → logprob: -10.572945594787598
    10. '<|end|>' → logprob: -10.697945594787598

Token 655: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5831626653671265
    2. '       ' → logprob: -0.8331626653671265
    3. ' visited' → logprob: -5.833162784576416
    4. '```' → logprob: -6.333162784576416
    5. '   ' → logprob: -6.708162784576416
    6. '
' → logprob: -6.958162784576416
    7. '           ' → logprob: -8.708162307739258
    8. '        
' → logprob: -9.958162307739258
    9. 'queue' → logprob: -10.958162307739258
    10. '<|end|>' → logprob: -11.083162307739258

Token 656: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.014300782233476639
    2. '       ' → logprob: -4.26430082321167
    3. ' visited' → logprob: -9.014300346374512
    4. '   ' → logprob: -11.764300346374512
    5. '```' → logprob: -12.639300346374512
    6. 'queue' → logprob: -12.889300346374512
    7. '
' → logprob: -13.639300346374512
    8. '        
' → logprob: -15.014300346374512
    9. '           ' → logprob: -15.889300346374512
    10. '<|end|>' → logprob: -16.639301300048828

Token 657: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.750000953674316
    3. ' .' → logprob: -17.500001907348633
    4. '.remove' → logprob: -17.625001907348633
    5. '.append' → logprob: -18.125001907348633
    6. '.Add' → logprob: -18.375001907348633
    7. '.setdefault' → logprob: -18.500001907348633
    8. 'add' → logprob: -18.625001907348633
    9. ')add' → logprob: -18.750001907348633
    10. ').' → logprob: -19.000001907348633

Token 658: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -3.128163257315464e-07
    2. 'state' → logprob: -15.625
    3. '(' → logprob: -17.625
    4. '(token' → logprob: -18.0
    5. ',state' → logprob: -18.25
    6. '(states' → logprob: -19.0
    7. ' (' → logprob: -19.5
    8. '[state' → logprob: -20.0
    9. ' state' → logprob: -20.25
    10. '(stat' → logprob: -20.25

Token 659: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008793042507022619
    2. ')' → logprob: -8.250879287719727
    3. '
' → logprob: -8.250879287719727
    4. ',' → logprob: -8.250879287719727
    5. ')
' → logprob: -10.250879287719727
    6. '(queue' → logprob: -11.375879287719727
    7. 'queue' → logprob: -11.750879287719727
    8. '	queue' → logprob: -11.750879287719727
    9. '```' → logprob: -12.000879287719727
    10. '        
' → logprob: -12.250879287719727

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012310557067394257
    2. 'queue' → logprob: -5.01231050491333
    3. '```' → logprob: -5.76231050491333
    4. '	queue' → logprob: -6.76231050491333
    5. '<|end|>' → logprob: -7.26231050491333
    6. '(queue' → logprob: -8.387310981750488
    7. ' queue' → logprob: -8.762310981750488
    8. '   ' → logprob: -9.387310981750488
    9. '``' → logprob: -10.387310981750488
    10. '        
' → logprob: -11.512310981750488

Token 661: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -2.7848862373502925e-05
    2. ' queue' → logprob: -10.750027656555176
    3. '       ' → logprob: -12.000027656555176
    4. '	queue' → logprob: -15.875027656555176
    5. '```' → logprob: -17.000028610229492
    6. '
' → logprob: -17.000028610229492
    7. '   ' → logprob: -18.375028610229492
    8. '        
' → logprob: -18.750028610229492
    9. '(queue' → logprob: -19.250028610229492
    10. '.queue' → logprob: -20.000028610229492

Token 662: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.750005722045898
    3. '.app' → logprob: -14.000005722045898
    4. '.extend' → logprob: -14.000005722045898
    5. '.p' → logprob: -14.625005722045898
    6. '.enqueue' → logprob: -15.750005722045898
    7. 'append' → logprob: -16.2500057220459
    8. '_append' → logprob: -17.8750057220459
    9. '.ap' → logprob: -18.0000057220459
    10. '.put' → logprob: -18.0000057220459

Token 663: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.387229323387146
    2. '(((' → logprob: -1.137229323387146
    3. '((' → logprob: -8.012228965759277
    4. '((((' → logprob: -10.637228965759277
    5. ' (' → logprob: -12.887228965759277
    6. '(
' → logprob: -15.887228965759277
    7. '```' → logprob: -16.262229919433594
    8. ' (((' → logprob: -16.262229919433594
    9. '(state' → logprob: -17.762229919433594
    10. ')(((' → logprob: -17.887229919433594

Token 664: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003278960008174181
    2. ' ((' → logprob: -5.753278732299805
    3. '(((' → logprob: -9.378278732299805
    4. '(' → logprob: -11.378278732299805
    5. '   ' → logprob: -12.253278732299805
    6. ' ' → logprob: -15.628278732299805
    7. ')((' → logprob: -15.753278732299805
    8. ' (' → logprob: -16.878278732299805
    9. '(n' → logprob: -17.128278732299805
    10. '```' → logprob: -17.628278732299805

Token 665: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.014168446883559227
    2. '(n' → logprob: -4.2641682624816895
    3. ' nh' → logprob: -12.264168739318848
    4. ' (' → logprob: -15.889168739318848
    5. 'n' → logprob: -16.76416778564453
    6. '(' → logprob: -18.01416778564453
    7. '
' → logprob: -18.26416778564453
    8. ' ' → logprob: -19.13916778564453
    9. '_n' → logprob: -19.13916778564453
    10. '[n' → logprob: -19.26416778564453

Token 666: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.05583705008029938
    2. 'nc' → logprob: -3.9308371543884277
    3. ',c' → logprob: -4.180837154388428
    4. 'n' → logprob: -4.805837154388428
    5. 'c' → logprob: -5.305837154388428
    6. '(n' → logprob: -5.555837154388428
    7. '[' → logprob: -7.055837154388428
    8. '[n' → logprob: -7.805837154388428
    9. ',(' → logprob: -7.930837154388428
    10. '(' → logprob: -8.43083667755127

Token 667: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0016146040288731456
    2. ',n' → logprob: -7.001614570617676
    3. '(n' → logprob: -8.126614570617676
    4. ',c' → logprob: -8.251614570617676
    5. 'nc' → logprob: -9.001614570617676
    6. '(c' → logprob: -11.876614570617676
    7. 'cn' → logprob: -12.126614570617676
    8. 'n' → logprob: -12.251614570617676
    9. '[n' → logprob: -13.251614570617676
    10. ',' → logprob: -13.251614570617676

Token 668: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3455308973789215
    2. ',new' → logprob: -1.3455308675765991
    3. '),' → logprob: -3.4705309867858887
    4. 'new' → logprob: -7.470530986785889
    5. ' ,' → logprob: -10.34553050994873
    6. ',),' → logprob: -10.59553050994873
    7. ' new' → logprob: -11.72053050994873
    8. '),(' → logprob: -12.22053050994873
    9. '},' → logprob: -13.47053050994873
    10. ')' → logprob: -13.47053050994873

Token 669: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.061969365924596786
    2. ' new' → logprob: -2.81196928024292
    3. '   ' → logprob: -14.186969757080078
    4. ' ' → logprob: -15.186969757080078
    5. '       ' → logprob: -15.686969757080078
    6. '    ' → logprob: -16.061969757080078
    7. '	new' → logprob: -16.061969757080078
    8. '        ' → logprob: -16.561969757080078
    9. ')new' → logprob: -16.686969757080078
    10. 'tuple' → logprob: -17.061969757080078

Token 670: '_body' (ID: 31684)
  Prédit: '_body'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_body' → logprob: -0.3868754208087921
    2. 'body' → logprob: -1.1368753910064697
    3. ' body' → logprob: -13.01187515258789
    4. '<body' → logprob: -14.13687515258789
    5. 'Body' → logprob: -14.63687515258789
    6. '(body' → logprob: -15.13687515258789
    7. '_BODY' → logprob: -15.38687515258789
    8. '```' → logprob: -15.76187515258789
    9. 'bod' → logprob: -16.51187515258789
    10. '[' → logprob: -16.88687515258789

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003066479926928878
    2. ',new' → logprob: -6.003066539764404
    3. ' ,' → logprob: -7.503066539764404
    4. 'new' → logprob: -10.253066062927246
    5. ' new' → logprob: -12.503066062927246
    6. ',n' → logprob: -16.753067016601562
    7. '       ' → logprob: -17.503067016601562
    8. ',next' → logprob: -17.503067016601562
    9. '),' → logprob: -17.753067016601562
    10. '   ' → logprob: -17.878067016601562

Token 672: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02975141443312168
    2. ' new' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.779751777648926
    4. 'steps' → logprob: -15.154751777648926
    5. '       ' → logprob: -16.27975082397461
    6. '    ' → logprob: -16.77975082397461
    7. ' ' → logprob: -17.02975082397461
    8. '     ' → logprob: -17.15475082397461
    9. '        ' → logprob: -17.77975082397461
    10. '  ' → logprob: -18.02975082397461

Token 673: '_f' (ID: 1337)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1455625295639038
    2. 'fi' → logprob: -2.1455626487731934
    3. '_f' → logprob: -4.020562648773193
    4. 'new' → logprob: -8.145562171936035
    5. 'i' → logprob: -8.520562171936035
    6. '_i' → logprob: -11.520562171936035
    7. 'if' → logprob: -11.770562171936035
    8. '```' → logprob: -12.645562171936035
    9. '(new' → logprob: -13.645562171936035
    10. 'Fi' → logprob: -13.770562171936035

Token 674: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001470941468141973
    2. 'new' → logprob: -6.626471042633057
    3. 'ew' → logprob: -9.626470565795898
    4. 'iw' → logprob: -10.126470565795898
    5. '_i' → logprob: -11.501470565795898
    6. '(new' → logprob: -11.626470565795898
    7. 'iz' → logprob: -12.001470565795898
    8. 'fi' → logprob: -12.501470565795898
    9. 'o' → logprob: -13.501470565795898
    10. 'I' → logprob: -14.001470565795898

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002613358374219388
    2. ' ,' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. 'steps' → logprob: -17.125261306762695
    5. '       ' → logprob: -18.125261306762695
    6. '    ' → logprob: -18.750261306762695
    7. ' ' → logprob: -19.000261306762695
    8. ' steps' → logprob: -19.625261306762695
    9. '```' → logprob: -19.625261306762695
    10. '`,' → logprob: -19.875261306762695

Token 676: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0005530327325686812
    2. ' steps' → logprob: -7.500553131103516
    3. '   ' → logprob: -19.375553131103516
    4. 'step' → logprob: -20.750553131103516
    5. ' ' → logprob: -21.625553131103516
    6. 'Steps' → logprob: -22.875553131103516
    7. '_steps' → logprob: -23.000553131103516
    8. '.steps' → logprob: -23.250553131103516
    9. '  ' → logprob: -23.875553131103516
    10. '```' → logprob: -24.625553131103516

Token 677: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.2729995988775045e-06
    2. ' +' → logprob: -12.000006675720215
    3. '＋' → logprob: -22.1250057220459
    4. '+
' → logprob: -23.5000057220459
    5. '```' → logprob: -23.6250057220459
    6. ')+' → logprob: -24.0000057220459
    7. '1' → logprob: -24.2500057220459
    8. '()+' → logprob: -24.8750057220459
    9. '+[' → logprob: -25.2500057220459
    10. '   ' → logprob: -25.2500057220459

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.0
    5. ')' → logprob: -20.5
    6. '+' → logprob: -20.875
    7. '１' → logprob: -21.625
    8. '
' → logprob: -22.0
    9. '-' → logprob: -23.0625
    10. '۱' → logprob: -23.3125

Token 679: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026753442944027483
    2. '))' → logprob: -8.25026798248291
    3. ' )' → logprob: -12.00026798248291
    4. ')
' → logprob: -18.125267028808594
    5. '   ' → logprob: -18.250267028808594
    6. ')))' → logprob: -18.625267028808594
    7. ')`' → logprob: -19.250267028808594
    8. ')}' → logprob: -19.500267028808594
    9. ' ))' → logprob: -19.750267028808594
    10. '）' → logprob: -20.625267028808594

Token 680: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. ' )' → logprob: -10.000051498413086
    3. '))' → logprob: -12.250051498413086
    4. ')
' → logprob: -13.375051498413086
    5. ')`' → logprob: -16.500051498413086
    6. ')}' → logprob: -18.500051498413086
    7. '```' → logprob: -19.125051498413086
    8. '   ' → logprob: -19.125051498413086
    9. ')
' → logprob: -19.250051498413086
    10. ')

' → logprob: -19.375051498413086

Token 681: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34521645307540894
    2. ':' → logprob: -1.3452165126800537
    3. '   ' → logprob: -3.4702165126800537
    4. ' :
' → logprob: -10.220216751098633
    5. ':

' → logprob: -10.595216751098633
    6. ':
' → logprob: -10.657716751098633
    7. ' :' → logprob: -10.782716751098633
    8. '():
' → logprob: -10.845216751098633
    9. '<|end|>' → logprob: -11.032716751098633
    10. '>' → logprob: -11.032716751098633

Token 683: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038430798798799515
    2. '   ' → logprob: -3.288430690765381
    3. ' print' → logprob: -7.913430690765381
    4. '-print' → logprob: -11.288431167602539
    5. '	print' → logprob: -12.663431167602539
    6. '-' → logprob: -12.663431167602539
    7. '```' → logprob: -13.163431167602539
    8. 'printf' → logprob: -14.038431167602539
    9. '.print' → logprob: -14.538431167602539
    10. '    
' → logprob: -14.788431167602539

Token 684: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006626377580687404
    2. '   ' → logprob: -7.500662803649902
    3. ' print' → logprob: -9.125662803649902
    4. '	print' → logprob: -14.500662803649902
    5. '```' → logprob: -15.250662803649902
    6. '``' → logprob: -18.250661849975586
    7. ' ' → logprob: -18.500661849975586
    8. '
' → logprob: -20.125661849975586
    9. '-print' → logprob: -20.125661849975586
    10. '    
' → logprob: -20.250661849975586

Token 685: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.38688093423843384
    2. '-' → logprob: -1.136880874633789
    3. '("' → logprob: -12.261880874633789
    4. '(' → logprob: -12.386880874633789
    5. '("-' → logprob: -14.636880874633789
    6. '('' → logprob: -15.386880874633789
    7. ' -' → logprob: -15.386880874633789
    8. '()-' → logprob: -16.88688087463379
    9. '```' → logprob: -17.01188087463379
    10. '−' → logprob: -17.26188087463379

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -20.25
    3. ' ' → logprob: -20.625
    4. '```' → logprob: -21.0
    5. '۱' → logprob: -22.25
    6. '2' → logprob: -22.25
    7. '-' → logprob: -22.625
    8. '4' → logprob: -23.125
    9. '``' → logprob: -23.125
    10. '3' → logprob: -23.25

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.5
    3. '))' → logprob: -16.875
    4. '())' → logprob: -17.125
    5. '()' → logprob: -18.5
    6. ')
' → logprob: -19.0
    7. ')`' → logprob: -19.125
    8. ')}' → logprob: -19.25
    9. ')#' → logprob: -20.125
    10. '```' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 685
Tokens correctement prédits (1ère position, stricte): 299
Tokens correctement prédits (1ère position, avec adaptation): 321
Tokens correctement prédits (top 10): 563
Précision stricte (1ère position): 43.65%
Précision adaptée (1ère position): 46.86%
Précision (top 10): 82.19%
================================================================================
