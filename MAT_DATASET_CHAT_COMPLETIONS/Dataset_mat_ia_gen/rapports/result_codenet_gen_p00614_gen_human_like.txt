================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    data = input().split()
    if not data:
        break
    P = int(data[0])
    if P == 0:
        break
    coins_num = list(map(int, data[1:7]))
    coin_values = [1,5,10,50,100,500]

    # Precompute the minimal number of coins needed to make change for any amount up to max change
    max_amount = 10000  # As max total coins * max coin value can be large, but problem constraints allow
    INF = 10**9

    # Compute total money he has
    total_money = sum(c*v for c,v in zip(coins_num,coin_values))
    change_max = total_money - P

    # Prepare minimal coins for change (greedy works since coins are canonical)
    # So for change, minimal number of coins returned = greedy algorithm
    def min_coins_change(x):
        remain = x
        cnt = 0
        for v in reversed(coin_values):
            cnt += remain//v
            remain %= v
        return cnt

    # To find minimal total coins (paid + change)
    # Paid coins must sum atleast P (pay amount >=P)
    # Paid coins chosen from limited number of coins

    # We'll do subset sum DP with limited coins (bounded knapsack):
    # dp[i] = minimal number of coins used to form sum i, or INF if impossible
    dp = [INF]*(total_money+1)
    dp[0] = 0
    for c,v in zip(coins_num, coin_values):
        if c == 0:
            continue
        # Use bounded knapsack optimization - binary representation
        k = 1
        while c > 0:
            use = min(k,c)
            c -= use
            val = use * v
            for i in range(total_money - val, -1, -1):
                if dp[i] != INF and dp[i] + use < dp[i+val]:
                    dp[i+val] = dp[i] + use
            k <<= 1

    res = INF
    # Try all sums >= P, compute total coins = paid + change coins
    for paid in range(P, total_money+1):
        if dp[paid] == INF:
            continue
        change = paid - P
        ccoins = min_coins_change(change)
        total_coins = dp[paid] + ccoins
        if total_coins < res:
            res = total_coins

    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15598908066749573
    2. '    ' → logprob: -2.030989170074463
    3. ' ' → logprob: -5.030989170074463
    4. '```' → logprob: -6.030989170074463
    5. '       ' → logprob: -6.155989170074463
    6. '  ' → logprob: -8.030988693237305
    7. '\' → logprob: -8.155988693237305
    8. '    
' → logprob: -8.405988693237305
    9. '[' → logprob: -8.780988693237305
    10. '        ' → logprob: -9.030988693237305

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40150222182273865
    2. '.' → logprob: -1.151502251625061
    3. '=' → logprob: -4.9015021324157715
    4. '['' → logprob: -6.4015021324157715
    5. ')' → logprob: -6.7765021324157715
    6. '[]' → logprob: -7.4015021324157715
    7. '.setdefault' → logprob: -7.7765021324157715
    8. '[:]' → logprob: -7.7765021324157715
    9. ' =' → logprob: -7.9015021324157715
    10. ' ' → logprob: -8.02650260925293

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.049716949462890625
    2. 'input' → logprob: -3.0497169494628906
    3. ' socket' → logprob: -7.174716949462891
    4. ' s' → logprob: -9.54971694946289
    5. ' data' → logprob: -9.92471694946289
    6. ' f' → logprob: -9.92471694946289
    7. ' recv' → logprob: -10.42471694946289
    8. ' read' → logprob: -11.04971694946289
    9. 'socket' → logprob: -11.17471694946289
    10. ' request' → logprob: -11.29971694946289

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005611981265246868
    2. '('' → logprob: -5.380611896514893
    3. '()' → logprob: -7.755611896514893
    4. '("("' → logprob: -7.755611896514893
    5. ''' → logprob: -10.00561237335205
    6. '```' → logprob: -10.63061237335205
    7. ')' → logprob: -11.63061237335205
    8. '("")' → logprob: -11.88061237335205
    9. '(
' → logprob: -12.13061237335205
    10. '"' → logprob: -12.13061237335205

Token 8: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.005635455250740051
    2. 'split' → logprob: -5.2556352615356445
    3. 'lower' → logprob: -8.380635261535645
    4. 'rstrip' → logprob: -8.880635261535645
    5. 'startswith' → logprob: -10.505635261535645
    6. 'replace' → logprob: -12.505635261535645
    7. 'isdigit' → logprob: -13.380635261535645
    8. 'get' → logprob: -15.255635261535645
    9. 'read' → logprob: -15.630635261535645
    10. ' strip' → logprob: -15.880635261535645

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07154779881238937
    2. '('' → logprob: -2.821547746658325
    3. '("("' → logprob: -4.821547985076904
    4. '()' → logprob: -7.821547985076904
    5. '`' → logprob: -8.071547508239746
    6. ''' → logprob: -8.321547508239746
    7. '"' → logprob: -8.696547508239746
    8. '(`' → logprob: -9.071547508239746
    9. '```' → logprob: -9.196547508239746
    10. ' (' → logprob: -10.321547508239746

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11476600170135498
    2. ' if' → logprob: -2.4897661209106445
    3. 'if' → logprob: -4.2397661209106445
    4. '[' → logprob: -4.7397661209106445
    5. '    
' → logprob: -7.9897661209106445
    6. '```' → logprob: -8.239766120910645
    7. ' ' → logprob: -8.364766120910645
    8. ':' → logprob: -8.489766120910645
    9. '[:]' → logprob: -8.489766120910645
    10. '<|end|>' → logprob: -8.614766120910645

Token 11: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5013251900672913
    2. '[' → logprob: -1.6263251304626465
    3. ' if' → logprob: -2.0013251304626465
    4. '   ' → logprob: -3.0013251304626465
    5. ':' → logprob: -5.3763251304626465
    6. 'i' → logprob: -6.0013251304626465
    7. '[i' → logprob: -6.5013251304626465
    8. ' ' → logprob: -7.1263251304626465
    9. '[]' → logprob: -7.2513251304626465
    10. '[:]' → logprob: -7.3763251304626465

Token 12: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004403294064104557
    2. 'not' → logprob: -5.504403114318848
    3. ' data' → logprob: -8.379403114318848
    4. 'data' → logprob: -9.629403114318848
    5. ' len' → logprob: -10.754403114318848
    6. 'len' → logprob: -12.379403114318848
    7. ' ' → logprob: -12.629403114318848
    8. ' no' → logprob: -15.879403114318848
    9. ''' → logprob: -16.254404067993164
    10. '!' → logprob: -16.379404067993164

Token 13: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.25193241238594055
    2. 'data' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.251932144165039
    4. ' dat' → logprob: -14.126932144165039
    5. '   ' → logprob: -15.501932144165039
    6. '	data' → logprob: -15.876932144165039
    7. 'dat' → logprob: -16.00193214416504
    8. '_data' → logprob: -16.75193214416504
    9. ')data' → logprob: -16.87693214416504
    10. 'len' → logprob: -17.12693214416504

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006582272471860051
    2. ':
' → logprob: -8.37565803527832
    3. ' :' → logprob: -8.62565803527832
    4. '   ' → logprob: -8.75065803527832
    5. '[' → logprob: -10.75065803527832
    6. ':return' → logprob: -11.25065803527832
    7. '):' → logprob: -11.50065803527832
    8. '    ' → logprob: -11.62565803527832
    9. '[:]' → logprob: -11.87565803527832
    10. '.' → logprob: -12.12565803527832

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3545632064342499
    2. '   ' → logprob: -1.6045632362365723
    3. ':' → logprob: -2.3545632362365723
    4. ':
' → logprob: -6.729563236236572
    5. '    ' → logprob: -7.354563236236572
    6. ' :' → logprob: -8.604562759399414
    7. ' break' → logprob: -9.104562759399414
    8. ' continue' → logprob: -9.104562759399414
    9. ' or' → logprob: -9.229562759399414
    10. '    
' → logprob: -10.229562759399414

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.003703758353367448
    2. '       ' → logprob: -6.503703594207764
    3. 'break' (adapté à ' break') → logprob: -6.503703594207764
    4. '   ' → logprob: -8.003704071044922
    5. ' continue' → logprob: -8.628704071044922
    6. '	break' → logprob: -9.753704071044922
    7. '\n' → logprob: -10.003704071044922
    8. '    ' → logprob: -10.378704071044922
    9. ' \' → logprob: -11.253704071044922
    10. '_break' → logprob: -11.753704071044922

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24985624849796295
    2. '\n' → logprob: -2.3748562335968018
    3. '\' → logprob: -3.1248562335968018
    4. '    
' → logprob: -3.8748562335968018
    5. '<|end|>' → logprob: -3.9998562335968018
    6. '    ' → logprob: -4.499856472015381
    7. ' ' → logprob: -4.624856472015381
    8. '\r' → logprob: -5.624856472015381
    9. '       ' → logprob: -5.749856472015381
    10. '  ' → logprob: -6.124856472015381

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09862261265516281
    2. '[' → logprob: -3.5986225605010986
    3. '    
' → logprob: -3.7236225605010986
    4. ':' → logprob: -4.223622798919678
    5. '(' → logprob: -5.598622798919678
    6. ')' → logprob: -5.848622798919678
    7. '\' → logprob: -5.848622798919678
    8. '\n' → logprob: -5.973622798919678
    9. '.' → logprob: -6.098622798919678
    10. 'print' → logprob: -6.223622798919678

Token 19: ' P' (ID: 398)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.148522138595581
    2. '   ' → logprob: -1.273522138595581
    3. 'n' → logprob: -1.898522138595581
    4. 'i' → logprob: -3.023522138595581
    5. 'p' → logprob: -3.273522138595581
    6. 'if' → logprob: -3.523522138595581
    7. 'for' → logprob: -3.523522138595581
    8. '[' → logprob: -4.14852237701416
    9. '#' → logprob: -4.27352237701416
    10. 'a' → logprob: -4.64852237701416

Token 20: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.035341545939445496
    2. ' =' → logprob: -4.160341739654541
    3. '[' → logprob: -4.660341739654541
    4. '.append' → logprob: -5.910341739654541
    5. '=' → logprob: -6.410341739654541
    6. 'R' → logprob: -6.535341739654541
    7. '_r' → logprob: -7.785341739654541
    8. '   ' → logprob: -8.160341262817383
    9. 'rocess' → logprob: -8.160341262817383
    10. 'rice' → logprob: -8.285341262817383

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17985855042934418
    2. 'float' → logprob: -2.304858446121216
    3. ' int' → logprob: -2.929858446121216
    4. ' float' → logprob: -4.554858684539795
    5. 'data' → logprob: -7.179858684539795
    6. ' data' → logprob: -9.554858207702637
    7. 'len' → logprob: -10.304858207702637
    8. ' ' → logprob: -11.179858207702637
    9. '[int' → logprob: -11.429858207702637
    10. '(int' → logprob: -11.804858207702637

Token 22: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.026341410353779793
    2. '(' → logprob: -3.651341438293457
    3. 'data' → logprob: -10.276341438293457
    4. ' data' → logprob: -12.776341438293457
    5. ')data' → logprob: -13.776341438293457
    6. ' (' → logprob: -13.901341438293457
    7. ')' → logprob: -14.526341438293457
    8. '('' → logprob: -15.276341438293457
    9. '(
' → logprob: -15.401341438293457
    10. '(

' → logprob: -15.776341438293457

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -13.625001907348633
    3. ')' → logprob: -15.125001907348633
    4. '[-' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '0' → logprob: -16.875001907348633
    7. '```' → logprob: -17.125001907348633
    8. '(' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.375001907348633
    10. '\[' → logprob: -19.000001907348633

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.6934557505883276e-05
    2. '1' → logprob: -10.125057220458984
    3. ' ' → logprob: -11.500057220458984
    4. '[' → logprob: -13.250057220458984
    5. '])' → logprob: -13.375057220458984
    6. '-' → logprob: -13.625057220458984
    7. '2' → logprob: -14.000057220458984
    8. ']' → logprob: -14.625057220458984
    9. ')' → logprob: -14.750057220458984
    10. '3' → logprob: -16.000057220458984

Token 25: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.35095036029815674
    2. ')' → logprob: -1.2259503602981567
    3. ']' → logprob: -6.225950241088867
    4. ')]' → logprob: -8.725950241088867
    5. ')])' → logprob: -8.975950241088867
    6. ' ])' → logprob: -9.100950241088867
    7. ' )' → logprob: -10.350950241088867
    8. '))' → logprob: -10.600950241088867
    9. ''])' → logprob: -10.850950241088867
    10. '[' → logprob: -11.350950241088867

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13442787528038025
    2. '<|end|>' → logprob: -2.759427785873413
    3. ' if' → logprob: -3.509427785873413
    4. ')' → logprob: -3.884427785873413
    5. 'if' → logprob: -5.384428024291992
    6. ' ' → logprob: -6.384428024291992
    7. ',' → logprob: -6.509428024291992
    8. '<|end|>' → logprob: -7.259428024291992
    9. '#' → logprob: -7.509428024291992
    10. '    ' → logprob: -7.509428024291992

Token 27: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.117266058921814
    2. ')' → logprob: -1.742266058921814
    3. ' ' → logprob: -1.867266058921814
    4. 'i' → logprob: -2.3672661781311035
    5. ' i' → logprob: -2.6172661781311035
    6. 'if' (adapté à ' if') → logprob: -3.1172661781311035
    7. ',' → logprob: -3.8672661781311035
    8. '<|end|>' → logprob: -3.9922661781311035
    9. '   ' → logprob: -4.2422661781311035
    10. 's' → logprob: -4.6172661781311035

Token 28: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.010244831442832947
    2. 'P' → logprob: -4.635244846343994
    3. ' len' → logprob: -7.885244846343994
    4. ' ' → logprob: -9.635244369506836
    5. ' not' → logprob: -10.885244369506836
    6. ' data' → logprob: -11.260244369506836
    7. 'len' → logprob: -11.635244369506836
    8. 'data' → logprob: -13.697744369506836
    9. ' ' → logprob: -13.760244369506836
    10. '<|end|>' → logprob: -14.697744369506836

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05377839505672455
    2. '==' → logprob: -3.3037784099578857
    3. ' <' → logprob: -4.928778171539307
    4. ' <=' → logprob: -5.428778171539307
    5. ' >' → logprob: -5.803778171539307
    6. '<' → logprob: -8.428778648376465
    7. '>' → logprob: -8.428778648376465
    8. ' ' → logprob: -8.428778648376465
    9. '<=' → logprob: -9.178778648376465
    10. ' >=' → logprob: -9.428778648376465

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1130535677075386
    2. ' ' → logprob: -2.238053560256958
    3. '-' → logprob: -9.238053321838379
    4. '1' → logprob: -9.363053321838379
    5. ' -' → logprob: -11.238053321838379
    6. '7' → logprob: -11.613053321838379
    7. '  ' → logprob: -12.363053321838379
    8. '=' → logprob: -12.488053321838379
    9. '2' → logprob: -12.800553321838379
    10. '```' → logprob: -13.050553321838379

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005688794772140682
    2. ' ' → logprob: -7.875568866729736
    3. '-' → logprob: -8.750569343566895
    4. '1' → logprob: -11.250569343566895
    5. '```' → logprob: -12.375569343566895
    6. '7' → logprob: -12.875569343566895
    7. ' -' → logprob: -13.375569343566895
    8. '2' → logprob: -13.750569343566895
    9. '  ' → logprob: -13.875569343566895
    10. '9' → logprob: -13.875569343566895

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020294437126722187
    2. ':
' → logprob: -8.625203132629395
    3. ' :' → logprob: -11.125203132629395
    4. '   ' → logprob: -12.500203132629395
    5. '       ' → logprob: -12.875203132629395
    6. ':return' → logprob: -13.750203132629395
    7. '<|end|>' → logprob: -15.375203132629395
    8. '	break' → logprob: -15.750203132629395
    9. '.' → logprob: -16.000202178955078
    10. '    ' → logprob: -16.125202178955078

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020854694594163448
    2. '   ' → logprob: -9.250208854675293
    3. ' break' → logprob: -10.125208854675293
    4. '    ' → logprob: -10.750208854675293
    5. '      ' → logprob: -11.125208854675293
    6. '     ' → logprob: -11.625208854675293
    7. ' ' → logprob: -12.125208854675293
    8. '        ' → logprob: -12.250208854675293
    9. '<|end|>' → logprob: -12.375208854675293
    10. ':' → logprob: -12.750208854675293

Token 34: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.018823543563485146
    2. '       ' → logprob: -4.643823623657227
    3. 'break' (adapté à ' break') → logprob: -4.768823623657227
    4. '	break' → logprob: -8.018823623657227
    5. '   ' → logprob: -8.518823623657227
    6. ' ' → logprob: -13.268823623657227
    7. '```' → logprob: -13.393823623657227
    8. '           ' → logprob: -14.018823623657227
    9. '_break' → logprob: -14.268823623657227
    10. '    ' → logprob: -14.518823623657227

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01093639712780714
    2. '    
' → logprob: -5.260936260223389
    3. '\' → logprob: -6.885936260223389
    4. ':' → logprob: -7.510936260223389
    5. '\n' → logprob: -7.510936260223389
    6. ',' → logprob: -7.635936260223389
    7. '    ' → logprob: -7.760936260223389
    8. ' ' → logprob: -8.010936737060547
    9. '<|end|>' → logprob: -8.010936737060547
    10. '  ' → logprob: -8.135936737060547

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009227549657225609
    2. ',' → logprob: -6.009227752685547
    3. '    
' → logprob: -6.134227752685547
    4. ':' → logprob: -6.884227752685547
    5. ' ' → logprob: -7.134227752685547
    6. '  ' → logprob: -7.884227752685547
    7. ')' → logprob: -8.134227752685547
    8. '#' → logprob: -8.259227752685547
    9. '    ' → logprob: -8.384227752685547
    10. '\' → logprob: -8.634227752685547

Token 37: ' coins' (ID: 28969)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7750622034072876
    2. ',' → logprob: -1.9000622034072876
    3. 'n' → logprob: -2.400062084197998
    4. '   ' → logprob: -2.650062084197998
    5. ')' → logprob: -2.775062084197998
    6. '#' → logprob: -2.775062084197998
    7. '<|end|>' → logprob: -4.275062084197998
    8. 's' → logprob: -4.525062084197998
    9. '.' → logprob: -4.525062084197998
    10. ':' → logprob: -4.900062084197998

Token 38: '_num' (ID: 9834)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008095822297036648
    2. '=' → logprob: -4.883095741271973
    3. '_' → logprob: -7.883095741271973
    4. '_count' → logprob: -10.508095741271973
    5. ',' → logprob: -11.008095741271973
    6. ' ' → logprob: -11.258095741271973
    7. '=[]' → logprob: -11.383095741271973
    8. '_counts' → logprob: -12.133095741271973
    9. '   ' → logprob: -12.383095741271973
    10. '    ' → logprob: -12.383095741271973

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9445132613182068
    2. '=' → logprob: -1.0695133209228516
    3. 's' → logprob: -1.3195133209228516
    4. '[' → logprob: -7.694513320922852
    5. ',' → logprob: -8.944513320922852
    6. ' ' → logprob: -10.569513320922852
    7. '_' → logprob: -10.944513320922852
    8. ')' → logprob: -11.569513320922852
    9. '  ' → logprob: -11.819513320922852
    10. '[:]' → logprob: -11.819513320922852

Token 40: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19190391898155212
    2. ' int' → logprob: -1.9419039487838745
    3. '[int' → logprob: -4.066904067993164
    4. '[]' → logprob: -4.941904067993164
    5. ' []' → logprob: -6.191904067993164
    6. '[' → logprob: -6.191904067993164
    7. ' [' → logprob: -6.566904067993164
    8. 'list' → logprob: -7.566904067993164
    9. 'len' → logprob: -8.441904067993164
    10. ' list' → logprob: -9.191904067993164

Token 41: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3451550602912903
    2. '(data' → logprob: -1.8451550006866455
    3. '(map' → logprob: -2.0951550006866455
    4. '(range' → logprob: -5.345155239105225
    5. '()' → logprob: -5.595155239105225
    6. '(int' → logprob: -6.220155239105225
    7. '(eval' → logprob: -9.720154762268066
    8. '(P' → logprob: -9.720154762268066
    9. '(input' → logprob: -9.970154762268066
    10. '(
' → logprob: -11.095154762268066

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.043338626623153687
    2. '(' → logprob: -3.1683385372161865
    3. '(lambda' → logprob: -8.168338775634766
    4. 'int' → logprob: -11.043338775634766
    5. '(
' → logprob: -11.168338775634766
    6. ')' → logprob: -11.418338775634766
    7. '<int' → logprob: -12.043338775634766
    8. ',int' → logprob: -13.293338775634766
    9. '(str' → logprob: -13.668338775634766
    10. ' int' → logprob: -13.918338775634766

Token 43: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.012402867898344994
    2. ',data' → logprob: -5.1374030113220215
    3. '(' → logprob: -5.2624030113220215
    4. ',' → logprob: -6.7624030113220215
    5. ' (' → logprob: -9.887402534484863
    6. ' ,' → logprob: -11.137402534484863
    7. ')data' → logprob: -11.512402534484863
    8. 'data' → logprob: -11.762402534484863
    9. ' data' → logprob: -12.012402534484863
    10. '(input' → logprob: -12.262402534484863

Token 44: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.6329718232154846
    2. 'data' → logprob: -0.7579718232154846
    3. '(data' → logprob: -8.38297176361084
    4. ')data' → logprob: -10.00797176361084
    5. ' input' → logprob: -10.63297176361084
    6. 'input' → logprob: -10.63297176361084
    7. '	data' → logprob: -11.38297176361084
    8. '[data' → logprob: -11.38297176361084
    9. '<data' → logprob: -12.38297176361084
    10. ',data' → logprob: -12.50797176361084

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009801419451832771
    2. '(' → logprob: -4.634801387786865
    3. '()[' → logprob: -11.384801864624023
    4. '```' → logprob: -11.384801864624023
    5. ')' → logprob: -12.259801864624023
    6. '   ' → logprob: -12.384801864624023
    7. '	' → logprob: -12.759801864624023
    8. ' [' → logprob: -12.884801864624023
    9. ' ' → logprob: -13.009801864624023
    10. '([' → logprob: -13.634801864624023

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010103036183863878
    2. '2' → logprob: -7.876010417938232
    3. '[' → logprob: -8.001009941101074
    4. ' ' → logprob: -8.876009941101074
    5. '   ' → logprob: -9.251009941101074
    6. '```' → logprob: -11.001009941101074
    7. '(' → logprob: -11.501009941101074
    8. ':' → logprob: -12.376009941101074
    9. '  ' → logprob: -12.376009941101074
    10. ' [' → logprob: -12.501009941101074

Token 47: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.2015310525894165
    2. ':' → logprob: -1.7015310525894165
    3. ':],' → logprob: -9.451531410217285
    4. ':].' → logprob: -10.951531410217285
    5. ']:' → logprob: -11.826531410217285
    6. ':)' → logprob: -12.076531410217285
    7. ' :' → logprob: -12.701531410217285
    8. ' :]' → logprob: -13.076531410217285
    9. ':]

' → logprob: -13.951531410217285
    10. ':]
' → logprob: -14.201531410217285

Token 48: '7' (ID: 22)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.023709280416369438
    2. ']' → logprob: -3.773709297180176
    3. '6' → logprob: -9.023709297180176
    4. '1' → logprob: -9.523709297180176
    5. ' ]' → logprob: -9.898709297180176
    6. '4' → logprob: -10.148709297180176
    7. '])))' → logprob: -10.148709297180176
    8. '7' → logprob: -10.523709297180176
    9. '3' → logprob: -11.148709297180176
    10. ']))
' → logprob: -11.148709297180176

Token 49: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.012544618919491768
    2. ']' → logprob: -4.387544631958008
    3. '))' → logprob: -11.512544631958008
    4. ']))
' → logprob: -11.762544631958008
    5. '   ' → logprob: -12.512544631958008
    6. ')))' → logprob: -12.887544631958008
    7. ')' → logprob: -13.137544631958008
    8. '])' → logprob: -13.512544631958008
    9. '']))' → logprob: -13.637544631958008
    10. ' ]' → logprob: -13.762544631958008

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02003829926252365
    2. '    
' → logprob: -5.64503812789917
    3. '  ' → logprob: -5.89503812789917
    4. ' ' → logprob: -6.14503812789917
    5. 'coins' → logprob: -6.27003812789917
    6. '<|end|>' → logprob: -6.39503812789917
    7. '    ' → logprob: -6.89503812789917
    8. ' coins' → logprob: -7.02003812789917
    9. 'total' → logprob: -7.02003812789917
    10. '   
' → logprob: -7.77003812789917

Token 51: ' coin' (ID: 22179)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5960655808448792
    2. 'total' → logprob: -2.4710655212402344
    3. 'coins' → logprob: -2.4710655212402344
    4. ' total' → logprob: -2.9710655212402344
    5. ' coins' → logprob: -2.9710655212402344
    6. 'sum' → logprob: -3.8460655212402344
    7. 'coin' (adapté à ' coin') → logprob: -4.596065521240234
    8. 'target' → logprob: -4.596065521240234
    9. ' if' → logprob: -4.721065521240234
    10. ' coin' → logprob: -4.721065521240234

Token 52: '_values' (ID: 20393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04597892612218857
    2. '_values' → logprob: -3.1709790229797363
    3. '_s' → logprob: -6.420979022979736
    4. '_value' → logprob: -7.545979022979736
    5. '_' → logprob: -7.670979022979736
    6. '_vals' → logprob: -9.045978546142578
    7. '_val' → logprob: -9.170978546142578
    8. '_types' → logprob: -9.920978546142578
    9. 'values' → logprob: -11.295978546142578
    10. 'Values' → logprob: -11.420978546142578

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014209816232323647
    2. '=' → logprob: -4.264209747314453
    3. '[' → logprob: -10.514209747314453
    4. ' =[' → logprob: -11.139209747314453
    5. ' ' → logprob: -13.389209747314453
    6. 's' → logprob: -14.139209747314453
    7. ')' → logprob: -14.764209747314453
    8. '[:]' → logprob: -14.889209747314453
    9. ' =
' → logprob: -15.014209747314453
    10. '=[' → logprob: -15.014209747314453

Token 54: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3868741989135742
    2. '[' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.011874198913574
    4. ' ' → logprob: -14.511874198913574
    5. '   ' → logprob: -15.636874198913574
    6. '6' → logprob: -17.38687515258789
    7. '[int' → logprob: -17.38687515258789
    8. '```' → logprob: -17.38687515258789
    9. '=[' → logprob: -17.63687515258789
    10. ' `[' → logprob: -17.76187515258789

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8298566937446594
    2. '50' → logprob: -1.2048566341400146
    3. '500' → logprob: -1.5798566341400146
    4. '100' → logprob: -3.4548566341400146
    5. '25' → logprob: -3.9548566341400146
    6. ' ' → logprob: -5.704856872558594
    7. '10' → logprob: -5.829856872558594
    8. '5' → logprob: -7.579856872558594
    9. '300' → logprob: -8.454856872558594
    10. '[' → logprob: -8.829856872558594

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3174424469470978
    2. '0' → logprob: -1.3174424171447754
    3. '00' → logprob: -5.942442417144775
    4. ' ,' → logprob: -7.442442417144775
    5. ' ' → logprob: -7.692442417144775
    6. '5' → logprob: -8.442442893981934
    7. '000' → logprob: -9.192442893981934
    8. '2' → logprob: -9.817442893981934
    9. ',
' → logprob: -10.192442893981934
    10. '50' → logprob: -10.442442893981934

Token 57: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.020587904378771782
    2. ' ' → logprob: -3.895587921142578
    3. '  ' → logprob: -11.020587921142578
    4. '2' → logprob: -11.645587921142578
    5. '25' → logprob: -12.270587921142578
    6. '10' → logprob: -12.395587921142578
    7. '6' → logprob: -12.770587921142578
    8. '   ' → logprob: -13.270587921142578
    9. '500' → logprob: -13.270587921142578
    10. '1' → logprob: -13.645587921142578

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07644156366586685
    2. '10' → logprob: -3.076441526412964
    3. ' ,' → logprob: -4.201441764831543
    4. '0' → logprob: -4.451441764831543
    5. ' ' → logprob: -7.201441764831543
    6. '1' → logprob: -9.451441764831543
    7. '25' → logprob: -12.326441764831543
    8. '7' → logprob: -14.201441764831543
    9. '```' → logprob: -14.201441764831543
    10. '2' → logprob: -14.451441764831543

Token 59: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.625205039978027
    3. '1' → logprob: -10.750205039978027
    4. '	' → logprob: -14.187705039978027
    5. '   ' → logprob: -14.437705039978027
    6. '１０' → logprob: -14.500205039978027
    7. '  ' → logprob: -15.125205039978027
    8. '2' → logprob: -15.500205039978027
    9. '0' → logprob: -15.500205039978027
    10. '6' → logprob: -15.750205039978027

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008152276859618723
    2. ' ,' → logprob: -7.250815391540527
    3. '25' → logprob: -10.250815391540527
    4. '20' → logprob: -11.250815391540527
    5. '30' → logprob: -12.375815391540527
    6. '6' → logprob: -12.375815391540527
    7. '2' → logprob: -12.625815391540527
    8. ' ' → logprob: -12.750815391540527
    9. '23' → logprob: -12.750815391540527
    10. '5' → logprob: -12.875815391540527

Token 61: '50' (ID: 1434)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.009101983159780502
    2. '50' → logprob: -4.759101867675781
    3. ' ' → logprob: -8.009101867675781
    4. '2' → logprob: -9.384101867675781
    5. '5' → logprob: -10.634101867675781
    6. '   ' → logprob: -11.259101867675781
    7. '	' → logprob: -11.384101867675781
    8. '  ' → logprob: -12.321601867675781
    9. '```' → logprob: -12.321601867675781
    10. '20' → logprob: -12.884101867675781

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003784285159781575
    2. '100' → logprob: -5.8787841796875
    3. ' ,' → logprob: -7.7537841796875
    4. '0' → logprob: -8.1287841796875
    5. '25' → logprob: -8.7537841796875
    6. '20' → logprob: -11.1287841796875
    7. '1' → logprob: -11.3787841796875
    8. '50' → logprob: -11.6287841796875
    9. ' ' → logprob: -11.8787841796875
    10. '2' → logprob: -11.8787841796875

Token 63: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.003628931473940611
    2. ' ' → logprob: -5.628628730773926
    3. '1' → logprob: -10.878628730773926
    4. '10' → logprob: -11.878628730773926
    5. '25' → logprob: -13.816128730773926
    6. '１００' → logprob: -14.753628730773926
    7. '50' → logprob: -15.066128730773926
    8. '  ' → logprob: -15.691128730773926
    9. '0' → logprob: -15.816128730773926
    10. '5' → logprob: -16.003629684448242

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013560164370574057
    2. ' ,' → logprob: -9.00013542175293
    3. ']' → logprob: -12.87513542175293
    4. '0' → logprob: -13.00013542175293
    5. ',
' → logprob: -14.12513542175293
    6. '50' → logprob: -14.25013542175293
    7. ' ' → logprob: -14.37513542175293
    8. '100' → logprob: -14.37513542175293
    9. '300' → logprob: -14.75013542175293
    10. '500' → logprob: -14.75013542175293

Token 65: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00030924470047466457
    2. '5' → logprob: -8.500308990478516
    3. ' ' → logprob: -9.250308990478516
    4. '50' → logprob: -12.625308990478516
    5. ' five' → logprob: -13.500308990478516
    6. '５' → logprob: -14.000308990478516
    7. 's' → logprob: -14.375308990478516
    8. 'five' → logprob: -14.625308990478516
    9. '```' → logprob: -15.187808990478516
    10. '}' → logprob: -15.437808990478516

Token 66: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -8.542423165636137e-05
    2. ' ]' → logprob: -9.625085830688477
    3. ']
' → logprob: -12.125085830688477
    4. ',' → logprob: -12.250085830688477
    5. '])' → logprob: -12.250085830688477
    6. ')' → logprob: -13.000085830688477
    7. '   ' → logprob: -13.875085830688477
    8. ')]' → logprob: -14.500085830688477
    9. ']]' → logprob: -15.875085830688477
    10. ']}' → logprob: -16.125085830688477

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10883539170026779
    2. 'total' → logprob: -2.733835458755493
    3. ' total' → logprob: -4.108835220336914
    4. 'sum' → logprob: -5.483835220336914
    5. 'dp' → logprob: -5.983835220336914
    6. 'count' → logprob: -6.483835220336914
    7. '<|end|>' → logprob: -6.483835220336914
    8. 'amount' → logprob: -6.608835220336914
    9. '    
' → logprob: -6.858835220336914
    10. 'possible' → logprob: -6.983835220336914

Token 68: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3527508080005646
    2. 'total' → logprob: -2.102750778198242
    3. 'target' → logprob: -2.477750778198242
    4. 'possible' → logprob: -3.477750778198242
    5. 'count' → logprob: -4.477750778198242
    6. 'amount' → logprob: -4.602750778198242
    7. '   ' → logprob: -4.852750778198242
    8. 'change' → logprob: -5.227750778198242
    9. 'ways' → logprob: -5.477750778198242
    10. ' dp' → logprob: -5.602750778198242

Token 69: ' Pre' (ID: 4659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.509098470211029
    2. ' dp' → logprob: -1.2590985298156738
    3. ' total' → logprob: -3.759098529815674
    4. 'total' → logprob: -4.134098529815674
    5. 'target' → logprob: -4.259098529815674
    6. 'possible' → logprob: -4.259098529815674
    7. ' target' → logprob: -4.884098529815674
    8. ' DP' → logprob: -5.009098529815674
    9. 'count' → logprob: -5.384098529815674
    10. ' ways' → logprob: -5.384098529815674

Token 70: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -0.8475448489189148
    2. 'v' → logprob: -1.3475449085235596
    3. 'compute' → logprob: -2.4725449085235596
    4. 'c' → logprob: -2.5975449085235596
    5. 'sum' → logprob: -2.5975449085235596
    6. 'computed' → logprob: -3.0975449085235596
    7. 'comput' → logprob: -5.2225446701049805
    8. 'fix' → logprob: -5.3475446701049805
    9. 'com' → logprob: -5.3475446701049805
    10. 's' → logprob: -6.2225446701049805

Token 71: ' the' (ID: 290)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4616111218929291
    2. 'dp' → logprob: -1.0866111516952515
    3. ' ways' → logprob: -4.336611270904541
    4. ' possible' → logprob: -4.836611270904541
    5. 'possible' → logprob: -5.336611270904541
    6. ' max' → logprob: -6.711611270904541
    7. ' sums' → logprob: -6.961611270904541
    8. '   ' → logprob: -7.461611270904541
    9. ' DP' → logprob: -7.836611270904541
    10. 'ways' → logprob: -7.961611270904541

Token 72: ' minimal' (ID: 19957)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.19907833635807037
    2. 'dp' → logprob: -2.074078321456909
    3. ' ways' → logprob: -3.824078321456909
    4. ' possible' → logprob: -3.949078321456909
    5. 'possible' → logprob: -4.949078559875488
    6. ' DP' → logprob: -6.699078559875488
    7. ' max' → logprob: -6.824078559875488
    8. ' number' → logprob: -7.449078559875488
    9. ' min' → logprob: -7.699078559875488
    10. ' possibilities' → logprob: -8.074078559875488

Token 73: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.048722829669713974
    2. ' coins' → logprob: -3.548722743988037
    3. 'coins' → logprob: -5.048722743988037
    4. ' coin' → logprob: -5.423722743988037
    5. ' ' → logprob: -6.298722743988037
    6. 'number' → logprob: -6.548722743988037
    7. '_co' → logprob: -6.798722743988037
    8. 'coin' → logprob: -7.423722743988037
    9. ' change' → logprob: -7.673722743988037
    10. '_number' → logprob: -7.923722743988037

Token 74: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1949115991592407
    2. ' of' → logprob: -1.8199115991592407
    3. '_' → logprob: -2.069911479949951
    4. 'of' → logprob: -2.319911479949951
    5. '_of' → logprob: -2.694911479949951
    6. '   ' → logprob: -2.819911479949951
    7. ' ' → logprob: -2.944911479949951
    8. '[' → logprob: -2.944911479949951
    9. '    ' → logprob: -3.444911479949951
    10. '<|end|>' → logprob: -4.944911479949951

Token 75: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.02371183969080448
    2. 'coins' → logprob: -3.773711919784546
    3. ' ' → logprob: -8.523712158203125
    4. ' coin' → logprob: -8.898712158203125
    5. '_co' → logprob: -11.086212158203125
    6. 'coin' → logprob: -11.211212158203125
    7. 'Coins' → logprob: -11.273712158203125
    8. '  ' → logprob: -11.398712158203125
    9. '```' → logprob: -11.586212158203125
    10. ' ' → logprob: -12.023712158203125

Token 76: ' needed' (ID: 6118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.123144268989563
    2. ' for' → logprob: -1.623144268989563
    3. ' needed' → logprob: -1.748144268989563
    4. ' ' → logprob: -2.6231441497802734
    5. '  ' → logprob: -2.6231441497802734
    6. 's' → logprob: -3.2481441497802734
    7. '    ' → logprob: -3.3731441497802734
    8. 'needed' → logprob: -3.8731441497802734
    9. ' to' → logprob: -4.373144149780273
    10. '.' → logprob: -4.498144149780273

Token 77: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1182727813720703
    2. ' for' → logprob: -1.1182727813720703
    3. '   ' → logprob: -1.4932727813720703
    4. ' to' → logprob: -2.9932727813720703
    5. 'for' → logprob: -3.1182727813720703
    6. '    ' → logprob: -4.86827278137207
    7. '  ' → logprob: -4.86827278137207
    8. '<|end|>' → logprob: -5.74327278137207
    9. ',' → logprob: -6.11827278137207
    10. 'to' → logprob: -6.74327278137207

Token 78: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.44637298583984375
    2. ' make' → logprob: -1.0713729858398438
    3. ' pay' → logprob: -5.071372985839844
    4. ' reach' → logprob: -5.571372985839844
    5. ' form' → logprob: -5.946372985839844
    6. 'pay' → logprob: -6.071372985839844
    7. 'sum' → logprob: -7.571372985839844
    8. 'form' → logprob: -7.696372985839844
    9. ' sum' → logprob: -7.821372985839844
    10. 'ach' → logprob: -8.696372985839844

Token 79: ' change' (ID: 3343)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.9084919691085815
    2. ' all' → logprob: -1.1584919691085815
    3. ' up' → logprob: -2.658492088317871
    4. ' every' → logprob: -3.158492088317871
    5. ' amounts' → logprob: -3.158492088317871
    6. ' the' → logprob: -3.283492088317871
    7. ' ' → logprob: -3.533492088317871
    8. ' any' → logprob: -3.908492088317871
    9. ' amount' → logprob: -4.158492088317871
    10. ' change' → logprob: -5.033492088317871

Token 80: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9064399003982544
    2. ' for' → logprob: -1.6564399003982544
    3. 'dp' → logprob: -1.6564399003982544
    4. ' dp' → logprob: -2.031439781188965
    5. 'for' → logprob: -3.531439781188965
    6. '```' → logprob: -4.406439781188965
    7. 'amount' → logprob: -4.906439781188965
    8. '    ' → logprob: -5.656439781188965
    9. 'change' → logprob: -5.906439781188965
    10. '
' → logprob: -5.906439781188965

Token 81: ' any' (ID: 1062)
  Prédit: ' amounts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amounts' → logprob: -0.8212453722953796
    2. ' amount' → logprob: -1.0712454319000244
    3. ' all' → logprob: -1.9462454319000244
    4. ' ' → logprob: -3.8212454319000244
    5. ' each' → logprob: -4.071245193481445
    6. 'amount' → logprob: -4.446245193481445
    7. ' s' → logprob: -5.071245193481445
    8. ' every' → logprob: -5.196245193481445
    9. ' a' → logprob: -6.071245193481445
    10. ' coin' → logprob: -6.196245193481445

Token 82: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.0416451096534729
    2. 'amount' → logprob: -4.291645050048828
    3. ' ' → logprob: -4.416645050048828
    4. ' value' → logprob: -4.416645050048828
    5. ' possible' → logprob: -7.041645050048828
    6. ' given' → logprob: -7.166645050048828
    7. ' sum' → logprob: -8.291645050048828
    8. ' total' → logprob: -8.791645050048828
    9. ' coin' → logprob: -9.041645050048828
    10. '    ' → logprob: -9.166645050048828

Token 83: ' up' (ID: 869)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20860591530799866
    2. '
' → logprob: -2.208606004714966
    3. ',' → logprob: -3.958606004714966
    4. '    ' → logprob: -4.458605766296387
    5. ' ' → logprob: -4.833605766296387
    6. '  ' → logprob: -5.458605766296387
    7. '.' → logprob: -5.458605766296387
    8. '<|end|>' → logprob: -5.583605766296387
    9. '```' → logprob: -5.708605766296387
    10. '_' → logprob: -5.708605766296387

Token 84: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6904722452163696
    2. 'to' → logprob: -0.8154722452163696
    3. ' ' → logprob: -4.06547212600708
    4. '100' → logprob: -4.19047212600708
    5. '   ' → logprob: -4.56547212600708
    6. '  ' → logprob: -5.19047212600708
    7. '    ' → logprob: -6.94047212600708
    8. 't' → logprob: -7.19047212600708
    9. '=' → logprob: -7.31547212600708
    10. '50' → logprob: -7.44047212600708

Token 85: ' max' (ID: 2999)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2455559968948364
    2. '750' → logprob: -1.4955559968948364
    3. '749' → logprob: -1.7455559968948364
    4. ' ' → logprob: -1.9955559968948364
    5. 'P' → logprob: -2.495555877685547
    6. '600' → logprob: -3.245555877685547
    7. '500' → logprob: -4.120555877685547
    8. '300' → logprob: -4.495555877685547
    9. '748' → logprob: -4.870555877685547
    10. ' P' → logprob: -5.120555877685547

Token 86: ' change' (ID: 3343)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.26789435744285583
    2. '_' → logprob: -1.5178943872451782
    3. '_value' → logprob: -5.142894268035889
    4. ' ' → logprob: -6.017894268035889
    5. ' =' → logprob: -6.267894268035889
    6. '_amt' → logprob: -6.767894268035889
    7. '   ' → logprob: -7.017894268035889
    8. '100' → logprob: -7.642894268035889
    9. ' _' → logprob: -7.767894268035889
    10. 'amount' → logprob: -8.017894744873047

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20194903016090393
    2. 'max' → logprob: -2.951949119567871
    3. ' ' → logprob: -3.076949119567871
    4. '    ' → logprob: -4.201949119567871
    5. '_' → logprob: -4.326949119567871
    6. 'amount' → logprob: -4.701949119567871
    7. '
' → logprob: -5.201949119567871
    8. ' =' → logprob: -5.326949119567871
    9. '_max' → logprob: -5.451949119567871
    10. '.' → logprob: -5.576949119567871

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039634820073843
    2. 'max' → logprob: -4.039634704589844
    3. ' ' → logprob: -4.414634704589844
    4. ' max' → logprob: -6.039634704589844
    5. '    ' → logprob: -6.789634704589844
    6. '
' → logprob: -6.789634704589844
    7. 'm' → logprob: -7.164634704589844
    8. '```' → logprob: -7.414634704589844
    9. '    
' → logprob: -8.039634704589844
    10. '  ' → logprob: -8.289634704589844

Token 89: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.8876467347145081
    2. '   ' → logprob: -1.0126466751098633
    3. ' max' → logprob: -1.6376466751098633
    4. ' ' → logprob: -4.387646675109863
    5. '100' → logprob: -6.012646675109863
    6. 'change' → logprob: -6.512646675109863
    7. '```' → logprob: -6.762646675109863
    8. ' 
' → logprob: -6.762646675109863
    9. 'm' → logprob: -6.887646675109863
    10. '_max' → logprob: -6.887646675109863

Token 90: '_amount' (ID: 29145)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.004941393155604601
    2. '_amount' → logprob: -5.504941463470459
    3. '_' → logprob: -8.0049409866333
    4. '_value' → logprob: -8.2549409866333
    5. '_sum' → logprob: -9.0049409866333
    6. '_charge' → logprob: -10.2549409866333
    7. '_coin' → logprob: -10.7549409866333
    8. '_ch' → logprob: -11.2549409866333
    9. '_exchange' → logprob: -11.6299409866333
    10. 'change' → logprob: -11.6299409866333

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06204095482826233
    2. '=' → logprob: -2.8120410442352295
    3. ' ' → logprob: -10.062041282653809
    4. ',' → logprob: -11.312041282653809
    5. '   ' → logprob: -12.687041282653809
    6. '_' → logprob: -12.937041282653809
    7. ')' → logprob: -13.062041282653809
    8. ' =
' → logprob: -13.312041282653809
    9. 's' → logprob: -13.437041282653809
    10. '  ' → logprob: -13.562041282653809

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5091364979743958
    2. '100' → logprob: -2.259136438369751
    3. '500' → logprob: -2.384136438369751
    4. ' P' → logprob: -2.759136438369751
    5. 'P' → logprob: -2.884136438369751
    6. '400' → logprob: -3.634136438369751
    7. '600' → logprob: -4.25913667678833
    8. '750' → logprob: -4.38413667678833
    9. 'sum' → logprob: -4.88413667678833
    10. ' sum' → logprob: -5.38413667678833

Token 93: '100' (ID: 1353)
  Prédit: '748'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.872441291809082
    2. '749' → logprob: -1.122441291809082
    3. '750' → logprob: -1.997441291809082
    4. '100' → logprob: -2.497441291809082
    5. '500' → logprob: -4.247441291809082
    6. '747' → logprob: -5.497441291809082
    7. '149' → logprob: -5.497441291809082
    8. '746' → logprob: -6.247441291809082
    9. '300' → logprob: -6.372441291809082
    10. '999' → logprob: -6.497441291809082

Token 94: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07186513394117355
    2. ' +' → logprob: -3.5718650817871094
    3. '+' → logprob: -3.9468650817871094
    4. '00' → logprob: -4.571865081787109
    5. ' ' → logprob: -5.321865081787109
    6. '000' → logprob: -5.946865081787109
    7. '<|end|>' → logprob: -7.196865081787109
    8. '1' → logprob: -7.196865081787109
    9. '   ' → logprob: -7.696865081787109
    10. ')' → logprob: -8.32186508178711

Token 95: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0812755823135376
    2. '   ' → logprob: -3.206275463104248
    3. '+' → logprob: -3.956275463104248
    4. '    
' → logprob: -5.081275463104248
    5. ' +' → logprob: -6.081275463104248
    6. ')' → logprob: -6.831275463104248
    7. '
' → logprob: -6.831275463104248
    8. ' 
' → logprob: -6.956275463104248
    9. '<|end|>' → logprob: -7.081275463104248
    10. '0' → logprob: -7.206275463104248

Token 96: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005352109204977751
    2. '+' → logprob: -5.505352020263672
    3. '
' → logprob: -8.005352020263672
    4. '   ' → logprob: -8.255352020263672
    5. '    
' → logprob: -8.755352020263672
    6. '\n' → logprob: -9.630352020263672
    7. '

' → logprob: -9.755352020263672
    8. '' → logprob: -9.880352020263672
    9. ' 
' → logprob: -9.880352020263672
    10. '#' → logprob: -10.380352020263672

Token 97: ' As' (ID: 1877)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1932210624217987
    2. '
' → logprob: -3.318221092224121
    3. '+' → logprob: -3.568221092224121
    4. ' 
' → logprob: -3.568221092224121
    5. '<|end|>' → logprob: -3.693221092224121
    6. '    ' → logprob: -4.943221092224121
    7. 'amount' → logprob: -5.068221092224121
    8. '  
' → logprob: -5.193221092224121
    9. '\n' → logprob: -5.443221092224121
    10. '\' → logprob: -5.443221092224121

Token 98: ' max' (ID: 2999)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0889936685562134
    2. ' ' → logprob: -1.3389936685562134
    3. ' a' → logprob: -1.7139936685562134
    4. '100' → logprob: -2.463993549346924
    5. ' an' → logprob: -3.963993549346924
    6. ' coins' → logprob: -3.963993549346924
    7. 'a' → logprob: -4.338993549346924
    8. 'the' → logprob: -4.713993549346924
    9. ' per' → logprob: -4.713993549346924
    10. ' P' → logprob: -4.713993549346924

Token 99: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45234784483909607
    2. '_' → logprob: -1.9523478746414185
    3. '   ' → logprob: -3.202347755432129
    4. '_amount' → logprob: -3.327347755432129
    5. 'amount' → logprob: -3.452347755432129
    6. '    ' → logprob: -3.827347755432129
    7. ' amount' → logprob: -3.952347755432129
    8. '  ' → logprob: -4.327347755432129
    9. '_possible' → logprob: -4.827347755432129
    10. '<|end|>' → logprob: -4.827347755432129

Token 100: ' coins' (ID: 28969)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.8749048113822937
    2. '_amount' → logprob: -1.1249048709869385
    3. 'change' → logprob: -2.3749048709869385
    4. '_price' → logprob: -3.3749048709869385
    5. '_change' → logprob: -3.4999048709869385
    6. ' amount' → logprob: -3.7499048709869385
    7. 'coin' → logprob: -4.499904632568359
    8. 'price' → logprob: -4.624904632568359
    9. 'possible' → logprob: -4.624904632568359
    10. ' change' → logprob: -4.749904632568359

Token 101: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12522366642951965
    2. ' +' → logprob: -2.5002236366271973
    3. '   ' → logprob: -3.7502236366271973
    4. ')' → logprob: -5.625223636627197
    5. '*' → logprob: -6.375223636627197
    6. '
' → logprob: -7.000223636627197
    7. ':' → logprob: -7.000223636627197
    8. ' ' → logprob: -7.125223636627197
    9. ' *' → logprob: -7.250223636627197
    10. '#' → logprob: -7.625223636627197

Token 102: ' max' (ID: 2999)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.1580338478088379
    2. ' ' → logprob: -2.408033847808838
    3. 'max' → logprob: -3.783033847808838
    4. 'coin' → logprob: -4.283033847808838
    5. ' coin' → logprob: -4.783033847808838
    6. ' max' → logprob: -5.283033847808838
    7. '100' → logprob: -5.658033847808838
    8. '50' → logprob: -6.408033847808838
    9. '5' → logprob: -8.28303337097168
    10. '10' → logprob: -8.53303337097168

Token 103: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.2305615395307541
    2. 'coin' → logprob: -1.8555614948272705
    3. 'value' → logprob: -3.6055614948272705
    4. ' value' → logprob: -4.23056173324585
    5. ' ' → logprob: -6.35556173324585
    6. '50' → logprob: -6.48056173324585
    7. '100' → logprob: -6.60556173324585
    8. '500' → logprob: -6.60556173324585
    9. '_value' → logprob: -7.98056173324585
    10. '_coin' → logprob: -8.105561256408691

Token 104: ' value' (ID: 1432)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.093147873878479
    2. 'value' → logprob: -1.343147873878479
    3. '_values' → logprob: -1.468147873878479
    4. ' value' → logprob: -2.2181477546691895
    5. '<|end|>' → logprob: -2.8431477546691895
    6. ' ' → logprob: -6.4681477546691895
    7. '100' → logprob: -6.9681477546691895
    8. 'values' → logprob: -7.0931477546691895
    9. '<|end|>' → logprob: -7.9681477546691895
    10. '   ' → logprob: -7.9681477546691895

Token 105: ' can' (ID: 665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4370124936103821
    2. '   ' → logprob: -1.1870124340057373
    3. 'dp' → logprob: -3.8120124340057373
    4. ')' → logprob: -4.812012672424316
    5. ':' → logprob: -5.312012672424316
    6. 'amount' → logprob: -5.937012672424316
    7. '    
' → logprob: -6.062012672424316
    8. '' → logprob: -6.687012672424316
    9. ' dp' → logprob: -7.437012672424316
    10. ',' → logprob: -7.437012672424316

Token 106: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.03750540688633919
    2. 'be' → logprob: -4.412505626678467
    3. ' exceed' → logprob: -4.537505626678467
    4. '<|end|>' → logprob: -5.412505626678467
    5. ' ' → logprob: -5.912505626678467
    6. '   ' → logprob: -6.162505626678467
    7. ' go' → logprob: -6.787505626678467
    8. ' reach' → logprob: -6.787505626678467
    9. ' range' → logprob: -7.537505626678467
    10. ' not' → logprob: -8.537505149841309

Token 107: ' large' (ID: 4410)
  Prédit: '600'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '600' → logprob: -0.22313697636127472
    2. '100' → logprob: -2.5981369018554688
    3. '500' → logprob: -2.5981369018554688
    4. ' ' → logprob: -3.4731369018554688
    5. '6' → logprob: -4.098136901855469
    6. '60' → logprob: -7.473136901855469
    7. '   ' → logprob: -7.598136901855469
    8. '50' → logprob: -7.723136901855469
    9. '10' → logprob: -7.723136901855469
    10. '300' → logprob: -8.348136901855469

Token 108: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32145026326179504
    2. 'dp' → logprob: -1.4464502334594727
    3. '
' → logprob: -3.9464502334594727
    4. 'DP' → logprob: -5.571450233459473
    5. ' dp' → logprob: -5.696450233459473
    6. 'amount' → logprob: -5.821450233459473
    7. '    
' → logprob: -6.071450233459473
    8. '<|end|>' → logprob: -6.946450233459473
    9. ' DP' → logprob: -7.196450233459473
    10. '    ' → logprob: -7.321450233459473

Token 109: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34618109464645386
    2. ' dp' → logprob: -1.5961811542510986
    3. 'dp' → logprob: -2.7211811542510986
    4. '    ' → logprob: -5.2211809158325195
    5. ' amount' → logprob: -5.8461809158325195
    6. 'amount' → logprob: -6.2211809158325195
    7. 'min' → logprob: -6.2211809158325195
    8. ' DP' → logprob: -6.4711809158325195
    9. '
' → logprob: -6.7211809158325195
    10. '    
' → logprob: -6.8461809158325195

Token 110: ' problem' (ID: 4792)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20835024118423462
    2. ' ' → logprob: -2.95835018157959
    3. '50' → logprob: -3.33335018157959
    4. ' we' → logprob: -3.83335018157959
    5. ' the' → logprob: -4.45835018157959
    6. '500' → logprob: -4.70835018157959
    7. '   ' → logprob: -4.70835018157959
    8. ' this' → logprob: -5.08335018157959
    9. 'we' → logprob: -5.33335018157959
    10. ' it' → logprob: -5.45835018157959

Token 111: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.39726290106773376
    2. ' constraints' → logprob: -1.5222629308700562
    3. 'specific' → logprob: -3.3972628116607666
    4. 'constraint' → logprob: -3.7722628116607666
    5. ' specifies' → logprob: -4.647263050079346
    6. 'requires' → logprob: -5.272263050079346
    7. 'limits' → logprob: -5.397263050079346
    8. '-specific' → logprob: -5.522263050079346
    9. 'spec' → logprob: -5.647263050079346
    10. 'description' → logprob: -6.397263050079346

Token 112: ' allow' (ID: 3763)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6123648285865784
    2. ' are' → logprob: -1.8623647689819336
    3. '<|end|>' → logprob: -1.9873647689819336
    4. ' may' → logprob: -3.4873647689819336
    5. '   ' → logprob: -3.7373647689819336
    6. ' allow' → logprob: -4.112364768981934
    7. ' suggest' → logprob: -4.737364768981934
    8. 'allow' → logprob: -4.987364768981934
    9. ' might' → logprob: -4.987364768981934
    10. ' will' → logprob: -4.987364768981934

Token 113: '
' (ID: 198)
  Prédit: ' us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' us' → logprob: -1.136728286743164
    2. ' for' → logprob: -1.261728286743164
    3. '100' → logprob: -1.761728286743164
    4. 'for' → logprob: -2.136728286743164
    5. 'us' → logprob: -4.011728286743164
    6. ' to' → logprob: -4.011728286743164
    7. 'max' → logprob: -4.136728286743164
    8. ' a' → logprob: -4.761728286743164
    9. 'to' → logprob: -5.136728286743164
    10. 'a' → logprob: -5.511728286743164

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004896196536719799
    2. '    
' → logprob: -6.50489616394043
    3. '
' → logprob: -6.75489616394043
    4. 'dp' → logprob: -7.00489616394043
    5. 'amount' → logprob: -8.00489616394043
    6. 'DP' → logprob: -9.12989616394043
    7. ')' → logprob: -9.25489616394043
    8. '    ' → logprob: -9.25489616394043
    9. '```' → logprob: -9.62989616394043
    10. 'change' → logprob: -9.87989616394043

Token 115: ' INF' (ID: 69196)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4562520384788513
    2. 'dp' → logprob: -1.206252098083496
    3. ' min' → logprob: -3.456252098083496
    4. 'min' → logprob: -4.956252098083496
    5. ' INF' → logprob: -4.956252098083496
    6. 'INF' (adapté à ' INF') → logprob: -5.081252098083496
    7. ' DP' → logprob: -6.081252098083496
    8. 'inf' → logprob: -6.206252098083496
    9. '   ' → logprob: -6.456252098083496
    10. ' minimal' → logprob: -6.956252098083496

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026317719370126724
    2. '=' → logprob: -3.651317834854126
    3. '=int' → logprob: -11.276317596435547
    4. '=float' → logprob: -13.276317596435547
    5. ')' → logprob: -13.401317596435547
    6. '＝' → logprob: -15.026317596435547
    7. ',' → logprob: -15.276317596435547
    8. '    ' → logprob: -15.901317596435547
    9. '   ' → logprob: -16.276317596435547
    10. ' =)' → logprob: -16.276317596435547

Token 117: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05849191173911095
    2. ' ' → logprob: -3.3084919452667236
    3. 'float' → logprob: -4.0584917068481445
    4. ' float' → logprob: -5.9334917068481445
    5. '100' → logprob: -8.308491706848145
    6. '1' → logprob: -9.933491706848145
    7. 'int' → logprob: -10.933491706848145
    8. '999' → logprob: -12.683491706848145
    9. ' ' → logprob: -13.808491706848145
    10. ' int' → logprob: -14.433491706848145

Token 118: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06208734214305878
    2. 'float' → logprob: -2.812087297439575
    3. '100' → logprob: -9.562087059020996
    4. '1' → logprob: -10.437087059020996
    5. 'int' → logprob: -11.562087059020996
    6. '999' → logprob: -11.937087059020996
    7. ' float' → logprob: -12.687087059020996
    8. ' ' → logprob: -14.562087059020996
    9. '123' → logprob: -16.062088012695312
    10. '200' → logprob: -17.187088012695312

Token 119: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008916025049984455
    2. '7' → logprob: -4.758915901184082
    3. '6' → logprob: -8.633915901184082
    4. '8' → logprob: -9.633915901184082
    5. '10' → logprob: -10.258915901184082
    6. '**' → logprob: -11.133915901184082
    7. '987' → logprob: -13.008915901184082
    8. '999' → logprob: -13.383915901184082
    9. '000' → logprob: -13.508915901184082
    10. '99' → logprob: -13.883915901184082

Token 120: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00018101456225849688
    2. '7' → logprob: -8.875181198120117
    3. '8' → logprob: -10.875181198120117
    4. '10' → logprob: -11.625181198120117
    5. '18' → logprob: -12.000181198120117
    6. '6' → logprob: -12.625181198120117
    7. '15' → logprob: -12.750181198120117
    8. '12' → logprob: -14.625181198120117
    9. '```' → logprob: -16.250181198120117
    10. '99' → logprob: -16.500181198120117

Token 121: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04478728026151657
    2. 'dp' → logprob: -3.5447871685028076
    3. 'coins' → logprob: -5.794787406921387
    4. '   ' → logprob: -5.794787406921387
    5. '    
' → logprob: -5.919787406921387
    6. 'dist' → logprob: -7.294787406921387
    7. 'min' → logprob: -7.419787406921387
    8. ' dp' → logprob: -7.544787406921387
    9. '  
' → logprob: -7.669787406921387
    10. 'coin' → logprob: -7.669787406921387

Token 122: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15869379043579102
    2. '   ' → logprob: -2.283693790435791
    3. ' dp' → logprob: -4.283693790435791
    4. '
' → logprob: -4.783693790435791
    5. 'dist' → logprob: -5.033693790435791
    6. '    
' → logprob: -5.283693790435791
    7. 'distance' → logprob: -6.408693790435791
    8. 'DP' → logprob: -6.783693790435791
    9. 'min' → logprob: -6.908693790435791
    10. '    ' → logprob: -7.158693790435791

Token 123: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006416686344891787
    2. 'min' → logprob: -5.2564167976379395
    3. ' dp' → logprob: -7.2564167976379395
    4. '   ' → logprob: -8.506416320800781
    5. 'DP' → logprob: -9.631416320800781
    6. 'dist' → logprob: -9.881416320800781
    7. 'd' → logprob: -11.131416320800781
    8. 'coin' → logprob: -11.256416320800781
    9. 'cost' → logprob: -11.256416320800781
    10. ' min' → logprob: -11.381416320800781

Token 124: ' Compute' (ID: 45438)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004246980883181095
    2. 'min' → logprob: -5.754247188568115
    3. ' dp' → logprob: -7.504247188568115
    4. 'DP' → logprob: -8.879246711730957
    5. 'dist' → logprob: -9.379246711730957
    6. '#' → logprob: -9.754246711730957
    7. 'from' → logprob: -10.129246711730957
    8. 'change' → logprob: -10.629246711730957
    9. 'memo' → logprob: -10.754246711730957
    10. ' min' → logprob: -11.004246711730957

Token 125: ' total' (ID: 3609)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5870718955993652
    2. 'dp' → logprob: -0.8370718955993652
    3. 'min' → logprob: -5.337071895599365
    4. ' min' → logprob: -5.462071895599365
    5. '   ' → logprob: -8.212072372436523
    6. ' coin' → logprob: -8.212072372436523
    7. ' minimal' → logprob: -8.462072372436523
    8. ' DP' → logprob: -8.712072372436523
    9. '_dp' → logprob: -8.837072372436523
    10. 'coin' → logprob: -9.087072372436523

Token 126: ' money' (ID: 3905)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.34841272234916687
    2. '_amount' → logprob: -2.3484127521514893
    3. '_value' → logprob: -2.4734127521514893
    4. ' =' → logprob: -3.2234127521514893
    5. '_change' → logprob: -3.4734127521514893
    6. '_sum' → logprob: -4.59841251373291
    7. '=' → logprob: -4.84841251373291
    8. 'coins' → logprob: -5.09841251373291
    9. '_payment' → logprob: -5.34841251373291
    10. '_coin' → logprob: -5.59841251373291

Token 127: ' he' (ID: 501)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6422181725502014
    2. ' =' → logprob: -0.7672181725502014
    3. 'total' → logprob: -5.267218112945557
    4. '   ' → logprob: -6.392218112945557
    5. '=sum' → logprob: -7.017218112945557
    6. '_total' → logprob: -7.642218112945557
    7. '_value' → logprob: -8.642218589782715
    8. 'value' → logprob: -8.767218589782715
    9. 'sum' → logprob: -9.017218589782715
    10. 'amount' → logprob: -9.017218589782715

Token 128: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7297400236129761
    2. ' has' → logprob: -1.854740023612976
    3. '_has' → logprob: -1.854740023612976
    4. 's' → logprob: -2.4797401428222656
    5. '_have' → logprob: -3.2297401428222656
    6. 'have' → logprob: -3.4797401428222656
    7. 'had' → logprob: -4.729740142822266
    8. ' =' → logprob: -4.854740142822266
    9. '=' → logprob: -5.229740142822266
    10. ' had' → logprob: -5.229740142822266

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7161896824836731
    2. 'total' → logprob: -0.7161896824836731
    3. ' total' → logprob: -4.216189861297607
    4. ' =' → logprob: -5.591189861297607
    5. '=' → logprob: -6.216189861297607
    6. '    
' → logprob: -7.466189861297607
    7. '	total' → logprob: -8.21618938446045
    8. 'money' → logprob: -8.71618938446045
    9. 'coins' → logprob: -8.84118938446045
    10. 'amount' → logprob: -8.84118938446045

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19923394918441772
    2. 'total' → logprob: -1.8242340087890625
    3. ' total' → logprob: -4.0742340087890625
    4. 'amount' → logprob: -7.8242340087890625
    5. '	total' → logprob: -8.699234008789062
    6. ' =' → logprob: -8.824234008789062
    7. '=' → logprob: -8.949234008789062
    8. ',' → logprob: -8.949234008789062
    9. 'money' → logprob: -8.949234008789062
    10. 'sum' → logprob: -9.199234008789062

Token 131: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.09117642790079117
    2. ' total' → logprob: -2.4661765098571777
    3. '   ' → logprob: -6.966176509857178
    4. 'money' → logprob: -7.966176509857178
    5. 'sum' → logprob: -8.34117603302002
    6. 'amount' → logprob: -8.46617603302002
    7. ' money' → logprob: -9.09117603302002
    8. 'S' → logprob: -10.21617603302002
    9. 'T' → logprob: -10.34117603302002
    10. ' amount' → logprob: -10.46617603302002

Token 132: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.8662897348403931
    2. '=' → logprob: -1.116289734840393
    3. ' =' → logprob: -1.616289734840393
    4. '_co' → logprob: -3.3662896156311035
    5. '_amount' → logprob: -4.7412896156311035
    6. '_value' → logprob: -4.7412896156311035
    7. '=sum' → logprob: -7.9912896156311035
    8. '_sum' → logprob: -8.116290092468262
    9. '_coin' → logprob: -8.616290092468262
    10. 'money' → logprob: -8.616290092468262

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575950026512146
    2. '=' → logprob: -0.825950026512146
    3. '=sum' → logprob: -11.575949668884277
    4. '   ' → logprob: -14.450949668884277
    5. ' ' → logprob: -15.325949668884277
    6. '=int' → logprob: -16.325950622558594
    7. '＝' → logprob: -16.575950622558594
    8. ',' → logprob: -16.950950622558594
    9. '  ' → logprob: -16.950950622558594
    10. ')' → logprob: -17.075950622558594

Token 134: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2014947235584259
    2. 'sum' → logprob: -1.7014946937561035
    3. '0' → logprob: -9.951495170593262
    4. '   ' → logprob: -10.576495170593262
    5. ' ' → logprob: -12.451495170593262
    6. '(sum' → logprob: -13.701495170593262
    7. '  ' → logprob: -14.076495170593262
    8. '	sum' → logprob: -14.076495170593262
    9. '[' → logprob: -15.076495170593262
    10. '=sum' → logprob: -15.076495170593262

Token 135: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.12575215101242065
    2. '(' → logprob: -2.6257522106170654
    3. '(p' → logprob: -4.000751972198486
    4. '([' → logprob: -4.500751972198486
    5. '(co' → logprob: -5.000751972198486
    6. '(x' → logprob: -5.000751972198486
    7. '(ci' → logprob: -6.625751972198486
    8. '(a' → logprob: -7.000751972198486
    9. '(i' → logprob: -7.500751972198486
    10. '(v' → logprob: -9.875752449035645

Token 136: '*v' (ID: 130438)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.43395674228668213
    2. '[' → logprob: -1.5589567422866821
    3. '[i' → logprob: -2.8089566230773926
    4. '[o' → logprob: -3.0589566230773926
    5. 'oin' → logprob: -4.308956623077393
    6. 'oints' → logprob: -5.058956623077393
    7. '[x' → logprob: -5.558956623077393
    8. '(o' → logprob: -6.183956623077393
    9. '[c' → logprob: -6.683956623077393
    10. 'coins' → logprob: -6.933956623077393

Token 137: ' for' (ID: 395)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.9043324589729309
    2. 'oin' → logprob: -1.5293323993682861
    3. 'for' → logprob: -1.7793323993682861
    4. ' for' → logprob: -2.029332399368286
    5. 'al' → logprob: -2.904332399368286
    6. 'coins' → logprob: -4.529332637786865
    7. 'alue' → logprob: -5.279332637786865
    8. 'coin' → logprob: -6.404332637786865
    9. 'oints' → logprob: -6.904332637786865
    10. 'in' → logprob: -7.654332637786865

Token 138: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004655830562114716
    2. ' c' → logprob: -5.379655838012695
    3. ',c' → logprob: -10.879655838012695
    4. '(c' → logprob: -11.754655838012695
    5. ',' → logprob: -12.379655838012695
    6. '	c' → logprob: -13.129655838012695
    7. 'v' → logprob: -13.254655838012695
    8. ' ' → logprob: -15.004655838012695
    9. '   ' → logprob: -15.879655838012695
    10. ')c' → logprob: -16.004655838012695

Token 139: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.06429775804281235
    2. ',' → logprob: -2.814297676086426
    3. ',c' → logprob: -6.064297676086426
    4. ' ,' → logprob: -13.314297676086426
    5. 'v' → logprob: -15.314297676086426
    6. ',w' → logprob: -15.314297676086426
    7. ',o' → logprob: -15.689297676086426
    8. ',_' → logprob: -15.689297676086426
    9. '_,' → logprob: -16.314298629760742
    10. ',e' → logprob: -16.439298629760742

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128295361995697
    2. 'in' → logprob: -2.2378294467926025
    3. ',' → logprob: -12.612829208374023
    4. ' ' → logprob: -13.737829208374023
    5. '<|end|>' → logprob: -14.237829208374023
    6. 's' → logprob: -14.612829208374023
    7. 'ine' → logprob: -15.237829208374023
    8. ')' → logprob: -15.612829208374023
    9. '  ' → logprob: -15.862829208374023
    10. 'i' → logprob: -15.862829208374023

Token 141: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.2519477903842926
    2. 'zip' → logprob: -1.5019477605819702
    3. '(zip' → logprob: -11.001947402954102
    4. 'zi' → logprob: -14.126947402954102
    5. '_zip' → logprob: -14.126947402954102
    6. 'z' → logprob: -14.876947402954102
    7. '.zip' → logprob: -15.501947402954102
    8. 'ze' → logprob: -18.2519474029541
    9. ' ' → logprob: -18.5019474029541
    10. 'ize' → logprob: -18.8769474029541

Token 142: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -5.097437315271236e-05
    2. '(' → logprob: -10.62505054473877
    3. 'coins' → logprob: -10.75005054473877
    4. '(coeff' → logprob: -13.12505054473877
    5. ' coins' → logprob: -13.62505054473877
    6. ')' → logprob: -13.75005054473877
    7. '(c' → logprob: -15.37505054473877
    8. ')(' → logprob: -16.125051498413086
    9. '(coords' → logprob: -16.250051498413086
    10. 'co' → logprob: -16.625051498413086

Token 143: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.000158842682139948
    2. 'coins' → logprob: -9.37515926361084
    3. 'in' → logprob: -9.75015926361084
    4. '```' → logprob: -12.37515926361084
    5. 'i' → logprob: -13.00015926361084
    6. '   ' → logprob: -13.37515926361084
    7. '[' → logprob: -14.12515926361084
    8. ' coins' → logprob: -14.37515926361084
    9. 'ints' → logprob: -14.37515926361084
    10. '_ins' → logprob: -14.50015926361084

Token 144: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005272957496345043
    2. '_values' → logprob: -7.750527381896973
    3. 's' → logprob: -10.000527381896973
    4. 'num' → logprob: -10.750527381896973
    5. '_nums' → logprob: -11.500527381896973
    6. 'values' → logprob: -12.250527381896973
    7. '_' → logprob: -13.000527381896973
    8. ')' → logprob: -13.125527381896973
    9. '_NUM' → logprob: -14.250527381896973
    10. '_vals' → logprob: -14.250527381896973

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005187747534364462
    2. ' ,' → logprob: -5.380187511444092
    3. '(' → logprob: -8.00518798828125
    4. 'coin' → logprob: -8.50518798828125
    5. ' coin' → logprob: -10.88018798828125
    6. '   ' → logprob: -12.63018798828125
    7. ')' → logprob: -13.13018798828125
    8. '
' → logprob: -13.38018798828125
    9. '),' → logprob: -14.00518798828125
    10. '```' → logprob: -14.38018798828125

Token 146: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.038043100386857986
    2. ' coin' → logprob: -3.2880430221557617
    3. 'coins' → logprob: -14.663043022155762
    4. '_coin' → logprob: -15.163043022155762
    5. '.coin' → logprob: -15.288043022155762
    6. '   ' → logprob: -15.288043022155762
    7. 'co' → logprob: -15.663043022155762
    8. ' ' → logprob: -16.413043975830078
    9. 'Coin' → logprob: -16.663043975830078
    10. ')' → logprob: -16.913043975830078

Token 147: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.3856492842023727e-06
    2. 'values' → logprob: -14.000000953674316
    3. '_' → logprob: -14.875000953674316
    4. '_VALUES' → logprob: -16.625001907348633
    5. '_value' → logprob: -17.375001907348633
    6. ' values' → logprob: -18.500001907348633
    7. '_val' → logprob: -18.625001907348633
    8. '_vals' → logprob: -18.875001907348633
    9. 's' → logprob: -19.125001907348633
    10. 'Values' → logprob: -19.250001907348633

Token 148: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.297462171758525e-05
    2. ')' → logprob: -11.000033378601074
    3. '))
' → logprob: -11.500033378601074
    4. ' ))' → logprob: -12.375033378601074
    5. ')))' → logprob: -14.250033378601074
    6. ')),' → logprob: -14.750033378601074
    7. ' ' → logprob: -15.875033378601074
    8. '))

' → logprob: -15.875033378601074
    9. '()))' → logprob: -16.125032424926758
    10. ')).' → logprob: -16.250032424926758

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07505476474761963
    2. 'change' → logprob: -3.57505464553833
    3. '
' → logprob: -4.20005464553833
    4. '    
' → logprob: -4.45005464553833
    5. ' change' → logprob: -4.45005464553833
    6. '    ' → logprob: -6.32505464553833
    7. ')' → logprob: -6.95005464553833
    8. '<|end|>' → logprob: -7.57505464553833
    9. '```' → logprob: -8.325055122375488
    10. '_change' → logprob: -8.325055122375488

Token 150: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.2861488461494446
    2. 'dp' → logprob: -2.6611487865448
    3. ' change' → logprob: -2.6611487865448
    4. '   ' → logprob: -2.7861487865448
    5. ' dp' → logprob: -4.161149024963379
    6. 'if' → logprob: -5.536149024963379
    7. 'min' → logprob: -5.661149024963379
    8. ' if' → logprob: -5.661149024963379
    9. 'for' → logprob: -6.286149024963379
    10. ' for' → logprob: -6.286149024963379

Token 151: '_max' (ID: 13731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22248083353042603
    2. '_needed' → logprob: -2.3474807739257812
    3. '=' → logprob: -2.7224807739257812
    4. '_amount' → logprob: -3.4724807739257812
    5. '_required' → logprob: -5.472480773925781
    6. '_to' → logprob: -6.472480773925781
    7. '_' → logprob: -7.347480773925781
    8. '_num' → logprob: -8.722480773925781
    9. '_value' → logprob: -9.472480773925781
    10. '_amt' → logprob: -9.597480773925781

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017027586698532
    2. ' =' → logprob: -1.7017027139663696
    3. '_' → logprob: -8.576703071594238
    4. '_amount' → logprob: -10.826703071594238
    5. '_=' → logprob: -11.076703071594238
    6. 'ed' → logprob: -11.451703071594238
    7. '=int' → logprob: -11.701703071594238
    8. '=_' → logprob: -11.826703071594238
    9. 'd' → logprob: -12.076703071594238
    10. 'imum' → logprob: -12.076703071594238

Token 153: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.616331934928894
    2. ' total' → logprob: -0.866331934928894
    3. ' max' → logprob: -4.616332054138184
    4. 'max' → logprob: -4.991332054138184
    5. ' P' → logprob: -5.116332054138184
    6. '500' → logprob: -5.241332054138184
    7. ' ' → logprob: -5.241332054138184
    8. '100' → logprob: -5.991332054138184
    9. 'P' → logprob: -6.616332054138184
    10. ' min' → logprob: -7.866332054138184

Token 154: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.00017755765293259174
    2. '_amount' → logprob: -9.375177383422852
    3. 'money' → logprob: -9.500177383422852
    4. 'Money' → logprob: -11.500177383422852
    5. '-money' → logprob: -13.375177383422852
    6. '_' → logprob: -13.625177383422852
    7. '_max' → logprob: -14.000177383422852
    8. 'amount' → logprob: -14.125177383422852
    9. ' money' → logprob: -14.875177383422852
    10. '_m' → logprob: -15.125177383422852

Token 155: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07002991437911987
    2. ' +' → logprob: -2.9450299739837646
    3. ' -' → logprob: -5.0700297355651855
    4. '-' → logprob: -5.6950297355651855
    5. '
' → logprob: -5.9450297355651855
    6. '   ' → logprob: -6.3200297355651855
    7. '+
' → logprob: -8.445030212402344
    8. '<|end|>' → logprob: -8.945030212402344
    9. '-P' → logprob: -9.320030212402344
    10. '*' → logprob: -9.945030212402344

Token 156: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.02991223894059658
    2. ' P' → logprob: -3.529912233352661
    3. '100' → logprob: -9.279911994934082
    4. ' ' → logprob: -10.654911994934082
    5. '   ' → logprob: -11.029911994934082
    6. '	P' → logprob: -11.404911994934082
    7. '50' → logprob: -12.029911994934082
    8. '(P' → logprob: -12.404911994934082
    9. '500' → logprob: -13.154911994934082
    10. '  ' → logprob: -13.654911994934082

Token 157: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44258570671081543
    2. ' dp' → logprob: -1.4425857067108154
    3. '   ' → logprob: -2.3175857067108154
    4. '    
' → logprob: -5.3175859451293945
    5. 'DP' → logprob: -5.5675859451293945
    6. 'min' → logprob: -6.1925859451293945
    7. ' DP' → logprob: -6.1925859451293945
    8. '
' → logprob: -6.6925859451293945
    9. '	dp' → logprob: -6.8175859451293945
    10. ' min' → logprob: -7.1925859451293945

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7406956553459167
    2. 'dp' → logprob: -0.7406956553459167
    3. ' dp' → logprob: -3.2406957149505615
    4. '    
' → logprob: -5.990695476531982
    5. '
' → logprob: -6.865695476531982
    6. '	dp' → logprob: -7.240695476531982
    7. 'DP' → logprob: -7.240695476531982
    8. 'min' → logprob: -7.240695476531982
    9. 'dist' → logprob: -8.24069595336914
    10. ' DP' → logprob: -8.61569595336914

Token 159: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0069417450577020645
    2. ' dp' → logprob: -5.756941795349121
    3. 'min' → logprob: -6.506941795349121
    4. '   ' → logprob: -7.131941795349121
    5. 'if' → logprob: -8.006941795349121
    6. 'DP' → logprob: -8.006941795349121
    7. '#' (adapté à ' #') → logprob: -9.256941795349121
    8. 'change' → logprob: -9.506941795349121
    9. 'for' → logprob: -9.881941795349121
    10. 'coin' → logprob: -9.881941795349121

Token 160: ' Prepare' (ID: 49102)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005310961976647377
    2. ' dp' → logprob: -6.255311012268066
    3. 'min' → logprob: -6.505311012268066
    4. '#' → logprob: -7.505311012268066
    5. 'change' → logprob: -8.505311012268066
    6. 'DP' → logprob: -8.505311012268066
    7. 'for' → logprob: -8.505311012268066
    8. 'from' → logprob: -8.630311012268066
    9. 'dist' → logprob: -9.255311012268066
    10. 'def' → logprob: -9.630311012268066

Token 161: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001817386015318334
    2. ' dp' → logprob: -6.376817226409912
    3. 'min' → logprob: -9.75181770324707
    4. 'DP' → logprob: -10.75181770324707
    5. '```' → logprob: -11.00181770324707
    6. ' DP' → logprob: -13.00181770324707
    7. '	dp' → logprob: -13.00181770324707
    8. 'change' → logprob: -13.12681770324707
    9. 'cost' → logprob: -13.37681770324707
    10. 'coin' → logprob: -13.50181770324707

Token 162: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.01700967736542225
    2. 'coins' → logprob: -4.642009735107422
    3. '_change' → logprob: -5.767009735107422
    4. '_coin' → logprob: -6.517009735107422
    5. 'Coins' → logprob: -7.142009735107422
    6. '_counts' → logprob: -7.767009735107422
    7. ' coins' → logprob: -8.017009735107422
    8. '_' → logprob: -8.267009735107422
    9. '_num' → logprob: -8.642009735107422
    10. 'coin' → logprob: -8.892009735107422

Token 163: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2591589689254761
    2. '_needed' → logprob: -2.1341590881347656
    3. '=' → logprob: -2.7591590881347656
    4. '_required' → logprob: -4.009159088134766
    5. 'needed' → logprob: -5.134159088134766
    6. 'for' → logprob: -5.259159088134766
    7. '_for' → logprob: -5.634159088134766
    8. '=[' → logprob: -6.259159088134766
    9. '   ' → logprob: -6.384159088134766
    10. '_count' → logprob: -6.509159088134766

Token 164: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -1.1259946823120117
    2. ' amount' → logprob: -1.6259946823120117
    3. 'amount' → logprob: -2.0009946823120117
    4. ' all' → logprob: -2.0009946823120117
    5. 'change' → logprob: -2.2509946823120117
    6. ' range' → logprob: -3.6259946823120117
    7. ' amounts' → logprob: -3.6259946823120117
    8. 'range' → logprob: -4.250994682312012
    9. 'all' → logprob: -4.250994682312012
    10. '_amount' → logprob: -5.250994682312012

Token 165: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5614349842071533
    2. ' =' → logprob: -1.6864349842071533
    3. 'min' → logprob: -2.1864349842071533
    4. ' dp' → logprob: -3.0614349842071533
    5. '   ' → logprob: -3.3114349842071533
    6. '_min' → logprob: -4.186434745788574
    7. '_dp' → logprob: -4.311434745788574
    8. '=' → logprob: -5.686434745788574
    9. 'change' → logprob: -5.811434745788574
    10. ' min' → logprob: -5.936434745788574

Token 166: 'gre' (ID: 9174)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9343873262405396
    2. ')' → logprob: -1.6843873262405396
    3. 'min' → logprob: -2.05938720703125
    4. '[' → logprob: -2.18438720703125
    5. ' [' → logprob: -2.80938720703125
    6. ' dp' → logprob: -2.93438720703125
    7. '[min' → logprob: -3.43438720703125
    8. 'change' → logprob: -4.18438720703125
    9. ' min' → logprob: -4.80938720703125
    10. ' )' → logprob: -6.05938720703125

Token 167: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -0.12957549095153809
    2. 'ater' → logprob: -3.504575490951538
    3. 'dy' → logprob: -3.629575490951538
    4. 'atest' → logprob: -3.754575490951538
    5. 'test' → logprob: -3.879575490951538
    6. 'd' → logprob: -4.754575729370117
    7. 'at' → logprob: -6.004575729370117
    8. 'ed' → logprob: -6.254575729370117
    9. 'dp' → logprob: -6.504575729370117
    10. 'atly' → logprob: -6.629575729370117

Token 168: ' works' (ID: 5882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06841809302568436
    2. ' )' → logprob: -4.193418025970459
    3. 'coins' → logprob: -4.568418025970459
    4. ' approach' → logprob: -5.193418025970459
    5. 'coin' → logprob: -5.443418025970459
    6. '   ' → logprob: -5.443418025970459
    7. ' coins' → logprob: -5.568418025970459
    8. 'change' → logprob: -5.693418025970459
    9. ' and' → logprob: -5.818418025970459
    10. ' amounts' → logprob: -5.943418025970459

Token 169: ' since' (ID: 3630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.136895775794983
    2. ' for' → logprob: -1.261895775794983
    3. ')' → logprob: -1.761895775794983
    4. ' here' → logprob: -2.7618956565856934
    5. ' well' → logprob: -3.2618956565856934
    6. ' because' → logprob: -3.5118956565856934
    7. ' perfectly' → logprob: -3.7618956565856934
    8. ' correctly' → logprob: -4.011895656585693
    9. 'because' → logprob: -4.511895656585693
    10. 'well' → logprob: -4.636895656585693

Token 170: ' coins' (ID: 28969)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.014282092452049255
    2. ' coin' → logprob: -4.5142822265625
    3. 'coins' → logprob: -6.2642822265625
    4. 'the' → logprob: -7.7642822265625
    5. 'Japanese' → logprob: -8.6392822265625
    6. '   ' → logprob: -9.0142822265625
    7. '[' → logprob: -9.1392822265625
    8. '100' → logprob: -9.7642822265625
    9. ' the' → logprob: -9.8892822265625
    10. '500' → logprob: -10.1392822265625

Token 171: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.37531182169914246
    2. 'are' → logprob: -1.8753118515014648
    3. '=' → logprob: -2.875311851501465
    4. '=[' → logprob: -3.125311851501465
    5. '<|end|>' → logprob: -4.375311851501465
    6. '[' → logprob: -4.750311851501465
    7. '_values' → logprob: -4.750311851501465
    8. 'have' → logprob: -5.000311851501465
    9. 'values' → logprob: -5.125311851501465
    10. ' have' → logprob: -5.125311851501465

Token 172: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.011112547479569912
    2. ' canonical' → logprob: -4.761112689971924
    3. 'standard' → logprob: -6.136112689971924
    4. 'canon' → logprob: -8.386112213134766
    5. 'in' → logprob: -10.386112213134766
    6. '1' → logprob: -11.136112213134766
    7. '[' → logprob: -11.386112213134766
    8. ' standard' → logprob: -11.636112213134766
    9. 'sorted' → logprob: -12.136112213134766
    10. '   ' → logprob: -12.636112213134766

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027226705104112625
    2. 'coin' → logprob: -4.40222692489624
    3. ' )' → logprob: -5.15222692489624
    4. ' coin' → logprob: -5.27722692489624
    5. 'coins' → logprob: -6.77722692489624
    6. ' system' → logprob: -7.15222692489624
    7. ' coins' → logprob: -7.27722692489624
    8. 'system' → logprob: -7.90222692489624
    9. ')
' → logprob: -8.777226448059082
    10. '）' → logprob: -8.902226448059082

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6366109251976013
    2. 'min' → logprob: -1.636610984802246
    3. 'dp' → logprob: -1.886610984802246
    4. ' dp' → logprob: -3.011610984802246
    5. ' min' → logprob: -3.261610984802246
    6. ' minimal' → logprob: -4.261610984802246
    7. 'minimal' → logprob: -4.261610984802246
    8. 'change' → logprob: -5.761610984802246
    9. ')' → logprob: -5.886610984802246
    10. ' change' → logprob: -7.886610984802246

Token 175: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23992207646369934
    2. 'dp' → logprob: -1.614922046661377
    3. 'minimal' → logprob: -5.239922046661377
    4. 'change' → logprob: -5.739922046661377
    5. ' min' → logprob: -5.739922046661377
    6. '   ' → logprob: -7.114922046661377
    7. ' dp' → logprob: -7.614922046661377
    8. 'max' → logprob: -8.614922523498535
    9. ' minimal' → logprob: -8.864922523498535
    10. 'coin' → logprob: -8.864922523498535

Token 176: ' So' (ID: 2632)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1794271618127823
    2. 'dp' → logprob: -1.929427146911621
    3. ' min' → logprob: -4.679427146911621
    4. 'minimal' → logprob: -5.179427146911621
    5. 'change' → logprob: -6.554427146911621
    6. ' dp' → logprob: -7.429427146911621
    7. 'coin' → logprob: -7.679427146911621
    8. '   ' → logprob: -8.179427146911621
    9. ' minimal' → logprob: -8.304427146911621
    10. 'mint' → logprob: -8.804427146911621

Token 177: ' for' (ID: 395)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.044901967048645
    2. '   ' → logprob: -1.669901967048645
    3. ' minimal' → logprob: -1.919901967048645
    4. ' min' → logprob: -2.2949018478393555
    5. ' dp' → logprob: -2.6699018478393555
    6. 'dp' → logprob: -2.6699018478393555
    7. 'minimal' → logprob: -4.1699018478393555
    8. ' coin' → logprob: -4.6699018478393555
    9. 'change' → logprob: -4.6699018478393555
    10. ' change' → logprob: -5.2949018478393555

Token 178: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.8046507835388184
    2. 'amount' → logprob: -1.4296507835388184
    3. ' change' → logprob: -2.4296507835388184
    4. 'amt' → logprob: -2.5546507835388184
    5. ' amount' → logprob: -2.6796507835388184
    6. 'i' → logprob: -3.8046507835388184
    7. ' amt' → logprob: -4.054650783538818
    8. 'c' → logprob: -4.929650783538818
    9. 'coin' → logprob: -5.054650783538818
    10. ' i' → logprob: -5.554650783538818

Token 179: ',' (ID: 11)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.8428113460540771
    2. ' =' → logprob: -1.2178113460540771
    3. '=' → logprob: -1.9678113460540771
    4. '_needed' → logprob: -3.092811346054077
    5. ',' → logprob: -3.467811346054077
    6. 'amount' → logprob: -4.842811584472656
    7. '_amt' → logprob: -5.217811584472656
    8. '_co' → logprob: -5.342811584472656
    9. '_' → logprob: -5.467811584472656
    10. '_values' → logprob: -5.592811584472656

Token 180: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8004817962646484
    2. 'dp' → logprob: -1.0504817962646484
    3. 'change' → logprob: -2.0504817962646484
    4. 'def' → logprob: -3.8004817962646484
    5. ' min' → logprob: -4.550481796264648
    6. 'minimal' → logprob: -4.550481796264648
    7. '#' → logprob: -5.175481796264648
    8. ' dp' → logprob: -5.425481796264648
    9. '   ' → logprob: -5.925481796264648
    10. 'coin' → logprob: -6.050481796264648

Token 181: ' number' (ID: 2086)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.02383267506957054
    2. 'coins' → logprob: -4.27383279800415
    3. '_change' → logprob: -4.89883279800415
    4. 'Coins' → logprob: -7.52383279800415
    5. '_counts' → logprob: -8.023832321166992
    6. 'change' → logprob: -8.148832321166992
    7. ' =' → logprob: -8.273832321166992
    8. '_coin' → logprob: -8.398832321166992
    9. '_count' → logprob: -9.398832321166992
    10. '=' → logprob: -9.523832321166992

Token 182: ' of' (ID: 328)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.7198631167411804
    2. '_of' → logprob: -1.7198631763458252
    3. 'coins' → logprob: -1.9698631763458252
    4. 'of' → logprob: -2.594863176345825
    5. '=' → logprob: -2.719863176345825
    6. ' =' → logprob: -3.469863176345825
    7. '   ' → logprob: -5.344862937927246
    8. 's' → logprob: -5.469862937927246
    9. '_' → logprob: -5.594862937927246
    10. ' of' → logprob: -6.219862937927246

Token 183: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.049272552132606506
    2. ' coins' → logprob: -3.0492725372314453
    3. 'coin' → logprob: -7.549272537231445
    4. ' coin' → logprob: -9.174272537231445
    5. 'co' → logprob: -11.549272537231445
    6. ' ' → logprob: -11.674272537231445
    7. 'change' → logprob: -12.049272537231445
    8. 'Coins' → logprob: -12.486772537231445
    9. '_co' → logprob: -12.486772537231445
    10. '```' → logprob: -12.861772537231445

Token 184: ' returned' (ID: 10508)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4146382510662079
    2. ' =' → logprob: -1.1646382808685303
    3. ' is' → logprob: -5.289638042449951
    4. 'needed' → logprob: -5.414638042449951
    5. '=[' → logprob: -5.539638042449951
    6. 'for' → logprob: -5.664638042449951
    7. '=[]' → logprob: -6.414638042449951
    8. 'is' → logprob: -6.664638042449951
    9. 'def' → logprob: -6.789638042449951
    10. '_needed' → logprob: -6.789638042449951

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4716469347476959
    2. '=' → logprob: -1.7216469049453735
    3. 'change' → logprob: -2.471647024154663
    4. 'coins' → logprob: -3.721647024154663
    5. 'min' → logprob: -3.846647024154663
    6. 'dp' → logprob: -4.471646785736084
    7. '_change' → logprob: -4.596646785736084
    8. 'needed' → logprob: -4.846646785736084
    9. 'for' → logprob: -5.096646785736084
    10. '_min' → logprob: -5.471646785736084

Token 186: ' greedy' (ID: 107110)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.20301328599452972
    2. '0' → logprob: -2.0780131816864014
    3. '(change' → logprob: -3.7030131816864014
    4. 'sum' → logprob: -4.8280134201049805
    5. '[]' → logprob: -5.0780134201049805
    6. '[' → logprob: -5.4530134201049805
    7. 'lambda' → logprob: -5.5780134201049805
    8. 'max' → logprob: -5.8280134201049805
    9. 'def' → logprob: -5.9530134201049805
    10. '(lambda' → logprob: -6.9530134201049805

Token 187: ' algorithm' (ID: 22184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.679843783378601
    2. 'coins' → logprob: -1.679843783378601
    3. '
' → logprob: -2.1798439025878906
    4. 'change' → logprob: -2.3048439025878906
    5. '_change' → logprob: -3.0548439025878906
    6. '_co' → logprob: -3.3048439025878906
    7. 'count' → logprob: -3.3048439025878906
    8. '_' → logprob: -3.3048439025878906
    9. '   ' → logprob: -3.6798439025878906
    10. ' =' → logprob: -3.6798439025878906

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06701717525720596
    2. 'def' → logprob: -4.192017078399658
    3. '    
' → logprob: -4.192017078399658
    4. '
' → logprob: -4.317017078399658
    5. 'change' → logprob: -4.692017078399658
    6. 'dp' → logprob: -6.067017078399658
    7. ' change' → logprob: -6.567017078399658
    8. '    ' → logprob: -6.692017078399658
    9. 'coins' → logprob: -7.317017078399658
    10. 'min' → logprob: -7.692017078399658

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.090213343501091
    2. '    
' → logprob: -2.9652132987976074
    3. '
' → logprob: -4.090213298797607
    4. 'def' → logprob: -4.590213298797607
    5. 'change' → logprob: -6.340213298797607
    6. '    ' → logprob: -6.340213298797607
    7. ' 
' → logprob: -7.465213298797607
    8. ' change' → logprob: -8.340213775634766
    9. '        
' → logprob: -8.590213775634766
    10. 'n' → logprob: -8.590213775634766

Token 190: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9437679052352905
    2. 'def' (adapté à ' def') → logprob: -0.9437679052352905
    3. 'change' → logprob: -2.69376802444458
    4. 'min' → logprob: -3.19376802444458
    5. 'dp' → logprob: -3.31876802444458
    6. ' for' → logprob: -4.94376802444458
    7. 'minimal' → logprob: -4.94376802444458
    8. '    
' → logprob: -5.06876802444458
    9. ' change' → logprob: -5.19376802444458
    10. 'for' → logprob: -5.31876802444458

Token 191: ' min' (ID: 1349)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.19662287831306458
    2. ' get' → logprob: -3.071622848510742
    3. ' make' → logprob: -3.196622848510742
    4. ' greedy' → logprob: -3.446622848510742
    5. ' min' → logprob: -3.571622848510742
    6. ' coin' → logprob: -4.821622848510742
    7. 'minimal' → logprob: -5.071622848510742
    8. ' change' → logprob: -5.571622848510742
    9. 'min' → logprob: -5.821622848510742
    10. 'make' → logprob: -6.196622848510742

Token 192: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.22901161015033722
    2. '_change' → logprob: -1.6040116548538208
    3. '_coin' → logprob: -5.979011535644531
    4. '_' → logprob: -7.979011535644531
    5. '_changes' → logprob: -8.354011535644531
    6. 'coins' → logprob: -8.354011535644531
    7. 'change' → logprob: -9.104011535644531
    8. '_num' → logprob: -9.854011535644531
    9. 'Coins' → logprob: -11.229011535644531
    10. 'coin' → logprob: -11.604011535644531

Token 193: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.5210027694702148
    2. 'unt' → logprob: -1.3960027694702148
    3. 'in' → logprob: -1.8960027694702148
    4. 'unts' → logprob: -5.021002769470215
    5. 'de' → logprob: -8.271002769470215
    6. 'int' → logprob: -8.521002769470215
    7. 'unter' → logprob: -8.646002769470215
    8. 'm' → logprob: -8.771002769470215
    9. 'un' → logprob: -9.271002769470215
    10. 'i' → logprob: -9.271002769470215

Token 194: '_change' (ID: 36082)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.01325987372547388
    2. '(change' → logprob: -4.5132598876953125
    3. '_change' → logprob: -7.0132598876953125
    4. '(n' → logprob: -7.5132598876953125
    5. '(value' → logprob: -8.138259887695312
    6. '(' → logprob: -9.013259887695312
    7. 'change' → logprob: -9.513259887695312
    8. ' (' → logprob: -9.513259887695312
    9. '_amount' → logprob: -9.638259887695312
    10. 'amount' → logprob: -10.138259887695312

Token 195: '(x' (ID: 4061)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.018593525514006615
    2. '(change' → logprob: -4.0185933113098145
    3. '(' → logprob: -8.018593788146973
    4. ' (' → logprob: -9.768593788146973
    5. '(m' → logprob: -10.893593788146973
    6. '(value' → logprob: -11.518593788146973
    7. '(am' → logprob: -11.893593788146973
    8. '(n' → logprob: -12.268593788146973
    9. '(co' → logprob: -12.893593788146973
    10. '(x' → logprob: -12.893593788146973

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00110425625462085
    2. '):
' → logprob: -7.251104354858398
    3. ' ):' → logprob: -8.501104354858398
    4. ')' → logprob: -8.626104354858398
    5. ':' → logprob: -11.876104354858398
    6. '):
' → logprob: -13.126104354858398
    7. '   ' → logprob: -13.876104354858398
    8. ' )' → logprob: -14.501104354858398
    9. '):

' → logprob: -15.376104354858398
    10. ' ' → logprob: -15.626104354858398

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16674073040485382
    2. '   ' → logprob: -2.041740655899048
    3. ':' → logprob: -3.791740655899048
    4. '    ' → logprob: -7.791740894317627
    5. ',' → logprob: -8.541740417480469
    6. '):' → logprob: -8.916740417480469
    7. ':
' → logprob: -9.041740417480469
    8. '    
' → logprob: -9.291740417480469
    9. '     ' → logprob: -9.916740417480469
    10. '      ' → logprob: -10.416740417480469

Token 198: ' remain' (ID: 12760)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.590370237827301
    2. '   ' → logprob: -1.7153701782226562
    3. 'count' → logprob: -2.0903701782226562
    4. 'cnt' → logprob: -2.5903701782226562
    5. 'coins' → logprob: -3.4653701782226562
    6. ' res' → logprob: -4.215370178222656
    7. ' cnt' → logprob: -4.965370178222656
    8. ' coins' → logprob: -5.715370178222656
    9. ' count' → logprob: -5.965370178222656
    10. 'ans' → logprob: -6.090370178222656

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47609856724739075
    2. '=' → logprob: -0.9760985374450684
    3. 't' → logprob: -6.976098537445068
    4. '   ' → logprob: -7.351098537445068
    5. '  ' → logprob: -9.226099014282227
    6. ' ' → logprob: -9.351099014282227
    7. '=int' → logprob: -9.476099014282227
    8. 'ining' → logprob: -10.476099014282227
    9. 'aining' → logprob: -10.726099014282227
    10. ')' → logprob: -11.351099014282227

Token 200: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014164329506456852
    2. ' x' → logprob: -4.264164447784424
    3. '	x' → logprob: -14.514163970947266
    4. ' ' → logprob: -16.014163970947266
    5. '   ' → logprob: -16.514163970947266
    6. '0' → logprob: -16.764163970947266
    7. 'change' → logprob: -17.514163970947266
    8. 'int' → logprob: -17.764163970947266
    9. '100' → logprob: -18.014163970947266
    10. '>x' → logprob: -18.264163970947266

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004096804652363062
    2. '
' → logprob: -6.629096984863281
    3. '  
' → logprob: -7.254096984863281
    4. '       ' → logprob: -7.754096984863281
    5. '=' → logprob: -8.254096984863281
    6. ' 
' → logprob: -8.379096984863281
    7. 'coins' → logprob: -8.629096984863281
    8. '    
' → logprob: -8.879096984863281
    9. 'for' → logprob: -9.129096984863281
    10. ',' → logprob: -9.129096984863281

Token 202: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9142214059829712
    2. '       ' → logprob: -1.2892214059829712
    3. ' count' → logprob: -2.2892212867736816
    4. '   ' → logprob: -3.0392212867736816
    5. 'res' → logprob: -3.1642212867736816
    6. 'cnt' → logprob: -3.4142212867736816
    7. ' res' → logprob: -3.9142212867736816
    8. 'result' → logprob: -3.9142212867736816
    9. ' cnt' → logprob: -4.414221286773682
    10. ' coins' → logprob: -4.664221286773682

Token 203: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.37083083391189575
    2. 'cnt' (adapté à ' cnt') → logprob: -1.620830774307251
    3. 'res' → logprob: -2.620830774307251
    4. ' count' → logprob: -3.620830774307251
    5. ' cnt' → logprob: -4.87083101272583
    6. ' res' → logprob: -5.87083101272583
    7. 'ans' → logprob: -7.37083101272583
    8. 'coins' → logprob: -7.62083101272583
    9. 'ret' → logprob: -7.74583101272583
    10. 'result' → logprob: -7.99583101272583

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968810856342316
    2. ' =' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.186968803405762
    4. '   ' → logprob: -15.686968803405762
    5. 's' → logprob: -16.186969757080078
    6. 'total' → logprob: -16.436969757080078
    7. ',' → logprob: -16.436969757080078
    8. '=[]' → logprob: -17.061969757080078
    9. ')' → logprob: -17.436969757080078
    10. '  ' → logprob: -17.561969757080078

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. '[' → logprob: -19.250123977661133
    5. '۰' → logprob: -19.312623977661133
    6. '  ' → logprob: -20.250123977661133
    7. ' ' → logprob: -20.312623977661133
    8. '000' → logprob: -20.625123977661133
    9. '０' → logprob: -20.875123977661133
    10. '=' → logprob: -20.937623977661133

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '[' → logprob: -19.75
    4. '000' → logprob: -21.625
    5. '۰' → logprob: -21.875
    6. '00' → logprob: -22.75
    7. '[]' → logprob: -23.25
    8. '   ' → logprob: -23.25
    9. '=' → logprob: -23.375
    10. '０' → logprob: -23.375

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2366952896118164
    2. '       ' → logprob: -1.7366952896118164
    3. ' for' → logprob: -3.8616952896118164
    4. 'for' → logprob: -5.861695289611816
    5. '   ' → logprob: -6.111695289611816
    6. '    
' → logprob: -6.486695289611816
    7. '        
' → logprob: -6.486695289611816
    8. '  
' → logprob: -6.486695289611816
    9. ' 
' → logprob: -6.736695289611816
    10. '	for' → logprob: -7.611695289611816

Token 208: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1174213886260986
    2. '       ' → logprob: -1.1174213886260986
    3. ' for' → logprob: -1.3674213886260986
    4. '   ' → logprob: -2.9924213886260986
    5. 'for' → logprob: -3.7424213886260986
    6. '	for' → logprob: -5.4924211502075195
    7. '    
' → logprob: -5.8674211502075195
    8. '<|end|>' → logprob: -6.4924211502075195
    9. ')' → logprob: -6.6174211502075195
    10. ':' → logprob: -6.7424211502075195

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043221889063715935
    2. ' for' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.500432014465332
    4. '	for' → logprob: -16.37543296813965
    5. '       ' → logprob: -18.00043296813965
    6. 'idx' → logprob: -19.75043296813965
    7. ' ' → logprob: -20.12543296813965
    8. '
' → logprob: -20.37543296813965
    9. '    ' → logprob: -20.75043296813965
    10. '    
' → logprob: -20.87543296813965

Token 210: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07658135890960693
    2. 'v' → logprob: -2.7015814781188965
    3. ' c' → logprob: -5.7015814781188965
    4. ' coin' → logprob: -5.9515814781188965
    5. 'coin' → logprob: -8.076581001281738
    6. 'c' → logprob: -8.826581001281738
    7. ' val' → logprob: -9.326581001281738
    8. ' value' → logprob: -10.201581001281738
    9. ' cv' → logprob: -10.451581001281738
    10. ' i' → logprob: -10.576581001281738

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20149296522140503
    2. 'in' → logprob: -1.7014930248260498
    3. ' ' → logprob: -9.951493263244629
    4. '	in' → logprob: -11.701493263244629
    5. '   ' → logprob: -12.076493263244629
    6. '  ' → logprob: -12.701493263244629
    7. 's' → logprob: -12.826493263244629
    8. ',' → logprob: -12.826493263244629
    9. '    ' → logprob: -13.576493263244629
    10. 'i' → logprob: -13.576493263244629

Token 212: ' reversed' (ID: 57184)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.03906497359275818
    2. '[' → logprob: -4.664064884185791
    3. 'sorted' → logprob: -4.664064884185791
    4. 're' → logprob: -4.789064884185791
    5. ' coin' → logprob: -5.164064884185791
    6. ' reversed' → logprob: -5.289064884185791
    7. ' [' → logprob: -8.66406536102295
    8. ' sorted' → logprob: -9.78906536102295
    9. '   ' → logprob: -10.16406536102295
    10. '[::-' → logprob: -10.41406536102295

Token 213: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048607468605041504
    2. 'coin' → logprob: -3.048607349395752
    3. ' coin' → logprob: -10.92360782623291
    4. '(co' → logprob: -13.79860782623291
    5. ' (' → logprob: -15.54860782623291
    6. '_coin' → logprob: -15.67360782623291
    7. '(
' → logprob: -15.79860782623291
    8. '```' → logprob: -15.92360782623291
    9. ')' → logprob: -16.548606872558594
    10. '([' → logprob: -16.673606872558594

Token 214: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.00016158436483237892
    2. ' coin' → logprob: -8.750161170959473
    3. ')' → logprob: -12.750161170959473
    4. 'coins' → logprob: -16.75016212463379
    5. '_coin' → logprob: -16.87516212463379
    6. '[' → logprob: -17.50016212463379
    7. '.coin' → logprob: -17.75016212463379
    8. '```' → logprob: -18.25016212463379
    9. '   ' → logprob: -18.50016212463379
    10. '
' → logprob: -18.87516212463379

Token 215: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.5928495486150496e-05
    2. 'values' → logprob: -11.125016212463379
    3. '_' → logprob: -14.000016212463379
    4. '_VALUES' → logprob: -16.250015258789062
    5. 's' → logprob: -16.375015258789062
    6. 'Values' → logprob: -17.125015258789062
    7. ' values' → logprob: -18.000015258789062
    8. ')' → logprob: -18.125015258789062
    9. '_value' → logprob: -18.250015258789062
    10. '_vals' → logprob: -19.500015258789062

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008689153008162975
    2. '):
' → logprob: -4.758688926696777
    3. ':' → logprob: -9.883688926696777
    4. '):
' → logprob: -12.008688926696777
    5. ')' → logprob: -12.508688926696777
    6. '[' → logprob: -12.633688926696777
    7. '       ' → logprob: -12.633688926696777
    8. '[::-' → logprob: -12.883688926696777
    9. ' ):' → logprob: -13.383688926696777
    10. '   ' → logprob: -13.508688926696777

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01640007644891739
    2. '<|end|>' → logprob: -5.64139986038208
    3. ' if' → logprob: -5.76639986038208
    4. '       ' → logprob: -5.76639986038208
    5. '            ' → logprob: -5.89139986038208
    6. '        ' → logprob: -6.89139986038208
    7. ' ' → logprob: -7.14139986038208
    8. ' 
' → logprob: -8.141400337219238
    9. '          ' → logprob: -8.266400337219238
    10. ':' → logprob: -8.516400337219238

Token 218: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.023557808250188828
    2. '            ' → logprob: -4.398557662963867
    3. 'cnt' (adapté à ' cnt') → logprob: -4.898557662963867
    4. ' while' → logprob: -6.398557662963867
    5. '           ' → logprob: -7.148557662963867
    6. '               ' → logprob: -7.398557662963867
    7. '                ' → logprob: -8.898557662963867
    8. ' ' → logprob: -9.898557662963867
    9. '	cnt' → logprob: -9.898557662963867
    10. ' if' → logprob: -10.273557662963867

Token 219: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018165862187743187
    2. '+=' → logprob: -4.0181660652160645
    3. '   ' → logprob: -12.393165588378906
    4. '+=(' → logprob: -12.518165588378906
    5. '    ' → logprob: -13.018165588378906
    6. '+' → logprob: -13.268165588378906
    7. ',' → logprob: -13.768165588378906
    8. ' +' → logprob: -14.143165588378906
    9. ']+=' → logprob: -14.143165588378906
    10. '	' → logprob: -14.518165588378906

Token 220: ' remain' (ID: 12760)
  Prédit: ' remain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.026301342993974686
    2. 'remain' → logprob: -3.651301383972168
    3. '	' → logprob: -15.151301383972168
    4. ' ' → logprob: -15.401301383972168
    5. 'rem' → logprob: -15.651301383972168
    6. ' ' → logprob: -15.901301383972168
    7. ' rem' → logprob: -16.27630043029785
    8. '   ' → logprob: -16.90130043029785
    9. '(rem' → logprob: -16.90130043029785
    10. ' remains' → logprob: -18.27630043029785

Token 221: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.029786253347992897
    2. '//' → logprob: -3.5297863483428955
    3. '//=' → logprob: -10.779786109924316
    4. ' ' → logprob: -12.029786109924316
    5. ' ' → logprob: -12.654786109924316
    6. '   ' → logprob: -13.279786109924316
    7. '    ' → logprob: -13.779786109924316
    8. ')' → logprob: -14.654786109924316
    9. '<|end|>' → logprob: -14.779786109924316
    10. ' //
' → logprob: -14.779786109924316

Token 222: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.306760805164231e-05
    2. ' v' → logprob: -11.25001335144043
    3. '	v' → logprob: -19.75001335144043
    4. ')v' → logprob: -22.50001335144043
    5. '
' → logprob: -22.87501335144043
    6. '   ' → logprob: -23.25001335144043
    7. '_v' → logprob: -24.37501335144043
    8. 'vq' → logprob: -24.37501335144043
    9. '$v' → logprob: -24.75001335144043
    10. '<|end|>' → logprob: -24.75001335144043

Token 223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05196326598525047
    2. '*' → logprob: -4.5519633293151855
    3. '<|end|>' → logprob: -4.8019633293151855
    4. ' *' → logprob: -4.9269633293151855
    5. ')' → logprob: -5.0519633293151855
    6. '               ' → logprob: -5.1769633293151855
    7. 'remain' → logprob: -5.8019633293151855
    8. '
' → logprob: -6.0519633293151855
    9. '            ' → logprob: -6.5519633293151855
    10. ' 
' → logprob: -6.5519633293151855

Token 224: '           ' (ID: 352)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.6810370087623596
    2. '           ' → logprob: -0.9310370087623596
    3. ' remain' → logprob: -2.306036949157715
    4. '            
' → logprob: -10.181036949157715
    5. '            ' → logprob: -10.931036949157715
    6. '               ' → logprob: -11.056036949157715
    7. '       ' → logprob: -12.181036949157715
    8. '
' → logprob: -12.431036949157715
    9. ' ' → logprob: -12.681036949157715
    10. ' ' → logprob: -12.806036949157715

Token 225: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' (adapté à ' remain') → logprob: -0.08969756960868835
    2. ' remain' → logprob: -2.4646975994110107
    3. '           ' → logprob: -7.214697360992432
    4. '            ' → logprob: -11.58969783782959
    5. '               ' → logprob: -11.71469783782959
    6. ' ' → logprob: -13.71469783782959
    7. 'return' → logprob: -14.21469783782959
    8. '
' → logprob: -14.21469783782959
    9. '             ' → logprob: -14.83969783782959
    10. '                   ' → logprob: -15.08969783782959

Token 226: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.027766576036810875
    2. '%=' → logprob: -4.152766704559326
    3. ' %' → logprob: -5.527766704559326
    4. '%' → logprob: -5.777766704559326
    5. ' =' → logprob: -5.777766704559326
    6. '=' → logprob: -6.652766704559326
    7. ' -=' → logprob: -8.652766227722168
    8. ' ' → logprob: -11.777766227722168
    9. '   ' → logprob: -12.152766227722168
    10. '    ' → logprob: -12.402766227722168

Token 227: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.014684110297821e-06
    2. ' v' → logprob: -11.625008583068848
    3. '	v' → logprob: -20.625009536743164
    4. '   ' → logprob: -22.000009536743164
    5. ')v' → logprob: -23.125009536743164
    6. '*v' → logprob: -23.875009536743164
    7. '$v' → logprob: -24.250009536743164
    8. ' ' → logprob: -24.375009536743164
    9. '    ' → logprob: -24.375009536743164
    10. '  ' → logprob: -24.875009536743164

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073495120741426945
    2. '
' → logprob: -5.882349491119385
    3. 'return' → logprob: -6.007349491119385
    4. ' return' → logprob: -6.382349491119385
    5. '   ' → logprob: -8.007349967956543
    6. '	return' → logprob: -10.507349967956543
    7. '           ' → logprob: -12.882349967956543
    8. '<|end|>' → logprob: -13.007349967956543
    9. '    
' → logprob: -13.257349967956543
    10. '
' → logprob: -13.257349967956543

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04671037569642067
    2. 'return' → logprob: -3.29671049118042
    3. ' return' → logprob: -4.79671049118042
    4. '   ' → logprob: -8.046710014343262
    5. '
' → logprob: -10.546710014343262
    6. '	return' → logprob: -10.921710014343262
    7. '           ' → logprob: -12.421710014343262
    8. '      ' → logprob: -13.546710014343262
    9. '```' → logprob: -13.546710014343262
    10. '     ' → logprob: -14.546710014343262

Token 230: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31433385610580444
    2. ' return' → logprob: -1.3143339157104492
    3. '   ' → logprob: -7.564333915710449
    4. '       ' → logprob: -7.564333915710449
    5. '	return' → logprob: -10.43933391571045
    6. '
' → logprob: -12.81433391571045
    7. ' ' → logprob: -13.56433391571045
    8. 'eturn' → logprob: -14.93933391571045
    9. ':return' → logprob: -15.43933391571045
    10. '  ' → logprob: -15.68933391571045

Token 231: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.002475777640938759
    2. ' cnt' → logprob: -6.002475738525391
    3. '(cnt' → logprob: -16.00247573852539
    4. '	cnt' → logprob: -17.37747573852539
    5. 'count' → logprob: -18.00247573852539
    6. '[cnt' → logprob: -18.37747573852539
    7. 'ct' → logprob: -20.87747573852539
    8. 'cn' → logprob: -21.62747573852539
    9. ' ' → logprob: -22.12747573852539
    10. 'c' → logprob: -22.37747573852539

Token 232: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6884095668792725
    2. 'dp' → logprob: -0.9384095668792725
    3. '    
' → logprob: -2.6884095668792725
    4. ' dp' → logprob: -4.313409805297852
    5. 'DP' → logprob: -4.813409805297852
    6. '
' → logprob: -5.688409805297852
    7. '_dp' → logprob: -5.688409805297852
    8. '	dp' → logprob: -6.313409805297852
    9. '<|end|>' → logprob: -6.313409805297852
    10. '    ' → logprob: -6.938409805297852

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1842760145664215
    2. 'dp' → logprob: -1.8092759847640991
    3. '#' → logprob: -6.059276103973389
    4. '    
' → logprob: -6.934276103973389
    5. 'DP' → logprob: -7.934276103973389
    6. ' dp' → logprob: -8.05927562713623
    7. 'def' → logprob: -9.55927562713623
    8. '_dp' → logprob: -9.68427562713623
    9. 'possible' → logprob: -10.05927562713623
    10. 'from' → logprob: -10.18427562713623

Token 234: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01690654456615448
    2. 'min' → logprob: -5.26690673828125
    3. '#' (adapté à ' #') → logprob: -5.64190673828125
    4. 'DP' → logprob: -6.39190673828125
    5. 'ans' → logprob: -6.51690673828125
    6. 'for' → logprob: -6.64190673828125
    7. '   ' → logprob: -7.26690673828125
    8. 'def' → logprob: -7.26690673828125
    9. 'answer' → logprob: -7.64190673828125
    10. 'res' → logprob: -8.26690673828125

Token 235: ' To' (ID: 2514)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06334970146417618
    2. 'min' → logprob: -3.688349723815918
    3. '#' → logprob: -4.438349723815918
    4. 'ans' → logprob: -4.813349723815918
    5. 'answer' → logprob: -5.688349723815918
    6. 'DP' → logprob: -6.063349723815918
    7. 'change' → logprob: -6.313349723815918
    8. 'res' → logprob: -6.438349723815918
    9. 'from' → logprob: -6.688349723815918
    10. 'need' → logprob: -6.813349723815918

Token 236: ' find' (ID: 1646)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'make' → logprob: -1.485308289527893
    2. 'solve' → logprob: -1.485308289527893
    3. 't' → logprob: -2.2353081703186035
    4. 'tal' → logprob: -2.6103081703186035
    5. ' solve' → logprob: -2.9853081703186035
    6. 'pay' → logprob: -3.2353081703186035
    7. 'min' → logprob: -3.4853081703186035
    8. ' make' → logprob: -3.7353081703186035
    9. '#' → logprob: -3.9853081703186035
    10. ' minimize' → logprob: -4.1103081703186035

Token 237: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4167293310165405
    2. ' minimal' → logprob: -2.16672945022583
    3. 'the' → logprob: -2.16672945022583
    4. 'minimal' → logprob: -3.54172945022583
    5. ' minimum' → logprob: -4.29172945022583
    6. 'minimum' → logprob: -4.66672945022583
    7. 'min' → logprob: -4.79172945022583
    8. ' min' → logprob: -5.41672945022583
    9. ' if' → logprob: -5.41672945022583
    10. ' answer' → logprob: -5.66672945022583

Token 238: ' total' (ID: 3609)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.469002366065979
    2. ' coins' → logprob: -1.594002366065979
    3. ' number' → logprob: -2.0940022468566895
    4. 'number' → logprob: -3.5940022468566895
    5. '_co' → logprob: -4.9690022468566895
    6. 'coin' → logprob: -5.4690022468566895
    7. 'total' → logprob: -6.2190022468566895
    8. '_number' → logprob: -6.5940022468566895
    9. ' total' → logprob: -6.7190022468566895
    10. ' coin' → logprob: -6.8440022468566895

Token 239: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.3599131405353546
    2. ' coins' → logprob: -1.3599131107330322
    3. '_co' → logprob: -3.4849131107330322
    4. ' number' → logprob: -5.484913349151611
    5. 'number' → logprob: -6.234913349151611
    6. '   ' → logprob: -6.359913349151611
    7. 'cost' → logprob: -6.859913349151611
    8. 'coin' → logprob: -6.984913349151611
    9. '_payment' → logprob: -6.984913349151611
    10. '_' → logprob: -7.109913349151611

Token 240: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15537387132644653
    2. 'used' → logprob: -3.0303738117218018
    3. ' used' → logprob: -3.1553738117218018
    4. 'needed' → logprob: -4.280374050140381
    5. '_used' → logprob: -4.655374050140381
    6. 'for' → logprob: -4.905374050140381
    7. ' for' → logprob: -5.155374050140381
    8. ' needed' → logprob: -5.405374050140381
    9. '_needed' → logprob: -5.780374050140381
    10. ' =' → logprob: -6.030374050140381

Token 241: 'paid' (ID: 36409)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.6460434198379517
    2. ')' → logprob: -1.7710434198379517
    3. 'used' → logprob: -2.271043300628662
    4. '   ' → logprob: -2.896043300628662
    5. 'coins' → logprob: -2.896043300628662
    6. ' payment' → logprob: -3.271043300628662
    7. ' coins' → logprob: -3.271043300628662
    8. ' to' → logprob: -3.396043300628662
    9. ' paid' → logprob: -3.521043300628662
    10. 'pay' → logprob: -3.771043300628662

Token 242: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5669639110565186
    2. ' +' → logprob: -0.9419639110565186
    3. '+' → logprob: -3.5669639110565186
    4. '=' → logprob: -6.066964149475098
    5. ' =' → logprob: -6.066964149475098
    6. ' coins' → logprob: -6.066964149475098
    7. ',' → logprob: -6.566964149475098
    8. '   ' → logprob: -6.941964149475098
    9. 'coins' → logprob: -7.191964149475098
    10. ' vs' → logprob: -7.316964149475098

Token 243: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.3996630012989044
    2. ' change' → logprob: -1.149662971496582
    3. 'returned' → logprob: -4.899662971496582
    4. ' returned' → logprob: -5.399662971496582
    5. 'changed' → logprob: -8.524662971496582
    6. 'return' → logprob: -8.899662971496582
    7. 'received' → logprob: -9.524662971496582
    8. ' changed' → logprob: -10.024662971496582
    9. ' ' → logprob: -10.024662971496582
    10. ' return' → logprob: -10.274662971496582

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6365422010421753
    2. '),' → logprob: -0.8865422010421753
    3. '):' → logprob: -3.011542320251465
    4. '   ' → logprob: -5.511542320251465
    5. '):
' → logprob: -6.136542320251465
    6. ' ),' → logprob: -6.886542320251465
    7. ' )' → logprob: -7.511542320251465
    8. ' =' → logprob: -7.886542320251465
    9. 'def' → logprob: -8.761542320251465
    10. ' used' → logprob: -8.761542320251465

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05336031690239906
    2. ' dp' → logprob: -3.5533602237701416
    3. 'dp' → logprob: -3.8033602237701416
    4. ' paid' → logprob: -8.553359985351562
    5. ' DP' → logprob: -9.053359985351562
    6. '    ' → logprob: -9.303359985351562
    7. 'DP' → logprob: -9.678359985351562
    8. '    
' → logprob: -9.803359985351562
    9. '	dp' → logprob: -10.053359985351562
    10. 'coins' → logprob: -10.303359985351562

Token 246: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0168204307556152
    2. 'ans' → logprob: -1.2668204307556152
    3. 'min' → logprob: -1.5168204307556152
    4. 'res' → logprob: -3.0168204307556152
    5. 'answer' → logprob: -3.3918204307556152
    6. ' ans' → logprob: -4.641820430755615
    7. ' min' → logprob: -4.766820430755615
    8. 'paid' → logprob: -4.766820430755615
    9. ' dp' → logprob: -5.391820430755615
    10. 'result' → logprob: -5.516820430755615

Token 247: ' Paid' (ID: 77210)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3457772433757782
    2. 'min' → logprob: -1.5957772731781006
    3. ' min' → logprob: -3.8457772731781006
    4. 'ans' → logprob: -4.0957770347595215
    5. '   ' → logprob: -4.4707770347595215
    6. ' dp' → logprob: -4.4707770347595215
    7. '#' → logprob: -5.5957770347595215
    8. 'res' → logprob: -5.5957770347595215
    9. 'best' → logprob: -5.7207770347595215
    10. 'from' → logprob: -5.9707770347595215

Token 248: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5875304341316223
    2. ' =' → logprob: -1.2125303745269775
    3. '=' → logprob: -2.7125303745269775
    4. 'coins' → logprob: -2.9625303745269775
    5. '_amount' → logprob: -4.962530612945557
    6. '_num' → logprob: -5.712530612945557
    7. '_options' → logprob: -6.087530612945557
    8. '_coin' → logprob: -6.087530612945557
    9. '_values' → logprob: -6.337530612945557
    10. '_dp' → logprob: -6.712530612945557

Token 249: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7007420659065247
    2. ' =' → logprob: -0.7007420659065247
    3. '=[]' → logprob: -5.825742244720459
    4. '_counts' → logprob: -6.200742244720459
    5. '=[' → logprob: -7.450742244720459
    6. '_num' → logprob: -8.0757417678833
    7. 'counts' → logprob: -8.5757417678833
    8. '_options' → logprob: -9.0757417678833
    9. '_dp' → logprob: -9.2007417678833
    10. 'for' → logprob: -9.3257417678833

Token 250: ' sum' (ID: 4215)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.0871193408966064
    2. ' cover' → logprob: -1.0871193408966064
    3. ' not' → logprob: -1.4621193408966064
    4. 'not' → logprob: -3.5871193408966064
    5. 'be' → logprob: -3.8371193408966064
    6. 'cover' → logprob: -4.212119102478027
    7. ' sum' → logprob: -4.962119102478027
    8. ' come' → logprob: -4.962119102478027
    9. ' use' → logprob: -5.962119102478027
    10. 'sum' → logprob: -5.962119102478027

Token 251: ' atleast' (ID: 161085)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5138956904411316
    2. '=' → logprob: -1.7638957500457764
    3. 'to' → logprob: -2.1388957500457764
    4. ' up' → logprob: -2.3888957500457764
    5. ' exactly' → logprob: -4.263895511627197
    6. ' =' → logprob: -5.638895511627197
    7. 'up' → logprob: -7.388895511627197
    8. ' ' → logprob: -7.513895511627197
    9. '==' → logprob: -7.513895511627197
    10. '   ' → logprob: -7.888895511627197

Token 252: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4062986969947815
    2. ' P' → logprob: -1.5312986373901367
    3. ' to' → logprob: -2.5312986373901367
    4. 'to' → logprob: -3.2812986373901367
    5. ' ' → logprob: -9.281298637390137
    6. '=P' → logprob: -9.406298637390137
    7. '=' → logprob: -9.531298637390137
    8. '   ' → logprob: -9.656298637390137
    9. ' up' → logprob: -9.781298637390137
    10. ' =' → logprob: -10.531298637390137

Token 253: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10965298116207123
    2. '
' → logprob: -2.6096529960632324
    3. 'dp' → logprob: -4.359652996063232
    4. 'coins' → logprob: -5.234652996063232
    5. '    
' → logprob: -5.734652996063232
    6. ':' → logprob: -7.109652996063232
    7. '    ' → logprob: -7.109652996063232
    8. '<|end|>' → logprob: -7.109652996063232
    9. '.' → logprob: -7.234652996063232
    10. ',' → logprob: -7.484652996063232

Token 254: 'pay' (ID: 20615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056502748280763626
    2. ' )' → logprob: -3.8065028190612793
    3. ')
' → logprob: -4.681502819061279
    4. 'while' → logprob: -5.306502819061279
    5. '),' → logprob: -5.931502819061279
    6. '   ' → logprob: -6.056502819061279
    7. ' while' → logprob: -6.181502819061279
    8. '#' → logprob: -6.306502819061279
    9. 'coins' → logprob: -6.681502819061279
    10. '
' → logprob: -7.181502819061279

Token 255: ' amount' (ID: 4527)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19563789665699005
    2. ' )' → logprob: -2.0706379413604736
    3. 'ment' → logprob: -3.9456379413604736
    4. '   ' → logprob: -4.9456377029418945
    5. '_' → logprob: -4.9456377029418945
    6. 'ing' → logprob: -5.1956377029418945
    7. 'ed' → logprob: -5.4456377029418945
    8. ' ' → logprob: -5.9456377029418945
    9. '  ' → logprob: -6.8206377029418945
    10. '=' → logprob: -7.0706377029418945

Token 256: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02646343596279621
    2. ')
' → logprob: -4.526463508605957
    3. '   ' → logprob: -4.651463508605957
    4. ' )' → logprob: -5.651463508605957
    5. '),' → logprob: -7.526463508605957
    6. '):' → logprob: -7.526463508605957
    7. ',' → logprob: -8.651463508605957
    8. '+' → logprob: -8.776463508605957
    9. '=' → logprob: -8.901463508605957
    10. '):
' → logprob: -9.276463508605957

Token 257: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009765887632966042
    2. ' P' → logprob: -4.634766101837158
    3. ')' → logprob: -12.384765625
    4. '0' → logprob: -13.259765625
    5. '   ' → logprob: -13.384765625
    6. ' ' → logprob: -13.759765625
    7. '```' → logprob: -15.259765625
    8. '
' → logprob: -15.509765625
    9. 'p' → logprob: -15.884765625
    10. '>P' → logprob: -16.259765625

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061301473528146744
    2. '   ' → logprob: -3.1863014698028564
    3. ')
' → logprob: -4.3113017082214355
    4. ' )' → logprob: -6.4363017082214355
    5. ',' → logprob: -7.0613017082214355
    6. '),' → logprob: -7.0613017082214355
    7. '
' → logprob: -7.5613017082214355
    8. '):' → logprob: -7.8113017082214355
    9. ').' → logprob: -8.936301231384277
    10. '):
' → logprob: -9.186301231384277

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4363211393356323
    2. ' dp' → logprob: -1.3113211393356323
    3. 'dp' → logprob: -2.936321258544922
    4. ' from' → logprob: -4.936321258544922
    5. ' paid' → logprob: -5.686321258544922
    6. ' coins' → logprob: -5.811321258544922
    7. '
' → logprob: -6.061321258544922
    8. 'from' → logprob: -6.186321258544922
    9. '    
' → logprob: -6.436321258544922
    10. ' min' → logprob: -6.436321258544922

Token 260: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029454803094267845
    2. 'min' → logprob: -4.904454708099365
    3. 'from' → logprob: -5.029454708099365
    4. ' dp' → logprob: -5.404454708099365
    5. 'res' → logprob: -6.029454708099365
    6. 'ans' → logprob: -6.279454708099365
    7. '#' (adapté à ' #') → logprob: -6.404454708099365
    8. 'DP' → logprob: -6.404454708099365
    9. 'answer' → logprob: -8.029455184936523
    10. 'def' → logprob: -8.154455184936523

Token 261: ' Paid' (ID: 77210)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02320074662566185
    2. 'min' → logprob: -4.898200511932373
    3. 'res' → logprob: -5.773200511932373
    4. 'from' → logprob: -5.898200511932373
    5. 'ans' → logprob: -6.148200511932373
    6. '#' → logprob: -6.148200511932373
    7. 'DP' → logprob: -6.398200511932373
    8. ' dp' → logprob: -6.523200511932373
    9. 'best' → logprob: -7.773200511932373
    10. 'answer' → logprob: -8.023200988769531

Token 262: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5060819983482361
    2. 'coins' → logprob: -1.2560820579528809
    3. '_values' → logprob: -3.381082057952881
    4. ' =' → logprob: -3.881082057952881
    5. '_coin' → logprob: -4.131082057952881
    6. ' coins' → logprob: -4.631082057952881
    7. 'coin' → logprob: -4.881082057952881
    8. '_amount' → logprob: -5.131082057952881
    9. '_counts' → logprob: -5.131082057952881
    10. '=' → logprob: -6.131082057952881

Token 263: ' chosen' (ID: 16180)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8363124132156372
    2. ' =' → logprob: -0.8363124132156372
    3. ' can' → logprob: -3.8363122940063477
    4. 'can' → logprob: -3.9613122940063477
    5. '_counts' → logprob: -4.586312294006348
    6. '_num' → logprob: -4.711312294006348
    7. ' must' → logprob: -4.836312294006348
    8. 'from' → logprob: -4.961312294006348
    9. '=[]' → logprob: -4.961312294006348
    10. 'must' → logprob: -5.211312294006348

Token 264: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7841405868530273
    2. 'from' → logprob: -1.2841405868530273
    3. ' =' → logprob: -1.5341405868530273
    4. ' from' → logprob: -3.1591405868530273
    5. 'def' → logprob: -6.034140586853027
    6. ':' → logprob: -6.409140586853027
    7. '   ' → logprob: -6.659140586853027
    8. '=[]' → logprob: -7.284140586853027
    9. 'count' → logprob: -8.659140586853027
    10. 'counts' → logprob: -8.784140586853027

Token 265: ' limited' (ID: 9913)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.010893717408180237
    2. ' coins' → logprob: -5.260893821716309
    3. 'the' → logprob: -6.135893821716309
    4. 'coin' → logprob: -6.260893821716309
    5. '[' → logprob: -6.760893821716309
    6. 'all' → logprob: -8.885893821716309
    7. 'range' → logprob: -9.635893821716309
    8. ' the' → logprob: -10.635893821716309
    9. '6' → logprob: -10.635893821716309
    10. 'collections' → logprob: -10.885893821716309

Token 266: ' number' (ID: 2086)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.7012413144111633
    2. 'coins' → logprob: -0.7012413144111633
    3. ' coin' → logprob: -5.201241493225098
    4. 'coin' → logprob: -6.576241493225098
    5. ' number' → logprob: -8.326241493225098
    6. ' supply' → logprob: -9.076241493225098
    7. '_coin' → logprob: -9.576241493225098
    8. ' stock' → logprob: -9.826241493225098
    9. ' resources' → logprob: -9.951241493225098
    10. 's' → logprob: -10.076241493225098

Token 267: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045669227838516235
    2. 'from' → logprob: -3.4206693172454834
    3. 'import' → logprob: -5.670669078826904
    4. ' of' → logprob: -6.170669078826904
    5. ' from' → logprob: -6.170669078826904
    6. 'coins' → logprob: -6.295669078826904
    7. ' coins' → logprob: -7.420669078826904
    8. 'of' → logprob: -7.795669078826904
    9. '
' → logprob: -7.795669078826904
    10. '#' → logprob: -8.795669555664062

Token 268: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.006103101186454296
    2. ' coins' → logprob: -5.256103038787842
    3. 'each' → logprob: -7.631103038787842
    4. 'coin' → logprob: -8.631103515625
    5. '```' → logprob: -9.756103515625
    6. '[' → logprob: -10.256103515625
    7. '
' → logprob: -10.631103515625
    8. ' each' → logprob: -11.256103515625
    9. '6' → logprob: -11.381103515625
    10. ')' → logprob: -12.131103515625

Token 269: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14139442145824432
    2. ' dp' → logprob: -2.8913943767547607
    3. 'dp' → logprob: -2.8913943767547607
    4. '
' → logprob: -5.64139461517334
    5. '    
' → logprob: -5.89139461517334
    6. 'from' → logprob: -6.26639461517334
    7. '_dp' → logprob: -6.26639461517334
    8. ' from' → logprob: -6.39139461517334
    9. 'DP' → logprob: -6.39139461517334
    10. '<|end|>' → logprob: -6.64139461517334

Token 270: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09317933768033981
    2. '   ' → logprob: -2.593179225921631
    3. 'from' → logprob: -4.968179225921631
    4. ' dp' → logprob: -5.593179225921631
    5. 'DP' → logprob: -6.218179225921631
    6. 'min' → logprob: -7.718179225921631
    7. ' from' → logprob: -7.843179225921631
    8. '#' → logprob: -8.593179702758789
    9. ' DP' → logprob: -8.968179702758789
    10. 'import' → logprob: -9.468179702758789

Token 271: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003916207235306501
    2. 'from' → logprob: -6.128916263580322
    3. 'DP' → logprob: -7.128916263580322
    4. ' dp' → logprob: -7.753916263580322
    5. '#' (adapté à ' #') → logprob: -8.003915786743164
    6. 'min' → logprob: -9.878915786743164
    7. '   ' → logprob: -10.128915786743164
    8. ' from' → logprob: -10.753915786743164
    9. 'memo' → logprob: -11.003915786743164
    10. 'paid' → logprob: -11.628915786743164

Token 272: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006382687482982874
    2. 'from' → logprob: -5.256382465362549
    3. 'DP' → logprob: -7.631382465362549
    4. '#' → logprob: -8.006382942199707
    5. ' dp' → logprob: -8.506382942199707
    6. 'min' → logprob: -10.256382942199707
    7. 'paid' → logprob: -10.506382942199707
    8. ' from' → logprob: -10.756382942199707
    9. 'memo' → logprob: -11.506382942199707
    10. 'max' → logprob: -11.756382942199707

Token 273: ' do' (ID: 621)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.24891473352909088
    2. 'import' → logprob: -1.9989147186279297
    3. ' use' → logprob: -2.6239147186279297
    4. 'from' → logprob: -5.12391471862793
    5. 'continue' → logprob: -6.12391471862793
    6. 'dp' → logprob: -6.87391471862793
    7. 'implement' → logprob: -7.37391471862793
    8. ' import' → logprob: -7.49891471862793
    9. 'build' → logprob: -7.87391471862793
    10. 'define' → logprob: -8.12391471862793

Token 274: ' subset' (ID: 58845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44838613271713257
    2. ' dp' → logprob: -1.1983861923217773
    3. ' a' → logprob: -3.4483861923217773
    4. 'from' → logprob: -4.448386192321777
    5. ' from' → logprob: -4.823386192321777
    6. 'a' → logprob: -5.448386192321777
    7. ' DP' → logprob: -6.073386192321777
    8. 'DP' → logprob: -7.323386192321777
    9. '   ' → logprob: -8.323386192321777
    10. ' dynamic' → logprob: -8.698386192321777

Token 275: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4090580940246582
    2. ' sum' → logprob: -1.4090580940246582
    3. 'dp' → logprob: -3.284058094024658
    4. '_sum' → logprob: -3.409058094024658
    5. '   ' → logprob: -4.659058094024658
    6. '_s' → logprob: -5.409058094024658
    7. ' sums' → logprob: -6.284058094024658
    8. 's' → logprob: -6.534058094024658
    9. '_dp' → logprob: -7.159058094024658
    10. ' =' → logprob: -7.909058094024658

Token 276: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7493780255317688
    2. ' dp' → logprob: -0.9993780255317688
    3. '_dp' → logprob: -1.999377965927124
    4. ' =' → logprob: -4.249378204345703
    5. ' DP' → logprob: -5.499378204345703
    6. '(dp' → logprob: -6.499378204345703
    7. ' from' → logprob: -7.124378204345703
    8. 'from' → logprob: -7.374378204345703
    9. '   ' → logprob: -7.499378204345703
    10. 'DP' → logprob: -7.624378204345703

Token 277: ' with' (ID: 483)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1400986909866333
    2. ' dp' → logprob: -2.1400985717773438
    3. ' from' → logprob: -5.265098571777344
    4. 'from' → logprob: -5.640098571777344
    5. '   ' → logprob: -6.140098571777344
    6. 'max' → logprob: -7.890098571777344
    7. 'paid' → logprob: -8.390098571777344
    8. ' paid' → logprob: -8.515098571777344
    9. ' max' → logprob: -8.890098571777344
    10. '#' → logprob: -9.015098571777344

Token 278: ' limited' (ID: 9913)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16982808709144592
    2. 'coins' → logprob: -2.919828176498413
    3. 'dictionary' → logprob: -4.044827938079834
    4. 'a' → logprob: -4.294827938079834
    5. 'coin' → logprob: -4.419827938079834
    6. ' coins' → logprob: -5.169827938079834
    7. 'states' → logprob: -5.294827938079834
    8. ' dp' → logprob: -5.419827938079834
    9. 'the' → logprob: -5.544827938079834
    10. 'minimum' → logprob: -5.544827938079834

Token 279: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.35080522298812866
    2. ' coins' → logprob: -1.2258052825927734
    3. ' coin' → logprob: -7.100805282592773
    4. 'coin' → logprob: -7.600805282592773
    5. ' counts' → logprob: -8.725805282592773
    6. 'items' → logprob: -8.850805282592773
    7. 'counts' → logprob: -8.850805282592773
    8. ' usage' → logprob: -9.100805282592773
    9. ' items' → logprob: -9.350805282592773
    10. ' quantities' → logprob: -10.100805282592773

Token 280: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.050191424787044525
    2. ' dp' → logprob: -3.5501914024353027
    3. ' from' → logprob: -4.550191402435303
    4. 'from' → logprob: -5.050191402435303
    5. 'max' → logprob: -6.675191402435303
    6. '   ' → logprob: -7.425191402435303
    7. ' max' → logprob: -7.925191402435303
    8. '#' → logprob: -8.175191879272461
    9. 'paid' → logprob: -9.175191879272461
    10. 'DP' → logprob: -9.300191879272461

Token 281: 'bounded' (ID: 135171)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8476395606994629
    2. 'dp' → logprob: -1.222639560699463
    3. 'from' → logprob: -2.472639560699463
    4. '#' → logprob: -2.847639560699463
    5. ' dp' → logprob: -3.597639560699463
    6. 'max' → logprob: -3.972639560699463
    7. 'possible' → logprob: -4.222639560699463
    8. 'import' → logprob: -4.472639560699463
    9. ' from' → logprob: -4.597639560699463
    10. ' possible' → logprob: -4.722639560699463

Token 282: ' kn' (ID: 1313)
  Prédit: 'kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kn' → logprob: -0.3886340260505676
    2. ' kn' → logprob: -1.1386339664459229
    3. 'coins' → logprob: -7.138634204864502
    4. 'coin' → logprob: -8.138633728027344
    5. ' coins' → logprob: -8.263633728027344
    6. '-kn' → logprob: -8.888633728027344
    7. ' coin' → logprob: -9.638633728027344
    8. 'subset' → logprob: -10.388633728027344
    9. ' items' → logprob: -10.513633728027344
    10. '_kn' → logprob: -10.763633728027344

Token 283: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.012624423019587994
    2. 'ap' → logprob: -4.387624263763428
    3. 'aps' → logprob: -9.637624740600586
    4. '```' → logprob: -10.512624740600586
    5. 'ep' → logprob: -11.512624740600586
    6. 'e' → logprob: -12.387624740600586
    7. 'ight' → logprob: -12.637624740600586
    8. 'ап' → logprob: -13.137624740600586
    9. '``' → logprob: -14.762624740600586
    10. '
' → logprob: -14.887624740600586

Token 284: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03990793228149414
    2. ')
' → logprob: -4.039907932281494
    3. '):' → logprob: -4.664907932281494
    4. '),' → logprob: -5.289907932281494
    5. ' problem' → logprob: -6.164907932281494
    6. ').' → logprob: -6.539907932281494
    7. '):
' → logprob: -7.164907932281494
    8. ')

' → logprob: -7.414907932281494
    9. ' approach' → logprob: -7.539907932281494
    10. 'problem' → logprob: -8.039907455444336

Token 285: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28693896532058716
    2. ' dp' → logprob: -1.7869389057159424
    3. '   ' → logprob: -2.5369389057159424
    4. ' from' → logprob: -6.7869391441345215
    5. 'from' → logprob: -7.1619391441345215
    6. ' DP' → logprob: -8.411938667297363
    7. ' max' → logprob: -8.411938667297363
    8. 'max' → logprob: -8.661938667297363
    9. 'DP' → logprob: -8.661938667297363
    10. '    
' → logprob: -10.286938667297363

Token 286: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011895863339304924
    2. 'from' → logprob: -4.886895656585693
    3. 'max' → logprob: -5.886895656585693
    4. ' dp' → logprob: -6.886895656585693
    5. ' from' → logprob: -8.886896133422852
    6. 'DP' → logprob: -9.136896133422852
    7. 'MAX' → logprob: -10.011896133422852
    8. '#' (adapté à ' #') → logprob: -10.261896133422852
    9. ' max' → logprob: -10.511896133422852
    10. 'possible' → logprob: -10.636896133422852

Token 287: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009638506919145584
    2. 'from' → logprob: -5.00963830947876
    3. ' dp' → logprob: -6.50963830947876
    4. 'max' → logprob: -7.13463830947876
    5. '#' → logprob: -8.509638786315918
    6. ' from' → logprob: -9.009638786315918
    7. 'DP' → logprob: -9.259638786315918
    8. 'import' → logprob: -9.509638786315918
    9. 'paid' → logprob: -10.134638786315918
    10. '   ' → logprob: -10.509638786315918

Token 288: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032254871912300587
    2. '=' → logprob: -5.753225326538086
    3. '=[' → logprob: -10.628225326538086
    4. '_size' → logprob: -11.128225326538086
    5. ' =[' → logprob: -13.003225326538086
    6. 'size' → logprob: -13.378225326538086
    7. '```' → logprob: -13.878225326538086
    8. '[' → logprob: -13.878225326538086
    9. ' ' → logprob: -14.503225326538086
    10. ')' → logprob: -14.878225326538086

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019885217770934105
    2. ']=' → logprob: -4.644885063171387
    3. '][' → logprob: -5.644885063171387
    4. ' =' → logprob: -5.894885063171387
    5. ']={' → logprob: -5.894885063171387
    6. '=' → logprob: -7.269885063171387
    7. ' ]' → logprob: -8.269885063171387
    8. '
' → logprob: -11.769885063171387
    9. '],' → logprob: -12.082385063171387
    10. '][]' → logprob: -12.144885063171387

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869578540325165
    2. ' =' → logprob: -1.1369578838348389
    3. ']' → logprob: -10.261958122253418
    4. '={}' → logprob: -11.261958122253418
    5. '={' → logprob: -11.761958122253418
    6. ']=' → logprob: -11.886958122253418
    7. '=[' → logprob: -12.136958122253418
    8. '[' → logprob: -12.386958122253418
    9. '=dict' → logprob: -12.636958122253418
    10. '][' → logprob: -13.261958122253418

Token 291: ' minimal' (ID: 19957)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.898356020450592
    2. 'dict' → logprob: -1.3983559608459473
    3. 'minimum' → logprob: -2.2733559608459473
    4. 'INF' → logprob: -2.5233559608459473
    5. '{' → logprob: -3.5233559608459473
    6. 'minimal' → logprob: -3.5233559608459473
    7. '{}' → logprob: -4.023355960845947
    8. 'a' → logprob: -4.023355960845947
    9. 'dictionary' → logprob: -4.023355960845947
    10. 'number' → logprob: -4.398355960845947

Token 292: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.6145219802856445
    2. ' number' → logprob: -1.1145219802856445
    3. 'coins' → logprob: -2.2395219802856445
    4. ' coins' → logprob: -3.7395219802856445
    5. 'coin' → logprob: -7.7395219802856445
    6. ' coin' → logprob: -9.614521980285645
    7. 'count' → logprob: -9.864521980285645
    8. 'total' → logprob: -10.364521980285645
    9. '#' → logprob: -10.489521980285645
    10. '[number' → logprob: -10.489521980285645

Token 293: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6442018151283264
    2. 'of' → logprob: -0.7692018151283264
    3. '_of' → logprob: -4.894201755523682
    4. 'coins' → logprob: -6.519201755523682
    5. ' coins' → logprob: -6.894201755523682
    6. '_tokens' → logprob: -7.894201755523682
    7. 'tokens' → logprob: -7.894201755523682
    8. '   ' → logprob: -8.14420223236084
    9. '
' → logprob: -8.89420223236084
    10. '	of' → logprob: -9.64420223236084

Token 294: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.3137347400188446
    2. ' coins' → logprob: -1.313734769821167
    3. ' paid' → logprob: -8.563735008239746
    4. 'paid' → logprob: -8.688735008239746
    5. '```' → logprob: -10.438735008239746
    6. ' ' → logprob: -10.688735008239746
    7. 'tokens' → logprob: -11.313735008239746
    8. 'coin' → logprob: -12.376235008239746
    9. 'total' → logprob: -12.438735008239746
    10. ' tokens' → logprob: -12.501235008239746

Token 295: ' used' (ID: 2061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.470094233751297
    2. ' used' → logprob: -1.2200942039489746
    3. '=' → logprob: -3.5950942039489746
    4. 'used' → logprob: -4.220094203948975
    5. ' needed' → logprob: -4.720094203948975
    6. ' for' → logprob: -5.095094203948975
    7. 'needed' → logprob: -5.470094203948975
    8. 's' → logprob: -6.220094203948975
    9. '   ' → logprob: -6.345094203948975
    10. '[' → logprob: -6.595094203948975

Token 296: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1295020878314972
    2. '=' → logprob: -2.504502058029175
    3. ' for' → logprob: -3.504502058029175
    4. 'for' → logprob: -5.129502296447754
    5. ' to' → logprob: -6.004502296447754
    6. ',' → logprob: -7.754502296447754
    7. 'to' → logprob: -8.004502296447754
    8. 'from' → logprob: -9.379502296447754
    9. '={' → logprob: -9.879502296447754
    10. ')' → logprob: -10.254502296447754

Token 297: ' form' (ID: 1625)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.06762223690748215
    2. ' pay' → logprob: -2.942622184753418
    3. 'make' → logprob: -4.942622184753418
    4. 'reach' → logprob: -5.817622184753418
    5. ' reach' → logprob: -6.817622184753418
    6. 'ach' → logprob: -7.567622184753418
    7. 'i' → logprob: -8.317622184753418
    8. 'sum' → logprob: -8.442622184753418
    9. ' make' → logprob: -9.067622184753418
    10. 'get' → logprob: -9.567622184753418

Token 298: ' sum' (ID: 4215)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.24967117607593536
    2. 'amount' → logprob: -1.749671220779419
    3. ' i' → logprob: -3.249671220779419
    4. 'i' → logprob: -4.87467098236084
    5. ' sum' → logprob: -8.12467098236084
    6. 'sum' → logprob: -9.49967098236084
    7. ' the' → logprob: -9.62467098236084
    8. ' all' → logprob: -9.87467098236084
    9. ' ' → logprob: -10.37467098236084
    10. ' amounts' → logprob: -10.37467098236084

Token 299: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10865137726068497
    2. '=' → logprob: -3.6086513996124268
    3. '[i' → logprob: -3.8586513996124268
    4. ' ' → logprob: -4.483651161193848
    5. 's' → logprob: -4.608651161193848
    6. '[' → logprob: -4.608651161193848
    7. '_' → logprob: -5.483651161193848
    8. '```' → logprob: -5.608651161193848
    9. '   ' → logprob: -5.733651161193848
    10. ',' → logprob: -6.858651161193848

Token 300: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011568804271519184
    2. '=' → logprob: -4.761569023132324
    3. 'dp' → logprob: -6.386569023132324
    4. '
' → logprob: -7.386569023132324
    5. '   ' → logprob: -8.011569023132324
    6. ' dp' → logprob: -9.136569023132324
    7. 'import' → logprob: -9.261569023132324
    8. ',' → logprob: -10.511569023132324
    9. 'INF' → logprob: -11.011569023132324
    10. '_dp' → logprob: -11.386569023132324

Token 301: ' or' (ID: 503)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8279929757118225
    2. '[' → logprob: -1.3279929161071777
    3. 'INF' → logprob: -2.2029929161071777
    4. ' [' → logprob: -2.8279929161071777
    5. ' {' → logprob: -3.0779929161071777
    6. ' INF' → logprob: -3.5779929161071777
    7. 'dp' → logprob: -4.702992916107178
    8. 'default' → logprob: -4.827992916107178
    9. 'None' → logprob: -5.327992916107178
    10. ' None' → logprob: -5.577992916107178

Token 302: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0040862360037863255
    2. '-' → logprob: -6.254086017608643
    3. ' INF' → logprob: -6.754086017608643
    4. 'None' → logprob: -7.379086017608643
    5. '-INF' → logprob: -8.3790864944458
    6. 'inf' → logprob: -9.6290864944458
    7. ' -' → logprob: -10.1290864944458
    8. 'float' → logprob: -11.1290864944458
    9. '-inf' → logprob: -12.2540864944458
    10. ' None' → logprob: -12.7540864944458

Token 303: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13785380125045776
    2. '=' → logprob: -3.1378538608551025
    3. 'dp' → logprob: -3.2628538608551025
    4. '   ' → logprob: -3.5128538608551025
    5. '
' → logprob: -4.887853622436523
    6. '_dp' → logprob: -5.887853622436523
    7. ',' → logprob: -6.262853622436523
    8. ']' → logprob: -7.387853622436523
    9. '```' → logprob: -7.512853622436523
    10. '=
' → logprob: -7.637853622436523

Token 304: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.11452917754650116
    2. 'not' → logprob: -2.3645291328430176
    3. 'un' → logprob: -4.614529132843018
    4. ' impossible' → logprob: -6.364529132843018
    5. 'inf' → logprob: -7.114529132843018
    6. 'True' → logprob: -7.114529132843018
    7. ' not' → logprob: -8.239529609680176
    8. 'i' → logprob: -8.364529609680176
    9. 'False' → logprob: -8.489529609680176
    10. 'cannot' → logprob: -9.614529609680176

Token 305: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6014267206192017
    2. '
' → logprob: -0.9764267206192017
    3. '   ' → logprob: -2.726426601409912
    4. ' dp' → logprob: -4.726426601409912
    5. '    
' → logprob: -7.726426601409912
    6. '_dp' → logprob: -8.60142707824707
    7. '	dp' → logprob: -8.72642707824707
    8. '(dp' → logprob: -9.60142707824707
    9. ' =' → logprob: -10.47642707824707
    10. '
' → logprob: -10.60142707824707

Token 306: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13664643466472626
    2. '   ' → logprob: -2.2616465091705322
    3. ' dp' → logprob: -4.136646270751953
    4. '
' → logprob: -5.011646270751953
    5. '	dp' → logprob: -7.511646270751953
    6. '_dp' → logprob: -8.761646270751953
    7. '    
' → logprob: -9.386646270751953
    8. '(dp' → logprob: -10.386646270751953
    9. '```' → logprob: -10.636646270751953
    10. '.dp' → logprob: -11.386646270751953

Token 307: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014978475868701935
    2. ' dp' → logprob: -4.639978408813477
    3. '   ' → logprob: -5.514978408813477
    4. '
' → logprob: -6.764978408813477
    5. '	dp' → logprob: -11.139978408813477
    6. '    
' → logprob: -11.764978408813477
    7. 'import' → logprob: -13.264978408813477
    8. '_dp' → logprob: -13.514978408813477
    9. '```' → logprob: -13.639978408813477
    10. '(dp' → logprob: -14.514978408813477

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11385655403137207
    2. '=' → logprob: -2.238856554031372
    3. '[' → logprob: -6.988856315612793
    4. '=[' → logprob: -9.238856315612793
    5. ' =[' → logprob: -12.113856315612793
    6. ']' → logprob: -13.113856315612793
    7. ')' → logprob: -13.488856315612793
    8. '```' → logprob: -13.738856315612793
    9. '.' → logprob: -14.238856315612793
    10. '＝' → logprob: -14.238856315612793

Token 309: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.56233171664644e-05
    2. '{' → logprob: -9.875055313110352
    3. ' [' → logprob: -13.000055313110352
    4. '[in' → logprob: -14.750055313110352
    5. '[I' → logprob: -14.875055313110352
    6. '[int' → logprob: -15.000055313110352
    7. '[array' → logprob: -16.25005531311035
    8. '[-' → logprob: -16.50005531311035
    9. '[np' → logprob: -16.75005531311035
    10. 'default' → logprob: -16.75005531311035

Token 310: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -9.372294698550832e-06
    2. '0' → logprob: -11.625009536743164
    3. '-INF' → logprob: -15.375009536743164
    4. '-' → logprob: -16.750009536743164
    5. ' INF' → logprob: -17.125009536743164
    6. '_INF' → logprob: -17.500009536743164
    7. 'IN' → logprob: -19.125009536743164
    8. 'INFO' → logprob: -20.375009536743164
    9. 'inf' → logprob: -20.500009536743164
    10. '[' → logprob: -21.000009536743164

Token 311: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006395953707396984
    2. ']*' → logprob: -5.6313958168029785
    3. ']*(' → logprob: -6.0063958168029785
    4. ']+' → logprob: -8.506396293640137
    5. ' for' → logprob: -9.881396293640137
    6. ' ]' → logprob: -10.131396293640137
    7. 'for' → logprob: -10.256396293640137
    8. ']+=' → logprob: -15.631396293640137
    9. '()]' → logprob: -15.881396293640137
    10. ']<<' → logprob: -16.13139533996582

Token 312: 'total' (ID: 9577)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23638352751731873
    2. '100' → logprob: -1.6113835573196411
    3. 'P' → logprob: -5.111383438110352
    4. 'total' → logprob: -6.611383438110352
    5. '(max' → logprob: -6.986383438110352
    6. '500' → logprob: -7.361383438110352
    7. '(' → logprob: -7.611383438110352
    8. '300' → logprob: -7.986383438110352
    9. '250' → logprob: -8.236383438110352
    10. 'change' → logprob: -8.236383438110352

Token 313: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -1.1517960956552997e-05
    2. 'money' → logprob: -11.750011444091797
    3. '_' → logprob: -13.000011444091797
    4. '_coin' → logprob: -15.000011444091797
    5. '+' → logprob: -15.250011444091797
    6. '_amount' → logprob: -15.500011444091797
    7. '_m' → logprob: -16.375011444091797
    8. ')' → logprob: -16.375011444091797
    9. '```' → logprob: -16.875011444091797
    10. ' _' → logprob: -17.000011444091797

Token 314: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001502598519437015
    2. ' +' → logprob: -6.501502513885498
    3. ')+' → logprob: -16.126502990722656
    4. ')' → logprob: -16.501502990722656
    5. '＋' → logprob: -17.876502990722656
    6. '+
' → logprob: -18.001502990722656
    7. '()+' → logprob: -18.501502990722656
    8. '   ' → logprob: -18.876502990722656
    9. ']+' → logprob: -19.251502990722656
    10. ' ' → logprob: -19.626502990722656

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '１' → logprob: -19.75
    4. '   ' → logprob: -20.375
    5. '2' → logprob: -20.625
    6. '100' → logprob: -22.0
    7. '
' → logprob: -22.125
    8. '101' → logprob: -22.375
    9. '  ' → logprob: -22.625
    10. '

' → logprob: -22.75

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014187951572239399
    2. ')
' → logprob: -4.264187812805176
    3. ')
' → logprob: -10.764187812805176
    4. ' )' → logprob: -13.139187812805176
    5. ')

' → logprob: -14.264187812805176
    6. ']' → logprob: -15.389187812805176
    7. ' )
' → logprob: -15.514187812805176
    8. '),' → logprob: -16.514188766479492
    9. ')]' → logprob: -16.514188766479492
    10. '
' → logprob: -17.014188766479492

Token 317: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016444525681436062
    2. ' dp' → logprob: -8.750164031982422
    3. '	dp' → logprob: -12.250164031982422
    4. '_dp' → logprob: -14.500164031982422
    5. '0' → logprob: -15.000164031982422
    6. '(dp' → logprob: -15.875164031982422
    7. '   ' → logprob: -17.125164031982422
    8. 'd' → logprob: -17.375164031982422
    9. '[' → logprob: -17.500164031982422
    10. '.dp' → logprob: -17.750164031982422

Token 318: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00012701898231171072
    2. ' dp' → logprob: -9.000126838684082
    3. '	dp' → logprob: -13.000126838684082
    4. '0' → logprob: -14.125126838684082
    5. '_dp' → logprob: -15.250126838684082
    6. '   ' → logprob: -15.625126838684082
    7. 'd' → logprob: -16.2501277923584
    8. '(dp' → logprob: -16.8751277923584
    9. '.dp' → logprob: -18.8751277923584
    10. '[' → logprob: -18.8751277923584

Token 319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4987974029500037e-05
    2. '0' → logprob: -10.625024795532227
    3. '[
' → logprob: -15.500024795532227
    4. '=' → logprob: -16.000024795532227
    5. ' [' → logprob: -16.375024795532227
    6. '<|end|>' → logprob: -16.750024795532227
    7. 's' → logprob: -17.375024795532227
    8. ' ' → logprob: -17.375024795532227
    9. '\[' → logprob: -18.125024795532227
    10. '```' → logprob: -18.125024795532227

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '[' → logprob: -17.375001907348633
    4. '-' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '000' → logprob: -17.875001907348633
    7. '۰' → logprob: -18.000001907348633
    8. '00' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. ']' → logprob: -19.250001907348633

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006465525948442519
    2. ']=' → logprob: -7.375646591186523
    3. '=' → logprob: -11.125646591186523
    4. ' ]' → logprob: -12.250646591186523
    5. ')' → logprob: -15.000646591186523
    6. ' =' → logprob: -17.125646591186523
    7. ']='' → logprob: -17.500646591186523
    8. ']==' → logprob: -18.125646591186523
    9. '']' → logprob: -18.500646591186523
    10. ']+=' → logprob: -18.500646591186523

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975141443312168
    2. ' =' → logprob: -3.5297513008117676
    3. '0' → logprob: -14.779751777648926
    4. '<|end|>' → logprob: -15.029751777648926
    5. ']=' → logprob: -16.27975082397461
    6. ' ' → logprob: -16.40475082397461
    7. ')=' → logprob: -17.15475082397461
    8. '＝' → logprob: -17.77975082397461
    9. '=}' → logprob: -18.02975082397461
    10. ')' → logprob: -18.27975082397461

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -21.25
    4. '   ' → logprob: -22.75
    5. '０' → logprob: -23.375
    6. '০' → logprob: -25.625
    7. '०' → logprob: -26.0
    8. '٠' → logprob: -26.0
    9. '  ' → logprob: -26.125
    10. '00' → logprob: -26.125

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -22.375
    4. '０' → logprob: -23.375
    5. '   ' → logprob: -23.625
    6. '00' → logprob: -25.5
    7. '০' → logprob: -25.875
    8. '000' → logprob: -26.0
    9. '  ' → logprob: -26.25
    10. '[' → logprob: -26.25

Token 325: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5935771465301514
    2. '<|end|>' → logprob: -1.5935771465301514
    3. ' for' → logprob: -1.8435771465301514
    4. 'for' → logprob: -2.5935771465301514
    5. ' ' → logprob: -5.4685773849487305
    6. '    
' → logprob: -6.2185773849487305
    7. '	for' → logprob: -6.4685773849487305
    8. ')' → logprob: -6.9685773849487305
    9. '  ' → logprob: -7.2185773849487305
    10. '  
' → logprob: -7.3435773849487305

Token 326: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6002715229988098
    2. '   ' → logprob: -1.225271463394165
    3. ' for' → logprob: -1.850271463394165
    4. '	for' → logprob: -8.475271224975586
    5. '<|end|>' → logprob: -8.725271224975586
    6. '    
' → logprob: -9.975271224975586
    7. '```' → logprob: -11.600271224975586
    8. '
' → logprob: -11.725271224975586
    9. ' ' → logprob: -11.725271224975586
    10. 'from' → logprob: -12.725271224975586

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009528699330985546
    2. ' for' → logprob: -5.134528636932373
    3. '   ' → logprob: -5.634528636932373
    4. '	for' → logprob: -11.009529113769531
    5. '    
' → logprob: -13.134529113769531
    6. '```' → logprob: -13.384529113769531
    7. '
' → logprob: -15.009529113769531
    8. '<|end|>' → logprob: -15.384529113769531
    9. '  ' → logprob: -16.13452911376953
    10. ')' → logprob: -16.50952911376953

Token 328: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08636359870433807
    2. ' i' → logprob: -2.5863635540008545
    3. 'idx' → logprob: -5.461363792419434
    4. 'coin' → logprob: -6.336363792419434
    5. ' idx' → logprob: -6.836363792419434
    6. 'c' → logprob: -8.711363792419434
    7. ' coin' → logprob: -8.961363792419434
    8. ' c' → logprob: -10.586363792419434
    9. 'ci' → logprob: -10.961363792419434
    10. 'value' → logprob: -12.086363792419434

Token 329: ',v' (ID: 30680)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.9776957035064697
    2. 'o' → logprob: -1.3526957035064697
    3. 'oin' → logprob: -1.4776957035064697
    4. '_idx' → logprob: -3.3526957035064697
    5. ',' → logprob: -3.4776957035064697
    6. ' in' → logprob: -3.8526957035064697
    7. 'nt' → logprob: -4.477695465087891
    8. '_num' → logprob: -5.102695465087891
    9. 'nts' → logprob: -5.477695465087891
    10. 'in' → logprob: -5.602695465087891

Token 330: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.19421540200710297
    2. ' in' → logprob: -2.3192152976989746
    3. ',' → logprob: -2.9442152976989746
    4. ',num' → logprob: -3.8192152976989746
    5. 'num' → logprob: -7.069215297698975
    6. '_num' → logprob: -7.569215297698975
    7. 'oin' → logprob: -7.694215297698975
    8. 'coins' → logprob: -7.944215297698975
    9. ',c' → logprob: -8.444215774536133
    10. ',n' → logprob: -8.569215774536133

Token 331: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.002477200934663415
    2. ' zip' → logprob: -6.002477169036865
    3. '(zip' → logprob: -14.252477645874023
    4. 'z' → logprob: -14.377477645874023
    5. 'enumer' → logprob: -15.877477645874023
    6. 'range' → logprob: -16.252477645874023
    7. '
' → logprob: -17.002477645874023
    8. 'coin' → logprob: -17.627477645874023
    9. ' ' → logprob: -17.752477645874023
    10. '.zip' → logprob: -17.877477645874023

Token 332: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -5.848420551046729e-05
    2. 'coins' → logprob: -9.7500581741333
    3. '(' → logprob: -16.500059127807617
    4. 'co' → logprob: -16.875059127807617
    5. ' coins' → logprob: -17.625059127807617
    6. '(c' → logprob: -18.625059127807617
    7. '(coeff' → logprob: -18.625059127807617
    8. '   ' → logprob: -18.750059127807617
    9. '(coords' → logprob: -19.250059127807617
    10. '(Co' → logprob: -19.375059127807617

Token 333: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.001350234029814601
    2. 'coins' → logprob: -6.626350402832031
    3. 'in' → logprob: -11.126350402832031
    4. '[' → logprob: -12.501350402832031
    5. 'i' → logprob: -13.876350402832031
    6. ' coins' → logprob: -14.126350402832031
    7. 'is' → logprob: -14.501350402832031
    8. 'ines' → logprob: -14.751350402832031
    9. '   ' → logprob: -14.876350402832031
    10. '(ins' → logprob: -14.876350402832031

Token 334: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005675682332366705
    2. 'num' → logprob: -7.500567436218262
    3. 's' → logprob: -12.250567436218262
    4. 'um' → logprob: -12.375567436218262
    5. 'm' → logprob: -12.875567436218262
    6. '_nums' → logprob: -13.875567436218262
    7. 'Num' → logprob: -14.375567436218262
    8. '-num' → logprob: -14.750567436218262
    9. 'coins' → logprob: -15.375567436218262
    10. '_n' → logprob: -15.750567436218262

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005140777211636305
    2. ',[' → logprob: -5.755140781402588
    3. ',v' → logprob: -6.755140781402588
    4. ' ,' → logprob: -8.38014030456543
    5. ',c' → logprob: -8.75514030456543
    6. ',value' → logprob: -9.75514030456543
    7. '):' → logprob: -9.75514030456543
    8. ',num' → logprob: -10.13014030456543
    9. ',count' → logprob: -10.38014030456543
    10. ',
' → logprob: -10.63014030456543

Token 336: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.0002613358374219388
    2. ' coin' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.625261306762695
    4. 'coil' → logprob: -20.875261306762695
    5. 'coins' → logprob: -21.500261306762695
    6. ' ' → logprob: -21.750261306762695
    7. '.coin' → logprob: -22.375261306762695
    8. '_coin' → logprob: -23.000261306762695
    9. 'coal' → logprob: -23.500261306762695
    10. 'co' → logprob: -24.125261306762695

Token 337: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.1008713702030946e-06
    2. 'values' → logprob: -13.125001907348633
    3. '_' → logprob: -17.250001907348633
    4. '_VALUES' → logprob: -18.750001907348633
    5. '_value' → logprob: -18.875001907348633
    6. 'Values' → logprob: -19.125001907348633
    7. ' values' → logprob: -19.750001907348633
    8. '	values' → logprob: -21.500001907348633
    9. 'v' → logprob: -21.875001907348633
    10. '_vals' → logprob: -22.000001907348633

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3870590329170227
    2. '):' → logprob: -1.137058973312378
    3. '   ' → logprob: -8.887059211730957
    4. '):
' → logprob: -10.387059211730957
    5. ':' → logprob: -11.512059211730957
    6. ':
' → logprob: -13.012059211730957
    7. '):

' → logprob: -13.012059211730957
    8. ')' → logprob: -13.387059211730957
    9. ' ):
' → logprob: -13.637059211730957
    10. ' ):' → logprob: -14.512059211730957

Token 339: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.153202623128891
    2. '       ' → logprob: -2.653202533721924
    3. ' for' → logprob: -2.653202533721924
    4. 'for' → logprob: -7.278202533721924
    5. '```' → logprob: -8.403203010559082
    6. '    ' → logprob: -8.778203010559082
    7. '  ' → logprob: -10.403203010559082
    8. 'n' → logprob: -10.903203010559082
    9. '	for' → logprob: -11.028203010559082
    10. '      ' → logprob: -11.778203010559082

Token 340: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19048887491226196
    2. ' for' → logprob: -1.9404888153076172
    3. '       ' → logprob: -3.690488815307617
    4. '   ' → logprob: -6.190488815307617
    5. 'amount' → logprob: -7.065488815307617
    6. 'new' → logprob: -7.565488815307617
    7. 'next' → logprob: -7.690488815307617
    8. 'k' → logprob: -8.940488815307617
    9. 'nd' → logprob: -8.940488815307617
    10. 'count' → logprob: -9.315488815307617

Token 341: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06198090314865112
    2. ' c' → logprob: -2.811980962753296
    3. 'v' → logprob: -12.436981201171875
    4. '0' → logprob: -12.561981201171875
    5. '   ' → logprob: -13.186981201171875
    6. ' ' → logprob: -13.436981201171875
    7. '	c' → logprob: -13.936981201171875
    8. ')c' → logprob: -14.561981201171875
    9. '>' → logprob: -15.936981201171875
    10. ' v' → logprob: -16.124481201171875

Token 342: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7013567090034485
    2. ' ==' → logprob: -1.0763566493988037
    3. '==' → logprob: -2.4513566493988037
    4. '>' → logprob: -2.5763566493988037
    5. '   ' → logprob: -7.951356887817383
    6. '=' → logprob: -8.201356887817383
    7. ' <=' → logprob: -9.326356887817383
    8. ' =' → logprob: -9.576356887817383
    9. ' ' → logprob: -9.701356887817383
    10. '0' → logprob: -9.701356887817383

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.75004005432129
    4. '>' → logprob: -17.62504005432129
    5. '=' → logprob: -18.50004005432129
    6. '۰' → logprob: -18.62504005432129
    7. '  ' → logprob: -19.25004005432129
    8. '```' → logprob: -19.37504005432129
    9. '    ' → logprob: -19.75004005432129
    10. '０' → logprob: -20.25004005432129

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '۰' → logprob: -17.250045776367188
    5. '  ' → logprob: -17.875045776367188
    6. '```' → logprob: -18.437545776367188
    7. '>' → logprob: -18.500045776367188
    8. ' ' → logprob: -18.500045776367188
    9. '    ' → logprob: -18.687545776367188
    10. '０' → logprob: -18.687545776367188

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3879542350769043
    2. ':
' → logprob: -1.1379542350769043
    3. '           ' → logprob: -7.512954235076904
    4. '       ' → logprob: -7.762954235076904
    5. ',' → logprob: -9.762954711914062
    6. '   ' → logprob: -11.137954711914062
    7. ' continue' → logprob: -11.512954711914062
    8. ':
' → logprob: -11.512954711914062
    9. '):
' → logprob: -11.762954711914062
    10. '	continue' → logprob: -13.512954711914062

Token 346: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0627196654677391
    2. ' continue' → logprob: -3.4377195835113525
    3. ' for' → logprob: -4.187719821929932
    4. '   ' → logprob: -4.687719821929932
    5. '           ' → logprob: -5.687719821929932
    6. 'continue' → logprob: -7.937719821929932
    7. '    ' → logprob: -8.812719345092773
    8. '```' → logprob: -9.687719345092773
    9. '	   ' → logprob: -9.937719345092773
    10. ' continues' → logprob: -10.062719345092773

Token 347: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.06174200028181076
    2. 'continue' (adapté à ' continue') → logprob: -3.186742067337036
    3. '       ' → logprob: -4.186741828918457
    4. '   ' → logprob: -5.811741828918457
    5. '	continue' → logprob: -7.936741828918457
    6. ' continues' → logprob: -12.186741828918457
    7. '_continue' → logprob: -12.311741828918457
    8. '           ' → logprob: -12.561741828918457
    9. '```' → logprob: -13.186741828918457
    10. ' ' → logprob: -13.311741828918457

Token 348: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33667871356010437
    2. ' for' → logprob: -1.4616787433624268
    3. '   ' → logprob: -3.0866787433624268
    4. '
' → logprob: -5.336678504943848
    5. 'for' → logprob: -6.086678504943848
    6. '        
' → logprob: -7.711678504943848
    7. ',' → logprob: -8.586678504943848
    8. '    
' → logprob: -9.086678504943848
    9. '    ' → logprob: -9.336678504943848
    10. '           ' → logprob: -9.961678504943848

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6725876331329346
    2. ' for' → logprob: -1.2975876331329346
    3. '   ' → logprob: -1.5475876331329346
    4. 'for' → logprob: -6.5475873947143555
    5. '    ' → logprob: -6.6725873947143555
    6. '        
' → logprob: -8.672587394714355
    7. '```' → logprob: -8.797587394714355
    8. '
' → logprob: -9.172587394714355
    9. '    
' → logprob: -9.297587394714355
    10. ',' → logprob: -9.922587394714355

Token 350: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059098754078149796
    2. ' for' → logprob: -3.434098720550537
    3. 'k' → logprob: -4.059098720550537
    4. 'amount' → logprob: -5.809098720550537
    5. '   ' → logprob: -5.934098720550537
    6. ' k' → logprob: -6.809098720550537
    7. 'num' → logprob: -7.684098720550537
    8. '       ' → logprob: -8.809099197387695
    9. 'count' → logprob: -9.184099197387695
    10. ' amount' → logprob: -9.559099197387695

Token 351: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003891995642334223
    2. ' for' → logprob: -5.878891944885254
    3. 'amount' → logprob: -7.628891944885254
    4. 'k' → logprob: -7.878891944885254
    5. 'num' → logprob: -9.753891944885254
    6. 'nd' → logprob: -10.128891944885254
    7. 'count' → logprob: -10.253891944885254
    8. 'new' → logprob: -10.878891944885254
    9. '   ' → logprob: -11.378891944885254
    10. 'counts' → logprob: -11.503891944885254

Token 352: ' bounded' (ID: 136812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18542565405368805
    2. 'for' → logprob: -1.9354256391525269
    3. ' k' → logprob: -4.810425758361816
    4. 'amount' → logprob: -5.310425758361816
    5. ' for' → logprob: -5.435425758361816
    6. '   ' → logprob: -5.810425758361816
    7. 'j' → logprob: -5.935425758361816
    8. 'num' → logprob: -7.560425758361816
    9. 'count' → logprob: -7.935425758361816
    10. 'a' → logprob: -9.060425758361816

Token 353: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1954423189163208
    2. 'kn' → logprob: -1.4454423189163208
    3. ' for' → logprob: -2.0704421997070312
    4. ' kn' → logprob: -2.1954421997070312
    5. 'binary' → logprob: -2.8204421997070312
    6. 'coins' → logprob: -3.1954421997070312
    7. 'j' → logprob: -3.3204421997070312
    8. 'k' → logprob: -3.3204421997070312
    9. ' binary' → logprob: -3.8204421997070312
    10. 'coin' → logprob: -4.820442199707031

Token 354: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.00019722258730325848
    2. 'aps' → logprob: -8.625197410583496
    3. 'ap' → logprob: -11.000197410583496
    4. 'uth' → logprob: -15.250197410583496
    5. '```' → logprob: -15.750197410583496
    6. 'ight' → logprob: -16.12519645690918
    7. 'ps' → logprob: -16.25019645690918
    8. 'n' → logprob: -17.12519645690918
    9. 'own' → logprob: -17.25019645690918
    10. 'apped' → logprob: -17.50019645690918

Token 355: ' optimization' (ID: 34658)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35551753640174866
    2. '       ' → logprob: -1.2305175065994263
    3. 'for' → logprob: -5.355517387390137
    4. '   ' → logprob: -6.730517387390137
    5. '
' → logprob: -8.480517387390137
    6. ',' → logprob: -8.980517387390137
    7. ' j' → logprob: -9.230517387390137
    8. ' to' → logprob: -9.480517387390137
    9. ' next' → logprob: -9.480517387390137
    10. ' i' → logprob: -9.730517387390137

Token 356: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22485382854938507
    2. ' for' → logprob: -1.7248538732528687
    3. 'for' → logprob: -4.099853992462158
    4. 'j' → logprob: -6.349853992462158
    5. 'count' → logprob: -7.099853992462158
    6. '        
' → logprob: -7.224853992462158
    7. 'amount' → logprob: -7.724853992462158
    8. ' amount' → logprob: -7.849853992462158
    9. '```' → logprob: -8.099853515625
    10. '   ' → logprob: -8.224853515625

Token 357: ' binary' (ID: 15600)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5302018523216248
    2. 'for' → logprob: -0.9052018523216248
    3. 'amount' → logprob: -5.4052019119262695
    4. ' for' → logprob: -7.1552019119262695
    5. 'num' → logprob: -7.5302019119262695
    6. ' k' → logprob: -7.7802019119262695
    7. 'count' → logprob: -8.15520191192627
    8. '   ' → logprob: -8.28020191192627
    9. '
' → logprob: -10.15520191192627
    10. 'cnt' → logprob: -10.15520191192627

Token 358: ' representation' (ID: 22311)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.40407752990722656
    2. 'count' → logprob: -1.7790775299072266
    3. 'spl' → logprob: -3.0290775299072266
    4. 'k' → logprob: -3.2790775299072266
    5. 's' → logprob: -3.6540775299072266
    6. ' splitting' → logprob: -4.654077529907227
    7. ' =' → logprob: -5.154077529907227
    8. 'cnt' → logprob: -5.279077529907227
    9. 'num' → logprob: -5.404077529907227
    10. '=' → logprob: -5.904077529907227

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5137678980827332
    2. ' for' → logprob: -1.013767957687378
    3. 'for' → logprob: -3.388767957687378
    4. 'count' → logprob: -6.388767719268799
    5. '   ' → logprob: -6.513767719268799
    6. 'num' → logprob: -8.138768196105957
    7. 's' → logprob: -8.138768196105957
    8. '	for' → logprob: -8.513768196105957
    9. ' of' → logprob: -8.888768196105957
    10. 'counts' → logprob: -9.138768196105957

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08611972630023956
    2. ' for' → logprob: -2.5861196517944336
    3. 'for' → logprob: -5.211119651794434
    4. '   ' → logprob: -6.586119651794434
    5. '```' → logprob: -9.336119651794434
    6. '           ' → logprob: -10.336119651794434
    7. ',' → logprob: -10.711119651794434
    8. '	for' → logprob: -10.961119651794434
    9. '        
' → logprob: -11.086119651794434
    10. ' of' → logprob: -11.086119651794434

Token 361: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.008410435169935226
    2. 'count' → logprob: -5.133410453796387
    3. ' k' → logprob: -7.258410453796387
    4. 'amount' → logprob: -7.383410453796387
    5. 'num' → logprob: -7.758410453796387
    6. '   ' → logprob: -8.133410453796387
    7. '       ' → logprob: -8.383410453796387
    8. 'cnt' → logprob: -8.883410453796387
    9. 'for' → logprob: -11.383410453796387
    10. 'm' → logprob: -11.508410453796387

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022950410842896
    2. ' =' → logprob: -1.9102294445037842
    3. ',' → logprob: -13.160229682922363
    4. '=k' → logprob: -14.035229682922363
    5. 't' → logprob: -14.410229682922363
    6. '   ' → logprob: -14.785229682922363
    7. '=c' → logprob: -15.035229682922363
    8. '=i' → logprob: -15.035229682922363
    9. ' ' → logprob: -15.285229682922363
    10. '=j' → logprob: -15.410229682922363

Token 363: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008762171491980553
    2. 'c' → logprob: -4.758762359619141
    3. ' ' → logprob: -9.00876235961914
    4. ' c' → logprob: -10.63376235961914
    5. '   ' → logprob: -14.38376235961914
    6. '	c' → logprob: -15.25876235961914
    7. '0' → logprob: -16.25876235961914
    8. '<c' → logprob: -17.25876235961914
    9. '```' → logprob: -17.50876235961914
    10. ')c' → logprob: -17.50876235961914

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061972059309482574
    2. 'c' → logprob: -2.811972141265869
    3. ' c' → logprob: -12.936971664428711
    4. ' ' → logprob: -13.811971664428711
    5. '   ' → logprob: -14.936971664428711
    6. '	c' → logprob: -15.436971664428711
    7. '<c' → logprob: -16.18697166442871
    8. '```' → logprob: -16.93697166442871
    9. '(c' → logprob: -17.18697166442871
    10. ')c' → logprob: -17.31197166442871

Token 365: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7391343712806702
    2. '<|end|>' → logprob: -1.6141343116760254
    3. ' while' → logprob: -1.9891343116760254
    4. '
' → logprob: -1.9891343116760254
    5. '	while' → logprob: -3.8641343116760254
    6. ' <<=' → logprob: -4.739134311676025
    7. '   ' → logprob: -5.114134311676025
    8. ',' → logprob: -5.239134311676025
    9. '       ' → logprob: -5.614134311676025
    10. '    ' → logprob: -6.989134311676025

Token 366: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0135263204574585
    2. '
' → logprob: -1.5135263204574585
    3. ' while' → logprob: -1.7635263204574585
    4. '   ' → logprob: -2.013526439666748
    5. '<|end|>' → logprob: -3.138526439666748
    6. '	while' → logprob: -3.388526439666748
    7. '       ' → logprob: -4.013526439666748
    8. '    
' → logprob: -5.388526439666748
    9. ',' → logprob: -5.638526439666748
    10. '    ' → logprob: -6.013526439666748

Token 367: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.047383639961481094
    2. '       ' → logprob: -3.5473835468292236
    3. ' while' → logprob: -4.047383785247803
    4. '           ' → logprob: -12.922383308410645
    5. '	while' → logprob: -12.922383308410645
    6. '   ' → logprob: -13.047383308410645
    7. 'While' → logprob: -13.797383308410645
    8. 'c' → logprob: -14.797383308410645
    9. '        ' → logprob: -14.797383308410645
    10. '```' → logprob: -15.047383308410645

Token 368: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03881272301077843
    2. ' c' → logprob: -3.4138126373291016
    3. 'k' → logprob: -5.288812637329102
    4. ' k' → logprob: -9.163812637329102
    5. '	c' → logprob: -13.913812637329102
    6. '   ' → logprob: -16.0388126373291
    7. ' ' → logprob: -17.0388126373291
    8. '(c' → logprob: -17.4138126373291
    9. '<c' → logprob: -18.1638126373291
    10. ')c' → logprob: -18.1638126373291

Token 369: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7046607136726379
    2. '<=' → logprob: -1.0796606540679932
    3. '>' → logprob: -1.9546606540679932
    4. ' >' → logprob: -3.829660654067993
    5. '>=' → logprob: -6.329660892486572
    6. ' >=' → logprob: -7.329660892486572
    7. '=' → logprob: -8.954660415649414
    8. '0' → logprob: -10.454660415649414
    9. ' <<=' → logprob: -11.204660415649414
    10. ' ' → logprob: -11.454660415649414

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006764543941244483
    2. ' ' → logprob: -7.87567663192749
    3. '=' → logprob: -8.125676155090332
    4. 'k' → logprob: -14.750676155090332
    5. '>' → logprob: -16.87567710876465
    6. ' =' → logprob: -17.25067710876465
    7. '=k' → logprob: -18.62567710876465
    8. '==' → logprob: -19.00067710876465
    9. ' k' → logprob: -19.25067710876465
    10. '۰' → logprob: -19.50067710876465

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018101456225849688
    2. ' ' → logprob: -8.625181198120117
    3. 'k' → logprob: -13.875181198120117
    4. '=' → logprob: -15.000181198120117
    5. 'c' → logprob: -16.125181198120117
    6. '>' → logprob: -18.375181198120117
    7. '   ' → logprob: -18.875181198120117
    8. ' c' → logprob: -19.000181198120117
    9. '    ' → logprob: -19.250181198120117
    10. '۰' → logprob: -19.750181198120117

Token 372: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04156312718987465
    2. ':' → logprob: -3.416563034057617
    3. ':
' → logprob: -5.166563034057617
    4. 'and' → logprob: -6.791563034057617
    5. '       ' → logprob: -7.791563034057617
    6. ',' → logprob: -8.416563034057617
    7. '<|end|>' → logprob: -8.541563034057617
    8. '           ' → logprob: -9.041563034057617
    9. '<|end|>' → logprob: -10.166563034057617
    10. '   ' → logprob: -10.666563034057617

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5828316807746887
    2. '       ' → logprob: -1.332831621170044
    3. ' and' → logprob: -2.582831621170044
    4. ':' → logprob: -2.707831621170044
    5. '<|end|>' → logprob: -4.082831859588623
    6. ':
' → logprob: -4.957831859588623
    7. ',' → logprob: -5.582831859588623
    8. '        ' → logprob: -6.457831859588623
    9. '<|end|>' → logprob: -6.957831859588623
    10. '):
' → logprob: -7.457831859588623

Token 374: ' use' (ID: 1199)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9724488258361816
    2. 'take' → logprob: -1.5974488258361816
    3. 'use' (adapté à ' use') → logprob: -1.8474488258361816
    4. 'cnt' → logprob: -2.0974488258361816
    5. ' use' → logprob: -3.0974488258361816
    6. 'x' → logprob: -3.9724488258361816
    7. 'num' → logprob: -3.9724488258361816
    8. 'amount' → logprob: -4.097448825836182
    9. 'count' → logprob: -5.097448825836182
    10. 'used' → logprob: -5.722448825836182

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10143250226974487
    2. '=' → logprob: -2.3514325618743896
    3. '=min' → logprob: -6.7264323234558105
    4. 'min' → logprob: -12.101432800292969
    5. 's' → logprob: -12.226432800292969
    6. '   ' → logprob: -12.351432800292969
    7. ' min' → logprob: -13.226432800292969
    8. '           ' → logprob: -13.226432800292969
    9. ' ' → logprob: -13.476432800292969
    10. 'k' → logprob: -13.851432800292969

Token 376: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815064437687397
    2. ' min' → logprob: -4.018150806427002
    3. '	min' → logprob: -14.268150329589844
    4. '(min' → logprob: -16.893150329589844
    5. '[min' → logprob: -18.268150329589844
    6. '=min' → logprob: -18.268150329589844
    7. ',min' → logprob: -20.268150329589844
    8. '_min' → logprob: -20.518150329589844
    9. '.min' → logprob: -20.518150329589844
    10. 'k' → logprob: -20.643150329589844

Token 377: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.25199154019355774
    2. '(c' → logprob: -1.5019915103912354
    3. 'k' → logprob: -9.751991271972656
    4. '(' → logprob: -12.751991271972656
    5. 'c' → logprob: -13.876991271972656
    6. ' (' → logprob: -15.126991271972656
    7. ' k' → logprob: -16.751991271972656
    8. '{k' → logprob: -17.626991271972656
    9. '(
' → logprob: -18.001991271972656
    10. ',k' → logprob: -18.501991271972656

Token 378: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11288460344076157
    2. ',c' → logprob: -2.237884521484375
    3. ' ,' → logprob: -9.862884521484375
    4. 'c' → logprob: -12.112884521484375
    5. ',
' → logprob: -12.987884521484375
    6. ',k' → logprob: -13.862884521484375
    7. ')' → logprob: -14.487884521484375
    8. ' c' → logprob: -15.737884521484375
    9. ')c' → logprob: -15.987884521484375
    10. '，' → logprob: -16.612884521484375

Token 379: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759438276290894
    2. ')' → logprob: -0.8259438276290894
    3. ')
' → logprob: -12.700943946838379
    4. ')

' → logprob: -13.950943946838379
    5. ' )
' → logprob: -15.575943946838379
    6. ')c' → logprob: -16.200942993164062
    7. '           ' → logprob: -16.575942993164062
    8. '):
' → logprob: -16.950942993164062
    9. ')#' → logprob: -17.325942993164062
    10. ' )' → logprob: -17.575942993164062

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003264338243752718
    2. ' for' → logprob: -6.378264427185059
    3. ' k' → logprob: -8.003264427185059
    4. '
' → logprob: -8.378264427185059
    5. '            
' → logprob: -8.503264427185059
    6. '<|end|>' → logprob: -8.753264427185059
    7. 'for' → logprob: -8.878264427185059
    8. '	       ' → logprob: -8.878264427185059
    9. 'k' → logprob: -9.628264427185059
    10. '       ' → logprob: -9.878264427185059

Token 381: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0263630151748657
    2. 'amount' → logprob: -1.5263630151748657
    3. '           ' → logprob: -1.9013630151748657
    4. 'for' → logprob: -2.026362895965576
    5. ' amount' → logprob: -3.651362895965576
    6. 'w' → logprob: -3.651362895965576
    7. '   ' → logprob: -3.776362895965576
    8. 'count' → logprob: -4.401362895965576
    9. 'v' → logprob: -4.901362895965576
    10. 'weight' → logprob: -5.026362895965576

Token 382: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.326883465051651
    2. '-=' → logprob: -1.3268834352493286
    3. '=' → logprob: -5.701883316040039
    4. '           ' → logprob: -5.951883316040039
    5. '-' → logprob: -5.951883316040039
    6. '   ' → logprob: -6.951883316040039
    7. ' =' → logprob: -6.951883316040039
    8. ',' → logprob: -7.201883316040039
    9. ')' → logprob: -7.701883316040039
    10. '*=' → logprob: -7.951883316040039

Token 383: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.00033546582562848926
    2. ' use' → logprob: -8.000335693359375
    3. '	use' → logprob: -20.000335693359375
    4. '(use' → logprob: -21.375335693359375
    5. '```' → logprob: -21.500335693359375
    6. '_use' → logprob: -22.750335693359375
    7. '   ' → logprob: -23.375335693359375
    8. 'user' → logprob: -23.625335693359375
    9. ' ' → logprob: -23.625335693359375
    10. ',use' → logprob: -23.750335693359375

Token 384: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16251836717128754
    2. '
' → logprob: -2.037518262863159
    3. '  
' → logprob: -5.287518501281738
    4. '            
' → logprob: -5.287518501281738
    5. ',' → logprob: -6.287518501281738
    6. '<|end|>' → logprob: -6.412518501281738
    7. ' 
' → logprob: -6.662518501281738
    8. '    
' → logprob: -6.662518501281738
    9. '```' → logprob: -7.412518501281738
    10. '   ' → logprob: -7.537518501281738

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11254528164863586
    2. '   ' → logprob: -2.9875452518463135
    3. 'v' → logprob: -3.8625452518463135
    4. '
' → logprob: -4.612545490264893
    5. ' for' → logprob: -5.112545490264893
    6. '       ' → logprob: -5.237545490264893
    7. '    
' → logprob: -5.362545490264893
    8. '            
' → logprob: -6.237545490264893
    9. '```' → logprob: -6.487545490264893
    10. 'for' → logprob: -6.862545490264893

Token 386: ' val' (ID: 1459)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5687863230705261
    2. ' for' → logprob: -1.568786382675171
    3. 'amount' → logprob: -2.193786382675171
    4. 'w' → logprob: -3.443786382675171
    5. 'coin' → logprob: -4.193786144256592
    6. '           ' → logprob: -4.443786144256592
    7. 'cost' → logprob: -4.443786144256592
    8. 'weight' → logprob: -4.693786144256592
    9. 'count' → logprob: -5.318786144256592
    10. 'v' → logprob: -5.318786144256592

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43253979086875916
    2. '=' → logprob: -1.0575398206710815
    3. 's' → logprob: -6.057539939880371
    4. 'e' → logprob: -7.932539939880371
    5. 'ue' → logprob: -8.307539939880371
    6. '=v' → logprob: -8.307539939880371
    7. 'ues' → logprob: -8.682539939880371
    8. ',' → logprob: -9.182539939880371
    9. 'alue' → logprob: -9.307539939880371
    10. 'use' → logprob: -9.932539939880371

Token 388: ' use' (ID: 1199)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6944016814231873
    2. 'use' → logprob: -0.6944016814231873
    3. ' use' → logprob: -6.944401741027832
    4. ' v' → logprob: -8.194401741027832
    5. '   ' → logprob: -11.944401741027832
    6. 'value' → logprob: -12.444401741027832
    7. 'val' → logprob: -13.944401741027832
    8. '  ' → logprob: -15.194401741027832
    9. '	use' → logprob: -15.319401741027832
    10. '	v' → logprob: -15.569401741027832

Token 389: ' *' (ID: 425)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.12763899564743042
    2. ' *' → logprob: -2.127639055252075
    3. '*' → logprob: -7.252638816833496
    4. 'v' → logprob: -13.127638816833496
    5. ' ' → logprob: -17.127639770507812
    6. '**' → logprob: -17.752639770507812
    7. '*u' → logprob: -17.877639770507812
    8. '```' → logprob: -17.877639770507812
    9. '[v' → logprob: -18.002639770507812
    10. ' ' → logprob: -18.002639770507812

Token 390: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.6250057220459
    4. '	v' → logprob: -21.0000057220459
    5. ' ' → logprob: -22.5000057220459
    6. '    ' → logprob: -22.8750057220459
    7. '  ' → logprob: -23.2500057220459
    8. '_v' → logprob: -23.3750057220459
    9. '           ' → logprob: -23.5000057220459
    10. '     ' → logprob: -23.6250057220459

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4033474326133728
    2. '   ' → logprob: -1.7783474922180176
    3. ' for' → logprob: -2.5283474922180176
    4. '
' → logprob: -2.9033474922180176
    5. 'for' → logprob: -4.903347492218018
    6. '       ' → logprob: -5.278347492218018
    7. ',' → logprob: -5.278347492218018
    8. '```' → logprob: -5.903347492218018
    9. '  
' → logprob: -6.153347492218018
    10. '    
' → logprob: -6.778347492218018

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3071346879005432
    2. ' for' → logprob: -1.8071346282958984
    3. 'for' → logprob: -2.3071346282958984
    4. '       ' → logprob: -7.807134628295898
    5. '   ' → logprob: -8.057134628295898
    6. '```' → logprob: -10.682134628295898
    7. '	for' → logprob: -11.432134628295898
    8. '	   ' → logprob: -12.432134628295898
    9. ' ' → logprob: -12.932134628295898
    10. ',' → logprob: -13.057134628295898

Token 393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2946387231349945
    2. ' for' → logprob: -1.419638752937317
    3. '           ' → logprob: -4.544638633728027
    4. '   ' → logprob: -5.919638633728027
    5. 'from' → logprob: -10.794638633728027
    6. '	for' → logprob: -11.669638633728027
    7. 'i' → logprob: -11.669638633728027
    8. 'j' → logprob: -12.044638633728027
    9. '       ' → logprob: -12.169638633728027
    10. 'amount' → logprob: -12.169638633728027

Token 394: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5851402878761292
    2. 'i' → logprob: -1.0851402282714844
    3. 'x' → logprob: -2.8351402282714844
    4. 'amount' → logprob: -3.3351402282714844
    5. 'amt' → logprob: -4.710140228271484
    6. 'a' → logprob: -7.085140228271484
    7. ' j' → logprob: -7.960140228271484
    8. ' i' → logprob: -8.460140228271484
    9. 's' → logprob: -8.835140228271484
    10. 'am' → logprob: -9.085140228271484

Token 395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009760101325809956
    2. 'in' → logprob: -4.634759902954102
    3. 'range' → logprob: -13.634759902954102
    4. 'total' → logprob: -13.759759902954102
    5. ' range' → logprob: -14.509759902954102
    6. 'from' → logprob: -14.759759902954102
    7. ' ' → logprob: -15.134759902954102
    8. '
' → logprob: -15.384759902954102
    9. ' total' → logprob: -16.3847599029541
    10. ',total' → logprob: -16.3847599029541

Token 396: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00016468366084154695
    2. ' range' → logprob: -8.750164985656738
    3. 're' → logprob: -12.125164985656738
    4. 'total' → logprob: -14.500164985656738
    5. 'reverse' → logprob: -16.375164031982422
    6. '   ' → logprob: -17.125164031982422
    7. '(range' → logprob: -17.125164031982422
    8. ' reversed' → logprob: -18.625164031982422
    9. 'r' → logprob: -19.125164031982422
    10. '
' → logprob: -19.750164031982422

Token 397: '(total' (ID: 39744)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3425219549390022e-05
    2. ' total' → logprob: -11.25001335144043
    3. '(total' → logprob: -14.75001335144043
    4. ',total' → logprob: -17.25001335144043
    5. '	total' → logprob: -19.50001335144043
    6. '   ' → logprob: -20.12501335144043
    7. 'tot' → logprob: -20.25001335144043
    8. 'val' → logprob: -20.37501335144043
    9. '$total' → logprob: -22.12501335144043
    10. 'Total' → logprob: -22.25001335144043

Token 398: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -8.196732960641384e-05
    2. 'money' → logprob: -9.500082015991211
    3. 'total' → logprob: -12.500082015991211
    4. 'Money' → logprob: -13.750082015991211
    5. '_amount' → logprob: -14.000082015991211
    6. 'amount' → logprob: -14.625082015991211
    7. '-money' → logprob: -15.375082015991211
    8. '           ' → logprob: -15.875082015991211
    9. 'val' → logprob: -16.00008201599121
    10. 'm' → logprob: -16.62508201599121

Token 399: ' -' (ID: 533)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.8612832427024841
    2. ',' → logprob: -1.361283302307129
    3. ',val' → logprob: -1.361283302307129
    4. ',-' → logprob: -2.986283302307129
    5. ' -' → logprob: -4.361283302307129
    6. ' ,' → logprob: -6.861283302307129
    7. '-' → logprob: -8.486283302307129
    8. '           ' → logprob: -9.736283302307129
    9. ',total' → logprob: -10.236283302307129
    10. ',
' → logprob: -10.611283302307129

Token 400: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.512236498361744e-07
    2. ' val' → logprob: -14.500000953674316
    3. '	val' → logprob: -19.25
    4. '[val' → logprob: -20.0
    5. ',val' → logprob: -20.5
    6. '   ' → logprob: -21.375
    7. '-val' → logprob: -21.875
    8. '(val' → logprob: -22.5
    9. 'int' → logprob: -22.75
    10. 'valu' → logprob: -22.75

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08983563631772995
    2. ',-' → logprob: -2.4648356437683105
    3. ' ,' → logprob: -7.2148356437683105
    4. '-' → logprob: -8.964835166931152
    5. ' ,-' → logprob: -10.964835166931152
    6. ' -' → logprob: -12.339835166931152
    7. '   ' → logprob: -12.464835166931152
    8. ',
' → logprob: -13.464835166931152
    9. '+' → logprob: -13.589835166931152
    10. '```' → logprob: -13.964835166931152

Token 402: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004306692280806601
    2. ' -' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.625431060791016
    4. '-i' → logprob: -20.750431060791016
    5. '-d' → logprob: -20.875431060791016
    6. '-re' → logprob: -21.125431060791016
    7. '  ' → logprob: -21.500431060791016
    8. ' ' → logprob: -21.750431060791016
    9. '    ' → logprob: -21.875431060791016
    10. '0' → logprob: -21.875431060791016

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.875
    3. '   ' → logprob: -22.375
    4. '
' → logprob: -22.875
    5. '-' → logprob: -23.375
    6. '１' → logprob: -23.5
    7. '```' → logprob: -24.5
    8. '

' → logprob: -25.0
    9. '2' → logprob: -25.125
    10. ' -' → logprob: -25.5

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10244401544332504
    2. ',-' → logprob: -2.3524439334869385
    3. '-' → logprob: -6.227444171905518
    4. ' ,' → logprob: -8.72744369506836
    5. '   ' → logprob: -9.85244369506836
    6. ' -' → logprob: -10.97744369506836
    7. ' ,-' → logprob: -11.35244369506836
    8. '```' → logprob: -11.72744369506836
    9. '       ' → logprob: -12.72744369506836
    10. '           ' → logprob: -13.47744369506836

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7848862373502925e-05
    2. ' -' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.750027656555176
    4. '           ' → logprob: -17.375028610229492
    5. ' ' → logprob: -17.625028610229492
    6. '  ' → logprob: -18.500028610229492
    7. '               ' → logprob: -18.875028610229492
    8. '```' → logprob: -19.000028610229492
    9. '       ' → logprob: -19.500028610229492
    10. '1' → logprob: -20.375028610229492

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. ')' → logprob: -20.25
    4. '   ' → logprob: -20.25
    5. '１' → logprob: -20.75
    6. '
' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '-' → logprob: -21.375
    9. '           ' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 407: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10217228531837463
    2. '):' → logprob: -2.352172374725342
    3. '-' → logprob: -6.477172374725342
    4. '):-' → logprob: -9.102171897888184
    5. '):
' → logprob: -9.727171897888184
    6. ',-' → logprob: -9.852171897888184
    7. '   ' → logprob: -9.852171897888184
    8. '       ' → logprob: -10.102171897888184
    9. ' -' → logprob: -10.477171897888184
    10. ')' → logprob: -10.977171897888184

Token 408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010033934377133846
    2. ' if' → logprob: -7.126003265380859
    3. '<|end|>' → logprob: -9.62600326538086
    4. '           ' → logprob: -10.00100326538086
    5. '   ' → logprob: -10.50100326538086
    6. 'if' → logprob: -11.12600326538086
    7. '                
' → logprob: -11.75100326538086
    8. ',' → logprob: -11.75100326538086
    9. ' ' → logprob: -12.00100326538086
    10. '       ' → logprob: -12.00100326538086

Token 409: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2567817270755768
    2. 'if' (adapté à ' if') → logprob: -2.006781816482544
    3. '               ' → logprob: -2.506781816482544
    4. '                   ' → logprob: -5.256781578063965
    5. '   ' → logprob: -5.381781578063965
    6. '           ' → logprob: -7.381781578063965
    7. '	if' → logprob: -10.881781578063965
    8. '       ' → logprob: -10.881781578063965
    9. '                       ' → logprob: -11.631781578063965
    10. '                ' → logprob: -12.006781578063965

Token 410: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004311460361350328
    2. ' dp' → logprob: -7.750431060791016
    3. '	dp' → logprob: -14.875431060791016
    4. '   ' → logprob: -16.875431060791016
    5. 'd' → logprob: -17.625431060791016
    6. '(dp' → logprob: -17.875431060791016
    7. '_dp' → logprob: -19.375431060791016
    8. '               ' → logprob: -19.375431060791016
    9. '           ' → logprob: -20.250431060791016
    10. 'dq' → logprob: -20.375431060791016

Token 411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -13.750000953674316
    3. 'dp' → logprob: -16.875001907348633
    4. '[' → logprob: -16.875001907348633
    5. '(i' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '               ' → logprob: -18.500001907348633
    9. '!=' → logprob: -18.625001907348633
    10. '{i' → logprob: -19.125001907348633

Token 412: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.020890094339847565
    2. ' !=' → logprob: -4.020890235900879
    3. ']!=' → logprob: -6.145890235900879
    4. ')!=' → logprob: -8.145890235900879
    5. '<' → logprob: -8.895890235900879
    6. '()!=' → logprob: -9.520890235900879
    7. '!==' → logprob: -10.020890235900879
    8. ']' → logprob: -11.645890235900879
    9. '+' → logprob: -11.645890235900879
    10. '[i' → logprob: -12.270890235900879

Token 413: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.005304550752043724
    2. ' !=' → logprob: -5.255304336547852
    3. '<' → logprob: -10.130304336547852
    4. ']!=' → logprob: -11.130304336547852
    5. '()!=' → logprob: -11.755304336547852
    6. '!==' → logprob: -12.755304336547852
    7. '+' → logprob: -13.005304336547852
    8. ')!=' → logprob: -13.130304336547852
    9. '<>' → logprob: -14.505304336547852
    10. '[' → logprob: -15.755304336547852

Token 414: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.128163257315464e-07
    2. ' INF' → logprob: -15.5
    3. 'IN' → logprob: -21.125
    4. ' ' → logprob: -21.375
    5. '_INF' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. '-INF' → logprob: -21.625
    8. '  ' → logprob: -23.25
    9. 'IF' → logprob: -23.625
    10. '	' → logprob: -23.625

Token 415: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04010218381881714
    2. 'and' → logprob: -3.415102243423462
    3. ':' → logprob: -5.165102005004883
    4. ':
' → logprob: -7.290102005004883
    5. '	and' → logprob: -11.540102005004883
    6. ' ' → logprob: -11.915102005004883
    7. ',' → logprob: -11.915102005004883
    8. 'dp' → logprob: -12.540102005004883
    9. '<|end|>' → logprob: -12.540102005004883
    10. ' dp' → logprob: -13.540102005004883

Token 416: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031815171241760254
    2. ' dp' → logprob: -5.753181457519531
    3. '	dp' → logprob: -12.753181457519531
    4. '   ' → logprob: -14.753181457519531
    5. '(dp' → logprob: -15.628181457519531
    6. '               ' → logprob: -15.753181457519531
    7. '                   ' → logprob: -16.00318145751953
    8. '  ' → logprob: -17.00318145751953
    9. 'i' → logprob: -17.62818145751953
    10. '_dp' → logprob: -17.87818145751953

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.250001907348633
    3. 'dp' → logprob: -15.500001907348633
    4. '[' → logprob: -15.875001907348633
    5. ' [' → logprob: -17.250001907348633
    6. ' i' → logprob: -18.250001907348633
    7. '(i' → logprob: -18.375001907348633
    8. '{i' → logprob: -18.875001907348633
    9. '[I' → logprob: -19.625001907348633
    10. 'I' → logprob: -19.750001907348633

Token 418: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21181555092334747
    2. ' +' → logprob: -2.586815595626831
    3. ']' → logprob: -2.961815595626831
    4. ']!=' → logprob: -3.711815595626831
    5. '+i' → logprob: -3.711815595626831
    6. ']+' → logprob: -4.461815357208252
    7. '[i' → logprob: -6.461815357208252
    8. '[' → logprob: -7.211815357208252
    9. '!=' → logprob: -7.836815357208252
    10. ' !=' → logprob: -8.58681583404541

Token 419: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2876788079738617
    2. ' +' → logprob: -1.412678837776184
    3. '>' → logprob: -5.7876787185668945
    4. '!=' → logprob: -6.0376787185668945
    5. ' !=' → logprob: -7.6626787185668945
    6. '+i' → logprob: -8.037678718566895
    7. ' >' → logprob: -8.912678718566895
    8. 'dp' → logprob: -9.287678718566895
    9. '```' → logprob: -11.412678718566895
    10. 'i' → logprob: -11.537678718566895

Token 420: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -4.5491004129871726e-05
    2. ' use' → logprob: -10.000045776367188
    3. '(use' → logprob: -19.875045776367188
    4. '"use' → logprob: -20.375045776367188
    5. ',use' → logprob: -20.500045776367188
    6. '	use' → logprob: -20.625045776367188
    7. ' ' → logprob: -21.500045776367188
    8. '   ' → logprob: -22.125045776367188
    9. '```' → logprob: -22.250045776367188
    10. 'usage' → logprob: -22.500045776367188

Token 421: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47408327460289
    2. ' <' → logprob: -0.9740833044052124
    3. ' ' → logprob: -13.349082946777344
    4. '<int' → logprob: -14.349082946777344
    5. '<count' → logprob: -14.849082946777344
    6. '<th' → logprob: -14.974082946777344
    7. '<data' → logprob: -15.099082946777344
    8. ')' → logprob: -15.099082946777344
    9. ' ' → logprob: -15.224082946777344
    10. '<size' → logprob: -15.474082946777344

Token 422: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00018208740220870823
    2. ' dp' → logprob: -8.625182151794434
    3. '=' → logprob: -13.125182151794434
    4. '	dp' → logprob: -15.250182151794434
    5. '(dp' → logprob: -16.625181198120117
    6. '   ' → logprob: -16.625181198120117
    7. '
' → logprob: -17.125181198120117
    8. '_dp' → logprob: -18.500181198120117
    9. ' =' → logprob: -19.250181198120117
    10. '```' → logprob: -19.375181198120117

Token 423: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.125001907348633
    5. '(i' → logprob: -18.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. 's' → logprob: -18.375001907348633
    8. 'dp' → logprob: -19.500001907348633
    9. '[j' → logprob: -20.000001907348633
    10. '[
' → logprob: -20.375001907348633

Token 424: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006090328097343445
    2. '[val' → logprob: -8.000609397888184
    3. '+' → logprob: -8.875609397888184
    4. '+i' → logprob: -9.125609397888184
    5. 'val' → logprob: -11.500609397888184
    6. 'i' → logprob: -11.625609397888184
    7. ' +' → logprob: -12.500609397888184
    8. '[' → logprob: -13.875609397888184
    9. ']' → logprob: -14.875609397888184
    10. '
' → logprob: -15.000609397888184

Token 425: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -4.842555426876061e-06
    2. ' val' → logprob: -12.250004768371582
    3. '[val' → logprob: -17.7500057220459
    4. '	val' → logprob: -20.3750057220459
    5. '(val' → logprob: -21.0000057220459
    6. ',val' → logprob: -21.1250057220459
    7. '_val' → logprob: -21.7500057220459
    8. '           ' → logprob: -23.1250057220459
    9. '```' → logprob: -23.1250057220459
    10. '.val' → logprob: -23.2500057220459

Token 426: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.15678255259990692
    2. ']:
' → logprob: -2.406782627105713
    3. ']' → logprob: -2.906782627105713
    4. ']:
' → logprob: -8.781782150268555
    5. '[' → logprob: -9.656782150268555
    6. ']:

' → logprob: -10.406782150268555
    7. ':' → logprob: -10.531782150268555
    8. '       ' → logprob: -10.531782150268555
    9. ' ]' → logprob: -10.906782150268555
    10. '   ' → logprob: -11.781782150268555

Token 427: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0037604167591780424
    2. 'dp' → logprob: -6.50376033782959
    3. '                       ' → logprob: -6.75376033782959
    4. '               ' → logprob: -7.25376033782959
    5. ' dp' → logprob: -9.12876033782959
    6. '                           ' → logprob: -9.50376033782959
    7. '           ' → logprob: -9.75376033782959
    8. '[i' → logprob: -10.00376033782959
    9. '                  ' → logprob: -11.12876033782959
    10. '                    ' → logprob: -11.62876033782959

Token 428: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07900027930736542
    2. ' dp' → logprob: -2.579000234603882
    3. '                       ' → logprob: -9.329000473022461
    4. '                   ' → logprob: -10.954000473022461
    5. '	dp' → logprob: -12.829000473022461
    6. '               ' → logprob: -14.329000473022461
    7. '_dp' → logprob: -14.704000473022461
    8. '(dp' → logprob: -15.954000473022461
    9. '                           ' → logprob: -16.70400047302246
    10. '           ' → logprob: -16.70400047302246

Token 429: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. 'i' → logprob: -19.0
    4. '[int' → logprob: -19.125
    5. '[
' → logprob: -19.625
    6. '[I' → logprob: -20.25
    7. '[ip' → logprob: -20.875
    8. '(i' → logprob: -20.875
    9. '[n' → logprob: -21.125
    10. '=i' → logprob: -21.25

Token 430: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3320765197277069
    2. '+' → logprob: -1.5820765495300293
    3. '+i' → logprob: -2.5820765495300293
    4. 'i' → logprob: -7.457076549530029
    5. '[' → logprob: -7.957076549530029
    6. ']' → logprob: -8.207076072692871
    7. '[val' → logprob: -9.082076072692871
    8. ' +' → logprob: -10.457076072692871
    9. ']+' → logprob: -10.457076072692871
    10. '=i' → logprob: -12.332076072692871

Token 431: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.7432603272027336e-06
    2. ' val' → logprob: -13.625001907348633
    3. 'v' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '[val' → logprob: -16.750001907348633
    6. '	val' → logprob: -16.875001907348633
    7. 'va' → logprob: -17.375001907348633
    8. '_val' → logprob: -18.625001907348633
    9. 'vall' → logprob: -18.750001907348633
    10. '           ' → logprob: -18.750001907348633

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009312293259426951
    2. ']=' → logprob: -7.000931262969971
    3. ' ]' → logprob: -11.375930786132812
    4. '=' → logprob: -11.875930786132812
    5. ' =' → logprob: -13.750930786132812
    6. '[' → logprob: -16.500930786132812
    7. ']
' → logprob: -16.625930786132812
    8. ']+=' → logprob: -17.000930786132812
    9. ')' → logprob: -17.625930786132812
    10. '']' → logprob: -17.750930786132812

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408199310302734
    2. ' =' → logprob: -0.9740819931030273
    3. ']' → logprob: -12.974081993103027
    4. ']=' → logprob: -12.974081993103027
    5. ')' → logprob: -16.349082946777344
    6. '=
' → logprob: -16.474082946777344
    7. ')=' → logprob: -16.849082946777344
    8. '.=' → logprob: -16.974082946777344
    9. ' =
' → logprob: -16.974082946777344
    10. '＝' → logprob: -17.849082946777344

Token 434: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019293478690087795
    2. ' dp' → logprob: -6.25192928314209
    3. '	dp' → logprob: -14.50192928314209
    4. '                   ' → logprob: -15.62692928314209
    5. 'dc' → logprob: -17.001930236816406
    6. '(dp' → logprob: -17.751930236816406
    7. '   ' → logprob: -18.001930236816406
    8. '               ' → logprob: -18.376930236816406
    9. 'dt' → logprob: -18.626930236816406
    10. '                       ' → logprob: -18.626930236816406

Token 435: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -16.875
    3. '{i' → logprob: -19.375
    4. '(i' → logprob: -19.5
    5. '[' → logprob: -20.375
    6. '_i' → logprob: -21.5
    7. '[I' → logprob: -21.75
    8. '	i' → logprob: -21.875
    9. '   ' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 436: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003872974484693259
    2. ' +' → logprob: -8.375387191772461
    3. ']+' → logprob: -9.125387191772461
    4. ']' → logprob: -10.375387191772461
    5. '[' → logprob: -12.125387191772461
    6. '.' → logprob: -12.625387191772461
    7. '   ' → logprob: -13.875387191772461
    8. ' ' → logprob: -13.875387191772461
    9. '.val' → logprob: -14.500387191772461
    10. '.use' → logprob: -14.875387191772461

Token 437: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021923754829913378
    2. ' +' → logprob: -6.252192497253418
    3. 'use' → logprob: -8.252192497253418
    4. '(use' → logprob: -14.627192497253418
    5. ' use' → logprob: -14.877192497253418
    6. '   ' → logprob: -14.877192497253418
    7. '.use' → logprob: -15.127192497253418
    8. '       ' → logprob: -15.627192497253418
    9. '  ' → logprob: -15.627192497253418
    10. '"use' → logprob: -15.752192497253418

Token 438: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.00033558503491804004
    2. ' use' → logprob: -8.000335693359375
    3. '(use' → logprob: -16.375335693359375
    4. '	use' → logprob: -18.250335693359375
    5. '"use' → logprob: -19.375335693359375
    6. ',use' → logprob: -19.500335693359375
    7. '   ' → logprob: -19.750335693359375
    8. ' ' → logprob: -20.500335693359375
    9. '```' → logprob: -20.750335693359375
    10. 'used' → logprob: -21.000335693359375

Token 439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004952482995577157
    2. '
' → logprob: -8.250494956970215
    3. '               ' → logprob: -9.625494956970215
    4. '       ' → logprob: -9.750494956970215
    5. '                   ' → logprob: -10.500494956970215
    6. '   ' → logprob: -10.750494956970215
    7. '<|end|>' → logprob: -10.750494956970215
    8. '<|end|>' → logprob: -11.625494956970215
    9. '		' → logprob: -11.875494956970215
    10. 'token' → logprob: -12.875494956970215

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000579719664528966
    2. '               ' → logprob: -7.750579833984375
    3. '
' → logprob: -9.500579833984375
    4. '       ' → logprob: -10.625579833984375
    5. '            
' → logprob: -11.000579833984375
    6. '                   ' → logprob: -11.375579833984375
    7. '          ' → logprob: -12.375579833984375
    8. '            ' → logprob: -12.625579833984375
    9. '                    
' → logprob: -13.375579833984375
    10. '         ' → logprob: -13.500579833984375

Token 441: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00810256227850914
    2. '       ' → logprob: -4.8831024169921875
    3. '               ' → logprob: -8.758102416992188
    4. '   ' → logprob: -9.133102416992188
    5. '        ' → logprob: -9.258102416992188
    6. '    ' → logprob: -10.508102416992188
    7. '          ' → logprob: -10.508102416992188
    8. '            ' → logprob: -10.883102416992188
    9. '         ' → logprob: -11.383102416992188
    10. '      ' → logprob: -12.008102416992188

Token 442: ' <<=' (ID: 134025)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.33208900690078735
    2. ' <<=' → logprob: -1.5820889472961426
    3. '<<' → logprob: -2.5820889472961426
    4. ' *=' → logprob: -6.582088947296143
    5. '=' → logprob: -10.8320894241333
    6. '<=' → logprob: -12.3320894241333
    7. '```' → logprob: -12.9570894241333
    8. '<' → logprob: -13.5820894241333
    9. '+=' → logprob: -14.3320894241333
    10. '   ' → logprob: -14.4570894241333

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.5
    5. '１' → logprob: -21.0
    6. '0' → logprob: -21.0
    7. '
' → logprob: -21.5
    8. '2' → logprob: -22.4375
    9. '01' → logprob: -22.4375
    10. '۱' → logprob: -22.5625

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -19.5
    4. '0' → logprob: -19.625
    5. '１' → logprob: -20.9375
    6. '2' → logprob: -21.4375
    7. '   ' → logprob: -21.625
    8. '' → logprob: -21.75
    9. '۱' → logprob: -22.0
    10. '01' → logprob: -22.5

Token 445: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014199234545230865
    2. ' for' → logprob: -5.389199256896973
    3. '
' → logprob: -5.639199256896973
    4. 'for' → logprob: -5.889199256896973
    5. '    
' → logprob: -5.889199256896973
    6. 'while' → logprob: -9.014199256896973
    7. '<|end|>' → logprob: -9.139199256896973
    8. ' while' → logprob: -9.389199256896973
    9. '       ' → logprob: -10.514199256896973
    10. '        
' → logprob: -11.264199256896973

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07679545134305954
    2. 'min' → logprob: -3.9517953395843506
    3. 'result' → logprob: -3.9517953395843506
    4. 'ans' → logprob: -4.82679557800293
    5. 'answer' → logprob: -4.82679557800293
    6. 'res' → logprob: -5.07679557800293
    7. 'best' → logprob: -5.45179557800293
    8. 'minimal' → logprob: -5.45179557800293
    9. ' minimal' → logprob: -6.57679557800293
    10. ' res' → logprob: -7.07679557800293

Token 447: ' res' (ID: 694)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.42101147770881653
    2. 'res' (adapté à ' res') → logprob: -1.4210114479064941
    3. 'result' → logprob: -2.671011447906494
    4. 'answer' → logprob: -3.421011447906494
    5. '   ' → logprob: -9.046011924743652
    6. 'min' → logprob: -9.671011924743652
    7. ' ans' → logprob: -10.421011924743652
    8. '
' → logprob: -10.546011924743652
    9. 'best' → logprob: -10.546011924743652
    10. '    
' → logprob: -11.796011924743652

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196925416588783
    2. '=' → logprob: -2.81196928024292
    3. '_' → logprob: -14.311968803405762
    4. '   ' → logprob: -14.561968803405762
    5. ' ' → logprob: -16.186969757080078
    6. ',' → logprob: -16.311969757080078
    7. 's' → logprob: -16.686969757080078
    8. '[' → logprob: -16.811969757080078
    9. '=[]' → logprob: -16.811969757080078
    10. '＝' → logprob: -16.936969757080078

Token 449: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00010914575977949426
    2. ' INF' → logprob: -9.87510871887207
    3. 'min' → logprob: -10.00010871887207
    4. '10' → logprob: -11.62510871887207
    5. 'inf' → logprob: -13.75010871887207
    6. 'float' → logprob: -14.12510871887207
    7. '100' → logprob: -14.25010871887207
    8. 'IN' → logprob: -15.37510871887207
    9. '_INF' → logprob: -15.87510871887207
    10. 'MIN' → logprob: -16.75010871887207

Token 450: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3436621129512787
    2. 'for' → logprob: -1.718662142753601
    3. '   ' → logprob: -2.8436620235443115
    4. ' for' → logprob: -2.9686620235443115
    5. '    
' → logprob: -6.468662261962891
    6. '  
' → logprob: -8.96866226196289
    7. '<|end|>' → logprob: -9.59366226196289
    8. ' 
' → logprob: -9.71866226196289
    9. '
' → logprob: -9.96866226196289
    10. '	for' → logprob: -10.34366226196289

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20330554246902466
    2. '
' → logprob: -2.07830548286438
    3. 'for' → logprob: -3.45330548286438
    4. ' for' → logprob: -3.70330548286438
    5. '    
' → logprob: -6.078305721282959
    6. '  
' → logprob: -9.2033052444458
    7. ' 
' → logprob: -9.3283052444458
    8. '   
' → logprob: -10.7033052444458
    9. '	for' → logprob: -11.7033052444458
    10. '<|end|>' → logprob: -11.8283052444458

Token 452: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' for' → logprob: -14.000005722045898
    4. '```' → logprob: -21.6250057220459
    5. '
' → logprob: -22.2500057220459
    6. '	for' → logprob: -22.3750057220459
    7. 'from' → logprob: -23.2500057220459
    8. '    
' → logprob: -23.6250057220459
    9. '#' (adapté à ' #') → logprob: -25.3750057220459
    10. '``' → logprob: -26.1250057220459

Token 453: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.250001907348633
    3. ' for' → logprob: -15.125001907348633
    4. 'fo' → logprob: -18.125001907348633
    5. 'from' → logprob: -18.375001907348633
    6. '
' → logprob: -19.250001907348633
    7. '    
' → logprob: -19.625001907348633
    8. 'i' → logprob: -19.875001907348633
    9. '#' → logprob: -19.875001907348633
    10. '```' → logprob: -19.875001907348633

Token 454: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6843083500862122
    2. 'for' → logprob: -1.5593082904815674
    3. 'i' → logprob: -2.0593082904815674
    4. ' for' → logprob: -2.6843082904815674
    5. ' i' → logprob: -2.9343082904815674
    6. 'pay' → logprob: -3.9343082904815674
    7. 'amount' → logprob: -4.8093085289001465
    8. ' pay' → logprob: -6.1843085289001465
    9. ' amount' → logprob: -6.1843085289001465
    10. ' paid' → logprob: -6.4343085289001465

Token 455: ' sums' (ID: 73121)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.45250099897384644
    2. 'i' → logprob: -1.4525010585784912
    3. ' pay' → logprob: -2.952501058578491
    4. ' i' → logprob: -3.327501058578491
    5. 'amount' → logprob: -3.952501058578491
    6. 'paid' → logprob: -4.327500820159912
    7. ' paid' → logprob: -5.702500820159912
    8. ' amount' → logprob: -6.327500820159912
    9. '   ' → logprob: -6.952500820159912
    10. 'x' → logprob: -7.077500820159912

Token 456: ' >=' (ID: 5064)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3781374990940094
    2. 'for' → logprob: -2.3781375885009766
    3. ' for' → logprob: -2.3781375885009766
    4. 'in' → logprob: -2.8781375885009766
    5. '   ' → logprob: -2.8781375885009766
    6. 'i' → logprob: -4.628137588500977
    7. 'from' → logprob: -5.753137588500977
    8. ' i' → logprob: -5.753137588500977
    9. ' from' → logprob: -7.378137588500977
    10. ' P' → logprob: -10.253137588500977

Token 457: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.081584716506768e-05
    2. ' P' → logprob: -11.375020980834961
    3. '   ' → logprob: -11.625020980834961
    4. '	P' → logprob: -16.37502098083496
    5. '`' → logprob: -16.62502098083496
    6. '>P' → logprob: -17.12502098083496
    7. '```' → logprob: -17.25002098083496
    8. '[P' → logprob: -17.37502098083496
    9. '(P' → logprob: -17.50002098083496
    10. '_P' → logprob: -17.50002098083496

Token 458: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07129329442977905
    2. 'for' → logprob: -2.821293354034424
    3. ' for' → logprob: -4.696293354034424
    4. '
' → logprob: -9.071292877197266
    5. ',' → logprob: -10.446292877197266
    6. ' and' → logprob: -12.821292877197266
    7. 'and' → logprob: -12.946292877197266
    8. '    
' → logprob: -13.821292877197266
    9. '	for' → logprob: -13.946292877197266
    10. ' to' → logprob: -14.571292877197266

Token 459: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.660198986530304
    2. 'for' → logprob: -0.910198986530304
    3. '   ' → logprob: -2.535198926925659
    4. ' i' → logprob: -6.785199165344238
    5. 'i' → logprob: -8.660199165344238
    6. ' range' → logprob: -9.035199165344238
    7. 'range' → logprob: -9.660199165344238
    8. ' and' → logprob: -10.785199165344238
    9. ' ' → logprob: -11.035199165344238
    10. '  ' → logprob: -11.910199165344238

Token 460: ' total' (ID: 3609)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6033415794372559
    2. ' dp' → logprob: -1.4783415794372559
    3. '   ' → logprob: -2.353341579437256
    4. 'for' → logprob: -3.353341579437256
    5. 'change' → logprob: -3.478341579437256
    6. ' change' → logprob: -3.978341579437256
    7. ' for' → logprob: -3.978341579437256
    8. 'res' → logprob: -4.853341579437256
    9. ' res' → logprob: -5.728341579437256
    10. ' total' → logprob: -5.853341579437256

Token 461: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.42366641759872437
    2. '   ' → logprob: -1.2986664772033691
    3. ' coins' → logprob: -3.048666477203369
    4. '_co' → logprob: -4.423666477203369
    5. 'for' → logprob: -4.923666477203369
    6. ' for' → logprob: -6.423666477203369
    7. '       ' → logprob: -6.548666477203369
    8. '_' → logprob: -7.173666477203369
    9. 'co' → logprob: -7.798666477203369
    10. ' ' → logprob: -8.173666000366211

Token 462: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010508043691515923
    2. 'for' → logprob: -5.135508060455322
    3. ' for' → logprob: -5.635508060455322
    4. ' used' → logprob: -7.885508060455322
    5. 'used' → logprob: -8.385507583618164
    6. ',' → logprob: -9.135507583618164
    7. '+' → logprob: -9.385507583618164
    8. ' =' → logprob: -9.510507583618164
    9. ' +' → logprob: -10.635507583618164
    10. '=' → logprob: -11.135507583618164

Token 463: ' paid' (ID: 9927)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024107007309794426
    2. ' dp' → logprob: -3.774106979370117
    3. '   ' → logprob: -7.274106979370117
    4. '           ' → logprob: -9.774106979370117
    5. '       ' → logprob: -10.024106979370117
    6. '	dp' → logprob: -10.274106979370117
    7. '    ' → logprob: -11.899106979370117
    8. '(dp' → logprob: -12.024106979370117
    9. '               ' → logprob: -12.399106979370117
    10. ' ' → logprob: -12.899106979370117

Token 464: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4492485225200653
    2. ' +' → logprob: -1.0742485523223877
    3. 'coins' → logprob: -4.699248313903809
    4. '   ' → logprob: -4.699248313903809
    5. ' coins' → logprob: -8.324248313903809
    6. '_tokens' → logprob: -8.324248313903809
    7. '_' → logprob: -8.449248313903809
    8. '_co' → logprob: -8.449248313903809
    9. '    ' → logprob: -8.699248313903809
    10. '_num' → logprob: -8.824248313903809

Token 465: ' change' (ID: 3343)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01453649066388607
    2. ' min' → logprob: -4.264536380767822
    3. 'change' → logprob: -8.26453685760498
    4. '   ' → logprob: -10.13953685760498
    5. ' change' → logprob: -10.13953685760498
    6. '(min' → logprob: -11.38953685760498
    7. '
' → logprob: -11.88953685760498
    8. '```' → logprob: -12.13953685760498
    9. 'dp' → logprob: -12.51453685760498
    10. 'res' → logprob: -13.63953685760498

Token 466: ' coins' (ID: 28969)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01849042810499668
    2. 'for' → logprob: -4.018490314483643
    3. ' for' → logprob: -8.0184907913208
    4. '
' → logprob: -11.5184907913208
    5. '	for' → logprob: -14.5184907913208
    6. '    
' → logprob: -14.7684907913208
    7. '       ' → logprob: -16.893489837646484
    8. '  ' → logprob: -16.893489837646484
    9. ' ' → logprob: -17.143489837646484
    10. ',' → logprob: -17.768489837646484

Token 467: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074975439347326756
    2. 'for' → logprob: -5.007497310638428
    3. ' for' → logprob: -7.257497310638428
    4. '
' → logprob: -9.507497787475586
    5. '    
' → logprob: -13.632497787475586
    6. '	for' → logprob: -13.757497787475586
    7. ',' → logprob: -15.882497787475586
    8. '       ' → logprob: -16.382497787475586
    9. '  ' → logprob: -16.757497787475586
    10. ' ' → logprob: -16.882497787475586

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009329007007181644
    2. 'for' → logprob: -4.759328842163086
    3. ' for' → logprob: -7.634328842163086
    4. '
' → logprob: -8.384328842163086
    5. '	for' → logprob: -14.009328842163086
    6. '    
' → logprob: -14.384328842163086
    7. '```' → logprob: -14.509328842163086
    8. '       ' → logprob: -17.134328842163086
    9. ',' → logprob: -17.509328842163086
    10. ' ' → logprob: -17.634328842163086

Token 469: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023272618651390076
    2. '   ' → logprob: -3.7732725143432617
    3. ' for' → logprob: -10.523272514343262
    4. '
' → logprob: -15.898272514343262
    5. '	for' → logprob: -16.398273468017578
    6. 'i' → logprob: -17.148273468017578
    7. '```' → logprob: -18.148273468017578
    8. 'from' → logprob: -18.273273468017578
    9. '    
' → logprob: -18.523273468017578
    10. '       ' → logprob: -19.898273468017578

Token 470: ' paid' (ID: 9927)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.9185895919799805
    2. 'pay' → logprob: -1.1685895919799805
    3. 'amt' → logprob: -2.0435895919799805
    4. 'paid' → logprob: -2.6685895919799805
    5. 'x' → logprob: -3.7935895919799805
    6. 'i' → logprob: -3.7935895919799805
    7. 'cost' → logprob: -3.9185895919799805
    8. 'price' → logprob: -4.2935895919799805
    9. 's' → logprob: -5.9185895919799805
    10. ' pay' → logprob: -6.2935895919799805

Token 471: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5233737826347351
    2. ' in' → logprob: -0.8983737826347351
    3. ' ' → logprob: -9.6483736038208
    4. '	in' → logprob: -10.0233736038208
    5. '_in' → logprob: -10.1483736038208
    6. 'amount' → logprob: -10.5233736038208
    7. '_amount' → logprob: -10.7733736038208
    8. 'i' → logprob: -11.0233736038208
    9. '   ' → logprob: -11.0233736038208
    10. '_' → logprob: -12.1483736038208

Token 472: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -19.875059127807617
    4. '   ' → logprob: -20.000059127807617
    5. ' ' → logprob: -21.125059127807617
    6. '	range' → logprob: -22.500059127807617
    7. '  ' → logprob: -23.000059127807617
    8. 'Range' → logprob: -24.000059127807617
    9. '    ' → logprob: -24.625059127807617
    10. '
' → logprob: -24.875059127807617

Token 473: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.006731711328029633
    2. 'P' → logprob: -5.0067315101623535
    3. '[P' → logprob: -11.131731986999512
    4. '   ' → logprob: -14.131731986999512
    5. '(' → logprob: -14.256731986999512
    6. '	P' → logprob: -15.881731986999512
    7. ',P' → logprob: -16.131731033325195
    8. ' P' → logprob: -17.256731033325195
    9. ' (' → logprob: -18.381731033325195
    10. '(p' → logprob: -18.631731033325195

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1273649036884308
    2. ',total' → logprob: -2.1273648738861084
    3. ' ,' → logprob: -7.7523651123046875
    4. 'total' → logprob: -13.127365112304688
    5. ',P' → logprob: -13.502365112304688
    6. ',len' → logprob: -13.502365112304688
    7. '   ' → logprob: -14.377365112304688
    8. ',
' → logprob: -14.502365112304688
    9. ',int' → logprob: -14.627365112304688
    10. ',max' → logprob: -15.627365112304688

Token 475: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -3.8889261304575484e-06
    2. ' total' → logprob: -12.500003814697266
    3. 'len' → logprob: -16.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '(total' → logprob: -20.250003814697266
    6. '           ' → logprob: -20.750003814697266
    7. '	total' → logprob: -22.000003814697266
    8. 'max' → logprob: -22.125003814697266
    9. 'tot' → logprob: -22.500003814697266
    10. ',total' → logprob: -23.000003814697266

Token 476: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -9.088346359931165e-07
    2. 'money' → logprob: -14.125000953674316
    3. '+' → logprob: -17.0
    4. '_m' → logprob: -17.125
    5. '_' → logprob: -17.25
    6. '_amount' → logprob: -17.375
    7. 'Money' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. '_mon' → logprob: -18.875
    10. ')' → logprob: -19.0

Token 477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007101670489646494
    2. ' +' → logprob: -7.2507100105285645
    3. '+
' → logprob: -16.250709533691406
    4. '   ' → logprob: -16.500709533691406
    5. '):
' → logprob: -17.250709533691406
    6. ')+' → logprob: -17.375709533691406
    7. '＋' → logprob: -17.875709533691406
    8. ')' → logprob: -18.125709533691406
    9. '
' → logprob: -18.625709533691406
    10. '):' → logprob: -18.875709533691406

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.000015258789062
    4. ')' → logprob: -16.000015258789062
    5. '
' → logprob: -16.500015258789062
    6. '```' → logprob: -16.625015258789062
    7. '):
' → logprob: -18.062515258789062
    8. '１' → logprob: -18.875015258789062
    9. '۱' → logprob: -19.312515258789062
    10. ',' → logprob: -19.312515258789062

Token 479: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4843398630619049
    2. '):' → logprob: -0.9843398332595825
    3. ':' → logprob: -4.609339714050293
    4. '   ' → logprob: -9.109339714050293
    5. ':
' → logprob: -9.484339714050293
    6. '):
' → logprob: -9.859339714050293
    7. ')' → logprob: -11.734339714050293
    8. '       ' → logprob: -13.234339714050293
    9. '+' → logprob: -14.109339714050293
    10. '):

' → logprob: -14.484339714050293

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005195511621423066
    2. ' if' → logprob: -8.375519752502441
    3. '   ' → logprob: -9.000519752502441
    4. ',' → logprob: -10.375519752502441
    5. '        
' → logprob: -10.875519752502441
    6. '
' → logprob: -10.875519752502441
    7. '```' → logprob: -10.875519752502441
    8. '    ' → logprob: -11.625519752502441
    9. '     ' → logprob: -11.625519752502441
    10. '      ' → logprob: -11.875519752502441

Token 481: ' if' (ID: 538)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.45741936564445496
    2. 'if' (adapté à ' if') → logprob: -2.4574193954467773
    3. 'coins' → logprob: -2.4574193954467773
    4. ' if' → logprob: -2.9574193954467773
    5. ' change' → logprob: -3.0824193954467773
    6. '       ' → logprob: -3.0824193954467773
    7. '           ' → logprob: -3.8324193954467773
    8. 'res' → logprob: -4.457419395446777
    9. 'total' → logprob: -5.207419395446777
    10. ' coins' → logprob: -5.207419395446777

Token 482: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20141801238059998
    2. ' dp' → logprob: -1.7014180421829224
    3. '	dp' → logprob: -12.701417922973633
    4. '(dp' → logprob: -14.076417922973633
    5. '   ' → logprob: -14.701417922973633
    6. '_dp' → logprob: -14.826417922973633
    7. 'd' → logprob: -16.701417922973633
    8. '.dp' → logprob: -17.701417922973633
    9. ' ' → logprob: -17.701417922973633
    10. '```' → logprob: -18.826417922973633

Token 483: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'paid' → logprob: -14.875000953674316
    3. '[p' → logprob: -15.375000953674316
    4. '```' → logprob: -16.0
    5. ' [' → logprob: -16.625
    6. '   ' → logprob: -16.75
    7. '[
' → logprob: -19.5
    8. 'Paid' → logprob: -19.625
    9. '[i' → logprob: -19.625
    10. '_paid' → logprob: -19.75

Token 484: 'paid' (ID: 36409)
  Prédit: 'paid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paid' → logprob: -9.491498531133402e-06
    2. ' paid' → logprob: -11.625009536743164
    3. '-paid' → logprob: -15.500009536743164
    4. '_paid' → logprob: -15.875009536743164
    5. '[' → logprob: -16.625009536743164
    6. 'pa' → logprob: -17.750009536743164
    7. 'Paid' → logprob: -18.625009536743164
    8. 'pay' → logprob: -18.625009536743164
    9. 'p' → logprob: -18.750009536743164
    10. '```' → logprob: -19.625009536743164

Token 485: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4545510709285736
    2. ']' → logprob: -1.829551100730896
    3. '==' → logprob: -2.0795509815216064
    4. ']!=' → logprob: -3.3295509815216064
    5. ' !=' → logprob: -3.4545509815216064
    6. ']==' → logprob: -4.9545512199401855
    7. ' ==' → logprob: -5.8295512199401855
    8. ')' → logprob: -6.3295512199401855
    9. ')!=' → logprob: -8.079550743103027
    10. '```' → logprob: -9.079550743103027

Token 486: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.051522571593523026
    2. '==' → logprob: -3.4265224933624268
    3. ' !=' → logprob: -4.051522731781006
    4. ' ==' → logprob: -8.176522254943848
    5. '<' → logprob: -10.801522254943848
    6. '()!=' → logprob: -12.301522254943848
    7. ']!=' → logprob: -12.426522254943848
    8. '```' → logprob: -12.426522254943848
    9. ')!=' → logprob: -13.051522254943848
    10. '=' → logprob: -13.301522254943848

Token 487: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.6537622034084052e-05
    2. ' INF' → logprob: -10.62502670288086
    3. '   ' → logprob: -14.75002670288086
    4. ' ' → logprob: -14.75002670288086
    5. 'IN' → logprob: -15.12502670288086
    6. '  ' → logprob: -15.37502670288086
    7. 'inf' → logprob: -15.50002670288086
    8. '0' → logprob: -15.62502670288086
    9. '_INF' → logprob: -15.62502670288086
    10. '```' → logprob: -16.12502670288086

Token 488: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07024440169334412
    2. ':
' → logprob: -3.320244312286377
    3. '           ' → logprob: -3.570244312286377
    4. ' or' → logprob: -5.945244312286377
    5. '       ' → logprob: -7.070244312286377
    6. ':return' → logprob: -10.820244789123535
    7. ' and' → logprob: -11.320244789123535
    8. '          ' → logprob: -11.820244789123535
    9. ' continue' → logprob: -12.195244789123535
    10. ',' → logprob: -12.320244789123535

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026773218996822834
    2. ' continue' → logprob: -6.0026774406433105
    3. 'continue' → logprob: -8.877676963806152
    4. '       ' → logprob: -9.877676963806152
    5. ' continues' → logprob: -12.502676963806152
    6. '	       ' → logprob: -13.252676963806152
    7. '               ' → logprob: -13.752676963806152
    8. '```' → logprob: -14.127676963806152
    9. ',' → logprob: -14.502676963806152
    10. '          ' → logprob: -14.627676963806152

Token 490: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17034609615802765
    2. 'continue' (adapté à ' continue') → logprob: -2.1703460216522217
    3. ' continue' → logprob: -3.1703460216522217
    4. '       ' → logprob: -7.920346260070801
    5. '               ' → logprob: -9.6703462600708
    6. '	continue' → logprob: -10.1703462600708
    7. '   ' → logprob: -10.7953462600708
    8. 'contin' → logprob: -12.5453462600708
    9. '_continue' → logprob: -12.9203462600708
    10. '		' → logprob: -13.0453462600708

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019376569252926856
    2. '
' → logprob: -10.00019359588623
    3. '   ' → logprob: -10.00019359588623
    4. '           ' → logprob: -10.25019359588623
    5. ',' → logprob: -10.75019359588623
    6. '        
' → logprob: -10.87519359588623
    7. '```' → logprob: -11.75019359588623
    8. ' if' → logprob: -12.37519359588623
    9. '<|end|>' → logprob: -12.87519359588623
    10. '    
' → logprob: -13.25019359588623

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011147446930408478
    2. ' change' → logprob: -4.761147499084473
    3. 'change' → logprob: -6.511147499084473
    4. '   ' → logprob: -7.261147499084473
    5. '           ' → logprob: -9.136147499084473
    6. ' if' → logprob: -9.386147499084473
    7. '```' → logprob: -10.136147499084473
    8. ' total' → logprob: -10.261147499084473
    9. 'total' → logprob: -11.511147499084473
    10. '
' → logprob: -11.761147499084473

Token 493: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.866007924079895
    2. '       ' → logprob: -0.991007924079895
    3. ' change' → logprob: -1.616007924079895
    4. '   ' → logprob: -6.2410078048706055
    5. 'total' → logprob: -6.6160078048706055
    6. ' total' → logprob: -6.7410078048706055
    7. ' res' → logprob: -6.7410078048706055
    8. '           ' → logprob: -6.8660078048706055
    9. 'res' → logprob: -7.2410078048706055
    10. 'coins' → logprob: -7.7410078048706055

Token 494: ' =' (ID: 314)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5063841342926025
    2. ' =' → logprob: -1.0063841342926025
    3. '=' → logprob: -3.5063841342926025
    4. '_cnt' → logprob: -7.006383895874023
    5. '_tokens' → logprob: -8.881383895874023
    6. 'coins' → logprob: -8.881383895874023
    7. '_num' → logprob: -8.881383895874023
    8. '_count' → logprob: -9.256383895874023
    9. '=_' → logprob: -9.256383895874023
    10. '_coin' → logprob: -10.131383895874023

Token 495: ' paid' (ID: 9927)
  Prédit: 'paid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paid' → logprob: -0.0004311460361350328
    2. ' paid' → logprob: -7.750431060791016
    3. 'pay' → logprob: -15.250431060791016
    4. '   ' → logprob: -15.875431060791016
    5. 'pa' → logprob: -16.625431060791016
    6. 'p' → logprob: -18.250431060791016
    7. '-paid' → logprob: -18.500431060791016
    8. ' ' → logprob: -18.625431060791016
    9. '_paid' → logprob: -18.625431060791016
    10. '```' → logprob: -18.875431060791016

Token 496: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7847743630409241
    2. '=' → logprob: -0.9097743630409241
    3. ' =' → logprob: -2.6597743034362793
    4. ' -' → logprob: -2.6597743034362793
    5. '-=' → logprob: -7.909774303436279
    6. '   ' → logprob: -8.534774780273438
    7. ' -=' → logprob: -8.659774780273438
    8. 'change' → logprob: -8.784774780273438
    9. '_change' → logprob: -10.034774780273438
    10. '_max' → logprob: -10.159774780273438

Token 497: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.512236498361744e-07
    2. ' P' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -18.75
    4. '>P' → logprob: -19.625
    5. '[P' → logprob: -19.625
    6. '<P' → logprob: -21.0
    7. '   ' → logprob: -21.375
    8. '(P' → logprob: -21.5
    9. '	P' → logprob: -21.75
    10. 'p' → logprob: -22.375

Token 498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2588604986667633
    2. '
' → logprob: -1.508860468864441
    3. ')
' → logprob: -5.6338605880737305
    4. ')' → logprob: -6.0088605880737305
    5. '           ' → logprob: -8.63386058807373
    6. '   ' → logprob: -9.00886058807373
    7. 'res' → logprob: -9.00886058807373
    8. '        
' → logprob: -9.25886058807373
    9. ',' → logprob: -10.00886058807373
    10. '+' → logprob: -10.25886058807373

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1326969712972641
    2. 'res' → logprob: -2.1326968669891357
    3. 'total' → logprob: -6.507697105407715
    4. ' res' → logprob: -6.632697105407715
    5. 'tokens' → logprob: -7.007697105407715
    6. 'coins' → logprob: -7.132697105407715
    7. 'count' → logprob: -7.507697105407715
    8. 'cnt' → logprob: -8.882697105407715
    9. '   ' → logprob: -9.132697105407715
    10. '           ' → logprob: -9.382697105407715

Token 500: ' c' (ID: 274)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2985288202762604
    2. 'coins' → logprob: -1.548528790473938
    3. 'total' → logprob: -3.4235289096832275
    4. 'cost' → logprob: -6.048528671264648
    5. 'temp' → logprob: -6.173528671264648
    6. 'tmp' → logprob: -6.298528671264648
    7. 'curr' → logprob: -6.798528671264648
    8. 'change' → logprob: -6.798528671264648
    9. '       ' → logprob: -7.048528671264648
    10. 'cur' → logprob: -7.548528671264648

Token 501: 'coins' (ID: 48264)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4398607909679413
    2. 'o' → logprob: -1.8148608207702637
    3. 'oin' → logprob: -2.9398608207702637
    4. 'ost' → logprob: -3.3148608207702637
    5. 'nt' → logprob: -3.3148608207702637
    6. 'change' → logprob: -3.9398608207702637
    7. 'ount' → logprob: -4.439860820770264
    8. '=' → logprob: -4.814860820770264
    9. 'coins' → logprob: -4.939860820770264
    10. 'nts' → logprob: -5.314860820770264

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6132982969284058
    2. '=' → logprob: -0.8632982969284058
    3. 't' → logprob: -4.238298416137695
    4. 'ts' → logprob: -4.613298416137695
    5. 'h' → logprob: -5.988298416137695
    6. '=min' → logprob: -6.113298416137695
    7. 'nts' → logprob: -6.238298416137695
    8. 'change' → logprob: -6.488298416137695
    9. 'ount' → logprob: -6.988298416137695
    10. '_num' → logprob: -7.863298416137695

Token 503: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011048170737922192
    2. ' min' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.636048316955566
    4. ' ' → logprob: -16.76104736328125
    5. '0' → logprob: -17.13604736328125
    6. 'max' → logprob: -17.26104736328125
    7. '	min' → logprob: -17.51104736328125
    8. 'm' → logprob: -18.38604736328125
    9. 'mi' → logprob: -18.63604736328125
    10. '  ' → logprob: -18.88604736328125

Token 504: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.6240566083070007e-06
    2. 'coins' → logprob: -14.250001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_coin' → logprob: -15.875001907348633
    5. '_change' → logprob: -16.500001907348633
    6. '\' → logprob: -17.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. ' coins' → logprob: -18.375001907348633
    9. '_changes' → logprob: -18.625001907348633
    10. '`' → logprob: -19.125001907348633

Token 505: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0029491744935512543
    2. 'coins' → logprob: -5.877949237823486
    3. 'ns' → logprob: -9.752948760986328
    4. '_' → logprob: -10.627948760986328
    5. '_co' → logprob: -10.877948760986328
    6. 'in' → logprob: -10.877948760986328
    7. 'o' → logprob: -12.127948760986328
    8. '_ins' → logprob: -12.252948760986328
    9. 'Coins' → logprob: -13.752948760986328
    10. '
' → logprob: -13.877948760986328

Token 506: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -1.9361264946837764e-07
    2. '_ch' → logprob: -16.0
    3. '_' → logprob: -17.0
    4. '_return' → logprob: -18.25
    5. 'change' → logprob: -18.375
    6. 'Change' → logprob: -18.625
    7. '_co' → logprob: -18.75
    8. '_CHANGE' → logprob: -19.125
    9. '_choice' → logprob: -19.625
    10. '_coin' → logprob: -19.875

Token 507: '(change' (ID: 95178)
  Prédit: '(change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(change' → logprob: -7.896309739408025e-07
    2. 'change' → logprob: -14.375000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(c' → logprob: -18.875
    5. ' (' → logprob: -18.875
    6. ' change' → logprob: -20.0
    7. '(
' → logprob: -20.25
    8. '(ch' → logprob: -20.625
    9. '(choice' → logprob: -20.875
    10. '(Change' → logprob: -21.125

Token 508: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07906284928321838
    2. ')' → logprob: -2.5790629386901855
    3. '       ' → logprob: -8.954062461853027
    4. ')
' → logprob: -10.079062461853027
    5. ' )
' → logprob: -13.954062461853027
    6. ')

' → logprob: -14.454062461853027
    7. '   ' → logprob: -14.954062461853027
    8. ' )' → logprob: -17.079063415527344
    9. '           ' → logprob: -17.329063415527344
    10. ')`
' → logprob: -17.829063415527344

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012227282859385014
    2. ' if' → logprob: -7.126222610473633
    3. 'res' → logprob: -8.501222610473633
    4. ' res' → logprob: -9.126222610473633
    5. ' total' → logprob: -10.376222610473633
    6. 'if' → logprob: -10.501222610473633
    7. 'total' → logprob: -10.501222610473633
    8. '
' → logprob: -11.126222610473633
    9. '   ' → logprob: -13.376222610473633
    10. '        
' → logprob: -13.501222610473633

Token 510: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18080975115299225
    2. '       ' → logprob: -2.805809736251831
    3. 'if' → logprob: -3.055809736251831
    4. 'total' (adapté à ' total') → logprob: -3.055809736251831
    5. ' res' → logprob: -4.93080997467041
    6. ' if' → logprob: -5.93080997467041
    7. ' total' → logprob: -7.93080997467041
    8. '   ' → logprob: -8.55580997467041
    9. 'result' → logprob: -8.93080997467041
    10. 'temp' → logprob: -9.68080997467041

Token 511: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.14398446679115295
    2. ' =' → logprob: -2.26898455619812
    3. '=' → logprob: -3.51898455619812
    4. 'coins' → logprob: -7.268984317779541
    5. '   ' → logprob: -9.8939847946167
    6. 'Coins' → logprob: -9.8939847946167
    7. '_used' → logprob: -9.8939847946167
    8. '_cost' → logprob: -10.1439847946167
    9. '_' → logprob: -10.6439847946167
    10. '_count' → logprob: -11.0189847946167

Token 512: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -2.463036435074173e-05
    2. 'in' → logprob: -11.500024795532227
    3. '   ' → logprob: -12.625024795532227
    4. 'i' → logprob: -13.375024795532227
    5. 'coins' → logprob: -13.375024795532227
    6. 'ints' → logprob: -13.625024795532227
    7. '=' → logprob: -13.625024795532227
    8. '#' → logprob: -14.000024795532227
    9. 'ns' → logprob: -14.625024795532227
    10. '       ' → logprob: -14.875024795532227

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687199354171753
    2. ' =' → logprob: -1.1368720531463623
    3. '   ' → logprob: -15.011872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '＝' → logprob: -15.636872291564941
    6. '	' → logprob: -16.011871337890625
    7. '    ' → logprob: -16.511871337890625
    8. ' ' → logprob: -16.886871337890625
    9. ')' → logprob: -17.761871337890625
    10. '  ' → logprob: -18.011871337890625

Token 514: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006716317031532526
    2. ' dp' → logprob: -5.006716251373291
    3. '	dp' → logprob: -14.50671672821045
    4. '(dp' → logprob: -15.75671672821045
    5. 'dc' → logprob: -16.006715774536133
    6. '       ' → logprob: -16.756715774536133
    7. '_dp' → logprob: -17.256715774536133
    8. '   ' → logprob: -18.006715774536133
    9. 'res' → logprob: -18.256715774536133
    10. '.dp' → logprob: -18.506715774536133

Token 515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1888679839321412e-05
    2. 'paid' → logprob: -10.750021934509277
    3. '[p' → logprob: -15.875021934509277
    4. ' [' → logprob: -16.50002098083496
    5. 'Paid' → logprob: -16.50002098083496
    6. '```' → logprob: -16.62502098083496
    7. '_paid' → logprob: -16.75002098083496
    8. ' paid' → logprob: -17.87502098083496
    9. '   ' → logprob: -18.00002098083496
    10. 'p' → logprob: -18.50002098083496

Token 516: 'paid' (ID: 36409)
  Prédit: 'paid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paid' → logprob: -1.5048530030981055e-06
    2. ' paid' → logprob: -13.750001907348633
    3. '[' → logprob: -15.375001907348633
    4. '_paid' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '-paid' → logprob: -17.875001907348633
    7. '
' → logprob: -18.750001907348633
    8. ' ' → logprob: -20.000001907348633
    9. 'Paid' → logprob: -20.125001907348633
    10. '```' → logprob: -20.125001907348633

Token 517: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3870299458503723
    2. ' +' → logprob: -1.1370298862457275
    3. '+c' → logprob: -8.762029647827148
    4. ')+' → logprob: -13.762029647827148
    5. ']+' → logprob: -14.387029647827148
    6. ')' → logprob: -15.137029647827148
    7. '+
' → logprob: -16.13702964782715
    8. ' ' → logprob: -16.26202964782715
    9. '   ' → logprob: -16.51202964782715
    10. ']' → logprob: -16.76202964782715

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04912002384662628
    2. ' +' → logprob: -3.0491199493408203
    3. '+c' → logprob: -7.54911994934082
    4. '   ' → logprob: -12.92411994934082
    5. '+C' → logprob: -13.54911994934082
    6. '+
' → logprob: -13.92411994934082
    7. '       ' → logprob: -15.42411994934082
    8. '    ' → logprob: -15.42411994934082
    9. '+r' → logprob: -16.17411994934082
    10. ' +
' → logprob: -16.17411994934082

Token 519: ' c' (ID: 274)
  Prédit: 'cco'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cco' → logprob: -0.018738608807325363
    2. 'cc' → logprob: -4.268738746643066
    3. 'c' → logprob: -5.643738746643066
    4. ' c' → logprob: -6.893738746643066
    5. 'ccio' → logprob: -12.268738746643066
    6. '   ' → logprob: -13.143738746643066
    7. ' ' → logprob: -13.268738746643066
    8. '
' → logprob: -14.518738746643066
    9. '	cc' → logprob: -14.518738746643066
    10. 'ccan' → logprob: -15.018738746643066

Token 520: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -2.248469718324486e-05
    2. 'co' → logprob: -11.000022888183594
    3. 'o' → logprob: -12.625022888183594
    4. 'c' → logprob: -13.500022888183594
    5. 'coin' → logprob: -14.375022888183594
    6. ' coins' → logprob: -16.125022888183594
    7. 'cco' → logprob: -16.250022888183594
    8. 'Coins' → logprob: -16.750022888183594
    9. 'coes' → logprob: -17.000022888183594
    10. 'oco' → logprob: -17.500022888183594

Token 521: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15275801718235016
    2. '
' → logprob: -2.6527581214904785
    3. '   ' → logprob: -2.7777581214904785
    4. ' if' → logprob: -4.9027581214904785
    5. 'if' → logprob: -6.5277581214904785
    6. '
' → logprob: -9.65275764465332
    7. '    
' → logprob: -10.77775764465332
    8. '	if' → logprob: -11.02775764465332
    9. '           ' → logprob: -11.65275764465332
    10. ')' → logprob: -12.02775764465332

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017915667966008186
    2. '   ' → logprob: -4.642915725708008
    3. ' if' → logprob: -4.892915725708008
    4. 'if' → logprob: -7.517915725708008
    5. '
' → logprob: -10.142915725708008
    6. '        
' → logprob: -11.267915725708008
    7. '           ' → logprob: -11.392915725708008
    8. '<|end|>' → logprob: -12.392915725708008
    9. '     ' → logprob: -12.642915725708008
    10. '    
' → logprob: -12.767915725708008

Token 523: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026214318349957466
    2. '   ' → logprob: -6.252621650695801
    3. '       ' → logprob: -7.752621650695801
    4. ' if' → logprob: -8.2526216506958
    5. 'res' → logprob: -13.2526216506958
    6. '           ' → logprob: -15.0026216506958
    7. '	if' → logprob: -15.2526216506958
    8. '  ' → logprob: -17.877620697021484
    9. '```' → logprob: -17.877620697021484
    10. ' ' → logprob: -18.377620697021484

Token 524: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.47408798336982727
    2. ' total' → logprob: -0.9740879535675049
    3. '   ' → logprob: -11.974087715148926
    4. 'res' → logprob: -12.974087715148926
    5. ' res' → logprob: -13.349087715148926
    6. '       ' → logprob: -15.599087715148926
    7. '(total' → logprob: -15.599087715148926
    8. '	total' → logprob: -15.599087715148926
    9. ' ' → logprob: -15.849087715148926
    10. '           ' → logprob: -16.474088668823242

Token 525: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.0683535037969705e-05
    2. '<' → logprob: -11.87501049041748
    3. ' <' → logprob: -13.37501049041748
    4. 'coins' → logprob: -13.75001049041748
    5. 'total' → logprob: -14.87501049041748
    6. '_total' → logprob: -15.25001049041748
    7. '   ' → logprob: -16.000011444091797
    8. '>' → logprob: -17.000011444091797
    9. '-co' → logprob: -17.375011444091797
    10. 'co' → logprob: -17.625011444091797

Token 526: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.007526416331529617
    2. '<' → logprob: -5.382526397705078
    3. '>' → logprob: -7.132526397705078
    4. ' <' → logprob: -7.257526397705078
    5. 'in' → logprob: -8.007526397705078
    6. 'coins' → logprob: -8.007526397705078
    7. '   ' → logprob: -8.757526397705078
    8. '_ins' → logprob: -9.632526397705078
    9. 'ns' → logprob: -9.757526397705078
    10. '_co' → logprob: -10.257526397705078

Token 527: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.575940728187561
    2. '<' → logprob: -0.825940728187561
    3. ' ' → logprob: -14.95094108581543
    4. '   ' → logprob: -16.20094108581543
    5. '<com' → logprob: -16.32594108581543
    6. '[' → logprob: -16.57594108581543
    7. '<th' → logprob: -16.57594108581543
    8. ')' → logprob: -16.57594108581543
    9. '<int' → logprob: -16.82594108581543
    10. 'res' → logprob: -16.95094108581543

Token 528: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.7697225252486533e-06
    2. ' res' → logprob: -12.500003814697266
    3. '   ' → logprob: -22.125003814697266
    4. '	res' → logprob: -22.375003814697266
    5. '
' → logprob: -23.375003814697266
    6. '_res' → logprob: -25.125003814697266
    7. 'r' → logprob: -25.500003814697266
    8. '$res' → logprob: -25.625003814697266
    9. 'result' → logprob: -26.125003814697266
    10. 'Res' → logprob: -26.250003814697266

Token 529: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3167707622051239
    2. ':
' → logprob: -1.3167707920074463
    3. '       ' → logprob: -6.066770553588867
    4. '           ' → logprob: -6.816770553588867
    5. '   ' → logprob: -10.816770553588867
    6. 'res' → logprob: -11.066770553588867
    7. '):
' → logprob: -11.316770553588867
    8. ':
' → logprob: -11.441770553588867
    9. '               ' → logprob: -12.191770553588867
    10. '<|end|>' → logprob: -12.316770553588867

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010035957209765911
    2. 'res' → logprob: -5.260035991668701
    3. '       ' → logprob: -5.385035991668701
    4. ' res' → logprob: -8.635035514831543
    5. '   ' → logprob: -10.885035514831543
    6. '               ' → logprob: -12.260035514831543
    7. '	       ' → logprob: -13.135035514831543
    8. '          ' → logprob: -13.760035514831543
    9. '		' → logprob: -15.135035514831543
    10. '	res' → logprob: -15.135035514831543

Token 531: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.018486330285668373
    2. ' res' → logprob: -4.018486499786377
    3. '       ' → logprob: -8.518486022949219
    4. '           ' → logprob: -9.018486022949219
    5. '               ' → logprob: -11.643486022949219
    6. '   ' → logprob: -12.018486022949219
    7. '	res' → logprob: -15.143486022949219
    8. '_res' → logprob: -15.268486022949219
    9. ',res' → logprob: -17.26848602294922
    10. '$res' → logprob: -17.26848602294922

Token 532: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.126930832862854
    2. ' =' → logprob: -2.1269307136535645
    3. '=res' → logprob: -13.001931190490723
    4. '＝' → logprob: -14.626931190490723
    5. '   ' → logprob: -16.876930236816406
    6. '	' → logprob: -18.001930236816406
    7. '.=' → logprob: -18.251930236816406
    8. ' ' → logprob: -18.376930236816406
    9. '<|end|>' → logprob: -18.751930236816406
    10. '=int' → logprob: -18.876930236816406

Token 533: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10020667314529419
    2. ' total' → logprob: -2.3502066135406494
    3. '   ' → logprob: -17.72520637512207
    4. '	total' → logprob: -17.97520637512207
    5. ' ' → logprob: -18.47520637512207
    6. 'tot' → logprob: -18.85020637512207
    7. '(total' → logprob: -19.47520637512207
    8. ' tota' → logprob: -19.72520637512207
    9. 't' → logprob: -19.72520637512207
    10. 'to' → logprob: -19.85020637512207

Token 534: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -5.6696149840718135e-05
    2. 'coins' → logprob: -10.250056266784668
    3. '_coin' → logprob: -12.500056266784668
    4. '   ' → logprob: -12.750056266784668
    5. 'co' → logprob: -12.750056266784668
    6. '       ' → logprob: -13.125056266784668
    7. 'res' → logprob: -13.375056266784668
    8. '.co' → logprob: -13.375056266784668
    9. 'Coins' → logprob: -13.750056266784668
    10. '-co' → logprob: -14.125056266784668

Token 535: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0008401192026212811
    2. 'in' → logprob: -8.125840187072754
    3. '
' → logprob: -8.875840187072754
    4. '_ins' → logprob: -9.375840187072754
    5. '   ' → logprob: -9.500840187072754
    6. '#' → logprob: -9.625840187072754
    7. 'is' → logprob: -10.500840187072754
    8. 'ns' → logprob: -10.750840187072754
    9. '[' → logprob: -10.875840187072754
    10. 'i' → logprob: -11.375840187072754

Token 536: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4749118685722351
    2. 'print' → logprob: -0.9749118685722351
    3. '
' → logprob: -7.224911689758301
    4. '    
' → logprob: -9.3499116897583
    5. ' print' → logprob: -11.3499116897583
    6. '```' → logprob: -12.2249116897583
    7. '  
' → logprob: -13.9749116897583
    8. '       ' → logprob: -14.7249116897583
    9. '        
' → logprob: -14.8499116897583
    10. '	print' → logprob: -15.4749116897583

Token 537: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38692590594291687
    2. '   ' → logprob: -1.1369259357452393
    3. '```' → logprob: -10.26192569732666
    4. ' print' → logprob: -11.38692569732666
    5. '
' → logprob: -12.13692569732666
    6. '    
' → logprob: -12.76192569732666
    7. '``' → logprob: -16.011926651000977
    8. '  
' → logprob: -16.261926651000977
    9. '	print' → logprob: -16.761926651000977
    10. 'printf' → logprob: -17.636926651000977

Token 538: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002120038407156244
    2. '   ' → logprob: -8.500211715698242
    3. '```' → logprob: -11.750211715698242
    4. ' print' → logprob: -14.375211715698242
    5. 'if' → logprob: -17.375211715698242
    6. '``' → logprob: -17.625211715698242
    7. '    
' → logprob: -19.125211715698242
    8. '	print' → logprob: -19.625211715698242
    9. '
' → logprob: -20.375211715698242
    10. '`' → logprob: -20.625211715698242

Token 539: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 'res' → logprob: -15.125004768371582
    4. ' (' → logprob: -17.3750057220459
    5. '(f' → logprob: -19.1250057220459
    6. '(r' → logprob: -19.2500057220459
    7. '(
' → logprob: -19.6250057220459
    8. '(re' → logprob: -19.6250057220459
    9. '()' → logprob: -20.3750057220459
    10. '((' → logprob: -21.1250057220459

Token 540: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.250001907348633
    6. ')}' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '())' → logprob: -18.000001907348633
    9. '),' → logprob: -18.500001907348633
    10. ')}}' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 538
Tokens correctement prédits (1ère position, stricte): 190
Tokens correctement prédits (1ère position, avec adaptation): 209
Tokens correctement prédits (top 10): 424
Précision stricte (1ère position): 35.32%
Précision adaptée (1ère position): 38.85%
Précision (top 10): 78.81%
================================================================================
