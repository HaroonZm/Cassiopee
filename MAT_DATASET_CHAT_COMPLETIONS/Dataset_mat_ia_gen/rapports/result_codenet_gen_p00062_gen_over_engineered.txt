================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterable

class DigitSequence(ABC):
    """
    Abstract base class for sequences of digits.
    """
    @abstractmethod
    def build_lower_row(self) -> 'DigitSequence':
        pass
    
    @abstractmethod
    def get_last_row_digit(self) -> int:
        pass


class ModuloDigitSequence(DigitSequence):
    """
    Concrete implementation representing a row of digits with a specific modulo rule.
    """
    def __init__(self, digits: List[int]) -> None:
        self.digits = digits
        
    def build_lower_row(self) -> 'ModuloDigitSequence':
        # Applies the rule: C = (A + B) % 10 for adjacent pairs A, B
        new_digits = [(self.digits[i] + self.digits[i+1]) % 10 for i in range(len(self.digits)-1)]
        return ModuloDigitSequence(new_digits)
    
    def get_last_row_digit(self) -> int:
        # Terminal condition when length is 1
        if len(self.digits) == 1:
            return self.digits[0]
        else:
            # Recursively reduce rows
            return self.build_lower_row().get_last_row_digit()
    
    def __repr__(self) -> str:
        return f"ModuloDigitSequence({self.digits})"


class DigitSequenceFactory:
    """
    Factory class for creating DigitSequence objects.
    Enables future extensions for different rules or formats.
    """
    @staticmethod
    def from_string(data: str) -> DigitSequence:
        digits = [int(ch) for ch in data.strip()]
        if len(digits) != 10:
            raise ValueError("Each input line must contain exactly 10 digits.")
        return ModuloDigitSequence(digits)


class DigitSequenceProcessor:
    """
    Processes multiple digit sequences, generating the bottom-most digit for each.
    """
    def __init__(self, input_lines: Iterable[str]) -> None:
        self.input_lines = input_lines
        
    def process_all(self) -> List[int]:
        results = []
        for line in self.input_lines:
            line = line.strip()
            if not line:
                continue
            sequence = DigitSequenceFactory.from_string(line)
            last_digit = sequence.get_last_row_digit()
            results.append(last_digit)
        return results


def main() -> None:
    import sys
    processor = DigitSequenceProcessor(sys.stdin)
    results = processor.process_all()
    for res in results:
        print(res)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08205988258123398
    2. ',' → logprob: -2.582059860229492
    3. 'import' → logprob: -6.707059860229492
    4. '```' → logprob: -7.707059860229492
    5. '.
' → logprob: -8.332059860229492
    6. ':' → logprob: -8.582059860229492
    7. '' → logprob: -8.582059860229492
    8. '.

' → logprob: -8.707059860229492
    9. '<|end|>' → logprob: -9.582059860229492
    10. ',
' → logprob: -9.582059860229492

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21897414326667786
    2. ' abstract' → logprob: -1.7189741134643555
    3. 'Abstract' → logprob: -4.0939741134643555
    4. '```' → logprob: -8.468974113464355
    5. ' ' → logprob: -8.718974113464355
    6. 'Meta' → logprob: -9.218974113464355
    7. '.abstract' → logprob: -9.343974113464355
    8. ' A' → logprob: -10.468974113464355
    9. ' Abstract' → logprob: -11.343974113464355
    10. '`' → logprob: -11.343974113464355

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -8.673547563375905e-05
    2. 'm' → logprob: -10.125086784362793
    3. 'classmethod' → logprob: -10.625086784362793
    4. 'meth' → logprob: -11.750086784362793
    5. '_method' → logprob: -12.000086784362793
    6. ' method' → logprob: -12.750086784362793
    7. 'staticmethod' → logprob: -13.125086784362793
    8. 'met' → logprob: -14.250086784362793
    9. '```' → logprob: -14.625086784362793
    10. '	method' → logprob: -14.750086784362793

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '
' → logprob: -6.10689115524292
    10. '\' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33525776863098145
    2. '

' → logprob: -1.4602577686309814
    3. 'class' → logprob: -3.8352577686309814
    4. '```' → logprob: -4.585257530212402
    5. '
' → logprob: -4.960257530212402
    6. '' → logprob: -5.085257530212402
    7. ' 

' → logprob: -6.210257530212402
    8. '\n' → logprob: -6.710257530212402
    9. '


' → logprob: -7.335257530212402
    10. ' class' → logprob: -7.460257530212402

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11171971261501312
    2. ' collections' → logprob: -2.7367196083068848
    3. ' abc' → logprob: -4.236719608306885
    4. ' dat' → logprob: -4.361719608306885
    5. ' os' → logprob: -5.861719608306885
    6. ' sys' → logprob: -6.236719608306885
    7. ' math' → logprob: -6.486719608306885
    8. 'typing' → logprob: -6.736719608306885
    9. ' ' → logprob: -6.861719608306885
    10. ' datetime' → logprob: -6.986719608306885

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13478213548660278
    2. 'import' → logprob: -2.134782075881958
    3. '.' → logprob: -5.259782314300537
    4. '<|end|>' → logprob: -7.009782314300537
    5. '.import' → logprob: -7.884782314300537
    6. '[' → logprob: -8.009781837463379
    7. '```' → logprob: -8.384781837463379
    8. ' as' → logprob: -8.509781837463379
    9. '_import' → logprob: -9.509781837463379
    10. '.space' → logprob: -9.509781837463379

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5475577116012573
    2. ' Union' → logprob: -1.6725577116012573
    3. ' List' → logprob: -2.047557830810547
    4. 'Any' → logprob: -2.547557830810547
    5. ' Optional' → logprob: -5.047557830810547
    6. ' Callable' → logprob: -5.172557830810547
    7. 'Union' → logprob: -5.797557830810547
    8. 'List' → logprob: -5.797557830810547
    9. ' Protocol' → logprob: -6.047557830810547
    10. ' ' → logprob: -6.047557830810547

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9252783060073853
    2. '

' → logprob: -1.0502783060073853
    3. 'class' → logprob: -1.4252783060073853
    4. '```' → logprob: -4.675278186798096
    5. '
' → logprob: -6.800278186798096
    6. '\n' → logprob: -7.050278186798096
    7. '


' → logprob: -7.425278186798096
    8. '``' → logprob: -7.675278186798096
    9. ' class' → logprob: -8.175278663635254
    10. '<|end|>' → logprob: -8.925278663635254

Token 13: ' Iterable' (ID: 71228)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.570759892463684
    2. ' Optional' → logprob: -1.695759892463684
    3. 'Optional' → logprob: -1.695759892463684
    4. ' Callable' → logprob: -1.820759892463684
    5. 'Callable' → logprob: -2.5707597732543945
    6. 'Any' → logprob: -2.9457597732543945
    7. 'Union' → logprob: -3.0707597732543945
    8. ' Any' → logprob: -3.6957597732543945
    9. 'Iterable' → logprob: -3.6957597732543945
    10. 'Tuple' → logprob: -4.5707597732543945

Token 14: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7422163486480713
    2. 'class' → logprob: -0.7422163486480713
    3. '
' → logprob: -3.1172163486480713
    4. '```' → logprob: -6.117216110229492
    5. '


' → logprob: -6.992216110229492
    6. ' class' → logprob: -8.867216110229492
    7. '<class' → logprob: -9.617216110229492
    8. ',' → logprob: -9.992216110229492
    9. '\n' → logprob: -10.117216110229492
    10. 'import' → logprob: -10.242216110229492

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008695526979863644
    2. '
' → logprob: -4.758695602416992
    3. '```' → logprob: -9.883695602416992
    4. '

' → logprob: -11.758695602416992
    5. '
' → logprob: -11.883695602416992
    6. ' class' → logprob: -12.008695602416992
    7. '\n' → logprob: -12.258695602416992
    8. '<class' → logprob: -13.633695602416992
    9. '``' → logprob: -13.758695602416992
    10. '"class' → logprob: -14.508695602416992

Token 16: ' Digit' (ID: 91174)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07324184477329254
    2. ' Abstract' → logprob: -3.073241949081421
    3. ' Base' → logprob: -4.698241710662842
    4. ' My' → logprob: -5.073241710662842
    5. ' ABC' → logprob: -6.323241710662842
    6. ' Space' → logprob: -6.948241710662842
    7. ' Basic' → logprob: -7.073241710662842
    8. ' Serializer' → logprob: -7.448241710662842
    9. ' Iterable' → logprob: -7.573241710662842
    10. ' Object' → logprob: -7.698241710662842

Token 17: 'Sequence' (ID: 17333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008983846753835678
    2. ':' → logprob: -4.758983612060547
    3. '(Abstract' → logprob: -9.008983612060547
    4. 's' → logprob: -9.258983612060547
    5. '():' → logprob: -10.633983612060547
    6. ' :' → logprob: -11.008983612060547
    7. '(D' → logprob: -11.258983612060547
    8. '(Base' → logprob: -11.383983612060547
    9. ' (' → logprob: -11.883983612060547
    10. '(:' → logprob: -12.258983612060547

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001907855912577361
    2. ':' → logprob: -9.000190734863281
    3. '(Abstract' → logprob: -9.625190734863281
    4. '```' → logprob: -14.500190734863281
    5. '(
' → logprob: -15.500190734863281
    6. ' (' → logprob: -15.750190734863281
    7. '():' → logprob: -15.875190734863281
    8. '(object' → logprob: -16.75019073486328
    9. 'Abstract' → logprob: -17.25019073486328
    10. '(I' → logprob: -17.50019073486328

Token 19: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0022568334825336933
    2. ' ABC' → logprob: -6.127256870269775
    3. ')' → logprob: -10.627256393432617
    4. 'abc' → logprob: -11.002256393432617
    5. 'Iterable' → logprob: -11.252256393432617
    6. 'AB' → logprob: -11.752256393432617
    7. 'ABCDE' → logprob: -12.377256393432617
    8. 'Abstract' → logprob: -13.127256393432617
    9. 'List' → logprob: -14.002256393432617
    10. 'int' → logprob: -14.252256393432617

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028568280395120382
    2. ')' → logprob: -5.877856731414795
    3. ':' → logprob: -10.252857208251953
    4. ',' → logprob: -12.252857208251953
    5. ' ):' → logprob: -12.377857208251953
    6. '):
' → logprob: -13.377857208251953
    7. ')>' → logprob: -13.627857208251953
    8. '>:' → logprob: -14.002857208251953
    9. '>):' → logprob: -14.002857208251953
    10. '>' → logprob: -14.127857208251953

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47553783655166626
    2. ':' → logprob: -0.9755378365516663
    3. '    
' → logprob: -8.10053825378418
    4. '```' → logprob: -8.22553825378418
    5. '
' → logprob: -8.60053825378418
    6. ':
' → logprob: -8.97553825378418
    7. ' :' → logprob: -9.10053825378418
    8. ' ' → logprob: -9.47553825378418
    9. '    ' → logprob: -9.72553825378418
    10. 'def' → logprob: -9.85053825378418

Token 22: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05716880410909653
    2. 'def' → logprob: -3.80716872215271
    3. ' def' → logprob: -4.057168960571289
    4. '    
' → logprob: -5.057168960571289
    5. '    ' → logprob: -5.682168960571289
    6. '@' → logprob: -6.182168960571289
    7. ' 
' → logprob: -6.807168960571289
    8. ':' → logprob: -7.057168960571289
    9. ' ' → logprob: -8.057168960571289
    10. ' @' → logprob: -8.057168960571289

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1035149097442627
    2. '"""' → logprob: -1.2285149097442627
    3. ' """' → logprob: -2.2285149097442627
    4. ' Represents' → logprob: -2.3535149097442627
    5. ' Abstract' → logprob: -2.6035149097442627
    6. 'Abstract' → logprob: -3.8535149097442627
    7. 'Rep' → logprob: -4.228514671325684
    8. 'Base' → logprob: -4.853514671325684
    9. ' Base' → logprob: -4.853514671325684
    10. ' An' → logprob: -5.603514671325684

Token 24: ' Abstract' (ID: 17413)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -1.1763910055160522
    2. 'A' → logprob: -1.4263910055160522
    3. '"""' → logprob: -1.6763910055160522
    4. 'An' → logprob: -2.426391124725342
    5. 'Abstract' (adapté à ' Abstract') → logprob: -2.551391124725342
    6. ' """' → logprob: -4.051391124725342
    7. ' A' → logprob: -4.051391124725342
    8. '   ' → logprob: -4.551391124725342
    9. ' An' → logprob: -4.676391124725342
    10. ' Represents' → logprob: -4.676391124725342

Token 25: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15065839886665344
    2. ' class' → logprob: -2.025658369064331
    3. ' base' → logprob: -5.27565860748291
    4. 'class' → logprob: -7.02565860748291
    5. '  ' → logprob: -7.65065860748291
    6. '   ' → logprob: -8.02565860748291
    7. ' Base' → logprob: -8.27565860748291
    8. '  
' → logprob: -9.02565860748291
    9. 'Base' → logprob: -9.15065860748291
    10. ' 
' → logprob: -9.27565860748291

Token 26: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.38446560502052307
    2. ' ' → logprob: -2.0094656944274902
    3. 'class' → logprob: -2.0094656944274902
    4. '<|end|>' → logprob: -3.0094656944274902
    5. '<|end|>' → logprob: -7.63446569442749
    6. '  ' → logprob: -8.134465217590332
    7. '<class' → logprob: -8.259465217590332
    8. '   ' → logprob: -8.884465217590332
    9. 'classmethod' → logprob: -9.259465217590332
    10. ')' → logprob: -9.259465217590332

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.060443293303251266
    2. '<|end|>' → logprob: -3.43544340133667
    3. '   ' → logprob: -4.56044340133667
    4. ' ' → logprob: -4.93544340133667
    5. 'for' → logprob: -6.31044340133667
    6. ':' → logprob: -6.56044340133667
    7. '<|end|>' → logprob: -6.68544340133667
    8. '  ' → logprob: -6.81044340133667
    9. ' of' → logprob: -7.31044340133667
    10. ' representing' → logprob: -7.43544340133667

Token 28: ' sequences' (ID: 45665)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.8826204538345337
    2. ' a' → logprob: -1.2576204538345337
    3. ' sequences' → logprob: -1.3826204538345337
    4. ' iterable' → logprob: -3.882620334625244
    5. ' representing' → logprob: -4.382620334625244
    6. 'digit' → logprob: -5.757620334625244
    7. ' generating' → logprob: -5.882620334625244
    8. ' an' → logprob: -5.882620334625244
    9. ' different' → logprob: -6.132620334625244
    10. ' classes' → logprob: -6.382620334625244

Token 29: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0018016769317910075
    2. '<|end|>' → logprob: -7.251801490783691
    3. '   ' → logprob: -7.501801490783691
    4. 'of' → logprob: -7.876801490783691
    5. '<|end|>' → logprob: -10.001801490783691
    6. '    ' → logprob: -10.876801490783691
    7. ' that' → logprob: -10.876801490783691
    8. '  ' → logprob: -11.001801490783691
    9. '```' → logprob: -11.126801490783691
    10. ' consisting' → logprob: -11.751801490783691

Token 30: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.008470610715448856
    2. ' integers' → logprob: -5.75847053527832
    3. 'digits' → logprob: -5.75847053527832
    4. ' ' → logprob: -6.88347053527832
    5. ' digit' → logprob: -8.00847053527832
    6. ' digital' → logprob: -8.50847053527832
    7. ' numeric' → logprob: -9.38347053527832
    8. ' integer' → logprob: -9.63347053527832
    9. 'digit' → logprob: -9.75847053527832
    10. ' single' → logprob: -9.75847053527832

Token 31: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7678077220916748
    2. ')' → logprob: -1.1428077220916748
    3. '   ' → logprob: -2.392807722091675
    4. ':' → logprob: -2.892807722091675
    5. '```' → logprob: -3.517807722091675
    6. '"""' → logprob: -4.017807960510254
    7. '):' → logprob: -4.892807960510254
    8. ',' → logprob: -5.142807960510254
    9. '."""' → logprob: -6.392807960510254
    10. '
' → logprob: -6.642807960510254

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3954348564147949
    2. '"""' → logprob: -1.145434856414795
    3. '```' → logprob: -5.395434856414795
    4. '\n' → logprob: -6.520434856414795
    5. ')' → logprob: -7.395434856414795
    6. ' """' → logprob: -7.520434856414795
    7. '"""
' → logprob: -8.270435333251953
    8. '""' → logprob: -8.395435333251953
    9. '    ' → logprob: -8.395435333251953
    10. '    
' → logprob: -8.645435333251953

Token 33: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2630205750465393
    2. '   ' → logprob: -1.5130205154418945
    3. '```' → logprob: -5.5130205154418945
    4. ' """' → logprob: -5.6380205154418945
    5. ')' → logprob: -6.6380205154418945
    6. '""' → logprob: -7.1380205154418945
    7. '    ' → logprob: -8.138020515441895
    8. '
' → logprob: -8.138020515441895
    9. '"""
' (adapté à ' """
') → logprob: -8.263020515441895
    10. '    
' → logprob: -8.888020515441895

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7404911518096924
    2. '
' → logprob: -1.6154911518096924
    3. '\n' → logprob: -1.7404911518096924
    4. '    
' → logprob: -2.1154911518096924
    5. ' 
' → logprob: -4.490490913391113
    6. '```' → logprob: -5.115490913391113
    7. '    ' → logprob: -6.240490913391113
    8. '@' → logprob: -6.490490913391113
    9. '\' → logprob: -6.615490913391113
    10. '     
' → logprob: -6.990490913391113

Token 35: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31113919615745544
    2. '@' (adapté à ' @') → logprob: -2.0611391067504883
    3. '    
' → logprob: -2.6861391067504883
    4. '
' → logprob: -2.8111391067504883
    5. ' 
' → logprob: -5.436139106750488
    6. 'def' → logprob: -6.186139106750488
    7. '\n' → logprob: -6.186139106750488
    8. ' @' → logprob: -6.686139106750488
    9. '    ' → logprob: -7.061139106750488
    10. '  
' → logprob: -8.561139106750488

Token 36: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.306760805164231e-05
    2. 'abs' → logprob: -11.62501335144043
    3. 'ab' → logprob: -12.75001335144043
    4. 'abc' → logprob: -14.12501335144043
    5. 'staticmethod' → logprob: -15.62501335144043
    6. 'property' → logprob: -16.12501335144043
    7. '.abstract' → logprob: -16.25001335144043
    8. ' abstract' → logprob: -16.37501335144043
    9. 'classmethod' → logprob: -17.50001335144043
    10. 'a' → logprob: -17.62501335144043

Token 37: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.2246291337069124e-05
    2. '_method' → logprob: -10.875021934509277
    3. 'meth' → logprob: -13.500021934509277
    4. 'classmethod' → logprob: -14.250021934509277
    5. '   ' → logprob: -15.250021934509277
    6. 'staticmethod' → logprob: -15.375021934509277
    7. 'm' → logprob: -15.375021934509277
    8. 'ethod' → logprob: -15.500021934509277
    9. ' method' → logprob: -16.250022888183594
    10. ' ' → logprob: -16.375022888183594

Token 38: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4442356526851654
    2. 'def' → logprob: -1.0692356824874878
    3. ' ' → logprob: -5.194235801696777
    4. '(' → logprob: -5.444235801696777
    5. '   ' → logprob: -6.444235801696777
    6. '
' → logprob: -6.569235801696777
    7. '\' → logprob: -7.819235801696777
    8. '    
' → logprob: -7.944235801696777
    9. '(def' → logprob: -7.944235801696777
    10. '    ' → logprob: -8.819235801696777

Token 39: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33742257952690125
    2. ' def' → logprob: -1.3374226093292236
    3. '(' → logprob: -4.0874223709106445
    4. 'method' → logprob: -5.4624223709106445
    5. '
' → logprob: -7.9624223709106445
    6. '    
' → logprob: -8.337422370910645
    7. '(def' → logprob: -8.337422370910645
    8. '   ' → logprob: -8.462422370910645
    9. ' ' → logprob: -8.587422370910645
    10. '`' → logprob: -8.587422370910645

Token 40: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024726821575313807
    2. 'method' → logprob: -6.627472877502441
    3. ' def' → logprob: -7.502472877502441
    4. 'classmethod' → logprob: -8.752472877502441
    5. 'property' → logprob: -8.752472877502441
    6. 'abstract' → logprob: -9.002472877502441
    7. '
' → logprob: -9.502472877502441
    8. 'abc' → logprob: -10.002472877502441
    9. 'staticmethod' → logprob: -11.752472877502441
    10. '```' → logprob: -11.877472877502441

Token 41: ' build' (ID: 3024)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.1345441341400146
    2. ' iterate' → logprob: -1.5095441341400146
    3. ' ' → logprob: -2.0095441341400146
    4. ' iter' → logprob: -2.2595441341400146
    5. ' def' → logprob: -2.5095441341400146
    6. ' generate' → logprob: -3.6345441341400146
    7. ' __' → logprob: -3.8845441341400146
    8. ' sequence' → logprob: -4.509544372558594
    9. ' digits' → logprob: -4.884544372558594
    10. ' append' → logprob: -5.134544372558594

Token 42: '_lower' (ID: 72335)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06434012204408646
    2. '(' → logprob: -3.439340114593506
    3. '_sequence' → logprob: -3.689340114593506
    4. '_' → logprob: -5.439340114593506
    5. '_(' → logprob: -7.814340114593506
    6. '_self' → logprob: -8.939340591430664
    7. 'self' → logprob: -9.314340591430664
    8. '_next' → logprob: -9.689340591430664
    9. '_digit' → logprob: -10.439340591430664
    10. ' (' → logprob: -11.189340591430664

Token 43: '_row' (ID: 19157)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.481986403465271
    2. 'case' → logprob: -1.856986403465271
    3. '(self' → logprob: -2.3569865226745605
    4. '_case' → logprob: -2.4819865226745605
    5. '_sequence' → logprob: -4.6069865226745605
    6. '_' → logprob: -4.6069865226745605
    7. '()' → logprob: -4.7319865226745605
    8. '(' → logprob: -4.7319865226745605
    9. 'ing' → logprob: -6.2319865226745605
    10. 'bound' → logprob: -6.3569865226745605

Token 44: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015769980382174253
    2. '(' → logprob: -6.501576900482178
    3. 'self' → logprob: -9.876577377319336
    4. ' (' → logprob: -11.126577377319336
    5. 's' → logprob: -13.501577377319336
    6. '(s' → logprob: -13.751577377319336
    7. '   ' → logprob: -14.251577377319336
    8. '()' → logprob: -14.376577377319336
    9. '_(' → logprob: -14.376577377319336
    10. '_cell' → logprob: -14.626577377319336

Token 45: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9628807902336121
    2. ')' → logprob: -1.2128808498382568
    3. ',' → logprob: -1.2128808498382568
    4. 'self' → logprob: -3.837880849838257
    5. ' ,' → logprob: -7.712880611419678
    6. ',self' → logprob: -8.337881088256836
    7. ':' → logprob: -8.712881088256836
    8. '):
' → logprob: -8.712881088256836
    9. ' )' → logprob: -9.212881088256836
    10. '(self' → logprob: -9.212881088256836

Token 46: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.046457890421152115
    2. '(' → logprob: -3.1714580059051514
    3. '():' → logprob: -6.421457767486572
    4. ':' → logprob: -7.171457767486572
    5. '(s' → logprob: -7.546457767486572
    6. '   ' → logprob: -9.17145824432373
    7. ' (' → logprob: -9.29645824432373
    8. '       ' → logprob: -9.42145824432373
    9. 'self' → logprob: -9.54645824432373
    10. '()' → logprob: -9.67145824432373

Token 47: ' '' (ID: 461)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.24832086265087128
    2. 'List' → logprob: -1.6233208179473877
    3. ' Iterable' → logprob: -4.623321056365967
    4. 'Iterable' → logprob: -5.248321056365967
    5. ' str' → logprob: -5.873321056365967
    6. ' int' → logprob: -6.498321056365967
    7. 'int' → logprob: -6.748321056365967
    8. 'str' → logprob: -7.123321056365967
    9. ' None' → logprob: -7.498321056365967
    10. ' ' → logprob: -7.873321056365967

Token 48: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.2616841495037079
    2. 'List' → logprob: -1.5116841793060303
    3. 'Iterable' → logprob: -4.761683940887451
    4. 'str' → logprob: -7.636683940887451
    5. 'list' → logprob: -8.26168441772461
    6. 'int' → logprob: -9.51168441772461
    7. 'Digits' → logprob: -9.63668441772461
    8. 'digit' → logprob: -9.76168441772461
    9. 'Iter' → logprob: -10.51168441772461
    10. 'self' → logprob: -10.63668441772461

Token 49: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -6.511406809295295e-06
    2. 'sequence' → logprob: -13.000006675720215
    3. 'List' → logprob: -14.000006675720215
    4. 'Sequences' → logprob: -14.000006675720215
    5. 'Iterable' → logprob: -14.500006675720215
    6. '[]' → logprob: -14.625006675720215
    7. '_sequence' → logprob: -14.625006675720215
    8. ' Sequence' → logprob: -15.125006675720215
    9. 's' → logprob: -15.875006675720215
    10. 'Sequ' → logprob: -16.0000057220459

Token 50: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03497428447008133
    2. ''' → logprob: -3.4099743366241455
    3. '':
' → logprob: -7.159974098205566
    4. '':
' → logprob: -7.534974098205566
    5. '':'' → logprob: -12.159974098205566
    6. '':

' → logprob: -13.284974098205566
    7. ' ':' → logprob: -13.659974098205566
    8. '":' → logprob: -13.784974098205566
    9. '[' → logprob: -14.034974098205566
    10. '(':' → logprob: -14.159974098205566

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9461230039596558
    2. '<|end|>' → logprob: -0.9461230039596558
    3. '   ' → logprob: -2.0711231231689453
    4. '\n' → logprob: -3.0711231231689453
    5. ':' → logprob: -3.9461231231689453
    6. '
' → logprob: -4.321123123168945
    7. '    ' → logprob: -5.696123123168945
    8. '    
' → logprob: -5.946123123168945
    9. ' 
' → logprob: -6.071123123168945
    10. ' ' → logprob: -6.571123123168945

Token 52: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5895777940750122
    2. '       ' → logprob: -1.5895777940750122
    3. 'pass' (adapté à ' pass') → logprob: -1.7145777940750122
    4. '\n' → logprob: -3.2145776748657227
    5. '...' → logprob: -4.589577674865723
    6. '
' → logprob: -5.839577674865723
    7. '<|end|>' → logprob: -5.839577674865723
    8. ' 
' → logprob: -6.339577674865723
    9. '   ' → logprob: -7.214577674865723
    10. ' ' → logprob: -7.714577674865723

Token 53: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6932817697525024
    2. '   ' → logprob: -1.0682817697525024
    3. '<|end|>' → logprob: -2.068281650543213
    4. '\n' → logprob: -4.818281650543213
    5. '    
' → logprob: -5.068281650543213
    6. '<|end|>' → logprob: -5.193281650543213
    7. '```' → logprob: -5.568281650543213
    8. '

' → logprob: -5.693281650543213
    9. ' 
' → logprob: -7.068281650543213
    10. 'newline' → logprob: -7.818281650543213

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015684377402067184
    2. '    
' → logprob: -4.765684604644775
    3. '
' → logprob: -5.015684604644775
    4. '<|end|>' → logprob: -8.765684127807617
    5. ' 
' → logprob: -9.390684127807617
    6. '<|end|>' → logprob: -9.890684127807617
    7. '\n' → logprob: -10.515684127807617
    8. '    ' → logprob: -10.640684127807617
    9. '  
' → logprob: -11.015684127807617
    10. '        
' → logprob: -11.640684127807617

Token 55: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06171151623129845
    2. '@' (adapté à ' @') → logprob: -2.936711549758911
    3. '    
' → logprob: -5.436711311340332
    4. '
' → logprob: -6.311711311340332
    5. 'class' → logprob: -8.436711311340332
    6. '@property' → logprob: -9.186711311340332
    7. ' @' → logprob: -9.436711311340332
    8. '@
' → logprob: -10.186711311340332
    9. 'def' → logprob: -10.311711311340332
    10. '```' → logprob: -10.311711311340332

Token 56: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00011939727846765891
    2. 'property' → logprob: -9.12511920928955
    3. 'classmethod' → logprob: -12.37511920928955
    4. 'staticmethod' → logprob: -12.37511920928955
    5. 'abc' → logprob: -13.62511920928955
    6. 'ab' → logprob: -15.50011920928955
    7. ' abstract' → logprob: -15.62511920928955
    8. '.abstract' → logprob: -15.62511920928955
    9. 'abs' → logprob: -16.000120162963867
    10. 'build' → logprob: -18.000120162963867

Token 57: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.001755383680574596
    2. '_method' → logprob: -6.626755237579346
    3. 'def' → logprob: -7.876755237579346
    4. 'token' → logprob: -10.626755714416504
    5. '_token' → logprob: -11.376755714416504
    6. '(method' → logprob: -12.251755714416504
    7. ' method' → logprob: -12.626755714416504
    8. 'classmethod' → logprob: -13.376755714416504
    9. 'ethod' → logprob: -13.876755714416504
    10. ' def' → logprob: -14.126755714416504

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7274396419525146
    2. 'def' → logprob: -0.7274396419525146
    3. ' def' → logprob: -3.6024396419525146
    4. '   ' → logprob: -5.352439880371094
    5. '
' → logprob: -6.852439880371094
    6. 'newline' → logprob: -8.602439880371094
    7. '	def' → logprob: -9.102439880371094
    8. '    
' → logprob: -9.352439880371094
    9. '```' → logprob: -9.352439880371094
    10. ' 
' → logprob: -9.852439880371094

Token 59: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037459288723766804
    2. ' def' → logprob: -6.003746032714844
    3. '
' → logprob: -7.253746032714844
    4. '   ' → logprob: -7.503746032714844
    5. '	def' → logprob: -12.878746032714844
    6. '```' → logprob: -13.378746032714844
    7. '<|end|>' → logprob: -14.003746032714844
    8. '
' → logprob: -14.378746032714844
    9. '    
' → logprob: -14.628746032714844
    10. ' ' → logprob: -14.628746032714844

Token 60: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003934967797249556
    2. 'classmethod' → logprob: -6.378934860229492
    3. 'property' → logprob: -6.503934860229492
    4. '
' → logprob: -7.753934860229492
    5. 'staticmethod' → logprob: -8.503934860229492
    6. ' def' → logprob: -10.253934860229492
    7. 'code' → logprob: -10.753934860229492
    8. 'method' → logprob: -11.003934860229492
    9. 'abstract' → logprob: -12.003934860229492
    10. 'class' → logprob: -12.128934860229492

Token 61: ' get' (ID: 717)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.22829344868659973
    2. 'build' → logprob: -1.6032934188842773
    3. ' def' → logprob: -6.728293418884277
    4. 'def' → logprob: -7.728293418884277
    5. '
' → logprob: -7.978293418884277
    6. '_build' → logprob: -8.228293418884277
    7. ' get' → logprob: -8.603293418884277
    8. 'get' → logprob: -8.978293418884277
    9. 'generate' → logprob: -10.728293418884277
    10. ' is' → logprob: -10.978293418884277

Token 62: '_last' (ID: 26359)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.7034699320793152
    2. '_next' → logprob: -1.70346999168396
    3. '_upper' → logprob: -2.70346999168396
    4. '_lower' → logprob: -2.70346999168396
    5. '_sequence' → logprob: -3.57846999168396
    6. '_digit' → logprob: -3.57846999168396
    7. '_rows' → logprob: -3.82846999168396
    8. '_row' → logprob: -4.328469753265381
    9. '_length' → logprob: -4.453469753265381
    10. '_value' → logprob: -5.078469753265381

Token 63: '_row' (ID: 19157)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.03900089114904404
    2. '_token' → logprob: -4.289000988006592
    3. '_row' → logprob: -4.539000988006592
    4. '_digits' → logprob: -5.164000988006592
    5. '_sequence' → logprob: -6.039000988006592
    6. '_value' → logprob: -6.539000988006592
    7. '_element' → logprob: -6.914000988006592
    8. '_number' → logprob: -7.164000988006592
    9. 'digit' → logprob: -7.164000988006592
    10. '()' → logprob: -8.289000511169434

Token 64: '_digit' (ID: 119592)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002208781661465764
    2. '(' → logprob: -6.377208709716797
    3. '()' → logprob: -8.377208709716797
    4. 'self' → logprob: -8.877208709716797
    5. ')' → logprob: -10.502208709716797
    6. 's' → logprob: -10.752208709716797
    7. '_sequence' → logprob: -11.502208709716797
    8. '(
' → logprob: -11.502208709716797
    9. '_digits' → logprob: -11.627208709716797
    10. '_row' → logprob: -11.877208709716797

Token 65: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08954969048500061
    2. 's' → logprob: -2.4645497798919678
    3. '(' → logprob: -7.714549541473389
    4. '(s' → logprob: -9.089550018310547
    5. 'self' → logprob: -10.589550018310547
    6. '()' → logprob: -11.839550018310547
    7. '_s' → logprob: -12.214550018310547
    8. '```' → logprob: -12.589550018310547
    9. ')' → logprob: -12.839550018310547
    10. '_count' → logprob: -12.964550018310547

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006119809579104185
    2. '):' → logprob: -5.131119728088379
    3. '):
' → logprob: -9.006119728088379
    4. ' )' → logprob: -9.881119728088379
    5. '   ' → logprob: -12.756119728088379
    6. 's' → logprob: -12.881119728088379
    7. '):

' → logprob: -13.381119728088379
    8. ')
' → logprob: -13.631119728088379
    9. ':' → logprob: -13.756119728088379
    10. '()' → logprob: -13.881119728088379

Token 67: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001839752309024334
    2. '(' → logprob: -6.376839637756348
    3. ')' → logprob: -9.751839637756348
    4. 'self' → logprob: -10.626839637756348
    5. '()' → logprob: -11.126839637756348
    6. ' (' → logprob: -11.251839637756348
    7. 's' → logprob: -11.501839637756348
    8. '```' → logprob: -12.126839637756348
    9. '   ' → logprob: -12.376839637756348
    10. '       ' → logprob: -13.376839637756348

Token 68: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38692545890808105
    2. 'int' → logprob: -1.136925458908081
    3. '[int' → logprob: -10.26192569732666
    4. ' ' → logprob: -11.76192569732666
    5. ' str' → logprob: -12.26192569732666
    6. ':int' → logprob: -13.38692569732666
    7. ' None' → logprob: -14.01192569732666
    8. ')' → logprob: -14.13692569732666
    9. '(int' → logprob: -14.38692569732666
    10. '<int' → logprob: -14.63692569732666

Token 69: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.2069120854139328
    2. '       ' → logprob: -1.7069120407104492
    3. ' pass' → logprob: -5.206912040710449
    4. '	pass' → logprob: -12.83191204071045
    5. '   ' → logprob: -13.70691204071045
    6. '```' → logprob: -13.95691204071045
    7. '      ' → logprob: -15.58191204071045
    8. 'Pass' → logprob: -16.706912994384766
    9. 'return' → logprob: -17.206912994384766
    10. '...' → logprob: -17.581912994384766

Token 72: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0950329303741455
    2. '   ' → logprob: -1.2200329303741455
    3. '    
' → logprob: -1.5950329303741455
    4. 'class' → logprob: -2.0950329303741455
    5. '<|end|>' → logprob: -3.8450329303741455
    6. ' 
' → logprob: -4.845032691955566
    7. '\n' → logprob: -4.970032691955566
    8. '

' → logprob: -6.095032691955566
    9. '  
' → logprob: -7.095032691955566
    10. '\' → logprob: -7.470032691955566

Token 73: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004710768815129995
    2. '
' → logprob: -5.379710674285889
    3. ' class' → logprob: -10.629711151123047
    4. '

' → logprob: -10.629711151123047
    5. '    
' → logprob: -10.754711151123047
    6. '```' → logprob: -11.879711151123047
    7. '  
' → logprob: -12.379711151123047
    8. ' 
' → logprob: -13.004711151123047
    9. '<class' → logprob: -13.004711151123047
    10. '<|end|>' → logprob: -13.004711151123047

Token 74: ' Mod' (ID: 7191)
  Prédit: ' Pascal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Pascal' → logprob: -0.4931926727294922
    2. ' Digit' → logprob: -1.8681926727294922
    3. 'Pas' → logprob: -2.493192672729492
    4. ' Pas' → logprob: -3.993192672729492
    5. ' Concrete' → logprob: -4.118192672729492
    6. 'Digit' → logprob: -4.368192672729492
    7. ' Row' → logprob: -4.618192672729492
    8. ' Simple' → logprob: -4.743192672729492
    9. ' Triangle' → logprob: -4.868192672729492
    10. ' Pyramid' → logprob: -4.993192672729492

Token 75: 'ulo' (ID: 5953)
  Prédit: 'ular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -0.6924141049385071
    2. 'ule' → logprob: -2.3174140453338623
    3. 'ulo' → logprob: -2.4424140453338623
    4. '3' → logprob: -2.6924140453338623
    5. '9' → logprob: -2.9424140453338623
    6. 'ulus' → logprob: -3.1924140453338623
    7. '10' → logprob: -3.3174140453338623
    8. 'ified' → logprob: -3.3174140453338623
    9. '7' → logprob: -3.4424140453338623
    10. 'el' → logprob: -3.5674140453338623

Token 76: 'Digit' (ID: 46997)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0498402118682861
    2. 'Digit' → logprob: -1.4248402118682861
    3. 'ulo' → logprob: -1.9248402118682861
    4. '3' → logprob: -2.299840211868286
    5. 'Sequence' → logprob: -2.924840211868286
    6. 'Ten' → logprob: -3.799840211868286
    7. '9' → logprob: -3.924840211868286
    8. 'Arithmetic' → logprob: -4.174839973449707
    9. 'ulus' → logprob: -5.049839973449707
    10. 'ular' → logprob: -5.049839973449707

Token 77: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -2.696889623621246e-06
    2. 'sequence' → logprob: -14.12500286102295
    3. 'Sequences' → logprob: -14.50000286102295
    4. 'Sequ' → logprob: -15.00000286102295
    5. 's' → logprob: -15.12500286102295
    6. 'Generator' → logprob: -15.62500286102295
    7. '_sequence' → logprob: -15.87500286102295
    8. 'Digit' → logprob: -16.125001907348633
    9. ' Sequence' → logprob: -16.500001907348633
    10. 'Iterator' → logprob: -16.625001907348633

Token 78: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.25867000222206116
    2. '(' → logprob: -1.5086699724197388
    3. ':' → logprob: -5.008669853210449
    4. '(Dense' → logprob: -10.88366985321045
    5. ':D' → logprob: -12.13366985321045
    6. '(Abstract' → logprob: -12.50866985321045
    7. ' :' → logprob: -12.88366985321045
    8. '):' → logprob: -13.50866985321045
    9. '(S' → logprob: -14.00866985321045
    10. '(Dialog' → logprob: -14.13366985321045

Token 79: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.00047106825513765216
    2. 'od' → logprob: -7.875471115112305
    3. 'odule' → logprob: -11.000471115112305
    4. 'igital' → logprob: -11.250471115112305
    5. 'igits' → logprob: -11.375471115112305
    6. '(' → logprob: -11.375471115112305
    7. 'ig' → logprob: -12.125471115112305
    8. 'Digit' → logprob: -12.750471115112305
    9. ')' → logprob: -13.000471115112305
    10. '`' → logprob: -13.125471115112305

Token 80: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.0008778737974353135
    2. 'quence' → logprob: -7.750877857208252
    3. 'ulo' → logprob: -8.62587833404541
    4. 'sequence' → logprob: -8.87587833404541
    5. '_sequence' → logprob: -10.25087833404541
    6. 'u' → logprob: -10.62587833404541
    7. 'o' → logprob: -11.25087833404541
    8. 'ue' → logprob: -11.75087833404541
    9. 'ule' → logprob: -12.00087833404541
    10. 'ues' → logprob: -12.50087833404541

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019185843120794743
    2. '):
' → logprob: -8.875191688537598
    3. ':' → logprob: -10.375191688537598
    4. ')' → logprob: -11.000191688537598
    5. ',' → logprob: -13.625191688537598
    6. '(' → logprob: -13.875191688537598
    7. '[' → logprob: -14.375191688537598
    8. '   ' → logprob: -15.125191688537598
    9. '):
' → logprob: -15.125191688537598
    10. ']:' → logprob: -15.250191688537598

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005099983885884285
    2. ' def' → logprob: -5.380099773406982
    3. '    
' → logprob: -8.13010025024414
    4. 'def' → logprob: -8.88010025024414
    5. ':' → logprob: -11.25510025024414
    6. ')' → logprob: -12.25510025024414
    7. '(' → logprob: -12.63010025024414
    8. '	def' → logprob: -12.63010025024414
    9. ',' → logprob: -12.75510025024414
    10. '   ' → logprob: -13.13010025024414

Token 83: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21825657784938812
    2. ' def' → logprob: -1.7182565927505493
    3. 'def' → logprob: -4.09325647354126
    4. '    ' → logprob: -12.468256950378418
    5. '    
' → logprob: -12.468256950378418
    6. '	def' → logprob: -12.843256950378418
    7. ' ' → logprob: -12.843256950378418
    8. '  ' → logprob: -13.593256950378418
    9. '```' → logprob: -14.093256950378418
    10. ':def' → logprob: -14.718256950378418

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7564473748207092
    2. ' def' → logprob: -0.8814473748207092
    3. ' """
' → logprob: -2.3814473152160645
    4. 'def' → logprob: -4.6314473152160645
    5. ' ' → logprob: -5.2564473152160645
    6. ' """' → logprob: -5.6314473152160645
    7. '"""
' → logprob: -6.2564473152160645
    8. '    ' → logprob: -6.7564473152160645
    9. ')' → logprob: -7.1314473152160645
    10. '"""' → logprob: -7.8814473152160645

Token 85: ' Concrete' (ID: 47600)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04643194004893303
    2. 'def' → logprob: -3.1714320182800293
    3. '   ' → logprob: -6.171432018280029
    4. ' """
' → logprob: -7.046432018280029
    5. '"""
' → logprob: -7.921432018280029
    6. '"""' → logprob: -9.921431541442871
    7. ' """' → logprob: -11.671431541442871
    8. 'class' → logprob: -11.671431541442871
    9. 'Defines' → logprob: -12.046431541442871
    10. 'Mod' → logprob: -12.171431541442871

Token 86: ' implementation' (ID: 13847)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.22327356040477753
    2. ' implementation' → logprob: -2.098273515701294
    3. 'class' → logprob: -2.598273515701294
    4. ' subclass' → logprob: -6.973273754119873
    5. '   ' → logprob: -7.348273754119873
    6. 'implementation' → logprob: -7.473273754119873
    7. ' sequence' → logprob: -8.348273277282715
    8. ':
' → logprob: -8.723273277282715
    9. ' ' → logprob: -9.223273277282715
    10. 'sequence' → logprob: -9.973273277282715

Token 87: ' representing' (ID: 25389)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7954745888710022
    2. '   ' → logprob: -0.9204745888710022
    3. ' of' → logprob: -2.5454745292663574
    4. ' for' → logprob: -3.1704745292663574
    5. ':
' → logprob: -4.295474529266357
    6. 'of' → logprob: -5.045474529266357
    7. '(' → logprob: -5.670474529266357
    8. 'for' → logprob: -6.545474529266357
    9. ' ' → logprob: -6.795474529266357
    10. '  ' → logprob: -7.295474529266357

Token 88: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.36266592144966125
    2. 'a' → logprob: -1.8626658916473389
    3. ' sequences' → logprob: -2.612665891647339
    4. ' digits' → logprob: -2.987665891647339
    5. ' digit' → logprob: -4.862666130065918
    6. 'digits' → logprob: -5.112666130065918
    7. 'digit' → logprob: -5.112666130065918
    8. ' an' → logprob: -6.237666130065918
    9. ' modular' → logprob: -7.112666130065918
    10. ' the' → logprob: -7.737666130065918

Token 89: ' row' (ID: 5225)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5613623261451721
    2. ' digit' → logprob: -0.9363623261451721
    3. 'sequence' → logprob: -4.061362266540527
    4. 'digit' → logprob: -4.061362266540527
    5. ' modulo' → logprob: -6.811362266540527
    6. ' Digit' → logprob: -8.373862266540527
    7. 'n' → logprob: -8.561362266540527
    8. 'Digit' → logprob: -8.561362266540527
    9. ' modular' → logprob: -8.623862266540527
    10. ' digital' → logprob: -9.061362266540527

Token 90: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5626813769340515
    2. '   ' → logprob: -0.9376813769340515
    3. 'of' → logprob: -3.8126814365386963
    4. ' that' → logprob: -5.437681198120117
    5. ' modulo' → logprob: -5.437681198120117
    6. ' in' → logprob: -6.437681198120117
    7. ' starting' → logprob: -6.437681198120117
    8. 'mod' → logprob: -7.312681198120117
    9. ' with' → logprob: -7.312681198120117
    10. '=' → logprob: -8.062681198120117

Token 91: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.08152042329311371
    2. ' digits' → logprob: -2.5815203189849854
    3. 'mod' → logprob: -6.9565205574035645
    4. ' modulo' → logprob: -7.7065205574035645
    5. 'inte' → logprob: -7.7065205574035645
    6. 'digit' → logprob: -8.206520080566406
    7. ' integers' → logprob: -8.706520080566406
    8. 'a' → logprob: -10.644020080566406
    9. 'int' → logprob: -10.706520080566406
    10. 'Modulo' → logprob: -10.769020080566406

Token 92: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7300980687141418
    2. ' that' → logprob: -1.855098009109497
    3. ',' → logprob: -2.605098009109497
    4. ' with' → logprob: -2.855098009109497
    5. ' in' → logprob: -3.230098009109497
    6. ' starting' → logprob: -3.230098009109497
    7. ':' → logprob: -3.230098009109497
    8. ' where' → logprob: -3.355098009109497
    9. '.' → logprob: -4.230098247528076
    10. ' modulo' → logprob: -4.230098247528076

Token 93: ' a' (ID: 261)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -1.189431071281433
    2. ' a' → logprob: -1.314431071281433
    3. ' values' → logprob: -1.564431071281433
    4. ' wrap' → logprob: -2.5644311904907227
    5. ' modulo' → logprob: -3.5644311904907227
    6. ' modular' → logprob: -3.9394311904907227
    7. 'a' → logprob: -4.189431190490723
    8. ' fixed' → logprob: -4.314431190490723
    9. 'digits' → logprob: -4.314431190490723
    10. ' each' → logprob: -4.314431190490723

Token 94: ' specific' (ID: 4857)
  Prédit: ' fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fixed' → logprob: -0.3756125569343567
    2. ' modulo' → logprob: -2.375612497329712
    3. ' given' → logprob: -2.500612497329712
    4. ' modulus' → logprob: -2.875612497329712
    5. ' specified' → logprob: -3.125612497329712
    6. ' specific' → logprob: -4.125612735748291
    7. 'fixed' → logprob: -5.375612735748291
    8. ' modular' → logprob: -5.625612735748291
    9. ' base' → logprob: -6.000612735748291
    10. 'mod' → logprob: -6.250612735748291

Token 95: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.4282990097999573
    2. ' modulus' → logprob: -1.1782989501953125
    3. ' base' → logprob: -3.5532989501953125
    4. 'mod' → logprob: -4.9282989501953125
    5. ' mod' → logprob: -5.9282989501953125
    6. ' module' → logprob: -7.3032989501953125
    7. ' length' → logprob: -8.303298950195312
    8. 'base' → logprob: -8.678298950195312
    9. ' number' → logprob: -9.053298950195312
    10. ' modular' → logprob: -9.428298950195312

Token 96: ' rule' (ID: 10652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.205612301826477
    2. '.' → logprob: -1.580612301826477
    3. ' operation' → logprob: -1.580612301826477
    4. ' value' → logprob: -1.705612301826477
    5. ' operator' → logprob: -4.0806121826171875
    6. ' n' → logprob: -4.5806121826171875
    7. ',' → logprob: -4.7056121826171875
    8. ' for' → logprob: -4.8306121826171875
    9. ' arithmetic' → logprob: -5.0806121826171875
    10. ' .' → logprob: -5.2056121826171875

Token 97: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.529856264591217
    2. '   ' → logprob: -1.5298562049865723
    3. '.' → logprob: -1.7798562049865723
    4. ',' → logprob: -3.9048562049865723
    5. ':
' → logprob: -6.154856204986572
    6. '.
' → logprob: -6.904856204986572
    7. ')' → logprob: -7.779856204986572
    8. '```' → logprob: -7.904856204986572
    9. ' ' → logprob: -8.02985668182373
    10. '):' → logprob: -8.15485668182373

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026118673384189606
    2. ')' → logprob: -4.151118755340576
    3. '    
' → logprob: -5.651118755340576
    4. '    ' → logprob: -6.401118755340576
    5. '```' → logprob: -6.526118755340576
    6. ' ' → logprob: -6.776118755340576
    7. ' 
' → logprob: -7.401118755340576
    8. ' def' → logprob: -8.151118278503418
    9. '`' → logprob: -8.526118278503418
    10. '
' → logprob: -8.651118278503418

Token 99: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01356639713048935
    2. '    
' → logprob: -4.763566493988037
    3. '
' → logprob: -5.763566493988037
    4. '```' → logprob: -6.888566493988037
    5. 'def' → logprob: -7.888566493988037
    6. ' def' → logprob: -8.513566017150879
    7. '    ' → logprob: -9.513566017150879
    8. ' 
' → logprob: -10.388566017150879
    9. ')' → logprob: -10.638566017150879
    10. '"""' → logprob: -11.013566017150879

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5376287698745728
    2. 'def' → logprob: -1.0376287698745728
    3. ' def' → logprob: -2.787628650665283
    4. '    ' → logprob: -13.037629127502441
    5. 'mod' → logprob: -13.537629127502441
    6. '  ' → logprob: -13.662629127502441
    7. ' ' → logprob: -13.787629127502441
    8. '    
' → logprob: -14.412629127502441
    9. '```' → logprob: -15.162629127502441
    10. '	def' → logprob: -15.287629127502441

Token 101: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022218646481633186
    2. ' def' → logprob: -6.127222061157227
    3. '   ' → logprob: -10.377222061157227
    4. 'mod' → logprob: -12.877222061157227
    5. '_def' → logprob: -13.627222061157227
    6. '_mod' → logprob: -14.002222061157227
    7. '	def' → logprob: -15.252222061157227
    8. ' ' → logprob: -15.877222061157227
    9. 'digits' → logprob: -15.877222061157227
    10. 'rows' → logprob: -16.627222061157227

Token 102: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00479441462084651
    2. '__' → logprob: -5.379794597625732
    3. ' def' → logprob: -9.129794120788574
    4. ' init' → logprob: -10.879794120788574
    5. 'init' → logprob: -10.879794120788574
    6. '_init' → logprob: -11.129794120788574
    7. 'def' → logprob: -12.004794120788574
    8. ' build' → logprob: -12.254794120788574
    9. '```' → logprob: -14.129794120788574
    10. ' ' → logprob: -14.254794120788574

Token 103: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.018259748816490173
    2. 'nit' → logprob: -4.018259525299072
    3. 'it' → logprob: -9.14326000213623
    4. '```' → logprob: -14.39326000213623
    5. 'int' → logprob: -14.51826000213623
    6. 'iter' → logprob: -15.01826000213623
    7. '`' → logprob: -15.64326000213623
    8. ' init' → logprob: -15.89326000213623
    9. 'nite' → logprob: -16.018259048461914
    10. '   ' → logprob: -16.018259048461914

Token 104: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3305281102657318
    2. '(self' → logprob: -1.3305281400680542
    3. '(' → logprob: -4.330528259277344
    4. ' (' → logprob: -5.830528259277344
    5. '__(
' → logprob: -7.455528259277344
    6. '__' → logprob: -8.705528259277344
    7. 'self' → logprob: -8.955528259277344
    8. '_(' → logprob: -9.455528259277344
    9. '__((' → logprob: -11.080528259277344
    10. '<|end|>' → logprob: -11.580528259277344

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031784253660589457
    2. ' self' → logprob: -5.753178596496582
    3. ',' → logprob: -15.628178596496582
    4. '
' → logprob: -15.753178596496582
    5. '(self' → logprob: -16.003177642822266
    6. '   ' → logprob: -16.378177642822266
    7. ' ' → logprob: -16.878177642822266
    8. '       ' → logprob: -17.378177642822266
    9. '0' → logprob: -17.628177642822266
    10. 'n' → logprob: -17.753177642822266

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009415964013896883
    2. ' ,' → logprob: -7.625941753387451
    3. 'self' → logprob: -7.750941753387451
    4. '(self' → logprob: -11.875941276550293
    5. ')' → logprob: -12.250941276550293
    6. ',self' → logprob: -12.500941276550293
    7. ',
' → logprob: -12.625941276550293
    8. ' (' → logprob: -13.375941276550293
    9. '   ' → logprob: -14.125941276550293
    10. ' self' → logprob: -14.500941276550293

Token 107: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.40264466404914856
    2. 'digits' → logprob: -1.4026446342468262
    3. ' self' → logprob: -3.152644634246826
    4. 'self' → logprob: -3.527644634246826
    5. ' start' → logprob: -5.777644634246826
    6. 'mod' → logprob: -6.277644634246826
    7. ' modulo' → logprob: -6.277644634246826
    8. ' row' → logprob: -6.652644634246826
    9. ' initial' → logprob: -6.902644634246826
    10. ' base' → logprob: -6.902644634246826

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.455048449221067e-05
    2. ',' → logprob: -10.750054359436035
    3. '):' → logprob: -10.750054359436035
    4. 'self' → logprob: -11.750054359436035
    5. '_:' → logprob: -13.625054359436035
    6. ' :' → logprob: -14.250054359436035
    7. ')' → logprob: -14.750054359436035
    8. '):
' → logprob: -15.375054359436035
    9. '```' → logprob: -15.500054359436035
    10. '   ' → logprob: -15.500054359436035

Token 109: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.06998756527900696
    2. 'List' → logprob: -2.6949875354766846
    3. ' Iterable' → logprob: -10.194987297058105
    4. 'Iterable' → logprob: -12.069987297058105
    5. ' list' → logprob: -12.319987297058105
    6. ' ' → logprob: -13.694987297058105
    7. '	List' → logprob: -14.069987297058105
    8. 'list' → logprob: -14.319987297058105
    9. ' int' → logprob: -14.944987297058105
    10. 'int' → logprob: -15.069987297058105

Token 110: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.5577775128767826e-06
    2. 'int' → logprob: -12.875005722045898
    3. '<int' → logprob: -12.875005722045898
    4. '[' → logprob: -15.375005722045898
    5. '<|end|>' → logprob: -16.7500057220459
    6. ']int' → logprob: -18.1250057220459
    7. '[
' → logprob: -18.2500057220459
    8. ')' → logprob: -18.5000057220459
    9. '(int' → logprob: -18.5000057220459
    10. '```' → logprob: -19.0000057220459

Token 111: '])' (ID: 4636)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8774604797363281
    2. '):' → logprob: -1.3774604797363281
    3. ')' → logprob: -1.5024604797363281
    4. ']):' → logprob: -2.502460479736328
    5. '],' → logprob: -4.877460479736328
    6. ']' → logprob: -4.877460479736328
    7. '])' → logprob: -5.002460479736328
    8. ' ):' → logprob: -6.627460479736328
    9. ']:' → logprob: -7.002460479736328
    10. '),' → logprob: -7.002460479736328

Token 112: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011217346414923668
    2. ',' → logprob: -4.63621711730957
    3. '):' → logprob: -6.63621711730957
    4. ')' → logprob: -9.76121711730957
    5. '   ' → logprob: -10.38621711730957
    6. ':
' → logprob: -10.88621711730957
    7. ' :' → logprob: -11.13621711730957
    8. '->' → logprob: -12.01121711730957
    9. '():' → logprob: -12.63621711730957
    10. ' ->' → logprob: -12.63621711730957

Token 113: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0380416102707386
    2. 'None' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.163042068481445
    4. ' ' → logprob: -17.288042068481445
    5. ' ' → logprob: -18.038042068481445
    6. '_None' → logprob: -18.038042068481445
    7. ' none' → logprob: -18.413042068481445
    8. '=None' → logprob: -19.538042068481445
    9. ' list' → logprob: -20.038042068481445
    10. ' int' → logprob: -20.163042068481445

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010642479173839092
    2. ':
' → logprob: -6.876064300537109
    3. '       ' → logprob: -10.87606430053711
    4. '):' → logprob: -12.25106430053711
    5. ',' → logprob: -12.75106430053711
    6. '   ' → logprob: -13.12606430053711
    7. ':def' → logprob: -14.00106430053711
    8. ' :' → logprob: -14.12606430053711
    9. '():' → logprob: -15.25106430053711
    10. '):
' → logprob: -15.37606430053711

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003135360311716795
    2. 'self' → logprob: -8.125313758850098
    3. '   ' → logprob: -11.625313758850098
    4. ' self' → logprob: -11.750313758850098
    5. 'super' → logprob: -14.750313758850098
    6. '      ' → logprob: -16.25031280517578
    7. '    ' → logprob: -17.00031280517578
    8. '     ' → logprob: -17.25031280517578
    9. '```' → logprob: -17.75031280517578
    10. '           ' → logprob: -17.75031280517578

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.34867340326309204
    2. '       ' → logprob: -1.8486733436584473
    3. 'self' (adapté à ' self') → logprob: -2.0986733436584473
    4. ' super' → logprob: -4.473673343658447
    5. 'super' → logprob: -5.848673343658447
    6. ' ' → logprob: -11.598673820495605
    7. '   ' → logprob: -11.723673820495605
    8. '	self' → logprob: -12.973673820495605
    9. '      ' → logprob: -14.473673820495605
    10. '	super' → logprob: -14.848673820495605

Token 117: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.023472808301448822
    2. '.' → logprob: -3.773472785949707
    3. ' .' → logprob: -8.523472785949707
    4. '._' → logprob: -10.523472785949707
    5. '.tokens' → logprob: -15.148472785949707
    6. '.data' → logprob: -15.273472785949707
    7. '.digital' → logprob: -15.398472785949707
    8. '.characters' → logprob: -15.648472785949707
    9. 'digits' → logprob: -16.398473739624023
    10. '.д' → logprob: -17.023473739624023

Token 118: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -1.1637164789135568e-05
    2. 'ig' → logprob: -12.125011444091797
    3. 'igts' → logprob: -13.000011444091797
    4. 'digits' → logprob: -13.000011444091797
    5. 'igit' → logprob: -13.500011444091797
    6. 'i' → logprob: -15.625011444091797
    7. 'g' → logprob: -16.875011444091797
    8. 'its' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.375011444091797
    10. 'igi' → logprob: -18.125011444091797

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20173004269599915
    2. '=' → logprob: -1.7017300128936768
    3. ':' → logprob: -8.326729774475098
    4. ')' → logprob: -10.576729774475098
    5. '[:]' → logprob: -10.826729774475098
    6. '_' → logprob: -11.201729774475098
    7. '[' → logprob: -12.451729774475098
    8. '=[]' → logprob: -12.576729774475098
    9. ' ' → logprob: -12.826729774475098
    10. ',' → logprob: -13.951729774475098

Token 120: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.31326648592948914
    2. 'digits' → logprob: -1.3132665157318115
    3. ' ' → logprob: -12.93826675415039
    4. '[' → logprob: -14.43826675415039
    5. '[]' → logprob: -14.93826675415039
    6. 'list' → logprob: -15.31326675415039
    7. ' ' → logprob: -15.43826675415039
    8. 'd' → logprob: -15.56326675415039
    9. ' list' → logprob: -15.81326675415039
    10. 'Digits' → logprob: -15.93826675415039

Token 121: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1324189305305481
    2. 'def' → logprob: -2.1324188709259033
    3. ' def' → logprob: -6.007419109344482
    4. '    
' → logprob: -6.382419109344482
    5. '
' → logprob: -6.757419109344482
    6. '        
' → logprob: -9.507418632507324
    7. '```' → logprob: -10.882418632507324
    8. '  
' → logprob: -11.132418632507324
    9. ' ' → logprob: -11.382418632507324
    10. '       ' → logprob: -11.382418632507324

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '@property' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.7500057220459
    5. '@' → logprob: -18.1250057220459
    6. '```' → logprob: -20.6250057220459
    7. 'super' → logprob: -22.0000057220459
    8. '    
' → logprob: -22.3750057220459
    9. '        
' → logprob: -23.6250057220459
    10. '       ' → logprob: -23.6250057220459

Token 124: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.10026901960372925
    2. 'build' → logprob: -2.350269079208374
    3. ' get' → logprob: -10.475269317626953
    4. '_build' → logprob: -10.600269317626953
    5. ' def' → logprob: -12.225269317626953
    6. 'get' → logprob: -12.850269317626953
    7. 'def' → logprob: -14.225269317626953
    8. ' buil' → logprob: -14.975269317626953
    9. '	build' → logprob: -15.475269317626953
    10. ' ' → logprob: -16.225269317626953

Token 125: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -5.512236498361744e-07
    2. 'lower' → logprob: -15.000000953674316
    3. '_' → logprob: -16.625
    4. '_upper' → logprob: -17.625
    5. '_low' → logprob: -19.375
    6. '(lower' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. ' _' → logprob: -19.625
    9. ' lower' → logprob: -19.625
    10. '_l' → logprob: -20.375

Token 126: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0004085083492100239
    2. '_' → logprob: -8.000408172607422
    3. '_lower' → logprob: -10.250408172607422
    4. '_rows' → logprob: -11.500408172607422
    5. ' _' → logprob: -11.625408172607422
    6. '_line' → logprob: -11.625408172607422
    7. '_space' → logprob: -13.000408172607422
    8. '_layer' → logprob: -13.500408172607422
    9. '_floor' → logprob: -14.625408172607422
    10. '_column' → logprob: -14.625408172607422

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002314303710591048
    2. '(' → logprob: -8.500231742858887
    3. '()' → logprob: -11.000231742858887
    4. ' (' → logprob: -11.500231742858887
    5. 'self' → logprob: -15.000231742858887
    6. '(s' → logprob: -15.125231742858887
    7. '   ' → logprob: -15.250231742858887
    8. '       ' → logprob: -16.12523078918457
    9. ' ' → logprob: -16.50023078918457
    10. '(Self' → logprob: -16.50023078918457

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010139751975657418
    2. '):' → logprob: -9.375101089477539
    3. 'self' → logprob: -11.375101089477539
    4. '):
' → logprob: -13.000101089477539
    5. ' )' → logprob: -13.375101089477539
    6. ')->' → logprob: -14.625101089477539
    7. '   ' → logprob: -14.875101089477539
    8. '(self' → logprob: -16.25010108947754
    9. ')`' → logprob: -16.25010108947754
    10. ' ' → logprob: -16.75010108947754

Token 129: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -1.0206019878387451
    2. '->' → logprob: -1.1456019878387451
    3. ':' → logprob: -1.7706019878387451
    4. ')' → logprob: -1.8956019878387451
    5. ')->' → logprob: -7.645602226257324
    6. '   ' → logprob: -8.270602226257324
    7. '       ' → logprob: -8.895602226257324
    8. '(' → logprob: -9.145602226257324
    9. ':
' → logprob: -9.520602226257324
    10. '):' → logprob: -10.895602226257324

Token 130: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09952012449502945
    2. ' '' → logprob: -2.474520206451416
    3. 'Mod' → logprob: -5.724520206451416
    4. 'Modulo' → logprob: -6.224520206451416
    5. ''M' → logprob: -6.474520206451416
    6. ''s' → logprob: -7.224520206451416
    7. ' Mod' → logprob: -7.224520206451416
    8. 'List' → logprob: -7.349520206451416
    9. '(Mod' → logprob: -8.224519729614258
    10. ''D' → logprob: -8.474519729614258

Token 131: 'Modulo' (ID: 168265)
  Prédit: 'Modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -2.1008713702030946e-06
    2. 'self' → logprob: -14.000001907348633
    3. 'Digit' → logprob: -14.000001907348633
    4. ' modulo' → logprob: -15.250001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 'Module' → logprob: -17.625001907348633
    7. '
' → logprob: -18.125001907348633
    8. 'Mod' → logprob: -18.500001907348633
    9. 'mod' → logprob: -18.750001907348633
    10. ' Mod' → logprob: -19.000001907348633

Token 132: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -1.3856492842023727e-06
    2. 'digit' → logprob: -14.250000953674316
    3. '_digit' → logprob: -14.875000953674316
    4. 'Digital' → logprob: -16.000001907348633
    5. ' Digit' → logprob: -16.250001907348633
    6. 'Digits' → logprob: -17.250001907348633
    7. '-digit' → logprob: -17.375001907348633
    8. 'D' → logprob: -18.250001907348633
    9. 'Decimal' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 133: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.4617256056226324e-05
    2. 'Digit' → logprob: -11.375014305114746
    3. 'sequence' → logprob: -13.250014305114746
    4. 'Sequ' → logprob: -14.000014305114746
    5. '_sequence' → logprob: -15.875014305114746
    6. 'Seq' → logprob: -16.125015258789062
    7. ' sequence' → logprob: -16.250015258789062
    8. 'Row' → logprob: -16.375015258789062
    9. ' Sequence' → logprob: -17.625015258789062
    10. 'Sequences' → logprob: -17.625015258789062

Token 134: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08859717100858688
    2. '':' → logprob: -3.213597059249878
    3. '():' → logprob: -3.588597059249878
    4. '):' → logprob: -4.213597297668457
    5. ':
' → logprob: -6.338597297668457
    6. '():
' → logprob: -8.588597297668457
    7. '):
' → logprob: -9.838597297668457
    8. '':
' → logprob: -10.463597297668457
    9. '   ' → logprob: -10.838597297668457
    10. '":' → logprob: -11.088597297668457

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02639853022992611
    2. 'digits' → logprob: -4.026398658752441
    3. 'new' → logprob: -5.401398658752441
    4. 'lower' → logprob: -6.526398658752441
    5. 'n' → logprob: -6.901398658752441
    6. '   ' → logprob: -8.026398658752441
    7. 'next' → logprob: -8.026398658752441
    8. 'if' → logprob: -8.401398658752441
    9. 'result' → logprob: -8.776398658752441
    10. ' new' → logprob: -9.776398658752441

Token 136: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.582159161567688
    2. 'lower' → logprob: -0.957159161567688
    3. ' new' → logprob: -3.7071590423583984
    4. 'if' → logprob: -4.332159042358398
    5. 'next' → logprob: -4.832159042358398
    6. '       ' → logprob: -5.707159042358398
    7. 'digits' → logprob: -5.832159042358398
    8. 'result' → logprob: -5.957159042358398
    9. ' lower' → logprob: -6.707159042358398
    10. ' if' → logprob: -7.082159042358398

Token 137: ' Applies' (ID: 188217)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -1.076082468032837
    2. 'new' → logprob: -1.201082468032837
    3. ' new' → logprob: -1.951082468032837
    4. 'digits' → logprob: -2.326082468032837
    5. 'if' → logprob: -3.326082468032837
    6. 'result' → logprob: -3.826082468032837
    7. ' if' → logprob: -3.951082468032837
    8. ' lower' → logprob: -4.451082229614258
    9. 'next' → logprob: -4.576082229614258
    10. ' digits' → logprob: -5.201082229614258

Token 138: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.141214370727539
    2. 'the' → logprob: -1.641214370727539
    3. 'a' → logprob: -2.141214370727539
    4. 'mod' → logprob: -2.266214370727539
    5. '[
' → logprob: -2.516214370727539
    6. '[(' → logprob: -3.141214370727539
    7. 'lambda' → logprob: -3.266214370727539
    8. ' modulo' → logprob: -3.641214370727539
    9. '[self' → logprob: -4.141214370727539
    10. '[a' → logprob: -4.391214370727539

Token 139: ' rule' (ID: 10652)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09869389981031418
    2. ' modulo' → logprob: -2.97369384765625
    3. '[' → logprob: -3.72369384765625
    4. 'sum' → logprob: -5.09869384765625
    5. 'pair' → logprob: -5.22369384765625
    6. 'Modulo' → logprob: -5.72369384765625
    7. ' [' → logprob: -7.59869384765625
    8. 'list' → logprob: -7.84869384765625
    9. '_mod' → logprob: -8.09869384765625
    10. '[(' → logprob: -8.09869384765625

Token 140: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08579232543706894
    2. ' that' → logprob: -3.210792303085327
    3. ' of' → logprob: -3.710792303085327
    4. ':' → logprob: -5.210792541503906
    5. '[' → logprob: -6.085792541503906
    6. ' to' → logprob: -6.210792541503906
    7. '#' → logprob: -6.960792541503906
    8. 'self' → logprob: -6.960792541503906
    9. ' for' → logprob: -7.210792541503906
    10. 'that' → logprob: -7.335792541503906

Token 141: ' C' (ID: 363)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5746415257453918
    2. '[(' → logprob: -2.449641466140747
    3. 'return' → logprob: -2.824641466140747
    4. '[i' → logprob: -2.949641466140747
    5. '[' → logprob: -3.074641466140747
    6. 'lower' → logprob: -3.199641466140747
    7. '[
' → logprob: -3.449641466140747
    8. ' new' → logprob: -3.949641466140747
    9. 'next' → logprob: -3.949641466140747
    10. '[next' → logprob: -4.449641704559326

Token 142: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7391977906227112
    2. ' =' → logprob: -1.3641977310180664
    3. '[' → logprob: -2.2391977310180664
    4. '=' → logprob: -3.8641977310180664
    5. '[self' → logprob: -3.8641977310180664
    6. '(' → logprob: -4.364197731018066
    7. 'urrent' → logprob: -4.489197731018066
    8. 'self' → logprob: -4.489197731018066
    9. 'on' → logprob: -4.489197731018066
    10. '(self' → logprob: -5.114197731018066

Token 143: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3672032356262207
    2. '(self' → logprob: -2.3672032356262207
    3. ' (' → logprob: -2.4922032356262207
    4. '[self' → logprob: -3.1172032356262207
    5. ' [(' → logprob: -3.2422032356262207
    6. '[' → logprob: -4.492203235626221
    7. '(sum' → logprob: -4.617203235626221
    8. 'sum' → logprob: -5.742203235626221
    9. 'self' → logprob: -5.867203235626221
    10. ' [' → logprob: -6.117203235626221

Token 144: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6149054169654846
    2. '(self' → logprob: -0.8649054169654846
    3. 'sum' → logprob: -4.61490535736084
    4. '(A' → logprob: -4.98990535736084
    5. ' self' → logprob: -5.48990535736084
    6. 'A' → logprob: -5.73990535736084
    7. '(a' → logprob: -5.86490535736084
    8. ' (' → logprob: -5.98990535736084
    9. '(sum' → logprob: -5.98990535736084
    10. 'a' → logprob: -6.36490535736084

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18496881425380707
    2. ' +' → logprob: -1.8099688291549683
    3. '[' → logprob: -5.434968948364258
    4. '[i' → logprob: -7.934968948364258
    5. '[-' → logprob: -8.809968948364258
    6. '-' → logprob: -9.059968948364258
    7. ' ' → logprob: -10.184968948364258
    8. '_' → logprob: -10.309968948364258
    9. '+B' → logprob: -10.559968948364258
    10. ' plus' → logprob: -11.309968948364258

Token 146: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22564533352851868
    2. ' B' → logprob: -1.6006453037261963
    3. ' ' → logprob: -8.850645065307617
    4. 'C' → logprob: -10.225645065307617
    5. ' C' → logprob: -11.225645065307617
    6. ')' → logprob: -11.850645065307617
    7. ' (' → logprob: -12.413145065307617
    8. ' ' → logprob: -12.413145065307617
    9. 'self' → logprob: -12.600645065307617
    10. '   ' → logprob: -12.788145065307617

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004929054528474808
    2. '[' → logprob: -6.004929065704346
    3. '-' → logprob: -6.629929065704346
    4. ' -' → logprob: -7.754929065704346
    5. '[-' → logprob: -8.504928588867188
    6. ' )' → logprob: -8.629928588867188
    7. '+' → logprob: -9.004928588867188
    8. ')%' → logprob: -9.754928588867188
    9. ' +' → logprob: -10.129928588867188
    10. '[i' → logprob: -10.629928588867188

Token 148: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3481503427028656
    2. '[' → logprob: -1.848150372505188
    3. '%' → logprob: -2.3481502532958984
    4. ')' → logprob: -4.473150253295898
    5. '[-' → logprob: -5.098150253295898
    6. '[:-' → logprob: -5.098150253295898
    7. '-' → logprob: -5.598150253295898
    8. 'mod' → logprob: -5.723150253295898
    9. ' -' → logprob: -5.723150253295898
    10. '[i' → logprob: -6.473150253295898

Token 149: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4743661880493164
    2. ' ' → logprob: -0.9743661880493164
    3. '9' → logprob: -8.849366188049316
    4. '3' → logprob: -10.724366188049316
    5. '4' → logprob: -10.724366188049316
    6. '100' → logprob: -11.099366188049316
    7. '11' → logprob: -11.474366188049316
    8. '6' → logprob: -11.724366188049316
    9. '7' → logprob: -11.724366188049316
    10. '8' → logprob: -11.849366188049316

Token 150: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010521204239921644
    2. '9' → logprob: -10.250104904174805
    3. 'len' → logprob: -11.000104904174805
    4. '3' → logprob: -11.375104904174805
    5. '2' → logprob: -11.875104904174805
    6. '4' → logprob: -12.000104904174805
    7. '7' → logprob: -12.375104904174805
    8. '11' → logprob: -12.750104904174805
    9. '8' → logprob: -12.875104904174805
    10. 'mod' → logprob: -13.000104904174805

Token 151: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38814428448677063
    2. '
' → logprob: -1.1381442546844482
    3. '        
' → logprob: -8.388144493103027
    4. ',' → logprob: -8.638144493103027
    5. '
' → logprob: -9.013144493103027
    6. '\' → logprob: -9.013144493103027
    7. '   ' → logprob: -9.138144493103027
    8. '\n' → logprob: -9.138144493103027
    9. '  
' → logprob: -9.888144493103027
    10. 'n' → logprob: -10.013144493103027

Token 152: ' adjacent' (ID: 39069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12134600430727005
    2. 'i' → logprob: -2.4963459968566895
    3. ' range' → logprob: -4.3713459968566895
    4. ' adjacent' → logprob: -4.3713459968566895
    5. ' each' → logprob: -5.9963459968566895
    6. 'range' → logprob: -6.2463459968566895
    7. ' pairs' → logprob: -7.1213459968566895
    8. ' idx' → logprob: -8.246346473693848
    9. 'each' → logprob: -8.496346473693848
    10. '[i' → logprob: -8.746346473693848

Token 153: ' pairs' (ID: 24702)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.4902810752391815
    2. 'digits' → logprob: -1.115281105041504
    3. ' pairs' → logprob: -2.865281105041504
    4. 'pairs' → logprob: -6.740281105041504
    5. 'digit' → logprob: -7.115281105041504
    6. '_digits' → logprob: -7.990281105041504
    7. ' elements' → logprob: -8.990281105041504
    8. ' digit' → logprob: -9.240281105041504
    9. '_pairs' → logprob: -10.365281105041504
    10. ' ' → logprob: -10.615281105041504

Token 154: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09534906595945358
    2. '        
' → logprob: -3.970349073410034
    3. '   ' → logprob: -4.095348834991455
    4. '
' → logprob: -4.220348834991455
    5. '    
' → logprob: -4.845348834991455
    6. '    ' → logprob: -5.220348834991455
    7. '\' → logprob: -5.345348834991455
    8. '<|end|>' → logprob: -5.720348834991455
    9. ' 
' → logprob: -5.845348834991455
    10. '\n' → logprob: -5.845348834991455

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013472429476678371
    2. ' and' → logprob: -4.888472557067871
    3. '       ' → logprob: -6.013472557067871
    4. 'and' → logprob: -6.388472557067871
    5. ' ,' → logprob: -6.638472557067871
    6. '   ' → logprob: -8.638472557067871
    7. '+' → logprob: -9.388472557067871
    8. ',
' → logprob: -10.138472557067871
    9. '[' → logprob: -10.513472557067871
    10. ' +' → logprob: -10.638472557067871

Token 156: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07913069427013397
    2. ' B' → logprob: -2.5791306495666504
    3. ' ' → logprob: -9.329131126403809
    4. '#' → logprob: -9.704131126403809
    5. '   ' → logprob: -10.454131126403809
    6. 'self' → logprob: -11.204131126403809
    7. '       ' → logprob: -11.329131126403809
    8. ' self' → logprob: -11.579131126403809
    9. ' ' → logprob: -12.579131126403809
    10. '  ' → logprob: -12.579131126403809

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02731475606560707
    2. '
' → logprob: -3.6523146629333496
    3. '        
' → logprob: -7.27731466293335
    4. ',' → logprob: -9.027315139770508
    5. '    
' → logprob: -10.152315139770508
    6. '   ' → logprob: -10.527315139770508
    7. '  
' → logprob: -11.152315139770508
    8. ',
' → logprob: -11.402315139770508
    9. 'return' → logprob: -11.402315139770508
    10. '<|end|>' → logprob: -11.777315139770508

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000526107382029295
    2. '
' → logprob: -8.125526428222656
    3. '        
' → logprob: -9.250526428222656
    4. '   ' → logprob: -9.875526428222656
    5. ',' → logprob: -10.375526428222656
    6. '    
' → logprob: -11.125526428222656
    7. '  
' → logprob: -12.500526428222656
    8. 'def' → logprob: -12.875526428222656
    9. ')' → logprob: -12.875526428222656
    10. '      ' → logprob: -12.875526428222656

Token 159: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2214539796113968
    2. 'lower' → logprob: -2.096453905105591
    3. 'return' → logprob: -3.096453905105591
    4. ' new' → logprob: -4.34645414352417
    5. 'digits' → logprob: -4.84645414352417
    6. 'result' → logprob: -5.09645414352417
    7. 'next' → logprob: -6.09645414352417
    8. '       ' → logprob: -7.84645414352417
    9. ' return' → logprob: -7.97145414352417
    10. '   ' → logprob: -8.346453666687012

Token 160: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0001996066712308675
    2. 'digits' → logprob: -8.875199317932129
    3. 's' → logprob: -10.125199317932129
    4. '_row' → logprob: -11.875199317932129
    5. '_' → logprob: -12.000199317932129
    6. ' =' → logprob: -13.500199317932129
    7. 'Digits' → logprob: -13.500199317932129
    8. '_digit' → logprob: -14.125199317932129
    9. '_list' → logprob: -14.250199317932129
    10. ' digits' → logprob: -14.250199317932129

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021249949932098
    2. '=' → logprob: -2.350212574005127
    3. '=[]' → logprob: -13.225212097167969
    4. ':' → logprob: -13.350212097167969
    5. '[' → logprob: -13.975212097167969
    6. '[]' → logprob: -14.975212097167969
    7. ' =[' → logprob: -15.100212097167969
    8. ')' → logprob: -15.100212097167969
    9. ' ' → logprob: -15.225212097167969
    10. '=[' → logprob: -15.975212097167969

Token 162: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1934521496295929
    2. '[' → logprob: -2.1934521198272705
    3. ' [(' → logprob: -3.5684521198272705
    4. ' [' → logprob: -3.5684521198272705
    5. '[
' → logprob: -5.81845235824585
    6. '[self' → logprob: -6.06845235824585
    7. '[]' → logprob: -6.44345235824585
    8. '[int' → logprob: -7.56845235824585
    9. '[((' → logprob: -8.693451881408691
    10. ' [
' → logprob: -8.943451881408691

Token 163: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.42895111441612244
    2. 'self' → logprob: -1.0539511442184448
    3. 'a' → logprob: -9.428951263427734
    4. ' (' → logprob: -9.553951263427734
    5. ' self' → logprob: -10.053951263427734
    6. '(a' → logprob: -10.303951263427734
    7. 'x' → logprob: -11.928951263427734
    8. '(x' → logprob: -12.053951263427734
    9. '[self' → logprob: -12.803951263427734
    10. '   ' → logprob: -13.678951263427734

Token 164: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00248338864184916
    2. '.' → logprob: -6.252483367919922
    3. 'digits' → logprob: -7.752483367919922
    4. ').' → logprob: -9.752483367919922
    5. ' .' → logprob: -10.127483367919922
    6. '].' → logprob: -12.002483367919922
    7. '+.' → logprob: -12.252483367919922
    8. 'Digits' → logprob: -12.752483367919922
    9. 'd' → logprob: -13.002483367919922
    10. 'self' → logprob: -13.377483367919922

Token 165: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.04322092607617378
    2. 'digits' → logprob: -3.1682209968566895
    3. 'ig' → logprob: -9.293220520019531
    4. 'd' → logprob: -9.793220520019531
    5. 'igts' → logprob: -11.043220520019531
    6. 'i' → logprob: -11.418220520019531
    7. 'igit' → logprob: -11.543220520019531
    8. '_digits' → logprob: -11.793220520019531
    9. 'its' → logprob: -12.043220520019531
    10. ' digits' → logprob: -12.418220520019531

Token 166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[index' → logprob: -15.125000953674316
    3. '[idx' → logprob: -15.500000953674316
    4. ')[' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.125001907348633
    6. '[' → logprob: -16.250001907348633
    7. '[
' → logprob: -16.250001907348633
    8. '[j' → logprob: -17.000001907348633
    9. '[n' → logprob: -17.250001907348633
    10. ' [' → logprob: -17.500001907348633

Token 167: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7152935862541199
    2. ']' → logprob: -0.8402935862541199
    3. ' +' → logprob: -3.0902936458587646
    4. ']+' → logprob: -3.4652936458587646
    5. ')' → logprob: -6.9652934074401855
    6. '}' → logprob: -6.9652934074401855
    7. ')+' → logprob: -8.215293884277344
    8. ' ' → logprob: -8.340293884277344
    9. '}+' → logprob: -9.215293884277344
    10. '>' → logprob: -10.840293884277344

Token 168: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688260316848755
    2. '+' → logprob: -1.1368825435638428
    3. ' ' → logprob: -12.261882781982422
    4. ' ' → logprob: -13.136882781982422
    5. ' plus' → logprob: -13.261882781982422
    6. ' +
' → logprob: -13.761882781982422
    7. '+
' → logprob: -14.386882781982422
    8. '```' → logprob: -14.761882781982422
    9. '  ' → logprob: -15.636882781982422
    10. 'plus' → logprob: -15.761882781982422

Token 169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326824426651
    2. ' self' → logprob: -1.3132681846618652
    3. ' ' → logprob: -12.563268661499023
    4. '	self' → logprob: -13.938268661499023
    5. '    ' → logprob: -14.313268661499023
    6. 's' → logprob: -14.938268661499023
    7. '(self' → logprob: -15.813268661499023
    8. '   ' → logprob: -15.938268661499023
    9. '           ' → logprob: -15.938268661499023
    10. '        ' → logprob: -16.188268661499023

Token 170: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00018363336857873946
    2. '.' → logprob: -9.125184059143066
    3. ' .' → logprob: -10.250184059143066
    4. 'digits' → logprob: -10.500184059143066
    5. 'd' → logprob: -13.000184059143066
    6. '].' → logprob: -13.125184059143066
    7. ').' → logprob: -13.375184059143066
    8. ' ' → logprob: -13.750184059143066
    9. 'igits' → logprob: -14.125184059143066
    10. '_digits' → logprob: -14.125184059143066

Token 171: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.12710313498973846
    2. 'its' → logprob: -2.502103090286255
    3. 'digits' → logprob: -3.752103090286255
    4. 'g' → logprob: -5.002103328704834
    5. 'i' → logprob: -6.502103328704834
    6. '   ' → logprob: -6.627103328704834
    7. 'gments' → logprob: -7.377103328704834
    8. 'igts' → logprob: -7.377103328704834
    9. '```' → logprob: -8.127102851867676
    10. 's' → logprob: -8.252102851867676

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.250006675720215
    3. '][' → logprob: -14.500006675720215
    4. '[
' → logprob: -14.750006675720215
    5. '+' → logprob: -15.125006675720215
    6. '1' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.2500057220459
    8. ' [' → logprob: -16.2500057220459
    9. '[j' → logprob: -16.3750057220459
    10. 'i' → logprob: -17.5000057220459

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013652353081852198
    2. ' +' → logprob: -6.6263651847839355
    3. '1' → logprob: -10.626365661621094
    4. '+i' → logprob: -11.376365661621094
    5. 'x' → logprob: -14.001365661621094
    6. ' ' → logprob: -14.001365661621094
    7. ']' → logprob: -14.251365661621094
    8. '   ' → logprob: -14.501365661621094
    9. ']+' → logprob: -15.126365661621094
    10. 'i' → logprob: -15.626365661621094

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. ']' → logprob: -14.750020980834961
    4. '   ' → logprob: -14.875020980834961
    5. '0' → logprob: -15.125020980834961
    6. '```' → logprob: -15.125020980834961
    7. ')' → logprob: -16.06252098083496
    8. 'i' → logprob: -16.06252098083496
    9. '])' → logprob: -16.12502098083496
    10. '2' → logprob: -16.56252098083496

Token 175: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5763080716133118
    2. '])' → logprob: -0.8263080716133118
    3. ' )' → logprob: -9.201308250427246
    4. ']' → logprob: -9.451308250427246
    5. ''])' → logprob: -9.701308250427246
    6. '`)' → logprob: -9.951308250427246
    7. '))' → logprob: -10.201308250427246
    8. ' ])' → logprob: -10.826308250427246
    9. '})' → logprob: -11.951308250427246
    10. '')' → logprob: -12.701308250427246

Token 176: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.004840214736759663
    2. '%' → logprob: -5.37984037399292
    3. ')' → logprob: -8.504839897155762
    4. ' for' → logprob: -11.879839897155762
    5. ' ' → logprob: -12.004839897155762
    6. ' )' → logprob: -13.379839897155762
    7. 'for' → logprob: -13.629839897155762
    8. ']' → logprob: -14.754839897155762
    9. ')%' → logprob: -14.879839897155762
    10. ' ' → logprob: -15.129839897155762

Token 177: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407814860343933
    2. '10' → logprob: -0.9740781784057617
    3. '```' → logprob: -13.974078178405762
    4. ' ' → logprob: -15.599078178405762
    5. ' ten' → logprob: -17.224077224731445
    6. '   ' → logprob: -17.474077224731445
    7. '
' → logprob: -17.724077224731445
    8. ')' → logprob: -17.911577224731445
    9. '`' → logprob: -17.911577224731445
    10. '>' → logprob: -18.786577224731445

Token 178: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625001907348633
    4. '100' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '
' → logprob: -19.750001907348633
    7. '1' → logprob: -20.125001907348633
    8. '`' → logprob: -20.187501907348633
    9. '0' → logprob: -20.687501907348633
    10. ')' → logprob: -20.937501907348633

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12748581171035767
    2. 'for' → logprob: -2.127485752105713
    3. '       ' → logprob: -7.752485752105713
    4. '           ' → logprob: -9.752486228942871
    5. ')' → logprob: -10.252486228942871
    6. '        ' → logprob: -11.127486228942871
    7. ' ' → logprob: -12.002486228942871
    8. '	for' → logprob: -12.627486228942871
    9. '               ' → logprob: -13.002486228942871
    10. '   ' → logprob: -13.127486228942871

Token 180: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25862205028533936
    2. ' i' → logprob: -1.5086220502853394
    3. 'range' → logprob: -5.133622169494629
    4. 'i' → logprob: -7.258622169494629
    5. ' ' → logprob: -9.758622169494629
    6. ' in' → logprob: -12.383622169494629
    7. '	range' → logprob: -13.008622169494629
    8. ' xrange' → logprob: -13.133622169494629
    9. '  ' → logprob: -13.383622169494629
    10. ' ' → logprob: -14.258622169494629

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014077115803956985
    2. ' range' → logprob: -4.514077186584473
    3. 'range' → logprob: -6.514077186584473
    4. 'in' → logprob: -6.514077186584473
    5. ' ' → logprob: -10.264077186584473
    6. '<|end|>' → logprob: -11.764077186584473
    7. '(range' → logprob: -11.889077186584473
    8. ' i' → logprob: -12.514077186584473
    9. ' xrange' → logprob: -13.014077186584473
    10. '	range' → logprob: -14.014077186584473

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519291639328003
    2. ' range' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.376928329467773
    4. '(range' → logprob: -17.501928329467773
    5. '	range' → logprob: -17.501928329467773
    6. '   ' → logprob: -17.626928329467773
    7. '  ' → logprob: -18.501928329467773
    8. '    ' → logprob: -20.751928329467773
    9. ' xrange' → logprob: -20.876928329467773
    10. '```' → logprob: -22.251928329467773

Token 183: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.000003814697266
    3. 'len' → logprob: -14.125003814697266
    4. ' (' → logprob: -15.125003814697266
    5. ' len' → logprob: -16.250003814697266
    6. '	len' → logprob: -20.375003814697266
    7. '=len' → logprob: -21.125003814697266
    8. '[len' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.625003814697266
    10. ',len' → logprob: -22.000003814697266

Token 184: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. 'self' → logprob: -18.37502670288086
    4. '(
' → logprob: -19.12502670288086
    5. ' (' → logprob: -19.87502670288086
    6. ' self' → logprob: -21.37502670288086
    7. '[self' → logprob: -22.12502670288086
    8. '(

' → logprob: -22.37502670288086
    9. '```' → logprob: -22.75002670288086
    10. '(len' → logprob: -22.87502670288086

Token 185: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -11.750021934509277
    3. 'digits' → logprob: -11.875021934509277
    4. ').' → logprob: -12.625021934509277
    5. ' .' → logprob: -13.000021934509277
    6. ')' → logprob: -14.375021934509277
    7. 'd' → logprob: -14.500021934509277
    8. '	d' → logprob: -16.000022888183594
    9. ' ' → logprob: -16.375022888183594
    10. '-' → logprob: -16.500022888183594

Token 186: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.028126172721385956
    2. 'its' → logprob: -3.9031262397766113
    3. 'digits' → logprob: -5.403126239776611
    4. '.d' → logprob: -6.403126239776611
    5. 'd' → logprob: -7.278126239776611
    6. 'igts' → logprob: -8.028125762939453
    7. 'g' → logprob: -8.778125762939453
    8. 'ig' → logprob: -9.653125762939453
    9. '```' → logprob: -10.028125762939453
    10. 'u' → logprob: -11.153125762939453

Token 187: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032532673329114914
    2. ' -' → logprob: -4.032532691955566
    3. ')-' → logprob: -5.032532691955566
    4. '-' → logprob: -5.157532691955566
    5. ' )' → logprob: -6.407532691955566
    6. ' ' → logprob: -8.782532691955566
    7. '   ' → logprob: -10.032532691955566
    8. '()' → logprob: -10.157532691955566
    9. 'd' → logprob: -10.282532691955566
    10. '1' → logprob: -10.532532691955566

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.750085830688477
    4. '```' → logprob: -16.875085830688477
    5. '2' → logprob: -18.375085830688477
    6. '  ' → logprob: -18.500085830688477
    7. ')' → logprob: -19.437585830688477
    8. '۱' → logprob: -19.562585830688477
    9. '<|end|>' → logprob: -19.625085830688477
    10. '0' → logprob: -19.687585830688477

Token 189: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020592445798683912
    2. ')' → logprob: -8.875205993652344
    3. ']' → logprob: -9.750205993652344
    4. ' )' → logprob: -12.500205993652344
    5. ' ]' → logprob: -14.000205993652344
    6. ')])' → logprob: -14.125205993652344
    7. '   ' → logprob: -14.250205993652344
    8. '       ' → logprob: -15.250205993652344
    9. '')]' → logprob: -15.250205993652344
    10. '))' → logprob: -15.375205993652344

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009087684564292431
    2. '
' → logprob: -5.384087562561035
    3. 'return' → logprob: -5.509087562561035
    4. ' return' → logprob: -8.009087562561035
    5. '        
' → logprob: -9.759087562561035
    6. '   ' → logprob: -12.384087562561035
    7. ')' → logprob: -13.009087562561035
    8. '```' → logprob: -13.009087562561035
    9. '    
' → logprob: -13.884087562561035
    10. '
' → logprob: -13.884087562561035

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004988374188542366
    2. ' return' → logprob: -5.504988193511963
    3. '       ' → logprob: -7.004988193511963
    4. '
' → logprob: -13.504988670349121
    5. '```' → logprob: -14.879988670349121
    6. '   ' → logprob: -15.379988670349121
    7. '	return' → logprob: -16.504987716674805
    8. ')return' → logprob: -17.004987716674805
    9. '        
' → logprob: -17.129987716674805
    10. ' ' → logprob: -17.504987716674805

Token 192: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.44041162729263306
    2. ' Mod' → logprob: -1.0654115676879883
    3. 'Mod' → logprob: -4.565411567687988
    4. 'self' → logprob: -7.815411567687988
    5. ' Modul' → logprob: -8.065411567687988
    6. ' self' → logprob: -8.565411567687988
    7. '(Mod' → logprob: -9.565411567687988
    8. ' Modi' → logprob: -9.815411567687988
    9. ' Modular' → logprob: -10.065411567687988
    10. '_Mod' → logprob: -10.565411567687988

Token 193: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -2.5776860184123507e-06
    2. 'ule' → logprob: -13.37500286102295
    3. 'o' → logprob: -14.62500286102295
    4. 'olo' → logprob: -14.75000286102295
    5. 'Modulo' → logprob: -17.375001907348633
    6. 'ulos' → logprob: -19.000001907348633
    7. ' modulo' → logprob: -19.000001907348633
    8. 'ul' → logprob: -19.125001907348633
    9. 'culo' → logprob: -20.625001907348633
    10. 'ules' → logprob: -20.875001907348633

Token 194: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: 0.0
    2. 'digit' → logprob: -16.875
    3. '_digit' → logprob: -17.375
    4. 'Digital' → logprob: -17.5
    5. '-digit' → logprob: -18.75
    6. ' Digit' → logprob: -19.0
    7. 'Digits' → logprob: -19.625
    8. '```' → logprob: -21.625
    9. 'Decimal' → logprob: -21.875
    10. '\' → logprob: -22.125

Token 195: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.652451464906335e-05
    2. 'sequence' → logprob: -11.750016212463379
    3. 'quence' → logprob: -12.625016212463379
    4. 'Digit' → logprob: -12.875016212463379
    5. 'u' → logprob: -13.625016212463379
    6. 'e' → logprob: -14.000016212463379
    7. 'Sequ' → logprob: -15.125016212463379
    8. 'ue' → logprob: -16.000017166137695
    9. '_sequence' → logprob: -16.375017166137695
    10. 'o' → logprob: -16.875017166137695

Token 196: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.06208330765366554
    2. '(self' → logprob: -2.8120832443237305
    3. '(' → logprob: -9.31208324432373
    4. ' (' → logprob: -10.93708324432373
    5. '([' → logprob: -11.93708324432373
    6. '((' → logprob: -14.68708324432373
    7. '(
' → logprob: -15.56208324432373
    8. '```' → logprob: -15.81208324432373
    9. '([...' → logprob: -17.562084197998047
    10. '(d' → logprob: -17.562084197998047

Token 197: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -6.8497312895488e-05
    2. '_tokens' → logprob: -10.500068664550781
    3. 'digits' → logprob: -10.500068664550781
    4. '_d' → logprob: -12.000068664550781
    5. '._' → logprob: -13.000068664550781
    6. 'Digits' → logprob: -13.375068664550781
    7. '_' → logprob: -13.625068664550781
    8. 'new' → logprob: -14.250068664550781
    9. '```' → logprob: -14.625068664550781
    10. '_words' → logprob: -15.000068664550781

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. '<|end|>' → logprob: -12.125009536743164
    3. ' )' → logprob: -13.125009536743164
    4. ')
' → logprob: -13.750009536743164
    5. '   ' → logprob: -14.500009536743164
    6. ')return' → logprob: -16.000009536743164
    7. '<|end|>' → logprob: -16.250009536743164
    8. ')}' → logprob: -16.875009536743164
    9. ')#' → logprob: -16.875009536743164
    10. '')' → logprob: -17.250009536743164

Token 199: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4296131432056427
    2. '    
' → logprob: -1.6796131134033203
    3. '<|end|>' → logprob: -2.0546131134033203
    4. 'def' → logprob: -3.9296131134033203
    5. '```' → logprob: -4.55461311340332
    6. '  
' → logprob: -6.80461311340332
    7. ' ' → logprob: -7.55461311340332
    8. '   
' → logprob: -7.67961311340332
    9. '  ' → logprob: -7.67961311340332
    10. '
' → logprob: -8.17961311340332

Token 200: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010712771909311414
    2. '   ' → logprob: -7.001071453094482
    3. ' def' → logprob: -8.751070976257324
    4. '    
' → logprob: -13.751070976257324
    5. '@property' → logprob: -15.376070976257324
    6. '```' → logprob: -15.501070976257324
    7. '@' → logprob: -17.50107192993164
    8. '	def' → logprob: -17.87607192993164
    9. '
' → logprob: -18.75107192993164
    10. '  ' → logprob: -19.12607192993164

Token 201: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.875
    4. '    
' → logprob: -19.125
    5. '@' → logprob: -22.375
    6. '
' → logprob: -22.75
    7. '```' → logprob: -23.375
    8. '	def' → logprob: -23.75
    9. '  
' → logprob: -24.0
    10. '        
' → logprob: -24.5

Token 202: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.002189279766753316
    2. ' get' → logprob: -6.1271891593933105
    3. 'def' → logprob: -12.752189636230469
    4. '_get' → logprob: -14.502189636230469
    5. '.get' → logprob: -14.752189636230469
    6. '@get' → logprob: -16.12718963623047
    7. '
' → logprob: -16.37718963623047
    8. ' ' → logprob: -17.37718963623047
    9. '   ' → logprob: -17.62718963623047
    10. '	get' → logprob: -17.75218963623047

Token 203: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -7.896309739408025e-07
    2. 'last' → logprob: -14.250000953674316
    3. '_first' → logprob: -17.125
    4. 'Last' → logprob: -18.125
    5. '_LAST' → logprob: -18.125
    6. '_' → logprob: -19.375
    7. '_next' → logprob: -19.375
    8. '_Last' → logprob: -19.625
    9. '_current' → logprob: -20.125
    10. '_previous' → logprob: -21.125

Token 204: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -8.537868779967539e-06
    2. '_last' → logprob: -11.750008583068848
    3. '_Row' → logprob: -16.00000762939453
    4. '_ROW' → logprob: -16.25000762939453
    5. '_rows' → logprob: -16.50000762939453
    6. '_raw' → logprob: -16.87500762939453
    7. '_line' → logprob: -16.87500762939453
    8. 'row' → logprob: -17.37500762939453
    9. 'Row' → logprob: -17.37500762939453
    10. ')_' → logprob: -18.00000762939453

Token 205: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.625004768371582
    3. '_token' → logprob: -15.250004768371582
    4. '_digits' → logprob: -15.375004768371582
    5. '_d' → logprob: -15.625004768371582
    6. '_digest' → logprob: -16.250003814697266
    7. '_decimal' → logprob: -16.375003814697266
    8. 'digit' → logprob: -16.750003814697266
    9. '_dtype' → logprob: -16.875003814697266
    10. 'Digit' → logprob: -17.125003814697266

Token 206: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018041854491457343
    2. '(' → logprob: -8.6251802444458
    3. ' (' → logprob: -14.7501802444458
    4. '()' → logprob: -15.2501802444458
    5. 'self' → logprob: -16.000181198120117
    6. '(
' → logprob: -16.000181198120117
    7. '(

' → logprob: -17.875181198120117
    8. '(s' → logprob: -18.000181198120117
    9. '   ' → logprob: -18.125181198120117
    10. ' ' → logprob: -18.750181198120117

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006781688891351223
    2. '()' → logprob: -5.256781578063965
    3. '(self' → logprob: -6.881781578063965
    4. ' )' → logprob: -8.381781578063965
    5. '())' → logprob: -9.381781578063965
    6. '   ' → logprob: -9.881781578063965
    7. ')return' → logprob: -10.006781578063965
    8. ' ' → logprob: -10.256781578063965
    9. 'self' → logprob: -10.506781578063965
    10. '(' → logprob: -10.631781578063965

Token 208: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015312091272789985
    2. '(' → logprob: -9.375153541564941
    3. 'self' → logprob: -9.625153541564941
    4. '(
' → logprob: -14.500153541564941
    5. ')' → logprob: -14.875153541564941
    6. '->' → logprob: -15.125153541564941
    7. ' self' → logprob: -15.125153541564941
    8. ' (' → logprob: -15.625153541564941
    9. '   ' → logprob: -15.625153541564941
    10. '()' → logprob: -15.625153541564941

Token 209: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.252445250749588
    2. 'int' → logprob: -1.5024452209472656
    3. ' return' → logprob: -7.752445220947266
    4. ' self' → logprob: -10.002445220947266
    5. 'return' → logprob: -10.627445220947266
    6. 'self' → logprob: -11.752445220947266
    7. '   ' → logprob: -12.252445220947266
    8. '[int' → logprob: -13.252445220947266
    9. ' ' → logprob: -14.002445220947266
    10. '(int' → logprob: -14.377445220947266

Token 210: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.020641274750232697
    2. '()' → logprob: -4.270641326904297
    3. '():
' → logprob: -5.645641326904297
    4. '(' → logprob: -6.270641326904297
    5. '(self' → logprob: -6.895641326904297
    6. ':' → logprob: -11.395641326904297
    7. '(
' → logprob: -12.645641326904297
    8. '():
' → logprob: -13.520641326904297
    9. '   ' → logprob: -13.770641326904297
    10. ' ():' → logprob: -13.895641326904297

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7210069298744202
    2. '       ' → logprob: -1.2210068702697754
    3. 'return' → logprob: -1.7210068702697754
    4. ' return' → logprob: -3.2210068702697754
    5. 'if' → logprob: -13.721007347106934
    6. '	return' → logprob: -13.971007347106934
    7. '```' → logprob: -14.346007347106934
    8. '   ' → logprob: -14.596007347106934
    9. ' ' → logprob: -15.096007347106934
    10. ' if' → logprob: -15.596007347106934

Token 212: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.491498531133402e-06
    2. ' return' → logprob: -11.750009536743164
    3. '       ' → logprob: -14.000009536743164
    4. '   ' → logprob: -14.250009536743164
    5. 'if' → logprob: -16.625009536743164
    6. '	return' → logprob: -20.125009536743164
    7. '```' → logprob: -20.500009536743164
    8. '#' (adapté à ' #') → logprob: -22.375009536743164
    9. 'eturn' → logprob: -24.250009536743164
    10. 'Return' → logprob: -24.625009536743164

Token 213: ' Terminal' (ID: 52701)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002942287246696651
    2. ' return' → logprob: -8.25029468536377
    3. 'if' → logprob: -10.50029468536377
    4. '       ' → logprob: -12.87529468536377
    5. '   ' → logprob: -13.00029468536377
    6. 'Return' → logprob: -14.50029468536377
    7. '```' → logprob: -16.625293731689453
    8. '#' → logprob: -17.000293731689453
    9. ' if' → logprob: -17.875293731689453
    10. '	return' → logprob: -18.000293731689453

Token 214: ' condition' (ID: 7060)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.106358602643013
    2. 'return' → logprob: -2.356358528137207
    3. ' if' → logprob: -5.231358528137207
    4. '   ' → logprob: -7.481358528137207
    5. 'if' → logprob: -8.856358528137207
    6. '       ' → logprob: -10.106358528137207
    7. ' ' → logprob: -11.231358528137207
    8. ':return' → logprob: -11.481358528137207
    9. '  ' → logprob: -11.856358528137207
    10. '	return' → logprob: -13.731358528137207

Token 215: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33553165197372437
    2. ' return' → logprob: -1.5855317115783691
    3. 'return' → logprob: -2.585531711578369
    4. '   ' → logprob: -5.835531711578369
    5. ' if' → logprob: -6.335531711578369
    6. 'if' → logprob: -9.710531234741211
    7. '    ' → logprob: -10.585531234741211
    8. ' ' → logprob: -11.085531234741211
    9. ':return' → logprob: -11.335531234741211
    10. '  ' → logprob: -11.460531234741211

Token 216: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.73446003627032e-05
    2. ' len' → logprob: -9.250097274780273
    3. '(len' → logprob: -13.875097274780273
    4. '=len' → logprob: -16.500097274780273
    5. '```' → logprob: -17.125097274780273
    6. 'the' → logprob: -17.500097274780273
    7. '`' → logprob: -17.625097274780273
    8. '	len' → logprob: -17.875097274780273
    9. '   ' → logprob: -18.000097274780273
    10. '[len' → logprob: -18.125097274780273

Token 217: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11080341786146164
    2. 'self' → logprob: -3.1108033657073975
    3. ' ==' → logprob: -3.3608033657073975
    4. '(self' → logprob: -4.360803604125977
    5. '()' → logprob: -5.360803604125977
    6. '()==' → logprob: -5.610803604125977
    7. 'is' → logprob: -5.735803604125977
    8. '<=' → logprob: -7.610803604125977
    9. ' is' → logprob: -8.485803604125977
    10. ' self' → logprob: -9.485803604125977

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000205566844670102
    2. ' ' → logprob: -8.500205993652344
    3. '==' → logprob: -13.500205993652344
    4. '2' → logprob: -15.500205993652344
    5. '```' → logprob: -15.750205993652344
    6. '   ' → logprob: -16.500205993652344
    7. '0' → logprob: -16.750205993652344
    8. '=' → logprob: -17.125205993652344
    9. 'one' → logprob: -17.250205993652344
    10. 'equal' → logprob: -18.125205993652344

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -10.87502384185791
    3. '2' → logprob: -13.00002384185791
    4. '==' → logprob: -13.25002384185791
    5. '```' → logprob: -15.50002384185791
    6. '   ' → logprob: -15.75002384185791
    7. '0' → logprob: -16.625022888183594
    8. '=' → logprob: -16.750022888183594
    9. ' ==' → logprob: -17.125022888183594
    10. 'len' → logprob: -17.500022888183594

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010839351452887058
    2. 'return' → logprob: -4.760839462280273
    3. ' return' → logprob: -6.635839462280273
    4. '   ' → logprob: -7.385839462280273
    5. ' if' → logprob: -9.010839462280273
    6. ':' → logprob: -9.885839462280273
    7. 'if' → logprob: -10.385839462280273
    8. ' and' → logprob: -10.385839462280273
    9. ',' → logprob: -11.010839462280273
    10. ':return' → logprob: -11.135839462280273

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013447726145386696
    2. 'return' → logprob: -5.0134477615356445
    3. ' return' → logprob: -5.0134477615356445
    4. '   ' → logprob: -9.763447761535645
    5. ' if' → logprob: -13.013447761535645
    6. '	return' → logprob: -15.013447761535645
    7. ' ' → logprob: -15.263447761535645
    8. ':return' → logprob: -15.263447761535645
    9. '           ' → logprob: -15.388447761535645
    10. ',' → logprob: -15.388447761535645

Token 222: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005703099304810166
    2. '       ' → logprob: -8.000570297241211
    3. 'if' (adapté à ' if') → logprob: -8.750570297241211
    4. ' return' → logprob: -9.500570297241211
    5. '   ' → logprob: -13.375570297241211
    6. ' if' → logprob: -17.12557029724121
    7. '	return' → logprob: -18.00057029724121
    8. '```' → logprob: -20.25057029724121
    9. '  ' → logprob: -21.37557029724121
    10. '           ' → logprob: -21.75057029724121

Token 223: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2519296407699585
    2. 'len' → logprob: -1.5019296407699585
    3. '(len' → logprob: -14.50192928314209
    4. 'self' → logprob: -16.501930236816406
    5. ' self' → logprob: -17.251930236816406
    6. '	len' → logprob: -18.501930236816406
    7. '   ' → logprob: -19.001930236816406
    8. '=len' → logprob: -19.876930236816406
    9. '[len' → logprob: -20.751930236816406
    10. ' ' → logprob: -20.751930236816406

Token 224: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. 'self' → logprob: -15.12500286102295
    4. ' (' → logprob: -18.375003814697266
    5. ' self' → logprob: -19.500003814697266
    6. '[self' → logprob: -19.750003814697266
    7. '=self' → logprob: -20.375003814697266
    8. '(
' → logprob: -20.750003814697266
    9. '```' → logprob: -20.875003814697266
    10. ',self' → logprob: -21.250003814697266

Token 225: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.005723997950553894
    2. '(self' → logprob: -6.00572395324707
    3. '.self' → logprob: -6.38072395324707
    4. '.' → logprob: -7.13072395324707
    5. 'self' → logprob: -7.50572395324707
    6. ' .' → logprob: -9.00572395324707
    7. ' self' → logprob: -10.00572395324707
    8. '.s' → logprob: -11.50572395324707
    9. ')' → logprob: -12.13072395324707
    10. '   ' → logprob: -12.13072395324707

Token 226: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.14629220962524414
    2. '.d' → logprob: -2.146292209625244
    3. 'digits' → logprob: -4.146292209625244
    4. 'self' → logprob: -6.521292209625244
    5. '.' → logprob: -7.146292209625244
    6. '.s' → logprob: -8.771291732788086
    7. 's' → logprob: -9.021291732788086
    8. 'd' → logprob: -9.146291732788086
    9. ')' → logprob: -9.271291732788086
    10. 'igts' → logprob: -9.521291732788086

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01120732817798853
    2. '==' → logprob: -4.761207103729248
    3. ')==' → logprob: -6.511207103729248
    4. ' ==' → logprob: -6.886207103729248
    5. '()' → logprob: -9.886207580566406
    6. ' )' → logprob: -10.636207580566406
    7. '()==' → logprob: -13.136207580566406
    8. '   ' → logprob: -14.011207580566406
    9. '=' → logprob: -14.136207580566406
    10. '```' → logprob: -14.136207580566406

Token 228: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1604243814945221
    2. ' ==' → logprob: -1.9104243516921997
    3. '<=' → logprob: -9.41042423248291
    4. ')' → logprob: -9.78542423248291
    5. ' <=' → logprob: -11.16042423248291
    6. '```' → logprob: -11.53542423248291
    7. ')==' → logprob: -11.66042423248291
    8. '=' → logprob: -12.03542423248291
    9. '()==' → logprob: -12.16042423248291
    10. '>' → logprob: -12.53542423248291

Token 229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.876171112060547
    4. '0' → logprob: -15.251171112060547
    5. '  ' → logprob: -16.876171112060547
    6. '```' → logprob: -16.876171112060547
    7. '
' → logprob: -17.188671112060547
    8. '۱' → logprob: -17.313671112060547
    9. '    ' → logprob: -18.251171112060547
    10. ' ' → logprob: -18.313671112060547

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -16.7500057220459
    4. '```' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.1250057220459
    6. '
' → logprob: -18.0625057220459
    7. '2' → logprob: -18.1875057220459
    8. '۱' → logprob: -18.5625057220459
    9. '[' → logprob: -18.6875057220459
    10. ')' → logprob: -19.3750057220459

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48419681191444397
    2. ':
' → logprob: -0.9841967821121216
    3. ':return' → logprob: -4.609196662902832
    4. '):
' → logprob: -10.609196662902832
    5. ' and' → logprob: -10.609196662902832
    6. '       ' → logprob: -11.234196662902832
    7. 'return' → logprob: -11.359196662902832
    8. '           ' → logprob: -12.234196662902832
    9. '   ' → logprob: -12.234196662902832
    10. '():
' → logprob: -12.484196662902832

Token 232: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006184502970427275
    2. 'return' → logprob: -5.2561845779418945
    3. ' return' → logprob: -7.5061845779418945
    4. '           ' → logprob: -8.256184577941895
    5. '   ' → logprob: -8.881184577941895
    6. '	return' → logprob: -14.256184577941895
    7. ':return' → logprob: -15.006184577941895
    8. '```' → logprob: -15.256184577941895
    9. '{return' → logprob: -15.631184577941895
    10. '	       ' → logprob: -15.881184577941895

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005834150360897183
    2. ' return' → logprob: -7.500583648681641
    3. '           ' → logprob: -10.75058364868164
    4. '       ' → logprob: -11.75058364868164
    5. '   ' → logprob: -14.50058364868164
    6. ':return' → logprob: -15.00058364868164
    7. '	return' → logprob: -15.37558364868164
    8. '{return' → logprob: -17.00058364868164
    9. '               ' → logprob: -17.75058364868164
    10. ')return' → logprob: -17.87558364868164

Token 234: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5597102396423e-05
    2. ' self' → logprob: -10.250035285949707
    3. '0' → logprob: -17.375036239624023
    4. '[self' → logprob: -17.625036239624023
    5. '(self' → logprob: -17.750036239624023
    6. '   ' → logprob: -18.375036239624023
    7. '10' → logprob: -18.500036239624023
    8. '       ' → logprob: -19.500036239624023
    9. '	self' → logprob: -19.625036239624023
    10. 'int' → logprob: -20.000036239624023

Token 235: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -8.184812031686306e-05
    2. '.' → logprob: -9.625082015991211
    3. 'digits' → logprob: -11.500082015991211
    4. ' .' → logprob: -12.250082015991211
    5. 'd' → logprob: -15.125082015991211
    6. 'Digits' → logprob: -15.750082015991211
    7. ').' → logprob: -16.37508201599121
    8. 'self' → logprob: -16.87508201599121
    9. '.s' → logprob: -17.00008201599121
    10. '_digits' → logprob: -17.25008201599121

Token 236: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.002427144441753626
    2. 'digits' → logprob: -6.127427101135254
    3. 'ig' → logprob: -9.002427101135254
    4. 'its' → logprob: -9.877427101135254
    5. 'igts' → logprob: -10.502427101135254
    6. 'self' → logprob: -11.252427101135254
    7. 'd' → logprob: -11.752427101135254
    8. 'igit' → logprob: -12.127427101135254
    9. 'i' → logprob: -13.002427101135254
    10. 'g' → logprob: -13.127427101135254

Token 237: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. '0' → logprob: -11.875006675720215
    3. '[-' → logprob: -16.87500762939453
    4. '```' → logprob: -18.62500762939453
    5. '   ' → logprob: -19.75000762939453
    6. '[
' → logprob: -19.75000762939453
    7. ' ' → logprob: -20.12500762939453
    8. ' [' → logprob: -20.87500762939453
    9. 's' → logprob: -21.87500762939453
    10. '\[' → logprob: -21.87500762939453

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '-' → logprob: -14.125001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '[' → logprob: -17.000001907348633
    6. '```' → logprob: -18.187501907348633
    7. '۰' → logprob: -18.187501907348633
    8. '
' → logprob: -18.500001907348633
    9. ' -' → logprob: -18.625001907348633
    10. '       ' → logprob: -19.625001907348633

Token 239: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04646949842572212
    2. ')
' → logprob: -3.6714694499969482
    3. '       ' → logprob: -4.796469688415527
    4. '}' → logprob: -5.046469688415527
    5. '<|end|>' → logprob: -6.046469688415527
    6. ']' → logprob: -6.421469688415527
    7. '}
' → logprob: -7.046469688415527
    8. ']
' → logprob: -8.796469688415527
    9. ')return' → logprob: -9.671469688415527
    10. '<|end|>' → logprob: -10.171469688415527

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002135534887202084
    2. 'return' → logprob: -8.625213623046875
    3. '   ' → logprob: -11.375213623046875
    4. ' return' → logprob: -11.500213623046875
    5. 'def' → logprob: -12.500213623046875
    6. 'raise' → logprob: -12.875213623046875
    7. '
' → logprob: -13.250213623046875
    8. ' raise' → logprob: -13.875213623046875
    9. 'else' → logprob: -14.000213623046875
    10. '<|end|>' → logprob: -14.250213623046875

Token 241: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02969297766685486
    2. 'else' (adapté à ' else') → logprob: -3.9046928882598877
    3. 'return' → logprob: -5.154693126678467
    4. '
' → logprob: -6.404693126678467
    5. 'raise' → logprob: -7.279693126678467
    6. ' else' → logprob: -7.404693126678467
    7. '   ' → logprob: -8.154692649841309
    8. 'elif' → logprob: -10.654692649841309
    9. ' return' → logprob: -10.779692649841309
    10. ' raise' → logprob: -10.779692649841309

Token 242: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5886386632919312
    2. ':
' → logprob: -1.0886386632919312
    3. 'return' → logprob: -3.0886387825012207
    4. ' return' → logprob: -3.4636387825012207
    5. '           ' → logprob: -3.9636387825012207
    6. ':' → logprob: -4.838638782501221
    7. ':return' → logprob: -5.838638782501221
    8. '   ' → logprob: -7.213638782501221
    9. '
' → logprob: -8.338638305664062
    10. ' :
' → logprob: -8.838638305664062

Token 243: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24923914670944214
    2. '       ' → logprob: -1.999239206314087
    3. ' return' → logprob: -2.499239206314087
    4. '           ' → logprob: -6.749238967895508
    5. '   ' → logprob: -6.999238967895508
    6. '
' → logprob: -7.124238967895508
    7. 'self' → logprob: -10.124238967895508
    8. '	return' → logprob: -10.624238967895508
    9. ' ' → logprob: -10.999238967895508
    10. 'raise' → logprob: -11.374238967895508

Token 244: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018729714676737785
    2. ' return' → logprob: -4.0187296867370605
    3. '       ' → logprob: -8.143730163574219
    4. '           ' → logprob: -8.393730163574219
    5. 'lower' → logprob: -10.393730163574219
    6. '   ' → logprob: -10.893730163574219
    7. 'new' → logprob: -12.268730163574219
    8. '
' → logprob: -13.143730163574219
    9. 'next' → logprob: -13.393730163574219
    10. 'self' → logprob: -13.893730163574219

Token 245: ' Rec' (ID: 14753)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14330853521823883
    2. ' return' → logprob: -2.018308639526367
    3. 'lower' → logprob: -8.018308639526367
    4. '       ' → logprob: -8.643308639526367
    5. ' lower' → logprob: -10.143308639526367
    6. '           ' → logprob: -10.768308639526367
    7. '   ' → logprob: -10.893308639526367
    8. 'next' → logprob: -10.893308639526367
    9. 'new' → logprob: -11.518308639526367
    10. ' new' → logprob: -12.393308639526367

Token 246: 'ursively' (ID: 85532)
  Prédit: 'ursively'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursively' → logprob: -0.4711945652961731
    2. '       ' → logprob: -2.2211945056915283
    3. 'urn' → logprob: -2.9711945056915283
    4. 'ur' → logprob: -2.9711945056915283
    5. 'ursive' → logprob: -3.2211945056915283
    6. 'ursion' → logprob: -3.3461945056915283
    7. '   ' → logprob: -3.7211945056915283
    8. 'urse' → logprob: -4.221194744110107
    9. 'all' → logprob: -4.346194744110107
    10. 'urs' → logprob: -4.971194744110107

Token 247: ' reduce' (ID: 10389)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029970545321702957
    2. ' return' → logprob: -3.529970645904541
    3. '       ' → logprob: -8.904970169067383
    4. '           ' → logprob: -9.529970169067383
    5. '   ' → logprob: -12.279970169067383
    6. ':return' → logprob: -12.654970169067383
    7. '
' → logprob: -13.029970169067383
    8. '	return' → logprob: -14.779970169067383
    9. ')return' → logprob: -15.529970169067383
    10. '          ' → logprob: -15.654970169067383

Token 248: ' rows' (ID: 13585)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016179004684090614
    2. ' return' → logprob: -4.516179084777832
    3. '           ' → logprob: -5.641179084777832
    4. 'lower' → logprob: -7.266179084777832
    5. '       ' → logprob: -7.641179084777832
    6. 'self' → logprob: -8.891179084777832
    7. 'new' → logprob: -8.891179084777832
    8. 'next' → logprob: -10.141179084777832
    9. '   ' → logprob: -10.516179084777832
    10. '
' → logprob: -10.766179084777832

Token 249: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7346175909042358
    2. '       ' → logprob: -1.1096175909042358
    3. ' return' → logprob: -1.8596175909042358
    4. '           ' → logprob: -3.3596177101135254
    5. '   ' → logprob: -9.859617233276367
    6. '
' → logprob: -10.359617233276367
    7. ':return' → logprob: -11.234617233276367
    8. '        
' → logprob: -11.984617233276367
    9. '               ' → logprob: -12.234617233276367
    10. '        ' → logprob: -12.484617233276367

Token 250: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6449869275093079
    2. '       ' → logprob: -0.8949869275093079
    3. ' return' → logprob: -2.769986867904663
    4. '           ' → logprob: -5.519987106323242
    5. '   ' → logprob: -10.269987106323242
    6. '	return' → logprob: -12.894987106323242
    7. '```' → logprob: -12.894987106323242
    8. ':return' → logprob: -13.019987106323242
    9. '      ' → logprob: -13.769987106323242
    10. '               ' → logprob: -14.019987106323242

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002790611470118165
    2. ' return' → logprob: -6.002790451049805
    3. '           ' → logprob: -8.252790451049805
    4. '       ' → logprob: -10.002790451049805
    5. '   ' → logprob: -12.627790451049805
    6. '
' → logprob: -12.752790451049805
    7. 'lower' → logprob: -14.002790451049805
    8. 'new' → logprob: -14.252790451049805
    9. '```' → logprob: -15.127790451049805
    10. '         ' → logprob: -15.252790451049805

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008114131633192301
    2. ' self' → logprob: -7.125811576843262
    3. '(self' → logprob: -12.500811576843262
    4. 'Mod' → logprob: -12.875811576843262
    5. 'Modulo' → logprob: -15.250811576843262
    6. 'Digit' → logprob: -16.750810623168945
    7. '	self' → logprob: -16.875810623168945
    8. '(Mod' → logprob: -17.125810623168945
    9. '[self' → logprob: -17.500810623168945
    10. '```' → logprob: -17.625810623168945

Token 253: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.0004011177225038409
    2. 'build' → logprob: -7.875401020050049
    3. '.' → logprob: -11.750401496887207
    4. '.get' → logprob: -12.250401496887207
    5. ' .' → logprob: -12.625401496887207
    6. '   ' → logprob: -12.750401496887207
    7. '	build' → logprob: -14.625401496887207
    8. ' build' → logprob: -15.000401496887207
    9. ' ' → logprob: -15.500401496887207
    10. '  ' → logprob: -15.750401496887207

Token 254: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -1.8624639324116288e-06
    2. 'lower' → logprob: -13.250001907348633
    3. '_upper' → logprob: -17.250001907348633
    4. ' lower' → logprob: -18.500001907348633
    5. '.lower' → logprob: -19.250001907348633
    6. '_low' → logprob: -19.375001907348633
    7. 'Lower' → logprob: -20.500001907348633
    8. '(lower' → logprob: -20.500001907348633
    9. '\' → logprob: -22.000001907348633
    10. '_' → logprob: -22.375001907348633

Token 255: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.8624639324116288e-06
    2. '_rows' → logprob: -14.500001907348633
    3. '_lower' → logprob: -14.625001907348633
    4. 'row' → logprob: -14.750001907348633
    5. '_line' → logprob: -15.125001907348633
    6. '_' → logprob: -16.500001907348633
    7. '_low' → logprob: -18.375001907348633
    8. '_Row' → logprob: -18.875001907348633
    9. ' _' → logprob: -19.000001907348633
    10. '_ROW' → logprob: -19.125001907348633

Token 256: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0024773201439529657
    2. '()' → logprob: -6.002477169036865
    3. ' ().' → logprob: -14.252477645874023
    4. '().__' → logprob: -15.002477645874023
    5. '>().' → logprob: -15.752477645874023
    6. '()`' → logprob: -16.377477645874023
    7. '()?.' → logprob: -16.377477645874023
    8. '().'' → logprob: -16.752477645874023
    9. '()].' → logprob: -17.002477645874023
    10. '`()' → logprob: -17.002477645874023

Token 257: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -3.128163257315464e-07
    2. ' get' → logprob: -15.125
    3. '.get' → logprob: -16.875
    4. '	get' → logprob: -19.625
    5. '_get' → logprob: -19.875
    6. '(get' → logprob: -20.5
    7. '   ' → logprob: -21.0
    8. '[get' → logprob: -21.625
    9. '```' → logprob: -21.875
    10. '  ' → logprob: -22.25

Token 258: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -3.7146746763028204e-05
    2. 'last' → logprob: -10.25003719329834
    3. '_l' → logprob: -13.87503719329834
    4. '_' → logprob: -14.62503719329834
    5. '_lower' → logprob: -15.75003719329834
    6. '_Last' → logprob: -17.125036239624023
    7. '_LAST' → logprob: -17.125036239624023
    8. '_la' → logprob: -17.375036239624023
    9. '_first' → logprob: -17.500036239624023
    10. '_next' → logprob: -18.000036239624023

Token 259: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.746380237629637e-05
    2. '_last' → logprob: -9.250097274780273
    3. 'row' → logprob: -14.000097274780273
    4. '_' → logprob: -15.250097274780273
    5. '_line' → logprob: -16.625097274780273
    6. '_rows' → logprob: -17.125097274780273
    7. ' _' → logprob: -17.125097274780273
    8. '__' → logprob: -17.625097274780273
    9. '_r' → logprob: -17.625097274780273
    10. '_lower' → logprob: -17.625097274780273

Token 260: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.00022272850037552416
    2. 'Digit' → logprob: -9.125223159790039
    3. 'digit' → logprob: -9.125223159790039
    4. 'ing' → logprob: -12.750223159790039
    5. '_row' → logprob: -14.375223159790039
    6. 'ed' → logprob: -14.750223159790039
    7. '_' → logprob: -15.375223159790039
    8. '_d' → logprob: -15.375223159790039
    9. 'igit' → logprob: -16.00022315979004
    10. '_digits' → logprob: -16.87522315979004

Token 261: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.500004768371582
    3. ' ()' → logprob: -14.625004768371582
    4. '()
' → logprob: -15.875004768371582
    5. '()`' → logprob: -16.0000057220459
    6. '()]' → logprob: -16.6250057220459
    7. '()<' → logprob: -17.1250057220459
    8. '()(' → logprob: -17.1250057220459
    9. '（）' → logprob: -17.1250057220459
    10. '()</' → logprob: -17.1250057220459

Token 262: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002718329895287752
    2. 'class' → logprob: -6.377718448638916
    3. '<|end|>' → logprob: -7.627718448638916
    4. 'from' → logprob: -8.502717971801758
    5. '#' → logprob: -8.627717971801758
    6. '```' → logprob: -9.752717971801758
    7. 'if' → logprob: -10.877717971801758
    8. 'classmethod' → logprob: -10.877717971801758
    9. '@' → logprob: -11.627717971801758
    10. '@property' → logprob: -11.627717971801758

Token 264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10253190994262695
    2. '@' → logprob: -2.352531909942627
    3. '@property' → logprob: -6.477531909942627
    4. 'classmethod' → logprob: -8.227531433105469
    5. 'class' → logprob: -8.352531433105469
    6. 'from' → logprob: -9.227531433105469
    7. 'staticmethod' → logprob: -9.352531433105469
    8. '#' → logprob: -10.602531433105469
    9. ' def' → logprob: -10.602531433105469
    10. '@dat' → logprob: -11.352531433105469

Token 265: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006068390794098377
    2. ' __' → logprob: -5.131068229675293
    3. 'get' → logprob: -10.381068229675293
    4. 'def' → logprob: -10.506068229675293
    5. '_iter' → logprob: -10.881068229675293
    6. 'from' → logprob: -11.006068229675293
    7. 'iter' → logprob: -11.631068229675293
    8. 'digits' → logprob: -11.756068229675293
    9. 'to' → logprob: -11.881068229675293
    10. 'as' → logprob: -12.381068229675293

Token 266: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.39074254035949707
    2. 'str' → logprob: -1.140742540359497
    3. 'init' → logprob: -5.640742301940918
    4. 'len' → logprob: -8.140742301940918
    5. 'iter' → logprob: -10.890742301940918
    6. 'eq' → logprob: -12.765742301940918
    7. 'getitem' → logprob: -14.015742301940918
    8. '```' → logprob: -17.890743255615234
    9. ' repr' → logprob: -18.140743255615234
    10. ' str' → logprob: -18.140743255615234

Token 267: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006254519335925579
    2. '__' → logprob: -5.25625467300415
    3. '__('' → logprob: -7.25625467300415
    4. '__(
' → logprob: -8.131254196166992
    5. '__("' → logprob: -11.131254196166992
    6. '__((' → logprob: -12.631254196166992
    7. '(self' → logprob: -13.506254196166992
    8. '__(*' → logprob: -14.631254196166992
    9. '__.__' → logprob: -15.756254196166992
    10. '(' → logprob: -16.256254196166992

Token 268: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.723973582556937e-05
    2. ')' → logprob: -11.000017166137695
    3. ' self' → logprob: -14.750017166137695
    4. '
' → logprob: -16.250017166137695
    5. '(self' → logprob: -17.625017166137695
    6. '   ' → logprob: -18.000017166137695
    7. ' ' → logprob: -18.500017166137695
    8. '    
' → logprob: -19.625017166137695
    9. '

' → logprob: -20.000017166137695
    10. '	self' → logprob: -20.000017166137695

Token 269: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.13259057700634003
    2. '__)' → logprob: -2.6325905323028564
    3. '__' → logprob: -3.1325905323028564
    4. 'self' → logprob: -5.3825907707214355
    5. '__('' → logprob: -5.7575907707214355
    6. '__(
' → logprob: -7.6325907707214355
    7. '__)
' → logprob: -9.257590293884277
    8. '(self' → logprob: -9.382590293884277
    9. '__),' → logprob: -10.007590293884277
    10. '__).' → logprob: -10.257590293884277

Token 270: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004588553216308355
    2. '__(' → logprob: -5.879588603973389
    3. '(' → logprob: -6.504588603973389
    4. 'self' → logprob: -8.25458812713623
    5. '__(
' → logprob: -11.37958812713623
    6. '(
' → logprob: -11.75458812713623
    7. '(s' → logprob: -12.62958812713623
    8. ' (' → logprob: -14.00458812713623
    9. '```' → logprob: -14.75458812713623
    10. '__' → logprob: -14.87958812713623

Token 271: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.31326204538345337
    2. 'str' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.813261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '[str' → logprob: -16.813262939453125
    6. '	str' → logprob: -18.063262939453125
    7. '    ' → logprob: -18.313262939453125
    8. '  ' → logprob: -18.313262939453125
    9. 'stri' → logprob: -18.813262939453125
    10. '(str' → logprob: -19.438262939453125

Token 272: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003100791363976896
    2. '(' → logprob: -8.375309944152832
    3. 'self' → logprob: -9.875309944152832
    4. '(
' → logprob: -11.375309944152832
    5. '       ' → logprob: -11.625309944152832
    6. '   ' → logprob: -12.250309944152832
    7. '(s' → logprob: -13.875309944152832
    8. '[self' → logprob: -14.250309944152832
    9. ' self' → logprob: -14.500309944152832
    10. '(Self' → logprob: -15.500309944152832

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002734858775511384
    2. 'return' → logprob: -6.627734661102295
    3. 'f' → logprob: -7.002734661102295
    4. ' f' → logprob: -8.002735137939453
    5. ' return' → logprob: -8.752735137939453
    6. '   ' → logprob: -13.127735137939453
    7. '(f' → logprob: -13.377735137939453
    8. 'self' → logprob: -14.252735137939453
    9. '{return' → logprob: -14.252735137939453
    10. '           ' → logprob: -15.002735137939453

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5824239253997803
    2. 'f' → logprob: -0.8324239253997803
    3. '       ' → logprob: -5.082424163818359
    4. ' return' → logprob: -8.70742416381836
    5. ' f' → logprob: -9.45742416381836
    6. '   ' → logprob: -11.20742416381836
    7. 'repr' → logprob: -14.20742416381836
    8. '           ' → logprob: -15.08242416381836
    9. '```' → logprob: -15.58242416381836
    10. '"' → logprob: -15.95742416381836

Token 275: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00408884696662426
    2. ' f' → logprob: -5.504088878631592
    3. ''f' → logprob: -12.129088401794434
    4. '"' → logprob: -12.629088401794434
    5. ''' → logprob: -13.379088401794434
    6. 'repr' → logprob: -17.25408935546875
    7. ' ' → logprob: -17.75408935546875
    8. '	f' → logprob: -17.75408935546875
    9. 'str' → logprob: -18.50408935546875
    10. '(f' → logprob: -18.75408935546875

Token 276: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12088701874017715
    2. '"' → logprob: -2.245887041091919
    3. '(f' → logprob: -5.37088680267334
    4. ''M' → logprob: -6.37088680267334
    5. '(Mod' → logprob: -7.62088680267334
    6. ' f' → logprob: -7.99588680267334
    7. 'Mod' → logprob: -8.24588680267334
    8. ''' → logprob: -8.24588680267334
    9. '"{' → logprob: -8.99588680267334
    10. '"<' → logprob: -9.49588680267334

Token 277: 'Modulo' (ID: 168265)
  Prédit: 'Modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.004120430909097195
    2. '"' → logprob: -6.129120349884033
    3. 'f' → logprob: -6.879120349884033
    4. '{' → logprob: -7.379120349884033
    5. ''' → logprob: -8.629120826721191
    6. ''{' → logprob: -10.254120826721191
    7. '"{' → logprob: -10.754120826721191
    8. '{'' → logprob: -11.504120826721191
    9. 'Mod' → logprob: -12.254120826721191
    10. 'mod' → logprob: -12.379120826721191

Token 278: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -1.9361264946837764e-07
    2. 'Digits' → logprob: -16.5
    3. 'Digital' → logprob: -16.5
    4. 'digit' → logprob: -16.75
    5. '-digit' → logprob: -17.75
    6. '_digit' → logprob: -18.625
    7. '(D' → logprob: -19.625
    8. '"' → logprob: -19.625
    9. ' Digit' → logprob: -19.75
    10. ''D' → logprob: -20.25

Token 279: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.9361264946837764e-07
    2. 'sequence' → logprob: -16.0
    3. '_sequence' → logprob: -17.875
    4. 'Sequ' → logprob: -18.0
    5. ' sequence' → logprob: -18.375
    6. ' Sequence' → logprob: -19.0
    7. '```' → logprob: -19.375
    8. '"' → logprob: -19.5
    9. '
' → logprob: -19.75
    10. 'Seq' → logprob: -20.25

Token 280: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.003384222509339452
    2. '(self' → logprob: -5.753384113311768
    3. '{' → logprob: -8.503384590148926
    4. '(' → logprob: -13.253384590148926
    5. '(d' → logprob: -13.628384590148926
    6. '({'' → logprob: -15.378384590148926
    7. '('{' → logprob: -15.878384590148926
    8. '([{' → logprob: -16.25338363647461
    9. 'digits' → logprob: -16.25338363647461
    10. 'self' → logprob: -16.37838363647461

Token 281: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5048530030981055e-06
    2. '[self' → logprob: -14.125001907348633
    3. ' self' → logprob: -14.750001907348633
    4. ''s' → logprob: -14.875001907348633
    5. '[' → logprob: -17.375001907348633
    6. '''.' → logprob: -17.500001907348633
    7. '',' → logprob: -17.875001907348633
    8. ''' → logprob: -18.250001907348633
    9. '','.' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.875001907348633

Token 282: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -3.5120287066092715e-05
    2. ' .' → logprob: -10.750035285949707
    3. '.' → logprob: -11.500035285949707
    4. ').' → logprob: -13.375035285949707
    5. '}.' → logprob: -14.250035285949707
    6. 'digits' → logprob: -14.250035285949707
    7. 'self' → logprob: -16.12503433227539
    8. '.f' → logprob: -16.62503433227539
    9. '.s' → logprob: -17.00003433227539
    10. '.dumps' → logprob: -17.12503433227539

Token 283: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.016737744212150574
    2. 'its' → logprob: -4.391737937927246
    3. 'self' → logprob: -5.891737937927246
    4. 'ig' → logprob: -7.766737937927246
    5. 'igts' → logprob: -8.391737937927246
    6. '{' → logprob: -8.516737937927246
    7. 's' → logprob: -8.891737937927246
    8. 'i' → logprob: -9.391737937927246
    9. 'digits' → logprob: -9.641737937927246
    10. 'igit' → logprob: -9.891737937927246

Token 284: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.03379599750041962
    2. ')"' → logprob: -3.5337960720062256
    3. ')' → logprob: -5.5337958335876465
    4. ')}' → logprob: -10.158796310424805
    5. '])' → logprob: -10.783796310424805
    6. '))' → logprob: -11.533796310424805
    7. ')")' → logprob: -11.908796310424805
    8. '}")' → logprob: -12.783796310424805
    9. '}"' → logprob: -13.158796310424805
    10. ' })' → logprob: -13.408796310424805

Token 285: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6942445039749146
    2. 'class' → logprob: -0.6942445039749146
    3. '<|end|>' → logprob: -7.444244384765625
    4. 'from' → logprob: -8.069244384765625
    5. '#' → logprob: -8.944244384765625
    6. '```' → logprob: -9.944244384765625
    7. '<|end|>' → logprob: -12.319244384765625
    8. ' class' → logprob: -12.569244384765625
    9. 'import' → logprob: -13.069244384765625
    10. '[' → logprob: -13.319244384765625

Token 287: ' Digit' (ID: 91174)
  Prédit: ' Pascal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pascal' → logprob: -0.9656612873077393
    2. 'Pas' → logprob: -1.9656612873077393
    3. 'Digit' → logprob: -3.2156612873077393
    4. 'Repeated' → logprob: -3.4656612873077393
    5. 'Modulo' → logprob: -3.5906612873077393
    6. 'Sum' → logprob: -3.5906612873077393
    7. 'Simple' → logprob: -3.9656612873077393
    8. 'P' → logprob: -4.21566104888916
    9. ' Digit' → logprob: -4.46566104888916
    10. 'F' → logprob: -4.46566104888916

Token 288: 'Sequence' (ID: 17333)
  Prédit: 'Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.6792223453521729
    2. 'Sequence' → logprob: -1.1792223453521729
    3. 'P' → logprob: -2.804222345352173
    4. 'Pair' → logprob: -3.429222345352173
    5. 'Sum' → logprob: -4.429222106933594
    6. 'Square' → logprob: -4.429222106933594
    7. 'Row' → logprob: -4.554222106933594
    8. 'Tri' → logprob: -4.929222106933594
    9. 'Tree' → logprob: -5.804222106933594
    10. 'Grid' → logprob: -5.929222106933594

Token 289: 'Factory' (ID: 4870)
  Prédit: 'Builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Builder' → logprob: -0.9814360737800598
    2. 'Factory' → logprob: -1.356436014175415
    3. '(' → logprob: -1.731436014175415
    4. 'Iterator' → logprob: -2.606436014175415
    5. 'Generator' → logprob: -3.106436014175415
    6. ':' → logprob: -4.106436252593994
    7. 'Iterable' → logprob: -4.856436252593994
    8. ':
' → logprob: -4.981436252593994
    9. 'Sequence' → logprob: -5.356436252593994
    10. 'From' → logprob: -5.356436252593994

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001351783750578761
    2. ':
' → logprob: -6.626351833343506
    3. '(' → logprob: -11.751351356506348
    4. '():' → logprob: -12.376351356506348
    5. '(D' → logprob: -12.876351356506348
    6. '(object' → logprob: -13.001351356506348
    7. ':def' → logprob: -13.126351356506348
    8. ':

' → logprob: -13.376351356506348
    9. '):' → logprob: -13.751351356506348
    10. ' :' → logprob: -13.751351356506348

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062251402996480465
    2. '    
' → logprob: -5.881225109100342
    3. '```' → logprob: -6.131225109100342
    4. '<|end|>' → logprob: -7.381225109100342
    5. 'def' → logprob: -8.2562255859375
    6. '
' → logprob: -9.7562255859375
    7. 'staticmethod' → logprob: -9.8812255859375
    8. ':' → logprob: -10.0062255859375
    9. 'classmethod' → logprob: -10.0062255859375
    10. ' def' → logprob: -10.5062255859375

Token 292: ' """
' (ID: 7037)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.1288367360830307
    2. ' @' → logprob: -2.1288366317749023
    3. '   ' → logprob: -6.378836631774902
    4. 'def' → logprob: -9.003836631774902
    5. ' def' → logprob: -9.378836631774902
    6. '@param' → logprob: -14.753836631774902
    7. 'class' → logprob: -15.003836631774902
    8. '@property' → logprob: -15.003836631774902
    9. 'staticmethod' → logprob: -15.128836631774902
    10. '
' → logprob: -15.253836631774902

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4466570317745209
    2. 'staticmethod' → logprob: -1.8216570615768433
    3. 'def' → logprob: -2.0716569423675537
    4. '@' → logprob: -2.9466569423675537
    5. '"""
' → logprob: -4.946657180786133
    6. ' def' → logprob: -5.071657180786133
    7. ' """
' → logprob: -5.946657180786133
    8. '"""' → logprob: -6.071657180786133
    9. ' @' → logprob: -7.321657180786133
    10. 'classmethod' → logprob: -7.446657180786133

Token 294: ' Factory' (ID: 28905)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0018465323373675346
    2. ' @' → logprob: -6.8768463134765625
    3. 'staticmethod' → logprob: -8.126846313476562
    4. '   ' → logprob: -8.376846313476562
    5. '"""
' → logprob: -9.001846313476562
    6. 'class' → logprob: -9.376846313476562
    7. 'def' → logprob: -10.251846313476562
    8. '"""' → logprob: -10.376846313476562
    9. 'classmethod' → logprob: -12.251846313476562
    10. '
' → logprob: -12.626846313476562

Token 295: ' class' (ID: 744)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.604142427444458
    2. ':
' → logprob: -1.354142427444458
    3. ' for' → logprob: -2.104142427444458
    4. 'class' → logprob: -3.229142427444458
    5. 'for' → logprob: -4.729142189025879
    6. 'classmethod' → logprob: -5.104142189025879
    7. 'staticmethod' → logprob: -5.229142189025879
    8. ' class' → logprob: -5.229142189025879
    9. 'def' → logprob: -5.479142189025879
    10. ' to' → logprob: -6.604142189025879

Token 296: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8935120105743408
    2. ' for' → logprob: -0.8935120105743408
    3. ':' → logprob: -2.143512010574341
    4. '   ' → logprob: -3.518512010574341
    5. ':
' → logprob: -4.393511772155762
    6. 'for' → logprob: -4.518511772155762
    7. '<|end|>' → logprob: -5.393511772155762
    8. 'to' → logprob: -5.393511772155762
    9. 'def' → logprob: -6.643511772155762
    10. '<|end|>' → logprob: -8.018511772155762

Token 297: ' creating' (ID: 9278)
  Prédit: 'creating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creating' → logprob: -0.5760440230369568
    2. ' creating' → logprob: -0.8260440230369568
    3. ' generating' → logprob: -10.576044082641602
    4. ' producing' → logprob: -10.576044082641602
    5. ' constructing' → logprob: -11.076044082641602
    6. 'produ' → logprob: -11.326044082641602
    7. 'construct' → logprob: -12.201044082641602
    8. 'Digit' → logprob: -12.201044082641602
    9. 'Creating' → logprob: -12.326044082641602
    10. 'def' → logprob: -13.076044082641602

Token 298: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.08703157305717468
    2. ' Digit' → logprob: -2.962031602859497
    3. 'Modulo' → logprob: -3.587031602859497
    4. 'Mod' → logprob: -6.087031364440918
    5. 'digit' → logprob: -6.587031364440918
    6. ' Mod' → logprob: -9.087031364440918
    7. ' digit' → logprob: -9.712031364440918
    8. ' instances' → logprob: -10.462031364440918
    9. ' sequences' → logprob: -11.087031364440918
    10. 'instances' → logprob: -11.087031364440918

Token 299: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00034630970912985504
    2. 'Sequences' → logprob: -8.000346183776855
    3. ' sequences' → logprob: -11.500346183776855
    4. 'sequence' → logprob: -15.250346183776855
    5. ' Sequence' → logprob: -15.500346183776855
    6. 'se' → logprob: -16.000347137451172
    7. '_sequence' → logprob: -16.625347137451172
    8. ' sequence' → logprob: -17.875347137451172
    9. 'Sequ' → logprob: -18.375347137451172
    10. 'Digit' → logprob: -18.875347137451172

Token 300: ' objects' (ID: 11736)
  Prédit: ' instances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instances' → logprob: -0.49602988362312317
    2. ' objects' → logprob: -1.3710298538208008
    3. 'instances' → logprob: -2.121029853820801
    4. 'objects' → logprob: -4.371029853820801
    5. 's' → logprob: -5.371029853820801
    6. ' s' → logprob: -11.7460298538208
    7. '_instances' → logprob: -12.6210298538208
    8. 'instance' → logprob: -13.6210298538208
    9. ' subclasses' → logprob: -14.7460298538208
    10. '.instances' → logprob: -15.2460298538208

Token 301: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2812829911708832
    2. ':' → logprob: -1.5312830209732056
    3. '):
' → logprob: -3.906282901763916
    4. '   ' → logprob: -5.281282901763916
    5. '):' → logprob: -6.156282901763916
    6. ')' → logprob: -7.406282901763916
    7. ',' → logprob: -7.781282901763916
    8. 'from' → logprob: -8.031283378601074
    9. '.' → logprob: -9.656283378601074
    10. 'def' → logprob: -9.906283378601074

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001862476347014308
    2. 'def' → logprob: -7.001862525939941
    3. '
' → logprob: -7.876862525939941
    4. '```' → logprob: -7.876862525939941
    5. '    
' → logprob: -9.126862525939941
    6. 'class' → logprob: -10.126862525939941
    7. '<|end|>' → logprob: -11.251862525939941
    8. ' def' → logprob: -11.251862525939941
    9. '"""' → logprob: -12.126862525939941
    10. ')' → logprob: -12.376862525939941

Token 303: ' Enables' (ID: 185650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007761719636619091
    2. 'def' → logprob: -5.6327619552612305
    3. '
' → logprob: -6.1327619552612305
    4. '```' → logprob: -6.5077619552612305
    5. '"""' → logprob: -8.63276195526123
    6. 'class' → logprob: -9.25776195526123
    7. '    
' → logprob: -9.50776195526123
    8. ' def' → logprob: -10.00776195526123
    9. '"""
' → logprob: -10.38276195526123
    10. ')' → logprob: -10.38276195526123

Token 304: ' future' (ID: 5277)
  Prédit: ' creation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' creation' → logprob: -0.5213824510574341
    2. 'creation' → logprob: -1.646382451057434
    3. 'creating' → logprob: -2.1463823318481445
    4. ' creating' → logprob: -3.3963823318481445
    5. 'flex' → logprob: -4.5213823318481445
    6. 'the' → logprob: -4.7713823318481445
    7. '@' → logprob: -5.1463823318481445
    8. ' the' → logprob: -5.1463823318481445
    9. ' flexible' → logprob: -5.3963823318481445
    10. 'different' → logprob: -5.3963823318481445

Token 305: ' extensions' (ID: 34511)
  Prédit: ' extens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extens' → logprob: -1.0627964735031128
    2. 'extensions' → logprob: -1.9377964735031128
    3. ' expansion' → logprob: -2.1877965927124023
    4. 'exp' → logprob: -2.3127965927124023
    5. 'extension' → logprob: -2.4377965927124023
    6. 'ext' → logprob: -2.6877965927124023
    7. ' extension' → logprob: -2.6877965927124023
    8. ' extensions' → logprob: -3.1877965927124023
    9. ' expansions' → logprob: -3.8127965927124023
    10. ' customization' → logprob: -5.437796592712402

Token 306: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9097157120704651
    2. ' to' → logprob: -1.2847156524658203
    3. ' with' → logprob: -2.2847156524658203
    4. ' for' → logprob: -2.5347156524658203
    5. ' and' → logprob: -3.0347156524658203
    6. ' by' → logprob: -4.15971565246582
    7. 'with' → logprob: -4.15971565246582
    8. ' of' → logprob: -4.53471565246582
    9. 'and' → logprob: -4.65971565246582
    10. ',' → logprob: -4.78471565246582

Token 307: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.36338767409324646
    2. ' different' → logprob: -1.4883877038955688
    3. ' creating' → logprob: -3.7383875846862793
    4. 'creating' → logprob: -4.113387584686279
    5. 'var' → logprob: -4.238387584686279
    6. ' other' → logprob: -5.113387584686279
    7. ' multiple' → logprob: -5.363387584686279
    8. ' various' → logprob: -5.863387584686279
    9. 'other' → logprob: -5.988387584686279
    10. 'multiple' → logprob: -6.113387584686279

Token 308: ' rules' (ID: 9607)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.5333643555641174
    2. 'types' → logprob: -1.6583642959594727
    3. ' sequence' → logprob: -2.5333642959594727
    4. 'mod' → logprob: -2.5333642959594727
    5. ' types' → logprob: -3.1583642959594727
    6. 'digit' → logprob: -4.533364295959473
    7. ' kinds' → logprob: -5.783364295959473
    8. ' modulo' → logprob: -6.283364295959473
    9. 'rules' → logprob: -6.533364295959473
    10. ' digit' → logprob: -6.658364295959473

Token 309: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12249518930912018
    2. '.' → logprob: -3.497495174407959
    3. ' and' → logprob: -3.497495174407959
    4. 'and' → logprob: -3.872495174407959
    5. 'class' → logprob: -4.497495174407959
    6. ',' → logprob: -5.122495174407959
    7. 'from' → logprob: -5.747495174407959
    8. ')' → logprob: -6.122495174407959
    9. ' as' → logprob: -6.497495174407959
    10. ' or' → logprob: -6.747495174407959

Token 310: ' formats' (ID: 30694)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6086596250534058
    2. 'types' → logprob: -1.6086596250534058
    3. 'digit' → logprob: -2.8586597442626953
    4. 'implement' → logprob: -2.9836597442626953
    5. 'formats' → logprob: -2.9836597442626953
    6. 'input' → logprob: -3.1086597442626953
    7. 'se' → logprob: -4.108659744262695
    8. 'represent' → logprob: -4.608659744262695
    9. ' sequence' → logprob: -5.483659744262695
    10. 'sources' → logprob: -5.733659744262695

Token 311: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1569334864616394
    2. '.' → logprob: -2.906933546066284
    3. ':' → logprob: -3.156933546066284
    4. ')' → logprob: -4.031933307647705
    5. '):
' → logprob: -4.156933307647705
    6. ':
' → logprob: -5.156933307647705
    7. ',' → logprob: -5.781933307647705
    8. '):' → logprob: -6.656933307647705
    9. '<|end|>' → logprob: -6.906933307647705
    10. '
' → logprob: -7.281933307647705

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012232051230967045
    2. '
' → logprob: -7.751223087310791
    3. 'def' → logprob: -7.876223087310791
    4. '```' → logprob: -8.00122356414795
    5. '    
' → logprob: -9.75122356414795
    6. '@' → logprob: -12.00122356414795
    7. ' def' → logprob: -12.12622356414795
    8. ')' → logprob: -12.87622356414795
    9. 'class' → logprob: -13.37622356414795
    10. 'indent' → logprob: -13.87622356414795

Token 313: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2716432511806488
    2. 'def' → logprob: -1.5216432809829712
    3. '@' → logprob: -4.146643161773682
    4. '```' → logprob: -6.521643161773682
    5. ' def' → logprob: -6.771643161773682
    6. '
' → logprob: -7.271643161773682
    7. ')' → logprob: -8.52164363861084
    8. '    
' → logprob: -9.39664363861084
    9. 'class' → logprob: -9.64664363861084
    10. '"""' → logprob: -11.27164363861084

Token 314: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.5241855382919312
    2. '   ' → logprob: -1.0241855382919312
    3. ' @' → logprob: -3.0241856575012207
    4. ' def' → logprob: -9.024185180664062
    5. 'def' → logprob: -9.024185180664062
    6. '```' → logprob: -11.024185180664062
    7. '
' → logprob: -11.649185180664062
    8. '    
' → logprob: -12.649185180664062
    9. 'staticmethod' → logprob: -12.774185180664062
    10. ' ' → logprob: -13.149185180664062

Token 315: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -6.0629870858974755e-05
    2. ' @' → logprob: -10.37506103515625
    3. 'def' → logprob: -10.50006103515625
    4. '   ' → logprob: -13.25006103515625
    5. '
' → logprob: -17.00006103515625
    6. ' def' → logprob: -17.25006103515625
    7. '@param' → logprob: -18.25006103515625
    8. '    
' → logprob: -18.50006103515625
    9. 'staticmethod' → logprob: -18.62506103515625
    10. '@
' → logprob: -19.00006103515625

Token 316: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.811348480870947e-05
    2. 'classmethod' → logprob: -10.00004768371582
    3. 'abstract' → logprob: -13.25004768371582
    4. 'static' → logprob: -14.00004768371582
    5. ' static' → logprob: -20.37504768371582
    6. 'property' → logprob: -23.87504768371582
    7. 'abc' → logprob: -23.87504768371582
    8. 'dat' → logprob: -25.37504768371582
    9. 'st' → logprob: -25.62504768371582
    10. '	static' → logprob: -25.87504768371582

Token 317: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0063259596936404705
    2. '
' → logprob: -5.506325721740723
    3. ' def' → logprob: -6.631325721740723
    4. '   ' → logprob: -7.006325721740723
    5. '(def' → logprob: -11.131325721740723
    6. '	def' → logprob: -13.131325721740723
    7. ':def' → logprob: -13.381325721740723
    8. '```' → logprob: -14.506325721740723
    9. '  ' → logprob: -14.756325721740723
    10. '(' → logprob: -14.881325721740723

Token 318: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03724163398146629
    2. '
' → logprob: -4.037241458892822
    3. ' def' → logprob: -4.662241458892822
    4. '   ' → logprob: -4.662241458892822
    5. '	def' → logprob: -11.16224193572998
    6. '(def' → logprob: -13.03724193572998
    7. '    
' → logprob: -13.66224193572998
    8. '  ' → logprob: -13.91224193572998
    9. ':def' → logprob: -14.66224193572998
    10. '```' → logprob: -15.03724193572998

Token 319: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. 'from' → logprob: -21.125001907348633
    4. '   ' → logprob: -22.000001907348633
    5. '
' → logprob: -23.875001907348633
    6. '	def' → logprob: -24.625001907348633
    7. 'class' → logprob: -24.875001907348633
    8. ':def' → logprob: -24.875001907348633
    9. '```' → logprob: -25.625001907348633
    10. '_def' → logprob: -26.000001907348633

Token 320: ' from' (ID: 591)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.0073463162407279015
    2. 'from' → logprob: -5.007346153259277
    3. ' create' → logprob: -7.382346153259277
    4. ' from' → logprob: -12.882346153259277
    5. 'make' → logprob: -13.382346153259277
    6. 'new' → logprob: -13.382346153259277
    7. 'def' → logprob: -13.507346153259277
    8. 'build' → logprob: -14.257346153259277
    9. 'get' → logprob: -14.632346153259277
    10. 'for' → logprob: -15.382346153259277

Token 321: '_string' (ID: 8609)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5718138813972473
    2. '_digits' → logprob: -1.3218138217926025
    3. '_iter' → logprob: -2.4468138217926025
    4. 'digits' → logprob: -2.5718138217926025
    5. 'iter' → logprob: -5.821814060211182
    6. 'string' → logprob: -7.696814060211182
    7. '_string' → logprob: -7.946814060211182
    8. '_raw' → logprob: -8.196813583374023
    9. 'Iterable' → logprob: -8.446813583374023
    10. 'list' → logprob: -8.821813583374023

Token 322: '(data' (ID: 4819)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.24892663955688477
    2. '(input' → logprob: -2.2489266395568848
    3. '(number' → logprob: -2.4989266395568848
    4. '(sequence' → logprob: -3.9989266395568848
    5. '(value' → logprob: -4.998926639556885
    6. '(d' → logprob: -5.748926639556885
    7. '(string' → logprob: -6.248926639556885
    8. '(seq' → logprob: -7.248926639556885
    9. '(code' → logprob: -7.498926639556885
    10. '(text' → logprob: -7.998926639556885

Token 323: ':' (ID: 25)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.03128162398934364
    2. ')' → logprob: -4.656281471252441
    3. '(s' → logprob: -5.031281471252441
    4. ')(' → logprob: -5.156281471252441
    5. ' (' → logprob: -5.281281471252441
    6. '   ' → logprob: -6.531281471252441
    7. '(cls' → logprob: -7.156281471252441
    8. ':' → logprob: -7.656281471252441
    9. '(input' → logprob: -8.156281471252441
    10. ')data' → logprob: -8.656281471252441

Token 324: ' str' (ID: 989)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6177806258201599
    2. ' s' → logprob: -1.4927806854248047
    3. ')' → logprob: -1.8677806854248047
    4. 'string' → logprob: -3.7427806854248047
    5. 'str' → logprob: -3.8677806854248047
    6. 'data' → logprob: -3.9927806854248047
    7. '   ' → logprob: -4.867780685424805
    8. ' data' → logprob: -5.492780685424805
    9. ' string' → logprob: -5.742780685424805
    10. ' str' → logprob: -6.367780685424805

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.87500286102295
    3. '')' → logprob: -14.62500286102295
    4. '   ' → logprob: -15.87500286102295
    5. ')->' → logprob: -16.875003814697266
    6. '`)' → logprob: -17.625003814697266
    7. '")' → logprob: -18.375003814697266
    8. '```' → logprob: -19.000003814697266
    9. '):' → logprob: -19.375003814697266
    10. ',' → logprob: -19.500003814697266

Token 326: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.022505372762680054
    2. ' ->' → logprob: -4.022505283355713
    3. ')' → logprob: -5.772505283355713
    4. ':' → logprob: -6.772505283355713
    5. '   ' → logprob: -10.147505760192871
    6. ')->' → logprob: -10.897505760192871
    7. '()' → logprob: -11.647505760192871
    8. '>' → logprob: -12.022505760192871
    9. '()->' → logprob: -12.147505760192871
    10. '       ' → logprob: -12.397505760192871

Token 327: ' Digit' (ID: 91174)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.11319910734891891
    2. ' Mod' → logprob: -2.23819899559021
    3. ' '' → logprob: -9.113199234008789
    4. ''' → logprob: -9.113199234008789
    5. 'Mod' → logprob: -9.363199234008789
    6. ' modulo' → logprob: -10.613199234008789
    7. '(Mod' → logprob: -10.613199234008789
    8. ' Modul' → logprob: -11.863199234008789
    9. ' List' → logprob: -12.738199234008789
    10. ''M' → logprob: -13.488199234008789

Token 328: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.8889261304575484e-06
    2. 'sequence' → logprob: -12.625003814697266
    3. 'Modulo' → logprob: -15.250003814697266
    4. '_sequence' → logprob: -16.000003814697266
    5. 'Sequences' → logprob: -16.750003814697266
    6. ' Sequence' → logprob: -16.750003814697266
    7. ' sequence' → logprob: -18.125003814697266
    8. 'Sequ' → logprob: -18.375003814697266
    9. '_SEQUENCE' → logprob: -18.500003814697266
    10. 'quence' → logprob: -19.375003814697266

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018641607835888863
    2. ':
' → logprob: -4.393641471862793
    3. '():' → logprob: -5.518641471862793
    4. '   ' → logprob: -6.768641471862793
    5. '       ' → logprob: -7.643641471862793
    6. '():
' → logprob: -8.268641471862793
    7. '):' → logprob: -9.143641471862793
    8. '(' → logprob: -10.393641471862793
    9. ':return' → logprob: -10.643641471862793
    10. ')' → logprob: -11.518641471862793

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01831885799765587
    2. 'digits' → logprob: -4.0183186531066895
    3. ' digits' → logprob: -9.018319129943848
    4. '```' → logprob: -11.268319129943848
    5. 'numbers' → logprob: -11.768319129943848
    6. 'digit' → logprob: -12.518319129943848
    7. 'd' → logprob: -12.643319129943848
    8. 'data' → logprob: -12.768319129943848
    9. 'tokens' → logprob: -12.893319129943848
    10. 'if' → logprob: -13.018319129943848

Token 331: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.0003448792558629066
    2. '       ' → logprob: -8.250345230102539
    3. ' digits' → logprob: -9.500345230102539
    4. 'return' → logprob: -11.750345230102539
    5. 'numbers' → logprob: -15.500345230102539
    6. 'digit' → logprob: -15.625345230102539
    7. '```' → logprob: -16.00034523010254
    8. 'dig' → logprob: -16.37534523010254
    9. 'data' → logprob: -16.50034523010254
    10. 'chars' → logprob: -16.50034523010254

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868744373321533
    2. '=' → logprob: -1.1368744373321533
    3. '=[' → logprob: -13.011874198913574
    4. ' =[' → logprob: -14.636874198913574
    5. '=[]' → logprob: -15.136874198913574
    6. '   ' → logprob: -15.886874198913574
    7. '=int' → logprob: -16.38687515258789
    8. '[' → logprob: -16.88687515258789
    9. ':' → logprob: -17.13687515258789
    10. ' =
' → logprob: -17.38687515258789

Token 333: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6646934151649475
    2. ' [' → logprob: -1.4146933555603027
    3. '[List' → logprob: -2.1646933555603027
    4. '[' → logprob: -2.1646933555603027
    5. '[int' → logprob: -4.414693355560303
    6. '[data' → logprob: -7.914693355560303
    7. '[str' → logprob: -8.664693832397461
    8. '[class' → logprob: -9.164693832397461
    9. '[string' → logprob: -9.664693832397461
    10. '[Int' → logprob: -9.789693832397461

Token 334: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.896309739408025e-07
    2. '(int' → logprob: -14.375000953674316
    3. '[int' → logprob: -16.75
    4. ' int' → logprob: -17.125
    5. '```' → logprob: -18.5
    6. 'ord' → logprob: -18.875
    7. '   ' → logprob: -19.25
    8. ':int' → logprob: -20.0
    9. '	int' → logprob: -20.0
    10. '=int' → logprob: -20.25

Token 335: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.05692379176616669
    2. 'ch' → logprob: -3.3069238662719727
    3. '(c' → logprob: -4.806923866271973
    4. '(char' → logprob: -5.056923866271973
    5. 'char' → logprob: -5.556923866271973
    6. 'c' → logprob: -8.306923866271973
    7. '(d' → logprob: -9.806923866271973
    8. ' ch' → logprob: -12.556923866271973
    9. 'd' → logprob: -14.431923866271973
    10. '	ch' → logprob: -15.306923866271973

Token 336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010449681576574221
    2. '(ch' → logprob: -9.250104904174805
    3. 'ch' → logprob: -12.125104904174805
    4. ' )' → logprob: -13.375104904174805
    5. ' ch' → logprob: -14.750104904174805
    6. '[ch' → logprob: -15.250104904174805
    7. ')
' → logprob: -15.375104904174805
    8. 'for' → logprob: -15.375104904174805
    9. '')' → logprob: -16.500104904174805
    10. '   ' → logprob: -16.625104904174805

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5034970641136169
    2. ')' → logprob: -1.5034971237182617
    3. ' for' → logprob: -1.7534971237182617
    4. 'ch' → logprob: -10.253497123718262
    5. ' ch' → logprob: -11.128497123718262
    6. ']' → logprob: -11.503497123718262
    7. ' )' → logprob: -12.753497123718262
    8. '```' → logprob: -13.503497123718262
    9. '')' → logprob: -14.128497123718262
    10. '   ' → logprob: -14.503497123718262

Token 338: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.014191711321473122
    2. ' ch' → logprob: -4.264191627502441
    3. 'data' → logprob: -10.639191627502441
    4. ' data' → logprob: -12.389191627502441
    5. '	ch' → logprob: -16.889192581176758
    6. '(ch' → logprob: -17.514192581176758
    7. ' ' → logprob: -18.639192581176758
    8. '[ch' → logprob: -18.764192581176758
    9. '_ch' → logprob: -18.889192581176758
    10. '.ch' → logprob: -20.264192581176758

Token 339: ' in' (ID: 306)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.24687905609607697
    2. ' in' → logprob: -1.9968791007995605
    3. ' ch' → logprob: -3.1218791007995605
    4. 'in' → logprob: -3.2468791007995605
    5. 'data' → logprob: -10.746878623962402
    6. '_ch' → logprob: -12.121878623962402
    7. '[ch' → logprob: -12.746878623962402
    8. '(ch' → logprob: -13.246878623962402
    9. ',ch' → logprob: -13.496878623962402
    10. ' data' → logprob: -13.621878623962402

Token 340: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0046227299608290195
    2. ' data' → logprob: -5.379622936248779
    3. 'ch' → logprob: -13.379622459411621
    4. 'str' → logprob: -14.879622459411621
    5. ' ' → logprob: -15.379622459411621
    6. '   ' → logprob: -16.004623413085938
    7. '	data' → logprob: -17.004623413085938
    8. '(data' → logprob: -17.692123413085938
    9. '
' → logprob: -17.879623413085938
    10. 'filter' → logprob: -17.942123413085938

Token 341: '.strip' (ID: 40613)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3174801766872406
    2. ' if' → logprob: -1.317480206489563
    3. 'if' → logprob: -6.067480087280273
    4. '.strip' → logprob: -6.317480087280273
    5. ' ]' → logprob: -9.567480087280273
    6. 'strip' → logprob: -11.192480087280273
    7. ')' → logprob: -13.567480087280273
    8. '.rstrip' → logprob: -13.817480087280273
    9. '   ' → logprob: -14.692480087280273
    10. ' ' → logprob: -15.317480087280273

Token 342: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.038045622408390045
    2. '()' → logprob: -3.288045644760132
    3. ' ()' → logprob: -13.538045883178711
    4. ']' → logprob: -13.788045883178711
    5. '()]
' → logprob: -14.163045883178711
    6. '())' → logprob: -14.538045883178711
    7. '()][' → logprob: -15.413045883178711
    8. '(' → logprob: -16.16304588317871
    9. '().' → logprob: -16.41304588317871
    10. 'if' → logprob: -16.53804588317871

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010742536978796124
    2. 'return' → logprob: -7.001074314117432
    3. ' return' → logprob: -8.751073837280273
    4. '   ' → logprob: -13.001073837280273
    5. '
' → logprob: -14.251073837280273
    6. '	' → logprob: -14.376073837280273
    7. '	return' → logprob: -15.001073837280273
    8. '        
' → logprob: -15.626073837280273
    9. '      ' → logprob: -15.626073837280273
    10. '           ' → logprob: -16.001073837280273

Token 344: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.107425062713446e-06
    2. ' return' → logprob: -12.250006675720215
    3. '       ' → logprob: -13.000006675720215
    4. '   ' → logprob: -18.75000762939453
    5. '	return' → logprob: -20.00000762939453
    6. '        
' → logprob: -22.25000762939453
    7. '```' → logprob: -22.37500762939453
    8. '
' → logprob: -22.75000762939453
    9. ':return' → logprob: -24.50000762939453
    10. ' ' → logprob: -24.62500762939453

Token 345: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.26989051699638367
    2. ' all' → logprob: -1.644890546798706
    3. 'len' → logprob: -3.894890546798706
    4. ' digits' → logprob: -4.269890308380127
    5. ' True' → logprob: -5.769890308380127
    6. 'all' → logprob: -5.894890308380127
    7. 'digits' → logprob: -6.519890308380127
    8. ' data' → logprob: -7.019890308380127
    9. ' not' → logprob: -7.394890308380127
    10. ' isinstance' → logprob: -8.894890785217285

Token 346: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009605350787751377
    2. 'digits' → logprob: -7.500960350036621
    3. '(data' → logprob: -7.875960350036621
    4. '(' → logprob: -11.375960350036621
    5. ' digits' → logprob: -12.125960350036621
    6. ' (' → logprob: -12.625960350036621
    7. ')' → logprob: -13.250960350036621
    8. '==' → logprob: -13.375960350036621
    9. '>' → logprob: -13.500960350036621
    10. 'data' → logprob: -13.875960350036621

Token 347: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.06450163573026657
    2. 'ata' → logprob: -2.8145015239715576
    3. '>' → logprob: -6.439501762390137
    4. 'digits' → logprob: -7.689501762390137
    5. 'data' → logprob: -9.064501762390137
    6. '(data' → logprob: -9.064501762390137
    7. 'ig' → logprob: -9.314501762390137
    8. '(' → logprob: -10.314501762390137
    9. 'igts' → logprob: -10.814501762390137
    10. '(d' → logprob: -11.189501762390137

Token 348: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3199738562107086
    2. '==' → logprob: -1.4449738264083862
    3. ')' → logprob: -4.444973945617676
    4. ' >=' → logprob: -4.444973945617676
    5. ' <=' → logprob: -5.194973945617676
    6. '>=' → logprob: -5.819973945617676
    7. '>' → logprob: -6.444973945617676
    8. ' <' → logprob: -6.444973945617676
    9. ' >' → logprob: -6.694973945617676
    10. '<=' → logprob: -6.819973945617676

Token 349: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3971092998981476
    2. ' ==' → logprob: -1.2721092700958252
    3. '>' → logprob: -3.897109270095825
    4. '<' → logprob: -4.772109508514404
    5. '<=' → logprob: -5.522109508514404
    6. ' >' → logprob: -5.647109508514404
    7. '>=' → logprob: -5.647109508514404
    8. ' <' → logprob: -5.772109508514404
    9. ' <=' → logprob: -6.022109508514404
    10. ' >=' → logprob: -6.522109508514404

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012379909865558147
    2. ' ' → logprob: -4.512380123138428
    3. '1' → logprob: -7.387380123138428
    4. '10' → logprob: -7.512380123138428
    5. 'len' → logprob: -8.88737964630127
    6. '9' → logprob: -11.88737964630127
    7. ' len' → logprob: -11.88737964630127
    8. '```' → logprob: -12.26237964630127
    9. '   ' → logprob: -12.51237964630127
    10. '2' → logprob: -13.76237964630127

Token 351: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02201162837445736
    2. '1' → logprob: -3.8970115184783936
    3. '10' → logprob: -7.522011756896973
    4. ' ' → logprob: -7.647011756896973
    5. 'len' → logprob: -8.022011756896973
    6. '9' → logprob: -9.772011756896973
    7. '2' → logprob: -10.147011756896973
    8. '```' → logprob: -12.022011756896973
    9. '11' → logprob: -13.147011756896973
    10. ' len' → logprob: -13.272011756896973

Token 352: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10054512321949005
    2. ':' → logprob: -2.3505451679229736
    3. ' or' → logprob: -8.975544929504395
    4. ':return' → logprob: -9.100544929504395
    5. ' and' → logprob: -9.725544929504395
    6. ' :
' → logprob: -11.225544929504395
    7. '):
' → logprob: -11.725544929504395
    8. '       ' → logprob: -11.725544929504395
    9. ':
' → logprob: -12.350544929504395
    10. ' :' → logprob: -13.100544929504395

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04860677942633629
    2. 'raise' → logprob: -3.4236068725585938
    3. ' raise' → logprob: -4.673606872558594
    4. ':
' → logprob: -6.048606872558594
    5. '       ' → logprob: -6.798606872558594
    6. ':' → logprob: -6.798606872558594
    7. 'return' → logprob: -7.548606872558594
    8. ' return' → logprob: -9.173606872558594
    9. ':return' → logprob: -9.548606872558594
    10. '          ' → logprob: -9.923606872558594

Token 354: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.27020519971847534
    2. ' raise' → logprob: -1.5202052593231201
    3. '           ' → logprob: -4.020205020904541
    4. '	raise' → logprob: -9.2702054977417
    5. '       ' → logprob: -10.6452054977417
    6. '               ' → logprob: -11.0202054977417
    7. '            ' → logprob: -11.6452054977417
    8. '_raise' → logprob: -12.6452054977417
    9. '
' → logprob: -12.7702054977417
    10. '        ' → logprob: -13.0202054977417

Token 355: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.3132648468017578
    2. 'Value' → logprob: -1.3132648468017578
    3. '	Value' → logprob: -13.563264846801758
    4. '_value' → logprob: -14.063264846801758
    5. '(Value' → logprob: -15.063264846801758
    6. '_Value' → logprob: -15.313264846801758
    7. 'value' → logprob: -15.313264846801758
    8. '```' → logprob: -16.438264846801758
    9. '<Value' → logprob: -16.813264846801758
    10. ' ' → logprob: -16.938264846801758

Token 356: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.06381126493215561
    2. 'rror' → logprob: -2.8138113021850586
    3. 'ror' → logprob: -6.313811302185059
    4. 'r' → logprob: -11.063811302185059
    5. 'Value' → logprob: -11.188811302185059
    6. 'or' → logprob: -14.688811302185059
    7. 'error' → logprob: -15.188811302185059
    8. 'ro' → logprob: -15.438811302185059
    9. 'SError' → logprob: -15.938811302185059
    10. 'rr' → logprob: -16.313810348510742

Token 357: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.250006675720215
    3. '(f' → logprob: -13.125006675720215
    4. '('' → logprob: -15.250006675720215
    5. '("'' → logprob: -19.12500762939453
    6. '(
' → logprob: -19.87500762939453
    7. '"' → logprob: -22.50000762939453
    8. 'f' → logprob: -23.50000762939453
    9. ' ("' → logprob: -24.00000762939453
    10. '(

' → logprob: -24.25000762939453

Token 358: 'Each' (ID: 7919)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0023316475562751293
    2. '"' → logprob: -7.002331733703613
    3. 'Data' → logprob: -7.377331733703613
    4. 'Initial' → logprob: -8.127331733703613
    5. 'Expected' → logprob: -8.877331733703613
    6. 'Digit' → logprob: -9.377331733703613
    7. 'Exactly' → logprob: -9.502331733703613
    8. 'The' → logprob: -9.627331733703613
    9. ' Input' → logprob: -10.127331733703613
    10. 'data' → logprob: -10.627331733703613

Token 359: ' input' (ID: 3422)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.5054563283920288
    2. ' digit' → logprob: -1.8804563283920288
    3. ' input' → logprob: -2.6304564476013184
    4. 'input' → logprob: -3.0054564476013184
    5. 'row' → logprob: -3.2554564476013184
    6. ' sequence' → logprob: -3.8804564476013184
    7. 'Digit' → logprob: -4.130456447601318
    8. 'sequence' → logprob: -4.380456447601318
    9. ' data' → logprob: -4.755456447601318
    10. ' row' → logprob: -4.880456447601318

Token 360: ' line' (ID: 2543)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.8364734649658203
    2. ' must' → logprob: -1.8364734649658203
    3. ' string' → logprob: -1.9614734649658203
    4. 'line' → logprob: -2.8364734649658203
    5. ' line' → logprob: -2.8364734649658203
    6. 'row' → logprob: -3.0864734649658203
    7. 'must' → logprob: -3.0864734649658203
    8. ' sequence' → logprob: -3.5864734649658203
    9. 'sequence' → logprob: -4.08647346496582
    10. ' row' → logprob: -4.58647346496582

Token 361: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0161033496260643
    2. 'must' → logprob: -4.141103267669678
    3. ' should' → logprob: -9.766103744506836
    4. ')' → logprob: -13.141103744506836
    5. ' has' → logprob: -13.391103744506836
    6. 'should' → logprob: -13.516103744506836
    7. ' requires' → logprob: -13.641103744506836
    8. ' ' → logprob: -14.578603744506836
    9. '   ' → logprob: -14.891103744506836
    10. ' exactly' → logprob: -15.266103744506836

Token 362: ' contain' (ID: 10232)
  Prédit: ' contain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.23164114356040955
    2. 'contain' → logprob: -1.856641173362732
    3. ' be' → logprob: -3.8566410541534424
    4. ' have' → logprob: -4.3566412925720215
    5. 'have' → logprob: -4.7316412925720215
    6. 'be' → logprob: -5.6066412925720215
    7. ' consist' → logprob: -5.6066412925720215
    8. 'cons' → logprob: -8.231640815734863
    9. ' represent' → logprob: -10.106640815734863
    10. ' ' → logprob: -10.106640815734863

Token 363: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.2521621882915497
    2. 'exact' → logprob: -1.502162218093872
    3. '10' → logprob: -8.877161979675293
    4. ' ' → logprob: -9.377161979675293
    5. ' exact' → logprob: -11.877161979675293
    6. 'Exactly' → logprob: -13.502161979675293
    7. ' exactamente' → logprob: -15.877161979675293
    8. ' precisely' → logprob: -16.00216293334961
    9. ' Exactly' → logprob: -16.12716293334961
    10. 'a' → logprob: -16.75216293334961

Token 364: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018172068521380424
    2. ' ' → logprob: -4.018172264099121
    3. ' exactly' → logprob: -10.893172264099121
    4. 'exact' → logprob: -12.643172264099121
    5. ' ten' → logprob: -15.268172264099121
    6. 'Exactly' → logprob: -18.268171310424805
    7. 'ten' → logprob: -18.518171310424805
    8. '```' → logprob: -18.768171310424805
    9. '1' → logprob: -19.018171310424805
    10. '100' → logprob: -19.768171310424805

Token 365: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'exact' → logprob: -13.750003814697266
    4. 'ten' → logprob: -16.750003814697266
    5. ' exactly' → logprob: -17.625003814697266
    6. '```' → logprob: -18.375003814697266
    7. ' ten' → logprob: -18.750003814697266
    8. '１０' → logprob: -20.625003814697266
    9. 'Exactly' → logprob: -21.000003814697266
    10. 'digits' → logprob: -21.000003814697266

Token 366: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.003184363478794694
    2. 'digits' → logprob: -5.7531843185424805
    3. ' characters' → logprob: -12.12818431854248
    4. 'digit' → logprob: -15.37818431854248
    5. '0' → logprob: -15.50318431854248
    6. '_digits' → logprob: -15.75318431854248
    7. '-digit' → logprob: -15.87818431854248
    8. '
' → logprob: -16.003185272216797
    9. 'Digits' → logprob: -16.128185272216797
    10. ' digit' → logprob: -16.253185272216797

Token 367: '.")
' (ID: 27834)
  Prédit: '.")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.18197250366210938
    2. '")
' → logprob: -1.9319725036621094
    3. '.")' → logprob: -4.431972503662109
    4. '")' → logprob: -4.681972503662109
    5. ')")
' → logprob: -9.30697250366211
    6. '.")
' → logprob: -9.30697250366211
    7. ',' → logprob: -9.55697250366211
    8. '       ' → logprob: -10.18197250366211
    9. '")
' → logprob: -10.93197250366211
    10. ')' → logprob: -11.68197250366211

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020742444321513176
    2. 'return' → logprob: -6.252074241638184
    3. ' return' → logprob: -8.877074241638184
    4. '   ' → logprob: -12.127074241638184
    5. '
' → logprob: -15.502074241638184
    6. '      ' → logprob: -15.877074241638184
    7. '           ' → logprob: -16.0020751953125
    8. '        
' → logprob: -16.8770751953125
    9. '```' → logprob: -17.2520751953125
    10. '	return' → logprob: -17.7520751953125

Token 369: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009699412039481103
    2. '       ' → logprob: -7.000969886779785
    3. ' return' → logprob: -9.750969886779785
    4. '   ' → logprob: -15.375969886779785
    5. '	return' → logprob: -18.7509708404541
    6. '```' → logprob: -20.3759708404541
    7. '
' → logprob: -20.8759708404541
    8. ' ' → logprob: -21.3759708404541
    9. '        
' → logprob: -22.5009708404541
    10. '{return' → logprob: -22.6259708404541

Token 370: ' Mod' (ID: 7191)
  Prédit: 'Modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modulo' → logprob: -0.0005537479883059859
    2. ' Mod' → logprob: -7.500553607940674
    3. ' Modul' → logprob: -15.250554084777832
    4. 'Mod' → logprob: -15.625554084777832
    5. ' modulo' → logprob: -15.750554084777832
    6. ' M' → logprob: -15.875554084777832
    7. 'Module' → logprob: -16.250553131103516
    8. ' Module' → logprob: -17.750553131103516
    9. '   ' → logprob: -17.875553131103516
    10. '(Mod' → logprob: -18.625553131103516

Token 371: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -6.456358823925257e-05
    2. 'ule' → logprob: -9.875064849853516
    3. 'olo' → logprob: -12.000064849853516
    4. 'Modulo' → logprob: -12.375064849853516
    5. 'o' → logprob: -12.875064849853516
    6. ' modulo' → logprob: -17.250064849853516
    7. 'ulos' → logprob: -18.375064849853516
    8. 'ules' → logprob: -18.750064849853516
    9. 'culo' → logprob: -19.500064849853516
    10. 'oto' → logprob: -19.500064849853516

Token 372: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -9.088346359931165e-07
    2. ' Digit' → logprob: -14.750000953674316
    3. 'digit' → logprob: -15.625000953674316
    4. '_digit' → logprob: -15.875000953674316
    5. 'Digits' → logprob: -17.125
    6. 'Modulo' → logprob: -17.125
    7. '-digit' → logprob: -18.125
    8. '
' → logprob: -18.625
    9. 'Digital' → logprob: -18.75
    10. ' digit' → logprob: -19.25

Token 373: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00010187433508690447
    2. 'Digit' → logprob: -9.375102043151855
    3. 'sequence' → logprob: -11.125102043151855
    4. 'quence' → logprob: -13.750102043151855
    5. 'Sequ' → logprob: -15.500102043151855
    6. 'Seq' → logprob: -15.625102043151855
    7. 'e' → logprob: -15.625102043151855
    8. 'u' → logprob: -16.00010108947754
    9. 'Sequences' → logprob: -16.12510108947754
    10. 'o' → logprob: -16.25010108947754

Token 374: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. 'digits' → logprob: -16.500001907348633
    4. 'd' → logprob: -17.250001907348633
    5. ' (' → logprob: -17.875001907348633
    6. ' digits' → logprob: -19.500001907348633
    7. '(data' → logprob: -19.750001907348633
    8. '(
' → logprob: -20.125001907348633
    9. '((' → logprob: -21.000001907348633
    10. '([' → logprob: -21.500001907348633

Token 375: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -2.8087270038668066e-05
    2. 'its' → logprob: -11.000027656555176
    3. 'ig' → logprob: -11.750027656555176
    4. 'digits' → logprob: -13.125027656555176
    5. 'igts' → logprob: -13.875027656555176
    6. 'igit' → logprob: -15.125027656555176
    7. 'g' → logprob: -15.750027656555176
    8. 'i' → logprob: -16.125028610229492
    9. 'd' → logprob: -18.375028610229492
    10. '{' → logprob: -18.875028610229492

Token 376: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')d' → logprob: -16.375001907348633
    5. ')data' → logprob: -16.750001907348633
    6. ')return' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '<|end|>' → logprob: -18.000001907348633
    9. '       ' → logprob: -18.125001907348633
    10. ')

' → logprob: -18.500001907348633

Token 377: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04242372885346413
    2. 'if' → logprob: -3.417423725128174
    3. '#' → logprob: -5.292423725128174
    4. 'import' → logprob: -6.542423725128174
    5. 'class' → logprob: -6.542423725128174
    6. 'for' → logprob: -8.417424201965332
    7. 'from' → logprob: -8.542424201965332
    8. 'data' → logprob: -8.542424201965332
    9. '```' → logprob: -8.792424201965332
    10. '<|end|>' → logprob: -10.917424201965332

Token 378: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.12195558100938797
    2. ' Digit' → logprob: -2.746955633163452
    3. 'Sequence' → logprob: -4.621955394744873
    4. 'Input' → logprob: -4.746955394744873
    5. 'Solution' → logprob: -4.746955394744873
    6. 'Triangle' → logprob: -5.871955394744873
    7. 'Puzzle' → logprob: -6.746955394744873
    8. 'Digital' → logprob: -7.121955394744873
    9. 'Modulo' → logprob: -7.121955394744873
    10. 'Solver' → logprob: -7.246955394744873

Token 379: 'Sequence' (ID: 17333)
  Prédit: 'Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.8150749802589417
    2. 'Sequence' → logprob: -0.9400749802589417
    3. 'P' → logprob: -3.190074920654297
    4. 'Pair' → logprob: -3.440074920654297
    5. 'Grid' → logprob: -4.315074920654297
    6. 'Processor' → logprob: -4.565074920654297
    7. 'Sequences' → logprob: -4.565074920654297
    8. 'Puzzle' → logprob: -5.065074920654297
    9. 'Square' → logprob: -5.190074920654297
    10. 'Tri' → logprob: -5.815074920654297

Token 380: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.8373301029205322
    2. '(' → logprob: -1.4623301029205322
    3. 'Builder' → logprob: -2.3373301029205322
    4. 'Iterator' → logprob: -2.8373301029205322
    5. 'Generator' → logprob: -3.2123301029205322
    6. 'Printer' → logprob: -3.8373301029205322
    7. 'Runner' → logprob: -4.212329864501953
    8. 'Factory' → logprob: -4.337329864501953
    9. 'Analyzer' → logprob: -4.837329864501953
    10. 'Solver' → logprob: -4.837329864501953

Token 381: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0550072006881237
    2. ':
' → logprob: -2.930007219314575
    3. '<|end|>' → logprob: -9.555006980895996
    4. ':

' → logprob: -11.055006980895996
    5. ':def' → logprob: -11.430006980895996
    6. '(' → logprob: -12.180006980895996
    7. '(object' → logprob: -12.555006980895996
    8. '<|end|>' → logprob: -12.805006980895996
    9. ' :' → logprob: -13.305006980895996
    10. 'def' → logprob: -13.555006980895996

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009155054576694965
    2. 'class' → logprob: -7.50091552734375
    3. '    
' → logprob: -9.25091552734375
    4. '
' → logprob: -9.37591552734375
    5. '<|end|>' → logprob: -9.75091552734375
    6. '```' → logprob: -10.62591552734375
    7. ' ' → logprob: -10.75091552734375
    8. 'def' → logprob: -10.87591552734375
    9. ' class' → logprob: -11.25091552734375
    10. ':
' → logprob: -11.37591552734375

Token 383: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4187415540218353
    2. ' def' → logprob: -1.6687415838241577
    3. 'def' → logprob: -1.9187415838241577
    4. '"""
' (adapté à ' """
') → logprob: -5.918741703033447
    5. '
' → logprob: -6.168741703033447
    6. 'class' → logprob: -6.543741703033447
    7. ' """
' → logprob: -7.793741703033447
    8. '    
' → logprob: -9.918741226196289
    9. '"""' → logprob: -10.418741226196289
    10. ' ' → logprob: -10.793741226196289

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24865809082984924
    2. '"""
' → logprob: -1.7486580610275269
    3. 'class' → logprob: -3.7486581802368164
    4. 'def' → logprob: -4.248658180236816
    5. ' """
' → logprob: -5.248658180236816
    6. ' def' → logprob: -5.873658180236816
    7. '"""' → logprob: -8.748658180236816
    8. ' ' → logprob: -10.373658180236816
    9. ' class' → logprob: -11.373658180236816
    10. '  ' → logprob: -11.748658180236816

Token 385: ' Processes' (ID: 116284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5521377921104431
    2. ' def' → logprob: -1.552137851715088
    3. 'class' → logprob: -1.552137851715088
    4. '"""
' → logprob: -8.42713737487793
    5. ' """
' → logprob: -8.42713737487793
    6. '   ' → logprob: -8.80213737487793
    7. ' class' → logprob: -9.42713737487793
    8. '@' → logprob: -11.67713737487793
    9. '
' → logprob: -12.05213737487793
    10. '"""' → logprob: -12.80213737487793

Token 386: ' multiple' (ID: 7598)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.3700045049190521
    2. 'digit' → logprob: -1.8700045347213745
    3. ' multiple' → logprob: -3.495004415512085
    4. 'Digit' → logprob: -3.620004415512085
    5. ' lines' → logprob: -3.995004415512085
    6. '   ' → logprob: -4.245004653930664
    7. ' digit' → logprob: -4.245004653930664
    8. 'se' → logprob: -4.745004653930664
    9. 'multiple' → logprob: -4.995004653930664
    10. ':
' → logprob: -5.245004653930664

Token 387: ' digit' (ID: 19181)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.4484248757362366
    2. ' Digit' → logprob: -1.5734248161315918
    3. 'digit' → logprob: -2.823424816131592
    4. ' sequences' → logprob: -3.073424816131592
    5. ' lines' → logprob: -3.823424816131592
    6. ' digit' → logprob: -4.198424816131592
    7. 'lines' → logprob: -4.698424816131592
    8. '-digit' → logprob: -6.948424816131592
    9. '_digit' → logprob: -6.948424816131592
    10. 'se' → logprob: -9.32342529296875

Token 388: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.004276415333151817
    2. 'se' → logprob: -5.879276275634766
    3. '_sequences' → logprob: -6.879276275634766
    4. '_sequence' → logprob: -8.879276275634766
    5. 'sequence' → logprob: -8.879276275634766
    6. ' lines' → logprob: -9.879276275634766
    7. ' sequence' → logprob: -10.004276275634766
    8. 'Sequence' → logprob: -10.004276275634766
    9. 'Sequences' → logprob: -11.129276275634766
    10. 's' → logprob: -13.129276275634766

Token 389: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14008720219135284
    2. '   ' → logprob: -2.765087127685547
    3. ':' → logprob: -3.390087127685547
    4. ' and' → logprob: -4.515087127685547
    5. ' to' → logprob: -4.765087127685547
    6. 'from' → logprob: -5.015087127685547
    7. ' for' → logprob: -6.140087127685547
    8. 'and' → logprob: -6.515087127685547
    9. ',' → logprob: -6.515087127685547
    10. '):
' → logprob: -7.390087127685547

Token 390: ' generating' (ID: 36766)
  Prédit: 'comput'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comput' → logprob: -0.48420751094818115
    2. 'building' → logprob: -3.1092076301574707
    3. 'build' → logprob: -3.2342076301574707
    4. ' building' → logprob: -3.2342076301574707
    5. 'aggreg' → logprob: -3.6092076301574707
    6. '   ' → logprob: -3.7342076301574707
    7. ' builds' → logprob: -3.7342076301574707
    8. ' computing' → logprob: -3.8592076301574707
    9. 'calcul' → logprob: -4.109207630157471
    10. 'redu' → logprob: -4.234207630157471

Token 391: ' the' (ID: 290)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -1.1294665336608887
    2. ' the' → logprob: -1.2544665336608887
    3. ' final' → logprob: -2.0044665336608887
    4. 'final' → logprob: -2.8794665336608887
    5. 'lower' → logprob: -2.8794665336608887
    6. ' lower' → logprob: -3.1294665336608887
    7. 'the' → logprob: -3.2544665336608887
    8. 'their' → logprob: -3.5044665336608887
    9. ' all' → logprob: -5.129466533660889
    10. ' and' → logprob: -5.129466533660889

Token 392: ' bottom' (ID: 8725)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.18070587515830994
    2. ' final' → logprob: -2.4307057857513428
    3. 'last' → logprob: -3.0557057857513428
    4. 'lower' → logprob: -4.430706024169922
    5. 'next' → logprob: -5.055706024169922
    6. ' last' → logprob: -5.430706024169922
    7. 'result' → logprob: -5.805706024169922
    8. 'results' → logprob: -6.555706024169922
    9. 'lowest' → logprob: -7.055706024169922
    10. ' next' → logprob: -7.430706024169922

Token 393: '-most' (ID: 141346)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.7450255751609802
    2. ' row' → logprob: -1.245025634765625
    3. 'rows' → logprob: -1.995025634765625
    4. 'row' → logprob: -2.370025634765625
    5. '_rows' → logprob: -6.370025634765625
    6. 'line' → logprob: -6.370025634765625
    7. '_row' → logprob: -6.870025634765625
    8. '   ' → logprob: -7.245025634765625
    9. 'right' → logprob: -7.245025634765625
    10. ' line' → logprob: -8.245025634765625

Token 394: ' digit' (ID: 19181)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.811279833316803
    2. 'digit' → logprob: -1.4362797737121582
    3. ' rows' → logprob: -2.186279773712158
    4. 'row' → logprob: -2.436279773712158
    5. ' digit' → logprob: -2.561279773712158
    6. 'rows' → logprob: -4.061279773712158
    7. ' digits' → logprob: -5.186279773712158
    8. 'digits' → logprob: -5.561279773712158
    9. 'Digit' → logprob: -5.811279773712158
    10. '_digit' → logprob: -6.186279773712158

Token 395: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16079258918762207
    2. ' of' → logprob: -2.785792589187622
    3. 'from' → logprob: -3.035792589187622
    4. ' from' → logprob: -4.160792350769043
    5. ' for' → logprob: -4.285792350769043
    6. 'of' → logprob: -6.160792350769043
    7. 'for' → logprob: -6.660792350769043
    8. ',' → logprob: -6.660792350769043
    9. ' and' → logprob: -6.910792350769043
    10. ' row' → logprob: -7.160792350769043

Token 396: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.012297840788960457
    2. ' each' → logprob: -4.512297630310059
    3. ' given' → logprob: -7.262297630310059
    4. 'given' → logprob: -7.762297630310059
    5. 'all' → logprob: -9.887297630310059
    6. 'a' → logprob: -10.137297630310059
    7. 'the' → logprob: -10.762297630310059
    8. 'input' → logprob: -12.762297630310059
    9. 'provided' → logprob: -12.887297630310059
    10. 'final' → logprob: -13.387297630310059

Token 397: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12288334220647812
    2. 'from' → logprob: -3.2478833198547363
    3. ' and' → logprob: -3.8728833198547363
    4. ' from' → logprob: -4.372883319854736
    5. '
' → logprob: -4.622883319854736
    6. ' row' → logprob: -5.247883319854736
    7. '.
' → logprob: -5.372883319854736
    8. ',' → logprob: -5.747883319854736
    9. ' sequence' → logprob: -5.747883319854736
    10. ' line' → logprob: -5.872883319854736

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.7146746763028204e-05
    2. '
' → logprob: -10.50003719329834
    3. 'class' → logprob: -12.25003719329834
    4. '    
' → logprob: -12.87503719329834
    5. 'def' → logprob: -14.00003719329834
    6. '```' → logprob: -14.37503719329834
    7. ' def' → logprob: -14.62503719329834
    8. ')' → logprob: -16.125036239624023
    9. ' class' → logprob: -16.250036239624023
    10. 'from' → logprob: -17.750036239624023

Token 399: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005630589555948973
    2. '
' → logprob: -6.2556304931640625
    3. 'def' → logprob: -6.2556304931640625
    4. ' def' → logprob: -6.5056304931640625
    5. '    
' → logprob: -9.005630493164062
    6. '```' → logprob: -9.380630493164062
    7. 'class' → logprob: -9.630630493164062
    8. '    ' → logprob: -13.130630493164062
    9. ')' → logprob: -13.505630493164062
    10. ' ' → logprob: -13.880630493164062

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022571911104023457
    2. 'def' → logprob: -6.627257347106934
    3. ' def' → logprob: -7.002257347106934
    4. '```' → logprob: -11.002257347106934
    5. '
' → logprob: -13.252257347106934
    6. '    
' → logprob: -13.502257347106934
    7. 'class' → logprob: -13.877257347106934
    8. '	def' → logprob: -17.002256393432617
    9. '   ' → logprob: -17.377256393432617
    10. 'indent' → logprob: -17.502256393432617

Token 401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14414682984352112
    2. ' def' → logprob: -2.1441469192504883
    3. '@' → logprob: -4.144146919250488
    4. '   ' → logprob: -6.894146919250488
    5. ' @' → logprob: -8.519146919250488
    6. '
' → logprob: -14.269146919250488
    7. ' ' → logprob: -16.019145965576172
    8. '	def' → logprob: -16.269145965576172
    9. '@property' → logprob: -16.394145965576172
    10. '@param' → logprob: -17.269145965576172

Token 402: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8114745616912842
    2. 'staticmethod' → logprob: -0.9364745616912842
    3. ' def' → logprob: -2.686474561691284
    4. 'init' → logprob: -3.061474561691284
    5. ' __' → logprob: -3.686474561691284
    6. '__' → logprob: -3.811474561691284
    7. 'classmethod' → logprob: -6.561474800109863
    8. 'static' → logprob: -9.686474800109863
    9. ' init' → logprob: -10.436474800109863
    10. '_init' → logprob: -10.686474800109863

Token 403: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0802738870552275e-05
    2. 'process' → logprob: -11.62501049041748
    3. 'iter' → logprob: -14.12501049041748
    4. 'class' → logprob: -14.75001049041748
    5. '```' → logprob: -15.12501049041748
    6. ' init' → logprob: -16.125011444091797
    7. 'nit' → logprob: -16.625011444091797
    8. '(init' → logprob: -16.750011444091797
    9. 'staticmethod' → logprob: -17.000011444091797
    10. ':init' → logprob: -17.375011444091797

Token 404: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012876295484602451
    2. '(self' → logprob: -4.387876510620117
    3. '__(
' → logprob: -8.012876510620117
    4. '__' → logprob: -10.762876510620117
    5. 'self' → logprob: -12.012876510620117
    6. '(' → logprob: -12.137876510620117
    7. ' (' → logprob: -13.512876510620117
    8. '```' → logprob: -14.637876510620117
    9. '
' → logprob: -15.012876510620117
    10. '_(' → logprob: -15.387876510620117

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0683535037969705e-05
    2. ' self' → logprob: -12.25001049041748
    3. '       ' → logprob: -12.62501049041748
    4. ')' → logprob: -13.50001049041748
    5. '
' → logprob: -14.25001049041748
    6. '   ' → logprob: -14.87501049041748
    7. '):
' → logprob: -16.375011444091797
    8. '(self' → logprob: -16.625011444091797
    9. '```' → logprob: -18.500011444091797
    10. '	self' → logprob: -18.625011444091797

Token 406: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.031762707978487015
    2. ',' → logprob: -3.7817625999450684
    3. '(self' → logprob: -5.531762599945068
    4. '       ' → logprob: -6.531762599945068
    5. '
' → logprob: -6.656762599945068
    6. ' self' → logprob: -7.156762599945068
    7. '   ' → logprob: -7.156762599945068
    8. ')' → logprob: -9.781763076782227
    9. '__(' → logprob: -9.906763076782227
    10. '):
' → logprob: -10.031763076782227

Token 407: ' input' (ID: 3422)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.4490600824356079
    2. 'self' → logprob: -1.074060082435608
    3. 'lines' → logprob: -4.699059963226318
    4. 'input' → logprob: -5.324059963226318
    5. ' sequences' → logprob: -5.699059963226318
    6. 'sequence' → logprob: -6.699059963226318
    7. ' self' → logprob: -7.574059963226318
    8. 'digit' → logprob: -7.949059963226318
    9. 'inputs' → logprob: -8.574060440063477
    10. 'data' → logprob: -8.824060440063477

Token 408: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.07072066515684128
    2. '_sequences' → logprob: -2.945720672607422
    3. '_data' → logprob: -4.570720672607422
    4. ':' → logprob: -5.820720672607422
    5. '_strings' → logprob: -6.945720672607422
    6. 's' → logprob: -7.820720672607422
    7. ')' → logprob: -8.320720672607422
    8. '_iter' → logprob: -8.695720672607422
    9. 'data' → logprob: -8.945720672607422
    10. '_rows' → logprob: -9.070720672607422

Token 409: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2664456789934775e-06
    2. '):' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '```' → logprob: -16.000001907348633
    5. '):
' → logprob: -16.125001907348633
    6. ')' → logprob: -16.625001907348633
    7. ' :' → logprob: -16.625001907348633
    8. '       ' → logprob: -17.250001907348633
    9. '_:' → logprob: -18.125001907348633
    10. '           ' → logprob: -18.500001907348633

Token 410: ' Iterable' (ID: 71228)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.019643981009721756
    2. ' List' → logprob: -4.519643783569336
    3. 'Iterable' → logprob: -4.769643783569336
    4. ' Iterable' → logprob: -9.644643783569336
    5. '   ' → logprob: -12.519643783569336
    6. 'list' → logprob: -13.394643783569336
    7. ')' → logprob: -13.394643783569336
    8. ' ' → logprob: -13.644643783569336
    9. '	List' → logprob: -13.644643783569336
    10. '[List' → logprob: -14.269643783569336

Token 411: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. ')' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.375001907348633
    5. 'str' → logprob: -16.875001907348633
    6. '
' → logprob: -18.125001907348633
    7. '):
' → logprob: -18.375001907348633
    8. '```' → logprob: -18.625001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '[[' → logprob: -19.750001907348633

Token 412: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010908572934567928
    2. '):
' → logprob: -4.760908603668213
    3. '])' → logprob: -6.885908603668213
    4. '):' → logprob: -7.010908603668213
    5. '   ' → logprob: -8.135908126831055
    6. '[str' → logprob: -10.635908126831055
    7. '       ' → logprob: -11.260908126831055
    8. ']):
' → logprob: -11.385908126831055
    9. ' )' → logprob: -12.260908126831055
    10. ':' → logprob: -12.635908126831055

Token 413: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21475555002689362
    2. ':
' → logprob: -1.9647555351257324
    3. '       ' → logprob: -2.9647555351257324
    4. '):
' → logprob: -7.464755535125732
    5. ')' → logprob: -7.714755535125732
    6. ' ->' → logprob: -8.21475601196289
    7. '   ' → logprob: -9.21475601196289
    8. '->' → logprob: -9.71475601196289
    9. ',' → logprob: -11.08975601196289
    10. '):' → logprob: -11.83975601196289

Token 414: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011706985533237457
    2. ' None' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.876171112060547
    4. 'List' → logprob: -16.876171112060547
    5. 'list' → logprob: -17.501171112060547
    6. 'none' → logprob: -17.751171112060547
    7. '(None' → logprob: -18.126171112060547
    8. ' ' → logprob: -18.876171112060547
    9. 'self' → logprob: -18.876171112060547
    10. '=None' → logprob: -18.876171112060547

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4400045871734619
    2. '       ' → logprob: -1.315004587173462
    3. ':
' → logprob: -2.440004587173462
    4. '   ' → logprob: -9.065004348754883
    5. '):
' → logprob: -9.065004348754883
    6. ',' → logprob: -9.815004348754883
    7. '<|end|>' → logprob: -11.065004348754883
    8. '```' → logprob: -12.565004348754883
    9. '      ' → logprob: -12.565004348754883
    10. ' :
' → logprob: -12.690004348754883

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.114600834436715e-05
    2. 'self' → logprob: -9.375091552734375
    3. ' self' → logprob: -12.625091552734375
    4. '   ' → logprob: -12.750091552734375
    5. '```' → logprob: -16.625091552734375
    6. '	self' → logprob: -17.250091552734375
    7. '           ' → logprob: -17.750091552734375
    8. '      ' → logprob: -18.250091552734375
    9. '	   ' → logprob: -18.250091552734375
    10. 'def' → logprob: -18.375091552734375

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0033010547049343586
    2. '       ' → logprob: -5.75330114364624
    3. ' self' → logprob: -9.003300666809082
    4. '   ' → logprob: -15.128300666809082
    5. '	self' → logprob: -16.6283016204834
    6. '[self' → logprob: -17.7533016204834
    7. '(self' → logprob: -18.3783016204834
    8. ' ' → logprob: -18.7533016204834
    9. '      ' → logprob: -19.2533016204834
    10. '     ' → logprob: -19.8783016204834

Token 418: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0007881867350079119
    2. '.' → logprob: -8.000787734985352
    3. '.lines' → logprob: -8.125787734985352
    4. '.inputs' → logprob: -9.625787734985352
    5. '.se' → logprob: -10.375787734985352
    6. '.data' → logprob: -10.875787734985352
    7. '.initial' → logprob: -11.375787734985352
    8. '.sequence' → logprob: -12.000787734985352
    9. '.raw' → logprob: -12.375787734985352
    10. '.source' → logprob: -12.625787734985352

Token 419: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.688212614681106e-05
    2. '_data' → logprob: -12.375017166137695
    3. '   ' → logprob: -12.750017166137695
    4. 'self' → logprob: -13.125017166137695
    5. '_sequences' → logprob: -13.375017166137695
    6. '       ' → logprob: -13.625017166137695
    7. ' =' → logprob: -14.125017166137695
    8. '_rows' → logprob: -14.125017166137695
    9. '_strings' → logprob: -14.375017166137695
    10. '=' → logprob: -14.625017166137695

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.811968803405762
    4. ':' → logprob: -15.561968803405762
    5. ' ' → logprob: -16.561967849731445
    6. '=list' → logprob: -16.936967849731445
    7. '    ' → logprob: -18.561967849731445
    8. ',' → logprob: -18.561967849731445
    9. '＝' → logprob: -18.686967849731445
    10. '	' → logprob: -18.936967849731445

Token 421: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05238790810108185
    2. 'list' → logprob: -3.0523879528045654
    3. ' input' → logprob: -5.677387714385986
    4. ' list' → logprob: -7.927387714385986
    5. '[input' → logprob: -12.427388191223145
    6. 'iter' → logprob: -12.677388191223145
    7. '[' → logprob: -14.177388191223145
    8. '   ' → logprob: -14.677388191223145
    9. '	input' → logprob: -15.052388191223145
    10. 'tuple' → logprob: -15.427388191223145

Token 422: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.981667537620524e-06
    2. 'lines' → logprob: -13.500001907348633
    3. 'ed' → logprob: -15.750001907348633
    4. '
' → logprob: -16.500001907348633
    5. '_LINES' → logprob: -17.375001907348633
    6. '_' → logprob: -17.500001907348633
    7. '\' → logprob: -17.625001907348633
    8. '_line' → logprob: -17.625001907348633
    9. 'Lines' → logprob: -17.750001907348633
    10. 'er' → logprob: -17.875001907348633

Token 423: '
        
' (ID: 20417)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.4567970335483551
    2. '   ' → logprob: -1.2067970037460327
    3. '<|end|>' → logprob: -3.2067971229553223
    4. '
' → logprob: -4.706797122955322
    5. '        
' → logprob: -4.831797122955322
    6. 'def' → logprob: -5.081797122955322
    7. '       ' → logprob: -5.956797122955322
    8. '  
' → logprob: -7.581797122955322
    9. '<|end|>' → logprob: -8.206796646118164
    10. '   
' → logprob: -8.331796646118164

Token 424: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2531876564025879
    2. '   ' → logprob: -1.503187656402588
    3. ' def' → logprob: -6.878187656402588
    4. '       ' → logprob: -9.50318717956543
    5. '
' → logprob: -9.75318717956543
    6. 'self' → logprob: -10.00318717956543
    7. '    
' → logprob: -10.62818717956543
    8. '<|end|>' → logprob: -11.00318717956543
    9. '	def' → logprob: -12.87818717956543
    10. '  ' → logprob: -13.62818717956543

Token 425: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.546478935983032e-05
    2. ' def' → logprob: -10.750025749206543
    3. 'self' → logprob: -13.000025749206543
    4. '
' → logprob: -13.375025749206543
    5. 'from' → logprob: -16.000024795532227
    6. '    
' → logprob: -16.750024795532227
    7. '   ' → logprob: -17.250024795532227
    8. '```' → logprob: -18.125024795532227
    9. '        
' → logprob: -18.250024795532227
    10. 'class' → logprob: -19.250024795532227

Token 426: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.005753630306571722
    2. ' process' → logprob: -5.255753517150879
    3. '__' → logprob: -7.755753517150879
    4. 'run' → logprob: -9.505753517150879
    5. ' __' → logprob: -12.255753517150879
    6. '_process' → logprob: -12.380753517150879
    7. 'def' → logprob: -13.255753517150879
    8. 'compute' → logprob: -13.630753517150879
    9. 'get' → logprob: -13.880753517150879
    10. ' run' → logprob: -14.005753517150879

Token 427: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -13.500006675720215
    3. '()' → logprob: -13.750006675720215
    4. 'self' → logprob: -13.750006675720215
    5. '_sequences' → logprob: -14.125006675720215
    6. '_lines' → logprob: -14.500006675720215
    7. 's' → logprob: -15.000006675720215
    8. '_input' → logprob: -15.375006675720215
    9. '_all' → logprob: -15.500006675720215
    10. '(
' → logprob: -16.0000057220459

Token 428: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.750000953674316
    3. ' (' → logprob: -16.0
    4. '   ' → logprob: -16.5
    5. 'self' → logprob: -16.875
    6. '(' → logprob: -17.0
    7. '       ' → logprob: -18.75
    8. '```' → logprob: -18.875
    9. '(sel' → logprob: -19.0
    10. ' ' → logprob: -20.125

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.11996734328568e-05
    2. 'self' → logprob: -11.500041007995605
    3. '):
' → logprob: -11.500041007995605
    4. ' )' → logprob: -11.500041007995605
    5. '):' → logprob: -12.250041007995605
    6. '   ' → logprob: -12.875041007995605
    7. ')->' → logprob: -13.125041007995605
    8. '(self' → logprob: -14.375041007995605
    9. ' ' → logprob: -15.875041007995605
    10. '       ' → logprob: -16.250041961669922

Token 430: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4156811833381653
    2. '->' → logprob: -1.4156811237335205
    3. '(self' → logprob: -2.4156811237335205
    4. ')' → logprob: -5.1656813621521
    5. '   ' → logprob: -7.1656813621521
    6. '(' → logprob: -7.4156813621521
    7. '       ' → logprob: -7.7906813621521
    8. 'self' → logprob: -8.540680885314941
    9. ')->' → logprob: -9.165680885314941
    10. '()' → logprob: -9.540680885314941

Token 431: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10035353899002075
    2. ' List' → logprob: -2.350353479385376
    3. '[List' → logprob: -8.850353240966797
    4. '   ' → logprob: -13.475353240966797
    5. 'list' → logprob: -14.350353240966797
    6. '	List' → logprob: -14.725353240966797
    7. 'Iterator' → logprob: -14.975353240966797
    8. '       ' → logprob: -15.850353240966797
    9. 'Iterable' → logprob: -15.975353240966797
    10. '(List' → logprob: -15.975353240966797

Token 432: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: 0.0
    2. 'int' → logprob: -17.25
    3. '<int' → logprob: -19.625
    4. '[' → logprob: -20.625
    5. '(int' → logprob: -20.875
    6. '   ' → logprob: -21.125
    7. '[Int' → logprob: -21.125
    8. '[str' → logprob: -22.375
    9. '[in' → logprob: -22.5
    10. '```' → logprob: -23.125

Token 433: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.23886322975158691
    2. ']:
' → logprob: -1.613863229751587
    3. ':' → logprob: -4.863862991333008
    4. ':
' → logprob: -6.488862991333008
    5. '       ' → logprob: -6.488862991333008
    6. ']' → logprob: -6.613862991333008
    7. ']:
' → logprob: -7.613862991333008
    8. '   ' → logprob: -8.113862991333008
    9. '):' → logprob: -8.488862991333008
    10. '):
' → logprob: -8.613862991333008

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025764419115148485
    2. 'results' → logprob: -8.75025749206543
    3. 'result' → logprob: -9.37525749206543
    4. ' results' → logprob: -12.00025749206543
    5. ' result' → logprob: -13.00025749206543
    6. 'digits' → logprob: -13.00025749206543
    7. '```' → logprob: -13.87525749206543
    8. 'outputs' → logprob: -14.00025749206543
    9. 'return' → logprob: -14.25025749206543
    10. 'output' → logprob: -15.00025749206543

Token 435: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.004516635090112686
    2. 'result' → logprob: -5.7545166015625
    3. ' results' → logprob: -7.0045166015625
    4. '       ' → logprob: -7.7545166015625
    5. ' result' → logprob: -14.2545166015625
    6. 'return' → logprob: -14.2545166015625
    7. '	results' → logprob: -16.6295166015625
    8. 'outputs' → logprob: -17.3795166015625
    9. '```' → logprob: -17.5045166015625
    10. 'output' → logprob: -17.8795166015625

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325456403195858
    2. '=' → logprob: -3.773254632949829
    3. '=[]' → logprob: -12.02325439453125
    4. '[]' → logprob: -13.77325439453125
    5. ':' → logprob: -14.02325439453125
    6. '   ' → logprob: -14.52325439453125
    7. '=[]
' → logprob: -14.89825439453125
    8. ' ' → logprob: -15.27325439453125
    9. ' []' → logprob: -16.77325439453125
    10. '[:]' → logprob: -16.89825439453125

Token 437: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0235140323638916
    2. '[]
' → logprob: -3.7735140323638916
    3. ' []' → logprob: -8.273513793945312
    4. '[' → logprob: -11.898513793945312
    5. ' []
' → logprob: -12.023513793945312
    6. '[]

' → logprob: -14.648513793945312
    7. '[
' → logprob: -16.898513793945312
    8. '       ' → logprob: -17.648513793945312
    9. '   ' → logprob: -18.273513793945312
    10. '[])
' → logprob: -18.648513793945312

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007155653554946184
    2. ' for' → logprob: -5.257155418395996
    3. 'for' → logprob: -6.257155418395996
    4. '        
' → logprob: -13.632155418395996
    5. '
' → logprob: -14.382155418395996
    6. '   ' → logprob: -14.382155418395996
    7. '```' → logprob: -14.382155418395996
    8. '	for' → logprob: -15.757155418395996
    9. ' ' → logprob: -16.257156372070312
    10. '	' → logprob: -16.507156372070312

Token 439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009712525061331689
    2. '       ' → logprob: -7.25097131729126
    3. ' for' → logprob: -8.250970840454102
    4. '   ' → logprob: -15.500970840454102
    5. '```' → logprob: -16.5009708404541
    6. '	for' → logprob: -18.1259708404541
    7. ' ' → logprob: -20.5009708404541
    8. '``' → logprob: -20.6259708404541
    9. '
' → logprob: -20.7509708404541
    10. '      ' → logprob: -21.5009708404541

Token 440: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011047814972698689
    2. ' line' → logprob: -4.511047840118408
    3. 'input' → logprob: -17.38604736328125
    4. '	line' → logprob: -17.88604736328125
    5. 'data' → logprob: -18.63604736328125
    6. '   ' → logprob: -18.76104736328125
    7. '_line' → logprob: -20.01104736328125
    8. ' ' → logprob: -20.51104736328125
    9. 'Line' → logprob: -20.63604736328125
    10. '(line' → logprob: -20.76104736328125

Token 441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007606389466673136
    2. 'in' → logprob: -4.882606506347656
    3. ' ' → logprob: -16.007606506347656
    4. '_in' → logprob: -16.757606506347656
    5. '	in' → logprob: -16.757606506347656
    6. 'line' → logprob: -17.382606506347656
    7. '    ' → logprob: -17.382606506347656
    8. '   ' → logprob: -17.382606506347656
    9. 'import' → logprob: -17.382606506347656
    10. ',' → logprob: -18.257606506347656

Token 442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -16.750158309936523
    4. '[self' → logprob: -19.000158309936523
    5. '	self' → logprob: -19.750158309936523
    6. '
' → logprob: -19.750158309936523
    7. '=self' → logprob: -20.000158309936523
    8. '   ' → logprob: -20.000158309936523
    9. '```' → logprob: -20.000158309936523
    10. ' ' → logprob: -20.750158309936523

Token 443: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00027921271976083517
    2. 'input' → logprob: -8.375279426574707
    3. 'put' → logprob: -10.500279426574707
    4. '.' → logprob: -11.875279426574707
    5. '.process' → logprob: -12.875279426574707
    6. '.in' → logprob: -13.250279426574707
    7. 'in' → logprob: -13.375279426574707
    8. '   ' → logprob: -13.500279426574707
    9. '       ' → logprob: -13.625279426574707
    10. 'Lines' → logprob: -13.750279426574707

Token 444: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.1888679839321412e-05
    2. '_line' → logprob: -11.125021934509277
    3. '_' → logprob: -12.625021934509277
    4. '_LINES' → logprob: -13.750021934509277
    5. 'Lines' → logprob: -14.625021934509277
    6. 'self' → logprob: -14.875021934509277
    7. '   ' → logprob: -15.125021934509277
    8. 'lines' → logprob: -15.500021934509277
    9. 's' → logprob: -15.750021934509277
    10. '       ' → logprob: -15.875021934509277

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34954163432121277
    2. ':
' → logprob: -1.2245416641235352
    3. '           ' → logprob: -6.974541664123535
    4. ',' → logprob: -9.599541664123535
    5. '):
' → logprob: -10.474541664123535
    6. ' in' → logprob: -10.724541664123535
    7. '       ' → logprob: -11.224541664123535
    8. ' :' → logprob: -11.849541664123535
    9. ':
' → logprob: -12.099541664123535
    10. ':

' → logprob: -12.599541664123535

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.636475493200123e-05
    2. '            
' → logprob: -10.125076293945312
    3. '
' → logprob: -11.750076293945312
    4. '```' → logprob: -11.750076293945312
    5. '          ' → logprob: -12.750076293945312
    6. 'try' → logprob: -13.125076293945312
    7. 'tokens' → logprob: -13.250076293945312
    8. 'digits' → logprob: -13.375076293945312
    9. '       ' → logprob: -13.500076293945312
    10. '   ' → logprob: -14.000076293945312

Token 447: ' line' (ID: 2543)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.18675348162651062
    2. ' sequence' → logprob: -2.436753511428833
    3. 'seq' → logprob: -3.186753511428833
    4. 'digit' → logprob: -3.561753511428833
    5. '           ' → logprob: -5.311753273010254
    6. ' digit' → logprob: -5.436753273010254
    7. ' seq' → logprob: -5.686753273010254
    8. 'ds' → logprob: -8.936753273010254
    9. 'try' → logprob: -9.061753273010254
    10. ' ds' → logprob: -9.061753273010254

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044898856431245804
    2. '=' → logprob: -3.544898748397827
    3. '_sequence' → logprob: -4.419898986816406
    4. '_strip' → logprob: -6.794898986816406
    5. '.strip' → logprob: -7.044898986816406
    6. '_str' → logprob: -8.294898986816406
    7. '_instance' → logprob: -8.294898986816406
    8. '_obj' → logprob: -8.419898986816406
    9. '_clean' → logprob: -9.544898986816406
    10. '_seq' → logprob: -9.669898986816406

Token 449: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '=line' → logprob: -18.629077911376953
    4. '	line' → logprob: -19.379077911376953
    5. '(line' → logprob: -19.504077911376953
    6. '#line' → logprob: -20.129077911376953
    7. 'Line' → logprob: -21.254077911376953
    8. '[line' → logprob: -21.754077911376953
    9. '_line' → logprob: -22.879077911376953
    10. ' ' → logprob: -23.004077911376953

Token 450: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00036846695002168417
    2. '.' → logprob: -8.000368118286133
    3. 'strip' → logprob: -10.750368118286133
    4. '.rstrip' → logprob: -11.375368118286133
    5. ' .' → logprob: -17.500368118286133
    6. '.trim' → logprob: -17.875368118286133
    7. '.
' → logprob: -18.250368118286133
    8. '_strip' → logprob: -20.000368118286133
    9. '
' → logprob: -20.125368118286133
    10. 'rstrip' → logprob: -20.625368118286133

Token 451: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34434208273887634
    2. '()
' → logprob: -1.5943421125411987
    3. '()' → logprob: -2.594341993331909
    4. '
' → logprob: -4.594342231750488
    5. ')' → logprob: -6.344342231750488
    6. ')
' → logprob: -6.844342231750488
    7. 'if' → logprob: -8.344342231750488
    8. '            
' → logprob: -9.344342231750488
    9. '               ' → logprob: -9.344342231750488
    10. ':
' → logprob: -10.094342231750488

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015514736878685653
    2. 'if' → logprob: -8.875155448913574
    3. ' if' → logprob: -11.375155448913574
    4. '       ' → logprob: -14.250155448913574
    5. '            
' → logprob: -14.250155448913574
    6. 'd' → logprob: -14.750155448913574
    7. '               ' → logprob: -14.875155448913574
    8. 'digit' → logprob: -14.875155448913574
    9. '```' → logprob: -15.000155448913574
    10. '
' → logprob: -15.125155448913574

Token 453: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011094745248556137
    2. '           ' → logprob: -4.761094570159912
    3. 'sequence' → logprob: -6.386094570159912
    4. ' if' → logprob: -7.886094570159912
    5. 'digit' → logprob: -8.38609504699707
    6. 'seq' → logprob: -8.76109504699707
    7. 'ds' → logprob: -11.63609504699707
    8. 'try' → logprob: -11.63609504699707
    9. '               ' → logprob: -11.76109504699707
    10. 'digits' → logprob: -12.88609504699707

Token 454: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.40241849422454834
    2. 'not' → logprob: -1.1524184942245483
    3. 'line' → logprob: -4.527418613433838
    4. ' line' → logprob: -6.152418613433838
    5. 'len' → logprob: -6.277418613433838
    6. ' len' → logprob: -7.402418613433838
    7. ' ' → logprob: -14.40241813659668
    8. '   ' → logprob: -14.65241813659668
    9. '           ' → logprob: -15.52741813659668
    10. '```' → logprob: -15.65241813659668

Token 455: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. 'len' → logprob: -17.251502990722656
    4. '(line' → logprob: -17.751502990722656
    5. '	line' → logprob: -18.126502990722656
    6. 'Line' → logprob: -19.001502990722656
    7. 'lin' → logprob: -19.126502990722656
    8. '#line' → logprob: -19.376502990722656
    9. '
' → logprob: -19.501502990722656
    10. 'li' → logprob: -19.876502990722656

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29223769903182983
    2. ' or' → logprob: -2.1672377586364746
    3. ':
' → logprob: -2.2922377586364746
    4. 'or' → logprob: -3.2922377586364746
    5. ':return' → logprob: -7.542237758636475
    6. '   ' → logprob: -9.542237281799316
    7. '```' → logprob: -9.667237281799316
    8. '==' → logprob: -12.042237281799316
    9. ' :' → logprob: -12.292237281799316
    10. '	or' → logprob: -12.542237281799316

Token 457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002978048287332058
    2. ' continue' → logprob: -8.875297546386719
    3. 'continue' → logprob: -9.000297546386719
    4. ':' → logprob: -11.125297546386719
    5. ':
' → logprob: -11.250297546386719
    6. '           ' → logprob: -12.250297546386719
    7. ' continues' → logprob: -14.750297546386719
    8. '                   ' → logprob: -14.750297546386719
    9. '_continue' → logprob: -15.375297546386719
    10. '              ' → logprob: -15.500297546386719

Token 458: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.008488810621201992
    2. '               ' → logprob: -5.258488655090332
    3. ' continue' → logprob: -5.758488655090332
    4. 'break' → logprob: -9.508488655090332
    5. '                   ' → logprob: -11.758488655090332
    6. '   ' → logprob: -12.133488655090332
    7. '           ' → logprob: -12.633488655090332
    8. '	continue' → logprob: -13.008488655090332
    9. ' break' → logprob: -14.883488655090332
    10. '_continue' → logprob: -15.633488655090332

Token 459: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003129471093416214
    2. '            
' → logprob: -6.128129482269287
    3. '
' → logprob: -7.003129482269287
    4. '    
' → logprob: -10.753129005432129
    5. '  
' → logprob: -12.628129005432129
    6. '           
' → logprob: -13.753129005432129
    7. ',' → logprob: -13.878129005432129
    8. '        
' → logprob: -14.128129005432129
    9. '<|end|>' → logprob: -14.253129005432129
    10. '               ' → logprob: -14.253129005432129

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025192240718752146
    2. '
' → logprob: -9.000251770019531
    3. '            
' → logprob: -9.000251770019531
    4. '```' → logprob: -14.000251770019531
    5. '    
' → logprob: -14.250251770019531
    6. 'token' → logprob: -14.375251770019531
    7. '          ' → logprob: -14.625251770019531
    8. '               ' → logprob: -15.125251770019531
    9. 'result' → logprob: -15.125251770019531
    10. 'tokens' → logprob: -15.250251770019531

Token 461: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' (adapté à ' sequence') → logprob: -0.17393095791339874
    2. 'seq' → logprob: -2.9239308834075928
    3. ' sequence' → logprob: -3.0489308834075928
    4. 'digit' → logprob: -3.4239308834075928
    5. '           ' → logprob: -4.048931121826172
    6. ' digit' → logprob: -5.798931121826172
    7. ' seq' → logprob: -5.798931121826172
    8. 'try' → logprob: -7.173931121826172
    9. 'digits' → logprob: -7.423931121826172
    10. 'ds' → logprob: -7.548931121826172

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047935113310814
    2. '=' → logprob: -4.511047840118408
    3. ':' → logprob: -16.63604736328125
    4. '_sequence' → logprob: -18.51104736328125
    5. ' ' → logprob: -18.63604736328125
    6. 'sequence' → logprob: -19.01104736328125
    7. '   ' → logprob: -19.38604736328125
    8. ' =
' → logprob: -19.76104736328125
    9. '=f' → logprob: -19.88604736328125
    10. '_factory' → logprob: -20.26104736328125

Token 463: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.00012356207298580557
    2. ' Digit' → logprob: -9.000123977661133
    3. 'Digital' → logprob: -16.750123977661133
    4. 'digit' → logprob: -18.000123977661133
    5. 'Digits' → logprob: -18.750123977661133
    6. ' digit' → logprob: -20.625123977661133
    7. '_digit' → logprob: -21.125123977661133
    8. 'Dig' → logprob: -22.500123977661133
    9. 'DIG' → logprob: -22.500123977661133
    10. '           ' → logprob: -22.875123977661133

Token 464: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'sequence' → logprob: -17.25
    3. '_sequence' → logprob: -18.25
    4. 'Sequ' → logprob: -19.5
    5. ' Sequence' → logprob: -19.625
    6. 'Sequences' → logprob: -20.5
    7. 'Seq' → logprob: -21.25
    8. ' sequence' → logprob: -21.875
    9. '_SEQUENCE' → logprob: -21.875
    10. '=' → logprob: -22.625

Token 465: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -6.988221684878226e-06
    2. 'Processor' → logprob: -12.625006675720215
    3. 'factory' → logprob: -12.750006675720215
    4. '=' → logprob: -14.875006675720215
    5. ' =' → logprob: -16.25000762939453
    6. 'Sequence' → logprob: -16.25000762939453
    7. '
' → logprob: -17.62500762939453
    8. '   ' → logprob: -18.25000762939453
    9. '_factory' → logprob: -18.25000762939453
    10. 'Fact' → logprob: -18.87500762939453

Token 466: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -14.750012397766113
    4. 'from' → logprob: -15.000012397766113
    5. '.From' → logprob: -18.500011444091797
    6. '.for' → logprob: -19.000011444091797
    7. '#from' → logprob: -19.375011444091797
    8. '   ' → logprob: -19.875011444091797
    9. '.to' → logprob: -20.250011444091797
    10. '.with' → logprob: -20.500011444091797

Token 467: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.700132997939363e-05
    2. 'string' → logprob: -11.000017166137695
    3. 'String' → logprob: -15.625017166137695
    4. 's' → logprob: -17.250017166137695
    5. '_' → logprob: -17.750017166137695
    6. '_line' → logprob: -17.875017166137695
    7. '```' → logprob: -18.125017166137695
    8. '_str' → logprob: -18.625017166137695
    9. '_strings' → logprob: -18.875017166137695
    10. 'tring' → logprob: -19.250017166137695

Token 468: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: 0.0
    2. '[line' → logprob: -17.375
    3. '=line' → logprob: -18.25
    4. '(' → logprob: -19.375
    5. '#line' → logprob: -19.75
    6. ',line' → logprob: -20.25
    7. ' line' → logprob: -20.375
    8. 'line' → logprob: -20.625
    9. '(Line' → logprob: -21.0
    10. '(lines' → logprob: -21.5

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5775812864303589
    2. ')
' → logprob: -0.8275812864303589
    3. '           ' → logprob: -6.452581405639648
    4. ')
' → logprob: -10.202581405639648
    5. ').' → logprob: -11.077581405639648
    6. '       ' → logprob: -12.702581405639648
    7. '               ' → logprob: -12.827581405639648
    8. ')

' → logprob: -13.202581405639648
    9. ')`
' → logprob: -13.827581405639648
    10. ' )
' → logprob: -14.452581405639648

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011729758232831955
    2. 'results' → logprob: -4.511729717254639
    3. ' results' → logprob: -7.636729717254639
    4. '
' → logprob: -9.011730194091797
    5. 'result' → logprob: -9.511730194091797
    6. '            
' → logprob: -13.761730194091797
    7. '       ' → logprob: -14.011730194091797
    8. ' result' → logprob: -14.636730194091797
    9. '```' → logprob: -14.886730194091797
    10. '	results' → logprob: -15.386730194091797

Token 471: ' last' (ID: 2174)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6252012848854065
    2. 'result' → logprob: -1.2502012252807617
    3. ' results' → logprob: -2.1252012252807617
    4. ' result' → logprob: -2.8752012252807617
    5. '           ' → logprob: -6.125201225280762
    6. 'digit' → logprob: -8.250201225280762
    7. 'last' (adapté à ' last') → logprob: -10.125201225280762
    8. ' digit' → logprob: -10.500201225280762
    9. 'bottom' → logprob: -10.625201225280762
    10. ' bottom' → logprob: -11.375201225280762

Token 472: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -3.190178904333152e-05
    2. '_row' → logprob: -10.875031471252441
    3. 'digit' → logprob: -11.625031471252441
    4. '_' → logprob: -13.250031471252441
    5. 'Digit' → logprob: -14.750031471252441
    6. '_token' → logprob: -14.750031471252441
    7. '_value' → logprob: -14.875031471252441
    8. '_digits' → logprob: -15.000031471252441
    9. ' =' → logprob: -15.250031471252441
    10. '_d' → logprob: -16.375032424926758

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141421258449554
    2. '=' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.576414108276367
    4. '_digit' → logprob: -16.076414108276367
    5. 'digit' → logprob: -16.451414108276367
    6. 's' → logprob: -16.701414108276367
    7. '           ' → logprob: -16.826414108276367
    8. '   ' → logprob: -16.826414108276367
    9. '    ' → logprob: -17.826414108276367
    10. ')' → logprob: -18.076414108276367

Token 474: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.3132617771625519
    2. ' sequence' → logprob: -1.3132617473602295
    3. '(sequence' → logprob: -17.438261032104492
    4. '           ' → logprob: -17.938261032104492
    5. '_sequence' → logprob: -19.438261032104492
    6. 'Sequence' → logprob: -19.688261032104492
    7. '.sequence' → logprob: -19.938261032104492
    8. 'sequ' → logprob: -20.313261032104492
    9. 'seq' → logprob: -21.188261032104492
    10. ' sequences' → logprob: -22.313261032104492

Token 475: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0008079635445028543
    2. '.' → logprob: -7.125807762145996
    3. ' .' → logprob: -13.250807762145996
    4. 'get' → logprob: -13.875807762145996
    5. '   ' → logprob: -14.500807762145996
    6. '       ' → logprob: -15.875807762145996
    7. '
' → logprob: -18.250808715820312
    8. '           ' → logprob: -18.375808715820312
    9. '.
' → logprob: -18.500808715820312
    10. ').' → logprob: -19.125808715820312

Token 476: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: 0.0
    2. 'last' → logprob: -18.75
    3. '_final' → logprob: -20.75
    4. '_LAST' → logprob: -21.0
    5. '_next' → logprob: -21.375
    6. '_first' → logprob: -21.5
    7. '_' → logprob: -21.625
    8. '_l' → logprob: -21.75
    9. '_Last' → logprob: -22.625
    10. '_lower' → logprob: -23.375

Token 477: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.4849443838757e-06
    2. '_last' → logprob: -12.625004768371582
    3. 'row' → logprob: -14.000004768371582
    4. '_line' → logprob: -16.375003814697266
    5. '```' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '
' → logprob: -17.750003814697266
    8. '_root' → logprob: -18.125003814697266
    9. '_' → logprob: -18.125003814697266
    10. '_rows' → logprob: -18.750003814697266

Token 478: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -4.127333340875339e-06
    2. 'digit' → logprob: -12.500003814697266
    3. 'Digit' → logprob: -16.125003814697266
    4. '```' → logprob: -17.125003814697266
    5. '_' → logprob: -17.750003814697266
    6. '_d' → logprob: -18.250003814697266
    7. '_token' → logprob: -18.750003814697266
    8. '-digit' → logprob: -18.875003814697266
    9. '_digits' → logprob: -19.250003814697266
    10. '\' → logprob: -19.375003814697266

Token 479: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006545670330524445
    2. '()
' → logprob: -5.256545543670654
    3. '
' → logprob: -7.006545543670654
    4. '()' → logprob: -8.256546020507812
    5. ')
' → logprob: -9.381546020507812
    6. ')' → logprob: -10.506546020507812
    7. '(
' → logprob: -12.006546020507812
    8. ',' → logprob: -12.006546020507812
    9. '            
' → logprob: -12.756546020507812
    10. ',
' → logprob: -13.006546020507812

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.75000286102295
    3. 'results' → logprob: -13.87500286102295
    4. '
' → logprob: -14.62500286102295
    5. '       ' → logprob: -14.75000286102295
    6. '   ' → logprob: -15.62500286102295
    7. ' results' → logprob: -16.875003814697266
    8. '            
' → logprob: -17.125003814697266
    9. '               ' → logprob: -17.125003814697266
    10. '		' → logprob: -17.250003814697266

Token 481: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7101444005966187
    2. 'results' (adapté à ' results') → logprob: -0.7101444005966187
    3. ' results' → logprob: -4.085144519805908
    4. '	results' → logprob: -11.46014404296875
    5. '
' → logprob: -11.96014404296875
    6. '   ' → logprob: -12.46014404296875
    7. '```' → logprob: -12.46014404296875
    8. '       ' → logprob: -12.71014404296875
    9. '(results' → logprob: -13.21014404296875
    10. '_results' → logprob: -13.71014404296875

Token 482: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015872348740231246
    2. '.' → logprob: -8.750158309936523
    3. '.ap' → logprob: -16.625158309936523
    4. 'append' → logprob: -17.000158309936523
    5. '.app' → logprob: -17.125158309936523
    6. '.Append' → logprob: -17.875158309936523
    7. '.extend' → logprob: -18.375158309936523
    8. '.add' → logprob: -18.500158309936523
    9. '.push' → logprob: -19.500158309936523
    10. ' append' → logprob: -20.750158309936523

Token 483: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. 'last' → logprob: -14.750075340270996
    4. '(
' → logprob: -15.625075340270996
    5. '(

' → logprob: -19.500076293945312
    6. ' last' → logprob: -19.875076293945312
    7. ',last' → logprob: -20.750076293945312
    8. '[last' → logprob: -20.875076293945312
    9. ' (' → logprob: -21.250076293945312
    10. '(first' → logprob: -21.500076293945312

Token 484: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -3.047134305234067e-05
    2. 'digit' → logprob: -10.500030517578125
    3. '_' → logprob: -14.000030517578125
    4. 'Digit' → logprob: -14.250030517578125
    5. '   ' → logprob: -15.000030517578125
    6. ')' → logprob: -15.250030517578125
    7. '```' → logprob: -15.250030517578125
    8. ' digit' → logprob: -16.125030517578125
    9. '-digit' → logprob: -16.500030517578125
    10. '           ' → logprob: -16.625030517578125

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2778405547142029
    2. ')
' → logprob: -1.5278406143188477
    3. '
' → logprob: -4.027840614318848
    4. '       ' → logprob: -4.902840614318848
    5. ')return' → logprob: -8.777840614318848
    6. '        
' → logprob: -9.652840614318848
    7. '<|end|>' → logprob: -10.152840614318848
    8. '    
' → logprob: -10.402840614318848
    9. '   ' → logprob: -11.527840614318848
    10. '  
' → logprob: -11.902840614318848

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006993304705247283
    2. 'return' → logprob: -7.375699520111084
    3. ' return' → logprob: -10.375699043273926
    4. '   ' → logprob: -10.625699043273926
    5. '
' → logprob: -11.125699043273926
    6. '	' → logprob: -14.375699043273926
    7. '```' → logprob: -14.625699043273926
    8. '	return' → logprob: -15.000699043273926
    9. '        
' → logprob: -15.000699043273926
    10. '      ' → logprob: -15.125699043273926

Token 487: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31440791487693787
    2. '       ' → logprob: -1.3144079446792603
    3. ' return' → logprob: -7.064407825469971
    4. '   ' → logprob: -8.189408302307129
    5. '
' → logprob: -11.439408302307129
    6. '	return' → logprob: -13.439408302307129
    7. '```' → logprob: -15.689408302307129
    8. ' ' → logprob: -15.814408302307129
    9. '           ' → logprob: -16.189407348632812
    10. '      ' → logprob: -16.439407348632812

Token 488: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0015023599844425917
    2. ' results' → logprob: -6.501502513885498
    3. '	results' → logprob: -19.001502990722656
    4. '(results' → logprob: -20.001502990722656
    5. 'result' → logprob: -21.626502990722656
    6. '.results' → logprob: -22.001502990722656
    7. '[' → logprob: -24.126502990722656
    8. 'Results' → logprob: -24.501502990722656
    9. '_results' → logprob: -25.001502990722656
    10. '
' → logprob: -25.626502990722656

Token 489: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15755495429039001
    2. '<|end|>' → logprob: -2.407554864883423
    3. '```' → logprob: -3.157554864883423
    4. 'if' → logprob: -5.157555103302002
    5. 'def' → logprob: -5.282555103302002
    6. 'import' → logprob: -6.782555103302002
    7. 'from' → logprob: -7.907555103302002
    8. '<|end|>' → logprob: -8.407554626464844
    9. 'input' → logprob: -8.532554626464844
    10. 'class' → logprob: -9.282554626464844

Token 491: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038221076130867004
    2. ' main' → logprob: -3.2882211208343506
    3. 'run' → logprob: -9.16322135925293
    4. 'solve' → logprob: -10.03822135925293
    5. 'process' → logprob: -10.78822135925293
    6. 'read' → logprob: -12.53822135925293
    7. ' run' → logprob: -13.03822135925293
    8. 'calculate' → logprob: -13.28822135925293
    9. ' solve' → logprob: -13.78822135925293
    10. 'compute' → logprob: -13.91322135925293

Token 492: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.302704761968926e-05
    2. '()' → logprob: -10.250073432922363
    3. '():
' → logprob: -10.375073432922363
    4. ' ():' → logprob: -12.000073432922363
    5. '(' → logprob: -15.875073432922363
    6. '():
' → logprob: -16.625072479248047
    7. '():

' → logprob: -17.625072479248047
    8. '()>' → logprob: -17.875072479248047
    9. '_' → logprob: -18.625072479248047
    10. ':' → logprob: -18.625072479248047

Token 493: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016129353316500783
    2. '():
' → logprob: -6.501613140106201
    3. '()' → logprob: -9.251612663269043
    4. ':' → logprob: -11.626612663269043
    5. ' ():' → logprob: -12.251612663269043
    6. '():
' → logprob: -14.626612663269043
    7. '()->' → logprob: -15.001612663269043
    8. '()>' → logprob: -16.50161361694336
    9. '(' → logprob: -16.87661361694336
    10. '):' → logprob: -17.25161361694336

Token 494: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011060673743486404
    2. ' None' → logprob: -4.51106071472168
    3. 'int' → logprob: -11.26106071472168
    4. 'none' → logprob: -18.51106071472168
    5. ' int' → logprob: -18.76106071472168
    6. '   ' → logprob: -19.63606071472168
    7. '_None' → logprob: -20.38606071472168
    8. ' ' → logprob: -21.01106071472168
    9. '(None' → logprob: -21.26106071472168
    10. 'void' → logprob: -21.88606071472168

Token 495: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008378052152693272
    2. ':
' → logprob: -5.133378028869629
    3. '():' → logprob: -6.133378028869629
    4. '():
' → logprob: -8.883378028869629
    5. '   ' → logprob: -9.883378028869629
    6. ':def' → logprob: -10.008378028869629
    7. '):' → logprob: -11.258378028869629
    8. '<|end|>' → logprob: -11.758378028869629
    9. '):
' → logprob: -13.133378028869629
    10. 'def' → logprob: -13.258378028869629

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20289932191371918
    2. 'import' → logprob: -2.202899217605591
    3. ' import' → logprob: -2.702899217605591
    4. 'input' → logprob: -5.70289945602417
    5. ' input' → logprob: -5.95289945602417
    6. '```' → logprob: -8.827898979187012
    7. 'from' → logprob: -10.952898979187012
    8. '    ' → logprob: -11.827898979187012
    9. 'if' → logprob: -11.952898979187012
    10. ' from' → logprob: -12.077898979187012

Token 497: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.2521657943725586
    2. ' import' → logprob: -1.5021657943725586
    3. '   ' → logprob: -8.877165794372559
    4. 'input' → logprob: -9.627165794372559
    5. ' input' → logprob: -10.877165794372559
    6. 'if' → logprob: -12.377165794372559
    7. ' lines' → logprob: -12.877165794372559
    8. '```' → logprob: -13.127165794372559
    9. 'from' → logprob: -13.377165794372559
    10. 'lines' → logprob: -14.502165794372559

Token 498: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.001170225441455841
    2. ' sys' → logprob: -6.7511701583862305
    3. 'file' → logprob: -17.501171112060547
    4. '	sys' → logprob: -18.251171112060547
    5. '=sys' → logprob: -18.251171112060547
    6. '(sys' → logprob: -20.376171112060547
    7. '.sys' → logprob: -20.501171112060547
    8. '_sys' → logprob: -20.751171112060547
    9. '```' → logprob: -21.501171112060547
    10. 'os' → logprob: -22.626171112060547

Token 499: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003991846460849047
    2. '
' → logprob: -6.003992080688477
    3. 'for' → logprob: -7.378992080688477
    4. 'input' → logprob: -7.503992080688477
    5. '    
' → logprob: -8.503992080688477
    6. ' for' → logprob: -9.378992080688477
    7. ' input' → logprob: -10.503992080688477
    8. ' lines' → logprob: -11.003992080688477
    9. 'data' → logprob: -13.003992080688477
    10. 'lines' → logprob: -13.378992080688477

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00426441989839077
    2. 'input' → logprob: -5.7542643547058105
    3. 'for' → logprob: -7.1292643547058105
    4. ' lines' → logprob: -9.129264831542969
    5. ' for' → logprob: -9.754264831542969
    6. 'lines' → logprob: -10.004264831542969
    7. ' input' → logprob: -10.004264831542969
    8. '    
' → logprob: -11.504264831542969
    9. 'inputs' → logprob: -11.629264831542969
    10. 'data' → logprob: -12.879264831542969

Token 501: ' processor' (ID: 29539)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45810699462890625
    2. 'input' → logprob: -1.2081069946289062
    3. 'for' → logprob: -3.2081069946289062
    4. 'lines' → logprob: -4.333106994628906
    5. ' input' → logprob: -4.708106994628906
    6. ' lines' → logprob: -5.583106994628906
    7. ' for' → logprob: -6.458106994628906
    8. 'inputs' → logprob: -7.333106994628906
    9. 'results' → logprob: -9.458106994628906
    10. 'if' → logprob: -9.583106994628906

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519344687461853
    2. '=' → logprob: -1.50193452835083
    3. '   ' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.876934051513672
    5. ' =
' → logprob: -14.876934051513672
    6. ' ' → logprob: -15.876934051513672
    7. '  ' → logprob: -16.001934051513672
    8. '	' → logprob: -16.251934051513672
    9. '(process' → logprob: -16.751934051513672
    10. ' =
' → logprob: -16.876934051513672

Token 503: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0007107630372047424
    2. ' Digit' → logprob: -7.250710964202881
    3. 'Digital' → logprob: -14.125710487365723
    4. '   ' → logprob: -17.25071144104004
    5. '_digit' → logprob: -17.62571144104004
    6. 'Digits' → logprob: -19.12571144104004
    7. 'digit' → logprob: -19.25071144104004
    8. ' digit' → logprob: -19.37571144104004
    9. '-digit' → logprob: -20.00071144104004
    10. ' ' → logprob: -20.50071144104004

Token 504: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'sequence' → logprob: -18.0
    3. '_sequence' → logprob: -21.0
    4. 'Sequences' → logprob: -21.0
    5. ' Sequence' → logprob: -22.0
    6. 'Sequ' → logprob: -22.875
    7. ' sequence' → logprob: -23.5
    8. '_SEQUENCE' → logprob: -24.875
    9. '.Sequence' → logprob: -25.375
    10. 'Seq' → logprob: -25.5

Token 505: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'processor' → logprob: -17.75
    3. ' processor' → logprob: -20.375
    4. '_processor' → logprob: -21.125
    5. 'Process' → logprob: -22.625
    6. ' Processor' → logprob: -23.125
    7. 'Parser' → logprob: -24.375
    8. '(process' → logprob: -25.125
    9. 'Processors' → logprob: -25.375
    10. 'Proces' → logprob: -25.375

Token 506: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -4.127333340875339e-06
    2. 'sys' → logprob: -12.500003814697266
    3. '(' → logprob: -16.125003814697266
    4. '=sys' → logprob: -16.625003814697266
    5. '(system' → logprob: -16.875003814697266
    6. '(iter' → logprob: -17.125003814697266
    7. '	sys' → logprob: -17.625003814697266
    8. ' sys' → logprob: -17.625003814697266
    9. '(list' → logprob: -18.625003814697266
    10. '([' → logprob: -19.375003814697266

Token 507: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004336493439041078
    2. '.argv' → logprob: -7.750433444976807
    3. '.' → logprob: -13.125433921813965
    4. '.std' → logprob: -14.625433921813965
    5. '.stdout' → logprob: -15.375433921813965
    6. 'stdin' → logprob: -16.00043296813965
    7. ' .' → logprob: -17.37543296813965
    8. '.__' → logprob: -17.75043296813965
    9. '._' → logprob: -18.37543296813965
    10. '.stderr' → logprob: -19.00043296813965

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003623235272243619
    2. '.readlines' → logprob: -5.878623008728027
    3. '.readline' → logprob: -7.753623008728027
    4. ')
' → logprob: -7.878623008728027
    5. ' )' → logprob: -12.253623008728027
    6. '))' → logprob: -14.128623008728027
    7. '`)' → logprob: -14.128623008728027
    8. '.read' → logprob: -14.253623008728027
    9. '   ' → logprob: -14.253623008728027
    10. ')

' → logprob: -14.753623008728027

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08013147860765457
    2. 'results' → logprob: -2.5801315307617188
    3. ' results' → logprob: -6.830131530761719
    4. 'for' → logprob: -9.205131530761719
    5. 'result' → logprob: -9.955131530761719
    6. '	results' → logprob: -12.705131530761719
    7. ' for' → logprob: -12.830131530761719
    8. '```' → logprob: -13.080131530761719
    9. '
' → logprob: -13.455131530761719
    10. '    
' → logprob: -13.705131530761719

Token 510: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.010231023654341698
    2. 'for' → logprob: -5.010231018066406
    3. ' results' → logprob: -6.260231018066406
    4. '   ' → logprob: -6.510231018066406
    5. 'result' → logprob: -9.510231018066406
    6. ' for' → logprob: -10.385231018066406
    7. 'outputs' → logprob: -12.510231018066406
    8. '	results' → logprob: -14.260231018066406
    9. 'output' → logprob: -14.885231018066406
    10. '```' → logprob: -15.010231018066406

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0297551192343235
    2. '=' → logprob: -3.529755115509033
    3. '   ' → logprob: -13.154755592346191
    4. ' =
' → logprob: -13.279755592346191
    5. '.' → logprob: -14.904755592346191
    6. ':' → logprob: -15.154755592346191
    7. '=
' → logprob: -15.654755592346191
    8. ' =
' → logprob: -16.654754638671875
    9. ' ' → logprob: -16.904754638671875
    10. '.extend' → logprob: -17.029754638671875

Token 512: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.16022422909736633
    2. ' processor' → logprob: -1.910224199295044
    3. '.processor' → logprob: -17.78522491455078
    4. 'processors' → logprob: -18.41022491455078
    5. 'process' → logprob: -19.16022491455078
    6. '_processor' → logprob: -19.28522491455078
    7. 'Processor' → logprob: -19.66022491455078
    8. '   ' → logprob: -19.91022491455078
    9. '[' → logprob: -20.66022491455078
    10. ' processors' → logprob: -20.78522491455078

Token 513: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.000006675720215
    3. 'process' → logprob: -16.8750057220459
    4. ' .' → logprob: -17.5000057220459
    5. '.processor' → logprob: -20.7500057220459
    6. '.perform' → logprob: -21.2500057220459
    7. '.Process' → logprob: -21.2500057220459
    8. '.
' → logprob: -21.6250057220459
    9. ' process' → logprob: -21.6250057220459
    10. '	process' → logprob: -21.6250057220459

Token 514: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.3856492842023727e-06
    2. 'all' → logprob: -13.625000953674316
    3. 'All' → logprob: -16.625001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '```' → logprob: -19.625001907348633
    6. 'ed' → logprob: -19.750001907348633
    7. '__' → logprob: -20.000001907348633
    8. '_results' → logprob: -20.000001907348633
    9. '_ALL' → logprob: -20.250001907348633
    10. 's' → logprob: -20.875001907348633

Token 515: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031401283922605217
    2. 'for' → logprob: -8.500313758850098
    3. '
' → logprob: -9.625313758850098
    4. ' for' → logprob: -10.125313758850098
    5. '    
' → logprob: -12.375313758850098
    6. '```' → logprob: -16.375314712524414
    7. '	for' → logprob: -17.250314712524414
    8. '       ' → logprob: -17.625314712524414
    9. '<|end|>' → logprob: -18.250314712524414
    10. '
' → logprob: -18.875314712524414

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004105473402887583
    2. 'for' → logprob: -5.504105567932129
    3. ' for' → logprob: -10.629105567932129
    4. '
' → logprob: -13.004105567932129
    5. '    
' → logprob: -15.129105567932129
    6. '```' → logprob: -15.879105567932129
    7. 'print' → logprob: -16.504104614257812
    8. '	for' → logprob: -17.254104614257812
    9. '
' → logprob: -17.754104614257812
    10. '       ' → logprob: -18.629104614257812

Token 517: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -14.250001907348633
    3. ' for' → logprob: -14.750001907348633
    4. '
' → logprob: -15.500001907348633
    5. 'print' → logprob: -15.500001907348633
    6. '```' → logprob: -19.625001907348633
    7. '
' → logprob: -22.125001907348633
    8. '    
' → logprob: -22.250001907348633
    9. '

' → logprob: -23.000001907348633
    10. '	for' → logprob: -23.125001907348633

Token 518: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16640163958072662
    2. 'res' → logprob: -1.9164016246795654
    3. 'digit' → logprob: -5.4164018630981445
    4. ' result' → logprob: -6.9164018630981445
    5. ' res' → logprob: -7.4164018630981445
    6. 'r' → logprob: -9.541401863098145
    7. ' digit' → logprob: -9.916401863098145
    8. ' r' → logprob: -13.791401863098145
    9. 'last' → logprob: -15.916401863098145
    10. 'd' → logprob: -16.541400909423828

Token 519: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.01185169443488121
    2. ' in' → logprob: -4.886851787567139
    3. 'ults' → logprob: -5.886851787567139
    4. 'ultat' → logprob: -7.636851787567139
    5. ' ult' → logprob: -8.13685131072998
    6. 'ul' → logprob: -8.38685131072998
    7. 'u' → logprob: -8.88685131072998
    8. 'ut' → logprob: -9.51185131072998
    9. 'ault' → logprob: -10.13685131072998
    10. ' ' → logprob: -10.38685131072998

Token 520: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -4.5491004129871726e-05
    2. ' results' → logprob: -10.000045776367188
    3. '	results' → logprob: -21.375045776367188
    4. 'result' → logprob: -21.500045776367188
    5. '(results' → logprob: -21.500045776367188
    6. '.results' → logprob: -24.125045776367188
    7. 'Results' → logprob: -24.125045776367188
    8. '
' → logprob: -25.500045776367188
    9. '_results' → logprob: -26.000045776367188
    10. 'res' → logprob: -26.375045776367188

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029975872486829758
    2. ':
' → logprob: -3.5299758911132812
    3. '   ' → logprob: -9.029975891113281
    4. 'print' → logprob: -9.654975891113281
    5. '       ' → logprob: -10.779975891113281
    6. ' print' → logprob: -11.529975891113281
    7. '.print' → logprob: -12.904975891113281
    8. ',' → logprob: -13.029975891113281
    9. '):' → logprob: -13.529975891113281
    10. ':
' → logprob: -14.279975891113281

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004637199454009533
    2. 'print' → logprob: -5.504637241363525
    3. ' print' → logprob: -7.504637241363525
    4. '   ' → logprob: -11.754636764526367
    5. '```' → logprob: -15.754636764526367
    6. '           ' → logprob: -16.129636764526367
    7. '      ' → logprob: -17.879636764526367
    8. '     ' → logprob: -18.004636764526367
    9. ' ' → logprob: -18.629636764526367
    10. '	print' → logprob: -18.879636764526367

Token 523: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.25000286102295
    4. '```' → logprob: -18.750001907348633
    5. '       ' → logprob: -19.875001907348633
    6. '
' → logprob: -21.750001907348633
    7. '	print' → logprob: -22.500001907348633
    8. 'println' → logprob: -22.625001907348633
    9. '``' → logprob: -24.500001907348633
    10. 'printf' → logprob: -24.625001907348633

Token 524: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'res' → logprob: -17.625001907348633
    4. '(f' → logprob: -18.500001907348633
    5. '(re' → logprob: -20.000001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '=res' → logprob: -21.875001907348633
    8. '()' → logprob: -22.125001907348633
    9. '(result' → logprob: -22.125001907348633
    10. ' res' → logprob: -22.375001907348633

Token 525: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -17.500001907348633
    4. '())' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. '()' → logprob: -18.750001907348633
    8. '}' → logprob: -19.000001907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. ')#' → logprob: -20.125001907348633

Token 526: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -16.0
    3. '```' → logprob: -17.5
    4. '#' → logprob: -17.625
    5. '#if' → logprob: -20.25
    6. '
' → logprob: -20.875
    7. 'main' → logprob: -21.375
    8. 'If' → logprob: -21.75
    9. '@if' → logprob: -22.125
    10. '	if' → logprob: -22.625

Token 527: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07897637784481049
    2. '__' → logprob: -2.5789763927459717
    3. '_name' → logprob: -9.95397663116455
    4. 'name' → logprob: -10.95397663116455
    5. ' ' → logprob: -11.57897663116455
    6. '_' → logprob: -11.82897663116455
    7. '___' → logprob: -13.57897663116455
    8. ' ' → logprob: -13.82897663116455
    9. ' name' → logprob: -13.95397663116455
    10. 'Name' → logprob: -15.07897663116455

Token 528: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6799793839454651
    2. ' ==' → logprob: -0.8049793839454651
    3. '==' → logprob: -3.5549793243408203
    4. 'name' → logprob: -4.30497932434082
    5. ' __' → logprob: -6.80497932434082
    6. 'if' → logprob: -6.80497932434082
    7. '.__' → logprob: -7.17997932434082
    8. '=="' → logprob: -7.17997932434082
    9. '.name' → logprob: -8.55497932434082
    10. '=='' → logprob: -8.92997932434082

Token 529: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0280383548888494e-06
    2. '==' → logprob: -14.125000953674316
    3. '__.__' → logprob: -15.750000953674316
    4. '__.' → logprob: -18.000001907348633
    5. '____' → logprob: -18.250001907348633
    6. 'name' → logprob: -18.375001907348633
    7. '___' → logprob: -18.500001907348633
    8. ' ==' → logprob: -18.625001907348633
    9. '_' → logprob: -18.750001907348633
    10. '__
' → logprob: -19.000001907348633

Token 530: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27126285433769226
    2. '==' → logprob: -2.0212628841400146
    3. ' ==' → logprob: -2.2712628841400146
    4. '=="' → logprob: -6.2712626457214355
    5. '=='' → logprob: -11.146263122558594
    6. '_' → logprob: -12.521263122558594
    7. '___' → logprob: -13.021263122558594
    8. '"' → logprob: -14.021263122558594
    9. '=' → logprob: -14.146263122558594
    10. '==
' → logprob: -14.896263122558594

Token 531: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01815848983824253
    2. ''' → logprob: -4.018158435821533
    3. ' "__' → logprob: -11.768158912658691
    4. '__' → logprob: -14.393158912658691
    5. ' '__' → logprob: -16.018157958984375
    6. ''"' → logprob: -17.268157958984375
    7. '"name' → logprob: -17.393157958984375
    8. '"user' → logprob: -18.018157958984375
    9. '("__' → logprob: -18.143157958984375
    10. '"value' → logprob: -19.643157958984375

Token 532: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.027135632932186127
    2. '__' → logprob: -3.7771356105804443
    3. '"' → logprob: -5.652135848999023
    4. 'name' → logprob: -8.652135848999023
    5. ''' → logprob: -8.652135848999023
    6. '_main' → logprob: -11.777135848999023
    7. 'built' → logprob: -13.027135848999023
    8. 'MAIN' → logprob: -13.277135848999023
    9. 'm' → logprob: -13.402135848999023
    10. ' main' → logprob: -13.652135848999023

Token 533: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16030150651931763
    2. '__' → logprob: -1.9103014469146729
    3. '__':
' → logprob: -9.535301208496094
    4. '__:' → logprob: -12.535301208496094
    5. '__["' → logprob: -14.660301208496094
    6. '__.' → logprob: -15.160301208496094
    7. '__
' → logprob: -15.285301208496094
    8. '__
' → logprob: -15.535301208496094
    9. '__",' → logprob: -15.660301208496094
    10. '__.__' → logprob: -16.535301208496094

Token 534: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5104547739028931
    2. 'main' → logprob: -1.385454773902893
    3. '__' → logprob: -2.6354546546936035
    4. '   ' → logprob: -2.8854546546936035
    5. ' __' → logprob: -4.5104546546936035
    6. '	main' → logprob: -5.3854546546936035
    7. '_main' → logprob: -6.0104546546936035
    8. '"' → logprob: -6.3854546546936035
    9. '    
' → logprob: -7.5104546546936035
    10. ' ' → logprob: -8.260455131530762

Token 535: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -19.75
    4. '   ' → logprob: -21.375
    5. '_main' → logprob: -21.875
    6. '.main' → logprob: -23.375
    7. 'import' → logprob: -24.375
    8. '(main' → logprob: -25.0
    9. 'Main' → logprob: -26.625
    10. '  ' → logprob: -28.25

Token 536: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 534
Tokens correctement prédits (1ère position, stricte): 247
Tokens correctement prédits (1ère position, avec adaptation): 278
Tokens correctement prédits (top 10): 453
Précision stricte (1ère position): 46.25%
Précision adaptée (1ère position): 52.06%
Précision (top 10): 84.83%
================================================================================
