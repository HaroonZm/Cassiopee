================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def solve():
    while True:
        # Lecture du nombre de voies de parking (x) et de lignes d'échange (y)
        x, y = map(int, input().split())
        if x == 0 and y == 0:
            break

        # Structure pour stocker les connexions entre les extrémités
        # Chaque extrémité est identifiée par (ligne, côté) où côté est 'W' ou 'E'
        connections = { (i, 'W'): [], (i, 'E'): [] for i in range(x)}

        for _ in range(y):
            p, q = input().split()
            # p et q sont de la forme "0E", "1W" etc.
            p_line, p_side = int(p[:-1]), p[-1]
            q_line, q_side = int(q[:-1]), q[-1]
            # On ajoute la connexion dans les deux sens
            connections[(p_line, p_side)].append((q_line, q_side))
            connections[(q_line, q_side)].append((p_line, p_side))

        # Lecture des configurations d'arrivée (état initial)
        start = []
        for _ in range(x):
            line = input().strip()
            if line == '-':
                start.append('')
            else:
                start.append(line)

        # Lecture des configurations de départ (état final)
        goal = []
        for _ in range(x):
            line = input().strip()
            if line == '-':
                goal.append('')
            else:
                goal.append(line)

        # BFS pour trouver le nombre minimal de mouvements
        # Etat représenté par un tuple de x chaînes correspondant aux lignes
        start_state = tuple(start)
        goal_state = tuple(goal)

        # Pour éviter de revisiter un état
        visited = set()
        visited.add(start_state)

        queue = deque()
        # Chaque élément = (état, nombre de mouvements)
        queue.append((start_state, 0))

        while queue:
            state, moves = queue.popleft()

            if state == goal_state:
                # Solution optimale trouvée
                print(moves)
                break

            # On explore toutes les possibilités de déplacement d'un (sous-) train
            # sur les lignes d'échange = arêtes entre extrémités

            # Pour chaque ligne de parking i
            for i in range(x):
                train = state[i]
                # Si la ligne est vide, rien à déplacer
                if not train:
                    continue

                # On peut déplacer un sous-train qui est un prefix ou suffix de la ligne
                # associé à une extrémité: côté 'W' correspond au début du string train (Ouest),
                # côté 'E' correspond à la fin du string train (Est).
                #
                # Les sous-trains déplaçables sont :
                # - un segment du début (pour extrémité W)
                # - un segment de fin (pour extrémité E)
                #
                # On peut aussi déplacer la totalité de la ligne (division "à 0" ou "à len(train)")
                # Pour une extrémité donnée, on essaiera toutes les coupures possibles.

                for side in ['W', 'E']:
                    if side == 'W':
                        # On regarde les subdivisions possibles en partant du début
                        for split_pos in range(1, len(train)+1):
                            moved = train[:split_pos]      # sous-train déplacé
                            kept = train[split_pos:]       # reste sur la ligne

                            # Pour chaque ligne connectée à cette extrémité
                            for (dest_line, dest_side) in connections[(i, side)]:
                                dest_train = state[dest_line]

                                # Pour coller, il faut ajouter moved à l'extrémité opposée de dest_side
                                #
                                # L’extrémité où on colle le train déplacé dans la ligne destination est l'extrémité opposée à dest_side,
                                # car le mouvement arrive à cette extrémité.
                                # Exemple : si dest_side == 'W' (extrémité ouest),
                                # alors on ajoute moved à l’extrémité est
                                #
                                # Donc on définit la fonction d'ajout plus bas.

                                new_dest_train = append_train(dest_train, moved, opposite_side(dest_side))

                                # Nouveau état :
                                new_state = list(state)
                                new_state[i] = kept
                                new_state[dest_line] = new_dest_train
                                new_state = tuple(new_state)

                                if new_state not in visited:
                                    visited.add(new_state)
                                    queue.append((new_state, moves + 1))
                    else:  # side == 'E'
                        # subdivisions possibles en partant de la fin
                        for split_pos in range(1, len(train)+1):
                            moved = train[-split_pos:]     # sous-train déplacé
                            kept = train[:-split_pos]      # reste sur la ligne

                            for (dest_line, dest_side) in connections[(i, side)]:
                                dest_train = state[dest_line]
                                new_dest_train = append_train(dest_train, moved, opposite_side(dest_side))

                                new_state = list(state)
                                new_state[i] = kept
                                new_state[dest_line] = new_dest_train
                                new_state = tuple(new_state)

                                if new_state not in visited:
                                    visited.add(new_state)
                                    queue.append((new_state, moves + 1))


# Fonction utilitaire : retourne l'extrémité opposée ('W' <-> 'E')
def opposite_side(side):
    return 'E' if side == 'W' else 'W'

# Fonction utilitaire : ajoute un train 'segment' à une extrémité 'side' de la ligne 'train_line'
# side == 'W' -> ajout au début, == 'E' -> ajout à la fin
def append_train(train_line, segment, side):
    if side == 'W':
        # Ajout au début : segment + train_line
        return segment + train_line
    else:
        # Ajout à la fin : train_line + segment
        return train_line + segment


if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9342921376228333
    2. 'default' → logprob: -1.3092920780181885
    3. 'deque' → logprob: -1.6842920780181885
    4. ' defaultdict' → logprob: -2.6842920780181885
    5. 'Counter' → logprob: -2.8092920780181885
    6. ' abc' → logprob: -4.559292316436768
    7. ' Counter' → logprob: -5.434292316436768
    8. 'named' → logprob: -5.559292316436768
    9. ' deque' → logprob: -6.559292316436768
    10. '```' → logprob: -6.684292316436768

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014334967359900475
    2. '.' → logprob: -5.0143351554870605
    3. '\(' → logprob: -5.7643351554870605
    4. '```' → logprob: -6.8893351554870605
    5. '\' → logprob: -7.0143351554870605
    6. '\n' → logprob: -7.2643351554870605
    7. '[' → logprob: -8.014334678649902
    8. '(
' → logprob: -8.264334678649902
    9. 'import' → logprob: -8.389334678649902
    10. 'newline' → logprob: -8.389334678649902

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06311985850334167
    2. 'd' → logprob: -3.313119888305664
    3. '[' → logprob: -4.938119888305664
    4. '=' → logprob: -5.813119888305664
    5. ',' → logprob: -5.813119888305664
    6. '.' → logprob: -6.313119888305664
    7. '`' → logprob: -6.563119888305664
    8. 'a' → logprob: -6.813119888305664
    9. '```' → logprob: -6.813119888305664
    10. '\' → logprob: -6.938119888305664

Token 6: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019707425963133574
    2. ' bfs' → logprob: -6.8769707679748535
    3. ' ' → logprob: -8.751970291137695
    4. ' deque' → logprob: -8.751970291137695
    5. ' ```' → logprob: -9.376970291137695
    6. ' space' → logprob: -9.626970291137695
    7. ' de' → logprob: -9.751970291137695
    8. ' a' → logprob: -10.001970291137695
    9. ' dfs' → logprob: -10.126970291137695
    10. ' queue' → logprob: -10.251970291137695

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01131813507527113
    2. '```' → logprob: -5.011318206787109
    3. '():' → logprob: -6.636318206787109
    4. '_' → logprob: -6.761318206787109
    5. ':' → logprob: -7.136318206787109
    6. '(:' → logprob: -8.38631820678711
    7. ' (' → logprob: -8.63631820678711
    8. '(
' → logprob: -9.63631820678711
    9. '<|end|>' → logprob: -9.63631820678711
    10. '((' → logprob: -9.76131820678711

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06978102028369904
    2. '    
' → logprob: -3.8197810649871826
    3. '```' → logprob: -3.8197810649871826
    4. '\' → logprob: -5.4447808265686035
    5. '    ' → logprob: -5.6947808265686035
    6. '\n' → logprob: -5.8197808265686035
    7. 'n' → logprob: -6.1947808265686035
    8. '`' → logprob: -6.1947808265686035
    9. 'input' → logprob: -6.9447808265686035
    10. ' 
' → logprob: -7.0697808265686035

Token 9: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.516289234161377
    2. 'q' → logprob: -1.641289234161377
    3. '   ' → logprob: -2.641289234161377
    4. 'queue' → logprob: -3.016289234161377
    5. ' n' → logprob: -3.141289234161377
    6. ' queue' → logprob: -3.516289234161377
    7. ' q' → logprob: -5.641289234161377
    8. 'input' → logprob: -5.641289234161377
    9. 'stack' → logprob: -6.391289234161377
    10. ' ' → logprob: -6.516289234161377

Token 10: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0008433376788161695
    2. ' ' → logprob: -7.375843524932861
    3. ' not' → logprob: -9.000843048095703
    4. 'True' → logprob: -9.375843048095703
    5. '  ' → logprob: -12.375843048095703
    6. ' input' → logprob: -13.125843048095703
    7. '(True' → logprob: -13.875843048095703
    8. ' ' → logprob: -15.125843048095703
    9. ' a' → logprob: -15.500843048095703
    10. ' (' → logprob: -15.625843048095703

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037107658572494984
    2. '():' → logprob: -6.003710746765137
    3. ' :' → logprob: -7.128710746765137
    4. '       ' → logprob: -8.503710746765137
    5. '   ' → logprob: -9.503710746765137
    6. '):' → logprob: -9.878710746765137
    7. ':
' → logprob: -10.378710746765137
    8. ':**' → logprob: -10.503710746765137
    9. '    ' → logprob: -11.503710746765137
    10. ' ():' → logprob: -11.628710746765137

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012745663523674011
    2. '   ' → logprob: -4.8877458572387695
    3. '    ' → logprob: -5.6377458572387695
    4. ' ' → logprob: -7.6377458572387695
    5. '        
' → logprob: -7.8877458572387695
    6. '<|end|>' → logprob: -8.38774585723877
    7. '      ' → logprob: -9.51274585723877
    8. '        ' → logprob: -9.88774585723877
    9. '     ' → logprob: -9.88774585723877
    10. '    
' → logprob: -10.01274585723877

Token 13: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.21461166441440582
    2. 'line' → logprob: -2.339611768722534
    3. '   ' → logprob: -2.464611768722534
    4. ' try' → logprob: -5.839611530303955
    5. 'n' → logprob: -6.589611530303955
    6. 'try' → logprob: -6.714611530303955
    7. ' n' → logprob: -6.839611530303955
    8. 'data' → logprob: -6.839611530303955
    9. '```' → logprob: -6.839611530303955
    10. ' inp' → logprob: -7.589611530303955

Token 14: ' Lecture' (ID: 106534)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.040154751390218735
    2. ' try' → logprob: -4.165154933929443
    3. 'line' → logprob: -4.665154933929443
    4. '   ' → logprob: -5.290154933929443
    5. ' data' → logprob: -5.415154933929443
    6. 'data' → logprob: -6.290154933929443
    7. '```' → logprob: -7.290154933929443
    8. ' user' → logprob: -7.665154933929443
    9. 'try' → logprob: -7.790154933929443
    10. ' input' → logprob: -8.415154457092285

Token 15: ' du' (ID: 1462)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3736724555492401
    2. 'line' → logprob: -1.2486724853515625
    3. '   ' → logprob: -5.2486724853515625
    4. 's' → logprob: -5.3736724853515625
    5. ' ligne' → logprob: -5.8736724853515625
    6. 'ligne' → logprob: -5.8736724853515625
    7. '       ' → logprob: -6.4986724853515625
    8. 'try' → logprob: -6.4986724853515625
    9. ' try' → logprob: -6.9986724853515625
    10. ' s' → logprob: -6.9986724853515625

Token 16: ' nombre' (ID: 9733)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.6618969440460205
    2. 'n' → logprob: -1.7868969440460205
    3. ' input' → logprob: -1.7868969440460205
    4. 'line' → logprob: -2.1618969440460205
    5. 'l' → logprob: -2.2868969440460205
    6. ' line' → logprob: -2.4118969440460205
    7. 's' → logprob: -2.5368969440460205
    8. 'ligne' → logprob: -3.4118969440460205
    9. ' data' → logprob: -4.661896705627441
    10. ' n' → logprob: -4.661896705627441

Token 17: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0140408277511597
    2. 'd' → logprob: -1.2640408277511597
    3. ' d' → logprob: -1.5140408277511597
    4. 'de' → logprob: -3.139040946960449
    5. 'n' → logprob: -3.389040946960449
    6. ' de' → logprob: -3.514040946960449
    7. 's' → logprob: -4.639040946960449
    8. ' ' → logprob: -4.764040946960449
    9. '   ' → logprob: -5.639040946960449
    10. '    ' → logprob: -6.139040946960449

Token 18: ' voies' (ID: 162865)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -2.192884922027588
    2. 'cases' → logprob: -2.317884922027588
    3. 'cas' → logprob: -2.567884922027588
    4. 'p' → logprob: -2.817884922027588
    5. 'c' → logprob: -3.067884922027588
    6. 'b' → logprob: -3.067884922027588
    7. 'points' → logprob: -3.317884922027588
    8. 'pi' → logprob: -3.317884922027588
    9. 'tickets' → logprob: -3.442884922027588
    10. 'm' → logprob: -3.692884922027588

Token 19: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.674811065196991
    2. ' n' → logprob: -0.924811065196991
    3. 's' → logprob: -3.6748111248016357
    4. '       ' → logprob: -4.174810886383057
    5. '    ' → logprob: -5.049810886383057
    6. ' s' → logprob: -5.299810886383057
    7. ' :' → logprob: -5.299810886383057
    8. ',' → logprob: -5.549810886383057
    9. ' ,' → logprob: -5.549810886383057
    10. '(n' → logprob: -5.549810886383057

Token 20: ' parking' (ID: 14472)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' train' → logprob: -1.803906798362732
    2. ' la' → logprob: -2.0539069175720215
    3. ' métro' → logprob: -2.0539069175720215
    4. ' circulation' → logprob: -2.4289069175720215
    5. ' transport' → logprob: -2.9289069175720215
    6. 's' → logprob: -3.0539069175720215
    7. 'transport' → logprob: -3.0539069175720215
    8. 'r' → logprob: -3.0539069175720215
    9. 'cir' → logprob: -3.4289069175720215
    10. 'la' → logprob: -3.5539069175720215

Token 21: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3914874792098999
    2. ' n' → logprob: -1.3914874792099
    3. '       ' → logprob: -3.5164875984191895
    4. '   ' → logprob: -4.1414875984191895
    5. '(n' → logprob: -4.7664875984191895
    6. 's' → logprob: -4.8914875984191895
    7. '    ' → logprob: -5.6414875984191895
    8. ' line' → logprob: -6.8914875984191895
    9. ' lines' → logprob: -7.1414875984191895
    10. 'v' → logprob: -7.2664875984191895

Token 22: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16120196878910065
    2. 'n' → logprob: -2.7862019538879395
    3. ' )' → logprob: -3.1612019538879395
    4. ')n' → logprob: -3.9112019538879395
    5. ' n' → logprob: -4.6612019538879395
    6. 'int' → logprob: -5.5362019538879395
    7. ',' → logprob: -5.6612019538879395
    8. 'v' → logprob: -6.5362019538879395
    9. ')v' → logprob: -7.1612019538879395
    10. '):' → logprob: -7.1612019538879395

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1878950595855713
    2. ',' → logprob: -2.5628950595855713
    3. '):' → logprob: -2.8128950595855713
    4. ' =' → logprob: -4.187894821166992
    5. '=' → logprob: -4.687894821166992
    6. ' )' → logprob: -5.687894821166992
    7. ',)' → logprob: -6.062894821166992
    8. '),' → logprob: -6.687894821166992
    9. ':' → logprob: -7.687894821166992
    10. 'et' → logprob: -7.687894821166992

Token 24: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3445547819137573
    2. ',' → logprob: -2.469554901123047
    3. '<|end|>' → logprob: -2.594554901123047
    4. ' ' → logprob: -3.719554901123047
    5. '        ' → logprob: -3.969554901123047
    6. ' and' → logprob: -4.094554901123047
    7. '    ' → logprob: -4.344554901123047
    8. ')' → logprob: -4.594554901123047
    9. '   ' → logprob: -4.594554901123047
    10. ':' → logprob: -5.344554901123047

Token 25: ' de' (ID: 334)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9753034710884094
    2. 'de' → logprob: -1.3503034114837646
    3. 'vo' → logprob: -1.9753034114837646
    4. 'd' → logprob: -2.6003034114837646
    5. 'nombre' → logprob: -3.2253034114837646
    6. 'y' → logprob: -3.7253034114837646
    7. 'la' → logprob: -4.350303649902344
    8. 'leur' → logprob: -4.475303649902344
    9. 'l' → logprob: -4.850303649902344
    10. 'des' → logprob: -4.975303649902344

Token 26: ' lignes' (ID: 81687)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.3160399198532104
    2. 'places' → logprob: -1.8160399198532104
    3. 'l' → logprob: -2.1910400390625
    4. ' places' → logprob: -2.5660400390625
    5. 'nombre' → logprob: -2.6910400390625
    6. ' voitures' → logprob: -2.6910400390625
    7. ' la' → logprob: -3.3160400390625
    8. 'v' → logprob: -3.4410400390625
    9. ' l' → logprob: -3.5660400390625
    10. ' y' → logprob: -4.1910400390625

Token 27: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.4311494827270508
    2. ' de' → logprob: -1.8061494827270508
    3. ' =' → logprob: -2.806149482727051
    4. ' ' → logprob: -2.931149482727051
    5. '       ' → logprob: -3.056149482727051
    6. 'vide' → logprob: -3.056149482727051
    7. 'def' → logprob: -3.181149482727051
    8. 'd' → logprob: -3.306149482727051
    9. 's' → logprob: -3.431149482727051
    10. '_input' → logprob: -3.681149482727051

Token 28: ''é' (ID: 12728)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22316323220729828
    2. 'entrée' → logprob: -2.72316312789917
    3. ' input' → logprob: -3.97316312789917
    4. 'input' → logprob: -4.34816312789917
    5. 's' → logprob: -4.34816312789917
    6. 'a' → logprob: -4.47316312789917
    7. 'code' → logprob: -4.47316312789917
    8. ''entrée' → logprob: -4.59816312789917
    9. ' code' → logprob: -4.84816312789917
    10. 'onnées' → logprob: -4.84816312789917

Token 29: 'change' (ID: 4939)
  Prédit: 'criture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'criture' → logprob: -0.07628539949655533
    2. 'n' → logprob: -3.3262853622436523
    3. 'nt' → logprob: -4.576285362243652
    4. 'crire' → logprob: -4.826285362243652
    5. 'crit' → logprob: -5.326285362243652
    6. 'entrée' → logprob: -6.451285362243652
    7. 'cran' → logprob: -6.576285362243652
    8. 'e' → logprob: -6.826285362243652
    9. '```' → logprob: -6.826285362243652
    10. 'nergie' → logprob: -6.951285362243652

Token 30: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48802700638771057
    2. ' (' → logprob: -1.7380269765853882
    3. 's' → logprob: -2.4880270957946777
    4. ' de' → logprob: -3.4880270957946777
    5. '(' → logprob: -3.6130270957946777
    6. ' =' → logprob: -3.7380270957946777
    7. 'de' → logprob: -4.488027095794678
    8. '(x' → logprob: -5.238027095794678
    9. '(n' → logprob: -5.363027095794678
    10. ')' → logprob: -6.238027095794678

Token 31: 'y' (ID: 88)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23272423446178436
    2. 'n' → logprob: -2.482724189758301
    3. 'y' → logprob: -3.482724189758301
    4. ')' → logprob: -3.857724189758301
    5. ' y' → logprob: -4.607724189758301
    6. ' ,' → logprob: -4.607724189758301
    7. 'k' → logprob: -4.732724189758301
    8. 's' → logprob: -4.857724189758301
    9. ' n' → logprob: -4.857724189758301
    10. ' ' → logprob: -5.107724189758301

Token 32: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6334605813026428
    2. ')' → logprob: -0.7584605813026428
    3. '       ' → logprob: -7.383460521697998
    4. '):
' → logprob: -9.258460998535156
    5. '   ' → logprob: -9.758460998535156
    6. ',' → logprob: -10.133460998535156
    7. ' )' → logprob: -11.133460998535156
    8. ' ):' → logprob: -11.508460998535156
    9. '```' → logprob: -12.758460998535156
    10. ' ' → logprob: -13.133460998535156

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1485658884048462
    2. '       ' → logprob: -1.1485658884048462
    3. '    ' → logprob: -2.3985657691955566
    4. '<|end|>' → logprob: -2.7735657691955566
    5. ' ' → logprob: -3.1485657691955566
    6. '  ' → logprob: -3.1485657691955566
    7. 'x' → logprob: -3.2735657691955566
    8. ',' → logprob: -4.023565769195557
    9. '      ' → logprob: -4.398565769195557
    10. 'n' → logprob: -4.648565769195557

Token 34: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.608130156993866
    2. 'x' (adapté à ' x') → logprob: -0.858130156993866
    3. 'line' → logprob: -4.483129978179932
    4. 'try' → logprob: -4.733129978179932
    5. ' line' → logprob: -5.733129978179932
    6. ' x' → logprob: -6.483129978179932
    7. 'ligne' → logprob: -6.483129978179932
    8. '       ' → logprob: -6.733129978179932
    9. ' try' → logprob: -7.108129978179932
    10. '  ' → logprob: -7.233129978179932

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000182921823579818
    2. ',y' → logprob: -9.00018310546875
    3. ' ,' → logprob: -10.25018310546875
    4. ',x' → logprob: -11.75018310546875
    5. ' =' → logprob: -12.00018310546875
    6. '=' → logprob: -12.25018310546875
    7. ',v' → logprob: -13.87518310546875
    8. ',j' → logprob: -14.50018310546875
    9. ',user' → logprob: -14.75018310546875
    10. ',s' → logprob: -14.75018310546875

Token 36: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.055234406143426895
    2. 'y' → logprob: -2.930234432220459
    3. '<|end|>' → logprob: -8.6802339553833
    4. ' ' → logprob: -8.8052339553833
    5. ' ' → logprob: -11.3052339553833
    6. '	y' → logprob: -12.0552339553833
    7. '<|end|>' → logprob: -12.0552339553833
    8. ',y' → logprob: -13.6802339553833
    9. '_y' → logprob: -13.9302339553833
    10. '  ' → logprob: -14.1802339553833

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994076818227768
    2. '=' → logprob: -2.6949408054351807
    3. '=input' → logprob: -12.694940567016602
    4. ',' → logprob: -13.944940567016602
    5. '=int' → logprob: -15.444940567016602
    6. ')' → logprob: -16.1949405670166
    7. ' ' → logprob: -16.5699405670166
    8. '   ' → logprob: -17.3199405670166
    9. '=line' → logprob: -17.3199405670166
    10. '        ' → logprob: -17.5699405670166

Token 38: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019744306337088346
    2. 'map' → logprob: -6.251974582672119
    3. ' ' → logprob: -10.876974105834961
    4. ' ' → logprob: -11.251974105834961
    5. '	map' → logprob: -11.376974105834961
    6. '   ' → logprob: -14.126974105834961
    7. ' list' → logprob: -14.751974105834961
    8. '[' → logprob: -15.126974105834961
    9. '(map' → logprob: -15.126974105834961
    10. '  ' → logprob: -15.251974105834961

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010254977270960808
    2. '(' → logprob: -4.635254859924316
    3. '(input' → logprob: -7.635254859924316
    4. '(str' → logprob: -11.760254859924316
    5. '(list' → logprob: -13.385254859924316
    6. '[int' → logprob: -13.635254859924316
    7. ' (' → logprob: -13.760254859924316
    8. 'int' → logprob: -14.010254859924316
    9. '<int' → logprob: -14.010254859924316
    10. '(lambda' → logprob: -14.510254859924316

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.29825496673583984
    2. 'input' → logprob: -1.5482549667358398
    3. ',input' → logprob: -3.29825496673584
    4. ',' → logprob: -5.17325496673584
    5. ')' → logprob: -7.04825496673584
    6. '(' → logprob: -7.17325496673584
    7. ' input' → logprob: -7.17325496673584
    8. '=input' → logprob: -8.67325496673584
    9. '<input' → logprob: -10.54825496673584
    10. '```' → logprob: -10.92325496673584

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.313273549079895
    2. ' input' → logprob: -1.313273549079895
    3. ')' → logprob: -12.563273429870605
    4. '	input' → logprob: -12.938273429870605
    5. ' ' → logprob: -13.188273429870605
    6. '(input' → logprob: -13.313273429870605
    7. '=input' → logprob: -13.938273429870605
    8. '   ' → logprob: -14.313273429870605
    9. ',input' → logprob: -15.188273429870605
    10. ' )' → logprob: -15.938273429870605

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012846533209085464
    2. '()' → logprob: -4.88784646987915
    3. '())' → logprob: -5.26284646987915
    4. '()))' → logprob: -10.637846946716309
    5. '());' → logprob: -11.637846946716309
    6. ')' → logprob: -12.762846946716309
    7. '(' → logprob: -13.512846946716309
    8. '()
' → logprob: -13.637846946716309
    9. '()).' → logprob: -13.762846946716309
    10. '()),' → logprob: -13.887846946716309

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.963691804325208e-05
    2. 'strip' → logprob: -10.500029563903809
    3. 'rstrip' → logprob: -13.875029563903809
    4. '(split' → logprob: -14.750029563903809
    5. 'spl' → logprob: -14.875029563903809
    6. ' split' → logprob: -15.625029563903809
    7. ')' → logprob: -16.125030517578125
    8. 's' → logprob: -16.625030517578125
    9. '().' → logprob: -17.625030517578125
    10. '_split' → logprob: -17.625030517578125

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11215522885322571
    2. ')' → logprob: -2.7371551990509033
    3. '()))' → logprob: -3.6121551990509033
    4. '))' → logprob: -4.612155437469482
    5. '()' → logprob: -5.487155437469482
    6. '(' → logprob: -8.862154960632324
    7. '('' → logprob: -9.487154960632324
    8. '())
' → logprob: -10.862154960632324
    9. '()),' → logprob: -11.987154960632324
    10. '()))
' → logprob: -12.112154960632324

Token 45: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08903729170560837
    2. '<|end|>' → logprob: -3.4640371799468994
    3. ' if' → logprob: -3.7140371799468994
    4. 'if' (adapté à ' if') → logprob: -4.3390374183654785
    5. ' ' → logprob: -4.5890374183654785
    6. '        
' → logprob: -6.4640374183654785
    7. '   ' → logprob: -6.9640374183654785
    8. '\n' → logprob: -7.0890374183654785
    9. '  ' → logprob: -7.3390374183654785
    10. ' 
' → logprob: -7.5890374183654785

Token 47: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007638447917997837
    2. 'x' → logprob: -4.882638454437256
    3. ' not' → logprob: -10.882637977600098
    4. ' ' → logprob: -12.007637977600098
    5. ' (' → logprob: -12.132637977600098
    6. '(x' → logprob: -13.882637977600098
    7. 'not' → logprob: -14.757637977600098
    8. '	x' → logprob: -15.007637977600098
    9. '   ' → logprob: -16.007638931274414
    10. ' ' → logprob: -16.507638931274414

Token 48: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014521211385727
    2. '==' → logprob: -1.7014521360397339
    3. '=' → logprob: -11.576452255249023
    4. ' <=' → logprob: -11.701452255249023
    5. '<=' → logprob: -12.326452255249023
    6. ')==' → logprob: -12.701452255249023
    7. '<|end|>' → logprob: -12.951452255249023
    8. ' =' → logprob: -13.201452255249023
    9. ')' → logprob: -13.201452255249023
    10. '===' → logprob: -13.576452255249023

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34847548604011536
    2. ' ' → logprob: -1.223475456237793
    3. ' y' → logprob: -11.598475456237793
    4. 'y' → logprob: -12.660975456237793
    5. '  ' → logprob: -13.098475456237793
    6. ' ' → logprob: -13.285975456237793
    7. '   ' → logprob: -13.473475456237793
    8. '=' → logprob: -13.598475456237793
    9. '```' → logprob: -13.785975456237793
    10. ' and' → logprob: -13.848475456237793

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014181484468281269
    2. ' ' → logprob: -4.264181613922119
    3. 'y' → logprob: -12.514181137084961
    4. '-' → logprob: -13.639181137084961
    5. '  ' → logprob: -13.701681137084961
    6. '   ' → logprob: -13.889181137084961
    7. 's' → logprob: -13.889181137084961
    8. 'and' → logprob: -14.014181137084961
    9. ' y' → logprob: -14.076681137084961
    10. 'o' → logprob: -14.139181137084961

Token 51: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00976199097931385
    2. 'and' → logprob: -4.634761810302734
    3. ' ' → logprob: -12.509761810302734
    4. '	and' → logprob: -14.384761810302734
    5. '<|end|>' → logprob: -15.009761810302734
    6. ' a' → logprob: -15.134761810302734
    7. '  ' → logprob: -15.759761810302734
    8. '   ' → logprob: -15.759761810302734
    9. ' ' → logprob: -16.009761810302734
    10. ' an' → logprob: -16.134761810302734

Token 52: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0008278522291220725
    2. 'y' → logprob: -7.125827789306641
    3. '	y' → logprob: -11.00082778930664
    4. ' ' → logprob: -12.50082778930664
    5. '<|end|>' → logprob: -13.37582778930664
    6. ' ' → logprob: -13.87582778930664
    7. '<|end|>' → logprob: -15.75082778930664
    8. '‘y' → logprob: -16.62582778930664
    9. '    ' → logprob: -16.87582778930664
    10. '0' → logprob: -17.25082778930664

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008587622083723545
    2. '==' → logprob: -4.883587837219238
    3. '<|end|>' → logprob: -7.133587837219238
    4. ' ' → logprob: -9.008587837219238
    5. '<|end|>' → logprob: -10.508587837219238
    6. ')' → logprob: -11.633587837219238
    7. ' =' → logprob: -11.758587837219238
    8. ')==' → logprob: -12.758587837219238
    9. ' ' → logprob: -12.883587837219238
    10. '```' → logprob: -13.133587837219238

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993754208087921
    2. ' ' → logprob: -2.6949374675750732
    3. '   ' → logprob: -14.444937705993652
    4. ' ' → logprob: -14.819937705993652
    5. '  ' → logprob: -15.069937705993652
    6. '       ' → logprob: -16.944936752319336
    7. '    ' → logprob: -17.694936752319336
    8. '<|end|>' → logprob: -18.069936752319336
    9. '۰' → logprob: -18.319936752319336
    10. '	' → logprob: -18.319936752319336

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -17.25048828125
    4. '  ' → logprob: -17.62548828125
    5. '<|end|>' → logprob: -17.87548828125
    6. '۰' → logprob: -18.93798828125
    7. '<|end|>' → logprob: -19.06298828125
    8. ' ' → logprob: -20.00048828125
    9. '```' → logprob: -20.00048828125
    10. '০' → logprob: -20.50048828125

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.745069499127567e-05
    2. ':
' → logprob: -9.50008773803711
    3. ':return' → logprob: -11.75008773803711
    4. '):' → logprob: -12.87508773803711
    5. ' :' → logprob: -14.25008773803711
    6. '       ' → logprob: -14.25008773803711
    7. '   ' → logprob: -15.62508773803711
    8. '<|end|>' → logprob: -15.75008773803711
    9. ':**' → logprob: -16.50008773803711
    10. ',' → logprob: -16.50008773803711

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5357279777526855
    2. ':' → logprob: -1.2857279777526855
    3. '       ' → logprob: -2.0357279777526855
    4. ':
' → logprob: -5.6607279777526855
    5. '
' → logprob: -6.5357279777526855
    6. '   ' → logprob: -7.0357279777526855
    7. '\n' → logprob: -7.1607279777526855
    8. ':return' → logprob: -7.9107279777526855
    9. '<|end|>' → logprob: -8.660728454589844
    10. ' break' → logprob: -8.660728454589844

Token 58: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09328272938728333
    2. '           ' → logprob: -2.843282699584961
    3. 'break' (adapté à ' break') → logprob: -3.843282699584961
    4. '       ' → logprob: -4.843282699584961
    5. ' return' → logprob: -6.718282699584961
    6. 'return' → logprob: -8.468282699584961
    7. '	break' → logprob: -10.218282699584961
    8. '               ' → logprob: -10.593282699584961
    9. '   ' → logprob: -11.343282699584961
    10. '_break' → logprob: -11.343282699584961

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07833594083786011
    2. '<|end|>' → logprob: -3.078336000442505
    3. '       ' → logprob: -4.078335762023926
    4. '\n' → logprob: -5.078335762023926
    5. '        
' → logprob: -5.578335762023926
    6. ' 
' → logprob: -8.203335762023926
    7. '```' → logprob: -8.203335762023926
    8. '    
' → logprob: -8.328335762023926
    9. '#' → logprob: -8.453335762023926
    10. '<|end|>' → logprob: -8.453335762023926

Token 60: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13209673762321472
    2. '       ' → logprob: -2.257096767425537
    3. '        
' → logprob: -4.882096767425537
    4. '```' → logprob: -5.257096767425537
    5. '<|end|>' → logprob: -6.507096767425537
    6. '\n' → logprob: -6.632096767425537
    7. '    
' → logprob: -7.132096767425537
    8. '   ' → logprob: -7.132096767425537
    9. 'newline' → logprob: -8.007096290588379
    10. 'n' → logprob: -8.007096290588379

Token 61: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31071630120277405
    2. 'ways' → logprob: -2.810716390609741
    3. '        
' → logprob: -3.185716390609741
    4. ' voies' → logprob: -3.310716390609741
    5. '#' (adapté à ' #') → logprob: -4.185716152191162
    6. '   ' → logprob: -4.310716152191162
    7. 'queue' → logprob: -4.435716152191162
    8. 'parking' → logprob: -4.560716152191162
    9. 'voie' → logprob: -4.810716152191162
    10. 'queues' → logprob: -5.060716152191162

Token 62: ' Structure' (ID: 52074)
  Prédit: ' voies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voies' → logprob: -1.433910846710205
    2. ' parking' → logprob: -2.183910846710205
    3. 'ways' → logprob: -2.308910846710205
    4. 'parking' → logprob: -2.683910846710205
    5. '       ' → logprob: -2.808910846710205
    6. 'vo' → logprob: -3.058910846710205
    7. ' queue' → logprob: -3.433910846710205
    8. ' lines' → logprob: -3.558910846710205
    9. ' ways' → logprob: -3.558910846710205
    10. ' queues' → logprob: -3.808910846710205

Token 63: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.901509165763855
    2. '       ' → logprob: -1.776509165763855
    3. ' des' → logprob: -1.901509165763855
    4. '   ' → logprob: -2.5265092849731445
    5. '<|end|>' → logprob: -3.0265092849731445
    6. 'de' → logprob: -3.9015092849731445
    7. ')' → logprob: -4.0265092849731445
    8. ' =' → logprob: -4.1515092849731445
    9. '<|end|>' → logprob: -4.2765092849731445
    10. ' of' → logprob: -4.4015092849731445

Token 64: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3898121118545532
    2. ' gérer' → logprob: -2.2648119926452637
    3. ' les' → logprob: -2.6398119926452637
    4. 's' → logprob: -3.3898119926452637
    5. ' sim' → logprob: -3.8898119926452637
    6. ' représ' → logprob: -4.139811992645264
    7. 'stock' → logprob: -4.139811992645264
    8. ' ' → logprob: -4.764811992645264
    9. ' accueillir' → logprob: -5.014811992645264
    10. '   ' → logprob: -5.014811992645264

Token 65: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0011459336383268237
    2. '   ' → logprob: -7.751145839691162
    3. 'e' → logprob: -8.25114631652832
    4. 'a' → logprob: -9.25114631652832
    5. 'ager' → logprob: -9.87614631652832
    6. 'age' → logprob: -10.37614631652832
    7. 'uler' → logprob: -10.37614631652832
    8. '       ' → logprob: -10.50114631652832
    9. '  ' → logprob: -10.75114631652832
    10. 'u' → logprob: -10.75114631652832

Token 66: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0352400541305542
    2. 's' → logprob: -1.4102400541305542
    3. ' les' → logprob: -1.5352400541305542
    4. '<|end|>' → logprob: -2.6602401733398438
    5. ' des' → logprob: -3.1602401733398438
    6. 'les' → logprob: -3.6602401733398438
    7. 'es' → logprob: -4.410240173339844
    8. '[]' → logprob: -5.035240173339844
    9. '<|end|>' → logprob: -5.910240173339844
    10. ' l' → logprob: -6.035240173339844

Token 67: ' connex' (ID: 154480)
  Prédit: ' voies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voies' → logprob: -0.9236496090888977
    2. 'graph' → logprob: -1.923649549484253
    3. ' graph' → logprob: -2.298649549484253
    4. 'vo' → logprob: -2.673649549484253
    5. 'é' → logprob: -3.173649549484253
    6. ' connections' → logprob: -3.798649549484253
    7. 'connections' → logprob: -4.048649787902832
    8. 'd' → logprob: -4.173649787902832
    9. ' échanges' → logprob: -4.298649787902832
    10. ' chemins' → logprob: -4.423649787902832

Token 68: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0018634299049153924
    2. 'i' → logprob: -6.876863479614258
    3. 'ion' → logprob: -7.876863479614258
    4. 't' → logprob: -8.501863479614258
    5. 'ections' → logprob: -8.626863479614258
    6. 'es' → logprob: -10.876863479614258
    7. 'e' → logprob: -10.876863479614258
    8. '```' → logprob: -12.126863479614258
    9. 'ctions' → logprob: -12.626863479614258
    10. 'ations' → logprob: -12.626863479614258

Token 69: ' entre' (ID: 3853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8426523208618164
    2. ' :' → logprob: -2.3426523208618164
    3. ' des' → logprob: -2.4676523208618164
    4. ' ' → logprob: -2.5926523208618164
    5. ' parking' → logprob: -2.5926523208618164
    6. ':' → logprob: -2.8426523208618164
    7. ' adjacency' → logprob: -3.0926523208618164
    8. ' voies' → logprob: -3.4676523208618164
    9. ' entre' → logprob: -3.5926523208618164
    10. ',' → logprob: -3.5926523208618164

Token 70: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21396787464618683
    2. ' voies' → logprob: -1.7139679193496704
    3. 'les' → logprob: -4.713967800140381
    4. ' pistes' → logprob: -7.213967800140381
    5. ' parking' → logprob: -7.463967800140381
    6. '<|end|>' → logprob: -7.463967800140381
    7. ' espaces' → logprob: -7.588967800140381
    8. 's' → logprob: -8.463968276977539
    9. ' routes' → logprob: -8.963968276977539
    10. ' ' → logprob: -9.088968276977539

Token 71: ' extr' (ID: 15674)
  Prédit: ' voies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voies' → logprob: -0.02332141250371933
    2. 'vo' → logprob: -4.273321628570557
    3. ' pistes' → logprob: -6.398321628570557
    4. ' parking' → logprob: -6.773321628570557
    5. 'park' → logprob: -7.148321628570557
    6. 'parking' → logprob: -7.148321628570557
    7. 'voie' → logprob: -7.523321628570557
    8. ' ' → logprob: -7.648321628570557
    9. ' stations' → logprob: -8.023321151733398
    10. '   ' → logprob: -8.398321151733398

Token 72: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006351296324282885
    2. 'ê' → logprob: -6.381351470947266
    3. 'ém' → logprob: -6.506351470947266
    4. 'êmes' → logprob: -6.631351470947266
    5. 'ités' → logprob: -7.631351470947266
    6. 'èmes' → logprob: -7.756351470947266
    7. 'és' → logprob: -8.131351470947266
    8. 'è' → logprob: -9.381351470947266
    9. '```' → logprob: -9.381351470947266
    10. 'em' → logprob: -9.506351470947266

Token 73: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.5490151047706604
    2. 'm' → logprob: -1.2990150451660156
    3. 'mits' → logprob: -2.0490150451660156
    4. 'mites' → logprob: -3.9240150451660156
    5. 'missions' → logprob: -8.549015045166016
    6. '```' → logprob: -8.549015045166016
    7. 'mite' → logprob: -9.174015045166016
    8. 'mitt' → logprob: -9.424015045166016
    9. 'mis' → logprob: -9.799015045166016
    10. 'м' → logprob: -10.299015045166016

Token 74: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16492335498332977
    2. 'és' → logprob: -1.9149233102798462
    3. 'es' → logprob: -5.414923191070557
    4. '́s' → logprob: -9.164923667907715
    5. 'ss' → logprob: -9.664923667907715
    6. 'é' → logprob: -10.789923667907715
    7. 'as' → logprob: -11.914923667907715
    8. 'des' → logprob: -12.414923667907715
    9. 'cs' → logprob: -12.539923667907715
    10. '```' → logprob: -12.664923667907715

Token 75: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9837528467178345
    2. ' des' → logprob: -1.9837528467178345
    3. 'des' → logprob: -2.608752727508545
    4. '[' → logprob: -2.733752727508545
    5. 'edges' → logprob: -2.983752727508545
    6. 'd' → logprob: -3.483752727508545
    7. 'adj' → logprob: -3.483752727508545
    8. 'parking' → logprob: -3.608752727508545
    9. 'de' → logprob: -3.858752727508545
    10. '       ' → logprob: -4.233752727508545

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20371045172214508
    2. 'connections' → logprob: -3.3287105560302734
    3. ' edges' → logprob: -3.4537105560302734
    4. ' ends' → logprob: -3.8287105560302734
    5. 's' → logprob: -3.9537105560302734
    6. 'edges' → logprob: -4.078710556030273
    7. ' connections' → logprob: -4.203710556030273
    8. '   ' → logprob: -4.953710556030273
    9. ' parking' → logprob: -5.078710556030273
    10. ' lines' → logprob: -5.328710556030273

Token 77: ' #' (ID: 1069)
  Prédit: ' connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connections' → logprob: -1.3139612674713135
    2. ' edges' → logprob: -1.5639612674713135
    3. ' graph' → logprob: -1.8139612674713135
    4. 'connections' → logprob: -2.3139612674713135
    5. ' ends' → logprob: -2.4389612674713135
    6. 'edges' → logprob: -3.1889612674713135
    7. ' parking' → logprob: -3.5639612674713135
    8. 'ends' → logprob: -3.6889612674713135
    9. 'graph' → logprob: -3.8139612674713135
    10. ' endpoints' → logprob: -5.438961029052734

Token 78: ' Chaque' (ID: 94758)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.8359900116920471
    2. 'graph' → logprob: -1.8359899520874023
    3. 'edges' → logprob: -1.8359899520874023
    4. 'ends' → logprob: -2.5859899520874023
    5. ' connections' → logprob: -2.9609899520874023
    6. ' graph' → logprob: -3.7109899520874023
    7. 'conn' → logprob: -4.085989952087402
    8. ' edges' → logprob: -4.335989952087402
    9. 'adj' → logprob: -4.460989952087402
    10. 'ex' → logprob: -4.835989952087402

Token 79: ' extr' (ID: 15674)
  Prédit: ' voie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voie' → logprob: -0.35575932264328003
    2. 'voie' → logprob: -1.7307593822479248
    3. 'x' → logprob: -3.480759382247925
    4. 'vo' → logprob: -3.855759382247925
    5. ' voies' → logprob: -4.105759143829346
    6. ' extr' → logprob: -4.230759143829346
    7. ' x' → logprob: -5.230759143829346
    8. 'ext' → logprob: -5.605759143829346
    9. '```' → logprob: -6.230759143829346
    10. 'entrée' → logprob: -6.480759143829346

Token 80: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.011922130361199379
    2. 'ê' → logprob: -5.011922359466553
    3. 'ém' → logprob: -5.761922359466553
    4. 'ême' → logprob: -6.886922359466553
    5. 'imité' → logprob: -8.511921882629395
    6. 'êm' → logprob: -8.886921882629395
    7. 'ié' → logprob: -9.136921882629395
    8. 'êt' → logprob: -9.511921882629395
    9. 'émie' → logprob: -9.761921882629395
    10. 'èm' → logprob: -9.761921882629395

Token 81: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.009043974801898003
    2. 'm' → logprob: -5.259044170379639
    3. 'mite' → logprob: -5.634044170379639
    4. 'mé' → logprob: -9.75904369354248
    5. 'ité' → logprob: -10.25904369354248
    6. 'mitter' → logprob: -10.50904369354248
    7. 'mitt' → logprob: -10.75904369354248
    8. 'té' → logprob: -10.75904369354248
    9. 'mi' → logprob: -11.50904369354248
    10. 'mie' → logprob: -11.63404369354248

Token 82: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.013570163398981094
    2. 'e' → logprob: -4.763570308685303
    3. 'y' → logprob: -5.638570308685303
    4. 'és' → logprob: -6.888570308685303
    5. 'ité' → logprob: -9.513569831848145
    6. 'al' → logprob: -9.888569831848145
    7. 'ié' → logprob: -10.013569831848145
    8. 'à' → logprob: -10.388569831848145
    9. 'a' → logprob: -10.763569831848145
    10. 'ée' → logprob: -11.263569831848145

Token 83: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.018884539604187
    2. 's' → logprob: -1.393884539604187
    3. ' is' → logprob: -1.893884539604187
    4. ' des' → logprob: -2.5188846588134766
    5. ' de' → logprob: -3.6438846588134766
    6. ':' → logprob: -4.018884658813477
    7. 'a' → logprob: -4.018884658813477
    8. 'de' → logprob: -4.018884658813477
    9. ' a' → logprob: -4.518884658813477
    10. '<|end|>' → logprob: -4.768884658813477

Token 84: ' ident' (ID: 3951)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5364580154418945
    2. ' représent' → logprob: -1.7864580154418945
    3. ' une' → logprob: -2.6614580154418945
    4. ' ident' → logprob: -2.9114580154418945
    5. 'un' → logprob: -3.1614580154418945
    6. 'ident' → logprob: -3.5364580154418945
    7. 'une' → logprob: -4.4114580154418945
    8. 're' → logprob: -5.1614580154418945
    9. ' identifié' → logprob: -5.2864580154418945
    10. ' represented' → logprob: -5.5364580154418945

Token 85: 'ifiée' (ID: 88506)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.15447261929512024
    2. 'f' → logprob: -2.029472589492798
    3. 'ifié' → logprob: -5.779472827911377
    4. 'ifiée' → logprob: -6.154472827911377
    5. 'ifi' → logprob: -6.279472827911377
    6. 'ifiant' → logprob: -7.279472827911377
    7. '```' → logprob: -8.029472351074219
    8. '#' → logprob: -8.029472351074219
    9. 'ée' → logprob: -8.154472351074219
    10. 'ifie' → logprob: -8.154472351074219

Token 86: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.015129372477531433
    2. 'par' → logprob: -4.390129566192627
    3. ' ' → logprob: -6.640129566192627
    4. '<|end|>' → logprob: -7.640129566192627
    5. 'e' → logprob: -8.765129089355469
    6. '```' → logprob: -8.890129089355469
    7. ')' → logprob: -9.140129089355469
    8. ' by' → logprob: -9.390129089355469
    9. '.' → logprob: -9.765129089355469
    10. '  ' → logprob: -10.265129089355469

Token 87: ' (' (ID: 350)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2975643277168274
    2. 'un' → logprob: -2.0475642681121826
    3. 'a' → logprob: -3.1725642681121826
    4. ''un' → logprob: -3.1725642681121826
    5. 'une' → logprob: -4.797564506530762
    6. ' une' → logprob: -5.047564506530762
    7. ' (' → logprob: -5.422564506530762
    8. '2' → logprob: -5.422564506530762
    9. ' a' → logprob: -5.672564506530762
    10. ' ' → logprob: -6.047564506530762

Token 88: 'ligne' (ID: 94660)
  Prédit: 'voie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.15943430364131927
    2. 'vo' → logprob: -2.9094343185424805
    3. ' voie' → logprob: -3.0344343185424805
    4. 'parking' → logprob: -4.4094343185424805
    5. ')' → logprob: -4.6594343185424805
    6. ' parking' → logprob: -6.0344343185424805
    7. 'position' → logprob: -6.7219343185424805
    8. 'file' → logprob: -6.9094343185424805
    9. 'type' → logprob: -6.9719343185424805
    10. ''' → logprob: -6.9719343185424805

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09968479722738266
    2. '_id' → logprob: -3.349684715270996
    3. '_index' → logprob: -3.724684715270996
    4. '_num' → logprob: -4.224684715270996
    5. '_' → logprob: -5.099684715270996
    6. '_de' → logprob: -5.474684715270996
    7. '_l' → logprob: -6.599684715270996
    8. '_number' → logprob: -6.599684715270996
    9. '_,' → logprob: -6.849684715270996
    10. 's' → logprob: -7.224684715270996

Token 90: ' côté' (ID: 33533)
  Prédit: ' extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extr' → logprob: -0.6223195195198059
    2. ' position' → logprob: -1.2473194599151611
    3. 'position' → logprob: -2.872319459915161
    4. 'voie' → logprob: -3.872319459915161
    5. ' extrem' → logprob: -4.12231969833374
    6. 'extr' → logprob: -4.49731969833374
    7. ' endpoint' → logprob: -4.74731969833374
    8. 'ext' → logprob: -4.74731969833374
    9. 'vo' → logprob: -5.12231969833374
    10. ' voie' → logprob: -5.24731969833374

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008619115105830133
    2. ',' → logprob: -7.500862121582031
    3. '1' → logprob: -10.250862121582031
    4. '_d' → logprob: -10.375862121582031
    5. '_side' → logprob: -10.375862121582031
    6. '_' → logprob: -10.500862121582031
    7. 'd' → logprob: -10.750862121582031
    8. 'side' → logprob: -11.000862121582031
    9. ' gauche' → logprob: -11.375862121582031
    10. ' )' → logprob: -11.500862121582031

Token 92: ' où' (ID: 15113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7009642124176025
    2. ',' → logprob: -2.0759642124176025
    3. '       ' → logprob: -2.0759642124176025
    4. '<|end|>' → logprob: -2.3259642124176025
    5. ' :' → logprob: -2.7009642124176025
    6. 's' → logprob: -4.075963973999023
    7. ')' → logprob: -4.200963973999023
    8. '   ' → logprob: -4.575963973999023
    9. '```' → logprob: -4.700963973999023
    10. '):' → logprob: -5.450963973999023

Token 93: ' côté' (ID: 33533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6189823150634766
    2. ' côté' → logprob: -1.6189823150634766
    3. 'c' → logprob: -2.1189823150634766
    4. ' le' → logprob: -3.2439823150634766
    5. '0' → logprob: -4.118982315063477
    6. ' side' → logprob: -4.493982315063477
    7. ' '' → logprob: -4.618982315063477
    8. 'side' → logprob: -4.743982315063477
    9. '<|end|>' → logprob: -4.743982315063477
    10. ' c' → logprob: -4.868982315063477

Token 94: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3115442395210266
    2. '=' → logprob: -1.5615441799163818
    3. ' is' → logprob: -3.936544179916382
    4. '<|end|>' → logprob: -3.936544179916382
    5. 's' → logprob: -4.811544418334961
    6. ' ' → logprob: -4.936544418334961
    7. ')' → logprob: -6.561544418334961
    8. ' can' → logprob: -6.936544418334961
    9. '0' → logprob: -8.561544418334961
    10. ' est' → logprob: -8.936544418334961

Token 95: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.471561074256897
    2. ' ' → logprob: -1.596561074256897
    3. ' '' → logprob: -1.971561074256897
    4. ' either' → logprob: -4.471560955047607
    5. ' "' → logprob: -4.721560955047607
    6. ''' → logprob: -5.346560955047607
    7. ' gauche' → logprob: -6.346560955047607
    8. ' soit' → logprob: -6.471560955047607
    9. '1' → logprob: -6.596560955047607
    10. '"' → logprob: -6.846560955047607

Token 96: 'W' (ID: 54)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.27899226546287537
    2. 'D' → logprob: -2.778992176055908
    3. 'g' → logprob: -3.153992176055908
    4. 'A' → logprob: -3.653992176055908
    5. 'H' → logprob: -3.778992176055908
    6. 'L' → logprob: -4.278992176055908
    7. 'E' → logprob: -4.403992176055908
    8. 'B' → logprob: -4.528992176055908
    9. 'd' → logprob: -4.653992176055908
    10. 'O' → logprob: -5.278992176055908

Token 97: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08447921276092529
    2. '')' → logprob: -2.584479331970215
    3. ')' → logprob: -6.209479331970215
    4. ' or' → logprob: -6.959479331970215
    5. 'e' → logprob: -7.334479331970215
    6. ''''' → logprob: -8.334479331970215
    7. ''ou' → logprob: -8.334479331970215
    8. 'est' → logprob: -8.584479331970215
    9. ''or' → logprob: -8.834479331970215
    10. ' ou' → logprob: -8.959479331970215

Token 98: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5948066711425781
    2. ' ou' → logprob: -1.4698066711425781
    3. ')' → logprob: -1.5948066711425781
    4. '<|end|>' → logprob: -5.094806671142578
    5. 'or' → logprob: -5.969806671142578
    6. ' )' → logprob: -6.344806671142578
    7. ',' → logprob: -6.594806671142578
    8. 'ou' → logprob: -6.844806671142578
    9. ''' → logprob: -7.344806671142578
    10. '')' → logprob: -7.594806671142578

Token 99: ' '' (ID: 461)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.45756417512893677
    2. ''E' → logprob: -1.207564115524292
    3. ' E' → logprob: -3.582564115524292
    4. ' '' → logprob: -3.582564115524292
    5. ''' → logprob: -4.582564353942871
    6. '"E' → logprob: -7.082564353942871
    7. ' ' → logprob: -7.457564353942871
    8. ''e' → logprob: -8.082564353942871
    9. '’E' → logprob: -8.457564353942871
    10. '`' → logprob: -10.082564353942871

Token 100: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0001329791557509452
    2. ''E' → logprob: -10.00013256072998
    3. 'S' → logprob: -10.12513256072998
    4. ' E' → logprob: -11.37513256072998
    5. ''' → logprob: -11.87513256072998
    6. 'L' → logprob: -12.37513256072998
    7. 'C' → logprob: -12.37513256072998
    8. 'D' → logprob: -12.75013256072998
    9. 'V' → logprob: -13.12513256072998
    10. '"E' → logprob: -13.37513256072998

Token 101: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16211651265621185
    2. ''' → logprob: -2.662116527557373
    3. ')' → logprob: -3.162116527557373
    4. ')'' → logprob: -3.287116527557373
    5. '')"' → logprob: -9.412116050720215
    6. '')
' → logprob: -10.287116050720215
    7. ' )' → logprob: -11.912116050720215
    8. '```' → logprob: -12.287116050720215
    9. '")' → logprob: -12.787116050720215
    10. ' ')'' → logprob: -12.912116050720215

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019388694781810045
    2. '<|end|>' → logprob: -6.626938819885254
    3. '   ' → logprob: -8.751938819885254
    4. '<|end|>' → logprob: -9.376938819885254
    5. ')' → logprob: -9.501938819885254
    6. '        
' → logprob: -9.501938819885254
    7. ',' → logprob: -9.876938819885254
    8. '      ' → logprob: -10.376938819885254
    9. 'n' → logprob: -11.001938819885254
    10. '```' → logprob: -11.126938819885254

Token 103: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' (adapté à ' connections') → logprob: -0.8751623630523682
    2. 'edges' → logprob: -1.3751623630523682
    3. 'graph' → logprob: -2.250162363052368
    4. ' connections' → logprob: -2.875162363052368
    5. ' edges' → logprob: -3.000162363052368
    6. 'conn' → logprob: -3.500162363052368
    7. '   ' → logprob: -4.000162124633789
    8. '       ' → logprob: -4.250162124633789
    9. ' graph' → logprob: -4.375162124633789
    10. 'ends' → logprob: -4.750162124633789

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630099281668663
    2. '=' → logprob: -3.6513009071350098
    3. '=[]' → logprob: -15.401301383972168
    4. '[' → logprob: -15.651301383972168
    5. '   ' → logprob: -16.15130043029785
    6. ' ' → logprob: -16.27630043029785
    7. ')' → logprob: -17.02630043029785
    8. ']' → logprob: -17.27630043029785
    9. '    ' → logprob: -17.90130043029785
    10. 's' → logprob: -18.02630043029785

Token 105: ' {' (ID: 354)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.7796506285667419
    2. '{}' → logprob: -0.7796506285667419
    3. ' defaultdict' → logprob: -3.0296506881713867
    4. ' {' → logprob: -4.529650688171387
    5. 'default' → logprob: -4.904650688171387
    6. '{' → logprob: -5.779650688171387
    7. ' dict' → logprob: -5.779650688171387
    8. ' []' → logprob: -5.904650688171387
    9. ' [' → logprob: -6.154650688171387
    10. 'dict' → logprob: -6.279650688171387

Token 106: ' (' (ID: 350)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.22369234263896942
    2. '(i' → logprob: -3.2236924171447754
    3. '(line' → logprob: -3.3486924171447754
    4. '()}' → logprob: -3.3486924171447754
    5. ' (' → logprob: -3.9736924171447754
    6. '(' → logprob: -4.223692417144775
    7. '(l' → logprob: -4.223692417144775
    8. '   ' → logprob: -4.348692417144775
    9. '(k' → logprob: -4.473692417144775
    10. '       ' → logprob: -5.473692417144775

Token 107: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16777414083480835
    2. '(i' → logprob: -1.9177742004394531
    3. ')' → logprob: -6.167774200439453
    4. '(line' → logprob: -6.917774200439453
    5. 'line' → logprob: -6.917774200439453
    6. ' (' → logprob: -7.042774200439453
    7. '(' → logprob: -7.042774200439453
    8. 'ligne' → logprob: -7.792774200439453
    9. '0' → logprob: -8.292774200439453
    10. ' i' → logprob: -8.667774200439453

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004690418136306107
    2. ' ,' → logprob: -8.375469207763672
    3. ')' → logprob: -9.750469207763672
    4. ',W' → logprob: -9.750469207763672
    5. ','' → logprob: -10.250469207763672
    6. '('' → logprob: -11.125469207763672
    7. 'W' → logprob: -11.250469207763672
    8. '(' → logprob: -11.750469207763672
    9. ',i' → logprob: -12.250469207763672
    10. '   ' → logprob: -12.250469207763672

Token 109: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4599602520465851
    2. ' '' → logprob: -1.2099602222442627
    3. ''E' → logprob: -2.7099602222442627
    4. ')' → logprob: -6.834960460662842
    5. '"W' → logprob: -6.959960460662842
    6. '')' → logprob: -7.209960460662842
    7. ''I' → logprob: -8.834959983825684
    8. ' ' → logprob: -8.959959983825684
    9. ''w' → logprob: -8.959959983825684
    10. ''S' → logprob: -9.084959983825684

Token 110: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0008217801805585623
    2. 'E' → logprob: -7.125821590423584
    3. 'O' → logprob: -11.750822067260742
    4. 'N' → logprob: -12.625822067260742
    5. ')' → logprob: -13.875822067260742
    6. ' W' → logprob: -14.125822067260742
    7. 'w' → logprob: -14.125822067260742
    8. '')' → logprob: -14.125822067260742
    9. 'I' → logprob: -14.625822067260742
    10. 'A' → logprob: -14.625822067260742

Token 111: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.07390899956226349
    2. '')' → logprob: -2.948909044265747
    3. '):' → logprob: -4.573908805847168
    4. ')' → logprob: -4.823908805847168
    5. ''' → logprob: -8.573908805847168
    6. ')':' → logprob: -8.698908805847168
    7. '':' → logprob: -9.823908805847168
    8. ' ):' → logprob: -11.323908805847168
    9. ''),' → logprob: -11.448908805847168
    10. ':' → logprob: -11.698908805847168

Token 112: ' [],' (ID: 22188)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.7241992354393005
    2. '[]' → logprob: -0.9741992354393005
    3. ' []' → logprob: -2.4741992950439453
    4. ' deque' → logprob: -3.4741992950439453
    5. 'set' → logprob: -4.099199295043945
    6. ' set' → logprob: -5.349199295043945
    7. '[]}' → logprob: -7.099199295043945
    8. ' None' → logprob: -9.099199295043945
    9. 'None' → logprob: -9.224199295043945
    10. ' ' → logprob: -9.849199295043945

Token 113: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0015637811738997698
    2. '(i' → logprob: -6.501563549041748
    3. ' ' → logprob: -10.876564025878906
    4. '<|end|>' → logprob: -11.376564025878906
    5. '        ' → logprob: -11.751564025878906
    6. '(' → logprob: -11.751564025878906
    7. '   ' → logprob: -12.376564025878906
    8. '       ' → logprob: -13.251564025878906
    9. '          ' → logprob: -13.501564025878906
    10. '    ' → logprob: -13.626564025878906

Token 114: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006304710987024009
    2. ' i' → logprob: -7.3756303787231445
    3. '   ' → logprob: -13.000630378723145
    4. '(i' → logprob: -14.875630378723145
    5. ' ' → logprob: -15.125630378723145
    6. '<|end|>' → logprob: -15.250630378723145
    7. '  ' → logprob: -15.375630378723145
    8. '	i' → logprob: -15.875630378723145
    9. '
' → logprob: -15.875630378723145
    10. '<|end|>' → logprob: -16.12563133239746

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015609274851158261
    2. ' ,' → logprob: -7.376561164855957
    3. ')' → logprob: -7.876561164855957
    4. ' in' → logprob: -8.126561164855957
    5. 'for' → logprob: -8.751561164855957
    6. ' for' → logprob: -10.376561164855957
    7. 'in' → logprob: -10.501561164855957
    8. ',i' → logprob: -10.626561164855957
    9. ','' → logprob: -12.376561164855957
    10. 'i' → logprob: -12.751561164855957

Token 116: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.07065602391958237
    2. ''E' → logprob: -3.3206560611724854
    3. ''' → logprob: -3.4456560611724854
    4. ' ' → logprob: -8.945655822753906
    5. ''i' → logprob: -10.820655822753906
    6. ''É' → logprob: -11.695655822753906
    7. ''S' → logprob: -11.820655822753906
    8. ''I' → logprob: -12.070655822753906
    9. ''e' → logprob: -12.195655822753906
    10. '  ' → logprob: -12.445655822753906

Token 117: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002488618716597557
    2. ''E' → logprob: -6.002488613128662
    3. ' E' → logprob: -11.62748908996582
    4. ''' → logprob: -13.50248908996582
    5. ')' → logprob: -14.00248908996582
    6. '"E' → logprob: -14.50248908996582
    7. ' '' → logprob: -15.00248908996582
    8. ''e' → logprob: -15.25248908996582
    9. ' ' → logprob: -15.37748908996582
    10. '’E' → logprob: -15.75248908996582

Token 118: ''):' (ID: 83830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6984239220619202
    2. '):' → logprob: -0.6984239220619202
    3. ''):' → logprob: -5.698423862457275
    4. ' ):' → logprob: -6.698423862457275
    5. '')' → logprob: -7.698423862457275
    6. ' )' → logprob: -9.198424339294434
    7. '):(' → logprob: -10.448424339294434
    8. '   ' → logprob: -10.823424339294434
    9. ')':' → logprob: -10.948424339294434
    10. '}' → logprob: -11.073424339294434

Token 119: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.501758873462677
    2. ' []' → logprob: -1.0017588138580322
    3. ' for' → logprob: -4.001759052276611
    4. '[]}' → logprob: -5.626759052276611
    5. 'for' → logprob: -5.751759052276611
    6. ' [])' → logprob: -7.751759052276611
    7. ' ' → logprob: -8.126758575439453
    8. '}' → logprob: -8.126758575439453
    9. ' i' → logprob: -8.376758575439453
    10. ' (' → logprob: -8.376758575439453

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0010465048253536224
    2. 'for' → logprob: -6.876046657562256
    3. '	for' → logprob: -12.001046180725098
    4. ' ' → logprob: -12.751046180725098
    5. '   ' → logprob: -12.876046180725098
    6. '       ' → logprob: -13.626046180725098
    7. '    ' → logprob: -14.376046180725098
    8. '        ' → logprob: -15.626046180725098
    9. '  ' → logprob: -16.376047134399414
    10. '           ' → logprob: -17.501047134399414

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005261510610580444
    2. 'i' → logprob: -5.255261421203613
    3. ' range' → logprob: -11.255261421203613
    4. '	i' → logprob: -11.880261421203613
    5. ' ' → logprob: -12.380261421203613
    6. 'range' → logprob: -13.505261421203613
    7. ' ' → logprob: -13.755261421203613
    8. '  ' → logprob: -14.755261421203613
    9. '```' → logprob: -15.505261421203613
    10. ' in' → logprob: -15.755261421203613

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026309238746762276
    2. 'in' → logprob: -3.6513092517852783
    3. 'range' → logprob: -12.6513090133667
    4. '<|end|>' → logprob: -13.4013090133667
    5. 'n' → logprob: -14.2763090133667
    6. ' ' → logprob: -14.2763090133667
    7. 'import' → logprob: -14.4013090133667
    8. 'In' → logprob: -14.5263090133667
    9. ')' → logprob: -15.0263090133667
    10. 'd' → logprob: -15.5263090133667

Token 123: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804183006286621
    2. 'range' → logprob: -3.288041830062866
    3. '(range' → logprob: -15.538042068481445
    4. '	range' → logprob: -15.913042068481445
    5. 'Range' → logprob: -17.913042068481445
    6. 'rang' → logprob: -18.788042068481445
    7. '_range' → logprob: -19.038042068481445
    8. '```' → logprob: -19.288042068481445
    9. ' ' → logprob: -19.538042068481445
    10. ' xrange' → logprob: -19.663042068481445

Token 124: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193139910697937
    2. '(x' → logprob: -1.5019314289093018
    3. '1' → logprob: -13.876931190490723
    4. ' (' → logprob: -14.001931190490723
    5. '(
' → logprob: -15.376931190490723
    6. ' ' → logprob: -15.876931190490723
    7. 'x' → logprob: -16.25193214416504
    8. '```' → logprob: -16.87693214416504
    9. ')' → logprob: -17.12693214416504
    10. '   ' → logprob: -17.50193214416504

Token 125: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.14427633583545685
    2. ')' → logprob: -2.0192763805389404
    3. '}' → logprob: -6.769276142120361
    4. ' )' → logprob: -8.76927661895752
    5. '+' → logprob: -9.39427661895752
    6. ');}' → logprob: -9.64427661895752
    7. '   ' → logprob: -10.01927661895752
    8. '       ' → logprob: -10.39427661895752
    9. '):' → logprob: -11.14427661895752
    10. ')},' → logprob: -12.01927661895752

Token 126: '       ' (ID: 309)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.090640127658844
    2. '<|end|>' → logprob: -2.840640068054199
    3. '       ' → logprob: -4.090640068054199
    4. '<|end|>' → logprob: -5.590640068054199
    5. ')' → logprob: -6.215640068054199
    6. ',' → logprob: -6.340640068054199
    7. ' }' → logprob: -6.715640068054199
    8. '   ' → logprob: -7.340640068054199
    9. ']' → logprob: -7.340640068054199
    10. 'for' → logprob: -8.2156400680542

Token 127: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08052454143762589
    2. ' i' → logprob: -3.205524444580078
    3. '_' → logprob: -3.455524444580078
    4. ' range' → logprob: -5.830524444580078
    5. 'i' → logprob: -6.830524444580078
    6. ' ' → logprob: -8.080524444580078
    7. ' y' → logprob: -8.205524444580078
    8. ' in' → logprob: -8.330524444580078
    9. 'range' → logprob: -8.955524444580078
    10. '_i' → logprob: -9.205524444580078

Token 129: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932971477508545
    2. ' in' → logprob: -0.6932971477508545
    3. 'import' → logprob: -10.193297386169434
    4. 'n' → logprob: -10.693297386169434
    5. 'range' → logprob: -10.943297386169434
    6. ' ' → logprob: -11.068297386169434
    7. '  ' → logprob: -11.568297386169434
    8. '```' → logprob: -11.693297386169434
    9. 'x' → logprob: -11.943297386169434
    10. 'i' → logprob: -12.318297386169434

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031821096781641245
    2. ' range' → logprob: -5.7531819343566895
    3. '(range' → logprob: -12.878182411193848
    4. 'ange' → logprob: -14.253182411193848
    5. ')' → logprob: -14.753182411193848
    6. '	range' → logprob: -14.878182411193848
    7. ' ' → logprob: -16.37818145751953
    8. 'x' → logprob: -16.50318145751953
    9. '[' → logprob: -17.00318145751953
    10. 'r' → logprob: -17.12818145751953

Token 131: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00023977462842594832
    2. '(' → logprob: -8.750239372253418
    3. ' (' → logprob: -9.875239372253418
    4. '(x' → logprob: -10.875239372253418
    5. 'y' → logprob: -11.750239372253418
    6. ' y' → logprob: -12.875239372253418
    7. ' ' → logprob: -15.875239372253418
    8. '   ' → logprob: -16.250240325927734
    9. '	y' → logprob: -16.750240325927734
    10. ')' → logprob: -16.875240325927734

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006084868218749762
    2. '):
' → logprob: -5.38108491897583
    3. ':' → logprob: -6.63108491897583
    4. ' ):' → logprob: -9.506084442138672
    5. ')' → logprob: -9.881084442138672
    6. '):
' → logprob: -12.006084442138672
    7. '       ' → logprob: -13.006084442138672
    8. '   ' → logprob: -13.006084442138672
    9. '):

' → logprob: -13.506084442138672
    10. ' :' → logprob: -13.756084442138672

Token 133: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9751536250114441
    2. '           ' → logprob: -1.6001536846160889
    3. '<|end|>' → logprob: -1.6001536846160889
    4. '   ' → logprob: -2.600153684616089
    5. ',' → logprob: -3.475153684616089
    6. ' line' → logprob: -3.975153684616089
    7. ':' → logprob: -4.10015344619751
    8. ':
' → logprob: -4.22515344619751
    9. '<|end|>' → logprob: -4.35015344619751
    10. ' lines' → logprob: -4.85015344619751

Token 134: ' p' (ID: 275)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.0372676849365234
    2. ' a' → logprob: -1.7872676849365234
    3. ' u' → logprob: -1.7872676849365234
    4. 'a' → logprob: -1.9122676849365234
    5. 'u' → logprob: -2.2872676849365234
    6. 'line' → logprob: -4.037267684936523
    7. ' l' → logprob: -4.287267684936523
    8. 'l' → logprob: -4.662267684936523
    9. ' ligne' → logprob: -5.037267684936523
    10. 'ligne' → logprob: -5.537267684936523

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05773337185382843
    2. '1' → logprob: -4.307733535766602
    3. 'p' → logprob: -4.432733535766602
    4. ' =' → logprob: -5.182733535766602
    5. ',p' → logprob: -5.432733535766602
    6. ' ,' → logprob: -5.557733535766602
    7. 'iece' → logprob: -5.807733535766602
    8. '=' → logprob: -6.057733535766602
    9. ' p' → logprob: -6.182733535766602
    10. 'r' → logprob: -6.557733535766602

Token 136: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.016927525401115417
    2. ' q' → logprob: -4.391927719116211
    3. 'l' → logprob: -6.516927719116211
    4. 'c' → logprob: -7.391927719116211
    5. 'a' → logprob: -7.391927719116211
    6. 's' → logprob: -7.641927719116211
    7. 'w' → logprob: -8.641927719116211
    8. 'v' → logprob: -8.766927719116211
    9. 'p' → logprob: -9.016927719116211
    10. 'd' → logprob: -9.641927719116211

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34875744581222534
    2. ' =' → logprob: -1.2237575054168701
    3. ',' → logprob: -8.47375774383545
    4. ')' → logprob: -9.84875774383545
    5. 'p' → logprob: -11.22375774383545
    6. ' ' → logprob: -11.47375774383545
    7. '<|end|>' → logprob: -11.59875774383545
    8. ')=' → logprob: -12.34875774383545
    9. '=int' → logprob: -12.97375774383545
    10. '  ' → logprob: -13.59875774383545

Token 138: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03371682018041611
    2. 'map' → logprob: -3.408716917037964
    3. ' ' → logprob: -10.033717155456543
    4. '	map' → logprob: -11.658717155456543
    5. ' input' → logprob: -12.283717155456543
    6. '  ' → logprob: -12.408717155456543
    7. '    ' → logprob: -13.096217155456543
    8. '   ' → logprob: -13.408717155456543
    9. 'input' → logprob: -13.533717155456543
    10. 'm' → logprob: -14.721217155456543

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.702754474943504e-05
    2. '()' → logprob: -10.25003719329834
    3. ' ().' → logprob: -13.87503719329834
    4. '.' → logprob: -16.000036239624023
    5. '.split' → logprob: -16.125036239624023
    6. '(' → logprob: -16.125036239624023
    7. '()).' → logprob: -16.250036239624023
    8. ')' → logprob: -17.000036239624023
    9. ').' → logprob: -17.250036239624023
    10. '=' → logprob: -17.875036239624023

Token 140: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0206720617134124e-05
    2. 'strip' → logprob: -11.50001049041748
    3. ' split' → logprob: -16.750009536743164
    4. 'rstrip' → logprob: -18.500009536743164
    5. 'spl' → logprob: -18.875009536743164
    6. '(split' → logprob: -19.875009536743164
    7. 'plit' → logprob: -20.750009536743164
    8. '.split' → logprob: -20.875009536743164
    9. '_split' → logprob: -21.000009536743164
    10. 'replace' → logprob: -23.125009536743164

Token 141: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004340629559010267
    2. '(' → logprob: -5.504340648651123
    3. '()
' → logprob: -9.129340171813965
    4. ')' → logprob: -10.129340171813965
    5. '())' → logprob: -10.504340171813965
    6. '(),' → logprob: -10.629340171813965
    7. '()]' → logprob: -11.004340171813965
    8. '('' → logprob: -11.129340171813965
    9. '(',' → logprob: -12.254340171813965
    10. ',' → logprob: -12.254340171813965

Token 142: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6642217636108398
    2. 'p' → logprob: -1.5392217636108398
    3. '           ' → logprob: -1.5392217636108398
    4. '<|end|>' → logprob: -4.03922176361084
    5. 'connections' → logprob: -4.16422176361084
    6. ' connections' → logprob: -4.41422176361084
    7. '       ' → logprob: -6.16422176361084
    8. '
' → logprob: -6.28922176361084
    9. ')' → logprob: -6.53922176361084
    10. '            
' → logprob: -7.28922176361084

Token 144: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12941409647464752
    2. 'connections' → logprob: -2.7544140815734863
    3. 'for' → logprob: -3.8794140815734863
    4. ' p' → logprob: -4.379414081573486
    5. ' for' → logprob: -4.879414081573486
    6. ' connections' → logprob: -5.504414081573486
    7. '#' → logprob: -5.629414081573486
    8. '       ' → logprob: -6.004414081573486
    9. '           ' → logprob: -6.254414081573486
    10. ')' → logprob: -7.254414081573486

Token 145: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9130558371543884
    2. ' =' → logprob: -1.4130558967590332
    3. '_parts' → logprob: -2.288055896759033
    4. 'p' → logprob: -2.913055896759033
    5. '_tokens' → logprob: -3.163055896759033
    6. ')' → logprob: -3.163055896759033
    7. ',' → logprob: -3.413055896759033
    8. '_p' → logprob: -3.788055896759033
    9. 'from' → logprob: -4.913055896759033
    10. 's' → logprob: -5.163055896759033

Token 146: ' q' (ID: 2335)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7868510484695435
    2. 'p' → logprob: -1.5368510484695435
    3. ' (' → logprob: -2.411850929260254
    4. '(int' → logprob: -2.411850929260254
    5. '(p' → logprob: -2.911850929260254
    6. ' int' → logprob: -3.411850929260254
    7. '(' → logprob: -3.536850929260254
    8. ' p' → logprob: -4.036850929260254
    9. 'q' → logprob: -4.661850929260254
    10. ')' → logprob: -6.786850929260254

Token 147: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.755038321018219
    2. '=' → logprob: -1.0050382614135742
    3. ',' → logprob: -2.630038261413574
    4. ' =' → logprob: -2.880038261413574
    5. '<|end|>' → logprob: -4.505038261413574
    6. ' are' → logprob: -5.630038261413574
    7. '),' → logprob: -5.755038261413574
    8. ').' → logprob: -5.880038261413574
    9. 'p' → logprob: -5.880038261413574
    10. ']' → logprob: -6.505038261413574

Token 148: ' de' (ID: 334)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.73744136095047
    2. ' des' → logprob: -1.3624413013458252
    3. ' (' → logprob: -2.487441301345825
    4. 'des' → logprob: -2.987441301345825
    5. ' tuples' → logprob: -3.112441301345825
    6. '(' → logprob: -3.237441301345825
    7. ' p' → logprob: -4.112441539764404
    8. 'p' → logprob: -4.987441539764404
    9. '('' → logprob: -5.862441539764404
    10. ' ' → logprob: -6.487441539764404

Token 149: ' la' (ID: 557)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1919236034154892
    2. 'type' → logprob: -2.0669236183166504
    3. '(str' → logprob: -4.06692361831665
    4. ' type' → logprob: -4.94192361831665
    5. 'p' → logprob: -5.06692361831665
    6. 'tuple' → logprob: -5.31692361831665
    7. ' str' → logprob: -5.56692361831665
    8. '(p' → logprob: -6.19192361831665
    9. '(' → logprob: -6.81692361831665
    10. '(type' → logprob: -7.06692361831665

Token 150: ' forme' (ID: 27450)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -1.3165323734283447
    2. 'str' → logprob: -1.4415323734283447
    3. 'm' → logprob: -2.0665323734283447
    4. 'forme' → logprob: -2.1915323734283447
    5. 'tuple' → logprob: -2.4415323734283447
    6. 'form' → logprob: -2.5665323734283447
    7. 'type' → logprob: -3.1915323734283447
    8. ' forme' → logprob: -4.316532135009766
    9. 'string' → logprob: -5.316532135009766
    10. '(str' → logprob: -5.566532135009766

Token 151: ' "' (ID: 392)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.057863328605890274
    2. '(' → logprob: -3.557863235473633
    3. '(p' → logprob: -4.307863235473633
    4. ' ('' → logprob: -6.057863235473633
    5. '(int' → logprob: -6.307863235473633
    6. '(i' → logprob: -6.432863235473633
    7. ' ("' → logprob: -6.682863235473633
    8. ' ' → logprob: -6.932863235473633
    9. '"' → logprob: -6.932863235473633
    10. '('' → logprob: -7.432863235473633

Token 152: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.629015326499939
    2. 'f' → logprob: -2.0040154457092285
    3. '")' → logprob: -2.0040154457092285
    4. '"{' → logprob: -2.2540154457092285
    5. ''' → logprob: -3.6290154457092285
    6. 'p' → logprob: -4.5040154457092285
    7. ' f' → logprob: -4.7540154457092285
    8. 'str' → logprob: -5.2540154457092285
    9. ')' → logprob: -5.3790154457092285
    10. '(p' → logprob: -5.5040154457092285

Token 153: 'E' (ID: 36)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31614774465560913
    2. ')' → logprob: -2.066147804260254
    3. '"' → logprob: -3.191147804260254
    4. ',' → logprob: -3.441147804260254
    5. '[' → logprob: -3.816147804260254
    6. '-' → logprob: -4.691147804260254
    7. ':' → logprob: -5.066147804260254
    8. ',"' → logprob: -5.191147804260254
    9. '",' → logprob: -5.316147804260254
    10. '("' → logprob: -5.816147804260254

Token 154: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -1.1188607215881348
    2. ',' → logprob: -1.3688607215881348
    3. '"' → logprob: -1.8688607215881348
    4. '")' → logprob: -2.2438607215881348
    5. ',"' → logprob: -2.3688607215881348
    6. ')' → logprob: -3.3688607215881348
    7. ')"' → logprob: -4.493860721588135
    8. '),' → logprob: -5.743860721588135
    9. '"),' → logprob: -5.868860721588135
    10. '"}' → logprob: -6.243860721588135

Token 155: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767293572425842
    2. '       ' → logprob: -1.4517292976379395
    3. '<|end|>' → logprob: -2.3267292976379395
    4. '}' → logprob: -3.0767292976379395
    5. ' {' → logprob: -4.3267292976379395
    6. '{' → logprob: -4.8267292976379395
    7. ']' → logprob: -5.2017292976379395
    8. ' )' → logprob: -5.2017292976379395
    9. '        ' → logprob: -5.7017292976379395
    10. '...' → logprob: -5.8267292976379395

Token 156: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005814079660922289
    2. '1' → logprob: -5.255814075469971
    3. '2' → logprob: -8.380814552307129
    4. ' ' → logprob: -8.755814552307129
    5. '3' → logprob: -8.880814552307129
    6. '5' → logprob: -11.130814552307129
    7. '...' → logprob: -11.880814552307129
    8. '4' → logprob: -11.880814552307129
    9. '<|end|>' → logprob: -12.255814552307129
    10. '"' → logprob: -12.630814552307129

Token 157: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07154979556798935
    2. 'E' → logprob: -2.696549892425537
    3. '"' → logprob: -6.696549892425537
    4. '")' → logprob: -8.821549415588379
    5. '"W' → logprob: -8.946549415588379
    6. '",' → logprob: -10.571549415588379
    7. ')' → logprob: -11.571549415588379
    8. 'O' → logprob: -11.696549415588379
    9. ' ' → logprob: -11.946549415588379
    10. ',' → logprob: -11.946549415588379

Token 158: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5223109126091003
    2. '"' → logprob: -1.0223109722137451
    3. '",' → logprob: -3.522310972213745
    4. ')"' → logprob: -4.272310733795166
    5. ')' → logprob: -6.022310733795166
    6. ')",' → logprob: -8.022311210632324
    7. ',' → logprob: -8.397311210632324
    8. '"),' → logprob: -8.897311210632324
    9. '')"' → logprob: -9.397311210632324
    10. ')")' → logprob: -9.522311210632324

Token 159: ' etc' (ID: 5178)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3248477578163147
    2. '<|end|>' → logprob: -1.94984769821167
    3. '}' → logprob: -2.69984769821167
    4. '       ' → logprob: -3.57484769821167
    5. ',' → logprob: -3.94984769821167
    6. ']' → logprob: -5.19984769821167
    7. '
' → logprob: -5.82484769821167
    8. '<|end|>' → logprob: -5.94984769821167
    9. '   ' → logprob: -6.32484769821167
    10. ' )' → logprob: -6.82484769821167

Token 160: '.
' (ID: 558)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3057437837123871
    2. ')' → logprob: -1.9307438135147095
    3. ',' → logprob: -2.68074369430542
    4. '<|end|>' → logprob: -3.55574369430542
    5. '   ' → logprob: -5.18074369430542
    6. ',
' → logprob: -5.80574369430542
    7. '{' → logprob: -5.93074369430542
    8. '       ' → logprob: -5.93074369430542
    9. ']' → logprob: -6.18074369430542
    10. '
' → logprob: -6.93074369430542

Token 161: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.296927273273468
    2. '       ' → logprob: -2.5469272136688232
    3. '}' → logprob: -2.7969272136688232
    4. '<|end|>' → logprob: -2.9219272136688232
    5. '{' → logprob: -3.2969272136688232
    6. ']' → logprob: -4.671927452087402
    7. ',' → logprob: -5.046927452087402
    8. '   ' → logprob: -5.796927452087402
    9. ':' → logprob: -6.171927452087402
    10. '[' → logprob: -6.546927452087402

Token 162: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1404119729995728
    2. '       ' → logprob: -1.3904119729995728
    3. ' p' → logprob: -1.7654119729995728
    4. 'p' (adapté à ' p') → logprob: -1.8904119729995728
    5. ')' → logprob: -2.640411853790283
    6. ',' → logprob: -5.515411853790283
    7. ')p' → logprob: -5.515411853790283
    8. ' for' → logprob: -5.765411853790283
    9. 'connections' → logprob: -6.140411853790283
    10. '        ' → logprob: -6.265411853790283

Token 163: '_line' (ID: 14418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.437052458524704
    2. '_p' → logprob: -1.9370524883270264
    3. '_line' → logprob: -2.5620524883270264
    4. ' =' → logprob: -3.9370524883270264
    5. '=' → logprob: -3.9370524883270264
    6. '_i' → logprob: -4.062052249908447
    7. ',' → logprob: -4.437052249908447
    8. '_num' → logprob: -4.437052249908447
    9. '_,' → logprob: -4.437052249908447
    10. '_l' → logprob: -5.062052249908447

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014677680097520351
    2. '=' → logprob: -4.51467752456665
    3. ' ,' → logprob: -6.51467752456665
    4. ' =' → logprob: -6.88967752456665
    5. ',p' → logprob: -7.01467752456665
    6. 'p' → logprob: -8.889678001403809
    7. ')' → logprob: -10.514678001403809
    8. '=p' → logprob: -10.764678001403809
    9. ' p' → logprob: -11.514678001403809
    10. ',line' → logprob: -12.139678001403809

Token 165: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6362947821617126
    2. ' p' → logprob: -0.7612947821617126
    3. 'int' → logprob: -6.011294841766357
    4. ' =' → logprob: -7.386294841766357
    5. '=int' → logprob: -8.3862943649292
    6. ' int' → logprob: -8.3862943649292
    7. '=' → logprob: -9.7612943649292
    8. '=p' → logprob: -10.5112943649292
    9. ' ' → logprob: -10.7612943649292
    10. '0' → logprob: -11.5112943649292

Token 166: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.10424255579710007
    2. '_' → logprob: -3.6042425632476807
    3. '_pos' → logprob: -3.7292425632476807
    4. '_num' → logprob: -3.7292425632476807
    5. '_idx' → logprob: -4.354242324829102
    6. '_index' → logprob: -5.729242324829102
    7. '_type' → logprob: -6.104242324829102
    8. '_token' → logprob: -6.729242324829102
    9. '_c' → logprob: -7.229242324829102
    10. '_val' → logprob: -7.354242324829102

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4753892421722412
    2. '=' → logprob: -0.9753892421722412
    3. ',' → logprob: -6.72538948059082
    4. '=int' → logprob: -9.47538948059082
    5. ' ' → logprob: -11.72538948059082
    6. ')' → logprob: -11.72538948059082
    7. '=p' → logprob: -11.72538948059082
    8. ' ,' → logprob: -12.97538948059082
    9. 'p' → logprob: -13.60038948059082
    10. ')=' → logprob: -14.10038948059082

Token 168: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07891832292079926
    2. ' int' → logprob: -2.578918218612671
    3. ' p' → logprob: -11.07891845703125
    4. 'p' → logprob: -11.32891845703125
    5. '(int' → logprob: -14.32891845703125
    6. ' ' → logprob: -15.32891845703125
    7. '   ' → logprob: -15.95391845703125
    8. '  ' → logprob: -16.20391845703125
    9. '0' → logprob: -16.32891845703125
    10. '	int' → logprob: -17.32891845703125

Token 169: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.368984107510187e-05
    2. '(' → logprob: -10.375033378601074
    3. 'p' → logprob: -13.250033378601074
    4. ' p' → logprob: -15.000033378601074
    5. '(
' → logprob: -15.500033378601074
    6. ' (' → logprob: -15.500033378601074
    7. ')p' → logprob: -17.87503433227539
    8. '()' → logprob: -19.25003433227539
    9. '(

' → logprob: -19.75003433227539
    10. ' ' → logprob: -20.62503433227539

Token 170: '[:-' (ID: 63556)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7027260065078735
    2. '[:-' → logprob: -0.7027260065078735
    3. 'p' → logprob: -4.952725887298584
    4. '(' → logprob: -6.327725887298584
    5. '0' → logprob: -8.077726364135742
    6. '[:' → logprob: -8.202726364135742
    7. '(p' → logprob: -9.827726364135742
    8. ')' → logprob: -10.827726364135742
    9. ' p' → logprob: -11.202726364135742
    10. ')p' → logprob: -12.577726364135742

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. '-' → logprob: -14.00000286102295
    4. '
' → logprob: -16.500003814697266
    5. ' -' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '```' → logprob: -17.000003814697266
    8. '  ' → logprob: -17.812503814697266
    9. '

' → logprob: -18.125003814697266
    10. ']' → logprob: -18.812503814697266

Token 172: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.00031627772841602564
    2. '])' → logprob: -8.500316619873047
    3. ']' → logprob: -9.750316619873047
    4. ' ]' → logprob: -11.125316619873047
    5. '']),' → logprob: -11.125316619873047
    6. '),' → logprob: -11.250316619873047
    7. '],' → logprob: -12.875316619873047
    8. ')' → logprob: -12.875316619873047
    9. ')],' → logprob: -13.000316619873047
    10. '"]),' → logprob: -13.750316619873047

Token 173: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47407862544059753
    2. ' p' → logprob: -0.9740786552429199
    3. ' ' → logprob: -14.224078178405762
    4. ''p' → logprob: -14.849078178405762
    5. ' ' → logprob: -15.599078178405762
    6. '	p' → logprob: -16.099079132080078
    7. '  ' → logprob: -16.724079132080078
    8. '_p' → logprob: -17.099079132080078
    9. ' '' → logprob: -17.349079132080078
    10. '    ' → logprob: -17.474079132080078

Token 174: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.125015258789062
    3. '[len' → logprob: -15.875015258789062
    4. '[
' → logprob: -16.125015258789062
    5. '[]' → logprob: -17.000015258789062
    6. '-' → logprob: -17.250015258789062
    7. '```' → logprob: -17.250015258789062
    8. ' [-' → logprob: -17.875015258789062
    9. 'p' → logprob: -18.375015258789062
    10. '[:-' → logprob: -18.500015258789062

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '2' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.875004768371582
    4. ')' → logprob: -16.250003814697266
    5. ']' → logprob: -16.250003814697266
    6. '])' → logprob: -16.625003814697266
    7. 'E' → logprob: -16.750003814697266
    8. '0' → logprob: -16.875003814697266
    9. ''' → logprob: -17.500003814697266
    10. '```' → logprob: -17.687503814697266

Token 176: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3341387212276459
    2. ')' → logprob: -1.7091387510299683
    3. ')]' → logprob: -2.7091386318206787
    4. '']' → logprob: -3.3341386318206787
    5. '')' → logprob: -8.459138870239258
    6. '')]' → logprob: -9.084138870239258
    7. '])' → logprob: -9.084138870239258
    8. ' ]' → logprob: -9.209138870239258
    9. ' )' → logprob: -9.709138870239258
    10. '<|end|>' → logprob: -10.084138870239258

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037379679270088673
    2. '
' → logprob: -6.378737926483154
    3. '<|end|>' → logprob: -6.753737926483154
    4. '       ' → logprob: -8.003738403320312
    5. '            
' → logprob: -9.253738403320312
    6. '<|end|>' → logprob: -9.378738403320312
    7. '            ' → logprob: -9.628738403320312
    8. ',' → logprob: -9.628738403320312
    9. '               ' → logprob: -9.878738403320312
    10. '   ' → logprob: -10.253738403320312

Token 178: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.11609483510255814
    2. '           ' → logprob: -2.8660948276519775
    3. ' q' → logprob: -3.2410948276519775
    4. '       ' → logprob: -4.491095066070557
    5. '	q' → logprob: -7.616095066070557
    6. ' ' → logprob: -8.241094589233398
    7. ',q' → logprob: -8.241094589233398
    8. ',' → logprob: -8.366094589233398
    9. '   ' → logprob: -8.741094589233398
    10. '            
' → logprob: -8.866094589233398

Token 179: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.5107177862082608e-05
    2. '_' → logprob: -11.000024795532227
    3. ' _' → logprob: -13.250024795532227
    4. '=_' → logprob: -13.625024795532227
    5. '_LINE' → logprob: -13.875024795532227
    6. '_Line' → logprob: -14.500024795532227
    7. '_lines' → logprob: -14.625024795532227
    8. '._' → logprob: -14.625024795532227
    9. 'line' → logprob: -14.750024795532227
    10. '_lineno' → logprob: -14.750024795532227

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003155625017825514
    2. ' ,' → logprob: -8.12531566619873
    3. '=' → logprob: -11.12531566619873
    4. ',q' → logprob: -13.00031566619873
    5. ' =' → logprob: -13.12531566619873
    6. ',int' → logprob: -15.50031566619873
    7. '<|end|>' → logprob: -15.75031566619873
    8. '‌,' → logprob: -17.000314712524414
    9. '=int' → logprob: -17.125314712524414
    10. 'int' → logprob: -18.000314712524414

Token 181: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.0019248253665864468
    2. 'q' → logprob: -6.751924991607666
    3. ' int' → logprob: -7.626924991607666
    4. 'int' → logprob: -8.501924514770508
    5. ' ' → logprob: -10.126924514770508
    6. ' ' → logprob: -12.001924514770508
    7. '<|end|>' → logprob: -12.751924514770508
    8. ' '' → logprob: -13.126924514770508
    9. ' 
' → logprob: -13.376924514770508
    10. ' =' → logprob: -13.626924514770508

Token 182: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.068720743060112
    2. '_line' → logprob: -2.818720817565918
    3. '_q' → logprob: -5.568720817565918
    4. '_' → logprob: -6.193720817565918
    5. ' =' → logprob: -8.318720817565918
    6. 'q' → logprob: -8.443720817565918
    7. '=' → logprob: -9.443720817565918
    8. '_SIDE' → logprob: -9.443720817565918
    9. ',' → logprob: -10.443720817565918
    10. 'Side' → logprob: -10.693720817565918

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283209919929504
    2. '=' → logprob: -2.2378320693969727
    3. ',' → logprob: -11.987832069396973
    4. ' ' → logprob: -12.862832069396973
    5. ' ,' → logprob: -15.112832069396973
    6. '=int' → logprob: -15.737832069396973
    7. '=q' → logprob: -16.48783302307129
    8. ' ' → logprob: -16.61283302307129
    9. ' q' → logprob: -16.86283302307129
    10. ')' → logprob: -16.86283302307129

Token 184: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0380416102707386
    2. ' int' → logprob: -3.288041591644287
    3. '(int' → logprob: -16.413042068481445
    4. '   ' → logprob: -17.413042068481445
    5. '=int' → logprob: -17.538042068481445
    6. '[int' → logprob: -17.663042068481445
    7. ' ' → logprob: -17.788042068481445
    8. '	int' → logprob: -18.038042068481445
    9. 'q' → logprob: -18.288042068481445
    10. '<int' → logprob: -18.913042068481445

Token 185: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.375006675720215
    3. 'q' → logprob: -12.875006675720215
    4. ' (' → logprob: -15.375006675720215
    5. '(int' → logprob: -17.25000762939453
    6. ' q' → logprob: -17.37500762939453
    7. '	q' → logprob: -18.62500762939453
    8. '?q' → logprob: -18.62500762939453
    9. '(p' → logprob: -19.25000762939453
    10. ' ' → logprob: -19.75000762939453

Token 186: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -4.127333340875339e-06
    2. '[-' → logprob: -13.750003814697266
    3. '[' → logprob: -14.250003814697266
    4. ':-' → logprob: -14.500003814697266
    5. '   ' → logprob: -14.625003814697266
    6. 'q' → logprob: -15.125003814697266
    7. ' ' → logprob: -15.375003814697266
    8. '```' → logprob: -15.375003814697266
    9. '.rstrip' → logprob: -16.000003814697266
    10. '[:' → logprob: -16.250003814697266

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '-' → logprob: -12.750006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '```' → logprob: -15.750006675720215
    5. '
' → logprob: -15.875006675720215
    6. '   ' → logprob: -15.937506675720215
    7. '<|end|>' → logprob: -15.937506675720215
    8. ' -' → logprob: -15.937506675720215
    9. ')' → logprob: -16.00000762939453
    10. '...' → logprob: -16.18750762939453

Token 188: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.3500514328479767
    2. '),' → logprob: -1.2250514030456543
    3. '],' → logprob: -6.850051403045654
    4. ' ),' → logprob: -8.975051879882812
    5. '1' → logprob: -9.100051879882812
    6. ']' → logprob: -9.600051879882812
    7. '']),' → logprob: -9.725051879882812
    8. ')' → logprob: -9.850051879882812
    9. ')],' → logprob: -10.225051879882812
    10. 'q' → logprob: -10.600051879882812

Token 189: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.033654000610113144
    2. 'q' → logprob: -3.408653974533081
    3. ' ' → logprob: -12.78365421295166
    4. ' ' → logprob: -13.15865421295166
    5. '	q' → logprob: -14.15865421295166
    6. '?q' → logprob: -14.28365421295166
    7. ''q' → logprob: -14.28365421295166
    8. '<|end|>' → logprob: -14.90865421295166
    9. '[q' → logprob: -15.78365421295166
    10. '.q' → logprob: -16.346153259277344

Token 190: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5760210156440735
    2. '-' → logprob: -0.8260210156440735
    3. '1' → logprob: -10.076021194458008
    4. ' -' → logprob: -11.576021194458008
    5. '[' → logprob: -11.951021194458008
    6. '```' → logprob: -12.076021194458008
    7. '][-' → logprob: -12.451021194458008
    8. '`' → logprob: -12.576021194458008
    9. '-q' → logprob: -12.701021194458008
    10. '(-' → logprob: -12.826021194458008

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -12.25002384185791
    3. ''' → logprob: -12.37502384185791
    4. '-' → logprob: -12.62502384185791
    5. '<|end|>' → logprob: -12.62502384185791
    6. '')' → logprob: -12.87502384185791
    7. ']' → logprob: -13.50002384185791
    8. ')' → logprob: -13.50002384185791
    9. '```' → logprob: -14.12502384185791
    10. '<|end|>' → logprob: -14.12502384185791

Token 192: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000689082604367286
    2. ')
' → logprob: -7.6256890296936035
    3. ']' → logprob: -9.375689506530762
    4. '       ' → logprob: -10.125689506530762
    5. ' )' → logprob: -10.125689506530762
    6. '<|end|>' → logprob: -12.000689506530762
    7. '   ' → logprob: -12.375689506530762
    8. '}' → logprob: -12.375689506530762
    9. '           ' → logprob: -12.500689506530762
    10. ')

' → logprob: -13.000689506530762

Token 193: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22477661073207855
    2. '       ' → logprob: -1.8497766256332397
    3. '           ' → logprob: -3.47477650642395
    4. '<|end|>' → logprob: -4.599776744842529
    5. '        
' → logprob: -6.849776744842529
    6. '
' → logprob: -7.974776744842529
    7. '<|end|>' → logprob: -8.349776268005371
    8. '            
' → logprob: -8.349776268005371
    9. '  
' → logprob: -8.599776268005371
    10. '    
' → logprob: -8.599776268005371

Token 194: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2779293656349182
    2. 'connections' → logprob: -1.7779293060302734
    3. '       ' → logprob: -3.2779293060302734
    4. '           ' → logprob: -3.5279293060302734
    5. ' connections' → logprob: -6.027929306030273
    6. '<|end|>' → logprob: -6.652929306030273
    7. '```' → logprob: -7.152929306030273
    8. '
' → logprob: -8.402929306030273
    9. '            
' → logprob: -8.527929306030273
    10. '.connections' → logprob: -8.527929306030273

Token 195: ' On' (ID: 2160)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.025809120386838913
    2. ' connections' → logprob: -3.7758090496063232
    3. '#' → logprob: -6.525809288024902
    4. '
' → logprob: -8.275809288024902
    5. '           ' → logprob: -8.400809288024902
    6. '.connections' → logprob: -9.025809288024902
    7. 'collections' → logprob: -9.650809288024902
    8. '```' → logprob: -9.775809288024902
    9. '       ' → logprob: -9.900809288024902
    10. 'if' → logprob: -10.025809288024902

Token 196: ' ajoute' (ID: 91611)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.29940783977508545
    2. '#' → logprob: -1.9244078397750854
    3. '           ' → logprob: -2.799407958984375
    4. ' connections' → logprob: -4.174407958984375
    5. '       ' → logprob: -4.549407958984375
    6. 'for' → logprob: -5.424407958984375
    7. 's' → logprob: -6.424407958984375
    8. 'continue' → logprob: -6.424407958984375
    9. '.connections' → logprob: -6.674407958984375
    10. '   ' → logprob: -6.674407958984375

Token 197: ' la' (ID: 557)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.17659015953540802
    2. '           ' → logprob: -2.8015902042388916
    3. ' connections' → logprob: -2.9265902042388916
    4. ')' → logprob: -3.5515902042388916
    5. ' p' → logprob: -4.5515899658203125
    6. 'p' → logprob: -5.6765899658203125
    7. '   ' → logprob: -6.9265899658203125
    8. '       ' → logprob: -7.6765899658203125
    9. ' les' → logprob: -8.176589965820312
    10. '.connections' → logprob: -8.176589965820312

Token 198: ' connexion' (ID: 81575)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.02286594733595848
    2. ' connections' → logprob: -3.8978660106658936
    3. 'p' → logprob: -7.0228657722473145
    4. 'connection' → logprob: -7.8978657722473145
    5. ' p' → logprob: -7.8978657722473145
    6. 'q' → logprob: -8.897866249084473
    7. 'connexion' → logprob: -8.897866249084473
    8. 'conn' → logprob: -9.147866249084473
    9. ')' → logprob: -9.522866249084473
    10. '.connections' → logprob: -9.522866249084473

Token 199: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4762876629829407
    2. '       ' → logprob: -1.476287603378296
    3. ')' → logprob: -2.851287603378296
    4. 'connections' → logprob: -2.976287603378296
    5. '
' → logprob: -3.726287603378296
    6. ')
' → logprob: -4.976287841796875
    7. ' connections' → logprob: -6.101287841796875
    8. ',' → logprob: -6.851287841796875
    9. '.connections' → logprob: -7.101287841796875
    10. '[' → logprob: -7.226287841796875

Token 200: ' les' (ID: 1341)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.0076867202296853065
    2. ' connections' → logprob: -4.882686614990234
    3. '   ' → logprob: -10.257686614990234
    4. '.connections' → logprob: -10.507686614990234
    5. 'collections' → logprob: -12.632686614990234
    6. ')' → logprob: -12.882686614990234
    7. '```' → logprob: -13.257686614990234
    8. 'connect' → logprob: -13.382686614990234
    9. '           ' → logprob: -13.507686614990234
    10. 'conn' → logprob: -13.632686614990234

Token 201: ' deux' (ID: 10301)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.014718912541866302
    2. ' connections' → logprob: -4.264719009399414
    3. 'for' → logprob: -9.014719009399414
    4. ' deux' → logprob: -9.514719009399414
    5. ')' → logprob: -9.764719009399414
    6. '   ' → logprob: -9.889719009399414
    7. '.connections' → logprob: -10.139719009399414
    8. ' two' → logprob: -10.139719009399414
    9. 'collections' → logprob: -11.014719009399414
    10. ' for' → logprob: -11.014719009399414

Token 202: ' sens' (ID: 5050)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.060577839612960815
    2. 'dire' → logprob: -3.560577869415283
    3. ' directions' → logprob: -3.810577869415283
    4. ' sens' → logprob: -5.560577869415283
    5. 'sens' → logprob: -6.185577869415283
    6. ' connections' → logprob: -6.310577869415283
    7. ')' → logprob: -9.060577392578125
    8. '.connections' → logprob: -9.310577392578125
    9. 'conn' → logprob: -9.685577392578125
    10. '   ' → logprob: -9.685577392578125

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4846380949020386
    2. '           ' → logprob: -0.9846380949020386
    3. '
' → logprob: -5.109638214111328
    4. 'connections' → logprob: -6.109638214111328
    5. '        
' → logprob: -7.234638214111328
    6. ' connections' → logprob: -8.234638214111328
    7. '            
' → logprob: -8.734638214111328
    8. ')' → logprob: -8.859638214111328
    9. '
' → logprob: -8.984638214111328
    10. '.connections' → logprob: -8.984638214111328

Token 204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46489015221595764
    2. '           ' → logprob: -1.0898901224136353
    3. 'connections' → logprob: -3.714890241622925
    4. ')' → logprob: -5.839890003204346
    5. '
' → logprob: -5.964890003204346
    6. ' connections' → logprob: -6.464890003204346
    7. '<|end|>' → logprob: -6.839890003204346
    8. '[' → logprob: -7.964890003204346
    9. '        
' → logprob: -7.964890003204346
    10. ' for' → logprob: -8.339890480041504

Token 205: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' (adapté à ' connections') → logprob: -0.19048483669757843
    2. ' connections' → logprob: -2.0654847621917725
    3. '           ' → logprob: -3.3154847621917725
    4. '       ' → logprob: -5.065485000610352
    5. '
' → logprob: -6.315485000610352
    6. '.connections' → logprob: -7.315485000610352
    7. ')' → logprob: -8.440485000610352
    8. 'collections' → logprob: -8.815485000610352
    9. '```' → logprob: -9.377985000610352
    10. ' for' → logprob: -9.440485000610352

Token 206: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6328182816505432
    2. '[p' → logprob: -0.7578182816505432
    3. '[' → logprob: -8.882818222045898
    4. '.setdefault' → logprob: -10.132818222045898
    5. '(p' → logprob: -10.882818222045898
    6. 'p' → logprob: -11.757818222045898
    7. ' [(' → logprob: -13.007818222045898
    8. '   ' → logprob: -13.257818222045898
    9. '[[' → logprob: -13.632818222045898
    10. '```' → logprob: -13.757818222045898

Token 207: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.171581091824919e-05
    2. ' p' → logprob: -9.62507152557373
    3. 'i' → logprob: -12.87507152557373
    4. 'q' → logprob: -13.50007152557373
    5. '   ' → logprob: -14.62507152557373
    6. ')p' → logprob: -14.75007152557373
    7. ')' → logprob: -15.62507152557373
    8. ' ' → logprob: -16.125072479248047
    9. '(p' → logprob: -16.500072479248047
    10. '           ' → logprob: -16.500072479248047

Token 208: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.4987974029500037e-05
    2. ',' → logprob: -11.125024795532227
    3. 'line' → logprob: -13.000024795532227
    4. ',_' → logprob: -13.625024795532227
    5. '[' → logprob: -13.750024795532227
    6. ',line' → logprob: -13.750024795532227
    7. '_LINE' → logprob: -14.375024795532227
    8. 'p' → logprob: -14.750024795532227
    9. ')_' → logprob: -15.000024795532227
    10. 'i' → logprob: -15.000024795532227

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014173806412145495
    2. ' ,' → logprob: -7.12641716003418
    3. ',p' → logprob: -7.50141716003418
    4. ')][' → logprob: -10.75141716003418
    5. ')],' → logprob: -11.50141716003418
    6. ','' → logprob: -11.87641716003418
    7. '',' → logprob: -12.12641716003418
    8. ')]' → logprob: -12.87641716003418
    9. '[' → logprob: -13.25141716003418
    10. ',
' → logprob: -13.25141716003418

Token 210: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14277426898479462
    2. ' p' → logprob: -2.0177743434906006
    3. ' ' → logprob: -9.51777458190918
    4. ''p' → logprob: -11.51777458190918
    5. ')' → logprob: -12.89277458190918
    6. ')p' → logprob: -13.26777458190918
    7. '  ' → logprob: -13.39277458190918
    8. ''' → logprob: -13.58027458190918
    9. '   ' → logprob: -13.58027458190918
    10. ' '' → logprob: -13.58027458190918

Token 211: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -1.5690089639974758e-05
    2. ''_' → logprob: -11.625015258789062
    3. '_SIDE' → logprob: -13.000015258789062
    4. '_' → logprob: -13.750015258789062
    5. ' _' → logprob: -13.875015258789062
    6. 'side' → logprob: -14.375015258789062
    7. '_s' → logprob: -14.875015258789062
    8. '_sid' → logprob: -15.250015258789062
    9. ')_' → logprob: -15.500015258789062
    10. ']_' → logprob: -16.125015258789062

Token 212: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -7.076218025758862e-05
    2. '].' → logprob: -10.125070571899414
    3. ')]' → logprob: -10.750070571899414
    4. ']].' → logprob: -12.000070571899414
    5. ' )' → logprob: -13.125070571899414
    6. ']).' → logprob: -15.000070571899414
    7. '])' → logprob: -15.125070571899414
    8. ')][' → logprob: -15.625070571899414
    9. '   ' → logprob: -16.500070571899414
    10. ']' → logprob: -16.625070571899414

Token 213: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -15.250000953674316
    4. 'appen' → logprob: -19.250001907348633
    5. 'app' → logprob: -20.250001907348633
    6. '_append' → logprob: -20.750001907348633
    7. '	append' → logprob: -21.000001907348633
    8. 'Append' → logprob: -21.625001907348633
    9. 'add' → logprob: -22.750001907348633
    10. '   ' → logprob: -23.500001907348633

Token 214: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08026845753192902
    2. '(q' → logprob: -2.580268383026123
    3. '(' → logprob: -6.705268383026123
    4. ' (' → logprob: -8.830268859863281
    5. ' ((' → logprob: -12.705268859863281
    6. '(p' → logprob: -13.455268859863281
    7. '(con' → logprob: -13.705268859863281
    8. '(Q' → logprob: -14.830268859863281
    9. '(
' → logprob: -15.205268859863281
    10. ' ' → logprob: -15.455268859863281

Token 215: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.20734242349863e-05
    2. ' q' → logprob: -10.000072479248047
    3. '(q' → logprob: -10.625072479248047
    4. '   ' → logprob: -13.375072479248047
    5. ' ' → logprob: -15.500072479248047
    6. '	q' → logprob: -15.625072479248047
    7. ''q' → logprob: -16.125072479248047
    8. '     ' → logprob: -16.875072479248047
    9. '[q' → logprob: -17.000072479248047
    10. '    ' → logprob: -17.250072479248047

Token 216: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.816093228830141e-06
    2. '_LINE' → logprob: -14.37500286102295
    3. '[' → logprob: -14.50000286102295
    4. ')' → logprob: -15.00000286102295
    5. ')_' → logprob: -15.00000286102295
    6. '_lin' → logprob: -15.87500286102295
    7. '_' → logprob: -16.125001907348633
    8. 'line' → logprob: -16.500001907348633
    9. '_q' → logprob: -16.500001907348633
    10. 'q' → logprob: -16.500001907348633

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004269812779966742
    2. ',q' → logprob: -7.875426769256592
    3. ' ,' → logprob: -10.00042724609375
    4. ',
' → logprob: -13.87542724609375
    5. 'q' → logprob: -15.37542724609375
    6. '‌,' → logprob: -16.87542724609375
    7. ' q' → logprob: -17.12542724609375
    8. '),' → logprob: -17.12542724609375
    9. ',p' → logprob: -17.25042724609375
    10. ')' → logprob: -17.75042724609375

Token 218: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11292292922735214
    2. ' q' → logprob: -2.2379229068756104
    3. ' ' → logprob: -10.237922668457031
    4. ''q' → logprob: -10.237922668457031
    5. ')' → logprob: -11.800422668457031
    6. '	q' → logprob: -12.675422668457031
    7. '   ' → logprob: -13.112922668457031
    8. 'p' → logprob: -13.425422668457031
    9. '  ' → logprob: -13.487922668457031
    10. '    ' → logprob: -13.987922668457031

Token 219: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.002462218049913645
    2. ',' → logprob: -6.252462387084961
    3. '_SIDE' → logprob: -8.127462387084961
    4. 'Side' → logprob: -9.377462387084961
    5. 'q' → logprob: -10.002462387084961
    6. ',q' → logprob: -10.252462387084961
    7. 'side' → logprob: -10.377462387084961
    8. '_,' → logprob: -12.127462387084961
    9. 's' → logprob: -12.252462387084961
    10. '_s' → logprob: -12.377462387084961

Token 220: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47447481751441956
    2. '))' → logprob: -0.9744747877120972
    3. '))
' → logprob: -8.349474906921387
    4. ')
' → logprob: -9.224474906921387
    5. ' )' → logprob: -10.724474906921387
    6. '       ' → logprob: -10.849474906921387
    7. ' ))' → logprob: -11.974474906921387
    8. ')))' → logprob: -12.224474906921387
    9. ')}' → logprob: -12.474474906921387
    10. '   ' → logprob: -13.849474906921387

Token 221: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2176629900932312
    2. '<|end|>' → logprob: -1.842663049697876
    3. '           ' → logprob: -3.842663049697876
    4. ')' → logprob: -4.967662811279297
    5. '        ' → logprob: -5.342662811279297
    6. 'connections' → logprob: -7.092662811279297
    7. ',' → logprob: -7.342662811279297
    8. '        
' → logprob: -7.842662811279297
    9. '   ' → logprob: -8.092662811279297
    10. '<|end|>' → logprob: -8.092662811279297

Token 222: ' connections' (ID: 21069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4582867920398712
    2. 'connections' (adapté à ' connections') → logprob: -1.0832867622375488
    3. ' connections' → logprob: -4.083286762237549
    4. '       ' → logprob: -4.458286762237549
    5. '.connections' → logprob: -8.083287239074707
    6. ')' → logprob: -9.083287239074707
    7. '<|end|>' → logprob: -9.083287239074707
    8. '               ' → logprob: -10.333287239074707
    9. '   ' → logprob: -10.583287239074707
    10. ' ' → logprob: -11.083287239074707

Token 223: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.12500286102295
    3. '[
' → logprob: -14.87500286102295
    4. ')[' → logprob: -15.37500286102295
    5. ' [(' → logprob: -16.250003814697266
    6. '[((' → logprob: -16.250003814697266
    7. '```' → logprob: -16.625003814697266
    8. '((' → logprob: -17.250003814697266
    9. ')' → logprob: -17.375003814697266
    10. '.setdefault' → logprob: -17.500003814697266

Token 224: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002120038407156244
    2. 'p' → logprob: -8.500211715698242
    3. '(q' → logprob: -12.500211715698242
    4. ' q' → logprob: -12.875211715698242
    5. '   ' → logprob: -14.750211715698242
    6. '(p' → logprob: -15.000211715698242
    7. ' ' → logprob: -15.000211715698242
    8. ')' → logprob: -15.500211715698242
    9. '     ' → logprob: -15.625211715698242
    10. '	q' → logprob: -15.875211715698242

Token 225: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.8312570318812504e-05
    2. '_LINE' → logprob: -12.500018119812012
    3. ',line' → logprob: -12.500018119812012
    4. '[line' → logprob: -12.625018119812012
    5. '(line' → logprob: -12.625018119812012
    6. ',' → logprob: -13.250018119812012
    7. '(Line' → logprob: -14.875018119812012
    8. ' (' → logprob: -14.875018119812012
    9. 'line' → logprob: -15.000018119812012
    10. '#line' → logprob: -15.375018119812012

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046498890151269734
    2. ',p' → logprob: -8.250465393066406
    3. ' ,' → logprob: -8.625465393066406
    4. ',(' → logprob: -11.250465393066406
    5. ',q' → logprob: -12.625465393066406
    6. ',
' → logprob: -13.000465393066406
    7. '(p' → logprob: -14.000465393066406
    8. ' (' → logprob: -14.250465393066406
    9. '(' → logprob: -14.250465393066406
    10. ',line' → logprob: -14.500465393066406

Token 227: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005535400938242674
    2. 'q' → logprob: -5.75553560256958
    3. ' p' → logprob: -6.38053560256958
    4. '(p' → logprob: -7.50553560256958
    5. ' (' → logprob: -9.755535125732422
    6. ' q' → logprob: -11.130535125732422
    7. '(q' → logprob: -11.255535125732422
    8. ' ' → logprob: -11.630535125732422
    9. '(' → logprob: -12.255535125732422
    10. ')' → logprob: -12.880535125732422

Token 228: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.014506638050079346
    2. ',' → logprob: -4.264506816864014
    3. '_line' → logprob: -8.514506340026855
    4. '_SIDE' → logprob: -9.514506340026855
    5. ',_' → logprob: -10.889506340026855
    6. '_,' → logprob: -11.264506340026855
    7. 'Side' → logprob: -11.389506340026855
    8. 'side' → logprob: -12.139506340026855
    9. ' ,' → logprob: -12.514506340026855
    10. '[' → logprob: -12.764506340026855

Token 229: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -6.420598219847307e-05
    2. '].' → logprob: -10.3750638961792
    3. ')]' → logprob: -10.6250638961792
    4. ']).' → logprob: -12.1250638961792
    5. ')' → logprob: -13.7500638961792
    6. ').' → logprob: -13.8750638961792
    7. ']].' → logprob: -14.2500638961792
    8. ']' → logprob: -15.2500638961792
    9. ' )' → logprob: -16.250064849853516
    10. '   ' → logprob: -16.250064849853516

Token 230: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.000000953674316
    3. ' append' → logprob: -14.750000953674316
    4. '	append' → logprob: -17.375001907348633
    5. 'appen' → logprob: -17.750001907348633
    6. 'add' → logprob: -19.125001907348633
    7. '_append' → logprob: -19.500001907348633
    8. 'app' → logprob: -19.875001907348633
    9. 'Append' → logprob: -20.000001907348633
    10. '[(' → logprob: -20.250001907348633

Token 231: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011367550177965313
    2. '(p' → logprob: -9.125113487243652
    3. ' ((' → logprob: -12.875113487243652
    4. '[(' → logprob: -13.750113487243652
    5. ')((' → logprob: -14.750113487243652
    6. '(' → logprob: -14.875113487243652
    7. ' (' → logprob: -16.12511444091797
    8. '(P' → logprob: -16.25011444091797
    9. '(
' → logprob: -17.00011444091797
    10. '   ' → logprob: -17.50011444091797

Token 232: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02368343248963356
    2. 'p' → logprob: -3.773683547973633
    3. ' (' → logprob: -7.898683547973633
    4. ' p' → logprob: -10.523683547973633
    5. '   ' → logprob: -10.898683547973633
    6. '[p' → logprob: -11.773683547973633
    7. ' ' → logprob: -13.273683547973633
    8. '((' → logprob: -13.273683547973633
    9. '(' → logprob: -13.523683547973633
    10. ')' → logprob: -13.773683547973633

Token 233: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.512236498361744e-07
    2. '_LINE' → logprob: -15.750000953674316
    3. '(line' → logprob: -15.875000953674316
    4. 'line' → logprob: -16.625
    5. 'Line' → logprob: -16.75
    6. '[line' → logprob: -16.75
    7. ',line' → logprob: -17.5
    8. '_Line' → logprob: -17.75
    9. '_lin' → logprob: -18.125
    10. '_lines' → logprob: -18.25

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048656106810085475
    2. ',q' → logprob: -8.125486373901367
    3. ',p' → logprob: -9.125486373901367
    4. ' ,' → logprob: -9.500486373901367
    5. '<|end|>' → logprob: -13.500486373901367
    6. 'q' → logprob: -14.125486373901367
    7. ',
' → logprob: -14.250486373901367
    8. ',user' → logprob: -14.375486373901367
    9. ',k' → logprob: -14.750486373901367
    10. ',s' → logprob: -15.250486373901367

Token 235: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4833270013332367
    2. 'p' → logprob: -1.483327031135559
    3. ' q' → logprob: -2.1083269119262695
    4. ' p' → logprob: -3.3583269119262695
    5. ''q' → logprob: -9.73332691192627
    6. ')' → logprob: -10.23332691192627
    7. ' ' → logprob: -10.98332691192627
    8. ''p' → logprob: -11.35832691192627
    9. '	q' → logprob: -12.54582691192627
    10. '<|end|>' → logprob: -12.85832691192627

Token 236: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -6.635164754698053e-05
    2. 'side' → logprob: -10.375066757202148
    3. ',' → logprob: -11.250066757202148
    4. '_SIDE' → logprob: -11.625066757202148
    5. '_' → logprob: -12.500066757202148
    6. 'Side' → logprob: -12.625066757202148
    7. ')' → logprob: -13.375066757202148
    8. '_s' → logprob: -13.750066757202148
    9. '_,' → logprob: -14.000066757202148
    10. '_line' → logprob: -14.750066757202148

Token 237: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.433829159708694e-05
    2. '))' → logprob: -9.75007438659668
    3. ' )' → logprob: -11.75007438659668
    4. '       ' → logprob: -12.87507438659668
    5. ')}' → logprob: -13.12507438659668
    6. ')
' → logprob: -13.25007438659668
    7. '])' → logprob: -14.37507438659668
    8. ')]' → logprob: -15.00007438659668
    9. '<|end|>' → logprob: -15.75007438659668
    10. '   ' → logprob: -16.12507438659668

Token 238: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' #' (ID: 1069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -1.0881019830703735
    2. ')' → logprob: -1.5881019830703735
    3. '   ' → logprob: -1.7131019830703735
    4. '       ' → logprob: -2.088101863861084
    5. ']' → logprob: -2.963101863861084
    6. '}' → logprob: -3.213101863861084
    7. ' connections' → logprob: -3.838101863861084
    8. '[' → logprob: -3.963101863861084
    9. '{' → logprob: -4.588101863861084
    10. '```' → logprob: -5.338101863861084

Token 240: ' Lecture' (ID: 106534)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.025504937395453453
    2. ' connections' → logprob: -4.900505065917969
    3. '   ' → logprob: -5.275505065917969
    4. ')' → logprob: -5.525505065917969
    5. '       ' → logprob: -6.025505065917969
    6. '{' → logprob: -6.400505065917969
    7. '#' → logprob: -7.150505065917969
    8. 'con' → logprob: -7.775505065917969
    9. ']' → logprob: -7.775505065917969
    10. '}' → logprob: -7.900505065917969

Token 241: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12359744310379028
    2. ' des' → logprob: -2.8735973834991455
    3. ' of' → logprob: -4.248597621917725
    4. ' de' → logprob: -4.498597621917725
    5. '   ' → logprob: -5.123597621917725
    6. '<|end|>' → logprob: -5.623597621917725
    7. ')' → logprob: -5.998597621917725
    8. ' for' → logprob: -6.373597621917725
    9. 'n' → logprob: -6.498597621917725
    10. '        ' → logprob: -6.498597621917725

Token 242: ' configurations' (ID: 56804)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3919674158096313
    2. ' start' → logprob: -1.8919674158096313
    3. 'entr' → logprob: -2.391967296600342
    4. 'positions' → logprob: -2.516967296600342
    5. 'depart' → logprob: -3.266967296600342
    6. 'initial' → logprob: -3.641967296600342
    7. 'vo' → logprob: -4.016967296600342
    8. 'entrée' → logprob: -4.016967296600342
    9. ' positions' → logprob: -4.141967296600342
    10. ' initial' → logprob: -4.266967296600342

Token 243: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1075173020362854
    2. '<|end|>' → logprob: -3.8575172424316406
    3. '   ' → logprob: -4.107517242431641
    4. ',' → logprob: -4.732517242431641
    5. ' =' → logprob: -4.732517242431641
    6. ':' → logprob: -4.857517242431641
    7. ')' → logprob: -5.232517242431641
    8. '...' → logprob: -5.482517242431641
    9. '        
' → logprob: -5.857517242431641
    10. '#' → logprob: -6.232517242431641

Token 244: ''arrivée' (ID: 156076)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7251650094985962
    2. ''entrée' → logprob: -1.4751650094985962
    3. ' véhicules' → logprob: -2.8501648902893066
    4. 'e' → logprob: -2.9751648902893066
    5. ' voitures' → logprob: -3.9751648902893066
    6. 'arr' → logprob: -3.9751648902893066
    7. ''arrivée' → logprob: -4.225164890289307
    8. ' véhicule' → logprob: -4.475164890289307
    9. 'parking' → logprob: -4.725164890289307
    10. 'vehicles' → logprob: -4.975164890289307

Token 245: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11091950535774231
    2. ',' → logprob: -2.73591947555542
    3. '<|end|>' → logprob: -3.61091947555542
    4. '   ' → logprob: -6.11091947555542
    5. '<|end|>' → logprob: -6.11091947555542
    6. '        
' → logprob: -6.23591947555542
    7. '        ' → logprob: -6.73591947555542
    8. ' ,' → logprob: -7.11091947555542
    9. ' and' → logprob: -7.11091947555542
    10. ' (' → logprob: -7.48591947555542

Token 246: 'ét' (ID: 3913)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.7117632031440735
    2. ')' → logprob: -1.5867631435394287
    3. ' arrival' → logprob: -2.4617631435394287
    4. 'arr' → logprob: -2.5867631435394287
    5. 'start' → logprob: -3.3367631435394287
    6. 'initial' → logprob: -4.086763381958008
    7. ' arrivals' → logprob: -4.586763381958008
    8. 'target' → logprob: -5.086763381958008
    9. ',' → logprob: -5.211763381958008
    10. 'car' → logprob: -5.461763381958008

Token 247: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.04928832873702049
    2. 'ats' → logprob: -3.424288272857666
    3. '```' → logprob: -5.549288272857666
    4. 'apes' → logprob: -5.924288272857666
    5. '}' → logprob: -6.424288272857666
    6. 'ape' → logprob: -6.549288272857666
    7. ')' → logprob: -7.049288272857666
    8. '=' → logprob: -7.424288272857666
    9. ']' → logprob: -7.549288272857666
    10. '   ' → logprob: -7.549288272857666

Token 248: ' initial' (ID: 4871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08704566955566406
    2. '   ' → logprob: -3.212045669555664
    3. ' =' → logprob: -4.462045669555664
    4. ',' → logprob: -4.962045669555664
    5. ' )' → logprob: -4.962045669555664
    6. 's' → logprob: -5.712045669555664
    7. '       ' → logprob: -5.712045669555664
    8. '=' → logprob: -6.087045669555664
    9. '):' → logprob: -6.087045669555664
    10. ':' → logprob: -6.837045669555664

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008129766210913658
    2. ' )' → logprob: -5.758129596710205
    3. '       ' → logprob: -6.133129596710205
    4. ',' → logprob: -6.758129596710205
    5. '   ' → logprob: -7.258129596710205
    6. ')
' → logprob: -7.883129596710205
    7. ' et' → logprob: -9.383130073547363
    8. ' ' → logprob: -10.133130073547363
    9. '):' → logprob: -10.133130073547363
    10. ')#' → logprob: -10.258130073547363

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06646841764450073
    2. '<|end|>' → logprob: -3.1914684772491455
    3. '        ' → logprob: -5.066468238830566
    4. ',' → logprob: -5.191468238830566
    5. '        
' → logprob: -5.691468238830566
    6. ')' → logprob: -6.316468238830566
    7. '    ' → logprob: -6.816468238830566
    8. '   ' → logprob: -6.816468238830566
    9. ' ' → logprob: -7.441468238830566
    10. ' ' → logprob: -7.691468238830566

Token 251: ' start' (ID: 1604)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0003759860992432
    2. 'arrival' → logprob: -1.6253759860992432
    3. 'initial' → logprob: -1.7503759860992432
    4. '   ' → logprob: -2.625375986099243
    5. 'start' (adapté à ' start') → logprob: -2.875375986099243
    6. ' initial' → logprob: -3.000375986099243
    7. '       ' → logprob: -3.500375986099243
    8. ' arrival' → logprob: -4.375375747680664
    9. 'state' → logprob: -4.875375747680664
    10. ' start' → logprob: -5.375375747680664

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2744064331054688
    2. '=' → logprob: -1.8994064331054688
    3. '_positions' → logprob: -1.8994064331054688
    4. '_state' → logprob: -2.1494064331054688
    5. '_states' → logprob: -2.1494064331054688
    6. '_' → logprob: -2.2744064331054688
    7. ',' → logprob: -3.3994064331054688
    8. '_config' → logprob: -4.274406433105469
    9. ')' → logprob: -4.399406433105469
    10. 's' → logprob: -4.524406433105469

Token 253: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7328734993934631
    2. 'tuple' → logprob: -1.3578734397888184
    3. '[' → logprob: -1.8578734397888184
    4. 'deque' → logprob: -2.4828734397888184
    5. '[input' → logprob: -4.982873439788818
    6. '[]
' → logprob: -5.732873439788818
    7. '[list' → logprob: -6.607873439788818
    8. '[(' → logprob: -6.732873439788818
    9. 'list' → logprob: -6.857873439788818
    10. '(tuple' → logprob: -6.857873439788818

Token 254: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5561546683311462
    2. ' for' → logprob: -1.056154727935791
    3. '       ' → logprob: -2.806154727935791
    4. ')' → logprob: -5.431154727935791
    5. ' =' → logprob: -5.806154727935791
    6. '   ' → logprob: -5.931154727935791
    7. '<|end|>' → logprob: -6.181154727935791
    8. '=' → logprob: -6.306154727935791
    9. '[' → logprob: -6.431154727935791
    10. '[:]' → logprob: -7.306154727935791

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3332201838493347
    2. 'for' (adapté à ' for') → logprob: -1.3332202434539795
    3. '       ' → logprob: -3.9582202434539795
    4. '[' → logprob: -8.458220481872559
    5. '   ' → logprob: -9.708220481872559
    6. ' [' → logprob: -10.208220481872559
    7. '        ' → logprob: -10.458220481872559
    8. ')' → logprob: -10.583220481872559
    9. ' ' → logprob: -10.583220481872559
    10. '[line' → logprob: -10.708220481872559

Token 256: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019116783514618874
    2. ' _' → logprob: -4.2691168785095215
    3. '_i' → logprob: -5.3941168785095215
    4. 'i' → logprob: -8.394116401672363
    5. ' i' → logprob: -8.769116401672363
    6. '_line' → logprob: -12.269116401672363
    7. '_=' → logprob: -12.519116401672363
    8. '   ' → logprob: -13.769116401672363
    9. '_j' → logprob: -13.769116401672363
    10. ' ' → logprob: -14.019116401672363

Token 257: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2693924009799957
    2. 'range' → logprob: -1.8943923711776733
    3. ' in' → logprob: -2.519392490386963
    4. 'ange' → logprob: -6.019392490386963
    5. ' range' → logprob: -6.519392490386963
    6. ' ' → logprob: -7.519392490386963
    7. '_' → logprob: -8.019392013549805
    8. 'x' → logprob: -8.894392013549805
    9. '(range' → logprob: -9.519392013549805
    10. '  ' → logprob: -9.644392013549805

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.5954712075181305e-05
    2. ' range' → logprob: -10.250036239624023
    3. '(range' → logprob: -15.500036239624023
    4. '(' → logprob: -16.375036239624023
    5. '	range' → logprob: -16.750036239624023
    6. 'x' → logprob: -17.375036239624023
    7. 'rang' → logprob: -17.750036239624023
    8. ')' → logprob: -18.500036239624023
    9. '```' → logprob: -18.750036239624023
    10. '[' → logprob: -18.875036239624023

Token 259: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5786431431770325
    2. 'x' → logprob: -0.8286431431770325
    3. '(' → logprob: -6.578643321990967
    4. ' x' → logprob: -6.953643321990967
    5. ' (' → logprob: -8.578642845153809
    6. '(y' → logprob: -10.328642845153809
    7. 'y' → logprob: -10.578642845153809
    8. ')' → logprob: -11.078642845153809
    9. ' ' → logprob: -11.328642845153809
    10. '(
' → logprob: -11.453642845153809

Token 260: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3135882019996643
    2. '):' → logprob: -1.3135881423950195
    3. '       ' → logprob: -9.06358814239502
    4. ')' → logprob: -9.31358814239502
    5. '):
' → logprob: -9.68858814239502
    6. '   ' → logprob: -10.56358814239502
    7. ':
' → logprob: -11.81358814239502
    8. ':' → logprob: -11.93858814239502
    9. '):

' → logprob: -12.31358814239502
    10. '():
' → logprob: -12.56358814239502

Token 261: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027820492163300514
    2. '           ' → logprob: -3.902820587158203
    3. '   ' → logprob: -5.527820587158203
    4. ' start' → logprob: -6.527820587158203
    5. ' s' → logprob: -7.652820587158203
    6. ')' → logprob: -8.402820587158203
    7. 'start' → logprob: -8.777820587158203
    8. ',' → logprob: -9.152820587158203
    9. '    
' → logprob: -9.277820587158203
    10. ' line' → logprob: -9.527820587158203

Token 262: ' line' (ID: 2543)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1301095187664032
    2. ' start' → logprob: -2.1301095485687256
    3. 'state' → logprob: -7.0051093101501465
    4. 'car' → logprob: -7.5051093101501465
    5. 'arr' → logprob: -7.8801093101501465
    6. 's' → logprob: -8.005109786987305
    7. ' car' → logprob: -8.380109786987305
    8. 'n' → logprob: -8.880109786987305
    9. 'a' → logprob: -9.255109786987305
    10. ' s' → logprob: -9.755109786987305

Token 263: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9568897485733032
    2. '=' → logprob: -1.7068897485733032
    3. '_' → logprob: -2.3318896293640137
    4. '.append' → logprob: -2.3318896293640137
    5. ' =' → logprob: -2.4568896293640137
    6. '_state' → logprob: -2.8318896293640137
    7. '_,' → logprob: -4.206889629364014
    8. 'state' → logprob: -4.331889629364014
    9. '_input' → logprob: -4.456889629364014
    10. 's' → logprob: -4.956889629364014

Token 264: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005676703527569771
    2. ' input' → logprob: -5.755676746368408
    3. 'list' → logprob: -6.005676746368408
    4. 'int' → logprob: -11.13067626953125
    5. ' list' → logprob: -11.13067626953125
    6. '[input' → logprob: -13.88067626953125
    7. '<input' → logprob: -15.63067626953125
    8. 'deque' → logprob: -15.75567626953125
    9. 'tuple' → logprob: -16.25567626953125
    10. '	input' → logprob: -16.38067626953125

Token 265: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3869207501411438
    2. '()' → logprob: -1.136920690536499
    3. '()
' → logprob: -10.136920928955078
    4. ')' → logprob: -12.261920928955078
    5. '())' → logprob: -12.636920928955078
    6. '()
' → logprob: -14.136920928955078
    7. '()

' → logprob: -15.011920928955078
    8. '(' → logprob: -15.511920928955078
    9. '.strip' → logprob: -15.511920928955078
    10. '.' → logprob: -15.636920928955078

Token 266: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011052536778151989
    2. 'split' → logprob: -4.51105260848999
    3. 'rstrip' → logprob: -12.261052131652832
    4. ' strip' → logprob: -17.51105308532715
    5. 'replace' → logprob: -19.26105308532715
    6. 'str' → logprob: -19.51105308532715
    7. ' split' → logprob: -20.63605308532715
    8. '.strip' → logprob: -21.26105308532715
    9. 's' → logprob: -22.38605308532715
    10. '(strip' → logprob: -22.51105308532715

Token 267: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.025326421484351158
    2. '()
' → logprob: -3.7753264904022217
    3. '().' → logprob: -6.775326251983643
    4. '           ' → logprob: -7.525326251983643
    5. '())' → logprob: -8.4003267288208
    6. ')' → logprob: -9.0253267288208
    7. '())
' → logprob: -11.4003267288208
    8. '=' → logprob: -11.7753267288208
    9. '       ' → logprob: -12.0253267288208
    10. '()

' → logprob: -12.4003267288208

Token 268: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5859106183052063
    2. '<|end|>' → logprob: -1.5859105587005615
    3. '           ' → logprob: -1.9609105587005615
    4. ')' → logprob: -3.3359105587005615
    5. '[start' → logprob: -4.210910797119141
    6. 'start' → logprob: -4.335910797119141
    7. '.split' → logprob: -5.210910797119141
    8. '<|end|>' → logprob: -5.460910797119141
    9. ' if' → logprob: -5.960910797119141
    10. '        ' → logprob: -5.960910797119141

Token 269: ' if' (ID: 538)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.028415309265255928
    2. ' start' → logprob: -3.7784152030944824
    3. '           ' → logprob: -6.403415203094482
    4. 'for' → logprob: -6.653415203094482
    5. 'if' (adapté à ' if') → logprob: -6.903415203094482
    6. '       ' → logprob: -8.15341567993164
    7. ' for' → logprob: -8.15341567993164
    8. ' if' → logprob: -8.27841567993164
    9. '   ' → logprob: -8.40341567993164
    10. '[start' → logprob: -10.02841567993164

Token 270: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06838848441839218
    2. ' line' → logprob: -3.3183884620666504
    3. 'len' → logprob: -3.5683884620666504
    4. ' len' → logprob: -7.19338846206665
    5. 'not' → logprob: -7.69338846206665
    6. ' not' → logprob: -7.69338846206665
    7. '   ' → logprob: -11.693388938903809
    8. ' ' → logprob: -12.193388938903809
    9. '(line' → logprob: -12.818388938903809
    10. ''' → logprob: -13.068388938903809

Token 271: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37928152084350586
    2. ':' → logprob: -1.6292815208435059
    3. ' ==' → logprob: -2.504281520843506
    4. '!=' → logprob: -3.879281520843506
    5. ' !=' → logprob: -5.254281520843506
    6. '.startswith' → logprob: -5.254281520843506
    7. '=' → logprob: -6.129281520843506
    8. '):' → logprob: -6.129281520843506
    9. ' not' → logprob: -7.379281520843506
    10. ')' → logprob: -7.879281520843506

Token 272: ' '-' (ID: 17489)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -1.0648399591445923
    2. ''' → logprob: -1.6898399591445923
    3. '''' → logprob: -2.0648398399353027
    4. ''-' → logprob: -2.4398398399353027
    5. ''.' → logprob: -2.8148398399353027
    6. '""' → logprob: -3.0648398399353027
    7. '"' → logprob: -3.1898398399353027
    8. ''*' → logprob: -3.1898398399353027
    9. '"E' → logprob: -3.3148398399353027
    10. ''#' → logprob: -5.689839839935303

Token 273: '':
' (ID: 7669)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017024796456098557
    2. '':' → logprob: -4.892024993896484
    3. ''>' → logprob: -5.142024993896484
    4. ''' → logprob: -6.267024993896484
    5. '':
' → logprob: -8.142024993896484
    6. ''-' → logprob: -8.267024993896484
    7. '-' → logprob: -8.267024993896484
    8. '<|end|>' → logprob: -8.517024993896484
    9. ''):
' → logprob: -9.142024993896484
    10. ''>
' → logprob: -9.142024993896484

Token 274: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7835681438446045
    2. '           ' → logprob: -0.9085681438446045
    3. 'start' → logprob: -2.1585681438446045
    4. ' start' → logprob: -3.9085681438446045
    5. '[start' → logprob: -6.658568382263184
    6. '[]' → logprob: -7.533568382263184
    7. '                
' → logprob: -7.658568382263184
    8. '0' → logprob: -7.783568382263184
    9. ',start' → logprob: -8.283568382263184
    10. '            
' → logprob: -8.658568382263184

Token 275: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.030194837599992752
    2. ' start' → logprob: -3.5301947593688965
    3. '               ' → logprob: -7.7801947593688965
    4. 'continue' → logprob: -11.530195236206055
    5. '[start' → logprob: -12.280195236206055
    6. '[]' → logprob: -12.780195236206055
    7. '           ' → logprob: -13.030195236206055
    8. '                   ' → logprob: -13.280195236206055
    9. '                
' → logprob: -13.905195236206055
    10. ' continue' → logprob: -13.905195236206055

Token 276: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.845798710244708e-05
    2. '.' → logprob: -10.250038146972656
    3. '.extend' → logprob: -13.125038146972656
    4. ' .' → logprob: -14.375038146972656
    5. 'append' → logprob: -15.500038146972656
    6. '.app' → logprob: -15.625038146972656
    7. '.ap' → logprob: -16.500038146972656
    8. '+=' → logprob: -18.750038146972656
    9. ' append' → logprob: -19.875038146972656
    10. '.Append' → logprob: -20.250038146972656

Token 277: '('')
' (ID: 74203)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43726497888565063
    2. 'None' → logprob: -2.062264919281006
    3. '-' → logprob: -2.812264919281006
    4. '([]' → logprob: -2.937264919281006
    5. '(None' → logprob: -2.937264919281006
    6. '(-' → logprob: -3.062264919281006
    7. '0' → logprob: -5.687264919281006
    8. '(' → logprob: -5.812264919281006
    9. '('' → logprob: -5.937264919281006
    10. 'deque' → logprob: -6.187264919281006

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12229235470294952
    2. 'else' → logprob: -2.3722922801971436
    3. ' else' → logprob: -3.9972922801971436
    4. '       ' → logprob: -5.747292518615723
    5. '               ' → logprob: -9.247292518615723
    6. '<|end|>' → logprob: -9.247292518615723
    7. '	       ' → logprob: -10.997292518615723
    8. '          ' → logprob: -11.122292518615723
    9. '   ' → logprob: -11.747292518615723
    10. '		' → logprob: -11.747292518615723

Token 279: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15355634689331055
    2. ' else' → logprob: -2.5285563468933105
    3. '       ' → logprob: -2.7785563468933105
    4. '           ' → logprob: -8.028556823730469
    5. '<|end|>' → logprob: -10.028556823730469
    6. '	else' → logprob: -10.528556823730469
    7. '   ' → logprob: -11.528556823730469
    8. '               ' → logprob: -12.028556823730469
    9. 'elif' → logprob: -12.153556823730469
    10. '        ' → logprob: -12.403556823730469

Token 280: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04945932701230049
    2. ' start' → logprob: -3.299459218978882
    3. '           ' → logprob: -5.299459457397461
    4. 'start' → logprob: -5.924459457397461
    5. '[start' → logprob: -6.924459457397461
    6. ':' → logprob: -7.049459457397461
    7. '	           ' → logprob: -7.424459457397461
    8. '<|end|>' → logprob: -8.674459457397461
    9. '		       ' → logprob: -8.674459457397461
    10. '	       ' → logprob: -8.924459457397461

Token 281: '               ' (ID: 506)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.43488991260528564
    2. 'start' → logprob: -1.0598899126052856
    3. '           ' → logprob: -5.309889793395996
    4. '               ' → logprob: -6.809889793395996
    5. '[start' → logprob: -10.184889793395996
    6. '   ' → logprob: -10.559889793395996
    7. ' ' → logprob: -10.934889793395996
    8. '            ' → logprob: -11.559889793395996
    9. '	start' → logprob: -11.684889793395996
    10. ',start' → logprob: -12.559889793395996

Token 282: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.026317832991480827
    2. ' start' → logprob: -3.651317834854126
    3. '               ' → logprob: -11.901317596435547
    4. 'for' → logprob: -12.776317596435547
    5. '[start' → logprob: -12.776317596435547
    6. '           ' → logprob: -13.151317596435547
    7. 'line' → logprob: -13.776317596435547
    8. ' ' → logprob: -14.401317596435547
    9. ' for' → logprob: -14.776317596435547
    10. 'list' → logprob: -15.276317596435547

Token 283: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.021609807386994362
    2. '=' → logprob: -4.396609783172607
    3. '.extend' → logprob: -5.396609783172607
    4. '+=' → logprob: -5.646609783172607
    5. '.' → logprob: -7.146609783172607
    6. 'append' → logprob: -9.271610260009766
    7. '.=' → logprob: -9.646610260009766
    8. ' +=' → logprob: -10.146610260009766
    9. ' =' → logprob: -11.896610260009766
    10. '+' → logprob: -13.396610260009766

Token 284: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.10044777393341064
    2. 'line' → logprob: -2.350447654724121
    3. 'list' → logprob: -8.725447654724121
    4. '(list' → logprob: -10.100447654724121
    5. ' line' → logprob: -10.475447654724121
    6. '(' → logprob: -11.975447654724121
    7. '[line' → logprob: -13.725447654724121
    8. 'tuple' → logprob: -14.350447654724121
    9. '(tuple' → logprob: -14.600447654724121
    10. '(str' → logprob: -15.225447654724121

Token 285: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.347765181795694e-05
    2. ' )' → logprob: -10.875053405761719
    3. '       ' → logprob: -11.125053405761719
    4. ')
' → logprob: -11.125053405761719
    5. '           ' → logprob: -12.875053405761719
    6. '))' → logprob: -14.250053405761719
    7. '               ' → logprob: -14.750053405761719
    8. '')' → logprob: -15.000053405761719
    9. '   ' → logprob: -15.625053405761719
    10. '[' → logprob: -15.750053405761719

Token 286: '       ' (ID: 309)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.8978533744812012
    2. '       ' → logprob: -1.5228533744812012
    3. ')' → logprob: -1.7728533744812012
    4. '<|end|>' → logprob: -1.7728533744812012
    5. '{' → logprob: -4.647853374481201
    6. '   ' → logprob: -5.147853374481201
    7. 'connections' → logprob: -5.272853374481201
    8. ',' → logprob: -5.397853374481201
    9. ']' → logprob: -6.147853374481201
    10. ')}' → logprob: -6.647853374481201

Token 287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03655043989419937
    2. '   ' → logprob: -4.036550521850586
    3. 'visited' → logprob: -4.786550521850586
    4. '#' (adapté à ' #') → logprob: -5.286550521850586
    5. ')' → logprob: -6.411550521850586
    6. 'end' → logprob: -7.661550521850586
    7. 'queue' → logprob: -8.036550521850586
    8. 'next' → logprob: -8.161550521850586
    9. 'connections' → logprob: -8.161550521850586
    10. '        
' → logprob: -8.536550521850586

Token 288: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32329419255256653
    2. 'goal' → logprob: -2.948294162750244
    3. 'def' → logprob: -3.198294162750244
    4. 'from' → logprob: -3.323294162750244
    5. '       ' → logprob: -3.448294162750244
    6. 'end' → logprob: -3.573294162750244
    7. 'start' → logprob: -3.948294162750244
    8. 'visited' → logprob: -3.948294162750244
    9. 'target' → logprob: -4.448294162750244
    10. '   ' → logprob: -4.823294162750244

Token 289: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13016007840633392
    2. 'des' → logprob: -2.380160093307495
    3. ' des' → logprob: -3.880160093307495
    4. '#' → logprob: -6.005159854888916
    5. 'de' → logprob: -6.505159854888916
    6. ' of' → logprob: -6.630159854888916
    7. '   ' → logprob: -6.755159854888916
    8. ' de' → logprob: -7.380159854888916
    9. 'du' → logprob: -7.880159854888916
    10. 'of' → logprob: -8.380160331726074

Token 290: ' configurations' (ID: 56804)
  Prédit: 'config'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'config' → logprob: -0.5427542328834534
    2. 'configs' → logprob: -2.5427541732788086
    3. 'dest' → logprob: -2.6677541732788086
    4. 'arr' → logprob: -2.6677541732788086
    5. 'start' → logprob: -3.0427541732788086
    6. 'c' → logprob: -3.6677541732788086
    7. 'target' → logprob: -4.042754173278809
    8. ' configurations' → logprob: -4.167754173278809
    9. 'instructions' → logprob: -4.417754173278809
    10. 'end' → logprob: -4.542754173278809

Token 291: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.585697591304779
    2. '       ' → logprob: -1.9606976509094238
    3. '_c' → logprob: -2.585697650909424
    4. 'd' → logprob: -2.835697650909424
    5. 'final' → logprob: -2.960697650909424
    6. 'target' → logprob: -3.335697650909424
    7. ' cible' → logprob: -4.085697650909424
    8. 'su' → logprob: -4.585697650909424
    9. 'de' → logprob: -4.585697650909424
    10. 'des' → logprob: -4.960697650909424

Token 292: ' départ' (ID: 32693)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.746236264705658
    2. 'dé' → logprob: -0.996236264705658
    3. 'arr' → logprob: -2.1212363243103027
    4. 'destination' → logprob: -4.621236324310303
    5. 'sort' → logprob: -4.746236324310303
    6. 'depart' → logprob: -5.121236324310303
    7. 'd' → logprob: -5.496236324310303
    8. 'but' → logprob: -5.996236324310303
    9. ' départ' → logprob: -6.121236324310303
    10. ' fin' → logprob: -6.996236324310303

Token 293: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2575019299983978
    2. 'end' → logprob: -1.6325019598007202
    3. 'for' → logprob: -4.50750207901001
    4. 'target' → logprob: -5.00750207901001
    5. 'depart' → logprob: -5.25750207901001
    6. 'dest' → logprob: -5.63250207901001
    7. 'departure' → logprob: -6.13250207901001
    8. ' for' → logprob: -7.38250207901001
    9. 'final' → logprob: -7.50750207901001
    10. ' end' → logprob: -8.007501602172852

Token 294: 'ét' (ID: 3913)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.08422306180000305
    2. ' end' → logprob: -2.5842230319976807
    3. 'target' → logprob: -6.45922327041626
    4. 'goal' → logprob: -6.45922327041626
    5. 'finish' → logprob: -7.08422327041626
    6. 'final' → logprob: -7.95922327041626
    7. ')' → logprob: -8.084222793579102
    8. 'stop' → logprob: -8.834222793579102
    9. ' target' → logprob: -9.084222793579102
    10. 'fin' → logprob: -9.334222793579102

Token 295: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0036899782717227936
    2. 'tat' → logprob: -6.503689765930176
    3. 'al' → logprob: -7.878689765930176
    4. 'a' → logprob: -9.003689765930176
    5. 'initial' → logprob: -9.003689765930176
    6. 'ait' → logprob: -9.128689765930176
    7. 'end' → logprob: -9.253689765930176
    8. 'ale' → logprob: -9.253689765930176
    9. 'ats' → logprob: -9.378689765930176
    10. 'e' → logprob: -9.628689765930176

Token 296: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.09404616057872772
    2. ' final' → logprob: -2.469046115875244
    3. '_final' → logprob: -5.969046115875244
    4. 'initial' → logprob: -6.219046115875244
    5. ' initial' → logprob: -7.719046115875244
    6. '_initial' → logprob: -10.094046592712402
    7. '_' → logprob: -10.844046592712402
    8. ' ' → logprob: -11.969046592712402
    9. ')' → logprob: -12.094046592712402
    10. ' finale' → logprob: -12.094046592712402

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12961360812187195
    2. ')
' → logprob: -2.2546136379241943
    3. '       ' → logprob: -4.254613399505615
    4. '):
' → logprob: -6.129613399505615
    5. '):' → logprob: -9.379613876342773
    6. '```' → logprob: -9.879613876342773
    7. '   ' → logprob: -10.129613876342773
    8. ' )' → logprob: -10.879613876342773
    9. ')

' → logprob: -11.004613876342773
    10. '<|end|>' → logprob: -11.379613876342773

Token 298: '       ' (ID: 309)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.11793919652700424
    2. '       ' → logprob: -2.2429392337799072
    3. 'final' → logprob: -6.242938995361328
    4. 'finish' → logprob: -6.742938995361328
    5. 'target' → logprob: -6.992938995361328
    6. ' end' → logprob: -7.742938995361328
    7. 'goal' → logprob: -8.117938995361328
    8. '   ' → logprob: -8.617938995361328
    9. 'dest' → logprob: -10.117938995361328
    10. 'for' → logprob: -10.242938995361328

Token 299: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0001907855912577361
    2. 'goal' (adapté à ' goal') → logprob: -8.750190734863281
    3. 'finish' → logprob: -11.375190734863281
    4. 'target' → logprob: -11.500190734863281
    5. ' end' → logprob: -11.625190734863281
    6. 'done' → logprob: -14.375190734863281
    7. 'final' → logprob: -15.000190734863281
    8. '   ' → logprob: -15.250190734863281
    9. 'for' → logprob: -16.25019073486328
    10. 'fin' → logprob: -16.37519073486328

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619741789996624
    2. '=' → logprob: -2.811974287033081
    3. '=[]' → logprob: -12.31197452545166
    4. '   ' → logprob: -14.06197452545166
    5. '=[]
' → logprob: -15.06197452545166
    6. ':' → logprob: -15.31197452545166
    7. ' ' → logprob: -15.56197452545166
    8. ' =
' → logprob: -16.186973571777344
    9. '[:]' → logprob: -16.186973571777344
    10. ',' → logprob: -16.311973571777344

Token 301: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.018310893326997757
    2. '[]' → logprob: -4.018311023712158
    3. ' []
' → logprob: -9.518310546875
    4. '[start' → logprob: -9.643310546875
    5. '[]

' → logprob: -11.143310546875
    6. ' []' → logprob: -12.518310546875
    7. '[' → logprob: -12.643310546875
    8. '[
' → logprob: -14.393310546875
    9. 'start' → logprob: -15.893310546875
    10. '[])
' → logprob: -16.018310546875

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08915462344884872
    2. 'for' → logprob: -2.7141547203063965
    3. ' for' → logprob: -3.9641547203063965
    4. '   ' → logprob: -10.964154243469238
    5. '	for' → logprob: -11.214154243469238
    6. '<|end|>' → logprob: -11.464154243469238
    7. '	' → logprob: -12.714154243469238
    8. '[' → logprob: -13.214154243469238
    9. '           ' → logprob: -13.589154243469238
    10. ' ' → logprob: -14.464154243469238

Token 303: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.250004768371582
    3. '       ' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.7500057220459
    5. '	for' → logprob: -20.7500057220459
    6. '
' → logprob: -21.7500057220459
    7. '```' → logprob: -24.0000057220459
    8. 'from' → logprob: -24.7500057220459
    9. '.for' → logprob: -25.2500057220459
    10. 'while' → logprob: -25.5000057220459

Token 304: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.392202976712724e-06
    2. ' _' → logprob: -12.000006675720215
    3. '_range' → logprob: -16.5000057220459
    4. ' range' → logprob: -18.2500057220459
    5. ' in' → logprob: -19.3750057220459
    6. '_
' → logprob: -19.7500057220459
    7. 'range' → logprob: -20.6250057220459
    8. '_=' → logprob: -20.6250057220459
    9. '_
' → logprob: -21.7500057220459
    10. '_in' → logprob: -21.8750057220459

Token 305: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028761692345142365
    2. 'range' → logprob: -3.778761625289917
    3. ' range' → logprob: -5.278761863708496
    4. ' in' → logprob: -8.403761863708496
    5. 'in' → logprob: -8.778761863708496
    6. '_range' → logprob: -10.653761863708496
    7. '(range' → logprob: -16.02876091003418
    8. ' _' → logprob: -16.27876091003418
    9. 'Range' → logprob: -16.40376091003418
    10. '   ' → logprob: -16.52876091003418

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008699309080839157
    2. ' range' → logprob: -4.758699417114258
    3. '_' → logprob: -9.383699417114258
    4. '_range' → logprob: -14.633699417114258
    5. '(range' → logprob: -16.008699417114258
    6. '	range' → logprob: -17.758699417114258
    7. '   ' → logprob: -18.758699417114258
    8. ' ' → logprob: -19.383699417114258
    9. '
' → logprob: -20.258699417114258
    10. 'rang' → logprob: -20.258699417114258

Token 307: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00036442498094402254
    2. 'x' → logprob: -8.000364303588867
    3. '(' → logprob: -10.500364303588867
    4. ' (' → logprob: -13.875364303588867
    5. ' x' → logprob: -15.125364303588867
    6. '(
' → logprob: -16.750364303588867
    7. '       ' → logprob: -16.750364303588867
    8. '   ' → logprob: -16.875364303588867
    9. 'def' → logprob: -18.125364303588867
    10. '```' → logprob: -18.125364303588867

Token 308: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009805555455386639
    2. '):' → logprob: -4.634805679321289
    3. '           ' → logprob: -10.884805679321289
    4. '):
' → logprob: -11.009805679321289
    5. '       ' → logprob: -11.759805679321289
    6. '   ' → logprob: -12.884805679321289
    7. ')' → logprob: -13.759805679321289
    8. ':
' → logprob: -13.884805679321289
    9. ' ):
' → logprob: -14.259805679321289
    10. ':' → logprob: -14.759805679321289

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0046249874867498875
    2. ' line' → logprob: -5.754624843597412
    3. 'line' → logprob: -6.754624843597412
    4. '       ' → logprob: -8.62962532043457
    5. '   ' → logprob: -10.12962532043457
    6. '	       ' → logprob: -11.12962532043457
    7. '		' → logprob: -11.25462532043457
    8. '	line' → logprob: -11.25462532043457
    9. '		   ' → logprob: -12.12962532043457
    10. '	   ' → logprob: -12.12962532043457

Token 310: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0010949730640277267
    2. ' line' → logprob: -7.251094818115234
    3. '           ' → logprob: -7.876094818115234
    4. '   ' → logprob: -13.001094818115234
    5. '	line' → logprob: -13.251094818115234
    6. '
' → logprob: -15.376094818115234
    7. '               ' → logprob: -16.001094818115234
    8. '```' → logprob: -16.001094818115234
    9. '       ' → logprob: -16.126094818115234
    10. '_line' → logprob: -16.251094818115234

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602294147014618
    2. ' =' → logprob: -1.9102294445037842
    3. '=input' → logprob: -13.160229682922363
    4. '           ' → logprob: -13.410229682922363
    5. '=line' → logprob: -13.410229682922363
    6. '   ' → logprob: -16.035228729248047
    7. '		' → logprob: -16.285228729248047
    8. ')' → logprob: -17.285228729248047
    9. '=
' → logprob: -17.660228729248047
    10. '＝' → logprob: -17.785228729248047

Token 312: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602250337600708
    2. ' input' → logprob: -1.9102250337600708
    3. '=input' → logprob: -14.660224914550781
    4. '   ' → logprob: -16.03522491455078
    5. '(input' → logprob: -16.03522491455078
    6. '	input' → logprob: -16.16022491455078
    7. ',input' → logprob: -16.78522491455078
    8. '<input' → logprob: -17.28522491455078
    9. ' ' → logprob: -17.66022491455078
    10. '           ' → logprob: -18.03522491455078

Token 313: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '.strip' → logprob: -14.125000953674316
    3. '.' → logprob: -15.250000953674316
    4. '()' → logprob: -15.750000953674316
    5. ' ().' → logprob: -16.750001907348633
    6. ').' → logprob: -17.625001907348633
    7. ' .' → logprob: -18.125001907348633
    8. '=' → logprob: -19.125001907348633
    9. '
' → logprob: -19.625001907348633
    10. '>().' → logprob: -19.625001907348633

Token 314: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'rstrip' → logprob: -16.0
    3. '.strip' → logprob: -16.25
    4. 'split' → logprob: -17.25
    5. ' strip' → logprob: -17.5
    6. '(strip' → logprob: -18.75
    7. '_strip' → logprob: -19.375
    8. 'str' → logprob: -19.5
    9. 'stripe' → logprob: -19.75
    10. '```' → logprob: -20.0

Token 315: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.747683048248291
    2. '()
' → logprob: -1.247683048248291
    3. '()' → logprob: -1.747683048248291
    4. ')' → logprob: -3.372683048248291
    5. ')
' → logprob: -4.122683048248291
    6. 'if' → logprob: -5.122683048248291
    7. '       ' → logprob: -5.122683048248291
    8. '               ' → logprob: -6.997683048248291
    9. ' if' → logprob: -7.122683048248291
    10. ':
' → logprob: -8.372682571411133

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012100589461624622
    2. '       ' → logprob: -4.887100696563721
    3. 'if' → logprob: -5.512100696563721
    4. ' if' → logprob: -7.887100696563721
    5. '   ' → logprob: -10.012100219726562
    6. '               ' → logprob: -11.137100219726562
    7. ' ' → logprob: -12.887100219726562
    8. '          ' → logprob: -13.012100219726562
    9. '<|end|>' → logprob: -13.012100219726562
    10. '         ' → logprob: -13.387100219726562

Token 317: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5823879837989807
    2. '           ' → logprob: -0.8323879837989807
    3. '       ' → logprob: -5.332387924194336
    4. ' if' → logprob: -6.457387924194336
    5. '   ' → logprob: -11.207387924194336
    6. '               ' → logprob: -12.207387924194336
    7. '
' → logprob: -13.457387924194336
    8. 'goal' → logprob: -13.582387924194336
    9. '          ' → logprob: -13.707387924194336
    10. '         ' → logprob: -13.707387924194336

Token 318: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029763920232653618
    2. ' line' → logprob: -3.52976393699646
    3. '-' → logprob: -12.029764175415039
    4. ''-' → logprob: -12.779764175415039
    5. ' ' → logprob: -13.404764175415039
    6. '   ' → logprob: -13.654764175415039
    7. '	line' → logprob: -14.154764175415039
    8. '  ' → logprob: -15.029764175415039
    9. '(line' → logprob: -15.279764175415039
    10. '-line' → logprob: -16.02976417541504

Token 319: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759585499763489
    2. ' ==' → logprob: -0.8259585499763489
    3. '=' → logprob: -11.700958251953125
    4. '=='' → logprob: -13.075958251953125
    5. '==-' → logprob: -13.075958251953125
    6. ')' → logprob: -13.200958251953125
    7. ' !=' → logprob: -13.700958251953125
    8. '===' → logprob: -14.325958251953125
    9. '!=' → logprob: -14.325958251953125
    10. '==
' → logprob: -14.450958251953125

Token 320: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -1.1160349458805285e-05
    2. ' '-' → logprob: -12.000011444091797
    3. '-' → logprob: -12.750011444091797
    4. '('-' → logprob: -13.750011444091797
    5. '''' → logprob: -15.500011444091797
    6. ''' → logprob: -15.625011444091797
    7. '"-' → logprob: -15.750011444091797
    8. ' '-'' → logprob: -16.000011444091797
    9. '’-' → logprob: -16.125011444091797
    10. ''>' → logprob: -16.500011444091797

Token 321: '':
' (ID: 7669)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6776100397109985
    2. ''' → logprob: -1.1776100397109985
    3. ''):
' → logprob: -2.802609920501709
    4. ':
' → logprob: -3.177609920501709
    5. '':
' → logprob: -3.427609920501709
    6. '':' → logprob: -3.552609920501709
    7. '               ' → logprob: -4.927609920501709
    8. ':' → logprob: -5.052609920501709
    9. '')' → logprob: -6.427609920501709
    10. ''):' → logprob: -6.427609920501709

Token 322: '               ' (ID: 506)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0029389522969722748
    2. '               ' → logprob: -6.252938747406006
    3. '''
' → logprob: -7.502938747406006
    4. 'start' → logprob: -8.877939224243164
    5. ''' → logprob: -9.002939224243164
    6. ' ''' → logprob: -9.502939224243164
    7. '           ' → logprob: -9.877939224243164
    8. '""' → logprob: -9.877939224243164
    9. '''.' → logprob: -12.377939224243164
    10. ' start' → logprob: -12.752939224243164

Token 323: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.022809894755482674
    2. '''' → logprob: -4.022809982299805
    3. 'start' → logprob: -6.022809982299805
    4. ' goal' → logprob: -6.147809982299805
    5. '''
' → logprob: -10.272809982299805
    6. '.goal' → logprob: -11.397809982299805
    7. '           ' → logprob: -11.522809982299805
    8. '(goal' → logprob: -11.772809982299805
    9. ''' → logprob: -12.022809982299805
    10. '               ' → logprob: -12.397809982299805

Token 324: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -12.000009536743164
    3. 'append' → logprob: -12.625009536743164
    4. '.app' → logprob: -16.125009536743164
    5. ' .' → logprob: -17.625009536743164
    6. 'app' → logprob: -18.125009536743164
    7. 'appen' → logprob: -18.375009536743164
    8. '.Append' → logprob: -18.625009536743164
    9. ' append' → logprob: -19.875009536743164
    10. '_append' → logprob: -20.250009536743164

Token 325: '('')
' (ID: 74203)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00011749001714633778
    2. '''
' → logprob: -9.750117301940918
    3. '('' → logprob: -10.000117301940918
    4. '('')
' → logprob: -12.125117301940918
    5. ''' → logprob: -12.375117301940918
    6. ' ''' → logprob: -13.000117301940918
    7. '""' → logprob: -13.250117301940918
    8. '"' → logprob: -18.000118255615234
    9. ''''' → logprob: -18.125118255615234
    10. ''',' → logprob: -18.375118255615234

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00550469197332859
    2. 'else' → logprob: -5.255504608154297
    3. ' else' → logprob: -8.630504608154297
    4. '		' → logprob: -9.880504608154297
    5. '	       ' → logprob: -11.255504608154297
    6. '          ' → logprob: -12.130504608154297
    7. ')' → logprob: -12.255504608154297
    8. '<|end|>' → logprob: -12.255504608154297
    9. '       ' → logprob: -12.630504608154297
    10. '               ' → logprob: -12.755504608154297

Token 327: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.035535067319869995
    2. '           ' → logprob: -3.7855350971221924
    3. ' else' → logprob: -4.660534858703613
    4. '       ' → logprob: -5.910534858703613
    5. '               ' → logprob: -10.910534858703613
    6. '	else' → logprob: -11.785534858703613
    7. '	       ' → logprob: -12.410534858703613
    8. '		' → logprob: -12.910534858703613
    9. '   ' → logprob: -12.910534858703613
    10. '<|end|>' → logprob: -13.160534858703613

Token 328: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030507624614983797
    2. '           ' → logprob: -8.75030517578125
    3. 'start' → logprob: -9.25030517578125
    4. ':
' → logprob: -11.12530517578125
    5. ':' → logprob: -11.75030517578125
    6. '   ' → logprob: -12.00030517578125
    7. '	           ' → logprob: -12.25030517578125
    8. '              ' → logprob: -12.62530517578125
    9. '		       ' → logprob: -13.75030517578125
    10. '.' → logprob: -13.87530517578125

Token 329: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10174501687288284
    2. 'goal' → logprob: -2.351745128631592
    3. '           ' → logprob: -6.601745128631592
    4. ' goal' → logprob: -8.851744651794434
    5. '       ' → logprob: -11.101744651794434
    6. 'start' → logprob: -11.726744651794434
    7. '   ' → logprob: -12.351744651794434
    8. '              ' → logprob: -12.726744651794434
    9. '(goal' → logprob: -13.226744651794434
    10. '             ' → logprob: -14.351744651794434

Token 330: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.030938776209950447
    2. 'line' → logprob: -3.5309388637542725
    3. 'start' → logprob: -7.280938625335693
    4. ' goal' → logprob: -7.655938625335693
    5. ' line' → logprob: -10.655939102172852
    6. '           ' → logprob: -14.280939102172852
    7. ' start' → logprob: -15.030939102172852
    8. ' ' → logprob: -15.030939102172852
    9. '   ' → logprob: -15.155939102172852
    10. 'go' → logprob: -15.655939102172852

Token 331: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7729658540920354e-05
    2. '.' → logprob: -10.500027656555176
    3. 'append' → logprob: -16.250028610229492
    4. '.app' → logprob: -17.125028610229492
    5. '.extend' → logprob: -17.250028610229492
    6. ' .' → logprob: -17.250028610229492
    7. '.ap' → logprob: -19.875028610229492
    8. '.Append' → logprob: -20.000028610229492
    9. '.push' → logprob: -21.250028610229492
    10. 'Append' → logprob: -21.500028610229492

Token 332: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005235529970377684
    2. 'line' → logprob: -5.25523567199707
    3. ' line' → logprob: -13.75523567199707
    4. '(' → logprob: -14.88023567199707
    5. '=line' → logprob: -15.38023567199707
    6. '[line' → logprob: -16.13023567199707
    7. '#line' → logprob: -17.38023567199707
    8. ',line' → logprob: -17.88023567199707
    9. ' (' → logprob: -18.75523567199707
    10. ')' → logprob: -18.75523567199707

Token 333: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012354647042229772
    2. '<|end|>' → logprob: -6.876235485076904
    3. '       ' → logprob: -9.126235008239746
    4. '')' → logprob: -10.751235008239746
    5. '<|end|>' → logprob: -10.876235008239746
    6. ')
' → logprob: -10.876235008239746
    7. ' )' → logprob: -11.126235008239746
    8. '           ' → logprob: -12.376235008239746
    9. '#' → logprob: -12.626235008239746
    10. ']' → logprob: -13.251235008239746

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012610075064003468
    2. '
' → logprob: -5.012609958648682
    3. '   ' → logprob: -5.762609958648682
    4. '        
' → logprob: -6.512609958648682
    5. ')' → logprob: -8.13761043548584
    6. '    ' → logprob: -9.01261043548584
    7. '        ' → logprob: -9.01261043548584
    8. '#' → logprob: -9.13761043548584
    9. 'from' → logprob: -9.13761043548584
    10. 'def' → logprob: -9.76261043548584

Token 335: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.42526447772979736
    2. 'visited' → logprob: -1.5502644777297974
    3. '       ' → logprob: -2.425264358520508
    4. 'queue' → logprob: -3.425264358520508
    5. 'def' → logprob: -5.675264358520508
    6. 'start' → logprob: -5.925264358520508
    7. 'state' → logprob: -6.175264358520508
    8. 'dist' → logprob: -6.300264358520508
    9. '        
' → logprob: -7.175264358520508
    10. 'from' → logprob: -7.550264358520508

Token 336: ' BFS' (ID: 190016)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3533198833465576
    2. 'visited' → logprob: -1.9783198833465576
    3. 'queue' → logprob: -2.8533198833465576
    4. 'start' → logprob: -3.3533198833465576
    5. 'def' → logprob: -3.7283198833465576
    6. 'from' → logprob: -3.7283198833465576
    7. '   ' → logprob: -4.853320121765137
    8. 'state' → logprob: -5.603320121765137
    9. 'initial' → logprob: -6.603320121765137
    10. 'deque' → logprob: -6.728320121765137

Token 337: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09264399856328964
    2. '
' → logprob: -2.592643976211548
    3. '        
' → logprob: -5.342644214630127
    4. 'queue' → logprob: -5.717644214630127
    5. ' queue' → logprob: -5.842644214630127
    6. '(queue' → logprob: -6.967644214630127
    7. '_queue' → logprob: -7.467644214630127
    8. '   ' → logprob: -8.467643737792969
    9. '  
' → logprob: -8.842643737792969
    10. ' 
' → logprob: -9.092643737792969

Token 338: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.551145076751709
    2. 'expl' → logprob: -2.176145076751709
    3. 'chercher' → logprob: -2.926145076751709
    4. 'find' → logprob: -3.051145076751709
    5. 'deque' → logprob: -3.051145076751709
    6. 'queue' → logprob: -3.176145076751709
    7. 'que' → logprob: -3.676145076751709
    8. '   ' → logprob: -3.926145076751709
    9. 'search' → logprob: -4.551145076751709
    10. 'tr' → logprob: -4.676145076751709

Token 339: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.31716078519821167
    2. 'la' → logprob: -2.1921608448028564
    3. ' une' → logprob: -2.5671608448028564
    4. ' le' → logprob: -3.5671608448028564
    5. 'une' → logprob: -3.6921608448028564
    6. 'le' → logprob: -4.317160606384277
    7. ' un' → logprob: -4.817160606384277
    8. ' l' → logprob: -5.442160606384277
    9. 'l' → logprob: -6.317160606384277
    10. '   ' → logprob: -7.192160606384277

Token 340: ' nombre' (ID: 9733)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0840014219284058
    2. 'nombre' → logprob: -1.0840014219284058
    3. 'minimum' → logprob: -1.3340014219284058
    4. 'che' → logprob: -3.5840015411376953
    5. ' nombre' → logprob: -4.209001541137695
    6. 'minimal' → logprob: -5.334001541137695
    7. 'min' → logprob: -5.709001541137695
    8. ' plus' → logprob: -5.959001541137695
    9. ' minimum' → logprob: -6.209001541137695
    10. 'short' → logprob: -7.084001541137695

Token 341: ' minimal' (ID: 19957)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5614227652549744
    2. '       ' → logprob: -1.4364228248596191
    3. '   ' → logprob: -2.311422824859619
    4. ' d' → logprob: -2.686422824859619
    5. '    ' → logprob: -4.811422824859619
    6. 'de' → logprob: -5.061422824859619
    7. ' des' → logprob: -5.311422824859619
    8. '        ' → logprob: -6.936422824859619
    9. '  ' → logprob: -7.186422824859619
    10. 'd' → logprob: -7.561422824859619

Token 342: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553468465805054
    2. ' de' → logprob: -1.1803468465805054
    3. '   ' → logprob: -2.555346965789795
    4. ' des' → logprob: -4.180346965789795
    5. ' d' → logprob: -4.805346965789795
    6. '    ' → logprob: -4.930346965789795
    7. ' of' → logprob: -5.680346965789795
    8. 'de' → logprob: -6.305346965789795
    9. '        ' → logprob: -7.180346965789795
    10. '  ' → logprob: -7.305346965789795

Token 343: ' mouvements' (ID: 119420)
  Prédit: ' mouvements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mouvements' → logprob: -0.36713624000549316
    2. ' déplacements' → logprob: -1.3671362400054932
    3. 'moves' → logprob: -3.867136240005493
    4. ' étapes' → logprob: -4.742136001586914
    5. ' moves' → logprob: -4.867136001586914
    6. 'm' → logprob: -5.492136001586914
    7. ' coups' → logprob: -5.992136001586914
    8. ' changements' → logprob: -6.492136001586914
    9. 'steps' → logprob: -6.742136001586914
    10. ' échanges' → logprob: -7.117136001586914

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008063539862632751
    2. 'queue' → logprob: -5.258063316345215
    3. '
' → logprob: -6.758063316345215
    4. '        
' → logprob: -7.383063316345215
    5. 'visited' → logprob: -7.883063316345215
    6. ' queue' → logprob: -8.633063316345215
    7. '   ' → logprob: -8.633063316345215
    8. 'start' → logprob: -9.508063316345215
    9. 'state' → logprob: -10.258063316345215
    10. '      ' → logprob: -10.508063316345215

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00414761109277606
    2. '        
' → logprob: -6.254147529602051
    3. '
' → logprob: -7.379147529602051
    4. '<|end|>' → logprob: -7.754147529602051
    5. '   ' → logprob: -8.37914752960205
    6. '        ' → logprob: -8.75414752960205
    7. '      ' → logprob: -9.25414752960205
    8. 'queue' → logprob: -9.37914752960205
    9. '    ' → logprob: -9.50414752960205
    10. ' 
' → logprob: -10.12914752960205

Token 346: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8033280372619629
    2. 'start' → logprob: -1.678328037261963
    3. 'visited' → logprob: -1.678328037261963
    4. 'state' → logprob: -2.553328037261963
    5. ' queue' → logprob: -3.553328037261963
    6. '   ' → logprob: -4.053328037261963
    7. 'initial' → logprob: -4.303328037261963
    8. ' start' → logprob: -4.303328037261963
    9. ' visited' → logprob: -4.553328037261963
    10. ' state' → logprob: -4.928328037261963

Token 347: ' Etat' (ID: 197339)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8432425856590271
    2. 'visited' → logprob: -0.8432425856590271
    3. 'start' → logprob: -2.718242645263672
    4. 'state' → logprob: -3.593242645263672
    5. 'initial' → logprob: -3.843242645263672
    6. 'from' → logprob: -4.843242645263672
    7. '   ' → logprob: -5.343242645263672
    8. 'def' → logprob: -5.468242645263672
    9. ' visited' → logprob: -6.218242645263672
    10. '#' → logprob: -6.343242645263672

Token 348: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024069417268037796
    2. '=' → logprob: -3.899069309234619
    3. 's' → logprob: -6.274069309234619
    4. ':' → logprob: -6.899069309234619
    5. ')' → logprob: -7.899069309234619
    6. '_' → logprob: -9.774069786071777
    7. ' :' → logprob: -9.774069786071777
    8. ',' → logprob: -10.024069786071777
    9. ' )' → logprob: -10.774069786071777
    10. 'es' → logprob: -11.024069786071777

Token 349: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0003622793301474303
    2. 'ation' → logprob: -8.500362396240234
    3. 'és' → logprob: -9.625362396240234
    4. ')' → logprob: -10.625362396240234
    5. 'e' → logprob: -10.750362396240234
    6. '=' → logprob: -11.000362396240234
    7. 'ée' → logprob: -11.750362396240234
    8. 'ant' → logprob: -12.000362396240234
    9. 'par' → logprob: -12.125362396240234
    10. 'es' → logprob: -13.125362396240234

Token 350: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.37548160552978516
    2. 'par' → logprob: -1.5004816055297852
    3. ')' → logprob: -3.125481605529785
    4. ' as' → logprob: -4.000481605529785
    5. 'as' → logprob: -4.125481605529785
    6. 'e' → logprob: -5.500481605529785
    7. ',' → logprob: -6.875481605529785
    8. '_par' → logprob: -7.000481605529785
    9. ' )' → logprob: -7.125481605529785
    10. '=' → logprob: -7.250481605529785

Token 351: ' un' (ID: 537)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.030042394995689392
    2. ' tuple' → logprob: -3.5300424098968506
    3. '(tuple' → logprob: -8.15504264831543
    4. 'tu' → logprob: -12.53004264831543
    5. '(' → logprob: -14.28004264831543
    6. '_tuple' → logprob: -16.40504264831543
    7. ' (' → logprob: -16.40504264831543
    8. ' tuples' → logprob: -17.15504264831543
    9. '   ' → logprob: -17.28004264831543
    10. 'deque' → logprob: -17.65504264831543

Token 352: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0003951648832298815
    2. ' tuple' → logprob: -7.87539529800415
    3. 'tu' → logprob: -11.250394821166992
    4. '(tuple' → logprob: -13.250394821166992
    5. '_tuple' → logprob: -16.250394821166992
    6. 'string' → logprob: -16.875394821166992
    7. 'deque' → logprob: -16.875394821166992
    8. ')' → logprob: -17.375394821166992
    9. 'list' → logprob: -17.875394821166992
    10. 'token' → logprob: -18.125394821166992

Token 353: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3209701478481293
    2. '(start' → logprob: -1.5709701776504517
    3. '(tuple' → logprob: -2.820970058441162
    4. '(
' → logprob: -5.320970058441162
    5. 'start' → logprob: -6.695970058441162
    6. '([' → logprob: -7.445970058441162
    7. 'tuple' → logprob: -8.82097053527832
    8. ' (' → logprob: -9.57097053527832
    9. '(state' → logprob: -9.94597053527832
    10. '(s' → logprob: -9.94597053527832

Token 354: ' x' (ID: 1215)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.5941757559776306
    2. 'str' → logprob: -0.8441757559776306
    3. 'start' → logprob: -4.469175815582275
    4. 'tuple' → logprob: -5.344175815582275
    5. 'tu' → logprob: -7.094175815582275
    6. 'string' → logprob: -7.719175815582275
    7. 'x' → logprob: -7.844175815582275
    8. ' strings' → logprob: -9.344175338745117
    9. ' tuples' → logprob: -10.469175338745117
    10. 'len' → logprob: -11.219175338745117

Token 355: ' chaînes' (ID: 179904)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.04442131891846657
    2. ' strings' → logprob: -3.419421434402466
    3. 'str' → logprob: -4.919421195983887
    4. '_strings' → logprob: -6.419421195983887
    5. 'string' → logprob: -7.419421195983887
    6. 's' → logprob: -7.669421195983887
    7. ')' → logprob: -8.669421195983887
    8. ' chaînes' → logprob: -8.669421195983887
    9. '(strings' → logprob: -9.044421195983887
    10. 'chains' → logprob: -9.794421195983887

Token 356: ' correspondant' (ID: 146058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2551659047603607
    2. '   ' → logprob: -2.6301658153533936
    3. '       ' → logprob: -2.7551658153533936
    4. ',' → logprob: -3.1301658153533936
    5. ':' → logprob: -4.380166053771973
    6. '(
' → logprob: -5.005166053771973
    7. '(' → logprob: -5.255166053771973
    8. '
' → logprob: -5.880166053771973
    9. '<|end|>' → logprob: -6.130166053771973
    10. ' )' → logprob: -6.255166053771973

Token 357: ' aux' (ID: 5850)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.4427633583545685
    2. 'à' → logprob: -1.817763328552246
    3. ' aux' → logprob: -2.317763328552246
    4. 'au' → logprob: -2.692763328552246
    5. ' à' → logprob: -3.567763328552246
    6. ' ' → logprob: -7.817763328552246
    7. ' au' → logprob: -8.817763328552246
    8. '   ' → logprob: -9.442763328552246
    9. ''à' → logprob: -9.442763328552246
    10. ')' → logprob: -9.567763328552246

Token 358: ' lignes' (ID: 81687)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5287373065948486
    2. 'vo' → logprob: -1.1537373065948486
    3. 'places' → logprob: -3.2787373065948486
    4. 'ét' → logprob: -4.4037370681762695
    5. 'park' → logprob: -4.7787370681762695
    6. ' voies' → logprob: -5.0287370681762695
    7. 'em' → logprob: -5.1537370681762695
    8. ' positions' → logprob: -5.2787370681762695
    9. 'placements' → logprob: -6.0287370681762695
    10. 'occup' → logprob: -6.1537370681762695

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6737025380134583
    2. ')' → logprob: -1.0487024784088135
    3. ':' → logprob: -3.0487024784088135
    4. '   ' → logprob: -3.5487024784088135
    5. ',' → logprob: -4.048702716827393
    6. 'state' → logprob: -4.173702716827393
    7. '):' → logprob: -4.923702716827393
    8. 'states' → logprob: -5.048702716827393
    9. '_state' → logprob: -6.048702716827393
    10. ' )' → logprob: -6.298702716827393

Token 360: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050480592995882034
    2. '   ' → logprob: -3.675480604171753
    3. 'state' → logprob: -5.050480365753174
    4. ')' → logprob: -5.175480365753174
    5. '):' → logprob: -5.175480365753174
    6. ' :' → logprob: -5.675480365753174
    7. ',' → logprob: -6.925480365753174
    8. '       ' → logprob: -7.675480365753174
    9. ':
' → logprob: -7.675480365753174
    10. 'states' → logprob: -8.300480842590332

Token 361: ' start' (ID: 1604)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.45410749316215515
    2. 'visited' → logprob: -1.8291075229644775
    3. 'state' → logprob: -2.0791075229644775
    4. 'start' (adapté à ' start') → logprob: -3.5791075229644775
    5. ' queue' → logprob: -3.7041075229644775
    6. '   ' → logprob: -4.329107284545898
    7. ' visited' → logprob: -5.704107284545898
    8. '       ' → logprob: -5.954107284545898
    9. 'states' → logprob: -6.329107284545898
    10. 'initial' → logprob: -6.329107284545898

Token 362: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.1442262977361679
    2. ' =' → logprob: -2.894226312637329
    3. '=' → logprob: -3.019226312637329
    4. '_tuple' → logprob: -3.769226312637329
    5. ')' → logprob: -5.89422607421875
    6. '_states' → logprob: -6.64422607421875
    7. 'state' → logprob: -6.76922607421875
    8. '_' → logprob: -6.89422607421875
    9. ',' → logprob: -7.51922607421875
    10. '_queue' → logprob: -8.76922607421875

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740866422653198
    2. '=' → logprob: -0.9740866422653198
    3. ')' → logprob: -11.84908676147461
    4. ',' → logprob: -12.97408676147461
    5. ')=' → logprob: -16.84908676147461
    6. ' =)' → logprob: -17.47408676147461
    7. '＝' → logprob: -17.59908676147461
    8. ' =
' → logprob: -18.34908676147461
    9. '   ' → logprob: -18.34908676147461
    10. ' ' → logprob: -18.72408676147461

Token 364: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00016027313540689647
    2. ' tuple' → logprob: -8.750160217285156
    3. '(tuple' → logprob: -13.250160217285156
    4. 'tu' → logprob: -17.125160217285156
    5. '_tuple' → logprob: -21.875160217285156
    6. '   ' → logprob: -22.000160217285156
    7. 'Tuple' → logprob: -22.250160217285156
    8. 't' → logprob: -23.000160217285156
    9. ' ' → logprob: -24.500160217285156
    10. '(' → logprob: -24.625160217285156

Token 365: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.011048882268369198
    2. 'start' → logprob: -4.511048793792725
    3. '(' → logprob: -14.511049270629883
    4. '[start' → logprob: -15.011049270629883
    5. '('' → logprob: -15.761049270629883
    6. '(tuple' → logprob: -16.761049270629883
    7. ' start' → logprob: -17.011049270629883
    8. '(['' → logprob: -18.511049270629883
    9. 'tuple' → logprob: -18.636049270629883
    10. ',start' → logprob: -18.761049270629883

Token 366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001333455671556294
    2. ')
' → logprob: -6.626333236694336
    3. ' )' → logprob: -12.001333236694336
    4. ')

' → logprob: -14.376333236694336
    5. '   ' → logprob: -15.626333236694336
    6. ')
' → logprob: -16.126333236694336
    7. '),' → logprob: -16.376333236694336
    8. '       ' → logprob: -16.376333236694336
    9. ',' → logprob: -16.501333236694336
    10. ' )
' → logprob: -16.751333236694336

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5378702878952026
    2. '
' → logprob: -1.1628702878952026
    3. '   ' → logprob: -3.037870407104492
    4. ')' → logprob: -3.662870407104492
    5. '<|end|>' → logprob: -4.037870407104492
    6. '        
' → logprob: -6.037870407104492
    7. '    
' → logprob: -6.412870407104492
    8. ' 
' → logprob: -6.912870407104492
    9. ')
' → logprob: -7.037870407104492
    10. '<|end|>' → logprob: -7.412870407104492

Token 368: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.7320005893707275
    2. '       ' → logprob: -1.1070005893707275
    3. ' goal' → logprob: -2.2320005893707275
    4. 'queue' → logprob: -3.1070005893707275
    5. ' queue' → logprob: -4.607000350952148
    6. '   ' → logprob: -4.732000350952148
    7. 'start' → logprob: -4.857000350952148
    8. 'visited' → logprob: -5.107000350952148
    9. ' visited' → logprob: -7.357000350952148
    10. 'deque' → logprob: -7.357000350952148

Token 369: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0018454594537615776
    2. '_states' → logprob: -6.626845359802246
    3. '_' → logprob: -8.251845359802246
    4. ')_' → logprob: -8.876845359802246
    5. ' _' → logprob: -10.876845359802246
    6. ')' → logprob: -11.126845359802246
    7. '_token' → logprob: -11.376845359802246
    8. '_s' → logprob: -11.876845359802246
    9. ''_' → logprob: -11.876845359802246
    10. '}_' → logprob: -12.001845359802246

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023362934589386
    2. '=' → logprob: -2.350233554840088
    3. ' ==' → logprob: -10.850234031677246
    4. ')' → logprob: -12.725234031677246
    5. ',' → logprob: -13.600234031677246
    6. '<|end|>' → logprob: -13.850234031677246
    7. '==' → logprob: -13.975234031677246
    8. ' =)' → logprob: -14.350234031677246
    9. ' ' → logprob: -14.850234031677246
    10. ' =
' → logprob: -15.225234031677246

Token 371: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.313263863325119
    2. 'tuple' → logprob: -1.3132638931274414
    3. '(tuple' → logprob: -13.063263893127441
    4. 'tu' → logprob: -17.563262939453125
    5. '       ' → logprob: -18.188262939453125
    6. '   ' → logprob: -18.813262939453125
    7. '_tuple' → logprob: -19.188262939453125
    8. 't' → logprob: -19.813262939453125
    9. '           ' → logprob: -19.938262939453125
    10. 'Tuple' → logprob: -20.063262939453125

Token 372: '(goal' (ID: 196945)
  Prédit: '(goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -0.0002614550176076591
    2. 'goal' → logprob: -8.250261306762695
    3. '(go' → logprob: -15.875261306762695
    4. ' goal' → logprob: -19.625261306762695
    5. '(tuple' → logprob: -19.875261306762695
    6. '_goal' → logprob: -20.000261306762695
    7. 'Goal' → logprob: -20.000261306762695
    8. '.goal' → logprob: -21.250261306762695
    9. 'go' → logprob: -21.750261306762695
    10. '(' → logprob: -22.500261306762695

Token 373: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ')
' → logprob: -10.625028610229492
    3. ' )' → logprob: -12.875028610229492
    4. '       ' → logprob: -14.000028610229492
    5. '   ' → logprob: -14.750028610229492
    6. '))' → logprob: -16.375028610229492
    7. ')

' → logprob: -16.625028610229492
    8. '),' → logprob: -16.625028610229492
    9. ')`' → logprob: -16.750028610229492
    10. ')}' → logprob: -16.875028610229492

Token 374: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1445191204547882
    2. '       ' → logprob: -2.394519090652466
    3. '   ' → logprob: -3.644519090652466
    4. ' queue' → logprob: -4.894519329071045
    5. '
' → logprob: -5.269519329071045
    6. 'visited' → logprob: -5.644519329071045
    7. 'if' → logprob: -7.519519329071045
    8. '        
' → logprob: -8.644518852233887
    9. '    
' → logprob: -9.519518852233887
    10. ' if' → logprob: -9.644518852233887

Token 375: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.011541345156729221
    2. 'visited' → logprob: -4.511541366577148
    3. ' queue' → logprob: -8.386541366577148
    4. '   ' → logprob: -8.761541366577148
    5. 'if' → logprob: -9.636541366577148
    6. '
' → logprob: -11.011541366577148
    7. '```' → logprob: -11.761541366577148
    8. ' visited' → logprob: -11.886541366577148
    9. 'front' → logprob: -12.386541366577148
    10. 'seen' → logprob: -13.511541366577148

Token 376: ' Pour' (ID: 13931)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06786230951547623
    2. 'visited' → logprob: -2.8178622722625732
    3. 'if' → logprob: -5.192862510681152
    4. ' queue' → logprob: -8.442862510681152
    5. ' visited' → logprob: -10.942862510681152
    6. 'deque' → logprob: -11.317862510681152
    7. '```' → logprob: -11.317862510681152
    8. 'front' → logprob: -11.692862510681152
    9. 'def' → logprob: -11.692862510681152
    10. '   ' → logprob: -11.692862510681152

Token 377: ' éviter' (ID: 64013)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4785846769809723
    2. ' visited' → logprob: -0.9785846471786499
    3. 'seen' → logprob: -6.2285847663879395
    4. ' seen' → logprob: -6.4785847663879395
    5. ' queue' → logprob: -7.4785847663879395
    6. 'queue' → logprob: -9.103584289550781
    7. ' ' → logprob: -9.853584289550781
    8. ' visiter' → logprob: -10.228584289550781
    9. ' que' → logprob: -10.353584289550781
    10. 'visit' → logprob: -10.603584289550781

Token 378: ' de' (ID: 334)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3311867415904999
    2. ' visited' → logprob: -1.3311867713928223
    3. ' que' → logprob: -5.206186771392822
    4. ' visiter' → logprob: -5.956186771392822
    5. ' les' → logprob: -6.706186771392822
    6. ' ' → logprob: -6.706186771392822
    7. 'seen' → logprob: -6.956186771392822
    8. ' seen' → logprob: -7.456186771392822
    9. 'Visited' → logprob: -7.706186771392822
    10. ' visites' → logprob: -7.831186771392822

Token 379: ' revis' (ID: 19497)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006234501954168081
    2. ' visited' → logprob: -5.381234645843506
    3. 'seen' → logprob: -6.506234645843506
    4. 'voir' → logprob: -9.881234169006348
    5. 'visit' → logprob: -10.256234169006348
    6. 'vis' → logprob: -11.506234169006348
    7. ' seen' → logprob: -12.631234169006348
    8. 'v' → logprob: -12.631234169006348
    9. ' visiter' → logprob: -12.756234169006348
    10. ' visites' → logprob: -13.381234169006348

Token 380: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.001118903630413115
    2. 'ited' → logprob: -7.001119136810303
    3. 'ister' → logprob: -8.876118659973145
    4. 'isted' → logprob: -11.126118659973145
    5. 'iting' → logprob: -11.251118659973145
    6. 'iterr' → logprob: -12.126118659973145
    7. 's' → logprob: -12.126118659973145
    8. 'er' → logprob: -12.376118659973145
    9. 'ite' → logprob: -12.876118659973145
    10. '_iter' → logprob: -13.126118659973145

Token 381: ' un' (ID: 537)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5942021608352661
    2. ' states' → logprob: -1.5942021608352661
    3. ' visited' → logprob: -1.9692021608352661
    4. 'states' → logprob: -2.4692020416259766
    5. '_states' → logprob: -4.844202041625977
    6. ' les' → logprob: -5.469202041625977
    7. 'seen' → logprob: -5.719202041625977
    8. ' seen' → logprob: -6.344202041625977
    9. ' des' → logprob: -6.469202041625977
    10. ' états' → logprob: -7.719202041625977

Token 382: ' état' (ID: 59181)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.13712619245052338
    2. 's' → logprob: -3.5121262073516846
    3. 'esp' → logprob: -3.5121262073516846
    4. 'set' → logprob: -4.1371259689331055
    5. 'visited' → logprob: -4.6371259689331055
    6. 'ensemble' → logprob: -5.0121259689331055
    7. 'e' → logprob: -5.0121259689331055
    8. ' set' → logprob: -5.0121259689331055
    9. 'is' → logprob: -5.2621259689331055
    10. 'et' → logprob: -6.1371259689331055

Token 383: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.41175660490989685
    2. ' visited' → logprob: -1.5367566347122192
    3. ',' → logprob: -2.5367565155029297
    4. '_states' → logprob: -4.03675651550293
    5. '   ' → logprob: -4.53675651550293
    6. '_seen' → logprob: -5.78675651550293
    7. ' ' → logprob: -5.91175651550293
    8. ' ,' → logprob: -6.28675651550293
    9. ' states' → logprob: -6.28675651550293
    10. 'states' → logprob: -7.16175651550293

Token 384: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7329093813896179
    2. '       ' → logprob: -1.2329094409942627
    3. ' visited' → logprob: -1.4829094409942627
    4. '   ' → logprob: -7.482909202575684
    5. ' seen' → logprob: -8.607909202575684
    6. 'seen' → logprob: -9.232909202575684
    7. 'vis' → logprob: -9.857909202575684
    8. ' vis' → logprob: -10.607909202575684
    9. '.vis' → logprob: -10.732909202575684
    10. ',' → logprob: -10.732909202575684

Token 385: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0235470999032259
    2. ' visited' → logprob: -3.7735471725463867
    3. 'seen' → logprob: -8.398547172546387
    4. '   ' → logprob: -10.148547172546387
    5. ' seen' → logprob: -10.773547172546387
    6. 'vis' → logprob: -11.148547172546387
    7. '       ' → logprob: -14.273547172546387
    8. '```' → logprob: -14.898547172546387
    9. 'visit' → logprob: -15.023547172546387
    10. '
' → logprob: -16.14854621887207

Token 386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01816692017018795
    2. '=' → logprob: -4.018167018890381
    3. '=set' → logprob: -11.018166542053223
    4. ' ' → logprob: -14.893166542053223
    5. '.add' → logprob: -16.01816749572754
    6. ',' → logprob: -16.14316749572754
    7. ')' → logprob: -16.89316749572754
    8. '   ' → logprob: -17.89316749572754
    9. '  ' → logprob: -18.01816749572754
    10. 'set' → logprob: -18.14316749572754

Token 387: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00934565719217062
    2. '{' → logprob: -4.759345531463623
    3. ' set' → logprob: -7.259345531463623
    4. ' {' → logprob: -10.509346008300781
    5. '=set' → logprob: -16.38434600830078
    6. '	set' → logprob: -17.13434600830078
    7. '{s' → logprob: -18.13434600830078
    8. '   ' → logprob: -19.25934600830078
    9. '(set' → logprob: -19.63434600830078
    10. ' ' → logprob: -20.00934600830078

Token 388: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03078261762857437
    2. '(start' → logprob: -4.530782699584961
    3. '(' → logprob: -5.155782699584961
    4. '([' → logprob: -5.280782699584961
    5. '()
' → logprob: -6.030782699584961
    6. '{' → logprob: -6.280782699584961
    7. '({' → logprob: -6.780782699584961
    8. ' (' → logprob: -7.030782699584961
    9. '       ' → logprob: -7.155782699584961
    10. '<|end|>' → logprob: -8.155782699584961

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.359661340713501
    2. '   ' → logprob: -1.984661340713501
    3. ' =' → logprob: -2.859661340713501
    4. ' visited' → logprob: -2.984661340713501
    5. 'visited' → logprob: -3.359661340713501
    6. '    
' → logprob: -5.359661102294922
    7. ' 
' → logprob: -5.609661102294922
    8. '
' → logprob: -5.984661102294922
    9. '        
' → logprob: -5.984661102294922
    10. '<|end|>' → logprob: -6.359661102294922

Token 390: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7546800971031189
    2. 'visited' (adapté à ' visited') → logprob: -1.3796801567077637
    3. ' visited' → logprob: -1.6296801567077637
    4. '   ' → logprob: -4.004680156707764
    5. '        
' → logprob: -4.004680156707764
    6. ' =' → logprob: -4.879680156707764
    7. ' 
' → logprob: -4.879680156707764
    8. '    ' → logprob: -5.004680156707764
    9. 'queue' → logprob: -5.004680156707764
    10. '        ' → logprob: -5.629680156707764

Token 391: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0017722812481224537
    2. '.' → logprob: -6.376772403717041
    3. ' .' → logprob: -9.751771926879883
    4. '.append' → logprob: -12.251771926879883
    5. '().' → logprob: -13.251771926879883
    6. '=' → logprob: -13.376771926879883
    7. ' =' → logprob: -13.376771926879883
    8. '.insert' → logprob: -14.876771926879883
    9. '.update' → logprob: -15.001771926879883
    10. 'add' → logprob: -15.126771926879883

Token 392: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -15.375021934509277
    4. 'start' → logprob: -16.12502098083496
    5. '(s' → logprob: -16.87502098083496
    6. '((' → logprob: -17.12502098083496
    7. '(
' → logprob: -18.12502098083496
    8. ',start' → logprob: -18.50002098083496
    9. '(state' → logprob: -19.75002098083496
    10. '=start' → logprob: -20.00002098083496

Token 393: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.25
    3. ')_' → logprob: -17.0
    4. 'state' → logprob: -17.125
    5. '_states' → logprob: -17.5
    6. '_' → logprob: -20.0
    7. ' _' → logprob: -20.125
    8. '_STATE' → logprob: -20.125
    9. ' state' → logprob: -20.5
    10. '_status' → logprob: -20.625

Token 394: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030864477157592773
    2. ')
' → logprob: -6.128086566925049
    3. '       ' → logprob: -7.628086566925049
    4. '
' → logprob: -8.37808609008789
    5. ' )' → logprob: -9.25308609008789
    6. '<|end|>' → logprob: -10.50308609008789
    7. ',' → logprob: -10.75308609008789
    8. '   ' → logprob: -11.00308609008789
    9. '<|end|>' → logprob: -12.25308609008789
    10. ',
' → logprob: -12.50308609008789

Token 395: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.26020240783691406
    2. '       ' → logprob: -2.135202407836914
    3. ' queue' → logprob: -2.385202407836914
    4. '   ' → logprob: -4.510202407836914
    5. '
' → logprob: -5.260202407836914
    6. '```' → logprob: -6.885202407836914
    7. '        
' → logprob: -7.385202407836914
    8. ',' → logprob: -8.135202407836914
    9. 'deque' → logprob: -8.510202407836914
    10. '    
' → logprob: -9.260202407836914

Token 396: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -7.52919222577475e-05
    2. ' queue' → logprob: -9.750075340270996
    3. '   ' → logprob: -11.500075340270996
    4. 'q' → logprob: -12.875075340270996
    5. '
' → logprob: -13.125075340270996
    6. '       ' → logprob: -13.375075340270996
    7. '```' → logprob: -15.000075340270996
    8. 'deque' → logprob: -15.500075340270996
    9. 'que' → logprob: -15.625075340270996
    10. '	queue' → logprob: -16.87507438659668

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007635493762791157
    2. '=' → logprob: -4.882635593414307
    3. ')' → logprob: -11.132635116577148
    4. '.append' → logprob: -11.382635116577148
    5. '.' → logprob: -13.507635116577148
    6. '	' → logprob: -14.007635116577148
    7. '   ' → logprob: -15.632635116577148
    8. ' ' → logprob: -15.757635116577148
    9. ' )' → logprob: -15.882635116577148
    10. '(queue' → logprob: -16.50763511657715

Token 398: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0380416102707386
    2. ' deque' → logprob: -3.288041591644287
    3. 'Deque' → logprob: -16.163042068481445
    4. 'de' → logprob: -16.788042068481445
    5. '   ' → logprob: -18.038042068481445
    6. 'collections' → logprob: -18.788042068481445
    7. '```' → logprob: -20.038042068481445
    8. '	de' → logprob: -20.163042068481445
    9. '(de' → logprob: -20.663042068481445
    10. ' ' → logprob: -22.538042068481445

Token 399: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.13980476558208466
    2. '()' → logprob: -2.1398048400878906
    3. '([' → logprob: -4.389804840087891
    4. '()
' → logprob: -8.26480484008789
    5. '[(' → logprob: -9.76480484008789
    6. '([
' → logprob: -9.88980484008789
    7. '(' → logprob: -11.01480484008789
    8. '()

' → logprob: -12.51480484008789
    9. '((' → logprob: -13.26480484008789
    10. '([[' → logprob: -14.38980484008789

Token 400: '       ' (ID: 309)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.4049347937107086
    2. '       ' → logprob: -1.7799347639083862
    3. ' (' → logprob: -2.529934883117676
    4. ' queue' → logprob: -3.154934883117676
    5. 'queue' → logprob: -3.279934883117676
    6. '(' → logprob: -6.154934883117676
    7. '.append' → logprob: -6.279934883117676
    8. '.queue' → logprob: -9.279934883117676
    9. '   ' → logprob: -9.404934883117676
    10. ' =' → logprob: -9.529934883117676

Token 401: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.930532693862915
    2. '(queue' → logprob: -0.930532693862915
    3. '(start' → logprob: -1.680532693862915
    4. 'queue' → logprob: -3.930532693862915
    5. ' queue' → logprob: -5.430532455444336
    6. '(' → logprob: -7.680532455444336
    7. 'start' → logprob: -8.055532455444336
    8. '       ' → logprob: -9.055532455444336
    9. '[start' → logprob: -9.930532455444336
    10. ' start' → logprob: -10.305532455444336

Token 402: ' Chaque' (ID: 94758)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.025116369128227234
    2. ' queue' → logprob: -4.275116443634033
    3. 'append' → logprob: -4.525116443634033
    4. ' append' → logprob: -10.525115966796875
    5. '   ' → logprob: -10.900115966796875
    6. '       ' → logprob: -12.025115966796875
    7. '(queue' → logprob: -12.150115966796875
    8. '.append' → logprob: -13.400115966796875
    9. 'enqueue' → logprob: -13.900115966796875
    10. '	queue' → logprob: -15.650115966796875

Token 403: ' élément' (ID: 99627)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.9593780636787415
    2. ' (' → logprob: -1.8343780040740967
    3. '(' → logprob: -1.9593780040740967
    4. 'queue' → logprob: -2.5843780040740967
    5. 'element' → logprob: -2.5843780040740967
    6. '.append' → logprob: -3.4593780040740967
    7. ' queue' → logprob: -3.5843780040740967
    8. 'append' → logprob: -3.5843780040740967
    9. ')' → logprob: -3.7093780040740967
    10. ' element' → logprob: -3.9593780040740967

Token 404: ' =' (ID: 314)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.337064653635025
    2. '=' → logprob: -1.5870646238327026
    3. ' =' → logprob: -2.712064743041992
    4. ' (' → logprob: -4.962064743041992
    5. '(' → logprob: -5.462064743041992
    6. ' is' → logprob: -6.962064743041992
    7. ')' → logprob: -7.962064743041992
    8. '   ' → logprob: -7.962064743041992
    9. '=(' → logprob: -7.962064743041992
    10. ' queue' → logprob: -8.087064743041992

Token 405: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.04025288298726082
    2. ' (' → logprob: -3.290252923965454
    3. '(queue' → logprob: -6.290252685546875
    4. '(state' → logprob: -8.540252685546875
    5. '(' → logprob: -9.165252685546875
    6. '(tuple' → logprob: -10.915252685546875
    7. '   ' → logprob: -11.290252685546875
    8. '(current' → logprob: -12.040252685546875
    9. '(next' → logprob: -12.415252685546875
    10. ' ' → logprob: -12.665252685546875

Token 406: 'ét' (ID: 3913)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.3096938729286194
    2. 'start' → logprob: -1.4346938133239746
    3. 'current' → logprob: -4.059693813323975
    4. ' start' → logprob: -5.309693813323975
    5. ' state' → logprob: -6.059693813323975
    6. ' current' → logprob: -6.684693813323975
    7. 'queue' → logprob: -6.934693813323975
    8. '(start' → logprob: -7.309693813323975
    9. '(queue' → logprob: -9.059694290161133
    10. '(state' → logprob: -9.059694290161133

Token 407: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0021148123778402805
    2. 'ate' → logprob: -6.752114772796631
    3. 'state' → logprob: -8.252115249633789
    4. '(state' → logprob: -8.752115249633789
    5. 'ат' → logprob: -9.002115249633789
    6. '   ' → logprob: -9.127115249633789
    7. 'tat' → logprob: -9.877115249633789
    8. 'a' → logprob: -10.627115249633789
    9. '(' → logprob: -10.627115249633789
    10. ')' → logprob: -10.877115249633789

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006343953311443329
    2. ')' → logprob: -6.131343841552734
    3. '_state' → logprob: -6.381343841552734
    4. '_' → logprob: -6.881343841552734
    5. ' ,' → logprob: -7.131343841552734
    6. '_,' → logprob: -7.631343841552734
    7. '_states' → logprob: -10.631343841552734
    8. ' _' → logprob: -10.756343841552734
    9. 'state' → logprob: -11.631343841552734
    10. '```' → logprob: -11.631343841552734

Token 409: ' nombre' (ID: 9733)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.32415714859962463
    2. 'depth' → logprob: -2.074157238006592
    3. 'nombre' → logprob: -3.199157238006592
    4. '0' → logprob: -3.324157238006592
    5. ' distance' → logprob: -3.699157238006592
    6. 'dist' → logprob: -4.324157238006592
    7. 'steps' → logprob: -4.324157238006592
    8. ' nombre' → logprob: -4.699157238006592
    9. ' depth' → logprob: -5.074157238006592
    10. ' steps' → logprob: -6.449157238006592

Token 410: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6639706492424011
    2. '_de' → logprob: -1.663970708847046
    3. ')' → logprob: -2.163970708847046
    4. ' de' → logprob: -2.913970708847046
    5. '_d' → logprob: -3.038970708847046
    6. '_moves' → logprob: -3.538970708847046
    7. '_des' → logprob: -4.538970470428467
    8. '<|end|>' → logprob: -4.788970470428467
    9. '_tokens' → logprob: -5.038970470428467
    10. ',' → logprob: -5.413970470428467

Token 411: ' mouvements' (ID: 119420)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6691697835922241
    2. ' mouvements' → logprob: -1.0441697835922241
    3. 'moves' → logprob: -2.5441699028015137
    4. ' déplacements' → logprob: -3.4191699028015137
    5. ' moves' → logprob: -4.544169902801514
    6. ' coups' → logprob: -5.669169902801514
    7. 'pas' → logprob: -5.794169902801514
    8. ' pas' → logprob: -6.544169902801514
    9. 'steps' → logprob: -6.669169902801514
    10. 'cou' → logprob: -6.919169902801514

Token 412: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02981286123394966
    2. ',' → logprob: -3.529812812805176
    3. ' )' → logprob: -9.904812812805176
    4. '),' → logprob: -11.904812812805176
    5. ' ,' → logprob: -13.154812812805176
    6. ',)' → logprob: -14.029812812805176
    7. '))' → logprob: -14.404812812805176
    8. '   ' → logprob: -14.654812812805176
    9. ').' → logprob: -15.529812812805176
    10. '```' → logprob: -15.654812812805176

Token 413: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2988746762275696
    2. '(queue' → logprob: -1.6738746166229248
    3. ' (' → logprob: -3.173874616622925
    4. ')' → logprob: -4.673874855041504
    5. ' =' → logprob: -5.298874855041504
    6. '(' → logprob: -5.548874855041504
    7. ' ,' → logprob: -5.548874855041504
    8. '       ' → logprob: -5.923874855041504
    9. '=' → logprob: -6.548874855041504
    10. '.append' → logprob: -7.923874855041504

Token 414: ' queue' (ID: 13661)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6706079244613647
    2. '(queue' → logprob: -0.7956079244613647
    3. ' queue' → logprob: -3.9206080436706543
    4. 'queue' (adapté à ' queue') → logprob: -4.170608043670654
    5. '(' → logprob: -7.545608043670654
    6. '(start' → logprob: -7.670608043670654
    7. 'deque' → logprob: -7.670608043670654
    8. 'append' → logprob: -8.920607566833496
    9. '.append' → logprob: -9.170607566833496
    10. '   ' → logprob: -9.920607566833496

Token 415: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002492999192327261
    2. '.' → logprob: -8.375248908996582
    3. '.enqueue' → logprob: -11.750248908996582
    4. '.extend' → logprob: -11.875248908996582
    5. ').' → logprob: -13.750248908996582
    6. '.p' → logprob: -14.375248908996582
    7. '=' → logprob: -14.375248908996582
    8. ' =' → logprob: -14.500248908996582
    9. '.=' → logprob: -14.875248908996582
    10. ' .' → logprob: -15.750248908996582

Token 416: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00969482772052288
    2. '(start' → logprob: -5.259695053100586
    3. '(' → logprob: -5.509695053100586
    4. ' (' → logprob: -7.884695053100586
    5. '(s' → logprob: -11.384695053100586
    6. '```' → logprob: -12.259695053100586
    7. '   ' → logprob: -12.384695053100586
    8. ' ((' → logprob: -12.759695053100586
    9. ' ' → logprob: -13.259695053100586
    10. '  ' → logprob: -14.884695053100586

Token 417: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.8624639324116288e-06
    2. ' start' → logprob: -13.250001907348633
    3. '(start' → logprob: -16.875001907348633
    4. '[start' → logprob: -20.875001907348633
    5. ',start' → logprob: -21.250001907348633
    6. '   ' → logprob: -22.125001907348633
    7. '	start' → logprob: -23.125001907348633
    8. '=start' → logprob: -24.000001907348633
    9. '_start' → logprob: -24.250001907348633
    10. '
' → logprob: -24.375001907348633

Token 418: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.45848218582978e-06
    2. 'state' → logprob: -13.25000286102295
    3. '_states' → logprob: -14.87500286102295
    4. '_start' → logprob: -16.000001907348633
    5. '_' → logprob: -16.250001907348633
    6. ')_' → logprob: -16.750001907348633
    7. ',' → logprob: -17.000001907348633
    8. '_STATE' → logprob: -17.625001907348633
    9. ')' → logprob: -17.875001907348633
    10. '_State' → logprob: -17.875001907348633

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -15.12500286102295
    4. '‌,' → logprob: -16.750003814697266
    5. '),' → logprob: -17.250003814697266
    6. ')' → logprob: -17.625003814697266
    7. ',)' → logprob: -17.625003814697266
    8. '```' → logprob: -17.750003814697266
    9. '<|end|>' → logprob: -18.125003814697266
    10. '0' → logprob: -18.500003814697266

Token 420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.875158309936523
    4. '       ' → logprob: -20.500158309936523
    5. ' ' → logprob: -20.875158309936523
    6. '           ' → logprob: -21.125158309936523
    7. '  ' → logprob: -21.500158309936523
    8. '    ' → logprob: -21.875158309936523
    9. '     ' → logprob: -22.250158309936523
    10. '۰' → logprob: -22.375158309936523

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '000' → logprob: -21.375001907348633
    6. '00' → logprob: -21.500001907348633
    7. '０' → logprob: -21.875001907348633
    8. ')' → logprob: -22.125001907348633
    9. '))' → logprob: -22.375001907348633
    10. '```' → logprob: -22.875001907348633

Token 422: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067337267100811005
    2. ')' → logprob: -5.0067338943481445
    3. '))
' → logprob: -11.006733894348145
    4. '   ' → logprob: -14.881733894348145
    5. ')))' → logprob: -15.006733894348145
    6. '       ' → logprob: -15.381733894348145
    7. ' ))' → logprob: -15.506733894348145
    8. '));' → logprob: -15.881733894348145
    9. '))

' → logprob: -15.881733894348145
    10. ')
' → logprob: -16.006732940673828

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07026262581348419
    2. ')' → logprob: -3.3202626705169678
    3. '   ' → logprob: -4.820262432098389
    4. ' while' → logprob: -4.820262432098389
    5. '
' → logprob: -5.195262432098389
    6. 'while' → logprob: -5.695262432098389
    7. '```' → logprob: -5.820262432098389
    8. '        
' → logprob: -6.570262432098389
    9. ' )' → logprob: -8.195262908935547
    10. '    ' → logprob: -8.195262908935547

Token 424: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.003034755354747176
    2. ' while' → logprob: -6.253034591674805
    3. '       ' → logprob: -7.253034591674805
    4. '   ' → logprob: -8.503034591674805
    5. ')' → logprob: -8.628034591674805
    6. '```' → logprob: -11.628034591674805
    7. '	while' → logprob: -12.128034591674805
    8. 'w' → logprob: -15.503034591674805
    9. '    ' → logprob: -16.128034591674805
    10. '        
' → logprob: -16.128034591674805

Token 425: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.25195828080177307
    2. 'queue' → logprob: -1.5019582509994507
    3. '(queue' → logprob: -11.251957893371582
    4. '	queue' → logprob: -11.876957893371582
    5. 'True' → logprob: -12.626957893371582
    6. 'len' → logprob: -13.001957893371582
    7. ' len' → logprob: -13.376957893371582
    8. 'que' → logprob: -14.501957893371582
    9. ' ' → logprob: -15.001957893371582
    10. '.queue' → logprob: -15.001957893371582

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02083311229944229
    2. ':
' → logprob: -3.8958330154418945
    3. '):
' → logprob: -9.270833015441895
    4. '):' → logprob: -9.520833015441895
    5. '.append' → logprob: -10.270833015441895
    6. '.pop' → logprob: -10.270833015441895
    7. '.' → logprob: -11.520833015441895
    8. '[' → logprob: -11.770833015441895
    9. '```' → logprob: -11.895833015441895
    10. ' and' → logprob: -12.020833015441895

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01650865562260151
    2. 'state' → logprob: -4.14150857925415
    3. '(state' → logprob: -8.641509056091309
    4. ' state' → logprob: -9.016509056091309
    5. '       ' → logprob: -10.266509056091309
    6. ' (' → logprob: -10.391509056091309
    7. '	       ' → logprob: -11.016509056091309
    8. ',state' → logprob: -11.266509056091309
    9. '```' → logprob: -11.516509056091309
    10. '(' → logprob: -11.516509056091309

Token 428: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.10411784797906876
    2. '(state' → logprob: -2.7291178703308105
    3. ' state' → logprob: -3.9791178703308105
    4. 'current' → logprob: -4.4791178703308105
    5. ' (' → logprob: -6.8541178703308105
    6. '(current' → logprob: -7.2291178703308105
    7. ' current' → logprob: -7.3541178703308105
    8. '           ' → logprob: -7.8541178703308105
    9. '(' → logprob: -8.604117393493652
    10. ' état' → logprob: -8.729117393493652

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.500003814697266
    3. '_,' → logprob: -15.750003814697266
    4. ',
' → logprob: -16.125003814697266
    5. '‌,' → logprob: -16.250003814697266
    6. '=' → logprob: -17.375003814697266
    7. '           ' → logprob: -17.750003814697266
    8. '),' → logprob: -17.750003814697266
    9. '،' → logprob: -17.875003814697266
    10. ',state' → logprob: -18.250003814697266

Token 430: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.030152278020977974
    2. 'dist' → logprob: -3.7801523208618164
    3. 'steps' → logprob: -5.780152320861816
    4. 'depth' → logprob: -6.280152320861816
    5. ' moves' → logprob: -6.530152320861816
    6. ' dist' → logprob: -8.155152320861816
    7. 'mov' → logprob: -9.655152320861816
    8. 'cost' → logprob: -10.030152320861816
    9. ' steps' → logprob: -11.030152320861816
    10. 'move' → logprob: -11.030152320861816

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759536027908325
    2. '=' → logprob: -0.8259536027908325
    3. ')' → logprob: -11.450953483581543
    4. '   ' → logprob: -13.450953483581543
    5. '    ' → logprob: -13.950953483581543
    6. ' ' → logprob: -15.200953483581543
    7. ')=' → logprob: -15.450953483581543
    8. ',' → logprob: -15.700953483581543
    9. '        ' → logprob: -16.07595443725586
    10. '           ' → logprob: -16.32595443725586

Token 432: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.38689371943473816
    2. 'queue' → logprob: -1.1368937492370605
    3. '           ' → logprob: -12.261893272399902
    4. '	queue' → logprob: -12.386893272399902
    5. '(queue' → logprob: -12.511893272399902
    6. '       ' → logprob: -12.886893272399902
    7. '.queue' → logprob: -12.886893272399902
    8. '   ' → logprob: -13.136893272399902
    9. 'que' → logprob: -14.261893272399902
    10. '    ' → logprob: -14.636893272399902

Token 433: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.005856620147824287
    2. '.pop' → logprob: -6.130856513977051
    3. '.append' → logprob: -6.255856513977051
    4. '=' → logprob: -6.880856513977051
    5. '.' → logprob: -7.505856513977051
    6. ' =' → logprob: -9.88085651397705
    7. '   ' → logprob: -10.63085651397705
    8. '       ' → logprob: -11.00585651397705
    9. '           ' → logprob: -11.38085651397705
    10. ')' → logprob: -11.38085651397705

Token 434: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.004633164964616299
    2. 'op' → logprob: -5.379632949829102
    3. 'append' → logprob: -12.004632949829102
    4. '.append' → logprob: -12.629632949829102
    5. '```' → logprob: -14.129632949829102
    6. 'ople' → logprob: -14.629632949829102
    7. 'opl' → logprob: -14.754632949829102
    8. 'opup' → logprob: -15.129632949829102
    9. '.' → logprob: -15.254632949829102
    10. 'оп' → logprob: -15.504632949829102

Token 435: '()

' (ID: 5874)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21353277564048767
    2. ')' → logprob: -1.71353280544281
    3. '       ' → logprob: -5.7135329246521
    4. '<|end|>' → logprob: -5.8385329246521
    5. '               ' → logprob: -6.0885329246521
    6. ':' → logprob: -6.9635329246521
    7. ',' → logprob: -7.7135329246521
    8. '          ' → logprob: -7.9635329246521
    9. '            
' → logprob: -7.9635329246521
    10. '            ' → logprob: -8.338532447814941

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3880753815174103
    2. '       ' → logprob: -1.138075351715088
    3. '<|end|>' → logprob: -7.888075351715088
    4. ' if' → logprob: -8.263075828552246
    5. '               ' → logprob: -8.638075828552246
    6. '        
' → logprob: -9.138075828552246
    7. '            
' → logprob: -9.388075828552246
    8. '   ' → logprob: -10.013075828552246
    9. 'if' → logprob: -10.138075828552246
    10. '        ' → logprob: -10.638075828552246

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.580929347255733e-05
    2. '           ' → logprob: -11.500016212463379
    3. 'for' → logprob: -12.750016212463379
    4. ' if' → logprob: -13.625016212463379
    5. '#' → logprob: -13.750016212463379
    6. '       ' → logprob: -15.500016212463379
    7. '            
' → logprob: -16.500015258789062
    8. '   ' → logprob: -16.625015258789062
    9. '
' → logprob: -18.500015258789062
    10. '```' → logprob: -18.750015258789062

Token 438: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.3868711292743683
    2. 'state' → logprob: -1.136871099472046
    3. '(state' → logprob: -16.636871337890625
    4. '	state' → logprob: -17.886871337890625
    5. 'State' → logprob: -18.511871337890625
    6. '_state' → logprob: -20.011871337890625
    7. '   ' → logprob: -20.011871337890625
    8. '[state' → logprob: -20.011871337890625
    9. ' ' → logprob: -20.136871337890625
    10. '```' → logprob: -21.136871337890625

Token 439: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931824088096619
    2. ' ==' → logprob: -0.6931824088096619
    3. ')' → logprob: -10.818181991577148
    4. ')==' → logprob: -11.318181991577148
    5. ']==' → logprob: -13.568181991577148
    6. '=' → logprob: -14.318181991577148
    7. '()==' → logprob: -15.318181991577148
    8. '===' → logprob: -15.443181991577148
    9. ']' → logprob: -15.818181991577148
    10. '[' → logprob: -15.818181991577148

Token 440: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.25192946195602417
    2. ' goal' → logprob: -1.501929521560669
    3. '(goal' → logprob: -15.37692928314209
    4. '   ' → logprob: -17.126930236816406
    5. ' ' → logprob: -17.501930236816406
    6. '_goal' → logprob: -17.876930236816406
    7. 'go' → logprob: -18.001930236816406
    8. '.goal' → logprob: -18.126930236816406
    9. 'Goal' → logprob: -18.501930236816406
    10. '  ' → logprob: -19.751930236816406

Token 441: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.9361264946837764e-07
    2. '_states' → logprob: -16.75
    3. '_' → logprob: -16.875
    4. '_STATE' → logprob: -18.125
    5. '_State' → logprob: -18.25
    6. ' _' → logprob: -19.125
    7. '_stat' → logprob: -19.5
    8. ':' → logprob: -20.125
    9. 'state' → logprob: -20.125
    10. ')_' → logprob: -20.125

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00847794022411108
    2. ':
' → logprob: -5.258478164672852
    3. '               ' → logprob: -5.758478164672852
    4. '           ' → logprob: -10.008478164672852
    5. ':return' → logprob: -10.508478164672852
    6. '):' → logprob: -12.508478164672852
    7. ')' → logprob: -13.383478164672852
    8. '):
' → logprob: -13.383478164672852
    9. '<|end|>' → logprob: -14.633478164672852
    10. '              ' → logprob: -14.883478164672852

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.9385402993066236e-05
    2. '                
' → logprob: -11.875019073486328
    3. ' return' → logprob: -12.375019073486328
    4. '           ' → logprob: -12.625019073486328
    5. 'return' → logprob: -14.000019073486328
    6. '
' → logprob: -14.125019073486328
    7. '\n' → logprob: -14.375019073486328
    8. '              ' → logprob: -14.500019073486328
    9. '                ' → logprob: -14.875019073486328
    10. '                   ' → logprob: -15.000019073486328

Token 444: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35549455881118774
    2. '               ' → logprob: -1.605494499206543
    3. ' print' → logprob: -2.605494499206543
    4. 'return' → logprob: -4.105494499206543
    5. ' return' → logprob: -4.855494499206543
    6. '           ' → logprob: -8.355494499206543
    7. '
' → logprob: -12.105494499206543
    8. 'break' → logprob: -12.605494499206543
    9. '   ' → logprob: -13.230494499206543
    10. '```' → logprob: -13.605494499206543

Token 445: ' Solution' (ID: 20858)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0071818106807768345
    2. ' print' → logprob: -5.007181644439697
    3. 'return' → logprob: -7.757181644439697
    4. '               ' → logprob: -10.757182121276855
    5. ' return' → logprob: -11.007182121276855
    6. '           ' → logprob: -14.007182121276855
    7. '```' → logprob: -18.75718116760254
    8. '                   ' → logprob: -19.50718116760254
    9. '   ' → logprob: -19.63218116760254
    10. '
' → logprob: -19.75718116760254

Token 446: ' optimale' (ID: 72604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025636127218604088
    2. 'return' → logprob: -4.150636196136475
    3. 'print' → logprob: -5.275636196136475
    4. ' return' → logprob: -6.025636196136475
    5. '
' → logprob: -6.900636196136475
    6. '                   ' → logprob: -7.775636196136475
    7. ':
' → logprob: -8.400635719299316
    8. '                
' → logprob: -8.775635719299316
    9. '           ' → logprob: -9.525635719299316
    10. ' print' → logprob: -9.900635719299316

Token 447: ' trouv' (ID: 40254)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042578648775815964
    2. 'return' → logprob: -3.29257869720459
    3. ' return' → logprob: -5.54257869720459
    4. '                   ' → logprob: -7.91757869720459
    5. 'print' → logprob: -8.91757869720459
    6. '           ' → logprob: -9.66757869720459
    7. '
' → logprob: -10.54257869720459
    8. '```' → logprob: -11.66757869720459
    9. '                ' → logprob: -12.66757869720459
    10. '                
' → logprob: -12.91757869720459

Token 448: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -8.959636033978313e-05
    2. 'é' → logprob: -9.375089645385742
    3. 'ee' → logprob: -12.375089645385742
    4. 'É' → logprob: -15.250089645385742
    5. 'rée' → logprob: -15.875089645385742
    6. 'née' → logprob: -17.625089645385742
    7. 'ées' → logprob: -17.750089645385742
    8. 'e' → logprob: -17.875089645385742
    9. 'è' → logprob: -18.625089645385742
    10. '               ' → logprob: -18.875089645385742

Token 449: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047595196519978344
    2. 'return' → logprob: -7.875475883483887
    3. 'print' → logprob: -9.375475883483887
    4. ' return' → logprob: -12.125475883483887
    5. '
' → logprob: -13.000475883483887
    6. '```' → logprob: -13.500475883483887
    7. '                   ' → logprob: -13.625475883483887
    8. '           ' → logprob: -15.500475883483887
    9. ',' → logprob: -15.875475883483887
    10. '                
' → logprob: -16.000476837158203

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005026352009736001
    2. 'return' → logprob: -7.750502586364746
    3. ' return' → logprob: -10.250502586364746
    4. 'print' → logprob: -10.375502586364746
    5. '                   ' → logprob: -13.250502586364746
    6. '```' → logprob: -13.500502586364746
    7. '
' → logprob: -13.625502586364746
    8. '           ' → logprob: -14.750502586364746
    9. ' print' → logprob: -15.125502586364746
    10. '              ' → logprob: -16.500503540039062

Token 451: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004208989907056093
    2. 'return' → logprob: -6.004209041595459
    3. '               ' → logprob: -6.504209041595459
    4. ' print' → logprob: -8.5042085647583
    5. '           ' → logprob: -10.5042085647583
    6. ' return' → logprob: -12.3792085647583
    7. '
' → logprob: -15.5042085647583
    8. '```' → logprob: -16.129209518432617
    9. '   ' → logprob: -17.129209518432617
    10. '                   ' → logprob: -17.254209518432617

Token 452: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.537180211627856e-05
    2. '(' → logprob: -10.125045776367188
    3. 'moves' → logprob: -12.375045776367188
    4. ' (' → logprob: -14.000045776367188
    5. '(move' → logprob: -16.000045776367188
    6. '(matches' → logprob: -17.125045776367188
    7. ' moves' → logprob: -17.625045776367188
    8. '(f' → logprob: -18.125045776367188
    9. '()' → logprob: -18.625045776367188
    10. '(
' → logprob: -19.125045776367188

Token 453: 'oves' (ID: 14526)
  Prédit: 'oves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oves' → logprob: -5.512236498361744e-07
    2. 'ove' → logprob: -14.500000953674316
    3. 'moves' → logprob: -18.375
    4. 'o' → logprob: -20.125
    5. 'ov' → logprob: -20.75
    6. ' moves' → logprob: -21.375
    7. 'in' → logprob: -21.625
    8. '```' → logprob: -22.0
    9. '   ' → logprob: -22.625
    10. 'ovs' → logprob: -22.75

Token 454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014241538941860199
    2. ')
' → logprob: -4.264241695404053
    3. '               ' → logprob: -9.639241218566895
    4. ')
' → logprob: -11.639241218566895
    5. '           ' → logprob: -12.764241218566895
    6. ')return' → logprob: -14.389241218566895
    7. '                   ' → logprob: -15.889241218566895
    8. ')`
' → logprob: -16.01424217224121
    9. '),' → logprob: -16.13924217224121
    10. ')`' → logprob: -16.26424217224121

Token 455: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029167240485548973
    2. '               ' → logprob: -3.6541671752929688
    3. '            
' → logprob: -6.904167175292969
    4. '<|end|>' → logprob: -7.154167175292969
    5. '```' → logprob: -8.154167175292969
    6. '       ' → logprob: -8.279167175292969
    7. '
' → logprob: -8.279167175292969
    8. '                   ' → logprob: -9.154167175292969
    9. '                
' → logprob: -10.529167175292969
    10. ' for' → logprob: -10.904167175292969

Token 456: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12777750194072723
    2. '               ' → logprob: -2.127777576446533
    3. ' return' → logprob: -7.127777576446533
    4. 'continue' → logprob: -10.502777099609375
    5. 'break' (adapté à ' break') → logprob: -10.877777099609375
    6. '           ' → logprob: -15.627777099609375
    7. '                   ' → logprob: -17.877777099609375
    8. '	return' → logprob: -18.002777099609375
    9. ' continue' → logprob: -18.002777099609375
    10. 'exit' → logprob: -18.377777099609375

Token 457: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015942457830533385
    2. '            
' → logprob: -6.626594066619873
    3. '       ' → logprob: -9.501594543457031
    4. '
' → logprob: -9.626594543457031
    5. 'else' → logprob: -10.376594543457031
    6. '           
' → logprob: -10.751594543457031
    7. '          ' → logprob: -11.001594543457031
    8. '    
' → logprob: -11.376594543457031
    9. '        
' → logprob: -11.626594543457031
    10. '  
' → logprob: -11.876594543457031

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019866866059601307
    2. 'for' → logprob: -7.376986503601074
    3. '       ' → logprob: -7.501986503601074
    4. '            
' → logprob: -7.751986503601074
    5. 'else' → logprob: -8.001986503601074
    6. ' for' → logprob: -11.126986503601074
    7. '          ' → logprob: -11.876986503601074
    8. '           
' → logprob: -12.626986503601074
    9. '         ' → logprob: -12.751986503601074
    10. '   ' → logprob: -12.876986503601074

Token 459: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038598617538809776
    2. '#' (adapté à ' #') → logprob: -7.875385761260986
    3. ' for' → logprob: -12.875386238098145
    4. '           ' → logprob: -13.500386238098145
    5. '            
' → logprob: -13.625386238098145
    6. '
' → logprob: -14.625386238098145
    7. '       ' → logprob: -16.000385284423828
    8. '        
' → logprob: -16.500385284423828
    9. '```' → logprob: -17.000385284423828
    10. '   ' → logprob: -17.125385284423828

Token 460: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7954958821064793e-05
    2. '#' → logprob: -11.000018119812012
    3. ' for' → logprob: -13.875018119812012
    4. 'def' → logprob: -16.500017166137695
    5. '
' → logprob: -16.750017166137695
    6. '           ' → logprob: -17.375017166137695
    7. 'state' → logprob: -17.375017166137695
    8. '   ' → logprob: -17.625017166137695
    9. '```' → logprob: -17.750017166137695
    10. '            
' → logprob: -18.000017166137695

Token 461: ' explore' (ID: 14326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018011800944805145
    2. ' for' → logprob: -4.143011569976807
    3. '           ' → logprob: -6.393011569976807
    4. '       ' → logprob: -8.768012046813965
    5. '   ' → logprob: -9.518012046813965
    6. '#' → logprob: -10.143012046813965
    7. '            
' → logprob: -11.393012046813965
    8. ')' → logprob: -12.643012046813965
    9. '               ' → logprob: -12.893012046813965
    10. '=' → logprob: -13.143012046813965

Token 462: ' toutes' (ID: 17502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08143371343612671
    2. ' for' → logprob: -2.5814337730407715
    3. '   ' → logprob: -6.2064337730407715
    4. '       ' → logprob: -9.081433296203613
    5. 'all' → logprob: -9.081433296203613
    6. 'each' → logprob: -9.331433296203613
    7. ' each' → logprob: -9.706433296203613
    8. ' all' → logprob: -10.206433296203613
    9. 'range' → logprob: -10.456433296203613
    10. '           ' → logprob: -10.456433296203613

Token 463: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6758905053138733
    2. ' les' → logprob: -0.8008905053138733
    3. 'possible' → logprob: -4.0508904457092285
    4. '   ' → logprob: -5.1758904457092285
    5. 'poss' → logprob: -5.3008904457092285
    6. ' ' → logprob: -5.6758904457092285
    7. 'lines' → logprob: -6.0508904457092285
    8. '(' → logprob: -6.5508904457092285
    9. 'i' → logprob: -6.6758904457092285
    10. ' possible' → logprob: -6.6758904457092285

Token 464: ' possibilités' (ID: 119756)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.22703050076961517
    2. 'l' → logprob: -2.1020305156707764
    3. 'lines' → logprob: -2.9770305156707764
    4. ' voies' → logprob: -4.602030277252197
    5. 'positions' → logprob: -4.727030277252197
    6. ' lignes' → logprob: -6.102030277252197
    7. 'ways' → logprob: -6.102030277252197
    8. 'voie' → logprob: -6.227030277252197
    9. 'ranges' → logprob: -6.977030277252197
    10. 'poss' → logprob: -7.227030277252197

Token 465: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5407736301422119
    2. 'for' → logprob: -1.165773630142212
    3. ' for' → logprob: -2.290773630142212
    4. '            
' → logprob: -5.790773391723633
    5. '
' → logprob: -6.415773391723633
    6. '               ' → logprob: -10.165773391723633
    7. '                
' → logprob: -11.290773391723633
    8. '       ' → logprob: -11.415773391723633
    9. '           
' → logprob: -11.540773391723633
    10. ',' → logprob: -11.790773391723633

Token 466: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.22679933905601501
    2. 'm' → logprob: -2.601799249649048
    3. 'range' → logprob: -2.851799249649048
    4. 'move' → logprob: -3.351799249649048
    5. 'moves' → logprob: -4.351799488067627
    6. 'for' → logprob: -4.476799488067627
    7. 'de' → logprob: -5.601799488067627
    8. 'mov' → logprob: -6.601799488067627
    9. 'state' → logprob: -6.851799488067627
    10. 'p' → logprob: -7.101799488067627

Token 467: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028924880549311638
    2. ' for' → logprob: -4.028924942016602
    3. 'for' → logprob: -5.153924942016602
    4. '            
' → logprob: -5.778924942016602
    5. '
' → logprob: -6.403924942016602
    6. '               ' → logprob: -10.278924942016602
    7. '       ' → logprob: -10.903924942016602
    8. '        
' → logprob: -10.903924942016602
    9. '    
' → logprob: -11.028924942016602
    10. '  
' → logprob: -11.278924942016602

Token 468: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.15384399890899658
    2. ''un' → logprob: -2.903843879699707
    3. 'une' → logprob: -2.903843879699707
    4. 'e' → logprob: -3.778843879699707
    5. 'u' → logprob: -5.528843879699707
    6. 'es' → logprob: -6.278843879699707
    7. 'ans' → logprob: -6.778843879699707
    8. 'i' → logprob: -7.028843879699707
    9. '’une' → logprob: -7.278843879699707
    10. ''' → logprob: -7.903843879699707

Token 469: ' (' (ID: 350)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.2418300211429596
    2. 'vé' → logprob: -2.2418301105499268
    3. 'car' → logprob: -3.6168301105499268
    4. 'wagon' → logprob: -3.7418301105499268
    5. 'voie' → logprob: -4.116829872131348
    6. 'élé' → logprob: -5.116829872131348
    7. 'c' → logprob: -5.616829872131348
    8. 'ligne' → logprob: -5.741829872131348
    9. 'v' → logprob: -6.116829872131348
    10. 'char' → logprob: -6.241829872131348

Token 470: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37532567977905273
    2. 'e' → logprob: -2.1253256797790527
    3. ')' → logprob: -3.2503256797790527
    4. 'car' → logprob: -3.2503256797790527
    5. 'vo' → logprob: -3.3753256797790527
    6. 'a' → logprob: -4.250325679779053
    7. 'char' → logprob: -4.375325679779053
    8. 'voie' → logprob: -4.750325679779053
    9. 'token' → logprob: -5.750325679779053
    10. 'ité' → logprob: -5.750325679779053

Token 471: 'ous' (ID: 784)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5835374593734741
    2. 'e' → logprob: -1.9585374593734741
    3. 'tring' → logprob: -2.3335375785827637
    4. 'egment' → logprob: -2.8335375785827637
    5. 'eg' → logprob: -3.4585375785827637
    6. 'ide' → logprob: -3.8335375785827637
    7. 'ate' → logprob: -3.9585375785827637
    8. 'tr' → logprob: -4.208537578582764
    9. ')' → logprob: -4.458537578582764
    10. 'tat' → logprob: -4.708537578582764

Token 472: '-)' (ID: 59437)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.263715386390686
    2. 'tring' → logprob: -1.888715386390686
    3. 'ét' → logprob: -1.888715386390686
    4. 'string' → logprob: -2.0137152671813965
    5. ')' → logprob: -2.6387152671813965
    6. 'chaine' → logprob: -3.3887152671813965
    7. 'token' → logprob: -3.6387152671813965
    8. 'etat' → logprob: -3.6387152671813965
    9. 'deque' → logprob: -4.2637152671813965
    10. 'é' → logprob: -4.3887152671813965

Token 473: ' train' (ID: 8513)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.1382499933242798
    2. 'string' → logprob: -1.3882499933242798
    3. 'vo' → logprob: -1.7632499933242798
    4. 'élé' → logprob: -3.5132498741149902
    5. 'vé' → logprob: -3.6382498741149902
    6. 'ét' → logprob: -3.8882498741149902
    7. 'train' → logprob: -3.8882498741149902
    8. 'token' → logprob: -4.01324987411499
    9. 'tring' → logprob: -4.13824987411499
    10. 'wagon' → logprob: -4.13824987411499

Token 474: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5245501399040222
    2. ' for' → logprob: -1.274550199508667
    3. ',' → logprob: -2.649550199508667
    4. ')' → logprob: -4.649549961090088
    5. ' dans' → logprob: -5.149549961090088
    6. ' entre' → logprob: -5.149549961090088
    7. ' in' → logprob: -5.399549961090088
    8. ' between' → logprob: -5.524549961090088
    9. '            
' → logprob: -5.899549961090088
    10. '.' → logprob: -5.899549961090088

Token 475: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8024686574935913
    2. ' for' → logprob: -0.9274686574935913
    3. '           ' → logprob: -1.9274686574935913
    4. '            
' → logprob: -5.802468776702881
    5. '
' → logprob: -6.052468776702881
    6. ')' → logprob: -6.802468776702881
    7. '       ' → logprob: -7.177468776702881
    8. ',' → logprob: -7.177468776702881
    9. '               ' → logprob: -7.302468776702881
    10. '.' → logprob: -8.177468299865723

Token 476: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008618712425231934
    2. ' for' → logprob: -4.7586188316345215
    3. '           ' → logprob: -13.258618354797363
    4. '
' → logprob: -13.508618354797363
    5. '            
' → logprob: -15.008618354797363
    6. 'x' → logprob: -15.258618354797363
    7. '   ' → logprob: -15.758618354797363
    8. '       ' → logprob: -15.883618354797363
    9. '```' → logprob: -16.13361930847168
    10. '	for' → logprob: -17.25861930847168

Token 477: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9743012671824545e-05
    2. '           ' → logprob: -11.125020027160645
    3. ' for' → logprob: -12.250020027160645
    4. '            
' → logprob: -16.625019073486328
    5. '       ' → logprob: -17.500019073486328
    6. '   ' → logprob: -18.125019073486328
    7. '
' → logprob: -18.500019073486328
    8. '#' → logprob: -19.250019073486328
    9. '```' → logprob: -19.500019073486328
    10. '               ' → logprob: -19.875019073486328

Token 478: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5103554129600525
    2. 'connections' → logprob: -1.0103554725646973
    3. 'les' → logprob: -4.635355472564697
    4. 'la' → logprob: -4.635355472564697
    5. ' range' → logprob: -5.260355472564697
    6. 'une' → logprob: -6.135355472564697
    7. 'all' → logprob: -6.885355472564697
    8. 'x' → logprob: -6.885355472564697
    9. 'l' → logprob: -7.010355472564697
    10. 'for' → logprob: -7.260355472564697

Token 479: ' lignes' (ID: 81687)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.2845346927642822
    2. 'lines' → logprob: -2.0345346927642822
    3. 'range' → logprob: -2.9095346927642822
    4. 'for' → logprob: -4.284534454345703
    5. 'conn' → logprob: -5.159534454345703
    6. 'con' → logprob: -5.284534454345703
    7. '(' → logprob: -5.284534454345703
    8. 'ligne' → logprob: -5.784534454345703
    9. '(con' → logprob: -5.909534454345703
    10. ' connections' → logprob: -6.034534454345703

Token 480: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03861134126782417
    2. 'for' → logprob: -3.53861141204834
    3. ',' → logprob: -6.41361141204834
    4. ' in' → logprob: -6.41361141204834
    5. '           ' → logprob: -6.53861141204834
    6. '
' → logprob: -6.78861141204834
    7. '       ' → logprob: -7.03861141204834
    8. '   ' → logprob: -7.16361141204834
    9. ':' → logprob: -8.28861141204834
    10. '            
' → logprob: -8.78861141204834

Token 481: ''é' (ID: 12728)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04487811028957367
    2. ' range' → logprob: -4.294878005981445
    3. ''une' → logprob: -4.419878005981445
    4. 'e' → logprob: -5.044878005981445
    5. 'une' → logprob: -5.669878005981445
    6. 'i' → logprob: -6.044878005981445
    7. ''un' → logprob: -7.044878005981445
    8. 'x' → logprob: -7.294878005981445
    9. '(range' → logprob: -7.294878005981445
    10. 'for' → logprob: -7.919878005981445

Token 482: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.053618986159563065
    2. 'x' → logprob: -3.428618907928467
    3. 'xt' → logprob: -4.928618907928467
    4. 'changes' → logprob: -5.428618907928467
    5. 'ch' → logprob: -5.928618907928467
    6. 'nd' → logprob: -7.053618907928467
    7. 'tat' → logprob: -7.178618907928467
    8. '_change' → logprob: -7.803618907928467
    9. 'range' → logprob: -7.803618907928467
    10. 't' → logprob: -8.428619384765625

Token 483: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5466009974479675
    2. ' for' → logprob: -1.0466010570526123
    3. 'for' → logprob: -3.0466010570526123
    4. '.' → logprob: -5.546600818634033
    5. ':' → logprob: -5.671600818634033
    6. '
' → logprob: -6.046600818634033
    7. ',' → logprob: -6.046600818634033
    8. '       ' → logprob: -6.046600818634033
    9. '               ' → logprob: -6.046600818634033
    10. '            
' → logprob: -6.296600818634033

Token 484: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10648409277200699
    2. ' for' → logprob: -2.3564841747283936
    3. 'range' → logprob: -5.3564839363098145
    4. ' range' → logprob: -7.6064839363098145
    5. 'True' → logprob: -7.6064839363098145
    6. '
' → logprob: -8.981484413146973
    7. 'False' → logprob: -9.481484413146973
    8. '       ' → logprob: -9.856484413146973
    9. ' True' → logprob: -9.856484413146973
    10. '   ' → logprob: -9.981484413146973

Token 485: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0652008056640625
    2. 'êtes' → logprob: -3.4402008056640625
    3. 'cs' → logprob: -3.9402008056640625
    4. 'e' → logprob: -5.0652008056640625
    5. 'ea' → logprob: -6.3152008056640625
    6. 'c' → logprob: -6.4402008056640625
    7. 'riv' → logprob: -7.3152008056640625
    8. 'm' → logprob: -7.6902008056640625
    9. 'rive' → logprob: -8.690200805664062
    10. 't' → logprob: -9.315200805664062

Token 486: ' entre' (ID: 3853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17946472764015198
    2. ' for' → logprob: -2.179464817047119
    3. 'for' → logprob: -3.429464817047119
    4. '
' → logprob: -4.429464817047119
    5. '            
' → logprob: -5.804464817047119
    6. '       ' → logprob: -6.429464817047119
    7. '               ' → logprob: -7.179464817047119
    8. '   ' → logprob: -8.804464340209961
    9. '```' → logprob: -8.929464340209961
    10. ',' → logprob: -8.929464340209961

Token 487: ' extr' (ID: 15674)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extr' → logprob: -1.246396780014038
    2. 'les' → logprob: -1.371396780014038
    3. '(' → logprob: -2.621396780014038
    4. 'connections' → logprob: -2.746396780014038
    5. 'vo' → logprob: -2.871396780014038
    6. 'des' → logprob: -3.121396780014038
    7. 'ex' → logprob: -3.246396780014038
    8. 'ext' → logprob: -3.371396780014038
    9. 'lines' → logprob: -3.621396780014038
    10. '(ex' → logprob: -4.121397018432617

Token 488: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0035764304921031
    2. 'ém' → logprob: -6.128576278686523
    3. 'imité' → logprob: -8.378576278686523
    4. 'em' → logprob: -8.628576278686523
    5. 'ê' → logprob: -9.128576278686523
    6. 'êmes' → logprob: -9.253576278686523
    7. '```' → logprob: -9.253576278686523
    8. '(' → logprob: -9.753576278686523
    9. 'émy' → logprob: -9.878576278686523
    10. 'ités' → logprob: -10.003576278686523

Token 489: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.008374147117137909
    2. 'm' → logprob: -5.383374214172363
    3. 'mites' → logprob: -6.258374214172363
    4. '```' → logprob: -8.133374214172363
    5. 'mite' → logprob: -8.758374214172363
    6. 'mits' → logprob: -8.883374214172363
    7. '...' → logprob: -9.008374214172363
    8. 'mé' → logprob: -9.383374214172363
    9. 'мит' → logprob: -9.633374214172363
    10. '#' → logprob: -9.633374214172363

Token 490: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00805928185582161
    2. 'es' → logprob: -4.883059501647949
    3. 'é' → logprob: -7.758059501647949
    4. 'e' → logprob: -12.00805950164795
    5. 's' → logprob: -12.25805950164795
    6. '(' → logprob: -12.25805950164795
    7. 'ies' → logprob: -12.63305950164795
    8. 'i' → logprob: -12.88305950164795
    9. 'ées' → logprob: -13.75805950164795
    10. 't' → logprob: -14.38305950164795

Token 491: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6581643223762512
    2. ' for' → logprob: -1.2831642627716064
    3. 'for' → logprob: -1.7831642627716064
    4. '
' → logprob: -4.1581645011901855
    5. '            
' → logprob: -4.6581645011901855
    6. '       ' → logprob: -5.5331645011901855
    7. '               ' → logprob: -6.1581645011901855
    8. ' 
' → logprob: -6.6581645011901855
    9. '   ' → logprob: -7.1581645011901855
    10. '\n' → logprob: -7.4081645011901855

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07789956778287888
    2. 'for' → logprob: -3.20289945602417
    3. ' for' → logprob: -3.45289945602417
    4. '            
' → logprob: -6.82789945602417
    5. '
' → logprob: -7.07789945602417
    6. '       ' → logprob: -7.95289945602417
    7. '               ' → logprob: -8.952899932861328
    8. '            ' → logprob: -9.827899932861328
    9. '          ' → logprob: -10.202899932861328
    10. '   ' → logprob: -10.327899932861328

Token 493: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.629921436891891e-05
    2. ' for' → logprob: -11.12502670288086
    3. '           ' → logprob: -11.62502670288086
    4. '            
' → logprob: -14.12502670288086
    5. '       ' → logprob: -14.87502670288086
    6. 'found' → logprob: -15.12502670288086
    7. '
' → logprob: -15.12502670288086
    8. '#' (adapté à ' #') → logprob: -15.12502670288086
    9. '   ' → logprob: -15.25002670288086
    10. '```' → logprob: -15.75002670288086

Token 494: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8232690460281447e-05
    2. ' for' → logprob: -10.000048637390137
    3. '           ' → logprob: -13.750048637390137
    4. '
' → logprob: -14.250048637390137
    5. '   ' → logprob: -14.625048637390137
    6. '       ' → logprob: -15.000048637390137
    7. '            
' → logprob: -15.875048637390137
    8. '```' → logprob: -17.12504768371582
    9. '#' → logprob: -17.25004768371582
    10. 'x' → logprob: -17.62504768371582

Token 495: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006686363834887743
    2. ' i' → logprob: -5.131686210632324
    3. 'line' → logprob: -7.506686210632324
    4. ' line' → logprob: -9.006686210632324
    5. 'ligne' → logprob: -10.506686210632324
    6. 'idx' → logprob: -11.131686210632324
    7. '```' → logprob: -12.631686210632324
    8. 'pos' → logprob: -12.631686210632324
    9. 'index' → logprob: -13.131686210632324
    10. 'train' → logprob: -13.131686210632324

Token 496: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035590872168540955
    2. ' i' → logprob: -3.910590887069702
    3. 'line' → logprob: -4.535590648651123
    4. ' line' → logprob: -5.535590648651123
    5. 'ligne' → logprob: -10.160591125488281
    6. '(i' → logprob: -10.535591125488281
    7. '```' → logprob: -10.785591125488281
    8. 'idx' → logprob: -10.910591125488281
    9. 'end' → logprob: -11.035591125488281
    10. 'side' → logprob: -11.285591125488281

Token 497: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05599881336092949
    2. 'in' → logprob: -3.3059988021850586
    3. ',' → logprob: -4.805998802185059
    4. 'i' → logprob: -4.930998802185059
    5. ' i' → logprob: -6.305998802185059
    6. 'index' → logprob: -9.555998802185059
    7. 'line' → logprob: -9.680998802185059
    8. '_idx' → logprob: -9.805998802185059
    9. ' ,' → logprob: -9.805998802185059
    10. 'idx' → logprob: -9.930998802185059

Token 498: ' parking' (ID: 14472)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.931863051955588e-05
    2. ' range' → logprob: -9.750059127807617
    3. 'state' → logprob: -14.000059127807617
    4. 'rang' → logprob: -16.625059127807617
    5. 'start' → logprob: -16.625059127807617
    6. '0' → logprob: -17.250059127807617
    7. '```' → logprob: -17.250059127807617
    8. 'code' → logprob: -18.500059127807617
    9. 'x' → logprob: -18.500059127807617
    10. 'r' → logprob: -18.750059127807617

Token 499: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485436737537384
    2. 'i' → logprob: -1.848543643951416
    3. ' i' → logprob: -2.723543643951416
    4. 'in' → logprob: -3.348543643951416
    5. ',' → logprob: -3.598543643951416
    6. 'for' → logprob: -5.598543643951416
    7. ' for' → logprob: -5.848543643951416
    8. 'line' → logprob: -7.598543643951416
    9. ',i' → logprob: -8.098544120788574
    10. ' line' → logprob: -8.223544120788574

Token 500: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5147726535797119
    2. ' in' → logprob: -1.014772653579712
    3. ' ,' → logprob: -3.389772653579712
    4. 'in' → logprob: -5.764772415161133
    5. ' i' → logprob: -7.139772415161133
    6. ':' → logprob: -7.764772415161133
    7. ',i' → logprob: -7.764772415161133
    8. ' and' → logprob: -8.139772415161133
    9. ' for' → logprob: -8.264772415161133
    10. '<|end|>' → logprob: -8.514772415161133

Token 501: '           ' (ID: 352)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9457967281341553
    2. ',' → logprob: -1.1957967281341553
    3. ':' → logprob: -1.5707967281341553
    4. ' ,' → logprob: -3.1957967281341553
    5. ' :' → logprob: -3.8207967281341553
    6. ' for' → logprob: -4.195796966552734
    7. '<|end|>' → logprob: -5.320796966552734
    8. 'in' → logprob: -5.445796966552734
    9. ' i' → logprob: -5.695796966552734
    10. '   ' → logprob: -6.195796966552734

Token 502: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2560647130012512
    2. '   ' → logprob: -2.0060646533966064
    3. 'for' (adapté à ' for') → logprob: -2.7560646533966064
    4. '       ' → logprob: -4.5060648918151855
    5. ' i' → logprob: -5.0060648918151855
    6. ' range' → logprob: -6.0060648918151855
    7. 'range' → logprob: -6.5060648918151855
    8. 'i' → logprob: -6.8810648918151855
    9. '```' → logprob: -7.0060648918151855
    10. ':' → logprob: -7.5060648918151855

Token 503: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16023823618888855
    2. ' i' → logprob: -1.910238265991211
    3. ' range' → logprob: -12.035238265991211
    4. 'range' → logprob: -12.035238265991211
    5. '	i' → logprob: -14.285238265991211
    6. '```' → logprob: -14.660238265991211
    7. '`' → logprob: -15.410238265991211
    8. ' ' → logprob: -15.785238265991211
    9. ' in' → logprob: -15.785238265991211
    10. '(i' → logprob: -15.785238265991211

Token 504: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008903022855520248
    2. 'in' → logprob: -4.7589030265808105
    3. ',' → logprob: -8.383902549743652
    4. ' ,' → logprob: -10.383902549743652
    5. ' ' → logprob: -10.758902549743652
    6. ')' → logprob: -13.008902549743652
    7. '_in' → logprob: -14.133902549743652
    8. '0' → logprob: -14.258902549743652
    9. '_' → logprob: -14.883902549743652
    10. '	in' → logprob: -14.883902549743652

Token 505: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.880233764648438
    4. ')' → logprob: -18.755233764648438
    5. '0' → logprob: -18.755233764648438
    6. '	range' → logprob: -18.880233764648438
    7. '   ' → logprob: -19.130233764648438
    8. ' ' → logprob: -19.130233764648438
    9. 'in' → logprob: -19.880233764648438
    10. 'rang' → logprob: -20.380233764648438

Token 506: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.360996485454962e-05
    2. 'x' → logprob: -10.1250638961792
    3. '(' → logprob: -10.8750638961792
    4. '(len' → logprob: -12.3750638961792
    5. ' (' → logprob: -15.6250638961792
    6. '   ' → logprob: -16.750062942504883
    7. ' x' → logprob: -17.000062942504883
    8. ')' → logprob: -17.375062942504883
    9. '(
' → logprob: -17.750062942504883
    10. 'len' → logprob: -18.000062942504883

Token 507: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10024958848953247
    2. '):
' → logprob: -2.3502495288848877
    3. ' ):' → logprob: -11.350249290466309
    4. '):
' → logprob: -11.600249290466309
    5. '   ' → logprob: -12.100249290466309
    6. '):

' → logprob: -12.225249290466309
    7. ')' → logprob: -12.350249290466309
    8. ':' → logprob: -12.725249290466309
    9. '       ' → logprob: -12.975249290466309
    10. ' ):
' → logprob: -13.850249290466309

Token 508: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2706151008605957
    2. ':' → logprob: -2.3956151008605957
    3. ' if' → logprob: -2.3956151008605957
    4. '   ' → logprob: -4.645615100860596
    5. ',' → logprob: -4.770615100860596
    6. '               ' → logprob: -4.895615100860596
    7. '       ' → logprob: -5.270615100860596
    8. ' #' → logprob: -5.520615100860596
    9. ' ' → logprob: -5.645615100860596
    10. '            
' → logprob: -5.895615100860596

Token 509: ' train' (ID: 8513)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20843744277954102
    2. 'if' → logprob: -2.208437442779541
    3. ' for' → logprob: -3.833437442779541
    4. '#' → logprob: -4.208437442779541
    5. 'train' (adapté à ' train') → logprob: -4.333437442779541
    6. 'length' → logprob: -5.083437442779541
    7. 'line' → logprob: -5.583437442779541
    8. ' if' → logprob: -5.833437442779541
    9. '           ' → logprob: -5.958437442779541
    10. '   ' → logprob: -5.958437442779541

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6393139958381653
    2. '=' → logprob: -0.7643139958381653
    3. '_line' → logprob: -6.1393141746521
    4. '_str' → logprob: -6.8893141746521
    5. 's' → logprob: -6.8893141746521
    6. '_' → logprob: -7.1393141746521
    7. '_len' → logprob: -7.3893141746521
    8. '_length' → logprob: -8.139313697814941
    9. '_state' → logprob: -8.389313697814941
    10. '_lines' → logprob: -9.389313697814941

Token 511: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -4.096126576769166e-05
    2. ' state' → logprob: -10.125041007995605
    3. 'start' → logprob: -14.125041007995605
    4. '   ' → logprob: -17.25004005432129
    5. '(state' → logprob: -17.62504005432129
    6. ' ' → logprob: -17.62504005432129
    7. 'states' → logprob: -18.12504005432129
    8. 'list' → logprob: -18.25004005432129
    9. '[state' → logprob: -18.50004005432129
    10. '	state' → logprob: -18.87504005432129

Token 512: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. 'i' → logprob: -12.875003814697266
    3. ' [' → logprob: -14.500003814697266
    4. ')' → logprob: -15.000003814697266
    5. '[' → logprob: -15.250003814697266
    6. '   ' → logprob: -16.500003814697266
    7. ')[' → logprob: -16.750003814697266
    8. '```' → logprob: -17.000003814697266
    9. ',i' → logprob: -17.125003814697266
    10. '
' → logprob: -17.375003814697266

Token 513: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3664761185646057
    2. ')' → logprob: -1.241476058959961
    3. '])' → logprob: -4.616476058959961
    4. ']
' → logprob: -5.241476058959961
    5. ')
' → logprob: -5.991476058959961
    6. '）' → logprob: -9.991476058959961
    7. '])
' → logprob: -10.241476058959961
    8. ')]' → logprob: -10.366476058959961
    9. ']

' → logprob: -10.616476058959961
    10. ' )' → logprob: -11.491476058959961

Token 514: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8349267244338989
    2. ' if' → logprob: -1.584926724433899
    3. 'if' → logprob: -1.834926724433899
    4. '           ' → logprob: -2.3349266052246094
    5. '<|end|>' → logprob: -3.4599266052246094
    6. '               ' → logprob: -3.5849266052246094
    7. ':
' → logprob: -4.459926605224609
    8. ',' → logprob: -5.209926605224609
    9. '                   ' → logprob: -5.209926605224609
    10. ' and' → logprob: -5.709926605224609

Token 515: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04863789677619934
    2. ' if' → logprob: -3.048637866973877
    3. '               ' → logprob: -10.923638343811035
    4. 'for' → logprob: -11.173638343811035
    5. '#' (adapté à ' #') → logprob: -12.423638343811035
    6. '           ' → logprob: -12.798638343811035
    7. 'length' → logprob: -12.798638343811035
    8. '```' → logprob: -13.298638343811035
    9. ')' → logprob: -13.673638343811035
    10. ' for' → logprob: -14.048638343811035

Token 516: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0096540916711092
    2. 'for' → logprob: -5.0096540451049805
    3. '#' → logprob: -5.8846540451049805
    4. '               ' → logprob: -9.13465404510498
    5. 'length' → logprob: -10.88465404510498
    6. 'Si' → logprob: -12.00965404510498
    7. 'If' → logprob: -12.13465404510498
    8. ' if' → logprob: -12.25965404510498
    9. '           ' → logprob: -12.38465404510498
    10. 'si' → logprob: -13.88465404510498

Token 517: ' la' (ID: 557)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.6572654843330383
    2. ' train' → logprob: -0.9072654843330383
    3. ' not' → logprob: -2.6572654247283936
    4. ' len' → logprob: -5.532265663146973
    5. 'not' → logprob: -6.157265663146973
    6. 'len' → logprob: -6.282265663146973
    7. ' ' → logprob: -11.407265663146973
    8. ' ' → logprob: -12.282265663146973
    9. '  ' → logprob: -13.157265663146973
    10. '   ' → logprob: -13.532265663146973

Token 518: ' ligne' (ID: 19583)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.015642596408724785
    2. ' train' → logprob: -4.3906426429748535
    3. 'len' → logprob: -6.3906426429748535
    4. 'not' → logprob: -6.8906426429748535
    5. ' not' → logprob: -7.8906426429748535
    6. ' len' → logprob: -10.890642166137695
    7. 'rain' → logprob: -11.015642166137695
    8. '```' → logprob: -12.265642166137695
    9. '(train' → logprob: -12.640642166137695
    10. 't' → logprob: -12.640642166137695

Token 519: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012469273991882801
    2. ' and' → logprob: -5.262469291687012
    3. ' !=' → logprob: -6.137469291687012
    4. '!=' → logprob: -7.012469291687012
    5. '==' → logprob: -7.262469291687012
    6. '               ' → logprob: -7.512469291687012
    7. '[' → logprob: -7.512469291687012
    8. ' ==' → logprob: -7.637469291687012
    9. 'and' → logprob: -7.762469291687012
    10. 'i' → logprob: -8.012469291687012

Token 520: ' vide' (ID: 21835)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4296029806137085
    2. 'not' → logprob: -1.0546029806137085
    3. '''' → logprob: -8.05460262298584
    4. '               ' → logprob: -8.92960262298584
    5. 'empty' → logprob: -8.92960262298584
    6. '                   ' → logprob: -9.17960262298584
    7. ' empty' → logprob: -9.80460262298584
    8. 'vide' → logprob: -10.30460262298584
    9. ':' → logprob: -11.17960262298584
    10. '.' → logprob: -11.55460262298584

Token 521: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1880687475204468
    2. ':' → logprob: -1.3130687475204468
    3. ' or' → logprob: -1.4380687475204468
    4. '                   ' → logprob: -2.1880688667297363
    5. '           ' → logprob: -2.9380688667297363
    6. ' continue' → logprob: -5.188068866729736
    7. ':
' → logprob: -5.438068866729736
    8. ' ==' → logprob: -5.688068866729736
    9. 'continue' → logprob: -5.938068866729736
    10. ',' → logprob: -6.063068866729736

Token 522: ' rien' (ID: 23082)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07114186882972717
    2. '                   ' → logprob: -2.8211419582366943
    3. ' continue' → logprob: -4.821141719818115
    4. '   ' → logprob: -7.446141719818115
    5. '               ' → logprob: -7.821141719818115
    6. '	continue' → logprob: -9.696142196655273
    7. 'contin' → logprob: -11.696142196655273
    8. ' ' → logprob: -12.321142196655273
    9. '                       ' → logprob: -12.446142196655273
    10. 'if' → logprob: -12.696142196655273

Token 523: ' à' (ID: 1221)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8917720913887024
    2. 'continue' → logprob: -0.8917720913887024
    3. ' to' → logprob: -2.7667720317840576
    4. ' if' → logprob: -3.7667720317840576
    5. ' continues' → logprob: -3.7667720317840576
    6. ' ==' → logprob: -4.266772270202637
    7. 'to' → logprob: -5.141772270202637
    8. 'if' → logprob: -5.266772270202637
    9. ' for' → logprob: -5.516772270202637
    10. ' ' → logprob: -5.516772270202637

Token 524: ' déplacer' (ID: 142135)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.11598200350999832
    2. 'dé' → logprob: -2.2409820556640625
    3. ' déplacer' → logprob: -6.9909820556640625
    4. ' faire' → logprob: -7.1159820556640625
    5. 'changer' → logprob: -8.115982055664062
    6. 'bou' → logprob: -8.365982055664062
    7. 'contin' → logprob: -8.490982055664062
    8. 'move' → logprob: -9.115982055664062
    9. 'prendre' → logprob: -9.240982055664062
    10. 'fait' → logprob: -9.365982055664062

Token 525: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08967076241970062
    2. '                   ' → logprob: -3.0896706581115723
    3. ':' → logprob: -3.9646706581115723
    4. ' continue' → logprob: -4.714670658111572
    5. '           ' → logprob: -5.464670658111572
    6. ':
' → logprob: -5.589670658111572
    7. 'continue' → logprob: -5.839670658111572
    8. ',' → logprob: -7.964670658111572
    9. '                       ' → logprob: -8.21467113494873
    10. '.' → logprob: -8.33967113494873

Token 526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02484755404293537
    2. '           ' → logprob: -4.149847507476807
    3. '                   ' → logprob: -5.524847507476807
    4. ' if' → logprob: -6.399847507476807
    5. ' continue' → logprob: -6.899847507476807
    6. '                
' → logprob: -7.899847507476807
    7. 'if' → logprob: -8.649847984313965
    8. '   ' → logprob: -8.774847984313965
    9. '                       ' → logprob: -8.774847984313965
    10. '       ' → logprob: -9.024847984313965

Token 527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14623413980007172
    2. ' if' → logprob: -2.6462340354919434
    3. '               ' → logprob: -2.8962340354919434
    4. 'continue' → logprob: -4.771234035491943
    5. ' continue' → logprob: -6.771234035491943
    6. '           ' → logprob: -8.271234512329102
    7. '                   ' → logprob: -11.521234512329102
    8. '   ' → logprob: -11.896234512329102
    9. ' ' → logprob: -13.146234512329102
    10. '	if' → logprob: -13.521234512329102

Token 528: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.29030734300613403
    2. 'not' → logprob: -1.5403072834014893
    3. 'train' → logprob: -3.4153072834014893
    4. ' train' → logprob: -5.415307521820068
    5. 'len' → logprob: -8.41530704498291
    6. ' len' → logprob: -9.41530704498291
    7. ' ' → logprob: -11.16530704498291
    8. '   ' → logprob: -11.54030704498291
    9. '  ' → logprob: -12.79030704498291
    10. '```' → logprob: -12.91530704498291

Token 529: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.011047935113310814
    2. ' train' → logprob: -4.511047840118408
    3. 'state' → logprob: -15.636048316955566
    4. '(train' → logprob: -17.01104736328125
    5. '   ' → logprob: -19.38604736328125
    6. ' ' → logprob: -20.01104736328125
    7. 't' → logprob: -20.01104736328125
    8. '=train' → logprob: -20.13604736328125
    9. 'len' → logprob: -20.26104736328125
    10. ' ' → logprob: -20.51104736328125

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037340454291552305
    2. ':
' → logprob: -6.378734111785889
    3. 'continue' → logprob: -7.003734111785889
    4. ' continue' → logprob: -7.753734111785889
    5. ' or' → logprob: -8.50373363494873
    6. ' continues' → logprob: -8.87873363494873
    7. '   ' → logprob: -8.87873363494873
    8. '	continue' → logprob: -10.25373363494873
    9. '                   ' → logprob: -10.37873363494873
    10. ' :' → logprob: -10.75373363494873

Token 531: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.235340416431427
    2. '               ' → logprob: -1.7353403568267822
    3. ':
' → logprob: -4.235340595245361
    4. 'continue' → logprob: -4.985340595245361
    5. ':' → logprob: -5.235340595245361
    6. ' continue' → logprob: -5.360340595245361
    7. '   ' → logprob: -6.985340595245361
    8. '                       ' → logprob: -7.235340595245361
    9. '           ' → logprob: -8.485340118408203
    10. '	continue' → logprob: -9.360340118408203

Token 532: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3290861248970032
    2. ' continue' → logprob: -1.3290860652923584
    3. '                   ' → logprob: -4.3290863037109375
    4. '               ' → logprob: -6.0790863037109375
    5. '	continue' → logprob: -8.829086303710938
    6. '   ' → logprob: -10.079086303710938
    7. '                       ' → logprob: -10.454086303710938
    8. '           ' → logprob: -11.829086303710938
    9. '_continue' → logprob: -13.329086303710938
    10. '       ' → logprob: -13.954086303710938

Token 533: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6847008466720581
    2. '               ' → logprob: -1.309700846672058
    3. 'for' → logprob: -2.1847009658813477
    4. 'length' → logprob: -3.8097009658813477
    5. 'start' → logprob: -3.8097009658813477
    6. '                
' → logprob: -4.059700965881348
    7. ' for' → logprob: -4.434700965881348
    8. ' #' → logprob: -4.809700965881348
    9. 'first' → logprob: -5.309700965881348
    10. 'front' → logprob: -5.559700965881348

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5496747493743896
    2. '#' → logprob: -1.1746747493743896
    3. 'for' → logprob: -2.6746747493743896
    4. '           ' → logprob: -3.9246747493743896
    5. '```' → logprob: -4.299674987792969
    6. '                
' → logprob: -5.674674987792969
    7. '
' → logprob: -5.799674987792969
    8. 'length' → logprob: -6.424674987792969
    9. 'start' → logprob: -6.424674987792969
    10. '            
' → logprob: -8.049674987792969

Token 535: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.44602230191230774
    2. 'for' → logprob: -1.1960222721099854
    3. '               ' → logprob: -3.5710222721099854
    4. 'length' → logprob: -3.8210222721099854
    5. 'start' → logprob: -6.1960225105285645
    6. 'ends' → logprob: -6.6960225105285645
    7. 'left' → logprob: -6.8210225105285645
    8. ' #' → logprob: -7.5710225105285645
    9. 'len' → logprob: -7.5710225105285645
    10. 'end' → logprob: -7.9460225105285645

Token 536: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49033740162849426
    2. 'for' → logprob: -0.9903373718261719
    3. 'length' → logprob: -4.865337371826172
    4. 'left' → logprob: -5.365337371826172
    5. 'front' → logprob: -6.240337371826172
    6. 'train' → logprob: -7.115337371826172
    7. 'start' → logprob: -8.115337371826172
    8. 'head' → logprob: -8.615337371826172
    9. ' #' → logprob: -9.615337371826172
    10. 'first' → logprob: -10.115337371826172

Token 537: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25821173191070557
    2. ' for' → logprob: -1.7582117319107056
    3. '#' → logprob: -3.133211612701416
    4. ' #' → logprob: -5.133211612701416
    5. '_side' → logprob: -6.383211612701416
    6. 'token' → logprob: -7.508211612701416
    7. 'tokens' → logprob: -7.508211612701416
    8. '_tokens' → logprob: -7.883211612701416
    9. 's' → logprob: -8.383212089538574
    10. 'def' → logprob: -8.508212089538574

Token 538: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.1010768860578537
    2. ' déplacer' → logprob: -2.97607684135437
    3. 'try' → logprob: -4.351077079772949
    4. ' essayer' → logprob: -5.351077079772949
    5. 'le' → logprob: -5.351077079772949
    6. 'move' → logprob: -5.601077079772949
    7. 'for' → logprob: -5.851077079772949
    8. 'faire' → logprob: -6.101077079772949
    9. 'm' → logprob: -6.476077079772949
    10. 'de' → logprob: -6.976077079772949

Token 539: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8135039210319519
    2. 'the' → logprob: -1.6885039806365967
    3. 'train' → logprob: -1.9385039806365967
    4. 'for' → logprob: -2.6885039806365967
    5. ' the' → logprob: -3.3135039806365967
    6. ' le' → logprob: -3.5635039806365967
    7. 'it' → logprob: -4.063503742218018
    8. ' for' → logprob: -4.188503742218018
    9. 'len' → logprob: -4.188503742218018
    10. 't' → logprob: -5.063503742218018

Token 540: ' sous' (ID: 14487)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' train' → logprob: -0.9351580142974854
    2. 'train' → logprob: -1.4351580142974854
    3. ' morceau' → logprob: -2.0601580142974854
    4. ' segment' → logprob: -3.0601580142974854
    5. 's' → logprob: -3.0601580142974854
    6. ' sous' → logprob: -3.4351580142974854
    7. ' token' → logprob: -4.685157775878906
    8. 'e' → logprob: -4.810157775878906
    9. 'token' → logprob: -4.935157775878906
    10. ' ou' → logprob: -5.185157775878906

Token 541: '-tr' (ID: 15461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4679579734802246
    2. '-' → logprob: -1.8429579734802246
    3. '_train' → logprob: -1.8429579734802246
    4. 'train' → logprob: -4.092957973480225
    5. '-tr' → logprob: -4.092957973480225
    6. '_tr' → logprob: -4.717957973480225
    7. '_string' → logprob: -5.967957973480225
    8. '_t' → logprob: -6.092957973480225
    9. 'string' → logprob: -6.217957973480225
    10. '_-' → logprob: -6.342957973480225

Token 542: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.005131407640874386
    2. 'ai' → logprob: -6.005131244659424
    3. 'a' → logprob: -7.505131244659424
    4. 'en' → logprob: -8.005131721496582
    5. '#' → logprob: -8.317631721496582
    6. '```' → logprob: -8.942631721496582
    7. '

' → logprob: -9.317631721496582
    8. 'ein' → logprob: -9.442631721496582
    9. '   ' → logprob: -9.630131721496582
    10. 'aj' → logprob: -9.755131721496582

Token 543: ' qui' (ID: 2780)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.0368342399597168
    2. 'from' → logprob: -1.5368342399597168
    3. '               ' → logprob: -1.6618342399597168
    4. ' for' → logprob: -2.161834239959717
    5. ' in' → logprob: -4.036834239959717
    6. ' of' → logprob: -4.286834239959717
    7. ' on' → logprob: -4.286834239959717
    8. 'for' → logprob: -4.411834239959717
    9. ' =' → logprob: -4.536834239959717
    10. ' (' → logprob: -5.036834239959717

Token 544: ' est' (ID: 893)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5481830835342407
    2. 'est' → logprob: -1.5481830835342407
    3. ' part' → logprob: -2.923182964324951
    4. 'comm' → logprob: -3.298182964324951
    5. 'd' → logprob: -3.548182964324951
    6. 'dé' → logprob: -4.048182964324951
    7. 'se' → logprob: -4.298182964324951
    8. ' commence' → logprob: -4.298182964324951
    9. 'start' → logprob: -4.298182964324951
    10. 's' → logprob: -4.423182964324951

Token 545: ' un' (ID: 537)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.4757291078567505
    2. 'un' → logprob: -1.8507291078567505
    3. 'une' → logprob: -1.8507291078567505
    4. 'so' → logprob: -2.100728988647461
    5. ' soit' → logprob: -2.475728988647461
    6. 'train' → logprob: -2.600728988647461
    7. 'dé' → logprob: -3.975728988647461
    8. 'len' → logprob: -4.475728988647461
    9. 'dans' → logprob: -4.475728988647461
    10. ' sur' → logprob: -4.600728988647461

Token 546: ' prefix' (ID: 18633)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.8897828459739685
    2. 'prefix' → logprob: -1.8897829055786133
    3. 'suffix' → logprob: -2.0147829055786133
    4. 's' → logprob: -2.2647829055786133
    5. 'segment' → logprob: -2.3897829055786133
    6. 'substring' → logprob: -3.1397829055786133
    7. 'train' → logprob: -4.014782905578613
    8. ' pré' → logprob: -4.014782905578613
    9. 'slice' → logprob: -4.764782905578613
    10. ' segment' → logprob: -5.014782905578613

Token 547: ' ou' (ID: 2031)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5213274309644476e-05
    2. 'train' → logprob: -12.500015258789062
    3. '```' → logprob: -12.625015258789062
    4. 'u' → logprob: -13.125015258789062
    5. '#' → logprob: -13.875015258789062
    6. ',' → logprob: -14.000015258789062
    7. '_' → logprob: -14.125015258789062
    8. ')' → logprob: -14.250015258789062
    9. ' e' → logprob: -15.000015258789062
    10. 'ue' → logprob: -15.375015258789062

Token 548: ' suffix' (ID: 43412)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.3813791573047638
    2. 'un' → logprob: -1.6313791275024414
    3. ' un' → logprob: -3.2563791275024414
    4. 'le' → logprob: -3.3813791275024414
    5. 'une' → logprob: -4.506379127502441
    6. 's' → logprob: -4.506379127502441
    7. ' suffix' → logprob: -4.631379127502441
    8. 'a' → logprob: -5.506379127502441
    9. 'train' → logprob: -5.881379127502441
    10. 'substring' → logprob: -6.006379127502441

Token 549: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00016992862219922245
    2. ' e' → logprob: -8.75016975402832
    3. '_' → logprob: -12.12516975402832
    4. ' of' → logprob: -12.87516975402832
    5. ' de' → logprob: -13.25016975402832
    6. 'es' → logprob: -15.50016975402832
    7. 'u' → logprob: -15.50016975402832
    8. '_e' → logprob: -15.75016975402832
    9. '=' → logprob: -15.87516975402832
    10. ',' → logprob: -15.87516975402832

Token 550: ' la' (ID: 557)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.03375738486647606
    2. ' train' → logprob: -3.408757448196411
    3. 'state' → logprob: -10.408757209777832
    4. 'the' → logprob: -10.658757209777832
    5. 'token' → logprob: -10.658757209777832
    6. ' ' → logprob: -11.283757209777832
    7. '(train' → logprob: -11.783757209777832
    8. ' the' → logprob: -13.283757209777832
    9. ' la' → logprob: -13.533757209777832
    10. '
' → logprob: -13.658757209777832

Token 551: ' ligne' (ID: 19583)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.07155245542526245
    2. ' train' → logprob: -2.6965525150299072
    3. 'token' → logprob: -7.446552276611328
    4. 'string' → logprob: -7.821552276611328
    5. 'state' → logprob: -8.446552276611328
    6. 'space' → logprob: -9.321552276611328
    7. 'chaine' → logprob: -9.571552276611328
    8. ' string' → logprob: -10.321552276611328
    9. 'tr' → logprob: -10.696552276611328
    10. '(train' → logprob: -10.696552276611328

Token 552: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01521166879683733
    2. '                
' → logprob: -5.015211582183838
    3. ' for' → logprob: -5.515211582183838
    4. 'for' → logprob: -6.765211582183838
    5. '                ' → logprob: -7.015211582183838
    6. '                   ' → logprob: -8.140212059020996
    7. ',' → logprob: -8.140212059020996
    8. '           ' → logprob: -8.265212059020996
    9. '               
' → logprob: -8.265212059020996
    10. '              ' → logprob: -8.390212059020996

Token 553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07782435417175293
    2. ' for' → logprob: -2.827824354171753
    3. 'for' → logprob: -4.327824592590332
    4. '                ' → logprob: -6.577824592590332
    5. '                
' → logprob: -7.327824592590332
    6. '                   ' → logprob: -8.952824592590332
    7. ' ' → logprob: -9.577824592590332
    8. ' (' → logprob: -9.702824592590332
    9. ' 
' → logprob: -10.202824592590332
    10. '              ' → logprob: -10.577824592590332

Token 554: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45771005749702454
    2. '               ' → logprob: -1.2077100276947021
    3. 'for' → logprob: -2.707710027694702
    4. '                ' → logprob: -7.832710266113281
    5. '                
' → logprob: -8.332710266113281
    6. ' length' → logprob: -8.832710266113281
    7. 'length' → logprob: -8.832710266113281
    8. ' #' → logprob: -8.957710266113281
    9. '                   ' → logprob: -9.957710266113281
    10. ' (' → logprob: -9.957710266113281

Token 555: ' associé' (ID: 152099)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20904676616191864
    2. 'length' → logprob: -1.709046721458435
    3. '               ' → logprob: -5.959046840667725
    4. 'train' → logprob: -6.584046840667725
    5. 'max' → logprob: -6.709046840667725
    6. 'n' → logprob: -6.834046840667725
    7. '#' → logprob: -7.459046840667725
    8. ' for' → logprob: -7.959046840667725
    9. 'l' → logprob: -8.834046363830566
    10. 'len' → logprob: -9.209046363830566

Token 556: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4681320786476135
    2. ' aux' → logprob: -1.4681320190429688
    3. ' to' → logprob: -2.8431320190429688
    4. 'à' → logprob: -3.5931320190429688
    5. ' au' → logprob: -4.218132019042969
    6. 'to' → logprob: -4.843132019042969
    7. 's' → logprob: -4.843132019042969
    8. ' with' → logprob: -5.593132019042969
    9. 'au' → logprob: -5.843132019042969
    10. ' a' → logprob: -6.218132019042969

Token 557: ' une' (ID: 2463)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8256626129150391
    2. ' '' → logprob: -2.450662612915039
    3. ''E' → logprob: -2.700662612915039
    4. 'range' → logprob: -2.825662612915039
    5. 'i' → logprob: -3.075662612915039
    6. '('' → logprob: -3.075662612915039
    7. ''un' → logprob: -3.450662612915039
    8. ''s' → logprob: -3.825662612915039
    9. '(i' → logprob: -3.825662612915039
    10. ''i' → logprob: -4.200662612915039

Token 558: ' extr' (ID: 15674)
  Prédit: ' extr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extr' → logprob: -0.7388209104537964
    2. 'extr' → logprob: -0.7388209104537964
    3. 'position' → logprob: -4.988821029663086
    4. 'for' → logprob: -5.238821029663086
    5. 'ext' → logprob: -5.488821029663086
    6. ' extrem' → logprob: -5.738821029663086
    7. ' position' → logprob: -5.988821029663086
    8. 'voie' → logprob: -6.238821029663086
    9. ' voie' → logprob: -6.238821029663086
    10. 'side' → logprob: -6.613821029663086

Token 559: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00770541513338685
    2. 'ité' → logprob: -5.132705211639404
    3. 'imité' → logprob: -7.257705211639404
    4. 'ém' → logprob: -7.382705211639404
    5. 'ême' → logprob: -8.632705688476562
    6. 'ôté' → logprob: -10.007705688476562
    7. 'té' → logprob: -10.632705688476562
    8. 'émie' → logprob: -10.632705688476562
    9. 'im' → logprob: -10.757705688476562
    10. 'rem' → logprob: -10.882705688476562

Token 560: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.014027046039700508
    2. 'mite' → logprob: -4.889027118682861
    3. 'm' → logprob: -5.639027118682861
    4. 'mé' → logprob: -7.139027118682861
    5. 'ité' → logprob: -7.264027118682861
    6. 'r' → logprob: -9.014026641845703
    7. 'me' → logprob: -9.014026641845703
    8. '('' → logprob: -9.264026641845703
    9. 'mine' → logprob: -9.264026641845703
    10. '(' → logprob: -9.639026641845703

Token 561: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09084142744541168
    2. '(' → logprob: -3.21584153175354
    3. '('' → logprob: -3.34084153175354
    4. ''' → logprob: -5.590841293334961
    5. '(i' → logprob: -5.965841293334961
    6. 'y' → logprob: -6.590841293334961
    7. 'e' → logprob: -7.340841293334961
    8. ' (' → logprob: -7.840841293334961
    9. 'ité' → logprob: -7.840841293334961
    10. '(W' → logprob: -7.965841293334961

Token 562: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0754286050796509
    2. ' for' → logprob: -1.4504286050796509
    3. '                
' → logprob: -1.7004286050796509
    4. ' (' → logprob: -2.2004284858703613
    5. 'for' → logprob: -3.2004284858703613
    6. ' 
' → logprob: -3.5754284858703613
    7. '                 
' → logprob: -4.700428485870361
    8. ',' → logprob: -5.200428485870361
    9. '                ' → logprob: -5.200428485870361
    10. '                    
' → logprob: -5.200428485870361

Token 563: ' côté' (ID: 33533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17188183963298798
    2. 'for' → logprob: -2.046881914138794
    3. '               ' → logprob: -3.671881914138794
    4. '                ' → logprob: -6.671881675720215
    5. '                
' → logprob: -6.921881675720215
    6. ' 
' → logprob: -7.671881675720215
    7. ' ' → logprob: -8.421881675720215
    8. '                 
' → logprob: -9.546881675720215
    9. '                   ' → logprob: -9.796881675720215
    10. ' #' → logprob: -9.796881675720215

Token 564: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19980508089065552
    2. 's' → logprob: -3.1998050212860107
    3. ' '' → logprob: -3.4498050212860107
    4. '=' → logprob: -3.6998050212860107
    5. ''' → logprob: -3.8248050212860107
    6. '_' → logprob: -3.9498050212860107
    7. ',' → logprob: -4.57480525970459
    8. ')' → logprob: -4.82480525970459
    9. '='' → logprob: -5.07480525970459
    10. 'E' → logprob: -5.82480525970459

Token 565: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00615678122267127
    2. 'E' → logprob: -5.256156921386719
    3. ''' → logprob: -7.131156921386719
    4. ''E' → logprob: -9.381156921386719
    5. '"W' → logprob: -11.131156921386719
    6. ' W' → logprob: -11.506156921386719
    7. '`' → logprob: -13.131156921386719
    8. '"' → logprob: -13.631156921386719
    9. '```' → logprob: -13.631156921386719
    10. '['' → logprob: -13.756156921386719

Token 566: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018632246181368828
    2. ' '' → logprob: -5.018632411956787
    3. '')' → logprob: -5.143632411956787
    4. ')'' → logprob: -5.768632411956787
    5. ')' → logprob: -6.268632411956787
    6. ' or' → logprob: -8.018631935119629
    7. ''or' → logprob: -9.018631935119629
    8. ' ')' → logprob: -9.143631935119629
    9. ''
' → logprob: -9.518631935119629
    10. '':' → logprob: -10.143631935119629

Token 567: ' correspond' (ID: 11095)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7202048301696777
    2. ':' → logprob: -1.5952048301696777
    3. ' or' → logprob: -1.7202048301696777
    4. '           ' → logprob: -2.9702048301696777
    5. ',' → logprob: -3.8452048301696777
    6. ')' → logprob: -4.595204830169678
    7. '<|end|>' → logprob: -4.720204830169678
    8. '                   ' → logprob: -5.470204830169678
    9. ' for' → logprob: -5.595204830169678
    10. ' :' → logprob: -5.595204830169678

Token 568: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22373048961162567
    2. ' to' → logprob: -2.7237305641174316
    3. 'à' → logprob: -2.7237305641174316
    4. 'to' → logprob: -3.5987305641174316
    5. '=' → logprob: -3.8487305641174316
    6. ' =' → logprob: -4.723730564117432
    7. ' au' → logprob: -5.223730564117432
    8. ''à' → logprob: -6.223730564117432
    9. '_to' → logprob: -7.223730564117432
    10. 'au' → logprob: -7.348730564117432

Token 569: ' début' (ID: 29589)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4889943599700928
    2. 'dé' → logprob: -1.9889943599700928
    3. 'train' → logprob: -2.4889943599700928
    4. 'start' → logprob: -2.7389943599700928
    5. ' début' → logprob: -3.4889943599700928
    6. ''' → logprob: -4.113994598388672
    7. ' train' → logprob: -4.613994598388672
    8. ' ' → logprob: -4.988994598388672
    9. 'prem' → logprob: -5.363994598388672
    10. ' start' → logprob: -5.488994598388672

Token 570: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5478839874267578
    2. ' or' → logprob: -1.7978839874267578
    3. ' of' → logprob: -1.7978839874267578
    4. ' ,' → logprob: -3.047883987426758
    5. ':' → logprob: -4.922883987426758
    6. '[' → logprob: -5.172883987426758
    7. ' and' → logprob: -5.172883987426758
    8. ')' → logprob: -5.547883987426758
    9. '               ' → logprob: -5.922883987426758
    10. ' (' → logprob: -6.172883987426758

Token 571: ' string' (ID: 1621)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.09099501371383667
    2. 'string' → logprob: -2.5909950733184814
    3. ' train' → logprob: -5.090994834899902
    4. ' string' → logprob: -5.840994834899902
    5. 'str' → logprob: -6.590994834899902
    6. 'chaine' → logprob: -6.715994834899902
    7. 's' → logprob: -9.215994834899902
    8. 'tring' → logprob: -9.715994834899902
    9. '```' → logprob: -10.340994834899902
    10. 'chain' → logprob: -10.465994834899902

Token 572: ' train' (ID: 8513)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15561041235923767
    2. ',' → logprob: -2.1556103229522705
    3. '                
' → logprob: -5.03061056137085
    4. ' ,' → logprob: -5.15561056137085
    5. '           ' → logprob: -5.78061056137085
    6. ':' → logprob: -5.90561056137085
    7. ' or' → logprob: -6.15561056137085
    8. ',
' → logprob: -6.53061056137085
    9. ' (' → logprob: -6.65561056137085
    10. ' :' → logprob: -7.15561056137085

Token 573: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0049684434197843075
    2. '                
' → logprob: -5.879968643188477
    3. ',' → logprob: -7.379968643188477
    4. '
' → logprob: -7.879968643188477
    5. '           ' → logprob: -8.254968643188477
    6. ':' → logprob: -8.629968643188477
    7. '                   ' → logprob: -9.129968643188477
    8. ' for' → logprob: -9.754968643188477
    9. '.' → logprob: -9.879968643188477
    10. '                ' → logprob: -9.879968643188477

Token 574: 'O' (ID: 46)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6297586560249329
    2. '),' → logprob: -1.129758596420288
    3. ''),' → logprob: -3.004758596420288
    4. ' ),' → logprob: -3.879758596420288
    5. '')' → logprob: -4.004758834838867
    6. ')
' → logprob: -4.129758834838867
    7. ''' → logprob: -4.504758834838867
    8. ' )' → logprob: -4.629758834838867
    9. '0' → logprob: -5.379758834838867
    10. '),
' → logprob: -6.254758834838867

Token 575: 'uest' (ID: 22033)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.785845398902893
    2. ''' → logprob: -1.910845398902893
    3. 'W' → logprob: -2.0358452796936035
    4. ')' → logprob: -2.2858452796936035
    5. 'f' → logprob: -2.4108452796936035
    6. 'ne' → logprob: -2.6608452796936035
    7. 'n' → logprob: -3.1608452796936035
    8. 'ffset' → logprob: -3.2858452796936035
    9. '   ' → logprob: -4.0358452796936035
    10. '')' → logprob: -4.1608452796936035

Token 576: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.804172933101654
    2. ')' → logprob: -1.0541729927062988
    3. ''),' → logprob: -2.304172992706299
    4. ''' → logprob: -2.929172992706299
    5. '')' → logprob: -3.179172992706299
    6. ')'' → logprob: -6.304172992706299
    7. ')
' → logprob: -6.679172992706299
    8. ',' → logprob: -6.679172992706299
    9. ')',' → logprob: -7.054172992706299
    10. '',' → logprob: -7.304172992706299

Token 577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006773988250643015
    2. '#' → logprob: -5.506773948669434
    3. ''' → logprob: -7.381773948669434
    4. ' #' → logprob: -7.631773948669434
    5. 'et' → logprob: -8.256773948669434
    6. '                   ' → logprob: -8.506773948669434
    7. '              ' → logprob: -8.506773948669434
    8. '                ' → logprob: -8.631773948669434
    9. ' ' → logprob: -9.131773948669434
    10. '           ' → logprob: -9.381773948669434

Token 578: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11002019792795181
    2. ''' → logprob: -2.610020160675049
    3. ' '' → logprob: -4.735020160675049
    4. '#' (adapté à ' #') → logprob: -5.110020160675049
    5. ' #' → logprob: -5.110020160675049
    6. '                ' → logprob: -5.985020160675049
    7. '                   ' → logprob: -6.485020160675049
    8. ' ' → logprob: -6.610020160675049
    9. ''s' → logprob: -7.110020160675049
    10. '              ' → logprob: -7.235020160675049

Token 579: ' côté' (ID: 33533)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.4272393584251404
    2. '               ' → logprob: -1.6772394180297852
    3. ''' → logprob: -2.677239418029785
    4. '#' → logprob: -2.802239418029785
    5. ' '' → logprob: -5.052239418029785
    6. ''s' → logprob: -5.552239418029785
    7. 'E' → logprob: -5.802239418029785
    8. ' #' → logprob: -5.927239418029785
    9. ' E' → logprob: -6.177239418029785
    10. ' ' → logprob: -6.302239418029785

Token 580: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.35280290246009827
    2. ' '' → logprob: -1.4778028726577759
    3. ''' → logprob: -2.7278029918670654
    4. 'E' → logprob: -6.727802753448486
    5. ' E' → logprob: -7.227802753448486
    6. ' ' → logprob: -7.352802753448486
    7. ' =' → logprob: -8.727803230285645
    8. '`' → logprob: -8.977803230285645
    9. ''É' → logprob: -9.227803230285645
    10. '"E' → logprob: -9.227803230285645

Token 581: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00048060089466162026
    2. ' E' → logprob: -8.125480651855469
    3. ''E' → logprob: -8.625480651855469
    4. '"E' → logprob: -14.000480651855469
    5. ' ' → logprob: -14.125480651855469
    6. '`' → logprob: -14.625480651855469
    7. ')' → logprob: -14.875480651855469
    8. ''' → logprob: -14.875480651855469
    9. '...' → logprob: -15.000480651855469
    10. '   ' → logprob: -15.125480651855469

Token 582: ''' (ID: 6)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.8538605570793152
    2. ''' → logprob: -0.9788605570793152
    3. ')' → logprob: -1.72886061668396
    4. '')' → logprob: -4.478860378265381
    5. ' correspond' → logprob: -5.853860378265381
    6. ' corresponds' → logprob: -6.728860378265381
    7. '):' → logprob: -6.978860378265381
    8. ' '' → logprob: -7.103860378265381
    9. ')',' → logprob: -7.353860378265381
    10. ')':' → logprob: -7.728860378265381

Token 583: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.03087046928703785
    2. ' corresponds' → logprob: -3.9058704376220703
    3. 'cor' → logprob: -4.65587043762207
    4. ' corresponde' → logprob: -8.28087043762207
    5. ' au' → logprob: -9.03087043762207
    6. ' correspon' → logprob: -9.15587043762207
    7. ' correspondant' → logprob: -9.53087043762207
    8. ' cor' → logprob: -10.40587043762207
    9. ' à' → logprob: -10.53087043762207
    10. ' ' → logprob: -10.90587043762207

Token 584: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.0387878455221653
    2. 'au' → logprob: -3.413787841796875
    3. ' à' → logprob: -5.413787841796875
    4. ' ' → logprob: -8.413787841796875
    5. 'à' → logprob: -8.788787841796875
    6. ' to' → logprob: -9.538787841796875
    7. ''au' → logprob: -9.538787841796875
    8. 'to' → logprob: -9.663787841796875
    9. ' ' → logprob: -10.663787841796875
    10. '=' → logprob: -11.288787841796875

Token 585: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.42960917949676514
    2. 'la' → logprob: -1.0546091794967651
    3. ' ' → logprob: -7.679609298706055
    4. 'fin' → logprob: -8.929609298706055
    5. ' ' → logprob: -9.304609298706055
    6. ' the' → logprob: -9.679609298706055
    7. 'the' → logprob: -9.929609298706055
    8. 'a' → logprob: -10.554609298706055
    9. '  ' → logprob: -10.929609298706055
    10. ' fin' → logprob: -11.054609298706055

Token 586: ' fin' (ID: 2131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14787013828754425
    2. 'fin' → logprob: -2.5228700637817383
    3. ' end' → logprob: -2.8978700637817383
    4. ' fin' → logprob: -7.022870063781738
    5. 'dern' → logprob: -8.147870063781738
    6. ''end' → logprob: -8.272870063781738
    7. 'last' → logprob: -8.772870063781738
    8. '```' → logprob: -8.897870063781738
    9. 'e' → logprob: -10.272870063781738
    10. 'd' → logprob: -10.522870063781738

Token 587: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05285953730344772
    2. ' of' → logprob: -4.677859306335449
    3. '           ' → logprob: -4.802859306335449
    4. ':' → logprob: -4.927859306335449
    5. ' (' → logprob: -5.052859306335449
    6. ''' → logprob: -5.302859306335449
    7. '                   ' → logprob: -5.802859306335449
    8. '.' → logprob: -6.427859306335449
    9. '   ' → logprob: -6.677859306335449
    10. '              ' → logprob: -6.677859306335449

Token 588: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0739494115114212
    2. ' string' → logprob: -2.8239493370056152
    3. 'train' → logprob: -4.698949337005615
    4. ' train' → logprob: -5.948949337005615
    5. 'tring' → logprob: -9.198949813842773
    6. 'str' → logprob: -9.948949813842773
    7. ' ' → logprob: -11.573949813842773
    8. '```' → logprob: -11.823949813842773
    9. '   ' → logprob: -12.323949813842773
    10. 's' → logprob: -12.448949813842773

Token 589: ' train' (ID: 8513)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9827964901924133
    2. ' (' → logprob: -1.6077964305877686
    3. '.' → logprob: -1.9827964305877686
    4. ')' → logprob: -2.8577964305877686
    5. ' train' → logprob: -3.2327964305877686
    6. ' '' → logprob: -3.9827964305877686
    7. ':' → logprob: -3.9827964305877686
    8. ''' → logprob: -3.9827964305877686
    9. '           ' → logprob: -4.232796669006348
    10. ' of' → logprob: -4.232796669006348

Token 590: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03318661078810692
    2. ':' → logprob: -4.033186435699463
    3. '.' → logprob: -5.408186435699463
    4. '           ' → logprob: -6.408186435699463
    5. '                
' → logprob: -6.408186435699463
    6. ',' → logprob: -6.533186435699463
    7. '
' → logprob: -6.783186435699463
    8. '                   ' → logprob: -6.908186435699463
    9. '       ' → logprob: -8.033186912536621
    10. ':
' → logprob: -8.158186912536621

Token 591: 'Est' (ID: 9868)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5340805649757385
    2. 'E' → logprob: -2.0340805053710938
    3. '')' → logprob: -2.0340805053710938
    4. ''' → logprob: -2.6590805053710938
    5. 'O' → logprob: -4.284080505371094
    6. ')
' → logprob: -5.034080505371094
    7. '),' → logprob: -5.034080505371094
    8. '               ' → logprob: -5.034080505371094
    9. ' '' → logprob: -5.159080505371094
    10. ').' → logprob: -5.284080505371094

Token 592: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7131695747375488
    2. ')' → logprob: -1.4631695747375488
    3. '               ' → logprob: -1.7131695747375488
    4. '):
' → logprob: -2.838169574737549
    5. ':' → logprob: -4.838169574737549
    6. '           ' → logprob: -4.963169574737549
    7. '.' → logprob: -5.088169574737549
    8. '):

' → logprob: -5.588169574737549
    9. ''):' → logprob: -5.963169574737549
    10. '                   ' → logprob: -6.338169574737549

Token 593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11388441920280457
    2. '                
' → logprob: -3.113884449005127
    3. ' for' → logprob: -3.363884449005127
    4. '
' → logprob: -4.363884449005127
    5. 'for' → logprob: -4.613884449005127
    6. '            
' → logprob: -6.238884449005127
    7. ' 
' → logprob: -6.738884449005127
    8. '           ' → logprob: -6.988884449005127
    9. '                    
' → logprob: -8.363883972167969
    10. '        
' → logprob: -8.488883972167969

Token 594: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06649786233901978
    2. ' for' → logprob: -3.441497802734375
    3. 'for' → logprob: -3.816497802734375
    4. '                
' → logprob: -5.066497802734375
    5. '
' → logprob: -6.316497802734375
    6. '           ' → logprob: -7.191497802734375
    7. '#' → logprob: -7.941497802734375
    8. '                   ' → logprob: -8.941497802734375
    9. ' 
' → logprob: -9.066497802734375
    10. '                ' → logprob: -9.316497802734375

Token 595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06495953351259232
    2. ' for' → logprob: -3.3149595260620117
    3. 'for' → logprob: -3.8149595260620117
    4. '           ' → logprob: -6.064959526062012
    5. '                
' → logprob: -6.939959526062012
    6. '#' → logprob: -7.689959526062012
    7. '                   ' → logprob: -8.939959526062012
    8. '                ' → logprob: -9.064959526062012
    9. ' #' → logprob: -9.189959526062012
    10. '       ' → logprob: -9.564959526062012

Token 596: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29869112372398376
    2. '               ' → logprob: -1.9236911535263062
    3. '#' (adapté à ' #') → logprob: -2.4236910343170166
    4. ' for' → logprob: -3.9236910343170166
    5. ' #' → logprob: -6.923691272735596
    6. '
' → logprob: -7.048691272735596
    7. '                
' → logprob: -7.048691272735596
    8. '           ' → logprob: -8.048690795898438
    9. '                   ' → logprob: -8.923690795898438
    10. '                ' → logprob: -9.673690795898438

Token 597: ' Les' (ID: 7029)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010240107774734497
    2. '#' → logprob: -4.635240077972412
    3. '               ' → logprob: -8.26024055480957
    4. '           ' → logprob: -9.51024055480957
    5. ' for' → logprob: -10.01024055480957
    6. 'Pour' → logprob: -10.26024055480957
    7. 'For' → logprob: -10.88524055480957
    8. '                
' → logprob: -11.88524055480957
    9. 'pour' → logprob: -12.26024055480957
    10. '
' → logprob: -12.26024055480957

Token 598: ' sous' (ID: 14487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.540800929069519
    2. '#' → logprob: -2.0408010482788086
    3. 's' → logprob: -2.0408010482788086
    4. ' for' → logprob: -2.9158010482788086
    5. ' extr' → logprob: -4.665801048278809
    6. 'ends' → logprob: -4.790801048278809
    7. 'ex' → logprob: -4.790801048278809
    8. 'lines' → logprob: -4.915801048278809
    9. ' next' → logprob: -5.040801048278809
    10. 'next' → logprob: -5.165801048278809

Token 599: '-tr' (ID: 15461)
  Prédit: '_train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -1.0748395919799805
    2. '_tr' → logprob: -1.3248395919799805
    3. '_' → logprob: -1.4498395919799805
    4. 'train' → logprob: -3.3248395919799805
    5. '-' → logprob: -3.4498395919799805
    6. '-tr' → logprob: -3.6998395919799805
    7. '_token' → logprob: -4.0748395919799805
    8. '_str' → logprob: -4.8248395919799805
    9. '_tokens' → logprob: -5.3248395919799805
    10. 'string' → logprob: -5.6998395919799805

Token 600: 'ains' (ID: 2352)
  Prédit: 'ains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.14388546347618103
    2. 'ain' → logprob: -2.893885374069214
    3. '-' → logprob: -4.268885612487793
    4. '_' → logprob: -4.768885612487793
    5. 'a' → logprob: -4.893885612487793
    6. '_tr' → logprob: -5.143885612487793
    7. '#' → logprob: -5.268885612487793
    8. '_train' → logprob: -5.643885612487793
    9. 'ai' → logprob: -5.643885612487793
    10. '\' → logprob: -6.581385612487793

Token 601: ' dé' (ID: 2393)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17471493780612946
    2. '=' → logprob: -3.299715042114258
    3. '#' → logprob: -3.424715042114258
    4. 's' → logprob: -4.049715042114258
    5. ' #' → logprob: -4.674715042114258
    6. '_' → logprob: -5.049715042114258
    7. ' sont' → logprob: -5.549715042114258
    8. 'W' → logprob: -5.549715042114258
    9. ' peuvent' → logprob: -5.674715042114258
    10. ' can' → logprob: -5.799715042114258

Token 602: 'pla' (ID: 24939)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.17629817128181458
    2. 'fin' → logprob: -2.426298141479492
    3. '#' → logprob: -3.551298141479492
    4. 'placements' → logprob: -4.176298141479492
    5. 'placer' → logprob: -4.176298141479492
    6. 'plac' → logprob: -5.301298141479492
    7. 'for' → logprob: -6.176298141479492
    8. 'pla' → logprob: -6.551298141479492
    9. 'pl' → logprob: -6.551298141479492
    10. 'placement' → logprob: -6.926298141479492

Token 603: 'ç' (ID: 704)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -1.0952075719833374
    2. 'c' → logprob: -1.2202075719833374
    3. 'cal' → logprob: -2.095207691192627
    4. 'ment' → logprob: -3.220207691192627
    5. 'st' → logprob: -3.845207691192627
    6. '```' → logprob: -3.845207691192627
    7. 'ç' → logprob: -4.095207691192627
    8. 'acent' → logprob: -4.095207691192627
    9. 't' → logprob: -4.345207691192627
    10. 'ments' → logprob: -4.720207691192627

Token 604: 'ables' (ID: 3232)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2243204563856125
    2. 'acent' → logprob: -2.599320411682129
    3. 'ent' → logprob: -3.599320411682129
    4. '```' → logprob: -3.974320411682129
    5. 'ement' → logprob: -4.349320411682129
    6. 'é' → logprob: -5.099320411682129
    7. 'èrent' → logprob: -5.349320411682129
    8. '   ' → logprob: -5.349320411682129
    9. 'er' → logprob: -5.474320411682129
    10. 'es' → logprob: -5.599320411682129

Token 605: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43636736273765564
    2. '=' → logprob: -1.811367392539978
    3. '#' → logprob: -2.9363672733306885
    4. ' sont' → logprob: -3.6863672733306885
    5. 's' → logprob: -3.8113672733306885
    6. ' possibles' → logprob: -4.311367511749268
    7. ':' → logprob: -4.811367511749268
    8. '   ' → logprob: -4.936367511749268
    9. ' #' → logprob: -5.561367511749268
    10. 'length' → logprob: -5.686367511749268

Token 606: ' :
' (ID: 10039)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' train' → logprob: -1.0831555128097534
    2. '[' → logprob: -1.8331555128097534
    3. 'train' → logprob: -1.9581555128097534
    4. ' [' → logprob: -2.333155632019043
    5. ' range' → logprob: -3.083155632019043
    6. '[
' → logprob: -3.208155632019043
    7. 'len' → logprob: -3.208155632019043
    8. '[]' → logprob: -3.583155632019043
    9. 'range' → logprob: -4.208155632019043
    10. '[(' → logprob: -4.708155632019043

Token 607: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012367760064080358
    2. '#' → logprob: -8.001236915588379
    3. '           ' → logprob: -8.376236915588379
    4. '                
' → logprob: -8.751236915588379
    5. ' for' → logprob: -9.001236915588379
    6. ' #' → logprob: -9.126236915588379
    7. '                ' → logprob: -9.376236915588379
    8. 'for' → logprob: -9.876236915588379
    9. '                   ' → logprob: -10.126236915588379
    10. '              ' → logprob: -11.001236915588379

Token 608: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8365577459335327
    2. ' for' → logprob: -1.4615577459335327
    3. '#' (adapté à ' #') → logprob: -2.0865578651428223
    4. 'for' → logprob: -2.3365578651428223
    5. '[
' → logprob: -3.3365578651428223
    6. ' #' → logprob: -4.336557865142822
    7. '[' → logprob: -4.586557865142822
    8. ' (' → logprob: -5.086557865142822
    9. 'tokens' → logprob: -5.461557865142822
    10. '"""
' → logprob: -5.586557865142822

Token 609: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3552294671535492
    2. '#' → logprob: -1.7302294969558716
    3. ' for' → logprob: -2.355229377746582
    4. '               ' → logprob: -4.105229377746582
    5. ' #' → logprob: -5.230229377746582
    6. '[
' → logprob: -6.480229377746582
    7. '#
' → logprob: -7.355229377746582
    8. '                
' → logprob: -7.980229377746582
    9. '
' → logprob: -7.980229377746582
    10. ' (' → logprob: -8.230229377746582

Token 610: ' un' (ID: 537)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1936429738998413
    2. 'for' → logprob: -2.318643093109131
    3. '[(' → logprob: -2.568643093109131
    4. '(' → logprob: -2.818643093109131
    5. '(p' → logprob: -2.818643093109131
    6. 'prefix' → logprob: -2.818643093109131
    7. ' (' → logprob: -3.193643093109131
    8. '(train' → logprob: -3.568643093109131
    9. 'train' → logprob: -3.693643093109131
    10. '('' → logprob: -3.818643093109131

Token 611: ' segment' (ID: 14806)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9793266654014587
    2. 'for' → logprob: -1.1043267250061035
    3. 'train' → logprob: -2.6043267250061035
    4. ' train' → logprob: -2.6043267250061035
    5. 'e' → logprob: -3.9793267250061035
    6. 'prefix' → logprob: -4.2293267250061035
    7. 's' → logprob: -4.2293267250061035
    8. 'length' → logprob: -4.8543267250061035
    9. ' seul' → logprob: -5.1043267250061035
    10. 'len' → logprob: -5.3543267250061035

Token 612: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0281198024749756
    2. ' =' → logprob: -1.9031198024749756
    3. '               ' → logprob: -2.1531198024749756
    4. ' de' → logprob: -2.5281198024749756
    5. 'de' → logprob: -3.2781198024749756
    6. ' for' → logprob: -3.2781198024749756
    7. 'from' → logprob: -3.2781198024749756
    8. '=' → logprob: -3.2781198024749756
    9. 's' → logprob: -3.9031198024749756
    10. '#' → logprob: -4.278120040893555

Token 613: ' début' (ID: 29589)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.008038351312279701
    2. ' train' → logprob: -5.258038520812988
    3. 'dé' → logprob: -6.633038520812988
    4. 'prem' → logprob: -7.508038520812988
    5. 'prefix' → logprob: -7.508038520812988
    6. 'pré' → logprob: -9.008038520812988
    7. '1' → logprob: -9.633038520812988
    8. '```' → logprob: -10.133038520812988
    9. 'string' → logprob: -11.258038520812988
    10. 's' → logprob: -11.383038520812988

Token 614: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7199158072471619
    2. '[' → logprob: -1.0949158668518066
    3. 'for' → logprob: -3.3449158668518066
    4. ',' → logprob: -3.3449158668518066
    5. ' [' → logprob: -3.8449158668518066
    6. 'from' → logprob: -4.094915866851807
    7. ' (' → logprob: -4.469915866851807
    8. '           ' → logprob: -4.594915866851807
    9. '[
' → logprob: -5.344915866851807
    10. '                   ' → logprob: -5.344915866851807

Token 615: 'pour' (ID: 52723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7269894480705261
    2. 'for' → logprob: -0.8519894480705261
    3. 'length' → logprob: -3.226989507675171
    4. 'range' → logprob: -4.351989269256592
    5. 'from' → logprob: -4.476989269256592
    6. 'j' → logprob: -5.351989269256592
    7. ')' → logprob: -5.601989269256592
    8. 'len' → logprob: -5.601989269256592
    9. 'start' → logprob: -5.851989269256592
    10. 'train' → logprob: -6.226989269256592

Token 616: ' extr' (ID: 15674)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6534163355827332
    2. 'l' → logprob: -1.278416395187378
    3. 'k' → logprob: -2.528416395187378
    4. 'j' → logprob: -2.528416395187378
    5. 'size' → logprob: -5.153416156768799
    6. 'leng' → logprob: -5.153416156768799
    7. 'sz' → logprob: -5.403416156768799
    8. 'long' → logprob: -5.403416156768799
    9. 'tail' → logprob: -5.653416156768799
    10. 'w' → logprob: -5.903416156768799

Token 617: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4623974561691284
    2. 'ême' → logprob: -1.5873974561691284
    3. 'ème' → logprob: -2.212397575378418
    4. 'ém' → logprob: -4.712397575378418
    5. 'êt' → logprob: -4.837397575378418
    6. 'ê' → logprob: -5.087397575378418
    7. 'ête' → logprob: -5.587397575378418
    8. 'è' → logprob: -5.712397575378418
    9. 'e' → logprob: -6.212397575378418
    10. '_' → logprob: -6.212397575378418

Token 618: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.6608222126960754
    2. 'm' → logprob: -1.5358221530914307
    3. 'mé' → logprob: -1.7858221530914307
    4. 'ité' → logprob: -3.5358221530914307
    5. 'mite' → logprob: -3.6608221530914307
    6. 'i' → logprob: -4.53582239151001
    7. 'me' → logprob: -4.66082239151001
    8. 'ié' → logprob: -4.91082239151001
    9. 'W' → logprob: -5.78582239151001
    10. 'mine' → logprob: -5.91082239151001

Token 619: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0036297659389674664
    2. 'e' → logprob: -6.378629684448242
    3. '('' → logprob: -7.753629684448242
    4. ''' → logprob: -7.753629684448242
    5. 'y' → logprob: -7.878629684448242
    6. 'i' → logprob: -9.253629684448242
    7. 'té' → logprob: -9.253629684448242
    8. 'W' → logprob: -9.503629684448242
    9. 'def' → logprob: -9.878629684448242
    10. 'és' → logprob: -9.878629684448242

Token 620: ' W' (ID: 486)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5339772701263428
    2. ''' → logprob: -1.4089772701263428
    3. ',' → logprob: -2.4089772701263428
    4. 'W' → logprob: -3.5339772701263428
    5. ')' → logprob: -4.283977508544922
    6. ' W' → logprob: -4.908977508544922
    7. ' ,' → logprob: -5.033977508544922
    8. '[' → logprob: -5.908977508544922
    9. ''O' → logprob: -5.908977508544922
    10. '_W' → logprob: -6.408977508544922

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11143631488084793
    2. ')
' → logprob: -2.486436367034912
    3. '):
' → logprob: -5.361436367034912
    4. ',' → logprob: -5.486436367034912
    5. ' )' → logprob: -5.986436367034912
    6. '               ' → logprob: -5.986436367034912
    7. '')' → logprob: -6.236436367034912
    8. '):' → logprob: -6.486436367034912
    9. '),' → logprob: -7.111436367034912
    10. ' )
' → logprob: -7.236436367034912

Token 622: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3165445029735565
    2. 'for' → logprob: -1.566544532775879
    3. ' for' → logprob: -2.816544532775879
    4. '           ' → logprob: -7.066544532775879
    5. '                
' → logprob: -7.066544532775879
    6. '
' → logprob: -8.441544532775879
    7. ',' → logprob: -8.566544532775879
    8. '#' → logprob: -8.691544532775879
    9. '                   ' → logprob: -9.191544532775879
    10. ',
' → logprob: -9.191544532775879

Token 623: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6176298260688782
    2. '               ' → logprob: -0.9926298260688782
    3. ' for' → logprob: -2.4926297664642334
    4. '#' (adapté à ' #') → logprob: -6.3676300048828125
    5. '                
' → logprob: -6.7426300048828125
    6. 'length' → logprob: -6.8676300048828125
    7. ',' → logprob: -7.6176300048828125
    8. '           ' → logprob: -7.8676300048828125
    9. '
' → logprob: -7.9926300048828125
    10. 'n' → logprob: -7.9926300048828125

Token 624: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2647174894809723
    2. ' for' → logprob: -1.51471745967865
    3. '               ' → logprob: -4.3897175788879395
    4. 'length' → logprob: -9.764717102050781
    5. '           ' → logprob: -10.014717102050781
    6. '```' → logprob: -10.139717102050781
    7. '                
' → logprob: -10.514717102050781
    8. '#' → logprob: -10.764717102050781
    9. 'start' → logprob: -10.889717102050781
    10. '                   ' → logprob: -10.889717102050781

Token 625: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8639099597930908
    2. 'un' → logprob: -0.9889099597930908
    3. '#' → logprob: -2.488909959793091
    4. '-' → logprob: -2.863909959793091
    5. '               ' → logprob: -3.738909959793091
    6. 'segment' → logprob: -4.863909721374512
    7. '           ' → logprob: -5.113909721374512
    8. 'une' → logprob: -5.238909721374512
    9. '   ' → logprob: -5.613909721374512
    10. ' segment' → logprob: -5.738909721374512

Token 626: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0637948215007782
    2. ' segment' → logprob: -2.8137948513031006
    3. 'for' → logprob: -8.06379508972168
    4. 'suffix' → logprob: -8.56379508972168
    5. 's' → logprob: -8.68879508972168
    6. '           ' → logprob: -8.81379508972168
    7. 'seg' → logprob: -8.81379508972168
    8. 'segments' → logprob: -9.18879508972168
    9. '       ' → logprob: -9.31379508972168
    10. ' for' → logprob: -9.81379508972168

Token 627: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.3073905110359192
    2. 'du' → logprob: -1.4323904514312744
    3. ' complet' → logprob: -4.9323906898498535
    4. '#' → logprob: -5.5573906898498535
    5. ' de' → logprob: -5.6823906898498535
    6. ' of' → logprob: -6.1823906898498535
    7. 'from' → logprob: -6.4323906898498535
    8. 'de' → logprob: -6.5573906898498535
    9. '               ' → logprob: -6.5573906898498535
    10. ' #' → logprob: -6.8073906898498535

Token 628: ' fin' (ID: 2131)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9231991767883301
    2. '1' → logprob: -1.42319917678833
    3. 'tail' → logprob: -1.79819917678833
    4. 'train' → logprob: -2.42319917678833
    5. 'fin' → logprob: -3.79819917678833
    6. ' ' → logprob: -4.67319917678833
    7. 'l' → logprob: -4.79819917678833
    8. 'long' → logprob: -4.79819917678833
    9. ' la' → logprob: -4.92319917678833
    10. 'i' → logprob: -4.92319917678833

Token 629: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6816415190696716
    2. ' (' → logprob: -0.8066415190696716
    3. ')' → logprob: -4.181641578674316
    4. '(' → logprob: -4.431641578674316
    5. '              ' → logprob: -6.181641578674316
    6. '           ' → logprob: -6.306641578674316
    7. ':' → logprob: -6.556641578674316
    8. ',' → logprob: -6.556641578674316
    9. '                ' → logprob: -6.806641578674316
    10. '   ' → logprob: -6.931641578674316

Token 630: 'pour' (ID: 52723)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4657500684261322
    2. 'pour' → logprob: -1.3407500982284546
    3. 'for' → logprob: -2.465749979019165
    4. ' #' → logprob: -4.590750217437744
    5. 'E' → logprob: -5.340750217437744
    6. '               ' → logprob: -5.465750217437744
    7. ' pour' → logprob: -6.090750217437744
    8. ' for' → logprob: -6.965750217437744
    9. '           ' → logprob: -6.965750217437744
    10. '       ' → logprob: -7.590750217437744

Token 631: ' extr' (ID: 15674)
  Prédit: ' extr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extr' → logprob: -0.7330418229103088
    2. 'E' → logprob: -1.733041763305664
    3. 'extr' → logprob: -1.983041763305664
    4. 'l' → logprob: -2.108041763305664
    5. ''ex' → logprob: -3.733041763305664
    6. ' l' → logprob: -3.983041763305664
    7. 'ex' → logprob: -4.358041763305664
    8. ' E' → logprob: -4.483041763305664
    9. 'ext' → logprob: -5.108041763305664
    10. ''E' → logprob: -5.608041763305664

Token 632: 'é' (ID: 377)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.058884859085083
    2. '```' → logprob: -1.558884859085083
    3. 'i' → logprob: -2.558884859085083
    4. '_' → logprob: -2.683884859085083
    5. ''' → logprob: -2.683884859085083
    6. '_side' → logprob: -2.808884859085083
    7. '           ' → logprob: -3.183884859085083
    8. '   ' → logprob: -4.183884620666504
    9. '`' → logprob: -4.308884620666504
    10. '_i' → logprob: -4.433884620666504

Token 633: 'mit' (ID: 2765)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4282391667366028
    2. '')' → logprob: -1.803239107131958
    3. ''' → logprob: -2.678239107131958
    4. 'E' → logprob: -3.303239107131958
    5. '`)' → logprob: -3.803239107131958
    6. '```' → logprob: -4.803239345550537
    7. '`' → logprob: -4.928239345550537
    8. '#' → logprob: -5.303239345550537
    9. '_' → logprob: -5.428239345550537
    10. 'i' → logprob: -5.928239345550537

Token 634: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0016609008889645338
    2. 'E' → logprob: -6.7516608238220215
    3. 'e' → logprob: -7.6266608238220215
    4. 'É' → logprob: -13.62666130065918
    5. 'ié' → logprob: -14.00166130065918
    6. 'i' → logprob: -15.25166130065918
    7. 'ité' → logprob: -15.25166130065918
    8. ''' → logprob: -15.37666130065918
    9. 'és' → logprob: -16.00166130065918
    10. ''e' → logprob: -16.00166130065918

Token 635: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.22889964282512665
    2. ' E' → logprob: -1.603899598121643
    3. ''E' → logprob: -6.3538994789123535
    4. ' '' → logprob: -6.6038994789123535
    5. ' ' → logprob: -8.853899955749512
    6. ''' → logprob: -9.353899955749512
    7. '`' → logprob: -10.353899955749512
    8. '               ' → logprob: -10.978899955749512
    9. '```' → logprob: -11.353899955749512
    10. '   ' → logprob: -11.603899955749512

Token 636: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3826906979084015
    2. '               ' → logprob: -1.257690668106079
    3. ')
' → logprob: -3.882690668106079
    4. '):' → logprob: -5.507690906524658
    5. '):
' → logprob: -6.007690906524658
    6. '           ' → logprob: -6.382690906524658
    7. '')' → logprob: -7.257690906524658
    8. ').' → logprob: -7.382690906524658
    9. ')
' → logprob: -7.757690906524658
    10. '                   ' → logprob: -8.0076904296875

Token 637: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12185151875019073
    2. 'for' → logprob: -2.2468514442443848
    3. '
' → logprob: -5.871851444244385
    4. ' for' → logprob: -6.121851444244385
    5. '                
' → logprob: -6.371851444244385
    6. '           ' → logprob: -6.621851444244385
    7. '#' → logprob: -8.246851921081543
    8. '```' → logprob: -8.746851921081543
    9. '                   ' → logprob: -9.121851921081543
    10. 'from' → logprob: -9.621851921081543

Token 638: ' #
' (ID: 21888)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23836714029312134
    2. 'for' → logprob: -1.6133670806884766
    3. ' for' → logprob: -4.488367080688477
    4. '                
' → logprob: -7.738367080688477
    5. '                   ' → logprob: -8.238367080688477
    6. '           ' → logprob: -8.363367080688477
    7. '```' → logprob: -8.363367080688477
    8. '                ' → logprob: -8.988367080688477
    9. '              ' → logprob: -9.488367080688477
    10. '
' → logprob: -9.488367080688477

Token 639: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013195235515013337
    2. '           ' → logprob: -7.501319408416748
    3. 'for' → logprob: -7.751319408416748
    4. ' for' → logprob: -8.501319885253906
    5. '                   ' → logprob: -10.376319885253906
    6. '                
' → logprob: -10.501319885253906
    7. '              ' → logprob: -10.751319885253906
    8. '
' → logprob: -11.126319885253906
    9. '```' → logprob: -11.251319885253906
    10. '                ' → logprob: -11.751319885253906

Token 640: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06526122242212296
    2. '               ' → logprob: -2.940261125564575
    3. ' for' → logprob: -4.815261363983154
    4. 'max' → logprob: -7.065261363983154
    5. '#' (adapté à ' #') → logprob: -7.565261363983154
    6. '           ' → logprob: -7.565261363983154
    7. 'length' → logprob: -9.690260887145996
    8. '                   ' → logprob: -10.190260887145996
    9. '   ' → logprob: -10.315260887145996
    10. '```' → logprob: -10.565260887145996

Token 641: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00463209580630064
    2. ' for' → logprob: -6.254631996154785
    3. '               ' → logprob: -6.379631996154785
    4. '           ' → logprob: -7.504631996154785
    5. '#' → logprob: -8.004631996154785
    6. '```' → logprob: -10.379631996154785
    7. 'end' → logprob: -10.754631996154785
    8. '       ' → logprob: -11.379631996154785
    9. '   ' → logprob: -11.754631996154785
    10. 'max' → logprob: -12.129631996154785

Token 642: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15673139691352844
    2. ' for' → logprob: -2.781731367111206
    3. '       ' → logprob: -3.656731367111206
    4. '           ' → logprob: -3.906731367111206
    5. '#' → logprob: -4.656731605529785
    6. '   ' → logprob: -5.156731605529785
    7. '               ' → logprob: -5.156731605529785
    8. ' #' → logprob: -5.281731605529785
    9. '=' → logprob: -6.531731605529785
    10. 'range' → logprob: -6.906731605529785

Token 643: ' aussi' (ID: 9894)
  Prédit: ' déplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.3579444885253906
    2. 'dé' → logprob: -1.9829444885253906
    3. '               ' → logprob: -3.2329444885253906
    4. '           ' → logprob: -3.4829444885253906
    5. 'move' → logprob: -3.8579444885253906
    6. ' move' → logprob: -4.232944488525391
    7. 'for' → logprob: -4.357944488525391
    8. ' for' → logprob: -4.607944488525391
    9. 'faire' → logprob: -5.232944488525391
    10. '       ' → logprob: -5.607944488525391

Token 644: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.03732018172740936
    2. 'contin' → logprob: -4.287320137023926
    3. 'd' → logprob: -5.412320137023926
    4. 'prendre' → logprob: -6.037320137023926
    5. 'move' → logprob: -6.162320137023926
    6. ' déplacer' → logprob: -6.287320137023926
    7. '```' → logprob: -6.412320137023926
    8. 'de' → logprob: -7.037320137023926
    9. 'cou' → logprob: -7.287320137023926
    10. 'faire' → logprob: -7.412320137023926

Token 645: ' la' (ID: 557)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6663700938224792
    2. 'une' → logprob: -2.041370153427124
    3. ' un' → logprob: -2.291370153427124
    4. '1' → logprob: -3.291370153427124
    5. 'des' → logprob: -3.291370153427124
    6. 'le' → logprob: -3.291370153427124
    7. ' des' → logprob: -3.416370153427124
    8. 'la' → logprob: -4.416369915008545
    9. 'se' → logprob: -4.541369915008545
    10. 'segments' → logprob: -4.791369915008545

Token 646: ' totalité' (ID: 199552)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.521332859992981
    2. 'part' → logprob: -2.1463327407836914
    3. 'chaine' → logprob: -2.2713327407836914
    4. 'train' → logprob: -2.3963327407836914
    5. ' ligne' → logprob: -2.5213327407836914
    6. 'portion' → logprob: -3.0213327407836914
    7. 's' → logprob: -3.0213327407836914
    8. ' portion' → logprob: -3.3963327407836914
    9. ' totalité' → logprob: -3.6463327407836914
    10. ' partie' → logprob: -3.7713327407836914

Token 647: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008945208042860031
    2. 'for' → logprob: -6.008944988250732
    3. 'du' → logprob: -6.133944988250732
    4. '                   ' → logprob: -7.133944988250732
    5. 'length' → logprob: -7.258944988250732
    6. '           ' → logprob: -7.508944988250732
    7. ' du' → logprob: -7.633944988250732
    8. '              ' → logprob: -7.633944988250732
    9. 'if' → logprob: -8.25894546508789
    10. '                ' → logprob: -9.00894546508789

Token 648: ' la' (ID: 557)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.5945643782615662
    2. 'la' → logprob: -0.9695643782615662
    3. 'l' → logprob: -3.219564437866211
    4. ' la' → logprob: -4.094564437866211
    5. 'le' → logprob: -5.219564437866211
    6. ' train' → logprob: -5.344564437866211
    7. 'the' → logprob: -7.594564437866211
    8. 's' → logprob: -7.844564437866211
    9. 'len' → logprob: -8.219564437866211
    10. '(train' → logprob: -8.344564437866211

Token 649: ' ligne' (ID: 19583)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.7756199240684509
    2. 'ligne' → logprob: -1.4006199836730957
    3. 'chaine' → logprob: -1.7756199836730957
    4. 'vo' → logprob: -2.4006199836730957
    5. 'voie' → logprob: -4.150619983673096
    6. 'string' → logprob: -4.650619983673096
    7. ' chaîne' → logprob: -5.775619983673096
    8. 'cord' → logprob: -7.025619983673096
    9. 'chain' → logprob: -7.525619983673096
    10. 'long' → logprob: -7.525619983673096

Token 650: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004284961149096489
    2. 'for' → logprob: -6.254284858703613
    3. '                
' → logprob: -7.004284858703613
    4. ' for' → logprob: -7.379284858703613
    5. '           ' → logprob: -7.754284858703613
    6. '                   ' → logprob: -8.754284858703613
    7. '```' → logprob: -10.004284858703613
    8. '
' → logprob: -10.254284858703613
    9. '              ' → logprob: -10.754284858703613
    10. '            
' → logprob: -10.879284858703613

Token 651: 'division' (ID: 50596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14543947577476501
    2. '               ' → logprob: -3.145439386367798
    3. ')
' → logprob: -4.270439624786377
    4. 'train' → logprob: -4.270439624786377
    5. 'du' → logprob: -4.520439624786377
    6. ',' → logprob: -4.645439624786377
    7. ' du' → logprob: -5.270439624786377
    8. ' )' → logprob: -5.395439624786377
    9. ' jusqu' → logprob: -5.520439624786377
    10. '),' → logprob: -5.770439624786377

Token 652: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33949682116508484
    2. '=' → logprob: -3.0894968509674072
    3. ' if' → logprob: -3.3394968509674072
    4. ',' → logprob: -3.8394968509674072
    5. 'if' → logprob: -3.8394968509674072
    6. ' =' → logprob: -4.214496612548828
    7. '+' → logprob: -4.339496612548828
    8. ' de' → logprob: -4.339496612548828
    9. '   ' → logprob: -4.839496612548828
    10. ' of' → logprob: -4.964496612548828

Token 653: 'à' (ID: 708)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.26511481404304504
    2. '"' → logprob: -2.0151147842407227
    3. ' du' → logprob: -3.1401147842407227
    4. ' ")' → logprob: -4.265114784240723
    5. ')' → logprob: -5.015114784240723
    6. ' de' → logprob: -5.390114784240723
    7. 'du' → logprob: -5.390114784240723
    8. ' complète' → logprob: -5.765114784240723
    9. '\n' → logprob: -6.015114784240723
    10. ' "' → logprob: -6.015114784240723

Token 654: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9026668667793274
    2. '1' → logprob: -1.9026668071746826
    3. 'la' → logprob: -2.5276668071746826
    4. '0' → logprob: -2.6526668071746826
    5. 'tout' → logprob: -3.1526668071746826
    6. '"' → logprob: -3.2776668071746826
    7. 'i' → logprob: -3.5276668071746826
    8. 'len' → logprob: -3.7776668071746826
    9. 'n' → logprob: -3.7776668071746826
    10. 'tail' → logprob: -3.9026668071746826

Token 655: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.931336522102356
    2. 'l' → logprob: -1.431336522102356
    3. 'part' → logprob: -2.1813364028930664
    4. '0' → logprob: -2.9313364028930664
    5. 'i' → logprob: -3.3063364028930664
    6. 'la' → logprob: -3.6813364028930664
    7. 'n' → logprob: -3.8063364028930664
    8. 'tout' → logprob: -4.181336402893066
    9. 'tail' → logprob: -4.431336402893066
    10. 'len' → logprob: -4.431336402893066

Token 656: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.19651800394058228
    2. '"' → logprob: -2.0715179443359375
    3. ')")' → logprob: -3.3215179443359375
    4. ')' → logprob: -5.3215179443359375
    5. ')"' → logprob: -5.6965179443359375
    6. ':' → logprob: -5.9465179443359375
    7. ' ")' → logprob: -6.9465179443359375
    8. '")
' → logprob: -7.1965179443359375
    9. '```' → logprob: -7.6965179443359375
    10. '",' → logprob: -7.8215179443359375

Token 657: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28360792994499207
    2. '...' → logprob: -2.7836079597473145
    3. ',' → logprob: -2.9086079597473145
    4. ' or' → logprob: -3.0336079597473145
    5. '")' → logprob: -3.4086079597473145
    6. ' )' → logprob: -5.1586079597473145
    7. ' jusqu' → logprob: -5.2836079597473145
    8. '"' → logprob: -5.4086079597473145
    9. '):' → logprob: -5.6586079597473145
    10. ')...' → logprob: -5.7836079597473145

Token 658: ' "' (ID: 392)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04530440270900726
    2. ' len' → logprob: -3.795304298400879
    3. '1' → logprob: -4.920304298400879
    4. '=len' → logprob: -6.045304298400879
    5. 'n' → logprob: -6.170304298400879
    6. '(len' → logprob: -6.670304298400879
    7. 'train' → logprob: -6.795304298400879
    8. '#' → logprob: -7.295304298400879
    9. '[len' → logprob: -7.420304298400879
    10. '```' → logprob: -7.545304298400879

Token 659: 'à' (ID: 708)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0473540797829628
    2. ' len' → logprob: -3.297353982925415
    3. '"' → logprob: -6.047354221343994
    4. '1' → logprob: -6.547354221343994
    5. 'n' → logprob: -7.047354221343994
    6. '0' → logprob: -7.422354221343994
    7. ')' → logprob: -7.547354221343994
    8. '")' → logprob: -7.672354221343994
    9. '(len' → logprob: -7.672354221343994
    10. '[len' → logprob: -7.672354221343994

Token 660: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014010007493197918
    2. ' len' → logprob: -4.639009952545166
    3. '0' → logprob: -6.389009952545166
    4. 'train' → logprob: -6.889009952545166
    5. '1' → logprob: -7.264009952545166
    6. 'length' → logprob: -7.889009952545166
    7. 'l' → logprob: -9.514010429382324
    8. 'n' → logprob: -9.639010429382324
    9. '[len' → logprob: -10.014010429382324
    10. '(len' → logprob: -10.014010429382324

Token 661: '(train' (ID: 46587)
  Prédit: '(train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(train' → logprob: -0.014463870786130428
    2. 'train' → logprob: -4.264463901519775
    3. '(' → logprob: -9.014463424682617
    4. ')' → logprob: -10.139463424682617
    5. ' (' → logprob: -10.514463424682617
    6. '=train' → logprob: -10.514463424682617
    7. '(tr' → logprob: -10.764463424682617
    8. ' train' → logprob: -11.139463424682617
    9. 'of' → logprob: -11.764463424682617
    10. 's' → logprob: -12.514463424682617

Token 662: ')")
' (ID: 44059)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.08449159562587738
    2. ')' → logprob: -2.834491491317749
    3. ')"' → logprob: -3.959491491317749
    4. ')")
' → logprob: -6.709491729736328
    5. ')").' → logprob: -6.959491729736328
    6. ' )' → logprob: -8.084491729736328
    7. '")' → logprob: -8.834491729736328
    8. ')",' → logprob: -9.084491729736328
    9. '):' → logprob: -9.209491729736328
    10. '}")' → logprob: -9.459491729736328

Token 663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01950416900217533
    2. 'for' → logprob: -4.144504070281982
    3. ' for' → logprob: -5.894504070281982
    4. '                
' → logprob: -7.894504070281982
    5. '           ' → logprob: -8.51950454711914
    6. '                   ' → logprob: -10.26950454711914
    7. '
' → logprob: -10.39450454711914
    8. '              ' → logprob: -11.01950454711914
    9. '       ' → logprob: -11.64450454711914
    10. 'from' → logprob: -11.76950454711914

Token 664: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06346315890550613
    2. 'for' → logprob: -3.0634632110595703
    3. ' for' → logprob: -4.43846321105957
    4. '           ' → logprob: -6.93846321105957
    5. '
' → logprob: -7.18846321105957
    6. '                
' → logprob: -7.56346321105957
    7. '              ' → logprob: -8.56346321105957
    8. '                   ' → logprob: -8.81346321105957
    9. '                ' → logprob: -8.81346321105957
    10. '       ' → logprob: -10.56346321105957

Token 665: ' Pour' (ID: 13931)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02396862953901291
    2. 'for' → logprob: -4.148968696594238
    3. ' for' → logprob: -5.023968696594238
    4. '                
' → logprob: -7.398968696594238
    5. '           ' → logprob: -8.148968696594238
    6. '                   ' → logprob: -8.898968696594238
    7. '                ' → logprob: -9.898968696594238
    8. '              ' → logprob: -10.023968696594238
    9. '
' → logprob: -10.648968696594238
    10. '       ' → logprob: -10.773968696594238

Token 666: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9773043990135193
    2. 'length' → logprob: -0.9773043990135193
    3. 'segment' → logprob: -2.352304458618164
    4. 'j' → logprob: -2.977304458618164
    5. 'k' → logprob: -3.352304458618164
    6. 'seg' → logprob: -3.977304458618164
    7. 'len' → logprob: -5.227304458618164
    8. 'split' → logprob: -5.227304458618164
    9. 's' → logprob: -5.352304458618164
    10. 'size' → logprob: -5.602304458618164

Token 667: ' extr' (ID: 15674)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.1364868879318237
    2. ' segment' → logprob: -1.7614868879318237
    3. 'k' → logprob: -2.1364870071411133
    4. 'range' → logprob: -2.7614870071411133
    5. '_' → logprob: -3.1364870071411133
    6. 'i' → logprob: -3.2614870071411133
    7. ' k' → logprob: -3.7614870071411133
    8. 'part' → logprob: -3.8864870071411133
    9. 'j' → logprob: -4.011487007141113
    10. ' longueur' → logprob: -4.136487007141113

Token 668: 'é' (ID: 377)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.593683123588562
    2. 'é' → logprob: -1.843683123588562
    3. '   ' → logprob: -3.3436832427978516
    4. 'rem' → logprob: -3.5936832427978516
    5. 'ré' → logprob: -3.7186832427978516
    6. '_' → logprob: -4.093683242797852
    7. 'tré' → logprob: -4.093683242797852
    8. '       ' → logprob: -4.218683242797852
    9. 'érieur' → logprob: -4.218683242797852
    10. 'i' → logprob: -4.218683242797852

Token 669: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.14142940938472748
    2. 'ité' → logprob: -2.8914294242858887
    3. 'mé' → logprob: -3.3914294242858887
    4. 'm' → logprob: -3.7664294242858887
    5. '#' → logprob: -5.141429424285889
    6. 'mite' → logprob: -5.391429424285889
    7. '   ' → logprob: -6.641429424285889
    8. 'té' → logprob: -6.891429424285889
    9. 'imité' → logprob: -6.891429424285889
    10. 'me' → logprob: -7.016429424285889

Token 670: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.000909913913346827
    2. 'ité' → logprob: -7.875909805297852
    3. 'i' → logprob: -8.625909805297852
    4. 'e' → logprob: -8.750909805297852
    5. 'ié' → logprob: -9.125909805297852
    6. 'y' → logprob: -10.000909805297852
    7. 'té' → logprob: -12.000909805297852
    8. 'és' → logprob: -12.125909805297852
    9. 'ite' → logprob: -12.250909805297852
    10. 'eté' → logprob: -12.500909805297852

Token 671: ' donnée' (ID: 130126)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.340154767036438
    2. 'in' → logprob: -2.2151546478271484
    3. ',' → logprob: -2.3401546478271484
    4. ' i' → logprob: -3.5901546478271484
    5. ' W' → logprob: -4.840154647827148
    6. ''' → logprob: -4.840154647827148
    7. ' '' → logprob: -5.090154647827148
    8. ':' → logprob: -5.340154647827148
    9. 'i' → logprob: -5.340154647827148
    10. 'W' → logprob: -5.590154647827148

Token 672: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26647746562957764
    2. '   ' → logprob: -2.141477584838867
    3. 'for' → logprob: -3.391477584838867
    4. ',' → logprob: -3.641477584838867
    5. ' for' → logprob: -3.641477584838867
    6. ':
' → logprob: -4.516477584838867
    7. '           ' → logprob: -5.266477584838867
    8. ' :' → logprob: -5.516477584838867
    9. '       ' → logprob: -5.641477584838867
    10. '               ' → logprob: -5.641477584838867

Token 673: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.544371485710144
    2. 'for' → logprob: -0.919371485710144
    3. ' range' → logprob: -4.794371604919434
    4. 'range' → logprob: -4.794371604919434
    5. '   ' → logprob: -6.044371604919434
    6. 'length' → logprob: -7.544371604919434
    7. '               ' → logprob: -8.294371604919434
    8. ' length' → logprob: -8.794371604919434
    9. '       ' → logprob: -9.044371604919434
    10. '           ' → logprob: -9.044371604919434

Token 674: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16202619671821594
    2. '           ' → logprob: -3.2870261669158936
    3. 'range' → logprob: -3.5370261669158936
    4. '#' → logprob: -3.7870261669158936
    5. '       ' → logprob: -3.7870261669158936
    6. ' for' → logprob: -4.037026405334473
    7. '   ' → logprob: -4.787026405334473
    8. 'continue' → logprob: -5.287026405334473
    9. '```' → logprob: -7.037026405334473
    10. ' #' → logprob: -7.162026405334473

Token 675: 'iera' (ID: 13264)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.07603751868009567
    2. 'y' → logprob: -3.0760374069213867
    3. 'ye' → logprob: -4.326037406921387
    4. 'yer' → logprob: -4.326037406921387
    5. 'aye' → logprob: -7.951037406921387
    6. 'uie' → logprob: -9.576037406921387
    7. 'iera' → logprob: -10.076037406921387
    8. 'ier' → logprob: -11.076037406921387
    9. 'yez' → logprob: -11.326037406921387
    10. 'i' → logprob: -11.326037406921387

Token 676: ' toutes' (ID: 17502)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3333630561828613
    2. 'de' → logprob: -2.2083630561828613
    3. 'range' → logprob: -2.4583630561828613
    4. 'from' → logprob: -2.5833630561828613
    5. 'length' → logprob: -2.7083630561828613
    6. '   ' → logprob: -3.0833630561828613
    7. 'for' → logprob: -3.0833630561828613
    8. ' d' → logprob: -3.2083630561828613
    9. 'l' → logprob: -3.2083630561828613
    10. ' de' → logprob: -3.3333630561828613

Token 677: ' les' (ID: 1341)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6430535912513733
    2. ' possible' → logprob: -1.3930535316467285
    3. 'poss' → logprob: -3.2680535316467285
    4. 'positions' → logprob: -3.5180535316467285
    5. 'length' → logprob: -3.8930535316467285
    6. 'len' → logprob: -4.0180535316467285
    7. ' les' → logprob: -4.1430535316467285
    8. 'sizes' → logprob: -4.2680535316467285
    9. ' lengths' → logprob: -4.5180535316467285
    10. ' tailles' → logprob: -4.7680535316467285

Token 678: ' coup' (ID: 25465)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.7176891565322876
    2. '1' → logprob: -1.5926891565322876
    3. 'length' → logprob: -3.217689037322998
    4. 'tail' → logprob: -3.217689037322998
    5. ' lengths' → logprob: -3.467689037322998
    6. ' ' → logprob: -3.842689037322998
    7. 'range' → logprob: -4.092689037322998
    8. 'positions' → logprob: -4.092689037322998
    9. ' long' → logprob: -4.217689037322998
    10. 'len' → logprob: -4.217689037322998

Token 679: 'ures' (ID: 1609)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.41190284490585327
    2. 'ures' → logprob: -1.161902904510498
    3. 's' → logprob: -4.911902904510498
    4. 'e' → logprob: -5.286902904510498
    5. 'ure' → logprob: -5.786902904510498
    6. 't' → logprob: -5.786902904510498
    7. 'cuts' → logprob: -6.411902904510498
    8. 'ts' → logprob: -7.161902904510498
    9. '```' → logprob: -7.161902904510498
    10. 'ages' → logprob: -7.286902904510498

Token 680: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1544735431671143
    2. ':' → logprob: -1.4044735431671143
    3. ' for' → logprob: -1.9044735431671143
    4. 'range' → logprob: -1.9044735431671143
    5. '   ' → logprob: -4.029473304748535
    6. '(range' → logprob: -4.404473304748535
    7. '(' → logprob: -4.529473304748535
    8. 'from' → logprob: -4.654473304748535
    9. '[' → logprob: -4.654473304748535
    10. '```' → logprob: -5.154473304748535

Token 681: '.

' (ID: 364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14464694261550903
    2. ':' → logprob: -2.3946468830108643
    3. '           ' → logprob: -4.269647121429443
    4. ' for' → logprob: -4.519647121429443
    5. '                   ' → logprob: -5.519647121429443
    6. 'for' → logprob: -5.519647121429443
    7. ':
' → logprob: -5.644647121429443
    8. '   ' → logprob: -6.269647121429443
    9. '       ' → logprob: -6.644647121429443
    10. ',' → logprob: -7.019647121429443

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002581604989245534
    2. '           ' → logprob: -7.002581596374512
    3. '                
' → logprob: -7.127581596374512
    4. '
' → logprob: -7.377581596374512
    5. '                   ' → logprob: -9.752581596374512
    6. ' for' → logprob: -9.877581596374512
    7. 'for' → logprob: -10.127581596374512
    8. '            
' → logprob: -10.377581596374512
    9. '       ' → logprob: -11.502581596374512
    10. '```' → logprob: -11.752581596374512

Token 683: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40877243876457214
    2. 'for' (adapté à ' for') → logprob: -1.2837724685668945
    3. ' for' → logprob: -2.9087724685668945
    4. '           ' → logprob: -6.2837724685668945
    5. '                
' → logprob: -6.5337724685668945
    6. '
' → logprob: -8.908772468566895
    7. '                   ' → logprob: -9.533772468566895
    8. '   ' → logprob: -9.533772468566895
    9. '            
' → logprob: -9.783772468566895
    10. '#' → logprob: -10.033772468566895

Token 684: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.25357237458229065
    2. ' side' → logprob: -1.6285723447799683
    3. 'end' → logprob: -4.503572463989258
    4. 'ext' → logprob: -5.878572463989258
    5. 'cut' → logprob: -5.878572463989258
    6. ' end' → logprob: -6.003572463989258
    7. 'split' → logprob: -6.878572463989258
    8. 'direction' → logprob: -7.003572463989258
    9. 'length' → logprob: -7.128572463989258
    10. '(side' → logprob: -7.378572463989258

Token 685: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11299778521060944
    2. 'in' → logprob: -2.2379977703094482
    3. ',' → logprob: -9.112998008728027
    4. ' ,' → logprob: -10.112998008728027
    5. ' ' → logprob: -11.112998008728027
    6. '	in' → logprob: -12.612998008728027
    7. 's' → logprob: -13.237998008728027
    8. '_in' → logprob: -13.237998008728027
    9. 'import' → logprob: -14.237998008728027
    10. '```' → logprob: -14.487998008728027

Token 686: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.005254864692687988
    2. '('' → logprob: -5.255254745483398
    3. '["' → logprob: -11.005254745483398
    4. ''' → logprob: -13.005254745483398
    5. ' ['' → logprob: -13.630254745483398
    6. '(['' → logprob: -14.380254745483398
    7. '("' → logprob: -15.630254745483398
    8. '"W' → logprob: -15.755254745483398
    9. ''E' → logprob: -16.3802547454834
    10. ' ('' → logprob: -16.5052547454834

Token 687: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -7.743758760625497e-05
    2. ''' → logprob: -9.500077247619629
    3. ' W' → logprob: -13.125077247619629
    4. '"W' → logprob: -14.750077247619629
    5. 'E' → logprob: -16.750078201293945
    6. '`' → logprob: -17.125078201293945
    7. '['' → logprob: -18.000078201293945
    8. '	W' → logprob: -18.625078201293945
    9. ' '' → logprob: -18.625078201293945
    10. '_W' → logprob: -18.750078201293945

Token 688: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000597116129938513
    2. '','' → logprob: -7.75059700012207
    3. ',' → logprob: -8.75059700012207
    4. ''' → logprob: -12.12559700012207
    5. ' ',' → logprob: -14.12559700012207
    6. 'E' → logprob: -14.50059700012207
    7. '",' → logprob: -14.62559700012207
    8. ''E' → logprob: -14.87559700012207
    9. ',E' → logprob: -15.75059700012207
    10. ','' → logprob: -16.25059700012207

Token 689: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0024848117027431726
    2. ' '' → logprob: -6.0024847984313965
    3. '’E' → logprob: -12.002485275268555
    4. ''É' → logprob: -13.752485275268555
    5. ''e' → logprob: -14.252485275268555
    6. ''' → logprob: -14.627485275268555
    7. ''S' → logprob: -14.627485275268555
    8. ' ' → logprob: -15.502485275268555
    9. 'E' → logprob: -16.502485275268555
    10. '"E' → logprob: -17.127485275268555

Token 690: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.935296834039036e-06
    2. ' E' → logprob: -13.25000286102295
    3. ''E' → logprob: -13.75000286102295
    4. ''' → logprob: -19.250003814697266
    5. '"E' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.000003814697266
    7. ' ' → logprob: -20.125003814697266
    8. '’E' → logprob: -20.625003814697266
    9. '']' → logprob: -21.000003814697266
    10. ')' → logprob: -21.125003814697266

Token 691: '']:
' (ID: 44766)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6335431933403015
    2. '']:' → logprob: -1.3835432529449463
    3. '']:
' → logprob: -1.8835432529449463
    4. ']:
' → logprob: -2.7585432529449463
    5. ']' → logprob: -6.633543014526367
    6. '']' → logprob: -6.758543014526367
    7. '"]:' → logprob: -7.758543014526367
    8. ']:
' → logprob: -8.758543014526367
    9. ']:

' → logprob: -10.633543014526367
    10. '"]:
' → logprob: -10.633543014526367

Token 692: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45552578568458557
    2. '                   ' → logprob: -1.3305257558822632
    3. '               ' → logprob: -2.4555258750915527
    4. '           ' → logprob: -5.705525875091553
    5. ':
' → logprob: -5.830525875091553
    6. ' :' → logprob: -6.330525875091553
    7. '                       ' → logprob: -6.330525875091553
    8. ',' → logprob: -6.580525875091553
    9. ' for' → logprob: -6.955525875091553
    10. '<|end|>' → logprob: -6.955525875091553

Token 693: ' if' (ID: 538)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6666759848594666
    2. 'train' → logprob: -0.9166759848594666
    3. 'n' → logprob: -3.1666760444641113
    4. 'for' → logprob: -4.666676044464111
    5. ' length' → logprob: -4.791676044464111
    6. 'l' → logprob: -5.041676044464111
    7. '                   ' → logprob: -5.291676044464111
    8. 'L' → logprob: -5.416676044464111
    9. ' train' → logprob: -5.416676044464111
    10. 'len' → logprob: -5.791676044464111

Token 694: ' side' (ID: 4307)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.6123207807540894
    2. 'side' → logprob: -1.1123207807540894
    3. ' not' → logprob: -3.362320899963379
    4. 'len' → logprob: -3.362320899963379
    5. ' train' → logprob: -3.612320899963379
    6. 'not' → logprob: -3.987320899963379
    7. ' side' → logprob: -5.237320899963379
    8. ' len' → logprob: -5.612320899963379
    9. '(train' → logprob: -6.112320899963379
    10. ' (' → logprob: -6.862320899963379

Token 695: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18015019595623016
    2. '==' → logprob: -1.8051501512527466
    3. ':' → logprob: -8.180150032043457
    4. '=' → logprob: -9.430150032043457
    5. ' =' → logprob: -11.305150032043457
    6. ' :' → logprob: -11.430150032043457
    7. '=='' → logprob: -11.930150032043457
    8. ']==' → logprob: -12.555150032043457
    9. 'in' → logprob: -13.430150032043457
    10. '):' → logprob: -13.430150032043457

Token 696: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006852596532553434
    2. ' '' → logprob: -5.006852626800537
    3. ''E' → logprob: -10.131852149963379
    4. 'W' → logprob: -10.256852149963379
    5. '   ' → logprob: -10.881852149963379
    6. ' ' → logprob: -11.506852149963379
    7. ''S' → logprob: -12.381852149963379
    8. ' W' → logprob: -12.631852149963379
    9. ''O' → logprob: -13.006852149963379
    10. '  ' → logprob: -13.131852149963379

Token 697: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.033700454980134964
    2. ''' → logprob: -3.408700466156006
    3. '"W' → logprob: -10.658699989318848
    4. ' W' → logprob: -11.533699989318848
    5. 'E' → logprob: -11.658699989318848
    6. ''E' → logprob: -12.033699989318848
    7. '`' → logprob: -13.908699989318848
    8. ' '' → logprob: -14.033699989318848
    9. '	W' → logprob: -14.408699989318848
    10. '"' → logprob: -14.408699989318848

Token 698: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14706461131572723
    2. '':
' → logprob: -3.397064685821533
    3. '':' → logprob: -3.647064685821533
    4. ':
' → logprob: -3.772064685821533
    5. '                       ' → logprob: -3.897064685821533
    6. '                   ' → logprob: -4.147064685821533
    7. ''' → logprob: -4.522064685821533
    8. ' and' → logprob: -5.397064685821533
    9. ' '' → logprob: -7.147064685821533
    10. 'and' → logprob: -8.147064208984375

Token 699: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5481648445129395
    2. '                   ' → logprob: -1.2981648445129395
    3. 'for' → logprob: -2.2981648445129395
    4. ' for' → logprob: -3.5481648445129395
    5. ':' → logprob: -4.1731648445129395
    6. 'start' → logprob: -6.6731648445129395
    7. 'range' → logprob: -6.6731648445129395
    8. '               ' → logprob: -7.5481648445129395
    9. 'length' → logprob: -7.7981648445129395
    10. '#' → logprob: -8.548164367675781

Token 700: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12227979302406311
    2. 'length' → logprob: -2.2472798824310303
    3. 'train' → logprob: -5.247279644012451
    4. 'start' → logprob: -6.747279644012451
    5. ' for' → logprob: -6.872279644012451
    6. 'max' → logprob: -7.122279644012451
    7. 'n' → logprob: -7.747279644012451
    8. '                   ' → logprob: -8.37228012084961
    9. 'l' → logprob: -9.24728012084961
    10. ' length' → logprob: -9.49728012084961

Token 701: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3177843987941742
    2. 'length' → logprob: -1.3177844285964966
    3. 'train' → logprob: -5.817784309387207
    4. 'n' → logprob: -7.317784309387207
    5. 'max' → logprob: -8.192784309387207
    6. 'L' → logprob: -8.317784309387207
    7. 'start' → logprob: -9.067784309387207
    8. 'l' → logprob: -9.692784309387207
    9. ' for' → logprob: -9.942784309387207
    10. 'segment' → logprob: -10.692784309387207

Token 702: ' regarde' (ID: 115760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07860883325338364
    2. ' for' → logprob: -2.828608751296997
    3. 'in' → logprob: -5.328608989715576
    4. '=' → logprob: -5.453608989715576
    5. ' in' → logprob: -5.578608989715576
    6. 'range' → logprob: -6.578608989715576
    7. 'len' → logprob: -6.953608989715576
    8. '                   ' → logprob: -8.203608512878418
    9. ':' → logprob: -8.703608512878418
    10. ',' → logprob: -9.453608512878418

Token 703: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033174268901348114
    2. ' for' → logprob: -3.7831742763519287
    3. 'possible' → logprob: -5.53317403793335
    4. 'length' → logprob: -6.15817403793335
    5. 'len' → logprob: -6.65817403793335
    6. ' possible' → logprob: -6.78317403793335
    7. 'range' → logprob: -7.78317403793335
    8. 'j' → logprob: -9.033174514770508
    9. '   ' → logprob: -9.158174514770508
    10. 'all' → logprob: -9.283174514770508

Token 704: ' subdivisions' (ID: 195284)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.326814204454422
    2. 'for' → logprob: -1.9518141746520996
    3. 'cut' → logprob: -3.0768141746520996
    4. 'start' → logprob: -3.3268141746520996
    5. 'split' → logprob: -4.2018141746521
    6. 'possible' → logprob: -4.3268141746521
    7. 'len' → logprob: -5.2018141746521
    8. 'range' → logprob: -5.2018141746521
    9. 'pos' → logprob: -5.4518141746521
    10. 'prefix' → logprob: -6.4518141746521

Token 705: ' possibles' (ID: 97753)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.46706199645996094
    2. ' in' → logprob: -1.092061996459961
    3. 'range' → logprob: -3.967061996459961
    4. 'for' → logprob: -4.467061996459961
    5. ' for' → logprob: -6.092061996459961
    6. '(range' → logprob: -6.592061996459961
    7. ':' → logprob: -6.842061996459961
    8. ' range' → logprob: -7.342061996459961
    9. 'of' → logprob: -8.217061996459961
    10. '                   ' → logprob: -8.342061996459961

Token 706: ' en' (ID: 469)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.454179048538208
    2. 'for' → logprob: -1.079179048538208
    3. ' in' → logprob: -4.204178810119629
    4. '                   ' → logprob: -5.579178810119629
    5. ':' → logprob: -6.204178810119629
    6. 'range' → logprob: -6.329178810119629
    7. 'in' → logprob: -7.204178810119629
    8. '(range' → logprob: -7.329178810119629
    9. '                       ' → logprob: -7.579178810119629
    10. ' range' → logprob: -8.079178810119629

Token 707: ' part' (ID: 997)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '(range' → logprob: -18.1250057220459
    4. 'ranges' → logprob: -18.6250057220459
    5. '	range' → logprob: -19.6250057220459
    6. 'rang' → logprob: -19.6250057220459
    7. '1' → logprob: -20.5000057220459
    8. 'r' → logprob: -20.6250057220459
    9. '   ' → logprob: -21.2500057220459
    10. '```' → logprob: -21.2500057220459

Token 708: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.03361204266548157
    2. 'ie' → logprob: -3.658612012863159
    3. 'e' → logprob: -6.533612251281738
    4. 't' → logprob: -7.033612251281738
    5. 'i' → logprob: -7.158612251281738
    6. 'range' → logprob: -7.158612251281738
    7. '-' → logprob: -7.533612251281738
    8. '[' → logprob: -7.908612251281738
    9. '```' → logprob: -8.158612251281738
    10. 'age' → logprob: -8.283612251281738

Token 709: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5433245897293091
    2. 'from' → logprob: -1.043324589729309
    3. ' de' → logprob: -3.4183244705200195
    4. '                       ' → logprob: -4.2933244705200195
    5. ' from' → logprob: -4.7933244705200195
    6. 'du' → logprob: -6.2933244705200195
    7. '0' → logprob: -6.2933244705200195
    8. '                           ' → logprob: -6.4183244705200195
    9. ' du' → logprob: -6.7933244705200195
    10. 'd' → logprob: -7.1683244705200195

Token 710: ' début' (ID: 29589)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024291672743856907
    2. 'range' → logprob: -6.627429008483887
    3. '0' → logprob: -6.877429008483887
    4. 'start' → logprob: -10.877429008483887
    5. 'i' → logprob: -11.377429008483887
    6. 'j' → logprob: -12.502429008483887
    7. ' ' → logprob: -12.627429008483887
    8. 'index' → logprob: -12.627429008483887
    9. '   ' → logprob: -12.877429008483887
    10. '```' → logprob: -12.877429008483887

Token 711: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5684137940406799
    2. ':' → logprob: -0.9434137940406799
    3. '                       ' → logprob: -3.818413734436035
    4. ' for' → logprob: -4.943413734436035
    5. 'for' → logprob: -4.943413734436035
    6. ' :' → logprob: -5.443413734436035
    7. ',' → logprob: -7.068413734436035
    8. ':
' → logprob: -7.068413734436035
    9. '                           ' → logprob: -7.818413734436035
    10. '               ' → logprob: -8.068413734436035

Token 712: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6354361772537231
    2. '                       ' → logprob: -0.8854361772537231
    3. ':' → logprob: -3.3854360580444336
    4. ' for' → logprob: -4.010436058044434
    5. 'for' → logprob: -5.760436058044434
    6. ' :' → logprob: -7.135436058044434
    7. '                           ' → logprob: -7.510436058044434
    8. ',' → logprob: -7.760436058044434
    9. '               ' → logprob: -8.385436058044434
    10. '	                   ' → logprob: -9.010436058044434

Token 713: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.058963343501091
    2. ' for' → logprob: -2.9339632987976074
    3. '                   ' → logprob: -6.058963298797607
    4. '                       ' → logprob: -6.433963298797607
    5. 'length' → logprob: -10.058963775634766
    6. 'range' → logprob: -10.308963775634766
    7. '   ' → logprob: -10.683963775634766
    8. '                           ' → logprob: -12.183963775634766
    9. 'n' → logprob: -12.183963775634766
    10. '               ' → logprob: -12.433963775634766

Token 714: ' split' (ID: 12648)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.39290931820869446
    2. 'cut' → logprob: -1.517909288406372
    3. 'l' → logprob: -2.517909288406372
    4. 'split' → logprob: -4.392909526824951
    5. 'k' → logprob: -5.267909526824951
    6. 'size' → logprob: -5.642909526824951
    7. ' length' → logprob: -6.392909526824951
    8. 'seg' → logprob: -7.392909526824951
    9. ' cut' → logprob: -7.642909526824951
    10. 'j' → logprob: -8.142909049987793

Token 715: '_pos' (ID: 14692)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33894434571266174
    2. 'in' → logprob: -1.5889443159103394
    3. '_' → logprob: -2.588944435119629
    4. '=' → logprob: -5.713944435119629
    5. '_idx' → logprob: -7.088944435119629
    6. ' ' → logprob: -7.213944435119629
    7. ')' → logprob: -7.588944435119629
    8. '(' → logprob: -7.588944435119629
    9. ' _' → logprob: -8.088944435119629
    10. '   ' → logprob: -8.088944435119629

Token 716: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031857939902693033
    2. 'in' → logprob: -5.753185749053955
    3. ' ' → logprob: -12.503186225891113
    4. 's' → logprob: -13.503186225891113
    5. 'range' → logprob: -14.128186225891113
    6. '1' → logprob: -14.628186225891113
    7. 'd' → logprob: -14.753186225891113
    8. '0' → logprob: -15.128186225891113
    9. 'n' → logprob: -15.253186225891113
    10. 'In' → logprob: -16.003185272216797

Token 717: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -17.383615493774414
    4. '   ' → logprob: -17.883615493774414
    5. '	range' → logprob: -18.883615493774414
    6. ' ' → logprob: -19.133615493774414
    7. '0' → logprob: -20.008615493774414
    8. '1' → logprob: -20.258615493774414
    9. '  ' → logprob: -21.508615493774414
    10. 'in' → logprob: -22.008615493774414

Token 718: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005128565244376659
    2. 'len' → logprob: -5.880128383636475
    3. '(' → logprob: -6.880128383636475
    4. '(len' → logprob: -6.880128383636475
    5. '0' → logprob: -8.255128860473633
    6. ' len' → logprob: -13.130128860473633
    7. ' ' → logprob: -13.630128860473633
    8. ',len' → logprob: -14.005128860473633
    9. '[len' → logprob: -14.255128860473633
    10. 'Len' → logprob: -16.505128860473633

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09591015428304672
    2. 'len' → logprob: -2.47091007232666
    3. '0' → logprob: -4.97091007232666
    4. '(len' → logprob: -12.47091007232666
    5. ' len' → logprob: -12.47091007232666
    6. 'length' → logprob: -14.84591007232666
    7. ' ' → logprob: -14.97091007232666
    8. '[len' → logprob: -15.09591007232666
    9. ',len' → logprob: -15.59591007232666
    10. '(' → logprob: -15.72091007232666

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20336265861988068
    2. ',len' → logprob: -1.7033627033233643
    3. ' ,' → logprob: -6.828362464904785
    4. 'len' → logprob: -7.328362464904785
    5. '(len' → logprob: -8.703362464904785
    6. ',length' → logprob: -11.328362464904785
    7. ',
' → logprob: -11.578362464904785
    8. '[len' → logprob: -11.953362464904785
    9. '=len' → logprob: -12.078362464904785
    10. ' len' → logprob: -13.203362464904785

Token 721: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.7432603272027336e-06
    2. ' len' → logprob: -13.500001907348633
    3. '(len' → logprob: -15.250001907348633
    4. '[len' → logprob: -17.125001907348633
    5. '=len' → logprob: -18.750001907348633
    6. '	len' → logprob: -19.375001907348633
    7. ',len' → logprob: -19.875001907348633
    8. 'length' → logprob: -20.375001907348633
    9. '<len' → logprob: -21.000001907348633
    10. '1' → logprob: -21.875001907348633

Token 722: '(train' (ID: 46587)
  Prédit: '(train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(train' → logprob: -5.478889215737581e-05
    2. 'train' → logprob: -9.875054359436035
    3. '(' → logprob: -13.250054359436035
    4. '(tr' → logprob: -13.750054359436035
    5. '=train' → logprob: -15.625054359436035
    6. ' (' → logprob: -15.750054359436035
    7. ' train' → logprob: -16.50005531311035
    8. '(t' → logprob: -17.50005531311035
    9. '(track' → logprob: -18.37505531311035
    10. '(
' → logprob: -18.75005531311035

Token 723: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.5960931181907654
    2. ')' → logprob: -1.4710931777954102
    3. '+' → logprob: -1.5960931777954102
    4. ' +' → logprob: -4.97109317779541
    5. ')):' → logprob: -5.22109317779541
    6. '):' → logprob: -5.97109317779541
    7. ')):
' → logprob: -6.59609317779541
    8. '):
' → logprob: -9.47109317779541
    9. '[' → logprob: -9.47109317779541
    10. '   ' → logprob: -9.59609317779541

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -17.2500057220459
    4. '```' → logprob: -17.3750057220459
    5. ')' → logprob: -17.6250057220459
    6. '+' → logprob: -18.2500057220459
    7. '   ' → logprob: -18.3750057220459
    8. '):
' → logprob: -19.7500057220459
    9. '``' → logprob: -19.8750057220459
    10. '0' → logprob: -20.6875057220459

Token 725: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026962202973663807
    2. '):
' → logprob: -6.0026960372924805
    3. ':' → logprob: -8.50269603729248
    4. '):
' → logprob: -12.12769603729248
    5. ')' → logprob: -12.25269603729248
    6. '                           ' → logprob: -12.62769603729248
    7. '                       ' → logprob: -13.62769603729248
    8. ' ):' → logprob: -13.62769603729248
    9. '):

' → logprob: -14.87769603729248
    10. '                   ' → logprob: -15.37769603729248

Token 726: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04135246202349663
    2. '                       ' → logprob: -3.2913525104522705
    3. '                               ' → logprob: -6.791352272033691
    4. 'tokens' → logprob: -7.416352272033691
    5. '<|end|>' → logprob: -8.041352272033691
    6. '                   ' → logprob: -8.416352272033691
    7. '   ' → logprob: -8.666352272033691
    8. 'new' → logprob: -8.791352272033691
    9. 'token' → logprob: -9.166352272033691
    10. '                            
' → logprob: -9.291352272033691

Token 727: ' moved' (ID: 12183)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1719619482755661
    2. 'sub' → logprob: -2.546962022781372
    3. 'car' → logprob: -3.421962022781372
    4. 'm' → logprob: -4.046961784362793
    5. 'moving' → logprob: -5.171961784362793
    6. 'prefix' → logprob: -5.546961784362793
    7. 'front' → logprob: -5.796961784362793
    8. 'part' → logprob: -5.796961784362793
    9. 'seg' → logprob: -6.046961784362793
    10. 'substring' → logprob: -6.296961784362793

Token 728: ' =' (ID: 314)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.26499199867248535
    2. ' =' → logprob: -2.5149919986724854
    3. '_train' → logprob: -2.8899919986724854
    4. '_piece' → logprob: -3.5149919986724854
    5. '_part' → logprob: -3.6399919986724854
    6. '_sub' → logprob: -4.389991760253906
    7. '_seg' → logprob: -5.014991760253906
    8. '_str' → logprob: -5.264991760253906
    9. '_' → logprob: -5.264991760253906
    10. '=' → logprob: -5.514991760253906

Token 729: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.005235529970377684
    2. ' train' → logprob: -5.25523567199707
    3. '   ' → logprob: -14.38023567199707
    4. '(train' → logprob: -15.25523567199707
    5. 'state' → logprob: -15.25523567199707
    6. '`' → logprob: -15.38023567199707
    7. ' ' → logprob: -15.63023567199707
    8. '```' → logprob: -16.63023567199707
    9. '  ' → logprob: -17.38023567199707
    10. 'tr' → logprob: -17.75523567199707

Token 730: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -8.554343366995454e-05
    2. '[' → logprob: -9.375085830688477
    3. ':' → logprob: -14.375085830688477
    4. '0' → logprob: -17.500085830688477
    5. ' [:' → logprob: -17.875085830688477
    6. '   ' → logprob: -18.375085830688477
    7. '1' → logprob: -19.125085830688477
    8. '[:,' → logprob: -19.500085830688477
    9. '           ' → logprob: -19.625085830688477
    10. '                   ' → logprob: -19.625085830688477

Token 731: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.5
    3. '(split' → logprob: -19.25
    4. '```' → logprob: -21.5
    5. '   ' → logprob: -22.5
    6. '.split' → logprob: -23.0
    7. ' ' → logprob: -23.5
    8. '           ' → logprob: -23.5
    9. 'plit' → logprob: -23.75
    10. '_split' → logprob: -24.0

Token 732: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00029494395130313933
    2. 'pos' → logprob: -8.25029468536377
    3. 'split' → logprob: -11.00029468536377
    4. 'Pos' → logprob: -11.87529468536377
    5. 's' → logprob: -13.87529468536377
    6. 'os' → logprob: -14.00029468536377
    7. 'ing' → logprob: -14.37529468536377
    8. 'token' → logprob: -14.62529468536377
    9. '```' → logprob: -14.62529468536377
    10. 'posit' → logprob: -14.75029468536377

Token 733: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2490902841091156
    2. ')' → logprob: -1.624090313911438
    3. '                           ' → logprob: -3.9990901947021484
    4. ']
' → logprob: -5.624090194702148
    5. ')
' → logprob: -6.999090194702148
    6. '                       ' → logprob: -8.499090194702148
    7. ')]' → logprob: -8.749090194702148
    8. '])' → logprob: -9.624090194702148
    9. '                               ' → logprob: -10.499090194702148
    10. '']' → logprob: -10.999090194702148

Token 734: '     ' (ID: 530)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.039079878479242325
    2. '                            
' → logprob: -3.9140799045562744
    3. ')' → logprob: -4.414079666137695
    4. ',' → logprob: -6.164079666137695
    5. '
' → logprob: -6.914079666137695
    6. '                            ' → logprob: -7.289079666137695
    7. '<|end|>' → logprob: -7.789079666137695
    8. '                               ' → logprob: -8.039079666137695
    9. '#' → logprob: -8.039079666137695
    10. 'rest' → logprob: -8.289079666137695

Token 735: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8134479522705078
    2. 'rest' → logprob: -1.3134479522705078
    3. '                           ' → logprob: -1.6884479522705078
    4. '#' (adapté à ' #') → logprob: -4.063447952270508
    5. '                            
' → logprob: -4.063447952270508
    6. ' rest' → logprob: -4.188447952270508
    7. ')
' → logprob: -4.438447952270508
    8. 'remaining' → logprob: -4.688447952270508
    9. 'new' → logprob: -4.938447952270508
    10. '
' → logprob: -5.188447952270508

Token 736: ' sous' (ID: 14487)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.06183747574687004
    2. '                           ' → logprob: -3.6868374347686768
    3. ')' → logprob: -4.436837673187256
    4. ' train' → logprob: -5.311837673187256
    5. 'split' → logprob: -5.686837673187256
    6. '(train' → logprob: -6.311837673187256
    7. ']' → logprob: -6.436837673187256
    8. '                            
' → logprob: -6.561837673187256
    9. 'm' → logprob: -7.186837673187256
    10. '```' → logprob: -7.436837673187256

Token 737: '-tr' (ID: 15461)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.3523201048374176
    2. '-token' → logprob: -2.4773201942443848
    3. 'train' → logprob: -2.6023201942443848
    4. '_token' → logprob: -2.7273201942443848
    5. '_train' → logprob: -3.9773201942443848
    6. 'string' → logprob: -4.352320194244385
    7. '                           ' → logprob: -4.727320194244385
    8. '-' → logprob: -4.977320194244385
    9. '_' → logprob: -4.977320194244385
    10. '-tr' → logprob: -6.227320194244385

Token 738: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.019816039130091667
    2. 'in' → logprob: -5.394815921783447
    3. 'train' → logprob: -5.394815921783447
    4. '```' → logprob: -5.894815921783447
    5. '#' → logprob: -7.332315921783447
    6. '_train' → logprob: -7.457315921783447
    7. 'ein' → logprob: -7.769815921783447
    8. 'en' → logprob: -7.832315921783447
    9. '   ' → logprob: -7.832315921783447
    10. '``' → logprob: -8.207316398620605

Token 739: ' déplac' (ID: 195321)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00015908108616713434
    2. 'able' → logprob: -9.25015926361084
    3. 'e' → logprob: -10.37515926361084
    4. 'u' → logprob: -11.25015926361084
    5. 'és' → logprob: -11.62515926361084
    6. 'er' → logprob: -12.00015926361084
    7. 'ée' → logprob: -13.75015926361084
    8. 'es' → logprob: -14.62515926361084
    9. '```' → logprob: -14.62515926361084
    10. '#' → logprob: -15.00015926361084

Token 741: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.26536014676094055
    2. '<|end|>' → logprob: -2.015360116958618
    3. ')' → logprob: -2.515360116958618
    4. '                            
' → logprob: -4.390360355377197
    5. '                            ' → logprob: -6.015360355377197
    6. '<|end|>' → logprob: -6.390360355377197
    7. ',' → logprob: -7.515360355377197
    8. '                        
' → logprob: -8.390359878540039
    9. '                               ' → logprob: -8.640359878540039
    10. '                       ' → logprob: -8.765359878540039

Token 742: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.008177289739251137
    2. '                            
' → logprob: -6.008177280426025
    3. 'rest' → logprob: -6.633177280426025
    4. ' rest' → logprob: -6.758177280426025
    5. ',' → logprob: -6.883177280426025
    6. 'remaining' → logprob: -7.633177280426025
    7. ')' → logprob: -8.258177757263184
    8. 'new' → logprob: -8.383177757263184
    9. '                       ' → logprob: -8.633177757263184
    10. '                            ' → logprob: -8.633177757263184

Token 743: ' kept' (ID: 13185)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.3099786341190338
    2. 'remaining' → logprob: -1.8099786043167114
    3. 'remain' → logprob: -2.934978723526001
    4. 'rem' → logprob: -3.184978723526001
    5. 'reste' → logprob: -5.559978485107422
    6. 're' → logprob: -5.684978485107422
    7. 'left' → logprob: -7.684978485107422
    8. 'new' → logprob: -8.559978485107422
    9. 'for' → logprob: -9.684978485107422
    10. '       ' → logprob: -9.809978485107422

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06994832307100296
    2. ' =' → logprob: -2.694948434829712
    3. '=train' → logprob: -11.694948196411133
    4. '_train' → logprob: -13.819948196411133
    5. '   ' → logprob: -14.444948196411133
    6. '_' → logprob: -14.444948196411133
    7. '＝' → logprob: -15.069948196411133
    8. '_tokens' → logprob: -15.569948196411133
    9. '_=' → logprob: -15.694948196411133
    10. ' ' → logprob: -15.694948196411133

Token 745: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.029751762747764587
    2. ' train' → logprob: -3.529751777648926
    3. 'state' → logprob: -14.654751777648926
    4. ' ' → logprob: -14.779751777648926
    5. '   ' → logprob: -15.154751777648926
    6. 'tr' → logprob: -16.27975082397461
    7. '(train' → logprob: -16.52975082397461
    8. '  ' → logprob: -17.15475082397461
    9. '=train' → logprob: -17.52975082397461
    10. '.train' → logprob: -18.27975082397461

Token 746: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. 'split' → logprob: -13.12500286102295
    3. ' [' → logprob: -14.12500286102295
    4. '[:' → logprob: -15.75000286102295
    5. '=' → logprob: -16.625003814697266
    6. ' ' → logprob: -17.000003814697266
    7. ' =' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '       ' → logprob: -18.000003814697266
    10. '               ' → logprob: -18.125003814697266

Token 747: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0087516784551553e-05
    2. ' split' → logprob: -11.87501049041748
    3. '[' → logprob: -13.25001049041748
    4. '(split' → logprob: -14.12501049041748
    5. 'plit' → logprob: -15.50001049041748
    6. ':' → logprob: -16.750009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '           ' → logprob: -17.250009536743164
    9. '_split' → logprob: -17.625009536743164
    10. '               ' → logprob: -17.625009536743164

Token 748: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.06200869008898735
    2. 'split' → logprob: -3.0620086193084717
    3. 'pos' → logprob: -4.437008857727051
    4. '[' → logprob: -6.687008857727051
    5. 'Pos' → logprob: -9.06200885772705
    6. '```' → logprob: -9.81200885772705
    7. '_split' → logprob: -11.06200885772705
    8. '(split' → logprob: -11.18700885772705
    9. ']' → logprob: -11.68700885772705
    10. '[:' → logprob: -12.06200885772705

Token 749: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -6.392202976712724e-06
    2. ':]
' → logprob: -12.500006675720215
    3. ':' → logprob: -13.500006675720215
    4. ']' → logprob: -14.250006675720215
    5. ':]

' → logprob: -15.250006675720215
    6. ' :]' → logprob: -15.500006675720215
    7. ':],' → logprob: -16.5000057220459
    8. ':].' → logprob: -16.8750057220459
    9. '...]' → logprob: -20.2500057220459
    10. ':)' → logprob: -20.8750057220459

Token 750: '      ' (ID: 1699)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.008786519058048725
    2. '                            
' → logprob: -6.133786678314209
    3. '<|end|>' → logprob: -6.133786678314209
    4. ')' → logprob: -6.633786678314209
    5. '                               ' → logprob: -7.008786678314209
    6. '                       ' → logprob: -7.258786678314209
    7. '                            ' → logprob: -7.633786678314209
    8. '
' → logprob: -8.13378620147705
    9. '               ' → logprob: -9.13378620147705
    10. '           ' → logprob: -9.38378620147705

Token 751: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05147411301732063
    2. ')' → logprob: -3.426474094390869
    3. '                               ' → logprob: -5.051474094390869
    4. '                            
' → logprob: -5.426474094390869
    5. '<|end|>' → logprob: -6.426474094390869
    6. '                       ' → logprob: -6.551474094390869
    7. '
' → logprob: -6.676474094390869
    8. '                            ' → logprob: -6.926474094390869
    9. '               ' → logprob: -8.301474571228027
    10. '                             ' → logprob: -8.551474571228027

Token 752: ' reste' (ID: 26769)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.7710684537887573
    2. 'train' → logprob: -1.0210684537887573
    3. ' kept' → logprob: -2.021068572998047
    4. '```' → logprob: -4.396068572998047
    5. 'rest' → logprob: -5.396068572998047
    6. ' train' → logprob: -5.396068572998047
    7. 'start' → logprob: -5.521068572998047
    8. '...' → logprob: -5.646068572998047
    9. 'keep' → logprob: -5.896068572998047
    10. 'remaining' → logprob: -6.021068572998047

Token 753: ' sur' (ID: 1512)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03473125025629997
    2. '<|end|>' → logprob: -4.284731388092041
    3. '                            
' → logprob: -4.659731388092041
    4. '                       ' → logprob: -5.659731388092041
    5. '                            ' → logprob: -6.534731388092041
    6. '               ' → logprob: -7.034731388092041
    7. '                   ' → logprob: -7.159731388092041
    8. '                        
' → logprob: -7.159731388092041
    9. '                               ' → logprob: -7.159731388092041
    10. '<|end|>' → logprob: -7.659731388092041

Token 754: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.174904003739357
    2. 'i' → logprob: -2.1749041080474854
    3. 'l' → logprob: -3.6749041080474854
    4. ' la' → logprob: -4.174903869628906
    5. 'ligne' → logprob: -6.049903869628906
    6. 'train' → logprob: -6.549903869628906
    7. 'state' → logprob: -7.174903869628906
    8. 'line' → logprob: -7.174903869628906
    9. ' i' → logprob: -7.799903869628906
    10. 'the' → logprob: -9.174903869628906

Token 755: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6356559991836548
    2. 'ligne' → logprob: -0.7606559991836548
    3. 'line' → logprob: -6.260655879974365
    4. 'train' → logprob: -7.760655879974365
    5. 'm' → logprob: -8.135656356811523
    6. 'l' → logprob: -8.760656356811523
    7. ' ligne' → logprob: -9.135656356811523
    8. '```' → logprob: -10.010656356811523
    9. '[i' → logprob: -10.385656356811523
    10. ' i' → logprob: -10.760656356811523

Token 756: '

' (ID: 279)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05339128524065018
    2. '<|end|>' → logprob: -3.803391218185425
    3. ')' → logprob: -4.053391456604004
    4. '                            
' → logprob: -5.553391456604004
    5. '                               ' → logprob: -6.428391456604004
    6. '                       ' → logprob: -6.428391456604004
    7. '
' → logprob: -6.553391456604004
    8. '                            ' → logprob: -7.428391456604004
    9. '<|end|>' → logprob: -7.428391456604004
    10. '```' → logprob: -7.928391456604004

Token 757: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0014942651614546776
    2. '                            
' → logprob: -7.001494407653809
    3. 'for' → logprob: -8.876494407653809
    4. '                       ' → logprob: -9.251494407653809
    5. '<|end|>' → logprob: -9.501494407653809
    6. ' for' → logprob: -9.751494407653809
    7. '```' → logprob: -9.876494407653809
    8. '                            ' → logprob: -10.001494407653809
    9. '                               ' → logprob: -10.126494407653809
    10. '                   ' → logprob: -10.876494407653809

Token 758: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020902343094348907
    2. 'from' → logprob: -4.895902156829834
    3. 'start' → logprob: -5.145902156829834
    4. 'end' → logprob: -5.895902156829834
    5. 'if' → logprob: -6.520902156829834
    6. '#' (adapté à ' #') → logprob: -7.020902156829834
    7. '                           ' → logprob: -7.270902156829834
    8. 'current' → logprob: -7.645902156829834
    9. 'state' → logprob: -8.520902633666992
    10. 'origin' → logprob: -8.895902633666992

Token 759: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0073297410272061825
    2. '                           ' → logprob: -5.757329940795898
    3. 'from' → logprob: -6.257329940795898
    4. 'if' → logprob: -6.757329940795898
    5. 'dest' → logprob: -8.632329940795898
    6. 'end' → logprob: -8.757329940795898
    7. 'origin' → logprob: -9.007329940795898
    8. '#' → logprob: -9.132329940795898
    9. 'start' → logprob: -9.382329940795898
    10. 'current' → logprob: -9.632329940795898

Token 760: ' chaque' (ID: 21194)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.573321521282196
    2. 'dest' → logprob: -1.6983215808868408
    3. 'next' → logprob: -2.698321580886841
    4. 'adj' → logprob: -3.323321580886841
    5. 'ne' → logprob: -3.698321580886841
    6. 'vo' → logprob: -4.198321342468262
    7. 'conn' → logprob: -4.448321342468262
    8. 'nei' → logprob: -4.448321342468262
    9. 'nbr' → logprob: -4.573321342468262
    10. 'target' → logprob: -4.573321342468262

Token 761: ' ligne' (ID: 19583)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03776063770055771
    2. ' neighbor' → logprob: -4.2877607345581055
    3. '(ne' → logprob: -4.2877607345581055
    4. 'nei' → logprob: -6.5377607345581055
    5. 'conn' → logprob: -6.7877607345581055
    6. 'next' → logprob: -6.9127607345581055
    7. 'dest' → logprob: -6.9127607345581055
    8. ' voisin' → logprob: -7.2877607345581055
    9. 'vo' → logprob: -7.4127607345581055
    10. '(' → logprob: -7.5377607345581055

Token 762: ' connect' (ID: 4837)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1516209840774536
    2. 'dest' → logprob: -2.901620864868164
    3. 'adj' → logprob: -4.026620864868164
    4. 'j' → logprob: -4.276620864868164
    5. 'c' → logprob: -4.651620864868164
    6. ',j' → logprob: -5.276620864868164
    7. 'vo' → logprob: -5.276620864868164
    8. '```' → logprob: -5.401620864868164
    9. 'conn' → logprob: -5.651620864868164
    10. 'neighbor' → logprob: -6.026620864868164

Token 763: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.22569431364536285
    2. 'é' → logprob: -1.7256942987442017
    3. 'connected' → logprob: -4.725694179534912
    4. 'ed' → logprob: -5.225694179534912
    5. 'ected' → logprob: -5.725694179534912
    6. 'ées' → logprob: -6.350694179534912
    7. ' connected' → logprob: -6.475694179534912
    8. '_connected' → logprob: -7.100694179534912
    9. 'ection' → logprob: -7.350694179534912
    10. 'ee' → logprob: -7.850694179534912

Token 764: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0074443817138672
    2. 'in' → logprob: -1.5074443817138672
    3. '                           ' → logprob: -1.5074443817138672
    4. 'connected' → logprob: -3.382444381713867
    5. 'to' → logprob: -3.507444381713867
    6. ',' → logprob: -3.507444381713867
    7. ' connected' → logprob: -3.632444381713867
    8. ' dans' → logprob: -3.757444381713867
    9. 'dans' → logprob: -4.757444381713867
    10. '                   ' → logprob: -5.007444381713867

Token 765: ' cette' (ID: 7696)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018015898764133453
    2. 'connections' → logprob: -4.1430158615112305
    3. ' (' → logprob: -6.2680158615112305
    4. ' connections' → logprob: -10.64301586151123
    5. '(' → logprob: -11.26801586151123
    6. '(I' → logprob: -12.01801586151123
    7. '`' → logprob: -12.51801586151123
    8. '[i' → logprob: -12.51801586151123
    9. '```' → logprob: -12.51801586151123
    10. '                   ' → logprob: -12.64301586151123

Token 766: ' extr' (ID: 15674)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0053605143912136555
    2. ' (' → logprob: -5.2553606033325195
    3. 'i' → logprob: -10.63036060333252
    4. ',' → logprob: -11.13036060333252
    5. '(' → logprob: -11.38036060333252
    6. '           ' → logprob: -11.50536060333252
    7. '                   ' → logprob: -11.50536060333252
    8. '               ' → logprob: -11.88036060333252
    9. '                           ' → logprob: -11.88036060333252
    10. '[i' → logprob: -12.00536060333252

Token 767: 'é' (ID: 377)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3827154338359833
    2. 'rem' → logprob: -1.3827154636383057
    3. 'ity' → logprob: -4.882715225219727
    4. 'r' → logprob: -5.007715225219727
    5. 'ité' → logprob: -5.007715225219727
    6. '               ' → logprob: -5.007715225219727
    7. '           ' → logprob: -5.007715225219727
    8. 'é' → logprob: -5.132715225219727
    9. 'i' → logprob: -5.257715225219727
    10. 'em' → logprob: -5.882715225219727

Token 768: 'mit' (ID: 2765)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.014561140909790993
    2. 'rem' → logprob: -6.014561176300049
    3. '(i' → logprob: -6.014561176300049
    4. 'é' → logprob: -6.139561176300049
    5. 'mit' → logprob: -6.514561176300049
    6. 'rité' → logprob: -6.639561176300049
    7. 'imité' → logprob: -7.014561176300049
    8. 'ite' → logprob: -7.389561176300049
    9. 'i' → logprob: -7.389561176300049
    10. 'alité' → logprob: -7.889561176300049

Token 769: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.46655112504959106
    2. '(i' → logprob: -1.7165510654449463
    3. 'i' → logprob: -2.0915510654449463
    4. 'y' → logprob: -2.9665510654449463
    5. '((' → logprob: -5.466551303863525
    6. '(' → logprob: -5.466551303863525
    7. 'e' → logprob: -5.591551303863525
    8. 'ié' → logprob: -6.091551303863525
    9. '(y' → logprob: -7.216551303863525
    10. 'ité' → logprob: -7.466551303863525

Token 770: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6652711629867554
    2. '(i' → logprob: -1.1652711629867554
    3. ' (' → logprob: -2.290271282196045
    4. ':' → logprob: -3.915271282196045
    5. ':
' → logprob: -4.540271282196045
    6. '                               ' → logprob: -4.665271282196045
    7. '                   ' → logprob: -5.040271282196045
    8. '                       ' → logprob: -5.290271282196045
    9. '(' → logprob: -5.540271282196045
    10. '(connection' → logprob: -5.665271282196045

Token 771: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18637819588184357
    2. ' (' → logprob: -2.811378240585327
    3. '                   ' → logprob: -2.811378240585327
    4. '                       ' → logprob: -3.936378240585327
    5. ':' → logprob: -4.436378002166748
    6. ',' → logprob: -5.436378002166748
    7. '(' → logprob: -5.436378002166748
    8. ' for' → logprob: -6.436378002166748
    9. 'for' → logprob: -6.811378002166748
    10. '   ' → logprob: -6.811378002166748

Token 772: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29208841919898987
    2. ' for' → logprob: -1.4170883893966675
    3. '                           ' → logprob: -4.542088508605957
    4. '                       ' → logprob: -9.417088508605957
    5. '                   ' → logprob: -9.667088508605957
    6. '   ' → logprob: -11.292088508605957
    7. '                               ' → logprob: -11.292088508605957
    8. '               ' → logprob: -11.417088508605957
    9. '	for' → logprob: -11.542088508605957
    10. '           ' → logprob: -11.792088508605957

Token 773: ' (' (ID: 350)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6021105647087097
    2. '(ne' → logprob: -1.2271106243133545
    3. '(next' → logprob: -3.3521106243133545
    4. '(j' → logprob: -3.4771106243133545
    5. '(n' → logprob: -3.6021106243133545
    6. 'next' → logprob: -3.8521106243133545
    7. 'dest' → logprob: -4.602110385894775
    8. 'conn' → logprob: -4.852110385894775
    9. 'nbr' → logprob: -4.977110385894775
    10. '(dest' → logprob: -5.352110385894775

Token 774: 'dest' (ID: 28338)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16895660758018494
    2. 'neighbor' → logprob: -2.6689565181732178
    3. 'nbr' → logprob: -3.2939565181732178
    4. 'adj' → logprob: -3.9189565181732178
    5. 'nei' → logprob: -4.293956756591797
    6. 'next' → logprob: -5.543956756591797
    7. 'dest' → logprob: -6.043956756591797
    8. 'ni' → logprob: -6.168956756591797
    9. 'conn' → logprob: -6.543956756591797
    10. 'nb' → logprob: -6.668956756591797

Token 775: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.570319702499546e-05
    2. '_i' → logprob: -11.125025749206543
    3. ',' → logprob: -12.375025749206543
    4. 'line' → logprob: -12.625025749206543
    5. '_LINE' → logprob: -14.500025749206543
    6. 'Line' → logprob: -14.750025749206543
    7. 'i' → logprob: -14.875025749206543
    8. '_index' → logprob: -15.000025749206543
    9. ')' → logprob: -15.125025749206543
    10. '_lines' → logprob: -15.625025749206543

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -11.250021934509277
    3. ',d' → logprob: -12.625021934509277
    4. '<|end|>' → logprob: -12.625021934509277
    5. ',next' → logprob: -14.750021934509277
    6. 's' → logprob: -15.000021934509277
    7. '‌,' → logprob: -15.000021934509277
    8. ',
' → logprob: -15.000021934509277
    9. ',n' → logprob: -16.000022888183594
    10. '<|end|>' → logprob: -16.625022888183594

Token 777: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.00021891399228479713
    2. ' dest' → logprob: -8.500219345092773
    3. '	dest' → logprob: -12.500219345092773
    4. ')' → logprob: -12.875219345092773
    5. '')' → logprob: -13.250219345092773
    6. ''' → logprob: -13.375219345092773
    7. '...)' → logprob: -13.875219345092773
    8. 'side' → logprob: -13.875219345092773
    9. '...' → logprob: -14.125219345092773
    10. ''d' → logprob: -14.500219345092773

Token 778: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.00045164540642872453
    2. 'side' → logprob: -7.750451564788818
    3. '_SIDE' → logprob: -11.750452041625977
    4. ',' → logprob: -12.500452041625977
    5. ' side' → logprob: -12.875452041625977
    6. 'Side' → logprob: -13.000452041625977
    7. '_' → logprob: -13.750452041625977
    8. ')' → logprob: -13.875452041625977
    9. ' _' → logprob: -14.375452041625977
    10. ''_' → logprob: -14.625452041625977

Token 779: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001870902779046446
    2. 'in' → logprob: -9.375186920166016
    3. ' )' → logprob: -10.000186920166016
    4. '),' → logprob: -10.625186920166016
    5. ' in' → logprob: -10.750186920166016
    6. '                           ' → logprob: -12.375186920166016
    7. '                   ' → logprob: -13.125186920166016
    8. '   ' → logprob: -14.125186920166016
    9. '                       ' → logprob: -14.125186920166016
    10. '')' → logprob: -15.000186920166016

Token 780: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43505603075027466
    2. 'in' → logprob: -1.1850559711456299
    3. ')' → logprob: -3.06005597114563
    4. ',' → logprob: -10.43505573272705
    5. '                           ' → logprob: -10.43505573272705
    6. '),' → logprob: -10.68505573272705
    7. ' )' → logprob: -10.81005573272705
    8. '```' → logprob: -11.93505573272705
    9. '   ' → logprob: -12.06005573272705
    10. '                       ' → logprob: -12.31005573272705

Token 781: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.003179975086823106
    2. ' connections' → logprob: -5.753180027008057
    3. '           ' → logprob: -14.003179550170898
    4. '   ' → logprob: -14.753179550170898
    5. '               ' → logprob: -14.753179550170898
    6. '.connections' → logprob: -14.878179550170898
    7. '                   ' → logprob: -16.0031795501709
    8. '       ' → logprob: -16.5031795501709
    9. '_connections' → logprob: -18.3781795501709
    10. '                       ' → logprob: -18.3781795501709

Token 782: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: 0.0
    2. '   ' → logprob: -17.375
    3. '.get' → logprob: -18.0
    4. '[((' → logprob: -18.125
    5. '[' → logprob: -18.375
    6. ' [(' → logprob: -18.875
    7. '       ' → logprob: -19.25
    8. '[
' → logprob: -19.5
    9. '           ' → logprob: -20.0
    10. '[i' → logprob: -20.375

Token 783: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.875003814697266
    3. '(i' → logprob: -13.875003814697266
    4. '   ' → logprob: -16.500003814697266
    5. ')' → logprob: -16.750003814697266
    6. '                           ' → logprob: -17.500003814697266
    7. ',i' → logprob: -17.625003814697266
    8. '                   ' → logprob: -17.750003814697266
    9. ' (' → logprob: -17.750003814697266
    10. ')i' → logprob: -17.875003814697266

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5690089639974758e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',s' → logprob: -13.875015258789062
    4. ',
' → logprob: -14.000015258789062
    5. '<|end|>' → logprob: -15.125015258789062
    6. '‌,' → logprob: -16.250015258789062
    7. '),' → logprob: -16.875015258789062
    8. ')' → logprob: -17.000015258789062
    9. ',i' → logprob: -17.125015258789062
    10. ',n' → logprob: -17.500015258789062

Token 785: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0013273799559101462
    2. ' side' → logprob: -6.6263275146484375
    3. '   ' → logprob: -14.876327514648438
    4. '	side' → logprob: -15.001327514648438
    5. ' ' → logprob: -15.376327514648438
    6. '(side' → logprob: -15.626327514648438
    7. '.side' → logprob: -16.126327514648438
    8. ''s' → logprob: -16.376327514648438
    9. '  ' → logprob: -16.626327514648438
    10. '                   ' → logprob: -17.251327514648438

Token 786: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11287640035152435
    2. ')]' → logprob: -2.2378764152526855
    3. '):' → logprob: -10.362875938415527
    4. ' )' → logprob: -11.862875938415527
    5. ']' → logprob: -12.237875938415527
    6. ']):' → logprob: -12.737875938415527
    7. ')].' → logprob: -13.612875938415527
    8. '])' → logprob: -13.737875938415527
    9. ')][' → logprob: -13.737875938415527
    10. '       ' → logprob: -14.112875938415527

Token 787: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001675302512012422
    2. ':
' → logprob: -6.876675128936768
    3. '):' → logprob: -8.376675605773926
    4. '<|end|>' → logprob: -8.626675605773926
    5. '                               ' → logprob: -9.251675605773926
    6. '                           ' → logprob: -9.626675605773926
    7. ',' → logprob: -11.001675605773926
    8. ' :' → logprob: -11.126675605773926
    9. '<|end|>' → logprob: -11.251675605773926
    10. '):
' → logprob: -11.501675605773926

Token 788: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.005188812967389822
    2. ' if' → logprob: -6.755188941955566
    3. '                                
' → logprob: -6.880188941955566
    4. 'if' → logprob: -7.005188941955566
    5. '                           ' → logprob: -7.130188941955566
    6. '                              ' → logprob: -8.380188941955566
    7. '                             ' → logprob: -8.505188941955566
    8. '                                ' → logprob: -9.005188941955566
    9. 'new' → logprob: -9.505188941955566
    10. '                            ' → logprob: -9.505188941955566

Token 789: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' (adapté à ' dest') → logprob: -0.2484278827905655
    2. 'if' → logprob: -2.2484278678894043
    3. 'new' → logprob: -2.8734278678894043
    4. '#' → logprob: -2.9984278678894043
    5. '                               ' → logprob: -5.873427867889404
    6. 'current' → logprob: -6.373427867889404
    7. 'next' → logprob: -7.123427867889404
    8. 'curr' → logprob: -7.248427867889404
    9. 'state' → logprob: -7.498427867889404
    10. 'dst' → logprob: -7.623427867889404

Token 790: '_train' (ID: 16872)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.7484999895095825
    2. '_train' → logprob: -0.8734999895095825
    3. '_line' → logprob: -2.248499870300293
    4. 'train' → logprob: -5.998499870300293
    5. 'state' → logprob: -7.373499870300293
    6. '_' → logprob: -8.248499870300293
    7. '_str' → logprob: -9.123499870300293
    8. '_string' → logprob: -9.498499870300293
    9. '_lines' → logprob: -9.498499870300293
    10. '_queue' → logprob: -10.748499870300293

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022838652133942
    2. ' =' → logprob: -1.9102283716201782
    3. 'state' → logprob: -13.660228729248047
    4. ',' → logprob: -13.660228729248047
    5. ',state' → logprob: -14.785228729248047
    6. '   ' → logprob: -15.160228729248047
    7. '=current' → logprob: -15.535228729248047
    8. '>' → logprob: -15.660228729248047
    9. 's' → logprob: -15.785228729248047
    10. ')' → logprob: -16.035228729248047

Token 792: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.002816528081893921
    2. ' state' → logprob: -5.877816677093506
    3. 'list' → logprob: -11.502816200256348
    4. '   ' → logprob: -13.752816200256348
    5. ' list' → logprob: -16.002817153930664
    6. ' ' → logprob: -16.252817153930664
    7. '	state' → logprob: -16.502817153930664
    8. '
' → logprob: -16.627817153930664
    9. '(state' → logprob: -16.627817153930664
    10. '       ' → logprob: -16.877817153930664

Token 793: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. 'dest' → logprob: -14.37500286102295
    3. ' [' → logprob: -14.62500286102295
    4. '=' → logprob: -15.25000286102295
    5. '   ' → logprob: -15.62500286102295
    6. '                               ' → logprob: -15.87500286102295
    7. '       ' → logprob: -16.000001907348633
    8. '```' → logprob: -16.125001907348633
    9. '(dest' → logprob: -16.125001907348633
    10. '[
' → logprob: -16.250001907348633

Token 794: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -1.0280383548888494e-06
    2. ' dest' → logprob: -14.000000953674316
    3. '(dest' → logprob: -16.125001907348633
    4. '	dest' → logprob: -17.625001907348633
    5. '.dest' → logprob: -19.375001907348633
    6. '_dest' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '```' → logprob: -20.375001907348633
    9. 'dst' → logprob: -20.625001907348633
    10. '
' → logprob: -20.750001907348633

Token 795: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.06197318062186241
    2. 'dest' → logprob: -2.9369730949401855
    3. '[' → logprob: -5.0619730949401855
    4. '_dest' → logprob: -8.686973571777344
    5. ']' → logprob: -8.936973571777344
    6. 'line' → logprob: -9.686973571777344
    7. '][' → logprob: -10.061973571777344
    8. 's' → logprob: -10.311973571777344
    9. '```' → logprob: -10.561973571777344
    10. '(dest' → logprob: -10.686973571777344

Token 796: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02451968751847744
    2. ']
' → logprob: -3.899519681930542
    3. ')' → logprob: -5.649519920349121
    4. ')
' → logprob: -8.399519920349121
    5. ']

' → logprob: -9.899519920349121
    6. '])' → logprob: -9.899519920349121
    7. '                           ' → logprob: -10.649519920349121
    8. ' ]' → logprob: -10.774519920349121
    9. '                               ' → logprob: -10.774519920349121
    10. '']' → logprob: -11.274519920349121

Token 797: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0022403046023100615
    2. ' if' → logprob: -6.877240180969238
    3. 'if' → logprob: -7.502240180969238
    4. '                                
' → logprob: -8.002240180969238
    5. '```' → logprob: -9.002240180969238
    6. '                                ' → logprob: -9.377240180969238
    7. '							' → logprob: -10.377240180969238
    8. '                                   ' → logprob: -10.377240180969238
    9. '<|end|>' → logprob: -11.752240180969238
    10. ' for' → logprob: -12.002240180969238

Token 798: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16750940680503845
    2. '#' (adapté à ' #') → logprob: -1.9175094366073608
    3. 'for' → logprob: -5.16750955581665
    4. '                               ' → logprob: -7.04250955581665
    5. 'new' → logprob: -7.79250955581665
    6. 'can' → logprob: -9.292509078979492
    7. '```' → logprob: -10.292509078979492
    8. 'dest' → logprob: -10.542509078979492
    9. '                           ' → logprob: -10.667509078979492
    10. 'possible' → logprob: -10.917509078979492

Token 799: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4752523899078369
    2. '#' → logprob: -0.9752523899078369
    3. 'can' → logprob: -7.350252151489258
    4. 'for' → logprob: -8.350252151489258
    5. 'possible' → logprob: -9.350252151489258
    6. 'new' → logprob: -9.475252151489258
    7. 'compatible' → logprob: -10.725252151489258
    8. 'dest' → logprob: -10.975252151489258
    9. '```' → logprob: -11.100252151489258
    10. '#if' → logprob: -11.600252151489258

Token 800: ' col' (ID: 996)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.11792171001434326
    2. ' dest' → logprob: -2.992921829223633
    3. 'side' → logprob: -2.992921829223633
    4. ' side' → logprob: -4.867921829223633
    5. 'split' → logprob: -7.492921829223633
    6. 'len' → logprob: -7.617921829223633
    7. 'd' → logprob: -8.117921829223633
    8. '#' → logprob: -8.742921829223633
    9. 'not' → logprob: -8.805421829223633
    10. 's' → logprob: -8.867921829223633

Token 801: 'ler' (ID: 1639)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.8159583806991577
    2. 'ner' → logprob: -1.5659583806991577
    3. 'or' → logprob: -2.5659584999084473
    4. 'n' → logprob: -2.9409584999084473
    5. 'ine' → logprob: -3.3159584999084473
    6. 'dest' → logprob: -3.6909584999084473
    7. 'nne' → logprob: -4.190958499908447
    8. 'on' → logprob: -4.440958499908447
    9. 'né' → logprob: -4.440958499908447
    10. 'iné' → logprob: -4.690958499908447

Token 802: ',' (ID: 11)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.17424385249614716
    2. '(dest' → logprob: -2.549243927001953
    3. ' dest' → logprob: -3.174243927001953
    4. '                               ' → logprob: -3.924243927001953
    5. ',' → logprob: -5.674243927001953
    6. 'if' → logprob: -6.049243927001953
    7. ' le' → logprob: -6.674243927001953
    8. '                           ' → logprob: -6.924243927001953
    9. 'er' → logprob: -6.924243927001953
    10. '                                   ' → logprob: -7.174243927001953

Token 803: ' il' (ID: 1793)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.8221747875213623
    2. '(side' → logprob: -1.3221747875213623
    3. '(dest' → logprob: -1.5721747875213623
    4. 'side' → logprob: -3.1971747875213623
    5. '(not' → logprob: -4.197175025939941
    6. 'not' → logprob: -5.072175025939941
    7. '(len' → logprob: -5.197175025939941
    8. 'if' → logprob: -5.447175025939941
    9. ' (' → logprob: -5.947175025939941
    10. '(' → logprob: -5.947175025939941

Token 804: ' faut' (ID: 17821)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.4873560667037964
    2. ' faut' → logprob: -2.112356185913086
    3. ' must' → logprob: -2.487356185913086
    4. 'should' → logprob: -2.487356185913086
    5. '                               ' → logprob: -3.487356185913086
    6. '==' → logprob: -3.987356185913086
    7. 'f' → logprob: -4.112356185913086
    8. ' should' → logprob: -4.987356185913086
    9. ' faudra' → logprob: -5.112356185913086
    10. '.startswith' → logprob: -6.362356185913086

Token 805: ' ajouter' (ID: 78457)
  Prédit: '(dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.07006881386041641
    2. '(' → logprob: -4.070068836212158
    3. '(not' → logprob: -4.570068836212158
    4. '(m' → logprob: -4.945068836212158
    5. '(side' → logprob: -4.945068836212158
    6. '((' → logprob: -5.195068836212158
    7. 'dest' → logprob: -5.195068836212158
    8. '(
' → logprob: -5.320068836212158
    9. '(d' → logprob: -5.445068836212158
    10. ' (' → logprob: -6.070068836212158

Token 806: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11962283402681351
    2. ' moved' → logprob: -2.2446229457855225
    3. ' le' → logprob: -5.619622707366943
    4. 'le' → logprob: -6.619622707366943
    5. ' m' → logprob: -8.494623184204102
    6. 'the' → logprob: -8.619623184204102
    7. ' the' → logprob: -8.869623184204102
    8. '(m' → logprob: -8.994623184204102
    9. ' at' → logprob: -8.994623184204102
    10. ' either' → logprob: -9.119623184204102

Token 807: ' à' (ID: 1221)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3024856448173523
    2. '+' → logprob: -1.552485704421997
    3. ' at' → logprob: -3.552485704421997
    4. ' à' → logprob: -5.552485466003418
    5. ' plus' → logprob: -5.677485466003418
    6. ' either' → logprob: -5.927485466003418
    7. 'at' → logprob: -6.052485466003418
    8. 'à' → logprob: -7.052485466003418
    9. '<|end|>' → logprob: -7.052485466003418
    10. 'either' → logprob: -7.302485466003418

Token 808: ' l' (ID: 305)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.019031522795557976
    2. 'l' → logprob: -4.894031524658203
    3. 'la' → logprob: -5.519031524658203
    4. '(dest' → logprob: -5.769031524658203
    5. 'the' → logprob: -5.894031524658203
    6. '```' → logprob: -8.019031524658203
    7. 'dé' → logprob: -8.394031524658203
    8. '`' → logprob: -8.769031524658203
    9. '(' → logprob: -8.894031524658203
    10. 'destination' → logprob: -9.394031524658203

Token 809: ''ex' (ID: 23472)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.9165893197059631
    2. 'dé' → logprob: -1.5415892601013184
    3. 'a' → logprob: -2.1665892601013184
    4. 'la' → logprob: -2.9165892601013184
    5. 'extr' → logprob: -3.0415892601013184
    6. 'l' → logprob: -3.1665892601013184
    7. ''ex' → logprob: -3.1665892601013184
    8. 'end' → logprob: -3.9165892601013184
    9. ''d' → logprob: -4.666589260101318
    10. 'destination' → logprob: -4.666589260101318

Token 810: 'tré' (ID: 143903)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.8033440709114075
    2. 'tré' → logprob: -0.9283440709114075
    3. 'tr' → logprob: -1.9283440113067627
    4. '```' → logprob: -5.053344249725342
    5. 't' → logprob: -6.303344249725342
    6. 'pos' → logprob: -7.428344249725342
    7. '(dest' → logprob: -7.678344249725342
    8. 'trim' → logprob: -8.053343772888184
    9. 'dé' → logprob: -8.053343772888184
    10. 'begin' → logprob: -8.928343772888184

Token 811: 'mit' (ID: 2765)
  Prédit: 'té'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'té' → logprob: -0.8002373576164246
    2. 'mit' → logprob: -1.4252374172210693
    3. 'm' → logprob: -1.8002374172210693
    4. 'ité' → logprob: -3.6752374172210693
    5. 'cut' → logprob: -3.8002374172210693
    6. 'rm' → logprob: -4.05023717880249
    7. 'r' → logprob: -4.05023717880249
    8. 't' → logprob: -4.67523717880249
    9. 'mite' → logprob: -4.67523717880249
    10. 'mé' → logprob: -4.80023717880249

Token 812: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.011452965438365936
    2. 'y' → logprob: -4.761453151702881
    3. 'e' → logprob: -6.761453151702881
    4. 'ité' → logprob: -7.011453151702881
    5. 'té' → logprob: -8.386452674865723
    6. '[' → logprob: -9.386452674865723
    7. '(' → logprob: -9.386452674865723
    8. '#' → logprob: -9.761452674865723
    9. 'ié' → logprob: -9.761452674865723
    10. 'eté' → logprob: -10.511452674865723

Token 813: ' oppos' (ID: 20679)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9360283017158508
    2. 'dest' → logprob: -1.061028242111206
    3. 'if' → logprob: -1.686028242111206
    4. '[' → logprob: -3.311028242111206
    5. '                               ' → logprob: -4.686028480529785
    6. '=' → logprob: -5.186028480529785
    7. '<|end|>' → logprob: -5.936028480529785
    8. ' =' → logprob: -6.061028480529785
    9. '```' → logprob: -6.186028480529785
    10. ' dest' → logprob: -6.311028480529785

Token 814: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021530820056796074
    2. 'é' → logprob: -4.771530628204346
    3. ''e' → logprob: -6.271530628204346
    4. ''' → logprob: -6.646530628204346
    5. 'ect' → logprob: -6.896530628204346
    6. 'ede' → logprob: -7.021530628204346
    7. ')' → logprob: -7.146530628204346
    8. 'side' → logprob: -7.271530628204346
    9. '```' → logprob: -7.271530628204346
    10. '')' → logprob: -7.396530628204346

Token 815: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.87117999792099
    2. '                               ' → logprob: -0.87117999792099
    3. ' (' → logprob: -2.9961800575256348
    4. 'dest' → logprob: -3.2461800575256348
    5. 'if' → logprob: -3.6211800575256348
    6. ',' → logprob: -4.496180057525635
    7. '(dest' → logprob: -4.746180057525635
    8. ' opposite' → logprob: -5.246180057525635
    9. ' of' → logprob: -5.621180057525635
    10. ' dest' → logprob: -6.246180057525635

Token 816: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.0007595999049954116
    2. ' dest' → logprob: -7.500759601593018
    3. '(dest' → logprob: -8.87575912475586
    4. 'the' → logprob: -11.00075912475586
    5. '	dest' → logprob: -11.00075912475586
    6. '   ' → logprob: -11.87575912475586
    7. '```' → logprob: -12.25075912475586
    8. 'destination' → logprob: -12.87575912475586
    9. '           ' → logprob: -13.12575912475586
    10. '       ' → logprob: -13.25075912475586

Token 817: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.0009315869538113475
    2. 'side' → logprob: -7.125931739807129
    3. '_line' → logprob: -9.875931739807129
    4. 'dest' → logprob: -10.000931739807129
    5. '_train' → logprob: -11.375931739807129
    6. '_dest' → logprob: -12.125931739807129
    7. 'Side' → logprob: -12.375931739807129
    8. '```' → logprob: -13.375931739807129
    9. '_SIDE' → logprob: -13.500931739807129
    10. '[' → logprob: -13.875931739807129

Token 818: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.077729731798172
    2. ' if' → logprob: -3.3277297019958496
    3. '                                ' → logprob: -3.9527297019958496
    4. '                                
' → logprob: -4.70272970199585
    5. ',' → logprob: -6.07772970199585
    6. ' (' → logprob: -6.32772970199585
    7. 'if' → logprob: -6.45272970199585
    8. '                           ' → logprob: -6.45272970199585
    9. '                            ' → logprob: -7.32772970199585
    10. '                              ' → logprob: -7.95272970199585

Token 819: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.07182808220386505
    2. '                                ' → logprob: -3.0718281269073486
    3. '                                
' → logprob: -3.9468281269073486
    4. '                                   ' → logprob: -7.6968278884887695
    5. '                              ' → logprob: -7.6968278884887695
    6. ' if' → logprob: -7.9468278884887695
    7. '[' → logprob: -8.19682788848877
    8. ')' → logprob: -8.32182788848877
    9. '<|end|>' → logprob: -8.32182788848877
    10. '							' → logprob: -8.44682788848877

Token 820: ' #
' (ID: 21888)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.8116894960403442
    2. ' if' → logprob: -1.0616894960403442
    3. 'if' → logprob: -1.9366894960403442
    4. '                                ' → logprob: -3.0616893768310547
    5. ')' → logprob: -5.186689376831055
    6. ''' → logprob: -5.936689376831055
    7. '                                   ' → logprob: -6.436689376831055
    8. '                                
' → logprob: -6.811689376831055
    9. ' )' → logprob: -7.061689376831055
    10. '                           ' → logprob: -7.436689376831055

Token 821: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.011413013562560081
    2. '                                ' → logprob: -5.386413097381592
    3. '                                
' → logprob: -5.386413097381592
    4. ' if' → logprob: -6.886413097381592
    5. '                                   ' → logprob: -8.136412620544434
    6. 'if' → logprob: -8.136412620544434
    7. '							' → logprob: -8.636412620544434
    8. '                              ' → logprob: -9.011412620544434
    9. ' (' → logprob: -9.886412620544434
    10. '<|end|>' → logprob: -10.386412620544434

Token 822: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26489558815956116
    2. ' if' → logprob: -1.5148955583572388
    3. '                               ' → logprob: -5.014895439147949
    4. 'dest' → logprob: -5.514895439147949
    5. 'If' → logprob: -7.264895439147949
    6. 'for' → logprob: -7.764895439147949
    7. 'dst' → logprob: -8.38989543914795
    8. ' opposite' → logprob: -8.38989543914795
    9. '#' (adapté à ' #') → logprob: -9.26489543914795
    10. 'token' → logprob: -9.51489543914795

Token 823: ' L' (ID: 451)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5883598327636719
    2. 'if' → logprob: -1.0883598327636719
    3. 'opp' → logprob: -3.088359832763672
    4. 'dest' → logprob: -3.338359832763672
    5. '                               ' → logprob: -4.463359832763672
    6. ' if' → logprob: -5.088359832763672
    7. '#' → logprob: -5.713359832763672
    8. ' opposite' → logprob: -6.338359832763672
    9. 'Opp' → logprob: -6.588359832763672
    10. ' opp' → logprob: -7.213359832763672

Token 824: '’ex' (ID: 20015)
  Prédit: ' opposite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -0.5792163014411926
    2. 'if' → logprob: -1.8292162418365479
    3. '                               ' → logprob: -2.204216241836548
    4. 'op' → logprob: -3.079216241836548
    5. 'opp' → logprob: -3.829216241836548
    6. ''op' → logprob: -3.954216241836548
    7. ' if' → logprob: -4.454216480255127
    8. 'e' → logprob: -4.829216480255127
    9. 'elif' → logprob: -4.954216480255127
    10. '                                   ' → logprob: -5.079216480255127

Token 825: 'tré' (ID: 143903)
  Prédit: 'tré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tré' → logprob: -0.23246397078037262
    2. 'imité' → logprob: -2.982464075088501
    3. 'ôté' → logprob: -3.107464075088501
    4. 'tr' → logprob: -3.607464075088501
    5. 'op' → logprob: -4.107463836669922
    6. 'étr' → logprob: -4.482463836669922
    7. 't' → logprob: -4.732463836669922
    8. 'trim' → logprob: -5.107463836669922
    9. 'ité' → logprob: -5.107463836669922
    10. 'é' → logprob: -5.232463836669922

Token 826: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.6451449394226074
    2. 'm' → logprob: -0.7701449394226074
    3. 'mite' → logprob: -4.895144939422607
    4. 'imité' → logprob: -7.020144939422607
    5. 'mé' → logprob: -7.145144939422607
    6. '}' → logprob: -7.645144939422607
    7. '#' → logprob: -7.645144939422607
    8. 'ité' → logprob: -8.145145416259766
    9. 'mitt' → logprob: -8.395145416259766
    10. '```' → logprob: -8.770145416259766

Token 827: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.06499852240085602
    2. 'e' → logprob: -2.8149986267089844
    3. 'ité' → logprob: -6.439998626708984
    4. 'ié' → logprob: -7.064998626708984
    5. 'eté' → logprob: -8.314998626708984
    6. 'y' → logprob: -9.564998626708984
    7. 'ie' → logprob: -9.939998626708984
    8. 'def' → logprob: -10.564998626708984
    9. 'té' → logprob: -10.564998626708984
    10. '           ' → logprob: -10.939998626708984

Token 828: ' où' (ID: 15113)
  Prédit: ' oppos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oppos' → logprob: -0.2862420678138733
    2. 'op' → logprob: -1.5362420082092285
    3. ' opp' → logprob: -4.0362420082092285
    4. 'opp' → logprob: -5.0362420082092285
    5. ' opposite' → logprob: -5.0362420082092285
    6. 'inverse' → logprob: -7.2862420082092285
    7. ' op' → logprob: -7.4112420082092285
    8. ''op' → logprob: -7.7862420082092285
    9. '_op' → logprob: -8.036242485046387
    10. '(op' → logprob: -9.286242485046387

Token 829: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.21263717114925385
    2. ' on' → logprob: -2.212637186050415
    3. 'l' → logprob: -3.337637186050415
    4. 'col' → logprob: -4.587636947631836
    5. ' l' → logprob: -5.087636947631836
    6. 'aj' → logprob: -5.212636947631836
    7. 'coll' → logprob: -5.212636947631836
    8. 'se' → logprob: -5.837636947631836
    9. 'il' → logprob: -6.212636947631836
    10. 's' → logprob: -6.337636947631836

Token 830: ' colle' (ID: 22001)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.3567211329936981
    2. 'aj' → logprob: -1.4817211627960205
    3. 'att' → logprob: -3.7317211627960205
    4. ' ajoute' → logprob: -4.356720924377441
    5. 'append' → logprob: -5.481720924377441
    6. 'coll' → logprob: -5.856720924377441
    7. 'dé' → logprob: -5.981720924377441
    8. 'va' → logprob: -6.106720924377441
    9. ' col' → logprob: -6.106720924377441
    10. 'attach' → logprob: -6.106720924377441

Token 831: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26493939757347107
    2. ' est' → logprob: -3.264939308166504
    3. ' opp' → logprob: -3.264939308166504
    4. ' ==' → logprob: -3.514939308166504
    5. '=' → logprob: -3.639939308166504
    6. '                               ' → logprob: -3.639939308166504
    7. ' oppos' → logprob: -3.889939308166504
    8. 'dest' → logprob: -4.014939308166504
    9. ' opposite' → logprob: -4.389939308166504
    10. '==' → logprob: -5.514939308166504

Token 832: ' train' (ID: 8513)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.30208128690719604
    2. 'op' → logprob: -2.552081346511841
    3. ' opposite' → logprob: -2.802081346511841
    4. 'm' → logprob: -3.052081346511841
    5. ' moved' → logprob: -3.427081346511841
    6. 'token' → logprob: -5.302081108093262
    7. 'next' → logprob: -5.427081108093262
    8. '```' → logprob: -5.427081108093262
    9. ' next' → logprob: -5.927081108093262
    10. 'train' → logprob: -5.927081108093262

Token 833: ' déplac' (ID: 195321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49794310331344604
    2. ' est' → logprob: -2.372943162918091
    3. 'est' → logprob: -2.497943162918091
    4. '=' → logprob: -2.497943162918091
    5. 'op' → logprob: -2.997943162918091
    6. ' oppos' → logprob: -3.872943162918091
    7. 's' → logprob: -4.497942924499512
    8. ' opposite' → logprob: -4.497942924499512
    9. ' opp' → logprob: -4.872942924499512
    10. 'opp' → logprob: -5.372942924499512

Token 834: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7971068620681763
    2. 'é' → logprob: -0.7971068620681763
    3. 'ent' → logprob: -3.6721067428588867
    4. 're' → logprob: -4.297106742858887
    5. 'est' → logprob: -4.297106742858887
    6. 'es' → logprob: -4.797106742858887
    7. 'ce' → logprob: -5.172106742858887
    8. 'ée' → logprob: -5.172106742858887
    9. 'ose' → logprob: -5.422106742858887
    10. 'er' → logprob: -5.422106742858887

Token 835: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8834733366966248
    2. ' est' → logprob: -1.6334733963012695
    3. ' oppos' → logprob: -2.3834733963012695
    4. ' opp' → logprob: -2.6334733963012695
    5. '_op' → logprob: -2.8834733963012695
    6. ' is' → logprob: -3.0084733963012695
    7. ' opposite' → logprob: -3.0084733963012695
    8. '=' → logprob: -4.1334733963012695
    9. 'opp' → logprob: -4.1334733963012695
    10. 'est' → logprob: -4.5084733963012695

Token 836: ' la' (ID: 557)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.047343622893095016
    2. 'state' → logprob: -3.7973437309265137
    3. '(dest' → logprob: -4.797343730926514
    4. ' dest' → logprob: -5.422343730926514
    5. 'connections' → logprob: -6.422343730926514
    6. 'l' → logprob: -6.422343730926514
    7. 'destination' → logprob: -6.797343730926514
    8. '(' → logprob: -7.047343730926514
    9. 'le' → logprob: -7.547343730926514
    10. '```' → logprob: -7.672343730926514

Token 837: ' ligne' (ID: 19583)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.338439404964447
    2. 'state' → logprob: -1.4634394645690918
    3. 'destination' → logprob: -3.713439464569092
    4. 'next' → logprob: -5.213439464569092
    5. ' state' → logprob: -5.588439464569092
    6. '#' → logprob: -5.963439464569092
    7. 'code' → logprob: -5.963439464569092
    8. '```' → logprob: -6.088439464569092
    9. '
' → logprob: -6.213439464569092
    10. ' dest' → logprob: -6.588439464569092

Token 838: ' destination' (ID: 13330)
  Prédit: ' oppos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oppos' → logprob: -0.921211302280426
    2. ' opp' → logprob: -1.4212112426757812
    3. ' opposite' → logprob: -1.9212112426757812
    4. 'dest' → logprob: -2.7962112426757812
    5. '                               ' → logprob: -3.0462112426757812
    6. ' =' → logprob: -3.1712112426757812
    7. 'opp' → logprob: -3.5462112426757812
    8. '=' → logprob: -5.171211242675781
    9. 'op' → logprob: -5.171211242675781
    10. '[' → logprob: -5.296211242675781

Token 839: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.1226555109024048
    2. ' oppos' → logprob: -1.2476555109024048
    3. ' =' → logprob: -2.3726553916931152
    4. 'est' → logprob: -2.6226553916931152
    5. ' opposite' → logprob: -3.3726553916931152
    6. '#' → logprob: -3.7476553916931152
    7. 'opp' → logprob: -3.8726553916931152
    8. ' opp' → logprob: -3.9976553916931152
    9. 'dest' → logprob: -3.9976553916931152
    10. '=' → logprob: -3.9976553916931152

Token 840: ' l' (ID: 305)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2507386207580566
    2. ''E' → logprob: -1.6257386207580566
    3. ' '' → logprob: -1.7507386207580566
    4. 'dest' → logprob: -1.8757386207580566
    5. '{'' → logprob: -3.2507386207580566
    6. ' opposite' → logprob: -3.7507386207580566
    7. '```' → logprob: -3.8757386207580566
    8. 'E' → logprob: -4.375738620758057
    9. ''op' → logprob: -4.625738620758057
    10. ' {'' → logprob: -4.625738620758057

Token 841: ''ex' (ID: 23472)
  Prédit: ''op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.25955677032470703
    2. ''autre' → logprob: -2.134556770324707
    3. 'op' → logprob: -2.509556770324707
    4. ''' → logprob: -4.384556770324707
    5. ''ex' → logprob: -5.759556770324707
    6. '{'' → logprob: -6.509556770324707
    7. ''d' → logprob: -6.634556770324707
    8. ' opposite' → logprob: -6.634556770324707
    9. ''s' → logprob: -7.134556770324707
    10. 'side' → logprob: -7.259556770324707

Token 842: 'tré' (ID: 143903)
  Prédit: 'tré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tré' → logprob: -0.0908655971288681
    2. 'op' → logprob: -3.5908656120300293
    3. 'dest' → logprob: -4.215865612030029
    4. 'tr' → logprob: -4.340865612030029
    5. 't' → logprob: -5.215865612030029
    6. 'p' → logprob: -5.340865612030029
    7. '```' → logprob: -5.340865612030029
    8. 'treme' → logprob: -5.465865612030029
    9. 'trim' → logprob: -6.465865612030029
    10. 'pos' → logprob: -6.590865612030029

Token 843: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.006053104996681213
    2. 'm' → logprob: -5.5060529708862305
    3. 'mite' → logprob: -6.8810529708862305
    4. 'ité' → logprob: -7.5060529708862305
    5. 'mé' → logprob: -8.25605297088623
    6. 'mie' → logprob: -10.63105297088623
    7. 'mi' → logprob: -10.88105297088623
    8. 'my' → logprob: -11.00605297088623
    9. 'imité' → logprob: -11.50605297088623
    10. '```' → logprob: -12.00605297088623

Token 844: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.38974568247795105
    2. 'e' → logprob: -1.1397457122802734
    3. 'y' → logprob: -6.764745712280273
    4. '(' → logprob: -7.389745712280273
    5. 'ité' → logprob: -8.014745712280273
    6. 'ée' → logprob: -8.389745712280273
    7. 'E' → logprob: -9.389745712280273
    8. '('' → logprob: -9.764745712280273
    9. ''' → logprob: -9.889745712280273
    10. 'ation' → logprob: -10.014745712280273

Token 845: ' oppos' (ID: 20679)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.16595934331417084
    2. ' oppos' → logprob: -2.165959358215332
    3. ' opposite' → logprob: -4.165959358215332
    4. 'opp' → logprob: -4.165959358215332
    5. ''op' → logprob: -6.165959358215332
    6. 'inverse' → logprob: -6.165959358215332
    7. ' opp' → logprob: -6.665959358215332
    8. '                               ' → logprob: -7.790959358215332
    9. ' op' → logprob: -8.665959358215332
    10. '_op' → logprob: -8.915959358215332

Token 846: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0066985576413571835
    2. 'é' → logprob: -5.3816986083984375
    3. 'éd' → logprob: -7.8816986083984375
    4. 'pos' → logprob: -7.8816986083984375
    5. 'e' → logprob: -8.131698608398438
    6. 'née' → logprob: -8.256698608398438
    7. 'ite' → logprob: -8.381698608398438
    8. 'os' → logprob: -9.006698608398438
    9. 'it' → logprob: -9.256698608398438
    10. 'ément' → logprob: -9.631698608398438

Token 847: ' à' (ID: 1221)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.2366352081298828
    2. ':' → logprob: -1.3616352081298828
    3. '.' → logprob: -1.4866352081298828
    4. 'dest' → logprob: -3.486635208129883
    5. ' if' → logprob: -3.611635208129883
    6. ',' → logprob: -3.736635208129883
    7. '=' → logprob: -3.861635208129883
    8. ' =' → logprob: -3.861635208129883
    9. ' of' → logprob: -3.861635208129883
    10. ')' → logprob: -4.111635208129883

Token 848: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.0003501242317724973
    2. ' dest' → logprob: -8.125349998474121
    3. '(dest' → logprob: -10.875349998474121
    4. '                               ' → logprob: -11.125349998474121
    5. '   ' → logprob: -12.250349998474121
    6. '	dest' → logprob: -12.625349998474121
    7. '```' → logprob: -13.250349998474121
    8. '
' → logprob: -13.500349998474121
    9. '                       ' → logprob: -13.500349998474121
    10. '                           ' → logprob: -13.625349998474121

Token 849: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -1.1398757123970427e-05
    2. 'side' → logprob: -12.750011444091797
    3. '_line' → logprob: -13.000011444091797
    4. 'Side' → logprob: -13.125011444091797
    5. '_SIDE' → logprob: -13.500011444091797
    6. ''_' → logprob: -13.875011444091797
    7. '_' → logprob: -15.250011444091797
    8. '```' → logprob: -15.250011444091797
    9. '_s' → logprob: -15.750011444091797
    10. ')' → logprob: -15.875011444091797

Token 850: ',
' (ID: 412)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.21757468581199646
    2. ' opposite' → logprob: -3.2175745964050293
    3. '.' → logprob: -3.9675745964050293
    4. ')' → logprob: -3.9675745964050293
    5. ' if' → logprob: -3.9675745964050293
    6. ':' → logprob: -3.9675745964050293
    7. '[::-' → logprob: -4.592574596405029
    8. '                           ' → logprob: -4.842574596405029
    9. '.replace' → logprob: -4.967574596405029
    10. ':
' → logprob: -5.092574596405029

Token 851: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7005146145820618
    2. ''' → logprob: -1.700514554977417
    3. '_' → logprob: -2.200514554977417
    4. '                                ' → logprob: -3.200514554977417
    5. '                                
' → logprob: -3.950514554977417
    6. '#' → logprob: -4.450514793395996
    7. ' (' → logprob: -4.575514793395996
    8. ')' → logprob: -4.700514793395996
    9. '                                   ' → logprob: -4.700514793395996
    10. '.' → logprob: -4.700514793395996

Token 852: ' #' (ID: 1069)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.035064179450273514
    2. ' opposite' → logprob: -4.285064220428467
    3. '                                
' → logprob: -4.535064220428467
    4. ''' → logprob: -6.035064220428467
    5. '                                ' → logprob: -6.160064220428467
    6. ' oppos' → logprob: -7.160064220428467
    7. ')' → logprob: -7.410064220428467
    8. ' '' → logprob: -7.785064220428467
    9. '```' → logprob: -7.910064220428467
    10. '                                   ' → logprob: -8.410063743591309

Token 853: ' car' (ID: 1669)
  Prédit: ' opposite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -0.6789161562919617
    2. '                               ' → logprob: -1.5539162158966064
    3. 'op' → logprob: -2.0539162158966064
    4. ' oppos' → logprob: -2.4289162158966064
    5. ' opp' → logprob: -3.6789162158966064
    6. '#' → logprob: -4.053915977478027
    7. ' op' → logprob: -5.178915977478027
    8. '                                
' → logprob: -6.178915977478027
    9. 'opp' → logprob: -6.928915977478027
    10. '                                   ' → logprob: -6.928915977478027

Token 854: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2763652503490448
    2. 'dest' → logprob: -2.026365280151367
    3. '                               ' → logprob: -3.526365280151367
    4. 'on' → logprob: -4.151365280151367
    5. ' le' → logprob: -4.776365280151367
    6. ' we' → logprob: -5.026365280151367
    7. ' dest' → logprob: -5.151365280151367
    8. 'we' → logprob: -5.401365280151367
    9. 'le' → logprob: -5.401365280151367
    10. ' the' → logprob: -5.651365280151367

Token 855: ' mouvement' (ID: 62236)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.23003561794757843
    2. ' moved' → logprob: -2.2300355434417725
    3. ' opposite' → logprob: -4.480035781860352
    4. 'm' → logprob: -4.480035781860352
    5. ' code' → logprob: -4.605035781860352
    6. ' next' → logprob: -4.730035781860352
    7. ' dest' → logprob: -4.980035781860352
    8. ' train' → logprob: -5.355035781860352
    9. '#' → logprob: -5.480035781860352
    10. 'next' → logprob: -5.480035781860352

Token 856: ' arrive' (ID: 18338)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0513006448745728
    2. ' oppos' → logprob: -2.176300525665283
    3. ' se' → logprob: -2.301300525665283
    4. 's' → logprob: -2.551300525665283
    5. ' s' → logprob: -2.676300525665283
    6. 'inverse' → logprob: -3.051300525665283
    7. ' opposite' → logprob: -3.301300525665283
    8. ' inverse' → logprob: -3.301300525665283
    9. 'op' → logprob: -3.426300525665283
    10. ' is' → logprob: -3.551300525665283

Token 857: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7646932601928711
    2. ')' → logprob: -1.389693260192871
    3. 'from' → logprob: -2.514693260192871
    4. 's' → logprob: -3.514693260192871
    5. 'par' → logprob: -4.014693260192871
    6. ' par' → logprob: -4.014693260192871
    7. '_from' → logprob: -4.139693260192871
    8. ' at' → logprob: -4.389693260192871
    9. ' toujours' → logprob: -4.639693260192871
    10. '```' → logprob: -4.889693260192871

Token 858: ' cette' (ID: 7696)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.596147358417511
    2. ''' → logprob: -1.5961472988128662
    3. 'l' → logprob: -2.596147298812866
    4. 'the' → logprob: -3.221147298812866
    5. ''E' → logprob: -3.346147298812866
    6. '('' → logprob: -3.846147298812866
    7. 'E' → logprob: -4.096147537231445
    8. '(' → logprob: -4.471147537231445
    9. '(E' → logprob: -5.096147537231445
    10. 'op' → logprob: -5.346147537231445

Token 859: ' extr' (ID: 15674)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5999982357025146
    2. 'op' → logprob: -2.0999982357025146
    3. ''' → logprob: -2.5999982357025146
    4. ' _' → logprob: -3.5999982357025146
    5. ')' → logprob: -3.7249982357025146
    6. 'dest' → logprob: -3.8499982357025146
    7. '_side' → logprob: -4.099998474121094
    8. '_end' → logprob: -4.099998474121094
    9. 'end' → logprob: -4.349998474121094
    10. ''_' → logprob: -4.599998474121094

Token 860: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.14867211878299713
    2. 'rem' → logprob: -2.273672103881836
    3. 'tré' → logprob: -4.148672103881836
    4. 'ré' → logprob: -4.898672103881836
    5. 'ité' → logprob: -5.773672103881836
    6. 'ême' → logprob: -6.273672103881836
    7. 'imité' → logprob: -6.523672103881836
    8. 'em' → logprob: -6.898672103881836
    9. 're' → logprob: -7.148672103881836
    10. 'ém' → logprob: -7.648672103881836

Token 861: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.02781793847680092
    2. 'mé' → logprob: -4.277817726135254
    3. 'ité' → logprob: -5.277817726135254
    4. 'té' → logprob: -5.652817726135254
    5. 't' → logprob: -6.902817726135254
    6. 'rité' → logprob: -7.027817726135254
    7. 'm' → logprob: -7.652817726135254
    8. 'mite' → logprob: -7.902817726135254
    9. 'r' → logprob: -8.902817726135254
    10. 'mine' → logprob: -9.152817726135254

Token 862: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2721526324748993
    2. 'e' → logprob: -1.7721526622772217
    3. 'ation' → logprob: -2.7721526622772217
    4. 'ion' → logprob: -5.772152423858643
    5. 'ée' → logprob: -7.522152423858643
    6. 'tion' → logprob: -8.5221529006958
    7. '(' → logprob: -8.8971529006958
    8. 'ité' → logprob: -9.3971529006958
    9. 'ination' → logprob: -9.3971529006958
    10. 'ié' → logprob: -9.3971529006958

Token 863: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1982467621564865
    2. ':' → logprob: -2.823246717453003
    3. ' oppos' → logprob: -3.323246717453003
    4. ',' → logprob: -3.948246717453003
    5. '_' → logprob: -4.073246955871582
    6. ' opposite' → logprob: -4.448246955871582
    7. '_op' → logprob: -4.698246955871582
    8. '```' → logprob: -5.323246955871582
    9. 'op' → logprob: -5.448246955871582
    10. 'Opp' → logprob: -5.948246955871582

Token 864: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.003729418385773897
    2. '                                
' → logprob: -7.003729343414307
    3. ' if' → logprob: -7.128729343414307
    4. '                                ' → logprob: -7.628729343414307
    5. '                                   ' → logprob: -7.878729343414307
    6. ' opposite' → logprob: -8.128729820251465
    7. 'if' → logprob: -8.503729820251465
    8. '```' → logprob: -9.253729820251465
    9. '							' → logprob: -9.378729820251465
    10. ' (' → logprob: -9.503729820251465

Token 865: ' #' (ID: 1069)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.3271164298057556
    2. ' opp' → logprob: -2.5771164894104004
    3. ' opposite' → logprob: -2.7021164894104004
    4. 'op' → logprob: -2.8271164894104004
    5. 'dest' → logprob: -3.8271164894104004
    6. 'if' → logprob: -4.3271164894104
    7. ' if' → logprob: -4.4521164894104
    8. 'opp' → logprob: -4.4521164894104
    9. '                                
' → logprob: -5.0771164894104
    10. '                                   ' → logprob: -5.7021164894104

Token 866: ' Exemple' (ID: 142783)
  Prédit: ' opp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opp' → logprob: -1.043265461921692
    2. ' opposite' → logprob: -1.543265461921692
    3. 'op' → logprob: -1.668265461921692
    4. '                               ' → logprob: -1.918265461921692
    5. 'dest' → logprob: -3.1682653427124023
    6. 'opp' → logprob: -3.5432653427124023
    7. ' if' → logprob: -4.918265342712402
    8. '                                   ' → logprob: -5.043265342712402
    9. ' dest' → logprob: -5.418265342712402
    10. 'if' → logprob: -5.793265342712402

Token 867: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4679376184940338
    2. ' =' → logprob: -2.092937707901001
    3. ' :' → logprob: -2.342937707901001
    4. ' if' → logprob: -3.467937707901001
    5. 'dest' → logprob: -3.717937707901001
    6. '                               ' → logprob: -4.467937469482422
    7. ''' → logprob: -4.592937469482422
    8. ' (' → logprob: -4.842937469482422
    9. '```' → logprob: -4.967937469482422
    10. '#' → logprob: -4.967937469482422

Token 868: ' si' (ID: 1784)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6996346712112427
    2. '#' → logprob: -1.0746346712112427
    3. ' if' → logprob: -2.574634552001953
    4. '```' → logprob: -3.699634552001953
    5. 'if' → logprob: -4.074634552001953
    6. 'dest' → logprob: -4.324634552001953
    7. ' #' → logprob: -4.574634552001953
    8. '                                   ' → logprob: -4.824634552001953
    9. ' dest' → logprob: -5.949634552001953
    10. '``' → logprob: -6.574634552001953

Token 869: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.0006394077208824456
    2. ' dest' → logprob: -7.37563943862915
    3. 'side' → logprob: -11.750638961791992
    4. '(dest' → logprob: -13.000638961791992
    5. '	dest' → logprob: -14.250638961791992
    6. ' side' → logprob: -14.750638961791992
    7. '#' → logprob: -15.625638961791992
    8. 'destination' → logprob: -15.750638961791992
    9. '```' → logprob: -15.750638961791992
    10. '               ' → logprob: -15.875638961791992

Token 870: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.00044949972652830184
    2. '_line' → logprob: -7.7504496574401855
    3. '_SIDE' → logprob: -12.250449180603027
    4. '_' → logprob: -12.625449180603027
    5. 'side' → logprob: -12.875449180603027
    6. 'Side' → logprob: -13.250449180603027
    7. '_s' → logprob: -13.375449180603027
    8. '```' → logprob: -13.750449180603027
    9. ''_' → logprob: -14.125449180603027
    10. ')' → logprob: -15.000449180603027

Token 871: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22206410765647888
    2. '==' → logprob: -1.7220641374588013
    3. '=='' → logprob: -4.097064018249512
    4. ' !=' → logprob: -6.472064018249512
    5. ' is' → logprob: -7.597064018249512
    6. '=' → logprob: -7.847064018249512
    7. '!=' → logprob: -8.347064018249512
    8. 'is' → logprob: -8.597064018249512
    9. ')' → logprob: -8.722064018249512
    10. ']' → logprob: -9.097064018249512

Token 872: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.399361252784729
    2. ''' → logprob: -1.274361252784729
    3. ' '' → logprob: -3.0243611335754395
    4. ' ' → logprob: -8.399361610412598
    5. '   ' → logprob: -8.774361610412598
    6. 'E' → logprob: -8.774361610412598
    7. ''S' → logprob: -9.024361610412598
    8. 'W' → logprob: -9.399361610412598
    9. ''O' → logprob: -9.774361610412598
    10. '’E' → logprob: -10.274361610412598

Token 873: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3491078019142151
    2. 'E' → logprob: -1.2241077423095703
    3. ''E' → logprob: -7.97410774230957
    4. ''' → logprob: -8.34910774230957
    5. '"W' → logprob: -10.59910774230957
    6. 'O' → logprob: -10.72410774230957
    7. '"E' → logprob: -11.97410774230957
    8. ' W' → logprob: -11.97410774230957
    9. 'N' → logprob: -12.78660774230957
    10. '"' → logprob: -12.97410774230957

Token 874: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.09557368606328964
    2. ',' → logprob: -3.720573663711548
    3. ''' → logprob: -3.845573663711548
    4. '':
' → logprob: -4.345573902130127
    5. ''):
' → logprob: -4.470573902130127
    6. ':
' → logprob: -4.970573902130127
    7. 'E' → logprob: -5.970573902130127
    8. ')',' → logprob: -6.220573902130127
    9. '',
' → logprob: -6.470573902130127
    10. ':' → logprob: -6.595573902130127

Token 875: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5776767134666443
    2. ',' → logprob: -1.452676773071289
    3. ':' → logprob: -2.077676773071289
    4. '                           ' → logprob: -3.202676773071289
    5. '',' → logprob: -4.827676773071289
    6. '                               ' → logprob: -5.077676773071289
    7. '):
' → logprob: -5.327676773071289
    8. ' and' → logprob: -5.452676773071289
    9. ' ==' → logprob: -5.952676773071289
    10. '==' → logprob: -6.077676773071289

Token 876: 'extr' (ID: 78593)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.217361330986023
    2. '#' → logprob: -1.342361330986023
    3. 'W' → logprob: -1.842361330986023
    4. 'dest' → logprob: -2.8423614501953125
    5. 'don' → logprob: -3.5923614501953125
    6. 'c' → logprob: -3.9673614501953125
    7. 'car' → logprob: -4.0923614501953125
    8. 'on' → logprob: -4.2173614501953125
    9. '                           ' → logprob: -4.4673614501953125
    10. 'op' → logprob: -4.8423614501953125

Token 877: 'é' (ID: 377)
  Prédit: 'érieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.27108243107795715
    2. 'érieure' → logprob: -2.2710824012756348
    3. 'ême' → logprob: -4.021082401275635
    4. 'rie' → logprob: -4.021082401275635
    5. 'ém' → logprob: -4.146082401275635
    6. 'em' → logprob: -4.271082401275635
    7. 'é' → logprob: -4.521082401275635
    8. 'rem' → logprob: -4.771082401275635
    9. 'tré' → logprob: -5.396082401275635
    10. '=' → logprob: -5.521082401275635

Token 878: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.1630866527557373
    2. 'm' → logprob: -2.0380866527557373
    3. 'mite' → logprob: -4.038086891174316
    4. 'ité' → logprob: -6.538086891174316
    5. 'mé' → logprob: -7.538086891174316
    6. 'imité' → logprob: -8.663086891174316
    7. 'mitt' → logprob: -9.788086891174316
    8. 'mine' → logprob: -10.038086891174316
    9. 'té' → logprob: -10.163086891174316
    10. ')' → logprob: -10.163086891174316

Token 879: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0014046367723494768
    2. 'e' → logprob: -7.251404762268066
    3. 'y' → logprob: -8.376404762268066
    4. 'ité' → logprob: -8.876404762268066
    5. ')' → logprob: -9.251404762268066
    6. '')' → logprob: -10.001404762268066
    7. 'té' → logprob: -10.001404762268066
    8. '('' → logprob: -10.376404762268066
    9. 'ié' → logprob: -11.251404762268066
    10. 'eté' → logprob: -11.376404762268066

Token 880: ' ou' (ID: 2031)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6534726023674011
    2. ' oppos' → logprob: -2.028472661972046
    3. ' opposite' → logprob: -2.403472661972046
    4. ' opp' → logprob: -2.903472661972046
    5. '),' → logprob: -2.903472661972046
    6. ',' → logprob: -3.528472661972046
    7. ' '' → logprob: -3.903472661972046
    8. 'O' → logprob: -4.028472423553467
    9. ''),' → logprob: -4.403472423553467
    10. ' est' → logprob: -4.403472423553467

Token 881: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.011475122533738613
    2. 'E' → logprob: -4.761475086212158
    3. 'e' → logprob: -6.886475086212158
    4. '`' → logprob: -7.761475086212158
    5. '```' → logprob: -7.761475086212158
    6. 'Est' → logprob: -8.761475563049316
    7. 'st' → logprob: -9.011475563049316
    8. 's' → logprob: -9.761475563049316
    9. '``' → logprob: -9.761475563049316
    10. ')' → logprob: -9.761475563049316

Token 882: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07435672730207443
    2. ''),' → logprob: -2.6993567943573
    3. '),
' → logprob: -6.449356555938721
    4. ',' → logprob: -6.949356555938721
    5. ')' → logprob: -7.449356555938721
    6. 'E' → logprob: -7.949356555938721
    7. ' ),' → logprob: -8.074357032775879
    8. '):
' → logprob: -8.574357032775879
    9. ''),
' → logprob: -8.699357032775879
    10. '')' → logprob: -10.199357032775879

Token 883: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.017398348078131676
    2. '                                   ' → logprob: -4.642398357391357
    3. '                                ' → logprob: -5.267398357391357
    4. ' if' → logprob: -7.517398357391357
    5. '                           ' → logprob: -8.2673978805542
    6. '#' → logprob: -8.6423978805542
    7. 'if' → logprob: -8.6423978805542
    8. '...' → logprob: -9.2673978805542
    9. '                                  ' → logprob: -9.2673978805542
    10. '                                       ' → logprob: -9.3923978805542

Token 884: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4174151122570038
    2. '                               ' → logprob: -1.1674151420593262
    3. '                                   ' → logprob: -4.542415142059326
    4. ' #' → logprob: -4.792415142059326
    5. '                                ' → logprob: -5.667415142059326
    6. ' if' → logprob: -6.542415142059326
    7. ' alors' → logprob: -7.042415142059326
    8. ' ' → logprob: -7.292415142059326
    9. '                           ' → logprob: -7.417415142059326
    10. ' ' → logprob: -7.667415142059326

Token 885: ' alors' (ID: 17971)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5715206861495972
    2. '#' → logprob: -1.1965206861495972
    3. 'dest' → logprob: -3.1965208053588867
    4. '                                   ' → logprob: -3.6965208053588867
    5. '                                ' → logprob: -4.571520805358887
    6. ' #' → logprob: -4.696520805358887
    7. ' on' → logprob: -4.821520805358887
    8. '                           ' → logprob: -5.196520805358887
    9. ' alors' → logprob: -5.446520805358887
    10. ' if' → logprob: -5.696520805358887

Token 886: ' on' (ID: 402)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.16637034714221954
    2. 'op' → logprob: -2.541370391845703
    3. ' opposite' → logprob: -3.541370391845703
    4. ' dest' → logprob: -4.041370391845703
    5. 'new' → logprob: -5.166370391845703
    6. ' opp' → logprob: -5.291370391845703
    7. ' new' → logprob: -6.291370391845703
    8. 'append' → logprob: -6.291370391845703
    9. '           ' → logprob: -6.666370391845703
    10. 'side' → logprob: -6.791370391845703

Token 887: ' ajoute' (ID: 91611)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.11471392959356308
    2. 'do' → logprob: -2.7397139072418213
    3. 'aj' → logprob: -3.9897139072418213
    4. ' doit' → logprob: -4.9897141456604
    5. 'append' → logprob: -5.6147141456604
    6. 'op' → logprob: -6.3647141456604
    7. 'met' → logprob: -6.7397141456604
    8. 'coll' → logprob: -7.1147141456604
    9. 'concat' → logprob: -7.2397141456604
    10. ' ajoute' → logprob: -7.3647141456604

Token 888: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9872360229492188
    2. ''' → logprob: -1.3622360229492188
    3. ''m' → logprob: -1.8622360229492188
    4. ' moved' → logprob: -1.8622360229492188
    5. ' '' → logprob: -3.4872360229492188
    6. 'dest' → logprob: -4.737236022949219
    7. ''s' → logprob: -6.112236022949219
    8. '_' → logprob: -6.487236022949219
    9. ')' → logprob: -6.487236022949219
    10. '                           ' → logprob: -6.612236022949219

Token 889: ' à' (ID: 1221)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0017546684248372912
    2. '[' → logprob: -6.6267547607421875
    3. ')' → logprob: -9.251754760742188
    4. '+' → logprob: -9.751754760742188
    5. '```' → logprob: -9.751754760742188
    6. ' +' → logprob: -9.876754760742188
    7. '=' → logprob: -10.501754760742188
    8. '[-' → logprob: -10.751754760742188
    9. '                               ' → logprob: -11.001754760742188
    10. '                           ' → logprob: -11.126754760742188

Token 890: ' l' (ID: 305)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.08581016957759857
    2. 'the' → logprob: -2.7108101844787598
    3. ' the' → logprob: -4.58581018447876
    4. ''' → logprob: -6.58581018447876
    5. ' dest' → logprob: -6.58581018447876
    6. ''d' → logprob: -7.08581018447876
    7. 'l' → logprob: -8.210809707641602
    8. '```' → logprob: -8.210809707641602
    9. ''end' → logprob: -8.335809707641602
    10. '(dest' → logprob: -8.335809707641602

Token 891: '’ex' (ID: 20015)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.03325717896223068
    2. 'E' → logprob: -3.783257246017456
    3. ''e' → logprob: -5.408257007598877
    4. ''end' → logprob: -6.283257007598877
    5. 'e' → logprob: -7.033257007598877
    6. ''' → logprob: -7.033257007598877
    7. '```' → logprob: -7.658257007598877
    8. '['' → logprob: -7.658257007598877
    9. '’E' → logprob: -8.533257484436035
    10. '`' → logprob: -8.658257484436035

Token 892: 'tré' (ID: 143903)
  Prédit: 'tré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tré' → logprob: -0.7894548773765564
    2. '`' → logprob: -2.164454936981201
    3. '```' → logprob: -2.539454936981201
    4. 'extr' → logprob: -3.039454936981201
    5. ''autre' → logprob: -3.164454936981201
    6. 'ôté' → logprob: -3.289454936981201
    7. '``' → logprob: -3.664454936981201
    8. 'est' → logprob: -3.789454936981201
    9. 'ast' → logprob: -4.039454936981201
    10. 'E' → logprob: -4.039454936981201

Token 893: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.13241340219974518
    2. 'té' → logprob: -3.132413387298584
    3. 't' → logprob: -3.507413387298584
    4. 'tim' → logprob: -4.257413387298584
    5. 'ité' → logprob: -4.632413387298584
    6. 'mé' → logprob: -4.632413387298584
    7. 'rité' → logprob: -6.132413387298584
    8. 'mi' → logprob: -6.257413387298584
    9. 'imité' → logprob: -6.382413387298584
    10. 'te' → logprob: -6.632413387298584

Token 894: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.20917674899101257
    2. 'ée' → logprob: -2.709176778793335
    3. 'e' → logprob: -2.959176778793335
    4. 'ité' → logprob: -3.334176778793335
    5. 'ation' → logprob: -4.459176540374756
    6. 'ôté' → logprob: -5.209176540374756
    7. 'eté' → logprob: -5.834176540374756
    8. 'iné' → logprob: -5.834176540374756
    9. ''' → logprob: -6.084176540374756
    10. 'E' → logprob: -6.709176540374756

Token 895: ' est' (ID: 893)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.19427341222763062
    2. ''E' → logprob: -2.1942734718322754
    3. ' E' → logprob: -3.9442734718322754
    4. ''' → logprob: -4.569273471832275
    5. 'op' → logprob: -4.694273471832275
    6. ''op' → logprob: -4.944273471832275
    7. ' opposite' → logprob: -5.444273471832275
    8. ' opp' → logprob: -5.694273471832275
    9. ' oppos' → logprob: -6.069273471832275
    10. ' '' → logprob: -6.069273471832275

Token 896: '
' (ID: 198)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.920167088508606
    2. '                               ' → logprob: -1.045167088508606
    3. '                                   ' → logprob: -3.1701669692993164
    4. ')' → logprob: -3.1701669692993164
    5. '                           ' → logprob: -3.5451669692993164
    6. '')' → logprob: -4.420166969299316
    7. ' (' → logprob: -4.545166969299316
    8. '                       ' → logprob: -4.545166969299316
    9. '                                       ' → logprob: -4.795166969299316
    10. ''E' → logprob: -4.795166969299316

Token 897: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0141422338783741
    2. ''' → logprob: -5.514142036437988
    3. ' (' → logprob: -6.014142036437988
    4. '                           ' → logprob: -6.764142036437988
    5. '                                   ' → logprob: -7.139142036437988
    6. '.' → logprob: -7.389142036437988
    7. '')' → logprob: -7.514142036437988
    8. '                                
' → logprob: -7.514142036437988
    9. ' if' → logprob: -7.889142036437988
    10. ',' → logprob: -7.889142036437988

Token 898: ' #
' (ID: 21888)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7553803324699402
    2. ':
' → logprob: -1.380380392074585
    3. ' if' → logprob: -2.380380392074585
    4. ''' → logprob: -3.130380392074585
    5. ':' → logprob: -3.255380392074585
    6. 'if' → logprob: -3.880380392074585
    7. '                                   ' → logprob: -4.380380153656006
    8. '                           ' → logprob: -4.505380153656006
    9. '):
' → logprob: -4.630380153656006
    10. ' :
' → logprob: -5.130380153656006

Token 899: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.019899355247616768
    2. ' if' → logprob: -4.519899368286133
    3. 'if' → logprob: -5.769899368286133
    4. '                                   ' → logprob: -6.144899368286133
    5. '                                
' → logprob: -6.769899368286133
    6. '                                ' → logprob: -7.519899368286133
    7. '                           ' → logprob: -7.769899368286133
    8. ' opposite' → logprob: -8.894899368286133
    9. '```' → logprob: -8.894899368286133
    10. 'W' → logprob: -9.144899368286133

Token 900: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8188431262969971
    2. 'op' → logprob: -0.8188431262969971
    3. 'opp' → logprob: -3.068843126296997
    4. 'other' → logprob: -3.443843126296997
    5. '                               ' → logprob: -4.443842887878418
    6. 'new' → logprob: -4.568842887878418
    7. 'dest' → logprob: -5.443842887878418
    8. 'append' → logprob: -5.693842887878418
    9. 'inv' → logprob: -6.068842887878418
    10. 'insert' → logprob: -6.193842887878418

Token 901: ' Donc' (ID: 88837)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5944808125495911
    2. 'if' → logprob: -1.4694807529449463
    3. 'opp' → logprob: -1.7194807529449463
    4. 'dest' → logprob: -4.219480991363525
    5. '#' → logprob: -5.219480991363525
    6. 'append' → logprob: -5.594480991363525
    7. 'insert' → logprob: -5.719480991363525
    8. 'other' → logprob: -5.719480991363525
    9. 'inv' → logprob: -5.969480991363525
    10. '                               ' → logprob: -6.344480991363525

Token 902: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5916774272918701
    2. 'op' → logprob: -1.4666774272918701
    3. 'dest' → logprob: -1.9666774272918701
    4. '                               ' → logprob: -3.46667742729187
    5. 'append' → logprob: -4.341677665710449
    6. 'opp' → logprob: -4.341677665710449
    7. ' if' → logprob: -5.216677665710449
    8. 'new' → logprob: -6.091677665710449
    9. 'insert' → logprob: -6.216677665710449
    10. '```' → logprob: -6.716677665710449

Token 903: ' définit' (ID: 89835)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3217404782772064
    2. 'opp' → logprob: -2.1967403888702393
    3. 'continue' → logprob: -2.9467403888702393
    4. '#' → logprob: -3.3217403888702393
    5. 'aj' → logprob: -3.3217403888702393
    6. 'add' → logprob: -5.321740627288818
    7. 'contin' → logprob: -5.446740627288818
    8. 'append' → logprob: -5.446740627288818
    9. 'adds' → logprob: -5.696740627288818
    10. 'if' → logprob: -5.946740627288818

Token 904: ' la' (ID: 557)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8351556062698364
    2. 'append' → logprob: -1.3351556062698364
    3. 'dest' → logprob: -2.210155487060547
    4. 'insert' → logprob: -3.085155487060547
    5. 'add' → logprob: -3.210155487060547
    6. 'opp' → logprob: -3.585155487060547
    7. 'attach' → logprob: -4.085155487060547
    8. '                               ' → logprob: -4.335155487060547
    9. '`' → logprob: -4.335155487060547
    10. '```' → logprob: -4.585155487060547

Token 905: ' fonction' (ID: 17610)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.09267627447843552
    2. 'opp' → logprob: -3.3426761627197266
    3. 'dest' → logprob: -3.8426761627197266
    4. 'if' → logprob: -4.967676162719727
    5. 'new' → logprob: -5.342676162719727
    6. 'other' → logprob: -5.342676162719727
    7. 'append' → logprob: -5.592676162719727
    8. 'def' → logprob: -5.592676162719727
    9. 'insert' → logprob: -5.967676162719727
    10. 'add' → logprob: -6.217676162719727

Token 906: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000981839606538415
    2. ' def' → logprob: -7.12598180770874
    3. 'op' → logprob: -8.875982284545898
    4. 'opp' → logprob: -11.250982284545898
    5. '                               ' → logprob: -11.250982284545898
    6. ' opposite' → logprob: -12.750982284545898
    7. '                           ' → logprob: -13.500982284545898
    8. '```' → logprob: -13.500982284545898
    9. '                                   ' → logprob: -13.625982284545898
    10. '
' → logprob: -13.750982284545898

Token 907: ''aj' (ID: 116735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01582542061805725
    2. 'op' → logprob: -4.390825271606445
    3. 'lambda' → logprob: -6.515825271606445
    4. '```' → logprob: -7.515825271606445
    5. 'f' → logprob: -8.015825271606445
    6. 'opp' → logprob: -8.390825271606445
    7. 'append' → logprob: -8.515825271606445
    8. '`' → logprob: -9.640825271606445
    9. 'app' → logprob: -9.890825271606445
    10. 'adj' → logprob: -10.015825271606445

Token 908: 'out' (ID: 468)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.5242323875427246
    2. 'out' → logprob: -0.8992323875427246
    3. 'oute' → logprob: -7.149232387542725
    4. 'ust' → logprob: -8.899232864379883
    5. 'o' → logprob: -9.524232864379883
    6. 'j' → logprob: -10.649232864379883
    7. 'outez' → logprob: -10.649232864379883
    8. 'oint' → logprob: -11.149232864379883
    9. '_outer' → logprob: -11.774232864379883
    10. '```' → logprob: -12.024232864379883

Token 909: ' plus' (ID: 2932)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010036191903054714
    2. '                               ' → logprob: -5.385035991668701
    3. '                           ' → logprob: -5.885035991668701
    4. '
' → logprob: -7.135035991668701
    5. ' def' → logprob: -7.135035991668701
    6. ' =' → logprob: -8.01003646850586
    7. '=' → logprob: -8.26003646850586
    8. '                                   ' → logprob: -9.26003646850586
    9. '                       ' → logprob: -9.76003646850586
    10. '```' → logprob: -10.01003646850586

Token 910: ' bas' (ID: 3222)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2011578530073166
    2. '                               ' → logprob: -1.826157808303833
    3. '                                   ' → logprob: -4.951158046722412
    4. ' =' → logprob: -5.326158046722412
    5. '=' → logprob: -5.701158046722412
    6. '```' → logprob: -6.451158046722412
    7. '                           ' → logprob: -6.576158046722412
    8. '                                ' → logprob: -6.701158046722412
    9. '                       ' → logprob: -8.076157569885254
    10. '                                       ' → logprob: -8.201157569885254

Token 911: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23617026209831238
    2. '                               ' → logprob: -1.7361702919006348
    3. '                           ' → logprob: -3.8611702919006348
    4. '
' → logprob: -4.861170291900635
    5. '```' → logprob: -6.111170291900635
    6. '                                
' → logprob: -6.736170291900635
    7. '                            
' → logprob: -7.861170291900635
    8. '\' → logprob: -8.236169815063477
    9. '                            ' → logprob: -8.486169815063477
    10. '                                ' → logprob: -8.736169815063477

Token 912: '                               ' (ID: 2419)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15154199302196503
    2. '                               ' → logprob: -2.0265419483184814
    3. '                           ' → logprob: -5.6515421867370605
    4. '
' → logprob: -6.0265421867370605
    5. '```' → logprob: -6.2765421867370605
    6. '                                
' → logprob: -8.026541709899902
    7. ' def' → logprob: -9.026541709899902
    8. '                            
' → logprob: -9.026541709899902
    9. '                                   ' → logprob: -9.151541709899902
    10. '\
' → logprob: -9.276541709899902

Token 913: ' new' (ID: 620)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3206801414489746
    2. '                               ' → logprob: -1.3206801414489746
    3. '                                
' → logprob: -5.820680141448975
    4. '                           ' → logprob: -6.320680141448975
    5. '                                   ' → logprob: -7.445680141448975
    6. '                                ' → logprob: -7.945680141448975
    7. '```' → logprob: -7.945680141448975
    8. ' def' → logprob: -8.070680618286133
    9. '#' → logprob: -8.320680618286133
    10. '                              ' → logprob: -8.445680618286133

Token 914: '_dest' (ID: 78932)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.42321324348449707
    2. '_train' → logprob: -1.548213243484497
    3. '_line' → logprob: -2.423213243484497
    4. 'state' → logprob: -4.673213005065918
    5. '_dest' → logprob: -4.923213005065918
    6. 'def' → logprob: -5.173213005065918
    7. '_' → logprob: -5.423213005065918
    8. '_lines' → logprob: -5.548213005065918
    9. '_states' → logprob: -6.298213005065918
    10. 'dest' → logprob: -6.548213005065918

Token 915: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.0026750608813017607
    2. '_line' → logprob: -6.3776750564575195
    3. '_side' → logprob: -8.50267505645752
    4. ' =' → logprob: -8.50267505645752
    5. 'train' → logprob: -9.00267505645752
    6. ')_' → logprob: -9.37767505645752
    7. '_' → logprob: -9.87767505645752
    8. '```' → logprob: -10.12767505645752
    9. '=' → logprob: -10.25267505645752
    10. '=_' → logprob: -10.37767505645752

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002088338136673
    2. ' =' → logprob: -2.3502087593078613
    3. '=
' → logprob: -15.10020923614502
    4. '=""' → logprob: -15.22520923614502
    5. '=len' → logprob: -15.35020923614502
    6. '=new' → logprob: -16.100208282470703
    7. '=''' → logprob: -16.100208282470703
    8. '=

' → logprob: -16.100208282470703
    9. '＝' → logprob: -16.225208282470703
    10. '=None' → logprob: -16.475208282470703

Token 917: ' append' (ID: 17147)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25436100363731384
    2. '(m' → logprob: -1.6293610334396362
    3. ' moved' → logprob: -4.879361152648926
    4. 'dest' → logprob: -5.129361152648926
    5. ' (' → logprob: -5.379361152648926
    6. '(dest' → logprob: -5.379361152648926
    7. '(' → logprob: -6.254361152648926
    8. 'added' → logprob: -6.879361152648926
    9. 'add' → logprob: -7.129361152648926
    10. 'new' → logprob: -7.629361152648926

Token 918: '_train' (ID: 16872)
  Prédit: '(dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.06520984321832657
    2. '_train' → logprob: -3.9402098655700684
    3. '_string' → logprob: -4.190209865570068
    4. '_to' → logprob: -4.940209865570068
    5. 'ed' → logprob: -5.190209865570068
    6. '_str' → logprob: -5.565209865570068
    7. '_at' → logprob: -6.065209865570068
    8. 'm' → logprob: -6.315209865570068
    9. '(m' → logprob: -6.815209865570068
    10. 'dest' → logprob: -6.815209865570068

Token 919: '(dest' (ID: 57370)
  Prédit: '(dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.0003086486831307411
    2. 'dest' → logprob: -8.375308990478516
    3. '(destination' → logprob: -10.375308990478516
    4. '(' → logprob: -10.500308990478516
    5. '(dst' → logprob: -12.375308990478516
    6. '(d' → logprob: -12.750308990478516
    7. '((' → logprob: -13.000308990478516
    8. ' (' → logprob: -13.125308990478516
    9. '(def' → logprob: -13.375308990478516
    10. '(state' → logprob: -13.375308990478516

Token 920: '_train' (ID: 16872)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.0014301169430837035
    2. '_line' → logprob: -6.626430034637451
    3. 'Side' → logprob: -9.62643051147461
    4. 'dest' → logprob: -11.50143051147461
    5. 'side' → logprob: -12.00143051147461
    6. '                       ' → logprob: -12.25143051147461
    7. '_SIDE' → logprob: -12.37643051147461
    8. '_train' → logprob: -12.50143051147461
    9. '                               ' → logprob: -13.12643051147461
    10. '                           ' → logprob: -13.50143051147461

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009456383413635194
    2. '                               ' → logprob: -7.375945568084717
    3. ' ,' → logprob: -9.250946044921875
    4. ',m' → logprob: -9.250946044921875
    5. ','' → logprob: -10.250946044921875
    6. '                                   ' → logprob: -10.375946044921875
    7. '[::-' → logprob: -10.750946044921875
    8. '                                ' → logprob: -12.500946044921875
    9. ',d' → logprob: -12.625946044921875
    10. '                                       ' → logprob: -12.875946044921875

Token 922: ' moved' (ID: 12183)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.021836809813976288
    2. '                               ' → logprob: -4.396836757659912
    3. ' dest' → logprob: -6.521836757659912
    4. ''d' → logprob: -6.646836757659912
    5. '{'' → logprob: -6.771836757659912
    6. 'op' → logprob: -6.896836757659912
    7. 'm' → logprob: -7.146836757659912
    8. '                                   ' → logprob: -7.646836757659912
    9. '                           ' → logprob: -7.771836757659912
    10. ''' → logprob: -8.14683723449707

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.921253225300461e-05
    2. ','' → logprob: -10.500069618225098
    3. '                               ' → logprob: -10.500069618225098
    4. ' ,' → logprob: -12.125069618225098
    5. '                                   ' → logprob: -12.500069618225098
    6. ')' → logprob: -12.750069618225098
    7. ',
' → logprob: -15.000069618225098
    8. ''' → logprob: -15.250069618225098
    9. ',"' → logprob: -15.625069618225098
    10. '                                 ' → logprob: -15.625069618225098

Token 924: ' opposite' (ID: 23821)
  Prédit: ''op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.2133500725030899
    2. ''' → logprob: -2.5883500576019287
    3. ''O' → logprob: -2.7133500576019287
    4. ''o' → logprob: -4.463350296020508
    5. '{'' → logprob: -4.588350296020508
    6. 'op' → logprob: -4.838350296020508
    7. 'dest' → logprob: -5.338350296020508
    8. ''w' → logprob: -5.713350296020508
    9. ' '' → logprob: -5.838350296020508
    10. ''end' → logprob: -5.963350296020508

Token 925: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.7141175866127014
    2. '(dest' → logprob: -1.3391175270080566
    3. 'dest' → logprob: -1.5891175270080566
    4. 'Side' → logprob: -4.214117527008057
    5. 'side' → logprob: -4.589117527008057
    6. ')' → logprob: -4.589117527008057
    7. '_dest' → logprob: -4.964117527008057
    8. 's' → logprob: -7.714117527008057
    9. '[' → logprob: -7.839117527008057
    10. ')_' → logprob: -8.089118003845215

Token 926: '(dest' (ID: 57370)
  Prédit: '(dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.09067769348621368
    2. '[' → logprob: -2.7156777381896973
    3. ')' → logprob: -4.215677738189697
    4. 'dest' → logprob: -5.215677738189697
    5. '_dest' → logprob: -9.465677261352539
    6. 's' → logprob: -9.840677261352539
    7. '(side' → logprob: -10.090677261352539
    8. ']' → logprob: -11.090677261352539
    9. ')`' → logprob: -11.215677261352539
    10. 'side' → logprob: -11.340677261352539

Token 927: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -7.703443770878948e-06
    2. 'side' → logprob: -12.250007629394531
    3. '_line' → logprob: -13.375007629394531
    4. ')' → logprob: -15.375007629394531
    5. 'Side' → logprob: -15.375007629394531
    6. '_SIDE' → logprob: -15.750007629394531
    7. '_site' → logprob: -15.875007629394531
    8. 'dest' → logprob: -16.25000762939453
    9. '-side' → logprob: -16.37500762939453
    10. '(side' → logprob: -16.50000762939453

Token 928: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03815613314509392
    2. '))' → logprob: -3.288156032562256
    3. ')))' → logprob: -9.163156509399414
    4. ' )' → logprob: -13.163156509399414
    5. ')
' → logprob: -13.163156509399414
    6. '   ' → logprob: -13.663156509399414
    7. ')`' → logprob: -13.913156509399414
    8. ')")' → logprob: -14.163156509399414
    9. ')}' → logprob: -14.538156509399414
    10. '))))' → logprob: -14.663156509399414

Token 929: '                               ' (ID: 2419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2756423056125641
    2. '                               ' → logprob: -2.2756423950195312
    3. '                           ' → logprob: -2.4006423950195312
    4. '<|end|>' → logprob: -3.5256423950195312
    5. 'def' → logprob: -5.150642395019531
    6. '                       ' → logprob: -6.025642395019531
    7. '```' → logprob: -6.025642395019531
    8. '                            
' → logprob: -6.900642395019531
    9. '               ' → logprob: -6.900642395019531
    10. '           ' → logprob: -7.275642395019531

Token 930: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03599447011947632
    2. 'if' → logprob: -3.535994529724121
    3. '                               ' → logprob: -5.535994529724121
    4. '#' (adapté à ' #') → logprob: -6.285994529724121
    5. ' new' → logprob: -8.785994529724121
    6. '                           ' → logprob: -9.035994529724121
    7. '                                   ' → logprob: -10.160994529724121
    8. ' if' → logprob: -10.285994529724121
    9. '                       ' → logprob: -10.660994529724121
    10. '               ' → logprob: -11.285994529724121

Token 931: ' Nouveau' (ID: 136486)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5141723155975342
    2. 'if' → logprob: -1.0141723155975342
    3. '#' → logprob: -3.264172315597534
    4. '                               ' → logprob: -8.014172554016113
    5. 'next' → logprob: -8.514172554016113
    6. 'for' → logprob: -9.139172554016113
    7. '                       ' → logprob: -9.389172554016113
    8. '                           ' → logprob: -9.514172554016113
    9. ' if' → logprob: -10.014172554016113
    10. '               ' → logprob: -10.389172554016113

Token 932: ' état' (ID: 59181)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.009948033839464188
    2. '_state' → logprob: -4.634948253631592
    3. 'new' → logprob: -9.384947776794434
    4. 'if' → logprob: -10.009947776794434
    5. ' state' → logprob: -10.759947776794434
    6. 'train' → logprob: -11.009947776794434
    7. '           ' → logprob: -11.259947776794434
    8. '               ' → logprob: -12.759947776794434
    9. '   ' → logprob: -13.509947776794434
    10. '       ' → logprob: -13.634947776794434

Token 933: ' :
' (ID: 10039)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4703999161720276
    2. 'new' → logprob: -1.7203998565673828
    3. ' =' → logprob: -1.8453998565673828
    4. '=' → logprob: -4.470399856567383
    5. '                           ' → logprob: -4.470399856567383
    6. ' new' → logprob: -4.845399856567383
    7. '               ' → logprob: -5.720399856567383
    8. '           ' → logprob: -7.220399856567383
    9. '                       ' → logprob: -7.345399856567383
    10. '                                   ' → logprob: -7.470399856567383

Token 934: '                               ' (ID: 2419)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.346055269241333
    2. '                               ' → logprob: -1.346055269241333
    3. ' new' → logprob: -3.596055269241333
    4. '                                   ' → logprob: -5.971055030822754
    5. '
' → logprob: -7.596055030822754
    6. '                           ' → logprob: -7.721055030822754
    7. '                                
' → logprob: -8.471055030822754
    8. '               ' → logprob: -8.596055030822754
    9. '[new' → logprob: -8.721055030822754
    10. '```' → logprob: -8.846055030822754

Token 935: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00033308175625279546
    2. '           ' → logprob: -9.000332832336426
    3. ' new' → logprob: -9.125332832336426
    4. '               ' → logprob: -10.250332832336426
    5. 'if' → logprob: -10.500332832336426
    6. '                   ' → logprob: -10.750332832336426
    7. '                       ' → logprob: -11.375332832336426
    8. '   ' → logprob: -13.375332832336426
    9. '                               ' → logprob: -13.750332832336426
    10. '       ' → logprob: -14.375332832336426

Token 936: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.005241225939244032
    2. 'state' → logprob: -5.255241394042969
    3. '   ' → logprob: -12.880241394042969
    4. '_train' → logprob: -13.630241394042969
    5. ' state' → logprob: -13.880241394042969
    6. '           ' → logprob: -14.130241394042969
    7. '_states' → logprob: -14.380241394042969
    8. '       ' → logprob: -14.880241394042969
    9. ' =' → logprob: -15.505241394042969
    10. '               ' → logprob: -15.505241394042969

Token 937: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759440064430237
    2. '=' → logprob: -0.8259440064430237
    3. '   ' → logprob: -13.075943946838379
    4. '=list' → logprob: -13.700943946838379
    5. '=[' → logprob: -15.325943946838379
    6. '    ' → logprob: -15.575943946838379
    7. ')' → logprob: -15.700943946838379
    8. '           ' → logprob: -16.075944900512695
    9. '＝' → logprob: -16.575944900512695
    10. '       ' → logprob: -16.825944900512695

Token 938: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2502502202987671
    2. 'state' → logprob: -1.625250220298767
    3. 'tuple' → logprob: -3.7502503395080566
    4. '   ' → logprob: -8.000249862670898
    5. ' list' → logprob: -8.000249862670898
    6. ' tuple' → logprob: -9.500249862670898
    7. '           ' → logprob: -9.625249862670898
    8. ' state' → logprob: -9.750249862670898
    9. '       ' → logprob: -9.875249862670898
    10. '(state' → logprob: -10.000249862670898

Token 939: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.01815919391810894
    2. 'state' → logprob: -4.01815938949585
    3. '(new' → logprob: -12.018158912658691
    4. 'new' → logprob: -13.393158912658691
    5. ' state' → logprob: -13.893158912658691
    6. '[state' → logprob: -15.143158912658691
    7. '   ' → logprob: -16.143159866333008
    8. '	state' → logprob: -16.268159866333008
    9. '(' → logprob: -16.393159866333008
    10. '```' → logprob: -16.643159866333008

Token 940: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43300333619117737
    2. ')' → logprob: -1.058003306388855
    3. '                               ' → logprob: -6.0580034255981445
    4. 'new' → logprob: -7.1830034255981445
    5. ')new' → logprob: -8.183003425598145
    6. ')
' → logprob: -8.433003425598145
    7. '                           ' → logprob: -8.808003425598145
    8. '                                   ' → logprob: -9.558003425598145
    9. '                       ' → logprob: -9.683003425598145
    10. '(new' → logprob: -9.933003425598145

Token 941: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.45615053176879883
    2. '                           ' → logprob: -1.3311505317687988
    3. 'new' → logprob: -2.831150531768799
    4. '[new' → logprob: -4.831150531768799
    5. ' new' → logprob: -5.081150531768799
    6. '                       ' → logprob: -5.331150531768799
    7. '                   ' → logprob: -5.456150531768799
    8. '                                   ' → logprob: -5.706150531768799
    9. '               ' → logprob: -5.706150531768799
    10. '```' → logprob: -5.831150531768799

Token 942: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0846182256937027
    2. '                               ' → logprob: -2.709618330001831
    3. '[new' → logprob: -4.834618091583252
    4. ' new' → logprob: -5.209618091583252
    5. '[i' → logprob: -7.834618091583252
    6. '               ' → logprob: -8.08461856842041
    7. '```' → logprob: -9.08461856842041
    8. '                           ' → logprob: -9.20961856842041
    9. '                   ' → logprob: -9.33461856842041
    10. '                       ' → logprob: -10.33461856842041

Token 943: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.219262624857947e-05
    2. '_dest' → logprob: -10.375072479248047
    3. 'state' → logprob: -10.500072479248047
    4. 'dest' → logprob: -11.250072479248047
    5. '_states' → logprob: -16.375072479248047
    6. '_destination' → logprob: -16.875072479248047
    7. ' state' → logprob: -17.500072479248047
    8. '   ' → logprob: -17.875072479248047
    9. '_estado' → logprob: -17.875072479248047
    10. 'State' → logprob: -18.000072479248047

Token 944: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06210224702954292
    2. '[new' → logprob: -2.8121023178100586
    3. 'new' → logprob: -9.687102317810059
    4. '[' → logprob: -9.687102317810059
    5. '```' → logprob: -12.062102317810059
    6. ')[' → logprob: -13.437102317810059
    7. '[I' → logprob: -14.187102317810059
    8. '=new' → logprob: -14.562102317810059
    9. '[n' → logprob: -14.812102317810059
    10. '[next' → logprob: -15.437102317810059

Token 945: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07264463603496552
    2. ']=' → logprob: -2.8226447105407715
    3. '][' → logprob: -5.1976447105407715
    4. '=' → logprob: -5.3226447105407715
    5. '[' → logprob: -9.197644233703613
    6. '][:' → logprob: -10.197644233703613
    7. ']='' → logprob: -11.197644233703613
    8. ' =' → logprob: -11.322644233703613
    9. ' ]' → logprob: -12.072644233703613
    10. '           ' → logprob: -12.197644233703613

Token 946: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005534812342375517
    2. '[' → logprob: -5.755534648895264
    3. ' =' → logprob: -6.130534648895264
    4. ']' → logprob: -9.255535125732422
    5. ']=' → logprob: -9.880535125732422
    6. '=[' → logprob: -11.755535125732422
    7. '[i' → logprob: -12.505535125732422
    8. '][' → logprob: -12.630535125732422
    9. '           ' → logprob: -12.880535125732422
    10. '[new' → logprob: -13.380535125732422

Token 947: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -2.696889623621246e-06
    2. ' kept' → logprob: -13.00000286102295
    3. 'keep' → logprob: -15.12500286102295
    4. 'held' → logprob: -16.750001907348633
    5. '-ke' → logprob: -18.625001907348633
    6. '(' → logprob: -18.875001907348633
    7. 'keeping' → logprob: -19.000001907348633
    8. '_ke' → logprob: -19.000001907348633
    9. 'k' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.125001907348633

Token 948: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.005789424292743206
    2. '
' → logprob: -5.630789279937744
    3. 'new' → logprob: -7.505789279937744
    4. '                           ' → logprob: -7.880789279937744
    5. '                                
' → logprob: -8.130789756774902
    6. '<|end|>' → logprob: -8.505789756774902
    7. '```' → logprob: -8.505789756774902
    8. '               ' → logprob: -8.755789756774902
    9. '                       ' → logprob: -9.630789756774902
    10. '                                   ' → logprob: -9.755789756774902

Token 949: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06860298663377762
    2. '
' → logprob: -3.693603038787842
    3. '```' → logprob: -4.193603038787842
    4. '<|end|>' → logprob: -4.693603038787842
    5. '                                
' → logprob: -4.818603038787842
    6. '[new' → logprob: -6.443603038787842
    7. 'new' → logprob: -6.568603038787842
    8. '[' → logprob: -7.193603038787842
    9. '                                ' → logprob: -7.443603038787842
    10. '                           ' → logprob: -7.443603038787842

Token 950: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06593988835811615
    2. '                               ' → logprob: -3.0659399032592773
    3. ' new' → logprob: -4.065939903259277
    4. '                           ' → logprob: -11.690939903259277
    5. '                                   ' → logprob: -11.815939903259277
    6. '               ' → logprob: -11.815939903259277
    7. '                                
' → logprob: -12.065939903259277
    8. '       ' → logprob: -12.315939903259277
    9. '
' → logprob: -12.815939903259277
    10. '                       ' → logprob: -12.940939903259277

Token 951: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0016054363222792745
    2. '_dest' → logprob: -7.00160551071167
    3. 'state' → logprob: -7.62660551071167
    4. 'dest' → logprob: -8.501605033874512
    5. 'State' → logprob: -13.251605033874512
    6. '_states' → logprob: -15.001605033874512
    7. '[' → logprob: -15.751605033874512
    8. '_estado' → logprob: -16.126605987548828
    9. '_destination' → logprob: -16.376605987548828
    10. '_' → logprob: -16.376605987548828

Token 952: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.130576806142926e-05
    2. '=' → logprob: -11.250031471252441
    3. '[(' → logprob: -11.625031471252441
    4. 'dest' → logprob: -12.500031471252441
    5. ' [' → logprob: -14.000031471252441
    6. ' =' → logprob: -14.375031471252441
    7. '       ' → logprob: -14.500031471252441
    8. '=[' → logprob: -14.500031471252441
    9. '```' → logprob: -14.625031471252441
    10. '][' → logprob: -14.750031471252441

Token 953: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.0003001888981088996
    2. '(dest' → logprob: -8.125300407409668
    3. ' dest' → logprob: -12.750300407409668
    4. '[' → logprob: -14.500300407409668
    5. '(' → logprob: -14.875300407409668
    6. 'def' → logprob: -16.37529945373535
    7. '	dest' → logprob: -17.00029945373535
    8. '   ' → logprob: -17.25029945373535
    9. 'destination' → logprob: -17.25029945373535
    10. 'dst' → logprob: -17.25029945373535

Token 954: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0003454753023106605
    2. '_train' → logprob: -8.000345230102539
    3. '_state' → logprob: -13.125345230102539
    4. 'train' → logprob: -13.250345230102539
    5. '           ' → logprob: -13.500345230102539
    6. 'line' → logprob: -13.875345230102539
    7. '```' → logprob: -14.250345230102539
    8. '_lines' → logprob: -14.875345230102539
    9. ']_' → logprob: -15.000345230102539
    10. '_dest' → logprob: -15.250345230102539

Token 955: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003488129877950996
    2. ']=' → logprob: -8.000349044799805
    3. ' ]' → logprob: -11.875349044799805
    4. '][' → logprob: -12.375349044799805
    5. '=' → logprob: -14.250349044799805
    6. '']' → logprob: -15.250349044799805
    7. ']+=' → logprob: -15.375349044799805
    8. '`]' → logprob: -15.750349044799805
    9. '   ' → logprob: -16.125349044799805
    10. ']='' → logprob: -16.125349044799805

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016447806730866432
    2. ' =' → logprob: -4.766448020935059
    3. ']' → logprob: -4.891448020935059
    4. ']=' → logprob: -8.141448020935059
    5. ')' → logprob: -15.391448020935059
    6. '+=' → logprob: -15.516448020935059
    7. ' ]' → logprob: -15.891448020935059
    8. ']+=' → logprob: -15.891448020935059
    9. '   ' → logprob: -16.891447067260742
    10. '[' → logprob: -17.141447067260742

Token 957: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -9.615255839889869e-05
    2. ' new' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.87509536743164
    4. '```' → logprob: -19.00009536743164
    5. '	new' → logprob: -20.00009536743164
    6. ' ' → logprob: -20.37509536743164
    7. '_new' → logprob: -20.50009536743164
    8. '           ' → logprob: -20.87509536743164
    9. 'New' → logprob: -21.00009536743164
    10. '                   ' → logprob: -21.12509536743164

Token 958: '_dest' (ID: 78932)
  Prédit: '_dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dest' → logprob: -0.07098331302404404
    2. '_state' → logprob: -3.195983409881592
    3. 'dest' → logprob: -3.820983409881592
    4. 'state' → logprob: -5.445983409881592
    5. '_train' → logprob: -7.695983409881592
    6. 'Dest' → logprob: -7.820983409881592
    7. 'train' → logprob: -8.070982933044434
    8. 'new' → logprob: -9.945982933044434
    9. 'est' → logprob: -10.320982933044434
    10. 'st' → logprob: -10.570982933044434

Token 959: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.00023214559769257903
    2. 'train' → logprob: -8.375231742858887
    3. 'Train' → logprob: -14.625231742858887
    4. 'in' → logprob: -15.625231742858887
    5. ' train' → logprob: -15.750231742858887
    6. 'etrain' → logprob: -16.125232696533203
    7. '(train' → logprob: -16.500232696533203
    8. '_tr' → logprob: -16.625232696533203
    9. '
' → logprob: -16.625232696533203
    10. 'ined' → logprob: -16.750232696533203

Token 960: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.03549332171678543
    2. '                           ' → logprob: -4.53549337387085
    3. '```' → logprob: -4.91049337387085
    4. '<|end|>' → logprob: -4.91049337387085
    5. ')' → logprob: -5.91049337387085
    6. '               ' → logprob: -6.28549337387085
    7. '                       ' → logprob: -6.41049337387085
    8. '                                
' → logprob: -7.53549337387085
    9. '                   ' → logprob: -7.78549337387085
    10. '
' → logprob: -7.91049337387085

Token 962: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.006314820144325495
    2. ' new' → logprob: -5.256314754486084
    3. 'tuple' → logprob: -7.256314754486084
    4. '                               ' → logprob: -8.256315231323242
    5. '               ' → logprob: -9.881315231323242
    6. 'state' → logprob: -11.256315231323242
    7. '                           ' → logprob: -11.631315231323242
    8. '_new' → logprob: -11.631315231323242
    9. '                       ' → logprob: -11.756315231323242
    10. '           ' → logprob: -12.256315231323242

Token 963: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0012298731599003077
    2. 'state' → logprob: -6.751229763031006
    3. 'State' → logprob: -10.626230239868164
    4. '.append' → logprob: -10.626230239868164
    5. '_states' → logprob: -12.126230239868164
    6. '```' → logprob: -13.876230239868164
    7. '_queue' → logprob: -14.251230239868164
    8. '_STATE' → logprob: -14.626230239868164
    9. ' =' → logprob: -14.751230239868164
    10. 'append' → logprob: -15.001230239868164

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6342902779579163
    2. ' =' → logprob: -0.7592902779579163
    3. ')' → logprob: -6.7592902183532715
    4. ']' → logprob: -8.75929069519043
    5. ')=' → logprob: -9.00929069519043
    6. ']=' → logprob: -9.50929069519043
    7. '_tuple' → logprob: -9.63429069519043
    8. '.append' → logprob: -11.13429069519043
    9. '_state' → logprob: -11.50929069519043
    10. '[i' → logprob: -11.63429069519043

Token 965: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.023245826363563538
    2. ' tuple' → logprob: -3.7732458114624023
    3. 'tu' → logprob: -15.523245811462402
    4. '(tuple' → logprob: -15.648245811462402
    5. '_tuple' → logprob: -19.02324676513672
    6. '   ' → logprob: -19.39824676513672
    7. '           ' → logprob: -20.77324676513672
    8. 't' → logprob: -20.89824676513672
    9. 'tpl' → logprob: -21.02324676513672
    10. 'Tuple' → logprob: -21.89824676513672

Token 966: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0015046248445287347
    2. 'new' → logprob: -6.501504421234131
    3. '[new' → logprob: -13.251504898071289
    4. ')new' → logprob: -16.00150489807129
    5. '```' → logprob: -16.25150489807129
    6. ' new' → logprob: -16.75150489807129
    7. '(' → logprob: -16.75150489807129
    8. '	new' → logprob: -17.50150489807129
    9. '$new' → logprob: -17.62650489807129
    10. '(state' → logprob: -17.87650489807129

Token 967: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0018219047924503684
    2. 'state' → logprob: -6.501821994781494
    3. 'new' → logprob: -8.251821517944336
    4. '(new' → logprob: -10.001821517944336
    5. 'State' → logprob: -11.876821517944336
    6. '_new' → logprob: -13.251821517944336
    7. '(state' → logprob: -13.376821517944336
    8. ')' → logprob: -13.751821517944336
    9. ' state' → logprob: -15.001821517944336
    10. '[new' → logprob: -15.001821517944336

Token 968: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003947198390960693
    2. '<|end|>' → logprob: -6.0039472579956055
    3. '                           ' → logprob: -7.5039472579956055
    4. '                               ' → logprob: -7.8789472579956055
    5. '                       ' → logprob: -8.628947257995605
    6. '               ' → logprob: -9.253947257995605
    7. '           ' → logprob: -9.503947257995605
    8. '<|end|>' → logprob: -9.878947257995605
    9. ')
' → logprob: -10.003947257995605
    10. '       ' → logprob: -10.503947257995605

Token 969: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.38833945989608765
    2. '                           ' → logprob: -1.5133395195007324
    3. '           ' → logprob: -2.7633395195007324
    4. '               ' → logprob: -3.7633395195007324
    5. '                       ' → logprob: -5.513339519500732
    6. '                   ' → logprob: -5.513339519500732
    7. 'if' → logprob: -5.638339519500732
    8. '       ' → logprob: -6.138339519500732
    9. '```' → logprob: -7.138339519500732
    10. ' if' → logprob: -8.263339042663574

Token 970: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017084944993257523
    2. ' if' → logprob: -6.501708507537842
    3. '                               ' → logprob: -8.751708030700684
    4. '                           ' → logprob: -10.001708030700684
    5. '                       ' → logprob: -13.876708030700684
    6. '               ' → logprob: -14.501708030700684
    7. '           ' → logprob: -15.251708030700684
    8. '                                
' → logprob: -15.751708030700684
    9. '                   ' → logprob: -15.876708030700684
    10. '   ' → logprob: -15.876708030700684

Token 971: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.008616226725280285
    2. ' new' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.88361644744873
    4. 'not' → logprob: -14.38361644744873
    5. '(new' → logprob: -16.508615493774414
    6. '	new' → logprob: -17.133615493774414
    7. ' ' → logprob: -17.383615493774414
    8. '       ' → logprob: -18.258615493774414
    9. '_new' → logprob: -18.383615493774414
    10. '           ' → logprob: -18.633615493774414

Token 972: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.0339031834737398e-05
    2. 'state' → logprob: -10.875020027160645
    3. 'new' → logprob: -15.250020027160645
    4. '_states' → logprob: -15.375020027160645
    5. '_STATE' → logprob: -15.875020027160645
    6. '	state' → logprob: -16.00002098083496
    7. 'estado' → logprob: -16.25002098083496
    8. '_estado' → logprob: -16.62502098083496
    9. ' state' → logprob: -16.75002098083496
    10. '   ' → logprob: -16.75002098083496

Token 973: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1002335250377655
    2. 'not' → logprob: -2.350233554840088
    3. '	not' → logprob: -10.72523307800293
    4. '_not' → logprob: -13.35023307800293
    5. '<|end|>' → logprob: -13.72523307800293
    6. ')' → logprob: -14.22523307800293
    7. 'in' → logprob: -14.60023307800293
    8. ' in' → logprob: -15.35023307800293
    9. '<|end|>' → logprob: -15.85023307800293
    10. '   ' → logprob: -15.85023307800293

Token 974: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026990946382284164
    2. 'in' → logprob: -3.6519908905029297
    3. ' not' → logprob: -7.65199089050293
    4. '                               ' → logprob: -9.27699089050293
    5. '<|end|>' → logprob: -9.90199089050293
    6. '                                   ' → logprob: -10.27699089050293
    7. '.' → logprob: -11.77699089050293
    8. '<|end|>' → logprob: -12.15199089050293
    9. 'not' → logprob: -12.77699089050293
    10. '   ' → logprob: -13.02699089050293

Token 975: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.7697225252486533e-06
    2. ' visited' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.625003814697266
    4. '       ' → logprob: -21.250003814697266
    5. 'visible' → logprob: -22.000003814697266
    6. '           ' → logprob: -22.000003814697266
    7. '```' → logprob: -22.750003814697266
    8. 'seen' → logprob: -23.000003814697266
    9. 'vis' → logprob: -23.625003814697266
    10. '
' → logprob: -23.625003814697266

Token 976: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35421183705329895
    2. ':
' → logprob: -1.2292118072509766
    3. '                           ' → logprob: -5.479211807250977
    4. '                               ' → logprob: -7.479211807250977
    5. '):
' → logprob: -7.854211807250977
    6. '<|end|>' → logprob: -9.229211807250977
    7. '                       ' → logprob: -9.354211807250977
    8. ' and' → logprob: -9.479211807250977
    9. '                                   ' → logprob: -9.604211807250977
    10. ':

' → logprob: -9.854211807250977

Token 977: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.0025622190441936255
    2. '                               ' → logprob: -6.752562046051025
    3. '           ' → logprob: -7.127562046051025
    4. '                                       ' → logprob: -8.252562522888184
    5. '                   ' → logprob: -8.627562522888184
    6. '                           ' → logprob: -10.377562522888184
    7. '                                           ' → logprob: -10.627562522888184
    8. '               ' → logprob: -10.627562522888184
    9. '                       ' → logprob: -10.752562522888184
    10. '                                  ' → logprob: -11.377562522888184

Token 978: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.03769565373659134
    2. ' visited' → logprob: -3.7876956462860107
    3. '                                       ' → logprob: -4.66269588470459
    4. '                                   ' → logprob: -5.41269588470459
    5. '   ' → logprob: -8.78769588470459
    6. '               ' → logprob: -9.16269588470459
    7. '                   ' → logprob: -9.91269588470459
    8. '                                           ' → logprob: -10.16269588470459
    9. '                               ' → logprob: -10.16269588470459
    10. '           ' → logprob: -10.41269588470459

Token 979: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00029875844484195113
    2. '.' → logprob: -8.125298500061035
    3. ' .' → logprob: -14.000298500061035
    4. '.append' → logprob: -14.875298500061035
    5. 'add' → logprob: -15.000298500061035
    6. '.Add' → logprob: -15.125298500061035
    7. '                                   ' → logprob: -15.375298500061035
    8. '.remove' → logprob: -15.875298500061035
    9. '.setdefault' → logprob: -15.875298500061035
    10. '.update' → logprob: -16.37529945373535

Token 980: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.273621405242011e-05
    2. '(' → logprob: -10.375032424926758
    3. 'new' → logprob: -13.875032424926758
    4. ' (' → logprob: -14.625032424926758
    5. '((' → logprob: -18.125032424926758
    6. ' new' → logprob: -18.250032424926758
    7. '(
' → logprob: -18.375032424926758
    8. '(space' → logprob: -18.500032424926758
    9. '(next' → logprob: -18.750032424926758
    10. '(New' → logprob: -19.125032424926758

Token 981: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.9650025428272784e-05
    2. '_' → logprob: -10.375040054321289
    3. 'state' → logprob: -12.375040054321289
    4. '_token' → logprob: -12.875040054321289
    5. 'State' → logprob: -15.000040054321289
    6. '_STATE' → logprob: -15.000040054321289
    7. '_code' → logprob: -15.125040054321289
    8. '```' → logprob: -15.500040054321289
    9. ')' → logprob: -15.625040054321289
    10. '_states' → logprob: -16.50004005432129

Token 982: ')
' (ID: 446)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.21065647900104523
    2. ')' → logprob: -2.3356564044952393
    3. ',' → logprob: -2.7106564044952393
    4. '                               ' → logprob: -4.585656642913818
    5. ',
' → logprob: -5.335656642913818
    6. '           ' → logprob: -5.710656642913818
    7. '                                       ' → logprob: -6.085656642913818
    8. '```' → logprob: -6.710656642913818
    9. '               ' → logprob: -6.835656642913818
    10. '                   ' → logprob: -6.960656642913818

Token 983: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.012098820880055428
    2. '```' → logprob: -5.512098789215088
    3. '                               ' → logprob: -6.262098789215088
    4. '           ' → logprob: -6.512098789215088
    5. '                   ' → logprob: -6.762098789215088
    6. '                           ' → logprob: -7.262098789215088
    7. '								' → logprob: -7.512098789215088
    8. '                                    ' → logprob: -7.637098789215088
    9. '                                       ' → logprob: -7.762098789215088
    10. ')' → logprob: -8.012099266052246

Token 984: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0006933739641681314
    2. '                                   ' → logprob: -7.500693321228027
    3. ' queue' → logprob: -9.000693321228027
    4. '                                       ' → logprob: -11.625693321228027
    5. '   ' → logprob: -12.625693321228027
    6. '                               ' → logprob: -13.625693321228027
    7. '           ' → logprob: -14.000693321228027
    8. '                   ' → logprob: -14.375693321228027
    9. '	queue' → logprob: -14.375693321228027
    10. '                           ' → logprob: -14.625693321228027

Token 985: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001815121271647513
    2. '.' → logprob: -6.376815319061279
    3. '.app' → logprob: -10.001814842224121
    4. '.extend' → logprob: -10.126814842224121
    5. '.enqueue' → logprob: -11.126814842224121
    6. '.Append' → logprob: -12.626814842224121
    7. ').' → logprob: -12.751814842224121
    8. '.APP' → logprob: -13.376814842224121
    9. '.put' → logprob: -14.376814842224121
    10. '```' → logprob: -14.501814842224121

Token 986: '((' (ID: 2054)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.26453953981399536
    2. '(' → logprob: -2.1395394802093506
    3. ' (' → logprob: -2.5145394802093506
    4. '((' → logprob: -3.3895394802093506
    5. '(
' → logprob: -10.38953971862793
    6. '(next' → logprob: -10.88953971862793
    7. '(space' → logprob: -11.01453971862793
    8. '(New' → logprob: -11.88953971862793
    9. '```' → logprob: -12.01453971862793
    10. '(token' → logprob: -12.38953971862793

Token 987: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0002787359117064625
    2. ' new' → logprob: -8.50027847290039
    3. '(new' → logprob: -9.50027847290039
    4. '   ' → logprob: -15.37527847290039
    5. ')new' → logprob: -15.75027847290039
    6. '	new' → logprob: -17.37527847290039
    7. ' (' → logprob: -17.62527847290039
    8. '[new' → logprob: -18.25027847290039
    9. '
' → logprob: -18.37527847290039
    10. ',new' → logprob: -19.12527847290039

Token 988: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.002504674717783928
    2. 'state' → logprob: -6.002504825592041
    3. 'State' → logprob: -11.752504348754883
    4. '_STATE' → logprob: -11.752504348754883
    5. '```' → logprob: -12.377504348754883
    6. '_states' → logprob: -13.127504348754883
    7. '   ' → logprob: -14.127504348754883
    8. ')' → logprob: -14.127504348754883
    9. ' state' → logprob: -14.252504348754883
    10. '-state' → logprob: -14.752504348754883

Token 989: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.368984107510187e-05
    2. ' ,' → logprob: -11.375033378601074
    3. '                               ' → logprob: -12.500033378601074
    4. '               ' → logprob: -12.750033378601074
    5. '                                   ' → logprob: -13.000033378601074
    6. '                                           ' → logprob: -13.250033378601074
    7. '           ' → logprob: -13.250033378601074
    8. '   ' → logprob: -13.250033378601074
    9. '                           ' → logprob: -13.375033378601074
    10. '                                       ' → logprob: -13.875033378601074

Token 990: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.3132651150226593
    2. ' moves' → logprob: -1.313265085220337
    3. '                               ' → logprob: -14.563264846801758
    4. 'm' → logprob: -14.813264846801758
    5. 'move' → logprob: -14.938264846801758
    6. '                                   ' → logprob: -14.938264846801758
    7. '   ' → logprob: -14.938264846801758
    8. '                                       ' → logprob: -15.438264846801758
    9. '.moves' → logprob: -15.688264846801758
    10. ' ' → logprob: -15.688264846801758

Token 991: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740772247314453
    2. ' +' → logprob: -0.9740772247314453
    3. '＋' → logprob: -16.474077224731445
    4. '   ' → logprob: -16.599077224731445
    5. '+
' → logprob: -17.474077224731445
    6. ' +
' → logprob: -17.974077224731445
    7. ')' → logprob: -18.224077224731445
    8. ' ' → logprob: -18.349077224731445
    9. ')+' → logprob: -18.474077224731445
    10. '+s' → logprob: -18.724077224731445

Token 992: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '           ' → logprob: -18.625003814697266
    5. '                                   ' → logprob: -18.750003814697266
    6. '```' → logprob: -18.750003814697266
    7. '                               ' → logprob: -19.000003814697266
    8. '                   ' → logprob: -19.000003814697266
    9. '                           ' → logprob: -19.375003814697266
    10. '                                           ' → logprob: -19.500003814697266

Token 993: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -20.5
    5. '           ' → logprob: -21.5
    6. ')' → logprob: -21.5
    7. '       ' → logprob: -22.0
    8. '                                   ' → logprob: -22.125
    9. '                               ' → logprob: -22.125
    10. '
' → logprob: -22.375

Token 994: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001475220051361248
    2. '))
' → logprob: -9.000147819519043
    3. '                                   ' → logprob: -11.375147819519043
    4. '                               ' → logprob: -11.875147819519043
    5. ')))' → logprob: -12.750147819519043
    6. ')' → logprob: -14.500147819519043
    7. ' ))' → logprob: -14.500147819519043
    8. '           ' → logprob: -14.750147819519043
    9. '                           ' → logprob: -14.875147819519043
    10. '               ' → logprob: -14.875147819519043

Token 995: '                   ' (ID: 699)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024888573680073023
    2. '
' → logprob: -6.00248908996582
    3. '

' → logprob: -11.62748908996582
    4. '```' → logprob: -13.37748908996582
    5. '   ' → logprob: -13.62748908996582
    6. '    
' → logprob: -15.00248908996582
    7. '#' → logprob: -15.25248908996582
    8. '                        
' → logprob: -15.62748908996582
    9. '                            
' → logprob: -15.62748908996582
    10. '            
' → logprob: -16.25248908996582

Token 996: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08427871763706207
    2. '                       ' → logprob: -3.5842788219451904
    3. 'else' (adapté à ' else') → logprob: -3.8342788219451904
    4. 'for' → logprob: -4.834278583526611
    5. ' for' → logprob: -5.334278583526611
    6. 'E' → logprob: -5.459278583526611
    7. '               ' → logprob: -5.459278583526611
    8. '                               ' → logprob: -5.834278583526611
    9. '                           ' → logprob: -6.084278583526611
    10. ' else' → logprob: -7.209278583526611

Token 997: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47784534096717834
    2. ':
' → logprob: -0.977845311164856
    3. '                       ' → logprob: -5.977845191955566
    4. '                   ' → logprob: -6.852845191955566
    5. ' :' → logprob: -9.477845191955566
    6. ' :
' → logprob: -10.227845191955566
    7. '                    ' → logprob: -11.602845191955566
    8. ':
' → logprob: -11.727845191955566
    9. '               ' → logprob: -11.727845191955566
    10. ':

' → logprob: -11.977845191955566

Token 998: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20805326104164124
    2. '#' → logprob: -1.7080532312393188
    3. '                   ' → logprob: -5.333053112030029
    4. 'for' → logprob: -6.458053112030029
    5. '               ' → logprob: -9.333053588867188
    6. '           ' → logprob: -10.083053588867188
    7. ' #' → logprob: -10.583053588867188
    8. '```' → logprob: -10.583053588867188
    9. '       ' → logprob: -11.458053588867188
    10. ' for' → logprob: -11.458053588867188

Token 999: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3139199912548065
    2. 'for' → logprob: -1.313920021057129
    3. '       ' → logprob: -8.938920021057129
    4. ' #' → logprob: -9.188920021057129
    5. '                   ' → logprob: -9.188920021057129
    6. '               ' → logprob: -9.438920021057129
    7. '   ' → logprob: -9.563920021057129
    8. '                       ' → logprob: -9.938920021057129
    9. ' for' → logprob: -10.063920021057129
    10. '           ' → logprob: -10.688920021057129

Token 1000: ' side' (ID: 4307)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.017870593816041946
    2. '                   ' → logprob: -4.7678704261779785
    3. '                       ' → logprob: -5.6428704261779785
    4. ''' → logprob: -5.7678704261779785
    5. ' '' → logprob: -6.3928704261779785
    6. '#' → logprob: -7.8928704261779785
    7. 'E' → logprob: -9.392870903015137
    8. ''e' → logprob: -9.392870903015137
    9. '               ' → logprob: -9.517870903015137
    10. 'for' → logprob: -9.892870903015137

Token 1001: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20179766416549683
    2. '==' → logprob: -1.7017977237701416
    3. '=='' → logprob: -7.9517974853515625
    4. '=' → logprob: -10.951797485351562
    5. '                   ' → logprob: -12.201797485351562
    6. ' =' → logprob: -12.201797485351562
    7. ' =='' → logprob: -13.076797485351562
    8. '==
' → logprob: -13.951797485351562
    9. '===' → logprob: -14.951797485351562
    10. ' ===' → logprob: -15.201797485351562

Token 1002: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.006200615782290697
    2. ' '' → logprob: -5.131200790405273
    3. ''' → logprob: -8.506200790405273
    4. 'E' → logprob: -10.381200790405273
    5. '’E' → logprob: -11.131200790405273
    6. ''É' → logprob: -11.506200790405273
    7. ''e' → logprob: -12.631200790405273
    8. ' E' → logprob: -12.756200790405273
    9. '   ' → logprob: -13.256200790405273
    10. ' ' → logprob: -13.631200790405273

Token 1003: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.935296834039036e-06
    2. ' E' → logprob: -13.50000286102295
    3. ''E' → logprob: -13.50000286102295
    4. ''' → logprob: -16.250003814697266
    5. '"E' → logprob: -18.125003814697266
    6. '')' → logprob: -18.625003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '['' → logprob: -18.875003814697266
    9. ')' → logprob: -19.625003814697266
    10. '                   ' → logprob: -19.750003814697266

Token 1004: ''
' (ID: 2207)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.823168158531189
    2. '                       ' → logprob: -1.073168158531189
    3. '                   ' → logprob: -1.823168158531189
    4. ':
' → logprob: -3.3231682777404785
    5. ':' → logprob: -4.6981682777404785
    6. '):
' → logprob: -5.0731682777404785
    7. ''):
' → logprob: -6.0731682777404785
    8. '               ' → logprob: -6.6981682777404785
    9. '':' → logprob: -6.9481682777404785
    10. ''' → logprob: -7.5731682777404785

Token 1005: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018923789262771606
    2. '```' → logprob: -4.393923759460449
    3. 'for' → logprob: -5.143923759460449
    4. '                   ' → logprob: -7.893923759460449
    5. '#' → logprob: -9.01892375946045
    6. ' for' → logprob: -9.89392375946045
    7. '               ' → logprob: -12.76892375946045
    8. '``' → logprob: -13.01892375946045
    9. '                           ' → logprob: -13.14392375946045
    10. '                        
' → logprob: -13.14392375946045

Token 1006: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015897235134616494
    2. '                       ' → logprob: -6.751589775085449
    3. ' for' → logprob: -8.50158977508545
    4. '#' (adapté à ' #') → logprob: -8.62658977508545
    5. '```' → logprob: -10.75158977508545
    6. '                   ' → logprob: -11.12658977508545
    7. '               ' → logprob: -15.37658977508545
    8. '           ' → logprob: -15.50158977508545
    9. '``' → logprob: -15.62658977508545
    10. '                           ' → logprob: -15.75158977508545

Token 1007: ' subdivisions' (ID: 195284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.65101717156358e-05
    2. '#' → logprob: -9.500096321105957
    3. ' for' → logprob: -11.375096321105957
    4. '                       ' → logprob: -11.625096321105957
    5. '                   ' → logprob: -13.875096321105957
    6. '               ' → logprob: -16.625097274780273
    7. '```' → logprob: -16.625097274780273
    8. '           ' → logprob: -17.000097274780273
    9. '
' → logprob: -17.750097274780273
    10. '   ' → logprob: -17.750097274780273

Token 1008: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.790095865726471
    2. 'in' → logprob: -0.915095865726471
    3. ' in' → logprob: -2.915095806121826
    4. '=' → logprob: -3.165095806121826
    5. ' for' → logprob: -3.915095806121826
    6. '                       ' → logprob: -4.415095806121826
    7. '                   ' → logprob: -4.540095806121826
    8. ' =' → logprob: -5.415095806121826
    9. '#' → logprob: -7.415095806121826
    10. 'range' → logprob: -8.540096282958984

Token 1009: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.246885746717453
    2. ' for' → logprob: -1.9968857765197754
    3. 'in' → logprob: -3.1218857765197754
    4. ' in' → logprob: -3.3718857765197754
    5. '                       ' → logprob: -5.621885776519775
    6. '                   ' → logprob: -7.496885776519775
    7. '=' → logprob: -8.371885299682617
    8. '                           ' → logprob: -10.121885299682617
    9. ' =' → logprob: -10.246885299682617
    10. 'range' → logprob: -10.246885299682617

Token 1010: ' part' (ID: 997)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002481078845448792
    2. 're' → logprob: -8.375247955322266
    3. 'reverse' → logprob: -11.375247955322266
    4. ' range' → logprob: -12.250247955322266
    5. 'for' → logprob: -13.750247955322266
    6. '(range' → logprob: -16.375247955322266
    7. '#' → logprob: -17.000247955322266
    8. 'rang' → logprob: -17.500247955322266
    9. '   ' → logprob: -17.625247955322266
    10. 'r' → logprob: -18.500247955322266

Token 1011: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0012152367271482944
    2. 'ing' → logprob: -6.75121545791626
    3. 'ir' → logprob: -11.251214981079102
    4. '[' → logprob: -11.376214981079102
    5. '-' → logprob: -12.001214981079102
    6. '#' → logprob: -13.251214981079102
    7. 'out' → logprob: -13.376214981079102
    8. 'range' → logprob: -13.376214981079102
    9. '```' → logprob: -13.626214981079102
    10. '(' → logprob: -13.751214981079102

Token 1012: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2676638066768646
    2. '(' → logprob: -2.1426637172698975
    3. 'range' → logprob: -2.3926637172698975
    4. 'de' → logprob: -4.142663955688477
    5. '(range' → logprob: -5.142663955688477
    6. 'du' → logprob: -5.767663955688477
    7. '```' → logprob: -8.517663955688477
    8. '(len' → logprob: -8.517663955688477
    9. '       ' → logprob: -9.017663955688477
    10. ' from' → logprob: -9.392663955688477

Token 1013: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010212380439043045
    2. 'len' → logprob: -5.260212421417236
    3. '0' → logprob: -5.510212421417236
    4. ' range' → logprob: -7.760212421417236
    5. 'reverse' → logprob: -8.635211944580078
    6. 're' → logprob: -8.760211944580078
    7. 'the' → logprob: -9.385211944580078
    8. '1' → logprob: -10.760211944580078
    9. '   ' → logprob: -11.135211944580078
    10. '```' → logprob: -11.635211944580078

Token 1014: ' fin' (ID: 2131)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7955421209335327
    2. 'end' → logprob: -1.2955421209335327
    3. 'len' → logprob: -1.5455421209335327
    4. 'range' → logprob: -2.9205422401428223
    5. 'fin' → logprob: -5.420542240142822
    6. '1' → logprob: -6.920542240142822
    7. '-end' → logprob: -8.045541763305664
    8. 'reverse' → logprob: -8.420541763305664
    9. 'E' → logprob: -8.670541763305664
    10. '#' → logprob: -8.670541763305664

Token 1015: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15812483429908752
    2. '                       ' → logprob: -2.1581249237060547
    3. ' for' → logprob: -3.5331249237060547
    4. '                           ' → logprob: -7.158124923706055
    5. '                   ' → logprob: -7.408124923706055
    6. '```' → logprob: -10.158124923706055
    7. '           ' → logprob: -10.283124923706055
    8. '               ' → logprob: -10.658124923706055
    9. '                        
' → logprob: -12.658124923706055
    10. '   ' → logprob: -13.158124923706055

Token 1016: '                       ' (ID: 968)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47447481751441956
    2. '                       ' → logprob: -0.9744747877120972
    3. ' for' → logprob: -8.474474906921387
    4. '```' → logprob: -9.474474906921387
    5. '                   ' → logprob: -9.849474906921387
    6. '                           ' → logprob: -9.849474906921387
    7. '           ' → logprob: -12.474474906921387
    8. '               ' → logprob: -13.224474906921387
    9. '                        ' → logprob: -15.099474906921387
    10. '   ' → logprob: -15.724474906921387

Token 1017: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026562742423266172
    2. '                       ' → logprob: -6.00265645980835
    3. ' for' → logprob: -8.752655982971191
    4. '                   ' → logprob: -11.127655982971191
    5. '                           ' → logprob: -12.502655982971191
    6. '```' → logprob: -13.627655982971191
    7. '           ' → logprob: -13.752655982971191
    8. '               ' → logprob: -14.377655982971191
    9. '   ' → logprob: -14.377655982971191
    10. '	for' → logprob: -16.002656936645508

Token 1018: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011188744247192517
    2. ' split' → logprob: -9.12511157989502
    3. 'len' → logprob: -13.62511157989502
    4. '(split' → logprob: -14.87511157989502
    5. 'range' → logprob: -15.00011157989502
    6. 'spl' → logprob: -15.37511157989502
    7. 'pos' → logprob: -15.62511157989502
    8. 'length' → logprob: -15.75011157989502
    9. 'reverse' → logprob: -15.87511157989502
    10. '   ' → logprob: -16.250112533569336

Token 1019: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0005027544684708118
    2. 'pos' → logprob: -7.750502586364746
    3. 'Pos' → logprob: -11.125502586364746
    4. '_' → logprob: -11.125502586364746
    5. 'split' → logprob: -11.625502586364746
    6. '_position' → logprob: -11.750502586364746
    7. '_positions' → logprob: -11.875502586364746
    8. 'in' → logprob: -12.500502586364746
    9. '```' → logprob: -12.750502586364746
    10. '_len' → logprob: -12.875502586364746

Token 1020: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022524237632751
    2. 'in' → logprob: -1.91022527217865
    3. 'range' → logprob: -14.910224914550781
    4. ' ' → logprob: -15.160224914550781
    5. '   ' → logprob: -15.910224914550781
    6. 'from' → logprob: -16.66022491455078
    7. '1' → logprob: -16.91022491455078
    8. '
' → logprob: -17.28522491455078
    9. 'import' → logprob: -17.28522491455078
    10. ',' → logprob: -17.53522491455078

Token 1021: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029757659882307053
    2. ' range' → logprob: -3.5297577381134033
    3. '1' → logprob: -12.154757499694824
    4. ' ' → logprob: -14.654757499694824
    5. 'len' → logprob: -14.779757499694824
    6. '0' → logprob: -14.904757499694824
    7. '(range' → logprob: -15.029757499694824
    8. ' in' → logprob: -16.02975845336914
    9. '
' → logprob: -16.15475845336914
    10. 'in' → logprob: -16.65475845336914

Token 1022: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6996410489082336
    2. '(len' → logprob: -0.6996410489082336
    3. '1' → logprob: -5.324641227722168
    4. 'len' → logprob: -6.449641227722168
    5. ' len' → logprob: -12.449641227722168
    6. '0' → logprob: -12.449641227722168
    7. '[len' → logprob: -12.574641227722168
    8. ' ' → logprob: -12.824641227722168
    9. '(length' → logprob: -13.199641227722168
    10. ' (' → logprob: -13.449641227722168

Token 1023: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0699549987912178
    2. 'len' → logprob: -2.6949551105499268
    3. '0' → logprob: -11.694954872131348
    4. ' len' → logprob: -12.319954872131348
    5. ' ' → logprob: -13.319954872131348
    6. '(len' → logprob: -13.694954872131348
    7. 'length' → logprob: -13.944954872131348
    8. '
' → logprob: -14.694954872131348
    9. '[len' → logprob: -14.944954872131348
    10. '   ' → logprob: -15.632454872131348

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049442533403635025
    2. ',len' → logprob: -3.0494425296783447
    3. ' ,' → logprob: -7.424442768096924
    4. '(len' → logprob: -8.424442291259766
    5. 'len' → logprob: -11.049442291259766
    6. ',length' → logprob: -11.299442291259766
    7. '1' → logprob: -12.049442291259766
    8. ' len' → logprob: -13.549442291259766
    9. '=len' → logprob: -13.799442291259766
    10. '   ' → logprob: -14.799442291259766

Token 1025: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.165027217415627e-05
    2. ' len' → logprob: -10.750021934509277
    3. '(len' → logprob: -16.62502098083496
    4. '	len' → logprob: -17.37502098083496
    5. '                   ' → logprob: -18.12502098083496
    6. '   ' → logprob: -18.37502098083496
    7. '[len' → logprob: -18.50002098083496
    8. '                           ' → logprob: -18.62502098083496
    9. '                       ' → logprob: -18.75002098083496
    10. '               ' → logprob: -20.00002098083496

Token 1026: '(train' (ID: 46587)
  Prédit: '(train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(train' → logprob: -0.011051355861127377
    2. 'train' → logprob: -4.511051177978516
    3. '=train' → logprob: -13.761051177978516
    4. ' train' → logprob: -14.011051177978516
    5. 'm' → logprob: -14.261051177978516
    6. '(' → logprob: -14.886051177978516
    7. '(tr' → logprob: -15.761051177978516
    8. '(t' → logprob: -16.511051177978516
    9. '```' → logprob: -16.636051177978516
    10. ')' → logprob: -16.886051177978516

Token 1027: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015816856175661087
    2. '-' → logprob: -4.515816688537598
    3. ' +' → logprob: -6.140816688537598
    4. ' -' → logprob: -6.515816688537598
    5. '[-' → logprob: -7.515816688537598
    6. '()+' → logprob: -8.015816688537598
    7. '+-' → logprob: -9.640816688537598
    8. '()-' → logprob: -9.640816688537598
    9. ')+' → logprob: -10.140816688537598
    10. '-s' → logprob: -11.265816688537598

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006091015879064798
    2. '+' → logprob: -5.131091117858887
    3. 'len' → logprob: -8.756091117858887
    4. ' ' → logprob: -13.256091117858887
    5. ' +' → logprob: -13.631091117858887
    6. ' len' → logprob: -14.256091117858887
    7. '```' → logprob: -14.631091117858887
    8. '(len' → logprob: -15.006091117858887
    9. '[len' → logprob: -16.38109016418457
    10. '   ' → logprob: -16.50609016418457

Token 1029: '):
' (ID: 1883)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3195399045944214
    2. '):
' → logprob: -1.4445399045944214
    3. ':
' → logprob: -4.444540023803711
    4. '):' → logprob: -4.569540023803711
    5. '                       ' → logprob: -4.944540023803711
    6. ':' → logprob: -5.069540023803711
    7. '                               ' → logprob: -6.819540023803711
    8. '```' → logprob: -8.694540023803711
    9. '[::-' → logprob: -9.069540023803711
    10. ',' → logprob: -9.194540023803711

Token 1030: '                           ' (ID: 1686)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6948251128196716
    2. '                           ' → logprob: -0.6948251128196716
    3. '                               ' → logprob: -7.069825172424316
    4. ' moved' → logprob: -8.319825172424316
    5. '                       ' → logprob: -8.444825172424316
    6. '   ' → logprob: -8.569825172424316
    7. '```' → logprob: -9.194825172424316
    8. '                            ' → logprob: -10.194825172424316
    9. '           ' → logprob: -12.319825172424316
    10. 'split' → logprob: -12.444825172424316

Token 1031: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00028970264247618616
    2. '                           ' → logprob: -8.250289916992188
    3. '                               ' → logprob: -10.875289916992188
    4. '   ' → logprob: -12.375289916992188
    5. ' moved' → logprob: -12.500289916992188
    6. '                            ' → logprob: -14.625289916992188
    7. 'mov' → logprob: -15.375289916992188
    8. 'moving' → logprob: -16.000289916992188
    9. 'split' → logprob: -16.125289916992188
    10. '                       ' → logprob: -16.125289916992188

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740912914276123
    2. ' =' → logprob: -0.9740912914276123
    3. '=train' → logprob: -11.224091529846191
    4. '=
' → logprob: -14.724091529846191
    5. 'train' → logprob: -16.224090576171875
    6. '=m' → logprob: -16.474090576171875
    7. '
' → logprob: -16.849090576171875
    8. '=end' → logprob: -16.974090576171875
    9. '```' → logprob: -16.974090576171875
    10. '`' → logprob: -17.349090576171875

Token 1033: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.00033546582562848926
    2. ' train' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '(train' → logprob: -19.375335693359375
    5. '=train' → logprob: -19.750335693359375
    6. 'trainer' → logprob: -20.500335693359375
    7. ' ' → logprob: -20.625335693359375
    8. 'tr' → logprob: -21.375335693359375
    9. '                   ' → logprob: -21.500335693359375
    10. 'trained' → logprob: -21.625335693359375

Token 1034: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.001502598519437015
    2. '[len' → logprob: -6.501502513885498
    3. 'len' → logprob: -15.126502990722656
    4. '[:-' → logprob: -17.251502990722656
    5. '[' → logprob: -18.251502990722656
    6. '[::-' → logprob: -18.501502990722656
    7. '   ' → logprob: -18.751502990722656
    8. '[:' → logprob: -19.376502990722656
    9. '
' → logprob: -20.126502990722656
    10. ' [-' → logprob: -20.251502990722656

Token 1035: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.625000953674316
    3. '(split' → logprob: -16.875
    4. '1' → logprob: -18.5
    5. '```' → logprob: -18.875
    6. '                           ' → logprob: -19.5
    7. 'plit' → logprob: -20.0
    8. '                       ' → logprob: -20.625
    9. 'spl' → logprob: -20.625
    10. '                               ' → logprob: -21.125

Token 1036: '_pos' (ID: 14692)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0517614483833313
    2. 'pos' → logprob: -3.0517613887786865
    3. '_pos' → logprob: -5.801761627197266
    4. 'Pos' → logprob: -9.551761627197266
    5. '                           ' → logprob: -10.301761627197266
    6. '```' → logprob: -11.176761627197266
    7. '1' → logprob: -12.176761627197266
    8. ' split' → logprob: -12.426761627197266
    9. '(split' → logprob: -12.551761627197266
    10. '                       ' → logprob: -12.676761627197266

Token 1037: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6442815065383911
    2. ']' → logprob: -1.3942815065383911
    3. ':]
' → logprob: -1.6442815065383911
    4. ']
' → logprob: -3.3942813873291016
    5. ':' → logprob: -8.644281387329102
    6. ']
' → logprob: -10.394281387329102
    7. '```' → logprob: -12.019281387329102
    8. ':]

' → logprob: -12.394281387329102
    9. ' :]' → logprob: -12.519281387329102
    10. ':].' → logprob: -12.644281387329102

Token 1038: '    ' (ID: 257)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.015656910836696625
    2. '                            ' → logprob: -4.3906569480896
    3. '                               ' → logprob: -6.8906569480896
    4. '                       ' → logprob: -7.2656569480896
    5. '<|end|>' → logprob: -7.8906569480896
    6. ' kept' → logprob: -8.140656471252441
    7. '                            
' → logprob: -8.765656471252441
    8. '                        ' → logprob: -9.015656471252441
    9. '                             ' → logprob: -9.015656471252441
    10. '                          ' → logprob: -9.515656471252441

Token 1039: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10346661508083344
    2. ' #' → logprob: -2.853466510772705
    3. '#' (adapté à ' #') → logprob: -3.478466510772705
    4. '                            ' → logprob: -5.228466510772705
    5. '                       ' → logprob: -6.228466510772705
    6. '                               ' → logprob: -7.103466510772705
    7. '                            
' → logprob: -8.103466987609863
    8. '                          ' → logprob: -8.353466987609863
    9. '           ' → logprob: -8.478466987609863
    10. '                             ' → logprob: -8.728466987609863

Token 1040: ' sous' (ID: 14487)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.6079452037811279
    2. 'train' → logprob: -1.232945203781128
    3. ' kept' → logprob: -1.857945203781128
    4. ' train' → logprob: -4.982945442199707
    5. '```' → logprob: -7.357945442199707
    6. 'keep' → logprob: -7.982945442199707
    7. '-ke' → logprob: -9.982945442199707
    8. '                           ' → logprob: -10.357945442199707
    9. 'split' → logprob: -10.482945442199707
    10. '_ke' → logprob: -10.857945442199707

Token 1041: '-tr' (ID: 15461)
  Prédit: '-tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-tr' → logprob: -0.43526047468185425
    2. '_train' → logprob: -1.060260534286499
    3. 'train' → logprob: -5.31026029586792
    4. '_tr' → logprob: -7.06026029586792
    5. '-' → logprob: -8.060260772705078
    6. '```' → logprob: -8.435260772705078
    7. ' train' → logprob: -9.560260772705078
    8. '-_' → logprob: -10.185260772705078
    9. '=train' → logprob: -11.185260772705078
    10. '[-' → logprob: -11.435260772705078

Token 1042: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0167470071464777
    2. 'train' → logprob: -5.141746997833252
    3. 'rain' → logprob: -5.516746997833252
    4. '_train' → logprob: -5.891746997833252
    5. '_' → logprob: -6.016746997833252
    6. '```' → logprob: -7.641746997833252
    7. '-' → logprob: -9.14174747467041
    8. 'a' → logprob: -9.39174747467041
    9. '_in' → logprob: -9.64174747467041
    10. '...' → logprob: -9.64174747467041

Token 1043: ' déplac' (ID: 195321)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.650935173034668
    2. 'm' → logprob: -0.900935173034668
    3. '<|end|>' → logprob: -3.275935173034668
    4. '                            
' → logprob: -4.150935173034668
    5. ' moved' → logprob: -5.025935173034668
    6. '                            ' → logprob: -6.025935173034668
    7. '```' → logprob: -6.525935173034668
    8. 'mov' → logprob: -7.025935173034668
    9. '						' → logprob: -7.275935173034668
    10. '                             ' → logprob: -7.525935173034668

Token 1044: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00022415895364247262
    2. 'ed' → logprob: -8.625224113464355
    3. 'u' → logprob: -10.625224113464355
    4. 'e' → logprob: -11.750224113464355
    5. ' moved' → logprob: -12.500224113464355
    6. 'd' → logprob: -13.625224113464355
    7. 'et' → logprob: -13.750224113464355
    8. 'ée' → logprob: -13.875224113464355
    9. 'è' → logprob: -14.000224113464355
    10. '=' → logprob: -14.375224113464355

Token 1045: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0027743245009332895
    2. '                            ' → logprob: -6.752774238586426
    3. '           ' → logprob: -8.002774238586426
    4. '                            
' → logprob: -8.377774238586426
    5. '                               ' → logprob: -8.502774238586426
    6. '
' → logprob: -8.627774238586426
    7. ' kept' → logprob: -8.627774238586426
    8. '                       ' → logprob: -9.002774238586426
    9. '```' → logprob: -9.377774238586426
    10. 'ke' → logprob: -9.627774238586426

Token 1046: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -9.05499910004437e-05
    2. '                            ' → logprob: -10.125090599060059
    3. 'ke' → logprob: -11.125090599060059
    4. '           ' → logprob: -11.375090599060059
    5. '                               ' → logprob: -11.500090599060059
    6. '```' → logprob: -11.750090599060059
    7. '                       ' → logprob: -12.875090599060059
    8. ' kept' → logprob: -13.875090599060059
    9. '   ' → logprob: -14.000090599060059
    10. '               ' → logprob: -14.375090599060059

Token 1047: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.5156081318855286
    2. '                           ' → logprob: -1.2656080722808838
    3. ' kept' → logprob: -2.140608072280884
    4. '                            ' → logprob: -6.015608310699463
    5. '                               ' → logprob: -8.265607833862305
    6. '           ' → logprob: -8.640607833862305
    7. 'keep' → logprob: -9.015607833862305
    8. '```' → logprob: -9.765607833862305
    9. '                       ' → logprob: -10.515607833862305
    10. '   ' → logprob: -10.515607833862305

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030444521456956863
    2. ' =' → logprob: -3.530444622039795
    3. '=train' → logprob: -7.280444622039795
    4. 'train' → logprob: -12.405444145202637
    5. '=
' → logprob: -14.780444145202637
    6. '_train' → logprob: -16.655445098876953
    7. '```' → logprob: -16.905445098876953
    8. ' train' → logprob: -17.155445098876953
    9. '                       ' → logprob: -17.155445098876953
    10. '           ' → logprob: -17.155445098876953

Token 1049: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.011048170737922192
    2. ' train' → logprob: -4.511048316955566
    3. '=train' → logprob: -15.886048316955566
    4. '(train' → logprob: -16.01104736328125
    5. '   ' → logprob: -16.76104736328125
    6. '.train' → logprob: -17.26104736328125
    7. ' ' → logprob: -17.38604736328125
    8. '_train' → logprob: -18.01104736328125
    9. 'trian' → logprob: -18.88604736328125
    10. '```' → logprob: -19.01104736328125

Token 1050: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.00022976152831688523
    2. '[-' → logprob: -8.875229835510254
    3. '[' → logprob: -9.500229835510254
    4. '[:' → logprob: -11.125229835510254
    5. 's' → logprob: -16.250228881835938
    6. '```' → logprob: -16.250228881835938
    7. '`' → logprob: -17.000228881835938
    8. '[i' → logprob: -17.500228881835938
    9. '[::-' → logprob: -18.125228881835938
    10. '   ' → logprob: -18.125228881835938

Token 1051: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.625000953674316
    3. '                       ' → logprob: -16.375
    4. '                           ' → logprob: -16.5
    5. '                               ' → logprob: -17.625
    6. 'plit' → logprob: -17.75
    7. '(split' → logprob: -17.75
    8. '```' → logprob: -18.5
    9. '   ' → logprob: -18.75
    10. '       ' → logprob: -18.875

Token 1052: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.01818927936255932
    2. 'split' → logprob: -4.268189430236816
    3. 'pos' → logprob: -5.518189430236816
    4. 'Pos' → logprob: -12.893189430236816
    5. '-pos' → logprob: -13.643189430236816
    6. '1' → logprob: -16.1431884765625
    7. '```' → logprob: -16.2681884765625
    8. '(split' → logprob: -16.5181884765625
    9. ' split' → logprob: -16.7681884765625
    10. 'spl' → logprob: -16.7681884765625

Token 1053: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026741522015072405
    2. ']
' → logprob: -8.250267028808594
    3. '                           ' → logprob: -12.500267028808594
    4. '']' → logprob: -14.125267028808594
    5. ' ]' → logprob: -14.250267028808594
    6. ']
' → logprob: -14.375267028808594
    7. '   ' → logprob: -15.875267028808594
    8. '                       ' → logprob: -16.125267028808594
    9. '```' → logprob: -17.000267028808594
    10. ']

' → logprob: -17.125267028808594

Token 1054: '     ' (ID: 530)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.21161316335201263
    2. '                               ' → logprob: -1.7116131782531738
    3. '```' → logprob: -5.086613178253174
    4. '#' → logprob: -6.211613178253174
    5. '                       ' → logprob: -7.961613178253174
    6. '                            
' → logprob: -8.211612701416016
    7. '                            ' → logprob: -8.461612701416016
    8. '           ' → logprob: -8.586612701416016
    9. '<|end|>' → logprob: -9.086612701416016
    10. ' #' → logprob: -9.211612701416016

Token 1055: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7591361403465271
    2. '                           ' → logprob: -1.2591361999511719
    3. '                               ' → logprob: -1.7591361999511719
    4. '
' → logprob: -3.134136199951172
    5. ' for' → logprob: -4.384136199951172
    6. 'for' → logprob: -4.634136199951172
    7. '```' → logprob: -5.634136199951172
    8. ' #' → logprob: -6.884136199951172
    9. '                            ' → logprob: -7.009136199951172
    10. '                             ' → logprob: -7.009136199951172

Token 1056: ' reste' (ID: 26769)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7420371174812317
    2. '                           ' → logprob: -1.367037057876587
    3. '#' → logprob: -2.117037057876587
    4. '```' → logprob: -3.117037057876587
    5. 'keep' → logprob: -3.867037057876587
    6. 'ke' → logprob: -3.992037057876587
    7. 'train' → logprob: -4.367037296295166
    8. '                       ' → logprob: -4.367037296295166
    9. '
' → logprob: -4.992037296295166
    10. '                            
' → logprob: -5.117037296295166

Token 1057: ' sur' (ID: 1512)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.32510676980018616
    2. '                           ' → logprob: -2.3251068592071533
    3. '(train' → logprob: -3.5751068592071533
    4. '[-' → logprob: -4.200106620788574
    5. '                       ' → logprob: -4.450106620788574
    6. '<|end|>' → logprob: -4.700106620788574
    7. '+' → logprob: -4.825106620788574
    8. '                            
' → logprob: -4.825106620788574
    9. 'sur' → logprob: -5.075106620788574
    10. '_sur' → logprob: -5.075106620788574

Token 1058: ' la' (ID: 557)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.3271251320838928
    2. 'la' → logprob: -1.327125072479248
    3. 'le' → logprob: -4.327125072479248
    4. 'l' → logprob: -8.327125549316406
    5. 'line' → logprob: -10.077125549316406
    6. 'the' → logprob: -10.202125549316406
    7. 'len' → logprob: -10.202125549316406
    8. '```' → logprob: -10.202125549316406
    9. '(train' → logprob: -10.327125549316406
    10. ' la' → logprob: -10.327125549316406

Token 1059: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.06695228070020676
    2. 'line' → logprob: -2.9419522285461426
    3. 'train' → logprob: -4.441952228546143
    4. 'l' → logprob: -8.5669527053833
    5. ' ligne' → logprob: -11.3169527053833
    6. '```' → logprob: -11.8169527053833
    7. 'la' → logprob: -12.1919527053833
    8. 'linie' → logprob: -13.1919527053833
    9. '
' → logprob: -13.9419527053833
    10. '`' → logprob: -14.4419527053833

Token 1060: '

' (ID: 279)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.13716351985931396
    2. '
' → logprob: -3.3871636390686035
    3. '                               ' → logprob: -3.5121636390686035
    4. '```' → logprob: -3.6371636390686035
    5. 'for' → logprob: -3.8871636390686035
    6. '<|end|>' → logprob: -4.7621636390686035
    7. '                            
' → logprob: -5.5121636390686035
    8. ' for' → logprob: -6.1371636390686035
    9. '#' → logprob: -7.1371636390686035
    10. '                            ' → logprob: -7.5121636390686035

Token 1061: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06817124783992767
    2. '                           ' → logprob: -3.443171262741089
    3. '```' → logprob: -3.693171262741089
    4. ' for' → logprob: -5.69317102432251
    5. 'for' → logprob: -5.94317102432251
    6. '<|end|>' → logprob: -6.69317102432251
    7. '                                   ' → logprob: -7.31817102432251
    8. '                       ' → logprob: -8.068171501159668
    9. '                             ' → logprob: -8.818171501159668
    10. '               ' → logprob: -9.068171501159668

Token 1062: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005766240647062659
    2. '#' → logprob: -8.000576972961426
    3. '                               ' → logprob: -9.000576972961426
    4. '                           ' → logprob: -9.125576972961426
    5. ' for' → logprob: -12.000576972961426
    6. '                       ' → logprob: -14.000576972961426
    7. '   ' → logprob: -14.000576972961426
    8. '                   ' → logprob: -15.375576972961426
    9. '```' → logprob: -15.375576972961426
    10. '                                   ' → logprob: -15.750576972961426

Token 1063: ' (' (ID: 350)
  Prédit: '(dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.0008463177946396172
    2. 'dest' → logprob: -7.2508463859558105
    3. ' (' → logprob: -9.000845909118652
    4. ' dest' → logprob: -12.750845909118652
    5. '(d' → logprob: -12.875845909118652
    6. '(dist' → logprob: -13.125845909118652
    7. '(destination' → logprob: -13.375845909118652
    8. '(dst' → logprob: -14.125845909118652
    9. '(conn' → logprob: -14.250845909118652
    10. 'conn' → logprob: -15.125845909118652

Token 1064: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -2.2961512513575144e-05
    2. '(dest' → logprob: -10.750022888183594
    3. ' dest' → logprob: -14.250022888183594
    4. 'i' → logprob: -14.375022888183594
    5. '	dest' → logprob: -15.875022888183594
    6. '(i' → logprob: -16.875022888183594
    7. '               ' → logprob: -17.875022888183594
    8. '           ' → logprob: -17.875022888183594
    9. '                   ' → logprob: -17.875022888183594
    10. '   ' → logprob: -18.000022888183594

Token 1065: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.004852072801440954
    2. 'dest' → logprob: -5.379852294921875
    3. '(dest' → logprob: -8.629852294921875
    4. 'line' → logprob: -11.004852294921875
    5. ',' → logprob: -11.629852294921875
    6. '(i' → logprob: -11.754852294921875
    7. 'Line' → logprob: -11.879852294921875
    8. '           ' → logprob: -12.754852294921875
    9. '_dest' → logprob: -13.379852294921875
    10. 'i' → logprob: -13.504852294921875

Token 1066: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ',d' → logprob: -10.625027656555176
    3. ' ,' → logprob: -13.250027656555176
    4. '                           ' → logprob: -14.875027656555176
    5. 'dest' → logprob: -15.000027656555176
    6. '```' → logprob: -16.12502670288086
    7. '                               ' → logprob: -16.50002670288086
    8. '(dest' → logprob: -16.75002670288086
    9. '                             ' → logprob: -17.00002670288086
    10. 'def' → logprob: -17.37502670288086

Token 1067: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.00043376852408982813
    2. ' dest' → logprob: -7.750433921813965
    3. '(dest' → logprob: -12.875433921813965
    4. '	dest' → logprob: -15.000433921813965
    5. '.dest' → logprob: -16.50043296813965
    6. '                           ' → logprob: -17.37543296813965
    7. '_dest' → logprob: -17.75043296813965
    8. '                   ' → logprob: -17.75043296813965
    9. '               ' → logprob: -18.00043296813965
    10. '           ' → logprob: -18.12543296813965

Token 1068: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -7.584239938296378e-06
    2. 'side' → logprob: -12.375007629394531
    3. 'Side' → logprob: -13.750007629394531
    4. '_SIDE' → logprob: -13.875007629394531
    5. '_dest' → logprob: -15.000007629394531
    6. ''_' → logprob: -15.250007629394531
    7. ')' → logprob: -16.37500762939453
    8. '_sid' → logprob: -16.50000762939453
    9. ' side' → logprob: -16.50000762939453
    10. '```' → logprob: -16.62500762939453

Token 1069: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.762356209335849e-05
    2. 'in' → logprob: -10.62503719329834
    3. ' in' → logprob: -12.25003719329834
    4. '                           ' → logprob: -12.50003719329834
    5. ' )' → logprob: -12.75003719329834
    6. '                               ' → logprob: -14.62503719329834
    7. '   ' → logprob: -15.00003719329834
    8. '                             ' → logprob: -15.50003719329834
    9. '                            ' → logprob: -15.50003719329834
    10. '),' → logprob: -16.125038146972656

Token 1070: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014164801687002182
    2. 'in' → logprob: -4.264164924621582
    3. ')' → logprob: -14.514164924621582
    4. '                           ' → logprob: -15.264164924621582
    5. '```' → logprob: -15.514164924621582
    6. '                               ' → logprob: -16.264163970947266
    7. ',' → logprob: -17.389163970947266
    8. '	in' → logprob: -17.389163970947266
    9. '                            ' → logprob: -17.514163970947266
    10. '
' → logprob: -17.639163970947266

Token 1071: ' connections' (ID: 21069)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connections' → logprob: -3.547789674485102e-05
    2. ' connections' → logprob: -10.250035285949707
    3. '.connections' → logprob: -16.750036239624023
    4. 'connection' → logprob: -18.750036239624023
    5. '```' → logprob: -19.125036239624023
    6. 'collections' → logprob: -20.125036239624023
    7. '           ' → logprob: -20.250036239624023
    8. '               ' → logprob: -20.375036239624023
    9. '`' → logprob: -20.875036239624023
    10. '   ' → logprob: -21.375036239624023

Token 1072: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -16.625
    3. '[' → logprob: -17.0
    4. '```' → logprob: -17.5
    5. ' [(' → logprob: -17.875
    6. '=(' → logprob: -19.75
    7. '[((' → logprob: -19.875
    8. '[[' → logprob: -20.5
    9. '   ' → logprob: -20.625
    10. ',' → logprob: -20.625

Token 1073: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.572941179503687e-05
    2. '(i' → logprob: -10.125045776367188
    3. ' i' → logprob: -13.750045776367188
    4. '[i' → logprob: -13.875045776367188
    5. '                   ' → logprob: -14.000045776367188
    6. ' (' → logprob: -14.125045776367188
    7. '                           ' → logprob: -14.500045776367188
    8. '                               ' → logprob: -15.625045776367188
    9. '               ' → logprob: -15.875045776367188
    10. '                       ' → logprob: -15.875045776367188

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015347852604463696
    2. ',(' → logprob: -9.375153541564941
    3. ',d' → logprob: -10.375153541564941
    4. ' ,' → logprob: -11.000153541564941
    5. '[' → logprob: -12.250153541564941
    6. ' (' → logprob: -12.500153541564941
    7. '(dest' → logprob: -12.625153541564941
    8. '(' → logprob: -12.750153541564941
    9. '(side' → logprob: -13.125153541564941
    10. '[(' → logprob: -13.750153541564941

Token 1075: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0011408114805817604
    2. 'dest' → logprob: -7.126140594482422
    3. ' side' → logprob: -8.001140594482422
    4. ' dest' → logprob: -14.626140594482422
    5. '(side' → logprob: -15.376140594482422
    6. 'sid' → logprob: -16.001140594482422
    7. '.side' → logprob: -16.751140594482422
    8. ''s' → logprob: -16.751140594482422
    9. '	side' → logprob: -16.751140594482422
    10. 'Side' → logprob: -16.876140594482422

Token 1076: ')]' (ID: 15710)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.84848552942276
    2. '):
' → logprob: -1.5984854698181152
    3. ')]' → logprob: -1.9734854698181152
    4. ']:' → logprob: -2.4734854698181152
    5. ']' → logprob: -2.8484854698181152
    6. '):' → logprob: -3.3484854698181152
    7. ']):
' → logprob: -4.098485469818115
    8. ']):' → logprob: -4.098485469818115
    9. ')' → logprob: -4.723485469818115
    10. '[(' → logprob: -4.973485469818115

Token 1077: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.016792258247733116
    2. ':
' → logprob: -5.391792297363281
    3. 'new' → logprob: -5.516792297363281
    4. '```' → logprob: -5.641792297363281
    5. ':' → logprob: -6.141792297363281
    6. ' new' → logprob: -7.391792297363281
    7. '                           ' → logprob: -7.766792297363281
    8. '):
' → logprob: -8.016792297363281
    9. '                                
' → logprob: -8.641792297363281
    10. '{
' → logprob: -9.016792297363281

Token 1078: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0035210796631872654
    2. '```' → logprob: -5.753520965576172
    3. '                                   ' → logprob: -8.628520965576172
    4. '                           ' → logprob: -9.753520965576172
    5. 'new' → logprob: -9.753520965576172
    6. '                                       ' → logprob: -11.253520965576172
    7. '``' → logprob: -11.378520965576172
    8. '                             ' → logprob: -12.253520965576172
    9. '                              ' → logprob: -12.503520965576172
    10. '                                           ' → logprob: -12.628520965576172

Token 1079: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' (adapté à ' dest') → logprob: -0.005304315593093634
    2. '                               ' → logprob: -5.255304336547852
    3. ' dest' → logprob: -10.255304336547852
    4. 'def' → logprob: -10.505304336547852
    5. '                                   ' → logprob: -12.755304336547852
    6. '```' → logprob: -13.255304336547852
    7. 'dst' → logprob: -14.880304336547852
    8. '                           ' → logprob: -14.880304336547852
    9. 'train' → logprob: -15.005304336547852
    10. '                                ' → logprob: -15.255304336547852

Token 1080: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.0017336098244413733
    2. '_line' → logprob: -6.501733779907227
    3. ''_' → logprob: -9.751733779907227
    4. '_' → logprob: -10.001733779907227
    5. '_token' → logprob: -10.501733779907227
    6. ')_' → logprob: -10.626733779907227
    7. '```' → logprob: -11.001733779907227
    8. '_code' → logprob: -11.626733779907227
    9. '_tokens' → logprob: -11.876733779907227
    10. 'train' → logprob: -11.876733779907227

Token 1081: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03869873657822609
    2. '=' → logprob: -3.288698673248291
    3. '<|end|>' → logprob: -7.913698673248291
    4. ')' → logprob: -9.41369915008545
    5. '_=' → logprob: -10.03869915008545
    6. '_' → logprob: -10.03869915008545
    7. '<|end|>' → logprob: -10.78869915008545
    8. '                               ' → logprob: -11.41369915008545
    9. '=None' → logprob: -11.66369915008545
    10. ' =)' → logprob: -11.91369915008545

Token 1082: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.001170460251159966
    2. ' state' → logprob: -6.751170635223389
    3. '                               ' → logprob: -15.75117015838623
    4. '                                   ' → logprob: -17.251171112060547
    5. '(state' → logprob: -18.001171112060547
    6. '                           ' → logprob: -19.251171112060547
    7. '	state' → logprob: -19.876171112060547
    8. '                                ' → logprob: -20.626171112060547
    9. '                                       ' → logprob: -20.626171112060547
    10. '[state' → logprob: -20.626171112060547

Token 1083: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.7292167184641585e-05
    2. '[(' → logprob: -10.250057220458984
    3. '(dest' → logprob: -11.375057220458984
    4. 'dest' → logprob: -11.875057220458984
    5. '                               ' → logprob: -12.875057220458984
    6. '                                   ' → logprob: -15.250057220458984
    7. '```' → logprob: -15.375057220458984
    8. '                           ' → logprob: -16.500057220458984
    9. '                                       ' → logprob: -16.625057220458984
    10. ' [' → logprob: -16.625057220458984

Token 1084: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -2.165027217415627e-05
    2. '(dest' → logprob: -10.750021934509277
    3. ' dest' → logprob: -16.00002098083496
    4. '(' → logprob: -17.25002098083496
    5. '[' → logprob: -17.87502098083496
    6. '                               ' → logprob: -19.87502098083496
    7. '	dest' → logprob: -19.87502098083496
    8. '                           ' → logprob: -20.50002098083496
    9. '.dest' → logprob: -20.50002098083496
    10. '                                   ' → logprob: -21.00002098083496

Token 1085: '_line' (ID: 14418)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.054298028349876404
    2. '[' → logprob: -3.804297924041748
    3. '_dest' → logprob: -4.054297924041748
    4. '(dest' → logprob: -4.679297924041748
    5. '_line' → logprob: -5.554297924041748
    6. '	dest' → logprob: -10.554298400878906
    7. '.dest' → logprob: -11.679298400878906
    8. ' dest' → logprob: -12.179298400878906
    9. '```' → logprob: -12.429298400878906
    10. 'def' → logprob: -12.554298400878906

Token 1086: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.800007164478302
    2. '                               ' → logprob: -0.925007164478302
    3. ')
' → logprob: -2.4250071048736572
    4. ',' → logprob: -2.8000071048736572
    5. ']' → logprob: -6.425007343292236
    6. '),' → logprob: -6.925007343292236
    7. ']
' → logprob: -7.550007343292236
    8. '                           ' → logprob: -8.175006866455078
    9. '```' → logprob: -8.300006866455078
    10. '                                ' → logprob: -8.425006866455078

Token 1087: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.08175905048847198
    2. '```' → logprob: -2.581758975982666
    3. '                                   ' → logprob: -7.206758975982666
    4. '                                
' → logprob: -7.331758975982666
    5. '                                ' → logprob: -8.081759452819824
    6. 'new' → logprob: -8.206759452819824
    7. '``' → logprob: -8.206759452819824
    8. '`' → logprob: -8.456759452819824
    9. '                                                               ' → logprob: -9.831759452819824
    10. '                                       ' → logprob: -10.081759452819824

Token 1088: ' new' (ID: 620)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.014569253660738468
    2. '```' → logprob: -5.139569282531738
    3. 'new' (adapté à ' new') → logprob: -5.764569282531738
    4. ' new' → logprob: -5.764569282531738
    5. 'def' → logprob: -6.764569282531738
    6. '                                   ' → logprob: -7.514569282531738
    7. '                                ' → logprob: -8.514569282531738
    8. '                                
' → logprob: -8.889569282531738
    9. '`' → logprob: -9.889569282531738
    10. '``' → logprob: -9.889569282531738

Token 1089: '_dest' (ID: 78932)
  Prédit: '_dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dest' → logprob: -0.0017227731877937913
    2. 'dest' → logprob: -6.876722812652588
    3. '_' → logprob: -8.12672233581543
    4. '_train' → logprob: -8.25172233581543
    5. '_def' → logprob: -10.37672233581543
    6. '_destination' → logprob: -10.75172233581543
    7. '```' → logprob: -10.87672233581543
    8. '_dst' → logprob: -11.25172233581543
    9. ' _' → logprob: -11.37672233581543
    10. '_des' → logprob: -12.37672233581543

Token 1090: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -1.723973582556937e-05
    2. 'train' → logprob: -11.500017166137695
    3. '=_' → logprob: -13.000017166137695
    4. '=' → logprob: -13.500017166137695
    5. ' =' → logprob: -14.125017166137695
    6. 'Train' → logprob: -14.250017166137695
    7. '=train' → logprob: -15.000017166137695
    8. '```' → logprob: -15.125017166137695
    9. '_tr' → logprob: -15.250017166137695
    10. '_' → logprob: -15.500017166137695

Token 1091: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193706154823303
    2. '=' → logprob: -1.5019370317459106
    3. '                               ' → logprob: -12.626936912536621
    4. ')' → logprob: -13.376936912536621
    5. '<|end|>' → logprob: -14.626936912536621
    6. '                                ' → logprob: -14.876936912536621
    7. ' +=' → logprob: -15.001936912536621
    8. ',' → logprob: -15.001936912536621
    9. ' ' → logprob: -15.376936912536621
    10. '+=' → logprob: -15.501936912536621

Token 1092: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0067154900170862675
    2. ' append' → logprob: -5.006715297698975
    3. '.append' → logprob: -16.506715774536133
    4. '	append' → logprob: -18.381715774536133
    5. 'Append' → logprob: -20.006715774536133
    6. 'appen' → logprob: -20.006715774536133
    7. 'app' → logprob: -20.006715774536133
    8. '_append' → logprob: -20.506715774536133
    9. '                               ' → logprob: -22.006715774536133
    10. 'prepend' → logprob: -22.131715774536133

Token 1093: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.00013417120499070734
    2. '```' → logprob: -10.375134468078613
    3. '_dest' → logprob: -10.500134468078613
    4. '_' → logprob: -10.500134468078613
    5. '(dest' → logprob: -10.750134468078613
    6. 'dest' → logprob: -11.625134468078613
    7. '_tr' → logprob: -12.375134468078613
    8. '`' → logprob: -13.000134468078613
    9. '(_' → logprob: -13.500134468078613
    10. 'train' → logprob: -13.625134468078613

Token 1094: '(dest' (ID: 57370)
  Prédit: '(dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -11.00002670288086
    3. 'dest' → logprob: -12.12502670288086
    4. '(destination' → logprob: -13.00002670288086
    5. '(dst' → logprob: -13.37502670288086
    6. ' (' → logprob: -16.00002670288086
    7. '(
' → logprob: -16.12502670288086
    8. '```' → logprob: -17.25002670288086
    9. '(des' → logprob: -17.37502670288086
    10. '(dist' → logprob: -17.37502670288086

Token 1095: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.00025156480842269957
    2. '_dest' → logprob: -8.875251770019531
    3. 'dest' → logprob: -9.250251770019531
    4. '(dest' → logprob: -11.625251770019531
    5. '```' → logprob: -12.250251770019531
    6. '_tr' → logprob: -14.625251770019531
    7. '``' → logprob: -15.125251770019531
    8. 'train' → logprob: -15.750251770019531
    9. 'Train' → logprob: -15.750251770019531
    10. '_test' → logprob: -16.12525177001953

Token 1096: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026511022821068764
    2. ',m' → logprob: -3.6515109539031982
    3. '                               ' → logprob: -9.151511192321777
    4. '(m' → logprob: -9.651511192321777
    5. ' ,' → logprob: -11.276511192321777
    6. ',d' → logprob: -11.651511192321777
    7. '(dest' → logprob: -12.276511192321777
    8. ' (' → logprob: -12.776511192321777
    9. 'm' → logprob: -12.901511192321777
    10. ',(' → logprob: -13.026511192321777

Token 1097: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019291093340143561
    2. ' moved' → logprob: -6.25192928314209
    3. 'move' → logprob: -16.251928329467773
    4. 'Moved' → logprob: -16.251928329467773
    5. '                           ' → logprob: -16.626928329467773
    6. 'moving' → logprob: -16.876928329467773
    7. '	m' → logprob: -17.001928329467773
    8. '                               ' → logprob: -17.501928329467773
    9. 'mov' → logprob: -17.501928329467773
    10. ' m' → logprob: -17.876928329467773

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.625004768371582
    3. '                               ' → logprob: -14.125004768371582
    4. '(op' → logprob: -14.375004768371582
    5. ',
' → logprob: -15.375004768371582
    6. '                                   ' → logprob: -16.7500057220459
    7. '```' → logprob: -17.2500057220459
    8. ')' → logprob: -17.3750057220459
    9. '(' → logprob: -17.5000057220459
    10. '                           ' → logprob: -17.7500057220459

Token 1099: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0009413579828105867
    2. ' opposite' → logprob: -7.000941276550293
    3. 'opp' → logprob: -11.500941276550293
    4. 'dest' → logprob: -11.875941276550293
    5. '                           ' → logprob: -13.125941276550293
    6. '                               ' → logprob: -13.125941276550293
    7. '`' → logprob: -13.625941276550293
    8. '   ' → logprob: -13.750941276550293
    9. ' op' → logprob: -14.000941276550293
    10. '           ' → logprob: -14.000941276550293

Token 1100: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -9.372294698550832e-06
    2. '_dest' → logprob: -12.625009536743164
    3. ''_' → logprob: -13.000009536743164
    4. 'side' → logprob: -13.875009536743164
    5. '('_' → logprob: -13.875009536743164
    6. 'Side' → logprob: -14.750009536743164
    7. '```' → logprob: -15.250009536743164
    8. '_s' → logprob: -15.500009536743164
    9. '_sid' → logprob: -15.500009536743164
    10. '_SIDE' → logprob: -15.875009536743164

Token 1101: '(dest' (ID: 57370)
  Prédit: '(dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dest' → logprob: -1.1472419600977446e-06
    2. '(def' → logprob: -14.625000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(dst' → logprob: -16.000001907348633
    5. '(destination' → logprob: -16.375001907348633
    6. ' (' → logprob: -16.500001907348633
    7. 'dest' → logprob: -17.250001907348633
    8. '```' → logprob: -17.750001907348633
    9. '(des' → logprob: -17.875001907348633
    10. '(dev' → logprob: -19.000001907348633

Token 1102: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.0002764710516203195
    2. '_dest' → logprob: -8.375276565551758
    3. 'dest' → logprob: -10.375276565551758
    4. 'Side' → logprob: -12.000276565551758
    5. '(dest' → logprob: -12.500276565551758
    6. 'side' → logprob: -12.750276565551758
    7. '_line' → logprob: -14.500276565551758
    8. '_SIDE' → logprob: -14.875276565551758
    9. ')' → logprob: -15.500276565551758
    10. '_destination' → logprob: -15.875276565551758

Token 1103: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004153549205511808
    2. '))' → logprob: -5.504153728485107
    3. ')
' → logprob: -9.75415325164795
    4. '                               ' → logprob: -12.00415325164795
    5. ')))' → logprob: -12.75415325164795
    6. '))
' → logprob: -13.25415325164795
    7. ')}' → logprob: -13.37915325164795
    8. ')`' → logprob: -13.87915325164795
    9. ')]' → logprob: -14.25415325164795
    10. '                           ' → logprob: -14.25415325164795

Token 1104: '                               ' (ID: 2419)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5338528156280518
    2. ')' → logprob: -1.4088528156280518
    3. '                               ' → logprob: -2.1588528156280518
    4. '<|end|>' → logprob: -3.0338528156280518
    5. '``' → logprob: -6.533852577209473
    6. '
' → logprob: -7.533852577209473
    7. '                           ' → logprob: -7.658852577209473
    8. 'if' → logprob: -7.783852577209473
    9. '(
' → logprob: -8.033852577209473
    10. '       ' → logprob: -8.158852577209473

Token 1105: ' new' (ID: 620)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.45107972621917725
    2. 'new' (adapté à ' new') → logprob: -1.4510797262191772
    3. 'if' → logprob: -2.076079845428467
    4. ' new' → logprob: -6.326079845428467
    5. '```' → logprob: -7.576079845428467
    6. ' if' → logprob: -7.701079845428467
    7. '                                   ' → logprob: -8.201079368591309
    8. '
' → logprob: -9.326079368591309
    9. '                           ' → logprob: -9.826079368591309
    10. '                                       ' → logprob: -10.326079368591309

Token 1106: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3593766689300537
    2. '_dest' → logprob: -1.2343766689300537
    3. '_' → logprob: -4.734376907348633
    4. '_destination' → logprob: -6.859376907348633
    5. '_dst' → logprob: -7.484376907348633
    6. '_states' → logprob: -8.859376907348633
    7. '_s' → logprob: -9.609376907348633
    8. '_estado' → logprob: -9.984376907348633
    9. 'dest' → logprob: -10.109376907348633
    10. '_des' → logprob: -10.609376907348633

Token 1107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3885082006454468
    2. ' =' → logprob: -1.5135082006454468
    3. '.append' → logprob: -3.6385083198547363
    4. '[' → logprob: -4.013508319854736
    5. ')' → logprob: -4.138508319854736
    6. '                               ' → logprob: -4.263508319854736
    7. ',' → logprob: -5.388508319854736
    8. '<|end|>' → logprob: -5.513508319854736
    9. '                           ' → logprob: -5.638508319854736
    10. '                                   ' → logprob: -6.638508319854736

Token 1108: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2519344687461853
    2. 'list' → logprob: -1.50193452835083
    3. '(list' → logprob: -12.751934051513672
    4. 'new' → logprob: -14.126934051513672
    5. ' new' → logprob: -14.376934051513672
    6. '                               ' → logprob: -14.626934051513672
    7. '[list' → logprob: -15.751934051513672
    8. '                                   ' → logprob: -16.251934051513672
    9. '=list' → logprob: -16.251934051513672
    10. '[' → logprob: -16.876934051513672

Token 1109: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.006811053026467562
    2. 'state' → logprob: -5.006811141967773
    3. '(new' → logprob: -9.631811141967773
    4. 'new' → logprob: -10.756811141967773
    5. '[state' → logprob: -12.256811141967773
    6. ' state' → logprob: -13.381811141967773
    7. '```' → logprob: -14.006811141967773
    8. '(' → logprob: -14.006811141967773
    9. ',state' → logprob: -15.131811141967773
    10. ' (' → logprob: -15.631811141967773

Token 1110: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07130751013755798
    2. ')' → logprob: -2.821307420730591
    3. '                               ' → logprob: -4.82130765914917
    4. 'new' → logprob: -8.071307182312012
    5. '[new' → logprob: -8.696307182312012
    6. ',' → logprob: -8.946307182312012
    7. ')new' → logprob: -8.946307182312012
    8. ',new' → logprob: -9.446307182312012
    9. ')[' → logprob: -9.696307182312012
    10. '[' → logprob: -9.696307182312012

Token 1111: '                               ' (ID: 2419)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.7221757173538208
    2. '[' → logprob: -1.2221757173538208
    3. '                               ' → logprob: -2.4721755981445312
    4. '[i' → logprob: -2.8471755981445312
    5. 'new' → logprob: -2.9721755981445312
    6. '```' → logprob: -4.472175598144531
    7. '                           ' → logprob: -5.722175598144531
    8. '                                   ' → logprob: -6.347175598144531
    9. '[n' → logprob: -6.972175598144531
    10. '<|end|>' → logprob: -7.097175598144531

Token 1112: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0004693994123954326
    2. ' new' → logprob: -8.000469207763672
    3. '                               ' → logprob: -9.750469207763672
    4. '```' → logprob: -10.750469207763672
    5. '[new' → logprob: -10.750469207763672
    6. '                                   ' → logprob: -11.125469207763672
    7. '   ' → logprob: -12.250469207763672
    8. '[i' → logprob: -12.875469207763672
    9. '           ' → logprob: -13.250469207763672
    10. '               ' → logprob: -13.250469207763672

Token 1113: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.8219583075260743e-05
    2. '[i' → logprob: -11.000038146972656
    3. 'state' → logprob: -11.000038146972656
    4. '   ' → logprob: -13.250038146972656
    5. '```' → logprob: -14.250038146972656
    6. '_states' → logprob: -14.500038146972656
    7. 'State' → logprob: -14.625038146972656
    8. '[state' → logprob: -14.750038146972656
    9. '_STATE' → logprob: -15.125038146972656
    10. '[' → logprob: -16.000038146972656

Token 1114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021641071361955255
    2. '[' → logprob: -9.125216484069824
    3. '[new' → logprob: -9.250216484069824
    4. '```' → logprob: -12.500216484069824
    5. 'new' → logprob: -12.625216484069824
    6. '[s' → logprob: -14.125216484069824
    7. '=' → logprob: -14.750216484069824
    8. '=i' → logprob: -15.375216484069824
    9. '[I' → logprob: -15.375216484069824
    10. 'def' → logprob: -15.375216484069824

Token 1115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032366468803957105
    2. ']=' → logprob: -8.500323295593262
    3. '=' → logprob: -10.375323295593262
    4. ' ]' → logprob: -10.500323295593262
    5. '][' → logprob: -10.750323295593262
    6. '                           ' → logprob: -11.500323295593262
    7. ' =' → logprob: -11.875323295593262
    8. '                               ' → logprob: -12.375323295593262
    9. '           ' → logprob: -12.625323295593262
    10. '                   ' → logprob: -13.125323295593262

Token 1116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.115511953830719
    2. ' =' → logprob: -2.240511894226074
    3. '[' → logprob: -6.240511894226074
    4. '[i' → logprob: -8.865511894226074
    5. '                           ' → logprob: -8.990511894226074
    6. '                               ' → logprob: -9.240511894226074
    7. '           ' → logprob: -9.615511894226074
    8. ']' → logprob: -9.615511894226074
    9. '   ' → logprob: -10.740511894226074
    10. ')' → logprob: -10.990511894226074

Token 1117: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.0015140273608267307
    2. ' kept' → logprob: -6.501513957977295
    3. '   ' → logprob: -12.626514434814453
    4. 'keep' → logprob: -12.751514434814453
    5. '       ' → logprob: -13.751514434814453
    6. '-ke' → logprob: -14.001514434814453
    7. '_ke' → logprob: -14.501514434814453
    8. '           ' → logprob: -14.751514434814453
    9. 'Ke' → logprob: -15.251514434814453
    10. 'keeping' → logprob: -15.501514434814453

Token 1118: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.13199561834335327
    2. ' new' → logprob: -2.756995677947998
    3. '[new' → logprob: -3.381995677947998
    4. 'new' → logprob: -4.381995677947998
    5. '```' → logprob: -5.131995677947998
    6. '[' → logprob: -5.506995677947998
    7. '<|end|>' → logprob: -7.131995677947998
    8. '                           ' → logprob: -7.256995677947998
    9. '=' → logprob: -7.881995677947998
    10. '                              ' → logprob: -8.00699520111084

Token 1119: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.9351338744163513
    2. '[new' → logprob: -1.310133934020996
    3. '[' → logprob: -1.435133934020996
    4. ' new' → logprob: -3.185133934020996
    5. 'new' → logprob: -3.685133934020996
    6. '=' → logprob: -3.810133934020996
    7. ' =' → logprob: -5.185133934020996
    8. '```' → logprob: -6.185133934020996
    9. '                           ' → logprob: -7.185133934020996
    10. '                                   ' → logprob: -7.685133934020996

Token 1120: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.1628582626581192
    2. 'dest' → logprob: -1.912858247756958
    3. ' new' → logprob: -6.162858486175537
    4. '[new' → logprob: -8.287858009338379
    5. '                               ' → logprob: -9.287858009338379
    6. '[' → logprob: -9.287858009338379
    7. ' dest' → logprob: -10.037858009338379
    8. '                                   ' → logprob: -11.037858009338379
    9. '(dest' → logprob: -11.162858009338379
    10. '```' → logprob: -12.162858009338379

Token 1121: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.05380607768893242
    2. '_dest' → logprob: -3.0538060665130615
    3. 'dest' → logprob: -5.303806304931641
    4. '_line' → logprob: -8.92880630493164
    5. '```' → logprob: -10.05380630493164
    6. 'state' → logprob: -10.67880630493164
    7. '_train' → logprob: -11.42880630493164
    8. '[' → logprob: -11.67880630493164
    9. '_' → logprob: -12.05380630493164
    10. '   ' → logprob: -13.67880630493164

Token 1122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00446287402883172
    2. '[new' → logprob: -5.629462718963623
    3. '=' → logprob: -7.254462718963623
    4. '                               ' → logprob: -10.504463195800781
    5. '```' → logprob: -10.504463195800781
    6. '                           ' → logprob: -10.754463195800781
    7. '           ' → logprob: -12.004463195800781
    8. ']' → logprob: -12.004463195800781
    9. ')[' → logprob: -12.254463195800781
    10. '       ' → logprob: -12.379463195800781

Token 1123: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -6.392202976712724e-06
    2. '(dest' → logprob: -12.000006675720215
    3. ' dest' → logprob: -16.2500057220459
    4. '[' → logprob: -17.1250057220459
    5. '   ' → logprob: -18.5000057220459
    6. '	dest' → logprob: -18.5000057220459
    7. '           ' → logprob: -18.7500057220459
    8. 'def' → logprob: -19.1250057220459
    9. '       ' → logprob: -19.8750057220459
    10. '```' → logprob: -20.1250057220459

Token 1124: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.5094070477061905e-05
    2. 'line' → logprob: -12.375015258789062
    3. '[line' → logprob: -13.125015258789062
    4. '```' → logprob: -13.125015258789062
    5. '_side' → logprob: -13.375015258789062
    6. '_l' → logprob: -13.375015258789062
    7. '_state' → logprob: -13.750015258789062
    8. '_lin' → logprob: -14.750015258789062
    9. 'Line' → logprob: -15.375015258789062
    10. '_LINE' → logprob: -15.500015258789062

Token 1125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013313988223671913
    2. ']=' → logprob: -4.3883137702941895
    3. '=' → logprob: -7.3883137702941895
    4. '                               ' → logprob: -9.888314247131348
    5. '[' → logprob: -10.138314247131348
    6. '```' → logprob: -10.763314247131348
    7. ' =' → logprob: -10.888314247131348
    8. '                           ' → logprob: -11.513314247131348
    9. ' ]' → logprob: -11.888314247131348
    10. ']==' → logprob: -11.888314247131348

Token 1126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04158931225538254
    2. ' =' → logprob: -3.2915892601013184
    3. ']' → logprob: -6.291589260101318
    4. '[' → logprob: -6.541589260101318
    5. ']=' → logprob: -8.666589736938477
    6. '```' → logprob: -10.166589736938477
    7. '[end' → logprob: -12.041589736938477
    8. '[new' → logprob: -12.041589736938477
    9. '   ' → logprob: -12.416589736938477
    10. '][' → logprob: -12.666589736938477

Token 1127: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0019288709154352546
    2. ' new' → logprob: -6.251928806304932
    3. 'append' → logprob: -15.50192928314209
    4. '                               ' → logprob: -17.001928329467773
    5. '_new' → logprob: -18.251928329467773
    6. 'New' → logprob: -18.376928329467773
    7. '   ' → logprob: -18.876928329467773
    8. '```' → logprob: -19.126928329467773
    9. '                                   ' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.376928329467773

Token 1128: '_dest' (ID: 78932)
  Prédit: '_dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dest' → logprob: -0.43049708008766174
    2. '_train' → logprob: -1.1804970502853394
    3. 'dest' → logprob: -3.180497169494629
    4. 'train' → logprob: -7.055497169494629
    5. '```' → logprob: -9.430497169494629
    6. '(dest' → logprob: -10.055497169494629
    7. 'new' → logprob: -10.930497169494629
    8. 'Train' → logprob: -11.180497169494629
    9. '[' → logprob: -11.180497169494629
    10. '	dest' → logprob: -11.555497169494629

Token 1129: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.00022964231902733445
    2. 'train' → logprob: -8.500229835510254
    3. '_dest' → logprob: -11.750229835510254
    4. '_line' → logprob: -12.250229835510254
    5. 'Train' → logprob: -12.625229835510254
    6. '_tr' → logprob: -13.125229835510254
    7. 'dest' → logprob: -13.500229835510254
    8. '_' → logprob: -13.625229835510254
    9. '_state' → logprob: -13.875229835510254
    10. '```' → logprob: -14.375229835510254

Token 1130: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.12474498152732849
    2. '<|end|>' → logprob: -2.9997448921203613
    3. '```' → logprob: -3.8747448921203613
    4. ')' → logprob: -4.124744892120361
    5. '=' → logprob: -4.499744892120361
    6. ' =' → logprob: -4.624744892120361
    7. '                                   ' → logprob: -6.249744892120361
    8. '[' → logprob: -6.374744892120361
    9. '                           ' → logprob: -6.999744892120361
    10. '                                ' → logprob: -6.999744892120361

Token 1131: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00479310704395175
    2. '                                   ' → logprob: -5.879793167114258
    3. '```' → logprob: -6.879793167114258
    4. '                           ' → logprob: -7.754793167114258
    5. '<|end|>' → logprob: -9.004793167114258
    6. '                                ' → logprob: -9.629793167114258
    7. '                              ' → logprob: -9.629793167114258
    8. '[' → logprob: -9.879793167114258
    9. '                             ' → logprob: -10.129793167114258
    10. '               ' → logprob: -10.754793167114258

Token 1132: ' new' (ID: 620)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2796953022480011
    2. '                                   ' → logprob: -1.9046952724456787
    3. 'moves' → logprob: -3.7796952724456787
    4. ' moves' → logprob: -4.029695510864258
    5. ' new' → logprob: -4.529695510864258
    6. '                           ' → logprob: -5.154695510864258
    7. 'new' (adapté à ' new') → logprob: -5.154695510864258
    8. '               ' → logprob: -5.529695510864258
    9. '                                ' → logprob: -5.654695510864258
    10. '=' → logprob: -5.654695510864258

Token 1133: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0007858026656322181
    2. 'state' → logprob: -7.625785827636719
    3. '```' → logprob: -8.875785827636719
    4. 'append' → logprob: -9.375785827636719
    5. '.append' → logprob: -10.000785827636719
    6. '   ' → logprob: -11.375785827636719
    7. '[' → logprob: -12.250785827636719
    8. '``' → logprob: -12.875785827636719
    9. 'State' → logprob: -13.500785827636719
    10. '_line' → logprob: -13.750785827636719

Token 1134: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06503672897815704
    2. '[new' → logprob: -2.8150367736816406
    3. '=' → logprob: -6.815036773681641
    4. '                               ' → logprob: -7.565036773681641
    5. '.append' → logprob: -8.44003677368164
    6. '[-' → logprob: -8.56503677368164
    7. '[end' → logprob: -8.81503677368164
    8. '                           ' → logprob: -8.94003677368164
    9. '```' → logprob: -9.31503677368164
    10. '                                   ' → logprob: -9.31503677368164

Token 1135: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.10032237321138382
    2. ' tuple' → logprob: -2.3503224849700928
    3. '(tuple' → logprob: -9.100322723388672
    4. 'tu' → logprob: -12.850322723388672
    5. 'tpl' → logprob: -14.725322723388672
    6. 't' → logprob: -15.100322723388672
    7. '           ' → logprob: -15.475322723388672
    8. '_tuple' → logprob: -15.475322723388672
    9. '               ' → logprob: -16.225322723388672
    10. '```' → logprob: -16.600322723388672

Token 1136: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0022280486300587654
    2. '(state' → logprob: -6.377228260040283
    3. '[new' → logprob: -8.002227783203125
    4. 'new' → logprob: -9.377227783203125
    5. ')new' → logprob: -9.877227783203125
    6. '(
' → logprob: -10.627227783203125
    7. '(' → logprob: -11.502227783203125
    8. '[state' → logprob: -11.877227783203125
    9. '```' → logprob: -12.377227783203125
    10. ')' → logprob: -12.752227783203125

Token 1137: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.004488988779485226
    2. '(new' → logprob: -6.129488945007324
    3. 'state' → logprob: -6.379488945007324
    4. ')' → logprob: -8.004488945007324
    5. 'new' → logprob: -9.004488945007324
    6. ')new' → logprob: -10.254488945007324
    7. '[new' → logprob: -10.879488945007324
    8. '(state' → logprob: -11.004488945007324
    9. ')_' → logprob: -11.129488945007324
    10. '```' → logprob: -11.254488945007324

Token 1138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004438662901520729
    2. ')
' → logprob: -5.629438877105713
    3. '                               ' → logprob: -7.379438877105713
    4. '<|end|>' → logprob: -9.754438400268555
    5. '                           ' → logprob: -10.254438400268555
    6. '       ' → logprob: -10.629438400268555
    7. '[' → logprob: -10.879438400268555
    8. '                                   ' → logprob: -11.254438400268555
    9. '```' → logprob: -11.629438400268555
    10. '))' → logprob: -12.254438400268555

Token 1139: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.34284892678260803
    2. '```' → logprob: -1.4678488969802856
    3. '                                   ' → logprob: -3.592849016189575
    4. 'if' → logprob: -4.217848777770996
    5. ')' → logprob: -4.967848777770996
    6. '                           ' → logprob: -5.842848777770996
    7. '<|end|>' → logprob: -6.092848777770996
    8. '
' → logprob: -7.092848777770996
    9. ' if' → logprob: -7.092848777770996
    10. '``' → logprob: -7.467848777770996

Token 1140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021616334095597267
    2. ' if' → logprob: -4.146616458892822
    3. '                               ' → logprob: -5.521616458892822
    4. '                                   ' → logprob: -6.521616458892822
    5. '                                       ' → logprob: -10.396615982055664
    6. '                           ' → logprob: -10.771615982055664
    7. '                                           ' → logprob: -11.646615982055664
    8. '```' → logprob: -12.146615982055664
    9. '                                    ' → logprob: -12.146615982055664
    10. '
' → logprob: -12.771615982055664

Token 1141: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07890433073043823
    2. 'new' → logprob: -2.578904390335083
    3. '_new' → logprob: -11.328904151916504
    4. ' not' → logprob: -13.578904151916504
    5. '(new' → logprob: -13.953904151916504
    6. 'not' → logprob: -15.953904151916504
    7. ')new' → logprob: -16.32890510559082
    8. 'New' → logprob: -16.82890510559082
    9. '	new' → logprob: -17.20390510559082
    10. '$new' → logprob: -17.70390510559082

Token 1142: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -9.043078898685053e-05
    2. '_new' → logprob: -9.500090599060059
    3. 'new' → logprob: -11.750090599060059
    4. 'state' → logprob: -13.000090599060059
    5. '_token' → logprob: -13.000090599060059
    6. '_' → logprob: -13.500090599060059
    7. '_states' → logprob: -14.750090599060059
    8. ' _' → logprob: -14.875090599060059
    9. '_code' → logprob: -14.875090599060059
    10. '```' → logprob: -15.250090599060059

Token 1143: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01677701808512211
    2. 'not' → logprob: -4.141777038574219
    3. '<|end|>' → logprob: -7.641777038574219
    4. '                                   ' → logprob: -9.266777038574219
    5. '                               ' → logprob: -10.266777038574219
    6. '_not' → logprob: -10.391777038574219
    7. '.setdefault' → logprob: -10.891777038574219
    8. '.not' → logprob: -11.516777038574219
    9. '<|end|>' → logprob: -11.641777038574219
    10. ')' → logprob: -11.766777038574219

Token 1144: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016278810799121857
    2. ' in' → logprob: -4.2662787437438965
    3. 'not' → logprob: -6.2662787437438965
    4. 'in' → logprob: -8.641279220581055
    5. '_not' → logprob: -10.891279220581055
    6. '                                   ' → logprob: -12.891279220581055
    7. '<|end|>' → logprob: -12.891279220581055
    8. ')' → logprob: -13.391279220581055
    9. ' at' → logprob: -13.641279220581055
    10. ' new' → logprob: -13.766279220581055

Token 1145: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.026302389800548553
    2. ' visited' → logprob: -3.6513023376464844
    3. '
' → logprob: -14.151302337646484
    4. 'seen' → logprob: -14.151302337646484
    5. 'visible' → logprob: -15.901302337646484
    6. 'new' → logprob: -16.651302337646484
    7. 'in' → logprob: -16.776302337646484
    8. ' ' → logprob: -16.776302337646484
    9. '```' → logprob: -16.776302337646484
    10. 'not' → logprob: -17.026302337646484

Token 1146: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3623543977737427
    2. '.add' → logprob: -1.4873543977737427
    3. '                                   ' → logprob: -2.612354278564453
    4. '                               ' → logprob: -6.362354278564453
    5. ' .' → logprob: -7.362354278564453
    6. '<|end|>' → logprob: -7.987354278564453
    7. '   ' → logprob: -8.362354278564453
    8. '                                           ' → logprob: -8.362354278564453
    9. '.setdefault' → logprob: -8.612354278564453
    10. ':
' → logprob: -8.612354278564453

Token 1147: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.17401058971881866
    2. '                               ' → logprob: -2.1740105152130127
    3. 'visited' → logprob: -3.2990105152130127
    4. '```' → logprob: -5.299010753631592
    5. '           ' → logprob: -6.799010753631592
    6. '                           ' → logprob: -7.424010753631592
    7. '                                       ' → logprob: -7.799010753631592
    8. '                                  ' → logprob: -8.049010276794434
    9. '                                    ' → logprob: -8.049010276794434
    10. '                                           ' → logprob: -8.549010276794434

Token 1148: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0013150011654943228
    2. '                                   ' → logprob: -6.751315116882324
    3. '                               ' → logprob: -9.626315116882324
    4. ' visited' → logprob: -9.876315116882324
    5. '                                       ' → logprob: -12.126315116882324
    6. '                                     ' → logprob: -12.251315116882324
    7. '                                    ' → logprob: -12.376315116882324
    8. '                                  ' → logprob: -12.751315116882324
    9. '                                           ' → logprob: -12.751315116882324
    10. '                                 ' → logprob: -13.001315116882324

Token 1149: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011061598779633641
    2. '.' → logprob: -6.876106262207031
    3. '                                   ' → logprob: -9.626106262207031
    4. ' .' → logprob: -12.876106262207031
    5. '.Add' → logprob: -13.376106262207031
    6. '                           ' → logprob: -14.126106262207031
    7. '.append' → logprob: -14.626106262207031
    8. '                               ' → logprob: -14.751106262207031
    9. '           ' → logprob: -15.251106262207031
    10. '                                           ' → logprob: -15.501106262207031

Token 1150: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00030721822986379266
    2. '(' → logprob: -8.625307083129883
    3. 'new' → logprob: -9.000307083129883
    4. '(
' → logprob: -12.875307083129883
    5. ' new' → logprob: -14.125307083129883
    6. ' (' → logprob: -14.625307083129883
    7. '(space' → logprob: -16.250307083129883
    8. ')new' → logprob: -16.500307083129883
    9. '((' → logprob: -16.875307083129883
    10. '$new' → logprob: -17.250307083129883

Token 1151: '_state' (ID: 9479)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.16181926429271698
    2. 'new' → logprob: -1.9118192195892334
    3. '_new' → logprob: -7.0368194580078125
    4. ' new' → logprob: -7.5368194580078125
    5. '[new' → logprob: -9.411819458007812
    6. '_' → logprob: -10.536819458007812
    7. '(' → logprob: -10.661819458007812
    8. '(_' → logprob: -10.911819458007812
    9. ' (' → logprob: -11.911819458007812
    10. '_state' → logprob: -12.036819458007812

Token 1152: ')
' (ID: 446)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.26235541701316833
    2. ')' → logprob: -1.5123554468154907
    3. ')
' → logprob: -5.762355327606201
    4. '```' → logprob: -6.387355327606201
    5. '                               ' → logprob: -6.512355327606201
    6. '                                       ' → logprob: -7.012355327606201
    7. '.append' → logprob: -7.637355327606201
    8. '                                    ' → logprob: -7.887355327606201
    9. '                                           ' → logprob: -8.13735580444336
    10. '.' → logprob: -8.38735580444336

Token 1153: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.01867835223674774
    2. 'queue' → logprob: -5.143678188323975
    3. 'new' → logprob: -5.393678188323975
    4. '                               ' → logprob: -5.518678188323975
    5. '                                    ' → logprob: -6.643678188323975
    6. '                                ' → logprob: -7.643678188323975
    7. '                                       ' → logprob: -8.143678665161133
    8. '(queue' → logprob: -8.143678665161133
    9. '                                    
' → logprob: -8.393678665161133
    10. ')' → logprob: -8.393678665161133

Token 1154: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -5.080963092041202e-06
    2. ' queue' → logprob: -12.250004768371582
    3. '```' → logprob: -16.3750057220459
    4. '                                   ' → logprob: -16.7500057220459
    5. '                                       ' → logprob: -18.1250057220459
    6. '	queue' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.5000057220459
    8. '                               ' → logprob: -18.7500057220459
    9. '           ' → logprob: -19.0000057220459
    10. '                           ' → logprob: -19.3750057220459

Token 1155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0033457286190241575
    2. '.' → logprob: -5.753345966339111
    3. ').' → logprob: -9.628345489501953
    4. '.extend' → logprob: -10.503345489501953
    5. 'append' → logprob: -11.253345489501953
    6. '                                   ' → logprob: -11.503345489501953
    7. '```' → logprob: -11.503345489501953
    8. '           ' → logprob: -11.753345489501953
    9. '_append' → logprob: -11.753345489501953
    10. ' .' → logprob: -12.128345489501953

Token 1156: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012377295643091202
    2. '(new' → logprob: -6.751237869262695
    3. '(' → logprob: -10.126237869262695
    4. '```' → logprob: -10.876237869262695
    5. ' ((' → logprob: -12.751237869262695
    6. '`' → logprob: -13.751237869262695
    7. ' (' → logprob: -14.126237869262695
    8. '(
' → logprob: -14.376237869262695
    9. ')((' → logprob: -14.376237869262695
    10. '>((' → logprob: -14.501237869262695

Token 1157: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.576030433177948
    2. '(new' → logprob: -0.826030433177948
    3. ' new' → logprob: -9.951030731201172
    4. ')new' → logprob: -10.201030731201172
    5. '[new' → logprob: -12.451030731201172
    6. ' (' → logprob: -13.576030731201172
    7. '	new' → logprob: -15.076030731201172
    8. ',new' → logprob: -15.326030731201172
    9. '   ' → logprob: -16.076030731201172
    10. '```' → logprob: -16.201030731201172

Token 1158: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.7120533811976202e-05
    2. '-_' → logprob: -12.375017166137695
    3. 'state' → logprob: -12.500017166137695
    4. '_states' → logprob: -13.000017166137695
    5. '-state' → logprob: -13.250017166137695
    6. ' _' → logprob: -13.500017166137695
    7. '```' → logprob: -14.500017166137695
    8. 'State' → logprob: -14.500017166137695
    9. '_code' → logprob: -14.625017166137695
    10. '_new' → logprob: -14.750017166137695

Token 1159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005630470346659422
    2. ',new' → logprob: -5.8806304931640625
    3. ' ,' → logprob: -6.6306304931640625
    4. '[' → logprob: -8.505630493164062
    5. ',(' → logprob: -8.755630493164062
    6. '                               ' → logprob: -8.755630493164062
    7. 'new' → logprob: -8.880630493164062
    8. '+' → logprob: -9.130630493164062
    9. ',
' → logprob: -9.130630493164062
    10. '[new' → logprob: -9.130630493164062

Token 1160: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.3868931531906128
    2. 'moves' → logprob: -1.1368931531906128
    3. '(m' → logprob: -11.511893272399902
    4. 'm' → logprob: -12.511893272399902
    5. ' (' → logprob: -13.136893272399902
    6. '.moves' → logprob: -13.511893272399902
    7. '_moves' → logprob: -13.761893272399902
    8. 'move' → logprob: -14.136893272399902
    9. ')' → logprob: -14.136893272399902
    10. '   ' → logprob: -14.261893272399902

Token 1161: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.004620591644197702
    2. '+' → logprob: -5.379620552062988
    3. ' plus' → logprob: -15.504620552062988
    4. ' ' → logprob: -16.254621505737305
    5. ' +
' → logprob: -16.754621505737305
    6. ')' → logprob: -17.379621505737305
    7. '＋' → logprob: -18.129621505737305
    8. ' ' → logprob: -18.379621505737305
    9. '```' → logprob: -19.129621505737305
    10. '[' → logprob: -19.129621505737305

Token 1162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005131178768351674
    2. ' ' → logprob: -7.625513076782227
    3. '                                   ' → logprob: -11.375513076782227
    4. '```' → logprob: -12.500513076782227
    5. '                               ' → logprob: -12.750513076782227
    6. '                                           ' → logprob: -12.875513076782227
    7. '   ' → logprob: -13.250513076782227
    8. '                                       ' → logprob: -13.250513076782227
    9. ')' → logprob: -16.125513076782227
    10. '                                               ' → logprob: -16.375513076782227

Token 1163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '                                   ' → logprob: -15.375007629394531
    4. '                               ' → logprob: -15.625007629394531
    5. '```' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.50000762939453
    7. '                                       ' → logprob: -17.37500762939453
    8. '                           ' → logprob: -17.87500762939453
    9. '                                           ' → logprob: -18.12500762939453
    10. '           ' → logprob: -18.25000762939453

Token 1164: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000803076196461916
    2. ')' → logprob: -7.750802993774414
    3. '))
' → logprob: -8.125802993774414
    4. '                               ' → logprob: -10.000802993774414
    5. ')))' → logprob: -11.125802993774414
    6. '                                   ' → logprob: -12.250802993774414
    7. '           ' → logprob: -12.250802993774414
    8. '               ' → logprob: -12.750802993774414
    9. '                           ' → logprob: -13.375802993774414
    10. '       ' → logprob: -14.625802993774414

Token 1165: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003032255917787552
    2. '(
' → logprob: -6.503032207489014
    3. '```' → logprob: -7.253032207489014
    4. '(' → logprob: -7.503032207489014
    5. ':def' → logprob: -8.628032684326172
    6. '(def' → logprob: -10.628032684326172
    7. '
' → logprob: -10.628032684326172
    8. ':' → logprob: -11.753032684326172
    9. ' def' → logprob: -11.878032684326172
    10. '[' → logprob: -12.503032684326172

Token 1166: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.75
    3. '#' → logprob: -16.875
    4. ' def' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -19.375
    7. ':def' → logprob: -19.625
    8. 'de' → logprob: -19.625
    9. 'from' → logprob: -19.75
    10. 'ndef' → logprob: -20.0

Token 1167: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.750001907348633
    3. '
' → logprob: -14.500001907348633
    4. ' def' → logprob: -14.875001907348633
    5. ':def' → logprob: -16.875001907348633
    6. '(def' → logprob: -17.125001907348633
    7. '#' → logprob: -17.375001907348633
    8. '_def' → logprob: -17.750001907348633
    9. 'de' → logprob: -18.000001907348633
    10. '(
' → logprob: -18.375001907348633

Token 1168: 'itaire' (ID: 28335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.750001907348633
    3. '#' → logprob: -15.375001907348633
    4. '
' → logprob: -15.625001907348633
    5. 'de' → logprob: -15.750001907348633
    6. ' def' → logprob: -16.000001907348633
    7. '_def' → logprob: -16.125001907348633
    8. 'ndef' → logprob: -16.875001907348633
    9. 'd' → logprob: -17.125001907348633
    10. 's' → logprob: -17.625001907348633

Token 1169: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.625
    3. '#' → logprob: -16.75
    4. ' def' → logprob: -16.875
    5. '
' → logprob: -17.125
    6. ':def' → logprob: -17.375
    7. '(def' → logprob: -18.25
    8. '(
' → logprob: -18.25
    9. ')' → logprob: -18.875
    10. 'de' → logprob: -19.25

Token 1170: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.500000953674316
    3. '```' → logprob: -16.0
    4. '
' → logprob: -17.625
    5. '#' → logprob: -19.875
    6. '-def' → logprob: -20.0
    7. '	def' → logprob: -20.25
    8. '_def' → logprob: -21.0
    9. ':def' → logprob: -21.625
    10. 'ndef' → logprob: -21.75

Token 1171: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001246348983841017
    2. '```' → logprob: -9.50012493133545
    3. 'op' → logprob: -10.87512493133545
    4. ''' → logprob: -11.75012493133545
    5. ''op' → logprob: -11.87512493133545
    6. ''d' → logprob: -12.37512493133545
    7. ' def' → logprob: -13.12512493133545
    8. ''s' → logprob: -13.12512493133545
    9. '{
' → logprob: -13.25012493133545
    10. '#' → logprob: -13.62512493133545

Token 1172: ''ex' (ID: 23472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031630706042051315
    2. ''op' → logprob: -3.531630754470825
    3. 'op' → logprob: -6.406630516052246
    4. '```' → logprob: -9.406630516052246
    5. ''' → logprob: -9.906630516052246
    6. ''d' → logprob: -10.156630516052246
    7. '#' → logprob: -11.781630516052246
    8. ''ex' → logprob: -11.781630516052246
    9. ''autre' → logprob: -12.281630516052246
    10. ''s' → logprob: -12.406630516052246

Token 1173: 'tré' (ID: 143903)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006923045963048935
    2. '```' → logprob: -5.006923198699951
    3. '``' → logprob: -9.256922721862793
    4. 'act' → logprob: -9.506922721862793
    5. 't' → logprob: -10.881922721862793
    6. '`' → logprob: -12.381922721862793
    7. 'pected' → logprob: -12.881922721862793
    8. '#' → logprob: -13.006922721862793
    9. 'p' → logprob: -13.131922721862793
    10. 'op' → logprob: -13.506922721862793

Token 1174: 'mit' (ID: 2765)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0065732612274587154
    2. 'rem' → logprob: -6.00657320022583
    3. '```' → logprob: -6.25657320022583
    4. 'é' → logprob: -7.13157320022583
    5. 'tré' → logprob: -8.506573677062988
    6. 'ité' → logprob: -8.506573677062988
    7. 'ême' → logprob: -8.756573677062988
    8. 't' → logprob: -9.131573677062988
    9. 'em' → logprob: -9.506573677062988
    10. 'ime' → logprob: -9.506573677062988

Token 1175: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.001846889965236187
    2. 'e' → logprob: -6.626846790313721
    3. 'def' → logprob: -7.626846790313721
    4. 'y' → logprob: -10.626847267150879
    5. 'import' → logprob: -12.876847267150879
    6. 'eté' → logprob: -13.001847267150879
    7. 'ée' → logprob: -14.126847267150879
    8. '#' → logprob: -14.376847267150879
    9. 'ié' → logprob: -15.251847267150879
    10. 'té' → logprob: -15.376847267150879

Token 1176: ' oppos' (ID: 20679)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5570885807392187e-05
    2. 'op' → logprob: -11.375015258789062
    3. '```' → logprob: -12.750015258789062
    4. ' oppos' → logprob: -15.125015258789062
    5. 'de' → logprob: -15.625015258789062
    6. 'Opp' → logprob: -15.875015258789062
    7. ' opposite' → logprob: -16.125015258789062
    8. ' def' → logprob: -16.250015258789062
    9. '#' → logprob: -16.375015258789062
    10. ''op' → logprob: -16.375015258789062

Token 1177: 'ée' (ID: 2894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020337022840976715
    2. '```' → logprob: -5.395337104797363
    3. 'é' → logprob: -5.520337104797363
    4. 'e' → logprob: -5.770337104797363
    5. 'ité' → logprob: -5.770337104797363
    6. 'ème' → logprob: -6.645337104797363
    7. 'ême' → logprob: -6.645337104797363
    8. 'em' → logprob: -6.770337104797363
    9. 'ém' → logprob: -7.770337104797363
    10. 'ite' → logprob: -8.645337104797363

Token 1178: ' ('' (ID: 9906)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5776860184123507e-06
    2. ' def' → logprob: -13.87500286102295
    3. '(def' → logprob: -14.25000286102295
    4. '```' → logprob: -14.62500286102295
    5. '(
' → logprob: -15.62500286102295
    6. '(' → logprob: -16.250001907348633
    7. '(side' → logprob: -17.500001907348633
    8. ' déf' → logprob: -17.625001907348633
    9. ':def' → logprob: -17.625001907348633
    10. '(s' → logprob: -17.750001907348633

Token 1179: 'W' (ID: 54)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.4359932541847229
    2. 'E' → logprob: -1.1859931945800781
    3. 'def' → logprob: -3.435993194580078
    4. ''' → logprob: -5.185993194580078
    5. 'W' → logprob: -5.435993194580078
    6. ''S' → logprob: -6.060993194580078
    7. ')' → logprob: -6.935993194580078
    8. '"E' → logprob: -7.185993194580078
    9. '')' → logprob: -7.560993194580078
    10. 'side' → logprob: -7.935993194580078

Token 1180: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013361937599256635
    2. '):
' → logprob: -7.626336097717285
    3. ''' → logprob: -8.126336097717285
    4. ' def' → logprob: -8.626336097717285
    5. ')' → logprob: -8.876336097717285
    6. ''):
' → logprob: -9.751336097717285
    7. '')' → logprob: -10.126336097717285
    8. ')
' → logprob: -10.751336097717285
    9. ',' → logprob: -11.251336097717285
    10. '('' → logprob: -11.376336097717285

Token 1181: ' <' (ID: 464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01335974596440792
    2. ')' → logprob: -5.263359546661377
    3. '):
' → logprob: -5.763359546661377
    4. ',' → logprob: -6.388359546661377
    5. '):' → logprob: -6.763359546661377
    6. ' def' → logprob: -7.138359546661377
    7. 'if' → logprob: -7.638359546661377
    8. ''' → logprob: -8.388360023498535
    9. '):

' → logprob: -8.638360023498535
    10. ')
' → logprob: -8.763360023498535

Token 1182: '->' (ID: 609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8005695939064026
    2. '=' → logprob: -0.9255695939064026
    3. '=>' → logprob: -2.425569534301758
    4. '->' → logprob: -3.175569534301758
    5. '='' → logprob: -5.050569534301758
    6. ')' → logprob: -5.300569534301758
    7. '=>'' → logprob: -5.425569534301758
    8. ''' → logprob: -5.550569534301758
    9. '==' → logprob: -6.550569534301758
    10. '-->' → logprob: -7.425569534301758

Token 1183: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.00012154294381616637
    2. 'E' → logprob: -9.375121116638184
    3. '’E' → logprob: -10.875121116638184
    4. ''É' → logprob: -12.750121116638184
    5. '"E' → logprob: -12.750121116638184
    6. ' '' → logprob: -12.875121116638184
    7. '`' → logprob: -12.875121116638184
    8. 'def' → logprob: -13.250121116638184
    9. ''S' → logprob: -13.625121116638184
    10. ''' → logprob: -13.750121116638184

Token 1184: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.01815767213702202
    2. ''E' → logprob: -4.018157482147217
    3. '"E' → logprob: -12.643157958984375
    4. '’E' → logprob: -13.268157958984375
    5. 'def' → logprob: -13.518157958984375
    6. '>E' → logprob: -13.893157958984375
    7. ' E' → logprob: -14.768157958984375
    8. ''e' → logprob: -16.768157958984375
    9. '<E' → logprob: -17.143157958984375
    10. '`' → logprob: -17.268157958984375

Token 1185: '')
' (ID: 2515)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03577698767185211
    2. ')
' → logprob: -3.9107770919799805
    3. '):
' → logprob: -4.4107770919799805
    4. ')' → logprob: -5.9107770919799805
    5. '):' → logprob: -9.66077709197998
    6. '')
' → logprob: -10.03577709197998
    7. ''):
' → logprob: -10.28577709197998
    8. ' def' → logprob: -10.41077709197998
    9. '')' → logprob: -10.91077709197998
    10. '):

' → logprob: -11.03577709197998

Token 1186: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. '
' → logprob: -17.25
    4. ' def' → logprob: -18.375
    5. '(def' → logprob: -21.25
    6. ':def' → logprob: -21.5
    7. '``' → logprob: -21.5
    8. 'ndef' → logprob: -22.0
    9. '_def' → logprob: -22.875
    10. '-def' → logprob: -23.375

Token 1187: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.0206720617134124e-05
    2. ' opposite' → logprob: -11.50001049041748
    3. 'def' → logprob: -20.625009536743164
    4. 'append' → logprob: -21.250009536743164
    5. 'opp' → logprob: -21.375009536743164
    6. '```' → logprob: -21.625009536743164
    7. '`' → logprob: -22.750009536743164
    8. '	op' → logprob: -22.875009536743164
    9. 'Opp' → logprob: -23.250009536743164
    10. 'оп' → logprob: -23.375009536743164

Token 1188: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -7.703443770878948e-06
    2. 'side' → logprob: -12.000007629394531
    3. 'Side' → logprob: -14.375007629394531
    4. '_SIDE' → logprob: -14.750007629394531
    5. '(side' → logprob: -15.625007629394531
    6. '_s' → logprob: -16.62500762939453
    7. ' side' → logprob: -16.75000762939453
    8. '(_' → logprob: -17.12500762939453
    9. '```' → logprob: -17.12500762939453
    10. '_' → logprob: -17.37500762939453

Token 1189: '(side' (ID: 95460)
  Prédit: '(side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(side' → logprob: -3.0948158382670954e-05
    2. '(s' → logprob: -11.000030517578125
    3. '(c' → logprob: -12.000030517578125
    4. '(' → logprob: -12.125030517578125
    5. ' (' → logprob: -13.375030517578125
    6. 'side' → logprob: -14.500030517578125
    7. '	side' → logprob: -15.000030517578125
    8. ' side' → logprob: -16.500030517578125
    9. '(
' → logprob: -17.000030517578125
    10. '.side' → logprob: -17.250030517578125

Token 1190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.281440794467926
    2. '):
' → logprob: -1.4064407348632812
    3. '(side' → logprob: -9.031440734863281
    4. '):

' → logprob: -9.406440734863281
    5. ')' → logprob: -10.281440734863281
    6. '):
' → logprob: -11.281440734863281
    7. ':' → logprob: -11.281440734863281
    8. '   ' → logprob: -11.406440734863281
    9. '(s' → logprob: -12.031440734863281
    10. '):(' → logprob: -13.531440734863281

Token 1191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006789539474993944
    2. 'return' → logprob: -7.500679016113281
    3. ' return' → logprob: -9.750679016113281
    4. '	return' → logprob: -10.375679016113281
    5. ':return' → logprob: -10.750679016113281
    6. ':' → logprob: -12.500679016113281
    7. ':
' → logprob: -12.750679016113281
    8. '```' → logprob: -13.000679016113281
    9. 'if' → logprob: -13.125679016113281
    10. ' if' → logprob: -13.625679016113281

Token 1192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030469495803117752
    2. '   ' → logprob: -3.5304694175720215
    3. ' return' → logprob: -7.2804694175720215
    4. 'if' → logprob: -10.90546989440918
    5. '	return' → logprob: -11.53046989440918
    6. 'eturn' → logprob: -14.65546989440918
    7. ' if' → logprob: -14.90546989440918
    8. ':return' → logprob: -14.90546989440918
    9. '{return' → logprob: -15.40546989440918
    10. '```' → logprob: -15.78046989440918

Token 1193: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.008290321566164494
    2. ''' → logprob: -5.2582902908325195
    3. ' '' → logprob: -6.2582902908325195
    4. '('' → logprob: -7.5082902908325195
    5. '{'' → logprob: -7.8832902908325195
    6. ''O' → logprob: -9.00829029083252
    7. ''É' → logprob: -10.75829029083252
    8. '   ' → logprob: -11.25829029083252
    9. ''S' → logprob: -11.25829029083252
    10. ' ' → logprob: -11.50829029083252

Token 1194: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00020449401927180588
    2. ''E' → logprob: -8.625204086303711
    3. 'W' → logprob: -10.750204086303711
    4. ''' → logprob: -12.875204086303711
    5. '{'' → logprob: -14.875204086303711
    6. '"E' → logprob: -15.125204086303711
    7. ' E' → logprob: -15.625204086303711
    8. '['' → logprob: -16.37520408630371
    9. 'EW' → logprob: -16.37520408630371
    10. '’E' → logprob: -17.75020408630371

Token 1195: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.127016082406044
    2. 'if' → logprob: -2.127016067504883
    3. ' if' → logprob: -9.377016067504883
    4. '"' → logprob: -12.877016067504883
    5. 'W' → logprob: -15.502016067504883
    6. ' '' → logprob: -16.002016067504883
    7. ''''' → logprob: -16.002016067504883
    8. 'i' → logprob: -16.377016067504883
    9. '```' → logprob: -16.752016067504883
    10. 'w' → logprob: -17.127016067504883

Token 1196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023246292024850845
    2. ' if' → logprob: -3.7732462882995605
    3. ''' → logprob: -14.273246765136719
    4. '   ' → logprob: -15.773246765136719
    5. ' ' → logprob: -17.77324676513672
    6. '  ' → logprob: -17.89824676513672
    7. '	if' → logprob: -18.14824676513672
    8. 'W' → logprob: -19.02324676513672
    9. '```' → logprob: -19.02324676513672
    10. '['' → logprob: -19.52324676513672

Token 1197: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.011047814972698689
    2. ' side' → logprob: -4.511047840118408
    3. '	side' → logprob: -17.13604736328125
    4. '(side' → logprob: -18.63604736328125
    5. ' ' → logprob: -18.76104736328125
    6. 'Side' → logprob: -19.13604736328125
    7. '_side' → logprob: -20.01104736328125
    8. '   ' → logprob: -20.26104736328125
    9. '.side' → logprob: -20.26104736328125
    10. '-side' → logprob: -20.76104736328125

Token 1198: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3885677754878998
    2. ' ==' → logprob: -1.1385678052902222
    3. '=='' → logprob: -6.388567924499512
    4. '=' → logprob: -11.763567924499512
    5. ' =='' → logprob: -12.888567924499512
    6. '===' → logprob: -13.638567924499512
    7. '==
' → logprob: -14.263567924499512
    8. ''' → logprob: -14.388567924499512
    9. '=="' → logprob: -14.388567924499512
    10. '  ' → logprob: -15.013567924499512

Token 1199: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010402000043541193
    2. 'W' → logprob: -9.250103950500488
    3. ' '' → logprob: -12.125103950500488
    4. '   ' → logprob: -14.375103950500488
    5. ''S' → logprob: -14.625103950500488
    6. '"W' → logprob: -14.875103950500488
    7. ''E' → logprob: -15.250103950500488
    8. '['' → logprob: -15.375103950500488
    9. '('' → logprob: -15.875103950500488
    10. '`' → logprob: -15.875103950500488

Token 1200: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.7610454708337784e-05
    2. ''' → logprob: -10.500027656555176
    3. ' W' → logprob: -16.87502670288086
    4. '"W' → logprob: -17.12502670288086
    5. '`' → logprob: -18.87502670288086
    6. '<W' → logprob: -19.25002670288086
    7. '	W' → logprob: -19.37502670288086
    8. '['' → logprob: -19.37502670288086
    9. ''w' → logprob: -20.12502670288086
    10. '```' → logprob: -20.75002670288086

Token 1201: ''' (ID: 6)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10051774233579636
    2. ' else' → logprob: -2.350517749786377
    3. ''' → logprob: -8.100517272949219
    4. '	else' → logprob: -12.725517272949219
    5. 'W' → logprob: -12.975517272949219
    6. '   ' → logprob: -13.725517272949219
    7. ' ' → logprob: -15.725517272949219
    8. '('' → logprob: -15.725517272949219
    9. '```' → logprob: -15.975517272949219
    10. ''w' → logprob: -16.47551727294922

Token 1202: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003605178790166974
    2. ' else' → logprob: -5.628605365753174
    3. ''' → logprob: -12.378604888916016
    4. '('' → logprob: -15.253604888916016
    5. '   ' → logprob: -15.378604888916016
    6. '	else' → logprob: -15.753604888916016
    7. '['' → logprob: -16.878604888916016
    8. ' '' → logprob: -17.753604888916016
    9. '
' → logprob: -18.003604888916016
    10. ' ' → logprob: -18.003604888916016

Token 1203: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4498052223643754e-05
    2. ' '' → logprob: -11.750014305114746
    3. 'W' → logprob: -12.000014305114746
    4. '   ' → logprob: -15.875014305114746
    5. '"W' → logprob: -16.500015258789062
    6. ''S' → logprob: -17.250015258789062
    7. '`' → logprob: -17.375015258789062
    8. '('' → logprob: -17.750015258789062
    9. ''E' → logprob: -18.625015258789062
    10. '  ' → logprob: -19.250015258789062

Token 1204: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.16022534668445587
    2. ''' → logprob: -1.9102253913879395
    3. '"W' → logprob: -14.285224914550781
    4. '`' → logprob: -15.535224914550781
    5. ' W' → logprob: -15.660224914550781
    6. '['' → logprob: -16.66022491455078
    7. '('' → logprob: -17.03522491455078
    8. ''w' → logprob: -17.28522491455078
    9. '<W' → logprob: -17.41022491455078
    10. '	W' → logprob: -17.53522491455078

Token 1205: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1206: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005013394169509411
    2. '```' → logprob: -5.505013465881348
    3. '#' → logprob: -7.005013465881348
    4. '
' → logprob: -10.630013465881348
    5. '``' → logprob: -13.255013465881348
    6. ' def' → logprob: -14.130013465881348
    7. '\' → logprob: -16.38001251220703
    8. '  
' → logprob: -16.63001251220703
    9. '<|end|>' → logprob: -16.63001251220703
    10. '-def' → logprob: -17.13001251220703

Token 1207: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.875
    3. '#' → logprob: -19.0
    4. '```' → logprob: -19.75
    5. 'Code' → logprob: -21.0
    6. '
' → logprob: -21.0
    7. 'python' → logprob: -21.625
    8. 'ndef' → logprob: -22.5
    9. ':def' → logprob: -22.625
    10. '-def' → logprob: -23.25

Token 1208: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025365441106259823
    2. 'append' → logprob: -6.002536773681641
    3. ' def' → logprob: -9.87753677368164
    4. ' append' → logprob: -11.75253677368164
    5. '#' → logprob: -13.50253677368164
    6. '
' → logprob: -15.75253677368164
    7. '_append' → logprob: -16.37753677368164
    8. '.append' → logprob: -16.50253677368164
    9. '_def' → logprob: -17.50253677368164
    10. ' déf' → logprob: -18.12753677368164

Token 1209: 'itaire' (ID: 28335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002302383363712579
    2. '#' → logprob: -9.125229835510254
    3. 'ity' → logprob: -10.125229835510254
    4. 'ty' → logprob: -10.375229835510254
    5. 'itaire' → logprob: -10.500229835510254
    6. 't' → logprob: -12.125229835510254
    7. 'til' → logprob: -12.750229835510254
    8. 'ité' → logprob: -12.875229835510254
    9. 'ti' → logprob: -13.250229835510254
    10. ' def' → logprob: -13.375229835510254

Token 1210: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.856408536899835e-05
    2. ' def' → logprob: -10.500028610229492
    3. ':def' → logprob: -14.000028610229492
    4. '
' → logprob: -16.250028610229492
    5. ':' → logprob: -16.500028610229492
    6. '```' → logprob: -17.875028610229492
    7. 'append' → logprob: -18.250028610229492
    8. '_def' → logprob: -19.875028610229492
    9. '(def' → logprob: -20.375028610229492
    10. '#' → logprob: -20.500028610229492

Token 1211: ' ajoute' (ID: 91611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.625
    3. '
' → logprob: -19.125
    4. '```' → logprob: -22.125
    5. '#' → logprob: -22.5
    6. '	def' → logprob: -23.875
    7. 'de' → logprob: -24.625
    8. 'append' → logprob: -25.25
    9. '_def' → logprob: -26.125
    10. 'Def' → logprob: -26.125

Token 1212: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3359062671661377
    2. 'train' → logprob: -1.8359062671661377
    3. '(train' → logprob: -3.3359062671661377
    4. 'new' → logprob: -3.7109062671661377
    5. '(dest' → logprob: -4.460906028747559
    6. '_train' → logprob: -4.585906028747559
    7. 'a' → logprob: -4.835906028747559
    8. 'dest' → logprob: -5.210906028747559
    9. '(original' → logprob: -6.085906028747559
    10. '(a' → logprob: -6.210906028747559

Token 1213: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.0033622467890381813
    2. 'segment' → logprob: -5.87836217880249
    3. 'sub' → logprob: -8.378362655639648
    4. ' train' → logprob: -9.378362655639648
    5. 's' → logprob: -10.003362655639648
    6. 'substring' → logprob: -10.003362655639648
    7. 'wagon' → logprob: -10.628362655639648
    8. 'car' → logprob: -10.753362655639648
    9. 'def' → logprob: -11.003362655639648
    10. 'substr' → logprob: -11.128362655639648

Token 1214: ' '' (ID: 461)
  Prédit: '(dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.07909830659627914
    2. '(existing' → logprob: -3.5790982246398926
    3. '(destination' → logprob: -3.9540982246398926
    4. '(train' → logprob: -4.704098224639893
    5. '(base' → logprob: -5.079098224639893
    6. 'def' → logprob: -5.204098224639893
    7. '(s' → logprob: -6.329098224639893
    8. '(' → logprob: -6.579098224639893
    9. '(old' → logprob: -6.829098224639893
    10. '(dst' → logprob: -7.329098224639893

Token 1215: 'segment' (ID: 45362)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6921964287757874
    2. 'dest' → logprob: -1.4421963691711426
    3. 'to' → logprob: -2.6921963691711426
    4. 'segment' → logprob: -3.0671963691711426
    5. 'base' → logprob: -3.3171963691711426
    6. '(dest' → logprob: -3.6921963691711426
    7. 'existing' → logprob: -3.8171963691711426
    8. 'car' → logprob: -3.9421963691711426
    9. 'train' → logprob: -4.067196369171143
    10. 'tail' → logprob: -5.567196369171143

Token 1216: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5464826226234436
    2. ''' → logprob: -1.7964825630187988
    3. ',' → logprob: -2.421482563018799
    4. '(dest' → logprob: -2.921482563018799
    5. '',' → logprob: -3.671482563018799
    6. 'dest' → logprob: -3.921482563018799
    7. ' at' → logprob: -4.171482563018799
    8. '(destination' → logprob: -4.171482563018799
    9. '_dest' → logprob: -5.171482563018799
    10. 'to' → logprob: -5.296482563018799

Token 1217: ' à' (ID: 1221)
  Prédit: '(dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dest' → logprob: -0.6748793125152588
    2. 'def' → logprob: -0.7998793125152588
    3. '(destination' → logprob: -4.04987907409668
    4. '(train' → logprob: -4.79987907409668
    5. '(s' → logprob: -5.42487907409668
    6. '(existing' → logprob: -5.67487907409668
    7. '(def' → logprob: -6.42487907409668
    8. 'dest' → logprob: -6.54987907409668
    9. '(dst' → logprob: -7.29987907409668
    10. ' at' → logprob: -7.42487907409668

Token 1218: ' une' (ID: 2463)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.4627721905708313
    2. 'dest' → logprob: -1.7127721309661865
    3. 'def' → logprob: -2.8377721309661865
    4. 'the' → logprob: -3.0877721309661865
    5. 'la' → logprob: -4.212772369384766
    6. 'l' → logprob: -4.462772369384766
    7. 'destination' → logprob: -4.462772369384766
    8. 'start' → logprob: -4.587772369384766
    9. 'begin' → logprob: -4.712772369384766
    10. 's' → logprob: -5.337772369384766

Token 1219: ' extr' (ID: 15674)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.26624995470046997
    2. 'ligne' → logprob: -1.7662498950958252
    3. 'extr' → logprob: -3.266249895095825
    4. 'chaine' → logprob: -4.641250133514404
    5. 'line' → logprob: -5.516250133514404
    6. 'string' → logprob: -5.766250133514404
    7. 'la' → logprob: -6.266250133514404
    8. 'destination' → logprob: -6.391250133514404
    9. ' extr' → logprob: -7.016250133514404
    10. 'dest' → logprob: -7.266250133514404

Token 1220: 'é' (ID: 377)
  Prédit: 'tré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tré' → logprob: -0.8190541863441467
    2. 'é' → logprob: -1.194054126739502
    3. 'ité' → logprob: -2.319054126739502
    4. 'rem' → logprob: -2.819054126739502
    5. 'def' → logprob: -3.444054126739502
    6. 'ém' → logprob: -3.819054126739502
    7. 'imité' → logprob: -4.444054126739502
    8. 'té' → logprob: -5.194054126739502
    9. 'em' → logprob: -5.694054126739502
    10. 't' → logprob: -5.694054126739502

Token 1221: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.0005122834118083119
    2. 'mite' → logprob: -8.12551212310791
    3. 'm' → logprob: -8.50051212310791
    4. 'mitt' → logprob: -12.37551212310791
    5. 'mé' → logprob: -13.00051212310791
    6. 'imité' → logprob: -13.00051212310791
    7. 'ité' → logprob: -13.87551212310791
    8. 'MIT' → logprob: -14.12551212310791
    9. '#' → logprob: -14.12551212310791
    10. 'mites' → logprob: -14.75051212310791

Token 1222: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00025204161647707224
    2. 'té' → logprob: -9.500251770019531
    3. 'e' → logprob: -9.625251770019531
    4. 'ité' → logprob: -9.875251770019531
    5. 'def' → logprob: -10.250251770019531
    6. 'ié' → logprob: -11.250251770019531
    7. 'y' → logprob: -12.000251770019531
    8. 'eté' → logprob: -13.250251770019531
    9. '#' → logprob: -14.500251770019531
    10. 'né' → logprob: -14.875251770019531

Token 1223: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006863732356578112
    2. '(dest' → logprob: -5.256863594055176
    3. 'dest' → logprob: -6.756863594055176
    4. '(train' → logprob: -8.881863594055176
    5. '(def' → logprob: -9.506863594055176
    6. '(destination' → logprob: -9.631863594055176
    7. '(s' → logprob: -9.756863594055176
    8. '(line' → logprob: -10.006863594055176
    9. 'of' → logprob: -11.006863594055176
    10. ' def' → logprob: -11.131863594055176

Token 1224: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.016957992687821388
    2. 'dest' → logprob: -4.266957759857178
    3. 'end' → logprob: -6.641957759857178
    4. 'train' → logprob: -6.766957759857178
    5. 'line' → logprob: -8.766958236694336
    6. 'ext' → logprob: -10.141958236694336
    7. 'state' → logprob: -10.266958236694336
    8. 'string' → logprob: -10.391958236694336
    9. 'destination' → logprob: -10.516958236694336
    10. ' side' → logprob: -11.016958236694336

Token 1225: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3508169949054718
    2. ''' → logprob: -1.7258169651031494
    3. '):
' → logprob: -3.2258169651031494
    4. '):' → logprob: -3.4758169651031494
    5. ')'' → logprob: -3.8508169651031494
    6. ')' → logprob: -4.9758172035217285
    7. '(train' → logprob: -5.1008172035217285
    8. '(dest' → logprob: -5.8508172035217285
    9. '':' → logprob: -6.3508172035217285
    10. '',' → logprob: -6.8508172035217285

Token 1226: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.650518920039758e-06
    2. ' def' → logprob: -12.875003814697266
    3. '(def' → logprob: -14.625003814697266
    4. '(train' → logprob: -15.000003814697266
    5. '
' → logprob: -16.625003814697266
    6. '(
' → logprob: -16.625003814697266
    7. '(' → logprob: -17.125003814697266
    8. '(s' → logprob: -17.250003814697266
    9. '(side' → logprob: -18.500003814697266
    10. ':def' → logprob: -19.000003814697266

Token 1227: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14727266132831573
    2. 'dest' → logprob: -2.3972725868225098
    3. 'train' → logprob: -3.1472725868225098
    4. ' train' → logprob: -6.89727258682251
    5. ' def' → logprob: -7.39727258682251
    6. 'destination' → logprob: -7.52227258682251
    7. '#' → logprob: -8.522273063659668
    8. '
' → logprob: -8.522273063659668
    9. 'new' → logprob: -9.022273063659668
    10. ' dest' → logprob: -9.022273063659668

Token 1228: ' ligne' (ID: 19583)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.04300331324338913
    2. 'string' → logprob: -4.043003082275391
    3. 'dest' → logprob: -4.543003082275391
    4. 'def' → logprob: -4.793003082275391
    5. 'destination' → logprob: -6.168003082275391
    6. 'line' → logprob: -6.668003082275391
    7. 'ligne' → logprob: -7.418003082275391
    8. 'chaine' → logprob: -7.543003082275391
    9. 'str' → logprob: -7.668003082275391
    10. ' train' → logprob: -7.793003082275391

Token 1229: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.41866585687967e-06
    2. ' def' → logprob: -11.750008583068848
    3. ':def' → logprob: -15.500008583068848
    4. '(def' → logprob: -16.12500762939453
    5. 'ndef' → logprob: -16.87500762939453
    6. '```' → logprob: -17.25000762939453
    7. '_def' → logprob: -17.25000762939453
    8. '(train' → logprob: -17.25000762939453
    9. '(s' → logprob: -17.37500762939453
    10. ':' → logprob: -17.50000762939453

Token 1230: 'train' (ID: 21362)
  Prédit: 'train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.09426120668649673
    2. 'dest' → logprob: -2.7192611694335938
    3. 'line' → logprob: -3.9692611694335938
    4. 'def' → logprob: -5.844261169433594
    5. 'state' → logprob: -6.719261169433594
    6. 'destination' → logprob: -7.719261169433594
    7. ' train' → logprob: -8.469261169433594
    8. 'existing' → logprob: -9.344261169433594
    9. 'string' → logprob: -9.719261169433594
    10. 'new' → logprob: -9.844261169433594

Token 1231: '_line' (ID: 14418)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3569754958152771
    2. 'def' → logprob: -1.7319755554199219
    3. '':
' → logprob: -2.606975555419922
    4. ''' → logprob: -3.731975555419922
    5. ''):
' → logprob: -4.856975555419922
    6. '   ' → logprob: -5.981975555419922
    7. '':' → logprob: -6.106975555419922
    8. 's' → logprob: -6.231975555419922
    9. ')' → logprob: -6.356975555419922
    10. '):' → logprob: -6.481975555419922

Token 1232: ''
' (ID: 2207)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.598707914352417
    2. 'def' → logprob: -0.848707914352417
    3. '':
' → logprob: -4.723708152770996
    4. '):' → logprob: -5.598708152770996
    5. '(train' → logprob: -5.723708152770996
    6. ''):
' → logprob: -5.973708152770996
    7. '(line' → logprob: -6.848708152770996
    8. ')' → logprob: -7.098708152770996
    9. ''' → logprob: -7.223708152770996
    10. 'train' → logprob: -7.598708152770996

Token 1233: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.125000953674316
    3. ':def' → logprob: -16.625
    4. '(def' → logprob: -18.375
    5. ':' → logprob: -18.5
    6. '
' → logprob: -19.125
    7. '(' → logprob: -19.75
    8. '_def' → logprob: -20.125
    9. '(
' → logprob: -20.375
    10. ':
' → logprob: -20.375

Token 1234: ' side' (ID: 4307)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.625
    3. '
' → logprob: -20.625
    4. ':def' → logprob: -20.75
    5. '_def' → logprob: -21.875
    6. '```' → logprob: -22.5
    7. '-def' → logprob: -23.0
    8. 'ndef' → logprob: -23.25
    9. '(def' → logprob: -23.375
    10. '	def' → logprob: -24.0

Token 1235: ' ==' (ID: 951)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7415837645530701
    2. '==' → logprob: -1.3665838241577148
    3. ')' → logprob: -1.9915838241577148
    4. '):' → logprob: -2.991583824157715
    5. ' ==' → logprob: -3.366583824157715
    6. '):
' → logprob: -4.116583824157715
    7. '=='' → logprob: -4.366583824157715
    8. ',' → logprob: -4.741583824157715
    9. ':' → logprob: -5.616583824157715
    10. '=' → logprob: -6.116583824157715

Token 1236: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1133079007267952
    2. ''E' → logprob: -2.2383079528808594
    3. ' '' → logprob: -9.36330795288086
    4. 'W' → logprob: -9.36330795288086
    5. '`' → logprob: -9.61330795288086
    6. '"W' → logprob: -9.73830795288086
    7. '   ' → logprob: -10.11330795288086
    8. '('' → logprob: -10.48830795288086
    9. 'E' → logprob: -10.73830795288086
    10. 'def' → logprob: -10.98830795288086

Token 1237: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.002831626683473587
    2. ''' → logprob: -6.12783145904541
    3. 'E' → logprob: -7.50283145904541
    4. ''E' → logprob: -9.62783145904541
    5. '"W' → logprob: -10.87783145904541
    6. '   ' → logprob: -13.12783145904541
    7. ' W' → logprob: -13.12783145904541
    8. 'def' → logprob: -13.25283145904541
    9. ''w' → logprob: -13.37783145904541
    10. '`' → logprob: -15.00283145904541

Token 1238: ''' (ID: 6)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -1.2018307447433472
    2. 'def' → logprob: -1.3268307447433472
    3. ')' → logprob: -1.5768307447433472
    4. ''' → logprob: -2.3268308639526367
    5. '):
' → logprob: -2.3268308639526367
    6. ')'' → logprob: -5.076830863952637
    7. ''):
' → logprob: -5.201830863952637
    8. '':' → logprob: -5.451830863952637
    9. '):' → logprob: -5.576830863952637
    10. 'W' → logprob: -5.701830863952637

Token 1239: ' ->' (ID: 2747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019206255674362183
    2. ':' → logprob: -4.1442060470581055
    3. '   ' → logprob: -6.5192060470581055
    4. ':
' → logprob: -6.6442060470581055
    5. 'return' → logprob: -8.394206047058105
    6. ':def' → logprob: -10.019206047058105
    7. ':return' → logprob: -10.144206047058105
    8. 'train' → logprob: -10.519206047058105
    9. '):
' → logprob: -10.894206047058105
    10. ' def' → logprob: -11.769206047058105

Token 1240: ' ajout' (ID: 64605)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.02010127156972885
    2. 'return' → logprob: -4.020101070404053
    3. ' segment' → logprob: -6.645101070404053
    4. 'side' → logprob: -8.145101547241211
    5. ' return' → logprob: -8.895101547241211
    6. 'def' → logprob: -9.645101547241211
    7. 'train' → logprob: -10.020101547241211
    8. 'm' → logprob: -10.145101547241211
    9. '   ' → logprob: -10.270101547241211
    10. 'seg' → logprob: -11.020101547241211

Token 1241: ' au' (ID: 2791)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6226855516433716
    2. ' at' → logprob: -1.7476855516433716
    3. ' =' → logprob: -1.8726855516433716
    4. 'at' → logprob: -3.122685432434082
    5. 'train' → logprob: -3.122685432434082
    6. '+' → logprob: -4.122685432434082
    7. ' +' → logprob: -4.622685432434082
    8. '=train' → logprob: -4.997685432434082
    9. '(train' → logprob: -5.622685432434082
    10. 'to' → logprob: -6.372685432434082

Token 1242: ' début' (ID: 29589)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -1.166887879371643
    2. 'segment' → logprob: -1.166887879371643
    3. 'train' → logprob: -1.416887879371643
    4. 'start' → logprob: -2.4168877601623535
    5. 'dé' → logprob: -3.1668877601623535
    6. 'de' → logprob: -6.6668877601623535
    7. 'm' → logprob: -7.6668877601623535
    8. ' début' → logprob: -7.6668877601623535
    9. 'bout' → logprob: -8.416888236999512
    10. 'beg' → logprob: -8.666888236999512

Token 1243: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015002528380136937
    2. 'return' → logprob: -9.875149726867676
    3. 'train' → logprob: -9.875149726867676
    4. '
' → logprob: -10.625149726867676
    5. '   ' → logprob: -11.375149726867676
    6. ' def' → logprob: -12.125149726867676
    7. '(train' → logprob: -13.500149726867676
    8. ',' → logprob: -13.625149726867676
    9. '```' → logprob: -14.625149726867676
    10. ':' → logprob: -14.875149726867676

Token 1244: ' ==' (ID: 951)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044625867158174515
    2. 'side' → logprob: -4.044625759124756
    3. 'train' → logprob: -4.544625759124756
    4. '#' → logprob: -4.544625759124756
    5. ''' → logprob: -6.419625759124756
    6. '   ' → logprob: -6.794625759124756
    7. ' def' → logprob: -7.419625759124756
    8. 'return' → logprob: -7.794625759124756
    9. 'new' → logprob: -8.169626235961914
    10. ''s' → logprob: -8.419626235961914

Token 1245: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0016007984522730112
    2. ' '' → logprob: -6.626600742340088
    3. ' ' → logprob: -8.751601219177246
    4. '   ' → logprob: -10.126601219177246
    5. 'E' → logprob: -10.751601219177246
    6. ''É' → logprob: -10.876601219177246
    7. ''' → logprob: -11.376601219177246
    8. '’E' → logprob: -11.626601219177246
    9. '"E' → logprob: -12.751601219177246
    10. '  ' → logprob: -13.001601219177246

Token 1246: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002482553943991661
    2. ''E' → logprob: -6.0024824142456055
    3. '"E' → logprob: -12.252482414245605
    4. ' E' → logprob: -13.752482414245605
    5. ''' → logprob: -15.127482414245605
    6. '   ' → logprob: -15.627482414245605
    7. 'def' → logprob: -16.002483367919922
    8. '’E' → logprob: -16.002483367919922
    9. ''e' → logprob: -16.377483367919922
    10. '>E' → logprob: -16.502483367919922

Token 1247: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010815764777362347
    2. '')' → logprob: -5.135815620422363
    3. ')' → logprob: -5.510815620422363
    4. ')'' → logprob: -7.260815620422363
    5. 'def' → logprob: -10.510815620422363
    6. '':' → logprob: -11.010815620422363
    7. ' '' → logprob: -11.135815620422363
    8. 'train' → logprob: -11.760815620422363
    9. ''
' → logprob: -11.885815620422363
    10. '->' → logprob: -12.010815620422363

Token 1248: ' ->' (ID: 2747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011164903844473884
    2. '->' → logprob: -10.25011157989502
    3. '=' → logprob: -10.37511157989502
    4. ' def' → logprob: -11.37511157989502
    5. ' ->' → logprob: -11.50011157989502
    6. ' =' → logprob: -11.62511157989502
    7. '
' → logprob: -12.87511157989502
    8. ':' → logprob: -13.12511157989502
    9. '(train' → logprob: -13.12511157989502
    10. '=>' → logprob: -13.25011157989502

Token 1249: ' ajout' (ID: 64605)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.2847713530063629
    2. 'append' → logprob: -1.9097713232040405
    3. ''aj' → logprob: -2.65977144241333
    4. ' ajout' → logprob: -3.90977144241333
    5. ' append' → logprob: -5.28477144241333
    6. ''' → logprob: -6.15977144241333
    7. 'à' → logprob: -7.15977144241333
    8. 'au' → logprob: -7.78477144241333
    9. '   ' → logprob: -8.284770965576172
    10. ' ' → logprob: -9.034770965576172

Token 1250: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2929801344871521
    2. 'au' → logprob: -1.6679801940917969
    3. 'at' → logprob: -3.542980194091797
    4. ' à' → logprob: -3.542980194091797
    5. '   ' → logprob: -6.042980194091797
    6. '=' → logprob: -6.542980194091797
    7. ' at' → logprob: -7.292980194091797
    8. ' =' → logprob: -7.417980194091797
    9. 'du' → logprob: -7.542980194091797
    10. ''à' → logprob: -7.792980194091797

Token 1251: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0024189415853470564
    2. ' la' → logprob: -6.3774189949035645
    3. 'fin' → logprob: -7.2524189949035645
    4. ''' → logprob: -13.252418518066406
    5. '```' → logprob: -13.377418518066406
    6. 'the' → logprob: -14.127418518066406
    7. 'l' → logprob: -14.377418518066406
    8. ' ' → logprob: -14.752418518066406
    9. 'f' → logprob: -14.752418518066406
    10. 'laf' → logprob: -14.877418518066406

Token 1252: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.03805767372250557
    2. 'end' → logprob: -3.288057565689087
    3. 'la' → logprob: -12.288057327270508
    4. ' fin' → logprob: -12.288057327270508
    5. 'f' → logprob: -13.038057327270508
    6. ' end' → logprob: -13.788057327270508
    7. 'Fin' → logprob: -15.038057327270508
    8. 'fi' → logprob: -15.163057327270508
    9. '[end' → logprob: -15.288057327270508
    10. '=end' → logprob: -15.413057327270508

Token 1253: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -14.125000953674316
    3. '
' → logprob: -15.250000953674316
    4. ':def' → logprob: -16.875001907348633
    5. '(def' → logprob: -20.000001907348633
    6. '```' → logprob: -20.250001907348633
    7. '_def' → logprob: -21.000001907348633
    8. '-def' → logprob: -21.000001907348633
    9. '\' → logprob: -21.250001907348633
    10. '	def' → logprob: -21.375001907348633

Token 1254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.625
    3. ' def' → logprob: -17.0
    4. ':def' → logprob: -21.125
    5. '```' → logprob: -21.25
    6. 'ndef' → logprob: -21.625
    7. '	def' → logprob: -23.0
    8. '(def' → logprob: -23.25
    9. '-def' → logprob: -23.625
    10. '_def' → logprob: -23.625

Token 1255: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -15.875
    3. '	append' → logprob: -19.0
    4. 'def' → logprob: -20.0
    5. '.append' → logprob: -20.125
    6. 'add' → logprob: -20.5
    7. 'Append' → logprob: -21.125
    8. '_append' → logprob: -22.375
    9. 'solve' → logprob: -22.5
    10. 'app' → logprob: -23.0

Token 1256: '_train' (ID: 16872)
  Prédit: '_train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.0005716211744584143
    2. '_append' → logprob: -8.000571250915527
    3. '_' → logprob: -8.875571250915527
    4. 'append' → logprob: -9.875571250915527
    5. 'train' → logprob: -10.250571250915527
    6. 'def' → logprob: -12.375571250915527
    7. '_tr' → logprob: -13.500571250915527
    8. '(train' → logprob: -14.125571250915527
    9. '```' → logprob: -14.500571250915527
    10. ' _' → logprob: -14.750571250915527

Token 1257: '(train' (ID: 46587)
  Prédit: '(train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(train' → logprob: -0.00013727048644796014
    2. '(tr' → logprob: -9.125137329101562
    3. '(line' → logprob: -11.125137329101562
    4. '(' → logprob: -11.375137329101562
    5. ' (' → logprob: -14.125137329101562
    6. 'train' → logprob: -15.000137329101562
    7. '(existing' → logprob: -15.125137329101562
    8. '(training' → logprob: -15.375137329101562
    9. '(t' → logprob: -15.625137329101562
    10. '=train' → logprob: -16.125137329101562

Token 1258: '_line' (ID: 14418)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07079841196537018
    2. '(train' → logprob: -2.695798397064209
    3. '_train' → logprob: -7.695798397064209
    4. '(tr' → logprob: -9.320798873901367
    5. 'train' → logprob: -9.820798873901367
    6. '   ' → logprob: -9.945798873901367
    7. ' ,' → logprob: -10.070798873901367
    8. '(line' → logprob: -10.195798873901367
    9. '_,' → logprob: -10.320798873901367
    10. ' (' → logprob: -10.570798873901367

Token 1259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -11.750009536743164
    3. '(train' → logprob: -14.250009536743164
    4. 'def' → logprob: -15.125009536743164
    5. 'train' → logprob: -15.125009536743164
    6. ',
' → logprob: -15.875009536743164
    7. ':' → logprob: -16.500009536743164
    8. ',s' → logprob: -16.750009536743164
    9. '(side' → logprob: -16.750009536743164
    10. '   ' → logprob: -17.000009536743164

Token 1260: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.009783949702978134
    2. ' segment' → logprob: -4.634783744812012
    3. 'side' → logprob: -10.759783744812012
    4. 'train' → logprob: -12.634783744812012
    5. 'seg' → logprob: -13.634783744812012
    6. '   ' → logprob: -14.259783744812012
    7. '(segment' → logprob: -14.884783744812012
    8. 'm' → logprob: -15.009783744812012
    9. ' moved' → logprob: -15.759783744812012
    10. ' side' → logprob: -15.759783744812012

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00628614891320467
    2. '):' → logprob: -5.131286144256592
    3. '):
' → logprob: -8.00628662109375
    4. ' ,' → logprob: -11.63128662109375
    5. '   ' → logprob: -12.00628662109375
    6. '):
' → logprob: -12.63128662109375
    7. ')' → logprob: -13.13128662109375
    8. '):

' → logprob: -14.25628662109375
    9. 'def' → logprob: -14.75628662109375
    10. ',s' → logprob: -14.88128662109375

Token 1262: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.029752222821116447
    2. ' side' → logprob: -3.529752254486084
    3. '	side' → logprob: -13.654751777648926
    4. '(side' → logprob: -15.529751777648926
    5. '   ' → logprob: -15.904751777648926
    6. ' ' → logprob: -15.904751777648926
    7. '_side' → logprob: -16.154752731323242
    8. '.side' → logprob: -16.779752731323242
    9. 'Side' → logprob: -17.029752731323242
    10. '  ' → logprob: -18.029752731323242

Token 1263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519739270210266
    2. '):
' → logprob: -1.5019738674163818
    3. '):
' → logprob: -10.126974105834961
    4. '):

' → logprob: -13.251974105834961
    5. ')' → logprob: -13.876974105834961
    6. '   ' → logprob: -13.876974105834961
    7. ':' → logprob: -14.626974105834961
    8. '）：' → logprob: -15.251974105834961
    9. ')：' → logprob: -16.12697410583496
    10. ' ):' → logprob: -16.37697410583496

Token 1264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002135390415787697
    2. ' if' → logprob: -6.627135276794434
    3. 'if' → logprob: -8.252135276794434
    4. 'return' → logprob: -8.252135276794434
    5. ' return' → logprob: -8.502135276794434
    6. 'train' → logprob: -10.252135276794434
    7. ' train' → logprob: -10.502135276794434
    8. '```' → logprob: -12.127135276794434
    9. '(train' → logprob: -12.377135276794434
    10. '       ' → logprob: -13.127135276794434

Token 1265: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3141435384750366
    2. 'if' (adapté à ' if') → logprob: -1.3141435384750366
    3. '   ' → logprob: -7.064143657684326
    4. ' return' → logprob: -11.314143180847168
    5. 'train' → logprob: -12.064143180847168
    6. ' if' → logprob: -12.314143180847168
    7. '```' → logprob: -12.564143180847168
    8. '{return' → logprob: -16.314144134521484
    9. '	return' → logprob: -17.189144134521484
    10. '
' → logprob: -17.814144134521484

Token 1266: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.029750484973192215
    2. ' side' → logprob: -3.5297505855560303
    3. '	side' → logprob: -16.77975082397461
    4. ' ' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.27975082397461
    6. '(side' → logprob: -17.52975082397461
    7. '_side' → logprob: -18.15475082397461
    8. '.side' → logprob: -18.77975082397461
    9. 'Side' → logprob: -18.77975082397461
    10. 'space' → logprob: -19.90475082397461

Token 1267: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2523804306983948
    2. '==' → logprob: -1.50238037109375
    3. '=='' → logprob: -7.75238037109375
    4. '=' → logprob: -11.50238037109375
    5. ' =='' → logprob: -12.12738037109375
    6. '=="' → logprob: -13.25238037109375
    7. '   ' → logprob: -13.62738037109375
    8. '==
' → logprob: -13.75238037109375
    9. '[' → logprob: -14.87738037109375
    10. '===' → logprob: -15.37738037109375

Token 1268: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010223194840364158
    2. ''E' → logprob: -9.375102043151855
    3. ' '' → logprob: -11.625102043151855
    4. '   ' → logprob: -12.250102043151855
    5. 'W' → logprob: -12.875102043151855
    6. ' ' → logprob: -14.750102043151855
    7. '"W' → logprob: -15.125102043151855
    8. ''S' → logprob: -16.250102996826172
    9. '`' → logprob: -16.250102996826172
    10. '  ' → logprob: -16.625102996826172

Token 1269: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.2762428822461516e-05
    2. 'E' → logprob: -9.875052452087402
    3. ''' → logprob: -14.125052452087402
    4. ' W' → logprob: -14.875052452087402
    5. '"W' → logprob: -16.50005340576172
    6. 'w' → logprob: -18.00005340576172
    7. ''E' → logprob: -18.25005340576172
    8. '	W' → logprob: -18.25005340576172
    9. '```' → logprob: -18.75005340576172
    10. '`' → logprob: -19.00005340576172

Token 1270: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.33053189516067505
    2. '':
' → logprob: -1.7055318355560303
    3. '):
' → logprob: -2.9555318355560303
    4. ':' → logprob: -3.5805318355560303
    5. ''):
' → logprob: -4.330532073974609
    6. '   ' → logprob: -5.330532073974609
    7. '':' → logprob: -7.205532073974609
    8. '():
' → logprob: -7.455532073974609
    9. ''' → logprob: -9.20553207397461
    10. '):' → logprob: -9.33053207397461

Token 1271: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.577761173248291
    2. '   ' → logprob: -0.827761173248291
    3. ' return' → logprob: -6.327761173248291
    4. '       ' → logprob: -10.452760696411133
    5. '	return' → logprob: -13.202760696411133
    6. 'segment' → logprob: -13.202760696411133
    7. 'train' → logprob: -13.827760696411133
    8. '{return' → logprob: -15.577760696411133
    9. '  ' → logprob: -16.952760696411133
    10. ' ' → logprob: -17.077760696411133

Token 1272: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009282566024921834
    2. 'segment' → logprob: -7.0009284019470215
    3. ' return' → logprob: -11.000927925109863
    4. '   ' → logprob: -17.12592887878418
    5. ' segment' → logprob: -17.75092887878418
    6. '	return' → logprob: -19.50092887878418
    7. '(segment' → logprob: -19.62592887878418
    8. 'seg' → logprob: -19.87592887878418
    9. '{return' → logprob: -20.25092887878418
    10. 'segments' → logprob: -20.50092887878418

Token 1273: ' Aj' (ID: 28294)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.7432603272027336e-06
    2. ' return' → logprob: -13.500001907348633
    3. 'segment' → logprob: -15.375001907348633
    4. 'train' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '	return' → logprob: -19.375001907348633
    7. 'result' → logprob: -20.125001907348633
    8. 'new' → logprob: -20.750001907348633
    9. '{return' → logprob: -21.125001907348633
    10. '```' → logprob: -22.500001907348633

Token 1274: 'out' (ID: 468)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.08397044241428375
    2. 'oute' → logprob: -2.708970546722412
    3. 'out' → logprob: -4.458970546722412
    4. 'outez' → logprob: -6.083970546722412
    5. 'outes' → logprob: -9.708970069885254
    6. 'outs' → logprob: -12.208970069885254
    7. '#' → logprob: -12.333970069885254
    8. '_outer' → logprob: -13.208970069885254
    9. '   ' → logprob: -13.458970069885254
    10. 'o' → logprob: -13.833970069885254

Token 1275: ' au' (ID: 2791)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05083926022052765
    2. '=' → logprob: -3.0508391857147217
    3. 'return' → logprob: -6.675839424133301
    4. ' segment' → logprob: -7.300839424133301
    5. '(segment' → logprob: -8.3008394241333
    6. ' =' → logprob: -10.3008394241333
    7. '_segment' → logprob: -11.5508394241333
    8. 'seg' → logprob: -12.1758394241333
    9. '.segment' → logprob: -12.5508394241333
    10. '   ' → logprob: -12.5508394241333

Token 1276: ' début' (ID: 29589)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.6047699318733066e-05
    2. 'begin' → logprob: -11.875016212463379
    3. ' segment' → logprob: -12.125016212463379
    4. '(segment' → logprob: -13.250016212463379
    5. 'seg' → logprob: -13.875016212463379
    6. 'start' → logprob: -14.500016212463379
    7. 'segments' → logprob: -15.750016212463379
    8. 'Segment' → logprob: -17.000015258789062
    9. '```' → logprob: -18.125015258789062
    10. 'dé' → logprob: -18.125015258789062

Token 1277: ' :' (ID: 712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01846034824848175
    2. ' return' → logprob: -4.643460273742676
    3. '   ' → logprob: -4.893460273742676
    4. 'segment' → logprob: -6.893460273742676
    5. 'train' → logprob: -9.268460273742676
    6. '```' → logprob: -11.393460273742676
    7. ' segment' → logprob: -11.643460273742676
    8. '	return' → logprob: -11.768460273742676
    9. '(segment' → logprob: -11.768460273742676
    10. ':return' → logprob: -12.143460273742676

Token 1278: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.2040398269891739
    2. 'return' → logprob: -1.7040398120880127
    3. ' segment' → logprob: -6.579040050506592
    4. ' return' → logprob: -6.704040050506592
    5. '   ' → logprob: -12.579039573669434
    6. 'seg' → logprob: -13.329039573669434
    7. '(segment' → logprob: -13.954039573669434
    8. 'segments' → logprob: -14.204039573669434
    9. '
' → logprob: -14.704039573669434
    10. '`' → logprob: -15.329039573669434

Token 1279: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858759790658951
    2. ' +' → logprob: -3.0485875606536865
    3. '+
' → logprob: -16.298587799072266
    4. '+r' → logprob: -17.798587799072266
    5. '```' → logprob: -17.798587799072266
    6. '   ' → logprob: -17.923587799072266
    7. '=' → logprob: -18.048587799072266
    8. '+++' → logprob: -18.298587799072266
    9. '+xml' → logprob: -18.423587799072266
    10. '＋' → logprob: -18.423587799072266

Token 1280: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.00020354038861114532
    2. ' train' → logprob: -8.500203132629395
    3. '(train' → logprob: -19.25020408630371
    4. '   ' → logprob: -19.50020408630371
    5. '```' → logprob: -19.50020408630371
    6. 'Train' → logprob: -20.12520408630371
    7. ' ' → logprob: -20.25020408630371
    8. '`' → logprob: -20.87520408630371
    9. 'training' → logprob: -20.87520408630371
    10. '_train' → logprob: -20.87520408630371

Token 1281: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.961759259458631e-06
    2. 'line' → logprob: -12.250004768371582
    3. 'Line' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.6250057220459
    5. '```' → logprob: -17.8750057220459
    6. '_LINE' → logprob: -18.7500057220459
    7. '	line' → logprob: -19.2500057220459
    8. '_train' → logprob: -19.3750057220459
    9. '_lin' → logprob: -19.5000057220459
    10. '
' → logprob: -19.6250057220459

Token 1282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05542074516415596
    2. 'return' → logprob: -3.0554206371307373
    3. '       ' → logprob: -5.305420875549316
    4. ' return' → logprob: -6.805420875549316
    5. '+' → logprob: -8.555420875549316
    6. ':return' → logprob: -8.680420875549316
    7. ')' → logprob: -9.055420875549316
    8. '	return' → logprob: -9.180420875549316
    9. ')return' → logprob: -10.305420875549316
    10. ' +' → logprob: -10.555420875549316

Token 1283: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11885245144367218
    2. '   ' → logprob: -2.743852376937866
    3. '       ' → logprob: -3.868852376937866
    4. ' return' → logprob: -4.243852615356445
    5. '+' → logprob: -5.368852615356445
    6. ':return' → logprob: -5.368852615356445
    7. ' +' → logprob: -6.743852615356445
    8. ':' → logprob: -7.743852615356445
    9. ':
' → logprob: -7.868852615356445
    10. ')' → logprob: -7.993852615356445

Token 1284: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0013304755557328463
    2. '   ' → logprob: -7.251330375671387
    3. 'segment' → logprob: -7.501330375671387
    4. ' return' → logprob: -10.001330375671387
    5. '       ' → logprob: -10.876330375671387
    6. 'train' → logprob: -12.751330375671387
    7. '```' → logprob: -15.251330375671387
    8. '(segment' → logprob: -15.876330375671387
    9. '	return' → logprob: -16.126331329345703
    10. ' segment' → logprob: -16.251331329345703

Token 1285: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -3.1424973713001236e-05
    2. ' segment' → logprob: -10.375031471252441
    3. '(segment' → logprob: -16.000030517578125
    4. '   ' → logprob: -17.625030517578125
    5. 'seg' → logprob: -18.125030517578125
    6. 'Segment' → logprob: -18.875030517578125
    7. '`' → logprob: -19.625030517578125
    8. ' ' → logprob: -20.375030517578125
    9. '.segment' → logprob: -20.500030517578125
    10. 'segments' → logprob: -20.625030517578125

Token 1286: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868710398674011
    2. ' +' → logprob: -1.136871099472046
    3. '+
' → logprob: -17.761871337890625
    4. '＋' → logprob: -18.886871337890625
    5. '   ' → logprob: -19.261871337890625
    6. ' ' → logprob: -19.511871337890625
    7. ' +
' → logprob: -20.261871337890625
    8. '```' → logprob: -20.261871337890625
    9. '+"' → logprob: -21.011871337890625
    10. '+r' → logprob: -21.136871337890625

Token 1287: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.0001234428636962548
    2. ' train' → logprob: -9.000123023986816
    3. '(train' → logprob: -19.625123977661133
    4. ' ' → logprob: -20.625123977661133
    5. '_train' → logprob: -21.250123977661133
    6. '   ' → logprob: -21.375123977661133
    7. '=train' → logprob: -21.625123977661133
    8. 'Train' → logprob: -22.000123977661133
    9. 'tr' → logprob: -22.500123977661133
    10. '.train' → logprob: -22.625123977661133

Token 1288: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.255023956531659e-05
    2. '_train' → logprob: -9.750072479248047
    3. 'line' → logprob: -11.875072479248047
    4. '```' → logprob: -13.125072479248047
    5. 'train' → logprob: -13.500072479248047
    6. '   ' → logprob: -14.125072479248047
    7. '`' → logprob: -14.375072479248047
    8. ' _' → logprob: -14.625072479248047
    9. '_' → logprob: -15.000072479248047
    10. ''_' → logprob: -15.375072479248047

Token 1289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029813870787620544
    2. 'else' → logprob: -5.877981185913086
    3. ' else' → logprob: -9.252981185913086
    4. '
' → logprob: -9.502981185913086
    5. '	else' → logprob: -13.002981185913086
    6. 'return' → logprob: -13.502981185913086
    7. 'elif' → logprob: -13.752981185913086
    8. '```' → logprob: -14.127981185913086
    9. '    
' → logprob: -15.252981185913086
    10. '   ' → logprob: -16.502981185913086

Token 1290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1613931953907013
    2. 'else' → logprob: -1.911393165588379
    3. ' else' → logprob: -7.036393165588379
    4. '
' → logprob: -8.286393165588379
    5. '```' → logprob: -10.911393165588379
    6. '	else' → logprob: -12.036393165588379
    7. 'elif' → logprob: -12.036393165588379
    8. '    
' → logprob: -12.286393165588379
    9. 'return' → logprob: -13.661393165588379
    10. '       ' → logprob: -15.161393165588379

Token 1291: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0010312614031136036
    2. 'return' → logprob: -7.501031398773193
    3. '   ' → logprob: -8.001030921936035
    4. ' else' → logprob: -9.001030921936035
    5. 'elif' → logprob: -11.001030921936035
    6. '
' → logprob: -12.751030921936035
    7. 'if' → logprob: -16.00103187561035
    8. '	else' → logprob: -17.12603187561035
    9. ' return' → logprob: -17.12603187561035
    10. ' ' → logprob: -17.87603187561035

Token 1292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10203011333942413
    2. ':
' → logprob: -2.977030038833618
    3. '       ' → logprob: -3.477030038833618
    4. '   ' → logprob: -4.352030277252197
    5. ':return' → logprob: -6.727030277252197
    6. ' :' → logprob: -7.352030277252197
    7. 'return' → logprob: -9.227029800415039
    8. ' return' → logprob: -10.227029800415039
    9. ' :
' → logprob: -10.477029800415039
    10. '[' → logprob: -10.727029800415039

Token 1293: '       ' (ID: 309)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' train' → logprob: -0.10112667083740234
    2. 'train' → logprob: -2.4761266708374023
    3. '   ' → logprob: -4.476126670837402
    4. '       ' → logprob: -7.476126670837402
    5. ''' → logprob: -9.976126670837402
    6. ' ' → logprob: -10.601126670837402
    7. ' return' → logprob: -10.726126670837402
    8. '    ' → logprob: -10.976126670837402
    9. '(train' → logprob: -11.226126670837402
    10. ' '' → logprob: -11.726126670837402

Token 1294: ' #' (ID: 1069)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.3869003355503082
    2. ' train' → logprob: -1.1369003057479858
    3. 'return' → logprob: -11.011899948120117
    4. ' return' → logprob: -12.386899948120117
    5. '"' → logprob: -12.886899948120117
    6. ''' → logprob: -13.011899948120117
    7. '   ' → logprob: -13.761899948120117
    8. ' ' → logprob: -14.011899948120117
    9. '(train' → logprob: -14.261899948120117
    10. ' ' → logprob: -14.761899948120117

Token 1295: ' Aj' (ID: 28294)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.05384210869669914
    2. ' train' → logprob: -3.303842067718506
    3. 'return' → logprob: -4.178842067718506
    4. ' return' → logprob: -8.053842544555664
    5. '   ' → logprob: -10.428842544555664
    6. '  ' → logprob: -12.178842544555664
    7. ' ' → logprob: -12.678842544555664
    8. '#' → logprob: -13.553842544555664
    9. '(train' → logprob: -14.053842544555664
    10. '_train' → logprob: -14.428842544555664

Token 1296: 'out' (ID: 468)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.022703271359205246
    2. '_train' → logprob: -4.522703170776367
    3. ' train' → logprob: -5.647703170776367
    4. 'return' → logprob: -5.897703170776367
    5. '=train' → logprob: -6.522703170776367
    6. '(train' → logprob: -6.897703170776367
    7. '=' → logprob: -7.397703170776367
    8. '  ' → logprob: -7.772703170776367
    9. 'side' → logprob: -8.022703170776367
    10. '+' → logprob: -8.522703170776367

Token 1297: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5592226982116699
    2. '_train' → logprob: -2.18422269821167
    3. ' +' → logprob: -2.30922269821167
    4. '+' → logprob: -2.30922269821167
    5. '_' → logprob: -2.68422269821167
    6. ' =' → logprob: -3.18422269821167
    7. '   ' → logprob: -6.05922269821167
    8. ' _' → logprob: -6.80922269821167
    9. 'train' → logprob: -6.93422269821167
    10. ' train' → logprob: -7.43422269821167

Token 1298: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.009875076822936535
    2. 'the' → logprob: -5.259875297546387
    3. ' la' → logprob: -5.509875297546387
    4. 'train' → logprob: -8.134875297546387
    5. 'len' → logprob: -9.009875297546387
    6. ''' → logprob: -9.759875297546387
    7. 'fin' → logprob: -10.009875297546387
    8. ' the' → logprob: -10.384875297546387
    9. 'l' → logprob: -11.134875297546387
    10. 'le' → logprob: -12.884875297546387

Token 1299: ' fin' (ID: 2131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05119972303509712
    2. 'fin' → logprob: -3.0511996746063232
    3. 'E' → logprob: -6.551199913024902
    4. ' end' → logprob: -7.176199913024902
    5. 'train' → logprob: -8.926199913024902
    6. 'e' → logprob: -8.926199913024902
    7. ''end' → logprob: -10.051199913024902
    8. 'tail' → logprob: -10.926199913024902
    9. 'side' → logprob: -11.301199913024902
    10. 'final' → logprob: -11.426199913024902

Token 1300: ' :' (ID: 712)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -1.1407593488693237
    2. ' train' → logprob: -1.2657593488693237
    3. 'return' → logprob: -1.3907593488693237
    4. ' return' → logprob: -2.0157594680786133
    5. '   ' → logprob: -4.890759468078613
    6. '+' → logprob: -5.515759468078613
    7. ' +' → logprob: -6.015759468078613
    8. '=' → logprob: -7.515759468078613
    9. '(train' → logprob: -7.515759468078613
    10. '=train' → logprob: -7.765759468078613

Token 1301: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.004124349914491177
    2. ' train' → logprob: -5.504124164581299
    3. 'return' → logprob: -10.004124641418457
    4. ' return' → logprob: -14.879124641418457
    5. '   ' → logprob: -15.004124641418457
    6. '(train' → logprob: -18.00412368774414
    7. '  ' → logprob: -18.75412368774414
    8. ' ' → logprob: -18.87912368774414
    9. 'Train' → logprob: -18.87912368774414
    10. '
' → logprob: -19.12912368774414

Token 1302: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.320199877838604e-07
    2. 'line' → logprob: -15.625
    3. '_train' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. '_lines' → logprob: -17.25
    6. '_LINE' → logprob: -17.375
    7. 'Line' → logprob: -17.75
    8. '   ' → logprob: -17.75
    9. '_' → logprob: -18.5
    10. '+' → logprob: -18.75

Token 1303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407710552215576
    2. '+' → logprob: -0.9740771055221558
    3. '+
' → logprob: -17.099077224731445
    4. ' +
' → logprob: -17.974077224731445
    5. '＋' → logprob: -18.724077224731445
    6. '+=' → logprob: -19.849077224731445
    7. '   ' → logprob: -20.349077224731445
    8. '+"' → logprob: -20.974077224731445
    9. ' ' → logprob: -21.224077224731445
    10. '```' → logprob: -21.599077224731445

Token 1304: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0005530327325686812
    2. ' segment' → logprob: -7.500553131103516
    3. 'seg' → logprob: -21.500553131103516
    4. '(segment' → logprob: -21.625553131103516
    5. 'Segment' → logprob: -22.125553131103516
    6. 'section' → logprob: -23.500553131103516
    7. '.segment' → logprob: -23.500553131103516
    8. 'segments' → logprob: -23.625553131103516
    9. '_segment' → logprob: -23.625553131103516
    10. '   ' → logprob: -24.500553131103516

Token 1305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8734017014503479
    2. 'return' → logprob: -1.3734016418457031
    3. '   ' → logprob: -1.8734016418457031
    4. '<|end|>' → logprob: -2.498401641845703
    5. ' return' → logprob: -3.248401641845703
    6. '+' → logprob: -3.248401641845703
    7. ' +' → logprob: -4.748401641845703
    8. ':return' → logprob: -6.498401641845703
    9. '
' → logprob: -7.248401641845703
    10. '```' → logprob: -7.373401641845703

Token 1306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8915730118751526
    2. 'return' → logprob: -1.0165729522705078
    3. '+' → logprob: -1.8915729522705078
    4. '   ' → logprob: -3.141572952270508
    5. ' return' → logprob: -4.141572952270508
    6. ' +' → logprob: -4.141572952270508
    7. ':return' → logprob: -7.391572952270508
    8. '<|end|>' → logprob: -7.766572952270508
    9. ' ' → logprob: -8.266572952270508
    10. '{return' → logprob: -8.766572952270508

Token 1307: ' return' (ID: 622)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.025174381211400032
    2. 'return' (adapté à ' return') → logprob: -3.775174379348755
    3. ' train' → logprob: -6.275174617767334
    4. ' return' → logprob: -10.025174140930176
    5. '   ' → logprob: -15.775174140930176
    6. '(train' → logprob: -16.775175094604492
    7. 'Train' → logprob: -17.150175094604492
    8. '_train' → logprob: -18.775175094604492
    9. '.train' → logprob: -19.650175094604492
    10. '`' → logprob: -19.775175094604492

Token 1308: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.014163747429847717
    2. ' train' → logprob: -4.264163970947266
    3. '(train' → logprob: -15.639163970947266
    4. '   ' → logprob: -16.389163970947266
    5. ' ' → logprob: -17.264163970947266
    6. '_train' → logprob: -18.389163970947266
    7. ' ' → logprob: -18.764163970947266
    8. '  ' → logprob: -19.014163970947266
    9. '.train' → logprob: -19.014163970947266
    10. 'Train' → logprob: -19.139163970947266

Token 1309: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.796184723294573e-06
    2. 'line' → logprob: -12.375005722045898
    3. '_train' → logprob: -14.625005722045898
    4. '```' → logprob: -14.875005722045898
    5. '+' → logprob: -15.000005722045898
    6. 'Line' → logprob: -16.3750057220459
    7. '_' → logprob: -16.5000057220459
    8. '   ' → logprob: -16.6250057220459
    9. ''_' → logprob: -17.8750057220459
    10. '_LINE' → logprob: -17.8750057220459

Token 1310: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1311: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0001234428636962548
    2. ' segment' → logprob: -9.000123023986816
    3. '(segment' → logprob: -19.500123977661133
    4. '   ' → logprob: -20.000123977661133
    5. '.segment' → logprob: -20.625123977661133
    6. 'seg' → logprob: -21.000123977661133
    7. ' ' → logprob: -21.875123977661133
    8. 'section' → logprob: -22.000123977661133
    9. 'side' → logprob: -22.250123977661133
    10. '_segment' → logprob: -22.875123977661133

Token 1312: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1313: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031068669632077217
    2. '<|end|>' → logprob: -4.156068801879883
    3. 'solve' → logprob: -4.781068801879883
    4. '#' → logprob: -5.406068801879883
    5. '```' → logprob: -6.781068801879883
    6. ' if' → logprob: -7.531068801879883
    7. ' solve' → logprob: -9.031068801879883
    8. '
' → logprob: -9.281068801879883
    9. '<|end|>' → logprob: -9.906068801879883
    10. '.solve' → logprob: -10.781068801879883

Token 1314: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47409430146217346
    2. '__' → logprob: -0.9740942716598511
    3. 'name' → logprob: -11.34909439086914
    4. ' ' → logprob: -12.59909439086914
    5. '_name' → logprob: -13.97409439086914
    6. '  ' → logprob: -14.97409439086914
    7. '___' → logprob: -14.97409439086914
    8. 'True' → logprob: -15.84909439086914
    9. '.__' → logprob: -16.22409439086914
    10. ' ' → logprob: -16.47409439086914

Token 1315: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03285282850265503
    2. 'name' → logprob: -3.5328528881073
    3. ' __' → logprob: -6.282852649688721
    4. ' ==' → logprob: -7.657852649688721
    5. '==' → logprob: -7.782852649688721
    6. '```' → logprob: -8.532853126525879
    7. 'if' → logprob: -10.157853126525879
    8. '=="' → logprob: -10.532853126525879
    9. 'Name' → logprob: -11.282853126525879
    10. '__.__' → logprob: -11.407853126525879

Token 1316: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.618001053633634e-05
    2. '==' → logprob: -10.750025749206543
    3. '__.__' → logprob: -12.625025749206543
    4. ' ==' → logprob: -14.625025749206543
    5. '__.' → logprob: -15.375025749206543
    6. '__('' → logprob: -15.750025749206543
    7. '=="' → logprob: -15.875025749206543
    8. '_' → logprob: -16.50002670288086
    9. '___' → logprob: -16.75002670288086
    10. '____' → logprob: -17.12502670288086

Token 1317: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09458877891302109
    2. '==' → logprob: -2.5945887565612793
    3. ' ==' → logprob: -4.719588756561279
    4. '=="' → logprob: -5.219588756561279
    5. '=='' → logprob: -6.719588756561279
    6. '```' → logprob: -11.469589233398438
    7. '__.__' → logprob: -12.344589233398438
    8. '_' → logprob: -12.594589233398438
    9. '=' → logprob: -12.719589233398438
    10. '___' → logprob: -12.719589233398438

Token 1318: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16024067997932434
    2. ''' → logprob: -1.910240650177002
    3. '__' → logprob: -11.66024112701416
    4. ' "__' → logprob: -11.91024112701416
    5. ' '__' → logprob: -14.03524112701416
    6. ''"' → logprob: -15.41024112701416
    7. '   ' → logprob: -16.910240173339844
    8. '"'' → logprob: -17.160240173339844
    9. '"name' → logprob: -17.785240173339844
    10. '("__' → logprob: -18.410240173339844

Token 1319: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03168303146958351
    2. '"' → logprob: -3.5316829681396484
    3. ''' → logprob: -6.281682968139648
    4. 'main' → logprob: -9.906682968139648
    5. 'name' → logprob: -12.406682968139648
    6. '___' → logprob: -13.156682968139648
    7. '"name' → logprob: -13.531682968139648
    8. ' "__' → logprob: -14.031682968139648
    9. '   ' → logprob: -14.656682968139648
    10. '__":
' → logprob: -14.906682968139648

Token 1320: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.09447762370109558
    2. '__' → logprob: -2.594477653503418
    3. '():
' → logprob: -4.469477653503418
    4. '__':
' → logprob: -5.844477653503418
    5. ':' → logprob: -7.969477653503418
    6. '_' → logprob: -8.844477653503418
    7. '.' → logprob: -9.219477653503418
    8. ':
' → logprob: -9.469477653503418
    9. '__:' → logprob: -9.469477653503418
    10. '__["' → logprob: -10.094477653503418

Token 1321: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.44502711296081543
    2. '   ' → logprob: -1.0700271129608154
    3. ' solve' → logprob: -4.6950273513793945
    4. '```' → logprob: -5.0700273513793945
    5. '.solve' → logprob: -7.6950273513793945
    6. '	s' → logprob: -9.445027351379395
    7. '__' → logprob: -9.820027351379395
    8. '(s' → logprob: -9.945027351379395
    9. '>' → logprob: -10.070027351379395
    10. '_s' → logprob: -11.070027351379395

Token 1322: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -5.512236498361744e-07
    2. ' solve' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.5
    4. '.solve' → logprob: -19.25
    5. 'resolve' → logprob: -20.875
    6. 'import' → logprob: -21.25
    7. 'try' → logprob: -22.5
    8. '#' → logprob: -23.375
    9. '
' → logprob: -23.375
    10. '    
' → logprob: -23.625

Token 1323: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1321
Tokens correctement prédits (1ère position, stricte): 454
Tokens correctement prédits (1ère position, avec adaptation): 501
Tokens correctement prédits (top 10): 923
Précision stricte (1ère position): 34.37%
Précision adaptée (1ère position): 37.93%
Précision (top 10): 69.87%
================================================================================
